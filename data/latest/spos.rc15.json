{
  "info": {
    "author": "Luiz Eduardo Amaral",
    "author_email": "luizamaral306@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Table of Contents\n\n- [SPOS](#spos)\n  - [Quick Start](#quick-start)\n  - [Installation](#installation)\n  - [Payload Specification](#payload-specification)\n    - [Payload specification keys](#payload-specification-keys)\n  - [Block](#block)\n    - [Block keys](#block-keys)\n    - [Types](#types)\n      - [boolean](#boolean)\n      - [binary](#binary)\n      - [integer](#integer)\n      - [float](#float)\n      - [pad](#pad)\n      - [array](#array)\n      - [object](#object)\n      - [string](#string)\n      - [steps](#steps)\n      - [categories](#categories)\n  - [Encode and Decode Functions](#encode-and-decode-functions)\n  - [Decoding messages of multiple versions](#decoding-messages-of-multiple-versions)\n  - [Random payloads](#random-payloads)\n  - [Command line usage](#command-line-usage)\n  - [Contributors](#contributors)\n  - [License](#license)\n\n# SPOS\n\n> **SPOS** stands for **Small Payload Object Serializer**.\n\n[![codecov](https://codecov.io/gh/luxedo/spos/branch/master/graph/badge.svg)](https://codecov.io/gh/luxedo/spos)\n[![CodeFactor](https://www.codefactor.io/repository/github/luxedo/spos/badge)](https://www.codefactor.io/repository/github/luxedo/spos)\n[![PyPI version](https://badge.fury.io/py/spos.svg)](https://badge.fury.io/py/spos)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n`SPOS` is a tool for serializing simple objects. This tool focuses in\nmaintaining a consistent payload size while sacrificing precision.\nApplications with limited bandwidth like [LoRa](https://lora-alliance.org/)\nor [Globalstar](https://www.globalstar.com/en-us/) are ideal candidates\nfor `SPOS`. `SPOS` has implementations for\npython3 ([SPOS](https://github.com/luxedo/SPOS)) and\nnode.js ([node-SPOS](https://github.com/luxedo/node-SPOS)).\n\n> In this document we will be using JSON notation to describe payload\n> specifications and payload data. For each programming language there's\n> usually an analogous data type for each notation. Eg:\n> `object <=> dict`, `array <=> list`, etc.\n\n## Quick Start\n\nTo encode data, `SPOS` needs two arguments: The `payload_data` (object)\nto be serialized and the [payload specification](#Payload-Specification).\n\n```python\nimport spos\npayload_spec = {\n  \"name\": \"example payload\",\n  \"version\": 1,\n  \"body\": [{\n    \"type\": \"integer\",\n    \"key\": \"constant_data\",\n    \"value\": 2,      # 10\n    \"bits\": 2\n  }, {\n    \"type\": \"integer\",\n    \"key\": \"int_data\",\n    \"bits\": 6\n  }, {\n    \"type\": \"float\",\n    \"key\": \"float_data\",\n    \"bits\": 6\n}]\npayload_data = {\n  \"int_data\": 13,    # 001101\n  \"float_data\": 0.6  # 010011 (19/32 or 0.59375)\n                     # padding 00\n}\n\nmessage = spos.encode(payload_data, payload_spec, output=\"bin\")\n\"0b1000110101001100\"\n```\n\nThen, to decode the `message`:\n\n```python\nimport spos\npayload_spec = {\n  \"name\": \"example payload\",\n  \"version\": 1,\n  \"body\": [{\n    \"type\": \"integer\",\n    \"key\": \"constant_data\",\n    \"value\": 2,\n    \"bits\": 2\n  }, {\n    \"type\": \"integer\",\n    \"key\": \"int_data\",\n    \"bits\": 6\n  }, {\n    \"type\": \"float\",\n    \"key\": \"float_data\",\n    \"bits\": 6\n}]\n\nmessage = \"0b1000110101001100\"\ndecoded = spos.decode(message, payload_spec)\ndecoded\n{\n  \"meta\": {\n    \"name\": \"example payload\",\n    \"version\": 1,\n  },\n  \"body\": {\n    \"constant_data\": 2,\n    \"int_data\": 13,\n    \"float_data\": 0.59375\n  }\n}\n```\n\n## Installation\n\n```\npip install spos\n```\n\n## Payload Specification\n\nThe payload specification consists of an object with four keys:\n`name`, `version`, `meta`, an optional object witch describes additional\npayload configuration and data, and `body` which describes the data\nbeing sent.\n\n```python\npayload_spec = {\n  \"name\": \"my payload\",\n  \"version\": 1,\n  \"meta\": {\n    \"encode_version\": True,\n    \"version_bits\": 4,\n    \"crc8\": True,\n    \"header\": [{\n      \"type\": \"integer\",\n      \"key\": \"meaning\",\n      \"value\": 42\n    }]\n  },\n  \"body\": [{\n    \"type:\": \"integer\",\n    \"key\": \"temperature\",\n    \"bits\": 6,\n    \"offset\": 273\n  }],\n}\n```\n\n### Payload specification keys\n\n- **name** (string): String that briefly describes the payload.\n\n- **version** (integer): Positive integer representing message version.\n\n- **meta** (object): Additional configuration may be added to the payload, this\n  is done by configuring values in the `meta` object. The following\n  keys are allowed:\n\n  - **encode_version** (boolean): `SPOS` will send the version as the first block\n    of the message if set to `True`. This is useful when handling\n    multiple messages with different versions. If this flag is set,\n    `version_bits` becomess a required key.\n\n  - **version_bits** (integer): Sets the number of bits used to encode\n    the version in the header of the message.\n\n  - **crc8** (boolean): If `True`, calculates the [CRC8](https://en.wikipedia.org/wiki/Cyclic_redundancy_check)\n    (8bits) for the message and appends it to payload. The decoder also\n    checks if the CRC8 is valid.\n\n  - **header** (blocklist): The `header` should be an array of [blocks](#Block)\n    which we call `blocklist`. In the `header` any static [value](#value)\n    is not encoded in the message and when decoding the value is gathered\n    from payload specification. This static block does not needs to\n    specify any extra keys other than `key` and `value`. Eg:\n    ```\n    payload_spec = {\n      \"name\": \"payload meta\",\n      \"version\": 1,\n      \"meta\": {\n        \"header\": [{\n            \"key\": \"static key\",\n            \"value\": 1024\n          }, {\n            \"key\": \"normal key\",\n            \"type\": \"integer,\n            \"bits\": 6\n        }]\n      }\n    }\n    ```\n\n- **body** (blocklist): The `body` should be an array of [blocks](#Block) describing\n  each section of the serialized message.\n\n---\n\n## Block\n\nThe block describes each portion of the serialized message by specifying\na `key` and a data `type`. `value` is an optional key. For each `type`\nthere might be aditional required keys and/or optional keys.\n\nThe value to be encoded is either a `key` in found in the `payload_data`\nobject or a static `value`.\n\nThe encoded data is _big-endian_ and truncations of data may occour in\nthe least significant bits when applicable. Data overflow is set to\nthe maximum value and underflow to the minimum.\n\n### Block keys\n\n- **key** (string): The key is used to name the value for the `block` in\n  `payload_data`, and then to describe it's value in the decoded message.\n  Optionally, the `key` can accesss a value in a nested objects using a\n  dot `.` to separate the levels. Eg:\n\n```python\npayload_spec = {\n  \"name\": \"example nested value\",\n  \"version\": 10,\n  \"body\": [{\n    \"type\": \"integer\",\n    \"bits\": 8,\n    \"key\": \"nested.value\"  # HERE\n  }]\npayload_data = {\n  \"nested\": {\n    \"value\": 255\n  }\n}\nspos.encode(payload_data, payload_spec, output=\"bin\")\n\"0b11111111\"\n```\n\n- **type** (string): Data type for encoding the message. There are 10 avaliable types\n  for serializing data: `boolean`, `binary`, `integer`, `float`, `pad`,\n  `array`, `object`, `string`, `steps` and `categories`.\n\n- **value** (any), optional: Static value for the `block`. Must be consistent with defined type.\n\n- **alias** (string), optional: Overrides `key` when decoding. Does nothing when encoding. Eg:\n\n```python\npayload_spec = {\n  \"name\": \"example location access\",\n  \"version\": 2,\n  \"body\": [{\n    \"type\": \"integer\",\n    \"bits\": 8,\n    \"key\": \"far.away.key\"\n    \"alias\": \"my key\",\n  }]\npayload_data = {\n  \"far\": {\n    \"away\": {\n      \"key\": 255\n    }\n  }\n}\nmessage = spos.encode(payload_data, payload_spec, output=\"bin\")\n# \"0b11111111\"\nspos.decode(message, payload_spec, output=\"bin\")\n# payload_data = {\n#   \"my key\": 255\n# }\n```\n\n---\n\n### Types\n\n#### boolean\n\nInput: `boolean`, `integer` (0 ? False : True).\n\nAdditional keys: `None`.\n\n#### binary\n\nThe data can be a binary string or an hex string. Eg\n\n```\n\"0b10101010\"  # binary\n\"0xdeadbeef\"  # hex\n```\n\nThis data is truncated in the least significant bits if the size of\nthe string in binary is bigger than `bits`.\n\nInput: `string`.\n\nAdditional keys:\n\n- `bits` (int): length of the block in bits\n\n#### integer\n\nInput: `integer`.\n\nAdditional keys:\n\n- `bits` (int): Length of the block in bits\n- `offset` (int), optional: An integer to offset the final value. Default: 0.\n- `mode` (str): How to handle with underflows and overflows.\n  Values can be: \"truncate\", \"remainder\". Default: \"truncate\"\n\n#### float\n\nThis type divides the interval between the `lower` and `upper`\nboundaries in equal parts according to the avaliable `bits`. The\nserialized value is the closest to the real one by default\n(\"approximation\": \"round\").\n\nInput: `int|float`.\n\nAdditional keys:\n\n- `bits` (int): length of the block in bits\n- `lower` (int|float), optional: Float lower boundary. Default 0.\n- `upper` (int|float), optional: Float upper boundary. Default 1.\n- `approximation` (str), optional: Float approximation method.\n  Values can be: \"round\", \"floor\", \"ceil\". Default: \"round\"\n\n#### pad\n\nPads the message. No data is collected from this block.\n\nInput: `None`.\n\nAdditional keys:\n\n- `bits` (int): length of the block in bits\n\n#### array\n\nAn array containing `block` values. There are two avaliable modes for\nthis type, a fixed length array and a dynamic length array.\n\nFor fixed mode, the array always have `length` \\* `blocks` &rarr; `bits`.\nThe input array must have `length` items.\n\nThe dynamic mode sends the current length of the array in the message,\nso it's size is between ceil(log2(`length`)) `bits` for 0 items in the\narray and ceil(log2(`length`)) + `length` \\* `blocks` &rarr; `bits` for\na full array.\n\nInput: An `array` of values allowed for the defined `block`.\n\nAdditional keys:\n\n- `length` (int): Maximum length of the array.\n- `fixed` (bool): Fixed length array. Default: false.\n- `blocks` (block): The `block` specification of the data in the array.\n\n#### object\n\nMaps the data to an object.\n\nThe size in bits of this type is the sum of sizes of blocks declared\nfor this `block`.\n\nInput: `object`.\n\nAdditional keys:\n\n- `blocklist` (blocklist): The `array` of `blocks` describing the object.\n\n#### string\n\nThis data type encodes the input string to base64. Characters outside the\n[base64 index table](https://en.wikipedia.org/wiki/Base64#Base64_table)\nare replaced with `/` (index 62) and spaces are replaced with `+`\n(index 63).\n\nThe size in bits of this type is 6 \\* `length`.\n\nInput: `string`.\n\nAdditional keys:\n\n- `length` (int): String length.\n- `custom_alphabeth` (object), optional: Remaps the characters to\n  another index. eg: Adding support for `json` string but sacrificing\n  the first 7 uppercase letters (ABCDEFG).\n\n```python\npayload_spec = {\n  \"body\": [{\n    \"type:\": \"string\",\n    \"key\": \"text\",\n    \"length\": 128,\n    \"custom_alphabeth\": {\n      0: \"{\",\n      1: \"}\",\n      2: \"[\",\n      3: \"]\",\n      4: '\"',\n      5: ',',\n      6: '.',\n    }\n}]\n\n```\n\n#### steps\n\nMaps a numeric value to named steps. Eg:\n\n```python\npayload_spec = {\n  \"body\": [{\n    \"type:\": \"steps\",\n    \"key\": \"battery\",\n    \"steps\": [0.1, 0.6, 0.95],\n    \"steps_names\": [\"critical\", \"low\", \"discharging\", \"charged\"]\n    # (-Inf, 0.1) critical, [0.1, 0.6) low, [0.6, 0.95) discharging, [0.95, Inf) charged\n}]\npayload_data = {\"bat\": 0.3}  # low\n```\n\nThe number of bits for this type is the closest integer above\nlog2(length `steps` + 1). In the example above it is 2 bits.\n\nAn additional step **error** may be given on decoding if the message\noverflows for this type.\n\nInput: `int|float`.\n\nAdditional keys:\n\n- `steps` (array): Array listing the boundaries of each step.\n- `steps_names` (array), optional: Names for each step. If not provided the names\n  are created based on steps.\n\n#### categories\n\nMaps strings to categories: Eg:\n\n```python\npayload_spec = {\n  \"body\": [{\n    \"type:\": \"categories\",\n    \"key\": \"color\",\n    \"categories\": [\"red\", \"green\", \"blue\", \"iridescent\"],\n    \"error\": \"unknown\"\n}]\npayload_data_1 = {\"color\": \"red\"}  # red\npayload_data_2 = {\"color\": \"brown\"} # unknown\n```\n\nThe `error` key is optional and creates a new category to represent data that\nare not present in the `categories` array. Therefore, the number of bits for\nthis type is the closest integer above log2(length `categories` + 1).\nIn the example above it is 3 bits.\n\n```python\npayload_spec = {\n  \"body\": [{\n    \"type:\": \"categories\",\n    \"key\": \"color\",\n    \"categories\": [\"red\", \"green\", \"blue\", \"iridescent\"],\n}]\npayload_data_1 = {\"color\": \"blue\"}  # blue\npayload_data_2 = {\"color\": \"yellow\"} # Raises an Error\n```\n\nIf `error` is not defined (default value **None**), no extra category is created. In this case,\nan error is raised if the value is not present in `categories`. The number of\nbits is the closest integer above log2(length `categories`). In the example above, 2 bits.\n\nIt is also possible to assign an existing category to `error`. In this case, invalid\nvalues are 'converted' to it and the number of bits is equal to the **None** case.\n\nOn decoding, an additional category **error** may be given if the message overflows\nfor this type.\n\nInput: `string`.\n\nAdditional keys:\n\n- `categories` (array): The array of categories strings.\n- `error` (str), optional: Category to represent invalid values. Default: None\n\n## Encode and Decode Functions\n\n```python\ndef encode(payload_data, payload_spec, output=\"bin\"):\n    \"\"\"\n    Encodes a message from payload_data according to payload_spec.\n\n    Args:\n        payload_data (dict): Payload data.\n        payload_spec (dict): Payload specification.\n        output (str): Return format (bin, hex or bytes). default: \"bin\".\n\n    Returns:\n        message (bin | hex | bytes): Message.\n    \"\"\"\n```\n\n```python\ndef decode(message, payload_spec):\n    \"\"\"\n    Decodes a message according to payload_spec.\n\n    Args:\n        message (bin | hex | bytes): Message.\n        payload_spec (dict): Payload specification.\n\n    Returns:\n        body (dict): Payload data.\n        meta (dict): Payload metadata.\n    \"\"\"\n```\n\n```python\ndef decode_from_specs(message, specs):\n    \"\"\"\n    Decodes message from an avaliable pool of payload specificaions by\n    matching message version with specification version.\n\n    All the payload specifications must have `meta.encode_version` set\n    and also the same value for `meta.version_bits`.\n\n    Raises:\n        PayloadSpecError: If message version is not in 'specs'\n        SpecsVersionError: If names doesn't match or has duplicate versions\n        Other Exceptions: For incorrect payload specification syntax.\n            see spos.utils.validate_payload_spec and\n            block.Block.validate_block_spec_keys\n\n    Args:\n        message (bin | hex | bytes): Message.\n\n    Returns:\n        body (dict): Payload data.\n        meta (dict): Payload metadata.\n    \"\"\"\n```\n\n## Decoding messages of multiple versions\n\nOne possible use case of `SPOS` is to use the same bus to send messages\nof different versions. If this is the case, `SPOS` will send the version\nin the header of the message and the receiver can decode with an array\nof expected payload specifications.\n\n```python\nspecs = [\n    payload_spec_v0,\n    payload_spec_v1,\n    payload_spec_v2,\n    payload_spec_v3,\n    payload_spec_v4,\n]\ndecoded = spos.decode_from_specs(message, specs)\n```\n\nTo do this, all payload specifications must set `encode_version` to\n`True`, set the same ammounts of `version_bits` and use the same `name`.\nThere must be only one specification for each version.\n\n## Random payloads\n\nIt may be interesting to generate random payloads for testing. The\nmodule `spos.random` contains functions to generate those messages\nand payload data.\n\n```python\ndef random_payloads(payload_spec, output=\"bin\"):\n    \"\"\"\n    Builds a random message conforming to `payload_spec`.\n\n    Args:\n        payload_spec (dict): Payload specification.\n        output (str): Output format (bin, hex or bytes). default: \"bin\".\n\n    Returns:\n        message (bin | hex | bytes): Random message\n        payload_data (object): Equivalent payload_data to generate\n            message.\n    \"\"\"\n```\n\n## Command line usage\n\n```bash\n# Encode data\ncat payload_data | spos -p payload_spec.json\n\n# Decode data\ncat message | spos -d -p payload_spec.json\n\n# Avaliable Options\nspos --help\nusage: spos [-h] [-d] -p PAYLOAD_SPEC [PAYLOAD_SPEC ...] [-f {bin,hex,bytes}] [-r | -I] [-m] [-i [INPUT]]\n            [-o [OUTPUT]] [-v]\n\nSpos is a tool for serializing objects.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d, --decode          decodes a message.\n  -p PAYLOAD_SPEC [PAYLOAD_SPEC ...], --payload-specs PAYLOAD_SPEC [PAYLOAD_SPEC ...]\n                        json file payload specifications.\n  -f {bin,hex,bytes}, --format {bin,hex,bytes}\n                        Output format\n  -r, --random          Creates a random message/decoded_message\n  -I, --random-input    Creates a random payload data input\n  -m, --meta            Outputs the metadata when decoding\n  -s, --stats           Returns payload spec statistics\n  -i [INPUT], --input [INPUT]\n                        Input file\n  -o [OUTPUT], --output [OUTPUT]\n                        Output file\n  -v, --version         Software version\n```\n\n## Contributors\n\n- [Arthur Lindemute](https://github.com/arthurlindemute)\n\n## License\n\n> MIT License\n>\n> Copyright (c) 2020 [Luiz Eduardo Amaral](luizamaral306@gmail.com)\n>\n> Permission is hereby granted, free of charge, to any person obtaining a copy\n> of this software and associated documentation files (the \"Software\"), to deal\n> in the Software without restriction, including without limitation the rights\n> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n> copies of the Software, and to permit persons to whom the Software is\n> furnished to do so, subject to the following conditions:\n>\n> The above copyright notice and this permission notice shall be included in all\n> copies or substantial portions of the Software.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n> SOFTWARE.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/luxedo/SPOS",
    "keywords": "serializer LoRa Globalstar low-bandwidth",
    "license": "LICENSE.md",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spos",
    "package_url": "https://pypi.org/project/spos/",
    "platform": null,
    "project_url": "https://pypi.org/project/spos/",
    "project_urls": {
      "Homepage": "https://github.com/luxedo/SPOS"
    },
    "release_url": "https://pypi.org/project/spos/1.6.0b0/",
    "requires_dist": [
      "crc8 (==0.1.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "SPOS stands for Small Payload Object Serializer",
    "version": "1.6.0b0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14707171,
  "releases": {
    "1.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e283d284d9ec380b9baf9bfcc61d72330e66d0e4115222cdf5d263db3197a2f",
          "md5": "6ec2ff1a9364e22f9e2f6aaecbfdb6e7",
          "sha256": "c9a90e7a0c0a1343cf2f820b665f33c7d5a453ed77b23daf7afcba93cb0d342e"
        },
        "downloads": -1,
        "filename": "spos-1.0.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ec2ff1a9364e22f9e2f6aaecbfdb6e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 30286,
        "upload_time": "2020-03-15T03:40:40",
        "upload_time_iso_8601": "2020-03-15T03:40:40.991534Z",
        "url": "https://files.pythonhosted.org/packages/3e/28/3d284d9ec380b9baf9bfcc61d72330e66d0e4115222cdf5d263db3197a2f/spos-1.0.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e7b6751f62c28a1d6ba51d8b3a0e9b12e306d1ca6878d7384caed81a0c1cd04",
          "md5": "ca35e9f2c769950dd4621e0d7b5aafda",
          "sha256": "6c004bb123e8f427d6482ffc74f38b3d7f15ecc5dd9a9e0e2dc2918a91c15ede"
        },
        "downloads": -1,
        "filename": "spos-1.0.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "ca35e9f2c769950dd4621e0d7b5aafda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17851,
        "upload_time": "2020-03-15T03:40:43",
        "upload_time_iso_8601": "2020-03-15T03:40:43.713069Z",
        "url": "https://files.pythonhosted.org/packages/7e/7b/6751f62c28a1d6ba51d8b3a0e9b12e306d1ca6878d7384caed81a0c1cd04/spos-1.0.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69d6fa30e7bd8cacc6cdac43ed2056286903eda1ef441d4991f668c1f37627e5",
          "md5": "3ec84ddd1e10f9028aaf1589197a0dc7",
          "sha256": "afd67091f232da389e844ee97163c238dcc72f0dae201b558295482e6cfc68b2"
        },
        "downloads": -1,
        "filename": "spos-1.0.0a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ec84ddd1e10f9028aaf1589197a0dc7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 30394,
        "upload_time": "2020-03-18T02:53:02",
        "upload_time_iso_8601": "2020-03-18T02:53:02.868996Z",
        "url": "https://files.pythonhosted.org/packages/69/d6/fa30e7bd8cacc6cdac43ed2056286903eda1ef441d4991f668c1f37627e5/spos-1.0.0a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf56ac7f089583ea2c62db8a5173c50e7050e180f04d4dae654ffe75f85f5b86",
          "md5": "13b837597d9437f968ad4a6674151e62",
          "sha256": "6d85116817477b65b7b427b6eeffd7cc7ae5ac4d6ea71bbb8ee379d4cb72805b"
        },
        "downloads": -1,
        "filename": "spos-1.0.0a2.tar.gz",
        "has_sig": false,
        "md5_digest": "13b837597d9437f968ad4a6674151e62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17891,
        "upload_time": "2020-03-18T02:53:04",
        "upload_time_iso_8601": "2020-03-18T02:53:04.466409Z",
        "url": "https://files.pythonhosted.org/packages/bf/56/ac7f089583ea2c62db8a5173c50e7050e180f04d4dae654ffe75f85f5b86/spos-1.0.0a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "286214d38569384e273c90e564a8ef02863961330f87b79db064a25b47d4ee55",
          "md5": "a598503d061fe919e5019d5d5867e80a",
          "sha256": "3460ff9be3d52fbb73dfc0ca6da9a379d2b0709c10248b57ea1108b9dfa34def"
        },
        "downloads": -1,
        "filename": "spos-1.0.0a3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a598503d061fe919e5019d5d5867e80a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 30651,
        "upload_time": "2020-03-24T13:47:32",
        "upload_time_iso_8601": "2020-03-24T13:47:32.635160Z",
        "url": "https://files.pythonhosted.org/packages/28/62/14d38569384e273c90e564a8ef02863961330f87b79db064a25b47d4ee55/spos-1.0.0a3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b1fa52c479ea0370bd38f03afdb3553666b0160fa099d74ff7f16c35c62b670",
          "md5": "14d767ede5a3621d06b46893553764f8",
          "sha256": "10155777172c6d569dc9e602bd88d323beba4fe8bf4820d23793c77b1af35797"
        },
        "downloads": -1,
        "filename": "spos-1.0.0a3.tar.gz",
        "has_sig": false,
        "md5_digest": "14d767ede5a3621d06b46893553764f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18238,
        "upload_time": "2020-03-24T13:47:33",
        "upload_time_iso_8601": "2020-03-24T13:47:33.934459Z",
        "url": "https://files.pythonhosted.org/packages/8b/1f/a52c479ea0370bd38f03afdb3553666b0160fa099d74ff7f16c35c62b670/spos-1.0.0a3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "617cf8d38862439368a781f657ea006c1f43976b80a8fdf61800300c45947942",
          "md5": "3a33cd7fd629f4333094b2a46cf52d97",
          "sha256": "d2332f6952f06e85c08b356cfececa713d99c53f9e9c6b1a3ad25ddf72139577"
        },
        "downloads": -1,
        "filename": "spos-1.0.0a4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a33cd7fd629f4333094b2a46cf52d97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 30679,
        "upload_time": "2020-03-24T22:12:50",
        "upload_time_iso_8601": "2020-03-24T22:12:50.480772Z",
        "url": "https://files.pythonhosted.org/packages/61/7c/f8d38862439368a781f657ea006c1f43976b80a8fdf61800300c45947942/spos-1.0.0a4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "220b0d407c4a23347d4a0ab8f2e493987f804959e3f016a8832bd032577ae506",
          "md5": "b5ba18b32594cadbbdb2d763937912a7",
          "sha256": "ca392f522f6f61816d539b71cef867f9e10d17e48b7783d3e8e540b3cacfd7fa"
        },
        "downloads": -1,
        "filename": "spos-1.0.0a4.tar.gz",
        "has_sig": false,
        "md5_digest": "b5ba18b32594cadbbdb2d763937912a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18269,
        "upload_time": "2020-03-24T22:12:51",
        "upload_time_iso_8601": "2020-03-24T22:12:51.898815Z",
        "url": "https://files.pythonhosted.org/packages/22/0b/0d407c4a23347d4a0ab8f2e493987f804959e3f016a8832bd032577ae506/spos-1.0.0a4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62bd85c252ba29e86d1a96b0b6dcd9e532369209f747711053d1905b8941c873",
          "md5": "9b2329d2eede550732cfbbfb0c069213",
          "sha256": "55beafe9cf9e765d2fd26f2446129affbc59f1c5485fd4963811cdaa3865ac7e"
        },
        "downloads": -1,
        "filename": "spos-1.0.0a5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b2329d2eede550732cfbbfb0c069213",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 31062,
        "upload_time": "2020-04-07T13:51:53",
        "upload_time_iso_8601": "2020-04-07T13:51:53.465898Z",
        "url": "https://files.pythonhosted.org/packages/62/bd/85c252ba29e86d1a96b0b6dcd9e532369209f747711053d1905b8941c873/spos-1.0.0a5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c871c78813721e9f3cfe515f24dcd012cb6045f0ef15515b99ab5d2e74949bd",
          "md5": "8a5c64140771ccfe204484e8981c2e1a",
          "sha256": "5de0d5ff4102f6d166110bf2bc28511072db36c45539bfe85ddc7044d058b3cd"
        },
        "downloads": -1,
        "filename": "spos-1.0.0a5.tar.gz",
        "has_sig": false,
        "md5_digest": "8a5c64140771ccfe204484e8981c2e1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18883,
        "upload_time": "2020-04-07T13:51:54",
        "upload_time_iso_8601": "2020-04-07T13:51:54.543455Z",
        "url": "https://files.pythonhosted.org/packages/0c/87/1c78813721e9f3cfe515f24dcd012cb6045f0ef15515b99ab5d2e74949bd/spos-1.0.0a5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad551570fa0a56c794b7b813369a6483aa82f16ea2119946f05b63105334c273",
          "md5": "c531faac05db2a12ccec7cec74199f88",
          "sha256": "5759ab85f3da38f7c037eab8c826c3a7599e5d27aeda86fb551425f787546639"
        },
        "downloads": -1,
        "filename": "spos-1.0.0b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c531faac05db2a12ccec7cec74199f88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 41044,
        "upload_time": "2020-07-22T15:24:20",
        "upload_time_iso_8601": "2020-07-22T15:24:20.375002Z",
        "url": "https://files.pythonhosted.org/packages/ad/55/1570fa0a56c794b7b813369a6483aa82f16ea2119946f05b63105334c273/spos-1.0.0b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97065ca449e08ea982656200403ac2d67fbc12f59fd0d1d565b3ab99bca6ff27",
          "md5": "64e775fdfe029f01cbcf86ebabb88b44",
          "sha256": "efd5b066d8f8ca3a019f0320809fa1b411b1c61e6e31840a32c9c86565f8f500"
        },
        "downloads": -1,
        "filename": "spos-1.0.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "64e775fdfe029f01cbcf86ebabb88b44",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26283,
        "upload_time": "2020-07-22T15:24:21",
        "upload_time_iso_8601": "2020-07-22T15:24:21.665154Z",
        "url": "https://files.pythonhosted.org/packages/97/06/5ca449e08ea982656200403ac2d67fbc12f59fd0d1d565b3ab99bca6ff27/spos-1.0.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b49f34124b5db3b466ac67a3bfa14fea02f66c6cadbad9c2edf2624cf83516b",
          "md5": "b0241d76ecf44852a5c034cde31cd33c",
          "sha256": "231175cb6a5019d44b2df3ecfeb242570e769814b7f44323eb51d01c2fd93471"
        },
        "downloads": -1,
        "filename": "spos-1.1.0b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0241d76ecf44852a5c034cde31cd33c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 42467,
        "upload_time": "2020-07-23T03:00:56",
        "upload_time_iso_8601": "2020-07-23T03:00:56.794479Z",
        "url": "https://files.pythonhosted.org/packages/0b/49/f34124b5db3b466ac67a3bfa14fea02f66c6cadbad9c2edf2624cf83516b/spos-1.1.0b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "277741a42d9051f5e904274acada5334d2c3f4dfdda1741c7049ddb1558196d5",
          "md5": "61f671faa5bc5d03f3f4ba14e90bcc9b",
          "sha256": "00086c1f57840b77dfe28afee5816a6686d66e568904e1e8fc3f41657b9ceb24"
        },
        "downloads": -1,
        "filename": "spos-1.1.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "61f671faa5bc5d03f3f4ba14e90bcc9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27827,
        "upload_time": "2020-07-23T03:00:58",
        "upload_time_iso_8601": "2020-07-23T03:00:58.451098Z",
        "url": "https://files.pythonhosted.org/packages/27/77/41a42d9051f5e904274acada5334d2c3f4dfdda1741c7049ddb1558196d5/spos-1.1.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d330126f1001e419cdee95f4b372e18e463ab55049b538c4cf456e7dfa1880a6",
          "md5": "410020235a6fb2106bc6ecd98ce7a16b",
          "sha256": "641a38b3cc0e25ff0b78f0d54477202d485bd37572ba8bb8c957619369106760"
        },
        "downloads": -1,
        "filename": "spos-1.2.0b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "410020235a6fb2106bc6ecd98ce7a16b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 42886,
        "upload_time": "2020-07-23T18:22:34",
        "upload_time_iso_8601": "2020-07-23T18:22:34.768833Z",
        "url": "https://files.pythonhosted.org/packages/d3/30/126f1001e419cdee95f4b372e18e463ab55049b538c4cf456e7dfa1880a6/spos-1.2.0b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea4a26dc071494186db13af824b11111f280bc349e5198d9fea70f40d7c3f31d",
          "md5": "b2b119853b6debbf72e30284e68fa52f",
          "sha256": "338caa5cd39d43bb4010f9301f686f45434b1148066f3fc6d32739012e69ea50"
        },
        "downloads": -1,
        "filename": "spos-1.2.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "b2b119853b6debbf72e30284e68fa52f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28253,
        "upload_time": "2020-07-23T18:22:36",
        "upload_time_iso_8601": "2020-07-23T18:22:36.216701Z",
        "url": "https://files.pythonhosted.org/packages/ea/4a/26dc071494186db13af824b11111f280bc349e5198d9fea70f40d7c3f31d/spos-1.2.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f111aa6ffd56a6ffaaee2c3e3b7e3baf60e01445d0d9cb561d0192d708099af",
          "md5": "bdce03058c1ea9b82d2436306739c9e8",
          "sha256": "67a505e23b18c7edb5847054030a31338e0e1be4e19fc8d5a0e93999ce78cd8c"
        },
        "downloads": -1,
        "filename": "spos-1.2.1b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bdce03058c1ea9b82d2436306739c9e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 43267,
        "upload_time": "2020-07-30T19:08:45",
        "upload_time_iso_8601": "2020-07-30T19:08:45.085116Z",
        "url": "https://files.pythonhosted.org/packages/6f/11/1aa6ffd56a6ffaaee2c3e3b7e3baf60e01445d0d9cb561d0192d708099af/spos-1.2.1b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "339be63ce401e4af8026ba79c21523b4b243dac01b40d5da39b9366b6a0b074e",
          "md5": "aa243861a479092ba6a0ff2d9cdbfc38",
          "sha256": "684b6ea33e150110678c5110ef183b195040d1466da1d9b203fe1a5b2cea0a8d"
        },
        "downloads": -1,
        "filename": "spos-1.2.1b0.tar.gz",
        "has_sig": false,
        "md5_digest": "aa243861a479092ba6a0ff2d9cdbfc38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28743,
        "upload_time": "2020-07-30T19:08:46",
        "upload_time_iso_8601": "2020-07-30T19:08:46.564778Z",
        "url": "https://files.pythonhosted.org/packages/33/9b/e63ce401e4af8026ba79c21523b4b243dac01b40d5da39b9366b6a0b074e/spos-1.2.1b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ad7bf56f6e07eda523932f4a0b4c349750e7cd1fb5919c6554fbaf8e5ebbc09",
          "md5": "69b8ca466bceb7b066d74ee98da4487b",
          "sha256": "893f6f83b941e7943fd2cdf3dd80fff79678b6ae1781bfb689c4afd3fb667b1b"
        },
        "downloads": -1,
        "filename": "spos-1.2.2b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69b8ca466bceb7b066d74ee98da4487b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 43437,
        "upload_time": "2020-08-06T13:28:43",
        "upload_time_iso_8601": "2020-08-06T13:28:43.750780Z",
        "url": "https://files.pythonhosted.org/packages/7a/d7/bf56f6e07eda523932f4a0b4c349750e7cd1fb5919c6554fbaf8e5ebbc09/spos-1.2.2b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a0b04097439f2c6b3fedbbe19794bcae64228e824a7a6c45d7c5d4b619b5b36",
          "md5": "755b8606d5bff7e435d894837fa577e1",
          "sha256": "0b83667808750be60b0e6a00aab045fdd89c0b5027772f9542f476815af6288b"
        },
        "downloads": -1,
        "filename": "spos-1.2.2b0.tar.gz",
        "has_sig": false,
        "md5_digest": "755b8606d5bff7e435d894837fa577e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28882,
        "upload_time": "2020-08-06T13:28:45",
        "upload_time_iso_8601": "2020-08-06T13:28:45.267530Z",
        "url": "https://files.pythonhosted.org/packages/8a/0b/04097439f2c6b3fedbbe19794bcae64228e824a7a6c45d7c5d4b619b5b36/spos-1.2.2b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.3b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93298d9012430deeec3a43fa2530438d8e61ec086acdc7db691e7aa0d6365ded",
          "md5": "1d09ee7e890640e244b50679a44dc25a",
          "sha256": "6c81e93106d4843a27b744567771771c715be98ab655d35776dbc3190c937b40"
        },
        "downloads": -1,
        "filename": "spos-1.2.3b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d09ee7e890640e244b50679a44dc25a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 44289,
        "upload_time": "2020-08-10T17:13:00",
        "upload_time_iso_8601": "2020-08-10T17:13:00.143445Z",
        "url": "https://files.pythonhosted.org/packages/93/29/8d9012430deeec3a43fa2530438d8e61ec086acdc7db691e7aa0d6365ded/spos-1.2.3b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5383cee703e0717d2f38c72c426a0e3a0d74506e22ace56a5a4a16a4281c8071",
          "md5": "efcda92bb48efdf2739038017f5e2544",
          "sha256": "d6beca166247dd865a0f0d4e75b306fbd9720d266e62e0d045046c62ae70b472"
        },
        "downloads": -1,
        "filename": "spos-1.2.3b0.tar.gz",
        "has_sig": false,
        "md5_digest": "efcda92bb48efdf2739038017f5e2544",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 30126,
        "upload_time": "2020-08-10T17:13:01",
        "upload_time_iso_8601": "2020-08-10T17:13:01.437253Z",
        "url": "https://files.pythonhosted.org/packages/53/83/cee703e0717d2f38c72c426a0e3a0d74506e22ace56a5a4a16a4281c8071/spos-1.2.3b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.4b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdd4cbfd6e3ebaa2373fe9d4ae2d9918ef9caab7e005f5c49753705cbb3823ff",
          "md5": "df16243ebc1562f2544dd12074ce2d33",
          "sha256": "b165c0870b6c6038019e04fb817be56df3a5fd408f8216dd76883be0de3be6d3"
        },
        "downloads": -1,
        "filename": "spos-1.2.4b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df16243ebc1562f2544dd12074ce2d33",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 40018,
        "upload_time": "2020-10-14T20:06:57",
        "upload_time_iso_8601": "2020-10-14T20:06:57.754234Z",
        "url": "https://files.pythonhosted.org/packages/fd/d4/cbfd6e3ebaa2373fe9d4ae2d9918ef9caab7e005f5c49753705cbb3823ff/spos-1.2.4b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bfa50a56d7a5482e25719fcb570c07bae3a730ce40c73c12950895744abe8c7",
          "md5": "3e2f9aa36cc6d1d73d0f5cccde4b5f13",
          "sha256": "b2511a6eb7e2b7c6d533b664bf8028a354b2ae4364d9b5f39185c0b78945481c"
        },
        "downloads": -1,
        "filename": "spos-1.2.4b0.tar.gz",
        "has_sig": false,
        "md5_digest": "3e2f9aa36cc6d1d73d0f5cccde4b5f13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32269,
        "upload_time": "2020-10-14T20:06:59",
        "upload_time_iso_8601": "2020-10-14T20:06:59.262870Z",
        "url": "https://files.pythonhosted.org/packages/5b/fa/50a56d7a5482e25719fcb570c07bae3a730ce40c73c12950895744abe8c7/spos-1.2.4b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1682a34c6fb9b3957ab426ad9a4c53d2b124b91ae457f67fc8ae9d8856785d92",
          "md5": "f7c2e4f8a637579b900ef6caa719ca1c",
          "sha256": "7cb1c784dccbf916bd13500b672cd30e643d367a3bd573f911e3f0eb4eed4f0b"
        },
        "downloads": -1,
        "filename": "spos-1.4.0b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7c2e4f8a637579b900ef6caa719ca1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 41919,
        "upload_time": "2021-06-29T15:06:10",
        "upload_time_iso_8601": "2021-06-29T15:06:10.700246Z",
        "url": "https://files.pythonhosted.org/packages/16/82/a34c6fb9b3957ab426ad9a4c53d2b124b91ae457f67fc8ae9d8856785d92/spos-1.4.0b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "556c6d540a02b0ac5f668edf2e8185ca80fe2cea19126cb7c6ab15b7b459057d",
          "md5": "84355c45635eaff48dddb7c5fe7b5281",
          "sha256": "75f4481e4b5cfa2f28782597c0fd11cad5171aa56b3a4609cb409aa984c194f4"
        },
        "downloads": -1,
        "filename": "spos-1.4.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "84355c45635eaff48dddb7c5fe7b5281",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 33768,
        "upload_time": "2021-06-29T15:06:12",
        "upload_time_iso_8601": "2021-06-29T15:06:12.139533Z",
        "url": "https://files.pythonhosted.org/packages/55/6c/6d540a02b0ac5f668edf2e8185ca80fe2cea19126cb7c6ab15b7b459057d/spos-1.4.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59327f2e6aa898b68b065aa9b66c2571dabdbfc57f6bf63180da3e0113b7f8f7",
          "md5": "dff4d6e8e7490dcd9ff8f859efe028e0",
          "sha256": "d899e51696eebcde0d4db3df487e57f5f4951baa98edb88cc730c2a5bd9c32bb"
        },
        "downloads": -1,
        "filename": "spos-1.5.0b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dff4d6e8e7490dcd9ff8f859efe028e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 42835,
        "upload_time": "2021-07-19T20:48:26",
        "upload_time_iso_8601": "2021-07-19T20:48:26.952162Z",
        "url": "https://files.pythonhosted.org/packages/59/32/7f2e6aa898b68b065aa9b66c2571dabdbfc57f6bf63180da3e0113b7f8f7/spos-1.5.0b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c054de32ae87846768bf3366683556570b205d701526b011188c5bede44933d",
          "md5": "9dbbea66d3a7627d929d5ea3a7315952",
          "sha256": "c133e61281a64417ead58bf7efc489b2d6ad6d8071e62aa192084013f062452c"
        },
        "downloads": -1,
        "filename": "spos-1.5.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "9dbbea66d3a7627d929d5ea3a7315952",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 36193,
        "upload_time": "2021-07-19T20:48:28",
        "upload_time_iso_8601": "2021-07-19T20:48:28.835854Z",
        "url": "https://files.pythonhosted.org/packages/8c/05/4de32ae87846768bf3366683556570b205d701526b011188c5bede44933d/spos-1.5.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf1a0d530b399600abad75d5cbfb3507392ebe72a290eb1d67f7e840bcac7d5e",
          "md5": "dd82831afa41d2ade39a2055a118fa35",
          "sha256": "bc9ed003eb3875d2c2fc1d259299ea67638ea4a8fc783bdd0fe7486452105c60"
        },
        "downloads": -1,
        "filename": "spos-1.6.0b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd82831afa41d2ade39a2055a118fa35",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 43113,
        "upload_time": "2022-08-09T19:48:59",
        "upload_time_iso_8601": "2022-08-09T19:48:59.483477Z",
        "url": "https://files.pythonhosted.org/packages/cf/1a/0d530b399600abad75d5cbfb3507392ebe72a290eb1d67f7e840bcac7d5e/spos-1.6.0b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df67b3662a26f5f22809caa5061c39f60028227b1d05b75d560baa57d9885d39",
          "md5": "ef0038ef37c9d2f8effb562659023bb1",
          "sha256": "2a5e2cf8f24333c401a290e1437fd1ced7ce74446eafac4f956aec2fc4a720b6"
        },
        "downloads": -1,
        "filename": "spos-1.6.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "ef0038ef37c9d2f8effb562659023bb1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 34393,
        "upload_time": "2022-08-09T19:49:02",
        "upload_time_iso_8601": "2022-08-09T19:49:02.223603Z",
        "url": "https://files.pythonhosted.org/packages/df/67/b3662a26f5f22809caa5061c39f60028227b1d05b75d560baa57d9885d39/spos-1.6.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf1a0d530b399600abad75d5cbfb3507392ebe72a290eb1d67f7e840bcac7d5e",
        "md5": "dd82831afa41d2ade39a2055a118fa35",
        "sha256": "bc9ed003eb3875d2c2fc1d259299ea67638ea4a8fc783bdd0fe7486452105c60"
      },
      "downloads": -1,
      "filename": "spos-1.6.0b0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dd82831afa41d2ade39a2055a118fa35",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 43113,
      "upload_time": "2022-08-09T19:48:59",
      "upload_time_iso_8601": "2022-08-09T19:48:59.483477Z",
      "url": "https://files.pythonhosted.org/packages/cf/1a/0d530b399600abad75d5cbfb3507392ebe72a290eb1d67f7e840bcac7d5e/spos-1.6.0b0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df67b3662a26f5f22809caa5061c39f60028227b1d05b75d560baa57d9885d39",
        "md5": "ef0038ef37c9d2f8effb562659023bb1",
        "sha256": "2a5e2cf8f24333c401a290e1437fd1ced7ce74446eafac4f956aec2fc4a720b6"
      },
      "downloads": -1,
      "filename": "spos-1.6.0b0.tar.gz",
      "has_sig": false,
      "md5_digest": "ef0038ef37c9d2f8effb562659023bb1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 34393,
      "upload_time": "2022-08-09T19:49:02",
      "upload_time_iso_8601": "2022-08-09T19:49:02.223603Z",
      "url": "https://files.pythonhosted.org/packages/df/67/b3662a26f5f22809caa5061c39f60028227b1d05b75d560baa57d9885d39/spos-1.6.0b0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}