{
  "info": {
    "author": "Matthew Davis",
    "author_email": "github@mdavis.xyz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# lambda_multiprocessing - Multiprocessing in AWS Lambda\n\nThis library is for doing multiprocessing in AWS Lambda in python.\n\n(This is unrelated to inline lambda functions such as `f = lambda x: x*x`.\n That's a different kind of lambda function.)\n\n## The Problem\n\nIf you deploy Python code to an [AWS Lambda function](https://aws.amazon.com/lambda/),\nthe multiprocessing functions in the standard library such as [`multiprocessing.Pool.map`](https://docs.python.org/3/library/multiprocessing.html?highlight=multiprocessing%20python%20map%20pool#multiprocessing.pool.Pool.map) will not work.\n\nFor example:\n\n```\nfrom multiprocessing import Pool\ndef func(x):\n    return x*x\nargs = [1,2,3]\nwith Pool() as p:\n    result = p.map(func, args)\n```\n\nwill give you:\n\n```\nOSError: [Errno 38] Function not implemented\n```\n\nThis is because AWS Lambda functions are very bare bones,\nand have no shared memory device (`/dev/shm`).\n\n\n\n## The Solution\n\nThere is a workaround using `Pipe`s and `Process`es.\nAmazon documented it [in this blog post](https://aws.amazon.com/blogs/compute/parallel-processing-in-python-with-aws-lambda/).\nHowever that example is very much tied to the work being done,\nit doesn't have great error handling,\nand is not structured in the way you'd expect when using the normal `multiprocessing` library.\n\nThe purpose of this library is to take the solution from that blog post,\nand turn it into a drop-in replacement for `multiprocessing.Pool`.\nThis also includes unit testing, error handling etc, to match what you get from `multiprocessing.Pool`.\n\n## Usage\n\nInstall with:\n\n```\npip install lambda_multiprocessing\n```\n\nOnce you've imported `Pool`, it acts just like `multiprocessing.Pool`.\n[Details here](https://docs.python.org/3/library/multiprocessing.html?highlight=multiprocessing%20python%20map%20pool#module-multiprocessing.pool).\n\n```\nfrom lambda_multiprocessing import Pool\n\ndef work(x):\n    return x*x\n\nwith Pool() as p:\n    results = p.map(work, range(5))\nassert results == [x*x for x in range(5)]\n```\n\nNote that Lambda functions usually have only 2 vCPUs.\nIf you allocate a lot or memory you get a few more.\n(e.g. 3 at 5120MB, 6 at 10240MB)\nThe performance benefit you get from multiprocessing CPU-bound tasks is equal to the number of CPUs, minus overhead.\n(e.g. double speed for multiprocessing with 2 vCPUs)\nYou can get bigger performance benefits for IO-bound tasks.\n(e.g. uploading many files to S3, publishing many payloads to SNS etc).\n\n## Limitations\n\nWhen constructing the pool, initializer, initargs, maxtasksperchild and context have not been implemented.\n\nFor `*map*` functions,\ncallbacks and chunk sizes have not been implemented.\n\n`imap` and `imap_unordered` have not been implemented.\n\nIf you need any of these things implemented, raise an issue or a PR in github.\n\n## Concurrency Safety\n\nBoto3 (the AWS SDK) is concurrency safe.\nHowever the `client` and `session` objects should not be shared between processes or threads.\nSo do not pass those to or from the child processes.\n\n`moto` (a library for unit-testing code that uses boto, by emulating most AWS services in memory)\nis **not** concurrency safe.\nSo if you're unit testing using moto, pass `0` as the first argument to `Pool`,\nand then all the work will actually be done in the main thread.\ni.e. no multiprocessing at all.\nSo you need an `if` statement to pass 0 or a positive integer based on whether this is unit testing or the real thing.\n\n## Development\n\nThis library has no dependencies.\nThe unit tests depend on `boto3` and `moto`.\n\n```\npip install -r lambda_multiprocessing/requirements_test.txt\n```\n\nThen you can run the unit tests with:\n\n```\npython3 -m unittest\n```\n\n`CICD` is for the GitHub Actions which run unit tests and integration tests.\nYou probably don't need to touch those.\n\n## Design\n\nWhen you `__enter__` the pool, it creates several `Child`s.\nThese contain the actual child `Process`es,\nplus a duplex pipe to send tasks to the child and get results back.\n\nThe child process just waits for payloads to appear in the pipe.\nIt grabs the function and arguments from it, does the work,\ncatches any exception, then sends the exception or result back through the pipe.\nNote that the function that the client gives to this library might return an Exception for some reason,\nso we return either `[result, None]` or `[None, Exception]`, to differentiate.\n\nTo close everything up when we're done, the parent sends a payload with a different structure (`payload[-1] == True`)\nand then the child will gracefully exit.\n\nWe keep a counter of how many tasks we've given to the child, minus how many results we've got back.\nWhen assigning work, we give it to a child chosen randomly from the set of children whose counter value is smallest.\n(i.e. shortest backlog)\n\nWhen passing the question and answer to the child and back, we pass around a UUID.\nThis is because the client may submit two tasks with apply_async, then request the result for the second one,\nbefore the first.\nWe can't assume that the next result coming back from the child is the one we want,\nsince each child can have a backlog of a few tasks.\n\nOriginally I passed a new pipe to the child for each task to process,\nbut this results in OSErrors from too many open files (i.e. too many pipes),\nand passing pipes through pipes is unusually slow on low-memory Lambda functions for some reason.\n\nNote that `multiprocessing.Queue` doesn't work in Lambda functions.\nSo we can't use that to distribute work amongst the children.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mdavis-xyz/lambda_multiprocessing",
    "keywords": "python,AWS,Amazon,Lambda,multiprocessing,pool,concurrency",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lambda-multiprocessing",
    "package_url": "https://pypi.org/project/lambda-multiprocessing/",
    "platform": "",
    "project_url": "https://pypi.org/project/lambda-multiprocessing/",
    "project_urls": {
      "Homepage": "https://github.com/mdavis-xyz/lambda_multiprocessing"
    },
    "release_url": "https://pypi.org/project/lambda-multiprocessing/0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "drop-in replacement for multiprocessing.Pool in AWS Lambda functions (without /dev/shm shared memory)",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12450513,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e60f0ca9aa5eace5045f59f18791c9445f380760cbed08c40c127fe1c1e22b31",
          "md5": "906fdc2e3d69408203f5c5c47db39975",
          "sha256": "355306e6374134cc60396715cf18458ca2f36b85dc1f96c657d40abee0339a07"
        },
        "downloads": -1,
        "filename": "lambda_multiprocessing-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "906fdc2e3d69408203f5c5c47db39975",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11303,
        "upload_time": "2021-12-30T02:35:03",
        "upload_time_iso_8601": "2021-12-30T02:35:03.433157Z",
        "url": "https://files.pythonhosted.org/packages/e6/0f/0ca9aa5eace5045f59f18791c9445f380760cbed08c40c127fe1c1e22b31/lambda_multiprocessing-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7924fd95a0a8d1d52a47848fa23443ea1be0aa5543dda483fe3bfca0d28dadda",
          "md5": "a2ec7cb608881ea7310096643c186232",
          "sha256": "7d554c1b700fc3fe27341181be1f5d2c3861e04c04fa0af0a135e63b1a524e33"
        },
        "downloads": -1,
        "filename": "lambda_multiprocessing-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a2ec7cb608881ea7310096643c186232",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12605,
        "upload_time": "2021-12-30T02:35:05",
        "upload_time_iso_8601": "2021-12-30T02:35:05.096978Z",
        "url": "https://files.pythonhosted.org/packages/79/24/fd95a0a8d1d52a47848fa23443ea1be0aa5543dda483fe3bfca0d28dadda/lambda_multiprocessing-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21d5e42f333d6a0c0d3c59e618c1f92749abe5a2626ea12fd452192b1e061d3e",
          "md5": "680a4d5d828f3c817fc78502da3dccd7",
          "sha256": "fdc2585cee4832ac2285fccccfeea512d2d7fc9e90e607cc402ee2826ce7a532"
        },
        "downloads": -1,
        "filename": "lambda_multiprocessing-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "680a4d5d828f3c817fc78502da3dccd7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11350,
        "upload_time": "2021-12-30T02:41:44",
        "upload_time_iso_8601": "2021-12-30T02:41:44.830421Z",
        "url": "https://files.pythonhosted.org/packages/21/d5/e42f333d6a0c0d3c59e618c1f92749abe5a2626ea12fd452192b1e061d3e/lambda_multiprocessing-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a120ea993b259e06667a55343ce54f3897d1c8bd9e61150fd41d30d3e3c44a82",
          "md5": "4768a024d4d50ecf0bae9b74ca29852d",
          "sha256": "9669aa0b88ec6d89c393cb9129eb7b83df404d697bbe8956a99fd8f8c1b910b9"
        },
        "downloads": -1,
        "filename": "lambda_multiprocessing-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4768a024d4d50ecf0bae9b74ca29852d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12703,
        "upload_time": "2021-12-30T02:41:46",
        "upload_time_iso_8601": "2021-12-30T02:41:46.209506Z",
        "url": "https://files.pythonhosted.org/packages/a1/20/ea993b259e06667a55343ce54f3897d1c8bd9e61150fd41d30d3e3c44a82/lambda_multiprocessing-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "440cdad12e2d4d3e0b2b7ed85e95c3d360c102467f2c4a2764b341ddf95d29b9",
          "md5": "fe92a4abc511957d01b6f48ffedf1af8",
          "sha256": "38c0d010f4ee3ea98c04305fc7958fe6b73727dd08a467e66c6acb7a7222175a"
        },
        "downloads": -1,
        "filename": "lambda_multiprocessing-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe92a4abc511957d01b6f48ffedf1af8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11429,
        "upload_time": "2022-01-01T01:14:19",
        "upload_time_iso_8601": "2022-01-01T01:14:19.555759Z",
        "url": "https://files.pythonhosted.org/packages/44/0c/dad12e2d4d3e0b2b7ed85e95c3d360c102467f2c4a2764b341ddf95d29b9/lambda_multiprocessing-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "686c01d40a6de14ee771c55786925f36be0a05e16d3abed11f2e61488eef64ec",
          "md5": "4ca560d5e0d7013bafd3b74192d89ec6",
          "sha256": "cc401b27be24e91e4bbf6cc69436af9420c33e51e1a03d0e9a18006228ce1c87"
        },
        "downloads": -1,
        "filename": "lambda_multiprocessing-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4ca560d5e0d7013bafd3b74192d89ec6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12815,
        "upload_time": "2022-01-01T01:14:20",
        "upload_time_iso_8601": "2022-01-01T01:14:20.490913Z",
        "url": "https://files.pythonhosted.org/packages/68/6c/01d40a6de14ee771c55786925f36be0a05e16d3abed11f2e61488eef64ec/lambda_multiprocessing-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "440cdad12e2d4d3e0b2b7ed85e95c3d360c102467f2c4a2764b341ddf95d29b9",
        "md5": "fe92a4abc511957d01b6f48ffedf1af8",
        "sha256": "38c0d010f4ee3ea98c04305fc7958fe6b73727dd08a467e66c6acb7a7222175a"
      },
      "downloads": -1,
      "filename": "lambda_multiprocessing-0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fe92a4abc511957d01b6f48ffedf1af8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11429,
      "upload_time": "2022-01-01T01:14:19",
      "upload_time_iso_8601": "2022-01-01T01:14:19.555759Z",
      "url": "https://files.pythonhosted.org/packages/44/0c/dad12e2d4d3e0b2b7ed85e95c3d360c102467f2c4a2764b341ddf95d29b9/lambda_multiprocessing-0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "686c01d40a6de14ee771c55786925f36be0a05e16d3abed11f2e61488eef64ec",
        "md5": "4ca560d5e0d7013bafd3b74192d89ec6",
        "sha256": "cc401b27be24e91e4bbf6cc69436af9420c33e51e1a03d0e9a18006228ce1c87"
      },
      "downloads": -1,
      "filename": "lambda_multiprocessing-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "4ca560d5e0d7013bafd3b74192d89ec6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12815,
      "upload_time": "2022-01-01T01:14:20",
      "upload_time_iso_8601": "2022-01-01T01:14:20.490913Z",
      "url": "https://files.pythonhosted.org/packages/68/6c/01d40a6de14ee771c55786925f36be0a05e16d3abed11f2e61488eef64ec/lambda_multiprocessing-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}