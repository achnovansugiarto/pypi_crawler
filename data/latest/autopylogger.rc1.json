{
  "info": {
    "author": "Rohit Lal @rohitlal125555",
    "author_email": "rohitlal125555@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# autopylogger\n\nPython thread-safe logging wrapper module with out of box log rotation and critical logs mailing facility built for seamless integration in any python script.\n\nRequirements: logging\n\n#### Basic Usage :\n\n- Initialize your logger object by calling the 'init_logging' function *(with mailing feature turned OFF)*\n\n        from autopylogger import init_logging\n        my_logger_obj = init_logging(log_name='my_logs', log_directory='logs_dir')\n\n- Initialize your logger object by calling the 'init_logging' function *(with mailing feature turned ON)*\n\n        from autopylogger import init_logging\n        my_logger_obj = init_logging(log_name='my_logs', log_directory='logs_dir', enable_mailing=True, mail_host='mymail.host.com', mailfrom_addr='<email_address>', mailto_addr='<email_address>', mail_subject='<subject>', mail_credentials=('<username>', '<password>'))\n\n    *NOTE: Critical errors mailing feature is by default ON from version greater than v2020.2.11*\n\n\n- Use the object for writing DEBUG|INFO|WARNING|ERROR logs\n\n        my_logger_obj.debug('This is DEBUG log')\n        my_logger_obj.info('This is INFO log')\n        my_logger_obj.warning('This is WARNING log')\n        my_logger_obj.error('This is ERROR log')\n        my_logger_obj.critical('This is CRITICAL log. Mail will be sent with this message')\n\n### Important Flags:\n\n- **Setting log level:** *Pass the appropriate value to the **\"log_level\"** flag.*\n\n        log_level = 'DEBUG' | 'INFO' | 'WARNING' | 'ERROR'\n\n- **Turning console logging ON/OFF:** *Pass the appropriate vlaue to the **\"console_log\"** flag.*\n\n        console_log = True | False\n    \n    *NOTE: It is adviced to turn OFF console logging in production environments when your program is running as service to  prevent flushing of system console logs with your info messages. Eg: In linux systems.*\n    \n- **Setting log rotation criteria:** *Pass the appropriate value to the **\"rotation_criteria\"** flag.*\n\n        rotation_criteria = 'size' | 'time' | 'timeandsize'\n\n  By default, rotation criteria **\"size\"** is used with max file size of 200 Mbs.\n  \n  - When choosing 'size' based rotation criteria, pass the argument value **'max_bytes'** to specify the max size of log file in bytes.\n\n        'rotation_criteria' = 'size'\n        'max_bytes' = 5*1024*1024\n\n  - When choosing **\"time\"** based rotation criteria, pass the argument value **\"rotate_when\"** & **\"rotate_interval\"**.\n\n        'rotation_criteria' = 'time'\n        'rotate_when' = 'd' | 'h' | 'm' | 's'\n        'rotate_interval' = 1 (for rotating log every 1 day|hour|minute|second)\n  \n  - When choosing **\"timeandsize\"** based rotation criteria, pass the argument value **\"rotate_when\"**,**\"rotate_interval\"** & **'max_bytes'**.\n\n        'rotation_criteria' = 'timeandsize'\n        'max_bytes' = 5*1024*1024\n        'rotate_when' = 'd' | 'h' | 'm' | 's'\n        'rotate_interval' = 1 (for rotating log every 1 day|hour|minute|second)\n        \n  *NOTE: In \"timeandsize\" rotation criteria, a file is rotate when either of the time or size constraint gets satisfied.\"*\n  \n  \n- **Turning critical mailing ON/OFF:** *Pass the boolean value (TRUE|FALSE) to the **\"enable_mailing\"** flag. By default mailing is enabled for critical errors.*\n   \n  - When **\"enable_mailing\"** is set to True, following flags are required. \n\n        'mailfrom_addr' = '<Sender email address>'\n        'mailto_addr' = '<Receiver email address>'\n        'mail_subject' = '<Mail subject>'\n        'mail_credentials' = ('<username>', '<password>') or None if no authentication is required.\n  \n\n- **Setting log format:** *Pass the desired log format string to the **\"log_format\"** flag*\n\n        log_format='[%(asctime)s] -- %(levelname)s - %(filename)s -- %(funcName)s - Line no - %(lineno)d -- %(message)s'\n\n##### Log formatter arguments:\n   \n| Format | Description |\n| ------ | ------ |\n| %(asctime)s | Human-readable time when the LogRecord was created. By default this is of the form â€˜2003-07-08 16:49:45,896â€™ (the numbers after the comma are millisecond portion of the time). |\n| %(created)f | Time when the LogRecord was created (as returned by time.time()). |\n| %(filename)s | Filename portion of pathname. |\n| %(funcName)s | Name of function containing the logging call. |\n| %(levelname)s | Text logging level for the message ('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL') |\n| %(lineno)d | Source line number where the logging call was issued (if available). |\n| %(message)s | The logged message, computed as msg % args. This is set when Formatter.format() is invoked.|\n| %(msecs)d | Millisecond portion of the time when the LogRecord was created. |\n| %(name)s | Name of the logger used to log the call. |\n| %(pathname)s | Full pathname of the source file where the logging call was issued (if available). |\n| %(process)d | Process ID (if available). |\n| %(processName)s | Process name (if available). |\n| %(thread)d | Thread ID (if available). |\n| %(threadName)s | Thread name (if available). |",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://rohitlal.in",
    "keywords": "logging,autologging,pyautologging,python logger,log rotate,log rotation,log mailing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "autopylogger",
    "package_url": "https://pypi.org/project/autopylogger/",
    "platform": "",
    "project_url": "https://pypi.org/project/autopylogger/",
    "project_urls": {
      "Homepage": "https://rohitlal.in"
    },
    "release_url": "https://pypi.org/project/autopylogger/1.0/",
    "requires_dist": null,
    "requires_python": ">=3.3",
    "summary": "Wrapper module for logging with out of box log rotation and critical errors mailing feature",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7617967,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96fe7287ebf3082a6475c4aa4956b543239b5ec08bf34805ad78d3fe5e547a60",
          "md5": "eabd3f707b7fe4ad05697379730f6fc3",
          "sha256": "1a465f967f5b1bc67615b6a791d9384530253aed503841b216929d02c2bd512c"
        },
        "downloads": -1,
        "filename": "autopylogger-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eabd3f707b7fe4ad05697379730f6fc3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 7027,
        "upload_time": "2020-07-02T19:24:07",
        "upload_time_iso_8601": "2020-07-02T19:24:07.833634Z",
        "url": "https://files.pythonhosted.org/packages/96/fe/7287ebf3082a6475c4aa4956b543239b5ec08bf34805ad78d3fe5e547a60/autopylogger-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "96fe7287ebf3082a6475c4aa4956b543239b5ec08bf34805ad78d3fe5e547a60",
        "md5": "eabd3f707b7fe4ad05697379730f6fc3",
        "sha256": "1a465f967f5b1bc67615b6a791d9384530253aed503841b216929d02c2bd512c"
      },
      "downloads": -1,
      "filename": "autopylogger-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "eabd3f707b7fe4ad05697379730f6fc3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.3",
      "size": 7027,
      "upload_time": "2020-07-02T19:24:07",
      "upload_time_iso_8601": "2020-07-02T19:24:07.833634Z",
      "url": "https://files.pythonhosted.org/packages/96/fe/7287ebf3082a6475c4aa4956b543239b5ec08bf34805ad78d3fe5e547a60/autopylogger-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}