{
  "info": {
    "author": "David Andersson",
    "author_email": "david@jdkandersson.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Framework :: Flake8",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "License :: Other/Proprietary License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance"
    ],
    "description": "# flake8-mock-spec\n\nAre you using mocks in your code and want to ensure that you are not accessing\nor calling methods that the mocked objects don't have? Using mocks incorrectly\ncan lead to bugs in your code and falsely passing tests. To avoid this,\nflake8-mock-spec linter has been created to enforce the use of the spec\nargument when creating mocks. This ensures that your use of mocks is compliant\nwith the interface of the actual object being mocked, and helps you catch\nerrors early on. Using this linter can save you time and help you write more\nrobust and maintainable code.\n\n## Getting Started\n\nTo start using `flake8-mock-spec`, you need to install the package and run it\non your source code. Here are the steps to get started:\n\n1. Create a virtual environment and activate it:\n\n  ```shell\n  python -m venv venv\n  source ./venv/bin/activate\n  ```\n\n2. Install `flake8-mock-spec`:\n\n  ```shell\n  pip install flake8-mock-spec\n  ```\n\n3. Run `flake8` on your source code:\n\n  ```shell\n  flake8 test_source.py\n  ```\n\nFor example, consider the following code:\n\n```Python\n# test_source.py\nfrom unittest import mock\n\ndef test_foo():\n    mocked_foo = mock.Mock()\n```\n\nRunning `flake8` on this code will produce the following warning:\n\n```shell\nflake8 test_source.py\ntest_source.py:5:22: TMS010 unittest.mock.Mock instances should be constructed with the spec or spec_set argument, more information: https://github.com/jdkandersson/flake8-mock-spec#fix-tms010\n```\n\nTo resolve this warning, you need to specify the `spec` or `spec_set` argument\nwhen creating the mock object:\n\n```Python\n# test_source.py\nfrom unittest import mock\n\nfrom foo import Foo\n\ndef test_foo():\n    mocked_foo = mock.Mock(spec=Foo)\n```\n\n## Rules\n\nA set of linting rules have been defined to ensure best practices are followed\nwhen using unittest.mock library. These rules allow for selective suppression,\nmeaning that specific rules can be ignored in certain scenarios. The following\nrules have been defined:\n\n* `TMS010`: checks that `unittest.mock.Mock` instances are constructed with the\n  `spec` or `spec_set` argument.\n* `TMS011`: checks that `unittest.mock.MagicMock` instances are constructed with\n  the `spec` or `spec_set` argument.\n* `TMS012`: checks that `unittest.mock.NonCallableMock` instances are\n  constructed with the `spec` or `spec_set` argument.\n* `TMS013`: checks that `unittest.mock.AsyncMock` instances are constructed\n  with the `spec` or `spec_set` argument.\n* `TMS020`: checks that `unittest.mock.patch` is called with any one or more of\n  the `new`, `spec`, `spec_set`, `autospec` or `new_callable` arguments\n* `TMS021`: checks that `unittest.mock.patch.object` is called with any one or\n  more of the `new`, `spec`, `spec_set`, `autospec` or `new_callable` arguments\n* `TMS022`: checks that `unittest.mock.patch.multiple` is called with any one\n  or more of the `spec`, `spec_set`, `autospec` or `new_callable` arguments\n\n### Fix TMS010\n\nThis linting rule is triggered when a `unittest.mock.Mock` instance is created\nwithout the `spec` or `spec_set` argument. For example:\n\n```Python\nfrom unittest import mock\n\ndef test_foo():\n    mocked_foo = mock.Mock()\n```\n\nTo fix this issue, you need to provide the `spec` or `spec_set` argument when\ncreating the mock object. Here are a few examples:\n\n```Python\nfrom unittest import mock\n\nfrom foo import Foo\n\ndef test_foo():\n    mocked_foo = mock.Mock(spec=Foo)\n```\n\n```Python\nfrom unittest import mock\n\nfrom foo import Foo\n\ndef test_foo():\n    mocked_foo = mock.Mock(spec_set=Foo)\n```\n\nFor more information about `mock.Mock` and how to use it, please refer to the\nofficial documentation:\nhttps://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock\n\n### Fix TMS011\n\nThis linting rule is triggered when a `unittest.mock.MagicMock` instance is\ncreated without the `spec` or `spec_set` argument. For example:\n\n```Python\nfrom unittest import mock\n\ndef test_foo():\n    mocked_foo = mock.MagicMock()\n```\n\nTo fix this issue, you need to provide the `spec` or `spec_set` argument when\ncreating the mock object. Here are a few examples:\n\n```Python\nfrom unittest import mock\n\nfrom foo import Foo\n\ndef test_foo():\n    mocked_foo = mock.MagicMock(spec=Foo)\n```\n\n```Python\nfrom unittest import mock\n\nfrom foo import Foo\n\ndef test_foo():\n    mocked_foo = mock.MagicMock(spec_set=Foo)\n```\n\nFor more information about `mock.MagicMock` and how to use it, please refer to\nthe official documentation:\nhttps://docs.python.org/3/library/unittest.mock.html#unittest.mock.MagicMock\n\n### Fix TMS012\n\nThis linting rule is triggered when a `unittest.mock.NonCallableMock` instance\nis created without the `spec` or `spec_set` argument. For example:\n\n```Python\nfrom unittest import mock\n\ndef test_foo():\n    mocked_foo = mock.NonCallableMock()\n```\n\nTo fix this issue, you need to provide the `spec` or `spec_set` argument when\ncreating the mock object. Here are a few examples:\n\n```Python\nfrom unittest import mock\n\nfrom foo import Foo\n\ndef test_foo():\n    mocked_foo = mock.NonCallableMock(spec=Foo)\n```\n\n```Python\nfrom unittest import mock\n\nfrom foo import Foo\n\ndef test_foo():\n    mocked_foo = mock.NonCallableMock(spec_set=Foo)\n```\n\nFor more information about `mock.NonCallableMock` and how to use it, please\nrefer to the official documentation:\nhttps://docs.python.org/3/library/unittest.mock.html#unittest.mock.NonCallableMock\n\n### Fix TMS013\n\nThis linting rule is triggered when a `unittest.mock.AsyncMock` instance is\ncreated without the `spec` or `spec_set` argument. For example:\n\n```Python\nfrom unittest import mock\n\ndef test_foo():\n    mocked_foo = mock.AsyncMock()\n```\n\nTo fix this issue, you need to provide the `spec` or `spec_set` argument when\ncreating the mock object. Here are a few examples:\n\n```Python\nfrom unittest import mock\n\nfrom foo import Foo\n\ndef test_foo():\n    mocked_foo = mock.AsyncMock(spec=Foo)\n```\n\n```Python\nfrom unittest import mock\n\nfrom foo import Foo\n\ndef test_foo():\n    mocked_foo = mock.AsyncMock(spec_set=Foo)\n```\n\nFor more information about `mock.AsyncMock` and how to use it, please refer to the\nofficial documentation:\nhttps://docs.python.org/3/library/unittest.mock.html#unittest.mock.AsyncMock\n\n### Fix TMS020\n\nThis linting rule is triggered when calling `unittest.mock.patch` without\nincluding one or more of the following arguments: `new`, `spec`, `spec_set`,\n`autospec`, or `new_callable`.\n\nFor example, this code will trigger the rule:\n\n```Python\nfrom unittest import mock\n\n@mock.patch(\"Foo\")\ndef test_foo():\n    pass\n\nwith mock.patch(\"Foo\") as mocked_foo:\n    pass\n\nfoo_patcher = patch(\"Foo\")\n```\n\nTo fix this issue, include one or more of the aforementioned arguments when\ncalling `mock.patch`. For example:\n\n```Python\nfrom unittest import mock\n\nfrom foo import Foo\n\n@mock.patch(\"Foo\", spec=Foo)\ndef test_foo():\n    pass\n\nwith mock.patch(\"Foo\", spec_set=Foo) as mocked_foo:\n    pass\n\nfoo_patcher = patch(\"Foo\", autospec=True)\n```\n\nFor more information about `mock.patch` and how to use it, please refer to the\nofficial documentation:\nhttps://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch\n\n### Fix TMS021\n\nThis linting rule is triggered when calling `unittest.mock.patch.object`\nwithout including one or more of the following arguments: `new`, `spec`,\n`spec_set`, `autospec`, or `new_callable`.\n\nFor example, this code will trigger the rule:\n\n```Python\nfrom unittest import mock\n\nfrom foo import Foo\n\n@mock.patch.object(Foo, \"bar\")\ndef test_foo():\n    pass\n\nwith mock.patch.object(Foo, \"bar\") as mocked_foo:\n    pass\n\nfoo_patcher = patch(Foo, \"bar\")\n```\n\nTo fix this issue, include one or more of the aforementioned arguments when\ncalling `mock.patch.object`. For example:\n\n```Python\nfrom unittest import mock\n\nfrom foo import Foo\n\n@mock.patch.object(Foo, \"bar\", spec=Foo.bar)\ndef test_foo():\n    pass\n\nwith mock.patch.object(Foo, \"bar\", spec_set=Foo.bar) as mocked_foo:\n    pass\n\nfoo_patcher = patch(Foo, \"bar\", autospec=True)\n```\n\nFor more information about `mock.patch.object` and how to use it, please refer\nto the official documentation:\nhttps://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch.object\n\n### Fix TMS022\n\nThis linting rule is triggered when calling `unittest.mock.patch.multiple`\nwithout including one or more of the following arguments: `spec`, `spec_set`,\n`autospec`, or `new_callable`.\n\nFor example, this code will trigger the rule:\n\n```Python\nfrom unittest import mock\n\n@mock.patch.multiple(\"Foo\", FIRST_PATCH='bar', SECOND_PATCH='baz')\ndef test_foo():\n    pass\n\nwith mock.patch.object(\"Foo\", FIRST_PATCH='bar', SECOND_PATCH='baz') as mocked_foo:\n    pass\n\nfoo_patcher = patch(\"Foo\", FIRST_PATCH='bar', SECOND_PATCH='baz')\n```\n\nTo fix this issue, include one or more of the aforementioned arguments when\ncalling `mock.patch.multiple`. For example:\n\n```Python\nfrom unittest import mock\n\nfrom foo import Foo\n\n@mock.patch.multiple(\"Foo\", spec=Foo, FIRST_PATCH='bar', SECOND_PATCH='baz')\ndef test_foo():\n    pass\n\nwith mock.patch.object(\"Foo\", spec_set=Foo, FIRST_PATCH='bar', SECOND_PATCH='baz') as mocked_foo:\n    pass\n\nfoo_patcher = patch(\"Foo\", autospec=True, FIRST_PATCH='bar', SECOND_PATCH='baz')\n```\n\nFor more information about `mock.patch.multiple` and how to use it, please\nrefer to the official documentation:\nhttps://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch.multiple\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flake8-mock-spec",
    "package_url": "https://pypi.org/project/flake8-mock-spec/",
    "platform": null,
    "project_url": "https://pypi.org/project/flake8-mock-spec/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/flake8-mock-spec/1.4.0/",
    "requires_dist": [
      "flake8 (>=5)"
    ],
    "requires_python": ">=3.8.1,<4.0.0",
    "summary": "A linter that checks mocks are constructed with the spec argument",
    "version": "1.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16427795,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a044441272f1fff3475c86ff95ebd1aa5c2eaa974f8e1de72ccf3c5e9306ddc4",
          "md5": "acd12801ef27ff4fc3abc5e37e8e5ae3",
          "sha256": "37d9ac9a253eb26e78cbf18947464875dd62f9d81b17eb9b4908b5f00d4a5c68"
        },
        "downloads": -1,
        "filename": "flake8_mock_spec-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "acd12801ef27ff4fc3abc5e37e8e5ae3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 7659,
        "upload_time": "2023-01-14T03:52:08",
        "upload_time_iso_8601": "2023-01-14T03:52:08.184687Z",
        "url": "https://files.pythonhosted.org/packages/a0/44/441272f1fff3475c86ff95ebd1aa5c2eaa974f8e1de72ccf3c5e9306ddc4/flake8_mock_spec-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d9e684823fd938018e1c9c56f5253cbb8e20ff718ca95ac3db20e752e636561",
          "md5": "8726214e92276fc107db16aa22dd6377",
          "sha256": "5cb5294bbf6df59728d5b18bb5fd06281a3d8f86dc71abfa1148df3b8dc7f92e"
        },
        "downloads": -1,
        "filename": "flake8_mock_spec-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8726214e92276fc107db16aa22dd6377",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 7483,
        "upload_time": "2023-01-14T03:52:09",
        "upload_time_iso_8601": "2023-01-14T03:52:09.559028Z",
        "url": "https://files.pythonhosted.org/packages/5d/9e/684823fd938018e1c9c56f5253cbb8e20ff718ca95ac3db20e752e636561/flake8_mock_spec-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c2bbb3e61ce00c4cca67bf7bae389bc24a5c6f0decc7220d8a5e888b9895601",
          "md5": "594660f5ab90f4f0eeb6b003d0c76b0e",
          "sha256": "0bda1a484c1a27749c65e8eed48b406b46d079ef26c80ddbd15a5c2a692284bb"
        },
        "downloads": -1,
        "filename": "flake8_mock_spec-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "594660f5ab90f4f0eeb6b003d0c76b0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 7860,
        "upload_time": "2023-01-14T04:23:42",
        "upload_time_iso_8601": "2023-01-14T04:23:42.788016Z",
        "url": "https://files.pythonhosted.org/packages/7c/2b/bb3e61ce00c4cca67bf7bae389bc24a5c6f0decc7220d8a5e888b9895601/flake8_mock_spec-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d508e3ba36dac1e8f421a44e81806b1d009436ca6f731e81f7db59df3a12101",
          "md5": "6985e0864b7180240f4ee46bb23be260",
          "sha256": "a41a5387460fc4c551791c155651ffe2499924eabc74a46762e524663963aaac"
        },
        "downloads": -1,
        "filename": "flake8_mock_spec-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6985e0864b7180240f4ee46bb23be260",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 7741,
        "upload_time": "2023-01-14T04:23:44",
        "upload_time_iso_8601": "2023-01-14T04:23:44.103842Z",
        "url": "https://files.pythonhosted.org/packages/6d/50/8e3ba36dac1e8f421a44e81806b1d009436ca6f731e81f7db59df3a12101/flake8_mock_spec-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb5e1a3ee9f835ee40098ff22a34488acd15b9f3a2b458e44575e9d98d2b2c66",
          "md5": "881f059ba72268644b1b0f45fb0fee30",
          "sha256": "e7a078ce0fd6bbd6d9e003cb7823c460c44c1a2778d48d6bc8640bae39814195"
        },
        "downloads": -1,
        "filename": "flake8_mock_spec-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "881f059ba72268644b1b0f45fb0fee30",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 8226,
        "upload_time": "2023-01-14T05:30:20",
        "upload_time_iso_8601": "2023-01-14T05:30:20.389463Z",
        "url": "https://files.pythonhosted.org/packages/eb/5e/1a3ee9f835ee40098ff22a34488acd15b9f3a2b458e44575e9d98d2b2c66/flake8_mock_spec-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25b86c44dbc6396b6fa84a23b6f93c69efc0ac5b92aaa96686cd98089df3b735",
          "md5": "34337fad69245e9b4dccd11cf4bf18f5",
          "sha256": "18960ebf0e19496bc2057550f03c7d05f87a7e04d3e85b6ce6c5201c3d0e0368"
        },
        "downloads": -1,
        "filename": "flake8_mock_spec-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "34337fad69245e9b4dccd11cf4bf18f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 8233,
        "upload_time": "2023-01-14T05:30:22",
        "upload_time_iso_8601": "2023-01-14T05:30:22.000955Z",
        "url": "https://files.pythonhosted.org/packages/25/b8/6c44dbc6396b6fa84a23b6f93c69efc0ac5b92aaa96686cd98089df3b735/flake8_mock_spec-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a05a7687529a83f083953de923de0531f991091c0bb37d8fc7fd93161dc8244c",
          "md5": "10fca61494aab3ad3c46790a9ad5f031",
          "sha256": "e9f608a277dc4c2dde85ed5ac36c3e648a956a4aad5df1e7fd282ef03d4c80f5"
        },
        "downloads": -1,
        "filename": "flake8_mock_spec-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10fca61494aab3ad3c46790a9ad5f031",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 9264,
        "upload_time": "2023-01-14T11:07:39",
        "upload_time_iso_8601": "2023-01-14T11:07:39.921686Z",
        "url": "https://files.pythonhosted.org/packages/a0/5a/7687529a83f083953de923de0531f991091c0bb37d8fc7fd93161dc8244c/flake8_mock_spec-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3d6103f43bb38ae5ae576896f7fe15be80a7a0fab4279476473d773c6912794",
          "md5": "c7f620d48eefbbcee24c1cda4c352080",
          "sha256": "4d2e9d21a883a1cb14c08ad91572490ac709abe0b6a5b99ac74365289af155f0"
        },
        "downloads": -1,
        "filename": "flake8_mock_spec-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c7f620d48eefbbcee24c1cda4c352080",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 9497,
        "upload_time": "2023-01-14T11:07:41",
        "upload_time_iso_8601": "2023-01-14T11:07:41.388588Z",
        "url": "https://files.pythonhosted.org/packages/b3/d6/103f43bb38ae5ae576896f7fe15be80a7a0fab4279476473d773c6912794/flake8_mock_spec-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3680531471bbe770cf01123ffa0cc74c4af2aa7172902a5c219f7a79fe0b1bf6",
          "md5": "e6fbd6e184076a687ed8aaec7d1e09c2",
          "sha256": "9e003d03e5aec650445f3d440aba5c8c41898a2ca45249c0019cef2c11650725"
        },
        "downloads": -1,
        "filename": "flake8_mock_spec-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6fbd6e184076a687ed8aaec7d1e09c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 9391,
        "upload_time": "2023-01-14T11:45:10",
        "upload_time_iso_8601": "2023-01-14T11:45:10.235048Z",
        "url": "https://files.pythonhosted.org/packages/36/80/531471bbe770cf01123ffa0cc74c4af2aa7172902a5c219f7a79fe0b1bf6/flake8_mock_spec-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc6ef43cd084997b1fe7bf6685de33ead5fdfbec84d74fb72199506baf73d985",
          "md5": "16d967988d5a267bddf5b8856112a44b",
          "sha256": "6f7f18a2f85275b7eb6d17565dc56d41a1330f910c4288667980665a7a787759"
        },
        "downloads": -1,
        "filename": "flake8_mock_spec-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "16d967988d5a267bddf5b8856112a44b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 10166,
        "upload_time": "2023-01-14T11:45:11",
        "upload_time_iso_8601": "2023-01-14T11:45:11.512421Z",
        "url": "https://files.pythonhosted.org/packages/cc/6e/f43cd084997b1fe7bf6685de33ead5fdfbec84d74fb72199506baf73d985/flake8_mock_spec-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3680531471bbe770cf01123ffa0cc74c4af2aa7172902a5c219f7a79fe0b1bf6",
        "md5": "e6fbd6e184076a687ed8aaec7d1e09c2",
        "sha256": "9e003d03e5aec650445f3d440aba5c8c41898a2ca45249c0019cef2c11650725"
      },
      "downloads": -1,
      "filename": "flake8_mock_spec-1.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e6fbd6e184076a687ed8aaec7d1e09c2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.1,<4.0.0",
      "size": 9391,
      "upload_time": "2023-01-14T11:45:10",
      "upload_time_iso_8601": "2023-01-14T11:45:10.235048Z",
      "url": "https://files.pythonhosted.org/packages/36/80/531471bbe770cf01123ffa0cc74c4af2aa7172902a5c219f7a79fe0b1bf6/flake8_mock_spec-1.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc6ef43cd084997b1fe7bf6685de33ead5fdfbec84d74fb72199506baf73d985",
        "md5": "16d967988d5a267bddf5b8856112a44b",
        "sha256": "6f7f18a2f85275b7eb6d17565dc56d41a1330f910c4288667980665a7a787759"
      },
      "downloads": -1,
      "filename": "flake8_mock_spec-1.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "16d967988d5a267bddf5b8856112a44b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.1,<4.0.0",
      "size": 10166,
      "upload_time": "2023-01-14T11:45:11",
      "upload_time_iso_8601": "2023-01-14T11:45:11.512421Z",
      "url": "https://files.pythonhosted.org/packages/cc/6e/f43cd084997b1fe7bf6685de33ead5fdfbec84d74fb72199506baf73d985/flake8_mock_spec-1.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}