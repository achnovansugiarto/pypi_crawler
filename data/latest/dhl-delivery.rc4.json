{
  "info": {
    "author": "Iván Salazar",
    "author_email": "ivangio.salazar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# DHL delivery\n \n\nDHL delivery provides DHL API Services. It is simple to use.\n\n**Below are list of available services or operations**\n\n   1. DHL Quote and Capability Service.\n   2. DHL Shipment Validation and Obtain shipment details and event visibility filtered by Waybill.\n   3. DHL Label Image utility â€“ Generates DHL compliant label image using the XML response from Shipment Validation.\n   4. DHL Pickup Booking\n   5. DHL Tracking and modify or delete courier pick-up (Not impleminted yet but planned to implement it soon)\n   6. Internally Check If Response Available form DHL\n   7. Spacify Maximum Execution Time - For how many second the API should try to get response from DHL\n\n# Get Started - Install\n\n**How to install**\n\n`pip install dhl_delivery` \n\nUsage - DHL Quote and Capability Service\n========================================\n\n**Example to get Quote and Capability Service - get the DHL delivery\nCharges**\n\n``` python\n   import dhl_delivery\n\n   # these two generally your company need to contact DHL to obtain form DHL\n   dhl_delivery.dhl_site_id = 'your DHL site id - obtained from DHL'\n   dhl_delivery.dhl_site_password = 'your DHL Site Password - obtained from DHL' \n   dhl_delivery.dhl_account_no = 'your DHL [ayment account number - obtained from DHL'  # set it to get correct rate\n\n   # Spacify Maximum Execution Time (in second) - For how many second the API should try to get response from DHL (Multiprocess)\n   dhl_delivery.max_response_time = 30 \n\n   # the From and to Address - only mendatory fields are provided here\n   quote_address = {\n       'from_country': 'AU',\n       'from_city': 'Melbourne',\n       'from_zipcode': '3000',\n\n       'to_country': 'MY',\n       'to_city': 'Kuala Lumpur',\n       'to_zipcode': '50200'\n   }\n\n   # the unit of measurements - only mendatory fields are provided here\n   quote_unit = {\n       'dimension_unit': 'CM',\n       'weight_unit': 'KG'\n   }\n\n   # Pieces as List of Dictionary - it can be one ore more pieces - here with two pieces example\n   piece_one = {\n       'piece_id': '1',\n       'piece_height': '15',\n       'piece_depth': '15',\n       'piece_width': '15',\n       'piece_weight': '1'\n   }\n   piece_two = {\n       'piece_id': '2',\n       'piece_height': '2',\n       'piece_depth': '2',\n       'piece_width': '2',\n       'piece_weight': '2'\n   }\n   # Create the list with multiple (here 2) pieces\n   quote_pieces = []\n   quote_pieces.append(piece_one)\n   quote_pieces.append(piece_two)\n\n   # Some oter data\n   quote_optional_data = {\n\n       'is_dutiable': 'Y',  # Y|N\n       'declared_currency': 'MYR',  # currency code of To Country\n       'declared_value': '150.00',\n\n       'insured_value': '100.00',   # Optional\n       'insured_currency': 'MYR',   # Optional\n   }\n\n   # Finally preapre the data to send to the API \n   quote_data_to_send = {\n       'addresses': quote_address,\n       'units': quote_unit,\n       'pieces': quote_pieces,\n       'optional_data': quote_optional_data,\n   }\n\n   # with the prepare data call the function and get the response\n   dict_response = dhl_delivery.quote.get_quote(quote_data_to_send)\n```\n\n**The Reponse you will get will look similar to**\n   \n\n``` javascript\n   {\n       status: true,\n       message: \"DHL quotes returned.\"\n       quote_data: {\n           delivery_charge: \"572.800\",\n           local_product_name: \"EXPRESS WORLDWIDE NONDOC\",\n           product_shortName: \"EXPRESS WORLDWIDE\",\n           dimensional_weight: \"3.000\",\n           weight_unit: \"KG\",\n           currency_code: \"MYR\"\n       }\n   }\n```\n\nUsage - DHL Shipment\n====================\n\n**Example DHL Shipment Validation - DHL Label Image utility - Label\nCreation (PDF File) - Airway Bill Number - Pickup - Pickup Reference\nNumber**\n\n``` python\n   import dhl_delivery\n\n   # these three generally your company need to contact DHL to obtain form DHL\n   dhl_delivery.dhl_site_id = 'your DHL site id - obtained from DHL'\n   dhl_delivery.dhl_site_password = 'your DHL Site Password - obtained from DHL' \n   dhl_delivery.dhl_account_no = 'obtained from DHL'\n\n   # the From and to Address - only mendatory fields are provided here\n   address_details = {\n       'from_company_name': 'Shopandbox',\n       'from_address_line_one': 'some from address',\n       'from_address_line_two': 'some from address 2',  # optional\n       'from_city': 'New York',\n       'from_zipcode': '10022',\n       'from_country': 'US',  # two letter abbriviation\n       'from_country_name': 'United States',  # country full name\n       'from_name': 'SNB Test',\n       'from_phone_no': '1111111',\n       'from_state': '',  # only for pickup (from_state) - max 35v char - Optional\n\n       'to_company_name': 'Test Company',\n       'to_address_line_one': 'some address',\n       'to_address_line_two': 'some address two',  # optional\n       'to_city': 'Kuala Lumpur',\n       'to_zipcode': '50200',\n       'to_country': 'MY',  # two letter abbriviation\n       'to_country_name': 'Malaysia',  # country full name\n       'to_name': 'Hasan Test',\n       'to_phone_no': '3333333',\n   }\n\n   # Detail about the package - box\n   package_details = {\n       'package_type': 'DF',  # DF|YP etc\n       'total_weight': '2',  # total weight\n       'dimension_unit': 'C',\n       'weight_unit': 'K',\n       'global_product_code': 'P',\n       'local_product_code': 'P',\n       'door_to': 'DD',\n       'shipment_date': '2016-03-25',  # YYYY-mm-dd format\n       'content_description': 'Some Content',\n       'declared_value': '1.00',\n       'declared_currency': 'USD',\n       'is_dutiable': 'Y',\n       'insured_amount': '100',  # Insured Amount (Required if Special Service of I\n       'special_service_type': 'I',  # optional\n       'reference_id': '1213122'  # any arbitrary or random number\n   }\n\n   # Pieces as List of Dictionary - it can be one ore more pieces - here with two pieces example\n   piece_one = {\n       'piece_id': '1',\n       'package_type': 'DF',  # DF|YP etc - this one can be made optional as package details has the same param\n       'piece_height': '1',\n       'piece_depth': '1',\n       'piece_width': '1',\n       'piece_weight': '1'\n   }\n   piece_two = {\n       'piece_id': '2',\n       'package_type': 'DF',  # DF|YP etc\n       'piece_height': '2',\n       'piece_depth': '2',\n       'piece_width': '2',\n       'piece_weight': '1'\n   }\n   # Create the list with multiple (here 2) pieces\n   pieces_details = []\n   pieces_details.append(piece_one)\n   pieces_details.append(piece_two)\n\n   # set up for the shipment awb file path and name - if provided then pickup will be created else no pickup\n   optional_data = {\n       'awb_pdf_file_path': 'path/where/you /want/to/store/the/awb/pdf/file/',\n       'awb_pdf_file_name': 'myfile.pdf',  # name of the file \n   }\n\n   # only for pickup - no need to set it if no pick up needed\n   pickup_details = {\n       'pickup_date': '2016-02-25',  # YYYY-MM-DD format\n       'ready_by_time': '14:30',  # hh:mm ie 14:35\n       'close_time': '15:30',  # hh:mm ie 15:35\n   }\n\n   shipment_data_to_send = {\n       'addresses': address_details,\n       'package': package_details,\n       'pieces': pieces_details,\n       # only for pickup not for shipment - if provided then pickup will be created else no pickup\n       #'pickup_details': pickup_details,  \n       'optional_data': optional_data\n   }\n\n   # with the prepare data call the function and get the response\n   dict_response = dhl_delivery.shipment.get_shipment(shipment_data_to_send)\n```\n\n**The response you will get will look similar to**\n\n``` javascript\n   {\n       pickup_response: {\n           //if in request data pickup details provided then here you will get the status True on success and False on fail\n           status: false,  \n           //if in request data pickup details provided then this will be True\n           request_for_pickup: false,  \n           message: \"\", \n           //if in request data pickup details provided then here you will get the pick up confirmation number\n           pickup_confirmation_number: \"\"  \n       },\n       shipment_response: {\n           status: true,\n           awb_pdf_file_path_name: \"pdf_shipment_label_2/9687040086__awb_15.pdf\",\n           message: \"DHL Shipment created.\",\n           awb_pdf_file_name: \"9687040086__awb_15.pdf\",\n           airway_bill_number: \"9687040086\"\n       }\n   }\n   ```\n\nRemove - Uninstall\n==================\n\n**How to uninstall**\n\n`pip uninstall dhl_delivery`",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/dhl_delivery/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dhl-delivery",
    "package_url": "https://pypi.org/project/dhl-delivery/",
    "platform": "",
    "project_url": "https://pypi.org/project/dhl-delivery/",
    "project_urls": {
      "Homepage": "http://pypi.python.org/pypi/dhl_delivery/"
    },
    "release_url": "https://pypi.org/project/dhl-delivery/2.0.12/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "DHL Capability - Quote & Shipment",
    "version": "2.0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7571406,
  "releases": {
    "2.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8499d5374fd1125a3771034fd11af8f665d93afabd896d614c60ec0bb0a56b2b",
          "md5": "1d8436f8fd41ea530462a679733e782c",
          "sha256": "ab163e12b93e153f9018dc7596937684e419c348c2a283b7f650691632bd305c"
        },
        "downloads": -1,
        "filename": "dhl_delivery-2.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "1d8436f8fd41ea530462a679733e782c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16760,
        "upload_time": "2020-06-17T19:52:48",
        "upload_time_iso_8601": "2020-06-17T19:52:48.234168Z",
        "url": "https://files.pythonhosted.org/packages/84/99/d5374fd1125a3771034fd11af8f665d93afabd896d614c60ec0bb0a56b2b/dhl_delivery-2.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0d776adf027cb086e9f64d097e2434bc7abcaf0edcaf823dc8500e618f360d9",
          "md5": "919531e75f05235117cb6b7f19d3c434",
          "sha256": "88cd1c99bb153b4d171405609ac63f141d2d1ca5cfca3fa5615716dbe4d86ef0"
        },
        "downloads": -1,
        "filename": "dhl_delivery-2.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "919531e75f05235117cb6b7f19d3c434",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16796,
        "upload_time": "2020-06-26T19:25:35",
        "upload_time_iso_8601": "2020-06-26T19:25:35.899311Z",
        "url": "https://files.pythonhosted.org/packages/c0/d7/76adf027cb086e9f64d097e2434bc7abcaf0edcaf823dc8500e618f360d9/dhl_delivery-2.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "014809286f726c060d88882324cb2597ff32ef293b401883272df20afabe526f",
          "md5": "1067df46f89eca7454c1589d5f006cb9",
          "sha256": "56ade33a6397ba7c1477af731a512540ed54f0f5acc4b66116b35903e7303e42"
        },
        "downloads": -1,
        "filename": "dhl_delivery-2.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "1067df46f89eca7454c1589d5f006cb9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16790,
        "upload_time": "2020-06-26T19:33:19",
        "upload_time_iso_8601": "2020-06-26T19:33:19.424199Z",
        "url": "https://files.pythonhosted.org/packages/01/48/09286f726c060d88882324cb2597ff32ef293b401883272df20afabe526f/dhl_delivery-2.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b494165e47972ad5393d3bab416d38bbd8f3e3e0932221efe633042fa31ac1a",
          "md5": "4a3edc7bb79cb6f4389c6cd7f8b9a528",
          "sha256": "9d2146cf6c5e2f2a09a59a32bd4b094c6da01ffaee138d67ed4e638b0bb2f974"
        },
        "downloads": -1,
        "filename": "dhl_delivery-2.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "4a3edc7bb79cb6f4389c6cd7f8b9a528",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16756,
        "upload_time": "2020-06-12T21:35:57",
        "upload_time_iso_8601": "2020-06-12T21:35:57.368913Z",
        "url": "https://files.pythonhosted.org/packages/1b/49/4165e47972ad5393d3bab416d38bbd8f3e3e0932221efe633042fa31ac1a/dhl_delivery-2.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "014809286f726c060d88882324cb2597ff32ef293b401883272df20afabe526f",
        "md5": "1067df46f89eca7454c1589d5f006cb9",
        "sha256": "56ade33a6397ba7c1477af731a512540ed54f0f5acc4b66116b35903e7303e42"
      },
      "downloads": -1,
      "filename": "dhl_delivery-2.0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "1067df46f89eca7454c1589d5f006cb9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16790,
      "upload_time": "2020-06-26T19:33:19",
      "upload_time_iso_8601": "2020-06-26T19:33:19.424199Z",
      "url": "https://files.pythonhosted.org/packages/01/48/09286f726c060d88882324cb2597ff32ef293b401883272df20afabe526f/dhl_delivery-2.0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}