{
  "info": {
    "author": "Marco Mariotti",
    "author_email": "marco.mariotti@ub.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# file_chunk_iterators\n\nPython classes to iterate through files in chunks\n\n\nWe provide two functions:\n\n1. iterate_file_in_chunks\n   Iterator to iterate over chunks of a file.\n   The iterator is initialized to specify how many lines/chunks to make.\n   It is then used as iterator several times: each time, it will iterate over the lines of one chunk only.\n\n2. iterate_file_in_chunks_with_key\n   Iterate through a file in chunks, keeping together certain groups of lines defined by a key.\n   This iterator class operates like iterate_file_in_chunks (see its docstring) but with an additional constraint:\n   Here, lines in the file are characterized by a key. Consecutive lines with the same key can never be split to different chunks.\n  \n\nThese methods can be used in conjuction with pandas.read_csv to read a pandas dataframe one chunk at the time, which may save memory.\n\nHere below, you have the docstrings of the two methods:\n\n```\niterate_file_in_chunks(fname, nlines=None, nchunks=None):\n    Arguments:\n      fname:   file to be opened\n      nlines:  max number of lines per chunk\n      nchunks: number of chunks (overrides nlines)\n\n    Boolean attribute self.finished tells  whether the whole file has been iterated through\n\n    Example #1: specifying number of lines\n    ======================================\n      iterator=iterate_file_in_chunks(fname, nlines=4)\n\n      # first time: iterates over lines 1-4\n      for line in iterator:        print (line)\n\n      # 2nd time: iterates over lines 5-8\n      for line in iterator:        print (line)\n\n      # etc\n\n    Example #2: specifying number of lines, iterate whole file\n    ==========================================================\n      iterator=iterate_file_in_chunks(fname, nlines=4)\n      chunkindex=0  #optionally, keeping track of chunkindex\n      while not iterator.finished:\n        for line in iterator:\n          print(line)\n        chunkindex+=1\n\n\n    Example #3: specifying number of chunks\n    =======================================\n      iterator=iterate_file_in_chunks(fname, nchunks=3)\n      for chunkindex in range(nchunks):\n        for line in iterator:\n          print(line)\n\n    Argument nchunks will estimate the nlines per chunk from the size of the file.\n    Note, lines are never divided in subfractions; so if you divide a 10-line file in 3, you have\n    chunk1= 4 lines       chunk2= 3 lines        chunk3= 3 lines\n\n    How to use in pandas\n    ====================\n    This code was written specifically to read tabular files in chunks to use in pandas.\n    Theoretically this is accomplished by pandas.read_csv(.. , chunksize=50), but in practice that will crash with certain files.\n    So to accomplish this, use:\n\n    nchunks=4\n    iterator=iterate_file_in_chunks(fname, nchunks=nchunks)\n\n    # determine column names somehow, e.g. with:\n    with open(fname) as fh:\n      colnames=fh.readline().strip().split('\\t')\n\n    for chunkindex in range(nchunks):\n      # read a chunk of lines as dataframe\n      chunkdf=pd.read_csv(iterator, engine='python', names=colnames, sep='\\t',\n                          header=(1 if chunkindex==0 else None) )\n\n      # use chunkdf somehow, to obtain resdf\n      resdf=process(chunkdf)\n\n      # write all resdf to a file called outfile, one chunk at the time\n      resdf.to_csv(outfile, sep='\\t', index=False, header=(chunkindex == 0),\n                mode=('w' if chunkindex == 0 else 'a') )\n\n    Warning\n    =======\n     pandas.read_csv has unexpected behavior when nlines is small, say <3\n     It will ignore some stopiterations, and concatenate what are supposed to be different chunks\n\n     pandas version tested 1.3.3\n\n```\n\n\n```\niterate_file_in_chunks_with_key(fname, nlines, keyfn=lambda x:x[:x.index('\\t')]):\n\n    Arguments:\n      fname:   file to be opened\n      nlines:  max number of lines per chunk\n      keyfn:   function to be applied to each line to derive its key  (default: get first tab-separated field)\n\n    Note:\n      - the chunk may have size greater than nlines if there are more than nlines consecutive lines with the same key\n      - the same-key condition is tested only for consecutive lines\n\n    Boolean attribute self.finished tells whether the whole file has been iterated through\n\n    Example #1: specifying number of lines\n    ======================================\n      iterator=iterate_file_in_chunks_with_key(fname, nlines=10, keyfn=lambda x:x.split()[0])\n\n      # first time: iterates over lines 1-4\n      for line in iterator:        print (line)\n\n      # 2nd time: iterates over lines 5-8\n      for line in iterator:        print (line)\n\n      # etc\n\n    Example #2: specifying number of lines, iterate whole file\n    ==========================================================\n      iterator=iterate_file_in_chunks_with_key(fname, nlines=10, keyfn=lambda x:x.split()[0])\n      chunkindex=0  #optionally, keeping track of chunkindex\n      while not iterator.finished:\n        for line in iterator:\n          print(line)\n        chunkindex+=1\n\n    Warning\n    =======\n     pandas.read_csv has unexpected behavior when nlines is small, say <3\n     It will ignore some stopiterations, and concatenate what are supposed to be different chunks\n\n     pandas version tested 1.3.3\n```\n     \n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pypa/sampleproject",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "file-chunk-iterators",
    "package_url": "https://pypi.org/project/file-chunk-iterators/",
    "platform": null,
    "project_url": "https://pypi.org/project/file-chunk-iterators/",
    "project_urls": {
      "Homepage": "https://github.com/pypa/sampleproject"
    },
    "release_url": "https://pypi.org/project/file-chunk-iterators/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python classes to iterate through files in chunks",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17396957,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf8d7e40f548f8af66b0333a1f6a3d81298abc2e992d9c1ec6eaf2f40738f19f",
          "md5": "2865291d4ecfcd3eb482833f6e08c36a",
          "sha256": "6ddf79e2fbef81453a9656738eceb24ad1dffb9f87bc6f6d6e04b88bc45812f5"
        },
        "downloads": -1,
        "filename": "file_chunk_iterators-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2865291d4ecfcd3eb482833f6e08c36a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18565,
        "upload_time": "2023-03-22T11:41:08",
        "upload_time_iso_8601": "2023-03-22T11:41:08.115107Z",
        "url": "https://files.pythonhosted.org/packages/bf/8d/7e40f548f8af66b0333a1f6a3d81298abc2e992d9c1ec6eaf2f40738f19f/file_chunk_iterators-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5514aae9ca62f3333f3e826bca55e4d226cde5e50fc4752be69a113680e0f7de",
          "md5": "dddfd30c8b44aafbacf88110d284fa82",
          "sha256": "9b22f1a7a98460950576a56e64694944b18c8edf2076fbce19ba99883579dec0"
        },
        "downloads": -1,
        "filename": "file_chunk_iterators-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dddfd30c8b44aafbacf88110d284fa82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17358,
        "upload_time": "2023-03-22T11:41:09",
        "upload_time_iso_8601": "2023-03-22T11:41:09.841577Z",
        "url": "https://files.pythonhosted.org/packages/55/14/aae9ca62f3333f3e826bca55e4d226cde5e50fc4752be69a113680e0f7de/file_chunk_iterators-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf8d7e40f548f8af66b0333a1f6a3d81298abc2e992d9c1ec6eaf2f40738f19f",
        "md5": "2865291d4ecfcd3eb482833f6e08c36a",
        "sha256": "6ddf79e2fbef81453a9656738eceb24ad1dffb9f87bc6f6d6e04b88bc45812f5"
      },
      "downloads": -1,
      "filename": "file_chunk_iterators-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2865291d4ecfcd3eb482833f6e08c36a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18565,
      "upload_time": "2023-03-22T11:41:08",
      "upload_time_iso_8601": "2023-03-22T11:41:08.115107Z",
      "url": "https://files.pythonhosted.org/packages/bf/8d/7e40f548f8af66b0333a1f6a3d81298abc2e992d9c1ec6eaf2f40738f19f/file_chunk_iterators-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5514aae9ca62f3333f3e826bca55e4d226cde5e50fc4752be69a113680e0f7de",
        "md5": "dddfd30c8b44aafbacf88110d284fa82",
        "sha256": "9b22f1a7a98460950576a56e64694944b18c8edf2076fbce19ba99883579dec0"
      },
      "downloads": -1,
      "filename": "file_chunk_iterators-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dddfd30c8b44aafbacf88110d284fa82",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17358,
      "upload_time": "2023-03-22T11:41:09",
      "upload_time_iso_8601": "2023-03-22T11:41:09.841577Z",
      "url": "https://files.pythonhosted.org/packages/55/14/aae9ca62f3333f3e826bca55e4d226cde5e50fc4752be69a113680e0f7de/file_chunk_iterators-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}