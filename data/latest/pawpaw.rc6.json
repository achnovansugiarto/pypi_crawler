{
  "info": {
    "author": "",
    "author_email": "\"Robert L. Ayers\" <rlayers@yahoo.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Processing"
    ],
    "description": "<!-- Back to top link -->\n<a name=\"readme-top\"></a>\n\n<!-- PROJECT SHIELDS -->\n[![Python][Python-shield]][Python-url]\n[![Contributors][contributors-shield]][contributors-url]\n[![Watchers][watchers-shield]][watchers-url]\n[![Forks][forks-shield]][forks-url]\n[![MIT License][license-shield]][license-url]\n[![Stargazers][stars-social]][stars-url]\n<br />\n\n<!-- ![Pawpaw](svg/title.svg) -->\n\n# Pawpaw  [![High Performance Text Segmentation, Parsing, & Query][byline-img]][repo]\n\nPawpaw is a high performance parsing & text segmentation framework that allows you to quickly and easily build complex, pipelined parsers.  Segments are automatically organized into tree graphs that can be serialized, traversed, and searched using a powerful structured query language called *plumule*.\n\n<img align=\"right\" width=\"30%\" height=\"30%\" alt=\"Botanical Drawing: Asimina triloba: the American papaw\" src=\"https://raw.githubusercontent.com/rlayers/pawpaw/master/images/pawpaw.png\"> \n\n- Indexed string and substring representation\n  - Efficient memory utilization\n  - Fast processing\n  - Pythonic relative indexing and slicing\n  - Runtime & polymorphic value extraction\n  - Tree graphs for all indexed text\n- Search and Query\n  - Search trees using plumule: a powerful structured query language similar to XPATH\n  - Combined multiple axes, filters, and subqueries sequentially and recursively to any depth\n  - Optionally pre-compile queries for increased performance\n- Rules Pipelining Engine\n  - Develop complex lexical parsers with just a few lines of code\n  - Quickly and easily convert unstructured text into structured, indexed, & searchable tree graphs\n  - Pre-process text for downstream NLP/AI/ML consumers\n- XML Processing\n  - Features a drop-in replacement for ElementTree.XmlParser\n  - Full text indices for all elements, attributes, tags, text, etc.\n  - Search the resulting XML using either XPATH and/or plumule\n  - Extract *both* ElementTree and Pawpaw datastructures in one go; with cross-linked nodes between trees\n- NLP Support:\n  - Pawpaw is ideal for both a) *preprocessing* unstructured text for downstream NLP consumption and b) *storing and searching* NLP generated content\n  - Works with other libraries, such as [NLTK](https://www.nltk.org/)\n- Efficient pickling and JSON persistence\n  - Security option enables persistence of index-only data, with reference strings re-injected during de-serialization \n- Stable & Defect Free\n  - Over 4,100 unit tests and counting!\n\n<div align=\"center\">\n  <a href=\"https://github.com/rlayers/pawpaw/tree/master/docs\">Explore the docs</a>\n  &nbsp;&nbsp;•&nbsp;&nbsp;\n  <a href=\"https://github.com/rlayers/pawpaw/issues\">Request a feature or report a bug</a>\n  &nbsp;&nbsp;•&nbsp;&nbsp;\n  <a href=\"https://github.com/rlayers/pawpaw/tree/master/pawpaw\">Explore the code</a>\n</div>\n\n<!-- EXAMPLE -->\n## Example\n\nWith Pawpaw, you can start with flattened text like this: \n\n```\nARTICLE I\nSection 1: Congress\nAll legislative Powers herein granted shall be vested in a Congress of the United States,\nwhich shall consist of a Senate and House of Representatives.\n\nSection 2: The House of Representatives\nThe House of Representatives shall be composed of Members chosen every second Year by the\nPeople of the several States, and the Electors in each State shall have the Qualifications\nrequisite for Electors of the most numerous Branch of the State Legislature.\n\nNo Person shall be a Representative who shall not have attained to the Age of twenty five\nYears, and been seven Years a Citizen of the United States, and who shall not, when elected,\nbe an Inhabitant of that State in which he shall be chosen.\n```\n\nand quickly and easily produce a tree that look like this:\n\n```mermaid\ngraph TD;\n  A1[\"[article]<br/>#quot;ARTICLE I…#quot;\"]:::dark_brown --> A1_k[\"[key]<br/>#quot;I#quot;\"]:::dark_brown;\n  A1--->Sc1[\"[section]<br/>#quot;Section 1…#quot;\"]:::light_brown;\n  Sc1-->Sc1_k[\"[key]<br/>#quot;1#quot;\"]:::light_brown\n  Sc1--->Sc1_p1[\"[paragraph]<br/>#quot;All legislative Powers…#quot;\"]:::peach\n  Sc1_p1-->Sc1_p1_s1[\"[sentence]<br/>#quot;All legislative Powers…#quot;\"]:::dark_green\n  Sc1_p1_s1-->Sc1_p1_s1_w1[\"[word]<br/>#quot;All#quot;\"]:::light_green\n  Sc1_p1_s1-->Sc1_p1_s1_w2[\"[word]<br/>#quot;legislative#quot;\"]:::light_green\n  Sc1_p1_s1-->Sc1_p1_s1_w3[\"[word]<br/>#quot;Powers#quot;\"]:::light_green\n  Sc1_p1_s1-->Sc1_p1_s1_w4[\"...\"]:::ellipsis\n\n  A1--->Sc2[\"[section]<br/>#quot;Section 2#quot;\"]:::light_brown;\n  Sc2-->Sc2_k[\"[key]<br/>#quot;2#quot;\"]:::light_brown\n  Sc2--->Sc2_p1[\"[paragraph]<br/>#quot;The House of…#quot;\"]:::peach\n  Sc2_p1---->Sc2_p1_s1[\"[sentence]<br/>#quot;The House of…#quot;\"]:::dark_green\n  Sc2_p1_s1-->Sc2_p1_s1_w1[\"[word]<br/>#quot;The#quot;\"]:::light_green\n  Sc2_p1_s1-->Sc2_p1_s1_w2[\"[word]<br/>#quot;House#quot;\"]:::light_green\n  Sc2_p1_s1-->Sc2_p1_s1_w3[\"[word]<br/>#quot;of#quot;\"]:::light_green\n  Sc2_p1_s1-->Sc2_p1_s1_w4[\"...\"]:::ellipsis\n  Sc2--->Sc2_p2[\"[paragraph]<br/>#quot;No Person shall…#quot;\"]:::peach\n  Sc2_p2---->Sc2_p2_s1[\"[sentence]<br/>#quot;No Person shall…#quot;\"]:::dark_green\n  Sc2_p2_s1-->Sc2_p2_s1_w1[\"[word]<br/>#quot;No#quot;\"]:::light_green\n  Sc2_p2_s1-->Sc2_p2_s1_w2[\"[word]<br/>#quot;Person#quot;\"]:::light_green\n  Sc2_p2_s1-->Sc2_p2_s1_w3[\"[word]<br/>#quot;shall#quot;\"]:::light_green\n  Sc2_p2_s1-->Sc2_p2_s1_w4[\"...\"]:::ellipsis\n\n  classDef dark_brown fill:#533E30,stroke:#000000,color:#FFFFFF;\n  classDef light_brown fill:#D2AC70,stroke:#000000,color:#000000;\n  classDef peach fill:#E4D1AE,stroke:#000000,color:#000000;\n  classDef dark_green fill:#517D3D,stroke:#000000,color:#FFFFFF;\n  classDef light_green fill:#90C246,stroke:#000000,color:#FFFFFF;\n\n  classDef ellipsis fill:#FFFFFF,stroke:#FFFFFF,color:#000000;\n```\n\nYou can then search your tree using plumule: a powerful structured query language:\n\n ```python\n'**[d:section]{**[d:word] & [lcs:power,right]}'  # Plumule query to find sections that containing words 'power' or 'right'\n ```\n\nTry out [this demo](docs/demos/us_constitution) yourself, which shows how easy it is to parse, visualize, and query the US Constitution using Pawpaw.\n\n<!-- USAGE EXAMPLES -->\n## Usage\n\nPawpaw has extensive features and capabilities you can read about in the [Docs](/Docs).  As a quick example, say you have some text that would like to perform nlp-like segmentation on. \n\n```python\n>>> s = 'nine 9 ten 10 eleven 11 TWELVE 12 thirteen 13'\n```\n\nYou can use a regular expression for segmentation as follows:\n\n```python\n>>> import regex \n>>> re = regex.compile(r'(?:(?P<phrase>(?P<word>(?P<char>\\w)+) (?P<number>(?P<digit>\\d)+))\\s*)+')\n```\n \nYou can then use this regex to feed **Pawpaw**:\n\n ```python\n>>> import pawpaw \n>>> doc = pawpaw.Ito.from_match(re.fullmatch(s))\n ```\n\nWith this single line of code, Pawpaw generates a fully hierarchical, tree of phrases, words, chars, numbers, and digits.  You can visualize the tree:\n\n```python\n>>> tree_vis = pawpaw.visualization.pepo.Tree()\n>>> print(tree_vis.dumps(doc))\n(0, 45) '0' : 'nine 9 ten 10 eleven…ELVE 12 thirteen 13'\n├──(0, 6) 'phrase' : 'nine 9'\n│  ├──(0, 4) 'word' : 'nine'\n│  │  ├──(0, 1) 'char' : 'n'\n│  │  ├──(1, 2) 'char' : 'i'\n│  │  ├──(2, 3) 'char' : 'n'\n│  │  └──(3, 4) 'char' : 'e'\n│  └──(5, 6) 'number' : '9'\n│     └──(5, 6) 'digit' : '9'\n├──(7, 13) 'phrase' : 'ten 10'\n│  ├──(7, 10) 'word' : 'ten'\n│  │  ├──(7, 8) 'char' : 't'\n│  │  ├──(8, 9) 'char' : 'e'\n│  │  └──(9, 10) 'char' : 'n'\n│  └──(11, 13) 'number' : '10'\n│     ├──(11, 12) 'digit' : '1'\n│     └──(12, 13) 'digit' : '0'\n├──(14, 23) 'phrase' : 'eleven 11'\n│  ├──(14, 20) 'word' : 'eleven'\n│  │  ├──(14, 15) 'char' : 'e'\n│  │  ├──(15, 16) 'char' : 'l'\n│  │  ├──(16, 17) 'char' : 'e'\n│  │  ├──(17, 18) 'char' : 'v'\n│  │  ├──(18, 19) 'char' : 'e'\n│  │  └──(19, 20) 'char' : 'n'\n│  └──(21, 23) 'number' : '11'\n│     ├──(21, 22) 'digit' : '1'\n│     └──(22, 23) 'digit' : '1'\n├──(24, 33) 'phrase' : 'TWELVE 12'\n│  ├──(24, 30) 'word' : 'TWELVE'\n│  │  ├──(24, 25) 'char' : 'T'\n│  │  ├──(25, 26) 'char' : 'W'\n│  │  ├──(26, 27) 'char' : 'E'\n│  │  ├──(27, 28) 'char' : 'L'\n│  │  ├──(28, 29) 'char' : 'V'\n│  │  └──(29, 30) 'char' : 'E'\n│  └──(31, 33) 'number' : '12'\n│     ├──(31, 32) 'digit' : '1'\n│     └──(32, 33) 'digit' : '2'\n└──(34, 45) 'phrase' : 'thirteen 13'\n   ├──(34, 42) 'word' : 'thirteen'\n   │  ├──(34, 35) 'char' : 't'\n   │  ├──(35, 36) 'char' : 'h'\n   │  ├──(36, 37) 'char' : 'i'\n   │  ├──(37, 38) 'char' : 'r'\n   │  ├──(38, 39) 'char' : 't'\n   │  ├──(39, 40) 'char' : 'e'\n   │  ├──(40, 41) 'char' : 'e'\n   │  └──(41, 42) 'char' : 'n'\n   └──(43, 45) 'number' : '13'\n      ├──(43, 44) 'digit' : '1'\n      └──(44, 45) 'digit' : '3'\n```\n \nAnd you can search the tree using Pawpaw's *plumule*, a powerful XPATH-like structured query language:\n\n ```python\n >>> print(*doc.find_all('**[d:digit]'), sep=', ')  # all digits\n9, 1, 0, 1, 1, 1, 2, 1, 3\n >>> print(*doc.find_all('**[d:number]{</*[s:i]}'), sep=', ')  # all numbers with 'i' in their name\n9, 13\n ```\n\nThis example uses regular expressions as a source, however, Pawpaw is able to work with many other input types.  For example, you can use libraries such as [NLTK](https://www.nltk.org/) to grow Pawpaw trees, or, you can use Pawpaw's included parser framework to build your own sophisticated parsers quickly and easily.\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n<!-- GETTING STARTED -->\n## Getting Started\n\n### Prerequisites\n\nPawpaw has been written and tested using Python 3.10.  The only dependency is\n``regex``, which will be fetched and installed automatically if you install Pawpaw\nwith pip or conda.\n\n### Installation Options\n\nThere are lots of ways to install Pawpaw.  Versioned instances that have passed all automated tests are available from [PyPI](https://pypi.org/project/pawpaw/):\n\n1. Install with pip from PyPI:  \n   ```\n   pip install pawpaw\n   ```\n   \n2. Install with conda from PyPI:\n   ```\n   conda activate myenv\n   conda install git pip\n   pip install pawpaw\n   ```\n\nAlternatively, you can pull from the main branch at GitHub.  This will ensure that you have the latest code, however, the main branch can potentially have internal inconsistencies and/or failed tests:\n\n1. Install with pip from GitHub:\n   ```\n   pip install git+https://github.com/rlayers/pawpaw.git\n   ```\n\n2. Install with conda from GitHub:\n   ```\n   conda activate myenv\n   conda install git pip\n   pip install git+https://github.com/rlayers/pawpaw.git\n   ```\n\n3. Clone the repo with git from GitHub:\n   ```\n   git clone https://github.com/rlayers/pawpaw\n   ```\n   \n### Verify Installation\n\nWhichever way you fetch Pawpaw, you can easily verify that it is installed correctly.  Just open Python prompt and type:\n\n```python\n>>> from pawpaw import Ito\n>>> Ito('Hello, World!')\nIto('Hello, World!', 0, 13, None)\n```\n  \nIf your last line looks like this, you are up and running with Pawpaw!\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n<!-- HISTORY & ROADMAP -->\n## History & Roadmap\n\nPawpaw is a rewrite of *desponia*, a now-deprecated Python 2.x segmentation framework that was itself based on a prior framework called *Ito*.  Currently in alpha, many components and features are production ready.  However, documentation is still being written and some newer features are still undergoing work.  A rough outline of which components are finalized is as follows:\n\n- [x] arborform\n  - [x] itorator\n    - [x] Desc\n    - [x] Extract\n    - [x] Reflect\n    - [x] Split\n    - [x] ValueFunc\n  - [x] postorator\n    - [ ] StackedReduce\n    - [x] WindowedJoin\n- [x] core\n  - [x] Errors\n  - [x] Furcation\n  - [x] Infix\n  - [x] Ito\n  - [x] ItoChildren\n  - [x] nuco\n  - [x] PredicatedValue\n  - [x] Span\n  - [x] Types\n- [ ] documentation & examples\n- [x] query\n  - [x] radicle query engine\n  - [x] plumule\n- [ ] nlp\n- [ ] visualization\n  - [x] ascibox\n  - [x] highlighter\n  - [ ] pepo\n  - [x] sgr\n- [x] xml\n  - [x] XmlHelper\n  - [x] XmlParser\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n<!-- CONTRIBUTING -->\n## Contributing\n\nContributions to Pawpaw are **greatly appreciated** - please refer to the [contributing guildelines](/contributing.md) for details.\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n<!-- LICENSE -->\n## License\n\nDistributed under the MIT License. See [LICENSE](LICENSE) for more information.\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n\n<!-- CONTACTS -->\n## Contacts\n\nRobert L. Ayers:&nbsp;&nbsp;<a alt=\"e-mail\" href=\"email@a.nov.guy@gmail.com\">a.nov.guy@gmail.com</a>\n<!-- &nbsp;&nbsp;&nbsp;[☕ Buy me a coffee](https://ko-fi.com/jlawrence) -->\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n<!-- REFERENCES -->\n## References\n\n* [Matthew Barnett's regex](https://github.com/mrabarnett/mrab-regex)\n* [NLTK](https://www.nltk.org/)\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n<!-- MARKDOWN LINKS & IMAGES -->\n<!-- https://www.markdownguide.org/basic-syntax/#reference-style-links -->\n\n<!-- Palette Info:\n  \"Oriental Beauty\"\n  533E30\tD2AC70\tE4D1AE\t517D3D\t90C246\n  https://www.schemecolor.com/oriental-beauty-color-combination.php\n-->\n\n[repo]: https://github.com/rlayers/pawpaw\n\n[byline-img]: https://img.shields.io/badge/-High%20Performance%20Text%20Segmentation%2C%20Parsing%2C%20%26%20Query-FFFFFF\n\n[byline2-img]: https://readme-typing-svg.demolab.com?font=Fira+Code&weight=800&duration=500&pause=1500&color=533E30&vCenter=true&width=375&height=25&lines=High+Performance+Text+Segmentation\n\n[Python-shield]: https://img.shields.io/badge/python-≥3.10-517D3D.svg?style=flat\n[Python-url]: https://www.python.org\n\n[contributors-shield]: https://img.shields.io/github/contributors/rlayers/pawpaw.svg?color=90C246&style=flat\n[contributors-url]: https://github.com/rlayers/pawpaw/graphs/contributors\n\n[watchers-shield]: https://img.shields.io/github/watchers/rlayers/pawpaw.svg?color=E4D1AE&style=flat\n[watchers-url]: https://github.com/rlayers/pawpaw/watchers\n\n[issues-shield]: https://img.shields.io/github/issues/rlayers/pawpaw.svg?style=flat\n[issues-url]: https://github.com/rlayers/pawpaw/issues\n\n[forks-social]: https://img.shields.io/github/forks/rlayers/pawpaw.svg?style=social\n[forks-shield]: https://img.shields.io/github/forks/rlayers/pawpaw.svg?color=D2AC70&style=flat\n[forks-url]: https://github.com/rlayers/pawpaw/network/members\n\n[license-shield]: https://img.shields.io/github/license/rlayers/pawpaw.svg?color=533E30&style=flat\n[license-url]: https://github.com/rlayers/pawpaw/blob/master/LICENSE\n\n[stars-social]: https://img.shields.io/github/stars/rlayers/pawpaw.svg?style=social\n[stars-shield]: https://img.shields.io/github/stars/rlayers/pawpaw.svg?style=flat\n[stars-url]: https://github.com/rlayers/pawpaw/stargazers\n\n[PyCharm-shield]: https://img.shields.io/badge/PyCharm-000000.svg?&style=flat&logo=PyCharm&logoColor=white\n[PyCharm-url]: https://www.jetbrains.com/pycharm/\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "extract-text,hierarchical-text-segmentation,information-extraction,knowledge-graph,nlp,python,text-processing,text-segmentation,xml-parser",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pawpaw",
    "package_url": "https://pypi.org/project/pawpaw/",
    "platform": null,
    "project_url": "https://pypi.org/project/pawpaw/",
    "project_urls": {
      "Bug Tracker": "https://github.com/rlayers/pawpaw/issues",
      "Homepage": "https://github.com/rlayers/pawpaw"
    },
    "release_url": "https://pypi.org/project/pawpaw/1.0.0a9/",
    "requires_dist": [
      "regex>=2022.7.9"
    ],
    "requires_python": ">=3.10",
    "summary": "High Performance Text Processing & Segmentation Framework",
    "version": "1.0.0a9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16898194,
  "releases": {
    "1.0.0a4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "484974072a3966517c3b1cfe21f674c13286970aa97389e10e589918c5b1841f",
          "md5": "9b7f1cd76270386031bdb93c87b1d14a",
          "sha256": "81c69de3585eb465621ad27a6b34f1144bb4b10868adc609e3e5afb02fef3569"
        },
        "downloads": -1,
        "filename": "pawpaw-1.0.0a4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b7f1cd76270386031bdb93c87b1d14a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 35182,
        "upload_time": "2022-11-17T05:14:46",
        "upload_time_iso_8601": "2022-11-17T05:14:46.644819Z",
        "url": "https://files.pythonhosted.org/packages/48/49/74072a3966517c3b1cfe21f674c13286970aa97389e10e589918c5b1841f/pawpaw-1.0.0a4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72d0b1be26a71fd269826ce4a812d5e46680d1cf2d361650741d5a3a0bb057f8",
          "md5": "98c2c181f8fc0aac659b77c6ef803179",
          "sha256": "bf2957349c19da5385ff61da328d0e55054ba0bb9cf30d4a8fb1ceda45862c1f"
        },
        "downloads": -1,
        "filename": "pawpaw-1.0.0a4.tar.gz",
        "has_sig": false,
        "md5_digest": "98c2c181f8fc0aac659b77c6ef803179",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1166898,
        "upload_time": "2022-11-17T05:14:48",
        "upload_time_iso_8601": "2022-11-17T05:14:48.075747Z",
        "url": "https://files.pythonhosted.org/packages/72/d0/b1be26a71fd269826ce4a812d5e46680d1cf2d361650741d5a3a0bb057f8/pawpaw-1.0.0a4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1d59595ca79b64af17e81c674cb927cdb479ab55bb463037a5e216e922b54b5",
          "md5": "78c93d64edd3b35ef4ce6e1114dfce25",
          "sha256": "2e412136e3c76c3f9c7a480d71f7671bb9b77296c9d4fffe431b13ef672a11c8"
        },
        "downloads": -1,
        "filename": "pawpaw-1.0.0a5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78c93d64edd3b35ef4ce6e1114dfce25",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 44199,
        "upload_time": "2022-12-03T16:12:46",
        "upload_time_iso_8601": "2022-12-03T16:12:46.075692Z",
        "url": "https://files.pythonhosted.org/packages/a1/d5/9595ca79b64af17e81c674cb927cdb479ab55bb463037a5e216e922b54b5/pawpaw-1.0.0a5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "157087e41f2e5b6620a6eba216bf949bc744348c5e80bd6e6c2dbc585a81dba5",
          "md5": "eee6aef77a8deff6e6ecafaf2a89ca86",
          "sha256": "d17e1ebf5e3300315bcadfe8da69de15803777fd65e2b1267f8ada704f6e7132"
        },
        "downloads": -1,
        "filename": "pawpaw-1.0.0a5.tar.gz",
        "has_sig": false,
        "md5_digest": "eee6aef77a8deff6e6ecafaf2a89ca86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1180367,
        "upload_time": "2022-12-03T16:12:48",
        "upload_time_iso_8601": "2022-12-03T16:12:48.425937Z",
        "url": "https://files.pythonhosted.org/packages/15/70/87e41f2e5b6620a6eba216bf949bc744348c5e80bd6e6c2dbc585a81dba5/pawpaw-1.0.0a5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f897a1ff878353dc1413d5f8676545bbc7c4bf7187863c82701ec2bd52904a2",
          "md5": "408ac1b08bdbaf127f660dfe13a5a38b",
          "sha256": "6c627ffa8630a14423f4ab51598e407337732f55508a54db9b06782f29db32f9"
        },
        "downloads": -1,
        "filename": "pawpaw-1.0.0a6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "408ac1b08bdbaf127f660dfe13a5a38b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 47263,
        "upload_time": "2022-12-22T22:09:30",
        "upload_time_iso_8601": "2022-12-22T22:09:30.524608Z",
        "url": "https://files.pythonhosted.org/packages/8f/89/7a1ff878353dc1413d5f8676545bbc7c4bf7187863c82701ec2bd52904a2/pawpaw-1.0.0a6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3f0b6132fc8b2190f9a6c9e29203fe2fd0ef0964028e1221b174b8701e238d6",
          "md5": "8efec766d915c8d4130d6a85cd43dfb8",
          "sha256": "46742a80ff9292930a108d896c329b875c65fac1cecb0c3653d32ef3ea46d2f5"
        },
        "downloads": -1,
        "filename": "pawpaw-1.0.0a6.tar.gz",
        "has_sig": false,
        "md5_digest": "8efec766d915c8d4130d6a85cd43dfb8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1198580,
        "upload_time": "2022-12-22T22:09:33",
        "upload_time_iso_8601": "2022-12-22T22:09:33.166023Z",
        "url": "https://files.pythonhosted.org/packages/c3/f0/b6132fc8b2190f9a6c9e29203fe2fd0ef0964028e1221b174b8701e238d6/pawpaw-1.0.0a6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ef7ec8b5963b6df42dbeb1f3a2da0983ac3c5e878abeae1442165d592bd60a1",
          "md5": "432bbd4c187709567e8a3903fef84af0",
          "sha256": "ac5c878446a8ef920ea160082c6f96587a9edb2628caa64b0e964ceb2fa9448e"
        },
        "downloads": -1,
        "filename": "pawpaw-1.0.0a7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "432bbd4c187709567e8a3903fef84af0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 53463,
        "upload_time": "2023-01-13T06:56:03",
        "upload_time_iso_8601": "2023-01-13T06:56:03.551520Z",
        "url": "https://files.pythonhosted.org/packages/3e/f7/ec8b5963b6df42dbeb1f3a2da0983ac3c5e878abeae1442165d592bd60a1/pawpaw-1.0.0a7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb8ab93df2c7b9998db78237d514dc34d6d8ba05729bc3a66de1df741a7329fe",
          "md5": "8c14d74d36dab83473a8c6735b4238cf",
          "sha256": "631923fd873302d47f5e37d1fcecbb9403ab01d4f0b5ebcad712553f6e6e1aac"
        },
        "downloads": -1,
        "filename": "pawpaw-1.0.0a7.tar.gz",
        "has_sig": false,
        "md5_digest": "8c14d74d36dab83473a8c6735b4238cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1212056,
        "upload_time": "2023-01-13T06:56:07",
        "upload_time_iso_8601": "2023-01-13T06:56:07.156581Z",
        "url": "https://files.pythonhosted.org/packages/eb/8a/b93df2c7b9998db78237d514dc34d6d8ba05729bc3a66de1df741a7329fe/pawpaw-1.0.0a7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bac995724f49e3c44a46916bdb3258f34b861b108d9b995fa1f1c487333c94b",
          "md5": "3566f5e7b1bc45a19324808d82bf666d",
          "sha256": "174839e3a5ff3bda34543d45b33975706bbfa9f2e797fcc31bb842f78e651207"
        },
        "downloads": -1,
        "filename": "pawpaw-1.0.0a8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3566f5e7b1bc45a19324808d82bf666d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 59748,
        "upload_time": "2023-02-03T21:40:16",
        "upload_time_iso_8601": "2023-02-03T21:40:16.970271Z",
        "url": "https://files.pythonhosted.org/packages/5b/ac/995724f49e3c44a46916bdb3258f34b861b108d9b995fa1f1c487333c94b/pawpaw-1.0.0a8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e38139e6da52fcf9f88e49a87eb708f08c574a75bc706b26abce8d5921c445f",
          "md5": "1408111b5f3caa8b1c0c6c6d3794a8ee",
          "sha256": "10b8665bb6132360f6b4215b6aa1eddcc842447c792ad442847762cf72993ee5"
        },
        "downloads": -1,
        "filename": "pawpaw-1.0.0a8.tar.gz",
        "has_sig": false,
        "md5_digest": "1408111b5f3caa8b1c0c6c6d3794a8ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1224878,
        "upload_time": "2023-02-03T21:40:21",
        "upload_time_iso_8601": "2023-02-03T21:40:21.729295Z",
        "url": "https://files.pythonhosted.org/packages/4e/38/139e6da52fcf9f88e49a87eb708f08c574a75bc706b26abce8d5921c445f/pawpaw-1.0.0a8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd4e948b0942bd799d8cce7aa5bff5fa10340b07214b1e5e8ae43dac3337ac23",
          "md5": "95534581c4af06461a4df83c6281c605",
          "sha256": "9c8d8711df3762e4e47ffd1491cbf6dbe0123606e87c242adcb8238c43978eec"
        },
        "downloads": -1,
        "filename": "pawpaw-1.0.0a9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95534581c4af06461a4df83c6281c605",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 60821,
        "upload_time": "2023-02-17T03:26:22",
        "upload_time_iso_8601": "2023-02-17T03:26:22.136710Z",
        "url": "https://files.pythonhosted.org/packages/dd/4e/948b0942bd799d8cce7aa5bff5fa10340b07214b1e5e8ae43dac3337ac23/pawpaw-1.0.0a9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99615aeda6c2959b7174ce8b3a2c7b38f7a0a3685069fa0d2de94b2ed326fb5b",
          "md5": "da083104cc865b72f60e2030bbcccdff",
          "sha256": "57622c5e5f26a27eec8c303cacbcc9105a12b46e67fd66e882f6f9e52895ddf1"
        },
        "downloads": -1,
        "filename": "pawpaw-1.0.0a9.tar.gz",
        "has_sig": false,
        "md5_digest": "da083104cc865b72f60e2030bbcccdff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1233426,
        "upload_time": "2023-02-17T03:26:40",
        "upload_time_iso_8601": "2023-02-17T03:26:40.662106Z",
        "url": "https://files.pythonhosted.org/packages/99/61/5aeda6c2959b7174ce8b3a2c7b38f7a0a3685069fa0d2de94b2ed326fb5b/pawpaw-1.0.0a9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd4e948b0942bd799d8cce7aa5bff5fa10340b07214b1e5e8ae43dac3337ac23",
        "md5": "95534581c4af06461a4df83c6281c605",
        "sha256": "9c8d8711df3762e4e47ffd1491cbf6dbe0123606e87c242adcb8238c43978eec"
      },
      "downloads": -1,
      "filename": "pawpaw-1.0.0a9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "95534581c4af06461a4df83c6281c605",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 60821,
      "upload_time": "2023-02-17T03:26:22",
      "upload_time_iso_8601": "2023-02-17T03:26:22.136710Z",
      "url": "https://files.pythonhosted.org/packages/dd/4e/948b0942bd799d8cce7aa5bff5fa10340b07214b1e5e8ae43dac3337ac23/pawpaw-1.0.0a9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99615aeda6c2959b7174ce8b3a2c7b38f7a0a3685069fa0d2de94b2ed326fb5b",
        "md5": "da083104cc865b72f60e2030bbcccdff",
        "sha256": "57622c5e5f26a27eec8c303cacbcc9105a12b46e67fd66e882f6f9e52895ddf1"
      },
      "downloads": -1,
      "filename": "pawpaw-1.0.0a9.tar.gz",
      "has_sig": false,
      "md5_digest": "da083104cc865b72f60e2030bbcccdff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 1233426,
      "upload_time": "2023-02-17T03:26:40",
      "upload_time_iso_8601": "2023-02-17T03:26:40.662106Z",
      "url": "https://files.pythonhosted.org/packages/99/61/5aeda6c2959b7174ce8b3a2c7b38f7a0a3685069fa0d2de94b2ed326fb5b/pawpaw-1.0.0a9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}