{
  "info": {
    "author": "Wouter Lueks, Bogdan Kulynych, Jules Fasquelle, Simon Le Bail-Collet",
    "author_email": "wouter.lueks@epfl.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Security :: Cryptography",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "####\nzksk\n####\n\n|build_status| |docs_status| |coverage| |license| |arxiv|\n\n.. |build_status| image:: https://travis-ci.org/spring-epfl/zksk.svg?branch=master\n   :target: https://travis-ci.org/spring-epfl/zksk\n   :alt: Build status\n\n.. |docs_status| image:: https://readthedocs.org/projects/zksk/badge/?version=latest\n   :target: https://zksk.readthedocs.io/?badge=latest\n   :alt: Documentation status\n\n.. |coverage| image:: https://codecov.io/gh/spring-epfl/zksk/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/spring-epfl/zksk\n   :alt: Test coverage\n\n.. |license| image:: https://img.shields.io/badge/License-MIT-yellow.svg\n   :target: https://opensource.org/licenses/MIT\n   :alt: MIT License\n\n.. |arxiv| image:: https://img.shields.io/badge/cs.CR-arXiv%3A1911.02459-red\n   :target: https://arxiv.org/abs/1911.02459\n   :alt: Paper on arXiv\n\n.. start-description-marker-do-not-remove\n\nZero-Knowledge Swiss Knife: Python library for prototyping composable zero-knowledge proofs in the\ndiscrete-log setting.\n\n--------------------------------------------------------------------------------------------------\n\nLet's say Peggy commits to a secret bit and wants to prove to Victor in zero knowledge that she\nknows this bit—that is, without revealing it. In Camenisch-Stadler notation, we can write:\n\n.. image:: https://raw.githubusercontent.com/spring-epfl/zksk/master/images/bit_proof_stmt.svg?sanitize=true\n   :alt: PK{ (r): (C = rH) ∨ (C - G = rH) }\n\nTo implement this zero-knowledge proof, Peggy will run:\n\n.. code-block:: python\n\n    from zksk import Secret, DLRep\n    from zksk import utils\n\n    # Setup: Peggy and Victor agree on two group generators.\n    G, H = utils.make_generators(num=2, seed=42)\n    # Setup: generate a secret randomizer.\n    r = Secret(utils.get_random_num(bits=128))\n\n    # This is Peggy's secret bit.\n    top_secret_bit = 1\n\n    # A Pedersen commitment to the secret bit.\n    C = top_secret_bit * G + r.value * H\n\n    # Peggy's definition of the proof statement, and proof generation.\n    # (The first or-clause corresponds to the secret value 0, and the second to the value 1. Because\n    # the real value of the bit is 1, the clause that corresponds to zero is marked as simulated.)\n    stmt = DLRep(C, r * H, simulated=True) | DLRep(C - G, r * H)\n    zk_proof = stmt.prove()\n\n\nVictor will receive the commitment ``C`` and ``zk_proof`` from Peggy, and run this to verify the\nproof:\n\n.. code-block:: python\n\n    from zksk import Secret, DLRep\n\n    # Setup: get the agreed group generators.\n    G, H = utils.make_generators(num=2, seed=42)\n    # Setup: define a randomizer with an unknown value.\n    r = Secret()\n\n    stmt = DLRep(C, r * H) | DLRep(C - G, r * H)\n    assert stmt.verify(zk_proof)\n\nVictor is now convinced that Peggy knows the committed bit.\n\n--------------------------------------------------------------------------------------------\n\n===========================\nDocumentation and materials\n===========================\n\n+----------------+--------------------------------------------------------------------+\n| Docs           | https://zksk.readthedocs.io                                        |\n+----------------+--------------------------------------------------------------------+\n| Academic paper | https://arxiv.org/abs/1911.02459 —                                 |\n|                | theoretical details                                                |\n+----------------+--------------------------------------------------------------------+\n\n.. end-description-marker-do-not-remove\n\n> **Warning.** Please don't use this software for anything mission-critical. It is designed for\nquick protyping of privacy-enhancing technologies, not production use.\n\n--------------------------------------------------------------------------------------------\n\n\n===============\nGetting started\n===============\n\n.. start-getting-started-marker-do-not-remove\n\nYou need to have Python 3.6 or higher to use zksk. The library is tested and supported on\nDebian-based systems. Mac support is not guaranteed.\n\nYou can install zksk using pip:\n\n.. code-block:: bash\n\n   pip install git+https://github.com/spring-epfl/zksk\n\nTo make sure everything is in order, you can run unit tests. For that, install the dev version of\nthe package:\n\n.. code-block:: bash\n\n   pip install \"git+https://github.com/spring-epfl/zksk#egg=zksk[dev]\"\n\nThen, run the tests with pytest:\n\n.. code-block:: bash\n\n   pytest\n\n.. end-getting-started-marker-do-not-remove\n\n============\nContributing\n============\n\nSee the `contributing document <CONTRIBUTING.rst>`_.\n\n======\nCiting\n======\n\n.. start-citing-do-not-remove\n\nIf you use zksk in your research, please cite like this:\n\n.. code-block:: bibtex\n\n    @inproceedings{LueksKFBT19,\n      author    = {Wouter Lueks and\n                   Bogdan Kulynych and\n                   Jules Fasquelle and\n                   Simon Le Bail{-}Collet and\n                   Carmela Troncoso},\n      title     = {zksk: {A} Library for Composable Zero-Knowledge Proofs},\n      booktitle = {Proceedings of the 18th {ACM} Workshop on Privacy in the Electronic\n                   Society ({WPES@CCS})},\n      pages     = {50--54},\n      year      = {2019},\n    }\n\n.. end-citing-do-not-remove\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://zksk.readthedocs.io",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zksk",
    "package_url": "https://pypi.org/project/zksk/",
    "platform": "",
    "project_url": "https://pypi.org/project/zksk/",
    "project_urls": {
      "Homepage": "https://zksk.readthedocs.io"
    },
    "release_url": "https://pypi.org/project/zksk/0.0.2/",
    "requires_dist": [
      "bplib",
      "petlib",
      "black ; extra == 'dev'",
      "m2r ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "sphinx ; extra == 'dev'",
      "sphinx-rtd-theme ; extra == 'dev'",
      "m2r ; extra == 'doc'",
      "sphinx ; extra == 'doc'",
      "sphinx-rtd-theme ; extra == 'doc'",
      "pytest ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Zero-Knowledge Swiss Knife: Python library for prototyping composable zero-knowledge proofs.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7587602,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28b2660a3b2e5cf34f813be5606c8bcd1d18680b107912bfb495a5c40c5f1ccb",
          "md5": "0b8de5ef14b89df5dd44eb554ade82d0",
          "sha256": "4c519eed8664a2454bd212f14180e7210eb3c64949439dc519e43fc6766204ec"
        },
        "downloads": -1,
        "filename": "zksk-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b8de5ef14b89df5dd44eb554ade82d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35193,
        "upload_time": "2020-06-29T15:01:41",
        "upload_time_iso_8601": "2020-06-29T15:01:41.024742Z",
        "url": "https://files.pythonhosted.org/packages/28/b2/660a3b2e5cf34f813be5606c8bcd1d18680b107912bfb495a5c40c5f1ccb/zksk-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d14348ae02e9074202aad48d33fa79c37a97ee754dcf99d5131b6f4aa736991f",
          "md5": "72e09db398001d3ca52b4f5490897198",
          "sha256": "a2bc222d384c1c4583308f5f246e83d4eaf7a54cdc6476d7f6764128cfac2ef9"
        },
        "downloads": -1,
        "filename": "zksk-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "72e09db398001d3ca52b4f5490897198",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30533,
        "upload_time": "2020-06-29T15:01:44",
        "upload_time_iso_8601": "2020-06-29T15:01:44.277349Z",
        "url": "https://files.pythonhosted.org/packages/d1/43/48ae02e9074202aad48d33fa79c37a97ee754dcf99d5131b6f4aa736991f/zksk-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28b2660a3b2e5cf34f813be5606c8bcd1d18680b107912bfb495a5c40c5f1ccb",
        "md5": "0b8de5ef14b89df5dd44eb554ade82d0",
        "sha256": "4c519eed8664a2454bd212f14180e7210eb3c64949439dc519e43fc6766204ec"
      },
      "downloads": -1,
      "filename": "zksk-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0b8de5ef14b89df5dd44eb554ade82d0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 35193,
      "upload_time": "2020-06-29T15:01:41",
      "upload_time_iso_8601": "2020-06-29T15:01:41.024742Z",
      "url": "https://files.pythonhosted.org/packages/28/b2/660a3b2e5cf34f813be5606c8bcd1d18680b107912bfb495a5c40c5f1ccb/zksk-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d14348ae02e9074202aad48d33fa79c37a97ee754dcf99d5131b6f4aa736991f",
        "md5": "72e09db398001d3ca52b4f5490897198",
        "sha256": "a2bc222d384c1c4583308f5f246e83d4eaf7a54cdc6476d7f6764128cfac2ef9"
      },
      "downloads": -1,
      "filename": "zksk-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "72e09db398001d3ca52b4f5490897198",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30533,
      "upload_time": "2020-06-29T15:01:44",
      "upload_time_iso_8601": "2020-06-29T15:01:44.277349Z",
      "url": "https://files.pythonhosted.org/packages/d1/43/48ae02e9074202aad48d33fa79c37a97ee754dcf99d5131b6f4aa736991f/zksk-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}