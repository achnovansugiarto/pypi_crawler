{
  "info": {
    "author": "Gary Wilson Jr. and Michael Stathopoulos",
    "author_email": "UNKNOWN",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Topic :: Communications",
      "Topic :: Scientific/Engineering",
      "Topic :: System :: Clustering"
    ],
    "description": "=====\nPaxos\n=====\n\nThis is a demo implementation of the Paxos algorithm implemented in Python.\n\n\nRequirements\n============\n* Python 3\n\n\nInstall\n=======\n::\n\n    pip install paxos\n\n\nImplementation Notes\n====================\n\n* The proposer, acceptor, and learner roles of the Paxos algorithm are\n  implemented in with classes that subclass from a common ``Agent`` class.\n* Each role/agent is run in a separate process.\n* Communication between processes occurs using ``Queue`` objects, so all\n  processes are run on the same machine.\n* Paxos Made Simple states that \"we require that different proposals have\n  different numbers.\"  To achieve this, we start each proposer process's\n  proposal number sequence equal to its own PID, and then increment the number\n  for each new proposal by the number of proposer processes in the system.\n  This also seems to be the method used in the \"Paxos Made Live\" paper by\n  Google employees.\n* It is assumed that all processes in the system be considered members of the\n  system from the beginning, without needing to explicitly join the system by\n  getting a decree passed.\n\nReferences\n==========\n* Lamport's first paper on the subject: `The Part-Time Parliament`_\n* Lamport's later paper on Paxos, a simplified version of the first without any\n  Greek references: `Paxos Made Simple`_\n* Google employees' experience in building a Paxos implementation for Chubby:\n  `Paxos Made Live - An Engineering Perspective`_\n\n.. _The Part-Time Parliament: http://research.microsoft.com/en-us/um/people/lamport/pubs/pubs.html#lamport-paxos\n.. _Paxos Made Simple: http://research.microsoft.com/en-us/um/people/lamport/pubs/pubs.html#paxos-simple\n.. _Paxos Made Live - An Engineering Perspective:\n\n\nTODO\n====\n* Add a collapsed version of the roles so that each process plays all of the\n  roles.\n\n  * Once we have a collapsed version, leaders should retry a client's request\n    if they determine that the instance hasn't been decided after some timeout\n    amount of time.  This should fix a couple issues:\n\n    1. Learners are not able to determine whether or not there are more values\n       to learn (when it is the last value they are missing).\n\n    2. Since leaders are currently remembering the original value of each\n       client request they propose, if a Proposer is asked to retry an\n       instance (e.g. from a Learner that is missing a value) then it is\n       possible that the value learned will be None in the situation where no\n       Acceptor has yet accepted a value in that instance (which means the\n       Proposer should specify the value, but since it is not remembering the\n       original values it just proposes None).\n\n* When a learner asks a proposer to retry, the proposer shouldn't retry if it\n  has already retried that proposal within a certain time period because\n  otherwise, by re-upping the proposal number it would be guaranteed to not\n  have a successful agreement in that instance it is retrying.\n\n* With a consistent leader, only perform phase one once.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gdub/python-paxos",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "paxos",
    "package_url": "https://pypi.org/project/paxos/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/paxos/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/gdub/python-paxos"
    },
    "release_url": "https://pypi.org/project/paxos/0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A demo implementation of the Paxos algorithm implemented in Python.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 761356,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99dfe94063f59e71f7a4b42568b03c7aa6d499edff6834cbd8bac55561886c27",
          "md5": "84214b7d9b1b3dfec804e79fa9d6eb0a",
          "sha256": "86790c278bda4b6e1bb21f27e7d2fc1c74d6d67e7ff76e351e0f4c3e4d7222b5"
        },
        "downloads": -1,
        "filename": "paxos-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "84214b7d9b1b3dfec804e79fa9d6eb0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16842,
        "upload_time": "2012-07-28T08:49:12",
        "upload_time_iso_8601": "2012-07-28T08:49:12.122001Z",
        "url": "https://files.pythonhosted.org/packages/99/df/e94063f59e71f7a4b42568b03c7aa6d499edff6834cbd8bac55561886c27/paxos-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99dfe94063f59e71f7a4b42568b03c7aa6d499edff6834cbd8bac55561886c27",
        "md5": "84214b7d9b1b3dfec804e79fa9d6eb0a",
        "sha256": "86790c278bda4b6e1bb21f27e7d2fc1c74d6d67e7ff76e351e0f4c3e4d7222b5"
      },
      "downloads": -1,
      "filename": "paxos-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "84214b7d9b1b3dfec804e79fa9d6eb0a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16842,
      "upload_time": "2012-07-28T08:49:12",
      "upload_time_iso_8601": "2012-07-28T08:49:12.122001Z",
      "url": "https://files.pythonhosted.org/packages/99/df/e94063f59e71f7a4b42568b03c7aa6d499edff6834cbd8bac55561886c27/paxos-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}