{
  "info": {
    "author": "Cameron Simpson",
    "author_email": "cs@cskk.id.au",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Support for ID3 tags.\nA cs.binary based parser/transcriber for ID3 tags\nand a convenience wrapper for Doug Zongker's pyid3lib:\nhttp://pyid3lib.sourceforge.net/\n\n*Latest release 20211208*:\n* ID3V1 and ID3V2 support.\n* ID3V1Frame,ID3V2Frame: new .tagset() method to return a TagSet.\n* ID3V1Frame.parse: trim trailing NULs from the comment field.\n* Assorted other small changes.\n\n## Class `EnhancedTagFrame(cs.binary.SimpleBinary,types.SimpleNamespace,cs.binary.AbstractBinary,cs.binary.BinaryMixin)`\n\nAn Enhanced Tag.\n\n### Method `EnhancedTagFrame.parse(bfr)`\n\nParse an enhanced tag.\n\n### Method `EnhancedTagFrame.transcribe(self)`\n\nTranscribe the enhanced tag.\n\n## Class `ID3(types.SimpleNamespace)`\n\nWrapper for pyid3lib.tag.\n\nOBSOLETE.\nGoing away when I'm sure the other classes cover all this stuff off.\n\n### Method `ID3.__getitem__(self, key)`\n\nFetch the text of the specified frame.\n\n### Method `ID3.__setitem__(self, key, value)`\n\nSet a frame text to `value`.\n\n### Method `ID3.clean(self, attr)`\n\nStrip NULs and leading and trailing whitespace.\n\n### Method `ID3.flush(self, *a, **kw)`\n\nUpdate the ID3 tags in the file if modified, otherwise no-op.\nClears the modified flag.\n\n### Method `ID3.get_frame(self, frameid)`\n\nReturn the frame with the specified `frameid`, or None.\n\n### Property `ID3.tag`\n\nThe tag mapping from `self.pathname`.\n\n## Class `ID3V1Frame(cs.binary.SimpleBinary,types.SimpleNamespace,cs.binary.AbstractBinary,cs.binary.BinaryMixin)`\n\nAn ID3V1 or ID3v1.1 data frame as described in wikipedia:\nhttps://en.wikipedia.org/wiki/ID3\n\nThe following fields are defined:\n* `title`: up to 30 ASCII characters\n* `artist`: up to 30 ASCII characters\n* `album`: up to 30 ASCII characters\n* `year`: 4 digit ASCII year\n* `comment`: up to 30 ASCII bytes, NUL or whitespace padded,\n  up to 28 ASCII bytes if `track` is nonzero\n* `track`: 0 for no track, a number from 1 through 255 otherwise;\n  if nonzero then the comment field may only be up to 28 bytes long\n* `genre_id`: a number value from 0 to 255\n\n### Method `ID3V1Frame.parse(bfr)`\n\nParse a 128 byte ID3V1 or ID3v1.1 record.\n\n### Method `ID3V1Frame.tagset(self)`\n\nReturn a `TagSet` with the ID3 tag information.\n\n### Method `ID3V1Frame.transcribe(self)`\n\nTranscribe the ID3V1 frame.\n\n## Class `ID3V22TagDataFrame(cs.binary.SimpleBinary,types.SimpleNamespace,cs.binary.AbstractBinary,cs.binary.BinaryMixin)`\n\nAn ID3 v2.2.0 tag data frame.\n\nReference doc: https://id3.org/id3v2-00\n\n### Method `ID3V22TagDataFrame.tag_id_class(tag_id)`\n\nReturn the `AbstractBinary` subclass to decode the a tag body from its tag id.\nReturn `None` for unrecognised ids.\n\n## Class `ID3V23TagDataFrame(cs.binary.SimpleBinary,types.SimpleNamespace,cs.binary.AbstractBinary,cs.binary.BinaryMixin)`\n\nAn ID3 v2.3.0 tag data frame.\n\nReference doc: https://id3.org/id3v2.3.0\n\n### Method `ID3V23TagDataFrame.tag_id_class(tag_id)`\n\nReturn the `AbstractBinary` subclass to decode the a tag body from its tag id.\nReturn `None` for unrecognised ids.\n\n## Class `ID3V2Frame(cs.binary.SimpleBinary,types.SimpleNamespace,cs.binary.AbstractBinary,cs.binary.BinaryMixin)`\n\nAn ID3v2 frame, based on the document at:\nhttps://web.archive.org/web/20120527211939/http://www.unixgods.org/~tilo/ID3/docs/id3v2-00.html\n\n### Method `ID3V2Frame.parse(bfr)`\n\nReturn an ID3v2 frame as described here:\n\n### Method `ID3V2Frame.tagset(self)`\n\nReturn a `TagSet` with the ID3 tag information.\n\n### Method `ID3V2Frame.transcribe(self)`\n\nTranscribe the ID3v2 frame.\n\n## Class `ID3V2Size(cs.binary.BinarySingleValue,cs.binary.AbstractBinary,cs.binary.BinaryMixin)`\n\nAn ID3v2 size field,\na big endian 4 byte field of 7-bit values, high bit 0.\n\n### Method `ID3V2Size.parse_value(bfr)`\n\nRead an ID3V2 size field from `bfr`, return the size.\n\n### Method `ID3V2Size.transcribe_value(size)`\n\nTranscribe a size in ID3v2 format.\n\n## Class `ID3V2Tags(types.SimpleNamespace)`\n\nAn `ID3V2Tags` maps ID3V2 tag information as a `SimpleNamespace`.\n\n### Method `ID3V2Tags.__getattr__(self, attr)`\n\nCatch frame id attrs and their wordier versions.\n\n### Method `ID3V2Tags.__setattr__(self, attr, value)`\n\nMap attributes to frame ids, set the corresponding `__dict__` entry.\n\n## Class `ISO8859_1NULString(cs.binary.BinarySingleValue,cs.binary.AbstractBinary,cs.binary.BinaryMixin)`\n\nA NUL terminated string encoded with ISO8859-1.\n\n### Method `ISO8859_1NULString.transcribe_value(s)`\n\npylint: disable=arguments-differ\n\n## Function `padded_text(text, length, encoding='ascii')`\n\nEncode `text` using `encoding`,\ncrop to a maximum of `length` bytes,\npad with NULs to `length` if necessary.\n\n## Function `parse_padded_text(bfr, length, encoding='ascii')`\n\nFetch `length` bytes from `bfr`,\nstrip trailing NULs,\ndecode using `encoding` (default `'ascii'`),\nstrip trailling whitepsace.\n\n## Class `TextEncodingClass(cs.binary.BinarySingleValue,cs.binary.AbstractBinary,cs.binary.BinaryMixin)`\n\nA trite class to parse the single byte text encoding field.\n\n## Class `TextInformationFrameBody(cs.binary.SimpleBinary,types.SimpleNamespace,cs.binary.AbstractBinary,cs.binary.BinaryMixin)`\n\nA text information frame.\n\n### Method `TextInformationFrameBody.parse(bfr)`\n\nParse the text from the frame.\n\n### Method `TextInformationFrameBody.transcribe(self)`\n\nTranscribe the frame.\n\n## Class `UCS2NULString(cs.binary.BinarySingleValue,cs.binary.AbstractBinary,cs.binary.BinaryMixin)`\n\nA NUL terminated string encoded with UCS-2.\n\nWe're cheating and using UTF16 for this.\n\n### Method `UCS2NULString.transcribe_value(s)`\n\nTranscribe text as UTF-16-LE with leading BOM and trailing NUL.\n\n# Release Log\n\n\n\n*Release 20211208*:\n* ID3V1 and ID3V2 support.\n* ID3V1Frame,ID3V2Frame: new .tagset() method to return a TagSet.\n* ID3V1Frame.parse: trim trailing NULs from the comment field.\n* Assorted other small changes.\n\n*Release 20160828*:\nUse \"install_requires\" instead of \"requires\" in DISTINFO.\n\n*Release 20150116.2*:\npyid3lib not on PyPI, remove from requirements and mention in README\n\n*Release 20150116*:\nInitial PyPI release.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/cameron_simpson/css/commits/all",
    "keywords": "python3",
    "license": "GNU General Public License v3 or later (GPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cs.id3",
    "package_url": "https://pypi.org/project/cs.id3/",
    "platform": "",
    "project_url": "https://pypi.org/project/cs.id3/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/cameron_simpson/css/commits/all"
    },
    "release_url": "https://pypi.org/project/cs.id3/20211208/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Support for ID3 tags. A cs.binary based parser/transcriber for ID3 tags and a convenience wrapper for Doug Zongker's pyid3lib: http://pyid3lib.sourceforge.net/",
    "version": "20211208",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12243249,
  "releases": {
    "20150116.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4615a8b1e37a687d6579388c4f3a821401e8497177a6a679bf031a08d5f66ae4",
          "md5": "2dcb19a27adc1d9a517cabe371830dc5",
          "sha256": "b458cc532a9b317e00dceceafad2e53f3e888dc24ad3da117130ed1b6d98bf6e"
        },
        "downloads": -1,
        "filename": "cs.id3-20150116.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2dcb19a27adc1d9a517cabe371830dc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4335,
        "upload_time": "2015-01-18T06:15:54",
        "upload_time_iso_8601": "2015-01-18T06:15:54.848816Z",
        "url": "https://files.pythonhosted.org/packages/46/15/a8b1e37a687d6579388c4f3a821401e8497177a6a679bf031a08d5f66ae4/cs.id3-20150116.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20211208": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c208eb625a0a350734b201044c892406f6de172c50c705db1822e7445c7abe7e",
          "md5": "433ca189244e63a250addab311b6b4f0",
          "sha256": "4e8d2cca3143a30ea02d91ea0d93316153d21fa89ff124e6469340b560720fa9"
        },
        "downloads": -1,
        "filename": "cs.id3-20211208.tar.gz",
        "has_sig": false,
        "md5_digest": "433ca189244e63a250addab311b6b4f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14370,
        "upload_time": "2021-12-08T09:55:03",
        "upload_time_iso_8601": "2021-12-08T09:55:03.419982Z",
        "url": "https://files.pythonhosted.org/packages/c2/08/eb625a0a350734b201044c892406f6de172c50c705db1822e7445c7abe7e/cs.id3-20211208.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c208eb625a0a350734b201044c892406f6de172c50c705db1822e7445c7abe7e",
        "md5": "433ca189244e63a250addab311b6b4f0",
        "sha256": "4e8d2cca3143a30ea02d91ea0d93316153d21fa89ff124e6469340b560720fa9"
      },
      "downloads": -1,
      "filename": "cs.id3-20211208.tar.gz",
      "has_sig": false,
      "md5_digest": "433ca189244e63a250addab311b6b4f0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14370,
      "upload_time": "2021-12-08T09:55:03",
      "upload_time_iso_8601": "2021-12-08T09:55:03.419982Z",
      "url": "https://files.pythonhosted.org/packages/c2/08/eb625a0a350734b201044c892406f6de172c50c705db1822e7445c7abe7e/cs.id3-20211208.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}