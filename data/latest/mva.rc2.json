{
  "info": {
    "author": "Naveen Goutham",
    "author_email": "naveen.goutham@outlook.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Documentation  \n\nA python package to adjust the bias of probabilistic forecasts/hindcasts using \"Mean and Variance Adjustment\" method.\n\nRead documentation at [https://github.com/gouthamnaveen/mva](https://github.com/gouthamnaveen/mva)\n\n_References_:\n\n[1] Torralba, V., Doblas-Reyes, F. J., MacLeod, D., Christel, I. & Davis, M. Seasonal Climate Prediction: A New Source of Information for the Management of Wind Energy Resources. Journal of Applied Meteorology and Climatology 56, 1231–1247 (2017).\n\n[2] Manzanas, R. et al. Bias adjustment and ensemble recalibration methods for seasonal forecasting: a comprehensive intercomparison using the C3S dataset. Clim Dyn 53, 1287–1305 (2019).\n\n## _Installation:_\n\n```sh\npip install mva\n```\n\n## _Parameters:_\n\n**hindcast**: numpy.ndarray\n\nThe hindcast (or training) data. Kindly maintain the shape of the array as (years/samples,time,ensemble-members,grid-points).\n\n**observation**: numpy.ndarray\n\nThe truth or observations corresponding to the hindcast. Kindly maintain the shape of the array as (years/samples,time,grid-points).\n    \n**forecast**: numpy.ndarray, optional\n\nThe forecast (or test) data. Kindly maintain the shape of the array as (time,ensemble-members,grid-points).\n\n_Note_: Kindly respect the array shapes even if the computation is done for one time/grid point/ensemble member.\n\n## _Methods:_\n\n**adjust_hindcast()**:\n\nThis method corrects the bias of the hindcast using hindcast of the remaining years in the set (i.e., leave-one-out approach) and the corresponding observations.\n\n_Returns_:\n\nbias_adjusted_hindcast (Note: It has the same shape as the hindcast)\n\n**adjust_forecast()**:\n\nThis method corrects the bias of the forecast using hindcast and the corresponding observations. This method works only when the forecast parameter is given.\n\n_Returns_:\n\nbias_adjusted_forecast (Note: It has the same shape as the forecast)\n\n## _Demonstration:_\n\n```sh\nimport numpy as np\nimport mva.mva as mva\n```\nLet's imagine that we have loaded the data of hindcast, forecast, and observation.\n\nExample - 1\n```sh\nIn [1]: hcast.shape\nOut[1]: (20,46,10,6)\nIn [2]: fcast.shape\nOut[2]: (46,50,6)\nIn [3]: obs.shape\nOut[3]: (20,46,6)\nIn [4]: bc = mva(hcast,obs,fcast)\nIn [5]: ad_hcast = bc.adjust_hindcast()\nIn [6]: ad_hcast.shape\nOut[6]: (20,46,10,6)\nIn [7]: ad_fcast = bc.adjust_forecast()\nIn [8]: ad_fcast.shape\nOut[8]: (46,50,6)\n```\n\nExample - 2\n```sh\nIn [1]: hcast.shape\nOut[1]: (20,46,10,6)\nIn [2]: fcast.shape\nOut[2]: (48,50,6)\nIn [3]: obs.shape\nOut[3]: (20,46,6)\nIn [4]: ad_hcast = mva(hcast,obs,fcast).adjust_hindcast()\nIn [5]: ad_hcast.shape\nOut[5]: (20,46,10,6)\nIn [6]: ad_fcast = mva(hcast,obs,fcast).adjust_forecast()\nOut[6]: Please respect the array shapes and try again!\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gouthamnaveen/mva",
    "keywords": "mva,mean,variance,bias correction,mean and variance adjustment,bias adjustment,calibration,python",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mva",
    "package_url": "https://pypi.org/project/mva/",
    "platform": null,
    "project_url": "https://pypi.org/project/mva/",
    "project_urls": {
      "Homepage": "https://github.com/gouthamnaveen/mva"
    },
    "release_url": "https://pypi.org/project/mva/0.0.2/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": "",
    "summary": "A package to correct the bias of forecasts/hindcasts. Read the documentation at https://github.com/gouthamnaveen/mva",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14652351,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6839905a66f9f2145c59b6e987ac5b1620c7a27c4c497725ade313533d0db2e1",
          "md5": "f3d0be960e20329b986426fa273c8dd1",
          "sha256": "ccbb7678496fbfb099b82f248ec065f19d7bfad6b915228bbcacb060d9703861"
        },
        "downloads": -1,
        "filename": "mva-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3d0be960e20329b986426fa273c8dd1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7627,
        "upload_time": "2022-02-02T10:08:15",
        "upload_time_iso_8601": "2022-02-02T10:08:15.547473Z",
        "url": "https://files.pythonhosted.org/packages/68/39/905a66f9f2145c59b6e987ac5b1620c7a27c4c497725ade313533d0db2e1/mva-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cafa813cfb5277c51110d253b6005f5fc4ffdea4035303220acca9adb18bcf18",
          "md5": "0ee9637ec1f5fc0160b6971ebdb10b51",
          "sha256": "fed19df77c880adf711e2e040b692c80e4ab05791c5476868cc1698898de59b5"
        },
        "downloads": -1,
        "filename": "mva-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0ee9637ec1f5fc0160b6971ebdb10b51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3328,
        "upload_time": "2022-02-02T10:08:17",
        "upload_time_iso_8601": "2022-02-02T10:08:17.048167Z",
        "url": "https://files.pythonhosted.org/packages/ca/fa/813cfb5277c51110d253b6005f5fc4ffdea4035303220acca9adb18bcf18/mva-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28659a66e480891d454abbd1e08648f9deaed75f6fac8942fcea08e20fd80cc0",
          "md5": "f1742f6cfe4f811993dc0b37076c7079",
          "sha256": "16502a56658820efaef5d60648c7ecd26ead93222d8ba85771422d7c033ce4a9"
        },
        "downloads": -1,
        "filename": "mva-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1742f6cfe4f811993dc0b37076c7079",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7648,
        "upload_time": "2022-08-04T12:38:52",
        "upload_time_iso_8601": "2022-08-04T12:38:52.031743Z",
        "url": "https://files.pythonhosted.org/packages/28/65/9a66e480891d454abbd1e08648f9deaed75f6fac8942fcea08e20fd80cc0/mva-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e688ab62b1980d5b27614ab44da28b8efc071c171e71b1f161d4fad62bde3ac5",
          "md5": "81eb5481783760035db85caf463d497b",
          "sha256": "8eebaf921716b6018da5097df07941f8210a5bddd9d764319c208ea401c81ead"
        },
        "downloads": -1,
        "filename": "mva-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "81eb5481783760035db85caf463d497b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7090,
        "upload_time": "2022-08-04T12:38:53",
        "upload_time_iso_8601": "2022-08-04T12:38:53.901171Z",
        "url": "https://files.pythonhosted.org/packages/e6/88/ab62b1980d5b27614ab44da28b8efc071c171e71b1f161d4fad62bde3ac5/mva-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28659a66e480891d454abbd1e08648f9deaed75f6fac8942fcea08e20fd80cc0",
        "md5": "f1742f6cfe4f811993dc0b37076c7079",
        "sha256": "16502a56658820efaef5d60648c7ecd26ead93222d8ba85771422d7c033ce4a9"
      },
      "downloads": -1,
      "filename": "mva-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f1742f6cfe4f811993dc0b37076c7079",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7648,
      "upload_time": "2022-08-04T12:38:52",
      "upload_time_iso_8601": "2022-08-04T12:38:52.031743Z",
      "url": "https://files.pythonhosted.org/packages/28/65/9a66e480891d454abbd1e08648f9deaed75f6fac8942fcea08e20fd80cc0/mva-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e688ab62b1980d5b27614ab44da28b8efc071c171e71b1f161d4fad62bde3ac5",
        "md5": "81eb5481783760035db85caf463d497b",
        "sha256": "8eebaf921716b6018da5097df07941f8210a5bddd9d764319c208ea401c81ead"
      },
      "downloads": -1,
      "filename": "mva-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "81eb5481783760035db85caf463d497b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7090,
      "upload_time": "2022-08-04T12:38:53",
      "upload_time_iso_8601": "2022-08-04T12:38:53.901171Z",
      "url": "https://files.pythonhosted.org/packages/e6/88/ab62b1980d5b27614ab44da28b8efc071c171e71b1f161d4fad62bde3ac5/mva-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}