{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "==========\nIFEM-to-VT\n==========\n\n.. image:: https://badge.fury.io/py/IFEM-to-VT.svg\n   :target: https://badge.fury.io/py/IFEM-to-VT\n\n.. image:: https://travis-ci.org/TheBB/IFEM-to-VT.svg?branch=master\n   :target: https://travis-ci.org/TheBB/IFEM-to-VT\n\n\nIFEM-to-VT is a tool for converting between various data formats used\nfor storing simulation results.\n\nSupported readers:\n\n- IFEM_ HDF5 files (.hdf5)\n- LRSpline_ geometries (.lr)\n- GoTools_ (B-Spline) geometries (.g2)\n- SIMRA_ result files (.res)\n- WRF_ result files (NetCDF4)\n\nSupported writers:\n\n- PVD/VTU/VTK: for use with Paraview_\n- VTF: for use with GLView_\n\nThe tool is so named because it was initially designed for IFEM, and\nonly for output formats that started with \"VT\".\n\n\nInstallation\n------------\n\nIt is recommended to install with PIP::\n\n  pip install --user IFEM-to-VT\n\n\nTo install from source::\n\n  pip install --user .\n\n\nIFEM-to-VT requires Python 3.  It is possible that, on your system,\n*pip* refers to Python 2.  In this case, do::\n\n  pip3 install --user IFEM-to-VT\n\n\nor::\n\n  pip3 install --user .\n\n\nIFEM-to-VT requires the numpy_, H5Py_, VTK_ and LRSplines_ libraries, all\nof which contain compiled components.  In ideal circumstances, they\nshould be installed automatically from PyPi with the above commands,\nbut circumstances are not always ideal.  For example, VTK is, as of\nthe time of writing, not available for Python 3.8 on PyPi.  If\ndependencies fail to install, please consult the relevant\ndocumentation of the respective libraries.\n\nVTF support is not available out-of-the-box because it depends on\nproprietary libaries.  If these libraries are available on your\nsystem, you may install VTFWriter_ manually.  If it is present,\nIFEM-to-VT should enable VTF support automatically.\n\nUpon successful installation, an *ifem-to-vt* executable should be\ninstalled in ``~/.local/bin``, or the binary path of the current\nPython environment.  To run it, ensure that this directory is in your\n``PATH``.\n\n\nUsage\n-----\n\nBasic usage is::\n\n  ifem-to-vt INFILE.hdf5 [OUTFILE]\n\n\nFor help with relevant command-line-options please consult::\n\n  ifem-to-vt --help\n\n\nIf the output filename is specified, the format will be determined\nfrom its extension, unless specifically overriden with ``-f`` or\n``--fmt``::\n\n  ifem-to-vt -f vtu INFILE.hdf5\n\n\nSome options are only available for certain input or output formats,\nand for some options some specific values may only be available for\ncertain input or output formats.  Further, depending on circumstances,\nsome options may be determined to be incompatible with each other.  In\nall these cases you should be either warned or provided with an error\nmessage.  If you feel you get an error in a case where that shouldn't\nhappen, please open an issue, including the information from running\nwith ``--debug``.\n\n\n\nLogging options\n^^^^^^^^^^^^^^^\n\nThe verbosity of standard output can be changed with ``--debug`` (use\nfor bug reports), ``--info`` (default), ``--user``, ``--warning`` and\n``--error``.\n\nIFEM-to-VT will try to use rich formatted output by default.  Switch\nthis off with ``--no-rich``.\n\n\n\nGeneral options\n^^^^^^^^^^^^^^^\n\nTo increase resolution beyond linear interpolation between element\nvertices, use the ``-n`` or ``--nvis`` option.  A value of e.g. 3\nindicates that each element should be subdivided into three per axis,\ncreating a 9-fold increase in data amount for 2D results.\n\nTo include only certain fields use the ``--filter`` or ``-l`` option.\nIssue this option multiple times, or give a comma-separated list as\nargument.\n\nUse ``-f`` or ``--fmt`` to override the output format, which is by\ndefault derived from the output filename extension.  This may be\nnecessary for formats which write to directories.\n\nUse ``--last`` to only write the final timestep.\n\nUse ``--mode`` to specify output mode, depending on what the writer is\ncapable of.  All current writers are capable of switching between\n``binary`` (default) and ``ascii`` mode.\n\n\n\nWRF options\n^^^^^^^^^^^\n\nOutput is given in projected coordinates by default.  If ``--global``\nis given, they will be converted to true physical coordinates, with\nthe origin at the center of the Earth, the x-axis pointing toward the\nprime meridian and the z-axis pointing toward the north pole.\n\nBy default, the output is a 3D mesh including all volumetric fields.\nIf ``--planar`` is given, it will be a 2D mesh including only planar\nfields, as well as the surface slice of volumetric fields.  If\n``--extrude`` is given, it will be a 3D mesh including all volumetric\nfields, as well as planar fields interpreted as constants in the\nvertical direction.\n\nIf ``--periodic`` is given, IFEM-to-VT will interpret the mesh as a\nglobal grid and attempt to tie it together in the longitudinal axis\nand at the poles.  This only works together with ``--global``.\n\n\n\nIFEM options\n^^^^^^^^^^^^\n\nThe output may be restricted to certain bases with ``--basis`` or\n``-b``. Use this option multiple times or give a comma-separated list\nas argument.\n\nThe basis for the geometry can be chosen with ``--geometry``.\n\n\n\nSIMRA options\n^^^^^^^^^^^^^\n\nThe endianness of the input can be specified with ``--endianness``,\nwith valid arguments being ``native`` (default), ``little`` and\n``big``.\n\n\n.. _IFEM: https://github.com/OPM/IFEM\n.. _LRSpline: https://github.com/VikingScientist/LRSplines\n.. _GoTools: https://github.com/SINTEF-Geometry/GoTools\n.. _SIMRA: https://www.sintef.no/en/digital/applied-mathematics/simulation/computational-fluid-dynamics1/\n.. _WRF: https://www.mmm.ucar.edu/weather-research-and-forecasting-model\n.. _Paraview: https://www.paraview.org/\n.. _GLView: https://ceetron.com/ceetron-glview-inova/\n.. _numpy: https://numpy.org/\n.. _H5Py: https://www.h5py.org/\n.. _VTK: https://vtk.org/\n.. _LRSplines: https://github.com/TheBB/lrsplines-python\n.. _VTFWriter: https://github.com/TheBB/vtfwriter",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "Eivind Fonn",
    "maintainer_email": "eivind.fonn@sintef.no",
    "name": "IFEM-to-VT",
    "package_url": "https://pypi.org/project/IFEM-to-VT/",
    "platform": "",
    "project_url": "https://pypi.org/project/IFEM-to-VT/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/IFEM-to-VT/2.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Convert between different mesh data formats",
    "version": "2.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7994861,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "057e4b7e9203168601df2a1254d7ba285798347b1c1f4c784ae0a82ae33bfe15",
          "md5": "ba80ef6902429ed4aef6da729aa66767",
          "sha256": "786a7d26397a949acfb49cad57daacc04659eb60e34a25a2094e7a7a46d79eed"
        },
        "downloads": -1,
        "filename": "IFEM_to_VT-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba80ef6902429ed4aef6da729aa66767",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25747,
        "upload_time": "2020-04-28T15:39:05",
        "upload_time_iso_8601": "2020-04-28T15:39:05.293632Z",
        "url": "https://files.pythonhosted.org/packages/05/7e/4b7e9203168601df2a1254d7ba285798347b1c1f4c784ae0a82ae33bfe15/IFEM_to_VT-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd664f2d0357237aa273cebab510976bb77b1f0688fbe17ae61d19a73416a8a6",
          "md5": "c458ac7f47cdbe8ab55c5ea228eed803",
          "sha256": "3c9cfe70fb88285dc2c516f700aeb03857cb924dccd080071c7238563a78251d"
        },
        "downloads": -1,
        "filename": "IFEM-to-VT-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c458ac7f47cdbe8ab55c5ea228eed803",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11261,
        "upload_time": "2020-04-28T15:37:35",
        "upload_time_iso_8601": "2020-04-28T15:37:35.903029Z",
        "url": "https://files.pythonhosted.org/packages/bd/66/4f2d0357237aa273cebab510976bb77b1f0688fbe17ae61d19a73416a8a6/IFEM-to-VT-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5027348ead6788820a5d943f021662e6f72659b4e2b8fa6cfe119eebb12f582",
          "md5": "87a03aace1077effde44a39b81ccbf56",
          "sha256": "cfc83db0eaf42f6aaf8eb93e6d338e7c203dcda97bb7429a32120f66ba8eef6e"
        },
        "downloads": -1,
        "filename": "IFEM_to_VT-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "87a03aace1077effde44a39b81ccbf56",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27113,
        "upload_time": "2020-04-28T16:49:02",
        "upload_time_iso_8601": "2020-04-28T16:49:02.484364Z",
        "url": "https://files.pythonhosted.org/packages/f5/02/7348ead6788820a5d943f021662e6f72659b4e2b8fa6cfe119eebb12f582/IFEM_to_VT-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0ac92c6b6f35b46df5cedead1ae60cbf7f7e8cdc2e73366fcde0bc7b0183c7e",
          "md5": "c40f2f4cea3b4c0ed0e0d8783d9c6d6b",
          "sha256": "d17a51d32d861bfb3938aec282c1744513fbe4f8f0ba657d3b2ff7b9c12cb6bf"
        },
        "downloads": -1,
        "filename": "IFEM-to-VT-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c40f2f4cea3b4c0ed0e0d8783d9c6d6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12768,
        "upload_time": "2020-04-28T16:47:35",
        "upload_time_iso_8601": "2020-04-28T16:47:35.909558Z",
        "url": "https://files.pythonhosted.org/packages/e0/ac/92c6b6f35b46df5cedead1ae60cbf7f7e8cdc2e73366fcde0bc7b0183c7e/IFEM-to-VT-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3691bf3b8c7da4f1bf9a744708c7fdb1dc99d8492af7438ea45d217a6fc52451",
          "md5": "5474eacb68a2a81ed244e32cca2c8875",
          "sha256": "008357b08060a919eb65a9b0e97e2ced42b777aaf9ea4fe1b977c4fe5239b65c"
        },
        "downloads": -1,
        "filename": "IFEM_to_VT-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5474eacb68a2a81ed244e32cca2c8875",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34462,
        "upload_time": "2020-07-20T15:28:47",
        "upload_time_iso_8601": "2020-07-20T15:28:47.390686Z",
        "url": "https://files.pythonhosted.org/packages/36/91/bf3b8c7da4f1bf9a744708c7fdb1dc99d8492af7438ea45d217a6fc52451/IFEM_to_VT-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37727f36147cc59fb26fbbc9bcefbb7fb3708ec517bf59affc5f02a90c60d7c5",
          "md5": "82405f152cef4474824c7b2a75efe526",
          "sha256": "eb9c071f8394f587fff33ab88f5324dc437f943dd3b2023b8e360bdaa26b4fc7"
        },
        "downloads": -1,
        "filename": "IFEM-to-VT-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "82405f152cef4474824c7b2a75efe526",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18260,
        "upload_time": "2020-07-20T15:27:09",
        "upload_time_iso_8601": "2020-07-20T15:27:09.510949Z",
        "url": "https://files.pythonhosted.org/packages/37/72/7f36147cc59fb26fbbc9bcefbb7fb3708ec517bf59affc5f02a90c60d7c5/IFEM-to-VT-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f289057d1024a7465447373a3b858dffdcc34f67fd7fd85943f8e3dd01210811",
          "md5": "901e04853fa3f8de11067702ae92cc75",
          "sha256": "3ac57bf109ded3f17f91ea30902e7119d98dda0f395b047d6e0c2ca54c0abb11"
        },
        "downloads": -1,
        "filename": "IFEM_to_VT-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "901e04853fa3f8de11067702ae92cc75",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 49689,
        "upload_time": "2020-08-19T10:18:01",
        "upload_time_iso_8601": "2020-08-19T10:18:01.714674Z",
        "url": "https://files.pythonhosted.org/packages/f2/89/057d1024a7465447373a3b858dffdcc34f67fd7fd85943f8e3dd01210811/IFEM_to_VT-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ce6a0a8dacc0dc6f38c85284fe30e8a57657729a16a5ea5e4b648adead8baa0",
          "md5": "5db677df89992eddc89d354bb8ab218c",
          "sha256": "d9dd6b56d7cebcb82f5bd838bac14b0b3d0085bea520e445e2402489fead4fb7"
        },
        "downloads": -1,
        "filename": "IFEM-to-VT-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5db677df89992eddc89d354bb8ab218c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31504,
        "upload_time": "2020-08-19T10:16:21",
        "upload_time_iso_8601": "2020-08-19T10:16:21.410899Z",
        "url": "https://files.pythonhosted.org/packages/2c/e6/a0a8dacc0dc6f38c85284fe30e8a57657729a16a5ea5e4b648adead8baa0/IFEM-to-VT-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f289057d1024a7465447373a3b858dffdcc34f67fd7fd85943f8e3dd01210811",
        "md5": "901e04853fa3f8de11067702ae92cc75",
        "sha256": "3ac57bf109ded3f17f91ea30902e7119d98dda0f395b047d6e0c2ca54c0abb11"
      },
      "downloads": -1,
      "filename": "IFEM_to_VT-2.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "901e04853fa3f8de11067702ae92cc75",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 49689,
      "upload_time": "2020-08-19T10:18:01",
      "upload_time_iso_8601": "2020-08-19T10:18:01.714674Z",
      "url": "https://files.pythonhosted.org/packages/f2/89/057d1024a7465447373a3b858dffdcc34f67fd7fd85943f8e3dd01210811/IFEM_to_VT-2.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ce6a0a8dacc0dc6f38c85284fe30e8a57657729a16a5ea5e4b648adead8baa0",
        "md5": "5db677df89992eddc89d354bb8ab218c",
        "sha256": "d9dd6b56d7cebcb82f5bd838bac14b0b3d0085bea520e445e2402489fead4fb7"
      },
      "downloads": -1,
      "filename": "IFEM-to-VT-2.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5db677df89992eddc89d354bb8ab218c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 31504,
      "upload_time": "2020-08-19T10:16:21",
      "upload_time_iso_8601": "2020-08-19T10:16:21.410899Z",
      "url": "https://files.pythonhosted.org/packages/2c/e6/a0a8dacc0dc6f38c85284fe30e8a57657729a16a5ea5e4b648adead8baa0/IFEM-to-VT-2.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}