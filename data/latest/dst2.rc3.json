{
  "info": {
    "author": "Kienka Cromwell Kio",
    "author_email": "kienka.kio@sustainalytics.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n### The New DST QA Library (DST2)\nDST2 is the new QA library that addresses issues like ease of use, dynamic reporting and error management.\nThe new library has only one function called \"perform_qa\" that does most of the check for the deliverables (similar pandas dataframes).\nFunctionalities:\n* Dynamic Error Management\n* Flexible Reporting\n* Search Operations\n* Shorter Notebook Codes\n* More..\n\n#### Installation\n<p>Install the package via pip with code below:</p>\n<pre><code> <b> > pip install DST2</b></code></pre>\nTo Upgrade\n<pre><code> <b> > pip install --upgrade DST2</b></code></pre>\n\n\n```python\n#For importing the QA library\nimport DST2.QA as q\nimport pandas as pd\n```\n\nThe package is built on top of pandas thus making it easier to compare dataframes\n\n\n```python\ndfOld = pd.read_excel('OLD_FILE.xyz') #The extension .xyz could be xlsx, csv, json or any that can be read by pandas\ndfNew = pd.read_excel('NEW_FILE.xyz') #The extension .xyz could be xlsx, csv, json or any that can be read by pandas\n```\n\n#### Starting a QA process\nWhen initiating a new QA process, you will have to provide the following:\n* Name of the Excel report\n* The previous and new deliverable via pandas\n* The index column (a column name or a list of columns)\n\n\n```python\n#Initiate a QA process\nqa = q.QA_Report(\"Report 1\",dfOld,dfNew,'Entity ID')\n```\n\n\n```python\n#Create Reports\nqa.create_report()\n```\n\n\n```python\n#Let's create another report specifying parameters\n```\n\n\n```python\n#Start a Report\nqa2 = q.QA_Report(\"Report 2\",dfOld,dfNew,'Entity ID')\n```\n\n#### Perform QA \nThis is the core of the QA process where you decide to:\n* Perform column or score comparisons\n* Set deltas\n* Search columns for QA\n* Perform QA on all columns\n\n\n```python\n#Perform QA on Columns comparison\nspec_cols = ['Highest Controversy Level-Answer Category','Does the company meet your screening criteria?'] #fields in both files\nqa2.perform_qa(columns=spec_cols)\n```\n\n\n```python\n#Perform QA on Score changes with default delta = 5\ncols = ['Total ESG Score','Percentile']\nqa2.perform_qa(columns=cols,type='score', delta=5) #default is 5 anyways\n```\n\n\n```python\n#Create Reports\nqa2.create_report()\n```\n\n#### Recap!\nWe have used 3 parameters with the perform_qa function which are:\n\n* choosing an index that identifies each row uniquely - 'Entity ID' \n* columns -- To specify the columns to perform QA on\n* type -- To specify if it is a column or score comparison and by default it performs a column comparison\n* delta -- By default it is set to 5 and it is used when we perform a score comparison to define a threshold.\n\n\n```python\n#Start a Report\nqa3 = q.QA_Report(\"Report 3\",dfOld,dfNew,'Entity ID')\n```\n\n### More on parameters\nWe have used 3 more parameters with the perform_qa function which are\n* all_cols -- To perform QA on all columns and it is set to False by default\n* keywords -- To search for some keywords in field names eligible for QA\n* takeout_keywords -- To search for some keywords in field names and remove those fieldnames NOT eligible for QA\n* In this last example we have added the type score because we are performing score changes\n\n\n```python\nqa3.perform_qa(all_cols=True,takeout_keywords=['score','percentile'])\n```\n\n\n```python\nqa3.perform_qa(keywords=['score','percentile'],takeout_keywords='overall',type='score', delta=10)\n```\n\n\n```python\nqa3.create_report()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Kienka/DST2",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DST2",
    "package_url": "https://pypi.org/project/DST2/",
    "platform": "",
    "project_url": "https://pypi.org/project/DST2/",
    "project_urls": {
      "Homepage": "https://github.com/Kienka/DST2"
    },
    "release_url": "https://pypi.org/project/DST2/0.0.3/",
    "requires_dist": [
      "pandas"
    ],
    "requires_python": "",
    "summary": "Perform QA between 2 dataframes",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15333496,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "217a1a2cb36f26d96aba095141588c87566958f0eaf7c3ffe7d582f8010778e6",
          "md5": "1e7cc7dfc8d08ef2468f283cf23c9918",
          "sha256": "8ac4c18514d9808b1b1c13f6ba78e391717144b1e4d618dbc57ea521689e484e"
        },
        "downloads": -1,
        "filename": "DST2-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e7cc7dfc8d08ef2468f283cf23c9918",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19444,
        "upload_time": "2020-02-12T07:59:35",
        "upload_time_iso_8601": "2020-02-12T07:59:35.149986Z",
        "url": "https://files.pythonhosted.org/packages/21/7a/1a2cb36f26d96aba095141588c87566958f0eaf7c3ffe7d582f8010778e6/DST2-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4707a66dd1fcf7729042ee69f767895a579f902e47444365f47293f5c13d2bed",
          "md5": "968711ce1f2ab6a01b677c327086526b",
          "sha256": "962371820062509cf14df616f001d20804015f147aae45d657138ef371fcab4c"
        },
        "downloads": -1,
        "filename": "DST2-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "968711ce1f2ab6a01b677c327086526b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14574,
        "upload_time": "2020-02-12T07:59:37",
        "upload_time_iso_8601": "2020-02-12T07:59:37.346783Z",
        "url": "https://files.pythonhosted.org/packages/47/07/a66dd1fcf7729042ee69f767895a579f902e47444365f47293f5c13d2bed/DST2-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "984594e8774009880b18b14cfe92063e0ddacc62a503a6cea09af76a891ce658",
          "md5": "bc3497995bd1ae96c778cbc6b284c03d",
          "sha256": "3c244e6368d4fbe08aab1eaae140eace3e25c924b5f363e27d6ef3f588a8d420"
        },
        "downloads": -1,
        "filename": "DST2-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc3497995bd1ae96c778cbc6b284c03d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20701,
        "upload_time": "2020-04-12T10:30:13",
        "upload_time_iso_8601": "2020-04-12T10:30:13.211263Z",
        "url": "https://files.pythonhosted.org/packages/98/45/94e8774009880b18b14cfe92063e0ddacc62a503a6cea09af76a891ce658/DST2-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b587a21bc200e31cc914be325ad764967af08b8b211420276e79fab47af1216c",
          "md5": "2a3bb355a7c62e0c23d09afebbff17c4",
          "sha256": "2fcbab1d05f2cabe0b3393e01f6e6b5183f131bf4f8b69abe92d26a11adb15be"
        },
        "downloads": -1,
        "filename": "DST2-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2a3bb355a7c62e0c23d09afebbff17c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15942,
        "upload_time": "2020-04-12T10:30:15",
        "upload_time_iso_8601": "2020-04-12T10:30:15.537313Z",
        "url": "https://files.pythonhosted.org/packages/b5/87/a21bc200e31cc914be325ad764967af08b8b211420276e79fab47af1216c/DST2-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10cb6b94249620479ed8c20965d71a1c52399303c509370cf0ff7f86cf7f2cc1",
          "md5": "d81f9b0cf5cb88c3a9016d89aaad04fb",
          "sha256": "f1bb2543c2ed8696247076c55654533c9bf00640972470f72764fb8157c05da6"
        },
        "downloads": -1,
        "filename": "DST2-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d81f9b0cf5cb88c3a9016d89aaad04fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20740,
        "upload_time": "2020-06-04T11:40:11",
        "upload_time_iso_8601": "2020-06-04T11:40:11.670973Z",
        "url": "https://files.pythonhosted.org/packages/10/cb/6b94249620479ed8c20965d71a1c52399303c509370cf0ff7f86cf7f2cc1/DST2-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3aaa7f896736eafd019e4d430c71d2b67a1228ddb4cec21480d6690b723cad79",
          "md5": "d8c333e8eba82dd86cba9a1febe2e1e1",
          "sha256": "7246cd20b46764171524e4b6c50a0ce589df4a1040e01fb4f14c6334a7c7a86c"
        },
        "downloads": -1,
        "filename": "DST2-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d8c333e8eba82dd86cba9a1febe2e1e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16024,
        "upload_time": "2020-06-04T11:40:14",
        "upload_time_iso_8601": "2020-06-04T11:40:14.431428Z",
        "url": "https://files.pythonhosted.org/packages/3a/aa/7f896736eafd019e4d430c71d2b67a1228ddb4cec21480d6690b723cad79/DST2-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10cb6b94249620479ed8c20965d71a1c52399303c509370cf0ff7f86cf7f2cc1",
        "md5": "d81f9b0cf5cb88c3a9016d89aaad04fb",
        "sha256": "f1bb2543c2ed8696247076c55654533c9bf00640972470f72764fb8157c05da6"
      },
      "downloads": -1,
      "filename": "DST2-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d81f9b0cf5cb88c3a9016d89aaad04fb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20740,
      "upload_time": "2020-06-04T11:40:11",
      "upload_time_iso_8601": "2020-06-04T11:40:11.670973Z",
      "url": "https://files.pythonhosted.org/packages/10/cb/6b94249620479ed8c20965d71a1c52399303c509370cf0ff7f86cf7f2cc1/DST2-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3aaa7f896736eafd019e4d430c71d2b67a1228ddb4cec21480d6690b723cad79",
        "md5": "d8c333e8eba82dd86cba9a1febe2e1e1",
        "sha256": "7246cd20b46764171524e4b6c50a0ce589df4a1040e01fb4f14c6334a7c7a86c"
      },
      "downloads": -1,
      "filename": "DST2-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d8c333e8eba82dd86cba9a1febe2e1e1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16024,
      "upload_time": "2020-06-04T11:40:14",
      "upload_time_iso_8601": "2020-06-04T11:40:14.431428Z",
      "url": "https://files.pythonhosted.org/packages/3a/aa/7f896736eafd019e4d430c71d2b67a1228ddb4cec21480d6690b723cad79/DST2-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}