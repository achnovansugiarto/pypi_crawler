{
  "info": {
    "author": "MatousE",
    "author_email": "matous.elphick@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[//]: # (<img width=\"250\"  src=\"https://github.com/MatousE/vemseg/blob/main/imgs/VEMSEG-FINAL.svg\"> )\n\n# Volume Electron Microscopy SEGmentation\n[![tests](https://github.com/MatousE/vemseg/workflows/tests/badge.svg)](https://github.com/MatousE/vemseg/actions)\n\nA package for the segmentation of volume electron microscopy images using XGBoost.\n\n## Installation\n\nYou can install `vemseg` via [pip]:\n\n    pip install vemseg\n\n## Usage\nShown below are some example uses of the VEMClassifier and some other functionality provided \nby the `vemseg` package.\n\n```python\nimport vemseg as vem\nfrom skimage.io import imread\n\nX = imread(\"train_image.tiff\")\ny = imread(\"train_labels.tiff\")\nmask = imread('train_mask.tiff')\n\nclf = vem.VEMClassifier(max_depth=4,\n                         n_estimators=400,\n                         learning_rate=0.01,\n                         verbosity=0)\n\nfeatures = clf.set_features(\n    [\"sobel_of_gaussian_blur\",\"laplace_box_of_gaussian_blur\", \"original\"], \n    range(1, 4)\n)\n\nclf.fit(X, y, mask=mask)\n```\nWe then use `clf.predict` to get the prediction from the trained\nclassifier. We can use the `show` flag to generate an image of the\npredictions.\n```python\nprediction = clf.predict(X, show=True, mask=mask)\n```\n<img width=\"400\"  src=\"https://github.com/MatousE/vemseg/blob/main/imgs/example_output.tiff\">\n\nWe can then plot the features importance like so, with fig size indicating the size of the plot.\n```python\n\nclf.feature_importance(fig_size=(20, 10))\n```\n\n<img width=\"800\"  src=\"https://github.com/MatousE/vemseg/blob/main/imgs/example_feature_graph.tiff\">\n\nDeciding what hyperparameters to use can often be very difficult, so we can use an adaptation\nof sklearns GridSearchCV to determine which hyperparameters work best.\n\n```python\nparameters = {\n    'max_depth': range(2, 5, 1),\n    'n_estimators': range(200, 500, 100)\n}\n\ngrid_search = clf.GridSearchCV(\n    X,\n    y,\n    param_grid=parameters,\n    n_jobs=10,\n    cv=10,\n    verbose=True,\n    update_params=True,\n    mask=mask,\n)\n\nprint(grid_search.best_estimator_)\n```\nWill output\n```\nFitting 10 folds for each of 9 candidates, totalling 90 fits\nVEMClassifier(base_score=0.5, booster='gbtree', callbacks=None,\n              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,\n              early_stopping_rounds=None, enable_categorical=False,\n              eval_metric=None, feature_types=None, gamma=0, gpu_id=-1,\n              grow_policy='depthwise', importance_type=None,\n              interaction_constraints='', learning_rate=0.300000012,\n              max_bin=256, max_cat_threshold=64, max_cat_to_onehot=4,\n              max_delta_step=0, max_depth=3, max_leaves=0, min_child_weight=1,\n              missing=nan, monotone_constraints='()', n_estimators=200,\n              n_jobs=0, num_parallel_tree=1, objective='binary:logistic',\n              predictor='auto', ...)\n```\nAfter completing training one can save the model to be reused like so.\n```python\nclf.save_model('model.json')\n```\nAnd to reload the model from the JSON file one simply has to initialise a new\nVEMClassifier and then load the model.\n\n```python\nimport vemseg\n\npre_trained_model = vem.VEMClassifier()\npre_trained_model.load_model('model.json')\n```\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-vemseg\" is free and open source software\n\n## Contribute to VEMseg\nContributions are very welcome.\n\n## Similar Software\nFull credit to the following software for inspiration and use within this tool.\n* [apoc](https://github.com/haesleinhuepf/apoc)\n* [XGBoost](https://github.com/dmlc/xgboost)\n* [scikit-learn](https://scikit-learn.org/stable/)\n\n## Reference\n\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[pip]: https://pypi.org/project/pip/\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MatousE/vemseg",
    "keywords": "",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vemseg",
    "package_url": "https://pypi.org/project/vemseg/",
    "platform": null,
    "project_url": "https://pypi.org/project/vemseg/",
    "project_urls": {
      "Homepage": "https://github.com/MatousE/vemseg"
    },
    "release_url": "https://pypi.org/project/vemseg/0.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python package for the segmentation of organelles in volume electron microscopy data",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17286623,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f165fdb4bc6436636abcfa6d07acb26f7868a7d6863b2db449b2af96ba156741",
          "md5": "6bc68428747ba887ea64608c1b004639",
          "sha256": "5421b11e6faa156763c40b50f4a1b6df07b76170fc96a687e3926c816fc48c71"
        },
        "downloads": -1,
        "filename": "vemseg-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6bc68428747ba887ea64608c1b004639",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10131,
        "upload_time": "2023-03-09T16:34:21",
        "upload_time_iso_8601": "2023-03-09T16:34:21.501593Z",
        "url": "https://files.pythonhosted.org/packages/f1/65/fdb4bc6436636abcfa6d07acb26f7868a7d6863b2db449b2af96ba156741/vemseg-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18ac48aabd90a880a8e1a5f8d92395128b30d7a3a0f1352b4c3265876afa56d2",
          "md5": "9c2ab73a980a8a9ffcb810e00cb69a3f",
          "sha256": "773dba4576aff5ff774247d2e8cbebe8b0650e7d64d768b42930a2945233a903"
        },
        "downloads": -1,
        "filename": "vemseg-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9c2ab73a980a8a9ffcb810e00cb69a3f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9356,
        "upload_time": "2023-03-09T16:34:23",
        "upload_time_iso_8601": "2023-03-09T16:34:23.517582Z",
        "url": "https://files.pythonhosted.org/packages/18/ac/48aabd90a880a8e1a5f8d92395128b30d7a3a0f1352b4c3265876afa56d2/vemseg-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55efba410cc64e604c990f78054083ddb0b024b9909d708b4ac5659d255697ea",
          "md5": "0df6f10ab807438c27d04a11b2ee64d1",
          "sha256": "b3a9a39459891c35f87a98cb98beaf0db211ed8c3dd5e38bf16c2082a527e2c6"
        },
        "downloads": -1,
        "filename": "vemseg-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0df6f10ab807438c27d04a11b2ee64d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9328,
        "upload_time": "2023-03-10T17:30:55",
        "upload_time_iso_8601": "2023-03-10T17:30:55.337298Z",
        "url": "https://files.pythonhosted.org/packages/55/ef/ba410cc64e604c990f78054083ddb0b024b9909d708b4ac5659d255697ea/vemseg-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5675f1b56b596aedf08b3826f9ee07885565042e56dccb8ec0a3f73e82b2936c",
          "md5": "e28e842cc0d5afc1104885676f044e71",
          "sha256": "1cd6a4b34fd81089c5c5149d721408066b11b4003a39690ed71ef0162cd33237"
        },
        "downloads": -1,
        "filename": "vemseg-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e28e842cc0d5afc1104885676f044e71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9409,
        "upload_time": "2023-03-14T11:54:51",
        "upload_time_iso_8601": "2023-03-14T11:54:51.236951Z",
        "url": "https://files.pythonhosted.org/packages/56/75/f1b56b596aedf08b3826f9ee07885565042e56dccb8ec0a3f73e82b2936c/vemseg-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5675f1b56b596aedf08b3826f9ee07885565042e56dccb8ec0a3f73e82b2936c",
        "md5": "e28e842cc0d5afc1104885676f044e71",
        "sha256": "1cd6a4b34fd81089c5c5149d721408066b11b4003a39690ed71ef0162cd33237"
      },
      "downloads": -1,
      "filename": "vemseg-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "e28e842cc0d5afc1104885676f044e71",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9409,
      "upload_time": "2023-03-14T11:54:51",
      "upload_time_iso_8601": "2023-03-14T11:54:51.236951Z",
      "url": "https://files.pythonhosted.org/packages/56/75/f1b56b596aedf08b3826f9ee07885565042e56dccb8ec0a3f73e82b2936c/vemseg-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}