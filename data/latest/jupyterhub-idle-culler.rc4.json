{
  "info": {
    "author": "Jupyter Development Team",
    "author_email": "jupyter@googlegroups.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# JupyterHub Idle Culler Service\n\n[![GitHub Workflow Status - Test](https://img.shields.io/github/workflow/status/jupyterhub/jupyterhub-idle-culler/Test?logo=github&label=tests)](https://github.com/jupyterhub/jupyterhub-idle-culler/actions)\n[![Latest PyPI version](https://img.shields.io/pypi/v/jupyterhub-idle-culler?logo=pypi&logoColor=white)](https://pypi.python.org/pypi/jupyterhub-idle-culler)\n[![GitHub](https://img.shields.io/badge/issue_tracking-github-blue?logo=github)](https://github.com/jupyterhub/jupyterhub-idle-culler/issues)\n[![Discourse](https://img.shields.io/badge/help_forum-discourse-blue?logo=discourse)](https://discourse.jupyter.org/c/jupyterhub)\n[![Gitter](https://img.shields.io/badge/social_chat-gitter-blue?logo=gitter)](https://gitter.im/jupyterhub/jupyterhub)\n\n`jupyterhub-idle-culler` provides a JupyterHub service to identify and shut down idle or long-running Jupyter Notebook servers.\nThe exact actions performed are dependent on the used spawner for the Jupyter Notebook server (e.g. the default [LocalProcessSpawner](https://jupyterhub.readthedocs.io/en/stable/api/spawner.html#localprocessspawner>), [kubespawner](https://github.com/jupyterhub/kubespawner), or [dockerspawner](https://github.com/jupyterhub/dockerspawner)).\nIn addition, if explicitly requested, all users whose Jupyter Notebook servers have been shut down this way are deleted as JupyterHub users from the internal database. This neither affects the authentication method which continues to allow those users to log in nor does it delete persisted user data (e.g. stored in docker volumes for dockerspawner or in persisted volumes for kubespawner).\n\n## Setup\n\n### Installation\n\n```bash\npip install jupyterhub-idle-culler\n```\n\n### Permissions\n\nPrior to JupyterHub 2.0, the `jupyterhub-idle-culler` required full administrative privileges,\nin order to have sufficient permissions to stop servers on behalf of users.\n\nJupyterHub 2.0 introduces [scopes][] to allow for more fine-grained permission control.\nThis means that the configured culler service does not need full administrative privileges anymore.\nIt can be assigned only the permissions it needs.\n\n[scopes]: https://jupyterhub.readthedocs.io/en/latest/rbac/scopes.html#available-scopes\n\n`jupyterhub-idle-culler` requires the following scopes to function:\n\n- `list:users` - access to the user list API, our source of information about who to cull\n- `read:users:activity` - read the last_activity field of the user\n- `delete:servers` - management of servers (this includes stopping servers)\n- `admin:users` (**optional**) - only needed if using `--cull-users`\n\nTo assign the service the appropriate permissions, declare a role in your `jupyterhub_config.py`:\n\n```python\nc.JupyterHub.load_roles = [\n    {\n        \"name\": \"jupyterhub-idle-culler-role\",\n        \"scopes\": [\n            \"list:users\",\n            \"read:users:activity\",\n            \"delete:servers\",\n            # \"admin:users\", # if using --cull-users\n        ],\n        # assignment of role's permissions to:\n        \"services\": [\"jupyterhub-idle-culler-service\"],\n    }\n]\n```\n\n### As a hub managed service\n\nIn `jupyterhub_config.py`, add the following dictionary for the idle-culler\nService to the `c.JupyterHub.services` list:\n\n```python\nc.JupyterHub.services = [\n    {\n        \"name\": \"jupyterhub-idle-culler-service\",\n        \"command\": [\n            sys.executable,\n            \"-m\", \"jupyterhub_idle_culler\",\n            \"--timeout=3600\",\n        ],\n        # \"admin\": True,\n    }\n]\n```\n\nwhere:\n\n- `\"command\"` indicates that the Service will be managed by the Hub, and\n- `\"admin\": True` grants admin permissions to this Service and is only meant for\n  use with jupyterhub < 2.0; see [above][permissions].\n\n### As a standalone script\n\n`jupyterhub-idle-culler` can also be run as a standalone script. It can\naccess the hub's api with a service token.\n\nRegister the service token with JupyterHub in `jupyterhub_config.py`:\n\n```python\nc.JupyterHub.services = [\n    {\n        \"name\": \"jupyterhub-idle-culler-service\",\n        \"api_token\": \"...\",\n        # \"admin\": True,\n    }\n]\n```\n\nwhere:\n\n- `\"api_token\"` contains a secret token, e.g. generated by `openssl rand -hex 32`, and\n- `\"admin\": True` grants admin permissions to this Service and is only meant for\n  use with jupyterhub < 2.0; see [above][permissions].\n\nand store the same token in a `JUPYTERHUB_API_TOKEN` environment variable.\nThen start `jupyterhub-idle-culler` manually.\n\n```bash\nexport JUPYTERHUB_API_TOKEN=api_token_above...\npython3 -m jupyterhub-idle-culler [--timeout=900] [--url=http://localhost:8081/hub/api]\n```\n\n## Command line flags\n\n```\n  --api-page-size                  Number of users to request per page, when\n                                   using JupyterHub 2.0's paginated user list\n                                   API. Default: user the server-side default\n                                   configured page size. (default 0)\n  --concurrency                    Limit the number of concurrent requests made\n                                   to the Hub.  Deleting a lot of users at the\n                                   same time can slow down the Hub, so limit\n                                   the number of API requests we have\n                                   outstanding at any given time. (default 10)\n  --cull-admin-users               Whether admin users should be culled (only\n                                   if --cull-users=true). (default True)\n  --cull-every                     The interval (in seconds) for checking for\n                                   idle servers to cull. (default 0)\n  --cull-users                     Cull users in addition to servers.  This is\n                                   for use in temporary-user cases such as\n                                   tmpnb. (default False)\n  --internal-certs-location        The location of generated internal-ssl\n                                   certificates (only needed with --ssl-\n                                   enabled=true). (default internal-ssl)\n  --max-age                        The maximum age (in seconds) of servers that\n                                   should be culled even if they are active.\n                                   (default 0)\n  --remove-named-servers           Remove named servers in addition to stopping\n                                   them.  This is useful for a BinderHub that\n                                   uses authentication and named servers.\n                                   (default False)\n  --ssl-enabled                    Whether the Jupyter API endpoint has TLS\n                                   enabled. (default False)\n  --timeout                        The idle timeout (in seconds). (default 600)\n  --url                            The JupyterHub API URL.\n```\n\n## Caveats\n\n1. last_activity is not updated with high frequency, so cull timeout should be\n   greater than the sum of:\n\n   - single-user websocket ping interval (default: 30 seconds)\n   - `JupyterHub.last_activity_interval` (default: 5 minutes)\n\n2. The same `--timeout` and `--max-age` values are used to cull\n   users and users' servers. If you want a different value for users and servers,\n   you should add this script to the services list twice, just with different\n   `name`s, different values, and one with the `--cull-users` option.\n\n3. By default HTTP requests to the hub timeout after 60 seconds. This can be\n   changed by setting the `JUPYTERHUB_REQUEST_TIMEOUT` environment variable.\n\n## How it works\n\njupytehrub-idle-culler lists available users via JupyterHub's [/users][users-api] REST API.\n\n[users-api]: https://jupyterhub.readthedocs.io/en/stable/_static/rest-api/index.html#path--users\n\njupyterhub-idle-culler culls user servers using JupyterHub's REST API\n([/users/{name}/server](https://jupyterhub.readthedocs.io/en/stable/_static/rest-api/index.html#operation--users--name--server-delete)\nor\n[/users/{name}/servers/{server_name}](https://jupyterhub.readthedocs.io/en/stable/_static/rest-api/index.html#operation--users--name--servers--server_name--delete)),\nand makes the culling decisions based on its configuration and what JupyterHub\nreports about the user servers via its REST API\n[(/users)][users-api]\nwhere user servers' `last_activity` is reported back.\n\nThe `last_activity` that JupyterHub reports is the most recent summary of\ninformation updated at a regular interval via the [`update_last_activity`\nfunction](https://github.com/jupyterhub/jupyterhub/blob/1.4.2/jupyterhub/app.py#L2646)\nthat combines two sources of information.\n\n1. **The proxy's routes data**\n\n   The `update_last_activity` function will [ask the\n   proxy](https://jupyterhub.readthedocs.io/en/stable/reference/proxy.html#retrieving-routes)\n   for the active routes like `/user/user1` and collects associated\n   `last_activity` data if it is available. This activity represents\n   successfully proxies network traffic.\n\n   `last_activity` data for routes will be available when using\n   [configurable-http-proxy](https://github.com/jupyterhub/configurable-http-proxy#readme)\n   as JupyterHub does by default, but if for example\n   [traefik-proxy](https://github.com/jupyterhub/traefik-proxy#readme) is used\n   as it is in the [TLJH distribution](https://tljh.jupyter.org), no such data\n   will be available.\n\n2. **The user server's activity reports**\n\n   The `update_last_activity` function also reads JupyterHub's database that\n   keeps state about servers `last_activity`. These database records are updated\n   whenever a server notifies JupyterHub about activity, as they are\n   responsible to do.\n\n   Servers notify JupyterHub about activity by being started by the\n   [`jupyterhub-singleuser`](https://github.com/jupyterhub/jupyterhub/blob/1.4.2/setup.py#L115)\n   script that is made available by installing jupyterhub (or `jupyterhub-base`\n   on conda-forge).\n\n   The `jupyterhub-singleuser` script launches a modified server application\n   that keeps JupyterHub updated with the server activity via the\n   [`notify_activity`](https://github.com/jupyterhub/jupyterhub/blob/1.4.2/jupyterhub/singleuser/mixins.py#L497)\n   function.\n\n   The `notify_activity` function in turn make use of the server applications\n   `last_activity` function (see implementation in\n   [NotebookApp](https://github.com/jupyter/notebook/blob/v6.4.0/notebook/notebookapp.py#L392-L397)\n   and\n   [ServerApp](https://github.com/jupyter-server/jupyter_server/blob/v1.9.0/jupyter_server/serverapp.py#L375)\n   respectively) that that combines information from API activity, kernel\n   activity, kernel shutdown, and terminal activity. This activity also covers\n   activity of applications like RStudio running via `jupyter-server-proxy`.\n\nHere is a summary of what's described so far:\n\n1. jupyterhub-idle-culler culls servers via JupyterHub's REST API.\n2. jupyterhub-idle-culler makes decisions based on information retrieved by\n   JupyterHub REST API.\n3. JupyterHub REST API reports information regularly updated by summarizing\n   information gained by: asking the proxy about routes' activity, and by\n   retaining activity information reported by the servers.\n\nNow, as the server's kernel activity influence the activity that servers will\nnotify JupyterHub about, the kernel activity in turn influences\njupyterhub-idle-culler. Due to this, it can be relevant to also learn a little\nabout a mechanism to _cull idle kernels_ as well even though\njupyterhub-idle-culler isn't involved in that.\n\nThe default kernel manager, the MappingKernelManager, can be configured to cull\nidle kernels. Its configuration is documented in\n[NotebookApp's](https://jupyter-notebook.readthedocs.io/en/stable/config.html#options)\nand\n[ServerApp's](https://jupyter-server.readthedocs.io/en/latest/full-config.html)\nrespective documentation, and here are some relevant kernel culling\nconfiguration options:\n\n- `MappingKernelManager.cull_busy`\n- `MappingKernelManager.cull_idle_timeout`\n- `MappingKernelManager.cull_interval`\n- `MappingKernelManager.cull_connected`\n\n  Note that `cull_connected` can be tricky to understand for JupyterLab as a\n  browser having a web-socket connection to a kernel or not isn't as obvious as\n  it was in the classical Jupyter notebook UI. See [this issue for more\n  details](https://github.com/jupyterlab/jupyterlab/issues/6893).\n\n  Also note that configuration of MappingKernelManager should be made on the\n  user server itself, for example via a `jupyter_notebook_config.py` file in\n  `/etc/jupyter` or `/usr/local/etc/jupyter` rather than where JupyterHub is\n  running.\n\nFinally, note that a Jupyter Notebook server can shut itself down without\nwithout intervention by jupyterhub-idle-culler if\n`NotebookApp.shutdown_no_activity_timeout` is configured.\n\n### Caveats\n\n#### Pagination\n\nJupyterHub 2.0 introduces pagination to the [/users][users-api] API endpoint.\nThis pagination does not guarantee a consistent snapshot\nfor consecutive requests spread over time,\nso it is possible for a highly active hub to occasionally miss culling users crossing page boundaries between requests.\nThis is expected to be an infrequent occurrence and only result in delaying a server being culled by one cull interval\nin realistic scenarios, so of minor consequence in JupyterHub.\n\nThe issue can be mitigated by requesting a larger page size,\nvia e.g. `--api-page-size=200`,\nbut feel free to open an issue if this is causing a problem for you.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://jupyter.org",
    "keywords": "",
    "license": "3-BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jupyterhub-idle-culler",
    "package_url": "https://pypi.org/project/jupyterhub-idle-culler/",
    "platform": "",
    "project_url": "https://pypi.org/project/jupyterhub-idle-culler/",
    "project_urls": {
      "Homepage": "https://jupyter.org"
    },
    "release_url": "https://pypi.org/project/jupyterhub-idle-culler/1.2.1/",
    "requires_dist": [
      "tornado",
      "python-dateutil"
    ],
    "requires_python": ">=3.6",
    "summary": "",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11735514,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70a4ce13655fb327005d0b0765d2b94a173970b896d8f24604239ae66d7cc333",
          "md5": "36dde3014a39bb83a7921b61c2a69d51",
          "sha256": "d9e58baa48cba6a79b83c43d8dcab7b758a66c2c4a9bc8394f7b43e03d891621"
        },
        "downloads": -1,
        "filename": "jupyterhub-idle-culler-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "36dde3014a39bb83a7921b61c2a69d51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5821,
        "upload_time": "2020-04-28T06:37:22",
        "upload_time_iso_8601": "2020-04-28T06:37:22.051957Z",
        "url": "https://files.pythonhosted.org/packages/70/a4/ce13655fb327005d0b0765d2b94a173970b896d8f24604239ae66d7cc333/jupyterhub-idle-culler-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8eea0758be25096893df3e5fb0e5565556c1a7f25c597ca059345e8127a60c4d",
          "md5": "b3fe5c5a6287cba45b3a56ebcea32733",
          "sha256": "600b2713f90ecc475f690747d1ec02bcae8f44fa7f3e51a71e400727895631d8"
        },
        "downloads": -1,
        "filename": "jupyterhub_idle_culler-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3fe5c5a6287cba45b3a56ebcea32733",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9648,
        "upload_time": "2021-03-05T00:33:31",
        "upload_time_iso_8601": "2021-03-05T00:33:31.044232Z",
        "url": "https://files.pythonhosted.org/packages/8e/ea/0758be25096893df3e5fb0e5565556c1a7f25c597ca059345e8127a60c4d/jupyterhub_idle_culler-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4af472ae0932d0a42076d6c4e9bef76f8015d9ca5e888f28837d34511f94a543",
          "md5": "150af330c66b7b63fd1ff797162d838b",
          "sha256": "45bceffeea8758b60e1f60650bc3de0d0d1e5f774623793db268ded1fa0cbdcb"
        },
        "downloads": -1,
        "filename": "jupyterhub-idle-culler-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "150af330c66b7b63fd1ff797162d838b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9343,
        "upload_time": "2021-03-05T00:33:31",
        "upload_time_iso_8601": "2021-03-05T00:33:31.997037Z",
        "url": "https://files.pythonhosted.org/packages/4a/f4/72ae0932d0a42076d6c4e9bef76f8015d9ca5e888f28837d34511f94a543/jupyterhub-idle-culler-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc7a8ba3d79d9e921bf6068f12be989f31a5eb8d3f816094fda8c1c4601aa5ca",
          "md5": "8c62d7fbf591d72a27afa7de373011ef",
          "sha256": "2970e461135f1975847ea638f517c29332523ea1937a8909c818237353cf27d2"
        },
        "downloads": -1,
        "filename": "jupyterhub_idle_culler-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c62d7fbf591d72a27afa7de373011ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13582,
        "upload_time": "2021-09-20T16:00:37",
        "upload_time_iso_8601": "2021-09-20T16:00:37.432626Z",
        "url": "https://files.pythonhosted.org/packages/dc/7a/8ba3d79d9e921bf6068f12be989f31a5eb8d3f816094fda8c1c4601aa5ca/jupyterhub_idle_culler-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be2d507c729983a9901e445ddaf0f54c32f1564b0439d806bad2b9b18d6f6124",
          "md5": "9a66279d8acaa3a68dcef9b696b83784",
          "sha256": "3eaaa924a7e410f9a06188f82629846631b7aefc2dad9047de19326bfab76bf4"
        },
        "downloads": -1,
        "filename": "jupyterhub-idle-culler-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9a66279d8acaa3a68dcef9b696b83784",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16665,
        "upload_time": "2021-09-20T16:00:38",
        "upload_time_iso_8601": "2021-09-20T16:00:38.493514Z",
        "url": "https://files.pythonhosted.org/packages/be/2d/507c729983a9901e445ddaf0f54c32f1564b0439d806bad2b9b18d6f6124/jupyterhub-idle-culler-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f522bbc32b5dfcd0046fe18ae9ee63c806b21d7efdde3051428a703e348793f4",
          "md5": "621bd4699520a9b6e2934e14bd601575",
          "sha256": "c84e45a51932a34bd95c08b3b6e8330fb0ee3391fa4d0f1ac0d4458a40492fd9"
        },
        "downloads": -1,
        "filename": "jupyterhub_idle_culler-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "621bd4699520a9b6e2934e14bd601575",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13595,
        "upload_time": "2021-10-15T12:41:55",
        "upload_time_iso_8601": "2021-10-15T12:41:55.572881Z",
        "url": "https://files.pythonhosted.org/packages/f5/22/bbc32b5dfcd0046fe18ae9ee63c806b21d7efdde3051428a703e348793f4/jupyterhub_idle_culler-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8bef225c5d4cd186f793e46ababecee6ee62b2a57906a0ec1fc0453cda6c6ed",
          "md5": "281a1ecc30fc5e11f7905ea0903e7469",
          "sha256": "d80822982d2590cb876d01849cee028943fdbdcc991c0f02fce45af3f40dd415"
        },
        "downloads": -1,
        "filename": "jupyterhub-idle-culler-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "281a1ecc30fc5e11f7905ea0903e7469",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16651,
        "upload_time": "2021-10-15T12:41:57",
        "upload_time_iso_8601": "2021-10-15T12:41:57.232885Z",
        "url": "https://files.pythonhosted.org/packages/e8/be/f225c5d4cd186f793e46ababecee6ee62b2a57906a0ec1fc0453cda6c6ed/jupyterhub-idle-culler-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f522bbc32b5dfcd0046fe18ae9ee63c806b21d7efdde3051428a703e348793f4",
        "md5": "621bd4699520a9b6e2934e14bd601575",
        "sha256": "c84e45a51932a34bd95c08b3b6e8330fb0ee3391fa4d0f1ac0d4458a40492fd9"
      },
      "downloads": -1,
      "filename": "jupyterhub_idle_culler-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "621bd4699520a9b6e2934e14bd601575",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13595,
      "upload_time": "2021-10-15T12:41:55",
      "upload_time_iso_8601": "2021-10-15T12:41:55.572881Z",
      "url": "https://files.pythonhosted.org/packages/f5/22/bbc32b5dfcd0046fe18ae9ee63c806b21d7efdde3051428a703e348793f4/jupyterhub_idle_culler-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8bef225c5d4cd186f793e46ababecee6ee62b2a57906a0ec1fc0453cda6c6ed",
        "md5": "281a1ecc30fc5e11f7905ea0903e7469",
        "sha256": "d80822982d2590cb876d01849cee028943fdbdcc991c0f02fce45af3f40dd415"
      },
      "downloads": -1,
      "filename": "jupyterhub-idle-culler-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "281a1ecc30fc5e11f7905ea0903e7469",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16651,
      "upload_time": "2021-10-15T12:41:57",
      "upload_time_iso_8601": "2021-10-15T12:41:57.232885Z",
      "url": "https://files.pythonhosted.org/packages/e8/be/f225c5d4cd186f793e46ababecee6ee62b2a57906a0ec1fc0453cda6c6ed/jupyterhub-idle-culler-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}