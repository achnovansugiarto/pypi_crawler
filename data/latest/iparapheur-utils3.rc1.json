{
  "info": {
    "author": "Libriciel SCOP",
    "author_email": "contact@libriciel.fr",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "i-Parapheur Utils\n=================\n\n[![PyPi](https://img.shields.io/pypi/v/iparapheur-utils.svg)](https://pypi.org/project/iparapheur-utils)\n\n\n# Introduction\n\nC'est principalement une librairie écrite en Python permettant la communication avec le [i-Parapheur](https://www.libriciel.fr/iparapheur/) en version 4.2+, au travers de l'API REST ou via webservice SOAP.\n\nElle offre des commandes accessibles depuis un shell standard, pour faciliter certaines opérations d'exploitation.\n\n# Installation\n\nSur une distribution Ubuntu 18.04 LTS :\n\n* une instance i-Parapheur accessible en v4.4.0 ou plus\n* un environnement Python fonctionnel !\n* ajout de l'outil ` pip ` depuis un terminal BASH :\n\n```bash\nsudo bash\ncurl https://bootstrap.pypa.io/get-pip.py | python\n```\n\n* installation du paquet python `iparapheur-utils`, depuis un terminal BASH :\n\n```bash\nsudo pip install iparapheur-utils\n```\n\n## Problèmes connus et solutions\n\n### python2 et python3 coexistent sur la machine\n\nLancer les commandes pour python2, spécifiquement (partant du principe que `python2` pointe sur l'exécutable python 2)\n\n```bash\ncurl https://bootstrap.pypa.io/get-pip.py | python2\nsudo python2 -m pip install iparapheur-utils\n```\n\n### Erreur urllib3 : \"No module named ordered_dict\"\n\nUne dépendance de iparapheur-utils est installée dans une mauvaise version, non supportée (eg urllib3 v 1.24).\nIl faut la désinstaller et la réinstaller dans la bonne version (v 1.23).\n\n```bash\nsudo pip uninstall urllib3\nsudo pip install urllib3==1.23\n```\n\n## Cas d'environnement avec MitM\n\nCertains environnements réseau bloquent l'accès à pypi.org, avec un message \"SSL Error: Certificate_Verify_Failed\".\n\n> Could not fetch URL https://pypi.org/…/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host=’pypi.org’, port=443): Max retries exceeded with url: /…/ (Caused by SSLError(SSLCertVerificationError(1, ‘[ SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: …\n\nIl est possible de passer outre, au prix d'une réduction de la confiance, avec l'argument `--trusted-host`\n\n```bash\nsudo pip install --trusted-host pypi.org  iparapheur-utils\n```\n\n\n## Support CentOS / RHEL :\n\n* Version 6 : Cette version n'est plus supportée, en cause une version de python trop ancienne (2.6)\n* Version 7 : Cette version requiert l'installation de paquets supplémentaires :  \n  `yum install libffi-devel gcc openssl-devel`\n\n# Usage\n\nCes commandes sont actuellement disponibles :\n\n- [`ph-init`](#ph-init)\n- [`ph-check`](#ph-check)\n- [`ph-echo`](#ph-echo)\n- [`ph-recupArchives`](#ph-recuparchives)\n- [`ph-export`](#ph-export)\n- [`ph-import`](#ph-import)\n- [`ph-rename`](#ph-rename)\n- [`ph-removeldap`](#ph-removeldap)\n- [`ph-pushdoc`](#ph-pushdoc)\n- [`ph-ipclean`](#ph-ipclean)\n- [`ph-ldapsearch`](#ph-ldapsearch)\n- [`ph-count_files`](#ph-count_files)\n- [`ph-reset_admin_password`](#ph-reset_admin_password)\n- [`ph-patch`](#ph-patch)\n- [`ph-recupfull`](#ph-recupfull)\n- [`ph-orphan`](#ph-orphan)\n\n> Remarques : Elles sont conçues pour être exécutées en environnement bash standard: ligne de commande, ou script BASH.  \nAucune qualification à ce stade pour l'usage de ces commandes dans un interpréteur Python.\n\n## `ph-init`\n\nCette commande permet la génération d'un fichier de configuration \"par défaut\", qu'il faut bien sûr adapter au serveur.\n\nExemple d'utilisation :\n```\nusage: ph-init [-h] [-p P] [-c {recuparchives,export,import}]\n\nGénère un fichier de configuration par défaut dans le répertoire courant\n\nArguments:\n  -h, --help            Affiche ce message et quitte\n  -p P                  Chemin du fichier de configuration\n  -c {recuparchives,export,import}\n                        Commande pour laquelle générer le fichier de\n                        configuration\n```\n\nLe lancement de la commande génère un fichier `iparapheur-utils.cfg`, lu par défaut lors de l'appel des autres fonctions\n\n## `ph-check`\n\nLance le script de check d'installation. Pas de pré-requis particulier.\n\n## `ph-echo`\n\nLance la fonction `echo` vers le i-Parapheur désigné dans le fichier de configuration.\n\nExemple d'utilisation :\n```\nph-echo -h\n---\nusage: ph-echo [-h] [-s S] [-c C] [-u U] [-p P]\n\nLance un echo via webservice sur un iParapheur\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n  -s S        URL du serveur iParapheur\n  -c C        Fichier de configuration\n  -u U        Utilisateur\n  -p P        Mot de passe\n```\n\n## `ph-recupArchives`\n\nLance la fonction de récupération ou/et de purge des archives.\nIl est vivement conseillé d'utiliser la commande `ph-init -c recuparchives` afin de générer un squelette de fichier de configuration complet.\n\nExemple d'utilisation :\n```\nph-recupArchives -h\n---\nusage: ph-recupArchives [-h] [-s S] [-c C] [-u U] [-p P] [-f F] [-ps PS]\n                        [-r {true,false}] [-i {true,false}] [-pu {true,false}]\n                        [-d {true,false}] [-t T] [-st ST] [-w W]\n\nLance une récupération / purge des archives\n\nArguments:\n  -h, --help        Affiche ce message et quitte\n  -s S              URL du serveur iParapheur\n  -c C              Fichier de configuration\n  -u U              Utilisateur\n  -p P              Mot de passe\n  -f F              Répertoire de destination\n  -ps PS            Taille des pages à récupérer\n  -r {true,false}   Chemins réduis des téléchargements\n  -i {true,false}   Ajout identifiant alfresco dans le chemin complet (true par defaut)\n  -pu {true,false}  Active la purge les données\n  -d {true,false}   Télécharge les données\n  -t T              Filtre sur type\n  -st ST            Filtre sur sous-type\n  -w W              Délai de conservation des données\n```\n\n## `ph-export`\n\nLance la fonction d'exporation de la configuration du parapheur vers un dossier.\nIl est vivement conseillé d'utiliser la commande `ph-init -c export` afin de générer un squelette de fichier de configuration complet.\nLa liste des éléments à exporter peut être modifiée dans ce fichier.\n\n**ATTENTION** : Seule la **configuration** du parapheur est exportée. Comprendre qu'aucun dossier, archive, statistique ou historique n'est conservé.\n\nExemple d'utilisation :\n```\nusage: ph-export [-h] [-s S] [-c C] [-u U] [-p P] [-i I] [-dh DH] [-dp DP]\n                 [-du DU] [-dpw DPW] [-dd DD] [-ou OU] [-og OG] [-ob OB] [-oc OC] [-ot OT] [-om OM] [-oq OQ] [-oa OA]\n\nExporte la configuration du parapheur ciblé vers un dossier\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n  -s S        URL du serveur iParapheur\n  -c C        Fichier de configuration\n  -u U        Utilisateur administrateur\n  -p P        Mot de passe\n  -i I        Répertoire de destination\n  -dh DH      IP du serveur mysql\n  -dp DP      Port du serveur mysql\n  -du DU      Utilisateur alfresco de mysql\n  -dpw DPW    Mot de passe utilisateur alfresco de mysql\n  -dd DD      Nom de la base mysql\n  -ou {true,false}      Boolean importe les utilisateurs\n  -og {true,false}      Boolean importe les groupes\n  -ob {true,false}      Boolean importe les bureaux\n  -oc {true,false}      Boolean importe les circuits\n  -ot {true,false}      Boolean importe les types et sous-types\n  -om {true,false}      Boolean importe les metadatas\n  -oq {true,false}      Boolean importe les calques\n  -oa {true,false}      Boolean importe les advanced\n\n```\n\n## `ph-import`\n\nLance la fonction d'importation de la configuration du parapheur à partir d'un dossier.\nIl est vivement conseillé d'utiliser la commande `ph-init -c import` afin de générer un squelette de fichier de configuration complet.\n\n**ATTENTION** : Seule la **configuration** du parapheur est importée. Comprendre qu'aucun dossier, archive, statistique ou historique n'est conservé.\n\nExemple d'utilisation :\n```\nusage: ph-import [-h] [-s S] [-c C] [-u U] [-p P] [-i I] [-dh DH] [-dp DP]\n                 [-du DU] [-dpw DPW] [-dd DD]\n\nImporte la configuration ciblée dans un parapheur vierge\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n  -s S        URL du serveur iParapheur\n  -c C        Fichier de configuration\n  -u U        Utilisateur administrateur\n  -p P        Mot de passe\n  -i I        Répertoire à importer\n  -dh DH      IP du serveur mysql\n  -dp DP      Port du serveur mysql\n  -du DU      Utilisateur alfresco de mysql\n  -dpw DPW    Mot de passe utilisateur alfresco de mysql\n  -dd DD      Nom de la base mysql\n```\n\n## `ph-rename`\n\nCette commande permet de changer l'URL d'accès au i-Parapheur\n\nExemple d'utilisation :\n```\nusage: ph-rename [-h] -n N\n\nChange l'URL d'accès du i-Parapheur\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n  -n N        Nouvelle URL du serveur iParapheur\n\n```\n\nLe lancement de la commande modifie l'URL d'accès au i-Parapheur mais ne change pas la configuration du certificat serveur.\n\nIl est important de suivre la procédure de changement de certificat serveur donnée après le lancement de la commande.\n\n```\nATTENTION ! Le certificat configuré dans le fichier /etc/nginx/conf.d/parapheur_ssl.conf\nne correspond potentiellement plus avec le nouveau nom du parapheur.\nIl convient de remplacer ce certificat (localisé dans le dossier /etc/nginx/ssl/)\npour que le parapheur soit totalement fonctionnel.\n\nPropriétés à modifier dans le fichier de configuration /etc/nginx/conf.d/parapheur_ssl.conf :\n- ssl_certficiate /etc/nginx/ssl/test.pem;     # Partie publique\n- ssl_certficiate_key /etc/nginx/ssl/test.key; # Partie privée\n\nUne fois les modifications de certificat effectuées, relancer le service NginX :\nservice nginx restart\n```\n\n## `ph-removeldap`\n\nCette commande permet de supprimer les utilisateurs synchronisés avec un LDAP n'ayant aucun bureau liés.\n\nExemple d'utilisation :\n```\nusage: ph-removeldap [-h]\n\nSupprime les utilisateurs synchronisés LDAP n'ayant aucune liaison avec un bureau\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n\n```\n\n## `ph-pushdoc`\n\nLance la fonction d'importation de dossier via le connecteur générique Pushdoc.\nIl est vivement conseillé d'utiliser la commande ` ph-init -c pushdoc ` afin de générer un squelette de fichier de configuration complet.\n\n**ATTENTION** : Des pré-requis sont nécéssaires avant l'utilisation de cette commande :\n- Un jar pushdoc en dernière version dans le même dossier que ce script\n- Tout le nécéssaire pour faire fonctionner pushdoc (wsdl, conf.cf, keystore, truststore)\n- Le fichier par défaut pour le visuel pdf des flux PES (template-visuelPDF.pdf)\n\nExemple d'utilisation :\n```\nusage: ph-pushdoc [-h] [-c C] [-j J] [-i I] [-e E] [-x X] [-v V]\n\nImporte la configuration ciblée dans un parapheur vierge\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n  -c C        Fichier de configuration\n  -j J        Fichier JAR du pushdoc\n  -i I        Répertoire à traiter\n  -e E        Courriel de l'utilisateur webservice\n  -x X        xPath par défaut dans le cas d'un envoi de flux PES\n  -v V        Visuel PDF à utiliser dans le cas d'un envoi de flux PES\n```\n\n## `ph-ipclean`\n\nCette commande permet de générer les index automatiquement en supprimant les noeuds dans la base de données, en lançant\nla procédure doIPcleantransaction.sql, en supprimant les dossiers alf_data/lucene-indexes et\nalf_data/backup-lucene-indexes et en coupant et relançant l'application.\n\nExemple d'utilisation :\n```\nusage: ph-ipclean [-h]\n\nGénère les index\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n\n```\n\n## `ph-ldapsearch`\n\nCette commande vérifie que le fichier de conf LDAP est bien présent, que la synchronisation est bien demandée, que le serveur est accessible.\nPuis affiche la requête LDAP complète et enfin retourne la liste des utilisateurs correspondants.\nIl est vivement conseillé d'utiliser la commande `ph-init -c ldapsearch` afin de générer un squelette de fichier de configuration complet.\n\n\nExemple d'utilisation :\n```\nusage: ph-ldapsearch [-h]\n\nGénère des vérifications de propriétés du fichier conf, la requête LDAP, la liste des utilisateurs retournés par celle-ci.\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n\n```\n\n\n## `ph-count_files`\n\nCette commande affiche un tableau récapitulatif du nombre de dossier et d'archives par tenant. Les dossiers sont classés par bureau et banette.\n\nExemple d'utilisation :\n```\nusage: ph-count_files [-h]\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n\n```\n\n\n## `ph-reset_admin_password`\n\nCette commande passe le mot de passe de l'utilisateur à \"admin\".\nIl est vivement conseillé d'utiliser la commande `ph-init -c reset_admin_password` afin de générer un squelette de fichier de configuration complet.\n\nExemple d'utilisation :\n```\nusage: ph-reset_admin_password [-h] [-c C] [-dh DH] [-dp DP] [-du DU] [-dpw DPW] [-dd DD]\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n  -c C        Fichier de configuration\n  -dh DH      IP du serveur mysql\n  -dp DP      Port du serveur mysql\n  -du DU      Utilisateur alfresco de mysql\n  -dpw DPW    Mot de passe utilisateur alfresco de mysql\n  -dd DD      Nom de la base mysql\n\n```\n\n## `ph-patch`\n\nCette commande déploie le patch.\n\nIl faut au préalable créer un dossier contenant l'archive tar.gz du patch,\net compléter le iparapheur-utils.cfg (en lançant la commande `ph-init -c patch`)\n\nExemple d'utilisation :\n```\nusage: ph-patch [-h] [-c C] [-u U] [-d D]\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n  -c C        Fichier de configuration\n  -u U        URL webservice sans le \"secure-\"\n  -d D        dossier du parapheur (par défaut /opt/iParapheur)\n```\n\n## `ph-recupfull`\n\nCette commande est une nouvelle version de `ph-recuparchives`, plus complète.\n\nLa principale nouveauté : prise en compte des métadonnées dans l'opération de récupération.\n\nIl y a 4 nouvelles fonctionnalités :\n\n- récupérer les archives sous forme d'arborescence personnalisée,\n- ajout d'un fichier de propriété XML pour chaque archive, \n- 1 rapport d'exécution au format CSV \n- et 1 log au format CSV.\n\nIl faut au préalable compléter le `iparapheur-utils.cfg` (en lançant la commande `ph-init -c recupfull`)\n\nExemple d'utilisation :\n\n```\nph-recupfull -h\n---\nusage: ph-recupArchives [-h] [-s S] [-c C] [-u U] [-p P] [-f F] [-ps PS]\n                        [-r {true,false}] [-i {true,false}] [-pu {true,false}]\n                        [-d {true,false}] [-t T] [-st ST] [-w W]\n\nLance une récupération / purge des archives\n\nArguments:\n  -h, --help        Affiche ce message et quitte\n  -c C              Fichier de configuration\n  \n  -u U              Utilisateur\n  -p P              Mot de passe\n  -s S              URL du serveur iParapheur\n  \n  -f F              Répertoire de destination\n  -ps PS            Taille des pages à récupérer\n  -pu {true,false}  Active la purge les données\n  -d {true,false}   Télécharge les données\n  -mx {true,false}  Ajout d un fichier de propriété au format XML pour chaque archive\n  -t T              Filtre sur type\n  -st ST            Filtre sur sous-type\n  -w W              Délai de conservation des données\n  \n  -ml ml            Liste des métadonnées a exploiter au format CSV\n  -mdv mdv          Liste des valeurs par défaut des métadonnées à exploiter au format CSV\n  -mt mt            arborescence par métadonnées ou mots clés\n  -cdr cdr {true,false} CSV généré lors de chaque exécution : tous les répertoires créés\n  -clr clr {true,false} log au format CSV : tous les dossiers créés \n```\n\n## `ph-template`\n\nCette commande permet de :\n- sauvegarder les templates et bordereau dans un fichier ZIP daté\n- vérifie pour chaque modèle si il n'est pas à jour ou si il a été modifié\n- si reload = true, les modèles sont rechargés \n\nIl faut au préalable compléter le `iparapheur-utils.cfg` (en lançant la commande `ph-init -c template`)\n\nExemple d'utilisation :\n\n```\nph-template -h\n---\nusage: ph-template [-h] [-c C] [-u U] [-p P] [-s S [-r {true,false}] \n\nArguments:\n  -h, --help        Affiche ce message et quitte\n  -c C              Fichier de configuration\n  \n  -u U              Utilisateur\n  -p P              Mot de passe\n  -s S              URL du serveur iParapheur\n  -r {true,false}   Rechargement des modèles\n```\n\n\n## `ph-orphan`\n\nCette commande indique si il y a des noeuds orphelins avec un message et un code retour.\n0 = il n'y a pas de noeud orphelin\n1 = il y a des noeuds orphelins\n\nExemple d'utilisation :\n```\nusage: ph-orphan \n```\n\n# Utilisation en librairie\n\nDéfinir un fichier de configuration `script.cfg` dans le répertoire racine via la commande `ph-init`, qui aura la forme suivante :\n\n```ini\n[Parapheur]\nusername = admin\npassword = admin\nserver = secure-iparapheur.dom.local\n```\n\nPuis, créer un script python avec utilisation de l'API REST :\n\n```python\n#!/usr/bin/env python\n# coding=utf-8\n\nimport parapheur\n\n# Init REST API client\nclient = parapheur.getrestclient()\n\nif client.islogged:\n    # Do a lot of things...\n```\n\nOu, pour une utilisation avec l'API SOAP :\n\n```python\n#!/usr/bin/env python\n# coding=utf-8\n\nimport parapheur\n\n# Init SOAP API client\nwebservice = parapheur.getsoapclient()\n\nwebservice.call().echo('Coucou, ici python !')\n```\n\nLe rendre éxecutable, puis le lancer depuis une console bash :\n\n```bash\nchmod +x ./script.py\n./script.py\n```\n\n# Cas spécifiques\n\n## Proxy\n\nIl est possible de contourner l'usage d'un proxy pour les appels Webservices ou API REST,\nsi le script à lancer doit communiquer directement avec le serveur i-Parapheur\nsans passer par un éventuel proxy défini sur le système.\n\nPour cela, il suffit d'ajouter la variable **NO_PROXY** avant l'appel d'une fonction ou d'un script.\nPar exemple, pour un appel de `ph-echo` vers `secure-iparapheur.dom.local`, la commande sera :\n\n```bash\nNO_PROXY=\"secure-iparapheur.dom.local\" ph-echo\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.libriciel.fr/i-parapheur/client-python",
    "keywords": "",
    "license": "AGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "iparapheur-utils3",
    "package_url": "https://pypi.org/project/iparapheur-utils3/",
    "platform": null,
    "project_url": "https://pypi.org/project/iparapheur-utils3/",
    "project_urls": {
      "Homepage": "https://gitlab.libriciel.fr/i-parapheur/client-python"
    },
    "release_url": "https://pypi.org/project/iparapheur-utils3/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Client python pour i-Parapheur",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15162857,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "634f322ad3a85049f093a78a4902016d98eb1c7463131e36ffff95d0d5cbefb9",
          "md5": "f13da2f20d6d42fee6c68d09df77559c",
          "sha256": "306526c2dd376f8cc13db40c68353f6ef24ee3d8347c28d5f6196807d3ae3688"
        },
        "downloads": -1,
        "filename": "iparapheur-utils3-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f13da2f20d6d42fee6c68d09df77559c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 88550,
        "upload_time": "2022-09-21T07:55:21",
        "upload_time_iso_8601": "2022-09-21T07:55:21.928102Z",
        "url": "https://files.pythonhosted.org/packages/63/4f/322ad3a85049f093a78a4902016d98eb1c7463131e36ffff95d0d5cbefb9/iparapheur-utils3-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "634f322ad3a85049f093a78a4902016d98eb1c7463131e36ffff95d0d5cbefb9",
        "md5": "f13da2f20d6d42fee6c68d09df77559c",
        "sha256": "306526c2dd376f8cc13db40c68353f6ef24ee3d8347c28d5f6196807d3ae3688"
      },
      "downloads": -1,
      "filename": "iparapheur-utils3-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f13da2f20d6d42fee6c68d09df77559c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 88550,
      "upload_time": "2022-09-21T07:55:21",
      "upload_time_iso_8601": "2022-09-21T07:55:21.928102Z",
      "url": "https://files.pythonhosted.org/packages/63/4f/322ad3a85049f093a78a4902016d98eb1c7463131e36ffff95d0d5cbefb9/iparapheur-utils3-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}