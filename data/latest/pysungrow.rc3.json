{
  "info": {
    "author": "Jan Dalheimer",
    "author_email": "jan@dalheimer.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Networking"
    ],
    "description": "# pysungrow - Python interface to Sungrow inverters\n\n![PyPI](https://img.shields.io/pypi/v/pysungrow)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pysungrow)\n![PyPI - Status](https://img.shields.io/pypi/status/pysungrow)\n![GitHub](https://img.shields.io/github/license/02jandal/pysungrow)\n[![CI](https://github.com/02JanDal/pysungrow/actions/workflows/ci.yaml/badge.svg?branch=main)](https://github.com/02JanDal/pysungrow/actions/workflows/ci.yaml)\n\nThis Python package provides abstractions over the Modbus protocol used by inverters of the brand Sungrow.\n\n## Features\n\n- Both getting and setting data\n- Fully async\n- Fully typed\n- Supports most forms of Modbus (TCP, UDP, TLS and Serial)\n- (Theoretically) supports most Sungrow inverters, both string and hybrid\n- High test coverage\n\n## Supported inverters\n\n**Tested:** SH10RT\n\n**In theory:** SG60KTL, SG60KU, SG33KTL-M, SG36KTL-M, SG40KTL-M, SG50KTL-M, SG60KTL-M, SG60KU-M, SG49K5J, SG8KTL-M, SG10KTL-M, SG12KTL-M, SG80KTL, SG80KTL-M, SG80HV, SG125HV, SH5K-20, SH3K6, SH4K6, SH5K-V13, SH5K-30, SH3K6-30, SH4K6-30, SH5.0RS, SH3.6RS, SH4.6RS, SH6.0RS, SH8.0RT, SH6.0RT, SH5.0RT\n\nDo you have an inverter that's not been tested yet? Please follow the instructions under _Getting started_ including running the `get` command, and report the result in a [new issue](https://github.com/02JanDal/pysungrow/issues/new).\n\n## Getting started\n\nInstall using `pip`:\n\n```bash\npip install pysungrow\n```\n\nSee below for usaging from Python. Also comes with a simple command line interface:\n\n```\npysungrow [-p PORT] [-s SLAVE] [HOST] identify\npysungrow [-p PORT] [-s SLAVE] [HOST] get [-k KEY]\npysungrow [-p PORT] [-s SLAVE] [HOST] set [KEY] [VALUE]\n```\n\nIt is recommended to start using these commands to verify that you can connect to your inverter successfully.\n\n## Usage\n\n### Getting data from the inverter\n\n```python\nfrom pysungrow import identify, SungrowClient\nfrom pymodbus.client import AsyncModbusTcpClient\n\nasync def example_get():\n    modbus_client = AsyncModbusTcpClient(\"192.168.1.228\")\n\n    # first we need to identify the model of inverter...\n    serial_number, device, output_type = await identify(modbus_client)\n\n    # ...then we can create a client...\n    client = SungrowClient(modbus_client, device, output_type)\n\n    # ...using which we can get data\n    return await client.get(\"total_dc_power\")\n```\n\nNote that the first call to `client.get` will fetch all variables defined for your model of inverter. You can limit this by first manually triggering a fetch using `await client.refresh([\"total_dc_power\"])`.\n\n### Controlling the inverter\n\n```python\nfrom pysungrow import identify, SungrowClient\nfrom pysungrow.definitions.variables.hybrid import ChargeDischargeCommand\nfrom pymodbus.client import AsyncModbusTcpClient\n\nasync def example_set():\n    modbus_client = AsyncModbusTcpClient(\"192.168.1.228\")\n\n    # first we need to identify the model of inverter...\n    serial_number, device, output_type = await identify(modbus_client)\n\n    # ...then we can create a client...\n    client = SungrowClient(modbus_client, device, output_type)\n\n    # ...using which we can control the inverter\n    await client.set(\"charge_discharge_command\", ChargeDischargeCommand.CHARGE)\n```\n\n## Contributing\n\nContributions are always welcome!\n\nFor code contributions please make sure that all automated checks pass. The easiest way to do this is using these commands:\n\n```bash\npre-commit run --all-files\npytest\n```\n## Acknowledgements\n\nThere are a few other similar projects available (however neither of them fit my needs):\n\n - [SungrowInverter](https://github.com/mvandersteen/SungrowInverter) by @mvandersteen\n - [HomeAssistant Modbus mappings](https://github.com/mkaiser/Sungrow-SHx-Inverter-Modbus-Home-Assistant) by @mkaiser\n - [sungrow-websocket](https://github.com/wallento/sungrow-websocket) by @wallento\n \n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/02JanDal/pysungrow",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pysungrow",
    "package_url": "https://pypi.org/project/pysungrow/",
    "platform": null,
    "project_url": "https://pypi.org/project/pysungrow/",
    "project_urls": {
      "Homepage": "https://github.com/02JanDal/pysungrow",
      "Repository": "https://github.com/02JanDal/pysungrow"
    },
    "release_url": "https://pypi.org/project/pysungrow/1.1.0/",
    "requires_dist": [
      "pymodbus (>=2.5.3)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Read and manipulate Sungrow inverters",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16716650,
  "releases": {
    "0.1.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffe7ebe1740fd41b6b023362b31ae66bed14baf1da8ccba7efba89850037f0c5",
          "md5": "232203b6ad66141869fa0eaec61ec0dd",
          "sha256": "36ef8b9a0e47fd87dee4a87b8e1ad197c29ece14e36adc2a6886e42b52210cc1"
        },
        "downloads": -1,
        "filename": "pysungrow-0.1.0rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "232203b6ad66141869fa0eaec61ec0dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 23821,
        "upload_time": "2022-12-28T20:39:03",
        "upload_time_iso_8601": "2022-12-28T20:39:03.455256Z",
        "url": "https://files.pythonhosted.org/packages/ff/e7/ebe1740fd41b6b023362b31ae66bed14baf1da8ccba7efba89850037f0c5/pysungrow-0.1.0rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "275fe4f123e5f4e82ec34b526bf3588961983e0179101db27a3e3cc7aa9664ea",
          "md5": "242f19e7c3b58a1412582c6d9603f744",
          "sha256": "eadec0024ccbd5d71616184d2d85207e5a5004d9da0bcb149828d4861195cd97"
        },
        "downloads": -1,
        "filename": "pysungrow-0.1.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "242f19e7c3b58a1412582c6d9603f744",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 19410,
        "upload_time": "2022-12-28T20:39:04",
        "upload_time_iso_8601": "2022-12-28T20:39:04.822592Z",
        "url": "https://files.pythonhosted.org/packages/27/5f/e4f123e5f4e82ec34b526bf3588961983e0179101db27a3e3cc7aa9664ea/pysungrow-0.1.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ebe70fc7c1f24532bab2f510cd928ac6b4219e8675b0550532985ce39cb0a22",
          "md5": "7d30d019cc2678ce973ce1511d46cf65",
          "sha256": "e08a21316c04e36510e5e78b0f7b8b52b094c8df34fd8297eb80c774947f7fd9"
        },
        "downloads": -1,
        "filename": "pysungrow-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d30d019cc2678ce973ce1511d46cf65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 23825,
        "upload_time": "2022-12-28T21:05:08",
        "upload_time_iso_8601": "2022-12-28T21:05:08.591968Z",
        "url": "https://files.pythonhosted.org/packages/1e/be/70fc7c1f24532bab2f510cd928ac6b4219e8675b0550532985ce39cb0a22/pysungrow-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6401c9f63a208447aa310fa872c50809e9f56e5570f8f624404d7c9b2ed9d91",
          "md5": "ba75bbad721cf460defe1e483f7d5161",
          "sha256": "16677257f4b7dcd69219516171d90b8bd2ca53606b06f2781915439bc6e169c5"
        },
        "downloads": -1,
        "filename": "pysungrow-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ba75bbad721cf460defe1e483f7d5161",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 19466,
        "upload_time": "2022-12-28T21:05:09",
        "upload_time_iso_8601": "2022-12-28T21:05:09.954451Z",
        "url": "https://files.pythonhosted.org/packages/a6/40/1c9f63a208447aa310fa872c50809e9f56e5570f8f624404d7c9b2ed9d91/pysungrow-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "505f1e0618d3f3f850a3aad64297437c6a8eff91b2018615f0aa191c6fbbdc98",
          "md5": "be6f854a86b6e90014a64c9038ee97a5",
          "sha256": "0c3cf2947677a1690c192db8e63d3df0bd59a51644d08b21a24f4d558e97072b"
        },
        "downloads": -1,
        "filename": "pysungrow-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be6f854a86b6e90014a64c9038ee97a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 25329,
        "upload_time": "2023-02-06T20:11:09",
        "upload_time_iso_8601": "2023-02-06T20:11:09.372945Z",
        "url": "https://files.pythonhosted.org/packages/50/5f/1e0618d3f3f850a3aad64297437c6a8eff91b2018615f0aa191c6fbbdc98/pysungrow-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc56892ac21d980c9fe6e7954b8e16ef105428fda64073afe12541e47437db4a",
          "md5": "7de1ed5e4a91e7270b6823a1f702108e",
          "sha256": "48886c1bdd2f8534d4f6d2bf55cc8d44792b51b4af0a3f0be95b8fdda0913b4d"
        },
        "downloads": -1,
        "filename": "pysungrow-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7de1ed5e4a91e7270b6823a1f702108e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 20599,
        "upload_time": "2023-02-06T20:11:11",
        "upload_time_iso_8601": "2023-02-06T20:11:11.303484Z",
        "url": "https://files.pythonhosted.org/packages/bc/56/892ac21d980c9fe6e7954b8e16ef105428fda64073afe12541e47437db4a/pysungrow-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "505f1e0618d3f3f850a3aad64297437c6a8eff91b2018615f0aa191c6fbbdc98",
        "md5": "be6f854a86b6e90014a64c9038ee97a5",
        "sha256": "0c3cf2947677a1690c192db8e63d3df0bd59a51644d08b21a24f4d558e97072b"
      },
      "downloads": -1,
      "filename": "pysungrow-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "be6f854a86b6e90014a64c9038ee97a5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 25329,
      "upload_time": "2023-02-06T20:11:09",
      "upload_time_iso_8601": "2023-02-06T20:11:09.372945Z",
      "url": "https://files.pythonhosted.org/packages/50/5f/1e0618d3f3f850a3aad64297437c6a8eff91b2018615f0aa191c6fbbdc98/pysungrow-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc56892ac21d980c9fe6e7954b8e16ef105428fda64073afe12541e47437db4a",
        "md5": "7de1ed5e4a91e7270b6823a1f702108e",
        "sha256": "48886c1bdd2f8534d4f6d2bf55cc8d44792b51b4af0a3f0be95b8fdda0913b4d"
      },
      "downloads": -1,
      "filename": "pysungrow-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7de1ed5e4a91e7270b6823a1f702108e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 20599,
      "upload_time": "2023-02-06T20:11:11",
      "upload_time_iso_8601": "2023-02-06T20:11:11.303484Z",
      "url": "https://files.pythonhosted.org/packages/bc/56/892ac21d980c9fe6e7954b8e16ef105428fda64073afe12541e47437db4a/pysungrow-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}