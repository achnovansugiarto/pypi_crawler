{
  "info": {
    "author": "James D. Lin",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# spawneditor\n\nA Python module that attempts to provide a common interface for opening an\neditor at a specified line in a file.\n\nThe launched editor will be chosen from, in order:\n\n1. The explicitly specified editor.\n2. The `VISUAL` environment variable, if `DISPLAY` is available.\n3. The `EDITOR` environment variable.\n4. Hard-coded paths to common editors.\n\n\n## Installation\n\n```shell\npip install --user spawneditor\n```\n\nAlternatively clone the Git repository as a Git submodule named `spawneditor`.\n\n\n## Examples\n\n```python\nimport spawneditor\n\n# Open an existing file in the default editor.\nspawneditor.edit_file(\"path/to/file.txt\")\n\n# A line number may be specified.\nspawneditor.edit_file(\"path/to/file.txt\", line_number=123)\n\n# Edits a blank temporary file.\nedited_lines = spawneditor.edit_temporary()  \n\n# Edits a temporary file with specified content.  Unlike `edit_file`,\n# `edit_temporary` returns the contents of the edited file.\ninstructions = [\n    \"Instructions:\",\n    \"Enter some text below the line.\",\n    \"----\",\n]\nnew_contents = spawneditor.edit_temporary(instructions,\n                                          line_number=(len(instructions) + 1))\n\n# ... or, if you prefer a single string with newlines:\nnew_contents = spawneditor.edit_temporary(\n    sss[\"Instructions:\\nEnter some text below the line.\\n----\"],\n    line_number=4,\n)\n\nfor line in new_contents:\n    print(line, end=\"\")\n```\n\n\n## FAQ\n\n### Q: How does `spawneditor` know how to invoke the editor at a specified line number? \n\n`spawneditor` is hard-coded to recognize and invoke some common editors based on\nthe name of the executed binary.\n\n\n### Q: What is considered a \"common editor\"?\n\nSee the `editor_syntax_table` in [`spawneditor.py`].\n\n\n### Q: What if my editor isn't supported?\n\nOther editors should still work.  At worst, the specified file should be opened\nin the default editor, just not at the specified line.\n\nIf your editor isn't supported, I also encourage filing an issue or pull request\nto add support.\n\n\n### Q: Why not provide some mechanism for end-users to specify the syntax for their editor?\n\nIt's tempting to support using, say, a configuration file to allow users to\nspecify how to invoke arbitrary editors.  I currently prefer not to because:\n* It adds code complexity and incurs a penalty for what is likely to be a rare\n  situation.\n* It reduces incentives to make `spawneditor` support other editors directly.\n* The fallback behavior still should open the file in the default editor, just\n  not at the specified line number.  I think that's pretty acceptable.\n\nOne pathological situation where an override would be necessary is if an editor\nuses the same executable name as one of the recognized editors *and* uses a\ndifferent command-line syntax for specifying the line number.  However, that\nalso should be a very rare situation.\n\nOne compelling reason might be to allow people to set their default editor to a\nwrapper script that invokes their actual editor.  I'm sympathetic to that, but\nin the meantime, the wrapper script could be given the same name as the actual\neditor.\n\n\n### Q: Why does `VISUAL` depend on `DISPLAY`?\n\nTechnically `VISUAL` should refer to a full-screen editor, not necessarily a\ngraphical editor.  In practice, however, I think that the graphical vs.\ntext-mode distinction is far more relevant and important than the distinction\nbetween full-screen and line-based editors.\n\n\n### Q: Why does `spawneditor.edit_file` immediately return when spawning a multi-document editor (e.g. Visual Studio Code, Sublime Text)?\n\nMulti-document editors are typically also *single-instance*: when the editor is\ninvoked, a new process will be spawned, but that process then will forward the\nrequest to an existing, primary process.  The new, secondary process then will\nimmediately exit and cause `spawneditor.edit_file` to return.  Such editors\ntypically provide a command-line option (e.g. `--wait` for Visual Studio Code\nand Sublime Text) to keep the secondary process alive until the file is closed\nby the primary process.  Consult the documentation to your editor.\n\n\n### Q: Aren't there already Python packages that do this?\n\nYes.  The [`editor`] and [`python-editor`] packages are alternatives that also\ninvoke the default editor.  Currently neither one supports opening a file to a\nspecified line number.  Were I aware of them when I wrote `spawneditor`, and\npossibly I would have tried contributing to them instead.  However,\n`spawneditor` is implemented rather differently than either one, and I'm not\nsure that either project would have appreciated drastic changes.  There likely\nis room for cross-pollination.\n\n---\n\nCopyright Â© 2020-2022 James D. Lin.\n\n[`spawneditor.py`]: https://github.com/jamesderlin/python-spawneditor/blob/master/spawneditor.py\n[`editor`]: https://pypi.org/project/editor/\n[`python-editor`]: https://pypi.org/project/python-editor/\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jamesderlin/python-spawneditor",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spawneditor",
    "package_url": "https://pypi.org/project/spawneditor/",
    "platform": null,
    "project_url": "https://pypi.org/project/spawneditor/",
    "project_urls": {
      "Bug Reports": "https://github.com/jamesderlin/python-spawneditor/issues",
      "Homepage": "https://github.com/jamesderlin/python-spawneditor"
    },
    "release_url": "https://pypi.org/project/spawneditor/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Attempts to open a file at a specified line in the default editor.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15193280,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60a3e08d044a81e9f07a52d347ec75342acebb05bbe542b89bcb68bc92a83999",
          "md5": "ee247c122e60471a41674ef22ffae466",
          "sha256": "2a9b4a9cf7845c88f2a78f1c236c955b31ffb0b4a89add9217e3f865a3fe964e"
        },
        "downloads": -1,
        "filename": "spawneditor-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee247c122e60471a41674ef22ffae466",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6574,
        "upload_time": "2021-06-05T20:33:07",
        "upload_time_iso_8601": "2021-06-05T20:33:07.958706Z",
        "url": "https://files.pythonhosted.org/packages/60/a3/e08d044a81e9f07a52d347ec75342acebb05bbe542b89bcb68bc92a83999/spawneditor-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "224e99c84716e52ec45c2bb76d68c4537b2c3568cf48c0a209c97bfa6dc62a6f",
          "md5": "85fb1e90be1830ba50dfcf25f0e8fc27",
          "sha256": "16ad94ea9c6277d601dd3fceeb129f2af68f8e71da37517725b4a8037d6f414c"
        },
        "downloads": -1,
        "filename": "spawneditor-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "85fb1e90be1830ba50dfcf25f0e8fc27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6140,
        "upload_time": "2021-06-05T20:33:09",
        "upload_time_iso_8601": "2021-06-05T20:33:09.235051Z",
        "url": "https://files.pythonhosted.org/packages/22/4e/99c84716e52ec45c2bb76d68c4537b2c3568cf48c0a209c97bfa6dc62a6f/spawneditor-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c25cdf0a59cbfa710e3920c9f77f7230235d1f6020ebf4cac50827cff40f5e1",
          "md5": "1e5ab31c50032e4c759774be601c901c",
          "sha256": "421b1d1e28dd82cf36be75e7e7f4d4b8ffb133016fb3d6d8dc23201fa676bde7"
        },
        "downloads": -1,
        "filename": "spawneditor-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e5ab31c50032e4c759774be601c901c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6841,
        "upload_time": "2022-06-05T05:22:30",
        "upload_time_iso_8601": "2022-06-05T05:22:30.245993Z",
        "url": "https://files.pythonhosted.org/packages/7c/25/cdf0a59cbfa710e3920c9f77f7230235d1f6020ebf4cac50827cff40f5e1/spawneditor-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0b6ad661cb3097e3ea07890976e0beedb6ae3cc3e1973f95cbd100cb397271e",
          "md5": "60aee4a1f7d06ec532300d588406401e",
          "sha256": "fcb04e3439f791cb1f3da58ea73e19d2a5db97331c6fd9b0ee6a6a63adedbe01"
        },
        "downloads": -1,
        "filename": "spawneditor-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "60aee4a1f7d06ec532300d588406401e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6353,
        "upload_time": "2022-06-05T05:22:32",
        "upload_time_iso_8601": "2022-06-05T05:22:32.330368Z",
        "url": "https://files.pythonhosted.org/packages/d0/b6/ad661cb3097e3ea07890976e0beedb6ae3cc3e1973f95cbd100cb397271e/spawneditor-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d73901ab9b3d8b80526781a7195dd9375f72e6773fcc11003490287c8b3ad87",
          "md5": "44ba01bcddabf328b95208cedd4e0e15",
          "sha256": "effd5573e962b48b52cdcc8c1a53f20cffd31ba07eb979090d3dab191dd17646"
        },
        "downloads": -1,
        "filename": "spawneditor-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "44ba01bcddabf328b95208cedd4e0e15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6878,
        "upload_time": "2022-09-23T17:47:41",
        "upload_time_iso_8601": "2022-09-23T17:47:41.064712Z",
        "url": "https://files.pythonhosted.org/packages/1d/73/901ab9b3d8b80526781a7195dd9375f72e6773fcc11003490287c8b3ad87/spawneditor-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7a58812ea7ed892391d543bdc85c72326651ea642c9dcc260e5b00b7122544c",
          "md5": "373f74598d3f5ec9eae2419c7ebf7082",
          "sha256": "496a765c1b6f33cae8ff363a686e3d8c1ce293e9ea1130a6a275cee2038e03aa"
        },
        "downloads": -1,
        "filename": "spawneditor-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "373f74598d3f5ec9eae2419c7ebf7082",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6392,
        "upload_time": "2022-09-23T17:47:42",
        "upload_time_iso_8601": "2022-09-23T17:47:42.723541Z",
        "url": "https://files.pythonhosted.org/packages/f7/a5/8812ea7ed892391d543bdc85c72326651ea642c9dcc260e5b00b7122544c/spawneditor-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d73901ab9b3d8b80526781a7195dd9375f72e6773fcc11003490287c8b3ad87",
        "md5": "44ba01bcddabf328b95208cedd4e0e15",
        "sha256": "effd5573e962b48b52cdcc8c1a53f20cffd31ba07eb979090d3dab191dd17646"
      },
      "downloads": -1,
      "filename": "spawneditor-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "44ba01bcddabf328b95208cedd4e0e15",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6878,
      "upload_time": "2022-09-23T17:47:41",
      "upload_time_iso_8601": "2022-09-23T17:47:41.064712Z",
      "url": "https://files.pythonhosted.org/packages/1d/73/901ab9b3d8b80526781a7195dd9375f72e6773fcc11003490287c8b3ad87/spawneditor-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7a58812ea7ed892391d543bdc85c72326651ea642c9dcc260e5b00b7122544c",
        "md5": "373f74598d3f5ec9eae2419c7ebf7082",
        "sha256": "496a765c1b6f33cae8ff363a686e3d8c1ce293e9ea1130a6a275cee2038e03aa"
      },
      "downloads": -1,
      "filename": "spawneditor-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "373f74598d3f5ec9eae2419c7ebf7082",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6392,
      "upload_time": "2022-09-23T17:47:42",
      "upload_time_iso_8601": "2022-09-23T17:47:42.723541Z",
      "url": "https://files.pythonhosted.org/packages/f7/a5/8812ea7ed892391d543bdc85c72326651ea642c9dcc260e5b00b7122544c/spawneditor-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}