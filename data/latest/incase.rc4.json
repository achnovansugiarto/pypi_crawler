{
  "info": {
    "author": "Patrick Shechet",
    "author_email": "patrick.shechet@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "<!--\n*** Thanks for checking out the Best-README-Template. If you have a suggestion\n*** that would make this better, please fork the repo and create a pull request\n*** or simply open an issue with the tag \"enhancement\".\n*** Thanks again! Now go create something AMAZING! :D\n***\n***\n***\n*** To avoid retyping too much info. Do a search and replace for the following:\n*** kajuberdut, incase, twitter_handle, patrick.shechet@gmail.com, incase, String functions in pure Python\n-->\n\n\n\n<!-- PROJECT SHIELDS -->\n<!--\n*** I'm using markdown \"reference style\" links for readability.\n*** Reference links are enclosed in brackets [ ] instead of parentheses ( ).\n*** See the bottom of this document for the declaration of the reference variables\n*** for contributors-url, forks-url, etc. This is an optional, concise syntax you may use.\n*** https://www.markdownguide.org/basic-syntax/#reference-style-links\n-->\n[![Contributors][contributors-shield]][contributors-url]\n[![Forks][forks-shield]][forks-url]\n[![Stargazers][stars-shield]][stars-url]\n[![Issues][issues-shield]][issues-url]\n[![MIT License][license-shield]][license-url]\n[![LinkedIn][linkedin-shield]][linkedin-url]\n\n\n\n<!-- PROJECT LOGO -->\n<br />\n<p align=\"center\">\n  <a href=\"https://github.com/kajuberdut/incase\">\n    <img src=\"https://raw.githubusercontent.com/kajuberdut/incase/main/images/icon.svg\" alt=\"icon\" width=\"160\" height=\"160\">\n  </a>\n\n  <h3 align=\"center\">incase</h3>\n\n  <p align=\"center\">\n    A word case management library with too many features (just in case).\n  </p>\n</p>\n\n\n\n<!-- TABLE OF CONTENTS -->\n<details open=\"open\">\n  <summary><h2 style=\"display: inline-block\">Table of Contents</h2></summary>\n  <ol>\n    <li>\n      <a href=\"#about-the-project\">About The Project</a>\n    </li>\n    <li>\n      <a href=\"#getting-started\">Getting Started</a>\n    </li>\n    <li><a href=\"#usage\">Usage</a>\n    </li>\n    <li><a href=\"#contributing\">Contributing</a></li>\n    <!-- <li><a href=\"#license\">License</a></li> -->\n    <li><a href=\"#contact\">Contact</a></li>\n  </ol>\n</details>\n\n\n\n<!-- ABOUT THE PROJECT -->\n## About The Project\n\nIncase is a library to help manage word case. It includes a class for abstracting away from case for easy comparison of words or conversion to any case.\nIncase also includes a flexible decorator for managing the case of keywords, inputs, and outputs from functions.\n\nCurrently, incase supports the following cases: \ncaseless, camel, dromedary, medial, snake, pascal, initial_capitals, kebab, dash, upper_snake, uppercase, upper, lowercase, lower, title, alternating, sarcasm, original, word\n\nIf you are aware of another case, please open an issue so we can add it!\n\n\n\n<!-- GETTING STARTED -->\n## Getting Started\n\nTo get a local copy up and running follow these simple steps.\n\n### Installing with pip\n\n  ```sh\n  pip install incase\n  ```\n\nFor information about cloning and dev setup see: [Contributing](#Contributing)\n\n\n<!-- USAGE EXAMPLES -->\n## Usage\n\n### CLI\nYou can leverage incase in shell scripts or other non-python contexts by calling it from the cli.\nExample:\n\n\nThe default output is snake case.\n``` shell\n$ incase someCamel\nsome_camel\n```\n\nUse the --case option to set output case\n``` shell\n$ incase someCamel --case lower\nsome camel\n```\n\n### Caseless\nHere is an example showing basic usage of the Caseless class.\n\n```python\nfrom incase import Case, Caseless\n\n# Instances of Caseless are strings\nexample = Caseless(\"example string\")\nprint(isinstance(example, str))\n# True\n\n# By property\nprint(example.snake)\n# example_string\n\n# Or by subscript (string or Case)\nprint(example[\"camel\"])\n# exampleString\n\nprint(example[Case.UPPER_SNAKE])\n# EXAMPLE_STRING\n\n# Caseless ignore case when comparing to str\nprint(Caseless(\"some name\") == \"SOME_NAME\")\n# True\n\n# Caseless hashes ignore case also\na_dict = {Caseless(\"This is a Key\"): \"this\"}\nprint(a_dict[Caseless(\"thisIsAKey\")])\n\n# Caseless can also generate case coercion functions\nmake_camel = Caseless.factory(\"camel\")\n\nprint(make_camel(\"snake_case\"))\n# snakeCase\n\n```\n\n### Helper functions\n\ncase_modifier is a function for altering other functions. It can change the incoming case of parameter values, the case of the keywords provided, or the case of the function output.\n```python\nfrom incase import Case, case_modifier\n\n\n# Some functions you don't control\ndef external_function(expectsCamel, iterationCount):\n    # expects camelCase parameter names\n    for i in range(iterationCount):\n        print(expectsCamel)\n\n# We'll use case_modifier. Now any keyword will be turned to camelCase\nf = case_modifier(keywords_case=Case.CAMEL)(external_function)\n\nf(expects_camel=\"this\", iteration_count=1)\n# this\n\n# Here, we'll use case modifier as a function decorator\n#  to give a sarcastic twist to our output\n@case_modifier(args_case=\"sarcasm\")\ndef say_words(*args) -> None:\n    [print(word) for word in args]\n\nsay_words(\"It's all about\", \"the he said\", \"SHE SAID\")\n# It's aLl aBoUt\n# ThE He sAi\n# ShE SaId\n\n```\n\nFinally, incase is a powerful case coercion function.\n```python\nfrom incase import incase\n\n\n# It covers the basic case\nprint(incase(\"snake\", \"example text\"))\n# example_text\n\n# But can also handle sequences\nprint(incase(\"upper\", [\"three\", \"word\", \"list\"]))\n# ['THREE', 'WORD', 'LIST']\nprint(incase(\"upper\", (\"three\", \"word\", \"tuple\")))\n# ('THREE', 'WORD', 'TUPLE')\n\n# Even generators\ngenerator = (word for word in [\"some\", \"list\"])\nincased = incase(\"upper\", generator)\nprint(incased)\n# <generator object _incase_single.<locals>.<genexpr> at ...\nprint(list(incased))\n# ['SOME', 'LIST']\n\n# Or nested objects\nnested = {\n    \"first_key\": [\"some\", \"list\"],\n    \"second_key\": {\"another\": \"dict\"},\n    \"third_key\": 1,\n}\nprint(incase(\"upper\", nested))\n# {\"first_key\": [\"SOME\", \"LIST\"], \"second_key\": {\"another\": \"DICT\"}, \"third_key\": 1}\n\n# Finally, it is possible to map case to objects\nprint(incase([\"upper\", \"lower\", \"snake\", \"camel\"], [\"some_word\"] * 4))\n# ['SOME WORD', 'some word', 'some_word', 'someWord']\n\n# By key\nprint(\n    incase(\n        {\"first_key\": \"alternating\", \"second_key\": \"title\"},\n        {\"first_key\": \"some example\", \"second_key\": \"another example\"},\n    )\n)\n# {'first_key': 'SoMe eXaMpLe', 'second_key': 'Another Example'}\n\nprint(incase({\"bob\": \"upper\"}, \"bob\"))\n\n```\n\n### Planetary Defense Shield\n\nNote that this is probably not a good idea. However, if you want to be able to easily access objects in globals() by a case other then the one they have, you can use the planetary defense shield.\n\n```python\nfrom incase import planetary_defense_shield\n\nTHIS_IS_A_THING = \"Some Value\"\n\n\ndef badCamelCaseFunction():\n    print(\"hi\")\n\n\n# If you pass a case, instead of a dictionary, this will grab most of globals.\n# Also note that the objects that will be cloned are whatever is in globals()\n# at the time you pass it as the second argument, so call accordingly.\nplanetary_defense_shield(\n    {\"THIS_IS_A_THING\": \"snake\", \"badCamelCaseFunction\": \"snake\"}, globals()\n)\n\nprint(this_is_a_thing)\n# Some Value\n\nbad_camel_case_function()\n# hi\n```\n\n<!-- CONTRIBUTING -->\n## Contributing\n\nContributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are **greatly appreciated**.\n\n1. Fork the Project\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n3. Add tests, we aim for 100% test coverage [Using Coverage](https://coverage.readthedocs.io/en/coverage-5.3.1/#using-coverage-py)\n4. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n5. Push to the Branch (`git push origin feature/AmazingFeature`)\n6. Open a Pull Request\n\n### Cloning / Development setup\n1. Clone the repo and install\n    ```sh\n    git clone https://github.com/kajuberdut/incase.git\n    cd incase\n    pipenv install --dev\n    ```\n2. Run tests\n    ```sh\n    pipenv shell\n    ward\n    ```\n  For more about pipenv see: [Pipenv Github](https://github.com/pypa/pipenv)\n\n\n\n<!-- LICENSE -->\n## License\n\nDistributed under the MIT License. See `LICENSE` for more information.\n\n\n<!-- CONTACT -->\n## Contact\n\nPatrick Shechet - patrick.shechet@gmail.com\n\nProject Link: [https://github.com/kajuberdut/incase](https://github.com/kajuberdut/incase)\n\n\n\n\n<!-- MARKDOWN LINKS & IMAGES -->\n<!-- https://www.markdownguide.org/basic-syntax/#reference-style-links -->\n[contributors-shield]: https://img.shields.io/github/contributors/kajuberdut/incase.svg?style=for-the-badge\n[contributors-url]: https://github.com/kajuberdut/incase/graphs/contributors\n[forks-shield]: https://img.shields.io/github/forks/kajuberdut/incase.svg?style=for-the-badge\n[forks-url]: https://github.com/kajuberdut/incase/network/members\n[stars-shield]: https://img.shields.io/github/stars/kajuberdut/incase.svg?style=for-the-badge\n[stars-url]: https://github.com/kajuberdut/incase/stargazers\n[issues-shield]: https://img.shields.io/github/issues/kajuberdut/incase.svg?style=for-the-badge\n[issues-url]: https://github.com/kajuberdut/incase/issues\n[license-shield]: https://img.shields.io/badge/License-MIT-orange.svg?style=for-the-badge\n[license-url]: https://github.com/kajuberdut/incase/blob/main/LICENSE\n[linkedin-shield]: https://img.shields.io/badge/-LinkedIn-black.svg?style=for-the-badge&logo=linkedin&colorB=555\n[linkedin-url]: https://www.linkedin.com/in/patrick-shechet\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kajuberdut/incase",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "incase",
    "package_url": "https://pypi.org/project/incase/",
    "platform": null,
    "project_url": "https://pypi.org/project/incase/",
    "project_urls": {
      "Homepage": "https://github.com/kajuberdut/incase"
    },
    "release_url": "https://pypi.org/project/incase/0.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13388900,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7d17b2f8fa9ccb8fa843be90b2159139886e8d43e9331c30bef132e2c7b8b8b",
          "md5": "e54a637439bf001c43135381d4e82482",
          "sha256": "a0ef83f3edac8bee3c4c75b018360461f1c70e021eba36cdc88e8d3c5f5724fb"
        },
        "downloads": -1,
        "filename": "incase-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e54a637439bf001c43135381d4e82482",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7593,
        "upload_time": "2022-03-27T04:05:27",
        "upload_time_iso_8601": "2022-03-27T04:05:27.551975Z",
        "url": "https://files.pythonhosted.org/packages/c7/d1/7b2f8fa9ccb8fa843be90b2159139886e8d43e9331c30bef132e2c7b8b8b/incase-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea0f438a523075905429c5ca0a706c205ca98b74a333396f5db4a3555757de87",
          "md5": "dc35167c9bbc284a27b5b7de6a8a1a41",
          "sha256": "99dbda2f781a55bffac784cdd4ee6678350943a519af8bd9f645b9166378a309"
        },
        "downloads": -1,
        "filename": "incase-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dc35167c9bbc284a27b5b7de6a8a1a41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7434,
        "upload_time": "2022-03-27T04:05:30",
        "upload_time_iso_8601": "2022-03-27T04:05:30.451280Z",
        "url": "https://files.pythonhosted.org/packages/ea/0f/438a523075905429c5ca0a706c205ca98b74a333396f5db4a3555757de87/incase-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c17cf75646deb0285f93bd6fdaf017ad5c6be04fa999d686e2059c87179c599c",
          "md5": "dad1dd58793f0fb1ec61dc1c115b55f8",
          "sha256": "185f361c7cd6286c8076efbab323c73db32246db0a4d0d7dc790c2a3d1e997e6"
        },
        "downloads": -1,
        "filename": "incase-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dad1dd58793f0fb1ec61dc1c115b55f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8213,
        "upload_time": "2022-03-27T15:24:54",
        "upload_time_iso_8601": "2022-03-27T15:24:54.983184Z",
        "url": "https://files.pythonhosted.org/packages/c1/7c/f75646deb0285f93bd6fdaf017ad5c6be04fa999d686e2059c87179c599c/incase-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cb77a6ecbc9308a62ab65031bdac1ac58da090f675f4435f6d32168cbd890d4",
          "md5": "d1880e03fc851e650a04d1cf086c58ae",
          "sha256": "5194f4798d26b5dac888014937f4111e859ea979fa7d9032310173acb9e65479"
        },
        "downloads": -1,
        "filename": "incase-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d1880e03fc851e650a04d1cf086c58ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7866,
        "upload_time": "2022-03-27T15:24:57",
        "upload_time_iso_8601": "2022-03-27T15:24:57.945898Z",
        "url": "https://files.pythonhosted.org/packages/5c/b7/7a6ecbc9308a62ab65031bdac1ac58da090f675f4435f6d32168cbd890d4/incase-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d72e0bb2ae2b76b4a307a7f867301c3e792b5ad6dd8ebec37bcef5d24a13e7b",
          "md5": "35db0b995e6d2eb73a498debaee88a3e",
          "sha256": "f442d90cd4548e976270e3521d04561bdbe672ea94e2c00d576d68d8cb670243"
        },
        "downloads": -1,
        "filename": "incase-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35db0b995e6d2eb73a498debaee88a3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8992,
        "upload_time": "2022-03-29T03:31:24",
        "upload_time_iso_8601": "2022-03-29T03:31:24.333949Z",
        "url": "https://files.pythonhosted.org/packages/6d/72/e0bb2ae2b76b4a307a7f867301c3e792b5ad6dd8ebec37bcef5d24a13e7b/incase-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7dcb382efa8b627aa5e9d1a87a21ab583c2cbf68163c4d35ea1fd9dd84db794",
          "md5": "53759afed0db54fb7b061b755cb8c7db",
          "sha256": "9e4f8674057916059a28c46b91af9fdd00b16e491f8b551a5e24b211b37781f1"
        },
        "downloads": -1,
        "filename": "incase-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "53759afed0db54fb7b061b755cb8c7db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8655,
        "upload_time": "2022-03-29T03:31:25",
        "upload_time_iso_8601": "2022-03-29T03:31:25.734129Z",
        "url": "https://files.pythonhosted.org/packages/a7/dc/b382efa8b627aa5e9d1a87a21ab583c2cbf68163c4d35ea1fd9dd84db794/incase-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e9ef316f82118c93f939cb2d55d2020b198e1cc8d5b8db4b37839e287d717b4",
          "md5": "2beda9824e56cc1ecd9f3fc67626453a",
          "sha256": "0a22efe3047f044a81dd2ec4fab178e1c81e323e8b21fb7fa3ed76b170c97877"
        },
        "downloads": -1,
        "filename": "incase-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2beda9824e56cc1ecd9f3fc67626453a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14347,
        "upload_time": "2022-04-03T05:13:49",
        "upload_time_iso_8601": "2022-04-03T05:13:49.513132Z",
        "url": "https://files.pythonhosted.org/packages/7e/9e/f316f82118c93f939cb2d55d2020b198e1cc8d5b8db4b37839e287d717b4/incase-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32e7b2b50fe6007ed1785e7f1d4a1e7852eab3f9697f4f9593ae5c8dae043246",
          "md5": "ac9630f09b3ac6f6dc03ce32b64b8652",
          "sha256": "38bacaf10dc591654962ce3034518626d0498266fa9e8cbd80f56408512f1c4a"
        },
        "downloads": -1,
        "filename": "incase-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ac9630f09b3ac6f6dc03ce32b64b8652",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10490,
        "upload_time": "2022-04-03T05:13:52",
        "upload_time_iso_8601": "2022-04-03T05:13:52.363315Z",
        "url": "https://files.pythonhosted.org/packages/32/e7/b2b50fe6007ed1785e7f1d4a1e7852eab3f9697f4f9593ae5c8dae043246/incase-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7e9ef316f82118c93f939cb2d55d2020b198e1cc8d5b8db4b37839e287d717b4",
        "md5": "2beda9824e56cc1ecd9f3fc67626453a",
        "sha256": "0a22efe3047f044a81dd2ec4fab178e1c81e323e8b21fb7fa3ed76b170c97877"
      },
      "downloads": -1,
      "filename": "incase-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2beda9824e56cc1ecd9f3fc67626453a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14347,
      "upload_time": "2022-04-03T05:13:49",
      "upload_time_iso_8601": "2022-04-03T05:13:49.513132Z",
      "url": "https://files.pythonhosted.org/packages/7e/9e/f316f82118c93f939cb2d55d2020b198e1cc8d5b8db4b37839e287d717b4/incase-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32e7b2b50fe6007ed1785e7f1d4a1e7852eab3f9697f4f9593ae5c8dae043246",
        "md5": "ac9630f09b3ac6f6dc03ce32b64b8652",
        "sha256": "38bacaf10dc591654962ce3034518626d0498266fa9e8cbd80f56408512f1c4a"
      },
      "downloads": -1,
      "filename": "incase-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "ac9630f09b3ac6f6dc03ce32b64b8652",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10490,
      "upload_time": "2022-04-03T05:13:52",
      "upload_time_iso_8601": "2022-04-03T05:13:52.363315Z",
      "url": "https://files.pythonhosted.org/packages/32/e7/b2b50fe6007ed1785e7f1d4a1e7852eab3f9697f4f9593ae5c8dae043246/incase-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}