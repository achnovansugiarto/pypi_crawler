{
  "info": {
    "author": "Patan Musthakheem",
    "author_email": "patanmusthakheem786@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License"
    ],
    "description": "# Py-Encryptor\n## What's New\n```\n* Added New Encryption Class Bush_Encryption, RSA_Encryption (ASymmetric)\n* Added Doc For Every Function\n* Added File Encryption\n* Many Bugs Fixed\n* Upgraded To Version 2.3\n* Many Exceptions Catched Under Try Except\n```\n## Installation\n```commandline\npip install Py-Encryptor\n```\n## Using git\n```commandline\ngit clone https://github.com/pmk456/Encryptor\ncd Encryptor\npython setup.py install\n```\n## Usage\n### Generate Private And Public Keys For RSA_Encryption\n```python\nfrom Encryptor import RSA_Encryption\nRSA_Encryption.generate_keys()\n```\n### Sign Data Using RSA\n```python\n# Supported Algorithms For Signing = ['SHA-1', 'SHA-224', 'SHA-256', 'SHA-384', 'SHA-512', \"MD5\"]\nfrom Encryptor import RSA_Encryption\ncipher = RSA_Encryption(public_file=\"public_key.pem\")\ncipher.sign(b\"data\", algo=\"SHA-1\")\n# Output\n# Signature Of Data:\n# b'm\\xa6\\xf1(\\xaa13\\x03F5\\x10g\\xb0)\\xf2\\xae/7\\xb1G\\xbf\\x00\\xe8I-\\xc8T\\r\\xcc\\t\\x830\\x11\\x02\\xa2\\xff\\x93\\xf1\\xf5\\t\\xfa\\xb4\\x97\\x03\\xd5b\\xdf\\xa1\\xa8B\\xbcv\\x12\\x04\\x97\\xc0\\\\\\x1c\\xd6\\xb3\\xdc\\xb8c\\xd5'\n```\n### Verify Signature of Data\n```python\n# Supported Algorithms For Signing = ['SHA-1', 'SHA-224', 'SHA-256', 'SHA-384', 'SHA-512', \"MD5\"]\nfrom Encryptor import RSA_Encryption\ncipher = RSA_Encryption(public_file=\"public_key.pem\", private_file=\"private_key.pem\")\ndata = b'm\\xa6\\xf1(\\xaa13\\x03F5\\x10g\\xb0)\\xf2\\xae/7\\xb1G\\xbf\\x00\\xe8I-\\xc8T\\r\\xcc\\t\\x830\\x11\\x02\\xa2\\xff\\x93\\xf1\\xf5\\t\\xfa\\xb4\\x97\\x03\\xd5b\\xdf\\xa1\\xa8B\\xbcv\\x12\\x04\\x97\\xc0\\\\\\x1c\\xd6\\xb3\\xdc\\xb8c\\xd5'\nprint(cipher.verify_signature(b\"Data\", data))\n# Output\n# (True, \"SHA-1\")\n```\n### Sign A File Using RSA\n```python\n# Supported Algorithms For Signing = ['SHA-1', 'SHA-224', 'SHA-256', 'SHA-384', 'SHA-512', \"MD5\"]\nfrom Encryptor import RSA_Encryption\ncipher = RSA_Encryption(public_file=\"public_key.pem\", private_file=\"private_key.pem\")\ncipher.sign_file(\"path\", algo=\"SHA-1\")\n# Output\n# Signature Of File\n```\n### Verify Signature of A File\n```python\n# Supported Algorithms For Signing = ['SHA-1', 'SHA-224', 'SHA-256', 'SHA-384', 'SHA-512', \"MD5\"]\nfrom Encryptor import RSA_Encryption\ncipher = RSA_Encryption(public_file=\"public_key.pem\", private_file=\"private_key.pem\")\ndata = b'4\\xf5\\x0bu\\x10\\xab\\x9cA}\\xce\\x96Z,[\\xd7Cp\\xe0\\xcb\\x97Xew\\xf7\\n\\xd9\\x95\\x1dy\\x87\\x11\\x1d\\xf88\\xba2\\xddR\\xec\\x13\\x175sv@\\x9f\\xd0\\xfe\\xa2\\xd7\\n\\x1c\\x18O\\xc4\\xe8U\\x94bg%\\xec\\xbfz'\ncipher.verify_file(\"path\", data)\n# Output\n# (True, \"SHA-1\")\n```\n### Encrypt File Using Bush\n```python\nfrom Encryptor import Bush_Encryption\ncipher = Bush_Encryption(\"KeyToUse\")\ncipher.file_encrypt('path')\n# Output\n# Same File With .enc Extension\n```\n### Encrypt File Using Fernet\n```python\nfrom Encryptor import Fernet_Encryption\ncipher = Fernet_Encryption(key='keytouse')\ncipher.file_encrypt('path')\n# Output\n\"\"\"\nEncrypted File with Extension .enc will be In The Same Path\n\"\"\"\n```\n### Encrypt File Using AES\n```python\nfrom Encryptor import AES_Encryption\ncipher = AES_Encryption(key='keytouse', iv='this is iv 45611')\nprint(cipher.file_encrypt('path'))\n# Output\n\"\"\"\nFile Successfully Encrypted With Given Key\nIn Case Of any exception:\nSomething Went Wrong During Encryption Of The File\npath.enc // THIS IS ENCRYPTED FILE WHICH IS SAVED IN THE GIVEN PATH\n\"\"\"\n```\n### Encrypt File Using RSA Warning: Use This For Small Files less than 1024 Bytes\n```python\n# Deprecated Warning\nfrom Encryptor import RSA_Encryption\ncipher = RSA_Encryption(public_file=\"public_key.pem\")\ncipher.file_encrypt(\"pathtofile\")\n```\n### Decrypt File Using RSA\n```python\n# Deprecated Warning\nfrom Encryptor import RSA_Encryption\ncipher = RSA_Encryption(private_file=\"private_key.pem\", public_file=\"public_key.pem\")\ncipher.file_decrypt(\"path.enc\")\n```\n### Decrypt File Using Bush\n```python\nfrom Encryptor import Bush_Encryption\ncipher = Bush_Encryption(\"KeyToUse\")\ncipher.file_decrypt(\"path.enc\")\n# Output\n# Same File With Removed .enc Extension\n```\n### Decrypt File Using Fernet\n```python\nfrom Encryptor import Fernet_Encryption\ncipher = Fernet_Encryption(key='keywhichusedtoencrypt')\ncipher.file_decrypt(path='path\\to\\file.enc')\n# output\n# Decrypted File will be in the same given path\n```\n\n### Decrypt File Using AES\n```python\nfrom Encryptor import AES_Encryption\ncipher = AES_Encryption(key='keytouse', iv='This is iv 45611')\nprint(cipher.file_decrypt('path'))\n# OUTPUT\n\"\"\"\nFile Successfully Decrypted With Given Key\nIn Case Of any exception:\nSomething Went Wrong During Decryption Of The File\nIf nothing went wrong:\npath // THIS IS DECRYPTED FILE WHICH IS SAVED IN THE GIVEN PATH\n\"\"\"\n```\n### Encrypt String Using Bush\n```python\nfrom Encryptor import Bush_Encryption\ncipher = Bush_Encryption(\"keytouse\")\ncipher.encrypt(\"Hello, World!\")\n# Output varies Everytime You Run, Because Of IV Randomization\n# b'ZISDJSjdcJmZ1jEtZq-TJ9f_-EK1LYms19_R0G4-Thw=ebOTwrjzmMP2l2kzHtMifQ==ew6pPaBG9QjE_TGD6xyMwA=='\n```\n### Encrypt String Using RSA\n```python\nfrom Encryptor import RSA_Encryption\ncipher = RSA_Encryption(public_file=\"public_key.pem\")\ncipher.encrypt(\"Hello, World!\")\n# Output\n# b'{\\x7f2\\xbe\\xa0\\xee\\x82\\xac\\x84#\\x9b \\x12$+\\\\V\\xd5(\\xa0\\xc1\\x11\\x19\\x9fQ\\xacO\\x1fJ\\xd8XX\\xbfR\\xe8\\xe9Cm\\xe0\\xd3`\\xee\\xf0\\x7f|Cn\\xcf\\x00#H\\xe2R_\\xa4\\x19\\x1a\\x06A\\xa2kT\\x9dQ'\n```\n### Encrypt String Using AES\n```python\nfrom Encryptor import AES_Encryption\ncipher = AES_Encryption(key='keytouse', iv='this is iv 45611')\ncipher.encrypt(\"Hello\")\n### OUTPUT\n# b'}%\\x99\\x00b3\\xb0?\\xe5\\t\\x07wc\\xa8\\xc6\\x8d'\n```\n### Encrypt String Using Fernet\n```python\nfrom Encryptor import Fernet_Encryption\ncipher = Fernet_Encryption(key='keytouse')\ncipher.encrypt('string')\n# Output\n# b'gAAAAABg4AFMaGOzEvKpJgArUvJrmhTPLZIio5qAz96PAHs4CWlInKHS-nA48G_2RwQKbHQcDy3fei1ctH5luGSThqkZC520AA=='\n```\n\n### Decrypt String Using AES\n```python\nfrom Encryptor import AES_Encryption\ncipher = AES_Encryption(key='keytouse', iv='this is iv 45611')\ncipher.decrypt(b'}%\\x99\\x00b3\\xb0?\\xe5\\t\\x07wc\\xa8\\xc6\\x8d')\n### OUTPUT\n# 'Hello'\n```\n### Decrypt String Using Bush\n```python\nfrom Encryptor import Bush_Encryption\ncipher = Bush_Encryption(\"keytouse\")\ncipher.decrypt(\"data\")\n# Output\n# Decrypted Data\n```\n### Decrypt String Using RSA\n```python\nfrom Encryptor import RSA_Encryption\ncipher = RSA_Encryption(public_file=\"public_key.pem\", private_file=\"private_key.pem\")\ncipher.decrypt(b'{\\x7f2\\xbe\\xa0\\xee\\x82\\xac\\x84#\\x9b \\x12$+\\\\V\\xd5(\\xa0\\xc1\\x11\\x19\\x9fQ\\xacO\\x1fJ\\xd8XX\\xbfR\\xe8\\xe9Cm\\xe0\\xd3`\\xee\\xf0\\x7f|Cn\\xcf\\x00#H\\xe2R_\\xa4\\x19\\x1a\\x06A\\xa2kT\\x9dQ')\n# Output\n# b'Hello, World!'\n```\n### Decrypt String Using Fernet\n```python\nfrom Encryptor import Fernet_Encryption\ncipher = Fernet_Encryption(key='keytouse')\ncipher.decrypt(b'gAAAAABg4AFMaGOzEvKpJgArUvJrmhTPLZIio5qAz96PAHs4CWlInKHS-nA48G_2RwQKbHQcDy3fei1ctH5luGSThqkZC520AA==')\n# Output\n# string\n```\n### About\n```\nHi, I Am Patan Musthakheem I Am The Author Of This Package.\nI Created This Tool For Beginners Who Want to encrypt their string or file\nusing any encryption but they dont know how to use it because \nfor beginners it is bit of difficult for using Encryption like AES from scratch.\nI Faced Many issues when learning how to encrypt strings and files in python when\nwhen i am beginner i decided to create a very simple tool which will encrypt strings and files\nin one line of code.\nThat day has came, Now you can encrypt and decrypt strings in one line of code.\nThanks To Me.\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pmk456/Encryptor",
    "keywords": "encryption,encryptors,aes,bush",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Py-Encryptor",
    "package_url": "https://pypi.org/project/Py-Encryptor/",
    "platform": "",
    "project_url": "https://pypi.org/project/Py-Encryptor/",
    "project_urls": {
      "Documentation": "https://github.com/pmk456/Encryptor/blob/main/README.md",
      "Homepage": "https://github.com/pmk456/Encryptor",
      "Source": "https://github.com/pmk456/Encryptor",
      "Tracker": "https://github.com/pmk456/Encryptor/issues"
    },
    "release_url": "https://pypi.org/project/Py-Encryptor/2.3/",
    "requires_dist": [
      "pycryptodome (>=3.9.6)",
      "cryptography (>=3.4.7)",
      "Bush-Encryption (>=0.3)",
      "rsa (>=4.7.2)"
    ],
    "requires_python": ">=3.5",
    "summary": "Encrypt Strings And Files With Bush Encryption (OR) AES Encryption (OR) Fernet Encryption",
    "version": "2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11051581,
  "releases": {
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6c19a67dbce5d32f51c49fc07db095110b5eab9d74b153fe37ccf8c73ab1cf0",
          "md5": "dc44901e094513f8dfb94c2e10c4d6c6",
          "sha256": "2d27c1df72b95171951a1835f765a411ac63731ae15f391a32fc1731b74f4655"
        },
        "downloads": -1,
        "filename": "Py_Encryptor-1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc44901e094513f8dfb94c2e10c4d6c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 9141,
        "upload_time": "2021-07-03T06:23:38",
        "upload_time_iso_8601": "2021-07-03T06:23:38.752593Z",
        "url": "https://files.pythonhosted.org/packages/b6/c1/9a67dbce5d32f51c49fc07db095110b5eab9d74b153fe37ccf8c73ab1cf0/Py_Encryptor-1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8fa0f8fffd979c4edacc3529760800c1bd1c2a548e6708f69fd6b439d165d2c",
          "md5": "6ff49b3c9f76ef895838c9ebe763e2e9",
          "sha256": "ab7b6215e387f85534df6c6a6f2d0b28e8332237bfd7af780a95f5b8b7dde8cc"
        },
        "downloads": -1,
        "filename": "Py-Encryptor-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6ff49b3c9f76ef895838c9ebe763e2e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 9449,
        "upload_time": "2021-07-03T06:23:40",
        "upload_time_iso_8601": "2021-07-03T06:23:40.618737Z",
        "url": "https://files.pythonhosted.org/packages/d8/fa/0f8fffd979c4edacc3529760800c1bd1c2a548e6708f69fd6b439d165d2c/Py-Encryptor-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09ccf21e02afa4ca8f08d16b7a549c147804710c5d7a6a5b23c4be2d669b3002",
          "md5": "a8f8420c959c3357f9b39d1f22ccde65",
          "sha256": "da84181c84c5118c56799e61c2d88e5d2fe6b803d6944d5cbcd66876d39177dc"
        },
        "downloads": -1,
        "filename": "Py_Encryptor-2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8f8420c959c3357f9b39d1f22ccde65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 9212,
        "upload_time": "2021-07-17T05:17:36",
        "upload_time_iso_8601": "2021-07-17T05:17:36.088302Z",
        "url": "https://files.pythonhosted.org/packages/09/cc/f21e02afa4ca8f08d16b7a549c147804710c5d7a6a5b23c4be2d669b3002/Py_Encryptor-2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7202a57289f171fc6ae3d422daa4baef304e3c9c422b1fd909b67c2e4c7f78ea",
          "md5": "a2ba1fd45e2811a0f352ef1e11505edd",
          "sha256": "7a1bb27624d5e49ede1553ee7f89768ca1cc43657cb42ffbe41af74a5f16e0c0"
        },
        "downloads": -1,
        "filename": "Py-Encryptor-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a2ba1fd45e2811a0f352ef1e11505edd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 9624,
        "upload_time": "2021-07-17T05:17:37",
        "upload_time_iso_8601": "2021-07-17T05:17:37.177129Z",
        "url": "https://files.pythonhosted.org/packages/72/02/a57289f171fc6ae3d422daa4baef304e3c9c422b1fd909b67c2e4c7f78ea/Py-Encryptor-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d81e0fb16f4f4de748dba2cafdf67c255e2880dac5cf6614fe665a991fcc595",
          "md5": "5ef9981ee2f18c86271743de785b5c41",
          "sha256": "debdeac6fef3b045b3359f258803f8dd7efe5950e04213ddc0a47be8950c269f"
        },
        "downloads": -1,
        "filename": "Py_Encryptor-2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ef9981ee2f18c86271743de785b5c41",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 9983,
        "upload_time": "2021-07-29T13:04:05",
        "upload_time_iso_8601": "2021-07-29T13:04:05.684945Z",
        "url": "https://files.pythonhosted.org/packages/9d/81/e0fb16f4f4de748dba2cafdf67c255e2880dac5cf6614fe665a991fcc595/Py_Encryptor-2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "766ba9dd177a4770adf7ab317003687902b4f79fe0d819e20c45179c0f45738a",
          "md5": "d05d006d833080d8afbbb803aa216f10",
          "sha256": "08f4007e3522db915753f17d4f7202a476db10ff1d118c1e5ba99d4d1e880fef"
        },
        "downloads": -1,
        "filename": "Py-Encryptor-2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d05d006d833080d8afbbb803aa216f10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11103,
        "upload_time": "2021-07-29T13:04:07",
        "upload_time_iso_8601": "2021-07-29T13:04:07.746796Z",
        "url": "https://files.pythonhosted.org/packages/76/6b/a9dd177a4770adf7ab317003687902b4f79fe0d819e20c45179c0f45738a/Py-Encryptor-2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "054baa1bdef4f3e8e233ff6380dca34af590e3b5c3dfafb42e65dfaa7ddaf5f1",
          "md5": "8a0f49c870d29ac632cebcf4dbe91093",
          "sha256": "b94f4d68c6ffbcdd47aa239c843f5147bd0b46f85a09d9110d219bb65b0cb89b"
        },
        "downloads": -1,
        "filename": "Py_Encryptor-2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a0f49c870d29ac632cebcf4dbe91093",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 12554,
        "upload_time": "2021-07-30T15:42:05",
        "upload_time_iso_8601": "2021-07-30T15:42:05.045260Z",
        "url": "https://files.pythonhosted.org/packages/05/4b/aa1bdef4f3e8e233ff6380dca34af590e3b5c3dfafb42e65dfaa7ddaf5f1/Py_Encryptor-2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e23c8a549ee2c243150520d11dcd482bdc347bcf9b205983a361421420cb629e",
          "md5": "ad63e76b438401a19b3da5192f4d4d35",
          "sha256": "4ea2a9c93139c8b31220be2015397b945618b529db8954d6ddb4c8327ab906ef"
        },
        "downloads": -1,
        "filename": "Py-Encryptor-2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ad63e76b438401a19b3da5192f4d4d35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 14680,
        "upload_time": "2021-07-30T15:42:08",
        "upload_time_iso_8601": "2021-07-30T15:42:08.178784Z",
        "url": "https://files.pythonhosted.org/packages/e2/3c/8a549ee2c243150520d11dcd482bdc347bcf9b205983a361421420cb629e/Py-Encryptor-2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "054baa1bdef4f3e8e233ff6380dca34af590e3b5c3dfafb42e65dfaa7ddaf5f1",
        "md5": "8a0f49c870d29ac632cebcf4dbe91093",
        "sha256": "b94f4d68c6ffbcdd47aa239c843f5147bd0b46f85a09d9110d219bb65b0cb89b"
      },
      "downloads": -1,
      "filename": "Py_Encryptor-2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8a0f49c870d29ac632cebcf4dbe91093",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 12554,
      "upload_time": "2021-07-30T15:42:05",
      "upload_time_iso_8601": "2021-07-30T15:42:05.045260Z",
      "url": "https://files.pythonhosted.org/packages/05/4b/aa1bdef4f3e8e233ff6380dca34af590e3b5c3dfafb42e65dfaa7ddaf5f1/Py_Encryptor-2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e23c8a549ee2c243150520d11dcd482bdc347bcf9b205983a361421420cb629e",
        "md5": "ad63e76b438401a19b3da5192f4d4d35",
        "sha256": "4ea2a9c93139c8b31220be2015397b945618b529db8954d6ddb4c8327ab906ef"
      },
      "downloads": -1,
      "filename": "Py-Encryptor-2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ad63e76b438401a19b3da5192f4d4d35",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 14680,
      "upload_time": "2021-07-30T15:42:08",
      "upload_time_iso_8601": "2021-07-30T15:42:08.178784Z",
      "url": "https://files.pythonhosted.org/packages/e2/3c/8a549ee2c243150520d11dcd482bdc347bcf9b205983a361421420cb629e/Py-Encryptor-2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}