{
  "info": {
    "author": "",
    "author_email": "Mark Hallap <mark.hallap@mail.utoronto.ca>, CoML Team <dev@zerospeech.com>, Nicolas Hamilakis <nicolas.hamilakis@ens.psl.eu>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# libri-light-abx2\n\nThe ABX phonetic evaluation metric for unsupervised representation learning as used by the ZeroSpeech challenge, now with context-type options (on-triphone, within-context, any-context). This module is a reworking of https://github.com/zerospeech/libri-light-abx, which in turn is a wrapper around https://github.com/facebookresearch/libri-light/tree/main/eval\n\n  \n### Installation\n  \nYou can install this module from pip directly using the following command : \n\n`pip install zerospeech-libriabx2`\n\nOr you can install from source by cloning this repository and running: \n\n`pip install .`\n\n### Usage\n### From command line\n\n```\nusage: zrc-abx2 [-h] [--path_checkpoint PATH_CHECKPOINT]\n                [--file_extension {.pt,.npy,.wav,.flac,.mp3,.npz,.txt}]\n                [--feature_size FEATURE_SIZE] [--cuda]\n                [--speaker_mode {all,within,across}]\n                [--context_mode {all,within,any}]\n                [--distance_mode {euclidian,euclidean,cosine,kl,kl_symmetric}]\n                [--max_size_group MAX_SIZE_GROUP]\n                [--max_x_across MAX_X_ACROSS] [--out OUT] [--seed SEED]\n                [--pooling {none,mean,hamming}] [--seq_norm]\n                [--max_size_seq MAX_SIZE_SEQ] [--strict]\n                path_data path_item_file\n\nABX metric\n\npositional arguments:\n  path_data             Path to directory containing the submission data\n  path_item_file        Path to the .item file containing the timestamps and\n                        transcriptions\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --path_checkpoint PATH_CHECKPOINT\n                        Path to a CPC checkpoint. If set, apply the model to\n                        the input data to compute the features\n  --file_extension {.pt,.npy,.wav,.flac,.mp3,.npz,.txt}\n  --feature_size FEATURE_SIZE\n                        Size (in s) of one feature\n  --cuda                Use the GPU to compute distances\n  --speaker_mode {all,within,across}\n                        Choose the speaker mode of the ABX score to compute\n  --context_mode {all,within,any}\n                        Choose the context mode of the ABX score to compute\n  --distance_mode {euclidian,euclidean,cosine,kl,kl_symmetric}\n                        Choose the kind of distance to use to compute the ABX\n                        score.\n  --max_size_group MAX_SIZE_GROUP\n                        Max size of a group while computing the ABX score. A\n                        small value will make the code faster but less\n                        precise.\n  --max_x_across MAX_X_ACROSS\n                        When computing the ABX across score, maximum number of\n                        speaker X to sample per couple A,B. A small value will\n                        make the code faster but less precise.\n  --out OUT             Path where the results should be saved\n  --seed SEED           Seed to use in random sampling.\n  --pooling {none,mean,hamming}\n                        Type of pooling over frame representations of items.\n  --seq_norm            Used for CPC features only. If activated, normalize\n                        each batch of feature across the time channel before\n                        computing ABX.\n  --max_size_seq MAX_SIZE_SEQ\n                        Used for CPC features only. Maximal number of frames\n                        to consider when computing a batch of features.\n  --strict              Used for CPC features only. If activated, each batch\n                        of feature will contain exactly max_size_seq frames.\n```\n### Python API\nYou can also call the abx evaluation from python code. You can use the following example:\n\n```\nimport zrc_abx2\n\nargs = zrc_abx2.EvalArgs(\n    path_data= \"/location/to/representations/\",\n    path_item_file= \"/location/to/file.item\",\n    **other_options\n)\n\nresult = zrc_abx2.EvalABX().eval_abx(args)\n```\n\n## Information on evaluation conditions\nA new  variable in this ABX version is context.\nIn the within-context condition, a, b, and x have the same surrounding context (i.e. the same preceding and following phoneme). any-context ignores the surrounding context; typically, it varies. \n\nFor the within-context and any-context comparison, use an item file that extracts phonemes (rather than XYZ triphones). For the on-triphone condition, which is still available, use an item file that extracts triphones (just like in the previous abx evaluation), and then run it within-context (which was the default behavior of the previous abx evaluation). any-context is not used for the on-triphone version due to excessive noise that would be included in the representation.\n\nLike in the previous version, it is also possible to run within-speaker (a, b, x are all from the same speaker) and across-speaker (a and b are from the same speaker, x is from another) evaluations. So there are four phoneme-based evaluation combinations in total: within_s-within_c, within_s-any-c, across_s-within_c, across_s-any_c; and two triphone-based evaluation combinations: within_s-within_c, across_s-within_c. \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "speech,machine-learning,challenges,research-tool,benchmark-speech,zerospeech",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zerospeech-libriabx2",
    "package_url": "https://pypi.org/project/zerospeech-libriabx2/",
    "platform": null,
    "project_url": "https://pypi.org/project/zerospeech-libriabx2/",
    "project_urls": {
      "documentation": "https://zerospeech.com/toolbox/",
      "homepage": "https://zerospeech.com/",
      "repository": "https://github.com/zerospeech/libri-light-abx2"
    },
    "release_url": "https://pypi.org/project/zerospeech-libriabx2/0.9.7/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Package implementing a revamped method to the librilight-abx.",
    "version": "0.9.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16316287,
  "releases": {
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5f507e13f1178aacc028cea3bca0bea2162d999aac5b745578eba891b35d5fb",
          "md5": "7ee73714d7c8b35f2cbcd87ec1e02b71",
          "sha256": "436f671fcb4609ecbcb01e4f9a583247b81cf4e3fe22e9f0853f8a946b2b12c9"
        },
        "downloads": -1,
        "filename": "zerospeech-libriabx2-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7ee73714d7c8b35f2cbcd87ec1e02b71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 162935,
        "upload_time": "2022-12-16T15:53:13",
        "upload_time_iso_8601": "2022-12-16T15:53:13.233959Z",
        "url": "https://files.pythonhosted.org/packages/f5/f5/07e13f1178aacc028cea3bca0bea2162d999aac5b745578eba891b35d5fb/zerospeech-libriabx2-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a082028396a396550dbc407a2bcbe587255b01627b2df7dbc483c8e9b5026de",
          "md5": "d6d656445d52b5bb82a4c05991a51353",
          "sha256": "d123b06e8e9b703e117aa05c88933648534494bddb00f7fd8deb0910e1e4e730"
        },
        "downloads": -1,
        "filename": "zerospeech-libriabx2-0.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d6d656445d52b5bb82a4c05991a51353",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 163255,
        "upload_time": "2022-12-19T19:03:17",
        "upload_time_iso_8601": "2022-12-19T19:03:17.006277Z",
        "url": "https://files.pythonhosted.org/packages/5a/08/2028396a396550dbc407a2bcbe587255b01627b2df7dbc483c8e9b5026de/zerospeech-libriabx2-0.9.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03cc90b41fca667255e2c05f20c126b6671f70661d215b09700395b1dfb89cce",
          "md5": "2c314fb1fe62a2facd62d6d099e73c9e",
          "sha256": "3034f2e8ecf951c127dbb3c822dc8d9de2f29b88b9fd4b1726f13647b8b3407f"
        },
        "downloads": -1,
        "filename": "zerospeech-libriabx2-0.9.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2c314fb1fe62a2facd62d6d099e73c9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 163329,
        "upload_time": "2022-12-21T18:57:24",
        "upload_time_iso_8601": "2022-12-21T18:57:24.406082Z",
        "url": "https://files.pythonhosted.org/packages/03/cc/90b41fca667255e2c05f20c126b6671f70661d215b09700395b1dfb89cce/zerospeech-libriabx2-0.9.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07f689fcecda900726cb13bbe67df2fa8397bae7aef70cbaba1b20992a6a9fe4",
          "md5": "52e2bed71117487c630cb6c52e27f0dd",
          "sha256": "05520b816f716e3e626c1bc0ac9be55b3e5dcf68ffe0f8ecc0a49d9c69793ede"
        },
        "downloads": -1,
        "filename": "zerospeech-libriabx2-0.9.6.tar.gz",
        "has_sig": false,
        "md5_digest": "52e2bed71117487c630cb6c52e27f0dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 161791,
        "upload_time": "2022-12-30T19:28:17",
        "upload_time_iso_8601": "2022-12-30T19:28:17.848178Z",
        "url": "https://files.pythonhosted.org/packages/07/f6/89fcecda900726cb13bbe67df2fa8397bae7aef70cbaba1b20992a6a9fe4/zerospeech-libriabx2-0.9.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40085d552e98ffa31f1f234f947be75155275f656d0a59047b67b50ee69a4d09",
          "md5": "3bfd93acd1e1271af7552907bc492f80",
          "sha256": "944fd001e5c04cbcf4e2dea5b24701f268610cae55c6ca880b5a5b9f840dbc5e"
        },
        "downloads": -1,
        "filename": "zerospeech-libriabx2-0.9.7.tar.gz",
        "has_sig": false,
        "md5_digest": "3bfd93acd1e1271af7552907bc492f80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 161741,
        "upload_time": "2023-01-02T16:58:01",
        "upload_time_iso_8601": "2023-01-02T16:58:01.689718Z",
        "url": "https://files.pythonhosted.org/packages/40/08/5d552e98ffa31f1f234f947be75155275f656d0a59047b67b50ee69a4d09/zerospeech-libriabx2-0.9.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "40085d552e98ffa31f1f234f947be75155275f656d0a59047b67b50ee69a4d09",
        "md5": "3bfd93acd1e1271af7552907bc492f80",
        "sha256": "944fd001e5c04cbcf4e2dea5b24701f268610cae55c6ca880b5a5b9f840dbc5e"
      },
      "downloads": -1,
      "filename": "zerospeech-libriabx2-0.9.7.tar.gz",
      "has_sig": false,
      "md5_digest": "3bfd93acd1e1271af7552907bc492f80",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 161741,
      "upload_time": "2023-01-02T16:58:01",
      "upload_time_iso_8601": "2023-01-02T16:58:01.689718Z",
      "url": "https://files.pythonhosted.org/packages/40/08/5d552e98ffa31f1f234f947be75155275f656d0a59047b67b50ee69a4d09/zerospeech-libriabx2-0.9.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}