{
  "info": {
    "author": "HERA Team",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# hera_opm\n\n[![Run Tests](https://github.com/HERA-Team/hera_opm/workflows/Run%20Tests/badge.svg)](https://github.com/HERA-Team/hera_opm/actions)\n[![Code Coverage](https://codecov.io/gh/HERA-Team/hera_opm/branch/main/graph/badge.svg?token=cFmFFBVHZP)](https://codecov.io/gh/HERA-Team/hera_opm)\n[![License](https://img.shields.io/badge/License-BSD%202--Clause-orange.svg)](https://opensource.org/licenses/BSD-2-Clause)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n`hera_opm` provides a convenient and flexible framework for developing data\nanalysis pipelines for operating on HERA data. It facilitates \"offline\nprocessing\", and is portable enough to operate on computer clusters with\nbatch submission systems or on local machines.\n\n# How It Works\n\nThe `hera_opm` package uses the `makeflow` system, which is a part of the\n[Cooperative Computing Tools\npackage](https://github.com/cooperative-computing-lab/cctools) developed by the\n[Cooperative Computing Lab](http://ccl.cse.nd.edu). The `hera_opm` package\nessentially converts a pipeline defined in a configuration file into a format\nthat can be parsed by `makeflow`. This process is also aware of aspects specific\nto HERA data, such as the polarization features of the data, in order to build\nan appropriate software pipeline. Once the `makeflow` instructions file has been\ngenerated, the `makeflow` program itself is used to execute the steps in the\npipeline.\n\nThere are generally 5 steps required to \"build a pipeline\":\n\n1. Write *task scripts* that will be executed by `makeflow` for a given stage in\nthe pipeline. These scripts should generally be as atomic as possible, and\nperform only a single logical component of a pipeline (though it may in turn\ncall several supporting scripts or commands).\n2. Write a *configuration file* which defines the order of tasks to be\ncompleted. This configuration file defines the logical flow of the pipeline, as\nwell as prerequisites for each task. It also allows for defining compute and\nmemory requirements, for systems that support resource management.\n3. Use the provided `build_makeflow_from_config.py` script to build a `makeflow`\ninstruction file that specifies the pipeline tasks applied to the data files.\n4. Use the provided `makeflow_nrao.sh` or `makeflow_local.sh` to execute the\npipeline in either the NRAO batch scheduler environment, or on a local machine,\nrespectively.\n5. (Optional) Use the provided `clean_up_makeflow.py` to clean up the work\ndirectory for makeflow. This will remove the wrapper scripts and output files,\nand generate a single log file for all jobs in the makeflow.\n\n# Installation\n\nTo install the `hera_opm` package, simply:\n```\npip install .\n```\n\nAs mentioned above, `hera_opm` uses `makeflow` as the backing pipeline management\nsoftware. As such, `makeflow` must be installed. To install `makeflow` in your\nhome directory:\n```bash\ngit clone https://github.com/cooperative-computing-lab/cctools.git\ncd cctools\n./configure --prefix=${HOME}/cctools\nmake clean\nmake install\nexport PATH=${PATH}:${HOME}/cctools/bin\n```\nFor convenience, it is helpful to add the `export` statement to your `.bashrc`\nfile, so that the `makeflow` commands are always on your `PATH`.\n\n## Dependencies\n\nWhen installing the package, setuptools will attempt to download and install any\nmissing dependencies. If you prefer to manage your own python environment\n(through conda or pip or some other manager), you can install them yourself.\n\n### Required\n\n* toml >= 0.9.4\n\n### Optional\n\n* [hera_cal](https://github.com/HERA-Team/hera_cal)\n\nGenerating an `lstbin` pipeline (instead of `analysis`) requires that hera_cal\nbe installed. The main package and tests can be run without this requirement.\n\n# Task Scripts and Config Files\n\nFor documentation on building task scripts, see [the task scipts docs\npage](docs/task_scripts.md). For documentation on config files, see [the config\nfile docs page](docs/config_files.md).\n\n\n# Testing\n\n`hera_opm` uses `pytest` as its testing framework. To run the test suite, do:\n```\npytest\n```\nfrom the root repo directory. This may require running `pip install .[test]` to\ninstall testing dependencies.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HERA-Team/hera_opm",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hera-opm",
    "package_url": "https://pypi.org/project/hera-opm/",
    "platform": null,
    "project_url": "https://pypi.org/project/hera-opm/",
    "project_urls": {
      "Homepage": "https://github.com/HERA-Team/hera_opm"
    },
    "release_url": "https://pypi.org/project/hera-opm/1.2.1/",
    "requires_dist": [
      "toml (>=0.9.4)",
      "build ; extra == 'package'",
      "hera-calibration ; extra == 'test'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "offline-processing and pipeline managment for HERA data analysis",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14592645,
  "releases": {
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "925f8d26d19ee10a7dd822333cfdf171751283fe010fa236a8d7fcaf4e2ee61b",
          "md5": "8bdf6d6b406eb26b302afa6249efda6c",
          "sha256": "b81c89bb4878c074bf161d44e5258012da55012b3e43c4ff19fc0a7981c2d9a8"
        },
        "downloads": -1,
        "filename": "hera_opm-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8bdf6d6b406eb26b302afa6249efda6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7296585,
        "upload_time": "2022-07-29T17:58:20",
        "upload_time_iso_8601": "2022-07-29T17:58:20.471266Z",
        "url": "https://files.pythonhosted.org/packages/92/5f/8d26d19ee10a7dd822333cfdf171751283fe010fa236a8d7fcaf4e2ee61b/hera_opm-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d2485eb1a73a82c0d8765758742193963412fdc4217dfbcd72e4c068c12358a",
          "md5": "94d9fb2738a3ada21b24d5a32fdd275e",
          "sha256": "23d4f3f31090ac822560390c037da8ae558fd537b27a08277f3a6d89d77e71c4"
        },
        "downloads": -1,
        "filename": "hera_opm-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "94d9fb2738a3ada21b24d5a32fdd275e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7277523,
        "upload_time": "2022-07-29T17:58:22",
        "upload_time_iso_8601": "2022-07-29T17:58:22.551308Z",
        "url": "https://files.pythonhosted.org/packages/3d/24/85eb1a73a82c0d8765758742193963412fdc4217dfbcd72e4c068c12358a/hera_opm-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "925f8d26d19ee10a7dd822333cfdf171751283fe010fa236a8d7fcaf4e2ee61b",
        "md5": "8bdf6d6b406eb26b302afa6249efda6c",
        "sha256": "b81c89bb4878c074bf161d44e5258012da55012b3e43c4ff19fc0a7981c2d9a8"
      },
      "downloads": -1,
      "filename": "hera_opm-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8bdf6d6b406eb26b302afa6249efda6c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7296585,
      "upload_time": "2022-07-29T17:58:20",
      "upload_time_iso_8601": "2022-07-29T17:58:20.471266Z",
      "url": "https://files.pythonhosted.org/packages/92/5f/8d26d19ee10a7dd822333cfdf171751283fe010fa236a8d7fcaf4e2ee61b/hera_opm-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d2485eb1a73a82c0d8765758742193963412fdc4217dfbcd72e4c068c12358a",
        "md5": "94d9fb2738a3ada21b24d5a32fdd275e",
        "sha256": "23d4f3f31090ac822560390c037da8ae558fd537b27a08277f3a6d89d77e71c4"
      },
      "downloads": -1,
      "filename": "hera_opm-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "94d9fb2738a3ada21b24d5a32fdd275e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7277523,
      "upload_time": "2022-07-29T17:58:22",
      "upload_time_iso_8601": "2022-07-29T17:58:22.551308Z",
      "url": "https://files.pythonhosted.org/packages/3d/24/85eb1a73a82c0d8765758742193963412fdc4217dfbcd72e4c068c12358a/hera_opm-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}