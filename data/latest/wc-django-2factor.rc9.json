{
  "info": {
    "author": "WebCase",
    "author_email": "info@webcase.studio",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "# WebCase 2factor API\n\nPackage to create general API for 2factor checkers.\n\n## Installation\n\n```sh\npip install wc-django-2factor\n```\n\nIn `settings.py`:\n\n```python\nINSTALLED_APPS += [\n  'wcd_2factor',\n]\n\nWCD_2FACTOR = {\n  # Available ways to send confirmation messages.\n  'SENDERS': {\n    'default': {\n      'verbose_name': 'Phone sender',\n      # Your own sender backend implementation.\n      'backend': 'some.method.path.to.Backend',\n      # Any options that that backend will receive(if it requires).\n      'options': {\n        'SOME: 'OPTION',\n      },\n    },\n  },\n  # Default sender key that will be used by default(if None specified).\n  'DEFAULT_SENDER': 'default',\n  # Generator function that will generate confirmation code.\n  'CONFIRM_CODE_GENERATOR': 'wcd_2factor.services.confirmer.make_confirmation_code',\n  # Since [0.1.1]. Show code, sended to backend straight in code request response. That done for faster debugging during development.\n  'DEBUG_CODE_RESPONSE': False,\n}\n\n# All root options could also be provided as standalone ones(for overriding, etc.):\nWCD_2FACTOR_DEFAULT_SENDER = 'default'\n```\n\n### Services\n\n#### Confirmer\n\nService for confirmation state management.\n\n```python\nfrom wcd_2factor.services import confirmer\n\n# Create new confirmation request.\nstate = confirmer.make_confirmation(meta={'any': 'json'})\n\nprint(state.is_confirmed)\n# > False\n\n# Check whether the confirmation request is confirmed.\nstate, confirmed = confirmer.check(state.id)\n\nprint(confirmed)\n# > False\n\n# Confirm confirmation request in two ways:\n# Manually if you sure that all requirements had been accomplished.\nstate.confirm()\n# or\n# By running confirmation logic from service:\nstate, confirmed = confirmer.confirm(state.id, 'confirmation-code-provided-by-user')\n\n# ...\n\n# In some place in your application yop may \"use\" confirmation request.\n# For example to prove that provided phone number is that one that user owns.\n# It's one time usage, so it will not be accessible to use anymore elsewhere.\nused = confirmer.use(state)\n\nif not used:\n  raise Exception('This state is not confirmed yet.')\n```\n\n#### Sender\n\nSender is a service that sends message with generated code.\n\n```python\nfrom wcd_2factor.services import sender\n\n# It has only one method: `.send`.\nsender.send(\n  'sender-backend-key',\n  'email.or.a.phone.number.etc@email.com',\n  # Request confirmation state object.\n  state,\n  # Additional context if required.\n  context={}\n)\n```\n\n### Sender backend development\n\nSender backend is a callable that takes confirmation options and returns another callable that can handle data sending.\n\nSo it could look like that:\n\n```python\ndef send(\n  # Key for sender in configuration.\n  name: str,\n  options,\n  verbose_name=None,\n  **kwargs\n):\n  # Do something with confirmation state and confirmation options.\n  # ...\n  # Return callable that will handle data sending.\n  def send(token, state, context):\n    return send_somewhere(f'Here is yor code: {state.code}')\n\n  return send\n```\n\nThere are two helper classes for a little bit easier backend development:\n\n```python\nfrom wcd_2factor.sender import SenderBackend, FunctionalSenderBackend\n\n\n# You may create a simple class as a backend.\nclass CustomBackend(SenderBackend):\n  def send(self, token, state, context: dict = {}):\n    return send_somewhere(f'Here is yor code: {state.code}')\n\n\n# Or just made a function(it also will be resolved into a class-return wrapper):\n@FunctionalSenderBackend.from_callable\ndef custom_callable_backend(\n  token, state, name, context={}, options={}, **self.kwargs\n):\n  send_phone_confirmation_task.delay(token, state.code)\n```\n\n## Contrib\n\n### DRF\n\nThere are ready for use frontend for django rest framework.\n\nIn `urls.py`:\n\n```python\nfrom wcd_2factor.contrib.drf.views import make_urlpatterns as twofactor_make_urlpatterns\n\nurlpatters = [\n  ...\n  path(\n    'api/v1/auth/2factor/',\n    include((twofactor_make_urlpatterns(), 'wcd_2factor'),\n    namespace='2factor')\n  ),\n]\n```\n\nThere will be 2 views:\n- `request-confirmation/` - To request confirmation code to your device.\n- `confirm/` - To confirm that two factor request.\n# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n## [0.1.7]\n### Added\n- Default to confirmation states admin list.\n- New django unified `JSONField` support.\n\n## [0.1.6]\n### Added\n- Translation strings.\n\n## [0.1.3]\n### Added\n- Admin search ui for confirmation state model.\n\n## [0.1.1]\n### Added\n- `DEBUG_CODE_RESPONSE` setting. It adds generated 'code' field to a request confirmation response for easier debug.\n\n## [0.1.0]\nInitial version.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wc-django-2factor",
    "package_url": "https://pypi.org/project/wc-django-2factor/",
    "platform": null,
    "project_url": "https://pypi.org/project/wc-django-2factor/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/wc-django-2factor/0.1.8/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Package to create general API for 2factor checkers.",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14490450,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bfe8b1c3d485bf581189f31b7af37bd31753e35d348e799b48a16f9aeaacb50",
          "md5": "bebc8af498ddbfc52c1bf413a24de5dc",
          "sha256": "6b6e64b77e0e136c2d4c995cd68018eaf3fac99bb40a598bdcdd6efaaa879273"
        },
        "downloads": -1,
        "filename": "wc-django-2factor-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bebc8af498ddbfc52c1bf413a24de5dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8491,
        "upload_time": "2022-04-06T16:55:39",
        "upload_time_iso_8601": "2022-04-06T16:55:39.442417Z",
        "url": "https://files.pythonhosted.org/packages/8b/fe/8b1c3d485bf581189f31b7af37bd31753e35d348e799b48a16f9aeaacb50/wc-django-2factor-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ead566ba5de5f4add49a4faa50c6ae3f8e9ad7f6d614c859e6f0280cabe7654d",
          "md5": "32d24422eb3219f63d91c0a4cc05ad62",
          "sha256": "3345fef80e42bacebeeebdb7150c0a325ec3fa11969811658c3a008641254423"
        },
        "downloads": -1,
        "filename": "wc-django-2factor-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "32d24422eb3219f63d91c0a4cc05ad62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8564,
        "upload_time": "2022-04-07T09:50:25",
        "upload_time_iso_8601": "2022-04-07T09:50:25.722167Z",
        "url": "https://files.pythonhosted.org/packages/ea/d5/66ba5de5f4add49a4faa50c6ae3f8e9ad7f6d614c859e6f0280cabe7654d/wc-django-2factor-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a0c23e292f5634a66db0a7d86c439ceace4be7d84cd68eb4fc6bd17a24493a7",
          "md5": "19b2c0cd3c56e12d55355788061698fd",
          "sha256": "27ce15c082e5d1681d7b48ed72f2db0631a1299e53e2a00ce51ef95f4ab8f4c8"
        },
        "downloads": -1,
        "filename": "wc-django-2factor-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "19b2c0cd3c56e12d55355788061698fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10885,
        "upload_time": "2022-04-07T12:26:36",
        "upload_time_iso_8601": "2022-04-07T12:26:36.472657Z",
        "url": "https://files.pythonhosted.org/packages/6a/0c/23e292f5634a66db0a7d86c439ceace4be7d84cd68eb4fc6bd17a24493a7/wc-django-2factor-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cdfa155007f170394a68a68cabf25627913087d8edabb5a1c71655196285f1a",
          "md5": "4f29cc921b2ea57b1531c63ee7af768e",
          "sha256": "9f0479c3c2e2fa2ac56431dfe611029e62ac11ce6c5a99ce7710d939b56816e5"
        },
        "downloads": -1,
        "filename": "wc-django-2factor-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4f29cc921b2ea57b1531c63ee7af768e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10931,
        "upload_time": "2022-04-08T10:58:24",
        "upload_time_iso_8601": "2022-04-08T10:58:24.871364Z",
        "url": "https://files.pythonhosted.org/packages/8c/df/a155007f170394a68a68cabf25627913087d8edabb5a1c71655196285f1a/wc-django-2factor-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8a0082b87c009d943a51dd6aaaeae5bdc859be120031acd192a14ac455f5222",
          "md5": "d687a1dd5d27eb7e69a99c36afdf0208",
          "sha256": "e85a8b9c993b6cd392ccf22f596969ddb4fdf73791cd1f7ed60363259a277c31"
        },
        "downloads": -1,
        "filename": "wc-django-2factor-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d687a1dd5d27eb7e69a99c36afdf0208",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11277,
        "upload_time": "2022-04-14T15:08:43",
        "upload_time_iso_8601": "2022-04-14T15:08:43.130045Z",
        "url": "https://files.pythonhosted.org/packages/d8/a0/082b87c009d943a51dd6aaaeae5bdc859be120031acd192a14ac455f5222/wc-django-2factor-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a3301db7dc1fada7411c4b1a1fe041d0a58183ebdf3f201520768bf5d45556a",
          "md5": "a94db0ac57e51fcc78ec94c929419b0e",
          "sha256": "13d528a1048a58e8ef2ba7d671e43860c10214faffa459cce88e66c593fad002"
        },
        "downloads": -1,
        "filename": "wc-django-2factor-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a94db0ac57e51fcc78ec94c929419b0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25906,
        "upload_time": "2022-04-14T15:31:23",
        "upload_time_iso_8601": "2022-04-14T15:31:23.332147Z",
        "url": "https://files.pythonhosted.org/packages/3a/33/01db7dc1fada7411c4b1a1fe041d0a58183ebdf3f201520768bf5d45556a/wc-django-2factor-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb76613ed72ed9c67a09c4549fb838d3fe8fcaea6a689f32ed5ceb9e316d4265",
          "md5": "d2080dfd5eecaf71018f0cf6db96d90b",
          "sha256": "b36dbf7e0f74c208d28a0cd40e867f5bd33b4757286768c807ceeec9231f3167"
        },
        "downloads": -1,
        "filename": "wc-django-2factor-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d2080dfd5eecaf71018f0cf6db96d90b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26048,
        "upload_time": "2022-04-15T06:46:53",
        "upload_time_iso_8601": "2022-04-15T06:46:53.773077Z",
        "url": "https://files.pythonhosted.org/packages/cb/76/613ed72ed9c67a09c4549fb838d3fe8fcaea6a689f32ed5ceb9e316d4265/wc-django-2factor-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67092d8ae5c4c3e1e39d6c66589ed25c3deb421ee64c785d0ad8a368b582552f",
          "md5": "2e60ce02be83c87d745520e1b6415dbf",
          "sha256": "b5ccba5615814a2b70ec6b25cae7675d10e29742c106d483e83428f61ba7572f"
        },
        "downloads": -1,
        "filename": "wc-django-2factor-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "2e60ce02be83c87d745520e1b6415dbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19254,
        "upload_time": "2022-05-18T09:16:30",
        "upload_time_iso_8601": "2022-05-18T09:16:30.199473Z",
        "url": "https://files.pythonhosted.org/packages/67/09/2d8ae5c4c3e1e39d6c66589ed25c3deb421ee64c785d0ad8a368b582552f/wc-django-2factor-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97d138a5581283514c765f0bf456b56603f6caa0e922ee773bf43fd88b965753",
          "md5": "16cbf6279b4138aa778b3d241afb9ecc",
          "sha256": "e07269f0d1d4c3aa7f002165d319efdd7281fd779f418d12da980a857579b456"
        },
        "downloads": -1,
        "filename": "wc-django-2factor-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "16cbf6279b4138aa778b3d241afb9ecc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19503,
        "upload_time": "2022-07-20T05:47:43",
        "upload_time_iso_8601": "2022-07-20T05:47:43.102385Z",
        "url": "https://files.pythonhosted.org/packages/97/d1/38a5581283514c765f0bf456b56603f6caa0e922ee773bf43fd88b965753/wc-django-2factor-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97d138a5581283514c765f0bf456b56603f6caa0e922ee773bf43fd88b965753",
        "md5": "16cbf6279b4138aa778b3d241afb9ecc",
        "sha256": "e07269f0d1d4c3aa7f002165d319efdd7281fd779f418d12da980a857579b456"
      },
      "downloads": -1,
      "filename": "wc-django-2factor-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "16cbf6279b4138aa778b3d241afb9ecc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19503,
      "upload_time": "2022-07-20T05:47:43",
      "upload_time_iso_8601": "2022-07-20T05:47:43.102385Z",
      "url": "https://files.pythonhosted.org/packages/97/d1/38a5581283514c765f0bf456b56603f6caa0e922ee773bf43fd88b965753/wc-django-2factor-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}