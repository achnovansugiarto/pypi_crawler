{
  "info": {
    "author": "Konstantin Ignatiev",
    "author_email": "kostya@inet-lab.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# `printf` function for Python Web Assembly runtime\n\nTHis project is intended as a small helper package for running Web Assembly files generated by\n[c4wa compiler](https://github.com/kign/c4wa) in Python. \nHowever, it could be used with any Web Assembly project provided that \n[variable arguments calling convention](https://github.com/kign/c4wa/blob/master/etc/doc/language.md#printf) \ndefined in `c4wa` spec is followed.\n\nConsider the following WAT file, with comments (save it as file `add.wat`):\n\n```wat\n(module\n  ;; function printf (imported): int, int -> void\n  (import \"c4wa\" \"printf\" (func $printf (param i32) (param i32)))\n  ;; memory (exported)\n  (memory (export \"memory\") 1)\n  ;; \"%d + %d = %d\\n\" is written at address 1024\n  (data (i32.const 1024) \"%d + %d = %d\\0A\\00\")\n  ;; function add (exported): int, int -> void\n  (func $add (export \"add\") (param $a i32) (param $b i32)\n    ;; memory[0-7] = $a\n    (i64.store (i32.const 0) (i64.extend_i32_s (get_local $a)))\n    ;; memory[8-15] = $b\n    (i64.store (i32.const 8) (i64.extend_i32_s (get_local $b)))\n    ;; memory[16-23] = $a + $b\n    (i64.store (i32.const 16) (i64.extend_i32_s (i32.add (get_local $a) (get_local $b))))\n    ;; printf(1024, 0)\n    (call $printf (i32.const 1024) (i32.const 0))))\n```\n\nIt exports function `add`, linear memory as `memory` and imports function `printf`, which expects two `i32` arguments.\n\nTo run it using [wasmer](https://wasmer.io/), we can use the following Python script \n(save it as file `add.py`:\n\n```python\nimport sys\nfrom wasm_import import sprintf\n\ndef main (num1 : int, num2 : int) :\n    from wasmer import engine, Store, Module, Instance, Function, FunctionType, Type, ImportObject\n    from wasmer_compiler_llvm import Compiler\n    store = Store(engine.Native(Compiler))\n\n    module = Module(store, open(\"add.wat\", 'r').read())\n    import_object : ImportObject = ImportObject()\n\n    def printf(p_fmt, offset):\n        mem = instance.exports.memory.uint8_view()\n        res = sprintf(p_fmt, mem, offset)\n        print(res, end='')\n\n    import_object.register(\"c4wa\", {\"printf\" : Function(store, printf,\n                                    FunctionType(params=[Type.I32, Type.I32], results=[]))})\n\n    instance = Instance(module, import_object)\n    instance.exports.add(num1, num2)\n\n\nif __name__ == \"__main__\" :\n    if len(sys.argv) != 3 :\n        print(f\"USAGE: {sys.argv[0]} <num 1> <num 2>\")\n        exit(0)\n    main(int(sys.argv[1]), int(sys.argv[2]))\n```\n\nThen install `wasmer` packages and execute:\n\n```bash\npython3 -m pip install --upgrade wasmer wasmer_compiler_llvm\npython3 add.py 13 17\n# 13 + 17 = 30\n```\n\nTo use [wasmtime](https://wasmtime.dev/) instead, replace `main` function above with this:\n\n```python\ndef main (num1 : int, num2 : int) :\n    from wasmtime import Store, Module, Instance, Func, FuncType, ValType\n    store = Store()\n\n    module = Module.from_file(store.engine, \"add.wat\")\n\n    def printf(p_fmt, offset):\n        mem = instance.exports(store)[\"memory\"].data_ptr(store)\n        res = sprintf(p_fmt, mem, offset)\n        print(res, end='')\n\n    instance = Instance(store, module, [Func(store, FuncType([ValType.i32(), ValType.i32()], []), printf)])\n    instance.exports(store)[\"add\"](store, num1, num2)\n```\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kign/pkg-wasm-import",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wasm-import",
    "package_url": "https://pypi.org/project/wasm-import/",
    "platform": "",
    "project_url": "https://pypi.org/project/wasm-import/",
    "project_urls": {
      "Bug Tracker": "https://github.com/kign/pkg-wasm-import/issues",
      "Homepage": "https://github.com/kign/pkg-wasm-import"
    },
    "release_url": "https://pypi.org/project/wasm-import/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "printf function for Python Web Assembly runtime",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12612790,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c3e78e3e825b591bda0db1a5f59467a3940038e0f7a2db34aee87c25722e29c",
          "md5": "02adcc06607719e4addb0135205b6dba",
          "sha256": "1bcd44e1209dd5a8d009df92be59f8c34c1a5f721dd0b87ed9adc22b981026aa"
        },
        "downloads": -1,
        "filename": "wasm_import-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "02adcc06607719e4addb0135205b6dba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10600,
        "upload_time": "2022-01-16T01:23:15",
        "upload_time_iso_8601": "2022-01-16T01:23:15.203612Z",
        "url": "https://files.pythonhosted.org/packages/2c/3e/78e3e825b591bda0db1a5f59467a3940038e0f7a2db34aee87c25722e29c/wasm_import-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc781a945242a27153d8c1ceb2720a694d0534b614a80e81caa87f11d90f895e",
          "md5": "be1662c4e5119da00db05712652b0d2e",
          "sha256": "b3c28891fa3bc2e9177996e9b29a51464d7324f67acc52d389cb8bcefebbeeca"
        },
        "downloads": -1,
        "filename": "wasm-import-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "be1662c4e5119da00db05712652b0d2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10048,
        "upload_time": "2022-01-16T01:23:16",
        "upload_time_iso_8601": "2022-01-16T01:23:16.721596Z",
        "url": "https://files.pythonhosted.org/packages/dc/78/1a945242a27153d8c1ceb2720a694d0534b614a80e81caa87f11d90f895e/wasm-import-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be5018e9e8927158ff1ac7b9184fd1ec60bb074d141ba48ae9097844325f6fdf",
          "md5": "c57bb800543eb6be42d8a0c009b4edf3",
          "sha256": "c9d807d723655c3a33d64f607bb8e6f6a07c78b9e1af00e18956105a67aded70"
        },
        "downloads": -1,
        "filename": "wasm_import-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c57bb800543eb6be42d8a0c009b4edf3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10643,
        "upload_time": "2022-01-18T22:57:59",
        "upload_time_iso_8601": "2022-01-18T22:57:59.187802Z",
        "url": "https://files.pythonhosted.org/packages/be/50/18e9e8927158ff1ac7b9184fd1ec60bb074d141ba48ae9097844325f6fdf/wasm_import-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f405c515daf1e895d8cf3bf5e816d91d831f192b49af27c693d9c5e4b89bea8",
          "md5": "27c9f212c490186a48d652e626bc0e25",
          "sha256": "3039b10fdcaeba9d42a73cb5aac40adeae38496f8ce8d05811d5e9b1a9709584"
        },
        "downloads": -1,
        "filename": "wasm-import-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "27c9f212c490186a48d652e626bc0e25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10074,
        "upload_time": "2022-01-18T22:58:00",
        "upload_time_iso_8601": "2022-01-18T22:58:00.598607Z",
        "url": "https://files.pythonhosted.org/packages/9f/40/5c515daf1e895d8cf3bf5e816d91d831f192b49af27c693d9c5e4b89bea8/wasm-import-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be5018e9e8927158ff1ac7b9184fd1ec60bb074d141ba48ae9097844325f6fdf",
        "md5": "c57bb800543eb6be42d8a0c009b4edf3",
        "sha256": "c9d807d723655c3a33d64f607bb8e6f6a07c78b9e1af00e18956105a67aded70"
      },
      "downloads": -1,
      "filename": "wasm_import-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c57bb800543eb6be42d8a0c009b4edf3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10643,
      "upload_time": "2022-01-18T22:57:59",
      "upload_time_iso_8601": "2022-01-18T22:57:59.187802Z",
      "url": "https://files.pythonhosted.org/packages/be/50/18e9e8927158ff1ac7b9184fd1ec60bb074d141ba48ae9097844325f6fdf/wasm_import-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f405c515daf1e895d8cf3bf5e816d91d831f192b49af27c693d9c5e4b89bea8",
        "md5": "27c9f212c490186a48d652e626bc0e25",
        "sha256": "3039b10fdcaeba9d42a73cb5aac40adeae38496f8ce8d05811d5e9b1a9709584"
      },
      "downloads": -1,
      "filename": "wasm-import-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "27c9f212c490186a48d652e626bc0e25",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 10074,
      "upload_time": "2022-01-18T22:58:00",
      "upload_time_iso_8601": "2022-01-18T22:58:00.598607Z",
      "url": "https://files.pythonhosted.org/packages/9f/40/5c515daf1e895d8cf3bf5e816d91d831f192b49af27c693d9c5e4b89bea8/wasm-import-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}