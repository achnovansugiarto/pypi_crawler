{
  "info": {
    "author": "John Thorvald Wodder II",
    "author_email": "argset@varonathe.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Disassemblers",
      "Typing :: Typed"
    ],
    "description": ".. image:: http://www.repostatus.org/badges/latest/active.svg\n    :target: http://www.repostatus.org/#active\n    :alt: Project Status: Active â€” The project has reached a stable, usable\n          state and is being actively developed.\n\n.. image:: https://github.com/jwodder/argset/workflows/Test/badge.svg?branch=master\n    :target: https://github.com/jwodder/argset/actions?workflow=Test\n    :alt: CI Status\n\n.. image:: https://codecov.io/gh/jwodder/argset/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/jwodder/argset\n\n.. image:: https://img.shields.io/pypi/pyversions/argset.svg\n    :target: https://pypi.org/project/argset/\n\n.. image:: https://img.shields.io/github/license/jwodder/argset.svg\n    :target: https://opensource.org/licenses/MIT\n    :alt: MIT License\n\n`GitHub <https://github.com/jwodder/argset>`_\n| `PyPI <https://pypi.org/project/argset/>`_\n| `Issues <https://github.com/jwodder/argset/issues>`_\n\n``argset`` provides a simple interface for determining whether a callable takes\nan argument with a given name, filtering a ``dict`` of potential arguments down\nto just those that a callable accepts, and determining any required arguments\nthat are missing from a ``dict`` of potential arguments.\n\nInstallation\n============\n``argset`` requires Python 3.6 or higher.  Just use `pip\n<https://pip.pypa.io>`_ for Python 3 (You have pip, right?) to install\n``argset`` and its dependencies::\n\n    python3 -m pip install argset\n\n\nExamples\n========\n\nInspecting a function's arguments::\n\n    >>> from argset import argset\n    >>> def my_func(foo, bar):\n    ...     print(f\"foo={foo!r}\")\n    ...     print(f\"bar={bar!r}\")\n    ... \n    >>> a = argset(my_func)\n    >>> \"foo\" in a\n    True\n    >>> \"quux\" in a\n    False\n\nFiltering a set of arguments to just those accepted by the function::\n\n    >>> a.select({\"foo\": 42, \"bar\": 23, \"quux\": 17})\n    {'foo': 42, 'bar': 23}\n    >>> my_func(**a.select({\"foo\": 42, \"bar\": 23, \"quux\": 17}))\n    foo=42\n    bar=23\n\nSame as above, but now the function takes ``**kwargs``::\n\n    >>> from argset import argset\n    >>> def my_func2(foo, **kwargs):\n    ...     print(f\"foo={foo!r}\")\n    ...     for k, v in kwargs.items():\n    ...          print(f\"{k}={v!r}\")\n    ... \n    >>> a2 = argset(my_func2)\n    >>> \"foo\" in a2\n    True\n    >>> \"quux\" in a2\n    True\n    >>> a2.select({\"foo\": 42, \"bar\": 23, \"quux\": 17})\n    {'foo': 42, 'bar': 23, 'quux': 17}\n    >>> my_func2(**a2.select({\"foo\": 42, \"bar\": 23, \"quux\": 17}))\n    foo=42\n    bar=23\n    quux=17\n\n\nAPI\n===\n\n.. code:: python\n\n    argset(func: Callable) -> ArgSet\n\nInspects a callable and returns a summary of its arguments as an ``ArgSet``\n\n.. code:: python\n\n    class ArgSet\n\nA representation of the arguments taken by a callable.  It has the following\nattributes & properties:\n\n``required_positional_only: int``\n    The number of arguments that are positional-only and do not have default\n    values\n\n``optional_positional_only: int``\n    The number of arguments that are positional-only and have a default value\n\n``positional_only: int``\n    The total number of positional-only arguments\n\n``required_args: frozenset[str]``\n    The names of all positional-or-keyword or keyword-only arguments that do\n    not have default values\n\n``optional_args: frozenset[str]``\n    The names of all positional-or-keyword or keyword-only arguments that have\n    default values\n\n``argnames: frozenset[str]``\n    The names of all positional-or-keyword or keyword-only arguments\n\n``takes_args: bool``\n    Whether the callable has an argument of the form ``*args``\n\n``takes_kwargs: bool``\n    Whether the callable has an argument of the form ``**kwargs``\n\n``ArgSet`` objects support the ``in`` operator; an expression of the form\n``argname in a`` returns ``True`` iff ``argname`` is in ``a.argnames`` or\n``a.takes_kwargs`` is ``True``.\n\n``ArgSet`` objects have the following methods:\n\n.. code:: python\n\n    ArgSet.select(kwargs: Dict[str, Any]) -> Dict[str, Any]\n\nReturns all items in ``kwargs`` where the key is the name of a\npositional-or-keyword or keyword-only argument accepted by the callable.  If\n``takes_kwargs`` is ``True``, the return value is a copy of ``kwargs``.\n\n.. code:: python\n\n    ArgSet.missing(kwargs: Dict[str, Any]) -> FrozenSet[str]\n\nReturns all keys in ``required_args`` that do not appear in ``kwargs``\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jwodder/argset",
    "keywords": "arguments,callable,inspect,keyword arguments,signature",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "argset",
    "package_url": "https://pypi.org/project/argset/",
    "platform": "",
    "project_url": "https://pypi.org/project/argset/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jwodder/argset/issues",
      "Homepage": "https://github.com/jwodder/argset",
      "Source Code": "https://github.com/jwodder/argset"
    },
    "release_url": "https://pypi.org/project/argset/0.1.0/",
    "requires_dist": [
      "dataclasses ; python_version < \"3.7\""
    ],
    "requires_python": "~=3.6",
    "summary": "Simple callable argument inspection & filtering",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10562871,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b52b7aa284f345e37f955d86e4cd57b1039b573552b0fc29d1a522ec05c1ee41",
          "md5": "5fd57f8b97ffe7b2a98449afd293a372",
          "sha256": "107a632c7112faceb9fd6e93658dd461154713db250f7ffde5bd473e17cf1db5"
        },
        "downloads": -1,
        "filename": "argset-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5fd57f8b97ffe7b2a98449afd293a372",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 5219,
        "upload_time": "2021-06-05T00:15:37",
        "upload_time_iso_8601": "2021-06-05T00:15:37.534150Z",
        "url": "https://files.pythonhosted.org/packages/b5/2b/7aa284f345e37f955d86e4cd57b1039b573552b0fc29d1a522ec05c1ee41/argset-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0ee1c25e68d029e8daaf3228dababbf3261fa5d9569f6f705867b2ad4df9b6d",
          "md5": "8795036c84ede7599bed722d9445611b",
          "sha256": "8a41ee4789d37517c259984c11f2aa3639a90dc8fa446ff905ecc5fe6623c12d"
        },
        "downloads": -1,
        "filename": "argset-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8795036c84ede7599bed722d9445611b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 6565,
        "upload_time": "2021-06-05T00:15:39",
        "upload_time_iso_8601": "2021-06-05T00:15:39.003726Z",
        "url": "https://files.pythonhosted.org/packages/d0/ee/1c25e68d029e8daaf3228dababbf3261fa5d9569f6f705867b2ad4df9b6d/argset-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b52b7aa284f345e37f955d86e4cd57b1039b573552b0fc29d1a522ec05c1ee41",
        "md5": "5fd57f8b97ffe7b2a98449afd293a372",
        "sha256": "107a632c7112faceb9fd6e93658dd461154713db250f7ffde5bd473e17cf1db5"
      },
      "downloads": -1,
      "filename": "argset-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5fd57f8b97ffe7b2a98449afd293a372",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.6",
      "size": 5219,
      "upload_time": "2021-06-05T00:15:37",
      "upload_time_iso_8601": "2021-06-05T00:15:37.534150Z",
      "url": "https://files.pythonhosted.org/packages/b5/2b/7aa284f345e37f955d86e4cd57b1039b573552b0fc29d1a522ec05c1ee41/argset-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d0ee1c25e68d029e8daaf3228dababbf3261fa5d9569f6f705867b2ad4df9b6d",
        "md5": "8795036c84ede7599bed722d9445611b",
        "sha256": "8a41ee4789d37517c259984c11f2aa3639a90dc8fa446ff905ecc5fe6623c12d"
      },
      "downloads": -1,
      "filename": "argset-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8795036c84ede7599bed722d9445611b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.6",
      "size": 6565,
      "upload_time": "2021-06-05T00:15:39",
      "upload_time_iso_8601": "2021-06-05T00:15:39.003726Z",
      "url": "https://files.pythonhosted.org/packages/d0/ee/1c25e68d029e8daaf3228dababbf3261fa5d9569f6f705867b2ad4df9b6d/argset-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}