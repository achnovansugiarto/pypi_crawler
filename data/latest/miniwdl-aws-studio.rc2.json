{
  "info": {
    "author": "Wid L. Hacker",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n# miniwdl + GWFCore + SageMaker Studio\n\nThis repository is a recipe for deploying **[miniwdl-aws](https://github.com/miniwdl-ext/miniwdl-aws)** and [GWFCore](https://github.com/aws-samples/aws-genomics-workflows) to use within [Amazon SageMaker Studio](https://aws.amazon.com/sagemaker/studio/), a web IDE with a terminal and filesystem browser. You can use the terminal to operate `miniwdl run` against GWFCore's AWS Batch stack, the filesystem browser to manage the inputs and outputs on EFS, and the Jupyter notebooks to further analyze the outputs.\n\n## CDK boilerplate\n\nThe `cdk.json` file tells the CDK Toolkit how to execute your app.\n\nThis project is set up like a standard Python project.  The initialization\nprocess also creates a virtualenv within this project, stored under the `.venv`\ndirectory.  To create the virtualenv it assumes that there is a `python3`\n(or `python` for Windows) executable in your path with access to the `venv`\npackage. If for any reason the automatic creation of the virtualenv fails,\nyou can create the virtualenv manually.\n\nTo manually create a virtualenv on MacOS and Linux:\n\n```\n$ python3 -m venv .venv\n```\n\nAfter the init process completes and the virtualenv is created, you can use the following\nstep to activate your virtualenv.\n\n```\n$ source .venv/bin/activate\n```\n\nIf you are a Windows platform, you would activate the virtualenv like this:\n\n```\n% .venv\\Scripts\\activate.bat\n```\n\nOnce the virtualenv is activated, you can install the required dependencies.\n\n```\n$ pip install -r requirements.txt\n```\n\nAt this point you can now synthesize the CloudFormation template for this code.\n\n```\n$ cdk synth\n```\n\nTo add additional dependencies, for example other CDK libraries, just add\nthem to your `setup.py` file and rerun the `pip install -r requirements.txt`\ncommand.\n\n## Useful commands\n\n * `cdk ls`          list all stacks in the app\n * `cdk synth`       emits the synthesized CloudFormation template\n * `cdk deploy`      deploy this stack to your default AWS account/region\n * `cdk diff`        compare deployed stack with current state\n * `cdk docs`        open CDK documentation\n\nEnjoy!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "miniwdl-aws-studio",
    "package_url": "https://pypi.org/project/miniwdl-aws-studio/",
    "platform": "",
    "project_url": "https://pypi.org/project/miniwdl-aws-studio/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/miniwdl-aws-studio/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "AWS CDK app to add miniwdl+GWFCore to existing SageMaker Studio",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12635939,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dedfcfb633d4f5b03ccb5268fcf03250323dd67dc1aef121e115b60021027125",
          "md5": "35d7535ffcc95f316a4d2bad5a1fa7d0",
          "sha256": "ba98e477316cc138bbbe333ca3d26429195282a3b61f0882f8f8c86e93d60358"
        },
        "downloads": -1,
        "filename": "miniwdl-aws-studio-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "35d7535ffcc95f316a4d2bad5a1fa7d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2471,
        "upload_time": "2021-07-21T10:24:36",
        "upload_time_iso_8601": "2021-07-21T10:24:36.571064Z",
        "url": "https://files.pythonhosted.org/packages/de/df/cfb633d4f5b03ccb5268fcf03250323dd67dc1aef121e115b60021027125/miniwdl-aws-studio-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48a81393266639db3b1ab0df5d5ba2884c6998a0ebe5bc084104f81ac1cd8da6",
          "md5": "f9ce234c177e15e2e0cd18fe03f1107e",
          "sha256": "3a63c3f60065b794153da84714b449209afeeaceb2078a6b862c50309e2982c3"
        },
        "downloads": -1,
        "filename": "miniwdl-aws-studio-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f9ce234c177e15e2e0cd18fe03f1107e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3904,
        "upload_time": "2021-08-05T06:40:05",
        "upload_time_iso_8601": "2021-08-05T06:40:05.327755Z",
        "url": "https://files.pythonhosted.org/packages/48/a8/1393266639db3b1ab0df5d5ba2884c6998a0ebe5bc084104f81ac1cd8da6/miniwdl-aws-studio-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48a81393266639db3b1ab0df5d5ba2884c6998a0ebe5bc084104f81ac1cd8da6",
        "md5": "f9ce234c177e15e2e0cd18fe03f1107e",
        "sha256": "3a63c3f60065b794153da84714b449209afeeaceb2078a6b862c50309e2982c3"
      },
      "downloads": -1,
      "filename": "miniwdl-aws-studio-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f9ce234c177e15e2e0cd18fe03f1107e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3904,
      "upload_time": "2021-08-05T06:40:05",
      "upload_time_iso_8601": "2021-08-05T06:40:05.327755Z",
      "url": "https://files.pythonhosted.org/packages/48/a8/1393266639db3b1ab0df5d5ba2884c6998a0ebe5bc084104f81ac1cd8da6/miniwdl-aws-studio-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}