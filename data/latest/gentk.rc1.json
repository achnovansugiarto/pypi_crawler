{
  "info": {
    "author": "David H. Rogers",
    "author_email": "dhr@lanl.gov",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "This is a python toolkit for the 4D Genome Browser project. It includes a client, algorithms and datastructures for accessing a **4DGenomeBrowser** database.\n\n\n## Creating an instance of a client\nThe main way to interact with the database is to create a client, then make calls through the client to the database hosted at the server. The server is defined by its url and port. \n\n```\n    import gentk\n\n    # provide the URL and port when creating an instance\n    client = gentk.client.client(\"http://127.0.0.1\", \"8000\")\n\n    # set the project\n    client.project = \"test.00\"\n```\n\n## API\n- **get_structure_arrays()** Get a list of structure arrays from the server. The list is made of key, value pairs (see below).\n- **get_sequence_arrays()** Get a list of sequence arrays from the server. The list is made of key, value pairs (see below).\n- **get_arrays(type)** Get a list of all arrays from the server. The list is made of key, value pairs (see below).\n```\n    Example:\n    arrays = client.get_arrays()\n\n    return value has the following structure:\n    [\n        {\n            'id': int,\n            'name': string,\n            'type': string\n        },\n        {\n            'id': int,\n            'name': string,\n            'type': string\n        },\n        ,,,\n    ]\n``` \n\n- **set_array(array, metadata)** Set a new array on the server. Returns the id of the new array (integer)\n\n```\n    Example:\n    metadata = {\n                    \"name\": \"test array\", \n                    \"type\": \"structure\", \n                    \"datatype\": \"int\", \n                    \"datadim\": 1\n                 }\n   id = client.set_array([0, 1, 2, 3, 4], metadata)\n```\n- **get_array(arrayID)** Get an array from the server. Returns a json object.\n```\n    Example:\n\n    result = client.get_array(id)\n\n    return value has the following structure:\n    {\n        'name' : string,\n        'type' : string,\n        'version' : string (version of the array format)\n        'data' {\n            'type': string,\n            'dim' : int,\n            'values' : python data array\n        }\n    }\n\n```\n- **get_contactmap(mapID)** Get a contact map data structure.\n- **get_genes()** Get the list of genes for a project.\n- **get_genes_for_segment(structureID, segID)** Get a list of genes for a structure's segment.\n- **get_segments_for_gene(structureID, gene)** Get a list of structure segments that a gene intersects.\n- **get_segment_ids(structureID)** Return a list of segment IDs for a structure. \n- **get_structure(structureID)** Get a structure. Return value is a list of segments. \n```\n    Example:\n\n    structure = client.get_structure(id)\n\n    return value has the following structure, which is a list of segments:\n    [\n        {\n            'end'       : list of three floats,\n            'length'    : int; length of segment,\n            'segid'     : int,\n            'start'     : list of three floats,\n            'startid'   : int; start ID in the sequence\n        },\n        ...\n    ]\n```\n\nCopyright (c) 2021 Los Alamos National Laboratory",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lanl/4DGB",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gentk",
    "package_url": "https://pypi.org/project/gentk/",
    "platform": "",
    "project_url": "https://pypi.org/project/gentk/",
    "project_urls": {
      "Homepage": "https://github.com/lanl/4DGB"
    },
    "release_url": "https://pypi.org/project/gentk/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "4D Genome Toolkit.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11476220,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9d78cac8edc6e1567dbae2d7897d169541927380702d8cf5ab1696575a9ead2",
          "md5": "0f06ceabe7449e674fe662ee7861c71e",
          "sha256": "829e20544592539ee1afb30102cfde30e3495636fa6ae5a6efc6fcef070ba6d0"
        },
        "downloads": -1,
        "filename": "gentk-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0f06ceabe7449e674fe662ee7861c71e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5114,
        "upload_time": "2021-09-17T08:08:40",
        "upload_time_iso_8601": "2021-09-17T08:08:40.454157Z",
        "url": "https://files.pythonhosted.org/packages/d9/d7/8cac8edc6e1567dbae2d7897d169541927380702d8cf5ab1696575a9ead2/gentk-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d9d78cac8edc6e1567dbae2d7897d169541927380702d8cf5ab1696575a9ead2",
        "md5": "0f06ceabe7449e674fe662ee7861c71e",
        "sha256": "829e20544592539ee1afb30102cfde30e3495636fa6ae5a6efc6fcef070ba6d0"
      },
      "downloads": -1,
      "filename": "gentk-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0f06ceabe7449e674fe662ee7861c71e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5114,
      "upload_time": "2021-09-17T08:08:40",
      "upload_time_iso_8601": "2021-09-17T08:08:40.454157Z",
      "url": "https://files.pythonhosted.org/packages/d9/d7/8cac8edc6e1567dbae2d7897d169541927380702d8cf5ab1696575a9ead2/gentk-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}