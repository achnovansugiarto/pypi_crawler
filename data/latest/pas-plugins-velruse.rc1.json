{
  "info": {
    "author": "RedTurtle Technology",
    "author_email": "sviluppoplone@redturtle.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Plone",
      "Framework :: Plone :: 3.3",
      "Framework :: Plone :: 4.0",
      "Framework :: Plone :: 4.1",
      "Framework :: Plone :: 4.2",
      "Framework :: Plone :: 4.3",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "A PAS plugin for Plone that **authenticate users from social networks** through the use of **Velruse**.\r\n\r\n.. contents::\r\n\r\nIntroduction\r\n============\r\n\r\nThis Plone plugin let you to enable authentication of social networks users in Plone sites, using `Velruse`__.\r\n\r\n__ http://velruse.readthedocs.org/\r\n\r\nVelruse is a Pyramid application so defined:\r\n\r\n    Velruse is a set of authentication routines that provide a **unified way** to have a website user authenticate to a\r\n    variety of different identity providers and/or a variety of different authentication schemes.\r\n    \r\n    It is similar in some ways to `Janrain Engage`__ with the exception of being **open-source**, **locally installable**,\r\n    and **easily pluggable** for custom identity providers and authentication schemes.\r\n\r\n    __ http://www.janrain.com/products/engage\r\n    \r\n    -- from Velruse documentation\r\n\r\nWhy use Velruse instead of RPX service?\r\n---------------------------------------\r\n\r\nPlone ecosystem already have at least one plugin for a general social authentication: `plonesocial.auth.rpx`__. But in some\r\nenvironments (for example: public company or whatever use case where the user's privacy follow strict rules) this\r\nkind of service can't be used.\r\n\r\n__ http://comlounge.net/rpx/\r\n\r\nPrivacy apart, Velruse is **open source* and **easilly pluggable**: you can provide authentication providers for new services\r\nnot covered by Janrain.\r\n\r\nCheck also this `Velruse presentation`__ for more.\r\n\r\n__ http://www.slideshare.net/amleczko/lost-in-o-auth-learn-velruse-and-get-your-life-back\r\n\r\nHow to Use\r\n==========\r\n\r\nInstalling Velruse\r\n------------------\r\n\r\nVelruse is a `Pyramid`__ application so you must follow the proper `installation instruction`__ the refer to the\r\n`Velruse setup guide`__.\r\n\r\n__ http://www.pylonsproject.org/projects/pyramid/about\r\n__ http://docs.pylonsproject.org/projects/pyramid/en/1.4-branch/narr/install.html\r\n__ http://velruse.readthedocs.org/en/latest/usage.html\r\n\r\nVelruse can be executed as a separate *Pyramid service* and the Plone plugin needs this configuration.\r\nIt will talk to Velruse using HTTP requests.\r\n\r\n**TODO**: recent Zope version can be executed in the WSGI stack. Maybe future version of the plugin would support\r\nalso this alternative way? Who knows.\r\n\r\nInstalling pas.plugins.velruse\r\n------------------------------\r\n\r\nJust add ``pas.plugins.velruse`` to your buildout configuration and re-run it.\r\n\r\n.. code:: ini\r\n\r\n    [instance]\r\n    recipe = plone.recipe.zope2instance\r\n    \r\n    ...\r\n    \r\n    eggs =\r\n        ...\r\n        pas.plugins.velruse\r\n\r\nAfter Plone restart, add \"**Velruse authentication plugin**\" product to you Plone site.\r\n\r\nConfiguring pas.plugins.velruse\r\n-------------------------------\r\n\r\nAll configuration are done through the \"*Velruse integration settings*\" configuration, from the Plone\r\ncontrol panel.\r\n\r\nGeneral site settings\r\n~~~~~~~~~~~~~~~~~~~~~\r\n\r\nThe first section is for configuration that globally controls how Plone talk to Velruse, and other user interface\r\noptions.\r\n\r\n**Site login enabled**\r\n    If you want to keep enabled the standard Plone site login form or not.\r\n**Authentication services enabled**\r\n    A configuration list of available Velruse backends. See below.\r\n**Connection timeout**\r\n    A timeout value for connection to velruse server.\r\n\r\nThe \"*Authentication services enabled*\" configuration is composed by a set of triplets:\r\n\r\n**Name**\r\n    (optional) A descriptive name of the remote service. For example: \"Facebook\".\r\n**URL or path**\r\n    (mandatory) URL or path to the running Velruse service. Please note: this must be a public URL the user must\r\n    able to access. This is not really mandatory, but if not provided the login method is not displayed in the login form.\r\n**Icon**\r\n    (optional) URL or path for an icon that can recall the service logo.\r\n    \r\n    Default CSS implementation is for 64x64px images.\r\n\r\nURLs above can be absolute (\"http://auth.yourservice.com/login/facebook\") or relative to the portal root URL by\r\nusing a starting slash (\"/velruse/login/facebook\"). The latter will help you keeping Plone and Velruse behind Apache.\r\n\r\nThose information are used to properly configure the new login form.\r\n\r\n.. image:: http://blog.redturtle.it/pypi-images/pas.plugins.velruse/pas.plugins.velruse-0.1a1-01.png/image_large\r\n   :alt: New login form\r\n   :target: http://blog.redturtle.it/pypi-images/pas.plugins.velruse/pas.plugins.velruse-0.1a1-01.png\r\n\r\nPAS plugins configuration\r\n~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nThe other configuration section is relative the Velruse PAS plugin(s).\r\n\r\n**Velruse server host** \r\n    The hostname of the Pyramid Velruse service. For example: ``127.0.0.1:8080`` if Velruse run on the same\r\n    server of Plone.\r\n**Velruse auth info path**\r\n    The configured Pyramid route for calling **auth_info**. Default is ``/velruse/auth_info``.\r\n    \r\n    Keep in mind this warning taken from official Velruse documentation:\r\n    \r\n        The ``/auth_info`` URL should be considered sensitive and only trusted services should be allowed access.\r\n        If an attacker intercepts a an authentication token, they could potentially query /auth_info and learn all of\r\n        the credentials for the user.\r\n\r\n**User roles**\r\n    Set of default roles automatically given to users that perform authentication with the Velruse plugin.\r\n    Default to \"*Members*\" only.\r\n\r\nPlus, you have two additional forms: \"*Users management*\" and \"*Blacklist management*\" to manage user's data\r\ninside the plugin. You can delete data or enableadd the user to the **blacklist**.\r\nBlacklisted users can't authenticate anymore.\r\n\r\nData read by Plone from Velruse\r\n-------------------------------\r\n\r\nRight now only Twitter, Facebook, Linkedin and Google+ are automatically configured:\r\n\r\n* from Twitter: fullname, location, personal home page and portrait\r\n  (no e-mail can be read)\r\n* from Facebook: fullname, e-mail and portrait\r\n* from Linkedin: fullname, e-mail and portrait\r\n  (must properly configure the Linkedin API)\r\n* from Google: fullname and e-mail\r\n\r\nBut Velruse support *a lot* of additional providers; if you want to enable more\r\n(this is true also for custom providers) you must configure the plugin, setting what data try to read\r\nby changing a configuration variable.\r\n\r\n.. code:: python\r\n\r\n    from pas.plugins.velruse.config import PROPERTY_PROVIDERS_INFO\r\n    PROPERTY_PROVIDERS_INFO['yourmagicnewprovider'] = ('fullname', 'email', 'description')\r\n\r\n**TODO**: this will probably change in future, maybe replaced by a blacklist of property you *don't* want to read, or\r\nsomething configurable TTW.\r\n\r\nRequirements\r\n============\r\n\r\nTested with:\r\n\r\n* Plone 3.3\r\n* Plone 4.2\r\n* Plone 4.3\r\n\r\nAll using Velruse 1.1.\r\n\r\nCredits\r\n=======\r\n\r\nDeveloped with the support of `Regione Emilia Romagna`__;\r\nRegione Emilia Romagna supports the `PloneGov initiative`__.\r\n\r\n__ http://www.regione.emilia-romagna.it/\r\n__ http://www.plonegov.it/\r\n\r\nAuthors\r\n=======\r\n\r\nThis product was developed by RedTurtle Technology team.\r\n\r\n.. image:: http://www.redturtle.it/redturtle_banner.png\r\n   :alt: RedTurtle Technology Site\r\n   :target: http://www.redturtle.it/\r\n\r\nSpecial thanks to `Mauro Amico`__ and `Ben Bangert`__ (for accepting a couple of mine pull requests).\r\n\r\n__ https://github.com/mamico\r\n__ https://github.com/bbangert\r\n\r\nChangelog\r\n=========\r\n\r\n0.1.0a1 (2014-05-14)\r\n--------------------\r\n\r\n- Initial release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://plone.org/products/pas.plugins.velruse/",
    "keywords": "pas velruse plone authentication",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pas.plugins.velruse",
    "package_url": "https://pypi.org/project/pas.plugins.velruse/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pas.plugins.velruse/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://plone.org/products/pas.plugins.velruse/"
    },
    "release_url": "https://pypi.org/project/pas.plugins.velruse/0.1.0a1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "PAS plugin for Plone. Allow users to login using social networks through Velruse",
    "version": "0.1.0a1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1092297,
  "releases": {
    "0.1.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81ba92d731357558b4efc2fb550de10ae344e5ad39b2dffb3616d316de776cd3",
          "md5": "b6c7e117ff6c29c7606f875308973fe7",
          "sha256": "f93d5d1e7e0a2535a7c51e783092f09d6141383319020a4c2bdf8c7b08449a73"
        },
        "downloads": -1,
        "filename": "pas.plugins.velruse-0.1.0a1.zip",
        "has_sig": false,
        "md5_digest": "b6c7e117ff6c29c7606f875308973fe7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 75160,
        "upload_time": "2014-05-14T14:52:20",
        "upload_time_iso_8601": "2014-05-14T14:52:20.243109Z",
        "url": "https://files.pythonhosted.org/packages/81/ba/92d731357558b4efc2fb550de10ae344e5ad39b2dffb3616d316de776cd3/pas.plugins.velruse-0.1.0a1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "81ba92d731357558b4efc2fb550de10ae344e5ad39b2dffb3616d316de776cd3",
        "md5": "b6c7e117ff6c29c7606f875308973fe7",
        "sha256": "f93d5d1e7e0a2535a7c51e783092f09d6141383319020a4c2bdf8c7b08449a73"
      },
      "downloads": -1,
      "filename": "pas.plugins.velruse-0.1.0a1.zip",
      "has_sig": false,
      "md5_digest": "b6c7e117ff6c29c7606f875308973fe7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 75160,
      "upload_time": "2014-05-14T14:52:20",
      "upload_time_iso_8601": "2014-05-14T14:52:20.243109Z",
      "url": "https://files.pythonhosted.org/packages/81/ba/92d731357558b4efc2fb550de10ae344e5ad39b2dffb3616d316de776cd3/pas.plugins.velruse-0.1.0a1.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}