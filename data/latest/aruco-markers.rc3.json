{
  "info": {
    "author": "Christopher E. Mower",
    "author_email": "\"Christopher E. Mower\" <christopher.mower@kcl.ac.uk>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/cmower/aruco_markers/master/doc/image/marker.png\" width=\"60\" align=\"right\">\n</p>\n\n# aruco_markers\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nThe `aruco_markers` package is a compact Python toolkit designed to manage ArUCo markers.\nIt serves as a streamlined interface for the OpenCV aruco module and offers a range of capabilities through both a command line interface and a simplified library interface.\nFor more information, refer to the accompanying documentation.\n\n* Code: [https://github.com/cmower/aruco_markers](https://github.com/cmower/aruco_markers)\n* Documentation: [https://cmower.github.io/aruco_markers/](https://cmower.github.io/aruco_markers/)\n* PyPI: [https://pypi.org/project/aruco-markers/](https://pypi.org/project/aruco-markers/)\n* Issues: [https://github.com/cmower/aruco_markers/issues](https://github.com/cmower/aruco_markers/issues)\n\n# Install\n\n## From PyPI\n\n```\npip install aruco_markers\n```\n\n## From source\n\nIn a new terminal:\n1. Clone repository:\n   - (ssh) `$ git clone git@github.com:cmower/aruco_markers.git`, or\n   - (https) `$ git clone https://github.com/cmower/aruco_markers.git`\n2. Change directory: `$ cd aruco_markers`\n3. Ensure `pip` is up-to-date: `$ python -m pip install --upgrade pip`\n3. Install from source: `$ pip install .`\n\n# The `aruco_markers` library\n\nAll the functionality of the library can be accessed via\n\n```python\nimport aruco_markers\n```\n\nFull documentation for all the classes/functions provided can be found [here]().\n\n# Command line interface\n\nSeveral features of the library are exposed to the command line via the `aruco` command.\nWhen running these commands, several directories will be created.\nThe top level directory is `~/aruco_markers_data`.\nAll the data created by these commands are stored here, specified in the following sub-sections.\n\nThe available commands are\n* `collect`: Collect data with checkerboard to calibrate a camera.\n* `calibrate`: Calibrate a camera.\n* `generate`: Generate marker tags.\n* `detect`: Detect marker poses from camera feed.\n\nThe use of these commands are described below.\nIn addition, you can access the documentation for ecah command by appending `--help`.\nFor example\n```\n$ aruco generate --help\nusage: aruco generate [OPTIONS]\n\nGenerate marker tags.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d DICT, --dict DICT  Type of ArUCo tag to generate (default is DICT_ARUCO_ORIGINAL).\n  -i ID, --id ID        Identifier of the marker. It has to be a valid id in the specified dictionary.\n  -s SIDEPIXELS, --sidepixels SIDEPIXELS\n                        Size of the ArUCo tag (default is 200).\n  -b BORDERBITS, --borderbits BORDERBITS\n                        Width of the marker border (default is 1).\n  -w WIDTH, --width WIDTH\n                        Width of the marker in millimeters (default is 500).\n  -p PAD, --pad PAD     Padding around marker image when positioned on an A4 pdf in millimeters (default is 20).\n  --noshow              Display the marker.\n  --save                Save the marker. Tags are saved in ~/aruco_markers/tags; this directory is created if it does not already exist.\n```\n\nSimilarly for each of the other commands.\n\n## Generating markers\n\nYou can generate markers using the `aruco generate` command.\nWhen the `--save` flag is included in the command line input, the marker data is saved in the `~/aruco_markers_data/tags` directory.\nTwo files are created, an image of the marker as a PNG and a printable PDF.\nThe PDF includes the tag and meta information as human-readable text.\n\nFor example, try running\n```\n$ aruco generate --dict DICT_ARUCO_ORIGINAL --id 100 --save --noshow\n```\n\nThe expected output is as follows (note `HOMEDIR` will be relaced with what ever your home directory is set as).\n\n```\nCreated HOMEDIR/aruco_markers_data\nCreated HOMEDIR/aruco_markers_data/tags\nSaved\n  HOMEDIR/aruco_markers_data/tags/marker_dict_DICT_ARUCO_ORIGINAL_id_100_sidepixels_200_borderbits_1_width_500_pad_20.png\n  HOMEDIR/aruco_markers_data/tags/marker_dict_DICT_ARUCO_ORIGINAL_id_100_sidepixels_200_borderbits_1_width_500_pad_20.pdf\n```\n\n*Note*, if you have already run `aruco generate` before, then it is possible you will not see the lines acknowledging a directories creation (i.e. those starting with `Created`).\n\nThe PNG file created should match the marker displayed at the top of this readme, i.e. [here](doc/marker.png).\n\nThe full list of available dictionaries are as follows.\n\n* DICT_4X4_50\n* DICT_4X4_100\n* DICT_4X4_250\n* DICT_4X4_1000\n* DICT_5X5_50\n* DICT_5X5_100\n* DICT_5X5_250\n* DICT_5X5_1000\n* DICT_6X6_50\n* DICT_6X6_100\n* DICT_6X6_250\n* DICT_6X6_1000\n* DICT_7X7_50\n* DICT_7X7_100\n* DICT_7X7_250\n* DICT_7X7_1000\n* DICT_ARUCO_ORIGINAL\n* DICT_APRILTAG_16h5\n* DICT_APRILTAG_25h9\n* DICT_APRILTAG_36h10\n* DICT_APRILTAG_36h11\n\n## Calibrating a camera\n\nCalibrating a camera can be performed using the `aruco collect` and  `aruco calibrate` command.\nRunning this command will take you through several steps in order to calibrate the camera.\n\n### Prerequisites\n\nYou will require a checkerboard to complete the calibration process.\nA good resource for getting printable checkerboards can be found [here](https://markhedleyjones.com/projects/calibration-checkerboard-collection).\nIt is a good idea to attach the printed checkerboard to a flat surface.\n\nYou can also find a checkerboard in the `doc/` directory called `Checkerboard-A4-25mm-8x6.pdf`.\nThis is a 8-by-6 checkerboard, where each square has length 25mm when printed on A4.\n\n### Collect data\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/cmower/aruco_markers/master/doc/image/checkerboard.png\" width=\"60%\" align=\"center\">\n</p>\n\nTo gather data for calibration, execute the `aruco collect` command.\nWhen the checkerboard is detected correctly, a result similar to the one depicted in the above figure should appear.\nPress the ESC key to stop collecting data.\n\nTo obtain accurate estimated parameters from the calibration process, it is advisable to move the checkerboard to different depths and orientations on the screen.\nKeep in mind that a considerable amount of data could be collected, so make sure that your PC has sufficient storage capacity.\nThe quantity of data required is uncertain, but collecting more data will generally result in more precise estimated parameters.\nNevertheless, processing more data will take more time.\nEnsuring sufficient coverage of depths and orientations is important.\n\nIn this particular example, I used the `Checkerboard-A4-25mm-8x6.pdf` found in the `doc/` directory for the checkerboard.\nSince I am using my laptop's webcam, the camera index is `0` (which is the default value).\nI began the data collection process by executing the following command.\n\n```\n$ aruco collect --width 8 --height 6 --squaresize 25\n```\n\nRun `$ aruco collect --help` if you need more clarity on the command line input variables.\n\nYou should expect terminal output similar to the following.\n\n```\n$ aruco collect --width 8 --height 6 --squaresize 25\nPress ESC to quit.\nCreated HOMEDIR/aruco_markers_data\nCreated HOMEDIR/home/cm22/aruco_markers_data/calibrate\nCreated HOMEDIR/aruco_markers_data/calibrate/CAMERANAME\nData collection completed for the 'CAMERANAME' camera.\nData saved in HOMEDIR/aruco_markers_data/calibrate/CAMERANAME\n```\n\nIn the above, `HOMEDIR` is your home directory, i.e. where ever `~/` is on you PC, and `CAMERANAME` is the camera name used for data collection.\nThis should correspond to the camera you intend to calibrate (if you have more than one camera attached to your PC).\nNote the `CAMERANAME`, it will be required in the calibration step next.\n\nAll the raw images that contain the checkerboard are collected into a zip file called `data.zip`.\nYou can run the collection process several times, and the new data is appended to the zip file (the collection *does not* overwrite previously collected data).\n\n### Calibrate camera\n\nOnce you have collected data (as described in the previous section), you can directly perform the calibration.\nAll you require is the name of the camera (this was ouput to the terminal during the data collection, see `CAMERANAME` in previous section).\n\nIn my example, I ran the following.\n\n```\n$ aruco calibrate --cameraname CAMERANAME\n```\n\nThe terminal output should look similar to the following.\n\n```\n$ aruco calibrate --cameraname CAMERANAME\nProcessing checkerboard images ...\nLoaded (1/60) checkerboard_cameraname_CAMERANAME_width_8_height_6_squaresize_25.0_stamp_UNIQUETIMESTAMP.png\n  Processing ... success!\n\n...\n\nLoaded (60/60) checkerboard_cameraname_CAMERANAME_width_8_height_6_squaresize_25.0_stamp_UNIQUETIMESTAMP.png\n  Processing ... success!\nDone!\nCalibrating camera ... done!\nCalibration took 1.0067 seconds\nCamera matrix:\n [[617.49438628   0.         318.25186084]\n [  0.         617.0481798  263.17630606]\n [  0.           0.           1.        ]]\n\nDistorion Cooeficients:\n [[-3.22848626e-01  2.43430897e+00 -2.73404118e-04  3.06017375e-03\n  -7.64518705e+00]]\nSaved HOMEDIR/aruco_markers_data/calibrate/CAMERANAME/camera_parameters.dat\nCompleted calibration successfully.\n```\n\nIn the above, 60 files were successfully processed.\n*Note*, each file name is given a unique time stamp so files are not overwritten.\nThe duration of the calibration process is reported and also the estimated parameters.\nYou do not need to note these since they are saved in the `camera_parameters.dat` file.\n\nIf you have a lot of data and the processing is taking too long, you can downsample the data by specifying the `--maxfiles MAXFILES` flag.\nThis will randomly sample `MAXFILES` files from the file names (uniform distribution) and then perform the calibration.\n\n## View pose detection from a camera feed\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/cmower/aruco_markers/master/doc/image/marker_ex.png\" width=\"60%\" align=\"center\">\n</p>\n\nAfter calibrating a camera, you can use the `aruco detect` command to display the position of a marker.\nThis function is primarily intended for debugging and serves as a demonstration of detector configuration.\nHowever, if the camera has not been calibrated beforehand, this command will throw an error.\n\nWhen you run `aruco detect` you should see something similar to the figure above.\nI ran this example by running the following in terminal.\n\n```\n$ aruco detect --dict DICT_4X4_50 --markerindex 0\n```\n\n*Note*, the marker I use in this example has a length of 5cm.\nThis information is required if you want to use the pose estimation.\n\n# Marker pose estimation\n\nIf you opt for the `aruco_markers` package, you can use the command line interface to produce tags and calibrate cameras.\nHowever, if you require additional features, you can customize the class/method structure available in the library.\nSeveral methods are provided to that enable you to easily load camera parameters, and estimate marker poses.\n\nPlease see the [example](example/ros1_tf_publisher.py), that shows how to implement a simple pose estimator into ROS.\nThis example assumes you have calibrated your camera by running `aruco collect`, and `aruco calibrate` prior to running this script.\n\n# Build documentation\n\nThe documentation is hosted [here]().\nHowever, if you would like to build the documentation yourself, follow these steps.\n\nIn a new terminal:\n1. Clone repository:\n   - (ssh) `$ git clone git@github.com:cmower/aruco_markers.git`, or\n   - (https) `$ git clone https://github.com/cmower/aruco_markers.git`\n2. Change directory: `$ cd aruco_markers/doc`\n3. Generate the main page: `$ python gen_mainpage.py`\n3. Install doxygen: `$ sudo apt install doxygen`\n4. Build documentation: `$ doxygen`\n5. View documentation:\n   - In a browser, open `html/index.html`\n   - Build pdf (requires LaTeX)\n\t - `$ cd latex`\n\t - `$ make`\n\t - Open the file called `refman.pdf`\n\n# Citing\n\nIf you use `aruco_markers` in your work, please consider citing the following.\n\n```bibtex\n@software{Mower2023\n  title = \"aruco_markers: A Compact Python Package for handling ArUCo markers\",\n  author = \"Christopher E. Mower\",\n  year = \"2023\",\n  url = {https://github.com/cmower/aruco_markers},\n}\n```\n\n# Contributing\n\nIf you have any issues with the library, or find inaccuracies in the documentation please [raise an issue](https://github.com/cmower/aruco_markers/issues/new/choose).\nI am happy to consider new features if you [fork the library](https://github.com/cmower/aruco_markers/fork) and submit a pull request.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cmower/aruco_markers",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aruco-markers",
    "package_url": "https://pypi.org/project/aruco-markers/",
    "platform": null,
    "project_url": "https://pypi.org/project/aruco-markers/",
    "project_urls": {
      "Bug Tracker": "https://github.com/cmower/aruco_markers/issues",
      "Documentation": "https://cmower.github.io/aruco_markers/",
      "Homepage": "https://cmower.github.io/aruco_markers/",
      "Source": "https://github.com/cmower/aruco_markers"
    },
    "release_url": "https://pypi.org/project/aruco-markers/1.0.2/",
    "requires_dist": [
      "opencv-contrib-python",
      "numpy",
      "scipy",
      "reportlab",
      "attrs"
    ],
    "requires_python": ">=3.7",
    "summary": "A compact Python package for handling ArUCo markers.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17481160,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13393f8aa205ffba7326a4799f0f7a82f8066e052c3186e4a7cd696492f33980",
          "md5": "b010f67d34e883d0f17730c4ed824aeb",
          "sha256": "7aa429b689057e46123a41a5885b6f9e1649562c1819be8b563f79a88024a52b"
        },
        "downloads": -1,
        "filename": "aruco_markers-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b010f67d34e883d0f17730c4ed824aeb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22067,
        "upload_time": "2023-03-28T16:55:25",
        "upload_time_iso_8601": "2023-03-28T16:55:25.959407Z",
        "url": "https://files.pythonhosted.org/packages/13/39/3f8aa205ffba7326a4799f0f7a82f8066e052c3186e4a7cd696492f33980/aruco_markers-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fcf749563c3585f60a08bd1b7229b408a908c1f70fddbbf48dbb851f34892a1",
          "md5": "a2ec4dff0251ca06731d0c3da69f0c4f",
          "sha256": "d849a7b64725019b3bd56faa944b8a03e8eccb74c10b57250debc7f6ecebe24d"
        },
        "downloads": -1,
        "filename": "aruco_markers-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a2ec4dff0251ca06731d0c3da69f0c4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 23756,
        "upload_time": "2023-03-28T16:55:27",
        "upload_time_iso_8601": "2023-03-28T16:55:27.947872Z",
        "url": "https://files.pythonhosted.org/packages/3f/cf/749563c3585f60a08bd1b7229b408a908c1f70fddbbf48dbb851f34892a1/aruco_markers-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f21f2ee500d9cc651a7fa5b47684aa2ccc8431a9578016fb93f65aeec70655e",
          "md5": "954357d08ef36cda683086b119d320f7",
          "sha256": "9ef0c6542a79142cd8ce99b60c0a90f56d248f1bea27ea5a6d819dd5015b34e6"
        },
        "downloads": -1,
        "filename": "aruco_markers-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "954357d08ef36cda683086b119d320f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22068,
        "upload_time": "2023-03-28T17:00:20",
        "upload_time_iso_8601": "2023-03-28T17:00:20.514171Z",
        "url": "https://files.pythonhosted.org/packages/4f/21/f2ee500d9cc651a7fa5b47684aa2ccc8431a9578016fb93f65aeec70655e/aruco_markers-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dfca95a5fd5fbd9e93a37fd69427ad321f9530bb565edd70d65f7c67e8dc633",
          "md5": "f530ca65f0d4a798ba083e4785ace924",
          "sha256": "f1f8acc28ac0bc6ee64992a3907218615f4c2741df97dab34a3dec85e1b820be"
        },
        "downloads": -1,
        "filename": "aruco_markers-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f530ca65f0d4a798ba083e4785ace924",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 23760,
        "upload_time": "2023-03-28T17:00:24",
        "upload_time_iso_8601": "2023-03-28T17:00:24.476472Z",
        "url": "https://files.pythonhosted.org/packages/4d/fc/a95a5fd5fbd9e93a37fd69427ad321f9530bb565edd70d65f7c67e8dc633/aruco_markers-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c48afa941d63eb24e16f31bdc76c6c7a650122b21906b4f12435cf67ac3f51e",
          "md5": "ba2da49febf6c0e6643fb5aace4cf746",
          "sha256": "8c9fe4f3ef23eb34c7501a3cdd685048507364410ffe0ac40bae2390c7577b17"
        },
        "downloads": -1,
        "filename": "aruco_markers-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba2da49febf6c0e6643fb5aace4cf746",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22136,
        "upload_time": "2023-03-28T17:06:14",
        "upload_time_iso_8601": "2023-03-28T17:06:14.492799Z",
        "url": "https://files.pythonhosted.org/packages/2c/48/afa941d63eb24e16f31bdc76c6c7a650122b21906b4f12435cf67ac3f51e/aruco_markers-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89aa85804f058bcd9ef549021799829849106ecfd8ed4c4bdf826b14013cbe34",
          "md5": "733a621cb6e33789e573ffff8c76f446",
          "sha256": "eaf062a0490869a56867a5d0d917408f4d16de5934d5eb98b85d57efb52481f7"
        },
        "downloads": -1,
        "filename": "aruco_markers-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "733a621cb6e33789e573ffff8c76f446",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 23894,
        "upload_time": "2023-03-28T17:06:19",
        "upload_time_iso_8601": "2023-03-28T17:06:19.398726Z",
        "url": "https://files.pythonhosted.org/packages/89/aa/85804f058bcd9ef549021799829849106ecfd8ed4c4bdf826b14013cbe34/aruco_markers-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c48afa941d63eb24e16f31bdc76c6c7a650122b21906b4f12435cf67ac3f51e",
        "md5": "ba2da49febf6c0e6643fb5aace4cf746",
        "sha256": "8c9fe4f3ef23eb34c7501a3cdd685048507364410ffe0ac40bae2390c7577b17"
      },
      "downloads": -1,
      "filename": "aruco_markers-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ba2da49febf6c0e6643fb5aace4cf746",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 22136,
      "upload_time": "2023-03-28T17:06:14",
      "upload_time_iso_8601": "2023-03-28T17:06:14.492799Z",
      "url": "https://files.pythonhosted.org/packages/2c/48/afa941d63eb24e16f31bdc76c6c7a650122b21906b4f12435cf67ac3f51e/aruco_markers-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89aa85804f058bcd9ef549021799829849106ecfd8ed4c4bdf826b14013cbe34",
        "md5": "733a621cb6e33789e573ffff8c76f446",
        "sha256": "eaf062a0490869a56867a5d0d917408f4d16de5934d5eb98b85d57efb52481f7"
      },
      "downloads": -1,
      "filename": "aruco_markers-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "733a621cb6e33789e573ffff8c76f446",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 23894,
      "upload_time": "2023-03-28T17:06:19",
      "upload_time_iso_8601": "2023-03-28T17:06:19.398726Z",
      "url": "https://files.pythonhosted.org/packages/89/aa/85804f058bcd9ef549021799829849106ecfd8ed4c4bdf826b14013cbe34/aruco_markers-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}