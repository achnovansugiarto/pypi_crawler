{
  "info": {
    "author": "['Markus Wallerberger', 'Hiroshi Shinaoka', 'Kazuyoshi Yoshimi', 'Junya Otsuki', 'Chikano Naoya']",
    "author_email": "markus.wallerberger@tuwien.ac.at",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "irbasis3 - A library for the intermediate representation of propagators\n=======================================================================\nThis library provides routines for constructing and working with the\nintermediate representation of correlation functions.  It provides:\n\n - on-the-fly computation of basis functions for arbitrary cutoff Λ\n - basis functions and singular values are accurate to full precision\n - routines for sparse sampling\n\nInstallation\n------------\n\n    pip install irbasis3 xprec\n\nThough not strictly required, we strongly recommend installing the `xprec`\npackage alongside `irbasis3` as it allows to compute the IR basis functions\nwith greater accuracy.\n\nQuick start\n-----------\nHere is some python code illustrating the API:\n\n    # Compute IR basis for fermions and β = 10, W <= 4.2\n    import irbasis3, numpy\n    K = irbasis3.KernelFFlat(lambda_=42)\n    basis = irbasis3.FiniteTempBasis(K, statistics='F', beta=10)\n\n    # Assume spectrum is a single pole at ω = 2.5, compute G(iw)\n    # on the first few Matsubara frequencies. (Fermionic/bosonic Matsubara\n    # frequencies are denoted by odd/even integers.)\n    gl = basis.s * basis.v(2.5)\n    giw = gl @ basis.uhat([1, 3, 5, 7])\n\n    # Reconstruct same coefficients from sparse sampling on the Matsubara axis:\n    smpl_iw = irbasis3.MatsubaraSampling(basis)\n    giw = -1/(1j * numpy.pi/basis.beta * smpl_iw.wn - 2.5)\n    gl_rec = smpl_iw.fit(giw)\n\nYou may want to start with reading up on the [intermediate representation].\nIt is tied to the analytic continuation of bosonic/fermionic spectral\nfunctions from (real) frequencies to imaginary time, a transformation mediated\nby a kernel `K`.  The kernel depends on a cutoff, which you should choose to be\n`lambda_ >= β*W`, where `β` is the inverse temperature and `W` is the bandwidth:\n\nOne can now perform a [singular value expansion] on this kernel, which\ngenerates two sets of orthonormal basis functions, one set `v[l](w)` for\nreal frequency side `w`, and one set `u[l](tau)` for the same obejct in\nimaginary (Euclidean) time `tau`, together with a \"coupling\" strength `s[l]`\nbetween the two sides.\n\nBy this construction, the imaginary time basis can be shown to be *optimal* in\nterms of compactness.\n\n\n[intermediate representation]: https://arxiv.org/abs/2106.12685\n[singular value expansion]: https://en.wikipedia.org/wiki/Singular_value_decomposition\n\nLicense\n-------\nThis software is released under the MIT License.  See LICENSE.txt.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SpM-lab/irbasis3",
    "keywords": "irbasis",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "irbasis3",
    "package_url": "https://pypi.org/project/irbasis3/",
    "platform": "",
    "project_url": "https://pypi.org/project/irbasis3/",
    "project_urls": {
      "Homepage": "https://github.com/SpM-lab/irbasis3"
    },
    "release_url": "https://pypi.org/project/irbasis3/3.0a8/",
    "requires_dist": [
      "numpy",
      "scipy",
      "setuptools",
      "sphinx (>=2.1) ; extra == 'doc'",
      "myst-parser ; extra == 'doc'",
      "sphinx-rtd-theme ; extra == 'doc'",
      "pytest ; extra == 'test'",
      "irbasis ; extra == 'test'",
      "xprec ; extra == 'test'",
      "xprec (>=1.1.1) ; extra == 'xprec'"
    ],
    "requires_python": ">=3",
    "summary": "intermediate representation (IR) basis for electronic propagator",
    "version": "3.0a8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12639734,
  "releases": {
    "3.0a8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "580dc238fc0bb23a6c6711d8c09d12abfaf7fcca51198d81afa694dfdcedd3aa",
          "md5": "b3be2308aa22a6e2ba4b88abc1d97b50",
          "sha256": "c4f257b6a05d80ed937d498e29b04d0df168e53fb0c5bb211dc4ca7f269f4f4d"
        },
        "downloads": -1,
        "filename": "irbasis3-3.0a8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3be2308aa22a6e2ba4b88abc1d97b50",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 32903,
        "upload_time": "2022-01-21T01:08:14",
        "upload_time_iso_8601": "2022-01-21T01:08:14.562704Z",
        "url": "https://files.pythonhosted.org/packages/58/0d/c238fc0bb23a6c6711d8c09d12abfaf7fcca51198d81afa694dfdcedd3aa/irbasis3-3.0a8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "580dc238fc0bb23a6c6711d8c09d12abfaf7fcca51198d81afa694dfdcedd3aa",
        "md5": "b3be2308aa22a6e2ba4b88abc1d97b50",
        "sha256": "c4f257b6a05d80ed937d498e29b04d0df168e53fb0c5bb211dc4ca7f269f4f4d"
      },
      "downloads": -1,
      "filename": "irbasis3-3.0a8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b3be2308aa22a6e2ba4b88abc1d97b50",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 32903,
      "upload_time": "2022-01-21T01:08:14",
      "upload_time_iso_8601": "2022-01-21T01:08:14.562704Z",
      "url": "https://files.pythonhosted.org/packages/58/0d/c238fc0bb23a6c6711d8c09d12abfaf7fcca51198d81afa694dfdcedd3aa/irbasis3-3.0a8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}