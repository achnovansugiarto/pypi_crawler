{
  "info": {
    "author": "Josef Friedrich",
    "author_email": "josef@friedrich.rocks",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. image:: http://img.shields.io/pypi/v/phrydy.svg\n    :target: https://pypi.python.org/pypi/phrydy\n    :alt: This package on the Python Package Index\n\n.. image:: https://github.com/Josef-Friedrich/phrydy/actions/workflows/tests.yml/badge.svg\n    :target: https://github.com/Josef-Friedrich/phrydy/actions/workflows/tests.yml\n    :alt: tests\n\n.. image:: https://readthedocs.org/projects/phrydy/badge/?version=latest\n    :target: https://phrydy.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n======\nphrydy\n======\n\nThis is an extended version of the\n`mediafile <https://github.com/beetbox/mediafile>`_ library of the\n`beets <https://beets.io>`_ project.\nIt is used by the Python audio renaming command line tool\n`audiorename <https://github.com/Josef-Friedrich/audiorename>`_.\n\nThe name ``phrydy`` is pronounced like the German word ``Friedi``.\n\nIn the previous versions the ``phrydy`` library offers a standalone\nversion of the ``mediafile.py`` included in the ``beets`` project. Now\n``beets`` has its own separate library called ``mediafile``. It might be\nbetter to use the upstream library directly.\n\n``phrydy`` offeres two media file classes: ``MediaFile`` is the\nlooped through and unmodified version that comes directly from the beets\nproject. ``MediaFileExtended`` is the slightly modified and extended\nversion:\n\nChanged fields:\n---------------\n\n- ``albumartist_sort``\n- ``composer_sort``\n- ``mb_workid``\n\nNew fields:\n-----------\n\n- ``work``\n- ``work_hierarchy``\n- ``releasegroup_types``\n\nOther additions:\n----------------\n\n- A little command line debug utility named ``phrydy-debug``.\n- A dictionary containing documentation about the various meta data\n  fields.\n- Some code to generate documentation from the field documentation\n  dictionary.\n\nInstallation\n============\n\nFrom Github\n------------\n\n.. code:: Shell\n\n    git clone git@github.com:Josef-Friedrich/phrydy.git\n    cd phrydy\n    python setup.py install\n\nFrom PyPI\n----------\n\n.. code:: Shell\n\n    pip install phrydy\n    easy_install phrydy\n\nUsage\n=====\n\nBasic usage:\n\n::\n\n    >>> from phrydy import MediaFileExtended\n    >>> f = MediaFileExtended('Lucy.mp3')\n    >>> f.title\n    u'Lucy in the Sky with Diamonds'\n    >>> f.artist = 'The Beatles'\n    >>> f.save()\n\nList all available fields of a media file:\n\n.. code:: Python\n\n    from phrydy import MediaFileExtended\n\n    media_file = MediaFileExtended('test/files/full.mp3')\n\n    for key in MediaFileExtended.readable_fields():\n        value = getattr(media_file, key)\n        if key != 'art' and value:\n            print('{}: {}'.format(key, value))\n\n\n.. list-table:: Fields documentation\n   :widths: 20 10 50 20\n   :header-rows: 1\n\n   * - Field name\n     - Category\n     - Description\n     - Examples\n   * - acoustid_fingerprint\n     - music_brainz\n     - Acoustic ID fingerprint\n     - \n   * - acoustid_id\n     - music_brainz\n     - Acoustic ID\n     - ``86e217b7-d3ad-4493-a9f2-cf71256ace07``\n   * - album\n     - common\n     - album\n     - ``Help!``\n   * - albumartist\n     - common\n     - The artist for the entire album, which may be different from the artists for the individual tracks\n     - ``The Beatles``\n   * - albumartist_credit\n     - common\n     - albumartist_credit\n     - \n   * - albumartist_sort\n     - common\n     - albumartist_sort\n     - ``Beatles, The``\n   * - albumartists\n     - common\n     - albumartists\n     - \n   * - albumdisambig\n     - common\n     - The disambiguation album field helps to distinguish between identically named albums. The album “Weezer” for example has the disambiguation comments “Red Album” and “Green Album”.\n     - \n   * - albumstatus\n     - common\n     - The status describes how \"official\" a release is.\n     - ``official``, ``promotional``, ``bootleg``, ``pseudo-release``\n   * - albumtype\n     - common\n     - The MusicBrainz album type; the MusicBrainz wiki has a list of type names\n     - ``album/soundtrack``\n   * - arranger\n     - common\n     - A musician who creates arrangements.\n     - \n   * - art\n     - common\n     - Legacy album art field.\n     - ``b'\\xff\\xd8\\xff\\xe0\\x00'``\n   * - artist\n     - common\n     - artist\n     - ``The Beatles``\n   * - artist_credit\n     - common\n     - The track-specific artist credit name, which may be a variation of the artist’s “canonical” name\n     - \n   * - artist_sort\n     - common\n     - The “sort name” of the track artist.\n     - ``Beatles, The``, ``White, Jack``\n   * - artists\n     - common\n     - artists\n     - ``['a-ha']``, ``['Anouk', 'Remon Stotijn']``\n   * - asin\n     - common\n     - Amazon Standard Identification Number\n     - ``B000002UAL``\n   * - barcode\n     - common\n     - There are many different types of barcode, but the ones usually found on music releases are two: 1. Universal Product Code (UPC), which is the original barcode used in North America. 2. European Article Number (EAN)\n     - ``5028421931838``, ``036000291452``\n   * - bitdepth\n     - audio\n     - only available for some formats\n     - ``16``\n   * - bitrate\n     - audio\n     - in kilobits per second, with units: e.g., “192kbps”\n     - ``436523``, ``256000``\n   * - bitrate_mode\n     - common\n     - bitrate_mode\n     - ``CBR``\n   * - bpm\n     - common\n     - Beats per Minute\n     - \n   * - catalognum\n     - common\n     - This is a number assigned to the release by the label which can often be found on the spine or near the barcode. There may be more than one, especially when multiple labels are involved. This is not the ASIN — there is a relationship for that — nor the label code.\n     - ``CDP 7 46439 2``\n   * - channels\n     - audio\n     - channels\n     - ``1``, ``2``\n   * - comments\n     - common\n     - comments\n     - \n   * - comp\n     - common\n     - Compilation flag\n     - ``True``, ``False``\n   * - composer\n     - common\n     - The name of the composer.\n     - ``Ludwig van Beethoven``\n   * - composer_sort\n     - common\n     - The composer name for sorting.\n     - ``Beethoven, Ludwig van``\n   * - copyright\n     - common\n     - copyright\n     - \n   * - country\n     - common\n     - The country the release was issued in.\n     - ``NL``\n   * - date\n     - date\n     - The release data of the specific release.\n     - ``1996-01-01``\n   * - day\n     - date\n     - The release day of the specific release.\n     - \n   * - disc\n     - common\n     - disc\n     - ``1``\n   * - disctitle\n     - common\n     - disctitle\n     - \n   * - disctotal\n     - common\n     - disctotal\n     - ``1``\n   * - encoder\n     - common\n     - the name of the person or organisation that encoded the audio file. This field may contain a copyright message, if the audio file also is copyrighted by the encoder.\n     - ``iTunes v7.6.2``\n   * - encoder_info\n     - common\n     - encoder_info\n     - ``LAME 3.92.0+``\n   * - encoder_settings\n     - common\n     - encoder_settings\n     - ``-b 255+``\n   * - format\n     - audio\n     - e.g., “MP3” or “FLAC”\n     - ``MP3``, ``FLAC``\n   * - genre\n     - common\n     - genre\n     - ``Rock``\n   * - genres\n     - common\n     - genres\n     - ``['Rock']``\n   * - grouping\n     - common\n     - A content group, which is a collection of media items such as a CD boxed set.\n     - \n   * - images\n     - common\n     - images\n     - ``['<mediafile.Image object at 0x7f51fce26b20>']``\n   * - initial_key\n     - common\n     - The Initial key frame contains the musical key in which the sound starts. It is represented as a string with a maximum length of three characters. The ground keys are represented with \"A\",\"B\",\"C\",\"D\",\"E\", \"F\" and \"G\" and halfkeys represented with \"b\" and \"#\". Minor is represented as \"m\".\n     - ``Dbm``\n   * - isrc\n     - common\n     - The International Standard Recording Code, abbreviated to ISRC, is a system of codes that identify audio and music video recordings.\n     - ``CAC118989003``, ``ITO101117740``\n   * - label\n     - common\n     - The label which issued the release. There may be more than one.\n     - ``Brilliant Classics``, ``wea``\n   * - language\n     - common\n     - The language a release’s track list is written in. The possible values are taken from the ISO 639-3 standard.\n     - ``zxx``, ``eng``\n   * - length\n     - audio\n     - The length of a recording in seconds.\n     - ``674.4666666666667``\n   * - lyricist\n     - common\n     - The writer of the text or lyrics in the recording.\n     - \n   * - lyrics\n     - common\n     - The lyrics of the song or a text transcription of other vocal activities.\n     - \n   * - mb_albumartistid\n     - music_brainz\n     - MusicBrainz album artist ID.\n     - ``1f9df192-a621-4f54-8850-2c5373b7eac9``, ``b972f589-fb0e-474e-b64a-803b0364fa75``\n   * - mb_albumartistids\n     - music_brainz\n     - MusicBrainz album artist IDs as a list.\n     - ``['b972f589-fb0e-474e-b64a-803b0364fa75', 'dea28aa9-1086-4ffa-8739-0ccc759de1ce', 'd2ced2f1-6b58-47cf-ae87-5943e2ab6d99']``\n   * - mb_albumid\n     - music_brainz\n     - MusicBrainz album ID.\n     - ``fd6adc77-1489-4a13-9aa0-32951061d92b``\n   * - mb_artistid\n     - music_brainz\n     - MusicBrainz artist ID.\n     - ``1f9df192-a621-4f54-8850-2c5373b7eac9``\n   * - mb_artistids\n     - music_brainz\n     - MusicBrainz artist IDs as a list.\n     - ``['1f9df192-a621-4f54-8850-2c5373b7eac9']``\n   * - mb_releasegroupid\n     - music_brainz\n     - MusicBrainz releasegroup ID.\n     - ``f714fd70-aaca-4863-9d0d-2768a53acaeb``\n   * - mb_releasetrackid\n     - music_brainz\n     - MusicBrainz release track ID.\n     - ``38c8c114-5e3b-484f-8af0-79c47ef9c169``\n   * - mb_trackid\n     - music_brainz\n     - MusicBrainz track ID.\n     - ``c390b132-4a44-4e16-bec3-bffbbcaa19aa``\n   * - mb_workhierarchy_ids\n     - music_brainz\n     - All IDs in the work hierarchy. This field corresponds to the field `work_hierarchy`. The top level work ID appears first. A slash (/) is used as separator.\n     - ``e208c5f5-5d37-3dfc-ac0b-999f207c9e46 / 5adc213f-700a-4435-9e95-831ed720f348 / eafec51f-47c5-3c66-8c36-a524246c85f8``\n   * - mb_workid\n     - music_brainz\n     - MusicBrainz work ID.\n     - ``508ec4b1-9549-38cd-a61e-1f0d120a6118``\n   * - media\n     - common\n     - A prototypical medium is one of the physical, separate things you would get when you buy something in a record store.\n     - ``CD``\n   * - month\n     - date\n     - The release month of the specific release.\n     - ``11``\n   * - original_date\n     - date\n     - The release date of the original version of the album.\n     - ``1991-11-04``\n   * - original_day\n     - date\n     - The release day of the original version of the album.\n     - ``4``\n   * - original_month\n     - date\n     - The release month of the original version of the album.\n     - ``11``\n   * - original_year\n     - date\n     - The release year of the original version of the album.\n     - ``1991``\n   * - r128_album_gain\n     - r128\n     - An optional gain for album normalization. EBU R 128 is a recommendation for loudness normalisation and maximum level of audio signals.\n     - \n   * - r128_track_gain\n     - r128\n     - An optional gain for track normalization. EBU R 128 is a recommendation for loudness normalisation and maximum level of audio signals.\n     - \n   * - releasegroup_types\n     - music_brainz\n     - This field collects all items in the MusicBrainz’ API  related to type: `type`, `primary-type and `secondary-type-list`. Main usage of this field is to determine in a secure manner if the release is a soundtrack.\n     - \n   * - rg_album_gain\n     - rg\n     - ReplayGain Album Gain, see https://en.wikipedia.org/wiki/ReplayGain.\n     - \n   * - rg_album_peak\n     - rg\n     - ReplayGain Album Peak, see https://en.wikipedia.org/wiki/ReplayGain.\n     - \n   * - rg_track_gain\n     - rg\n     - ReplayGain Track Gain, see https://en.wikipedia.org/wiki/ReplayGain.\n     - ``0.0``\n   * - rg_track_peak\n     - rg\n     - ReplayGain Track Peak, see https://en.wikipedia.org/wiki/ReplayGain.\n     - ``0.000244``\n   * - samplerate\n     - audio\n     - The sample rate as an integer number.\n     - ``44100``\n   * - script\n     - common\n     - The script used to write the release’s track list. The possible values are taken from the ISO 15924 standard.\n     - ``Latn``\n   * - title\n     - common\n     - The title of a audio file.\n     - ``32 Variations for Piano in C minor on an Original Theme, WoO 80``\n   * - track\n     - common\n     - The track number.\n     - ``1``\n   * - tracktotal\n     - common\n     - The total track number.\n     - ``12``\n   * - url\n     - common\n     - Uniform Resource Locator.\n     - \n   * - work\n     - common\n     - The Musicbrainzs’ work entity.\n     - ``32 Variations for Piano in C minor on an Original Theme, WoO 80``\n   * - work_hierarchy\n     - music_brainz\n     - The hierarchy of works: The top level work appears first. As separator is this string used: -->.\n     - ``Die Zauberflöte, K. 620 --> Die Zauberflöte, K. 620: Akt I --> Die Zauberflöte, K. 620: Act I, Scene II. No. 2 Aria \"Was hör ...``\n   * - year\n     - date\n     - The release year of the specific release.\n     - ``2001``\n\n\nphrydy-debug\n============\n\n.. code-block:: text\n\n    usage: phrydy-debug [-h] [-c] [-v] audio_file\n    \n    Debugging tool of the Python package “phrydy”, an easy wrapper around the “mutagen” library.\n        \n        acoustid_fingerprint:    Acoustic ID fingerprint\n    \n        acoustid_id:             Acoustic ID\n                                 Examples: ['86e217b7-d3ad-4493-a9f2-cf71256ace07']\n    \n        album:                   album\n                                 Examples: ['Help!']\n    \n        albumartist:             The artist for the entire album, which may be\n                                 different from the artists for the individual\n                                 tracks\n                                 Examples: ['The Beatles']\n    \n        albumartist_credit:      albumartist_credit\n    \n        albumartist_sort:        albumartist_sort\n                                 Examples: ['Beatles, The']\n    \n        albumartists:            albumartists\n    \n        albumdisambig:           The disambiguation album field helps to\n                                 distinguish between identically named albums. The\n                                 album “Weezer” for example has the disambiguation\n                                 comments “Red Album” and “Green Album”.\n    \n        albumstatus:             The status describes how \"official\" a release is.\n                                 Examples: ['official', 'promotional', 'bootleg', 'pseudo-release']\n    \n        albumtype:               The MusicBrainz album type; the MusicBrainz wiki\n                                 has a list of type names\n                                 Examples: ['album/soundtrack']\n    \n        arranger:                A musician who creates arrangements.\n    \n        art:                     Legacy album art field.\n                                 Examples: [b'\\xff\\xd8\\xff\\xe0\\x00']\n    \n        artist:                  artist\n                                 Examples: ['The Beatles']\n    \n        artist_credit:           The track-specific artist credit name, which may\n                                 be a variation of the artist’s “canonical” name\n    \n        artist_sort:             The “sort name” of the track artist.\n                                 Examples: ['Beatles, The', 'White, Jack']\n    \n        artists:                 artists\n                                 Examples: [['a-ha'], ['Anouk', 'Remon Stotijn']]\n    \n        asin:                    Amazon Standard Identification Number\n                                 Examples: ['B000002UAL']\n    \n        barcode:                 There are many different types of barcode, but\n                                 the ones usually found on music releases are two:\n                                 1. Universal Product Code (UPC), which is the\n                                 original barcode used in North America. 2.\n                                 European Article Number (EAN)\n                                 Examples: ['5028421931838', '036000291452']\n    \n        bitdepth:                only available for some formats\n                                 Examples: [16]\n    \n        bitrate:                 in kilobits per second, with units: e.g.,\n                                 “192kbps”\n                                 Examples: [436523, 256000]\n    \n        bitrate_mode:            bitrate_mode\n                                 Examples: ['CBR']\n    \n        bpm:                     Beats per Minute\n    \n        catalognum:              This is a number assigned to the release by the\n                                 label which can often be found on the spine or\n                                 near the barcode. There may be more than one,\n                                 especially when multiple labels are involved.\n                                 This is not the ASIN — there is a relationship\n                                 for that — nor the label code.\n                                 Examples: ['CDP 7 46439 2']\n    \n        channels:                channels\n                                 Examples: [1, 2]\n    \n        comments:                comments\n    \n        comp:                    Compilation flag\n                                 Examples: [True, False]\n    \n        composer:                The name of the composer.\n                                 Examples: ['Ludwig van Beethoven']\n    \n        composer_sort:           The composer name for sorting.\n                                 Examples: ['Beethoven, Ludwig van']\n    \n        copyright:               copyright\n    \n        country:                 The country the release was issued in.\n                                 Examples: ['NL']\n    \n        date:                    The release data of the specific release.\n                                 Examples: ['1996-01-01']\n    \n        day:                     The release day of the specific release.\n    \n        disc:                    disc\n                                 Examples: [1]\n    \n        disctitle:               disctitle\n    \n        disctotal:               disctotal\n                                 Examples: [1]\n    \n        encoder:                 the name of the person or organisation that\n                                 encoded the audio file. This field may contain a\n                                 copyright message, if the audio file also is\n                                 copyrighted by the encoder.\n                                 Examples: ['iTunes v7.6.2']\n    \n        encoder_info:            encoder_info\n                                 Examples: ['LAME 3.92.0+']\n    \n        encoder_settings:        encoder_settings\n                                 Examples: ['-b 255+']\n    \n        format:                  e.g., “MP3” or “FLAC”\n                                 Examples: ['MP3', 'FLAC']\n    \n        genre:                   genre\n                                 Examples: ['Rock']\n    \n        genres:                  genres\n                                 Examples: [['Rock']]\n    \n        grouping:                A content group, which is a collection of media\n                                 items such as a CD boxed set.\n    \n        images:                  images\n                                 Examples: [['<mediafile.Image object at 0x7f51fce26b20>']]\n    \n        initial_key:             The Initial key frame contains the musical key in\n                                 which the sound starts. It is represented as a\n                                 string with a maximum length of three characters.\n                                 The ground keys are represented with\n                                 \"A\",\"B\",\"C\",\"D\",\"E\", \"F\" and \"G\" and halfkeys\n                                 represented with \"b\" and \"#\". Minor is\n                                 represented as \"m\".\n                                 Examples: ['Dbm']\n    \n        isrc:                    The International Standard Recording Code,\n                                 abbreviated to ISRC, is a system of codes that\n                                 identify audio and music video recordings.\n                                 Examples: ['CAC118989003', 'ITO101117740']\n    \n        label:                   The label which issued the release. There may be\n                                 more than one.\n                                 Examples: ['Brilliant Classics', 'wea']\n    \n        language:                The language a release’s track list is written\n                                 in. The possible values are taken from the ISO\n                                 639-3 standard.\n                                 Examples: ['zxx', 'eng']\n    \n        length:                  The length of a recording in seconds.\n                                 Examples: [674.4666666666667]\n    \n        lyricist:                The writer of the text or lyrics in the\n                                 recording.\n    \n        lyrics:                  The lyrics of the song or a text transcription of\n                                 other vocal activities.\n    \n        mb_albumartistid:        MusicBrainz album artist ID.\n                                 Examples: ['1f9df192-a621-4f54-8850-2c5373b7eac9', 'b972f589-fb0e-474e-b64a-803b0364fa75']\n    \n        mb_albumartistids:       MusicBrainz album artist IDs as a list.\n                                 Examples: [['b972f589-fb0e-474e-b64a-803b0364fa75', 'dea28aa9-1086-4ffa-8739-0ccc759de1ce', 'd2ced2f1-6b58-47cf-ae87-5943e2ab6d99']]\n    \n        mb_albumid:              MusicBrainz album ID.\n                                 Examples: ['fd6adc77-1489-4a13-9aa0-32951061d92b']\n    \n        mb_artistid:             MusicBrainz artist ID.\n                                 Examples: ['1f9df192-a621-4f54-8850-2c5373b7eac9']\n    \n        mb_artistids:            MusicBrainz artist IDs as a list.\n                                 Examples: [['1f9df192-a621-4f54-8850-2c5373b7eac9']]\n    \n        mb_releasegroupid:       MusicBrainz releasegroup ID.\n                                 Examples: ['f714fd70-aaca-4863-9d0d-2768a53acaeb']\n    \n        mb_releasetrackid:       MusicBrainz release track ID.\n                                 Examples: ['38c8c114-5e3b-484f-8af0-79c47ef9c169']\n    \n        mb_trackid:              MusicBrainz track ID.\n                                 Examples: ['c390b132-4a44-4e16-bec3-bffbbcaa19aa']\n    \n        mb_workhierarchy_ids:    All IDs in the work hierarchy. This field\n                                 corresponds to the field `work_hierarchy`. The\n                                 top level work ID appears first. A slash (/) is\n                                 used as separator.\n                                 Examples: ['e208c5f5-5d37-3dfc-ac0b-999f207c9e46 / 5adc213f-700a-4435-9e95-831ed720f348 / eafec51f-47c5-3c66-8c36-a524246c85f8']\n    \n        mb_workid:               MusicBrainz work ID.\n                                 Examples: ['508ec4b1-9549-38cd-a61e-1f0d120a6118']\n    \n        media:                   A prototypical medium is one of the physical,\n                                 separate things you would get when you buy\n                                 something in a record store.\n                                 Examples: ['CD']\n    \n        month:                   The release month of the specific release.\n                                 Examples: [11]\n    \n        original_date:           The release date of the original version of the\n                                 album.\n                                 Examples: ['1991-11-04']\n    \n        original_day:            The release day of the original version of the\n                                 album.\n                                 Examples: [4]\n    \n        original_month:          The release month of the original version of the\n                                 album.\n                                 Examples: [11]\n    \n        original_year:           The release year of the original version of the\n                                 album.\n                                 Examples: [1991]\n    \n        r128_album_gain:         An optional gain for album normalization. EBU R\n                                 128 is a recommendation for loudness\n                                 normalisation and maximum level of audio signals.\n    \n        r128_track_gain:         An optional gain for track normalization. EBU R\n                                 128 is a recommendation for loudness\n                                 normalisation and maximum level of audio signals.\n    \n        releasegroup_types:      This field collects all items in the MusicBrainz’\n                                 API  related to type: `type`, `primary-type and\n                                 `secondary-type-list`. Main usage of this field\n                                 is to determine in a secure manner if the release\n                                 is a soundtrack.\n    \n        rg_album_gain:           ReplayGain Album Gain, see\n                                 https://en.wikipedia.org/wiki/ReplayGain.\n    \n        rg_album_peak:           ReplayGain Album Peak, see\n                                 https://en.wikipedia.org/wiki/ReplayGain.\n    \n        rg_track_gain:           ReplayGain Track Gain, see\n                                 https://en.wikipedia.org/wiki/ReplayGain.\n                                 Examples: [0.0]\n    \n        rg_track_peak:           ReplayGain Track Peak, see\n                                 https://en.wikipedia.org/wiki/ReplayGain.\n                                 Examples: [0.000244]\n    \n        samplerate:              The sample rate as an integer number.\n                                 Examples: [44100]\n    \n        script:                  The script used to write the release’s track\n                                 list. The possible values are taken from the ISO\n                                 15924 standard.\n                                 Examples: ['Latn']\n    \n        title:                   The title of a audio file.\n                                 Examples: ['32 Variations for Piano in C minor on an Original Theme, WoO 80']\n    \n        track:                   The track number.\n                                 Examples: [1]\n    \n        tracktotal:              The total track number.\n                                 Examples: [12]\n    \n        url:                     Uniform Resource Locator.\n    \n        work:                    The Musicbrainzs’ work entity.\n                                 Examples: ['32 Variations for Piano in C minor on an Original Theme, WoO 80']\n    \n        work_hierarchy:          The hierarchy of works: The top level work\n                                 appears first. As separator is this string used:\n                                 -->.\n                                 Examples: ['Die Zauberflöte, K. 620 --> Die Zauberflöte, K. 620: Akt I --> Die Zauberflöte, K. 620: Act I, Scene II. No. 2 Aria \"Was hör ...']\n    \n        year:                    The release year of the specific release.\n                                 Examples: [2001]\n    \n    positional arguments:\n      audio_file     A audio file\n    \n    optional arguments:\n      -h, --help     show this help message and exit\n      -c, --color    Colorize the output\n      -v, --version  show program's version number and exit\n    \n\nDevelopment\n===========\n\nTest\n----\n\n::\n\n    pyenv install 3.9.12 3.10.4\n    pyenv local 3.9.12 3.10.4\n    pip3 install tox tox-pyenv\n    tox\n\n\nPublish a new version\n---------------------\n\n::\n\n    git tag 1.1.1\n    git push --tags\n    python setup.py sdist upload\n\n\nPackage documentation\n---------------------\n\nThe package documentation is hosted on\n`readthedocs <http://phrydy.readthedocs.io>`_.\n\nGenerate the package documentation:\n\n::\n\n    python setup.py build_sphinx",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Josef-Friedrich/phrydy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "phrydy",
    "package_url": "https://pypi.org/project/phrydy/",
    "platform": null,
    "project_url": "https://pypi.org/project/phrydy/",
    "project_urls": {
      "Homepage": "https://github.com/Josef-Friedrich/phrydy"
    },
    "release_url": "https://pypi.org/project/phrydy/3.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A easy wrapper for mutagen",
    "version": "3.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14242796,
  "releases": {
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eebb46e569d57eee01b8b21683b95aae78c8f00eff4f53ababe8a58a982febc5",
          "md5": "6fe5dc4816ec5d40c95ae9daa166305a",
          "sha256": "e646a5279a306fc81f619a0a38759fc9d731bef3e98c6a3668e380e80906ca3a"
        },
        "downloads": -1,
        "filename": "phrydy-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6fe5dc4816ec5d40c95ae9daa166305a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50522,
        "upload_time": "2018-01-07T18:37:06",
        "upload_time_iso_8601": "2018-01-07T18:37:06.503980Z",
        "url": "https://files.pythonhosted.org/packages/ee/bb/46e569d57eee01b8b21683b95aae78c8f00eff4f53ababe8a58a982febc5/phrydy-1.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05038178a935bf3b2bc4c2971cf35d527dbb9d12f1b69be374a42dfcf60cadda",
          "md5": "887b85d509e3693c5a65773dc89d09df",
          "sha256": "b9f07070ea713a54626fc796ce2dc8f0110094f2aa2ed04522acb8774b5c1078"
        },
        "downloads": -1,
        "filename": "phrydy-1.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "887b85d509e3693c5a65773dc89d09df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41392,
        "upload_time": "2018-01-10T20:44:17",
        "upload_time_iso_8601": "2018-01-10T20:44:17.370185Z",
        "url": "https://files.pythonhosted.org/packages/05/03/8178a935bf3b2bc4c2971cf35d527dbb9d12f1b69be374a42dfcf60cadda/phrydy-1.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e971c11f9ce98d5e779d41f602bb828c9b91f907bcb839c997cfaea214346195",
          "md5": "e89b0b7b2ee737a1f974b8354100860b",
          "sha256": "dabf2b92ab55030526f5b0c26bca545975425c79f99957d80ca894bc5ed1b09f"
        },
        "downloads": -1,
        "filename": "phrydy-1.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "e89b0b7b2ee737a1f974b8354100860b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41475,
        "upload_time": "2018-01-10T22:11:33",
        "upload_time_iso_8601": "2018-01-10T22:11:33.563018Z",
        "url": "https://files.pythonhosted.org/packages/e9/71/c11f9ce98d5e779d41f602bb828c9b91f907bcb839c997cfaea214346195/phrydy-1.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68a07da005a06c7ad482832ebe935c0ace364b5ff17662529adeb8c0dc57003b",
          "md5": "882a46f0031c51fb893b00207143203a",
          "sha256": "7c2442c4ba5f4575c08c245a212d3d2f6d5dc712805a2767a5dd30b8c765ded8"
        },
        "downloads": -1,
        "filename": "phrydy-1.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "882a46f0031c51fb893b00207143203a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41434,
        "upload_time": "2018-01-28T16:13:53",
        "upload_time_iso_8601": "2018-01-28T16:13:53.119195Z",
        "url": "https://files.pythonhosted.org/packages/68/a0/7da005a06c7ad482832ebe935c0ace364b5ff17662529adeb8c0dc57003b/phrydy-1.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c4f97e86e5fb2b3955b06d3bb02eb54336d13d351124a6e985acab0175532a2",
          "md5": "80955da067f68a6730d7b797df8b391e",
          "sha256": "401b74ee47a2e40968393fa3e0d0562f799cf0552f306a0c672b484b0b48cf30"
        },
        "downloads": -1,
        "filename": "phrydy-1.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "80955da067f68a6730d7b797df8b391e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42054,
        "upload_time": "2018-02-01T10:33:55",
        "upload_time_iso_8601": "2018-02-01T10:33:55.164262Z",
        "url": "https://files.pythonhosted.org/packages/3c/4f/97e86e5fb2b3955b06d3bb02eb54336d13d351124a6e985acab0175532a2/phrydy-1.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc75ed94c21e293f1f155ce03569bfb62339fe451818e336fb01f0442fe8a370",
          "md5": "c0846accabf852ce8e6fb8356d5f4dc0",
          "sha256": "6cc3c9eb33535c168bcd7339312fcd1ac6ec8fcc6b24c023b272f329ef69faef"
        },
        "downloads": -1,
        "filename": "phrydy-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c0846accabf852ce8e6fb8356d5f4dc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41452,
        "upload_time": "2018-02-07T08:32:05",
        "upload_time_iso_8601": "2018-02-07T08:32:05.793530Z",
        "url": "https://files.pythonhosted.org/packages/bc/75/ed94c21e293f1f155ce03569bfb62339fe451818e336fb01f0442fe8a370/phrydy-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79c6626bf5f128798b4f643600e0099570fd75f735ed11efda1df74ff381e24c",
          "md5": "97255dc70cb5d4ad513d0e5e683d0ecc",
          "sha256": "8718d9652dcc2fa04c39a5a8c64b8773a1defddbcb805398a4671d92f87b23f5"
        },
        "downloads": -1,
        "filename": "phrydy-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "97255dc70cb5d4ad513d0e5e683d0ecc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41456,
        "upload_time": "2019-02-02T13:41:38",
        "upload_time_iso_8601": "2019-02-02T13:41:38.944895Z",
        "url": "https://files.pythonhosted.org/packages/79/c6/626bf5f128798b4f643600e0099570fd75f735ed11efda1df74ff381e24c/phrydy-1.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e95b3846ad94a7e2c46251088d58f8ba9f7b92e734624589f8c32212f228d8c",
          "md5": "67428127bb30c9f7250681a1e4b36139",
          "sha256": "83393c5b5be35e258dc63f84f2bea3341f22d5d27695b5df36dcd31f4b88f872"
        },
        "downloads": -1,
        "filename": "phrydy-1.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "67428127bb30c9f7250681a1e4b36139",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41596,
        "upload_time": "2019-02-25T09:32:11",
        "upload_time_iso_8601": "2019-02-25T09:32:11.572992Z",
        "url": "https://files.pythonhosted.org/packages/4e/95/b3846ad94a7e2c46251088d58f8ba9f7b92e734624589f8c32212f228d8c/phrydy-1.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e85a994f7369742fcca9c2542da824593e69116733d8645ff43ed05bdacb7d5",
          "md5": "a067940647e6bf794d1c2278fe50ad08",
          "sha256": "615b3b6f787bb6ab42967f2aaf4bf92be51a66688cd9a9f542ddc293b68aa7d3"
        },
        "downloads": -1,
        "filename": "phrydy-1.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a067940647e6bf794d1c2278fe50ad08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41843,
        "upload_time": "2019-02-25T09:38:22",
        "upload_time_iso_8601": "2019-02-25T09:38:22.636976Z",
        "url": "https://files.pythonhosted.org/packages/0e/85/a994f7369742fcca9c2542da824593e69116733d8645ff43ed05bdacb7d5/phrydy-1.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af55658dd2d7df225be6cddc29dc04438517a1ace18e47ae456aaf603a9711cc",
          "md5": "e12656ffcd7c87425c4b86b467fbe40c",
          "sha256": "3d59f87624fbd29945c29f7cfe77afa443e6f2469a3bc244514bba64929f91fd"
        },
        "downloads": -1,
        "filename": "phrydy-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e12656ffcd7c87425c4b86b467fbe40c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42446,
        "upload_time": "2019-03-30T07:01:29",
        "upload_time_iso_8601": "2019-03-30T07:01:29.167224Z",
        "url": "https://files.pythonhosted.org/packages/af/55/658dd2d7df225be6cddc29dc04438517a1ace18e47ae456aaf603a9711cc/phrydy-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2de16179ee1a04ba02f8ede9f60e8be0abc10dec32d8f25889e3144a3131b894",
          "md5": "3982a70ccbe7aeb29ca81b8b23070475",
          "sha256": "5125edf3c046391f101ba50e51ab1f9bf60c4e42106635b254a0964ae857a66b"
        },
        "downloads": -1,
        "filename": "phrydy-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3982a70ccbe7aeb29ca81b8b23070475",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40679,
        "upload_time": "2022-04-13T11:13:10",
        "upload_time_iso_8601": "2022-04-13T11:13:10.860493Z",
        "url": "https://files.pythonhosted.org/packages/2d/e1/6179ee1a04ba02f8ede9f60e8be0abc10dec32d8f25889e3144a3131b894/phrydy-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87908c83d76ac7bc1d2443c3083baee76cdff9107ad64f5cb5a5248a32676893",
          "md5": "51b1893b07a7a508b9e6c564af7e2090",
          "sha256": "e29eb06f54efd006adae7e9cf3e568a1469393104faaf50f61466659287f9048"
        },
        "downloads": -1,
        "filename": "phrydy-3.0.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "51b1893b07a7a508b9e6c564af7e2090",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32785,
        "upload_time": "2022-04-12T14:28:43",
        "upload_time_iso_8601": "2022-04-12T14:28:43.997528Z",
        "url": "https://files.pythonhosted.org/packages/87/90/8c83d76ac7bc1d2443c3083baee76cdff9107ad64f5cb5a5248a32676893/phrydy-3.0.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0a32148ca38b4be9cac4d7a4756d371a04929d7d4f509cdb486bfb0d74a665a",
          "md5": "22358f26926a990e47e8c60af86d02e4",
          "sha256": "5c525240763d3892b8cb444301ee7e7e2d657bd0b45cd2537c730beb6c0ceead"
        },
        "downloads": -1,
        "filename": "phrydy-3.0.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "22358f26926a990e47e8c60af86d02e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32890,
        "upload_time": "2022-04-12T20:31:48",
        "upload_time_iso_8601": "2022-04-12T20:31:48.446755Z",
        "url": "https://files.pythonhosted.org/packages/f0/a3/2148ca38b4be9cac4d7a4756d371a04929d7d4f509cdb486bfb0d74a665a/phrydy-3.0.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3afea6d50f5c02974a54b8515a77df45aef6bd866f7fb9991f5ae467e0636938",
          "md5": "ea877dd5c252926c80255db41ab90214",
          "sha256": "4b81705dc8631e79a2e2820bf1f31f3fc75a07907a00907ee5e0037fb4c1ab47"
        },
        "downloads": -1,
        "filename": "phrydy-3.0.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "ea877dd5c252926c80255db41ab90214",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33198,
        "upload_time": "2022-04-12T20:59:09",
        "upload_time_iso_8601": "2022-04-12T20:59:09.461515Z",
        "url": "https://files.pythonhosted.org/packages/3a/fe/a6d50f5c02974a54b8515a77df45aef6bd866f7fb9991f5ae467e0636938/phrydy-3.0.0b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc7e7b3038e4d5915a14cb29dd654e96c6a9a57d47ad5d4b33626ad806fb70ac",
          "md5": "f9afba592266d009e64ce1655107846b",
          "sha256": "666fca531fb5396c779f414b4e6ea6c491041d9ca4bf57b80fc899ba37a71dd7"
        },
        "downloads": -1,
        "filename": "phrydy-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f9afba592266d009e64ce1655107846b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41817,
        "upload_time": "2022-04-13T17:07:46",
        "upload_time_iso_8601": "2022-04-13T17:07:46.023581Z",
        "url": "https://files.pythonhosted.org/packages/dc/7e/7b3038e4d5915a14cb29dd654e96c6a9a57d47ad5d4b33626ad806fb70ac/phrydy-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddba07823f3d4c685560a9ecd3eb2786beff25ab8b3a2f88c5850f5cd7bcaf7b",
          "md5": "45dc65878282d67b1bae33c1b85f3225",
          "sha256": "2dd54e80800cc0f03380effda52121bdf4b1659bb93d21253d0a756321296f30"
        },
        "downloads": -1,
        "filename": "phrydy-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "45dc65878282d67b1bae33c1b85f3225",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43120,
        "upload_time": "2022-06-24T20:01:27",
        "upload_time_iso_8601": "2022-06-24T20:01:27.069793Z",
        "url": "https://files.pythonhosted.org/packages/dd/ba/07823f3d4c685560a9ecd3eb2786beff25ab8b3a2f88c5850f5cd7bcaf7b/phrydy-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5333498912da37a952aa81d52c469c86d6dbfc546d3be43bffb1ff1205bcf1d1",
          "md5": "74bde30c5fc08e5e614aa5d1630eeaee",
          "sha256": "86579f04013fec70e139f78c264e832a9f7a265f998547188dd17c87d530dd73"
        },
        "downloads": -1,
        "filename": "phrydy-3.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "74bde30c5fc08e5e614aa5d1630eeaee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43296,
        "upload_time": "2022-06-25T05:55:01",
        "upload_time_iso_8601": "2022-06-25T05:55:01.713818Z",
        "url": "https://files.pythonhosted.org/packages/53/33/498912da37a952aa81d52c469c86d6dbfc546d3be43bffb1ff1205bcf1d1/phrydy-3.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5333498912da37a952aa81d52c469c86d6dbfc546d3be43bffb1ff1205bcf1d1",
        "md5": "74bde30c5fc08e5e614aa5d1630eeaee",
        "sha256": "86579f04013fec70e139f78c264e832a9f7a265f998547188dd17c87d530dd73"
      },
      "downloads": -1,
      "filename": "phrydy-3.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "74bde30c5fc08e5e614aa5d1630eeaee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 43296,
      "upload_time": "2022-06-25T05:55:01",
      "upload_time_iso_8601": "2022-06-25T05:55:01.713818Z",
      "url": "https://files.pythonhosted.org/packages/53/33/498912da37a952aa81d52c469c86d6dbfc546d3be43bffb1ff1205bcf1d1/phrydy-3.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}