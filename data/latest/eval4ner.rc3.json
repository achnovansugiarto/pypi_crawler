{
  "info": {
    "author": "cyk1337",
    "author_email": "chaiyekun@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# eval4ner: An All-Round Evaluation for Named Entity Recognition\n![Stable version](https://img.shields.io/pypi/v/eval4ner)\n![Python3](https://img.shields.io/pypi/pyversions/eval4ner)![wheel:eval4ner](https://img.shields.io/pypi/wheel/eval4ner)\n![Download](https://img.shields.io/pypi/dm/eval4ner)\n![MIT License](https://img.shields.io/pypi/l/eval4ner)\n\n\n\nTable of Contents\n=================\n\n- [TL;DR](https://github.com/cyk1337/eval4ner/#tldr)\n- [Preliminaries for NER Evaluation](https://github.com/cyk1337/eval4ner/#preliminaries-for-ner-evaluation)\n- [User Guide](https://github.com/cyk1337/eval4ner/#user-guide)\n    - [Installation](https://github.com/cyk1337/eval4ner/#installation)\n    - [Usage](https://github.com/cyk1337/eval4ner/#usage)\n- [Citation](https://github.com/cyk1337/eval4ner/#citation)\n- [References](https://github.com/cyk1337/eval4ner/#references)\n\nThis is a Python toolkit of MUC-5 evaluation metrics for evaluating Named Entity Recognition (NER) results. \n\n\n## TL;DR\nIt considers not only the mode of strict matching, *i.e.*, extracted entities are correct w.r.t both boundaries and types, but that of partial match, summarizing as following four modes:  \n- Strict：exact match (Both entity boundary and type are correct)\n- Exact boundary matching：predicted entity boundary is correct, regardless of entity boundary\n- Partial boundary matching：entity boundaries overlap, regardless of entity boundary\n- Type matching：some overlap between the system tagged entity and the gold annotation is required;\n\n\nRefer to the blog [Evaluation Metrics of Name Entity Recognition](https://ychai.uk/notes/2018/11/21/NLP/NER/NER-Evaluation-Metrics/#SemEval%E2%80%9813) for explanations of MUC metric.\n\n## Preliminaries for NER Evaluation\nIn research and production, following scenarios of NER systems can occur frequently: \n\n<table class=\"tg\">\n  <tr>\n    <th class=\"tg-0pky\">Scenario</th>\n    <th class=\"tg-c3ow\" colspan=\"2\">Golden Standard</th>\n    <th class=\"tg-c3ow\" colspan=\"2\">NER system prediction</th>\n    <th class=\"tg-c3ow\" colspan=\"4\">Measure</th>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\"></td>\n    <td class=\"tg-c3ow\">Entity Type</td>\n    <td class=\"tg-c3ow\">Entity Boundary (Surface String)</td>\n    <td class=\"tg-0pky\">Entity Type</td>\n    <td class=\"tg-0pky\">Entity Boundary (Surface String)</td>\n    <td class=\"tg-0pky\">Type</td>\n    <td class=\"tg-0pky\">Partial</td>\n    <td class=\"tg-0pky\">Exact</td>\n    <td class=\"tg-0pky\">Strict</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">III</td>\n    <td class=\"tg-c3ow\">MUSIC_NAME</td>\n    <td class=\"tg-c3ow\">告白气球</td>\n    <td class=\"tg-0pky\"></td>\n    <td class=\"tg-0pky\"></td>\n    <td class=\"tg-0pky\">MIS</td>\n    <td class=\"tg-0pky\">MIS</td>\n    <td class=\"tg-0pky\">MIS</td>\n    <td class=\"tg-0pky\">MIS</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">II</td>\n    <td class=\"tg-c3ow\"></td>\n    <td class=\"tg-c3ow\"></td>\n    <td class=\"tg-0pky\">MUSIC_NAME</td>\n    <td class=\"tg-0pky\">年轮</td>\n    <td class=\"tg-0pky\">SPU</td>\n    <td class=\"tg-0pky\">SPU</td>\n    <td class=\"tg-0pky\">SPU</td>\n    <td class=\"tg-0pky\">SPU</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">V</td>\n    <td class=\"tg-c3ow\">MUSIC_NAME</td>\n    <td class=\"tg-c3ow\">告白气球</td>\n    <td class=\"tg-0pky\">MUSIC_NAME</td>\n    <td class=\"tg-0pky\">一首告白气球</td>\n    <td class=\"tg-0pky\">COR</td>\n    <td class=\"tg-0pky\">PAR</td>\n    <td class=\"tg-0pky\">INC</td>\n    <td class=\"tg-0pky\">INC</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">IV</td>\n    <td class=\"tg-c3ow\">MUSIC_NAME</td>\n    <td class=\"tg-c3ow\">告白气球</td>\n    <td class=\"tg-0pky\">SINGER</td>\n    <td class=\"tg-0pky\">告白气球</td>\n    <td class=\"tg-0pky\">INC</td>\n    <td class=\"tg-0pky\">COR</td>\n    <td class=\"tg-0pky\">COR</td>\n    <td class=\"tg-0pky\">INC</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">I</td>\n    <td class=\"tg-c3ow\">MUSIC_NAME</td>\n    <td class=\"tg-c3ow\">告白气球</td>\n    <td class=\"tg-0pky\">MUSIC_NAME</td>\n    <td class=\"tg-0pky\">告白气球</td>\n    <td class=\"tg-0pky\">COR</td>\n    <td class=\"tg-0pky\">COR</td>\n    <td class=\"tg-0pky\">COR</td>\n    <td class=\"tg-0pky\">COR</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">VI</td>\n    <td class=\"tg-c3ow\">MUSIC_NAME</td>\n    <td class=\"tg-c3ow\">告白气球</td>\n    <td class=\"tg-0pky\">SINGER</td>\n    <td class=\"tg-0pky\">一首告白气球</td>\n    <td class=\"tg-0pky\">INC</td>\n    <td class=\"tg-0pky\">PAR</td>\n    <td class=\"tg-0pky\">INC</td>\n    <td class=\"tg-0pky\">INC</td>\n  </tr>\n</table>\n\nThus, MUC-5 takes into account all these scenarios for all-sided evaluation. \n\nThen we can compute:\n\n**Number of golden standard**:\n\n<img src=\"https://render.githubusercontent.com/render/math?math=Possible(POS) = COR %2B INC %2B PAR %2B MIS = TP %2B FN\">\n\n**Number of predictee**: \n\n<img src=\"https://render.githubusercontent.com/render/math?math=Actual(ACT) = COR %2B INC %2B PAR %2B SPU = TP %2B FP\">\n\nThe evaluation type of exact match and partial match are as follows:\n### Exact match(i.e. Strict, Exact)\n<img src=\"https://render.githubusercontent.com/render/math?math=Precision = \\frac{COR}{ACT} = \\frac{TP}{TP%2BFP}\">\n<img src=\"https://render.githubusercontent.com/render/math?math=Recall =\\frac{COR}{POS}=\\frac{TP}{TP%2BFN}\">\n\n\n### Partial match (i.e. Partial, Type)\n<img src=\"https://render.githubusercontent.com/render/math?math=Precision = \\frac{COR %2B 0.5\\times PAR}{ACT}\">\n<img src=\"https://render.githubusercontent.com/render/math?math=Recall = \\frac{COR %2B 0.5 \\times PAR}{POS}\">\n\n\n### F-Measure\n<img src=\"https://render.githubusercontent.com/render/math?math=F_\\alpha = \\frac{(\\alpha^2 %2B 1)PR}{\\alpha^2 P%2BR}\">\n<img src=\"https://render.githubusercontent.com/render/math?math=F_1 = \\frac{2PR}{P%2BR}\">\n\nTherefore, we can get the results:\n<table class=\"tg\">\n  <tr>\n    <th class=\"tg-e6bt\">Measure</th>\n    <th class=\"tg-23iq\">Type</th>\n    <th class=\"tg-23iq\">Partial</th>\n    <th class=\"tg-ww3v\">Exact</th>\n    <th class=\"tg-ww3v\">Strict</th>\n  </tr>\n  <tr>\n    <td class=\"tg-e6bt\">Correct</td>\n    <td class=\"tg-23iq\">2</td>\n    <td class=\"tg-23iq\">2</td>\n    <td class=\"tg-ww3v\">2</td>\n    <td class=\"tg-ww3v\">1</td>\n  </tr>\n  <tr>\n    <td class=\"tg-e6bt\">Incorrect</td>\n    <td class=\"tg-23iq\">2</td>\n    <td class=\"tg-23iq\">0</td>\n    <td class=\"tg-ww3v\">2</td>\n    <td class=\"tg-ww3v\">3</td>\n  </tr>\n  <tr>\n    <td class=\"tg-e6bt\">Partial</td>\n    <td class=\"tg-23iq\">0</td>\n    <td class=\"tg-23iq\">2</td>\n    <td class=\"tg-ww3v\">0</td>\n    <td class=\"tg-ww3v\">0</td>\n  </tr>\n  <tr>\n    <td class=\"tg-e6bt\">Missed</td>\n    <td class=\"tg-23iq\">1</td>\n    <td class=\"tg-23iq\">1</td>\n    <td class=\"tg-ww3v\">1</td>\n    <td class=\"tg-ww3v\">1</td>\n  </tr>\n  <tr>\n    <td class=\"tg-e6bt\">Spurius</td>\n    <td class=\"tg-23iq\">1</td>\n    <td class=\"tg-23iq\">1</td>\n    <td class=\"tg-ww3v\">1</td>\n    <td class=\"tg-ww3v\">1</td>\n  </tr>\n  <tr>\n    <td class=\"tg-e6bt\">Precision</td>\n    <td class=\"tg-23iq\">0.4</td>\n    <td class=\"tg-23iq\">0.6</td>\n    <td class=\"tg-ww3v\">0.4</td>\n    <td class=\"tg-ww3v\">0.2</td>\n  </tr>\n  <tr>\n    <td class=\"tg-e6bt\">Recall</td>\n    <td class=\"tg-23iq\">0.4</td>\n    <td class=\"tg-23iq\">0.6</td>\n    <td class=\"tg-ww3v\">0.4</td>\n    <td class=\"tg-ww3v\">0.2</td>\n  </tr>\n  <tr>\n    <td class=\"tg-gx32\">F1 score</td>\n    <td class=\"tg-t0np\">0.4</td>\n    <td class=\"tg-t0np\">0.6</td>\n    <td class=\"tg-8l38\">0.4</td>\n    <td class=\"tg-8l38\">0.2</td>\n  </tr>\n</table>\n\n## User Guide\n### Installation\n```bash\npip install [-U] eval4ner\n```\n\n### Usage\n#### 1. Evaluate single prediction\n```python\nimport eval4ner.muc as muc\nimport pprint\ngrount_truth = [('PER', 'John Jones'), ('PER', 'Peter Peters'), ('LOC', 'York')]\nprediction = [('PER', 'John Jones and Peter Peters came to York')]\ntext = 'John Jones and Peter Peters came to York'\none_result = muc.evaluate_one(prediction, grount_truth, text)\npprint.pprint(one_result)\n```\n\nOutput:\n```bash\n{'exact': {'actual': 1,\n           'correct': 0,\n           'f1_score': 0,\n           'incorrect': 1,\n           'missed': 2,\n           'partial': 0,\n           'possible': 3,\n           'precision': 0.0,\n           'recall': 0.0,\n           'spurius': 0},\n 'partial': {'actual': 1,\n             'correct': 0,\n             'f1_score': 0.25,\n             'incorrect': 0,\n             'missed': 2,\n             'partial': 1,\n             'possible': 3,\n             'precision': 0.5,\n             'recall': 0.16666666666666666,\n             'spurius': 0},\n 'strict': {'actual': 1,\n            'correct': 0,\n            'f1_score': 0,\n            'incorrect': 1,\n            'missed': 2,\n            'partial': 0,\n            'possible': 3,\n            'precision': 0.0,\n            'recall': 0.0,\n            'spurius': 0},\n 'type': {'actual': 1,\n          'correct': 1,\n          'f1_score': 0.5,\n          'incorrect': 0,\n          'missed': 2,\n          'partial': 0,\n          'possible': 3,\n          'precision': 1.0,\n          'recall': 0.3333333333333333,\n          'spurius': 0}}\n\n```\n\n#### 2. Evaluate all predictions\n```python\nimport eval4ner.muc as muc\n# ground truth\ngrount_truths = [\n    [('PER', 'John Jones'), ('PER', 'Peter Peters'), ('LOC', 'York')],\n    [('PER', 'John Jones'), ('PER', 'Peter Peters'), ('LOC', 'York')],\n    [('PER', 'John Jones'), ('PER', 'Peter Peters'), ('LOC', 'York')]\n]\n# NER model prediction\npredictions = [\n    [('PER', 'John Jones and Peter Peters came to York')],\n    [('LOC', 'John Jones'), ('PER', 'Peters'), ('LOC', 'York')],\n    [('PER', 'John Jones'), ('PER', 'Peter Peters'), ('LOC', 'York')]\n]\n# input texts\ntexts = [\n    'John Jones and Peter Peters came to York',\n    'John Jones and Peter Peters came to York',\n    'John Jones and Peter Peters came to York'\n]\nmuc.evaluate_all(predictions, grount_truths * 1, texts, verbose=True)\n```\n\nOutput:\n```bash\n NER evaluation scores:\n  strict mode, Precision=0.4444, Recall=0.4444, F1:0.4444\n   exact mode, Precision=0.5556, Recall=0.5556, F1:0.5556\n partial mode, Precision=0.7778, Recall=0.6667, F1:0.6944\n    type mode, Precision=0.8889, Recall=0.6667, F1:0.7222\n```\n\nThis repo will be long-term supported. Welcome to contribute and PR.\n\n## Citation\nFor attribution in academic contexts, please cite this work as:\n```\n@misc{eval4ner,\n  title={Evaluation Metrics of Named Entity Recognition},\n  author={Chai, Yekun},\n  year={2018},\n  howpublished={\\url{https://cyk1337.github.io/notes/2018/11/21/NLP/NER/NER-Evaluation-Metrics/}},\n}\n\n@misc{chai2018-ner-eval,\n  author = {Chai, Yekun},\n  title = {eval4ner: An All-Round Evaluation for Named Entity Recognition},\n  year = {2019},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/cyk1337/eval4ner}}\n}\n```\n\n## References\n1. [Evaluation of the SemEval-2013 Task 9.1: Recognition and Classification of pharmacological substances](https://www.cs.york.ac.uk/semeval-2013/task9/data/uploads/semeval_2013-task-9_1-evaluation-metrics.pdf)\n2. [MUC-5 Evaluation Metrics](https://www.aclweb.org/anthology/M93-1007.pdf)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cyk1337/eval4ner",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "eval4ner",
    "package_url": "https://pypi.org/project/eval4ner/",
    "platform": null,
    "project_url": "https://pypi.org/project/eval4ner/",
    "project_urls": {
      "Homepage": "https://github.com/cyk1337/eval4ner"
    },
    "release_url": "https://pypi.org/project/eval4ner/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A package for NER evaluation",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14702271,
  "releases": {
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "751ac7ac9aed389e5cdb94e9074480c84ad5519c24c74da87fe549f205be91c0",
          "md5": "6344358b4089294aa50dd6651f491d1d",
          "sha256": "d76b011f25c5edd0d6057fc82f9b8e76226e5208cb4de8eb9a57ee7c7d6d4dcd"
        },
        "downloads": -1,
        "filename": "eval4ner-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6344358b4089294aa50dd6651f491d1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5670,
        "upload_time": "2021-04-21T04:38:52",
        "upload_time_iso_8601": "2021-04-21T04:38:52.988423Z",
        "url": "https://files.pythonhosted.org/packages/75/1a/c7ac9aed389e5cdb94e9074480c84ad5519c24c74da87fe549f205be91c0/eval4ner-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cf2093f539c68ef494c2f4c17cbd6b8bcba8c883f4dbfc444dda231ec2c30a3",
          "md5": "4540e5786d2b2e00e96acc186fd5ac55",
          "sha256": "fd64f210f1c5fadc6ac0f660d466f76d3e4b8e4a4352688eba451d4183386486"
        },
        "downloads": -1,
        "filename": "eval4ner-0.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4540e5786d2b2e00e96acc186fd5ac55",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6301,
        "upload_time": "2021-11-28T06:39:14",
        "upload_time_iso_8601": "2021-11-28T06:39:14.841386Z",
        "url": "https://files.pythonhosted.org/packages/1c/f2/093f539c68ef494c2f4c17cbd6b8bcba8c883f4dbfc444dda231ec2c30a3/eval4ner-0.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4e8e9749516c0c60d6dc17c75bde95cae55c7e248a7e3ba02697a64ebcc20b5",
          "md5": "1ac56a8c882212a7f2bb4dc2dc47a409",
          "sha256": "7e72c9d209441e519e4ca11a590d4ea1299670210c3680b821c4cad402d4ddec"
        },
        "downloads": -1,
        "filename": "eval4ner-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ac56a8c882212a7f2bb4dc2dc47a409",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6296,
        "upload_time": "2021-11-28T06:39:16",
        "upload_time_iso_8601": "2021-11-28T06:39:16.279551Z",
        "url": "https://files.pythonhosted.org/packages/a4/e8/e9749516c0c60d6dc17c75bde95cae55c7e248a7e3ba02697a64ebcc20b5/eval4ner-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99990ec0b84e33ab2063c89cd49e067a040c47b29b460ace842848da404fc43e",
          "md5": "b4246236f54c7daecd127d69da90c86a",
          "sha256": "119ea745519780e759d4597006d536632e26b9fb18e3a01695c4db94a52cd6ab"
        },
        "downloads": -1,
        "filename": "eval4ner-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b4246236f54c7daecd127d69da90c86a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5640,
        "upload_time": "2021-11-28T06:39:18",
        "upload_time_iso_8601": "2021-11-28T06:39:18.741278Z",
        "url": "https://files.pythonhosted.org/packages/99/99/0ec0b84e33ab2063c89cd49e067a040c47b29b460ace842848da404fc43e/eval4ner-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2df1c4f811419e8287e04bc2ababb2ca865980ec8077ba920ce584ef4b373e4b",
          "md5": "ad73523dac6ed4515126e86524ad58fe",
          "sha256": "eee2ac9cdcfa02bac4a3a9dc49669583f12dd0327bf6b63a975fb00cdf63b5ae"
        },
        "downloads": -1,
        "filename": "eval4ner-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad73523dac6ed4515126e86524ad58fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12116,
        "upload_time": "2022-08-09T13:19:15",
        "upload_time_iso_8601": "2022-08-09T13:19:15.888886Z",
        "url": "https://files.pythonhosted.org/packages/2d/f1/c4f811419e8287e04bc2ababb2ca865980ec8077ba920ce584ef4b373e4b/eval4ner-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2abb974cb6bd6443a4918877bdbfc46945402a86b431a29363b0048901cf4bae",
          "md5": "ed2fab6cdd1582620bdd66cf10c1b7f6",
          "sha256": "16a51d9c3b62bfc564eda9925354e9efc049f3dcba64dba9ef0b8c2dae91c319"
        },
        "downloads": -1,
        "filename": "eval4ner-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ed2fab6cdd1582620bdd66cf10c1b7f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13668,
        "upload_time": "2022-08-09T13:19:18",
        "upload_time_iso_8601": "2022-08-09T13:19:18.085805Z",
        "url": "https://files.pythonhosted.org/packages/2a/bb/974cb6bd6443a4918877bdbfc46945402a86b431a29363b0048901cf4bae/eval4ner-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2df1c4f811419e8287e04bc2ababb2ca865980ec8077ba920ce584ef4b373e4b",
        "md5": "ad73523dac6ed4515126e86524ad58fe",
        "sha256": "eee2ac9cdcfa02bac4a3a9dc49669583f12dd0327bf6b63a975fb00cdf63b5ae"
      },
      "downloads": -1,
      "filename": "eval4ner-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ad73523dac6ed4515126e86524ad58fe",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12116,
      "upload_time": "2022-08-09T13:19:15",
      "upload_time_iso_8601": "2022-08-09T13:19:15.888886Z",
      "url": "https://files.pythonhosted.org/packages/2d/f1/c4f811419e8287e04bc2ababb2ca865980ec8077ba920ce584ef4b373e4b/eval4ner-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2abb974cb6bd6443a4918877bdbfc46945402a86b431a29363b0048901cf4bae",
        "md5": "ed2fab6cdd1582620bdd66cf10c1b7f6",
        "sha256": "16a51d9c3b62bfc564eda9925354e9efc049f3dcba64dba9ef0b8c2dae91c319"
      },
      "downloads": -1,
      "filename": "eval4ner-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ed2fab6cdd1582620bdd66cf10c1b7f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13668,
      "upload_time": "2022-08-09T13:19:18",
      "upload_time_iso_8601": "2022-08-09T13:19:18.085805Z",
      "url": "https://files.pythonhosted.org/packages/2a/bb/974cb6bd6443a4918877bdbfc46945402a86b431a29363b0048901cf4bae/eval4ner-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}