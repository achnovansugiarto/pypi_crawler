{
  "info": {
    "author": "dineshpinto",
    "author_email": "annual.fallout_0z@icloud.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11"
    ],
    "description": "[![DOI](https://zenodo.org/badge/288670453.svg)](https://zenodo.org/badge/latestdoi/288670453)\n[![PyPi version](https://img.shields.io/pypi/v/qudi-hira-analysis)](https://pypi.python.org/pypi/qudi-hira-analysis/)\n[![Python 3.10](https://img.shields.io/badge/python-3.10-orange.svg)](https://www.python.org/downloads/release/python-3100//)\n[![Python 3.11](https://img.shields.io/badge/python-3.11-orange.svg)](https://www.python.org/downloads/release/python-3110//)\n\n# Qudi Hira Analysis\n\nThis toolkit automates a large portion of the work surrounding data analysis on quantum sensing experiments where the\nprimary raw data extracted is photon counts.\n\nThe high level interface is abstracted, and provides a set of functions to automate data import, handling and analysis.\nIt is designed to be exposed through Jupyter Notebooks, although the abstract interface allows it to be integrated into\nlarger, more general frameworks as well (with only some pain). Using the toolkit itself should only require a\nbeginner-level understanding of Python.\n\nIt also aims to improve transparency and reproducibility in experimental data analysis. In an ideal scenario,\ntwo lines of code are sufficient to recreate all output data.\n\nPython offers some very handy features like dataclasses, which are heavily used by this toolkit. Dataclasses offer a\nfull OOP (object-oriented programming) experience while analyzing complex data sets. They provide a solid and\ntransparent structure to the data to\nreduce errors arising from data fragmentation. This generally comes at a large performance cost, but this is (largely)\nsidestepped by lazy loading data and storing metadata instead wherever possible.\n\n## Installation\n\n```bash\npip install qudi-hira-analysis\n```\n\n## Citation\n\nIf you are publishing scientific results, you can cite this work as:  https://doi.org/10.5281/zenodo.7604670\n\n## Schema\n\nThe visual structure of the toolkit is shown in the schema below. It largely consists of three portions:\n\n- `IOHandler` assumes a central store of raw data, which is never modified (read-only)\n- `DataHandler` automates the extraction of large amounts of data from the `IOHandler` interface\n- `AnalysisLogic` contains a set of automated fitting routines using `lmfit` internally (built on top of fitting\n  routines from the [qudi](https://github.com/Ulm-IQO/qudi) project)\n\nThis license of this project is located in the top level folder under `LICENSE`. Some specific files contain their\nindividual licenses in the file header docstring.\n\n```mermaid\nflowchart TD;\n    IOHandler<-- Handle all IO operations -->DataLoader;\n    DataLoader<-- Map IO callables to data -->DataHandler;\n    DataHandler-- Structure extracted data -->MeasurementDataclass;\n    MeasurementDataclass-- Plot fitted data --> Plot[Visualize data and add context in JupyterLab];\n    Plot-- Save plotted data --> DataHandler;\n    style MeasurementDataclass fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5 5\n```\n\n### Measurement Dataclass\n\n```mermaid\nflowchart LR;\n    subgraph Standard Data\n        MeasurementDataclass-->filepath1[filepath: Path];\n        MeasurementDataclass-->data1[data: DataFrame];\n        MeasurementDataclass-->params1[params: dict];\n        MeasurementDataclass-->timestamp1[timestamp: datetime];\n        MeasurementDataclass-- analysis --oAnalysisLogic;\n    end\n    subgraph Pulsed Data\n        MeasurementDataclass-- pulsed --oPulsedMeasurementDataclass;\n        PulsedMeasurementDataclass-- measurement --oPulsedMeasurement;\n        PulsedMeasurement--> filepath2[filepath: Path];\n        PulsedMeasurement--> data2[data: DataFrame];\n        PulsedMeasurement--> params2[params: dict];\n        PulsedMeasurementDataclass-- laser_pulses --oLaserPulses; \n        LaserPulses--> filepath3[filepath: Path];\n        LaserPulses--> data3[data: DataFrame];\n        LaserPulses--> params3[params: dict];\n        PulsedMeasurementDataclass-- timetrace --oRawTimetrace;\n        RawTimetrace--> filepath4[filepath: Path];\n        RawTimetrace--> data4[data: DataFrame];\n        RawTimetrace--> params4[params: dict];\n    end\n```\n\n### Supports common fitting routines\n\nFit routines included in `AnalysisLogic`\n\n| Dimension | Fit                           |\n|-----------|-------------------------------|\n| 1d        | decayexponential              |\n|           | biexponential                 |\n|           | decayexponentialstretched     |\n|           | gaussian                      |\n|           | gaussiandouble                |\n|           | gaussianlinearoffset          |\n|           | hyperbolicsaturation          |\n|           | linear                        |\n|           | lorentzian                    |\n|           | lorentziandouble              |\n|           | lorentziantriple              |\n|           | sine                          |\n|           | sinedouble                    |\n|           | sinedoublewithexpdecay        |\n|           | sinedoublewithtwoexpdecay     |\n|           | sineexponentialdecay          |\n|           | sinestretchedexponentialdecay |\n|           | sinetriple                    |\n|           | sinetriplewithexpdecay        |\n|           | sinetriplewiththreeexpdecay   |\n| 2d        | twoDgaussian                  |\n\n### Inbuilt measurement tree visualizer\n\n```ipython\n>>> tip_2S6 = DataHandler(data_folder=\"C:\\\\Data\", figure_folder=\"C:\\\\QudiHiraAnalysis\",\n                      measurement_folder=\"20220621_FR0612-F2-2S6_uhv\")\n>>> tip_2S6.data_folder_tree()\n\n# Output\n├── 20211116_NetworkAnalysis_SampleIn_UpperPin.csv\n├── 20211116_NetworkAnalysis_SampleOut_UpperPin.csv\n├── 20211116_NetworkAnalysis_TipIn_LowerPin.csv\n├── 20211116_NetworkAnalysis_TipIn_UpperPin.csv\n├── 20211116_NetworkAnalysis_TipOut_LowerPin.csv\n├── 20211116_NetworkAnalysis_TipOut_UpperPin.csv\n├── ContactTestingMeasurementHead\n│   ├── C2_Reference.txt\n│   ├── C2_SampleLowerPin.txt\n│   ├── C2_SampleUpperPin.txt\n│   ├── C2_TipLowerPin.txt\n│   └── C2_TipUpperPin.txt\n├── Sample_MW_Pin_comparision.png\n├── Tip_MW_Pin_comparision.png\n└── Tip_Sample_MW_Pin_comparision.png\n```\n\n### Automated data extraction\n\n#### Example 1: Extract, fit and plot all Rabi measurements\n\n```python\nfrom pathlib import Path\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom qudi_hira_analysis import DataHandler\n\nnv1 = DataHandler(\n  data_folder=Path(\"C:\\\\\", \"Data\"),\n  figure_folder=Path(\"C:\\\\\", \"QudiHiraAnalysis\"),\n  measurement_folder=Path(\"20230101_NV1\")\n)\n\nrabi_measurements = nv1.load_measurements(measurement_str=\"rabi\", qudi=True, pulsed=True)\n\nfig, ax = plt.subplots()\n\nfor rabi in rabi_measurements:\n  sns.lineplot(data=rabi.data, x=\"Controlled variable(s)\", y=\"Signal\", ax=ax)\n  fit_x, fit_y, result = rabi.analysis.fit(\n    x=\"Controlled variable(s)\", y=\"Signal\",\n    data=rabi.data,\n    fit_function=rabi_measurements.sineexponentialdecay\n  )\n  sns.lineplot(x=fit_x, y=fit_y, ax=ax)\n\nnv1.save_figures(filepath=\"rabi_variation\", fig=fig)\n```\n\n#### Example 2: Combine all temperature data, plot and save\n\n```python\nfrom pathlib import Path\n\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\n\nfrom qudi_hira_analysis import DataHandler\n\nnv1 = DataHandler(\n  data_folder=Path(\"C:\\\\\", \"Data\"),\n  figure_folder=Path(\"C:\\\\\", \"QudiHiraAnalysis\"),\n  measurement_folder=Path(\"20230101_NV1\"),\n  copy_measurement_folder_structure=False\n)\n\ntemperature_measurements = nv1.load_measurements(measurement_str=\"temperature-monitoring\")\n\ndft = pd.concat([t.data for t in temperature_measurements.values()])\n\nfig, ax = plt.subplots()\nsns.lineplot(data=dft, x=\"Time\", y=\"Temperature\", ax=ax)\nnv1.save_figures(filepath=\"temperature-monitoring\", fig=fig)\n```\n\n## Build\n\n### Prerequisites\n\nLatest version of:\n\n- [Poetry](https://python-poetry.org) (recommended) or [conda](https://docs.conda.io/en/latest/miniconda.html) package\n  manager\n- [git](https://git-scm.com/downloads) version control system\n\n### Clone the repository\n\n```shell\ngit clone https://github.com/dineshpinto/qudi-hira-analysis.git\n```\n\n### Installing dependencies with Poetry\n\n```bash\npoetry install\n```\n\n#### Add Poetry environment to Jupyter kernel\n\n```bash\npoetry run python -m ipykernel install --user --name=qudi-hira-analysis\n```\n\n### OR installing dependencies with conda\n\n#### Creating the conda environment\n\n```shell\nconda env create -f tools/conda-env-xx.yml\n```\n\nwhere `xx` is either `win10`, `osx-intel` or `osx-apple-silicon`.\n\n#### Activate conda environment\n\n```shell\nconda activate qudi-hira-analysis\n```\n\n#### Add conda environment to Jupyter kernel\n\n```shell\npython -m ipykernel install --user --name=qudi-hira-analysis\n```\n\n### Start the analysis\n\n#### If installed with Poetry\n\n```shell\npoetry run jupyter lab\n```\n\n#### OR with conda\n\n```shell\njupyter lab\n```\n\nDon't forget to switch to the `qudi-hira-analysis` kernel in JupyterLab.\n\n## Makefile\n\nThe Makefile located in `notebooks/` is configured to generate a variety of outputs:\n\n+ `make pdf` : Converts all notebooks to PDF (requires LaTeX backend)\n+ `make html`: Converts all notebooks to HTML\n+ `make py`  : Converts all notebooks to Python (can be useful for VCS)\n+ `make all` : Sequentially runs all the notebooks in folder\n\nTo use the `make` command on Windows you can install [Chocolatey](https://chocolatey.org/install), then\ninstall make with `choco install make`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dineshpinto/qudi-hira-analysis",
    "keywords": "python,qubit,analysis,nv centers,photon timetrace",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "qudi-hira-analysis",
    "package_url": "https://pypi.org/project/qudi-hira-analysis/",
    "platform": null,
    "project_url": "https://pypi.org/project/qudi-hira-analysis/",
    "project_urls": {
      "Homepage": "https://github.com/dineshpinto/qudi-hira-analysis",
      "Repository": "https://github.com/dineshpinto/qudi-hira-analysis"
    },
    "release_url": "https://pypi.org/project/qudi-hira-analysis/1.3.3/",
    "requires_dist": [
      "lmfit (>=1.1.0,<2.0.0)",
      "matplotlib (>=3.6.2,<4.0.0)",
      "numpy (>=1.24.0,<2.0.0)",
      "pandas (>=1.5.2,<2.0.0)",
      "xlrd (>=2.0.1,<3.0.0)",
      "openpyxl (>=3.0.10,<4.0.0)",
      "tqdm (>=4.64.1,<5.0.0)",
      "notebook (>=6.5.3,<7.0.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "A Python toolkit to analzye photon timetrace data from qubit sensors",
    "version": "1.3.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17453007,
  "releases": {
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9e9bb63aad6e00bb25120e4bb16b02eb5f02cba308e47a0d571fe4992e2adaf",
          "md5": "f6ee19b6a398f8e7ca3b71775a34f3c3",
          "sha256": "9beafb58b95d5ba3cbe7134cfcb16d53a5c9e6cf7f87de36f53777bb21666dab"
        },
        "downloads": -1,
        "filename": "qudi_hira_analysis-1.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6ee19b6a398f8e7ca3b71775a34f3c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 68677,
        "upload_time": "2023-03-06T23:01:49",
        "upload_time_iso_8601": "2023-03-06T23:01:49.867091Z",
        "url": "https://files.pythonhosted.org/packages/a9/e9/bb63aad6e00bb25120e4bb16b02eb5f02cba308e47a0d571fe4992e2adaf/qudi_hira_analysis-1.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c05897b0aa3c46ddf933cdec333289593abe7666c95ce5026a70ecbc4a9d59d3",
          "md5": "ae1a596ae675f0293db4b8cd79046207",
          "sha256": "df8e0fa1396791f95502637e0bdd26bb55338ced0648232be0ea29deb4e3d849"
        },
        "downloads": -1,
        "filename": "qudi_hira_analysis-1.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ae1a596ae675f0293db4b8cd79046207",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 56529,
        "upload_time": "2023-03-06T23:01:51",
        "upload_time_iso_8601": "2023-03-06T23:01:51.944934Z",
        "url": "https://files.pythonhosted.org/packages/c0/58/97b0aa3c46ddf933cdec333289593abe7666c95ce5026a70ecbc4a9d59d3/qudi_hira_analysis-1.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0e2644583d6fd86e7d601b0e9d3c3daf825bebec98b4acf5d4914891ef13bf1",
          "md5": "6e1b439beebd1ac70feb5eafc0b048e7",
          "sha256": "1252e4176f185b9602200670c54e6cbb9cd72b627754262175437fe5ab821473"
        },
        "downloads": -1,
        "filename": "qudi_hira_analysis-1.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e1b439beebd1ac70feb5eafc0b048e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 68955,
        "upload_time": "2023-03-26T21:23:58",
        "upload_time_iso_8601": "2023-03-26T21:23:58.169430Z",
        "url": "https://files.pythonhosted.org/packages/e0/e2/644583d6fd86e7d601b0e9d3c3daf825bebec98b4acf5d4914891ef13bf1/qudi_hira_analysis-1.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cce5796b3b54d0c4fd6465310171e6855cce205aba7e53380c4a224da88d4a8",
          "md5": "a2479d9d0e11cd9a500e91fddae229c3",
          "sha256": "035d59ec323e587cbe285ed4539c49b81b0c5b06e9aed6511f327bca2325f55a"
        },
        "downloads": -1,
        "filename": "qudi_hira_analysis-1.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a2479d9d0e11cd9a500e91fddae229c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 56964,
        "upload_time": "2023-03-26T21:24:00",
        "upload_time_iso_8601": "2023-03-26T21:24:00.056777Z",
        "url": "https://files.pythonhosted.org/packages/0c/ce/5796b3b54d0c4fd6465310171e6855cce205aba7e53380c4a224da88d4a8/qudi_hira_analysis-1.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e0e2644583d6fd86e7d601b0e9d3c3daf825bebec98b4acf5d4914891ef13bf1",
        "md5": "6e1b439beebd1ac70feb5eafc0b048e7",
        "sha256": "1252e4176f185b9602200670c54e6cbb9cd72b627754262175437fe5ab821473"
      },
      "downloads": -1,
      "filename": "qudi_hira_analysis-1.3.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6e1b439beebd1ac70feb5eafc0b048e7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 68955,
      "upload_time": "2023-03-26T21:23:58",
      "upload_time_iso_8601": "2023-03-26T21:23:58.169430Z",
      "url": "https://files.pythonhosted.org/packages/e0/e2/644583d6fd86e7d601b0e9d3c3daf825bebec98b4acf5d4914891ef13bf1/qudi_hira_analysis-1.3.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0cce5796b3b54d0c4fd6465310171e6855cce205aba7e53380c4a224da88d4a8",
        "md5": "a2479d9d0e11cd9a500e91fddae229c3",
        "sha256": "035d59ec323e587cbe285ed4539c49b81b0c5b06e9aed6511f327bca2325f55a"
      },
      "downloads": -1,
      "filename": "qudi_hira_analysis-1.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a2479d9d0e11cd9a500e91fddae229c3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 56964,
      "upload_time": "2023-03-26T21:24:00",
      "upload_time_iso_8601": "2023-03-26T21:24:00.056777Z",
      "url": "https://files.pythonhosted.org/packages/0c/ce/5796b3b54d0c4fd6465310171e6855cce205aba7e53380c4a224da88d4a8/qudi_hira_analysis-1.3.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}