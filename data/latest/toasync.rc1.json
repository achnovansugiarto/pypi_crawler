{
  "info": {
    "author": "Nguyen Khac Thanh",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![GithubCI](https://github.com/magiskboy/toasync/workflows/ci/badge.svg)](https://github.com/magiskboy/toasync/actions?query=workflow%3ACI)\n\n\n# toasync\n\nConvert sync function to async function and start at same time\n\n\n```python\nfrom time import sleep, time\nimport asyncio\nfrom toasync import async_\n\n\n@async_\ndef func(name, i=1):\n    print('Start function {}'.format(name))\n    sleep(1)\n    print('Done function {}'.format(name))\n\n\nif __name__ == '__main__':\n    coroutine = asyncio.gather(\n        func()('1'),\n        func()('2'),\n        func()('3'),\n    )\n    start_time = time()\n    asyncio.get_event_loop().run_until_complete(coroutine)\n    print('Process take {} sencond'.format(time-start_time))\n```\n\nthen\n\n```bash\nStart function 1\nStart function 2\nStart function 3\nDone function 2\nDone function 1\nDone function 3\nProcess take 1.007418155670166 sencond\n```\n\n\nIf run function as synchronous, you can call `delay` method\n\n```python\nfrom time import sleep\nfrom toasync import async_\n\n\n@async_\ndef func(name, i=1):\n    print('Start function {}'.format(name))\n    sleep(1)\n    print('Done function {}'.format(name))\n\n\nif __name__ == '__main__':\n    func().delay('1')\n    func().delay('2')\n    func().delay('3')\n```\n\nthen\n\n```bash\nStart function 1\nDone function 1\nStart function 2\nDone function 2\nStart function 3\nDone function 3\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "toasync",
    "package_url": "https://pypi.org/project/toasync/",
    "platform": "",
    "project_url": "https://pypi.org/project/toasync/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/toasync/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8021544,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18973343ebe25198e4ebecc2ef2eca47792e593693325c42aed1a16fcd2aafc1",
          "md5": "263a692141055c91a69e1d080ef770a5",
          "sha256": "7f7ce3ec70c8536d25d413cd5ce12c5394d8d72a9c47ca96ea047e5faded8b73"
        },
        "downloads": -1,
        "filename": "toasync-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "263a692141055c91a69e1d080ef770a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1616,
        "upload_time": "2020-08-23T11:25:08",
        "upload_time_iso_8601": "2020-08-23T11:25:08.028090Z",
        "url": "https://files.pythonhosted.org/packages/18/97/3343ebe25198e4ebecc2ef2eca47792e593693325c42aed1a16fcd2aafc1/toasync-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18973343ebe25198e4ebecc2ef2eca47792e593693325c42aed1a16fcd2aafc1",
        "md5": "263a692141055c91a69e1d080ef770a5",
        "sha256": "7f7ce3ec70c8536d25d413cd5ce12c5394d8d72a9c47ca96ea047e5faded8b73"
      },
      "downloads": -1,
      "filename": "toasync-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "263a692141055c91a69e1d080ef770a5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1616,
      "upload_time": "2020-08-23T11:25:08",
      "upload_time_iso_8601": "2020-08-23T11:25:08.028090Z",
      "url": "https://files.pythonhosted.org/packages/18/97/3343ebe25198e4ebecc2ef2eca47792e593693325c42aed1a16fcd2aafc1/toasync-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}