{
  "info": {
    "author": "Eric Duminil",
    "author_email": "pwdhash@ericduminil.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PwdHash 1 and 2, in Python\n\nThis is a Python implementation of [*PwdHash*](http://pwdhash.com/) and [*PwdHash2*](https://gwuk.github.io/PwdHash2/), accessible from the command line.\n\nIt is function-equivalent to the original *PwdHash* browser add-on, as well as the updated version.\n\nIt does not require any dependency, and should work on any Python 3.4+.\n\nIt includes many options, and should be easy to integrate into any workflow.\n\n## Installation\n\n`pip install pwdhash`\n\n## Usage\n\nOnce installed with pip, `pwdhash` and `pwdhash2` commands should be available in the PATH.\n\n### `pwdhash`\n\n```bash\n❯ pwdhash -h\nusage: pwdhash [-h] [-s] [-t] [-c] [-n] domain\n\nComputes PwdHash1\n\npositional arguments:\n  domain       the domain or uri of the site\n\noptional arguments:\n  -h, --help   show this help message and exit\n  -s, --stdin  Get password from stdin instead of prompt. Default is prompt\n  -t, --twice  Ask password twice, and check both are the same. Default is once\n  -c, --copy   Copy hash to clipboard instead of displaying it. Default is display\n  -n           Do not print the trailing newline\n```\n### `pwdhash2`\n\n```bash\n❯ pwdhash2 -h\nusage: pwdhash2 [-h] [-s] [-t] [-c] [-n] [--salt SALT] [--iterations ITERATIONS] domain\n\nComputes PwdHash2\n\npositional arguments:\n  domain                the domain or uri of the site\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s, --stdin           Get password from stdin instead of prompt. Default is prompt\n  -t, --twice           Ask password twice, and check both are the same. Default is once\n  -c, --copy            Copy hash to clipboard instead of displaying it. Default is display\n  -n                    Do not print the trailing newline\n  --salt SALT           Salt\n  --iterations ITERATIONS\n                        How many iterations\n```\n\n### `python pwdhash.py`\n\nIf sources are available, the script can also be called with `python pwdhash.py` or `./pwdhash.py`.\n\n```bash\n❯ python pwdhash.py -h\nusage: pwdhash.py [-h] [-s] [-t] [-c] [-n] [-v {1,2}] [--salt SALT] [--iterations ITERATIONS] domain\n\nComputes PwdHash1 or PwdHash2\n\npositional arguments:\n  domain                the domain or uri of the site\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s, --stdin           Get password from stdin instead of prompt. Default is prompt\n  -t, --twice           Ask password twice, and check both are the same. Default is once\n  -c, --copy            Copy hash to clipboard instead of displaying it. Default is display\n  -n                    Do not print the trailing newline\n  -v {1,2}, --version {1,2}\n                        Use PwdHash 1 or 2. Default is 1\n  --salt SALT           Salt\n  --iterations ITERATIONS\n                        How many iterations\n```\n\n## PwdHash Examples\n\nDomain name is required as an argument, and password is entered in a prompt, without being displayed :\n\n```bash\n❯ pwdhash example.com\nPassword: \n4kydhtBD9M\n```\n\n###  `--stdin`\n\nIt's possible to get the password from standard input. It displays the password if entered by the user:\n\n```bash\n❯ pwdhash --stdin example.com\np4ssw0rd\n4kydhtBD9M\n```\n\nbut it allows to get the password from a pipe or a file:\n\n```bash\n❯ pwdhash --stdin example.com < password\n4kydhtBD9M\n❯ cat password | pwdhash --stdin example.com\n4kydhtBD9M\n❯ echo \"p4ssw0rd\" | pwdhash --stdin example.com\n4kydhtBD9M\n```\n\n###  `--twice`\n\nIt's possible to ask for the password twice, in order to avoid typos:\n\n```\n❯ pwdhash --twice example.com\nPassword:\nEnter password again:\nERROR: Passwords did not match.\n```\n\n`pwdhash` returns as usual if both passwords match:\n\n```\n❯ pwdhash --twice example.com\nPassword:\nEnter password again:\n4kydhtBD9M\n```\n\n###  `--copy`\n\nIt's possible to copy the password directly to the clipboard. It requires the [`pyperclip`](https://pypi.org/project/pyperclip/) module. The password isn't displayed at all.\n\n```bash\n❯ pwdhash --stdin --copy example.com < password\n```\n\n### `-n`\n\nPasswords can also be displayed without trailing newline:\n\n```bash\n❯ pwdhash --stdin example.com -n < password\n4kydhtBD9M%\n```\n\n## PwdHash2 Examples\n\n```bash\n❯ pwdhash2 example.com\nException: Please define 'PWDHASH2_SALT' environment variable, or specify --salt.\n```\nPwdHash2 requires a Salt:\n\n```bash\n❯ pwdhash2 example.com --salt ChangeMe\nException: Please define 'PWDHASH2_ITERATIONS' environment variable, or specify --iterations.\n```\nand a number of iterations:\n```bash\n❯ pwdhash2 example.com --salt ChangeMe --iterations 50000\nPassword:\n7qErBOIB6R\n❯ pwdhash2 example.com --salt ChangeMe --iterations 50000 --stdin < password\n7qErBOIB6R\n```\n\n### Environment variables\n\nSalt and Iterations can also be specified as *environment variables*:\n\n```bash\n❯ PWDHASH2_SALT=ChangeMe PWDHASH2_ITERATIONS=50000 pwdhash2 example.com --stdin < password\n7qErBOIB6R\n```\n\nIf you define those variables inside your `.bashrc` or `.zshrc`, you don't need to specify them anymore:\n\n```bash\n❯ pwdhash2 example.com --stdin < password\n7qErBOIB6R\n```\n\n## Call from Python script\n\n```python\nimport pwdhash\n\nprint(pwdhash.extract_domain('https://subdomain.example.com/folder'))\n# example.com\n\nprint(pwdhash.pwdhash('example.com', 'p4ssw0rd'))\n# 4kydhtBD9M\n\nprint(pwdhash.pwdhash2('example.com', 'p4ssw0rd', 50_000, 'ChangeMe'))\n# 7qErBOIB6R\n```\n\n## Tests\n\n```bash\n❯ pytest -v\n================================= test session starts ==================================\ncollected 15 items\n\ntest_pwdhash.py::TestPwdHash::test_empty_pwdhash PASSED                                        [  6%]\ntest_pwdhash.py::TestPwdHash::test_pwdhash1_with_domains PASSED                                [ 13%]\ntest_pwdhash.py::TestPwdHash::test_pwdhash1_with_urls PASSED                                   [ 20%]\ntest_pwdhash.py::TestPwdHash::test_pwdhash1_with_utf8 PASSED                                   [ 26%]\ntest_pwdhash.py::TestPwdHash2::test_pwdhash2_collisions PASSED                                 [ 33%]\ntest_pwdhash.py::TestPwdHash2::test_pwdhash2_edge_cases PASSED                                 [ 40%]\ntest_pwdhash.py::TestPwdHash2::test_pwdhash2_with_urls PASSED                                  [ 46%]\ntest_pwdhash.py::TestPwdHashCLI::test_cli_pwdhash PASSED                                       [ 53%]\ntest_pwdhash.py::TestPwdHashCLI::test_cli_pwdhash2 PASSED                                      [ 60%]\ntest_pwdhash.py::TestPwdHashCLI::test_cli_pwdhash_to_clipboard PASSED                          [ 66%]\ntest_pwdhash.py::TestPwdHashCLI::test_pwdhash_v1_script PASSED                                 [ 73%]\ntest_pwdhash.py::TestPwdHashCLI::test_pwdhash_v2_script PASSED                                 [ 80%]\ntest_pwdhash.py::TestInteractivePwdHash::test_input_password PASSED                            [ 86%]\ntest_pwdhash.py::TestInteractivePwdHash::test_input_password_no_newline PASSED                 [ 93%]\ntest_pwdhash.py::TestInteractivePwdHash::test_input_password_v2 PASSED                         [100%]\n\n================================== 9 passed in 0.46s ===================================\n```\n\n\n## Authors\n\n* Based on [Stanford PwdHash](https://pwdhash.github.io/website/)\n* [Joost Rijneveld](https://github.com/joostrijneveld), 2015\n* [Eric Duminil](https://github.com/EricDuminil), 2022\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/EricDuminil/pwdhash-py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pwdhash",
    "package_url": "https://pypi.org/project/pwdhash/",
    "platform": null,
    "project_url": "https://pypi.org/project/pwdhash/",
    "project_urls": {
      "Bug Tracker": "https://github.com/EricDuminil/pwdhash-py",
      "Homepage": "https://github.com/EricDuminil/pwdhash-py"
    },
    "release_url": "https://pypi.org/project/pwdhash/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A python implementation of PwdHash 1 and 2",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16322885,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b09eae57e77f9b28b3ed1b30f643661b11d714ef9bfde1949045b67a226a0b3",
          "md5": "22abdc35c38a55b7972e2152db7cabaf",
          "sha256": "7fc22e4147f5a0e5349eb90269a2c8c6dae0414532dcff9359f8323f1cf6f885"
        },
        "downloads": -1,
        "filename": "pwdhash-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22abdc35c38a55b7972e2152db7cabaf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6568,
        "upload_time": "2022-12-18T16:25:51",
        "upload_time_iso_8601": "2022-12-18T16:25:51.119523Z",
        "url": "https://files.pythonhosted.org/packages/1b/09/eae57e77f9b28b3ed1b30f643661b11d714ef9bfde1949045b67a226a0b3/pwdhash-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ca3c54c9333e507aa2545e490315c85be791afbab3aea290267308e9164690b",
          "md5": "2d75e749ca26137a3eb887b9fb5113ed",
          "sha256": "386f21a4fc74a36cd98551f8158e78d1251c2435be0a654b9a1ed8950c456112"
        },
        "downloads": -1,
        "filename": "pwdhash-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2d75e749ca26137a3eb887b9fb5113ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6038,
        "upload_time": "2022-12-18T16:25:52",
        "upload_time_iso_8601": "2022-12-18T16:25:52.695181Z",
        "url": "https://files.pythonhosted.org/packages/9c/a3/c54c9333e507aa2545e490315c85be791afbab3aea290267308e9164690b/pwdhash-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "545fae3a851bf5aa37457d12f5f970547c0952b00b43f6d144219fc06c12de61",
          "md5": "1e3dea677ecfaf114544064f0846d9b3",
          "sha256": "1db4863ceaf46721f5a726880e04db73b16f2ec7c8f667cbe80186157b62de38"
        },
        "downloads": -1,
        "filename": "pwdhash-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e3dea677ecfaf114544064f0846d9b3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6834,
        "upload_time": "2022-12-19T12:14:17",
        "upload_time_iso_8601": "2022-12-19T12:14:17.203161Z",
        "url": "https://files.pythonhosted.org/packages/54/5f/ae3a851bf5aa37457d12f5f970547c0952b00b43f6d144219fc06c12de61/pwdhash-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45aa433a40b585a02840953bbc1758960ba515a716c38d994e8225c367a312c7",
          "md5": "77629270017c2add4f9f5bc0c05ea386",
          "sha256": "01fcacac4abced0bcc1cd4a13e4e64ff3a247a501b068c7aedac178e91fba19b"
        },
        "downloads": -1,
        "filename": "pwdhash-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "77629270017c2add4f9f5bc0c05ea386",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6381,
        "upload_time": "2022-12-19T12:14:19",
        "upload_time_iso_8601": "2022-12-19T12:14:19.735988Z",
        "url": "https://files.pythonhosted.org/packages/45/aa/433a40b585a02840953bbc1758960ba515a716c38d994e8225c367a312c7/pwdhash-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "807215a68d90d557115566e40fe285ce0d0c216780cea47591282dc73b367122",
          "md5": "c823ab1ae6aeef596c0c47e1b401cd09",
          "sha256": "e1c52edf5e0a4db7f516481fb8d0f9de1cd54f06cecf64e10856ae61c7dd54ca"
        },
        "downloads": -1,
        "filename": "pwdhash-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c823ab1ae6aeef596c0c47e1b401cd09",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7139,
        "upload_time": "2023-01-05T22:35:41",
        "upload_time_iso_8601": "2023-01-05T22:35:41.154740Z",
        "url": "https://files.pythonhosted.org/packages/80/72/15a68d90d557115566e40fe285ce0d0c216780cea47591282dc73b367122/pwdhash-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af4aabd354e70bc4bad08cd4fe994e4bcabf4fcf8a9f7f75a272b45dc480f08a",
          "md5": "bf65d8dc22178e1e67e9767ac31c8e07",
          "sha256": "5d12177c9b1c3c837b18c563c464ab946fde0878e6f71643c4f00a6f0be81920"
        },
        "downloads": -1,
        "filename": "pwdhash-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bf65d8dc22178e1e67e9767ac31c8e07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6635,
        "upload_time": "2023-01-05T22:35:44",
        "upload_time_iso_8601": "2023-01-05T22:35:44.054884Z",
        "url": "https://files.pythonhosted.org/packages/af/4a/abd354e70bc4bad08cd4fe994e4bcabf4fcf8a9f7f75a272b45dc480f08a/pwdhash-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "807215a68d90d557115566e40fe285ce0d0c216780cea47591282dc73b367122",
        "md5": "c823ab1ae6aeef596c0c47e1b401cd09",
        "sha256": "e1c52edf5e0a4db7f516481fb8d0f9de1cd54f06cecf64e10856ae61c7dd54ca"
      },
      "downloads": -1,
      "filename": "pwdhash-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c823ab1ae6aeef596c0c47e1b401cd09",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7139,
      "upload_time": "2023-01-05T22:35:41",
      "upload_time_iso_8601": "2023-01-05T22:35:41.154740Z",
      "url": "https://files.pythonhosted.org/packages/80/72/15a68d90d557115566e40fe285ce0d0c216780cea47591282dc73b367122/pwdhash-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af4aabd354e70bc4bad08cd4fe994e4bcabf4fcf8a9f7f75a272b45dc480f08a",
        "md5": "bf65d8dc22178e1e67e9767ac31c8e07",
        "sha256": "5d12177c9b1c3c837b18c563c464ab946fde0878e6f71643c4f00a6f0be81920"
      },
      "downloads": -1,
      "filename": "pwdhash-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bf65d8dc22178e1e67e9767ac31c8e07",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6635,
      "upload_time": "2023-01-05T22:35:44",
      "upload_time_iso_8601": "2023-01-05T22:35:44.054884Z",
      "url": "https://files.pythonhosted.org/packages/af/4a/abd354e70bc4bad08cd4fe994e4bcabf4fcf8a9f7f75a272b45dc480f08a/pwdhash-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}