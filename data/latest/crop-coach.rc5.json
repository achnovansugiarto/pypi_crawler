{
  "info": {
    "author": "AgriEdge (Noureddine Ech-chouky)",
    "author_email": "<noureddine.echchuky@um5r.ac.ma>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "\r\n# CropCoach\r\r\n\r\r\nDeveloped by Noureddine Ech-chouky, AgriEdge(c) 2022\r\r\n\r\r\n## Initialing CropCoach with default parameters:\r\r\n\r\r\n```python\r\r\nimport gym\r\r\n\r\r\n# -- Initializing the environment : with the default parameters\r\r\nenv = gym.make(\"CropCoach-v0\")\r\r\n```\r\r\n\r\r\n## Examples of How To Use (Alpha Version)\r\r\n\r\r\nInitiation the environment\r\r\n\r\r\n```python\r\r\n\r\r\nimport gym\r\r\n\r\r\n# -- Initializing the environment : with the default parameters\r\r\nenv = gym.make(\"CropCoach-v0\")\r\r\n\r\r\n# -- Sample from observation space :\r\r\nprint(env.observation_space.sample())\r\r\n\r\r\n# -- Sample from action space :\r\r\nprint(env.action_space.sample())\r\r\n\r\r\n```\r\r\n\r\r\nSimple Rl loop\r\r\n\r\r\n```python\r\r\n\r\r\nimport gym\r\r\nimport CropCoach\r\r\n\r\r\nimport shutup\r\r\n\r\r\nshutup.please()\r\r\n\r\r\n\r\r\n# -- Define the env :\r\r\nenv = gym.make(\"CropCoach-v0\")\r\r\n\r\r\n\r\r\n\r\r\n# -- Test the env : the rewarding mecanism\r\r\nepisodes = 10\r\r\nfor episode in range(1, episodes + 1):\r\r\n    state = env.reset()\r\r\n    done = False\r\r\n    score = 0\r\r\n\r\r\n    while not done:\r\r\n        # env.render()\r\r\n        action = env.action_space.sample()\r\r\n        # action = np.array([1000])\r\r\n        print(f\"----------- action : {action} -------------\\n\")\r\r\n\r\r\n        n_state, reward, done, info = env.step(action)\r\r\n        print(f\"----------- done : {done} -------------\\n\")\r\r\n        print(f\"----------- state : {n_state} -------------\\n\")\r\r\n        print(f\"----------- reward : {reward} -------------\\n\")\r\r\n        score += reward\r\r\n\r\r\n    print(f\"Episode --:{episode} Score --:{score}\")\r\r\n```\r\r\n\r\r\nTrain agents Using stable baselines3 : you need to install stable baselines3 and configure wandb platform, see : [my wofost project](https://github.com/nour3467/Rl-wofost-Agriculture-Recomender)\r\r\n\r\r\n```python\r\r\n\r\r\n# -- Importing dependencies :\r\r\nimport gym\r\r\nfrom CropCoach\r\r\nimport numpy as np\r\r\nimport random\r\r\nimport os\r\r\nimport time\r\r\nfrom pprint import pprint\r\r\nfrom stable_baselines3.common.callbacks import BaseCallback\r\r\nfrom stable_baselines3 import A2C, PPO\r\r\n\r\r\n\r\r\ndef create_list_dir(paths_list):\r\r\n    for path in paths_list:\r\r\n        if not os.path.exists(path):\r\r\n            os.makedirs(path)\r\r\n\r\r\n\r\r\n# logs folder :\r\r\nfrom datetime import datetime\r\r\n\r\r\n# datetime object containing current date and time\r\r\nnow = datetime.now().strftime(\"%a_%b_%Y_%I_%M_%p\")\r\r\n\r\r\n\r\r\nTest_Objective = \"Default_PPO_vs_A2C_MultiDiscrete\"\r\r\n\r\r\nlogs_dir = f\"logs_{Test_Objective}_{now}\"\r\r\nmodels_dir = f\"models_{Test_Objective}_{now}\"\r\r\npaths_list = [logs_dir, models_dir]\r\r\n\r\r\n# create the logs and models folders :\r\r\ncreate_list_dir(paths_list)\r\r\n\r\r\n\r\r\n# # -- Init the env  :\r\r\nenv = gym.make(\"wofost-v0\")\r\r\n\r\r\n# -- Use weights and biases track training and evaluation :\r\r\nimport wandb\r\r\nfrom wandb.integration.sb3 import WandbCallback\r\r\n\r\r\n\r\r\n# -- Init wandb configuration :\r\r\nconfig = {\"policy_type\": \"MlpPolicy\", \"total_timesteps\": 10000}\r\r\n\r\r\nexperiment_name = f\"{Test_Objective}_{now}\"\r\r\n\r\r\n\r\r\nrun = wandb.init(\r\r\n    name=experiment_name,\r\r\n    project=\"Paper_Experiments\",\r\r\n    config=config,\r\r\n    sync_tensorboard=True,  # auto-upload sb3's tensorboard metrics\r\r\n    save_code=True,  # optional\r\r\n)\r\r\n\r\r\n\r\r\nTIMESTEPS = config[\"total_timesteps\"]\r\r\n\r\r\na2c_agent = A2C(\"MlpPolicy\", env, tensorboard_log=logs_dir, verbose=1)\r\r\n\r\r\nppo_agent = PPO(\"MlpPolicy\", env, tensorboard_log=logs_dir, verbose=1)\r\r\n\r\r\n\r\r\nprint(\"Training the A2C agent...\")\r\r\na2c_agent.learn(\r\r\n    total_timesteps=TIMESTEPS,\r\r\n    tb_log_name=\"A2C\",\r\r\n    callback=WandbCallback(\r\r\n        gradient_save_freq=2,\r\r\n        log=\"all\",\r\r\n        verbose=1,\r\r\n    ),\r\r\n)\r\r\na2c_agent.save(f\"{models_dir}/a2c_{TIMESTEPS}\")\r\r\nprint(\"Done training the A2C agent\")\r\r\n\r\r\nprint(\"Training the PPO agent...\")\r\r\nppo_agent.learn(\r\r\n    total_timesteps=TIMESTEPS,\r\r\n    tb_log_name=\"PPO\",\r\r\n    callback=WandbCallback(\r\r\n        gradient_save_freq=2,\r\r\n        log=\"all\",\r\r\n        verbose=1,\r\r\n    ),\r\r\n)\r\r\nppo_agent.save(f\"{models_dir}/ppo_{TIMESTEPS}\")\r\r\nprint(\"Done training the PPO agent\")\r\r\n\r\r\nrun.finish()\r\r\n\r\r\nenv.close()\r\r\n```\r\r\n\r\r\nChanging the default parameters :\r\r\n\r\r\n```python\r\r\n\r\r\nimport gym\r\r\nimport crop_coach\r\r\n\r\r\nimport shutup\r\r\n\r\r\nshutup.please()\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\ncrop_path = \"C:/Users/noureddine/Desktop/default_data/crop/crop.cab\"\r\r\nsite_path = \"C:/Users/noureddine/Desktop/default_data/site/site.cab\"\r\r\nsoil_path = \"C:/Users/noureddine/Desktop/default_data/soil/soil.cab\"\r\r\n\r\r\n\r\r\n\r\r\nargs={\r\r\n        \"files_paths\": {\r\r\n            \"site\":site_path, \"soil\":soil_path, \"crop\":crop_path\r\r\n            },\r\r\n        \"sample_year\":True,\r\r\n        \"Agromanager_dict\":{\r\r\n            \"crop_name\": \"wheat\",\"crop_variety\": \"Winter_wheat_101\",\"campaign_start_date\": \"-01-01\",\"crop_start_type\":\"emergence\",\"emergence_date\": \"-03-31\",\"crop_end_type\": \"harvest\",\"harvest_date\": \"-08-11\", \"max_duration\": 300\r\r\n        },\r\r\n        \"Costs_dict\": {\"Irrigation\": 150, \"N\": 8, \"P\": 8.5, \"K\": 7, \"Selling\": 2.5},\r\r\n        \"Discount_factors_dict\": {\"Irrigation\": 1, \"N\": 1, \"P\": 1, \"K\": 1},\r\r\n        \"year\": 2019,\r\r\n        \"years_count\": 1,\r\r\n    }\r\r\n\r\r\n# -- Define the env :\r\r\nenv = gym.make(\"CropCoach-v0\", **args)\r\r\n\r\r\n# -- Test the env : the rewarding mecanism\r\r\nepisodes = 10\r\r\nfor episode in range(1, episodes + 1):\r\r\n    state = env.reset()\r\r\n    done = False\r\r\n    score = 0\r\r\n\r\r\n    while not done:\r\r\n        env.render()\r\r\n        action = env.action_space.sample()\r\r\n        # action = np.array([1000])\r\r\n        print(f\"----------- action : {action} -------------\\n\")\r\r\n\r\r\n        n_state, reward, done, info = env.step(action)\r\r\n        print(f\"----------- done : {done} -------------\\n\")\r\r\n        print(f\"----------- state : {n_state} -------------\\n\")\r\r\n        print(f\"----------- reward : {reward} -------------\\n\")\r\r\n        score += reward\r\r\n\r\r\n    print(f\"Episode --:{episode} Score --:{score}\")\r\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,Reinforcement learning,gym environment,pcse,crop management,precision agriculture,wofost",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "crop-coach",
    "package_url": "https://pypi.org/project/crop-coach/",
    "platform": null,
    "project_url": "https://pypi.org/project/crop-coach/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/crop-coach/2.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "crop_coach : A crop growth simulation model turn into OpenAI Gym environment",
    "version": "2.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16961786,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d40554095ead1f0d9e22cefa25462a026dc27b6909b97bce850fb5a2ec5cb85",
          "md5": "737d4d785ce605e07faa824e090e19e3",
          "sha256": "4d05a1d9e0cf0677ec5f41edd1809b7af27e21da2d41f8d267409e2ae59cfa10"
        },
        "downloads": -1,
        "filename": "crop_coach-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "737d4d785ce605e07faa824e090e19e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22029,
        "upload_time": "2023-02-20T21:31:28",
        "upload_time_iso_8601": "2023-02-20T21:31:28.533768Z",
        "url": "https://files.pythonhosted.org/packages/1d/40/554095ead1f0d9e22cefa25462a026dc27b6909b97bce850fb5a2ec5cb85/crop_coach-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8251d8f07b9ef3c025059648d9a2272cb6bed8832e4154969b573901cb04380d",
          "md5": "ffb1cbe14647b16f42c18ac9bf306e8f",
          "sha256": "2e8df111f43842fc5a124dc46f5979406dfa72359b15106dda816ecc05893f05"
        },
        "downloads": -1,
        "filename": "crop_coach-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ffb1cbe14647b16f42c18ac9bf306e8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22081,
        "upload_time": "2023-02-21T14:22:45",
        "upload_time_iso_8601": "2023-02-21T14:22:45.865701Z",
        "url": "https://files.pythonhosted.org/packages/82/51/d8f07b9ef3c025059648d9a2272cb6bed8832e4154969b573901cb04380d/crop_coach-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f041780ba08568d8cefc09fb82d9bbb40573d5354af91b69abed675bf279555",
          "md5": "651b53c4747e6f731b227d8f564e4bd2",
          "sha256": "cb32a1d280e346102730da2512f7786427b7a469f316cfac8d162e428acabb01"
        },
        "downloads": -1,
        "filename": "crop_coach-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "651b53c4747e6f731b227d8f564e4bd2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22122,
        "upload_time": "2023-02-21T14:53:20",
        "upload_time_iso_8601": "2023-02-21T14:53:20.717669Z",
        "url": "https://files.pythonhosted.org/packages/0f/04/1780ba08568d8cefc09fb82d9bbb40573d5354af91b69abed675bf279555/crop_coach-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0f6e185abc0bb2c84d2aba496e2c73be340c67707e7134129ebd9c81998f108",
          "md5": "bcda4933a551fc01ea918878e106f435",
          "sha256": "600ef0f142d174dd62e8f4ab3de9dc9fa0eeae0a569ab7ba2b7f0475dae6c84c"
        },
        "downloads": -1,
        "filename": "crop_coach-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bcda4933a551fc01ea918878e106f435",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22119,
        "upload_time": "2023-02-21T15:21:46",
        "upload_time_iso_8601": "2023-02-21T15:21:46.427539Z",
        "url": "https://files.pythonhosted.org/packages/c0/f6/e185abc0bb2c84d2aba496e2c73be340c67707e7134129ebd9c81998f108/crop_coach-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0049bc61fd486a35d7457668f790b680bc96d615da7df6d37f3abde83f27399",
          "md5": "33e153961c95f41117c29443c25058d1",
          "sha256": "98954eb83b2f8e179ba071414e40307086ec4b3d53d7ab76276f303ad4f54e85"
        },
        "downloads": -1,
        "filename": "crop_coach-2.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "33e153961c95f41117c29443c25058d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22115,
        "upload_time": "2023-02-21T15:26:02",
        "upload_time_iso_8601": "2023-02-21T15:26:02.366693Z",
        "url": "https://files.pythonhosted.org/packages/a0/04/9bc61fd486a35d7457668f790b680bc96d615da7df6d37f3abde83f27399/crop_coach-2.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0049bc61fd486a35d7457668f790b680bc96d615da7df6d37f3abde83f27399",
        "md5": "33e153961c95f41117c29443c25058d1",
        "sha256": "98954eb83b2f8e179ba071414e40307086ec4b3d53d7ab76276f303ad4f54e85"
      },
      "downloads": -1,
      "filename": "crop_coach-2.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "33e153961c95f41117c29443c25058d1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22115,
      "upload_time": "2023-02-21T15:26:02",
      "upload_time_iso_8601": "2023-02-21T15:26:02.366693Z",
      "url": "https://files.pythonhosted.org/packages/a0/04/9bc61fd486a35d7457668f790b680bc96d615da7df6d37f3abde83f27399/crop_coach-2.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}