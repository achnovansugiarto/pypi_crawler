{
  "info": {
    "author": "Robert Tjarko Lange",
    "author_email": "robertlange0@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# Lightweight Cluster/Cloud VM Job Management üöÄ\n[![Pyversions](https://img.shields.io/pypi/pyversions/mle-scheduler.svg?style=flat-square)](https://pypi.python.org/pypi/mle-scheduler)\n[![PyPI version](https://badge.fury.io/py/mle-scheduler.svg)](https://badge.fury.io/py/mle-scheduler)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![codecov](https://codecov.io/gh/mle-infrastructure/mle-scheduler/branch/main/graph/badge.svg)](https://codecov.io/gh/mle-infrastructure/mle-scheduler)\n[![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/mle-infrastructure/mle-scheduler/blob/main/examples/getting_started.ipynb)\n<a href=\"https://github.com/mle-infrastructure/mle-scheduler/blob/main/docs/logo_transparent.png?raw=true\"><img src=\"https://github.com/mle-infrastructure/mle-scheduler/blob/main/docs/logo_transparent.png?raw=true\" width=\"200\" align=\"right\" /></a>\n\nAre you looking for a tool to manage your training runs locally, on [Slurm](https://slurm.schedmd.com/)/[Open Grid Engine](http://gridscheduler.sourceforge.net/documentation.html) clusters, SSH servers or [Google Cloud Platform VMs](https://cloud.google.com/gcp/)? `mle-scheduler` provides a lightweight API to launch and monitor job queues. It smoothly orchestrates simultaneous runs for different configurations and/or random seeds. It is meant to reduce boilerplate and to make job resource specification intuitive. It comes with two core pillars:\n\n- **`MLEJob`**: Launches and monitors a single job on a resource (Slurm, Open Grid Engine, GCP, SSH, etc.).\n- **`MLEQueue`**: Launches and monitors a queue of jobs with different training configurations and/or seeds.\n\nFor a quickstart check out the [notebook blog](https://github.com/mle-infrastructure/mle-hyperopt/blob/main/examples/getting_started.ipynb) or the example scripts üìñ\n\n| [![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/mle-infrastructure/mle-scheduler/blob/main/examples/getting_started.ipynb)| [Local](https://github.com/mle-infrastructure/mle-scheduler/blob/main/examples/run_local.py) | [Slurm](https://github.com/mle-infrastructure/mle-scheduler/blob/main/examples/run_cluster.py) | [Grid Engine](https://github.com/mle-infrastructure/mle-scheduler/blob/main/examples/run_cluster.py) | [SSH](https://github.com/mle-infrastructure/mle-scheduler/blob/main/examples/run_ssh.py) | [GCP](https://github.com/mle-infrastructure/mle-scheduler/blob/main/examples/run_gcp.py) |\n|:----: |:----:|:----: | :----: | :----:| :----:|\n\n<a href=\"https://github.com/mle-infrastructure/mle-scheduler/blob/main/docs/mle_scheduler_structure.png?raw=true\"><img src=\"https://github.com/mle-infrastructure/mle-scheduler/blob/main/docs/mle_scheduler_structure.png?raw=true\" width=\"850\" align=\"center\" /></a>\n\n## Installation ‚è≥\n\nA PyPI installation is available via:\n\n```\npip install mle-scheduler\n```\n\nIf you want to get the most recent commit, please install directly from the repository:\n\n```\npip install git+https://github.com/mle-infrastructure/mle-hyperopt.git@main\n```\n\n## Managing a Single Job with `MLEJob` Locally üöÄ\n\n```python\nfrom mle_scheduler import MLEJob\n\n# python train.py -config base_config_1.yaml -exp_dir logs_single -seed_id 1\njob = MLEJob(\n    resource_to_run=\"local\",\n    job_filename=\"train.py\",\n    config_filename=\"base_config_1.yaml\",\n    experiment_dir=\"logs_single\",\n    seed_id=1\n)\n\n_ = job.run()\n```\n\n## Managing a Queue of Jobs with `MLEQueue` Locally üöÄ...üöÄ\n\n```python\nfrom mle_scheduler import MLEQueue\n\n# python train.py -config base_config_1.yaml -seed 0 -exp_dir logs_queue/<date>_base_config_1\n# python train.py -config base_config_1.yaml -seed 1 -exp_dir logs_queue/<date>_base_config_1\n# python train.py -config base_config_2.yaml -seed 0 -exp_dir logs_queue/<date>_base_config_2\n# python train.py -config base_config_2.yaml -seed 1 -exp_dir logs_queue/<date>_base_config_2\nqueue = MLEQueue(\n    resource_to_run=\"local\",\n    job_filename=\"train.py\",\n    config_filenames=[\"base_config_1.yaml\",\n                      \"base_config_2.yaml\"],\n    random_seeds=[0, 1],\n    experiment_dir=\"logs_queue\"\n)\n\nqueue.run()\n```\n\n## Launching Slurm Cluster-Based Jobs üêí\n\n```python\n# Each job requests 5 CPU cores & 1 V100S GPU & loads CUDA 10.0\njob_args = {\n    \"partition\": \"<SLURM_PARTITION>\",  # Partition to schedule jobs on\n    \"env_name\": \"mle-toolbox\",  # Env to activate at job start-up\n    \"use_conda_venv\": True,  # Whether to use anaconda venv\n    \"num_logical_cores\": 5,  # Number of requested CPU cores per job\n    \"num_gpus\": 1,  # Number of requested GPUs per job\n    \"gpu_type\": \"V100S\",  # GPU model requested for each job\n    \"modules_to_load\": \"nvidia/cuda/10.0\"  # Modules to load at start-up\n}\n\nqueue = MLEQueue(\n    resource_to_run=\"slurm-cluster\",\n    job_filename=\"train.py\",\n    job_arguments=job_args,\n    config_filenames=[\"base_config_1.yaml\",\n                      \"base_config_2.yaml\"],\n    experiment_dir=\"logs_slurm\",\n    random_seeds=[0, 1]\n)\nqueue.run()\n```\n\n## Launching GridEngine Cluster-Based Jobs üêò\n\n```python\n# Each job requests 5 CPU cores & 1 V100S GPU w. CUDA 10.0 loaded\njob_args = {\n    \"queue\": \"<GRID_ENGINE_QUEUE>\",  # Queue to schedule jobs on\n    \"env_name\": \"mle-toolbox\",  # Env to activate at job start-up\n    \"use_conda_venv\": True,  # Whether to use anaconda venv\n    \"num_logical_cores\": 5,  # Number of requested CPU cores per job\n    \"num_gpus\": 1,  # Number of requested GPUs per job\n    \"gpu_type\": \"V100S\",  # GPU model requested for each job\n    \"gpu_prefix\": \"cuda\"  #$ -l {gpu_prefix}=\"{num_gpus}\"\n}\n\nqueue = MLEQueue(\n    resource_to_run=\"sge-cluster\",\n    job_filename=\"train.py\",\n    job_arguments=job_args,\n    config_filenames=[\"base_config_1.yaml\",\n                      \"base_config_2.yaml\"],\n    experiment_dir=\"logs_grid_engine\",\n    random_seeds=[0, 1]\n)\nqueue.run()\n```\n\n## Launching SSH Server-Based Jobs ü¶ä\n\n```python\nssh_settings = {\n    \"user_name\": \"<SSH_USER_NAME>\",  # SSH server user name\n    \"pkey_path\": \"<PKEY_PATH>\",  # Private key path (e.g. ~/.ssh/id_rsa)\n    \"main_server\": \"<SSH_SERVER>\",  # SSH Server address\n    \"jump_server\": '',  # Jump host address\n    \"ssh_port\": 22,  # SSH port\n    \"remote_dir\": \"mle-code-dir\",  # Dir to sync code to on server\n    \"start_up_copy_dir\": True,  # Whether to copy code to server\n    \"clean_up_remote_dir\": True  # Whether to delete remote_dir on exit\n}\n\njob_args = {\n    \"env_name\": \"mle-toolbox\",  # Env to activate at job start-up\n    \"use_conda_venv\": True  # Whether to use anaconda venv\n}\n\nqueue = MLEQueue(\n    resource_to_run=\"ssh-node\",\n    job_filename=\"train.py\",\n    config_filenames=[\"base_config_1.yaml\",\n                      \"base_config_2.yaml\"],\n    random_seeds=[0, 1],\n    experiment_dir=\"logs_ssh_queue\",\n    job_arguments=job_args,\n    ssh_settings=ssh_settings)\n\nqueue.run()\n```\n\n## Launching GCP VM-Based Jobs ü¶Ñ\n\n```python\ncloud_settings = {\n    \"project_name\": \"<GCP_PROJECT_NAME>\",  # Name of your GCP project\n    \"bucket_name\": \"<GCS_BUCKET_NAME>\", # Name of your GCS bucket\n    \"remote_dir\": \"<GCS_CODE_DIR_NAME>\",  # Name of code dir in bucket\n    \"start_up_copy_dir\": True,  # Whether to copy code to bucket\n    \"clean_up_remote_dir\": True  # Whether to delete remote_dir on exit\n}\n\njob_args = {\n    \"num_gpus\": 0,  # Number of requested GPUs per job\n    \"gpu_type\": None,  # GPU requested e.g. \"nvidia-tesla-v100\"\n    \"num_logical_cores\": 1,  # Number of requested CPU cores per job\n}\n\nqueue = MLEQueue(\n    resource_to_run=\"gcp-cloud\",\n    job_filename=\"train.py\",\n    config_filenames=[\"base_config_1.yaml\",\n                      \"base_config_2.yaml\"],\n    random_seeds=[0, 1],\n    experiment_dir=\"logs_gcp_queue\",\n    job_arguments=job_args,\n    cloud_settings=cloud_settings,\n)\nqueue.run()\n```\n\n### Citing the MLE-Infrastructure ‚úèÔ∏è\n\nIf you use `mle-scheduler` in your research, please cite it as follows:\n\n```\n@software{mle_infrastructure2021github,\n  author = {Robert Tjarko Lange},\n  title = {{MLE-Infrastructure}: A Set of Lightweight Tools for Distributed Machine Learning Experimentation},\n  url = {http://github.com/mle-infrastructure},\n  year = {2021},\n}\n```\n\n## Development üë∑\n\nYou can run the test suite via `python -m pytest -vv tests/`. If you find a bug or are missing your favourite feature, feel free to create an issue and/or start [contributing](CONTRIBUTING.md) ü§ó.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/mle-infrastructure/mle-scheduler/archive/v0.0.6.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mle-infrastructure/mle-scheduler",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mle-scheduler",
    "package_url": "https://pypi.org/project/mle-scheduler/",
    "platform": "any",
    "project_url": "https://pypi.org/project/mle-scheduler/",
    "project_urls": {
      "Download": "https://github.com/mle-infrastructure/mle-scheduler/archive/v0.0.6.tar.gz",
      "Homepage": "https://github.com/mle-infrastructure/mle-scheduler"
    },
    "release_url": "https://pypi.org/project/mle-scheduler/0.0.6/",
    "requires_dist": [
      "numpy",
      "dotmap",
      "rich",
      "google-cloud-storage ; extra == 'examples'",
      "paramiko ; extra == 'examples'",
      "sshtunnel ; extra == 'examples'",
      "scp ; extra == 'examples'",
      "mle-logging ; extra == 'examples'",
      "mle-hyperopt ; extra == 'examples'",
      "google-cloud-storage ; extra == 'full'",
      "paramiko ; extra == 'full'",
      "sshtunnel ; extra == 'full'",
      "scp ; extra == 'full'"
    ],
    "requires_python": ">=3.6",
    "summary": "Machine Learning Experiment Job Scheduler",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17207648,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92289620ba90e75f2c10722475449a9ff3b1e0b71413d83adc85decdeb027f68",
          "md5": "3595b055188dedd54deaa60dc4f3b921",
          "sha256": "d04fd5bfb71c982799b53cfd32fcd6a26efeba1915a60a1d5f8af1d4484de206"
        },
        "downloads": -1,
        "filename": "mle_scheduler-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3595b055188dedd54deaa60dc4f3b921",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17955,
        "upload_time": "2021-11-12T14:18:42",
        "upload_time_iso_8601": "2021-11-12T14:18:42.719439Z",
        "url": "https://files.pythonhosted.org/packages/92/28/9620ba90e75f2c10722475449a9ff3b1e0b71413d83adc85decdeb027f68/mle_scheduler-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0539254cfd8b8a56fdfcad487d2856dea1a59a133d2b4fb642f1ea67efd6a791",
          "md5": "4e695e64ae72151a99c7785078e7dd15",
          "sha256": "5d4b2718b3a515fae96443d41545156eef832aa47699c6526298094b0e72251a"
        },
        "downloads": -1,
        "filename": "mle_scheduler-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e695e64ae72151a99c7785078e7dd15",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17086,
        "upload_time": "2021-11-12T14:18:44",
        "upload_time_iso_8601": "2021-11-12T14:18:44.102068Z",
        "url": "https://files.pythonhosted.org/packages/05/39/254cfd8b8a56fdfcad487d2856dea1a59a133d2b4fb642f1ea67efd6a791/mle_scheduler-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91513d9388b0e9c3214d79ca6e7e17fd3b1512194d4fecf46b81a70e85ae0c9c",
          "md5": "8cfde2d9d3f1fd8e5e2af4e5e0570961",
          "sha256": "d469284b2341f48b84c1e5c734234022ce17ad177e4e3a75cbbfb5b299d63f28"
        },
        "downloads": -1,
        "filename": "mle_scheduler-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cfde2d9d3f1fd8e5e2af4e5e0570961",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17968,
        "upload_time": "2021-11-12T14:39:14",
        "upload_time_iso_8601": "2021-11-12T14:39:14.664143Z",
        "url": "https://files.pythonhosted.org/packages/91/51/3d9388b0e9c3214d79ca6e7e17fd3b1512194d4fecf46b81a70e85ae0c9c/mle_scheduler-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f480c75dfb5d23a68e89c994b4dab83439119430897ab06e26a159636b13e41",
          "md5": "71049b03a6180a06e47bc12fedcf8980",
          "sha256": "0fa994363e2fa2900150c5b4b949e129629922b4fde2cccb435c5058cc6a9eb1"
        },
        "downloads": -1,
        "filename": "mle_scheduler-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "71049b03a6180a06e47bc12fedcf8980",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17102,
        "upload_time": "2021-11-12T14:39:16",
        "upload_time_iso_8601": "2021-11-12T14:39:16.349110Z",
        "url": "https://files.pythonhosted.org/packages/6f/48/0c75dfb5d23a68e89c994b4dab83439119430897ab06e26a159636b13e41/mle_scheduler-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba89a2b67549a55cb005646e617d2ae9d6aaa2d9e6799690406a05886e478a4d",
          "md5": "f7dcb6a8e6e55a9720474fdb9be7f833",
          "sha256": "379528244aa65e79637b76564ad3dbad08da920deb4643893edd29452e951cda"
        },
        "downloads": -1,
        "filename": "mle_scheduler-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7dcb6a8e6e55a9720474fdb9be7f833",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 32070,
        "upload_time": "2021-11-12T14:55:02",
        "upload_time_iso_8601": "2021-11-12T14:55:02.388684Z",
        "url": "https://files.pythonhosted.org/packages/ba/89/a2b67549a55cb005646e617d2ae9d6aaa2d9e6799690406a05886e478a4d/mle_scheduler-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ade143ba5e99af23269ea3972c27f7e362628b447c55720645adffda6fa94825",
          "md5": "97839302fb773b3337cd5962ad4554a6",
          "sha256": "3a50a9c87ef6592bdaba48343c94152308a5710e52b9f4ba3cb37a28840df845"
        },
        "downloads": -1,
        "filename": "mle_scheduler-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "97839302fb773b3337cd5962ad4554a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24960,
        "upload_time": "2021-11-12T14:55:03",
        "upload_time_iso_8601": "2021-11-12T14:55:03.739834Z",
        "url": "https://files.pythonhosted.org/packages/ad/e1/43ba5e99af23269ea3972c27f7e362628b447c55720645adffda6fa94825/mle_scheduler-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "427d7381cf43eca6d8f93961739b947a8707668d54d771feb1fe7a0fa8961050",
          "md5": "2795f34b904277edd1dcd7b3cb3118b7",
          "sha256": "be6d8e62f26f09452d1a160f76b7b5a8f89aaea6696a4e169d2d99e61c511b39"
        },
        "downloads": -1,
        "filename": "mle_scheduler-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2795f34b904277edd1dcd7b3cb3118b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 32475,
        "upload_time": "2021-12-07T11:36:59",
        "upload_time_iso_8601": "2021-12-07T11:36:59.352969Z",
        "url": "https://files.pythonhosted.org/packages/42/7d/7381cf43eca6d8f93961739b947a8707668d54d771feb1fe7a0fa8961050/mle_scheduler-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ce338231a2f3ba2c249498eaa6d56c6d13b2d9fd1a4cfd3dda0e2eea97bc733",
          "md5": "6244a5e7e0b5491bce530f5df2019a65",
          "sha256": "0ae516158c0aa60d03804990eb050ec566f60d3d6a09af2cf120c5da36499e71"
        },
        "downloads": -1,
        "filename": "mle_scheduler-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6244a5e7e0b5491bce530f5df2019a65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25393,
        "upload_time": "2021-12-07T11:37:01",
        "upload_time_iso_8601": "2021-12-07T11:37:01.138795Z",
        "url": "https://files.pythonhosted.org/packages/7c/e3/38231a2f3ba2c249498eaa6d56c6d13b2d9fd1a4cfd3dda0e2eea97bc733/mle_scheduler-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dcb7c46ef4ff522c9b4f36dbbf7547a2067de86c44baf53630f5c2058599991",
          "md5": "b5c005865d2863c7891513add50182e5",
          "sha256": "9546e37719ad86c81c50dd76cc48d1d53612f1dc4b30542b2e9eae9ab45a729a"
        },
        "downloads": -1,
        "filename": "mle_scheduler-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5c005865d2863c7891513add50182e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 32985,
        "upload_time": "2022-01-05T15:33:16",
        "upload_time_iso_8601": "2022-01-05T15:33:16.107381Z",
        "url": "https://files.pythonhosted.org/packages/5d/cb/7c46ef4ff522c9b4f36dbbf7547a2067de86c44baf53630f5c2058599991/mle_scheduler-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "887e21419d19d8e612c3fe2ecaf58e6221a882550aeb3eff6994937803bcbfa2",
          "md5": "5e277b3feea60fb5953502ef1149b676",
          "sha256": "ed507157bbfbbcd176986031a74cc3de1e6c25e4a19f3e67b698fe0425838b5c"
        },
        "downloads": -1,
        "filename": "mle_scheduler-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5e277b3feea60fb5953502ef1149b676",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25804,
        "upload_time": "2022-01-05T15:33:19",
        "upload_time_iso_8601": "2022-01-05T15:33:19.027417Z",
        "url": "https://files.pythonhosted.org/packages/88/7e/21419d19d8e612c3fe2ecaf58e6221a882550aeb3eff6994937803bcbfa2/mle_scheduler-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b60e5cbe879893fd83be2890485def779796373ef3cd5ec48bc03bb13805105b",
          "md5": "d70fe99c94cb35010916581835a539b8",
          "sha256": "d55358bfa42cd318a75026372bbc5e8e637fefa7bd2044a42861bdcf4f82e957"
        },
        "downloads": -1,
        "filename": "mle_scheduler-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d70fe99c94cb35010916581835a539b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33512,
        "upload_time": "2023-03-08T14:18:12",
        "upload_time_iso_8601": "2023-03-08T14:18:12.186528Z",
        "url": "https://files.pythonhosted.org/packages/b6/0e/5cbe879893fd83be2890485def779796373ef3cd5ec48bc03bb13805105b/mle_scheduler-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee8a968b93a844ab8f0777774220f7396e0ad524bded26b2f1b802689732c467",
          "md5": "0faa297b7c5796af6e6674cf47e412c8",
          "sha256": "60d14a7f2182dd137adcf1210f89e7280a98ad59fd612b63df91a86398947c3c"
        },
        "downloads": -1,
        "filename": "mle_scheduler-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0faa297b7c5796af6e6674cf47e412c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26374,
        "upload_time": "2023-03-08T14:18:13",
        "upload_time_iso_8601": "2023-03-08T14:18:13.701160Z",
        "url": "https://files.pythonhosted.org/packages/ee/8a/968b93a844ab8f0777774220f7396e0ad524bded26b2f1b802689732c467/mle_scheduler-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b60e5cbe879893fd83be2890485def779796373ef3cd5ec48bc03bb13805105b",
        "md5": "d70fe99c94cb35010916581835a539b8",
        "sha256": "d55358bfa42cd318a75026372bbc5e8e637fefa7bd2044a42861bdcf4f82e957"
      },
      "downloads": -1,
      "filename": "mle_scheduler-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d70fe99c94cb35010916581835a539b8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 33512,
      "upload_time": "2023-03-08T14:18:12",
      "upload_time_iso_8601": "2023-03-08T14:18:12.186528Z",
      "url": "https://files.pythonhosted.org/packages/b6/0e/5cbe879893fd83be2890485def779796373ef3cd5ec48bc03bb13805105b/mle_scheduler-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee8a968b93a844ab8f0777774220f7396e0ad524bded26b2f1b802689732c467",
        "md5": "0faa297b7c5796af6e6674cf47e412c8",
        "sha256": "60d14a7f2182dd137adcf1210f89e7280a98ad59fd612b63df91a86398947c3c"
      },
      "downloads": -1,
      "filename": "mle_scheduler-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "0faa297b7c5796af6e6674cf47e412c8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 26374,
      "upload_time": "2023-03-08T14:18:13",
      "upload_time_iso_8601": "2023-03-08T14:18:13.701160Z",
      "url": "https://files.pythonhosted.org/packages/ee/8a/968b93a844ab8f0777774220f7396e0ad524bded26b2f1b802689732c467/mle_scheduler-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}