{
  "info": {
    "author": "Itai Agmon",
    "author_email": "itai.agmon@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Testing"
    ],
    "description": "pytest-difido\n\n=============\n\n\n\nPyTest plugin for creating flexible and informative test reports\n\n\n\n----\n\n\n\nThis `pytest`_ plugin was generated with `Cookiecutter`_ along with `@hackebrot`_'s `cookiecutter-pytest-plugin`_ template.\n\n\n\n\n\nFeatures\n\n--------\n\n\n\n* Flexible locally generated HTML report on the running machine\n\n* Reports are generated at runtime. No need to wait for test execution to end\n\n* Easily attach files and images to the report\n\n* Works also in remote mode. You can add `Difido server <https://github.com/Top-Q/difido-reports/releases/>`_ that allows publishing reports to central server\n\n* Console reports - Reports to the console in addition to the HTML output mainly for development phase and CI/CD systems\n\n* Extensible - Allows to implement and add additional reporters\n\n\n\n\n\nRequirements\n\n------------\n\n\n\n* PyTest >= 4.0.0\n\n* Python >= 3\n\n\n\n\n\nInstallation\n\n------------\n\n\n\nYou can install \"pytest-difido\" via `pip`_ from `PyPI`_::\n\n\n\n    $ pip install pytest-difido\n\n\n\n\n\n\n\nUsage\n\n-----\n\n\n\nTo use the report, add the report fixture to your test cases. You can report simple message, links, HTML elements and more\n\n\n\n..  code-block:: python\n\n\n\n    def test_messaging(report):\n\n        # Simple message will be added to the report\n\n        report.that(\"Simple report message\")\n\n        # link to Google\n\n        report.link(title='Google', link=r'http:\\\\www.google.com')\n\n\n\n        # Message will be hidden inside toggle element\n\n        report.start_level(\"start toggle\")\n\n        report.that(\"In toggle\")\n\n        report.stop_level()\n\n\n\n        # Message will appear in bold font\n\n        report.step(\"bold message\")\n\n\n\n        # HTML element will be added to the report\n\n        report.html(\"Table\", \"\"\"\n\n            <table>\n\n          <tr>\n\n            <th>Company</th>\n\n            <th>Contact</th>\n\n          </tr>\n\n          <tr>\n\n            <td>ACME Corporation</td>\n\n            <td>Road Bumper</td>\n\n          </tr>\n\n          <tr>\n\n            <td>DOLO Inc</td>\n\n            <td>Wired Coyote</td>\n\n          </tr>\n\n        </table>\n\n            \"\"\")\n\n\n\nFiles and images can be attached to the HTML report. The files are copied to the local and remote reports. \n\n\n\n..  code-block:: python\n\n\n\n    def test_files(report):\n\n        # File will be copied and attached to the report\n\n        report.file(file_path=os.path.join(\"resources\", \"some_file.txt\"), description=\"My text file\")\n\n        # Image will added with thumbnail\n\n        report.img(img_path=os.path.join(\"resources\", \"cat.jpg\"), description=\"Cats are awesome\")\n\n\n\nProperties can be added to the suite or to each test. The properties are disaplyed in the report and, if ElasticSearch integration is enabled, can be searched.\n\n\n\n..  code-block:: python\n\n\n\n    def test_add_properties(report):\n\n        # Property will be added to the execution\n\n        report.add_execution_properties(\"int_Execution\", \"66\")\n\n\n\n        # Property will be added to the current running test\n\n        report.add_test_property(\"double_testProp\", \"1.56\")\n\n\n\nIf you prefer to use to report without fixtures, or if you want to use it from places other then your test cases, you can intantiate the `Report` class. \n\nThe 'Report' class is implemented as singleton so you will always get the same instance\n\n\n\n..  code-block:: python\n\n\n\n    def test_report_without_fixture():\n\n        \"\"\"\n\n        If you don't want to get the reporter as fixture or if you want to use it not from test method\n\n        you can just instantiate the Report class. The Report class is implemented as Singleton\n\n        \"\"\"\n\n        from difido.report_manager import Report\n\n        report = Report()\n\n        report.that(\"very important message\")\n\n\n\nServer Installation\n\n--------------------\n\n\n\nThis step is **not** mandatory. Local reports will be generated also without the Difido server. Follow this step only if you wish to \n\nhave central server for publishing test results. If all you need is local reports that will be generated on the running machine, skip this step\n\n\n\n\n\n* Download the latest Difido server ZIP file from the `Difido releases`_ page\n\n* Extract the content of the file\n\n* Run the '[root]/bin/start.bat' or '[root]/bin/start.sh' file according to your OS. \n\n* Set the host and port in the client configuration as shown in the next section\n\n* Add the 'difido.reporters.RemoteReporter' to the 'df_reporters' list in the configuration. More information about reporters can be found in the 'Reporters' section\n\n\n\nYou can access the server from your browser (E.G http://localhost:8080/). For more information please refer to the `Difido server Wiki page`_\n\n\n\n\n\nConfiguration\n\n-------------\n\n\n\nYou can configure the reporter from the `pytest.ini` file or from the command line.\n\nIn the case where a parameter is defined using both methods, the value defined from the command line takes precedence\n\n\n\npytest.ini examples\n\n\n\n..  code-block:: ini\n\n\n\n    [pytest]\n\n    ; Host or ip of Difido server. Default localhost\n\n    df_host = 192.168.0.13\n\n    ; Port of Difido server. Default 8080\n\n    df_port = 8090\n\n    ; Result folder for HTML and console reports. Default is current directory\n\n    df_output_folder = /etc/log/\n\n    ; Reporters are defined in the following comma-separated list\n\n    df_reporters = difido.reporters.LocalReporter,difido.reporters.RemoteReporter,difido.reporters.ConsoleReporter\n\n\n\nCommand line example\n\n\n\n..  code-block:: ini\n\n\n\n    $ pytest .\\tests\\test_report_examples.py --df_host=192.168.10.1 --df_port=8090\n\n\n\n\n\n**Configuration Properties**\n\n\n\n* **df_output_folder** - Result folder for HTML and console reports (default .)\n\n* **df_host**          - Host or ip of Difido server (default localhost)\n\n* **df_port**          - Difido server port (default 8080)\n\n* **df_reporters**     - Comma-separated list of reporter classes. The all reporters recieves the event from the report manager\n\n* **df_description**   - Description of test execution as shown in the Difido server\n\n\n\nReporters\n\n---------\n\n\n\nReporters are Python classes that translates the events recieved from the tests and generates a single report format.\n\nThe plugin currently includes three types of reporters:\n\n\n\n* **difido.reporters.LocalReporter** - Generates local HTML reports to the repors output folder\n\n* **difido.reporters.RemoteReporter** - Pulishes results to the Difido server\n\n* **difido.reporters.ConsoleReporter** - Writes to the conole. At the end of the run the output is also copied to a file in the reports output folder.\n\n\n\nYou can decide which reporters you want to enabled by adding or removing the classes from the 'df_reporters' list. \n\nBy default, only the 'LocalReporter' and 'ConsoleReporter' are included in the list. To use the remote reporter, for example, you will need to add it by configuring the 'df_reporters' as following:\n\n\n\n..  code-block:: ini\n\n\n\n  df_reporters = difido.reporters.LocalReporter,difido.reporters.RemoteReporter,difido.reporters.ConsoleReporter\n\n\n\nYou can also implement your own reporter and add it to the list. \n\n\n\nContributing\n\n------------\n\nContributions are very welcome. Tests can be run with `tox`_, please ensure\n\nthe coverage at least stays the same before you submit a pull request.\n\n\n\nLicense\n\n-------\n\n\n\nDistributed under the terms of the `Apache Software License 2.0`_ license, \"pytest-difido\" is free and open source software\n\n\n\n\n\nIssues\n\n------\n\n\n\nIf you encounter any problems, please `file an issue`_ along with a detailed description.\n\n\n\n.. _`Cookiecutter`: https://github.com/audreyr/cookiecutter\n\n.. _`@hackebrot`: https://github.com/hackebrot\n\n.. _`MIT`: http://opensource.org/licenses/MIT\n\n.. _`BSD-3`: http://opensource.org/licenses/BSD-3-Clause\n\n.. _`GNU GPL v3.0`: http://www.gnu.org/licenses/gpl-3.0.txt\n\n.. _`Apache Software License 2.0`: http://www.apache.org/licenses/LICENSE-2.0\n\n.. _`cookiecutter-pytest-plugin`: https://github.com/pytest-dev/cookiecutter-pytest-plugin\n\n.. _`file an issue`: https://github.com/Top-Q/difido-reports/issues\n\n.. _`pytest`: https://github.com/pytest-dev/pytest\n\n.. _`tox`: https://tox.readthedocs.io/en/latest/\n\n.. _`pip`: https://pypi.org/project/pip/\n\n.. _`PyPI`: https://pypi.org/project\n\n.. _`Difido releases`: https://github.com/Top-Q/difido-reports/releases/\n\n.. _`Difido server Wiki page`: https://github.com/Top-Q/difido-reports/wiki/The-Difido-Server\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Top-Q/difido-reports/tree/master/binders/difido-pytest-plugin/pytest-difido",
    "keywords": "",
    "license": "Apache Software License 2.0",
    "maintainer": "Itai Agmon",
    "maintainer_email": "itai.agmon@gmail.com",
    "name": "pytest-difido",
    "package_url": "https://pypi.org/project/pytest-difido/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytest-difido/",
    "project_urls": {
      "Homepage": "https://github.com/Top-Q/difido-reports/tree/master/binders/difido-pytest-plugin/pytest-difido"
    },
    "release_url": "https://pypi.org/project/pytest-difido/0.5.1/",
    "requires_dist": [
      "pytest (>=4.0.0)",
      "requests (>=2.20.0)",
      "requests-toolbelt (>=0.8.0)",
      "rich (>=10.14.0)"
    ],
    "requires_python": ">=3.5",
    "summary": "PyTest plugin for generating Difido reports",
    "version": "0.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15500025,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "354ef67a1d505f03dec32cfd3d9323f789c9428ba45d2bea1f0a0e5b01030900",
          "md5": "63c569d1045ce1db41e1a0f58ef356d6",
          "sha256": "6f1f749edd9d94492e9a1abbe08bf481fccad3964684c72032ed37d6388f79c6"
        },
        "downloads": -1,
        "filename": "pytest_difido-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63c569d1045ce1db41e1a0f58ef356d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 290882,
        "upload_time": "2022-10-20T16:28:16",
        "upload_time_iso_8601": "2022-10-20T16:28:16.312341Z",
        "url": "https://files.pythonhosted.org/packages/35/4e/f67a1d505f03dec32cfd3d9323f789c9428ba45d2bea1f0a0e5b01030900/pytest_difido-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10d273d0e64444fd78c10f0d01902815fd4eb66af42eac1c937090ddff2cd4e7",
          "md5": "5156afd411ddbd90f03384bf8e6b23ae",
          "sha256": "18416563fa6f26ac34a956a27c7cd17c962acc627fdaa28a27a709f6b222b62f"
        },
        "downloads": -1,
        "filename": "pytest-difido-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5156afd411ddbd90f03384bf8e6b23ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 292987,
        "upload_time": "2022-10-20T16:28:18",
        "upload_time_iso_8601": "2022-10-20T16:28:18.773617Z",
        "url": "https://files.pythonhosted.org/packages/10/d2/73d0e64444fd78c10f0d01902815fd4eb66af42eac1c937090ddff2cd4e7/pytest-difido-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1840ffd2e36b68cac950b4faf851876ebf8e4fb714067bc2bc1318381b3d9663",
          "md5": "d312c89dfb1c456e70ab4c73bce906e3",
          "sha256": "538d411fade9617f347307ffd5f67ca6f13dffe77534af613ad87adbd399d5f4"
        },
        "downloads": -1,
        "filename": "pytest_difido-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d312c89dfb1c456e70ab4c73bce906e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 291311,
        "upload_time": "2022-10-23T08:51:41",
        "upload_time_iso_8601": "2022-10-23T08:51:41.502079Z",
        "url": "https://files.pythonhosted.org/packages/18/40/ffd2e36b68cac950b4faf851876ebf8e4fb714067bc2bc1318381b3d9663/pytest_difido-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae92dc1073814ded80acc4d2dd1f9b9f78760875ef3b83cd70a53875d0971c66",
          "md5": "b18356e7c15cbccb26fc84e4963b35b4",
          "sha256": "b602c008b93e823608af3907b7c6fe8e99a9fcbde21e5db6a2661c4d52c656ef"
        },
        "downloads": -1,
        "filename": "pytest-difido-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b18356e7c15cbccb26fc84e4963b35b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 293727,
        "upload_time": "2022-10-23T08:51:43",
        "upload_time_iso_8601": "2022-10-23T08:51:43.443473Z",
        "url": "https://files.pythonhosted.org/packages/ae/92/dc1073814ded80acc4d2dd1f9b9f78760875ef3b83cd70a53875d0971c66/pytest-difido-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1840ffd2e36b68cac950b4faf851876ebf8e4fb714067bc2bc1318381b3d9663",
        "md5": "d312c89dfb1c456e70ab4c73bce906e3",
        "sha256": "538d411fade9617f347307ffd5f67ca6f13dffe77534af613ad87adbd399d5f4"
      },
      "downloads": -1,
      "filename": "pytest_difido-0.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d312c89dfb1c456e70ab4c73bce906e3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 291311,
      "upload_time": "2022-10-23T08:51:41",
      "upload_time_iso_8601": "2022-10-23T08:51:41.502079Z",
      "url": "https://files.pythonhosted.org/packages/18/40/ffd2e36b68cac950b4faf851876ebf8e4fb714067bc2bc1318381b3d9663/pytest_difido-0.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae92dc1073814ded80acc4d2dd1f9b9f78760875ef3b83cd70a53875d0971c66",
        "md5": "b18356e7c15cbccb26fc84e4963b35b4",
        "sha256": "b602c008b93e823608af3907b7c6fe8e99a9fcbde21e5db6a2661c4d52c656ef"
      },
      "downloads": -1,
      "filename": "pytest-difido-0.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b18356e7c15cbccb26fc84e4963b35b4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 293727,
      "upload_time": "2022-10-23T08:51:43",
      "upload_time_iso_8601": "2022-10-23T08:51:43.443473Z",
      "url": "https://files.pythonhosted.org/packages/ae/92/dc1073814ded80acc4d2dd1f9b9f78760875ef3b83cd70a53875d0971c66/pytest-difido-0.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}