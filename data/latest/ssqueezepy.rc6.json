{
  "info": {
    "author": "John Muradeli",
    "author_email": "john.muradeli@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/16495490/99882586-faa86f80-2c3a-11eb-899c-b3984e98b1c7.png\" width=\"300\"></p>\n\n\n# Synchrosqueezing in Python\n\n[![ssqueezepy CI](https://github.com/OverLordGoldDragon/ssqueezepy/actions/workflows/conda.yml/badge.svg)](https://github.com/OverLordGoldDragon/ssqueezepy/actions/workflows/conda.yml)\n[![codecov](https://codecov.io/gh/OverLordGoldDragon/ssqueezepy/branch/master/graph/badge.svg?token=8L7YPN5N19)](https://codecov.io/gh/OverLordGoldDragon/ssqueezepy)\n[![PyPI version](https://badge.fury.io/py/ssqueezepy.svg)](https://badge.fury.io/py/ssqueezepy)\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/7cee422639034bcebe0f10ca4b95a506)](https://www.codacy.com/gh/OverLordGoldDragon/ssqueezepy/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=OverLordGoldDragon/ssqueezepy&amp;utm_campaign=Badge_Grade)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.5080508.svg)](https://doi.org/10.5281/zenodo.5080508)\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)\n<!-- [![Build Status](https://travis-ci.com/OverLordGoldDragon/ssqueezepy.svg?branch=master)](https://travis-ci.com/OverLordGoldDragon/ssqueezepy)\n[![Coverage Status](https://coveralls.io/repos/github/OverLordGoldDragon/ssqueezepy/badge.svg?branch=master&service=github)](https://coveralls.io/github/OverLordGoldDragon/ssqueezepy) -->\n\nSynchrosqueezing is a powerful _reassignment method_ that focuses time-frequency representations, and allows extraction of instantaneous amplitudes and frequencies. [Friendly overview.](https://dsp.stackexchange.com/a/71399/50076)\n\n\n## Features\n  - Continuous Wavelet Transform (CWT), forward & inverse, and its Synchrosqueezing\n  - Short-Time Fourier Transform (STFT), forward & inverse, and its Synchrosqueezing\n  - Wavelet visualizations and testing suite\n  - Generalized Morse Wavelets\n  - Ridge extraction\n  - Fastest wavelet transforms in Python<sup>1</sup>, beating MATLAB\n\n<sub>1: feel free to open Issue showing otherwise</sub>\n\n\n## Installation\n`pip install ssqueezepy`. Or, for latest version (most likely stable):\n\n`pip install git+https://github.com/OverLordGoldDragon/ssqueezepy`\n\n## GPU & CPU acceleration\n\nMulti-threaded execution is enabled by default (disable via `os.environ['SSQ_PARALLEL'] = '0'`). GPU requires [CuPy >= 8.0.0](https://docs.cupy.dev/en/stable/install.html)\nand [PyTorch >= 1.8.0](https://pytorch.org/get-started/locally/) installed (enable via `os.environ['SSQ_GPU'] = '1'`). `pyfftw` optionally supported for maximum CPU FFT speed.\nSee [Performance guide](https://github.com/OverLordGoldDragon/ssqueezepy/blob/master/ssqueezepy/README.md#performance-guide).\n\n## Benchmarks\n\n[Code](https://github.com/OverLordGoldDragon/ssqueezepy/blob/master/examples/benchmarks.py). Transforms use padding, `float32` precision (`float64` supported), and output shape\n`(300, len(x))`, averaged over 10 runs. `pyfftw` not used, which'd speed 1-thread & parallel further. Benched on author's i7-7700HQ, GTX 1070.\n\n`len(x)`-transform | 1-thread CPU | parallel | gpu | pywavelets | scipy | librosa\n:----------------:|:----------------:|:-----------------:|:-----------------:|:-----------------:|:-----------------:|:-----------------:\n10k-cwt       | 0.126 | 0.0462 | 0.00393 | 3.58 | 0.523 | -\n10k-stft      | 0.108 | 0.0385 | 0.00534 | -    | 0.118 | 0.0909\n10k-ssq_cwt   | 0.372 | 0.148  | 0.00941 | -    | -     | -\n10k-ssq_stft  | 0.282 | 0.147  | 0.0278  | -    | -     | -\n160k-cwt      | 2.99  | 1.25   | 0.0367  | 12.7 | 10.7  | -\n160k-stft     | 1.66  | 0.418  | 0.0643  | -    | 1.93  | 1.38\n160k-ssq_cwt  | 8.38  | 3.16   | 0.0856  | -    | -     | -\n160k-ssq_stft | 4.65  | 2.48   | 0.159   | -    | -     | -\n\n\n## Examples\n\n### 1. Signal recovery under severe noise\n\n![image](https://user-images.githubusercontent.com/16495490/99879090-b9f12c00-2c23-11eb-8a40-2011ce84df61.png)\n\n### 2. Medical: EEG\n\n<img src=\"https://user-images.githubusercontent.com/16495490/99880110-c88f1180-2c2a-11eb-8932-90bf3406a20d.png\">\n\n<img src=\"https://user-images.githubusercontent.com/16495490/150314341-df5c3092-4bef-4895-99ed-2765504329fd.png\">\n\n### 3. Testing suite: CWT vs STFT, reflect-added parallel linear chirp\n\n<img src=\"https://user-images.githubusercontent.com/16495490/150281339-71c0db28-9929-4449-a5e4-5ce52a923468.png\">\n\n### 4. Ridge extraction: cubic polynom. F.M. + pure tone; noiseless & 1.69dB SNR\n\n<img src=\"https://user-images.githubusercontent.com/16495490/107919540-f4e5d000-6f84-11eb-9f86-dbfd34733084.png\">\n\n[More](https://github.com/OverLordGoldDragon/ssqueezepy/tree/master/examples/ridge_extraction)\n\n### 5. Testing suite: GMW vs Morlet, reflect-added hyperbolic chirp (extreme time-loc.)\n\n<img src=\"https://user-images.githubusercontent.com/16495490/107903903-d9b69880-6f63-11eb-9478-8ead016cf6f8.png\">\n\n### 6. Higher-order GMW CWT, reflect-added parallel linear chirp, 3.06dB SNR\n\n<img src=\"https://user-images.githubusercontent.com/16495490/107921072-66bf1900-6f87-11eb-9bf5-afd0a6bbbc4d.png\">\n\n[More examples](https://overlordgolddragon.github.io/test-signals/)\n\n\n## Introspection\n\n`ssqueezepy` is equipped with a visualization toolkit, useful for exploring wavelet behavior across scales and configurations. (Also see [explanations and code](https://dsp.stackexchange.com/a/72044/50076))\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/OverLordGoldDragon/ssqueezepy/master/examples/imgs/anim_tf_morlet20.gif\" width=\"500\">\n</p>\n\n<img src=\"https://raw.githubusercontent.com/OverLordGoldDragon/ssqueezepy/master/examples/imgs/morlet_5vs20_tf.png\">\n<img src=\"https://user-images.githubusercontent.com/16495490/107297978-e6338080-6a8d-11eb-8a11-60bfd6e4137d.png\">\n\n## How's it work?\n\nIn a nutshell, synchrosqueezing exploits _redundancy_ of a time-frequency representation to sparsely localize oscillations, by imposing a _prior_. That is, we _assume_ `x` is well-captured by AM-FM components, e.g. based on our knowledge of the underlying process. We surpass Heisenberg's limitations, but only for a _subset_ of all possible signals. It's also akin to an _attention_ mechanism.\n\nConvolve with localized, analytic kernels\n\n<img src=\"https://raw.githubusercontent.com/OverLordGoldDragon/StackExchangeAnswers/main/SignalProcessing/Q78512%20-%20Wavelet%20Scattering%20explanation/cwt.gif\" width=\"650\">\n\ncompute phase transform, then combine oscillations with a shared rate\n\n<img src=\"https://user-images.githubusercontent.com/16495490/150680428-4a651934-85c6-45e8-8a19-c9b4165e5381.png\" width=\"700\">\n\n<hr>\n\n## Minimal example\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom ssqueezepy import ssq_cwt, ssq_stft\n\ndef viz(x, Tx, Wx):\n    plt.imshow(np.abs(Wx), aspect='auto', cmap='turbo')\n    plt.show()\n    plt.imshow(np.abs(Tx), aspect='auto', vmin=0, vmax=.2, cmap='turbo')\n    plt.show()\n\n#%%# Define signal ####################################\nN = 2048\nt = np.linspace(0, 10, N, endpoint=False)\nxo = np.cos(2 * np.pi * 2 * (np.exp(t / 2.2) - 1))\nxo += xo[::-1]  # add self reflected\nx = xo + np.sqrt(2) * np.random.randn(N)  # add noise\n\nplt.plot(xo); plt.show()\nplt.plot(x);  plt.show()\n\n#%%# CWT + SSQ CWT ####################################\nTwxo, Wxo, *_ = ssq_cwt(xo)\nviz(xo, Twxo, Wxo)\n\nTwx, Wx, *_ = ssq_cwt(x)\nviz(x, Twx, Wx)\n\n#%%# STFT + SSQ STFT ##################################\nTsxo, Sxo, *_ = ssq_stft(xo)\nviz(xo, np.flipud(Tsxo), np.flipud(Sxo))\n\nTsx, Sx, *_ = ssq_stft(x)\nviz(x, np.flipud(Tsx), np.flipud(Sx))\n```\n\nAlso see ridge extraction [README](https://github.com/OverLordGoldDragon/ssqueezepy/tree/master/examples/ridge_extraction).\n\n\n## Learning resources\n\n 1. [Continuous Wavelet Transform, & vs STFT](https://ccrma.stanford.edu/~unjung/mylec/WTpart1.html)\n 2. [Synchrosqueezing's phase transform, intuitively](https://dsp.stackexchange.com/a/72238/50076)\n 3. [Wavelet time & frequency resolution visuals](https://dsp.stackexchange.com/a/72044/50076)\n 4. [Why oscillations in SSQ of mixed sines? Separability visuals](https://dsp.stackexchange.com/a/72239/50076)\n 5. [Zero-padding's effect on spectrum](https://dsp.stackexchange.com/a/70498/50076)\n\n**DSP fundamentals**: I recommend starting with 3b1b's [Fourier Transform](https://youtu.be/spUNpyF58BY), then proceeding with [DSP Guide](https://www.dspguide.com/CH7.PDF) chapters 7-11.\nThe Discrete Fourier Transform lays the foundation of signal processing with real data. Deeper on DFT coefficients [here](https://dsp.stackexchange.com/a/70395/50076), also [3b1b](https://youtu.be/g8RkArhtCc4).\n\n\n## Contributors (noteworthy)\n\n - [David Bondesson](https://github.com/DavidBondesson): ridge extraction (`ridge_extraction.py`; `examples/`: `extracting_ridges.py`, `ridge_extraction/README.md`)\n\n## How to cite\n\nShort form:\n\n> John Muradeli, ssqueezepy, 2020. GitHub repository, https://github.com/OverLordGoldDragon/ssqueezepy/. DOI: 10.5281/zenodo.5080508\n\nBibTeX:\n\n```bibtex\n@article{OverLordGoldDragon2020ssqueezepy,\n  title={ssqueezepy},\n  author={John Muradeli},\n  journal={GitHub. Note: https://github.com/OverLordGoldDragon/ssqueezepy/},\n  year={2020},\n  doi={10.5281/zenodo.5080508},\n}\n```\n\n## References\n\n`ssqueezepy` was originally ported from MATLAB's [Synchrosqueezing Toolbox](https://github.com/ebrevdo/synchrosqueezing), authored by E. Brevdo and G. Thakur [1]. Synchrosqueezed Wavelet Transform was introduced by I. Daubechies and S. Maes [2], which was followed-up in [3], and adapted to STFT in [4]. Many implementation details draw from [5]. Ridge extraction based on [6].\n\n  1. G. Thakur, E. Brevdo, N.-S. Fučkar, and H.-T. Wu. [\"The Synchrosqueezing algorithm for time-varying spectral analysis: robustness properties and new paleoclimate applications\"](https://arxiv.org/abs/1105.0010), Signal Processing 93:1079-1094, 2013.\n  2. I. Daubechies, S. Maes. [\"A Nonlinear squeezing of the Continuous Wavelet Transform Based on Auditory Nerve Models\"](https://services.math.duke.edu/%7Eingrid/publications/DM96.pdf).\n  3. I. Daubechies, J. Lu, H.T. Wu. [\"Synchrosqueezed Wavelet Transforms: a Tool for Empirical Mode Decomposition\"](https://arxiv.org/pdf/0912.2437.pdf), Applied and Computational Harmonic Analysis 30(2):243-261, 2011.\n  4. G. Thakur, H.T. Wu. [\"Synchrosqueezing-based Recovery of Instantaneous Frequency from Nonuniform Samples\"](https://arxiv.org/abs/1006.2533), SIAM Journal on Mathematical Analysis, 43(5):2078-2095, 2011.\n  5. Mallat, S. [\"Wavelet Tour of Signal Processing 3rd ed\"](https://www.di.ens.fr/~mallat/papiers/WaveletTourChap1-2-3.pdf).\n  6. D. Iatsenko, P. V. E. McClintock, A. Stefanovska. [\"On the extraction of instantaneous frequencies from ridges in time-frequency representations of signals\"](https://arxiv.org/pdf/1310.7276.pdf).\n\n\n## License\n\nssqueezepy is MIT licensed, as found in the [LICENSE](https://github.com/OverLordGoldDragon/ssqueezepy/blob/master/LICENSE) file. Some source functions may be under other authorship/licenses; see [NOTICE.txt](https://github.com/OverLordGoldDragon/ssqueezepy/blob/master/NOTICE.txt).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/OverLordGoldDragon/ssqueezepy",
    "keywords": "signal-processing python synchrosqueezing wavelet-transform cwt stft morse-wavelet ridge-extraction time-frequency time-frequency-analysis",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ssqueezepy",
    "package_url": "https://pypi.org/project/ssqueezepy/",
    "platform": "",
    "project_url": "https://pypi.org/project/ssqueezepy/",
    "project_urls": {
      "Homepage": "https://github.com/OverLordGoldDragon/ssqueezepy"
    },
    "release_url": "https://pypi.org/project/ssqueezepy/0.6.3/",
    "requires_dist": [
      "numpy",
      "numba",
      "scipy"
    ],
    "requires_python": "",
    "summary": "Synchrosqueezing, wavelet transforms, and time-frequency analysis in Python",
    "version": "0.6.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12661573,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b35a5a2928a45423daad505b11b275c9bdbe05e95dc61af9f26007489bc3c85",
          "md5": "8fd91befb352f8b5785a0e01b8bf6c0c",
          "sha256": "cfae66991ec4438e47df4cb7df2fd8d2f7a887ee6a6d3f28f06d1cc50b2b203b"
        },
        "downloads": -1,
        "filename": "ssqueezepy-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fd91befb352f8b5785a0e01b8bf6c0c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 47729,
        "upload_time": "2020-12-19T20:55:20",
        "upload_time_iso_8601": "2020-12-19T20:55:20.258517Z",
        "url": "https://files.pythonhosted.org/packages/4b/35/a5a2928a45423daad505b11b275c9bdbe05e95dc61af9f26007489bc3c85/ssqueezepy-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c8736c96894aeab3dac3be2472ab05c3383e02f3a134a34c35f23cb2f8a90d8",
          "md5": "80e5279756aa213e48be17e87eeea18c",
          "sha256": "ccb84c294a7058a15cd7fc38b73dbb9c0a3524a3e4990ae2445ca4496052f72f"
        },
        "downloads": -1,
        "filename": "ssqueezepy-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "80e5279756aa213e48be17e87eeea18c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39801,
        "upload_time": "2020-12-19T20:55:21",
        "upload_time_iso_8601": "2020-12-19T20:55:21.306169Z",
        "url": "https://files.pythonhosted.org/packages/0c/87/36c96894aeab3dac3be2472ab05c3383e02f3a134a34c35f23cb2f8a90d8/ssqueezepy-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5c8ec2db7ce89df54b59d4b1f66aa416259fdcb1b288f8c1b0c297b2a6f2e39",
          "md5": "e90b8fa623f4442ae89b2cc59cbe936e",
          "sha256": "77f702e52c28c35f53e008aaa7a6e24df91eb6e6c3d8a8e108f6a0929b8d896f"
        },
        "downloads": -1,
        "filename": "ssqueezepy-0.5.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e90b8fa623f4442ae89b2cc59cbe936e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 56246,
        "upload_time": "2021-01-14T04:22:40",
        "upload_time_iso_8601": "2021-01-14T04:22:40.120126Z",
        "url": "https://files.pythonhosted.org/packages/d5/c8/ec2db7ce89df54b59d4b1f66aa416259fdcb1b288f8c1b0c297b2a6f2e39/ssqueezepy-0.5.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07aa51fb89ec6ffb52bc216781dd27eacdab2279a5aad2a4b98ea627e1562f5e",
          "md5": "44441da189a338f0740cff8cf6c7bb7d",
          "sha256": "68b6aad8eace0709261ff464a4fd3532e69cdf017f934505f3ec17d040d8aab8"
        },
        "downloads": -1,
        "filename": "ssqueezepy-0.5.5.tar.gz",
        "has_sig": false,
        "md5_digest": "44441da189a338f0740cff8cf6c7bb7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47713,
        "upload_time": "2021-01-14T04:22:41",
        "upload_time_iso_8601": "2021-01-14T04:22:41.384258Z",
        "url": "https://files.pythonhosted.org/packages/07/aa/51fb89ec6ffb52bc216781dd27eacdab2279a5aad2a4b98ea627e1562f5e/ssqueezepy-0.5.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51da409c968b0949e17bd3d0a13fde0717389aa1c4ed3d124c4a02f1c112dca4",
          "md5": "bece67c702d3b8250fab800b9b353bbe",
          "sha256": "88233b151c144fe843495dd69cf46dadfa8b328bd1cce7e4b9fed1ec8fd40b2a"
        },
        "downloads": -1,
        "filename": "ssqueezepy-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bece67c702d3b8250fab800b9b353bbe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 96499,
        "upload_time": "2021-02-19T11:58:53",
        "upload_time_iso_8601": "2021-02-19T11:58:53.214503Z",
        "url": "https://files.pythonhosted.org/packages/51/da/409c968b0949e17bd3d0a13fde0717389aa1c4ed3d124c4a02f1c112dca4/ssqueezepy-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5026996e9c2eeb7ded2aad5ea09ddfd824513018ddfaf5f172ff2a4c38e86a2",
          "md5": "81edbdaa602b0201874557b8f5cc2a97",
          "sha256": "86ede0a43a967eced043af556a6f66b587bbcf1c5e0367fde014d17f4be92296"
        },
        "downloads": -1,
        "filename": "ssqueezepy-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "81edbdaa602b0201874557b8f5cc2a97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 81317,
        "upload_time": "2021-02-19T11:58:54",
        "upload_time_iso_8601": "2021-02-19T11:58:54.527364Z",
        "url": "https://files.pythonhosted.org/packages/f5/02/6996e9c2eeb7ded2aad5ea09ddfd824513018ddfaf5f172ff2a4c38e86a2/ssqueezepy-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12a29e7a9b3e827a2600e4ebb719ade7b6b7269b7b7ef36e221d4f871749fcbc",
          "md5": "b4206c22f2da02d85574115707325db7",
          "sha256": "b26483ddf0496f9aa5585a451a0ebbb9c89aa4a59eed6cded24b22f5d5cf4d53"
        },
        "downloads": -1,
        "filename": "ssqueezepy-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4206c22f2da02d85574115707325db7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 121684,
        "upload_time": "2021-05-05T18:04:55",
        "upload_time_iso_8601": "2021-05-05T18:04:55.233479Z",
        "url": "https://files.pythonhosted.org/packages/12/a2/9e7a9b3e827a2600e4ebb719ade7b6b7269b7b7ef36e221d4f871749fcbc/ssqueezepy-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f50654b82460667d3750fcae316ab1b07c77311fc4140c0065914575456306b",
          "md5": "dae27a8454c45fbb3e03027a03429920",
          "sha256": "6657c4ddc3fa2763dfd4e49b25b36a9990d3a502ed735fd70dac277d93136766"
        },
        "downloads": -1,
        "filename": "ssqueezepy-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dae27a8454c45fbb3e03027a03429920",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 106439,
        "upload_time": "2021-05-05T18:04:56",
        "upload_time_iso_8601": "2021-05-05T18:04:56.610780Z",
        "url": "https://files.pythonhosted.org/packages/1f/50/654b82460667d3750fcae316ab1b07c77311fc4140c0065914575456306b/ssqueezepy-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cd44fabbf4c781f255cf8b4d3d32bd5fb57d37896425bd275fbb008e5e1385c",
          "md5": "5fda8bf50f121c1617d6ef90430f06a0",
          "sha256": "b8988fabf14eedfc6c86454ca0b9bd310bbd598822135b7a32bc9624fda58b10"
        },
        "downloads": -1,
        "filename": "ssqueezepy-0.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5fda8bf50f121c1617d6ef90430f06a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 123426,
        "upload_time": "2022-01-23T15:58:19",
        "upload_time_iso_8601": "2022-01-23T15:58:19.150847Z",
        "url": "https://files.pythonhosted.org/packages/2c/d4/4fabbf4c781f255cf8b4d3d32bd5fb57d37896425bd275fbb008e5e1385c/ssqueezepy-0.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d206e73df482eefe4f4550d3c8938d0509f7213c062c9c96a2cc1439085c676",
          "md5": "72f49c4b3953a8f75e34181cf1b80a4b",
          "sha256": "4a9562e83fe579c463e085fca8b4ce1878ee8dc03a761693ba2fef0c6f74d5ae"
        },
        "downloads": -1,
        "filename": "ssqueezepy-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "72f49c4b3953a8f75e34181cf1b80a4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 115740,
        "upload_time": "2022-01-23T15:58:20",
        "upload_time_iso_8601": "2022-01-23T15:58:20.971133Z",
        "url": "https://files.pythonhosted.org/packages/3d/20/6e73df482eefe4f4550d3c8938d0509f7213c062c9c96a2cc1439085c676/ssqueezepy-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cbe7f5c95facc4844811da30726126fb5af51a4637e126ce2c5b034ebd6f2dc",
          "md5": "72374cc59b56aa104a92b252854b4883",
          "sha256": "baa5db4b4113b6d345ef20a76a6e660e9a44db7c32227586a3ffcc1e16cc405b"
        },
        "downloads": -1,
        "filename": "ssqueezepy-0.6.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72374cc59b56aa104a92b252854b4883",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 125017,
        "upload_time": "2022-01-23T17:18:52",
        "upload_time_iso_8601": "2022-01-23T17:18:52.902898Z",
        "url": "https://files.pythonhosted.org/packages/5c/be/7f5c95facc4844811da30726126fb5af51a4637e126ce2c5b034ebd6f2dc/ssqueezepy-0.6.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f483ee496ee7a64a6d0030c67ce4bc9d57ed724501c5d376665b58a2fae716a",
          "md5": "979cce866f1753e58151321ce0e29311",
          "sha256": "51cb9c1cf03604fe96f2249ddcd6ed149517f1fea353f9b297743bd87b6846df"
        },
        "downloads": -1,
        "filename": "ssqueezepy-0.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "979cce866f1753e58151321ce0e29311",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 116975,
        "upload_time": "2022-01-23T17:18:54",
        "upload_time_iso_8601": "2022-01-23T17:18:54.254665Z",
        "url": "https://files.pythonhosted.org/packages/3f/48/3ee496ee7a64a6d0030c67ce4bc9d57ed724501c5d376665b58a2fae716a/ssqueezepy-0.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5cbe7f5c95facc4844811da30726126fb5af51a4637e126ce2c5b034ebd6f2dc",
        "md5": "72374cc59b56aa104a92b252854b4883",
        "sha256": "baa5db4b4113b6d345ef20a76a6e660e9a44db7c32227586a3ffcc1e16cc405b"
      },
      "downloads": -1,
      "filename": "ssqueezepy-0.6.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "72374cc59b56aa104a92b252854b4883",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 125017,
      "upload_time": "2022-01-23T17:18:52",
      "upload_time_iso_8601": "2022-01-23T17:18:52.902898Z",
      "url": "https://files.pythonhosted.org/packages/5c/be/7f5c95facc4844811da30726126fb5af51a4637e126ce2c5b034ebd6f2dc/ssqueezepy-0.6.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f483ee496ee7a64a6d0030c67ce4bc9d57ed724501c5d376665b58a2fae716a",
        "md5": "979cce866f1753e58151321ce0e29311",
        "sha256": "51cb9c1cf03604fe96f2249ddcd6ed149517f1fea353f9b297743bd87b6846df"
      },
      "downloads": -1,
      "filename": "ssqueezepy-0.6.3.tar.gz",
      "has_sig": false,
      "md5_digest": "979cce866f1753e58151321ce0e29311",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 116975,
      "upload_time": "2022-01-23T17:18:54",
      "upload_time_iso_8601": "2022-01-23T17:18:54.254665Z",
      "url": "https://files.pythonhosted.org/packages/3f/48/3ee496ee7a64a6d0030c67ce4bc9d57ed724501c5d376665b58a2fae716a/ssqueezepy-0.6.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}