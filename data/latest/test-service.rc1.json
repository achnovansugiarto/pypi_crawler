{
  "info": {
    "author": "kylinfish",
    "author_email": "kylinfish@126.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "test-service\n\n简介:\n-----\n\npycharm自带个工具，在菜单Tools --> Test RESTful Web Service可以打开，可视化界面的操作，但不利于参数输入后保存以及后续的复用。\n\n此工具基于以上缺点，直接借助linux工具，结合实际的个人需求与想法，以拦截请求、保存请求、复用的流程进行，为方便个人所用定制。\n\n依赖:\n-----\n    ::\n\n        $ sudo yum install curl\n        $ sudo apt-get install curl\n\n使用:\n-----\n\n    模块介绍：\n    ::\n\n        curl_reader.py:\n            - 读取存放测试脚本的文件, 以命令行的形式执行(指定的行脚本, 指定范围的行脚本).\n            - 利用 linux curl 构建测试脚本, 减少服务端开发过程中, 在测试上对客户端的依赖.\n\n        converge.py:\n            - 从源码文件中生成 消息码/消息文本配置信息.\n\n        @kylin_debug_request:\n            - 测试时, 实时输出POST信息到控制台.\n            - 测试时, 实时输出处理时间到控制台.\n            - 保存测试时每个view函数的执行时间, 用于后续性能分析及程序持续改进.\n\n        curl_builder.py:\n            - 构建生成curl测试请求数据, 以便于后续回归测试, 供curl_reader.py自动化.\n            - 对之前生成报告文件做去重处理.\n\n    配置settings.py修改：\n    ::\n\n        # test-service配置项\n        POST_DATA_PRINT = False  # 是否输入POST数据\n        POST_DATA_SAVED = False  # 是否保存请求痕迹\n        EXEC_TIME_PRINT = False  # 是否输出执行时间\n        SAVE_ROWS_QUEUE = 5     # 最大多少行数保存\n\n        LOGIN_API = ('/user/login/', '/user/join/',)  # 登陆\n        LOGOUT_API = ('/user/logout/',)  # 注销\n\n        TIME_REPORT = os.path.join(BASE_DIR, 'report', 'report_time.md')  # 时间保存文件\n        CURL_REPORT = os.path.join(BASE_DIR, 'report', 'report_curl.md')  # 脚本保存文件\n        CONVERGE_LIST = [os.path.join(BASE_DIR, 'demo', 'views.py')]  # 要查找源文件路径\n\n    django manage.py 命令项如下：\n    ::\n\n        $ python manage.py converge\n        $ python manage.py distinctcurl\n\n        $ python manage.py executecurl\n        $ python manage.py executecurl 5\n        $ python manage.py executecurl 5 10\n\n    @kylin_debug_request 装饰你的views.py函数.\n\ncurl参数:\n---------\n\n    GET 还是 POST 模式, 要看对面服务器的程序设定, curl 默认 GET 模式.\n    \n    -G GET方式传送数据\n    -d POST方式传送数据    \n   \n    -D cookie.txt 写 cookie 存储 cookie 信息从 response 到文件\n    -b cookie.txt 读 cookie 追加 cookie 信息到 request 请求中\n    \n    -B, --use-ascii     Use ASCII/text transfer\n    -S, --show-error    Show error. With -s, make curl show errors when they occur\n    -s, --silent        Silent mode. Don't output anything\n    \n    -x 访问所使proxy服务器及其端口\n    \n    -o 下载文件, 指定文件名\n    -O 按照服务器上的文件名, 自动存在本地\n    \n    -A 宣称访问所使用的自己的浏览器信息  -A \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)\"\n    \n    -e 宣称 referer 地址, 服务器端常用的限制方法, 就是检查 http 访问的 referer, 比如先访问首页, 再访问指定的\n    下载页, 下载页的 referer 地址就是首页地址, 服务器端只要发现对下载页某次访问的 referer 地址不是首页地址, 就\n    可以断定是盗连, 这样就可以骗对方的服务器.\n    \n    FTP 上传文件: \n    curl -T local_file -u name:passwd ftp://url:port/path/\n    \n    HTTP PUT method 上传文件:\n    curl -T local_file http://url:port/path\n    \n    POST 模式下的文件上的文件上传:\n    ::\n\n        <form method=\"POST\" enctype=\"multipar/form-data\" action=\"http://url:port/path\">\n        <input type=file name=upload>\n        <input type=submit name=nick value=\"go\">\n        </form>\n    \n    这样的HTTP表单，用curl进行模拟：\n    curl -F upload=@local_file -F nick=go http://http://url:port/path\n\n\n会话状态的方式:\n---------------\n\n    # 一种方式是如上使用 curl -b 来存储附加.\n\n    # 一种方式是自定义装饰器即时自动登陆, 基于 django/contrib/auth/decorators.py 原文件的改动.\n\n    Add the following items in settings.py:\n    ::\n\n        AUTO_LOGIN_USER = 'kylin'\n        AUTO_LOGIN_PASSWORD = '123456'\n\n    create yours decorators code file.\n    ::\n\n        $ cp [your_paths]/django/contrib/auth/decorators.py [your_project_path]/decorators.py.\n        $ vim [your_project_path]/decorators.py\n\n    find function user_passes_test -> decorator -> _wrapped_view in decorators.py file.\n\n    add code:\n    ::\n\n        auto_login_user = getattr(settings, \"AUTO_LOGIN_USER\", None)\n        auto_login_password = getattr(settings, \"AUTO_LOGIN_PASSWORD\", None)\n\n        if auto_login_user is not None and auto_login_password is not None:\n            user = authenticate(username=auto_login_user, password=auto_login_password)\n            login(request, user)\n            return view_func(request, *args, **kwargs)\n\n    then usage:\n    ::\n\n        try:\n            from yours.decorators import login_required, permission_required\n        except:\n            from django.contrib.auth.decorators import login_required, permission_required\n\n\nChangelog\n=========\n\n1.2 - 14-Feb-2015\n-----------------\n\n* First release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/kylinfish/test-service",
    "keywords": "test-service",
    "license": "MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "test-service",
    "package_url": "https://pypi.org/project/test-service/",
    "platform": "any",
    "project_url": "https://pypi.org/project/test-service/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://bitbucket.org/kylinfish/test-service"
    },
    "release_url": "https://pypi.org/project/test-service/1.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "test-service is a Python package that test web service base on linux curl.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1423601,
  "releases": {
    "1.2": [
      {
        "comment_text": "built for Linux-3.13.0-45-generic-x86_64-with-glibc2.7",
        "digests": {
          "blake2b_256": "1924da0e12a22052604c1c3c46a0360ef061f991f3cc52d0b5c020373503a61b",
          "md5": "5fe34247ba8f390ada3b38915f105581",
          "sha256": "6ca059f5807b77219de705a96706f1dbf64f67feda520c97df053cdf032fd665"
        },
        "downloads": -1,
        "filename": "test-service-1.2.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "5fe34247ba8f390ada3b38915f105581",
        "packagetype": "bdist_dumb",
        "python_version": "any",
        "requires_python": null,
        "size": 22826,
        "upload_time": "2015-02-14T15:34:19",
        "upload_time_iso_8601": "2015-02-14T15:34:19.672723Z",
        "url": "https://files.pythonhosted.org/packages/19/24/da0e12a22052604c1c3c46a0360ef061f991f3cc52d0b5c020373503a61b/test-service-1.2.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d13b29e236bea64b1f77a7549c3e12f86243c366eebaab0bb6910e7e399dbb24",
          "md5": "df10d41826018b11f27f6da605cb5f4a",
          "sha256": "fa31d403e886ca7348b11e6462f30126e77f86b7e98acab8928c636c1eb30fee"
        },
        "downloads": -1,
        "filename": "test_service-1.2-py2.7.egg",
        "has_sig": false,
        "md5_digest": "df10d41826018b11f27f6da605cb5f4a",
        "packagetype": "bdist_egg",
        "python_version": "2.7",
        "requires_python": null,
        "size": 34987,
        "upload_time": "2015-02-14T15:34:26",
        "upload_time_iso_8601": "2015-02-14T15:34:26.290145Z",
        "url": "https://files.pythonhosted.org/packages/d1/3b/29e236bea64b1f77a7549c3e12f86243c366eebaab0bb6910e7e399dbb24/test_service-1.2-py2.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4749d2257294f87b930d46074e898d7db8157d7e133677159a1221fbb49b316",
          "md5": "432a77c83fc1c1a24a59ca1d5e3d5ac5",
          "sha256": "4804c1948f29a9e7760874d9cce65fcfcd3d2dca04985cafe0153e35a98a17e6"
        },
        "downloads": -1,
        "filename": "test-service-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "432a77c83fc1c1a24a59ca1d5e3d5ac5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17140,
        "upload_time": "2015-02-14T15:34:13",
        "upload_time_iso_8601": "2015-02-14T15:34:13.000591Z",
        "url": "https://files.pythonhosted.org/packages/b4/74/9d2257294f87b930d46074e898d7db8157d7e133677159a1221fbb49b316/test-service-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "built for Linux-3.13.0-45-generic-x86_64-with-glibc2.7",
      "digests": {
        "blake2b_256": "1924da0e12a22052604c1c3c46a0360ef061f991f3cc52d0b5c020373503a61b",
        "md5": "5fe34247ba8f390ada3b38915f105581",
        "sha256": "6ca059f5807b77219de705a96706f1dbf64f67feda520c97df053cdf032fd665"
      },
      "downloads": -1,
      "filename": "test-service-1.2.linux-x86_64.tar.gz",
      "has_sig": false,
      "md5_digest": "5fe34247ba8f390ada3b38915f105581",
      "packagetype": "bdist_dumb",
      "python_version": "any",
      "requires_python": null,
      "size": 22826,
      "upload_time": "2015-02-14T15:34:19",
      "upload_time_iso_8601": "2015-02-14T15:34:19.672723Z",
      "url": "https://files.pythonhosted.org/packages/19/24/da0e12a22052604c1c3c46a0360ef061f991f3cc52d0b5c020373503a61b/test-service-1.2.linux-x86_64.tar.gz",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d13b29e236bea64b1f77a7549c3e12f86243c366eebaab0bb6910e7e399dbb24",
        "md5": "df10d41826018b11f27f6da605cb5f4a",
        "sha256": "fa31d403e886ca7348b11e6462f30126e77f86b7e98acab8928c636c1eb30fee"
      },
      "downloads": -1,
      "filename": "test_service-1.2-py2.7.egg",
      "has_sig": false,
      "md5_digest": "df10d41826018b11f27f6da605cb5f4a",
      "packagetype": "bdist_egg",
      "python_version": "2.7",
      "requires_python": null,
      "size": 34987,
      "upload_time": "2015-02-14T15:34:26",
      "upload_time_iso_8601": "2015-02-14T15:34:26.290145Z",
      "url": "https://files.pythonhosted.org/packages/d1/3b/29e236bea64b1f77a7549c3e12f86243c366eebaab0bb6910e7e399dbb24/test_service-1.2-py2.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b4749d2257294f87b930d46074e898d7db8157d7e133677159a1221fbb49b316",
        "md5": "432a77c83fc1c1a24a59ca1d5e3d5ac5",
        "sha256": "4804c1948f29a9e7760874d9cce65fcfcd3d2dca04985cafe0153e35a98a17e6"
      },
      "downloads": -1,
      "filename": "test-service-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "432a77c83fc1c1a24a59ca1d5e3d5ac5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17140,
      "upload_time": "2015-02-14T15:34:13",
      "upload_time_iso_8601": "2015-02-14T15:34:13.000591Z",
      "url": "https://files.pythonhosted.org/packages/b4/74/9d2257294f87b930d46074e898d7db8157d7e133677159a1221fbb49b316/test-service-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}