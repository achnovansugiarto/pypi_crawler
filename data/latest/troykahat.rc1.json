{
  "info": {
    "author": "Amperka LLC",
    "author_email": "igor@amperka.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# TroykaHatPython\n\nRaspberry Pi library for interaction with a Amperka TroykaHAT.\n\n## Enabled I²C Interface\n\nIf you haven’t enabled I²C support in your Raspbian Linux yet, open the terminal and run the\nfollowing commands:\n\n1. Run `sudo raspi-config`.\n2. Use the down arrow to select **Interfacing Options**.\n3. Arrow down to **I²C**.\n4. Select **\\<Yes\\>** when it asks you to enable I²C.\n5. Press **\\<Ok\\>** when it tells you that I²C is enabled.\n6. Use the right arrow to select the **\\<Finish\\>** button.\n7. Reboot your Raspberry Pi to make the I²C interface appear.\n\nAfter the reboot, log in and enter the following command:\n\n```shell\n$ ls /dev/i2c*\n```\n\nThe Pi should respond with:\n\n```shell\n/dev/i2c-1\n```\n\nThis means that the I²C is on.\n\n## Testing I²C Device Connection\n\nFor testing connection Troyka HAT board to Raspberry Pi, useful package I²C scanner.\n\nInstall the I²C scanner.\n\n```shell\nsudo apt-get install i2c-tools\n```\n\nTurn it on.\n\n```shell\nsudo i2cdetect -y 1\n```\n\nIn response, Raspberry Pi will show the addresses of all connected I²C devices. Check if the `0x2A` address is present.\n\n## Installation Library\n\nUse **pip** to install the library:\n\n```shell\npip3 install troykahat\n```\n\n## Quickstart example\n\n```python\nimport troykahat\nfrom time import sleep\n\n\n# Constant for Pin 7 of Wiring PI IO.\n# Connect an LED to this pin.\nPIN_WP_LED = 7\n# Constant for Pin 7 of Analog PI IO.\n# Connect an LED to this pin.\nPIN_AP_LED = 7\n\n\n# Gives access to all the functions of GPIO, that are labeled \"Wiring PI IO\" on the HAT.\n# Check WiringPI library API (https://github.com/WiringPi/WiringPi-Python)\n# for the functions reference.\nwp = troykahat.wiringpi_io()\n# Gives access to all the functions of GPIO, that are labeled \"Analog IO\" on the HAT.\n# Check API.md for the functions reference.\nap = troykahat.analog_io()\n# Configures the LED pin of Wiring PI IO to an output mode.\nwp.pinMode(PIN_WP_LED, wp.OUTPUT)\n# Configures the LED pin of Analog IO to an output mode.\nap.pinMode(PIN_AP_LED, ap.OUTPUT)\n\nwhile True:\n\n    # Sets HIGH voltage level for the LED pin of Wiring PI IO.\n    wp.digitalWrite(PIN_WP_LED, True)\n    # Sets HIGH voltage level for the LED pin of Analog IO.\n    ap.digitalWrite(PIN_AP_LED, True)\n    # Wait 500 ms.\n    sleep(0.5)\n    # Sets HIGH voltage level for the LED pin of Wiring PI IO.\n    wp.digitalWrite(PIN_WP_LED, False)\n    # Sets HIGH voltage level for the LED pin of Analog IO.\n    ap.digitalWrite(PIN_AP_LED, False)\n    # Wait 500 ms.\n    sleep(0.5)\n```\n\nSee full [API reference in API.md](https://github.com/amperka/TroykaHatPython/blob/main/API_en.md)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/amperka/TroykaHatPython",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "troykahat",
    "package_url": "https://pypi.org/project/troykahat/",
    "platform": "",
    "project_url": "https://pypi.org/project/troykahat/",
    "project_urls": {
      "Homepage": "https://github.com/amperka/TroykaHatPython"
    },
    "release_url": "https://pypi.org/project/troykahat/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Raspberry Pi library for interaction with a Amperka TroykaHAT.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11005556,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbcedf57c55772ff3d65058a54ede06c6e6df25da8de5d76f3f1235dee8e174e",
          "md5": "32c6cd8c30289411d48db2ccd8630d45",
          "sha256": "26f50313baad2d342597fcfc8db60cb11773e3e53a5789afcf4a71fd24ae1822"
        },
        "downloads": -1,
        "filename": "troykahat-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "32c6cd8c30289411d48db2ccd8630d45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17408,
        "upload_time": "2021-07-26T13:25:10",
        "upload_time_iso_8601": "2021-07-26T13:25:10.066566Z",
        "url": "https://files.pythonhosted.org/packages/bb/ce/df57c55772ff3d65058a54ede06c6e6df25da8de5d76f3f1235dee8e174e/troykahat-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bbcedf57c55772ff3d65058a54ede06c6e6df25da8de5d76f3f1235dee8e174e",
        "md5": "32c6cd8c30289411d48db2ccd8630d45",
        "sha256": "26f50313baad2d342597fcfc8db60cb11773e3e53a5789afcf4a71fd24ae1822"
      },
      "downloads": -1,
      "filename": "troykahat-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "32c6cd8c30289411d48db2ccd8630d45",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17408,
      "upload_time": "2021-07-26T13:25:10",
      "upload_time_iso_8601": "2021-07-26T13:25:10.066566Z",
      "url": "https://files.pythonhosted.org/packages/bb/ce/df57c55772ff3d65058a54ede06c6e6df25da8de5d76f3f1235dee8e174e/troykahat-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}