{
  "info": {
    "author": "JKlijzing",
    "author_email": "jklijzing@shrp.tv",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Database :: Database Engines/Servers"
    ],
    "description": "Database system that makes life way easier than SQL.\r\n\r\nExample\r\n===\r\n\r\nFirst, we need to make a Clustery file. For this example, we're going to name it `test.clustery`.\r\n\r\nLet's put the following Clustery code in this file:\r\n\r\n```py\r\n+--+\r\n\r\n# These are all the assignments, you can also put variables, functions, classes, etc. Just make sure to use escape characters when using this syntax since the Clustery parser is not perfect and won't ignore comments in terms of this syntax :/\r\n\r\ndb.name = \"Test\" # Database name\r\ndb.use_ids = true # This means we're going to use an ID in every table in this database\r\n\r\n+--+\r\n\r\ndb.set_table ( # Adding a table\r\n    name = \"Users\", # Table name\r\n    keys = {\r\n        \"username\" = t.string, # A string key\r\n        \"password\" = t.string # A string key\r\n    }\r\n)\r\n```\r\n\r\nNow in your Python script, you're going to put this:\r\n\r\n```py\r\nimport clustery\r\n\r\nDATABASE = clustery.Database(\"test.clustery\") # Initialize the database\r\n\r\nDATABASE.set_itemv(\r\n    table    = \"Users\",\r\n    username = \"CoolGuy69\",\r\n    password = \"ImpossibleToHackPassword123\"\r\n) # Create an item in the 'Users' table, with those values\r\n# In a real scenario you would encrypt the password, but this is just to show how to use Clustery\r\n\r\nprint(DATABASE.get_itemv(\"Users\", id=0)) # Get the item in the 'Users' table where the 'id' key is equal to 0\r\n# Remember when we put db.use_ids = true? That made it so that table has  the ID key!\r\n```\r\n\r\nNow this should print:\r\n```py\r\n{'username': 'CoolGuy69', 'password': 'ImpossibleToHackPassword123', 'id': 0}\r\n```\r\n\r\nIt automatically stores the data in `/.clustery/Test.clud`.\r\n\r\nBasic CLI\r\n===\r\n\r\nHere is some code you can use to make a Clustery CLI:\r\n```py\r\nimport clustery\r\nimport argparse\r\n\r\nif __name__ == \"__main__\":\r\n    parser = argparse.ArgumentParser(description=\"Cluster CLI\")\r\n    parser.add_argument(\"database\", metavar=\"db\", type=str, help=\"The path to the .clustery database file\")\r\n    parser.add_argument(\"query\", metavar=\"q\", type=str, help=\"Query to run\", nargs=\"?\", default=None)\r\n\r\n    args = parser.parse_args()\r\n\r\n    DATABASE = clustery.Database(args.database)\r\n\r\n    print(\"Clustery CLI\")\r\n    print(f\"Database: {DATABASE.name} ({args.database})\")\r\n\r\n    if args.query != None:\r\n        print(\"Query: \" + args.query)\r\n        DATABASE.query(args.query)\r\n    else:\r\n        while True:\r\n            query = input(\">>> \")\r\n            try:\r\n                print(DATABASE.query(query))\r\n            except Exception as e:\r\n                print(e)\r\n```\r\n\r\nDocumentation\r\n===\r\n\r\n### Types\r\n\r\n* t.string\r\n* t.int\r\n* t.float\r\n* t.bool\r\n* t.date\r\n* t.datetime\r\n* t.list (You can use `t.list[type]`, e.g. `t.list[t.string]`)\r\n\r\n`Database(path:str)` (`db`)\r\n===\r\n\r\nAll variable assignments must be at the top of your .clustery file in between `+--+` and `+--+`.\r\n\r\nKeep in mind that, when you're doing stuff with the database in side a .clustery file, everything part of the database is part of the `db` variable, so you should put `db.` before every function, run variable assignment, etc.\r\n\r\n### `name:str`\r\nThe name of the database.\r\n\r\n### `clud_path:str`\r\nThe path to the data folder. It is highly recommended that you set this.\r\n\r\n### `enc_key:str`\r\nThis would be the encryption key for your .clud file. It's basically useless.\r\n\r\n### `use_ids:bool`\r\nWhether to use IDs in all tables.\r\n\r\n### `set_table(name:str, keys:str) -> Table`\r\nSets a table as shown in the example.\r\n\r\n### `get_table(table:str) -> Table`\r\nReturns a table by the name.\r\n\r\n### `clear_table(table:str) -> dict`\r\nClears a table and returns it in Dict form (`{}`) for no reason at all.\r\n\r\n### `set_item(table:str, keys:dict) -> dict` (Legacy)\r\nSets an item but instead of through arguments it goes through dict.\r\n\r\n### `set_itemv(table:str, *args, **kwargs) -> dict`\r\nSets an item as shown in the example.\r\n\r\n### `get_item(table:str, key:str, value:Any) -> dict` (Legacy)\r\nGets the item where the key matches the value.\r\n\r\n### `get_itemv(table:str, *args, **kwargs) -> dict`\r\nGets an item as shown in the example.\r\n\r\n### `delete_item(table:str, key:str, value:Any) -> dict` (Legacy)\r\nDoes the same as `get_item` but it deletes it.\r\n\r\n### `delete_itemv(table:str, *args **kwargs) -> dict`\r\nDoes the same as `get_itemv` but it deletes it.\r\n\r\n### `update_item(table:str, key:str, value:Any, new_key:str, new_value:Any) -> dict` (Legacy)\r\nUpdates an item. `table` is the table name, `key` is the key used to find the item, `value` is the value `key` must be, `new_key` is the key to update, and `new_value` is the value `new_key` must be set to.\r\n\r\n### `update_itemv(table:str, item:dict, *args, **kwargs) -> dict`\r\nUpdates an item. `table` is the table name, `item` is the dict of the item (which you can get with `get_itemv`), and then you just put the arguments of the keys you want to change, e.g. `update_itemv(\"Users\", get_itemv(\"Users\", id=0), username=\"BetterUsername\")`\r\n\r\n### `item_count(table:str) -> int`\r\nReturns the item count of a table by name.\r\n\r\n### `load_data() -> dict`\r\nReturns all the data of the database.\r\n\r\n### `save_data(data:dict)`\r\nSets all the data of the database.\r\n\r\n### `query(q:str)`\r\nRuns a query in a string.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "clustery,db,database",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Clustery",
    "package_url": "https://pypi.org/project/Clustery/",
    "platform": null,
    "project_url": "https://pypi.org/project/Clustery/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/Clustery/1.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Database system that makes life way easier than SQL.",
    "version": "1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14800378,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd7e6df1a074374867ec3564e58b78f33ad18d752404ba15f0542edaacb7d88e",
          "md5": "d913cce07a0510fa0b6996c0fe47062e",
          "sha256": "e4386f82b1ccb1fc1a662254bce545cc59a83aa4b23f2c828c0928ce0fc78974"
        },
        "downloads": -1,
        "filename": "Clustery-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d913cce07a0510fa0b6996c0fe47062e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2556,
        "upload_time": "2022-08-17T17:00:54",
        "upload_time_iso_8601": "2022-08-17T17:00:54.967403Z",
        "url": "https://files.pythonhosted.org/packages/fd/7e/6df1a074374867ec3564e58b78f33ad18d752404ba15f0542edaacb7d88e/Clustery-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c915216a1190e1d09edba79404bd2f71106d2c1e036ec1ddca767b9bc02a671",
          "md5": "ba11586e2d02ef579823e650dfd4baa0",
          "sha256": "9a5b32f8be12cea1c1b77163ba4ea894a67b5ceb8e2a066931905ab234f26bfc"
        },
        "downloads": -1,
        "filename": "Clustery-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba11586e2d02ef579823e650dfd4baa0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4141,
        "upload_time": "2022-08-17T19:15:15",
        "upload_time_iso_8601": "2022-08-17T19:15:15.809505Z",
        "url": "https://files.pythonhosted.org/packages/9c/91/5216a1190e1d09edba79404bd2f71106d2c1e036ec1ddca767b9bc02a671/Clustery-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66581da08a63ba0b1762ac6591472cd0f16654f3d57dfcdf75bf6244876a4e17",
          "md5": "5d6c4bf3a47e9283c8a725da633f13aa",
          "sha256": "72ce33253aec254113f459ec19ccea03089de84e5a88642fe58529b6f65660ff"
        },
        "downloads": -1,
        "filename": "Clustery-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5d6c4bf3a47e9283c8a725da633f13aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4132,
        "upload_time": "2022-08-17T19:16:24",
        "upload_time_iso_8601": "2022-08-17T19:16:24.388562Z",
        "url": "https://files.pythonhosted.org/packages/66/58/1da08a63ba0b1762ac6591472cd0f16654f3d57dfcdf75bf6244876a4e17/Clustery-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "536932c6654a467a2ee3274ab95123ec107abcdb6993bc73383c132c511a87e4",
          "md5": "edb2801c5cb50c236865c122b990fb53",
          "sha256": "9a13ac4f60e1024d800e737b8dc54b07f60a06475603878fdcc0599e7226c8aa"
        },
        "downloads": -1,
        "filename": "Clustery-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "edb2801c5cb50c236865c122b990fb53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4548,
        "upload_time": "2022-08-18T10:26:06",
        "upload_time_iso_8601": "2022-08-18T10:26:06.645036Z",
        "url": "https://files.pythonhosted.org/packages/53/69/32c6654a467a2ee3274ab95123ec107abcdb6993bc73383c132c511a87e4/Clustery-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf6ef0d3a8e45dfa927d572a355f51c7007758f1a02515f67ea7f071aec67647",
          "md5": "1d9e9f854ecb6d50396109c3bf7894d5",
          "sha256": "f4cc1fd92ab9153deb817828ef984abbc4fc3675a3336ab2365b4b6c2519d66d"
        },
        "downloads": -1,
        "filename": "Clustery-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1d9e9f854ecb6d50396109c3bf7894d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4577,
        "upload_time": "2022-08-18T10:31:18",
        "upload_time_iso_8601": "2022-08-18T10:31:18.612634Z",
        "url": "https://files.pythonhosted.org/packages/cf/6e/f0d3a8e45dfa927d572a355f51c7007758f1a02515f67ea7f071aec67647/Clustery-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "622c3e9c99ffe1848fdf6b3277d36ea932ea3f2694496327b80391bcbd2df907",
          "md5": "b9c11cd4924ad39fa86393fe57f18ed4",
          "sha256": "4768a88ed9a9ca8cc697e8bc5d99c3be3c0d4cb22958fa1f12c9c6d10804bfda"
        },
        "downloads": -1,
        "filename": "Clustery-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b9c11cd4924ad39fa86393fe57f18ed4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4642,
        "upload_time": "2022-08-18T11:12:33",
        "upload_time_iso_8601": "2022-08-18T11:12:33.135837Z",
        "url": "https://files.pythonhosted.org/packages/62/2c/3e9c99ffe1848fdf6b3277d36ea932ea3f2694496327b80391bcbd2df907/Clustery-1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c4cde2a56ada92fe5850a7ddd8225013cc795d9222504b6e5b99c5058176551",
          "md5": "670dc928f54587c2b68af38fa279469c",
          "sha256": "935b0d1c2a7c676daabe2cbdb9a1ee819a09ccb960aa8bf2093a2dab7929a1c0"
        },
        "downloads": -1,
        "filename": "Clustery-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "670dc928f54587c2b68af38fa279469c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5026,
        "upload_time": "2022-08-18T11:15:09",
        "upload_time_iso_8601": "2022-08-18T11:15:09.020882Z",
        "url": "https://files.pythonhosted.org/packages/8c/4c/de2a56ada92fe5850a7ddd8225013cc795d9222504b6e5b99c5058176551/Clustery-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c4cde2a56ada92fe5850a7ddd8225013cc795d9222504b6e5b99c5058176551",
        "md5": "670dc928f54587c2b68af38fa279469c",
        "sha256": "935b0d1c2a7c676daabe2cbdb9a1ee819a09ccb960aa8bf2093a2dab7929a1c0"
      },
      "downloads": -1,
      "filename": "Clustery-1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "670dc928f54587c2b68af38fa279469c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5026,
      "upload_time": "2022-08-18T11:15:09",
      "upload_time_iso_8601": "2022-08-18T11:15:09.020882Z",
      "url": "https://files.pythonhosted.org/packages/8c/4c/de2a56ada92fe5850a7ddd8225013cc795d9222504b6e5b99c5058176551/Clustery-1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}