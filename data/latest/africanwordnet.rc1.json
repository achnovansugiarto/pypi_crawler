{
  "info": {
    "author": "Joseph Sefara",
    "author_email": "sefaratj@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Human Machine Interfaces",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: General",
      "Topic :: Text Processing :: Indexing",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "# AfricanWordNet: Implementation of WordNets for African languages\n\nThis library extends [OMW](http://compling.hss.ntu.edu.sg/omw/) implemented in [NLTK](https://www.nltk.org/) to add support for the following African languages. \n\n- Sepedi (nso)\n- Xitsonga (tsn)\n- Tshivenda (ven)\n- isiZulu (zul)\n- isiXhosa (xho)\n\n[![License: CC BY-NC-SA 4.0](https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg)](https://creativecommons.org/licenses/by-nc-sa/4.0/) [![GitHub release](https://img.shields.io/github/release/josephsefara/africanwordnet.svg?maxAge=3600)](https://github.com/josephsefara/africanwordnet/releases) [![Wheel](https://img.shields.io/pypi/wheel/africanwordnet.svg?maxAge=3600)](https://pypi.python.org/pypi/africanwordnet) [![python](https://img.shields.io/pypi/pyversions/africanwordnet.svg?maxAge=3600)](https://pypi.org/project/africanwordnet/) [![TotalDownloads](https://pepy.tech/badge/africanwordnet)]\n\n## Requirements\n\n* [Python 3](https://docs.python.org/3.5/)\n* [NLTK](https://www.nltk.org/)\n## Installation\n\n- From Pypi\n  - ```pip install africanwordnet```\n- From source\n  - ```pip install https://github.com/JosephSefara/AfricanWordNet.git```\n\n## Citation Paper\n```\n@inproceedings{sefara2020practical,\n  title={Paper Title},\n  author={Sefara, Tshephisho and Mokgonyane, Tumisho and Marivate, Vukosi},\n  booktitle={Proceedings of the Eleventh Global Wordnet Conference},\n  paages={},\n  year={2020},\n}\n```\n\n## Usage\n\n```python\n>>> from nltk.corpus import wordnet as wn\n>>> import africanwordnet\n\n>>> wn.langs()\n['nso', 'tsn', 'ven', 'zul', 'xho']\n```\n### Setswana WordNet\n\n```python\n>>> wn.synsets('phêpafatsa',lang=('tsn'))\n[Synset('scavenge.v.04'),\n Synset('tidy.v.01'),\n Synset('refine.v.04'),\n Synset('refine.v.03'),\n Synset('purify.v.01'),\n Synset('purge.v.04'),\n Synset('purify.v.02'),\n Synset('clean.v.08'),\n Synset('clean.v.01'),\n Synset('houseclean.v.01')]\n\n>>> wn.lemmas('phêpafatsa', lang='tsn')\n[Lemma('scavenge.v.04.phêpafatsa'),\n Lemma('tidy.v.01.phêpafatsa'),\n Lemma('refine.v.04.phêpafatsa'),\n Lemma('refine.v.03.phêpafatsa'),\n Lemma('purify.v.01.phêpafatsa'),\n Lemma('purge.v.04.phêpafatsa'),\n Lemma('purify.v.02.phêpafatsa'),\n Lemma('clean.v.08.phêpafatsa'),\n Lemma('clean.v.01.phêpafatsa'),\n Lemma('houseclean.v.01.phêpafatsa')]\n\n>>> wn.synset('purify.v.01').lemma_names('tsn')\n['phêpafatsa']\n\n>>> lemma = wn.lemma('purify.v.01.phêpafatsa', lang='tsn')\n>>> whole_lemma.lang()\n'tsn'\n```\n\n### Sepedi WordNet\n\n```python\n>>> wn.synsets('taelo',lang=('nso'))\n[Synset('call.n.12'),\n Synset('mandate.n.03'),\n Synset('command.n.01'),\n Synset('order.n.01'),\n Synset('commission.n.06'),\n Synset('commandment.n.01'),\n Synset('directive.n.01'),\n Synset('injunction.n.01')]\n\n>>> wn.lemmas('taelo', lang='nso')\n[Lemma('call.n.12.taelo'),\n Lemma('mandate.n.03.taelo'),\n Lemma('command.n.01.taelo'),\n Lemma('order.n.01.taelo'),\n Lemma('commission.n.06.taelo'),\n Lemma('commandment.n.01.taelo'),\n Lemma('directive.n.01.taelo'),\n Lemma('injunction.n.01.taelo')]\n\n>>> wn.synset('call.n.12').lemma_names('nso')\n['taelo']\n\n>>> lemma = wn.lemma('call.n.12.taelo', lang='nso')\n>>> whole_lemma.lang()\n'nso'\n```\n\n### isiZulu WordNet\n\n```python\n>>> wn.synsets('iqoqo', lang='zul')\n[Synset('whole.n.02'),\n Synset('conspectus.n.01'),\n Synset('overview.n.01'),\n Synset('sketch.n.03'),\n Synset('compilation.n.01'),\n Synset('collection.n.01'),\n Synset('team.n.02'),\n Synset('set.n.01')]\n\n>>> wn.lemmas('iqoqo', lang='zul')\n[Lemma('whole.n.02.iqoqo'),\n Lemma('conspectus.n.01.iqoqo'),\n Lemma('overview.n.01.iqoqo'),\n Lemma('sketch.n.03.iqoqo'),\n Lemma('compilation.n.01.iqoqo'),\n Lemma('collection.n.01.iqoqo'),\n Lemma('team.n.02.iqoqo'),\n Lemma('set.n.01.iqoqo')]\n\n>>> wn.synset('whole.n.02').lemma_names('zul')\n['iqoqo']\n\n>>> whole_lemma = wn.lemma('whole.n.02.iqoqo', lang='zul')\n>>> whole_lemma.lang()\n'zul'\n```\n\n### isiXhosa WordNet\n\n```python\n>>> wn.synsets('imali',lang=('xho'))\n[Synset('finance.n.03'),\n Synset('wealth.n.04'),\n Synset('capital.n.01'),\n Synset('store.n.02'),\n Synset('credit.n.02'),\n Synset('money.n.01'),\n Synset('currency.n.01'),\n Synset('purse.n.02'),\n Synset('franc.n.01'),\n Synset('cent.n.01')]\n\n>>> wn.lemmas('imali', lang='xho')\n[Lemma('finance.n.03.imali'),\n Lemma('wealth.n.04.imali'),\n Lemma('capital.n.01.imali'),\n Lemma('store.n.02.imali'),\n Lemma('credit.n.02.imali'),\n Lemma('money.n.01.imali'),\n Lemma('currency.n.01.imali'),\n Lemma('purse.n.02.imali'),\n Lemma('franc.n.01.imali'),\n Lemma('cent.n.01.imali')]\n\n>>> wn.synset('wealth.n.04').lemma_names('xho')\n['imali']\n\n>>> lemma = wn.lemma('wealth.n.04.imali', lang='xho')\n>>> lemma.lang()\n'xho'\n```\n\n### Tshivenda WordNet\n\n```python\n>>> wn.synsets('tshifanyiso',lang=('ven'))\n[Synset('picture.n.05'), \n Synset('word_picture.n.01'), \n Synset('portrayal.n.01')]\n\n>>> wn.lemmas('tshifanyiso', lang='ven')\n[Lemma('picture.n.05.tshifanyiso'),\n Lemma('word_picture.n.01.tshifanyiso'),\n Lemma('portrayal.n.01.tshifanyiso')]\n\n>>> wn.synset('picture.n.05').lemma_names('ven')\n['tshifanyiso']\n\n>>> lemma = wn.lemma('picture.n.05.tshifanyiso', lang='ven')\n>>> whole_lemma.lang()\n'ven'\n```\n\n## Find related words\nThe word **taelo** in Sepedi is related to \n\n- tagafalo\n- molao\n- tlhalošo\n\n```python\nwords = set()\nsynsets = wn.synsets('taelo',lang=('nso'))\nfor synset in synsets: # synset is in english\n     for hypo in synset.hyponyms():\n        for lemma in hypo.lemmas(\"nso\"):\n            words.add(lemma.name())\nprint('taelo', '---', words)\n\ntaelo --- {'taelo', 'tagafalo', 'molao', 'tlhalošo'}\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JosephSefara/AfricanWordNet",
    "keywords": "wordnet,python,natural language processing,nlp",
    "license": "MIT",
    "maintainer": "Joseph Sefara",
    "maintainer_email": "sefaratj@gmail.com",
    "name": "africanwordnet",
    "package_url": "https://pypi.org/project/africanwordnet/",
    "platform": "",
    "project_url": "https://pypi.org/project/africanwordnet/",
    "project_urls": {
      "Homepage": "https://github.com/JosephSefara/AfricanWordNet"
    },
    "release_url": "https://pypi.org/project/africanwordnet/0.0.1/",
    "requires_dist": [
      "nltk"
    ],
    "requires_python": ">=3.5.*",
    "summary": "A library for African WordNet.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8748096,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03f43d85ef2a03169d470c0ba746b2d313a3f691423f59692ec45a91f9698ea5",
          "md5": "36311556915334774fc95f67decf9339",
          "sha256": "c978a52cb5a7ffe72f87630a3725a244acd46993ef40b3acf709d620495e436c"
        },
        "downloads": -1,
        "filename": "africanwordnet-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36311556915334774fc95f67decf9339",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.*",
        "size": 5024,
        "upload_time": "2020-11-25T16:46:54",
        "upload_time_iso_8601": "2020-11-25T16:46:54.856326Z",
        "url": "https://files.pythonhosted.org/packages/03/f4/3d85ef2a03169d470c0ba746b2d313a3f691423f59692ec45a91f9698ea5/africanwordnet-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd37176176368105595e22c1d9924bdf018d369005b81679a28089d7495b99e0",
          "md5": "be02ca764f904fb2653fe2293362e56c",
          "sha256": "4c8d4c69493888a628c5ea1090aabbbcce9945dfd55987bdf0fd1432e4b0a8fa"
        },
        "downloads": -1,
        "filename": "africanwordnet-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "be02ca764f904fb2653fe2293362e56c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.*",
        "size": 4534,
        "upload_time": "2020-11-25T16:46:57",
        "upload_time_iso_8601": "2020-11-25T16:46:57.097861Z",
        "url": "https://files.pythonhosted.org/packages/cd/37/176176368105595e22c1d9924bdf018d369005b81679a28089d7495b99e0/africanwordnet-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03f43d85ef2a03169d470c0ba746b2d313a3f691423f59692ec45a91f9698ea5",
        "md5": "36311556915334774fc95f67decf9339",
        "sha256": "c978a52cb5a7ffe72f87630a3725a244acd46993ef40b3acf709d620495e436c"
      },
      "downloads": -1,
      "filename": "africanwordnet-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "36311556915334774fc95f67decf9339",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5.*",
      "size": 5024,
      "upload_time": "2020-11-25T16:46:54",
      "upload_time_iso_8601": "2020-11-25T16:46:54.856326Z",
      "url": "https://files.pythonhosted.org/packages/03/f4/3d85ef2a03169d470c0ba746b2d313a3f691423f59692ec45a91f9698ea5/africanwordnet-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd37176176368105595e22c1d9924bdf018d369005b81679a28089d7495b99e0",
        "md5": "be02ca764f904fb2653fe2293362e56c",
        "sha256": "4c8d4c69493888a628c5ea1090aabbbcce9945dfd55987bdf0fd1432e4b0a8fa"
      },
      "downloads": -1,
      "filename": "africanwordnet-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "be02ca764f904fb2653fe2293362e56c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.*",
      "size": 4534,
      "upload_time": "2020-11-25T16:46:57",
      "upload_time_iso_8601": "2020-11-25T16:46:57.097861Z",
      "url": "https://files.pythonhosted.org/packages/cd/37/176176368105595e22c1d9924bdf018d369005b81679a28089d7495b99e0/africanwordnet-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}