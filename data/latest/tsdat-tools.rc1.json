{
  "info": {
    "author": "",
    "author_email": "Maxwell Levin <24307537+maxwelllevin@users.noreply.github.com>, James McVey <53623232+jmcvey3@users.noreply.github.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# Tsdat Tools\n\nThis repository contains helpful scripts and notes for several tsdat-related tools.\n\nSome tools are available as jupyter notebooks, and others are available as a command-line utility.\n\nTo get access to the command-line utilities, just run:\n\n```shell\npip install tsdat-tools\n```\n\nTo use all the other tools, we recommend cloning this repository.\n\n## Data to Yaml\n\nThe goal of this tool is to reduce the tediousness of writing tsdat configuration files for data that you can already\nread and convert into an `xr.Dataset` object in tsdat. It generates two output files: `dataset.yaml` and\n`retriever.yaml`, which are used by `tsdat` to define metadata and how the input variables should be mapped to output\nvariables.\n\nIf your file is in one of the following formats, this tool can already do this for you. Formats supported out-of-box:\n\n* **`netCDF`**: Files ending with `.nc` or `.cdf` will use the `tsdat.NetCDFReader` class\n* **`csv`**: Files ending with `.csv` will use the `tsdat.CSVReader` class\n* **`parquet`**: Files ending with `.parquet` or `.pq` or `.pqt` will use the `tsdat.ParquetReader` class\n* **`zarr`**: Files/folders ending with `.zarr` will use the `tsdat.ZarrReader` class\n\n### Usage\n\nThen you can run the tool with:\n\n```shell\ntsdat-tools data2yaml path/to/data/file --input-config path/to/current/dataset.yaml\n```\n\nFull usage instructions can be obtained using the `--help` flag:\n\n```shell\n>>> tsdat-tools data2yaml --help\n\nUsage: tsdat-tools data2yaml [OPTIONS] DATAPATH\n\n╭─ Arguments ─────────────────────────────────────────────────────────────────────────────────────────────╮\n│ *    datapath   PATH  Path to the input data file that should be used to generate tsdat configurations. │\n│                       [default: None]                                                                   │\n│                       [required]                                                                        │\n╰─────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n╭─ Options ───────────────────────────────────────────────────────────────────────────────────────────────╮\n│ --outdir                               DIRECTORY                      The path to the directory where   │\n│                                                                       the 'dataset.yaml' and            │\n│                                                                       'retriever.yaml' files should be  │\n│                                                                       written.                          │\n│                                                                       [default: .]                      │\n│ --input-config                         PATH                           Path to a dataset.yaml file to be │\n│                                                                       used in addition to               │\n│                                                                       configurations derived from the   │\n│                                                                       input data file. Configurations   │\n│                                                                       defined here take priority over   │\n│                                                                       auto-detected properties in the   │\n│                                                                       input file.                       │\n│                                                                       [default: None]                   │\n│ --help                                                                Show this message and exit.       │\n╰─────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n```\n\nThis tool is designed to be run in the following workflow:\n\n1. Generate new ingest/pipeline from cookiecutter template (e.g., `make cookies` command)\n2. Put an example data file for your pipeline in the `test/data/input` folder\n3. Clean up the autogenerated `dataset.yaml` file.\n    * Add metadata and remove any unused variables\n    * Don't add additional variables yet; just make sure that the info in the current file is accurate\n4. Commit your changes in `git` or back up your changes so you can compare before & after the script runs.\n5. Run this script, passing it the path to your input data file and using the `--input-config` option to tell it where\nyour cleaned `dataset.yaml` file is. By default this will generate a new `dataset.yaml` file in the current working\ndirectory (location of `pwd` on the command line), but you can also use the `--outdir` option to specify the path where\nit should write to.\n6. Review the changes the script made to each file. Note that it is not capable of standardizing units or other\nmetadata, so you will still need to clean those up manually.\n7. Continue with the rest of the ingest/pipeline development steps\n\n## Excel to Yaml\n\nPlease consult the documentation in the [excel2yaml/README.md](./excel2yaml/README.md) file for more information about\nthis tool.\n\n## NetCDF to CSV\n\nPlease consult the documentation in the [netcdf2csv/README.md](./netcdf2csv/README.md) file for more information about\nthis tool.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "tsdat,utils,config",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tsdat-tools",
    "package_url": "https://pypi.org/project/tsdat-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/tsdat-tools/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/tsdat-tools/0.2.0/",
    "requires_dist": [
      "tsdat (>=0.5.0)",
      "pydantic",
      "ruamel.yaml",
      "typer"
    ],
    "requires_python": ">=3.8",
    "summary": "Utility scripts and tools for tsdat.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16983380,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11e76a317dfbd24acc705f5cfd7bd4df6891d201a24a6c3bfe51f7fd4ff05a6a",
          "md5": "f2529492c49c7148c82b561f7c0a80ba",
          "sha256": "6103c577600e0e9e3c6faf8a4313e51cd0cbb715a0698f4566a1cc167b00ca7c"
        },
        "downloads": -1,
        "filename": "tsdat_tools-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2529492c49c7148c82b561f7c0a80ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 6478,
        "upload_time": "2023-02-22T21:53:27",
        "upload_time_iso_8601": "2023-02-22T21:53:27.697586Z",
        "url": "https://files.pythonhosted.org/packages/11/e7/6a317dfbd24acc705f5cfd7bd4df6891d201a24a6c3bfe51f7fd4ff05a6a/tsdat_tools-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5855b8cd954f39cef8d0583b82a7ce03382a63812d67c9870b96dba7c322e039",
          "md5": "cbf2b662327a4ee9df2a6973efe65159",
          "sha256": "ce3c51eb7589fe27ecfd3a53ab29da343fde4459dbc202ce3b2ca881a5fadf35"
        },
        "downloads": -1,
        "filename": "tsdat-tools-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cbf2b662327a4ee9df2a6973efe65159",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 45174,
        "upload_time": "2023-02-22T21:53:29",
        "upload_time_iso_8601": "2023-02-22T21:53:29.232205Z",
        "url": "https://files.pythonhosted.org/packages/58/55/b8cd954f39cef8d0583b82a7ce03382a63812d67c9870b96dba7c322e039/tsdat-tools-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11e76a317dfbd24acc705f5cfd7bd4df6891d201a24a6c3bfe51f7fd4ff05a6a",
        "md5": "f2529492c49c7148c82b561f7c0a80ba",
        "sha256": "6103c577600e0e9e3c6faf8a4313e51cd0cbb715a0698f4566a1cc167b00ca7c"
      },
      "downloads": -1,
      "filename": "tsdat_tools-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f2529492c49c7148c82b561f7c0a80ba",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 6478,
      "upload_time": "2023-02-22T21:53:27",
      "upload_time_iso_8601": "2023-02-22T21:53:27.697586Z",
      "url": "https://files.pythonhosted.org/packages/11/e7/6a317dfbd24acc705f5cfd7bd4df6891d201a24a6c3bfe51f7fd4ff05a6a/tsdat_tools-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5855b8cd954f39cef8d0583b82a7ce03382a63812d67c9870b96dba7c322e039",
        "md5": "cbf2b662327a4ee9df2a6973efe65159",
        "sha256": "ce3c51eb7589fe27ecfd3a53ab29da343fde4459dbc202ce3b2ca881a5fadf35"
      },
      "downloads": -1,
      "filename": "tsdat-tools-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cbf2b662327a4ee9df2a6973efe65159",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 45174,
      "upload_time": "2023-02-22T21:53:29",
      "upload_time_iso_8601": "2023-02-22T21:53:29.232205Z",
      "url": "https://files.pythonhosted.org/packages/58/55/b8cd954f39cef8d0583b82a7ce03382a63812d67c9870b96dba7c322e039/tsdat-tools-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}