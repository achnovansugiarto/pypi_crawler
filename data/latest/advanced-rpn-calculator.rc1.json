{
  "info": {
    "author": "Akbar Badshah",
    "author_email": "akbarahmadshah1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# RPN Calculator by Akbar BadShah\n\nIt's a full-fledged rpn calculator I made to practice my pythonic skills. Works fine to the best of my knowledge, but you're still welcome to share your thoughts, add features, report and correct bugs.\n\n# New Features!\n- `+` : Take 2 numbers from the stack, add them and put the result in the stack\n- `-` : Take 2 numbers from the stack, substracte them and put the result in the stack\n- `*` : Take 2 numbers from the stack, mul them and put the result in the stack\n- `/` : Take 2 numbers from the stack, divise them and put the result in the stack\n- `cla` : Clear both stack and variable\n- `clr` : Empty the stack\n- `clv` : Clear both stack and variable\n- `!` : None\n- `!=` : Return True if last two numbers in stack are equal, False otherwise\n- `%` : Take 2 integers from the stack, divide them and put the remainder in the stack\n- `++` : Increment an integer\n- `--` : Decrement an integer\n- `&` : Take 2 numbers from the stack, apply a bitwise \"and\" and put the result in the stack\n- `|` : Take 2 numbers from the stack, apply a bitwise \"or\" and put the result in the stack\n- `^` : Take 2 numbers from the stack, apply a bitwise \"xor\" and put the result in the stack\n- `~` : Take 2 numbers from the stack, apply a bitwise \"xor\" and put the result in the stack\n- `<<` : Take 2 numbers from the stack, apply a left shift and put the result in the stack\n- `>>` : Take 2 numbers from the stack, apply a right shift and put the result in the stack\n- `&&` : Perform boollean AND operation on two values and output the result (not added to the stack)\n- `||` : Perform boollean OR operation on two values and output the result (not added to the stack)\n- `^^` : Perform boolean XOR operation on two values and output the result (not added to the stack)\n- `<` : Smaller than operation on two values and output the result (not added to the stack)\n- `<=` : Smaller than or equal to operation on two values and output the result (not added to the stack)\n- `==` : Equal to operation on two values and output the result (not added to the stack)\n- `>` : Greater than operation on two values and output the result (not added to the stack)\n- `>=` : Greater than operation on two values and output the result (not added to the stack)\n- `acos` : Take arc cosine on a value and output the result (also added to the stack)\n- `asin` : Take arc sine on a value and output the result (also added to the stack)\n- `atan` : Take arc tangent on a value and output the result (also added to the stack)\n- `cos` : Take cosine on a value and output the result (also added to the stack)\n- `cosh` : Take arc hyperbolic cosine on a value and output the result (also added to the stack)\n- `sin` : Take sine on a value and output the result (also added to the stack)\n- `sinh` : Take hyperbolic sine on a value and output the result (also added to the stack)\n- `tanh` : Take hyperbolic tangent on a value and output the result (also added to the stack)\n- `ceil` : Take ceil of an integer and output the result (also added to the stack)\n- `floor` : Take floor of an integer and output the result (also added to the stack)\n- `round` : Take round of an integer and output the result (also added to the stack)\n- `ip` : Separates int from floating part of a decimal number and output the result (also added to the stack)\n- `fp` : separates floating part of a decimal number and output the result (also added to the stack)\n- `abs` : Take ceil of an integer and output the result (also added to the stack)\n- `max` : Take maximum value of the stack and output the result (also removed from the stack)\n- `min` : Take minimum value of the stack and output the result (also removed from the stack)\n- `hex` : Change display mode to hex\n- `bin` : Change display mode to binary\n- `dec` : Change display mode to decimal\n- `e` : None\n- `pi` : None\n- `rand` : None\n- `exp` : Apply e**x to the last number of the stack\n- `fact` : Push factorial of the last number to the stack\n- `sqrt` : Push factorial of the last number to the stack\n- `ln` : Apply log10 to the last number of the stack\n- `log` : Apply log10 to the last number of the stack\n- `pow` : Take 2 numbers from the stack, apply power and put the result in the stack\n- `pick` : Pick the nth item form stack\n- `repeat` : Repeat an operation n times\n- `drop` : Drop the top most item from the stack\n- `dropn` : Drop the n top most items from the stack\n- `dup` : Duplicates the top item from the stack\n- `dupn` : Duplicates n top items of thew stack\n- `roll` : Roll the stack upwards by n\n- `rolld` : Roll the stack downwards by n\n- `stack` : Toggles stack display from horizontal to vertical\n- `swap` : Swap the top 2 stack items\n- `x=` : Assigns a variable, e.g. '1024 x='\n- `help` : Print help; Same as pol --list\n- `exit` : Quit the program\n\n### Available Modes\n- For one time result of a single line statement, do:\n> rpn 3 2 + #(should exit outputting 5)\n- To solve statements from a file before entering shell, do:    \n> rpn --file #path\n- To simply enter the shell, do:\n> rpn\n\n### Installation\n\n>pip install advanced_rpn_calculator\n\n### Todos\n\n - Write MORE Tests or just test if everything works fine.\n\nLicense\n----\n\nMIT\n\n\n**Free Software, Hell Yeah!**\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/AkbarBadShah/advanced_rpn_calculator/archive/1.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AkbarBadShah/advanced_rpn_calculator.git",
    "keywords": "rpn,practice,Polish,calculator",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "advanced-rpn-calculator",
    "package_url": "https://pypi.org/project/advanced-rpn-calculator/",
    "platform": "",
    "project_url": "https://pypi.org/project/advanced-rpn-calculator/",
    "project_urls": {
      "Download": "https://github.com/AkbarBadShah/advanced_rpn_calculator/archive/1.0.tar.gz",
      "Homepage": "https://github.com/AkbarBadShah/advanced_rpn_calculator.git"
    },
    "release_url": "https://pypi.org/project/advanced-rpn-calculator/0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A full featured rpn calculator",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7395358,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a6eead1a8332352c5ab63a2162733c023d6100f0099712d46c23b9f257dd75b",
          "md5": "1905f38be3a6a632505db5665429b3f6",
          "sha256": "8d7424f702c301d5dacad461511bbdc0c4da196d665f2ee0c4909cd6e67aebd7"
        },
        "downloads": -1,
        "filename": "advanced_rpn_calculator-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1905f38be3a6a632505db5665429b3f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8969,
        "upload_time": "2020-06-04T11:39:30",
        "upload_time_iso_8601": "2020-06-04T11:39:30.988472Z",
        "url": "https://files.pythonhosted.org/packages/2a/6e/ead1a8332352c5ab63a2162733c023d6100f0099712d46c23b9f257dd75b/advanced_rpn_calculator-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a6eead1a8332352c5ab63a2162733c023d6100f0099712d46c23b9f257dd75b",
        "md5": "1905f38be3a6a632505db5665429b3f6",
        "sha256": "8d7424f702c301d5dacad461511bbdc0c4da196d665f2ee0c4909cd6e67aebd7"
      },
      "downloads": -1,
      "filename": "advanced_rpn_calculator-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1905f38be3a6a632505db5665429b3f6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8969,
      "upload_time": "2020-06-04T11:39:30",
      "upload_time_iso_8601": "2020-06-04T11:39:30.988472Z",
      "url": "https://files.pythonhosted.org/packages/2a/6e/ead1a8332352c5ab63a2162733c023d6100f0099712d46c23b9f257dd75b/advanced_rpn_calculator-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}