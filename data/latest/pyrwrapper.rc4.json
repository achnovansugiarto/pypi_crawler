{
  "info": {
    "author": "Yuelong CHEN",
    "author_email": "yuelong.chen.btr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Python Wrappers for R scripts in bioinformatic analysis\n\n\n\nThis file will become your README and also the index of your documentation.\n\n## Install\n\n`pip install pyrwrapper`\n\n## Plot Venn Diagram\n\n```\nfaker.py venn-plot tests/venn.png \\\n    --lists tests/list1.txt tests/list2.txt tests/list3.txt tests/list4.txt \\\n    --tags ALL_file withpy withdot withgo  \\\n    --print-mode raw\n```\n\nThen you will get four files: `tests/venn.png`, `tests/venn.png.R`,`tests/venn.png.R.e`,`tests/venn.png.R.o`.\n\n`tests/venn.png` is the graph you want\n\n![venn](https://cdn.jsdelivr.net/gh/btrspg/images@master/uPic/venn.png)\n\n`tests/venn.png.R` is the R script, if you want to modify and re-run the script, it will be easy.\n`tests/venn.png.R.e` and `tests/venn.png.R.o` is the stderr and stdout of running `tests/venn.png.R`.\n\n### parameters\n\n\n```\n\n\nfaker.py venn-plot    \n\n\nusage: faker.py venn-plot [-h] -l [LISTS [LISTS ...]] --tags [TAGS [TAGS ...]]\n                          [--title TITLE] [-s SUB_TITLE]\n                          [-p [PRINT_MODE [PRINT_MODE ...]]] [-r RSCRIPT]\n                          output\n\nvenn diagram plot\n\npositional arguments:\n  output                figure output, the formats could be 'png','tiff','pdf'\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -l [LISTS [LISTS ...]], --lists [LISTS [LISTS ...]]\n                        lists file without title\n  --tags [TAGS [TAGS ...]]\n                        tags corresponding to lists, the length of lists and tags should be the same\n  --title TITLE         graph title\n                        (default: Venn Diagram)\n  -s SUB_TITLE, --sub-title SUB_TITLE\n                        graph subtitle\n                        (default: )\n  -p [PRINT_MODE [PRINT_MODE ...]], --print-mode [PRINT_MODE [PRINT_MODE ...]]\n                        could only be 'raw' or 'percent' or ('raw' and  'percent')\n                        (default: ['raw', 'percent'])\n  -r RSCRIPT, --rscript RSCRIPT\n                        the path of Rscript\n                        (default: /usr/bin/env Rscript)\n\n```\n\n## Plot complex heatmap\n\n```\nfaker.py complexheatmap-plot tests/ch.pdf tests/matrix.csv tests/sample_info.csv \\\n        -m Geneid \\\n        --c-idx sample \\\n        -v TEST_TPM \\\n        --row-split-by gene_biotype \\\n        --col-split-by condition \\\n        --row-anno-point TV:transcript_version GV:gene_version \\\n        --row-anno-bar CS:coding_score \\\n        --row-anno-normal CT:classification \\\n        --col-anno-point age \\\n        --col-anno-bar BARAGE:age \\\n        --col-anno-normal batch condition \\\n        -t tests \\\n        --sep-mi , \\\n        --sep-ci , \\\n        --rscript '/usr/bin/env Rscript'\n```\n\nThen you will get four files: `tests/ch.pdf`, `tests/complexheatmap.R`,`tests/complexheatmap.R.e`,`tests/complexheatmap.R.o` and two temporary files `m.csv`, `c.csv`\n\n`tests/ch.pdf` is the graph you want\n\n![ch](https://cdn.jsdelivr.net/gh/btrspg/images@master/uPic/ch.png)\n\n\n\n\n### parameters\n\n```\nfaker.py complexheatmap-plot\n\nusage: faker.py complexheatmap-plot [-h] -m M_IDX --c-idx C_IDX\n                                    [--show-row-names] [--no-show-row-names]\n                                    [--show-column-names]\n                                    [--no-show-column-names] [-v VALUE_NAME]\n                                    [-w WIDTH] [--height HEIGHT]\n                                    [--row-split-by ROW_SPLIT_BY]\n                                    [--col-split-by COL_SPLIT_BY]\n                                    [--row-anno-point [ROW_ANNO_POINT [ROW_ANNO_POINT ...]]]\n                                    [--row-anno-bar [ROW_ANNO_BAR [ROW_ANNO_BAR ...]]]\n                                    [--row-anno-normal [ROW_ANNO_NORMAL [ROW_ANNO_NORMAL ...]]]\n                                    [--col-anno-point [COL_ANNO_POINT [COL_ANNO_POINT ...]]]\n                                    [--col-anno-bar [COL_ANNO_BAR [COL_ANNO_BAR ...]]]\n                                    [--col-anno-normal [COL_ANNO_NORMAL [COL_ANNO_NORMAL ...]]]\n                                    [--sep-mi SEP_MI] [--sep-ci SEP_CI]\n                                    [-t TMP] [--rscript RSCRIPT]\n                                    output matrix_in clinical_in\n\nComplextHeatmap plot\n\npositional arguments:\n  output                figure output, the formats could only be 'pdf'\n  matrix_in             heatmap input data\n  clinical_in           clinical input data\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -m M_IDX, --m-idx M_IDX\n                        heatmap index column name, e.g. 'geneid'\n  --c-idx C_IDX         clinical index column name, which are used to identify the data columns in heatmap matrix\n  --show-row-names      whether to show row names, if row number are too large, maybe not show.\n                        (default: True)\n  --no-show-row-names\n  --show-column-names   whether to show column names, if row number are too large, maybe not show.\n                        (default: True)\n  --no-show-column-names\n  -v VALUE_NAME, --value-name VALUE_NAME\n                        value name in the matrix, e.g. 'count', 'TPM'\n                        (default: TPM)\n  -w WIDTH, --width WIDTH\n                        width of the figure\n                        (default: 10)\n  --height HEIGHT       height of the figure\n                        (default: 15)\n  --row-split-by ROW_SPLIT_BY\n                        can specific split rows into different blocks by specific column in the matrix data, e.g. 'Pathway of genes'\n                        (default: None)\n  --col-split-by COL_SPLIT_BY\n                        can specific split columns into different blocks by specific column in the clinical data, e.g. 'condition'\n                        (default: None)\n  --row-anno-point [ROW_ANNO_POINT [ROW_ANNO_POINT ...]]\n                        can specific annotate row by point plot, you can also specify the name of annotation by log2fc:foldchange, e.g. 'foldchange' 'pvalue'\n                        (default: None)\n  --row-anno-bar [ROW_ANNO_BAR [ROW_ANNO_BAR ...]]\n                        can specific annotate row by bar plot,you can also specify the name of annotation by name:colname, e.g. 'flodchange' 'pvalue'\n                        (default: None)\n  --row-anno-normal [ROW_ANNO_NORMAL [ROW_ANNO_NORMAL ...]]\n                        can specific annotate row by condition,you can also specify the name of annotation by name:colname, e.g. 'biotype'\n                        (default: None)\n  --col-anno-point [COL_ANNO_POINT [COL_ANNO_POINT ...]]\n                        can specific annotate column by point plot, you can also specify the name of annotation by name:colname, e.g. 'age'\n                        (default: None)\n  --col-anno-bar [COL_ANNO_BAR [COL_ANNO_BAR ...]]\n                        can specific annotate column by bar plot, you can also specify the name of annotation by name:colname,  e.g. 'age'\n                        (default: None)\n  --col-anno-normal [COL_ANNO_NORMAL [COL_ANNO_NORMAL ...]]\n                        can specific annotate column by condition, you can also specify the name of annotation by name:colname,  e.g. 'gender'\n                        (default: None)\n  --sep-mi SEP_MI       separation in matirx file\n                        (default:       )\n  --sep-ci SEP_CI       separation in clinical file\n                        (default:       )\n  -t TMP, --tmp TMP     temporary direction\n                        (default: ./)\n  --rscript RSCRIPT     Rscript path\n                        (default: /usr/bin/env Rscript)\n\n```\n\n## MuSiC deconvolution\n\n```bash\nfaker.py music-deconvolution \\\n        -c cell_type  \\\n        --samples sample \\ \n        -t tests \\\n        tests/bulk_count.csv \\\n        tests/sc_count.csv \\\n        tests/bulk_info.csv \\\n        tests/sc_info.csv \\\n        tests/music.csv\n\n```\n\n\n\nThen we will get a deconvolution results [as here](./tests/music.csv)\n\n### parameters\n```\nusage: faker.py music-deconvolution [-h] -c CLUSTER --samples SAMPLES\n                                    [--select-ct [SELECT_CT [SELECT_CT ...]]]\n                                    [--bulk-filter BULK_FILTER]\n                                    [--sc-filter SC_FILTER]\n                                    [--bulk-count-sep BULK_COUNT_SEP]\n                                    [--sc-count-sep SC_COUNT_SEP]\n                                    [--bulk-info-sep BULK_INFO_SEP]\n                                    [--sc-info-sep SC_INFO_SEP] [-t TMP]\n                                    [-r RSCRIPT]\n                                    bulk_count sc_count bulk_info sc_info\n                                    output\n\nMulti-subject Single Cell deconvolution  (MuSiC github.com/xuranw/MuSiC)\n\npositional arguments:\n  bulk_count            bulk RNA-seq count data, first columns should be the gene identification(unique)\n  sc_count              single-cell RNA-seq count data, first columns should be the gene identification(unique) same as bulk_count\n  bulk_info             bulk RNA-seq information\n  sc_info               single-cell RNA-seq information: samples, cell type ,etc. The first column should be the cell identification.\n  output                will write the result out in .csv format\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CLUSTER, --cluster CLUSTER\n                        column name of cell type in sc_info\n  --samples SAMPLES     column name of sample name in sc_info, (need to know the single cell source, from which sample)\n  --select-ct [SELECT_CT [SELECT_CT ...]]\n                        cell types to deconvolution\n                        (default: NULL)\n  --bulk-filter BULK_FILTER\n                        bulk RNA-seq depth filter\n                        (default: 20)\n  --sc-filter SC_FILTER\n                        single-cell RNA-seq depth filter\n                        (default: 20)\n  --bulk-count-sep BULK_COUNT_SEP\n                        bulk_count file separation\n                        (default: ,)\n  --sc-count-sep SC_COUNT_SEP\n                        single-cell count file separation\n                        (default: ,)\n  --bulk-info-sep BULK_INFO_SEP\n                        bulk_info file separation\n                        (default: ,)\n  --sc-info-sep SC_INFO_SEP\n                        single-cell info file separation\n                        (default: ,)\n  -t TMP, --tmp TMP     temporary file direction\n                        (default: ./)\n  -r RSCRIPT, --rscript RSCRIPT\n                        Rscript path\n                        (default: /usr/bin/env Rscript)\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/btrspg/pyrwrapper/tree/master/",
    "keywords": "R Python Wrapper",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyrwrapper",
    "package_url": "https://pypi.org/project/pyrwrapper/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyrwrapper/",
    "project_urls": {
      "Homepage": "https://github.com/btrspg/pyrwrapper/tree/master/"
    },
    "release_url": "https://pypi.org/project/pyrwrapper/0.0.1rc4/",
    "requires_dist": [
      "defopt",
      "matplotlib",
      "pandas"
    ],
    "requires_python": ">=3.6",
    "summary": "r scripts wrapper",
    "version": "0.0.1rc4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8728239,
  "releases": {
    "0.0.1rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81d72c56d7b69c741dc52ef589b16160df6d0e0f8d8ce62a057c22681cf35377",
          "md5": "30b04a43841a893efe15de5b34d8fca7",
          "sha256": "d0272a40104d729a107950bccd9c5284e465ca83e06db1ba0b19272fc487f6bd"
        },
        "downloads": -1,
        "filename": "pyrwrapper-0.0.1rc0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30b04a43841a893efe15de5b34d8fca7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16468,
        "upload_time": "2020-11-22T10:03:04",
        "upload_time_iso_8601": "2020-11-22T10:03:04.727287Z",
        "url": "https://files.pythonhosted.org/packages/81/d7/2c56d7b69c741dc52ef589b16160df6d0e0f8d8ce62a057c22681cf35377/pyrwrapper-0.0.1rc0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f09171a380ec025711a8cb2514cc31ddfef0b11acd845c3d212713e663c949a5",
          "md5": "041a62a4768fb8aba9e76b108df32b34",
          "sha256": "d432e227cabe57e57b7e7be3d94143a1c6519f3df8146188974cda9de627e4f6"
        },
        "downloads": -1,
        "filename": "pyrwrapper-0.0.1rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "041a62a4768fb8aba9e76b108df32b34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16678,
        "upload_time": "2020-11-22T10:03:05",
        "upload_time_iso_8601": "2020-11-22T10:03:05.788708Z",
        "url": "https://files.pythonhosted.org/packages/f0/91/71a380ec025711a8cb2514cc31ddfef0b11acd845c3d212713e663c949a5/pyrwrapper-0.0.1rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a49ae32780df8872119c92f94812d3cebbcd9e85e175fdd585a98c60dec30dd",
          "md5": "9fbeee7bf246b720ba8f87463f7c0278",
          "sha256": "e304ea1b6aa514a2810b882ee490a50c1f7cc459dfbbc9d1829500b2a875692c"
        },
        "downloads": -1,
        "filename": "pyrwrapper-0.0.1rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9fbeee7bf246b720ba8f87463f7c0278",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19466,
        "upload_time": "2020-11-22T13:55:13",
        "upload_time_iso_8601": "2020-11-22T13:55:13.895225Z",
        "url": "https://files.pythonhosted.org/packages/2a/49/ae32780df8872119c92f94812d3cebbcd9e85e175fdd585a98c60dec30dd/pyrwrapper-0.0.1rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6650b8380167537dddd0b5af8d4f9338e5ac6d848f1cf5d0f99e0a7deffc73e",
          "md5": "ef9396d0fbf306c7d5005caa16b78a09",
          "sha256": "e457033feb50661a07488801598fb1f578dd41a16247ef57b2340a5f8043635c"
        },
        "downloads": -1,
        "filename": "pyrwrapper-0.0.1rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "ef9396d0fbf306c7d5005caa16b78a09",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19581,
        "upload_time": "2020-11-22T13:55:15",
        "upload_time_iso_8601": "2020-11-22T13:55:15.123898Z",
        "url": "https://files.pythonhosted.org/packages/f6/65/0b8380167537dddd0b5af8d4f9338e5ac6d848f1cf5d0f99e0a7deffc73e/pyrwrapper-0.0.1rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfbff31da50127187eebbcc40b9c1d2ba3dc7eacb4a0c386e99a5aeb23ca0f23",
          "md5": "8f2c0059fb704a88506c563ecdfdfcd5",
          "sha256": "880a11a97a62f1c848a792342830bfd4daf5626d7ec3b5269000b4ab83623cfd"
        },
        "downloads": -1,
        "filename": "pyrwrapper-0.0.1rc3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f2c0059fb704a88506c563ecdfdfcd5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19468,
        "upload_time": "2020-11-23T14:54:51",
        "upload_time_iso_8601": "2020-11-23T14:54:51.136295Z",
        "url": "https://files.pythonhosted.org/packages/bf/bf/f31da50127187eebbcc40b9c1d2ba3dc7eacb4a0c386e99a5aeb23ca0f23/pyrwrapper-0.0.1rc3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16b9a72fb431884fd1ea4fe953c9ef06a68a8dfc171932c9bb1ef547b859b7f8",
          "md5": "1f372ff7e6aff631626547953d63c48f",
          "sha256": "2f61ff06d8eb4c5d0c70cff340e38ad76ac620c48bc7006142a4f71b1dc76377"
        },
        "downloads": -1,
        "filename": "pyrwrapper-0.0.1rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "1f372ff7e6aff631626547953d63c48f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19587,
        "upload_time": "2020-11-23T14:54:51",
        "upload_time_iso_8601": "2020-11-23T14:54:51.959043Z",
        "url": "https://files.pythonhosted.org/packages/16/b9/a72fb431884fd1ea4fe953c9ef06a68a8dfc171932c9bb1ef547b859b7f8/pyrwrapper-0.0.1rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1rc4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac9fe52772ff4af149004f866d9d04a8270311280c505f71173329a1ca0a1405",
          "md5": "0fc55f23f152af4059c25320c8699f4a",
          "sha256": "37577dc0a469c70f47f0926290c72389d10f034657a827173ba77365f4ead75b"
        },
        "downloads": -1,
        "filename": "pyrwrapper-0.0.1rc4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0fc55f23f152af4059c25320c8699f4a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19583,
        "upload_time": "2020-11-23T15:05:52",
        "upload_time_iso_8601": "2020-11-23T15:05:52.820589Z",
        "url": "https://files.pythonhosted.org/packages/ac/9f/e52772ff4af149004f866d9d04a8270311280c505f71173329a1ca0a1405/pyrwrapper-0.0.1rc4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff1855d52c7c87f5efa40d712059d9d9f6262823e899be8bdceaa2e521921113",
          "md5": "8f1f4340a8dbb6707823b5b77dae811e",
          "sha256": "4dcbfc8c644ca3fc5e24334debcaa7407df8ea2acbe0c0eb3781525cd4ba520f"
        },
        "downloads": -1,
        "filename": "pyrwrapper-0.0.1rc4.tar.gz",
        "has_sig": false,
        "md5_digest": "8f1f4340a8dbb6707823b5b77dae811e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19679,
        "upload_time": "2020-11-23T15:05:53",
        "upload_time_iso_8601": "2020-11-23T15:05:53.813365Z",
        "url": "https://files.pythonhosted.org/packages/ff/18/55d52c7c87f5efa40d712059d9d9f6262823e899be8bdceaa2e521921113/pyrwrapper-0.0.1rc4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac9fe52772ff4af149004f866d9d04a8270311280c505f71173329a1ca0a1405",
        "md5": "0fc55f23f152af4059c25320c8699f4a",
        "sha256": "37577dc0a469c70f47f0926290c72389d10f034657a827173ba77365f4ead75b"
      },
      "downloads": -1,
      "filename": "pyrwrapper-0.0.1rc4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0fc55f23f152af4059c25320c8699f4a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19583,
      "upload_time": "2020-11-23T15:05:52",
      "upload_time_iso_8601": "2020-11-23T15:05:52.820589Z",
      "url": "https://files.pythonhosted.org/packages/ac/9f/e52772ff4af149004f866d9d04a8270311280c505f71173329a1ca0a1405/pyrwrapper-0.0.1rc4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff1855d52c7c87f5efa40d712059d9d9f6262823e899be8bdceaa2e521921113",
        "md5": "8f1f4340a8dbb6707823b5b77dae811e",
        "sha256": "4dcbfc8c644ca3fc5e24334debcaa7407df8ea2acbe0c0eb3781525cd4ba520f"
      },
      "downloads": -1,
      "filename": "pyrwrapper-0.0.1rc4.tar.gz",
      "has_sig": false,
      "md5_digest": "8f1f4340a8dbb6707823b5b77dae811e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19679,
      "upload_time": "2020-11-23T15:05:53",
      "upload_time_iso_8601": "2020-11-23T15:05:53.813365Z",
      "url": "https://files.pythonhosted.org/packages/ff/18/55d52c7c87f5efa40d712059d9d9f6262823e899be8bdceaa2e521921113/pyrwrapper-0.0.1rc4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}