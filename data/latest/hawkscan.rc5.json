{
  "info": {
    "author": "c0dejump",
    "author_email": "codejumpgame@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# HawkScan\n\n[![PyPI version](https://d25lcipzij17d.cloudfront.net/badge.svg?id=py&type=6&v=2.1&x2=0)](https://pypi.org/project/hawkscan)\n[![PyPI Statistics](https://img.shields.io/pypi/dm/hawkscan.svg)](https://pypistats.org/packages/hawkscan)\n[![Twitter](https://img.shields.io/twitter/follow/c0dejump?label=c0dejump&style=social)](https://twitter.com/intent/follow?screen_name=c0dejump)\n\n\n![alt tag](https://github.com/c0dejump/HawkScan/blob/master/static/logo_hawkscan.jpeg)\n\nSecurity Tool for Reconnaissance and Information Gathering on a website. (python 3.x)\n\n- [News](https://github.com/c0dejump/HawkScan/#News)\n- [Installation](https://github.com/c0dejump/HawkScan/#Installation)\n- [Special features](https://github.com/c0dejump/HawkScan/#Special-features)\n- [TODO](https://github.com/c0dejump/HawkScan/#todo)\n- [Usage](https://github.com/c0dejump/HawkScan/#usage)\n- [Exemples](https://github.com/c0dejump/HawkScan/#exemples)\n- [Thanks](https://github.com/c0dejump/HawkScan/#thanks)\n- [Donations](https://github.com/c0dejump/HawkScan/#donations)\n- [Tools used](https://github.com/c0dejump/HawkScan/#tools-used)\n- [Wiki](https://github.com/c0dejump/HawkScan/wiki)\n\n# News v2.x\n    - Redefining priorities/tasks\n    - Let's debug certificate subdomains results\n    - Display the current bypass number during scan (\"CB:\")\n    - Easter egg for xmas :)\n    - Option -nfs (not first step) to pass the first recon steps\n    - Google CSE before scan\n    - Creation of WIKI\n*(for more details go on CHANGELOG.md)* \n \n# Installation\n``` \n\n       - git clone https://github.com/c0dejump/HawkScan.git && sudo python3 HawkScan/setup.py install\n       \n       - pip(3) install -r requirements.txt \n    \n       - python3 -m pip install -r requirements.txt\n\n``` \n\n# Special features\n\n### Before scan\n - [x] Check header information\n - [x] Check DNS information\n - [x] Check Github\n - [x] CMS detection + version and vulns\n - [x] Check in waybackmachine\n - [x] Check if DataBase firebaseio existe and accessible\n - [x] Testing if it's possible scanning with \"localhost\" host\n - [x] Check Google Dork \n - [x] Check Host IP\n - [x] Check backup domain name (ex: www.domain.com/domain.zip)\n - [x] Check socketio connection\n - [x] cse google search (buckets...)\n\n### During - After scan\n - [x] Test backup/old file on all the files found (index.php.bak, index.php~ ...)\n - [x] Backup system (if the script stopped, it take again in same place)\n - [x] WAF detection and Response error to WAF + Testing bypass it\n - [x] Option --exclude to exclude page, code error, bytes\n - [x] Option rate-limit if app is unstable (--timesleep)\n - [x] Search S3 buckets in source code page\n - [x] Try differents bypass for 403/401 code error\n - [x] JS parsing and analysis (option --js)\n - [x] Auto resize relative to window\n - [x] Notify when scan completed (Only work on Linux)\n - [x] Multiple output format. Available formats: json, csv, txt\n - [x] Multiple website scanning\n - [x] Prefix filename (old_, copy of...)\n \n# TODO \n**P1 is the most important**\n\n [WIP] Multiple exclude like: --exclude 403,1337b [P1] [In progress] (see [Exemples](https://github.com/c0dejump/HawkScan/#exemples))\n - [ ] asyncio instead of threading ? [PX]\n - [ ] Add crt.sh to check potential hidden subdomain (with letdebug module ?) [P1]\n - [ ] Re-build resport scan [P1]\n - [ ] Push results into DB [P2]\n - [ ] If re-scan a website with an existing folder, just doing a diff btw the scan to the folder (like) // interesting ? [P2]\n - [ ] Pre-run to check the waf sensitive (by proxy with 40 threads for exemple) // add proxy funtion [P2]\n - [ ] Check HTTP headers/ssl security: securityheaders; digicert ? [P3]\n - [ ] Anonymous routing through some proxy (http/s proxy list) [P3]\n - [ ] Check source code and verify leak or sensitive data in the Github // Other tool ? [P3]\n - [ ] Analyse html code webpage [P3] => really necessary ?\n - [ ] Scan API endpoints/informations leaks [P3]\n\n# Usage\n  \n```\n     \n    usage: hawkscan.py [-h] [-u URL] [-f FILE_URL] [-t THREAD] [--exclude EXCLUDE [EXCLUDE ...]] [--auto] [--update] [-w WORDLIST] [-b [BACKUP ...]] [-p PREFIX] [-H HEADER_] [-a USER_AGENT] [--redirect] [--auth AUTH] [--timesleep TS] [--proxie PROXIE] [-r] [-s SUBDOMAINS] [--js] [--nfs] [--ffs] [--notify] [-o OUTPUT] [-of OUTPUT_TYPE]    \n \n```\n\n``` \n> General:\n    -u URL                URL to scan [required]\n    -f FILE_URL           file with multiple URLs to scan\n    -t THREAD             Number of threads to use for URL Fuzzing. Default: 30\n    --exclude EXCLUDE [EXCLUDE ...] Exclude page, response code, response size. (Exemples: --exclude 500,337b)   \n    --auto                Automatic threads depending response to website. Max: 30\n    --update              For automatic update\n\n> Wordlist Settings:\n    -w WORDLIST           Wordlist used for Fuzzing the desired webite. Default: dichawk.txt     \n    -b                    Adding prefix/suffix backup extensions during the scan. (Exemples: exemple.com/~ex/, exemple.com/ex.php.bak...) beware, take more longer\n    -p PREFIX             Add prefix in wordlist to scan\n\n> Request Settings:             \n    -H HEADER_            Modify header. (Exemple: -H \"cookie: test\")    \n    -a USER_AGENT         Choice user-agent. Default: Random    \n    --redirect            For scan with redirect response (301/302)      \n    --auth AUTH           HTTP authentification. (Exemples: --auth admin:admin)               \n    --timesleep TS        To define a timesleep/rate-limit if app is unstable during scan.\n\n> Tips:            \n    -r                    Recursive dir/files      \n    -s SUBDOMAINS         Subdomain tester         \n    --js                  For try to found keys or token in the javascript page\n    --nfs                 Not the first step of scan during the first running (waf, vhosts, wayback etc...)    \n    --ffs                 Force the first step of scan during the first running (waf, vhosts, wayback etc...)              \n    --notify              For receveid notify when the scan finished (only work on linux)\n\n> Export Settings:                    \n    -o OUTPUT             Output to site_scan.txt (default in website directory)     \n    -of OUTPUT_TYPE       Output file format. Available formats: json, csv, txt           \n```\n\n# Exemples\n\n```\n    //Basic\n     python hawkscan.py -u https://www.exemple.com/\n\n    //With specific dico\n     python hawkscan.py -u https://www.exemple.com/ -w dico_extra.txt\n\n    //with 30 threads\n     python hawkscan.py -u https://www.exemple.com/ -t 30\n\n    //With backup files scan\n     python hawkscan.py -u https://www.exemple.com/ -b\n\n    //With an exclude page\n     python hawkscan.py -u https://www.exemple.com/ --exclude https://www.exemple.com/profile.php?id=1\n\n    //With an exclude response code\n     python hawkscan.py -u https://www.exemple.com/ --exclude 403\n\n    //With an exclude bytes number\n     python hawkscan.py -u https://www.exemple.com/ --exclude 1337b \n\n    //With two excludes\n     python hawkscan.py -u https://www.exemple.com/ --exclude 1337b,403\n\n```\n\n# Thanks\nLayno (https://github.com/Clayno/) [Technical helper]      \nSanguinarius (https://twitter.com/sanguinarius_Bt) [Technical helper]  \nJamb0n69 (https://twitter.com/jamb0n69) [Technical helper]           \nCyber_Ph4ntoM (https://twitter.com/__PH4NTOM__) [Beta tester & Logo Graphist]\n\n\n# Donations\n\nhttps://www.paypal.me/c0dejump\n\nOr if you want to offer me a coffee :)\n\nhttps://ko-fi.com/c0dejump\n\n## Tools used\n\nThis script use \"WafW00f\" to detect the WAF in the first step (https://github.com/EnableSecurity/wafw00f)\n\nThis script use \"Sublist3r\" to scan subdomains (https://github.com/aboul3la/Sublist3r)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/c0dejump/HawkScan/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "HawkScan",
    "package_url": "https://pypi.org/project/HawkScan/",
    "platform": "",
    "project_url": "https://pypi.org/project/HawkScan/",
    "project_urls": {
      "Bug Tracker": "https://github.com/c0dejump/HawkScan/issues",
      "Homepage": "https://github.com/c0dejump/HawkScan/"
    },
    "release_url": "https://pypi.org/project/HawkScan/2.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Security Tool for Reconnaissance and Information Gathering on a website. (python 3.x)",
    "version": "2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12899387,
  "releases": {
    "1.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d756e662e2e0627ed299e6f5f4360c7b9ffd183dee5275c201b0111dbaa3061f",
          "md5": "e69c364885beb7ab7b8a944eb9326779",
          "sha256": "ef3570bfaee0f23b9e10b8613dd4c3eb010d68a0e63b5b6b2a1f04b68424055f"
        },
        "downloads": -1,
        "filename": "HawkScan-1.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e69c364885beb7ab7b8a944eb9326779",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23928,
        "upload_time": "2021-03-06T00:02:59",
        "upload_time_iso_8601": "2021-03-06T00:02:59.623687Z",
        "url": "https://files.pythonhosted.org/packages/d7/56/e662e2e0627ed299e6f5f4360c7b9ffd183dee5275c201b0111dbaa3061f/HawkScan-1.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4ec7fe830b5f27c8fcee7e630b08a43064ce73dc69d3985bd73d35a3e106f44",
          "md5": "773514ab4187da5d51e87296d2b3f445",
          "sha256": "b4e34703d34c117e5c7937bdb0b803070853d9471e156f2c47be5ff546c4a950"
        },
        "downloads": -1,
        "filename": "HawkScan-1.7.3.tar.gz",
        "has_sig": false,
        "md5_digest": "773514ab4187da5d51e87296d2b3f445",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23819,
        "upload_time": "2021-03-06T00:59:50",
        "upload_time_iso_8601": "2021-03-06T00:59:50.667169Z",
        "url": "https://files.pythonhosted.org/packages/d4/ec/7fe830b5f27c8fcee7e630b08a43064ce73dc69d3985bd73d35a3e106f44/HawkScan-1.7.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df0377d16380e793fa50e6676120c7f788585310d6458c85fe91d1041aeb558c",
          "md5": "eed2e51a5bc2db531cd80c551a8c6d4e",
          "sha256": "08d016ab5d8d343d2a7366876c4f105606e916a181f465e008f0649ebc2d3286"
        },
        "downloads": -1,
        "filename": "HawkScan-1.9.9.tar.gz",
        "has_sig": false,
        "md5_digest": "eed2e51a5bc2db531cd80c551a8c6d4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25069,
        "upload_time": "2021-11-15T14:04:13",
        "upload_time_iso_8601": "2021-11-15T14:04:13.533060Z",
        "url": "https://files.pythonhosted.org/packages/df/03/77d16380e793fa50e6676120c7f788585310d6458c85fe91d1041aeb558c/HawkScan-1.9.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca77b46cd0d681ae817f6c7263cce56e6c2418641440db6f04cd03d2b4c1f420",
          "md5": "86fe538997bf2c86d2844140be45982d",
          "sha256": "647c4bd6e69397217148d1956766bd3e48188bf4a8099989c66b3a90f9f3c177"
        },
        "downloads": -1,
        "filename": "HawkScan-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "86fe538997bf2c86d2844140be45982d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26544,
        "upload_time": "2022-01-19T16:04:50",
        "upload_time_iso_8601": "2022-01-19T16:04:50.232901Z",
        "url": "https://files.pythonhosted.org/packages/ca/77/b46cd0d681ae817f6c7263cce56e6c2418641440db6f04cd03d2b4c1f420/HawkScan-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28c5c4f36b4c90329e5735459cb7a2d1ae61f8b50e4e11b01d6364927c70440b",
          "md5": "21b77395723331f60215d4a17405ca2c",
          "sha256": "61ba61f975fe79c28700bcb5254f3d25b0631fa88a8fb9ebb48e30a5da82cce0"
        },
        "downloads": -1,
        "filename": "HawkScan-2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "21b77395723331f60215d4a17405ca2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26549,
        "upload_time": "2022-02-15T16:38:00",
        "upload_time_iso_8601": "2022-02-15T16:38:00.212012Z",
        "url": "https://files.pythonhosted.org/packages/28/c5/c4f36b4c90329e5735459cb7a2d1ae61f8b50e4e11b01d6364927c70440b/HawkScan-2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28c5c4f36b4c90329e5735459cb7a2d1ae61f8b50e4e11b01d6364927c70440b",
        "md5": "21b77395723331f60215d4a17405ca2c",
        "sha256": "61ba61f975fe79c28700bcb5254f3d25b0631fa88a8fb9ebb48e30a5da82cce0"
      },
      "downloads": -1,
      "filename": "HawkScan-2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "21b77395723331f60215d4a17405ca2c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26549,
      "upload_time": "2022-02-15T16:38:00",
      "upload_time_iso_8601": "2022-02-15T16:38:00.212012Z",
      "url": "https://files.pythonhosted.org/packages/28/c5/c4f36b4c90329e5735459cb7a2d1ae61f8b50e4e11b01d6364927c70440b/HawkScan-2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}