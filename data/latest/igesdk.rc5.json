{
  "info": {
    "author": "Indigames",
    "author_email": "dev@indigames.net",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3",
      "Topic :: Games/Entertainment"
    ],
    "description": "# **igeSdk**\nigeSdk is a compilation of all necessary third party SDKs in order to make your game ready to be published, which contains Analytics, Advertisement, InAppPurchase and CrossPromotion features.\n\nThe current implementation status is as below:\n- [x] Analytics : Ready (v0.0.1)\n- [x] Advertisement : Ready (v0.0.2)\n- [x] InAppPurchase : Ready (v0.0.3)\n- [x] CrossPromotion : Ready (v0.0.4)\n\n*The SDK supports **Android** and **iOS** platforms. On unsupported platforms (Windows, Linux, MacOS, ...), it the code still running with dummy functionalities.*\n\n## **Configuration and Initialization**\nTo config the SDK, you need to create `igeSdk.config` which is a json file contains settings for different modules.\n\nConfiguration for Advertisement, InAppPurchase and CrossPromotion is WIP.\n\nTo initialize the SDK, just `import igeSdk` and call `init()` method in your main logic code, like below:\n```py\nimport igeSdk\n\nclass GameManager(Script):\n\n    def onStart(self):\n        igeSdk.init()\n        # Other initialization stuffs\n```\n\nThe code above will inialize all the enabled modules which are configured in the configuration file.\n\n*Notice, the SDK only initialize modules which have been configured. So, to disable unwanted modules, just remove their settings out of the configuration file.*\n\n## **Analytic**\n\nThe Analytics module is used in order to send informations to the different analytics platforms. We are currently using Facebook, GameAnalytics and AppsFlyer.\n\nTo configure Analytics features, put those settings into `igeSdk.config`:\n```json\n{\n  \"android\" : {\n    \"FacebookAppId\": \"\",\n    \"FacebookClientToken\": \"\",\n    \"AppsFlyerApiKey\": \"\",\n    \"AppsFlyerAppId\": \"\",\n    \"GameAnalyticsGameKey\": \"\",\n    \"GameAnalyticsSecretKey\": \"\",\n  },\n  \"ios\" : {\n    \"FacebookAppId\": \"\",\n    \"FacebookClientToken\": \"\",\n    \"AppsFlyerApiKey\": \"\",\n    \"AppsFlyerAppId\": \"\",\n    \"GameAnalyticsGameKey\": \"\",\n    \"GameAnalyticsSecretKey\": \"\",\n  }\n}\n```\n\nTrackers for Advertisement, InAppPurchase and CrossPromotion modules are sent automatically by the SDK. Game developers should only focus on Progression and Design events to boost their games' performance and revenues, using API below:\n```py\nimport igeSdk\nfrom igeSdk import Analytics\n\n# Level started event: send when player start new level\nAnalytics.levelStarted(levelName: str)\n\n# Level passed event: send when player successfully passed the level\nAnalytics.levelPassed(levelName: str, score: int)\n\n# Level failed event: send when player failed the level\nAnalytics.levelFailed(levelName: str, score: int)\n\n# Custom event: used to track other stuffs like game design events, game states, ...\nAnalytics.customEvent(eventName: str, eventValue_optional: float)\n\n```\n\n## **Advertisement**\nAdvertisement module handles all ad-related operations for you, by implementing AppLovin MAX solution. This module provides methods for Banner, Interstitial and Rewarded Video ads, accessible with `igeSdk.Advertisement` module.\n\n### **Configuration**\nTo configure Advertisement features, put those settings into `igeSdk.config`:\n```json\n{\n  \"android\" : {\n    \"Mediation\": \"MAX\",\n    \"MediationAppId\" : \"\",\n    \"AdMobAppId\" : \"\",\n    \"BannerId\" : \"\",\n    \"InterstitialId\" : \"\",\n    \"RewardedVideoId\" : \"\"\n  },\n  \"ios\" : {\n    \"Mediation\": \"MAX\",\n    \"MediationAppId\" : \"\",\n    \"AdMobAppId\" : \"\",\n    \"BannerId\" : \"\",\n    \"InterstitialId\" : \"\",\n    \"RewardedVideoId\" : \"\"\n  }\n}\n```\n\n### **Showing/Hiding Banner**\nTo show/hide banner ads, use methods below:\n```py\nfrom igeSdk import Advertisement\n\nAdvertisement.showBanner(position: int, callback: Callable[[errCode: int, message: str], None])\nAdvertisement.hideBanner(callback: Callable[[errCode: int, message: str], None])\n```\n\nIn which:\n- `position`: [Optional] one of values below, default to `igeSdk.AdPosition_BottomCenter`.\n  - `igeSdk.AdPosition_TopLeft`\n  - `igeSdk.AdPosition_TopCenter`\n  - `igeSdk.AdPosition_TopRight`\n  - `igeSdk.AdPosition_CenterLeft`\n  - `igeSdk.AdPosition_Centered`\n  - `igeSdk.AdPosition_CenterRight`\n  - `igeSdk.AdPosition_BottomLeft`\n  - `igeSdk.AdPosition_BottomCenter`\n  - `igeSdk.AdPosition_BottomRight`\n- `callback`: [Optional] callback function.\n\n### **Showing Interstitial**\nTo show interstitial ads, use method below:\n```py\nfrom igeSdk import Advertisement\n\nAdvertisement.showInterstitial(placement: str, callback: Callable[[errCode: int, message: str], None])\n```\n\nIn which:\n- `placement`: [Optional] placement id as string, default is `'default'`.\n- `callback`: [Optional] callback function.\n\nYou can also check if interstitial ads is available (to display a button for example), using `Advertisement.isInterstitialAvailable()`.\n\n### **Showing Rewarded Video**\nTo show rewarded video ads, use method below:\n```py\nfrom igeSdk import Advertisement\n\nAdvertisement.showRewardedVideo(placement: str, callback: Callable[[errCode: int, message: str, reward_type: str, reward_amount: float], None])\n```\n\nIn which:\n- `placement`: [Optional] placement id as string, default is `'default'`.\n- `callback`: [Optional] callback function.\n\nYou can also check if rewarded video ads is available (to display a button for example), using `Advertisement.isRewardedVideoAvailable()`.\n\n## **InAppPurchase**\nInAppPurchase module allows you to simply integrate cross-platform In App Purchase (IAP) into your game. The module support iOS and Android billing systems.\n\n### **Configuration**\nTo configure InAppPurchase module, put those settings into `igeSdk.config`:\n```json\n{\n  \"android\" : {\n    \"IAPProductIds\" : [\n        \"net.indigames.bundle.noads\"\n    ],\n    \"IAPPublicKey\" : \"YOUR APP PUBLIC KEY FROM GOOGLE PLAY CONSOLE\"\n  },\n  \"ios\" : {\n    \"IAPProductIds\" : [\n        \"net.indigames.bundle.noads\"\n    ]\n  }\n}\n```\nIAPProductIds is a list of product IDs that have been registed with Google Play Store and Apple AppStore.\n\nTo register products, please follow documents below:\n- [Google Play Console](https://support.google.com/googleplay/android-developer/answer/1153481)\n- [Apple AppStore Connect](https://help.apple.com/app-store-connect/#/devae49fb316)\n\n#### **NoAds IAP**\nTo register NoAds IAP, you need to register a product ID which contain `noads` text, which is a non-consummable item. The logic of checking and disabling ads is automatically done by the SDK without needs of extra works from developers.\n\n### **List Products**\nTo get the list of products available on store, use function below:\n```py\nfrom igeSdk import InAppPurchase\n\nInAppPurchase.listProducts(callback: Callable[[status: int, products: List[IAPProduct]], None])\n```\nIn which:\n- callback: The callback funtion once the product list fetched, or failed in case of error.\n\nExample:\n```py\nfrom igeSdk import InAppPurchase\n\nclass GameManager(Script):\n  ....\n\n  def listProductsCallback(self, status, products):\n    if status == 0 and len(products) > 0:\n      for product in products:\n        print(f\"{product.id} - {product.title} - {product.price} - {product.locale}\")\n    else:\n      print(\"[WARN] listProductsCallback: there is no product on store, please ensure you have product ids added in igeSdk, and your app is already previewed by Apple / Google\")\n\n  def onStart(self):\n    InAppPurchase.listProducts(self.listProductsCallback)\n```\n\n*Notice, you should only show `NoAds` button after fetched the product list, because if the products are not ready and if the purchase called it will do nothing which may confuse users.*\n\n### **Purchase**\nTo purchase a product, use function below:\n```py\nfrom igeSdk import InAppPurchase\n\nInAppPurchase.purchase(productId: str, callback: Callable[[status: int, products: List[IAPProduct]], None])\n```\nIn which:\n- productId: the product Id\n- callback: The callback funtion once the product is purchased, or failed in case of error.\n\nExample:\n```py\nfrom igeSdk import InAppPurchase\nclass BtnNoAds(Script):\n  ....\n\n  def purchaseCallback(self, status, products):\n    if status == 0 and len(products) > 0:\n      for product in products:\n        print(f\"Purchased: {product.id} - {product.title} - {product.price} - {product.locale}\")\n    else:\n      print(\"[WARN] listProductsCallback: there is no product on store, please ensure you have product ids added in igeSdk, and your app is already previewed by Apple / Google\")\n\n  def onClick(self):\n    InAppPurchase.purchase('', self.purchaseCallback)\n```\n\n- *The `NoAds` result is handled internally. If the transaction is a success, the banner will be hidden and all interstitial requests will be blocked*\n- *Depending on the user's connection, the transaction can take a certain amount of time, we suggest you to block any playable input once a transaction is initiated and to display a loading screen showing the user that the purchase is processing.*\n- *If an error occurs during the transaction, the purchaseResult callback will send you an error reason that you should display on screen.*\n  - *-1: `Failed`, general issue like connection, IAP setting, ...*\n  - *0: `Succeed`*\n  - *1: `NotInitialized`, the purchase/restore function has been called when the IAP module is initializing*\n  - *2: `IdentifierNotFound`, the productID not found on store*\n  - *3: `InvalidReceipt`, receipt validation failed, which mean this maybe tampering issue with the receipt.*\n  - *4: `NoRestorablePurchase`, when call restore but not made a purchase before*\n  - *5: `AlreadyPurchased`, non-consummable product has already been purchased, so just need to restore or get it for free.*\n\n### **Restore**\nIn case the player have purchased a Non-Consumable product (such as the IAP) and deletes the game, you need to restore their purchases.\n\nWith Google Play, the restoration is done automatic on launch. But for Apple, the restoration needs to be triggered (the user may need to re-authentify), we can't do it automatically on launch as it could be frustrating for the player to have an authentification popup at each launch.\n\nYou need to implement a Restore Purchases button somewhere in your UI to allow the restoration, this button must trigger the following function:\n```py\nfrom igeSdk import InAppPurchase\n\nInAppPurchase.restore(callback: Callable[[status: int, products: List[IAPProduct]], None])\n```\nIn which:\n- callback: The callback funtion once the product(s) is restored, or failed in case of error.\n\n- *The `NoAds` product restoration is handled internally.*\n\n## **CrossPromotion**\n### GDPR\nThe General Data Protection Regulation (GDPR) is an European data protection law that entered into force in May 2018. In order to comply with the regulation, the game need to show GDPR dialog asking for user confirmation before collecting any data from the device.\n\nThe igeSDK handled the GDPR automatically on the app's first lauch. However, it is required to add a button in game setting to access GDPR/CCPA again in order to change the setting, by calling:\n```py\nfrom igeSdk import CrossPromo\nif CrossPromo.isInGdprCountry():\n  CrossPromo.showGdpr()\n```\n\n### Interstitial Cross Promotion\nTo show interstitial we have this method:\n```py\nfrom igeSdk import CrossPromo\nCrossPromo.showInterstitial()\n```\n\n### Square Cross Promotion\n\nTo show square, use method below:\n```py\nfrom igeSdk import CrossPromo\nCrossPromo.showSquare(x: float, y: float, w: int, h: int)\n```\nIn which:\n- x, y: the top-left position of the square to be shown. If it is in range of 0.0 - 1.0, then it will be the percentage to the screen width and height accordingly.\n- w, h: the size of the square to display.\n\nTo hide square, use method below:\n```py\nfrom igeSdk import CrossPromo\nCrossPromo.hideSquare()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://indigames.net/",
    "keywords": "Indigames",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "igeSdk",
    "package_url": "https://pypi.org/project/igeSdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/igeSdk/",
    "project_urls": {
      "Homepage": "https://indigames.net/"
    },
    "release_url": "https://pypi.org/project/igeSdk/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Publishing SDK for Indi Games Engine",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14891812,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aace1e31bb6ce6001f425ada489a2ec7c45f8a21d2c80e9970d3836cbebc04ce",
          "md5": "95c939d6076971bc5673beec5cc6271c",
          "sha256": "4a1d9e8b1c441dff5878d886da065bcb680386580031ac733934d935dee3227c"
        },
        "downloads": -1,
        "filename": "igeSdk-0.0.1-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "95c939d6076971bc5673beec5cc6271c",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 54517,
        "upload_time": "2022-03-03T07:04:20",
        "upload_time_iso_8601": "2022-03-03T07:04:20.160958Z",
        "url": "https://files.pythonhosted.org/packages/aa/ce/1e31bb6ce6001f425ada489a2ec7c45f8a21d2c80e9970d3836cbebc04ce/igeSdk-0.0.1-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4b7f1c99f7e687a3935a2ad2a3ffbdc8ed47abdad1ffb42b2870e6082ddc59f",
          "md5": "603cabc98e56f435e205f19eddca9536",
          "sha256": "86d039546e3e8f362dbb948abfe8dcff32409f4f1ce797f66feb1b9116ce11db"
        },
        "downloads": -1,
        "filename": "igeSdk-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "603cabc98e56f435e205f19eddca9536",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4432,
        "upload_time": "2022-03-03T07:04:22",
        "upload_time_iso_8601": "2022-03-03T07:04:22.644178Z",
        "url": "https://files.pythonhosted.org/packages/f4/b7/f1c99f7e687a3935a2ad2a3ffbdc8ed47abdad1ffb42b2870e6082ddc59f/igeSdk-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ae358296dad1c225cca8a2f84187473f8c9fcdd80591c601f4117287b289f75",
          "md5": "56efbb52139c2615b0488b4c7d416214",
          "sha256": "13b4ae160cc59197286911d5b6cf8767b26c27fe0c61ac2a235dcc5f80f62814"
        },
        "downloads": -1,
        "filename": "igeSdk-0.0.2-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "56efbb52139c2615b0488b4c7d416214",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 79155,
        "upload_time": "2022-04-04T09:33:40",
        "upload_time_iso_8601": "2022-04-04T09:33:40.359568Z",
        "url": "https://files.pythonhosted.org/packages/3a/e3/58296dad1c225cca8a2f84187473f8c9fcdd80591c601f4117287b289f75/igeSdk-0.0.2-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "602dae75d7ddd31c9ba72e30245b2b8cec2353b0c4d8e967c675d212d4a7b42a",
          "md5": "9d0dfd357aefd7c0b05680f613061a93",
          "sha256": "b4f29b9617976774a7d1c760468de2b7f75ed4c9dfccb50974d9d8a37b37fe59"
        },
        "downloads": -1,
        "filename": "igeSdk-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9d0dfd357aefd7c0b05680f613061a93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4718,
        "upload_time": "2022-04-04T09:33:42",
        "upload_time_iso_8601": "2022-04-04T09:33:42.008961Z",
        "url": "https://files.pythonhosted.org/packages/60/2d/ae75d7ddd31c9ba72e30245b2b8cec2353b0c4d8e967c675d212d4a7b42a/igeSdk-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "681bc81e0d9ee7c6a7d36bf7fcd912dec6350be20b6f1ad73e4a5455dfb016be",
          "md5": "942a25c2256bfa1df50e5e4f86095741",
          "sha256": "eba7d7dca24dc2deab5cab9b0dca152ae1fd01ed4d59cc72db121edc7bb98bb3"
        },
        "downloads": -1,
        "filename": "igeSdk-0.0.3-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "942a25c2256bfa1df50e5e4f86095741",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 88294,
        "upload_time": "2022-04-27T10:19:56",
        "upload_time_iso_8601": "2022-04-27T10:19:56.374169Z",
        "url": "https://files.pythonhosted.org/packages/68/1b/c81e0d9ee7c6a7d36bf7fcd912dec6350be20b6f1ad73e4a5455dfb016be/igeSdk-0.0.3-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08b354bcc1aed1f2cc67766749d4f931802ac917121e021b4318287d9c9b7d4d",
          "md5": "de8129a5d57940bbf93738c89a614101",
          "sha256": "79ccde8bf32c2d1964fca183905f4ad24f74b5078092e3757b25eb4e70de5923"
        },
        "downloads": -1,
        "filename": "igeSdk-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "de8129a5d57940bbf93738c89a614101",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6743,
        "upload_time": "2022-04-27T10:19:58",
        "upload_time_iso_8601": "2022-04-27T10:19:58.269934Z",
        "url": "https://files.pythonhosted.org/packages/08/b3/54bcc1aed1f2cc67766749d4f931802ac917121e021b4318287d9c9b7d4d/igeSdk-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ac5fffdb1c1b00c128ab524fd606474342de1e1a134a599fbaf79800551640f",
          "md5": "d103986e2a2b06d7a4a37158a4bccbe6",
          "sha256": "2fa2deb937b275f7a7dd7002a173078e1e178422e7f22e7bfcb766ea6360e3bb"
        },
        "downloads": -1,
        "filename": "igeSdk-0.0.4-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "d103986e2a2b06d7a4a37158a4bccbe6",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 90030,
        "upload_time": "2022-05-06T03:41:04",
        "upload_time_iso_8601": "2022-05-06T03:41:04.011351Z",
        "url": "https://files.pythonhosted.org/packages/4a/c5/fffdb1c1b00c128ab524fd606474342de1e1a134a599fbaf79800551640f/igeSdk-0.0.4-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a2db1ed0d18e62c1a45efe38ff46163e8150c242db382a5974be9680fd591a5",
          "md5": "9fa27650dc2858c2623de6c5099133fe",
          "sha256": "b56a9d2a3cfe308e0c3305b4d4397b4d5e614d2e6303e1ddfe7f9cff4f69e140"
        },
        "downloads": -1,
        "filename": "igeSdk-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9fa27650dc2858c2623de6c5099133fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7205,
        "upload_time": "2022-05-06T03:41:06",
        "upload_time_iso_8601": "2022-05-06T03:41:06.158699Z",
        "url": "https://files.pythonhosted.org/packages/8a/2d/b1ed0d18e62c1a45efe38ff46163e8150c242db382a5974be9680fd591a5/igeSdk-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6190be12cb417b4ea61fa297158b5db61fa35f4a6f20bd69f1f8767bca130603",
          "md5": "18d3131b32439b97245f5dde5bbfd573",
          "sha256": "6f30a1b25803ee7f4f9a9038b93c9e1e8908a1a6803a9f3eb9598647c8bdd155"
        },
        "downloads": -1,
        "filename": "igeSdk-0.1.0-cp39-cp39-macosx_12_0_x86_64.whl",
        "has_sig": false,
        "md5_digest": "18d3131b32439b97245f5dde5bbfd573",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 140323,
        "upload_time": "2022-08-26T02:45:38",
        "upload_time_iso_8601": "2022-08-26T02:45:38.792606Z",
        "url": "https://files.pythonhosted.org/packages/61/90/be12cb417b4ea61fa297158b5db61fa35f4a6f20bd69f1f8767bca130603/igeSdk-0.1.0-cp39-cp39-macosx_12_0_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a92370afbb9fff7279099a98ab6e9aed3aef314365b05fb67e93d3533158051d",
          "md5": "2964e4d512a0919dc309db4cec0830ee",
          "sha256": "aa6c95e13db5150359acf268663d9d5b47a4021363432be90767184a56146169"
        },
        "downloads": -1,
        "filename": "igeSdk-0.1.0-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "2964e4d512a0919dc309db4cec0830ee",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 89879,
        "upload_time": "2022-08-25T10:07:25",
        "upload_time_iso_8601": "2022-08-25T10:07:25.621091Z",
        "url": "https://files.pythonhosted.org/packages/a9/23/70afbb9fff7279099a98ab6e9aed3aef314365b05fb67e93d3533158051d/igeSdk-0.1.0-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c59c93fe42aeee60b1c345129fdb2fd6cd2b6a3cd8f879cd93cd5e29ad5fb467",
          "md5": "a7deef04acc32b3932677037741b8fbb",
          "sha256": "e2c4b809a5f1fa71de2e920c6549e7920c3729de7a616665499c4ebbfd00e98d"
        },
        "downloads": -1,
        "filename": "igeSdk-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7deef04acc32b3932677037741b8fbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6977,
        "upload_time": "2022-08-25T10:07:27",
        "upload_time_iso_8601": "2022-08-25T10:07:27.413332Z",
        "url": "https://files.pythonhosted.org/packages/c5/9c/93fe42aeee60b1c345129fdb2fd6cd2b6a3cd8f879cd93cd5e29ad5fb467/igeSdk-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6190be12cb417b4ea61fa297158b5db61fa35f4a6f20bd69f1f8767bca130603",
        "md5": "18d3131b32439b97245f5dde5bbfd573",
        "sha256": "6f30a1b25803ee7f4f9a9038b93c9e1e8908a1a6803a9f3eb9598647c8bdd155"
      },
      "downloads": -1,
      "filename": "igeSdk-0.1.0-cp39-cp39-macosx_12_0_x86_64.whl",
      "has_sig": false,
      "md5_digest": "18d3131b32439b97245f5dde5bbfd573",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": null,
      "size": 140323,
      "upload_time": "2022-08-26T02:45:38",
      "upload_time_iso_8601": "2022-08-26T02:45:38.792606Z",
      "url": "https://files.pythonhosted.org/packages/61/90/be12cb417b4ea61fa297158b5db61fa35f4a6f20bd69f1f8767bca130603/igeSdk-0.1.0-cp39-cp39-macosx_12_0_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a92370afbb9fff7279099a98ab6e9aed3aef314365b05fb67e93d3533158051d",
        "md5": "2964e4d512a0919dc309db4cec0830ee",
        "sha256": "aa6c95e13db5150359acf268663d9d5b47a4021363432be90767184a56146169"
      },
      "downloads": -1,
      "filename": "igeSdk-0.1.0-cp39-cp39-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "2964e4d512a0919dc309db4cec0830ee",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": null,
      "size": 89879,
      "upload_time": "2022-08-25T10:07:25",
      "upload_time_iso_8601": "2022-08-25T10:07:25.621091Z",
      "url": "https://files.pythonhosted.org/packages/a9/23/70afbb9fff7279099a98ab6e9aed3aef314365b05fb67e93d3533158051d/igeSdk-0.1.0-cp39-cp39-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c59c93fe42aeee60b1c345129fdb2fd6cd2b6a3cd8f879cd93cd5e29ad5fb467",
        "md5": "a7deef04acc32b3932677037741b8fbb",
        "sha256": "e2c4b809a5f1fa71de2e920c6549e7920c3729de7a616665499c4ebbfd00e98d"
      },
      "downloads": -1,
      "filename": "igeSdk-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a7deef04acc32b3932677037741b8fbb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6977,
      "upload_time": "2022-08-25T10:07:27",
      "upload_time_iso_8601": "2022-08-25T10:07:27.413332Z",
      "url": "https://files.pythonhosted.org/packages/c5/9c/93fe42aeee60b1c345129fdb2fd6cd2b6a3cd8f879cd93cd5e29ad5fb467/igeSdk-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}