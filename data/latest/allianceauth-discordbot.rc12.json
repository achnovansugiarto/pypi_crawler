{
  "info": {
    "author": "ak",
    "author_email": "ak@ak.auth",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# AA-Discordbot\n\nAA-Discordbot for [Alliance Auth](https://gitlab.com/allianceauth/allianceauth).\n\n[![PyPi](https://img.shields.io/pypi/v/allianceauth-discordbot?color=green)](https://pypi.org/project/allianceauth-discordbot/)\n\n## Features\n\n* Bot Framework, easily extensible with more Cogs\n* Integration with Alliance Auth, able to fetch data directly from its django project.\n* Channel/Direct messaging feature, with Tasks and a Queue/Consumer\n* Current Cogs\n  * About\n    * !about - Bot Information and Statistics\n  * Auth\n    * !auth or /auth - A direct link to the Auth Install to catch users familiar with other bots.\n  * Members\n    * !lookup [search string] - Fetch a users Main, Affiliation, State, Groups and linked characters from any character.\n    * !altcorp [search string] - search for users with characters in an altcorp\n  * Remind\n    * !remindme [5s/m/h/d text] - Sets a simple non-persistent reminder timer when the bot will respond with the text\n  * Sov\n    * !vuln [context] - Returns a list of Vulnerable sov structures for a Region/Constellation/Solar_System or alliance\n    * !sov [context] - Returns a list of _all_ sov structures for a Region/Constellation/Solar_System or alliance\n    * !lowadm - Lists sov in need of ADM-ing, context provided in settings.\n  * Time\n    * !time or /time - Returns the current EVE Time.\n  * Timers\n    * !timer - Returns the next Structure timer from allianceauth.timerboard.\n  * PriceCheck:\n    * amarr - Check an item price on Amarr market\n    * jita -  Check an item price on Jita market\n    * price - Check an item price on Jita and Amarr market\n  * Easter Eggs,\n    * !happybirthday [text] - Wishes the text a happy birthday, works with user mentions\n  * WelcomeGoodbye\n    * Welcome - Responds to user join events with predefined messages.\n    * Goodbye - Responds to user leave events with predefined messages.\n  * Admin\n    * Slash commands to help with setting up a discord server when you are not admin or owner.\n    * accessed via `/admin [command]`\n    * add_role / add_role_read / rem_role - add/remove a role to a channel\n    * new_channel - create a new channel and assign it a role for read access\n    * promote_role_to_god/demote_role_to_god - promote/demote a role to/from full admin so for when you need it\n    * empty_roles - list all roles on server with no members\n    * clear_empty_roles - remove all empty roles from the server\n    * orphans - find any user in discord with no auth user attached\n    * get_webhooks - returns any webhooks setup in this current channel, or creates one for you and returns that\n    * uptime - how long the bot has been up for\n\n\n## Installation\n\n* Update your [Discord Developer Application](https://discord.com/developers/applications) to include the Privileged Intents that we call. Please enable all intents.\n\n![screenshot](https://i.imgur.com/A1yA24P.png)\n\n* Install the app with your venv active\n\n```bash\npip install allianceauth-discordbot\n```\n\n* Add `'aadiscordbot',` to your INSTALLED_APPS list in local.py.\n\n* Add the below lines to your `local.py` settings file, Changing the contexts to yours.\n\n ```python\n## Settings for Allianceauth-Discordbot\n# Admin Commands\nADMIN_DISCORD_BOT_CHANNELS = [111, 222, 333]\n# Sov Commands\nSOV_DISCORD_BOT_CHANNELS = [111, 222, 333]\n# Adm Commands\nADM_DISCORD_BOT_CHANNELS = [111, 222, 333]\n\nDISCORD_BOT_SOV_STRUCTURE_OWNER_IDS = [1000169] # Centre for Advanced Studies example\nDISCORD_BOT_MEMBER_ALLIANCES = [111, 222, 333] # A list of alliances to be considered \"Mains\"\n\nDISCORD_BOT_ADM_REGIONS = [10000002] # The Forge Example\nDISCORD_BOT_ADM_SYSTEMS = [30000142] # Jita Example\nDISCORD_BOT_ADM_CONSTELLATIONS = [20000020] # Kimitoro Example\n```\n\n```python\n## Insert AADiscordBot's logging into Django Logging config\nLOGGING['handlers']['bot_log_file']= {\n            'level': 'INFO',\n            'class': 'logging.handlers.RotatingFileHandler',\n            'filename': os.path.join(BASE_DIR, 'log/discord_bot.log'),\n            'formatter': 'verbose',\n            'maxBytes': 1024 * 1024 * 5,\n            'backupCount': 5,\n        }\nLOGGING['loggers']['aadiscordbot'] = {'handlers': ['bot_log_file'],'level': 'DEBUG'}\n```\n* Optional Settings\n ```python\n# configure the bots in-built cogs.\nDISCORD_BOT_COGS = [\"aadiscordbot.cogs.about\", # about the bot\n                     \"aadiscordbot.cogs.admin\", # Discord server admin helpers\n                     \"aadiscordbot.cogs.members\", # Member lookup commands\n                     \"aadiscordbot.cogs.timers\", # timer board integration\n                     \"aadiscordbot.cogs.auth\", # return auth url\n                     \"aadiscordbot.cogs.sov\", # some sov helpers\n                     \"aadiscordbot.cogs.time\", # whats the time Mr Eve Server\n                     \"aadiscordbot.cogs.eastereggs\", # some \"fun\" commands from ariel...\n                     \"aadiscordbot.cogs.remind\", # very Basic in memory reminder tool\n                     \"aadiscordbot.cogs.reaction_roles\" # auth group integrated reaction roles\n                    ]\n\n# configure the optional rate limited\n# this is a bot_task function and how many / time period\n# 100/s equates to 100 per second max\n# 10/m equates to 10 per minute or 1 every 6 seconds max\n# 60/h equates to 60 per hour or one per minute max\nDISCORD_BOT_TASK_RATE_LIMITS = {\n        \"send_channel_message_by_discord_id\": \"100/s\",\n        \"send_direct_message_by_discord_id\": \"1/s\",\n        \"send_direct_message_by_user_id\": \"1/s\"\n        }\n```\n\n* Add the below lines to `myauth/celery.py` somewhere above the `app.autodiscover_tasks...` line\n\n```python\n\n## Route AA Discord bot tasks away from AllianceAuth\napp.conf.task_routes = {'aadiscordbot.tasks.*': {'queue': 'aadiscordbot'}}\n```\n\n* Run migrations `python manage.py migrate` (There should be none from this app)\n* Gather your static files `python manage.py collectstatic` (There should be none from this app)\n\n* Fetch `bot_conf.py` from the Git Repo into the root of your AA install, beside `manage.py`\n\n```bash\nwget https://raw.githubusercontent.com/pvyParts/allianceauth-discordbot/master/bot_conf.py\n```\n\n* Amend your supervisor.conf, correcting paths as required and add `authbot` to the launch group at the end of the conf\n\n```ini\n[program:authbot]\ncommand=/home/allianceserver/venv/auth/bin/python /home/allianceserver/myauth/bot_conf.py\ndirectory=/home/allianceserver/myauth\nuser=allianceserver\nnumprocs=1\nautostart=true\nautorestart=true\nstopwaitsecs=600\nstdout_logfile=/home/allianceserver/myauth/log/authbot.log\nstderr_logfile=/home/allianceserver/myauth/log/authbot.log\n```\n\n```ini\n#This block should already exist, add authbot to it\n[group:myauth]\nprograms=beat,worker,gunicorn,authbot\npriority=999\n```\n\nLast but not least, go to admin and configure your admin users in the bot config model.\n\n## Reaction Roles\n> ❗❗❗ **This will bypass the Group Leadership/Join Request System**: This is intended for open groups but not limited to it! ❗❗❗\n\nThe bot is able to run a reaction roles system that is compatible with auth and public users on a discord.\n - If a member is part of auth it will do auth syncing of roles\n - If a member is not found in auth and the reaction role message has the public flag set it will assign roles to anyone who reacts\n\n### How To Reaction Role!\n 1. Setup the inital Message you wish to use buy using the command !rr\n   - *Optional* Edit the name and settings of this message in `Admin > Discord Bot > Reaction Role Messages`\n 2. React to the message with the reactions you wish to use.\n 3. The bot will counter react to the reactions when it creates the binding in auth.\n 4. Goto `Admin > Discord Bot > Reaction Role Bindings`\n 5. Assign the groups you want for each reaction\n\n#### Messages Admin\n![https://cdn.discordapp.com/attachments/639369068930924546/936082605156237332/unknown.png](https://cdn.discordapp.com/attachments/639369068930924546/936082605156237332/unknown.png)\n#### Reactions Admin\n![https://cdn.discordapp.com/attachments/639369068930924546/936084126379962378/unknown.png](https://cdn.discordapp.com/attachments/639369068930924546/936084126379962378/unknown.png)\n\n## Integrations\n* [Statistics](https://github.com/pvyParts/aa-statistics)\n  * Adds zkill Monthly/Yearly stats to !lookup\n* [timezones](https://github.com/ppfeufer/aa-timezones)\n  * Updates the `time` command to have all timezones configured in auth.\n\n## Welcome Messaages\n`\nWith the WelcomeGoodbye Cog activated, Discordbot will grab a random message from the Welcome or Goodbye Message Model and send it to the Guild System channel\n\nThese can be configured in admin under `/admin/aadiscordbot/welcomemessage/` and `/admin/aadiscordbot/goodbyemessage/`\n\nThe messages support some string formatting\n\n* `{user_mention} - A Discord @ Mention\n* `{guild_name} - The name of the Discord Server\n* `{auth_url} - A link to Auth\n```\nWelcome {user_mention} to {guild_name}, I hope you enjoy your stay.\n\nYou can Authenticate for more access {auth_url}\n```\n\n## Using AA-Discordbot from my project\n\n### Send Messages\nYou can use the send_message helper to send a message with text/embed to:\n  - Discord user_id\n  - Discord channel_id\n  - Auth User Model Object\n  - Auth user_pk\n\n[aadiscordbot/tasks.py](https://github.com/pvyParts/allianceauth-discordbot/blob/master/aadiscordbot/tasks.py)\n\n### Example Usage\n```python\nfrom django.contrib.auth.models import User\nfrom django.apps import apps\n\n## Use a small helper to check if AA-Discordbot is installs\ndef discord_bot_active():\n    return apps.is_installed('aadiscordbot')\n\n## Only import it, if it is installed\nif discord_bot_active():\n    from aadiscordbot.tasks import send_message\n    # if you want to send discord embed import them too.\n    from discord import Embed, Color\n\n## this helper can be called to Queue up a Message\n## AA Should not act on these, only AA-DiscordBot will consume them\nif discord_bot_active():\n    usr = User.objects.get(pk=1)\n\n    # discord ID of user\n    msg = \"Channel ID Tests\"\n    e = Embed(title=\"Channel ID Tests!\",\n              description=\"This is a Test Embed.\\n\\n```Discord Channel ID```\",\n              color=Color.yellow())\n    e.add_field(name=\"Test Field 1\", value=\"Value of some kind goes here\")\n    send_message(channel_id=639252062818926642, embed=e) # Embed\n    send_message(channel_id=639252062818926642, message=msg) # Message\n    send_message(channel_id=639252062818926642, message=msg, embed=e) # Both\n\n    # Discord ID of channel\n    msg = \"User ID Tests\"\n    e = Embed(title=\"User ID Tests!\",\n              description=\"This is a Test Embed.\\n\\n```Discord User ID```\",\n              color=Color.nitro_pink())\n    e.add_field(name=\"Test Field 1\", value=\"Value of some kind goes here\")\n\n    send_message(user_id=318309023478972417, embed=e) # Embed\n    send_message(user_id=318309023478972417, message=msg) # Message\n    send_message(user_id=318309023478972417, message=msg, embed=e) # Both\n\n    # User model\n    msg = \"Auth User Model Tests\"\n    e = Embed(title=\"Auth User Model Tests!\",\n              description=\"This is a Test Embed.\\n\\n```Auth User Model```\",\n              color=Color.dark_orange())\n    e.add_field(name=\"Test Field 1\", value=\"Value of some kind goes here\")\n    send_message(user=usr, embed=e) # Embed\n    send_message(user=usr, message=msg) # Message\n    send_message(user=usr, message=msg, embed=e) # Both\n\n    # User PK id\n    msg = \"Auth User PK Tests\"\n    e = Embed(title=\"Auth User PK Tests!\",\n              description=\"This is a Test Embed.\\n\\n```Auth User PK```\",\n              color=Color.brand_green())\n    e.add_field(name=\"Test Field 1\", value=\"Value of some kind goes here\")\n    send_message(user_pk=1, embed=e) # Embed\n    send_message(user_pk=1, message=msg) # Message\n    send_message(user_pk=1, message=msg, embed=e) # Both\n\n    # Mixture of all of the above\n    msg = \"All Together Tests\"\n    e = Embed(title=\"All Together Tests!\",\n              description=\"This is a Test Embed.\\n\\n```All Together```\",\n              color=Color.blurple())\n    e.add_field(name=\"Test Field 1\", value=\"Value of some kind goes here\")\n    send_message(channel_id=639252062818926642,\n                user_id=318309023478972417,\n                user=User.objects.get(pk=1),\n                message=msg,\n                embed=e)\n```\n\n### Registering 3rd Party Cogs (Handling Commands)\n\nIn `auth_hooks.py`, define a function that returns an array of cog modules, and register it as a `discord_cogs_hook`:\n```python\n@hooks.register('discord_cogs_hook')\ndef register_cogs():\n    return [\"yourapp.cogs.cog_a\", \"yourapp.cogs.cog_b\"]\n```\n\n## Optional Settings\n### Isolate AuthBot from Auth's Discord Service\n```python\nAUTHBOT_DISCORD_APP_ID = 'App ID for dedicated bot'\nAUTHBOT_DISCORD_BOT_TOKEN = 'Token for dedicated bot'\n```\n\n## Issues\n\nPlease remember to report any aa-discordbot related issues using the issues on **this** repository.\n\n## Troubleshooting\n\n### Py-Cord and discord.py fighting in venv\n**Problem:**\n\nSomething has gone funny with my venv after i installed another app that wanted `discord.py`\n\n**Reason:**\n\nThis is due to the Py-cord lib sharing the `discord` namespace. Py-Cord is however a drop in replacement. So no issues should arise from using it over the now legacy discord.py lib. **YMMV**\n\n**Fix:**\n 1. Uninstall `discord.py` by running `pip uninstall discord.py` with your venv active.\n 2. Reinstall `py-cord` by running `pip install -U py-cord==2.0.0b3` with your venv active.\n 3. Approach the dev from the app that overrode your py-cord to update to a maintained lib.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pvyParts/allianceauth-discordbot",
    "keywords": "",
    "license": "GNU General Public License v3 (GPLv3)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "allianceauth-discordbot",
    "package_url": "https://pypi.org/project/allianceauth-discordbot/",
    "platform": null,
    "project_url": "https://pypi.org/project/allianceauth-discordbot/",
    "project_urls": {
      "Homepage": "https://github.com/pvyParts/allianceauth-discordbot"
    },
    "release_url": "https://pypi.org/project/allianceauth-discordbot/3.3.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Alliance Auth Discord Bot",
    "version": "3.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15492966,
  "releases": {
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3081bd08de9b1818f90b7eff8a60d57568ece6b06c383bc621bbfd80026d0f3b",
          "md5": "c4e097c8e95154cfdb5c820944be0475",
          "sha256": "05a103b47966fa57817d4b866984377933da2a22920f1fec8de767ce22e1cbfb"
        },
        "downloads": -1,
        "filename": "allianceauth-discordbot-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c4e097c8e95154cfdb5c820944be0475",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 20279,
        "upload_time": "2021-02-06T00:18:29",
        "upload_time_iso_8601": "2021-02-06T00:18:29.194071Z",
        "url": "https://files.pythonhosted.org/packages/30/81/bd08de9b1818f90b7eff8a60d57568ece6b06c383bc621bbfd80026d0f3b/allianceauth-discordbot-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78dacf09b72931ecbd8dbdfedbe8409d3213ca334e88ab9bb4ae0be6b8b942a0",
          "md5": "1606cf0f980bcb8eab804a01e86fb9af",
          "sha256": "feab3c82d6decf389cb5cc07b67507a9a57122553e44bd7bd18182f0396d7c20"
        },
        "downloads": -1,
        "filename": "allianceauth-discordbot-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1606cf0f980bcb8eab804a01e86fb9af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 23380,
        "upload_time": "2021-07-09T14:33:55",
        "upload_time_iso_8601": "2021-07-09T14:33:55.393321Z",
        "url": "https://files.pythonhosted.org/packages/78/da/cf09b72931ecbd8dbdfedbe8409d3213ca334e88ab9bb4ae0be6b8b942a0/allianceauth-discordbot-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6577d2610115c045cdecf3e60ed626996acbc1c85babc02b948e411ece8042c1",
          "md5": "cdab0fe797528a168c1ec6302ada8045",
          "sha256": "84739b5e6da2dff2931b058f24ea7f375e02710c35abdb1ac2e6a362a99b54c3"
        },
        "downloads": -1,
        "filename": "allianceauth-discordbot-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cdab0fe797528a168c1ec6302ada8045",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 23528,
        "upload_time": "2021-07-10T10:59:06",
        "upload_time_iso_8601": "2021-07-10T10:59:06.089315Z",
        "url": "https://files.pythonhosted.org/packages/65/77/d2610115c045cdecf3e60ed626996acbc1c85babc02b948e411ece8042c1/allianceauth-discordbot-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b89f193c8550ee21522c40963e81221a9654418239fc3879d05e633dc0947657",
          "md5": "20e7e30c3234f7b91f4002d29d8305c5",
          "sha256": "a93a431d9a1aecfb27b905283bc471246fdba3d79b31306abf673282eb4a8b1f"
        },
        "downloads": -1,
        "filename": "allianceauth-discordbot-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "20e7e30c3234f7b91f4002d29d8305c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 23534,
        "upload_time": "2021-08-02T23:09:12",
        "upload_time_iso_8601": "2021-08-02T23:09:12.811339Z",
        "url": "https://files.pythonhosted.org/packages/b8/9f/193c8550ee21522c40963e81221a9654418239fc3879d05e633dc0947657/allianceauth-discordbot-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d02c5eab88cec30ee3a1ef0ab4712edbf1d1dc3593cbec87830ed63e206b9c9e",
          "md5": "05b15881f04b7bf9000fe0d6b74e9188",
          "sha256": "937a4790a2c9afd067e5448b06d75c326610b08b3fb338d5834d02d29caa46d5"
        },
        "downloads": -1,
        "filename": "allianceauth-discordbot-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "05b15881f04b7bf9000fe0d6b74e9188",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 31737,
        "upload_time": "2022-02-04T10:05:58",
        "upload_time_iso_8601": "2022-02-04T10:05:58.008382Z",
        "url": "https://files.pythonhosted.org/packages/d0/2c/5eab88cec30ee3a1ef0ab4712edbf1d1dc3593cbec87830ed63e206b9c9e/allianceauth-discordbot-3.0.1.tar.gz",
        "yanked": true,
        "yanked_reason": "bad dependencies"
      }
    ],
    "3.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a3f61bbbd960609945ef120bd12f30a334e665ce8ea56d6c92352746cbb6d98",
          "md5": "aad0d1d2b12d1ae761cfd8d12572fbc2",
          "sha256": "12e1dea36b9583eea277e55f91632cd2c1bbb8112138a0f6d686e45dfd3c82b6"
        },
        "downloads": -1,
        "filename": "allianceauth-discordbot-3.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "aad0d1d2b12d1ae761cfd8d12572fbc2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 31737,
        "upload_time": "2022-02-04T13:59:59",
        "upload_time_iso_8601": "2022-02-04T13:59:59.421177Z",
        "url": "https://files.pythonhosted.org/packages/2a/3f/61bbbd960609945ef120bd12f30a334e665ce8ea56d6c92352746cbb6d98/allianceauth-discordbot-3.0.2.tar.gz",
        "yanked": true,
        "yanked_reason": "has hardcoded permsions"
      }
    ],
    "3.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e2b1f6cc9dbc87d6cb0af509d6f79155f54c51219d0cb3ca2a97f32604581ae",
          "md5": "a6323e2fcd81bbac26acf3530074d7b2",
          "sha256": "21925030dc7961d962a02efc0d7135d8b1184b39ac4890d74ef79e006dfaf53d"
        },
        "downloads": -1,
        "filename": "allianceauth-discordbot-3.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a6323e2fcd81bbac26acf3530074d7b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 31765,
        "upload_time": "2022-02-05T01:08:08",
        "upload_time_iso_8601": "2022-02-05T01:08:08.711762Z",
        "url": "https://files.pythonhosted.org/packages/0e/2b/1f6cc9dbc87d6cb0af509d6f79155f54c51219d0cb3ca2a97f32604581ae/allianceauth-discordbot-3.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86d1b8dc6d873fd0bd8a74d15a73cf9e43a3c2445019b6a86e888bbb89f68c86",
          "md5": "f024fbfc99b71ae3b2f6e4a74be609d3",
          "sha256": "521a4ef97338929d2b892f6461a422bc81df545135a0b79f000ad8d9231e4f59"
        },
        "downloads": -1,
        "filename": "allianceauth-discordbot-3.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f024fbfc99b71ae3b2f6e4a74be609d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 32223,
        "upload_time": "2022-05-01T09:26:40",
        "upload_time_iso_8601": "2022-05-01T09:26:40.717875Z",
        "url": "https://files.pythonhosted.org/packages/86/d1/b8dc6d873fd0bd8a74d15a73cf9e43a3c2445019b6a86e888bbb89f68c86/allianceauth-discordbot-3.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94f314fbd556a996bedb19d2eed16e22dd52a2d16d53b90184f898cfc632e5e4",
          "md5": "82bf296e3a26eee7e1adc8ee2398c47a",
          "sha256": "d2b5d6ac54ad3695268f9e7ddf6a43072c5bd5d69e93c51570b260e8b09b2a66"
        },
        "downloads": -1,
        "filename": "allianceauth-discordbot-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "82bf296e3a26eee7e1adc8ee2398c47a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 33391,
        "upload_time": "2022-06-14T09:25:27",
        "upload_time_iso_8601": "2022-06-14T09:25:27.704878Z",
        "url": "https://files.pythonhosted.org/packages/94/f3/14fbd556a996bedb19d2eed16e22dd52a2d16d53b90184f898cfc632e5e4/allianceauth-discordbot-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e02f54331fa2a1101f24ce5673c28f72d99811e9aaa856b666dc685a7495470",
          "md5": "c5278e823bcb0e5236c1bcc980c425f4",
          "sha256": "5ad168cec4aa50fbc0a9cde88fe4044135df098a17e0b48d99d5911f6838722f"
        },
        "downloads": -1,
        "filename": "allianceauth-discordbot-3.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5278e823bcb0e5236c1bcc980c425f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 33449,
        "upload_time": "2022-07-02T07:55:35",
        "upload_time_iso_8601": "2022-07-02T07:55:35.174496Z",
        "url": "https://files.pythonhosted.org/packages/6e/02/f54331fa2a1101f24ce5673c28f72d99811e9aaa856b666dc685a7495470/allianceauth-discordbot-3.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67a7b51a497a059da7ce42309f20b4364044f7820c7f983e15727906e7252195",
          "md5": "f0916b14a07c19efd0a6598bd80c0600",
          "sha256": "82871e4fd555e59119e377774e585c1480322c50ca1c11f46c1d0d78eef15723"
        },
        "downloads": -1,
        "filename": "allianceauth-discordbot-3.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f0916b14a07c19efd0a6598bd80c0600",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 36884,
        "upload_time": "2022-09-17T11:19:59",
        "upload_time_iso_8601": "2022-09-17T11:19:59.903349Z",
        "url": "https://files.pythonhosted.org/packages/67/a7/b51a497a059da7ce42309f20b4364044f7820c7f983e15727906e7252195/allianceauth-discordbot-3.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.4.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2771ed6fd1e8e026059d8779efdd67a89dbb7967468d703c5da31544947756c9",
          "md5": "8cab59464028f94284ea5bb625c15e0e",
          "sha256": "e6cf82468547e257e042124f43d73fabe3d5c76887208bab4be77fffaf30d3cb"
        },
        "downloads": -1,
        "filename": "allianceauth-discordbot-3.4.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "8cab59464028f94284ea5bb625c15e0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 39486,
        "upload_time": "2022-10-22T03:08:42",
        "upload_time_iso_8601": "2022-10-22T03:08:42.635644Z",
        "url": "https://files.pythonhosted.org/packages/27/71/ed6fd1e8e026059d8779efdd67a89dbb7967468d703c5da31544947756c9/allianceauth-discordbot-3.4.0b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67a7b51a497a059da7ce42309f20b4364044f7820c7f983e15727906e7252195",
        "md5": "f0916b14a07c19efd0a6598bd80c0600",
        "sha256": "82871e4fd555e59119e377774e585c1480322c50ca1c11f46c1d0d78eef15723"
      },
      "downloads": -1,
      "filename": "allianceauth-discordbot-3.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f0916b14a07c19efd0a6598bd80c0600",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 36884,
      "upload_time": "2022-09-17T11:19:59",
      "upload_time_iso_8601": "2022-09-17T11:19:59.903349Z",
      "url": "https://files.pythonhosted.org/packages/67/a7/b51a497a059da7ce42309f20b4364044f7820c7f983e15727906e7252195/allianceauth-discordbot-3.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}