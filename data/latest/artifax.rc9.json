{
  "info": {
    "author": "Bruno Lange",
    "author_email": "blangeram@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# artifax\n\n![Tests](https://github.com/brunolange/artifax/actions/workflows/pythonpackage.yml/badge.svg)\n![Coverage](https://img.shields.io/codecov/c/github/brunolange/artifax?color=%2334D058)\n\nartifax is a Python package to evaluate nodes in a computation graph where\nthe dependencies associated with each node are extracted directly from their\nfunction signatures. Here's an example of `artifax` in action:\n\n```python\n>>> from artifax import build\n>>> import math\n>>> build({\n...     'x': math.pi/3,\n...     'sin': lambda x: math.sin(x),\n...     'cos': lambda x: math.cos(x),\n...     'y': lambda sin, cos: 2*sin - 1.2*cos\n... })\n{'x': 1.0471975511965976, 'sin': 0.8660254037844386, 'cos': 0.5000000000000001, 'y': 1.132050807568877}\n```\n\nInstall with pip:\n\n```bash\n$ python3 -m pip install artifax\n```\n\nA computation graph can be entirely encoded in a standard python dictionary.\nEach key represents a node or an artifact, that will eventually be computed\nonce all of its dependencies have been calculated. The value associated with\neach key can be either a constant - a string, a number or an instance of a class,\nor a function. In the latter case, the function arguments map to other nodes\nin the computation graph to establish a direct dependency between the nodes.\n\nFor example, the following dictionary:\n\n```python\nartifacts = {\n    'A': 42,\n    'B': 7,\n    'C': lambda: 10,\n    'AB': lambda A, B: A*B,\n    'C-B': lambda B, C: C - B,\n    'greeting': 'Hello',\n    'message': lambda greeting, A: '{} World! The answer is {}.'.format(greeting, A)\n}\n```\nyields the following computation graph:\n\n![Screenshot](sample-dag.png)\n<div style=\"font-style:italic\">Figure 1. Example of a computation graph.</div>\n\nThe `build` function evalutes the entire computation graph and returns a new dictionary\nwith the same keys as the original one and with the calculated values for each of the nodes\nin the computation graph.\n\n```python\nfrom artifax import build\n\nartifacts = {\n    'A': 42,\n    'B': 7,\n    'C': lambda: 10,\n    'AB': lambda A, B: A*B,\n    'C-B': lambda B, C: C - B,\n    'greeting': 'Hello',\n    'message': lambda greeting, A: '{} World! The answer is {}.'.format(greeting, A)\n}\nresult = build(artifacts)\n\nfor k, v in result.items():\n    print(f\"{k:<10}: {v}\")\n```\noutputs\n```shell\nA         : 42\nB         : 7\nC         : 10\nAB        : 294\nC-B       : 3\ngreeting  : Hello\nmessage   : Hello World! The answer is 42.\n```\n\n# Artifax class\n\nThe `build` function represents the core transformation that yields artifacts.\nIt is entirely stateless and has no side-effects. Given the same input graph, it will always\nevaluate every single node and generate the same results.\n\nWhilst these features are highly desirable from any core component, the stateful `Artifax`\nclass can be employed to interface with the build function and provide some additional features\nand performance enhancements.\n\n```python\nfrom artifax import Artifax, At\n\ndef double(x):\n    return x*2\n\nafx = Artifax()\nafx.set('a', 42)\nafx.set('b', At('a', double))\n# set also accepts named arguments\nafx.set(c=lambda b: -b)\n\nassert len(afx) == 3\nassert 'b' in afx\n\nresults = afx.build()\nfor k, v in results.items():\n    print(k, v)\n\n# c -84\n# a 42\n# b 84\n```\n\n## Lazy builds\n\nArtifax instances optimize sequential builds by only re-evaluating nodes that\nhave become stale due to an update. For example, given the graph illustrated in\nFigure 1, if node `B` is updated, e.g, `afx.set('B', -5))`, nodes `B`, `AB` and\n`C-B` get re-evaluated when the build method is invoked, but not any other\nnodes.\n\nIn the example below, the second call to the `build` method triggers a\nre-evaluation of node `p1` and all the nodes that depend on it. Nodes `v2` and\n`m2`, on the other hand, do not require re-evaluation since they do not depend\non the updated node.\n\n```python\nimport artifax\nimport math\n\nclass Vector:\n    def __init__(self, u, v):\n        self.u = u\n        self.v = v\n    def magnitude(self):\n        print('Calculating magnitude of vector {}...'.format(self))\n        return math.sqrt(self.u**2 + self.v**2)\n    def __repr__(self):\n        return '({}, {})'.format(self.u, self.v)\n\nafx = artifax.Artifax(\n    p1=(3, 4),\n    v1=lambda p1: Vector(*p1),\n    m1=lambda v1: v1.magnitude(),\n    v2=Vector(5, 12),\n    m2=lambda v2: v2.magnitude()\n)\n_ = afx.build()\nprint('Updating p1...')\nafx.set(p1=(1, 1))\n_ = afx.build()\n```\n\n```\nCalculating magnitude of vector (3, 4)...\nCalculating magnitude of vector (5, 12)...\nUpdating p1...\nCalculating magnitude of vector (1, 1)...\n```\n\n## Targeted builds\nThe `build` method accepts an optional argument that specifies which node in\nyour computation graph should be built. Instead of returning the usual dictionary,\ntargeted builds return a tuple containing the value associated with each of the\ntarget nodes.\n\n```python\nterminal_node_value = afx.build(targets='terminal_node')\nsome_node, another_node = afx.build(targets=('node1', 'node2'))\n\n```\n\nTargeted builds only evaluate dependencies for the target node and the target node itself.\nAny other nodes in the computation graph do not get evaluated.\n\n```python\nfrom artifax import Artifax\nafx = Artifax({\n    'name': 'World',\n    'punctuation': '?',\n    'greeting': lambda name, punctuation: 'Hello, {}{}'.format(name, punctuation),\n})\ngreeting = afx.build(targets='greeting')\nprint(greeting) # prints \"Hello, World?\"\nafx.set('punctuation', '!')\ngreeting, punctuation = afx.build(targets=('greeting', 'punctuation'))\nprint(greeting) # prints \"Hello, World!\"\nprint('Cool beans{}'.format(punctuation)) # prints \"Cool beans!\"\n```\n\nTargeted builds are an efficient way of retrieving certain nodes without\nevaluating the entire computation graph.\n\n# Solvers\n\nDepending on the use case, different solvers can be employed to increase performance.\nThe `build` function and methods accept an optional `solver` parameter which defaults to\n`linear`.\n\n## The `linear` solver\n\nThe linear solver topologically sorts the computation graph to define a sequence\nof nodes to be calculated in an order such that for any node, all of its dependencies appear\nbefore in the sequence.\n\n## The `parallel` solver\n\nThe `parallel` solver consumes the computation graph starting from the nodes that have\nno dependencies and processes them all in parallel. When this initial set of nodes is resolved,\ntheir immediate neighbors make up the new frontier which also gets processed in parallel.\nThis procedure continues until there are no more nodes to be calculated. At any step, the\nsolver spawns one new process for each node at the frontier without exceeding the number of\navailable cores minus 1.\n\n## The `async` solver\n\nThe `async` solver takes the parallelism of the `parallel` solver one step further. It is triggered\neach time a node evaluation is completed, looking for new nodes that can be started and evaluating\nthem in a new process immediately.\n\n# Error handling\n\nIf the computation graph represented by the artifacts dictionary is not a DAG\n(Direct Acyclic Graph), a `CircularDependencyError` exception is thrown.\n\n```python\nimport artifax\ntry:\n    _ = artifax.build({'x': lambda x: x+1})\nexcept artifax.CircularDependencyError as err:\n    print('Cannot build artifacts: {}'.format(err))\n```\n```\nCannot build artifacts: artifact graph is not a DAG\n```\n\nIf a particular node is represented by a function for which any of its arguments isn't part\nof the computation graph, an `UnresolvedDependencyError` exception is thrown.\n\n```python\n_ = artifax.build({\n    'x': 42,\n    'p': lambda x, y: x + y\n}) # raises UnresolvedDependencyError due to missing 'y' node\n```\n\nHowever, sometimes this behavior might be desirable if we want nodes to resolve to partially\napplied functions that can be used elsewhere. If that's the case, the exception can be suppressed\nby setting the `allow_partial_functions` optional parameter to `build` to `True`.\n\n```python\nresults = artifax.build({\n    'x': 42,\n    'p': lambda x, y: x + y\n}, allow_partial_functions=True)\nprint(results['p'](100)) # prints 142\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brunolange/artifax",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "artifax",
    "package_url": "https://pypi.org/project/artifax/",
    "platform": null,
    "project_url": "https://pypi.org/project/artifax/",
    "project_urls": {
      "Homepage": "https://github.com/brunolange/artifax"
    },
    "release_url": "https://pypi.org/project/artifax/0.5/",
    "requires_dist": [
      "pathos",
      "exos",
      "pylint ; extra == 'dev'"
    ],
    "requires_python": ">=3.5",
    "summary": "python package for building artifacts from a computational graph",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15531427,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6453aa156271f2d773423333334a18f8613afd0ea5410d07121d1c847eb106a9",
          "md5": "8a1c2c5148a17896a19a572254f2935a",
          "sha256": "d759c86c72ebcb7005cdf1653d25f15672803f3eb3907987c4246ea1f37b67c0"
        },
        "downloads": -1,
        "filename": "artifax-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a1c2c5148a17896a19a572254f2935a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 9045,
        "upload_time": "2019-09-09T03:10:24",
        "upload_time_iso_8601": "2019-09-09T03:10:24.947390Z",
        "url": "https://files.pythonhosted.org/packages/64/53/aa156271f2d773423333334a18f8613afd0ea5410d07121d1c847eb106a9/artifax-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9e6400e6af855bcbb10a00f84756c8dbf56a46295caa9013084b7651b19e703",
          "md5": "0efce889acee64e709c128daa94c1588",
          "sha256": "a83581e4014f0f989df1f1a263c80c09d78006d68dd943546edc811879e4befd"
        },
        "downloads": -1,
        "filename": "artifax-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0efce889acee64e709c128daa94c1588",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 11506,
        "upload_time": "2019-09-09T03:10:27",
        "upload_time_iso_8601": "2019-09-09T03:10:27.213372Z",
        "url": "https://files.pythonhosted.org/packages/b9/e6/400e6af855bcbb10a00f84756c8dbf56a46295caa9013084b7651b19e703/artifax-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c7ca41a6a72e84ddd3e71494c3cc0d97d9593cc7eac0533039ff6a6e26129c2",
          "md5": "d34ef566f9e286adc378871028ff0514",
          "sha256": "3d5b8d976913522885e6bde076d10223c55396eb75303f938833c2ffa165ee4f"
        },
        "downloads": -1,
        "filename": "artifax-0.1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d34ef566f9e286adc378871028ff0514",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 9072,
        "upload_time": "2019-09-09T03:19:45",
        "upload_time_iso_8601": "2019-09-09T03:19:45.501127Z",
        "url": "https://files.pythonhosted.org/packages/6c/7c/a41a6a72e84ddd3e71494c3cc0d97d9593cc7eac0533039ff6a6e26129c2/artifax-0.1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "349ad0a09f05923aa417eb6c783fff8352f6016c11a2252df13619dc281a9f1a",
          "md5": "e1a5fa4bfbfed6ebc6fd5ebe30a041f5",
          "sha256": "ffb63794768597101954aa9635ef040b0504504c7dc97a7b9e9cec8954408d9a"
        },
        "downloads": -1,
        "filename": "artifax-0.1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e1a5fa4bfbfed6ebc6fd5ebe30a041f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 11522,
        "upload_time": "2019-09-09T03:19:48",
        "upload_time_iso_8601": "2019-09-09T03:19:48.260978Z",
        "url": "https://files.pythonhosted.org/packages/34/9a/d0a09f05923aa417eb6c783fff8352f6016c11a2252df13619dc281a9f1a/artifax-0.1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6b1a849a196bd55dfe1d09f38e99792fdde9ec979c131dd1d43d20aac653797",
          "md5": "2e92325116dbca9f6e76107ac0bbcb8e",
          "sha256": "fc467bc6bc4827d1f0b819616a9db1c4148be4c625f9d8a2aa6077608916d70c"
        },
        "downloads": -1,
        "filename": "artifax-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e92325116dbca9f6e76107ac0bbcb8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 9052,
        "upload_time": "2019-09-09T03:19:46",
        "upload_time_iso_8601": "2019-09-09T03:19:46.771217Z",
        "url": "https://files.pythonhosted.org/packages/a6/b1/a849a196bd55dfe1d09f38e99792fdde9ec979c131dd1d43d20aac653797/artifax-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1eb3f03ba8114013f572dadc1d4cc7ce998a8931b27671795f3e15d172cf2777",
          "md5": "9313495f9fddbf3703f7ffc56a9f3260",
          "sha256": "f06762d366cc46bdc897d3480c401105f49f99cd9f55440887e608f283735f2f"
        },
        "downloads": -1,
        "filename": "artifax-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9313495f9fddbf3703f7ffc56a9f3260",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 11518,
        "upload_time": "2019-09-09T03:19:50",
        "upload_time_iso_8601": "2019-09-09T03:19:50.561999Z",
        "url": "https://files.pythonhosted.org/packages/1e/b3/f03ba8114013f572dadc1d4cc7ce998a8931b27671795f3e15d172cf2777/artifax-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d24755a0673a406cd38fc14286cbccc84cd5c1355065eb6dbe791d5117f5fd96",
          "md5": "9b77d49bb7fb49909a4667b40a93c822",
          "sha256": "012fe022ff4b6f78de7a4d107bfce9d758815ffcabf27ca51f2e1bb2a0b1a1bd"
        },
        "downloads": -1,
        "filename": "artifax-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b77d49bb7fb49909a4667b40a93c822",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 9065,
        "upload_time": "2019-09-21T06:41:16",
        "upload_time_iso_8601": "2019-09-21T06:41:16.036018Z",
        "url": "https://files.pythonhosted.org/packages/d2/47/55a0673a406cd38fc14286cbccc84cd5c1355065eb6dbe791d5117f5fd96/artifax-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43336261a361335440cb200cee707c0e3dfd2ddaffdc7d77c896e0968f1b5d1b",
          "md5": "963faa2129501c5a191fee154ab649fa",
          "sha256": "83417f810cdafbc622f4e4692f9c444ac97e81c40e3d24b2710b26b4ae546136"
        },
        "downloads": -1,
        "filename": "artifax-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "963faa2129501c5a191fee154ab649fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 11337,
        "upload_time": "2019-09-21T06:41:17",
        "upload_time_iso_8601": "2019-09-21T06:41:17.723770Z",
        "url": "https://files.pythonhosted.org/packages/43/33/6261a361335440cb200cee707c0e3dfd2ddaffdc7d77c896e0968f1b5d1b/artifax-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8af3c02cf5859872067618387fcf3fe363d8e31193edab802c8205014e9c4b2",
          "md5": "7272400d1331dc32f85fa0e834344fdc",
          "sha256": "3ef5700efa0eaa12bc957c821c34d7096bc71c02d4e4a6dca3341cebf9eeb799"
        },
        "downloads": -1,
        "filename": "artifax-0.1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7272400d1331dc32f85fa0e834344fdc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 11934,
        "upload_time": "2019-09-21T06:59:54",
        "upload_time_iso_8601": "2019-09-21T06:59:54.231554Z",
        "url": "https://files.pythonhosted.org/packages/e8/af/3c02cf5859872067618387fcf3fe363d8e31193edab802c8205014e9c4b2/artifax-0.1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63f965e39ae4c81d4bbc439a4af2a586c66904f23cab0b3ff43e8fc7243e94f5",
          "md5": "2e59e8fe2c7f4f33b3f6cfefcf98b7a0",
          "sha256": "2d5378a379730954c68a3a9083b6dddb12e4693d768cff72996be11219f98ba3"
        },
        "downloads": -1,
        "filename": "artifax-0.1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2e59e8fe2c7f4f33b3f6cfefcf98b7a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 14025,
        "upload_time": "2019-09-21T06:59:56",
        "upload_time_iso_8601": "2019-09-21T06:59:56.506781Z",
        "url": "https://files.pythonhosted.org/packages/63/f9/65e39ae4c81d4bbc439a4af2a586c66904f23cab0b3ff43e8fc7243e94f5/artifax-0.1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81b53269ae56af1fa09b77b70bbc8a369783f57422edf9f34d75e888f21eee99",
          "md5": "033461357ab06841707fc3de22894886",
          "sha256": "6644ee9448b899771330257dbe7d42c9a14bd57e2e03f74f312ec585906aec6e"
        },
        "downloads": -1,
        "filename": "artifax-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "033461357ab06841707fc3de22894886",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 12753,
        "upload_time": "2022-01-11T03:32:20",
        "upload_time_iso_8601": "2022-01-11T03:32:20.148105Z",
        "url": "https://files.pythonhosted.org/packages/81/b5/3269ae56af1fa09b77b70bbc8a369783f57422edf9f34d75e888f21eee99/artifax-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78a99281880347d9103e5402d0a9eb0dfee9c47b04f7eecd004af84e703a8e71",
          "md5": "6e3d5acddf48eb1219a60850c0b8249e",
          "sha256": "e08b1918a91af9df285ee101a261d424a58d94125235d63686e4d2866d639159"
        },
        "downloads": -1,
        "filename": "artifax-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6e3d5acddf48eb1219a60850c0b8249e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 13993,
        "upload_time": "2022-01-11T03:32:22",
        "upload_time_iso_8601": "2022-01-11T03:32:22.398945Z",
        "url": "https://files.pythonhosted.org/packages/78/a9/9281880347d9103e5402d0a9eb0dfee9c47b04f7eecd004af84e703a8e71/artifax-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3216fe2ef5fb5cb7f8db0937990a4448ac24b9017bd769e6b03bface6be95c3e",
          "md5": "618c4dc89e0b3a7832fefecfd9e3a823",
          "sha256": "8b4cbf768dd9f6e91a93334009d34c71d41e728ac271f9090f96bf2505b3df4e"
        },
        "downloads": -1,
        "filename": "artifax-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "618c4dc89e0b3a7832fefecfd9e3a823",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 11703,
        "upload_time": "2022-02-18T02:43:07",
        "upload_time_iso_8601": "2022-02-18T02:43:07.309541Z",
        "url": "https://files.pythonhosted.org/packages/32/16/fe2ef5fb5cb7f8db0937990a4448ac24b9017bd769e6b03bface6be95c3e/artifax-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35271c92a8b509dca7047aecffea11633b19f61a368a8405c317aad5f0912a26",
          "md5": "55fdf2dff8b0a4e0e46eb775abf2410f",
          "sha256": "b7d045f2bccc20f77faa6bc2d8e282a2e5cfe20d94dc6d990e3ba3ac877588cf"
        },
        "downloads": -1,
        "filename": "artifax-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "55fdf2dff8b0a4e0e46eb775abf2410f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 15587,
        "upload_time": "2022-02-18T02:43:11",
        "upload_time_iso_8601": "2022-02-18T02:43:11.675673Z",
        "url": "https://files.pythonhosted.org/packages/35/27/1c92a8b509dca7047aecffea11633b19f61a368a8405c317aad5f0912a26/artifax-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e518c8dbde4bc4756668e61071356a09f8b9572c05bc30130f777238aa6cbf19",
          "md5": "6ea86781a240ad2b990a0e37e6b0ae62",
          "sha256": "d48ba5964770d990dafdc73250f52ae75162692ec832a8ee923cc480108b0b1f"
        },
        "downloads": -1,
        "filename": "artifax-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ea86781a240ad2b990a0e37e6b0ae62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 11018,
        "upload_time": "2022-03-26T05:57:42",
        "upload_time_iso_8601": "2022-03-26T05:57:42.262379Z",
        "url": "https://files.pythonhosted.org/packages/e5/18/c8dbde4bc4756668e61071356a09f8b9572c05bc30130f777238aa6cbf19/artifax-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3f5457d841114ad86c2ff4062b8fd369577429bc8aa455d2e28838db1f1b895",
          "md5": "f91a746e83b20d5f7da4c3fc42e34a84",
          "sha256": "aeedcbbe287c25239e49f5ec63e9da450801cd892caef62dc2d4e9a4d3d1a8b0"
        },
        "downloads": -1,
        "filename": "artifax-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f91a746e83b20d5f7da4c3fc42e34a84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 15096,
        "upload_time": "2022-03-26T05:57:47",
        "upload_time_iso_8601": "2022-03-26T05:57:47.781608Z",
        "url": "https://files.pythonhosted.org/packages/b3/f5/457d841114ad86c2ff4062b8fd369577429bc8aa455d2e28838db1f1b895/artifax-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e428ade1c7357734aa649ad7c32f88c170bb5ba06a66f0f0c1f0493ec4cd6f1",
          "md5": "17c7ed1ee62400fcddecb9ecb7b29f76",
          "sha256": "1276bfe2f3ba6f6f632d8a73f6a67aef95ad8c18f5977acf7ce12b013f549654"
        },
        "downloads": -1,
        "filename": "artifax-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17c7ed1ee62400fcddecb9ecb7b29f76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 11001,
        "upload_time": "2022-10-26T02:58:43",
        "upload_time_iso_8601": "2022-10-26T02:58:43.316330Z",
        "url": "https://files.pythonhosted.org/packages/9e/42/8ade1c7357734aa649ad7c32f88c170bb5ba06a66f0f0c1f0493ec4cd6f1/artifax-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60428d181281af737582bbafb71010cf8d90590e8944c01c4f5fb4db7c834e70",
          "md5": "361c8cc889c3a73d317eaedd3cc33b08",
          "sha256": "1a71ebdb553b7cc42b4ee04f35ed14bc892e0088824ffbf0256193c81c339874"
        },
        "downloads": -1,
        "filename": "artifax-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "361c8cc889c3a73d317eaedd3cc33b08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 15221,
        "upload_time": "2022-10-26T02:58:45",
        "upload_time_iso_8601": "2022-10-26T02:58:45.265950Z",
        "url": "https://files.pythonhosted.org/packages/60/42/8d181281af737582bbafb71010cf8d90590e8944c01c4f5fb4db7c834e70/artifax-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e428ade1c7357734aa649ad7c32f88c170bb5ba06a66f0f0c1f0493ec4cd6f1",
        "md5": "17c7ed1ee62400fcddecb9ecb7b29f76",
        "sha256": "1276bfe2f3ba6f6f632d8a73f6a67aef95ad8c18f5977acf7ce12b013f549654"
      },
      "downloads": -1,
      "filename": "artifax-0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "17c7ed1ee62400fcddecb9ecb7b29f76",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 11001,
      "upload_time": "2022-10-26T02:58:43",
      "upload_time_iso_8601": "2022-10-26T02:58:43.316330Z",
      "url": "https://files.pythonhosted.org/packages/9e/42/8ade1c7357734aa649ad7c32f88c170bb5ba06a66f0f0c1f0493ec4cd6f1/artifax-0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60428d181281af737582bbafb71010cf8d90590e8944c01c4f5fb4db7c834e70",
        "md5": "361c8cc889c3a73d317eaedd3cc33b08",
        "sha256": "1a71ebdb553b7cc42b4ee04f35ed14bc892e0088824ffbf0256193c81c339874"
      },
      "downloads": -1,
      "filename": "artifax-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "361c8cc889c3a73d317eaedd3cc33b08",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 15221,
      "upload_time": "2022-10-26T02:58:45",
      "upload_time_iso_8601": "2022-10-26T02:58:45.265950Z",
      "url": "https://files.pythonhosted.org/packages/60/42/8d181281af737582bbafb71010cf8d90590e8944c01c4f5fb4db7c834e70/artifax-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}