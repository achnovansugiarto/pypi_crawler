{
  "info": {
    "author": "Zakaria Louadi, olga lazareva",
    "author_email": "zakaria.louadi@tum.de, olga.lazareva@tum.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# DysRegNet package\n\n\nDysRegNet, is a  method for inferring patient-specific regulatory alterations (dysregulations) from gene expression profiles. DysRegNet uses linear models to account for confounders and residual-derived z-scores to assess significance.\n\n\n## Installation\nTo install the package from PyPI please run:\n\n`pip install dysregnet`\n\n\nor you can install it from git:\n\n`git clone https://github.com/biomedbigdata/DysRegNet_package.git  && cd DysRegNet_package`\n\n`python setup.py install`\n\n\n\n## Data input\n\nThe inputs of the  package are the following Pandas DataFrame object:\n\n\n- expression_data  - Gene expression matrix with the format: patients as rows (first column - patients/samples ids), and genes as columns.\n- GRN - Gene Regulatory Network (GRN) with two columns in the following order ['TF', 'target'].\n- meta -  Metadata with the first column containing patients/samples ids and other columns for the condition and the covariates.\n\n\nThe patients id or samples ids must be the same in the \"expression_data\" and  \"meta\". Additionally, gene names or ids must match the ones in the \"GRN\" DataFrame. \n\nIn the condition column of the meta DataFrame, the control samples should be encoded as 0 and case samples as 1.\n\nGRN network should be provided a prior, You can either use an experimental validated GRN or learn it from control samples, we recommend using software like [arboreto](https://github.com/aertslab/arboreto), since you can use its output directly to DysRegNet.\n\n\n\n\n\n## Parameters \n\n\nAdditionally, you can provide the following parameters:\n\n\n            \n- conCol: Column name for the condition in the meta DataFrame.\n\n- CatCov: List of categorical variable names. They should match the name of their columns in the meta Dataframe.\n\n- ConCov: List of continuous covariates. They should match the name of their columns in the meta Dataframe.\n\n- zscoring: Boolean, default: True. zscoring of expression data (if needed).\n\n- bonferroni_alpha:P-value threshold for multiple testing correction\n\n- normaltest: Boolean. If True, Run a normality test for residuals \"scipy.stats.normaltest\". If residuals are not normal, the edge will not be considered in the analysis. \n\n- normaltest_alpha: p-value threshold for normaltest (if True).\n\n- R2_threshold: R-squared (R2) threshold from 0 to 1 (optional).  If the fit is weaker, the edge will not be considered in the analysis. \n\n- direction_condition: Boolean. If True: only include dysregulation that are relevalant for the interactions (down regulation of an activation or up regulation of a supressions). Please check the paper for more details.\n\n\n## Get Started\n\n\nPlease note, that the functions are annotated with dockstrings for more details.\n\nImport the package and pandas:\n\n\n```python\nimport dysregnet\nimport pandas as pd\n```\n\n\n\nDefine the confounding variables or the design matrix \n\n```python\n# The condition column\nconCol='condition'\n\n# categorical variable columns in meta dataframe.\n# these columns will be transformed to variables for regression \nCatCov=['race','gender']  \n\n# continuous variable columns in meta dataframe.\nConCov=['birth_days_to']\n```\n\n\nRun DysRegNet\n\n```python\ndata=dysregnet.run(expression_data=expr,\n                   meta=meta, \n                   GRN=grn,\n                   conCol=conCol\n                   CatCov=CatCov,\n                   ConCov=ConCov,\n                   direction_condition=True,\n                   normaltest=True,\n                   R2_threshold=.2 )\n\n# results table\ndata.get_results()\n\n# or a binary result\n\ndata.get_results_binary()\n\n```\n\nThe expected run time for the installation and running the demo dataset on a \"normal\" desktop computer is around 3~5 minutes.\n\n\n\n## The output\n\nThe package output a DataFrame that represents patient-specific dysregulated edges. The columns represent edges and the rows patient ids. \n\nIn the result table, a value of 0 means that the edge is not significantly dysregulated (different from control samples). Otherwise, the z-score is reported, with a positive in case of activation and a negative sign in case of repression (different than the sign of the residual). \n\nThe method \"get_results_binary()\", outputs binarized dysregulations instead of z-scores. \n\n\n## Example\n\nA simple example for running DysRegNet:\n([Notebook](https://github.com/biomedbigdata/DysRegNet_package/blob/main/test.ipynb)/[Google Colab](https://colab.research.google.com/github/biomedbigdata/DysRegNet_package/blob/main/test.ipynb)).\n\n\nIf you want to eun the exact demo. You will need to download the demo dataset and extract the files into test dataset/\n\nLink: https://figshare.com/ndownloader/files/35142652\n\n\n\n## Cite\n\n\"DysRegNet: Patient-specific and confounder-aware dysregulated network inference\"\nOlga Lazareva*, Zakaria Louadi*, Johannes Kersting, Jan Baumbach, David B. Blumenthal, Markus List. bioRxiv 2022.04.29.490015; doi: https://doi.org/10.1101/2022.04.29.490015. * equal first-authors\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/biomedbigdata/DysRegNet_package",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dysregnet",
    "package_url": "https://pypi.org/project/dysregnet/",
    "platform": null,
    "project_url": "https://pypi.org/project/dysregnet/",
    "project_urls": {
      "Homepage": "https://github.com/biomedbigdata/DysRegNet_package"
    },
    "release_url": "https://pypi.org/project/dysregnet/0.0.3/",
    "requires_dist": [
      "pandas",
      "numpy (>=1.19)",
      "scipy",
      "statsmodels",
      "tqdm",
      "sklearn"
    ],
    "requires_python": ">=3.7",
    "summary": "DysRegNet",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13843697,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc14d93023a426a863a4612f4ef18732668766f208b04236e25682a581ce78dd",
          "md5": "f79cfd49ad4df1dad69b2c4472d06211",
          "sha256": "f46190a4273b3752565c7fc8c204d4a36114562d0f4bf9ef0e2a5c1f2cf4d151"
        },
        "downloads": -1,
        "filename": "dysregnet-0.0.1-py3.9.egg",
        "has_sig": false,
        "md5_digest": "f79cfd49ad4df1dad69b2c4472d06211",
        "packagetype": "bdist_egg",
        "python_version": "0.0.1",
        "requires_python": ">=3.7",
        "size": 11278,
        "upload_time": "2022-05-17T16:04:21",
        "upload_time_iso_8601": "2022-05-17T16:04:21.275933Z",
        "url": "https://files.pythonhosted.org/packages/bc/14/d93023a426a863a4612f4ef18732668766f208b04236e25682a581ce78dd/dysregnet-0.0.1-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4fedc195c40701c47d1d3861cf8e6c8210e8b1cb78e210c3ffa8d4f98eba4bd",
          "md5": "6e55650b8773927ef394ddb467be0fbe",
          "sha256": "fb9692f9929204699c362178108d6fc867601891bf0539d157b0ddd150fa24df"
        },
        "downloads": -1,
        "filename": "dysregnet-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e55650b8773927ef394ddb467be0fbe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19703,
        "upload_time": "2022-05-17T16:15:00",
        "upload_time_iso_8601": "2022-05-17T16:15:00.788896Z",
        "url": "https://files.pythonhosted.org/packages/f4/fe/dc195c40701c47d1d3861cf8e6c8210e8b1cb78e210c3ffa8d4f98eba4bd/dysregnet-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc21db019f1e6df184763aaaf2eb177cd7670533b83f89057f28bafeafc8c1bd",
          "md5": "ce29840b02fe505d835352ee168673bb",
          "sha256": "f6c5eace2e8cd1c56d9a469bb4551342a6dcf949564c8c02993fee5aacc855ba"
        },
        "downloads": -1,
        "filename": "dysregnet-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ce29840b02fe505d835352ee168673bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7063,
        "upload_time": "2022-05-17T16:04:23",
        "upload_time_iso_8601": "2022-05-17T16:04:23.483938Z",
        "url": "https://files.pythonhosted.org/packages/bc/21/db019f1e6df184763aaaf2eb177cd7670533b83f89057f28bafeafc8c1bd/dysregnet-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4a8a842cd7f8348becc996810ceb08e259e2d5f712ecbf5b3cfa7ff70cb7f0a",
          "md5": "57c90f8f53a231927dbb7e44b4dff0b4",
          "sha256": "2ef4abe038d2be7481a1ad869f239badd239292841a209aa6670c4ee97510cca"
        },
        "downloads": -1,
        "filename": "dysregnet-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57c90f8f53a231927dbb7e44b4dff0b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19704,
        "upload_time": "2022-05-17T16:17:24",
        "upload_time_iso_8601": "2022-05-17T16:17:24.928450Z",
        "url": "https://files.pythonhosted.org/packages/c4/a8/a842cd7f8348becc996810ceb08e259e2d5f712ecbf5b3cfa7ff70cb7f0a/dysregnet-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c757b67b35d3747e30331cc90f75007a152b6ca33c1d258593c0f52d0fd0d29c",
          "md5": "f621ee77f9906fe19e7b30223952b3b3",
          "sha256": "bfa503551b872f808a3ae3416b5b3344152d1c8cfa37723d69913a66f6530f7a"
        },
        "downloads": -1,
        "filename": "dysregnet-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f621ee77f9906fe19e7b30223952b3b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18933,
        "upload_time": "2022-05-17T16:17:26",
        "upload_time_iso_8601": "2022-05-17T16:17:26.222873Z",
        "url": "https://files.pythonhosted.org/packages/c7/57/b67b35d3747e30331cc90f75007a152b6ca33c1d258593c0f52d0fd0d29c/dysregnet-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4a8a842cd7f8348becc996810ceb08e259e2d5f712ecbf5b3cfa7ff70cb7f0a",
        "md5": "57c90f8f53a231927dbb7e44b4dff0b4",
        "sha256": "2ef4abe038d2be7481a1ad869f239badd239292841a209aa6670c4ee97510cca"
      },
      "downloads": -1,
      "filename": "dysregnet-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "57c90f8f53a231927dbb7e44b4dff0b4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 19704,
      "upload_time": "2022-05-17T16:17:24",
      "upload_time_iso_8601": "2022-05-17T16:17:24.928450Z",
      "url": "https://files.pythonhosted.org/packages/c4/a8/a842cd7f8348becc996810ceb08e259e2d5f712ecbf5b3cfa7ff70cb7f0a/dysregnet-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c757b67b35d3747e30331cc90f75007a152b6ca33c1d258593c0f52d0fd0d29c",
        "md5": "f621ee77f9906fe19e7b30223952b3b3",
        "sha256": "bfa503551b872f808a3ae3416b5b3344152d1c8cfa37723d69913a66f6530f7a"
      },
      "downloads": -1,
      "filename": "dysregnet-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f621ee77f9906fe19e7b30223952b3b3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 18933,
      "upload_time": "2022-05-17T16:17:26",
      "upload_time_iso_8601": "2022-05-17T16:17:26.222873Z",
      "url": "https://files.pythonhosted.org/packages/c7/57/b67b35d3747e30331cc90f75007a152b6ca33c1d258593c0f52d0fd0d29c/dysregnet-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}