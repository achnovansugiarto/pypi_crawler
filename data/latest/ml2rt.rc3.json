{
  "info": {
    "author": "Sherin Thomas",
    "author_email": "sherin@tensorwerk.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "=====================================================\nml2rt - Utilities for taking ML to different runtimes\n=====================================================\n\n\nMachine learning utilities for model conversion, serialization, loading etc\n\n\n* Free software: Apache Software License 2.0\n\nInstallation\n------------\n\n::\n\n    pip install ml2rt\n\n\nDocumentation\n-------------\n\nml2rt provides some convenient functions to convert, save & load machine learning models. It currently supports Tensorflow, PyTorch, Sklearn, Spark and ONNX but frameworks like xgboost, coreml are on the way.\n\nSaving Tensorflow model\n***********************\n\n.. code-block:: python\n\n    import tensorflow as tf\n    from ml2rt import save_tensorflow\n    # train your model here\n    sess = tf.Session()\n    save_tensorflow(sess, path, output=['output'])\n\nSaving PyTorch model\n********************\n\n.. code-block:: python\n\n    # it has to be a torchscript graph made by tracing / scripting\n    from ml2rt import save_torch\n    save_torch(torch_script_graph, path)\n\nSaving ONNX model\n*****************\n\n.. code-block:: python\n\n    from ml2rt import save_onnx\n    save_onnx(onnx_model, path)\n\nSaving sklearn model\n********************\n\n.. code-block:: python\n\n    from ml2rt import save_sklearn\n    prototype = np.array(some_shape, dtype=some_dtype)  # Equivalent to the input of the model\n    save_sklearn(sklearn_model, path, prototype=prototype)\n\n    # or\n\n    # some_shape has to be a tuple and some_dtype has to be a np.dtype, np.dtype.type or str object\n    save_sklearn(sklearn_model, path, shape=some_shape, dtype=some_dtype)\n\n    # or\n\n    # some_shape has to be a tuple and some_dtype has to be a np.dtype, np.dtype.type or str object\n    inital_types = utils.guess_onnx_tensortype(shape=shape, dtype=dtype)\n    save_sklearn(sklearn_model, path, initial_types=initial_types)\n\nSaving sparkml model\n********************\n\n.. code-block:: python\n\n    from ml2rt import save_sparkml\n    prototype = np.array(some_shape, dtype=some_dtype)  # Equivalent to the input of the model\n    save_sparkml(spark_model, path, prototype=prototype)\n\n    # or\n\n    # some_shape has to be a tuple and some_dtype has to be a np.dtype, np.dtype.type or str object\n    save_sparkml(spark_model, path, shape=some_shape, dtype=some_dtype)\n\n    # or\n\n    # some_shape has to be a tuple and some_dtype has to be a np.dtype, np.dtype.type or str object\n    inital_types = utils.guess_onnx_tensortype(shape=shape, dtype=dtype)\n    save_sparkml(spark_model, path, initial_types=initial_types)\n\nSklearn and sparkml models will be converted to ONNX first and then save to the disk. These models can be executed using ONNXRuntime, RedisAI etc. ONNX conversion needs to know the type of the input nodes and hence we have to pass shape & dtype or a prototype from where the utility can infer the shape & dtype or an initial_type object which is understood by the conversion utility. Frameworks like sparkml allows users to have heterogeneous inputs with more than one type. In such cases, use `guess_onnx_tensortypes` and create more than one initial_types which can be passed to save function as a list\n\n\nLoading model & script\n**********************\nLoading function can load both single file models like freezed tensorflow model or torchscript model or onnx model as well as SavedModel from tensorflow\n\n.. code-block:: python\n\n    model = ml2rt.load_model(path)\n\n    script = ml2rt.load_script(script)\n\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hhsecond/ml2rt",
    "keywords": "ml2rt",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ml2rt",
    "package_url": "https://pypi.org/project/ml2rt/",
    "platform": "",
    "project_url": "https://pypi.org/project/ml2rt/",
    "project_urls": {
      "Homepage": "https://github.com/hhsecond/ml2rt"
    },
    "release_url": "https://pypi.org/project/ml2rt/0.2.0/",
    "requires_dist": [
      "tensorflow ; extra == 'all'",
      "torch ; extra == 'all'",
      "sklearn ; extra == 'all'",
      "skl2onnx ; extra == 'all'",
      "pandas ; extra == 'all'",
      "onnxmltools ; extra == 'all'",
      "onnxconverter-common ; extra == 'all'",
      "numpy ; extra == 'all'",
      "pyspark ; extra == 'all'",
      "onnx ; extra == 'all'",
      "onnx ; extra == 'onnx'",
      "torch ; extra == 'pytorch'",
      "sklearn ; extra == 'sklearn'",
      "skl2onnx ; extra == 'sklearn'",
      "pandas ; extra == 'sklearn'",
      "onnxmltools ; extra == 'sklearn'",
      "onnxconverter-common ; extra == 'sklearn'",
      "numpy ; extra == 'sklearn'",
      "pyspark ; extra == 'sparkml'",
      "onnxmltools ; extra == 'sparkml'",
      "onnxconverter-common ; extra == 'sparkml'",
      "numpy ; extra == 'sparkml'",
      "tensorflow ; extra == 'tensorflow'"
    ],
    "requires_python": "",
    "summary": "Machine learning utilities for model conversion, serialization, loading etc",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7171238,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcd6f7c4a588bfa496374b2f91f6115331314a664770134577ed1abbc67b151a",
          "md5": "b04daaf9670267c5c6a784f3822f0020",
          "sha256": "497011b9e59da62754034408d750a6b4edf58b16991f6ea7aea993f80326a762"
        },
        "downloads": -1,
        "filename": "ml2rt-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b04daaf9670267c5c6a784f3822f0020",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6650,
        "upload_time": "2019-07-18T07:40:53",
        "upload_time_iso_8601": "2019-07-18T07:40:53.432987Z",
        "url": "https://files.pythonhosted.org/packages/dc/d6/f7c4a588bfa496374b2f91f6115331314a664770134577ed1abbc67b151a/ml2rt-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcab4b1d7fa19565ddb038614f36c0303302871340f823567fce7a8accdf9a87",
          "md5": "4f323e7ede98f74fe09bb21023992327",
          "sha256": "d783d9912e6ced4746686e9bd0097d13c818e08df70e069c2a4c3f8d9040231d"
        },
        "downloads": -1,
        "filename": "ml2rt-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f323e7ede98f74fe09bb21023992327",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7602,
        "upload_time": "2020-01-07T15:38:26",
        "upload_time_iso_8601": "2020-01-07T15:38:26.860129Z",
        "url": "https://files.pythonhosted.org/packages/fc/ab/4b1d7fa19565ddb038614f36c0303302871340f823567fce7a8accdf9a87/ml2rt-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e32c7b86ea2487d7ed6494fa6c94f240f77d8460a75135d67e4de87b9d99f3b",
          "md5": "62b31acdcafa7fd3f8689c019810df69",
          "sha256": "2e0269df2822b7acb3d3900dc0cff3307c060c9503787c33ac7fb3fe0389fa1a"
        },
        "downloads": -1,
        "filename": "ml2rt-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "62b31acdcafa7fd3f8689c019810df69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9362,
        "upload_time": "2020-01-07T15:38:29",
        "upload_time_iso_8601": "2020-01-07T15:38:29.254810Z",
        "url": "https://files.pythonhosted.org/packages/3e/32/c7b86ea2487d7ed6494fa6c94f240f77d8460a75135d67e4de87b9d99f3b/ml2rt-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49ecc186d1ad290ed73258c6c3196bf4b05db447c3cd8cb8669bcef6bee2322a",
          "md5": "0c3aa1539b4330aec2c30f0d3387fb2e",
          "sha256": "6e8f154d46d518df8ca3c030bf89e6270138c6a7bf962a60e795f2e51e6021da"
        },
        "downloads": -1,
        "filename": "ml2rt-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c3aa1539b4330aec2c30f0d3387fb2e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7788,
        "upload_time": "2020-05-05T11:05:49",
        "upload_time_iso_8601": "2020-05-05T11:05:49.902109Z",
        "url": "https://files.pythonhosted.org/packages/49/ec/c186d1ad290ed73258c6c3196bf4b05db447c3cd8cb8669bcef6bee2322a/ml2rt-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8afd9398149da6382459596497b6e0627fff15a456161c3604ebe4b02d2b5037",
          "md5": "2ff457786ab20e0a5dd384357b187e4c",
          "sha256": "42ba3cb342582fcc568cb7006b2a9dc3a8c53ec33652b205b6fd583167978fb8"
        },
        "downloads": -1,
        "filename": "ml2rt-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2ff457786ab20e0a5dd384357b187e4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11004,
        "upload_time": "2020-05-05T11:05:51",
        "upload_time_iso_8601": "2020-05-05T11:05:51.392949Z",
        "url": "https://files.pythonhosted.org/packages/8a/fd/9398149da6382459596497b6e0627fff15a456161c3604ebe4b02d2b5037/ml2rt-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49ecc186d1ad290ed73258c6c3196bf4b05db447c3cd8cb8669bcef6bee2322a",
        "md5": "0c3aa1539b4330aec2c30f0d3387fb2e",
        "sha256": "6e8f154d46d518df8ca3c030bf89e6270138c6a7bf962a60e795f2e51e6021da"
      },
      "downloads": -1,
      "filename": "ml2rt-0.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0c3aa1539b4330aec2c30f0d3387fb2e",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7788,
      "upload_time": "2020-05-05T11:05:49",
      "upload_time_iso_8601": "2020-05-05T11:05:49.902109Z",
      "url": "https://files.pythonhosted.org/packages/49/ec/c186d1ad290ed73258c6c3196bf4b05db447c3cd8cb8669bcef6bee2322a/ml2rt-0.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8afd9398149da6382459596497b6e0627fff15a456161c3604ebe4b02d2b5037",
        "md5": "2ff457786ab20e0a5dd384357b187e4c",
        "sha256": "42ba3cb342582fcc568cb7006b2a9dc3a8c53ec33652b205b6fd583167978fb8"
      },
      "downloads": -1,
      "filename": "ml2rt-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2ff457786ab20e0a5dd384357b187e4c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11004,
      "upload_time": "2020-05-05T11:05:51",
      "upload_time_iso_8601": "2020-05-05T11:05:51.392949Z",
      "url": "https://files.pythonhosted.org/packages/8a/fd/9398149da6382459596497b6e0627fff15a456161c3604ebe4b02d2b5037/ml2rt-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}