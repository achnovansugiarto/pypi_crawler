{
  "info": {
    "author": "",
    "author_email": "Nguyen Ba Duc Tin <nguyenbaduc.tin@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Home Automation",
      "Topic :: Office/Business",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development :: Debuggers",
      "Topic :: Utilities"
    ],
    "description": "# ZipUnicode\r\nMake extracted unreadable filename problem gone away. \r\n\r\n[![Downloads](https://pepy.tech/badge/zipunicode)](https://pepy.tech/project/zipunicode)\r\n[![PyPI version](https://badge.fury.io/py/zipunicode.svg)](https://pypi.org/project/zipunicode/)\r\n[![GitHub license](https://img.shields.io/github/license/Dragon2fly/zipunicode)](https://github.com/Dragon2fly/zipunicode/blob/master/LICENSE)\r\n\r\n## Install:\r\nUsing pip: `pip install ZipUnicode`\r\n\r\nBeside installing `zip_unicode` package, \r\nthis will also create an executable file `zipu` in the syspath \r\nfor you to work with `zip` file directly from the console. \r\n\r\n## Filename encoding inside a zip file\r\nEveryone agrees what a zip file is and how to make one. \r\nThat is the way to turn a collection of files into a sequence of bytes \r\nand put a `.zip` at the end of the name of a newly created file. \r\nBut no one said anything about how filename should be handled. \r\nSo it is up to the zip extracting program to interpret that sequence of bytes into filename.  \r\n\r\nMost OS use UTF-8 for filename encoding and flip a bit in the zip file to indicate that.\r\nHowever, Windows is not a case. For different languages, Windows uses different `code page`s\r\nto encode filename. So, if you create a zip file containing a file named `ê.txt` on Linux and \r\nextract it on Windows, you may got something like `├¬.txt` or `ﾃｪ.txt`. \r\n\r\nThe exact filename depends on the `code page` or `language` that Windows is using. \r\nThe same thing also happens when a zip file was created on Windows,\r\ncontains non-ascii filename, and then extracted on Linux or on Windows that use different `code page`s.\r\n\r\nAll that means if the filename wasn't encoded by `UTF-8` `encoding (or code page)`,\r\nthen there is no easy way to knows which `encoding` that was used when extracting the file. \r\n\r\n## Overview\r\nYou will use `zipu` to interact with zip file.\r\n\r\n```bash\r\n$ zipu -h\r\n```\r\n\r\n```bash\r\nusage: zipu [-h] [--extract] [--fix] [--encoding ENCODING]\r\n            [--password PASSWORD]\r\n            zipfile [destination]\r\n\r\nFix filename encoding error inside a zip file.\r\n\r\npositional arguments:\r\n  zipfile               path to zip file\r\n  destination           folder path to extract zip file\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  --extract, -x         extract the zipfile to specified destination\r\n  --fix, -f             create a new zip file with UTF-8 file names\r\n  --encoding ENCODING, -enc ENCODING\r\n                        zip file used encoding: shift-jis, cp932...\r\n  --password PASSWORD, -pwd PASSWORD\r\n                        password to extract zip file\r\n```\r\n\r\nExtracting a zip file is as simple as `zipu -x file.zip`. \r\nFiles are extracted into the folder that has the same name as `file.zip` without `.zip`\r\nand stays on the same folder path as `file.zip`. Filename `encoding` is handled automatically.\r\n\r\nYou can also ensure your zip file being opened correctly on all computers by `zipu -f file.zip`.\r\nThis will create a new `file_fixed.zip` contains all file names encoded with `UTF-8`.\r\n\r\n## Usage:\r\n1. View content of the zip file:\r\n   \r\n   You simply point `zipu` to your zip file's path as follow:\r\n   \r\n    ```bash\r\n    zipu path/to/file.zip\r\n    ```\r\n   \r\n   This makes `zipu` do the following:\r\n    * automatically guess the encoding that was used to encode file names\r\n    * check if the file was password encrypted \r\n    * give you a default extract destination if you don't provide any\r\n    \r\n   Then, it will show a summarization of the contents of that zip file, \r\n   something similar to the following:\r\n   \r\n       D:\\tmp>zipu 20200524_ドラゴンフライト.zip\r\n   \r\n   ```bash\r\n     * Detected encoding  :  SHIFT_JIS | Language:Japanese | Confidence:99%\r\n     * Default destination:  D:\\tmp\r\n     * Password protected :  False\r\n    --------------------------- try encoding: SHIFT_JIS ---------------------------\r\n    20200524_ドラゴンフライト/\r\n    20200524_ドラゴンフライト/テストレポート＿リナックスノード.txt\r\n    20200524_ドラゴンフライト/太陽バッテリーver5.txt\r\n    20200524_ドラゴンフライト/経営報告_桜ちゃん.txt\r\n    -------------------------------------------------------------------------------\r\n    Add '-enc ENCODING' to see filename shown in encoding ENCODING (mbcs, cp932, shift-jis,...)\r\n    Add '-x' flag to extract all files to default destination\r\n   ```\r\n   \r\n   If there is a root folder inside and it has the same name as the zip file as above example, \r\n   `default destination` will be the parent folder of the zip file.\r\n   Otherwise, `default destination` will point to a subdirectory \r\n   that has the name of the zip file as the following case:\r\n   \r\n       D:\\tmp>zipu 20200524_ドラゴンボール.zip\r\n   \r\n   ```bash\r\n     * Detected encoding  :  SHIFT_JIS | Language:Japanese | Confidence:99%\r\n     * Default destination:  D:\\tmp\\20200524_ドラゴンボール\r\n     * Password protected :  False\r\n    --------------------------- try encoding: SHIFT_JIS ---------------------------\r\n    テストレポート＿リナックスノード.txt\r\n    太陽バッテリーver5.txt\r\n    経営報告_桜ちゃん.txt\r\n    -------------------------------------------------------------------------------\r\n    Add '-enc ENCODING' to see filename shown in encoding ENCODING (mbcs, cp932, shift-jis,...)\r\n    Add '-x' flag to extract all files to default destination\r\n   ```\r\n\r\n2. View content with a specific encoding:\r\n\r\n   Encoding auto-detection is not always correct. When the sample is too little\r\n   and some parts of `A` encoding are in `B` encoding, `B` may be wrongly detected\r\n   instead of `A`. In such cases, you can specify the encoding which you believe\r\n   is the correct one with `-enc ENCODING` switch.\r\n   \r\n       D:\\tmp>zipu 20200524_ドラゴンボール.zip -enc cp932\r\n   \r\n   ```bash\r\n     * Default destination:  D:\\tmp\\20200524_ドラゴンボール\r\n     * Password protected :  False\r\n    --------------------------- try encoding: cp932 ---------------------------\r\n    テストレポート＿リナックスノード.txt\r\n    太陽バッテリーver5.txt\r\n    経営報告_桜ちゃん.txt\r\n    ---------------------------------------------------------------------------\r\n    Add '-enc ENCODING' to see filename shown in encoding ENCODING (mbcs, cp932, shift-jis,...)\r\n    Add '-x' flag to extract all files to default destination\r\n   ```\r\n   \r\n   In case that your specified `ENCODING` is wrong and cannot decode some bytes,\r\n   these unknown bytes will be replaced by a lot of `�`.\r\n   \r\n       D:\\tmp>zipu 20200524_ドラゴンボール.zip -enc ascii\r\n   \r\n   ```bash\r\n     * Default destination:  D:\\tmp\\20200524_ドラゴンボール\r\n     * Password protected :  False\r\n    --------------------------- try encoding: ascii ---------------------------\r\n    �e�X�g���|�[�g�Q���i�b�N�X�m�[�h.txt\r\n    ���z�o�b�e���[ver5.txt\r\n    �o�c��_�������.txt\r\n    ---------------------------------------------------------------------------\r\n    Add '-enc ENCODING' to see filename shown in encoding ENCODING (mbcs, cp932, shift-jis,...)\r\n    Add '-x' flag to extract all files to default destination\r\n   ```\r\n   \r\n   Or those bytes are mapped into completely different characters:\r\n   \r\n       D:\\tmp>zipu 20200524_ドラゴンボール.zip -enc utf16\r\n   \r\n   ```bash\r\n     * Default destination:  D:\\tmp\\20200524_ドラゴンボール\r\n     * Password protected :  False\r\n    --------------------------- try encoding: utf16 ---------------------------\r\n    斃境枃貃粃宁枃冁誃榃抃亃境涃宁梃琮瑸\r\n    뺑窗澃抃斃誃宁敶㕲琮瑸\r\n    澌掉邍赟苷芿苡⻱硴�\r\n    ---------------------------------------------------------------------------\r\n    Add '-enc ENCODING' to see filename shown in encoding ENCODING (mbcs, cp932, shift-jis,...)\r\n    Add '-x' flag to extract all files to default destination\r\n   ```\r\n   \r\n   Only when auto-detection failed, it is your responsibility to decide which `ENCODING` is the correct one.\r\n   \r\n   **Warning**: If your console uses non-full `UTF-8` font as in the case of Windows,\r\n   some `UTF-8` characters are shown as a dot `・`. \r\n   This is not a result of wrong encoding but rather unsupported characters by the font.\r\n   \r\n3. Extract the zip file:\r\n\r\n    Usually, encoding auto-detection works just fine so you can jump right to extraction with <br>\r\n    `zipu -x path/to/file.zip`. The `-x` argument can be either placed **before or after** the path to the zip file.\r\n    \r\n        D:\\tmp>zipu 20200524_ドラゴンフライト.zip -x\r\n    \r\n    ```bash\r\n     * Detected encoding  :  SHIFT_JIS | Language:Japanese | Confidence:99%\r\n    Extracting: 20200524_ドラゴンフライト/テストレポート＿リナックスノード.txt\r\n    Extracting: 20200524_ドラゴンフライト/太陽バッテリーver5.txt\r\n    Extracting: 20200524_ドラゴンフライト/経営報告_桜ちゃん.txt\r\n    Finished\r\n   ``` \r\n   \r\n   As mentioned before, without specifying the `destination`, zip file is extracted to\r\n   the directory in the same path and has the name of that zip file.<br> \r\n   In the above example, that would be `D:\\tmp\\20200524_ドラゴンフライト`.\r\n   \r\n   When extract `destination` is specified, you add it right after the zip file's path as:\r\n   \r\n       zipu -x path/to/file.zip path/to/extract \r\n   \r\n   If the output file names are unreadable, \r\n   you have to guess the `ENCODING` with `-enc` switch as described in **2. View content with a specified encoding**.\r\n   Then you can use that `ENCODING` to extract zip file:\r\n   \r\n       zipu path/to/file.zip -x -enc ENCODING\r\n   \r\n4. A Password protected zip file:\r\n\r\n    If a zip file is encrypted, ` * Password protected :  True` will show up when viewing its content. \r\n    When extracting the zip file, you will be asked for `password` if you haven't provided any.\r\n    You can also specify password directly in the command as follows:\r\n    \r\n        zipu path/to/file.zip -x -pwd PASSWORD  \r\n\r\n5. Mixed contents:\r\n\r\n   Some zip files are very tricky. It contains file names of different encodings. Some `UTF-8`, some not.\r\n   For `UTF-8` marked files, `zipu` will leave it as is while trying different `ENCODING` on other files.\r\n   `UTF-8` encoded filename has `(UTF-8) ` string prefixed in the content view:\r\n   \r\n       D:\\tmp>zipu ミックス.zip\r\n   \r\n   ```bash\r\n    * Detected encoding  :  SHIFT_JIS | Language:Japanese | Confidence:63%\r\n    * Default destination:  D:\\tmp\\ミックス\r\n    * Password protected :  False\r\n   --------------------------- try encoding: SHIFT_JIS ---------------------------\r\n   (UTF-8) Vùng Trời Bình Yên.txt\r\n   бореиская.txt\r\n   テストレポート＿リナックスノード.txt\r\n   太陽バッテリーver5.txt\r\n   経営報告_桜ちゃん.txt\r\n   -------------------------------------------------------------------------------\r\n   Add '-enc ENCODING' to see filename shown in encoding ENCODING (mbcs, cp932, shift-jis,...)\r\n   Add '-x' flag to extract all files to default destination\r\n   ```\r\n   \r\n   When extracting, `UTF-8` encoded filename will not wrongly be decoded with detected `ENCODING` \r\n   so that you can read it as is. \r\n   \r\n   **Warning**: `zipu` cannot handle zip file that contains three or more encodings, or two encodings\r\n   but neither is `UTF-8`. In such cases, you have to extract the zip file for each encoding.\r\n\r\n6. Fixing a zip file:\r\n\r\n   If you make a zip file contains file names which are not in `UTF-8` nor `ASCII` encoding, \r\n   then you can ensure that your colleagues who use computers of different language can \r\n   open the zip just fine as follows:\r\n   \r\n   ```bash\r\n   zipu -f path/to/file.zip\r\n   ```\r\n   \r\n   This first extracts your zip file (and convert all file names to `UTF-8`). \r\n   Then it compresses extracted contents and adds `_fixed` suffix to the zip filename.\r\n   The fixed zip file is on the same path as the original one.\r\n   \r\n   **Warning**: `zipu` cannot create password encrypted zip file. \r\n   With these files you have to first extract it by `zipu` and then re-zip it \r\n   with your conventional tool.\r\n\r\n## Changelog\r\n### 1.1.0\r\n   * Handle malformed zip file: Some zip files contain folders but are registered as file entries.\r\n  These file entries have size of zero by and are extracted as zero-byte files.\r\n  Since the OS doesn't allow creating file and folder of the same name \r\n  within the same directory, `zipu` cannot continue to create the folder and extract the file inside.\r\n  Now `zipu` will check for those malformed entries and skip it.\r\n   * Fixing zip file from commandline with `zipu -f` now work normally.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) [2020] [Nguyen Ba Duc Tin]  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ZipUnicode",
    "package_url": "https://pypi.org/project/ZipUnicode/",
    "platform": null,
    "project_url": "https://pypi.org/project/ZipUnicode/",
    "project_urls": {
      "homepage": "https://github.com/Dragon2fly/ZipUnicode"
    },
    "release_url": "https://pypi.org/project/ZipUnicode/1.1.1/",
    "requires_dist": [
      "chardet (>=3.0.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Fix unreadable file names when extracting zip file",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17441603,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33214b5cecd7c2e6f5dbdbe61d644fcb6ec53f4145be87e68aa3bf6c46e3ce4a",
          "md5": "c8e8524e68b28f232806fe4a0aba7ca6",
          "sha256": "de7bb66ba38469ead6e0865f4506ccf45df64079e251f7c95ac35bb275694244"
        },
        "downloads": -1,
        "filename": "ZipUnicode-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8e8524e68b28f232806fe4a0aba7ca6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8981,
        "upload_time": "2020-05-30T04:08:50",
        "upload_time_iso_8601": "2020-05-30T04:08:50.526170Z",
        "url": "https://files.pythonhosted.org/packages/33/21/4b5cecd7c2e6f5dbdbe61d644fcb6ec53f4145be87e68aa3bf6c46e3ce4a/ZipUnicode-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b520960abe6d76cb18d6fa3e17d9ef8af077ec8467c92ea40be7883378841112",
          "md5": "ea8a7e75d56f067429abe4ec2af3b0bf",
          "sha256": "4ecb0fd57708bc95c517a96574479508390eeab40acb4ba1b2b6a0d2761b51ad"
        },
        "downloads": -1,
        "filename": "ZipUnicode-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ea8a7e75d56f067429abe4ec2af3b0bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12217,
        "upload_time": "2020-05-30T04:08:52",
        "upload_time_iso_8601": "2020-05-30T04:08:52.558810Z",
        "url": "https://files.pythonhosted.org/packages/b5/20/960abe6d76cb18d6fa3e17d9ef8af077ec8467c92ea40be7883378841112/ZipUnicode-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c099934a55c65f09fb34d3b5c48b0621aac061cb306a94247e53ab67ec3c990c",
          "md5": "be53425c78cf6a59208d7fdb8c0514e8",
          "sha256": "e2f9eaaa9375e4387742067a625cefc484a585620ea635eed872ccefbb2a078b"
        },
        "downloads": -1,
        "filename": "ZipUnicode-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be53425c78cf6a59208d7fdb8c0514e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6425,
        "upload_time": "2023-03-25T06:00:25",
        "upload_time_iso_8601": "2023-03-25T06:00:25.075578Z",
        "url": "https://files.pythonhosted.org/packages/c0/99/934a55c65f09fb34d3b5c48b0621aac061cb306a94247e53ab67ec3c990c/ZipUnicode-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f3a6108a896f80f46b8d02a7ca72e565f0ce32a83276d29d932ec0dfbff2e07",
          "md5": "bf822d89ef701ecbc4cded2caf8d059b",
          "sha256": "6f21c16f88337f0f62cb2decb2d5ece445b9c4d1cf51e8e2bf6388caf8453614"
        },
        "downloads": -1,
        "filename": "ZipUnicode-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bf822d89ef701ecbc4cded2caf8d059b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 439178,
        "upload_time": "2023-03-25T06:00:27",
        "upload_time_iso_8601": "2023-03-25T06:00:27.575783Z",
        "url": "https://files.pythonhosted.org/packages/4f/3a/6108a896f80f46b8d02a7ca72e565f0ce32a83276d29d932ec0dfbff2e07/ZipUnicode-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d246b0af1a3334044cf8d415a1013f6cf81c360282d5d20ca118dd9914dd02b9",
          "md5": "a58c832bcf514957d1a9267e91fadd4e",
          "sha256": "61ec97415e51031d096aa98633956c20fb9ace91e4b934a5ebe6ef38f95b91f0"
        },
        "downloads": -1,
        "filename": "ZipUnicode-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a58c832bcf514957d1a9267e91fadd4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10176,
        "upload_time": "2023-03-25T11:34:32",
        "upload_time_iso_8601": "2023-03-25T11:34:32.140286Z",
        "url": "https://files.pythonhosted.org/packages/d2/46/b0af1a3334044cf8d415a1013f6cf81c360282d5d20ca118dd9914dd02b9/ZipUnicode-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f307b1c071ebc7ca57610fefaa74b0d9f5849642a07e4c2676073d73c8e3b1f2",
          "md5": "8068f07662bada2e2097786d67308d57",
          "sha256": "d8c6c459aecb9c310d2a183389debae1150b880512916fb990120368e5d337f3"
        },
        "downloads": -1,
        "filename": "ZipUnicode-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8068f07662bada2e2097786d67308d57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 233443,
        "upload_time": "2023-03-25T11:34:34",
        "upload_time_iso_8601": "2023-03-25T11:34:34.253979Z",
        "url": "https://files.pythonhosted.org/packages/f3/07/b1c071ebc7ca57610fefaa74b0d9f5849642a07e4c2676073d73c8e3b1f2/ZipUnicode-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d246b0af1a3334044cf8d415a1013f6cf81c360282d5d20ca118dd9914dd02b9",
        "md5": "a58c832bcf514957d1a9267e91fadd4e",
        "sha256": "61ec97415e51031d096aa98633956c20fb9ace91e4b934a5ebe6ef38f95b91f0"
      },
      "downloads": -1,
      "filename": "ZipUnicode-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a58c832bcf514957d1a9267e91fadd4e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10176,
      "upload_time": "2023-03-25T11:34:32",
      "upload_time_iso_8601": "2023-03-25T11:34:32.140286Z",
      "url": "https://files.pythonhosted.org/packages/d2/46/b0af1a3334044cf8d415a1013f6cf81c360282d5d20ca118dd9914dd02b9/ZipUnicode-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f307b1c071ebc7ca57610fefaa74b0d9f5849642a07e4c2676073d73c8e3b1f2",
        "md5": "8068f07662bada2e2097786d67308d57",
        "sha256": "d8c6c459aecb9c310d2a183389debae1150b880512916fb990120368e5d337f3"
      },
      "downloads": -1,
      "filename": "ZipUnicode-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8068f07662bada2e2097786d67308d57",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 233443,
      "upload_time": "2023-03-25T11:34:34",
      "upload_time_iso_8601": "2023-03-25T11:34:34.253979Z",
      "url": "https://files.pythonhosted.org/packages/f3/07/b1c071ebc7ca57610fefaa74b0d9f5849642a07e4c2676073d73c8e3b1f2/ZipUnicode-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}