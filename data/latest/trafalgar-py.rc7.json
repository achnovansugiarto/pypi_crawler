{
  "info": {
    "author": "Santosh Passoubady",
    "author_email": "santoshpassoubady@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# TrafalgarüÉè\n\nPython library to make development of portfolio analysis faster and easier\n<img src=\"https://i.ibb.co/vVdyvfj/Trafalgar.png\"/>\n# Installation üî•\n\nTo install Trafalgar, you should do:\n\n```\npip install trafalgar.py\n```\n(https://pypi.org/project/trafalgars/0.0.2/#description)\n\nFor Anaconda setup you can simply run below to install all dependencies with env name trafalgar.\n\n```\nconda env create --file environment.yaml  \n```\n\nNote : Step 1 and 2 are not always necessary, just make sure the libraries required by trafalgar are installed in you project env.\n\n## Features include üìà\n\n- Get close price, open price, adj close, volume and graphs of these in one line of code!\n- Build a efficient frontier programm in 3 lines of code\n- Make quantitative analysis on stocks/portfolios (alpha, beta, skew, kurtosis, rolling volatility...)\n- Build a  Capital Asset Pricing Model of a portfolio\n- Backtest a portfolio, see its stats and compare it to a benchmark\n- many other thnigs...\n\nHere is the code from a google collab, you can use it to follow along with the code: https://colab.research.google.com/drive/1qgFDDQneQP-oddbJVWWApfPKFMnbpj6I?usp=sharing\n\n## Credits ‚úåÔ∏è\n\nThis library would not exist without the existence of Github and :\n\n- the contributors @rslopes, @rakeshbhat9, @Haizzz\n- Quantopian and their incredible lectures (https://gist.github.com/ih2502mk/50d8f7feb614c8676383431b056f4291)\n- the authors of codingfinance.com\n- Quantconnect\n- @mrmushfiq and his repo https://github.com/mrmushfiq/python_meets_finance\n\n# DocumentationüöÄ\n\n### Call the library\nFirst, you should do:\n```sh\nfrom trafalgar import *\n```\n\n### Graph of the closing price of a stock\n\n```sh\n#graph_close(stock, start_date, end_date)\ngraph_close([\"FB\"], \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/Hgk72HR/t-l-chargement.png\"/></center>\n\n### Graph of the closing price of multiple stocks\n```sh\ngraph_close([\"FB\", \"AAPL\", \"TSLA\"], \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/Rymq0Vb/t-l-chargement.png\"/></center>\n\n### Graph the volume\n```sh\n#graph_volume(stock, start_date, end_date)\n\n#for one stock\ngraph_volume([\"FB\"], \"2020-01-01\", \"2021-01-01\")\n\n#for multiple stocks\ngraph_volume([\"FB\", \"AAPL\", \"TSLA\"], \"2020-01-01\", \"2021-01-01\")\n```\n### Graph the opening price\n```sh\n#graph_open(stock, start_date, end_date)\n\n#for one stock\ngraph_open([\"FB\"], \"2020-01-01\", \"2021-01-01\")\n\n#for multiple stocks\ngraph_open([\"FB\", \"AAPL\", \"TSLA\"], \"2020-01-01\", \"2021-01-01\")\n```\n### Graph the adjusted closing price\n```sh\n#graph_adj_close(stock, start_date, end_date)\n\n#for one stock\ngraph_adj_close([\"FB\"], \"2020-01-01\", \"2021-01-01\")\n\n#for multiple stocks\ngraph_adj_close([\"FB\", \"AAPL\", \"TSLA\"], \"2020-01-01\", \"2021-01-01\")\n```\n\n### Get closing price data (in dataframe format)\n\n```sh\n#close(stock, start_date, end_date)\nclose([\"AAPL\"], \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/bHFtrMd/Capture.jpg\"/></center>\n\n### Get volume data (in dataframe format)\n\n```sh\n#volume(stock, start_date, end_date)\nvolume([\"AAPL\"], \"2020-01-01\", \"2021-01-01\")\n```\n\n### Get opening price data (in dataframe format)\n```sh\n#open(stock, start_date, end_date)\nopen([\"AAPL\"], \"2020-01-01\", \"2021-01-01\")\n```\n### Get adjusted closing price data (in dataframe format)\n```sh\n#adj_close(stock, start_date, end_date)\nadj_close([\"AAPL\"], \"2020-01-01\", \"2021-01-01\")\n```\n\n### Covariance between stocks\n\n```sh\n#covariance(stocks, start_date, end_date, days) -> usually, days = 252\ncovariance([\"AAPL\", \"DIS\", \"AMD\"], \"2020-01-01\", \"2021-01-01\", 252)\n```\n<center><img src=\"https://i.ibb.co/CHR9Z33/Capture.jpg\"/></center>\n\n### Correlation between stocks\n\n```sh\n#correlation(stocks, start_date, end_date)\ncorrelation([\"AAPL\", \"AMD\", \"TSLA\", \"AMZN\", \"DIS\", \"SBUX\", \"NFLX\", \"AMZN\", \"GOOG\"], \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/Fb43bXN/Capture.jpg\"/></center>\n\n### Graph correlation between stocks\n\n```sh\n#graph_correlation(stocks, start_date, end_date)\ngraph_correlation([\"AAPL\", \"AMD\", \"TSLA\", \"AMZN\", \"DIS\", \"SBUX\", \"NFLX\", \"AMZN\", \"GOOG\"], \"2020-01-01\", \"2021-01-01\")\n```\n\n<center><img src=\"https://i.ibb.co/992jvDD/t-l-chargement-6.png\"/></center>\n\n### Get data from a stock in OHLCV format directly\n\n```sh\n#ohlcv(stock, start_date, end_date)\nohlcv(\"AAPL\", \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/pjy5MkF/Capture.jpg\"/>\n\n### Graph the returns (for each day)\n\n```sh\n#graph_returns(stock,wts, start_date, end_date)\n\n#for one stock\ngraph_returns([\"AAPL\"],1, \"2020-01-01\", \"2021-01-01\")\n```\n\n<center><img src=\"https://i.ibb.co/9NQcVPf/t-l-chargement-1.png\"/></center>\n\n```sh\n#for a portfolio\ngraph_returns([\"AAPL\", \"AMD\", \"TSLA\"], [0.25, 0.45, 0.3], \"2020-01-01\", \"2021-01-01\")\n```\n\n<center><img src=\"https://i.ibb.co/vsNyMP8/t-l-chargement-2.png\"/></center>\n\n### Get returns data of a stock/portfolio (in a dataframe format)\n\n```sh\n#returns(stocks,wts, start_date, end_date)\n# sum of wts(weights) should always be equal to 1, it represents the allocation of shares in your portfolio (1 = 100%)\n\n#for one stock\nreturns([\"AAPL\"],1, \"2020-01-01\", \"2021-01-01\")\n```\n\n<center><img src=\"https://i.ibb.co/rQw0vSZ/a.jpg\"/></center>\n\n```sh\n#for a portfolio\nreturns([\"AAPL\", \"AMD\", \"TSLA\"], [0.25, 0.45, 0.3], \"2020-01-01\", \"2021-01-01\")\n```\n\n<center><img src=\"https://i.ibb.co/d6CCQY5/Capture.jpg\"/></center>\n\n### Graph the cumulative returns of a stock/portfolio\n\n```sh\n#graph_creturns(stock, wts, start_date, end_date)\n\n#for one stock\ngraph_creturns([\"TSLA\"], 1, \"2020-01-01\", \"2021-01-01\")\n```\n\n<center><img src=\"https://i.ibb.co/YLw0f79/t-l-chargement-5.png\"/></center>\n\n```sh\n#for a portfolio\ngraph_creturns([\"AAPL\", \"AMD\", \"TSLA\"], [0.25, 0.45, 0.3], \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/4TNWJvz/t-l-chargement-4.png\"/></center>\n\n### Get cumulative returns data of a stock/portfolio (in a dataframe format)\n```sh\n#creturns(stock, wts, start_date, end_date)\n\n#for one stock\ncreturns([\"TSLA\"], 1, \"2020-01-01\", \"2021-01-01\")\n```\n\n<center><img src=\"https://i.ibb.co/fXLnqwQ/l.jpg\"/></center>\n\n```sh\n#for a portfolio\ncreturns([\"AAPL\", \"AMD\", \"TSLA\"], [0.25, 0.45, 0.3], \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/88F49dB/Capture.jpg\"/></center>\n\n\n### Annual Volatility of a portfolio/stock\n```sh\n#annual_volatility(stocks, wts, start_date, end_date)\n\n#for one stock\nannual_volatility([\"TSLA\"], 1, \"2020-01-01\", \"2021-01-01\")\n#for multiple stocks\nannual_volatility([\"AAPL\", \"AMD\", \"TSLA\"], [0.25, 0.45, 0.3], \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/41fNLMw/Capture.jpg\"/></center>\n\n### Sharpe Ratio of a portfolio/stock\n```sh\n#sharpe_ratio(stocks, wts, start_date, end_date)\n\n#for one stock\nsharpe_ratio([\"TSLA\"], 1, \"2020-01-01\", \"2021-01-01\")\n#for multiple stocks\nsharpe_ratio([\"AAPL\", \"AMD\", \"TSLA\"], [0.25, 0.45, 0.3], \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/7Y82t2z/Capture.jpg\"/></center>\n\n### Graph the returns of a portfolio/stock to a benchmark\n```sh\n#graph_rbenchmark(stocks, wts, benchmark, start_date, end_date)\n#for a stock\ngraph_rbenchmark([\"TSLA\"], 1, \"SPY\", \"2020-01-01\", \"2021-01-01\")\n```\n\n<center><img src=\"https://i.ibb.co/sCyFH64/t-l-chargement-8.png\"/></center>\n\n```sh\n#for a portfolio\ngraph_rbenchmark([\"AAPL\", \"AMD\", \"TSLA\"], [0.25, 0.45, 0.3], \"SPY\",  \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/3RGPcT7/t-l-chargement-9.png\"/></center>\n\n### Get the data of the returns of a portfolio/stock to a benchmark\n```sh\n#rbenchmark(stocks, wts, benchmark, start_date, end_date)\n\n#for one stock\nrbenchmark([\"TSLA\"], 1, \"SPY\", \"2020-01-01\", \"2021-01-01\")\n#for a portfolio\nrbenchmark([\"AAPL\", \"AMD\", \"TSLA\"], [0.25, 0.45, 0.3], \"SPY\",  \"2020-01-01\", \"2021-01-01\")\n```\n\n<center><img src=\"https://i.ibb.co/LPvVw4t/Capture.jpg\"/></center>\n\n\n\n### Graph the cumulative returns of a portfolio/stock to a benchmark\n```sh\n#graph_cbenchmark(stocks, wts, benchmark, start_date, end_date)\n\n#for a stock\ngraph_cbenchmark([\"TSLA\"], 1, \"SPY\", \"2020-01-01\", \"2021-01-01\")\n```\n\n<center><img src=\"https://i.ibb.co/QYPV1h2/t-l-chargement-11.png\"/></center>\n\n```sh\n#for a portfolio\ngraph_cbenchmark([\"AAPL\", \"AMD\", \"TSLA\"], [0.25, 0.45, 0.3], \"SPY\",  \"2020-01-01\", \"2021-01-01\")\n```\n\n<center><img src=\"https://i.ibb.co/NKT7WdS/t-l-chargement-12.png\"/></center>\n\n### Get the data of the cumulative returns of a portfolio/stock to a benchmark\n```sh\n#cbenchmark(stocks, wts, benchmark, start_date, end_date)\n\n#for a stock\ncbenchmark([\"TSLA\"], 1, \"SPY\", \"2020-01-01\", \"2021-01-01\")\n#for a portfolio\ncbenchmark([\"AAPL\", \"AMD\", \"TSLA\"], [0.25, 0.45, 0.3], \"SPY\",  \"2020-01-01\", \"2021-01-01\")\n```\n\n<center><img src=\"https://i.ibb.co/LPvVw4t/Capture.jpg\"/></center>\n\n### Alpha of a portfolio/stock\n\n```sh\n#alpha(stocks, wts, benchmark, start_date, end_date)\n\n#for a stock\nalpha([\"TSLA\"], 1, \"SPY\", \"2020-01-01\", \"2021-01-01\")\n\n#for a portfolio\nalpha([\"AAPL\", \"AMD\", \"TSLA\"], [0.25, 0.45, 0.3], \"SPY\",  \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/GJ35NpK/Capture.jpg\"/></center>\n\n### Beta of a portfolio/stock\n\n```sh\n#beta(stocks, wts, benchmark, start_date, end_date)\n\n#for one stock\nbeta([\"TSLA\"], 1, \"SPY\", \"2020-01-01\", \"2021-01-01\")\n#for multiple stocks\nbeta([\"AAPL\", \"AMD\", \"TSLA\"], [0.25, 0.45, 0.3], \"SPY\",  \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/5jLSR25/Capture.jpg\"/></center>\n\n### Efficient frontier to optimize allocation of shares in your portfolio\n\n```sh\n#efficient_frontier(stocks, start_date, end_date, iterations) -> iterations = 10000 is a good starting point\nefficient_frontier([\"AAPL\", \"FB\", \"MSFT\", \"AMD\", \"AIR\", \"AAL\", \"NFLX\", \"SBUX\", \"GOOG\", \"BABA\"], \"2020-01-01\", \"2021-01-01\", 10000)\n```\n<center><img src=\"https://i.ibb.co/LtCGCj3/Capture.jpg\"/></center>\n\n### Get daily mean return of a stock/portfolio\n\n```sh\n#mean_daily_return(stocks,wts, start_date, end_date)\n\n#for one stock\nmean_daily_return([\"AAPL\"], 1, \"2020-01-01\", \"2021-01-01\")\n\n#for multiple stocks\nmean_daily_return([\"AAPL\", \"AMD\", \"TSLA\"], [0.25, 0.45, 0.3], \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/w6w7tf2/Capture.jpg\"/></center>\n\n### Value at risk of a stock/portfolio\n\n```sh\n#var(value_invested, stocks, wts, alpha, start_date, end_date)\n\n#for one stock\nvar(10000, ['AAPL'], 1, 0.95, \"2020-01-01\", \"2021-01-01\")\n\n#for multiple stocks\nvar(10000, ['AAPL', 'TSLA', 'AMD'], [0.4, 0.2, 0.4], 0.95, \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/4FQ3HHp/Capture.jpg\"/></center>\n\n### Graph closing price of stock smoothly with Kalman Filters\n\n```sh\n#graph_kalman(stocks, start_date, end_date, noise_value)\n#noise_value = 0.01 is good to get started\ngraph_kalman(\"AAPL\", \"2020-01-01\", \"2021-01-01\", 0.01)\n```\n<center><img src=\"https://i.ibb.co/wdQ0KQq/t-l-chargement-13.png\"/></center>\n\n### Get the smoothed closing price of a stock with Kalman Filters\n\n```sh\n#kalman(stocks, start_date, end_date, noise_value)\nkalman(\"AAPL\", \"2020-01-01\", \"2021-01-01\", 0.01)\n```\n<center><img src=\"https://i.ibb.co/vc6ynJh/Capture.jpg\"/></center>\n\n### Get the Capital Asset Pricing Model\n```sh\n#capm(stocks, wts, start_date, end_date)\nstocks = [\"AAPL\", \"AMD\", \"TSLA\", \"MSFT\"]\nwts = [0.3, 0.2, 0.2, 0.3]\ncapm(stocks, wts, \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/4p9H1cB/Capture.jpg\"/></center>\n\n### Cointegration\n```sh\n#cointegration(stock1, stock2, start_date, end_date)\ncointegration(\"GOOG\", \"MSFT\", \"2012-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/CbCXVb7/Capture.jpg\"/></center>\n\n### Returns Cointegration\n```sh\n#return_cointegration(stock1, stock2, start_date, end_date)\nreturn_cointegration(\"GOOG\", \"MSFT\", \"2012-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/XYG5wGH/Capture.jpg\"/></center>\n\n### Stationarity\n```sh\n#stationarity(stock, start_date, end_date)\nstationarity(\"GOOG\", \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/2MPh0S4/Capture.jpg\"/></center>\n\n### Returns Stationarity\n```sh\n#return_stationarity(stock, start_date, end_date)\nreturn_stationarity(\"GOOG\", \"2020-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/V2MPpqy/Capture.jpg\"/></center>\n\n### Graph rolling volatility\n```sh\n#graph_rvolatility(stock, wts, start_date, end_date, window_time)\n#for a stock\ngraph_rvolatility([\"TSLA\"], 1, \"2019-01-01\", \"2021-01-01\", 180)\n\n#for a portfolio\ngraph_rvolatility([\"AAPL\", \"AMD\", \"TSLA\"], [0.45, 0.45, 0.1], \"2019-01-01\", \"2021-01-01\", 180)\n```\n<center><img src=\"https://i.ibb.co/d6QkDb3/Capture.jpg\"/></center>\n\n### Get rolling volatility data\n```sh\n#rvolatility(stock, wts, start_date, end_date, window_time)\n#for a stock\nrvolatility([\"TSLA\"], 1, \"2019-01-01\", \"2021-01-01\", 180)\n\n#for a portfolio\nrvolatility([\"AAPL\", \"AMD\", \"TSLA\"], [0.45, 0.45, 0.1], \"2019-01-01\", \"2021-01-01\", 180)\n```\n<center><img src=\"https://i.ibb.co/T2W0Y3T/Capture.jpg\"/></center>\n\n### Graph rolling beta\n```sh\n#graph_rbeta(stock,wts, benchmark, start_date, end_date, window_time)\n\n#for a stock\ngraph_rbeta([\"TSLA\"], 1, \"SPY\", \"2019-01-01\", \"2021-01-01\", 180)\n\n#for a portfolio\ngraph_rbeta([\"AAPL\", \"AMD\", \"GOOG\"], [0.45, 0.45, 0.1], \"SPY\", \"2019-01-01\", \"2021-01-01\", 180)\n```\n<center><img src=\"https://i.ibb.co/k2ZFRNH/Capture.jpg\"/></center>\n\n### Get rolling beta data\n```sh\n#rbeta(stock,wts, benchmark, start_date, end_date, window_time)\n\n#for a stock\nrbeta([\"TSLA\"], 1, \"SPY\", \"2019-01-01\", \"2021-01-01\", 180)\n\n#for a portfolio\nrbeta([\"AAPL\", \"AMD\", \"GOOG\"], [0.45, 0.45, 0.1], \"SPY\", \"2019-01-01\", \"2021-01-01\", 180)\n```\n<center><img src=\"https://i.ibb.co/QQSWPP3/Capture.jpg\"/></center>\n\n### Graph rolling alpha\n```sh\n#graph_ralpha(stock,wts, benchmark, start_date, end_date, window_time)\n\n#for a stock\ngraph_ralpha([\"TSLA\"], 1, \"SPY\", \"2019-01-01\", \"2021-01-01\", 180)\n\n#for a portfolio\ngraph_ralpha([\"AAPL\", \"AMD\", \"GOOG\"], [0.45, 0.45, 0.1], \"SPY\", \"2019-01-01\", \"2021-01-01\", 180)\n```\n<center><img src=\"https://i.ibb.co/BN7ZHQq/Capture.jpg\"/></center>\n\n### Get rolling alpha data\n```sh\n#ralpha(stock,wts, benchmark, start_date, end_date, window_time)\n\n#for a stock\nralpha([\"TSLA\"], 1, \"SPY\", \"2019-01-01\", \"2021-01-01\", 180)\n\n#for a portfolio\nralpha([\"AAPL\", \"AMD\", \"GOOG\"], [0.45, 0.45, 0.1], \"SPY\", \"2019-01-01\", \"2021-01-01\", 180)\n```\n<center><img src=\"https://i.ibb.co/VJTgXs2/Capture.jpg\"/></center>\n\n### Get implied volatility\n```sh\n#implied_vol(option_type, option_price, stock price, strike price, risk-free rate, the time to expiration, continuous dividend rate)\n#option type : \"c\" (call option) or \"p\"(put option)\n\nimplied_vol('c', 0.3, 3, 3, 0.032, 30.0/365, 0.01)\n```\n<center><img src=\"https://i.ibb.co/gS19VTM/Capture.jpg\"/></center>\n\n### Backtest your portfolio\n\n```sh\n#backtest(stocks, wts, benchmark, start_date, end_date)\nstocks = [\"GOOG\", \"AMZN\", \"FB\", \"AAPL\"]\nwts = [0.25, 0.25, 0.25, 0.25]\nbacktest(stocks, wts, \"SPY\", \"2019-01-01\", \"2021-01-01\")\n```\n<center><img src=\"https://i.ibb.co/PmRR2gC/Capture.jpg\"/></center>\n<center><img src=\"https://i.ibb.co/VwBNf17/t-l-chargement-14.png\"/></center>\n<center><img src=\"https://i.ibb.co/mvvGwCf/Capture.jpg\"/></center>\n<center><img src=\"https://i.ibb.co/VN83w2z/t-l-chargement-15.png\"/></center>\n<center><img src=\"https://i.ibb.co/Bfc1xKG/t-l-chargement-16.png\"/></center>\n<center><img src=\"https://i.ibb.co/R7cj5Hd/t-l-chargement-17.png\"/></center>\n<center><img src=\"https://i.ibb.co/dWZq4wg/t-l-chargement-18.png\"/></center>\n<center><img src=\"https://i.ibb.co/Df2FqWC/Capture.jpg\"/></center>\n<center><img src=\"https://i.ibb.co/tY5rjhx/Capture.jpg\"/></center>\n\n## License\n\n**MIT**\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ssantoshp/trafalgar",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "trafalgar.py",
    "package_url": "https://pypi.org/project/trafalgar.py/",
    "platform": "",
    "project_url": "https://pypi.org/project/trafalgar.py/",
    "project_urls": {
      "Homepage": "https://github.com/ssantoshp/trafalgar"
    },
    "release_url": "https://pypi.org/project/trafalgar.py/0.1.7/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "pykalman",
      "seaborn",
      "scipy",
      "pandas-datareader",
      "datetime",
      "statsmodels",
      "sklearn",
      "pyportfolioopt"
    ],
    "requires_python": "",
    "summary": "Trafalgar makes quantitative finance and portfolio analysis faster and easier",
    "version": "0.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10495799,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1219797a048c421e51fd9e63b8ed4a37de4d2af567736769ff0c98de479b1f2",
          "md5": "b4d86cf414506a89178ba5315ed9857a",
          "sha256": "b3fe39c4c00a381d73cf88b845392177a15e7f42b6fc3b64cbf73b2af90a2725"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4d86cf414506a89178ba5315ed9857a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10508,
        "upload_time": "2021-04-14T18:09:33",
        "upload_time_iso_8601": "2021-04-14T18:09:33.498794Z",
        "url": "https://files.pythonhosted.org/packages/e1/21/9797a048c421e51fd9e63b8ed4a37de4d2af567736769ff0c98de479b1f2/trafalgar.py-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1efddc46bdd702178108a5457d9529bdb816762fb3aebc685f98cd672c95b7fc",
          "md5": "1c81d50b77888917cf07c1497d9b4fe1",
          "sha256": "05d097a2dae5691fcf661da35f4edaedb2b387fa477504f691466c1b11a9e383"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1c81d50b77888917cf07c1497d9b4fe1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15002,
        "upload_time": "2021-04-14T18:09:36",
        "upload_time_iso_8601": "2021-04-14T18:09:36.662787Z",
        "url": "https://files.pythonhosted.org/packages/1e/fd/dc46bdd702178108a5457d9529bdb816762fb3aebc685f98cd672c95b7fc/trafalgar.py-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa512afab05e2cccfd325f83149c2cac3d24f5886c5dde6af3a959c590a25abb",
          "md5": "49bafe7ce6ab24c622478fe55746e9fe",
          "sha256": "a7993619b69571f503da2f85dc859b7c6bd930feefad763d9b256ae5e0416a3b"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "49bafe7ce6ab24c622478fe55746e9fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10508,
        "upload_time": "2021-05-27T22:27:01",
        "upload_time_iso_8601": "2021-05-27T22:27:01.135733Z",
        "url": "https://files.pythonhosted.org/packages/fa/51/2afab05e2cccfd325f83149c2cac3d24f5886c5dde6af3a959c590a25abb/trafalgar.py-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24ebf09503b6279ab8eeeab97ac82f2b6b7a5ac3b4f0e4e8cc2a1ed151c205a7",
          "md5": "d269569bf185f2aeddd7a69f6bd17a5a",
          "sha256": "7f9f584b67e9baf93e0413893be8bb8405a6af7bea2c3528f365eb6b7de04090"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d269569bf185f2aeddd7a69f6bd17a5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14946,
        "upload_time": "2021-05-27T22:27:02",
        "upload_time_iso_8601": "2021-05-27T22:27:02.592880Z",
        "url": "https://files.pythonhosted.org/packages/24/eb/f09503b6279ab8eeeab97ac82f2b6b7a5ac3b4f0e4e8cc2a1ed151c205a7/trafalgar.py-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b03b8545e9cb7eb88f1fb9704fd45afc99c91cb29d869fb22e09b807d5e1d62",
          "md5": "1ca09aa4c40173ada025d260a07f4158",
          "sha256": "22fcd9bfd0fc877a2098a816da754da3c7c6253e7fcc9a911f1997314c0cf1a1"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ca09aa4c40173ada025d260a07f4158",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10411,
        "upload_time": "2021-05-27T22:33:37",
        "upload_time_iso_8601": "2021-05-27T22:33:37.897567Z",
        "url": "https://files.pythonhosted.org/packages/8b/03/b8545e9cb7eb88f1fb9704fd45afc99c91cb29d869fb22e09b807d5e1d62/trafalgar.py-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10c42142666691177c5083c6e00570807010ed5fac2f4fad4435d0b8ea9e859c",
          "md5": "31fb36bda2c03a12f97b4d6b323f3da3",
          "sha256": "af6d6620c0bd5ab6f267c3773a3a714572d1e4eca0b8ec72a0285c5da2c7c540"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "31fb36bda2c03a12f97b4d6b323f3da3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14876,
        "upload_time": "2021-05-27T22:33:39",
        "upload_time_iso_8601": "2021-05-27T22:33:39.468962Z",
        "url": "https://files.pythonhosted.org/packages/10/c4/2142666691177c5083c6e00570807010ed5fac2f4fad4435d0b8ea9e859c/trafalgar.py-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "963464036d46bfed81de41e76051526dee3a985290b5fdedd1aaef259bf56c9b",
          "md5": "c84f7482a9b4feba44b6526706cfe094",
          "sha256": "aabcfde3c105124a7afa831e8a1991925c231c003d4c52708411ab65d1e21737"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c84f7482a9b4feba44b6526706cfe094",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10392,
        "upload_time": "2021-05-27T22:44:03",
        "upload_time_iso_8601": "2021-05-27T22:44:03.008711Z",
        "url": "https://files.pythonhosted.org/packages/96/34/64036d46bfed81de41e76051526dee3a985290b5fdedd1aaef259bf56c9b/trafalgar.py-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba945935c12cb3b3c48f1d2f6f580d7935a384d121a88646b6822b501b3ef5b1",
          "md5": "bd444982fe84f42c3c19d4e5e3ec2683",
          "sha256": "e17ca06cd9bc0de0156235966e05814e996127dd7238b7edaf7e31c7174f020e"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "bd444982fe84f42c3c19d4e5e3ec2683",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14872,
        "upload_time": "2021-05-27T22:44:04",
        "upload_time_iso_8601": "2021-05-27T22:44:04.545319Z",
        "url": "https://files.pythonhosted.org/packages/ba/94/5935c12cb3b3c48f1d2f6f580d7935a384d121a88646b6822b501b3ef5b1/trafalgar.py-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d291bc1a1061ae7ce638b7639e5dc96037f4e814942494f680eca4aafd87f4f8",
          "md5": "038c18d3baef5ca8681bfb673d0846b1",
          "sha256": "4d3902fd9acff7fdf4a23ecf6e9366d11659484dde182ced875500dcf09f9a2d"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "038c18d3baef5ca8681bfb673d0846b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10398,
        "upload_time": "2021-05-27T22:48:13",
        "upload_time_iso_8601": "2021-05-27T22:48:13.030230Z",
        "url": "https://files.pythonhosted.org/packages/d2/91/bc1a1061ae7ce638b7639e5dc96037f4e814942494f680eca4aafd87f4f8/trafalgar.py-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4695fec55bee60922bcbe0ab1218adbfa5cc2cae325ad6fc5d3f8e7896483199",
          "md5": "34efa3276d5f0c1a52a04605004b9104",
          "sha256": "4b5034aeb92ce8843858b87d0723cf8378be0b7ceb33352d4653ac2bf1524959"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "34efa3276d5f0c1a52a04605004b9104",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14867,
        "upload_time": "2021-05-27T22:48:14",
        "upload_time_iso_8601": "2021-05-27T22:48:14.568421Z",
        "url": "https://files.pythonhosted.org/packages/46/95/fec55bee60922bcbe0ab1218adbfa5cc2cae325ad6fc5d3f8e7896483199/trafalgar.py-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b1b22d9b5c11ef3cf55996b27de6ad471987c96b8298300b758416262ea4276",
          "md5": "7f7c9954108417c24089bb2a51bac46c",
          "sha256": "0ad645932f076edf5510582555e680010921b3fdb5c3ffa4bb4f5680e9545b23"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f7c9954108417c24089bb2a51bac46c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10365,
        "upload_time": "2021-05-27T22:53:24",
        "upload_time_iso_8601": "2021-05-27T22:53:24.822328Z",
        "url": "https://files.pythonhosted.org/packages/7b/1b/22d9b5c11ef3cf55996b27de6ad471987c96b8298300b758416262ea4276/trafalgar.py-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33f5ea72bcb39ba6766e0f1cb3570b1627a90560ca9931d8d3cf62ca1764bf77",
          "md5": "c5c87ce991b842ae9891be3723d2fa6a",
          "sha256": "35a9025bc80e9b226440a88f03728fed9a4d1571ca2db93862d81ab822ecc787"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c5c87ce991b842ae9891be3723d2fa6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14827,
        "upload_time": "2021-05-27T22:53:26",
        "upload_time_iso_8601": "2021-05-27T22:53:26.285802Z",
        "url": "https://files.pythonhosted.org/packages/33/f5/ea72bcb39ba6766e0f1cb3570b1627a90560ca9931d8d3cf62ca1764bf77/trafalgar.py-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34cfb867fe7bb79bed708ebf76abdfb39ee3ed722d0d9bf51d963eeb22a8ce3e",
          "md5": "8d6269213e863982d46ee72011c4b34c",
          "sha256": "066f4c66c1e9de981113caf69caa48c54422eb339602ee474c575aac4e2b7d10"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d6269213e863982d46ee72011c4b34c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10427,
        "upload_time": "2021-05-28T05:31:01",
        "upload_time_iso_8601": "2021-05-28T05:31:01.134677Z",
        "url": "https://files.pythonhosted.org/packages/34/cf/b867fe7bb79bed708ebf76abdfb39ee3ed722d0d9bf51d963eeb22a8ce3e/trafalgar.py-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "053cd626677e2a16edcde927c80d3692f184dce9f84a3ab61723bd98235d8457",
          "md5": "ae76e88b92a53d360a97cb05e723efff",
          "sha256": "0506b521406a7b2c0755bee92067831d53f7528f975177729d383858a4bf796e"
        },
        "downloads": -1,
        "filename": "trafalgar.py-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "ae76e88b92a53d360a97cb05e723efff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14904,
        "upload_time": "2021-05-28T05:31:02",
        "upload_time_iso_8601": "2021-05-28T05:31:02.657865Z",
        "url": "https://files.pythonhosted.org/packages/05/3c/d626677e2a16edcde927c80d3692f184dce9f84a3ab61723bd98235d8457/trafalgar.py-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34cfb867fe7bb79bed708ebf76abdfb39ee3ed722d0d9bf51d963eeb22a8ce3e",
        "md5": "8d6269213e863982d46ee72011c4b34c",
        "sha256": "066f4c66c1e9de981113caf69caa48c54422eb339602ee474c575aac4e2b7d10"
      },
      "downloads": -1,
      "filename": "trafalgar.py-0.1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8d6269213e863982d46ee72011c4b34c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10427,
      "upload_time": "2021-05-28T05:31:01",
      "upload_time_iso_8601": "2021-05-28T05:31:01.134677Z",
      "url": "https://files.pythonhosted.org/packages/34/cf/b867fe7bb79bed708ebf76abdfb39ee3ed722d0d9bf51d963eeb22a8ce3e/trafalgar.py-0.1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "053cd626677e2a16edcde927c80d3692f184dce9f84a3ab61723bd98235d8457",
        "md5": "ae76e88b92a53d360a97cb05e723efff",
        "sha256": "0506b521406a7b2c0755bee92067831d53f7528f975177729d383858a4bf796e"
      },
      "downloads": -1,
      "filename": "trafalgar.py-0.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "ae76e88b92a53d360a97cb05e723efff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14904,
      "upload_time": "2021-05-28T05:31:02",
      "upload_time_iso_8601": "2021-05-28T05:31:02.657865Z",
      "url": "https://files.pythonhosted.org/packages/05/3c/d626677e2a16edcde927c80d3692f184dce9f84a3ab61723bd98235d8457/trafalgar.py-0.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}