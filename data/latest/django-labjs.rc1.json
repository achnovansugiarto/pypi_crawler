{
  "info": {
    "author": "Luke Pomfrey",
    "author_email": "lpomfrey@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Django LabJS\n============\n\nLabjs is a django-compressor_ *plugin* that provides django templatetags to easily Labify your scripts, using\nthe `labjs javascript loader`_.\n\n\nTogether with django-compressor it can make downloading your js files extremely efficient.\n\n\nWhat is LabJS?\n--------------\n\nLABjs (Loading And Blocking JavaScript) is an open-source (MIT license) project supported by Getify Solutions.\nThe core purpose of LABjs is to be an all-purpose, on-demand JavaScript loader, capable of loading any JavaScript resource,\nfrom any location, into any page, at any time. Loading your scripts with LABjs reduces resource blocking during page-load,\nwhich is an easy and effective way to optimize your site's performance.\n\n\nLABjs by default will load (and execute) all scripts in parallel as fast as the browser will allow.\nHowever, you can easily specify which scripts have execution order dependencies and LABjs will ensure proper execution order.\nThis makes LABjs safe to use for virtually any JavaScript resource, whether you control/host it or not,\nand whether it is standalone or part of a larger dependency tree of resources.\n\n\nUsing LABjs will replace all that ugly \"<script> tag soup\" -- that is all the <script> tags that commonly appear\nin the ``<head>`` or end of the ``<body>`` of your HTML page. The API is expressive and chaining, to let you specify which\nscripts to load, and when to wait (\"block\"), if necessary, for execution before proceeding with further execution.\nThe API also easily allows inline code execution coupling (think: inline ``<script>`` tags).\n\n\nDjango-labjs uses labjs queues\n______________________________\n\n\nIn order to make it easy to use labjs with the django templating system, django-labjs implements labjs using it's\nqueuing features::\n\n\n    $LAB\n\t    .queueScript(\"script1.js\") // script1, script2, and script3 do not depend on each other\n\t    .queueScript(\"script2.js\") // so execute in any order\n\t    .queueScript(\"script3.js\")\n\n\t    .queueWait(function(){  // can still have executable wait(...) functions if you need to\n\t        alert(\"Scripts 1-3 are loaded!\");\n\t    })\n\t    .queueScript(\"script4.js\") // depends on script1, script2 and script3 being executed before\n\t    .queueWait(function(){script4Func();});\n\n\nAnd somewhere close to the closing ``</body>`` tag::\n\n\n\t$LAB\n\t    .runQueue() // execute the queue as a $LAB chain\n\n\nInstallation\n------------\n\nCurrently available only on github, install using pip::\n\n    pip install -e git+git://github.com/ashwoods/django-labjs.git\n\nAdd ``labJS`` to ``INSTALLED_APPS`` in your ``settings.py`` file.\n* Notice the upper JS.\n\nSet ``LABJS_ENABLED`` to ``True`` if you want to enable *labifying*.\n\nUsage\n-----\n\nInclude the labjs javascript file somewhere in your html templates under ``<head>``. Don't forget to include labjs\ntemplatetags, and wrap javascript imports AND any javascript inlines that depend on those imports between\n``{% labjs %}`` and ``{% endlabjs %}`` tags. Use ``{% wait %}`` tags to insert an empty ``queuewait()``\n\nUsage example::\n\n    {% load labjs %}\n\n    <script type=\"text/javascript\" src=\"{{ STATIC_URL}}labjs/LAB.min.js\"></script>\n\n    {% labjs %}\n    <script type=\"text/javascript\" src=\"src/path_to_js.js\" />\n    ...\n    ...\n\n    {% wait %} // use wait to insert an empty .queueWait()\n\n    // You have to place any inline javascript that depends on any of the Labified scripts\n    // under a labjs templatetag. It will automatically place it under a queueWait.\n\n    {% compress js %} // you can use compress tags too inside.\n    <script type=\"text/javascript\">\n    ...\n    ...\n    <script>\n    {% endcompress %}\n    {% endlabjs %}\n\n    ...\n    ...\n\n    // At almost end of page run the queue, either with the {% runqueue %} templatetag\n    // or manually if you want to add custom waits and queue some more scripts.\n\n\n    {% runlabjs %}\n\n\nSettings\n--------\n\nFor now, django Labjs uses django-compressor parsers, so any settings on which parser to use\nwith django-compressor affects which html parsers django-labjs uses.\n\nThe only labjs specific setting is ``LABJS_ENABLED``, that defaults to the opposite of ``DEBUG``.\nWhen ``LABJS_ENABLED`` is False, the templatetags do nothing.\n\nTips\n----\n\n\nWhen using labjs, labjs ensures that the javascript you need has already loaded and executed with the use\nof ``wait()`` or in our case, ``queuewait()``. This functionality is normally achieved by using shortcut functions\nlike jquery's ``$.ready()``.\n\nWhen using labjs, however, ``ready()`` might not be required, and could be slightly counterproductive.\n``$.ready()`` waits for browser dom ready, which you need if you are going to be doing dom interaction.\nOtherwise, it might not be necessary. For more information, read this stack `answer`_.\n\n.. _answer: http://stackoverflow.com/a/5409818/471842\n.. _labjs javascript loader: http://labjs.com\n.. _django-compressor: http://github.com/jezdez/django_compressor",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lpomfrey/django-labjs",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-labjs",
    "package_url": "https://pypi.org/project/django-labjs/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-labjs/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/lpomfrey/django-labjs"
    },
    "release_url": "https://pypi.org/project/django-labjs/0.2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django labjs templatetags.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1176591,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "708011a411189c288160a62e174f91a1de9bc62b3492e0d1ae9fbbac79c70fe6",
          "md5": "e60c8ff862962027f4c57468a6bcea5d",
          "sha256": "6ad6ee62d878376683f9cad160b78da5e5e580e6dc2057ee185da1413d31e089"
        },
        "downloads": -1,
        "filename": "django-labjs-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e60c8ff862962027f4c57468a6bcea5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19684,
        "upload_time": "2014-08-01T09:56:34",
        "upload_time_iso_8601": "2014-08-01T09:56:34.322474Z",
        "url": "https://files.pythonhosted.org/packages/70/80/11a411189c288160a62e174f91a1de9bc62b3492e0d1ae9fbbac79c70fe6/django-labjs-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "708011a411189c288160a62e174f91a1de9bc62b3492e0d1ae9fbbac79c70fe6",
        "md5": "e60c8ff862962027f4c57468a6bcea5d",
        "sha256": "6ad6ee62d878376683f9cad160b78da5e5e580e6dc2057ee185da1413d31e089"
      },
      "downloads": -1,
      "filename": "django-labjs-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e60c8ff862962027f4c57468a6bcea5d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19684,
      "upload_time": "2014-08-01T09:56:34",
      "upload_time_iso_8601": "2014-08-01T09:56:34.322474Z",
      "url": "https://files.pythonhosted.org/packages/70/80/11a411189c288160a62e174f91a1de9bc62b3492e0d1ae9fbbac79c70fe6/django-labjs-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}