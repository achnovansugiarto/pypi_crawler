{
  "info": {
    "author": "Andrey Laguta",
    "author_email": "cirkus.kz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# aiohttp-rest-framework\n\n[![codecov](https://codecov.io/gh/ckkz-it/aiohttp-rest-framework/branch/master/graph/badge.svg?token=TQKNYJH1RZ)](https://codecov.io/gh/ckkz-it/aiohttp-rest-framework)\n[![PyPI](https://img.shields.io/pypi/v/aiohttp-rest-framework)](https://pypi.org/project/aiohttp-rest-framework/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/aiohttp-rest-framework)](https://pypistats.org/packages/aiohttp-rest-framework)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/aiohttp-rest-framework)](https://pypi.org/project/aiohttp-rest-framework/)\n---\n\nFully asynchronous rest framework for aiohttp web server, inspired by [Django Rest Framework](https://www.django-rest-framework.org) (DRF), powered by [marshmallow](https://github.com/marshmallow-code/marshmallow) and [SQLAlchemy](https://www.sqlalchemy.org).\n\nCurrently supports only combination of postgres and sqlalchemy (ORM and core). MySQL support will be shipped on demand.\n\n## Installation\n\n```bash\npip install aiohttp-rest-framework\n```\n\n## Usage example\n\nConsider we have the following SQLAlchemy ORM models:\n\n`models.py`\n\n```python\nimport sqlalchemy as sa\nfrom sqlalchemy.dialects.postgresql import UUID\nfrom sqlalchemy.orm import declarative_base\n\nfrom app.utils import get_stringified_uuid\n\nBase = declarative_base()\nmeta = Base.metadata\n\n\nclass User(Base):\n    __tablename__ = \"users\"\n\n    id = sa.Column(UUID, primary_key=True, default=get_stringified_uuid)\n    name = sa.Column(sa.Text)\n    email = sa.Column(sa.Text, nullable=False, unique=True)\n    phone = sa.Column(sa.Text)\n    company_id = sa.Column(sa.ForeignKey(\"companies.id\"), nullable=True)\n\n\nclass Company(Base):\n    __tablename__ = \"companies\"\n\n    id = sa.Column(UUID, primary_key=True, default=get_stringified_uuid)\n    name = sa.Column(sa.Text, nullable=False)\n```\n\nSQLAlchemy Core tables are also supported.\n\n```python\nimport sqlalchemy as sa\nfrom sqlalchemy.dialects.postgresql import UUID\n\nfrom app.utils import get_stringified_uuid\n\nmeta = sa.MetaData()\n\nUser = sa.Table(\n    \"users\", meta,\n    sa.Column(\"id\", UUID, primary_key=True, default=get_stringified_uuid),\n    sa.Column(\"name\", sa.Text),\n    sa.Column(\"email\", sa.Text, unique=True),\n    sa.Column(\"phone\", sa.Text),\n    sa.Column(\"company_id\", sa.ForeignKey(\"companies.id\"), nullable=True),\n)\n\nCompany = sa.Table(\n    \"companies\", meta,\n    sa.Column(\"id\", UUID, primary_key=True, default=get_stringified_uuid),\n    sa.Column(\"name\", sa.Text),\n)\n```\n\nNow we can use very familiar to us from DRF serializer, built on top of marshmalow's `Schema`:\n\n`serializers.py`\n\n```python\nfrom aiohttp_rest_framework import serializers\n\nfrom app.models import User\n\n\nclass UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = \"__all__\"\n        dump_only = (\"id\",)\n```\n\n> Note: for more information about field declaration please refer to [marshmallow](https://github.com/marshmallow-code/marshmallow)\n\nFor SQLAlchemy ORM `ModelSerializer` supports generic typing:\n\n```python\nclass UserSerializer(serializers.ModelSerializer[User]):  # <- mention `User` here\n    class Meta:\n        model = User\n        fields = \"__all__\"\n```\n\nNow type hints will be available for serializers methods like `create()`, `update()`, etc.\n\n\nAnd, finally, now we can use our serializer in class based views:\n\n`views.py`\n\n```python\nfrom aiohttp_rest_framework import views\n\nfrom app.serializers import UserSerializer\n\n\nclass UsersListCreateView(views.ListCreateAPIView):\n    serializer_class = UserSerializer\n\n\nclass UsersRetrieveUpdateDestroyView(views.RetrieveUpdateDestroyAPIView):\n    serializer_class = UserSerializer\n```\n\nOur simple app would look like this:\n\n`main.py`\n\n```python\nfrom aiohttp import web\nfrom aiohttp_rest_framework import setup_rest_framework, create_connection\nfrom aiohttp_rest_framework.utils import create_tables\n\nfrom app import views, config, models\n\n\nasync def db_cleanup_context(app_: web.Application) -> None:\n    app_[\"db\"] = await create_connection(config.db_url)\n    # in case you need to create tables in the database\n    # for sqlalchemy this is the same as `meta.create_all()`, but asynchronous\n    await create_tables(models.meta, app_[\"db\"])\n    yield \n    await app_[\"db\"].dispose()\n\n\napp = web.Application()\napp.cleanup_ctx.append(db_cleanup_context)\napp.router.add_view(\"/users\", views.UsersListCreateView)\napp.router.add_view(\"/users/{id}\", views.UsersRetrieveUpdateDestroyView)\nsetup_rest_framework(app)\nweb.run_app(app)\n```\n\n> Note: \n> If you want to use other property than \"db\", in order to application work you have to specify\n> `app_connection_property` in config, passing to `setup_rest_framework`.\n>\n> Example:\n> `setup_rest_framework(app, {\"app_connection_property\": \"custom_db_prop\"})`\n\nMention `setup_rest_framework()` function, it is required to call it to configure framework to work with your app.\nFor available rest framework's config options refer to [documentation]().\nFor detailed aiohttp web app configuration please refer to [their docs](https://docs.aiohttp.org/en/stable/web.html).\n\nAfter starting the app, we can make a `POST /users` request to create a new user.\n\n```bash\ncurl -H \"Content-Type: application/json\" \n     -d '{\n            \"name\": \"John Doe\",\n            \"email\": \"john@mail.com\",\n            \"phone\": \"+123456789\"\n         }'\n     -X POST http://localhost:8080/users\n```\n\nAnd get the following `HTTP 201 Response`:\n\n```json\n{\n  \"id\": \"aa392cc9-c734-44ff-9d7c-1602ecb4df2a\",\n  \"name\": \"John Doe\",\n  \"email\": \"john@mail.com\",\n  \"phone\": \"+123456789\",\n  \"company_id\": null\n}\n```\n\nLet's try to update user's company. Making `PATCH /users/aa392cc9-c734-44ff-9d7c-1602ecb4df2a` request\n\n```bash\ncurl -H \"Content-Type: application/json\" \n     -d '{\"company_id\": \"0413de74-d9fb-494b-ba56-b56599261fb0\"}'\n     -X PATCH http://localhost:8080/users/a392cc9-c734-44ff-9d7c-1602ecb4df2a\n```\n\n`HTTP 200 Response`:\n\n```json\n{\n  \"id\": \"aa392cc9-c734-44ff-9d7c-1602ecb4df2a\",\n  \"name\": \"John Doe\",\n  \"email\": \"john@mail.com\",\n  \"phone\": \"+123456789\",\n  \"company_id\": \"0413de74-d9fb-494b-ba56-b56599261fb0\"\n}\n```\n\nFor more examples and usages please refer to [documentation]().\n\n## Requirements\n\nPython >= 3.6\n\n#### Dependencies:\n- aiohttp\n- sqlalchemy\n- marshmallow\n\nIf using PostgreSQL (currently being installed by default since it's the only database supported):\n- asyncpg\n- psycopg2\n\n## Documentation\n\n`setup_rest_framework(app, config)`\n\nConfig is just a simple `dict` object. Config can accept following parameters (everything is optional):\n- `schema_type: str` - Specifies what combination of database and SQL toolkit to use. Currently supports only combination of SQLAlchemy and PostgreSQL.\n\n    **Default:** `\"sa\"`\n\n\n- `app_connection_property: str` - The property name of the database connection in your aiohttp application.\n\n    **Default:** `\"db\"`.\n\n```python\ncustom_db_prop = \"db_conn\"\n\nasync def db_cleanup_context(app_: web.Application) -> None:\n    app_[custom_db_prop] = await create_connection(config.db_url)\n    yield \n    await app_[custom_db_prop].dispose()\n\napp = web.Application()\napp.cleanup_ctx.append(db_cleanup_context)\nsetup_rest_framework(app, {\"app_connection_property\": custom_db_prop})\n```\n\n\n- `get_connection: Callable[[], Awaitable]` - An async callable that receive no arguments and returns database connection. You would only need it if you don't want to store your database connection in aiohttp application, then you have to provide it to `aiohttp-rest-framework` so framework can work with a database.\n\n    **Default:** uses `app[app_connection_property]`\n\n```python\n# somewhere in your code, function to get initialized db connection\nfrom app.db import get_connection\n\n# this is just to show that is has to be async\nasync def get_db_connection():\n    return await get_connection()\n\napp = web.Application()\nsetup_rest_framework(app, {\"get_connection\": get_db_connection})\n```\n\n\n- `db_manager: BaseDBManager` - Specifies what database manager to use.  You would need it if you want to use custom logic in database operations (class should be inherited from `BaseDBManager` imported from `aiohttp_rest_framework.db.base`). Usually you wouldn't need it because framework's built-in `SAManager` (if you use `schema_type = \"sa\"`, which is default) already handles all CRUD operations and also has `execute()` method where you can pass custom sqlalchemy queries.\n\n    **Default:** uses manager specific to the current `schema_type`.\n\nA totally useless example just to show you how it can be used:\n```python\nfrom aiohttp_rest_framework.db.sa import SAManager\n\nclass SAManagerWithPrintingQuery(SAManager):\n    async def execute(self, query, *args, **kwargs):\n        print(query)\n        return await super().execute(query, *args, **kwargs)\n\napp = web.Application()\nsetup_rest_framework(app, {\"db_manager\": SAManagerWithPrintingQuery})\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ckkz-it/aiohttp-rest-framework",
    "keywords": "restframework rest_framework aiohttp serializers asyncio rest aiohttp_rest_framework",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiohttp-rest-framework",
    "package_url": "https://pypi.org/project/aiohttp-rest-framework/",
    "platform": "",
    "project_url": "https://pypi.org/project/aiohttp-rest-framework/",
    "project_urls": {
      "Homepage": "https://github.com/ckkz-it/aiohttp-rest-framework"
    },
    "release_url": "https://pypi.org/project/aiohttp-rest-framework/0.0.6/",
    "requires_dist": [
      "aiohttp",
      "marshmallow",
      "SQLAlchemy (==1.4.0b1)",
      "psycopg2",
      "asyncpg"
    ],
    "requires_python": ">=3.6",
    "summary": "Rest framework for aiohttp web server",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9609707,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e329a5978ae6bc561868cfd284769d536d223ecd80f926c2e6833ed11a10171d",
          "md5": "a42c3dae210a832e11eb96ea52040a13",
          "sha256": "2598e1f6c50fa0bc3040542a05fefe66cf87c5e5a46d6e8a2b0258b6020cc316"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a42c3dae210a832e11eb96ea52040a13",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15666,
        "upload_time": "2020-05-07T11:46:25",
        "upload_time_iso_8601": "2020-05-07T11:46:25.955336Z",
        "url": "https://files.pythonhosted.org/packages/e3/29/a5978ae6bc561868cfd284769d536d223ecd80f926c2e6833ed11a10171d/aiohttp_rest_framework-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c244b205fc9499c2f814f1c91fe5a588f84f40c964f16fe03e777f82146e02f",
          "md5": "ca583b19f8245b32b0672697f55d62df",
          "sha256": "72aaa42e90cfa493b9d84cfca0877980582917351986b3ee41b5f9825faf147d"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ca583b19f8245b32b0672697f55d62df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14334,
        "upload_time": "2020-05-07T11:46:28",
        "upload_time_iso_8601": "2020-05-07T11:46:28.262530Z",
        "url": "https://files.pythonhosted.org/packages/3c/24/4b205fc9499c2f814f1c91fe5a588f84f40c964f16fe03e777f82146e02f/aiohttp_rest_framework-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ce7231ff9b59ce8addfc835e2a26cb6900498c317f1cd3c56dfb409e2bc9cae",
          "md5": "27f0355aa320c2b90ea4283f1e3777ae",
          "sha256": "a2026db53184cdb0ab225849ebca8cbf1150030c7a2e7dee5c0edca94cb6a09d"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.2a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27f0355aa320c2b90ea4283f1e3777ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16366,
        "upload_time": "2020-05-08T17:02:55",
        "upload_time_iso_8601": "2020-05-08T17:02:55.782916Z",
        "url": "https://files.pythonhosted.org/packages/0c/e7/231ff9b59ce8addfc835e2a26cb6900498c317f1cd3c56dfb409e2bc9cae/aiohttp_rest_framework-0.0.2a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c09c3ee6ec5b84048872daa3d0c2acb6dcb1ac2b38e6b5de956ae25ab88a4df8",
          "md5": "c911dadcfc60acd7c8943d6a8b5c78ad",
          "sha256": "dd7c5af543f5c4910f56efea00d9ce76845d18bceebcacda9d315c4a39f1239a"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.2a0.tar.gz",
        "has_sig": false,
        "md5_digest": "c911dadcfc60acd7c8943d6a8b5c78ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14584,
        "upload_time": "2020-05-08T17:02:57",
        "upload_time_iso_8601": "2020-05-08T17:02:57.889602Z",
        "url": "https://files.pythonhosted.org/packages/c0/9c/3ee6ec5b84048872daa3d0c2acb6dcb1ac2b38e6b5de956ae25ab88a4df8/aiohttp_rest_framework-0.0.2a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a13771fba74fd9f702fe6d94b30952aa79e58f35f2c89bbd71d5be4e8a9f5a7a",
          "md5": "2801c14a76917185d3d78b323eff4581",
          "sha256": "63b8c87a2277f9b195ed48dd7e94d54374f74f1709e54a2cc3bde64f71f0e6a5"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.2a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2801c14a76917185d3d78b323eff4581",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17281,
        "upload_time": "2020-07-20T09:28:04",
        "upload_time_iso_8601": "2020-07-20T09:28:04.521392Z",
        "url": "https://files.pythonhosted.org/packages/a1/37/71fba74fd9f702fe6d94b30952aa79e58f35f2c89bbd71d5be4e8a9f5a7a/aiohttp_rest_framework-0.0.2a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e68a24d1a6129920c2e908842a0ea5bdfa5697426de57e9b4b4d8a8a7d1f0f9",
          "md5": "fb03a9dd0141814ef2999f7756e1bdb1",
          "sha256": "5ea116130b2273261d3cd17d0071941e2494b6ebe1d1c876ccc8dc4c8a120fd2"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.2a1.tar.gz",
        "has_sig": false,
        "md5_digest": "fb03a9dd0141814ef2999f7756e1bdb1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15368,
        "upload_time": "2020-07-20T09:28:05",
        "upload_time_iso_8601": "2020-07-20T09:28:05.924795Z",
        "url": "https://files.pythonhosted.org/packages/6e/68/a24d1a6129920c2e908842a0ea5bdfa5697426de57e9b4b4d8a8a7d1f0f9/aiohttp_rest_framework-0.0.2a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6229f2c51d24aaae167bec97f576b4349c8c318601f2dc6ff5089ef458187a86",
          "md5": "b113edbfba4e3c22cbccbd0d85aeb5f4",
          "sha256": "8ca0ea3b6af3f04747b9da3ec04679fa4123b1a748e1a8fae79a421176e3f9f0"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.2a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b113edbfba4e3c22cbccbd0d85aeb5f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17570,
        "upload_time": "2020-10-16T09:13:34",
        "upload_time_iso_8601": "2020-10-16T09:13:34.470786Z",
        "url": "https://files.pythonhosted.org/packages/62/29/f2c51d24aaae167bec97f576b4349c8c318601f2dc6ff5089ef458187a86/aiohttp_rest_framework-0.0.2a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbf5af2adac65fb8831557a99d7938ef669d1fc9c924bb7bbc03a8d4b2bb9970",
          "md5": "bf3da9d325176aac7e7de5cbd5bc17a4",
          "sha256": "be4627a625bce2c4e3ff1cab7434319b7aeeb96216f7a9dddb17991081511c1f"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.2a2.tar.gz",
        "has_sig": false,
        "md5_digest": "bf3da9d325176aac7e7de5cbd5bc17a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15852,
        "upload_time": "2020-10-16T09:13:36",
        "upload_time_iso_8601": "2020-10-16T09:13:36.214786Z",
        "url": "https://files.pythonhosted.org/packages/bb/f5/af2adac65fb8831557a99d7938ef669d1fc9c924bb7bbc03a8d4b2bb9970/aiohttp_rest_framework-0.0.2a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0424e89f233bfec1eda525bda69e6903f9d53b26993ae9c40e3cfa912aa1c4e5",
          "md5": "ef7f0d5b5c9187551916b54b6552aaea",
          "sha256": "d45885a5477413126e7c6eaa6b0cd762fe342fe4a5680908b923b713ed2ded88"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef7f0d5b5c9187551916b54b6552aaea",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 19573,
        "upload_time": "2020-11-13T18:10:30",
        "upload_time_iso_8601": "2020-11-13T18:10:30.388728Z",
        "url": "https://files.pythonhosted.org/packages/04/24/e89f233bfec1eda525bda69e6903f9d53b26993ae9c40e3cfa912aa1c4e5/aiohttp_rest_framework-0.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1aa44c0f45ce0f774f0632e0e840aff1254f847ed28205a0d63cb710b7d9e52",
          "md5": "790f1669dba9f90f289893aa9c7c4f9a",
          "sha256": "cf9fab3d4cf2d0341e0cd6cc8e761c7b207687cbdd5daf84888ad70516814e7a"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "790f1669dba9f90f289893aa9c7c4f9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17479,
        "upload_time": "2020-11-13T18:10:31",
        "upload_time_iso_8601": "2020-11-13T18:10:31.827950Z",
        "url": "https://files.pythonhosted.org/packages/c1/aa/44c0f45ce0f774f0632e0e840aff1254f847ed28205a0d63cb710b7d9e52/aiohttp_rest_framework-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7fb736cb6e5085ac6af98dc66af89186c2527c9031176124c2a41875461771a",
          "md5": "41245da3fb38e4acb1ca31fd1d264d1a",
          "sha256": "7300d29b4a362ee45a2def98060c86c1fa5dd2d6d918c6fed91361a357229394"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41245da3fb38e4acb1ca31fd1d264d1a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 19752,
        "upload_time": "2020-11-26T22:00:12",
        "upload_time_iso_8601": "2020-11-26T22:00:12.032040Z",
        "url": "https://files.pythonhosted.org/packages/a7/fb/736cb6e5085ac6af98dc66af89186c2527c9031176124c2a41875461771a/aiohttp_rest_framework-0.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77adfb8d956458bbbb1f3176816d6f57c5c8e9f7bba9016ce724d4ef168e7f5e",
          "md5": "a33a2af34ca769777edbfefb368ce9f7",
          "sha256": "0af222e7f932b029cfc91d4c163ebdd0d66ab79c2504c1f89e91049c03306ce6"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a33a2af34ca769777edbfefb368ce9f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18879,
        "upload_time": "2020-11-26T22:00:13",
        "upload_time_iso_8601": "2020-11-26T22:00:13.686618Z",
        "url": "https://files.pythonhosted.org/packages/77/ad/fb8d956458bbbb1f3176816d6f57c5c8e9f7bba9016ce724d4ef168e7f5e/aiohttp_rest_framework-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2648616776bab3e7d790a0ed384bfa65025ee22d8d2e706d0c5c24716436217",
          "md5": "5a024177ae343fe52e9564b3c4bb7e1c",
          "sha256": "4239ed293a5f441749391863fb2fbea628282566fdbc87dac2877defb90e2457"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a024177ae343fe52e9564b3c4bb7e1c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 19823,
        "upload_time": "2021-03-03T10:34:07",
        "upload_time_iso_8601": "2021-03-03T10:34:07.228717Z",
        "url": "https://files.pythonhosted.org/packages/a2/64/8616776bab3e7d790a0ed384bfa65025ee22d8d2e706d0c5c24716436217/aiohttp_rest_framework-0.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abfbff34c0c33c8b25dc59c56fba6e8461eca93c161d7b15f92133750f6490ac",
          "md5": "f580c05dc217de670c6527523c4bc53b",
          "sha256": "eeaf882d78c92675bb132a45b57c6eba9953e1d59c11ab99a37f2c9fab533609"
        },
        "downloads": -1,
        "filename": "aiohttp_rest_framework-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f580c05dc217de670c6527523c4bc53b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19119,
        "upload_time": "2021-03-03T10:34:08",
        "upload_time_iso_8601": "2021-03-03T10:34:08.599265Z",
        "url": "https://files.pythonhosted.org/packages/ab/fb/ff34c0c33c8b25dc59c56fba6e8461eca93c161d7b15f92133750f6490ac/aiohttp_rest_framework-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2648616776bab3e7d790a0ed384bfa65025ee22d8d2e706d0c5c24716436217",
        "md5": "5a024177ae343fe52e9564b3c4bb7e1c",
        "sha256": "4239ed293a5f441749391863fb2fbea628282566fdbc87dac2877defb90e2457"
      },
      "downloads": -1,
      "filename": "aiohttp_rest_framework-0.0.6-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5a024177ae343fe52e9564b3c4bb7e1c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 19823,
      "upload_time": "2021-03-03T10:34:07",
      "upload_time_iso_8601": "2021-03-03T10:34:07.228717Z",
      "url": "https://files.pythonhosted.org/packages/a2/64/8616776bab3e7d790a0ed384bfa65025ee22d8d2e706d0c5c24716436217/aiohttp_rest_framework-0.0.6-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "abfbff34c0c33c8b25dc59c56fba6e8461eca93c161d7b15f92133750f6490ac",
        "md5": "f580c05dc217de670c6527523c4bc53b",
        "sha256": "eeaf882d78c92675bb132a45b57c6eba9953e1d59c11ab99a37f2c9fab533609"
      },
      "downloads": -1,
      "filename": "aiohttp_rest_framework-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "f580c05dc217de670c6527523c4bc53b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19119,
      "upload_time": "2021-03-03T10:34:08",
      "upload_time_iso_8601": "2021-03-03T10:34:08.599265Z",
      "url": "https://files.pythonhosted.org/packages/ab/fb/ff34c0c33c8b25dc59c56fba6e8461eca93c161d7b15f92133750f6490ac/aiohttp_rest_framework-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}