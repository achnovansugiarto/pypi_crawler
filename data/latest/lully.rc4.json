{
  "info": {
    "author": "Lucas Bourneuf",
    "author_email": "lucas@bourneuf.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Lully\nA small library providing some helpers for python devs.\n\nSee the [tests](test/) for usage examples and ideas.\n\n\n## Collections\n\n### Otom\nThe One-To-One-Mapping is a special kind of dict, where all values are also keys, associated to their key.\n\n\n    from lully import Otom\n\n    O = Otom({\n        'one': 1,\n        'two': 2,\n        'tee': 3,\n    })\n    assert O[1] == 'one'\n    assert O['one'] == 1\n\nAn Otom acts like a dict. See [tests](test/test_collections.py) for more.\n\n\n## Confiseur\nA Confiseur is here to help with configurations.\n\nThe principle is to subclass, for each configuration kind you need, the Confiseur base class and populate it with Bonbon instances, describing options.\n\n    from lully import Confiseur, Bonbon\n\n    class MyConfig(Confiseur):\n\n        def bonbons(self) -> [Bonbon]:\n            return (\n                Bonbon('server options', 'max instances', default=3),\n            )\n\n        def validate(self, cfg):\n            if cfg['server options']['max instances'] > 10:\n                self.add_error(f\"Can't handle more than ten instances. Provided: {cfg['server options']['max instances']}.\")\n\n    myconfig = MyConfig('{\"server options\": { \"max instances\": 11 }}')\n    assert myconfig['server options']['max instances'] == 11\n    assert myconfig.has_error\n    assert len(myconfig.errors)\n\nSee [tests](test/test_confiseur.py) for more.\n\n\n## Itermore\nMore itertools functions !\n\n    from lully.itermore import window, grouper, flatten, dotproduct, ncycles\n\nSee the [source file](lully/itermore.py) for the full set of functions.\n\n\n## Kotlin-inspired functions\nWhen coding in other languages, you get ideas. Here are the ones i got after a 1h course of Kotlin.\n\n    from lully import first, last, zip_with_next\n\n    assert first([1, 2]) == 1\n    assert last([1, 2]) == 2\n    assert first([2, 3], lambda x: x % 2) == 3\n    assert tuple(zip_with_next('abc')) == (('a', 'b'), ('c', None))\n\nSee the [source file](lully/kotlin.py) for the full set of functions.\n\n\n## Fief\nThis name should recall both its goal, which is *FIltering of EFfective paramaters*, and the fact it keeps functions to work within their [fief](https://en.wikipedia.org/wiki/Fief).\n\nYou have this function:\n\n    def func(a, b):\n        ...  # some implementation\n\nand you have its parameter stored in a dict, with other keys that are not for that specific function:\n\n    config = {'a': 1, 'b': 'doe', 'loglevel': 'WARNING'}\n\nThus, you can't just do that:\n\n    func(**config)\n\nBecause of the expected:\n\n    TypeError: func() got an unexpected keyword argument 'loglevel'\n\nOne solution can be to filter that dict, but that's cumbersome and needs maintainance. And that's worse if you have a lot of functions to call that way.\n\nFief is a decorator that will make that for you, using `inspect` module.\n\n\n    from lully import fief\n\n    @fief\n    def func(a, b):\n        return a + b\n\n    config = {'a': 2, 'b': 3, 'loglevel': 'WARNING'}\n\n    # and suddenly, you can provide anything in keywords argument:\n    assert func(**config) == 5   # no TypeError, that's magic !\n\n\n## random\n### lsample\nThis is a function answering to the *n choose k* problem using the Vitter's algorithm.\n\nThe problem is to choose randomly n element in a set of k. That's usually done with the `random.sample(n, [1, 2, ...])` function. Hence the *sampling* part of `lsample` name.\nHowever, that stdlib function will load everything in memory, forcing you to provide a list, not a generator.\n\nVitter's solution is to collect the `n` elements during a single pass over the list, making possible to work on generators,\nas long as you have a idea of their size, hence not loading all data in memory.\n\n    from lully import lsample\n    print(lsample(3, [x for x in range(10)], it_size=10))\n\nThis enables you to pick 100 random tweets among the entire tweeter database without having to load it in memory.\nProvided you have enough time for the full browsing to be performed.\n\nSee [that repo](https://github.com/aluriak/linear_choosens) for more information, sources and benchmarks.\n\n\n### weighed_choices\nThis function is basically a `random.choice()` equivalent, but where each choice can be weighted.\n\n    from lully import weighed_choices\n    print(weighed_choices(a=2, b=4, c=1))\n\nWill print you mostly `b`, sometimes `a` and only once on seven calls `c`.\n\nNote that you can also provide the input choices as a dict:\n\n    print(weighed_choices({'a': 2, 'b': 4, 'c': 1))\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aluriak/lully",
    "keywords": "helpers,lib",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lully",
    "package_url": "https://pypi.org/project/lully/",
    "platform": null,
    "project_url": "https://pypi.org/project/lully/",
    "project_urls": {
      "Homepage": "https://github.com/aluriak/lully"
    },
    "release_url": "https://pypi.org/project/lully/0.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Helpers for Python",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13487165,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3ac20284a342781e052adee544e9eb6dab2e2149577985f0021f9c92fae2779",
          "md5": "4e0068db0e471d2071a86f7e859ea61a",
          "sha256": "0ba5c01bea6447bda8c31190bf6e43bc366c1bff25f11057aa98744fdf916cb0"
        },
        "downloads": -1,
        "filename": "lully-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e0068db0e471d2071a86f7e859ea61a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19666,
        "upload_time": "2022-04-01T19:04:37",
        "upload_time_iso_8601": "2022-04-01T19:04:37.478597Z",
        "url": "https://files.pythonhosted.org/packages/f3/ac/20284a342781e052adee544e9eb6dab2e2149577985f0021f9c92fae2779/lully-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80cc20071600de9c444ca0f3061df238946cc4c541e52cad121c837c7fc13b2e",
          "md5": "a1a280c055069969f8f5185c7fe0f7bc",
          "sha256": "5b9f55be8f883483d335b752758f1289cc01c755e00d894bd2a58e3071f22046"
        },
        "downloads": -1,
        "filename": "lully-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a1a280c055069969f8f5185c7fe0f7bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20052,
        "upload_time": "2022-04-01T19:04:39",
        "upload_time_iso_8601": "2022-04-01T19:04:39.352402Z",
        "url": "https://files.pythonhosted.org/packages/80/cc/20071600de9c444ca0f3061df238946cc4c541e52cad121c837c7fc13b2e/lully-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "372fdf42c88e06dc7a54d70dd7346a88ece74079d09b99bd1514f73a888d969b",
          "md5": "68a6e935b5daa198137c4256450aa4c8",
          "sha256": "b3406284161e0c3cd7b09e7bdcae8cdbf9e4be676f533401f75863d2f26beb71"
        },
        "downloads": -1,
        "filename": "lully-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68a6e935b5daa198137c4256450aa4c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22701,
        "upload_time": "2022-04-01T20:19:00",
        "upload_time_iso_8601": "2022-04-01T20:19:00.056341Z",
        "url": "https://files.pythonhosted.org/packages/37/2f/df42c88e06dc7a54d70dd7346a88ece74079d09b99bd1514f73a888d969b/lully-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "746b36a5d4ef84b8a5f4bd906dc0160f159f1844acb36872628bfafc9ec45bea",
          "md5": "081359b9c9df650d86d3e448a257c5b1",
          "sha256": "e13ae756471adda851c8da05e9e107c0963bdbb6cae935c5bf122b3842125199"
        },
        "downloads": -1,
        "filename": "lully-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "081359b9c9df650d86d3e448a257c5b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24560,
        "upload_time": "2022-04-01T20:19:01",
        "upload_time_iso_8601": "2022-04-01T20:19:01.857279Z",
        "url": "https://files.pythonhosted.org/packages/74/6b/36a5d4ef84b8a5f4bd906dc0160f159f1844acb36872628bfafc9ec45bea/lully-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd55b60e7b907b6f43e4c9cba14d65c656768ec0ec668b8fac2d5ba2d41c0c88",
          "md5": "ce95b92575ed064b4ceb6459ce014818",
          "sha256": "bdbb4c43d2b266a426ac632447524daca5258a5dba2bce6d18063d372a091379"
        },
        "downloads": -1,
        "filename": "lully-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce95b92575ed064b4ceb6459ce014818",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23047,
        "upload_time": "2022-04-12T08:46:06",
        "upload_time_iso_8601": "2022-04-12T08:46:06.171765Z",
        "url": "https://files.pythonhosted.org/packages/fd/55/b60e7b907b6f43e4c9cba14d65c656768ec0ec668b8fac2d5ba2d41c0c88/lully-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a01d73c0e9a7ddda714b1720187bde7cd46efc48040b626a797d9401ccf279f",
          "md5": "7d988ea3ecc8b56b329be39f8bdb14e1",
          "sha256": "b5d9d7fe1477e154d3a5298b3a8cb077babd12f94bfb21b89f02d18fa6ab9999"
        },
        "downloads": -1,
        "filename": "lully-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7d988ea3ecc8b56b329be39f8bdb14e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25056,
        "upload_time": "2022-04-12T08:46:07",
        "upload_time_iso_8601": "2022-04-12T08:46:07.842986Z",
        "url": "https://files.pythonhosted.org/packages/2a/01/d73c0e9a7ddda714b1720187bde7cd46efc48040b626a797d9401ccf279f/lully-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e8116dc119cfb18ab356e6bb4e656f1044de237d811f8b2532de8195cb4c6e4",
          "md5": "6434886e12ae7e0c0a1a070e5da01815",
          "sha256": "d760406964639d90557b69da2d9cf3c3748c2261f8ce313457d7c07fd6011cae"
        },
        "downloads": -1,
        "filename": "lully-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6434886e12ae7e0c0a1a070e5da01815",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23204,
        "upload_time": "2022-04-12T08:52:58",
        "upload_time_iso_8601": "2022-04-12T08:52:58.011790Z",
        "url": "https://files.pythonhosted.org/packages/8e/81/16dc119cfb18ab356e6bb4e656f1044de237d811f8b2532de8195cb4c6e4/lully-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e35d516bcf31daeb857c826e0b22fe89bbca033dbd6b7484411773a1ee35cd3",
          "md5": "a0ba3a966d812513172f2ff93cef3d17",
          "sha256": "59d8daace5e18f8f90e6f7aab5bd0eebd3115b4b663a615464bbc37440e00d0c"
        },
        "downloads": -1,
        "filename": "lully-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a0ba3a966d812513172f2ff93cef3d17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25367,
        "upload_time": "2022-04-12T08:53:00",
        "upload_time_iso_8601": "2022-04-12T08:53:00.456679Z",
        "url": "https://files.pythonhosted.org/packages/6e/35/d516bcf31daeb857c826e0b22fe89bbca033dbd6b7484411773a1ee35cd3/lully-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e8116dc119cfb18ab356e6bb4e656f1044de237d811f8b2532de8195cb4c6e4",
        "md5": "6434886e12ae7e0c0a1a070e5da01815",
        "sha256": "d760406964639d90557b69da2d9cf3c3748c2261f8ce313457d7c07fd6011cae"
      },
      "downloads": -1,
      "filename": "lully-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6434886e12ae7e0c0a1a070e5da01815",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 23204,
      "upload_time": "2022-04-12T08:52:58",
      "upload_time_iso_8601": "2022-04-12T08:52:58.011790Z",
      "url": "https://files.pythonhosted.org/packages/8e/81/16dc119cfb18ab356e6bb4e656f1044de237d811f8b2532de8195cb4c6e4/lully-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e35d516bcf31daeb857c826e0b22fe89bbca033dbd6b7484411773a1ee35cd3",
        "md5": "a0ba3a966d812513172f2ff93cef3d17",
        "sha256": "59d8daace5e18f8f90e6f7aab5bd0eebd3115b4b663a615464bbc37440e00d0c"
      },
      "downloads": -1,
      "filename": "lully-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "a0ba3a966d812513172f2ff93cef3d17",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25367,
      "upload_time": "2022-04-12T08:53:00",
      "upload_time_iso_8601": "2022-04-12T08:53:00.456679Z",
      "url": "https://files.pythonhosted.org/packages/6e/35/d516bcf31daeb857c826e0b22fe89bbca033dbd6b7484411773a1ee35cd3/lully-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}