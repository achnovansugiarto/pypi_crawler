{
  "info": {
    "author": "joyle",
    "author_email": "joyle.zhang@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "融量数据API（rlData）\n--\n\n[toc]\n\n### 安装使用\n\n#### 安装\n\n```shell\npip install rlData\n```\n\n#### 升级\n\n```shell\npip install rlData --upgrade\n```\n\n#### 使用\n\n```python\nimport rlData as rl\n```\n\n```shell\n[ root@local ~]$ python\nPython 3.7.3 (default, Apr 24 2019, 15:29:51) [MSC v.1915 64 bit (AMD64)] :: Anaconda, Inc. on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import rlData as rl\n>>> help(rl)\n...\nPACKAGE CONTENTS\n    basic\n    factor (package)\n    index\n    stock\n    utils (package)\n\nFUNCTIONS\n    login(username, password)\n...\n```\n\n```shell\n[ root@local ~]$ python\nPython 3.7.3 (default, Apr 24 2019, 15:29:51) [MSC v.1915 64 bit (AMD64)] :: Anaconda, Inc. on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import rlData as rl\n>>> rl.stock.trade_date()\n(200, '2020-08-06')\n>>> \n```\n\n##### 修改服务器设置\n\napi设定了默认的服务器地址、端口、以及服务端版本号，在使用过程中，也可以通过以下指令临时更换设置: \n\n```python\nrl.client(url='http://XX.XX.XX.XX:xxxx/XXX',apiVersion='v1')\n```\n\n或者通过设置环境变量来更换服务器地址:\n\n```shell\nexport RLDATA_URL=http://XX.XX.XX.XX:xxxx/XXX\nexport RLDATA_VERSION=v1\n```\n\n##### 用户登录\n```python\nstatus, ret = rl.login(username,password)\n```\n- 参数:\n  - username: 用户名\n  - password: 用户口令\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回用户token信息，类型为dict({'access_token': ..., 'token_type': ...})。调用失败时，返回失败原因\n\n### 沪深股票\n\n#### 最近交易日\n```python\nstatus, ret = rl.stock.trade_date(exchange=None, date=None)\n```\n- 参数:\n  - exchange: 对应市场代码，默认为None，取上交所(001002)                \n    - '001002': 上海证券交易所                \n    - '001003': 深圳证券交易所                \n    - '001005': 银行间市场                \n    - '001008': 上海期货交易所                \n    - '001009': 中国金融期货交易所                \n    - '001010': 中国外汇交易市场                \n    - '001015': 上海黄金交易所                \n    - '001016': 大连商品交易所                \n    - '001017': 郑州商品交易所                \n    - '001022': 渤海商品交易所                \n    - '001025': 天津贵金属交易所                \n    - '002001': 香港证券交易所                \n    - '003002': 台湾证券交易所                \n    - '101001': 纽约证券交易所                \n    - '101002': 美国纳斯达克市场                \n    - '101003': 美国证券交易所                \n    - '101014': 纽约商业期货交易所                \n    - '101016': 洲际交易所                \n    - '101017': 芝加哥期货交易所                \n    - '104017': 东京证券交易所                \n    - '105001': 伦敦证券交易所（英国）                \n    - '105015': 法兰克福证交所（德国证交所）                \n    - '105030': 卢森堡证券交易所                \n    - '105061': 伦敦金属交易所                \n    - '106001': 澳大利亚证券交易所                \n    - '107032': 多伦多证券交易所\n  - date: 日期\n- 返回值:\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回交易日信息，类型为string。调用失败时，返回失败原因\n\n#### 交易日历表\n```python\nstatus, ret = rl.stock.trade_list(startdate, enddate=None, period=\"1d\")\n```\n- 参数:\n  - startdate: 起始日期        \n  - enddate: 终止日期        \n  - period: 周期\n- 返回值：\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回交易日历列表，类型为list。调用失败时，返回失败原因\n\n#### 证券基本信息\n\n```python\nstatus, ret = rl.stock.basicinfo(stocks)\n```\n- 参数:\n  - stocks: 个股列表\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回证券基本信息，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n#### 证券日行情\n\n```python\nstatus, ret = rl.stock.daily_price(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数:\n  - fields: 衍生数据字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回行情数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n### 指数\n\n#### 指数列表\n\n```python\nstatus, ret = rl.index.list()\n```\n\n- 参数:\n  无\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回指数列表信息，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n#### 指数成分股\n\n```python\nstatus, ret = rl.index.component(isymbol, date=None)\n```\n\n- 参数:\n  - isymbol: 指数\n  - date: 日期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回指数成份股数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n#### 指数日行情\n\n```python\nstatus, ret = rl.index.daily_price(isymbol, fields=None,startdate=None,enddate=None,period=None)\n```\n- 参数:\n  - isymbol: 指数\n  - fields: 行情数据字段，None表示返回所有字段\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回行情数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n### 基础衍生\n\n#### 基础衍生数据列表\n\n```python\nstatus, ret = rl.basic.list()\n```\n- 参数\n  无\n\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回基础衍生数据列表，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n#### 通用查询接口\n\n```python\nstatus, ret = rl.basic.query(key,fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - key: 衍生数据组合key\n  - fields: 衍生数据字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 起始日期\n  - enddate: 终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回基础衍生数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n#### 个股资金流向\n\n```python\nstatus, ret = rl.basic.money_flow(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 衍生数据字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 起始日期\n  - enddate: 终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回基础衍生数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n#### 股票资金流向\n\n```python\nstatus, ret = rl.basic.cash_flow(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 衍生数据字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 起始日期\n  - enddate: 终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回基础衍生数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n#### 沪港通持股记录\n\n```python\nstatus, ret = rl.basic.shhkt_sharehold(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 衍生数据字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 起始日期\n  - enddate: 终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回基础衍生数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n#### 融资融券明细\n\n```python\nstatus, ret = rl.basic.margin_info(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 衍生数据字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 起始日期\n  - enddate: 终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回基础衍生数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n### 因子\n\n#### 因子原始值\n\n##### 因子数据列表\n\n```python\nstatus, ret = rl.factor.list()\n```\n- 参数\n  无\n\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回基础衍生数据列表，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 通用查询接口\n\n```python\nstatus, ret = rl.factor.query(key,fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - key: 因子组合key\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 起始日期\n  - enddate: 终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 基础衍生\n\n```python\nstatus, ret = rl.factor.basic_derivation(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 起始日期\n  - enddate: 终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n\n##### 估值因子\n\n```python\nstatus, ret = rl.factor.valuation_estimation(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 反转指标\n\n```python\nstatus, ret = rl.factor.reversal(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 情绪指标\n\n```python\nstatus, ret = rl.factor.sentiment(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 量能指标\n\n```python\nstatus, ret = rl.factor.power_volume(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 量价指标\n\n```python\nstatus, ret = rl.factor.price_volume(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 动量指标\n\n```python\nstatus, ret = rl.factor.momentum(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 收益风险\n\n```python\nstatus, ret = rl.factor.volatility_value(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 盈利预测\n\n```python\nstatus, ret = rl.factor.earning_expectation(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 偿债能力\n\n```python\nstatus, ret = rl.factor.solvency(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 营运能力\n\n```python\nstatus, ret = rl.factor.operation_capacity(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 资本结构\n\n```python\nstatus, ret = rl.factor.capital_structure(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 每股指标\n\n```python\nstatus, ret = rl.factor.per_share_indicators(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 收益质量\n\n```python\nstatus, ret = rl.factor.revenue_quality(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 现金流量\n\n```python\nstatus, ret = rl.factor.cash_flow(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 历史成长\n\n```python\nstatus, ret = rl.factor.historical_growth(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 盈利能力\n\n```python\nstatus, ret = rl.factor.earning(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n#### 标准化因子\n\n##### 因子数据列表\n\n```python\nstatus, ret = rl.factor.std.list()\n```\n- 参数\n  无\n\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回基础衍生数据列表，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 通用查询接口\n\n```python\nstatus, ret = rl.factor.std.query(key,fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - key: 因子组合key\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 起始日期\n  - enddate: 终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 基础衍生\n\n```python\nstatus, ret = rl.factor.std.basic_derivation(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 起始日期\n  - enddate: 终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n\n##### 估值因子\n\n```python\nstatus, ret = rl.factor.std.valuation_estimation(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 反转指标\n\n```python\nstatus, ret = rl.factor.std.reversal(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 情绪指标\n\n```python\nstatus, ret = rl.factor.std.sentiment(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 量能指标\n\n```python\nstatus, ret = rl.factor.std.power_volume(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 量价指标\n\n```python\nstatus, ret = rl.factor.std.price_volume(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 动量指标\n\n```python\nstatus, ret = rl.factor.std.momentum(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 收益风险\n\n```python\nstatus, ret = rl.factor.std.volatility_value(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 盈利预测\n\n```python\nstatus, ret = rl.factor.std.earning_expectation(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 偿债能力\n\n```python\nstatus, ret = rl.factor.std.solvency(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 营运能力\n\n```python\nstatus, ret = rl.factor.std.operation_capacity(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 资本结构\n\n```python\nstatus, ret = rl.factor.std.capital_structure(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 每股指标\n\n```python\nstatus, ret = rl.factor.std.per_share_indicators(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 收益质量\n\n```python\nstatus, ret = rl.factor.std.revenue_quality(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 现金流量\n\n```python\nstatus, ret = rl.factor.std.cash_flow(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 历史成长\n\n```python\nstatus, ret = rl.factor.std.historical_growth(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 盈利能力\n\n```python\nstatus, ret = rl.factor.std.earning(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n#### 收费因子(vip)\n\n##### 因子数据列表\n\n```python\nstatus, ret = rl.factor.vip.list()\n```\n- 参数\n  无\n\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回基础衍生数据列表，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 通用查询接口\n\n```python\nstatus, ret = rl.factor.vip.query(key,fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - key: 因子组合key\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 起始日期\n  - enddate: 终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 融量特色因子\n\n```python\nstatus, ret = rl.factor.vip.rl_characteristic(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 东兴因子\n\n```python\nstatus, ret = rl.factor.vip.dx_securities(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 天风因子\n\n```python\nstatus, ret = rl.factor.vip.tf_securities(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 收费因子\n\n```python\nstatus, ret = rl.factor.vip.inhouse(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n#### 标准化收费因子(vip)\n\n##### 因子数据列表\n\n```python\nstatus, ret = rl.factor.vip.std.list()\n```\n- 参数\n  无\n\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回基础衍生数据列表，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 通用查询接口\n\n```python\nstatus, ret = rl.factor.vip.std.query(key,fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - key: 因子组合key\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 起始日期\n  - enddate: 终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 融量特色因子\n\n```python\nstatus, ret = rl.factor.vip.std.rl_characteristic(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 东兴因子\n\n```python\nstatus, ret = rl.factor.vip.std.dx_securities(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 天风因子\n\n```python\nstatus, ret = rl.factor.vip.std.tf_securities(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n##### 收费因子\n\n```python\nstatus, ret = rl.factor.vip.std.inhouse(fields=None,isymbol=None,stocks=None,startdate=None,enddate=None,period=None)\n```\n- 参数\n  - fields: 因子数据返回字段，None表示返回所有字段\n  - isymbol: 基准指数\n  - stocks: 个股列表\n  - startdate: 行情起始日期\n  - enddate: 行情终止日期\n  - period: 周期\n- 返回值\n  - status: 接口调用状态，200表示成功，其他失败\n  - ret: 调用成功时，返回因子数据，类型为pandas.DataFrame。调用失败时，返回失败原因\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rlData",
    "package_url": "https://pypi.org/project/rlData/",
    "platform": "",
    "project_url": "https://pypi.org/project/rlData/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/rlData/0.3.0/",
    "requires_dist": [
      "pandas (>=0.24.2)"
    ],
    "requires_python": "",
    "summary": "融量数据接口",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8057512,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ed80674cbe72ebc70e44a5dd0aac7763655f24493c2075f43ebba80fc68a3c8",
          "md5": "7e060339a77f376229c0c20ca859ee47",
          "sha256": "c3a9d79693bfe6e600d6e29a8248bf40cba24794a989612693206903dfa9bf00"
        },
        "downloads": -1,
        "filename": "rlData-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e060339a77f376229c0c20ca859ee47",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16861,
        "upload_time": "2020-08-11T09:31:59",
        "upload_time_iso_8601": "2020-08-11T09:31:59.312484Z",
        "url": "https://files.pythonhosted.org/packages/1e/d8/0674cbe72ebc70e44a5dd0aac7763655f24493c2075f43ebba80fc68a3c8/rlData-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "275e8bf6975f417703a3121903d999e8d91c3281941e72d8eb3ced7a04dfe423",
          "md5": "ca5e206cf3655d40f438a62cf7b3a4ac",
          "sha256": "dcdce013eb2a508f6e6c040ca058d6ee1ff923034a48eefafd4a18431f029309"
        },
        "downloads": -1,
        "filename": "rlData-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca5e206cf3655d40f438a62cf7b3a4ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16864,
        "upload_time": "2020-08-12T01:10:30",
        "upload_time_iso_8601": "2020-08-12T01:10:30.073854Z",
        "url": "https://files.pythonhosted.org/packages/27/5e/8bf6975f417703a3121903d999e8d91c3281941e72d8eb3ced7a04dfe423/rlData-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b537a54f8d186c8112542ec484b03476c75453e88bdf9d6a3ddb30747d0027ba",
          "md5": "ee29ca0b3f4cfc13e5bd7f04a0f2d787",
          "sha256": "6bb2f3f70826694d16f1646324da64e939a695f43ff39e87d1567fdd3afe5704"
        },
        "downloads": -1,
        "filename": "rlData-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee29ca0b3f4cfc13e5bd7f04a0f2d787",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17648,
        "upload_time": "2020-08-12T07:31:48",
        "upload_time_iso_8601": "2020-08-12T07:31:48.677311Z",
        "url": "https://files.pythonhosted.org/packages/b5/37/a54f8d186c8112542ec484b03476c75453e88bdf9d6a3ddb30747d0027ba/rlData-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "948663a0f139d963488295febb793396b104bedca32f2659a773552cb151dcea",
          "md5": "baae26a2044aecd3e32185a202bfb690",
          "sha256": "32a18649ee50a8f6d8ddf9b0cce350ef87a746d27520f51c14bbb1985c5ec592"
        },
        "downloads": -1,
        "filename": "rlData-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "baae26a2044aecd3e32185a202bfb690",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17577,
        "upload_time": "2020-08-28T05:16:43",
        "upload_time_iso_8601": "2020-08-28T05:16:43.581661Z",
        "url": "https://files.pythonhosted.org/packages/94/86/63a0f139d963488295febb793396b104bedca32f2659a773552cb151dcea/rlData-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "948663a0f139d963488295febb793396b104bedca32f2659a773552cb151dcea",
        "md5": "baae26a2044aecd3e32185a202bfb690",
        "sha256": "32a18649ee50a8f6d8ddf9b0cce350ef87a746d27520f51c14bbb1985c5ec592"
      },
      "downloads": -1,
      "filename": "rlData-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "baae26a2044aecd3e32185a202bfb690",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17577,
      "upload_time": "2020-08-28T05:16:43",
      "upload_time_iso_8601": "2020-08-28T05:16:43.581661Z",
      "url": "https://files.pythonhosted.org/packages/94/86/63a0f139d963488295febb793396b104bedca32f2659a773552cb151dcea/rlData-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}