{
  "info": {
    "author": "",
    "author_email": "Mirumee Software <hello@mirumee.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![Ariadne](https://ariadnegraphql.org/img/logo-horizontal-sm.png)](https://ariadnegraphql.org)\n\n[![Build Status](https://github.com/mirumee/ariadne-codegen/actions/workflows/tests.yml/badge.svg?branch=main)](https://github.com/mirumee/ariadne-codegen/actions)\n\n- - - - -\n\n# Ariadne Code Generator\n\nPython code generator that takes graphql schema, queries and mutations and generates Python package with fully typed and asynchronous GraphQL client.\n\nIt's available as `ariadne-codegen` command and reads configuration from the `pyproject.toml` file:\n\n```\n$ ariadne-codegen\n```\n\n\n## Features\n\n- Generate pydantic models from schema types, inputs and enums.\n- Generate pydantic models for GraphQL results.\n- Generate client package with each GraphQL operation available as async method.\n\n\n## Installation\n\nAriadne Code Generator can be installed with pip:\n\n```\n$ pip install ariadne-codegen\n```\n\n\n## Configuration\n\n`ariadne-codegen` reads configuration from `[tool.ariadne-codegen]` section in your `pyproject.toml`'. You can use other configuration file with `--config` option, eg. `ariadne-codegen --config custom_file.toml`\n\nRequired settings:\n\n- `queries_path` - path to file/directory with queries\n\nOne of the following 2 parameters is required, in case of providing both of them `schema_path` is prioritized:\n\n- `schema_path` - path to file/directory with graphql schema\n- `remote_schema_url` - url to graphql server, where introspection query can be perfomed\n\nOptional settings:\n\n- `remote_schema_headers` - extra headers that are passed along with introspection query, eg. `{\"Authorization\" = \"Bearer: token\"}`. To include an environment variable in a header value, prefix the variable with `$`, eg. `{\"Authorization\" = \"$AUTH_TOKEN\"}`\n- `target_package_name` (defaults to `\"graphql_client\"`) - name of generated package\n- `target_package_path` (defaults to cwd) - path where to generate package\n- `client_name` (defaults to `\"Client\"`) - name of generated client class\n- `client_file_name` (defaults to `\"client\"`) - name of file with generated client class\n- `base_client_name` (defaults to `\"AsyncBaseClient\"`) - name of base client class\n- `base_client_file_path` (defaults to `.../graphql_sdk_gen/generators/async_base_client.py`) - path to file where `base_client_name` is defined\n- `enums_module_name` (defaults to `\"enums\"`) - name of file with generated enums models\n- `input_types_module_name` (defaults to `\"input_types\"`) - name of file with generated input types models\n- `include_comments` (defaults to `true`) - a flag that specifies whether to include comments in generated files\n- `convert_to_snake_case` (defaults to `true`) - a flag that specifies whether to convert fields and arguments names to snake case\n- `async_client` (defaults to `true`) - default generated client is `async`, change this to option `false` to generate synchronous client instead\n- `files_to_include` (defaults to `[]`) - list of files which will be copied into generated package\n- `plugins` (defaults to `[]`) - list of plugins to use during generation\n\n\n## Plugins\n\nAriadne Codegen implements a plugin system that enables further customization and fine-tuning of generated Python code. It’s documentation is available separately in the [PLUGINS.md](https://github.com/mirumee/ariadne-codegen/blob/main/PLUGINS.md) file.\n\n\n## Using generated client\n\nGenerated client can be imported from package:\n```py\nfrom {target_package_name}.{client_file_name} import {client_name}\n```\n\nExample with default settings:\n```py\nfrom graphql_client.client import Client\n```\n\n### Passing headers to client\n\nClient (with default base client), takes passed headers and attaches them to every sent request.\n```py\nclient = Client(\"https://example.com/graphql\", {\"Authorization\": \"Bearer token\"})\n```\n\nFor more complex scenarios, you can pass your own http client:\n```py\nclient = Client(http_client=CustomComplexHttpClient())\n```\n\n## Custom scalars\n\nBy default, not built-in scalars are represented as `typing.Any` in generated client.\nYou can provide information about specific scalar by adding section to `pyproject.toml`:\n\n```toml\n[tool.ariadne-codegen.scalars.{graphql scalar name}]\ntype = \"(required) python type name\"\nserialize = \"function used to serialize scalar\"\nparse = \"function used to create scalar instance from serialized form\"\nimport = \"module to import from\"\n```\n\nAll occurences of `{graphql scalar name}` will be represented as `type`. If provided, `serialize` and `parse` will be used for serialization and deserialization. In all files which use `type`/`serialize`/`parse` there will be added extra import `from {import} import {type}, {serialize}, {parse}`\n\n\n### Example with scalar mapped to built-in type\n\nIn this case scalar is mapped to built-in `str` which doesn\\`t require custom `serialize ` and `parse` methods. \n\n```toml\n[tool.ariadne-codegen.scalars.SCALARA]\ntype = \"str\"\n```\n\n\n### Example with type supported by pydantic\n\nIn this scenario scalar is represented as `datetime`, so it needs to be imported. Pydantic handles serialization and deserialization so custom `parse` and `serialize` is not necessary.\n\n```toml\n[tool.ariadne-codegen.scalars.DATETIME]\ntype = \"datetime\"\nimport = \"datetime\"\n```\n\n\n### Example with fully custom type\n\nIn this example scalar is represented as class `TypeB`. Pydantic can\\`t handle  serialization and deserialization so custom `parse` and `serialize` is necessary. To provide `type`, `parse` and `serialize` implementation we can use `files_to_include` to copy `type_b.py` file.\n\n```toml\n[tool.ariadne-codegen]\n...\nfiles_to_include = [\".../type_b.py\"]\n\n[tool.ariadne-codegen.scalars.SCALARB]\ntype = \"TypeB\"\nparse = \"parse_b\"\nserialize = \"serialize_b\"\nimport = \".type_b\"\n```\n\n\n## Extending generated types\n\n### Extending models with custom mixins\n\n`mixin` directive allows to extend class generated for query/mutation field with custom logic.\n`mixin` takes two required arguments:\n- `from` - name of a module to import from\n- `import` - name of a parent class\n\nGenerated class will use `import` as extra base class, and import will be added to the file.\n```py\nfrom {from} import {import}\n...\nclass OperationNameField(BaseModel, {import}):\n    ...\n```\n\nThis directive can be used along with `files_to_include` option to extend funcionallity of generated classes.\n\n\n#### Example of usage of `mixin` and `files_to_include`:\n\nQuery with `mixin` directive: \n```gql\nquery listUsers {\n    users @mixin(from: \".mixins\", import: \"UsersMixin\") {\n        id\n    }\n}\n```\n\nPart of `pyproject.toml` with `files_to_include` (`mixins.py` contains `UsersMixin` implementation)\n```toml\nfiles_to_include = [\".../mixins.py\"]\n```\n\nPart of generated `list_users.py` file:\n```py\n...\nfrom .mixins import UsersMixin\n...\nclass ListUsersUsers(BaseModel, UsersMixin):\n    ...\n```\n\n\n## Multiple clients\n\nTo generate multiple different clients you can store config for each in different file, then provide path to config file by `--config` option, eg.\n```\nariadne-codegen --config clientA.toml\nariadne-codegen --config clientB.toml\n```\n\n\n## Generated code dependencies\n\nGenerated code requires:\n\n- pydantic\n- httpx (can be avoided by providing another base client class with `base_client_file_path` and `base_client_name` parameters)\n\n\n## Example\n\nExample with simple schema and few queries and mutations is available [here](https://github.com/mirumee/ariadne-codegen/blob/main/EXAMPLE.md).\n\n\n## Contributing\n\nWe welcome all contributions to Ariadne! If you've found a bug or issue, feel free to use [GitHub issues](https://github.com/mirumee/ariadne-codegen/issues). If you have any questions or feedback, don't hesitate to catch us on [GitHub discussions](https://github.com/mirumee/ariadne/discussions/).\n\nAlso make sure you follow [@AriadneGraphQL](https://twitter.com/AriadneGraphQL) on Twitter for latest updates, news and random musings!\n\n\n## **Crafted with ❤️ by [Mirumee Software](http://mirumee.com)** hello@mirumee.com\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ariadne-codegen",
    "package_url": "https://pypi.org/project/ariadne-codegen/",
    "platform": null,
    "project_url": "https://pypi.org/project/ariadne-codegen/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mirumee/ariadne-codegen/issues",
      "Community": "https://github.com/mirumee/ariadne/discussions",
      "Homepage": "https://ariadnegraphql.org/",
      "Repository": "https://github.com/mirumee/ariadne-codegen",
      "Twitter": "https://twitter.com/AriadneGraphQL"
    },
    "release_url": "https://pypi.org/project/ariadne-codegen/0.4.0/",
    "requires_dist": [
      "autoflake~=1.7",
      "black~=22.8",
      "click~=8.1",
      "graphql-core<3.3,>=3.2.0",
      "httpx~=0.23",
      "isort~=5.10.1",
      "pydantic~=1.10",
      "toml~=0.10",
      "freezegun~=1.2.2; extra == 'dev'",
      "mypy~=0.971; extra == 'dev'",
      "pylint~=2.15.3; extra == 'dev'",
      "pytest-asyncio~=0.19.0; extra == 'dev'",
      "pytest-mock~=3.8.2; extra == 'dev'",
      "pytest~=7.1.3; extra == 'dev'",
      "types-toml~=0.10.8; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Generate fully typed GraphQL client from schema, queries and mutations!",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17361905,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81efa45126c8bb350e06e71b67dc341705df71cdc3ca4759a4eade837c4fd503",
          "md5": "24b087f6102eb6101c68ef00c42ef65c",
          "sha256": "fed10120508d5501426037c458af0a97ba4bfec78a3cdcf8b656883a05049c5e"
        },
        "downloads": -1,
        "filename": "ariadne_codegen-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24b087f6102eb6101c68ef00c42ef65c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 36388,
        "upload_time": "2023-02-01T15:47:18",
        "upload_time_iso_8601": "2023-02-01T15:47:18.249354Z",
        "url": "https://files.pythonhosted.org/packages/81/ef/a45126c8bb350e06e71b67dc341705df71cdc3ca4759a4eade837c4fd503/ariadne_codegen-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed5b33c95b75a1ab381003a2fa1bcbac049fc22adb69011e4247b4986b244a1d",
          "md5": "1505e954cac22e9afcf7d1f580d89316",
          "sha256": "d55b0c55bf09b936668ee63f8f4fb65185b3e09957a20fa0203f99f8dd4cb583"
        },
        "downloads": -1,
        "filename": "ariadne_codegen-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1505e954cac22e9afcf7d1f580d89316",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22641,
        "upload_time": "2023-02-01T15:47:19",
        "upload_time_iso_8601": "2023-02-01T15:47:19.399366Z",
        "url": "https://files.pythonhosted.org/packages/ed/5b/33c95b75a1ab381003a2fa1bcbac049fc22adb69011e4247b4986b244a1d/ariadne_codegen-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0b887bf89410741ffee2e5b95be42ddaa903495480ed5af2c543be4081f5ee5",
          "md5": "ac964bc3183a552c42fb702cbe8e02ed",
          "sha256": "662d26333712effe5761308dc2b5dceea0501a58e36e146bde283580e82c48ae"
        },
        "downloads": -1,
        "filename": "ariadne_codegen-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac964bc3183a552c42fb702cbe8e02ed",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 37720,
        "upload_time": "2023-02-02T15:10:18",
        "upload_time_iso_8601": "2023-02-02T15:10:18.119239Z",
        "url": "https://files.pythonhosted.org/packages/d0/b8/87bf89410741ffee2e5b95be42ddaa903495480ed5af2c543be4081f5ee5/ariadne_codegen-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9209a0fa5ad520eba3e095a9312dc71a7a1060b2f2bc613150a70ab801aae23a",
          "md5": "2c3fefb93aeb13ae37e66779f896a6a7",
          "sha256": "6c0f510fb4deef2d8ceb763df2fc1626ae03c389ccfb3f08302bd5d3af042db1"
        },
        "downloads": -1,
        "filename": "ariadne_codegen-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2c3fefb93aeb13ae37e66779f896a6a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23513,
        "upload_time": "2023-02-02T15:10:19",
        "upload_time_iso_8601": "2023-02-02T15:10:19.592484Z",
        "url": "https://files.pythonhosted.org/packages/92/09/a0fa5ad520eba3e095a9312dc71a7a1060b2f2bc613150a70ab801aae23a/ariadne_codegen-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07f36b10e73033d37ad758170306baf84f7caf3e68188878c4ddf493ec432b30",
          "md5": "98198f8c689db2289ffb6c8ed391388d",
          "sha256": "c715a0acefd5ada99c0265d46b533a4c3720ce4fb33db742643eef00cf0fa522"
        },
        "downloads": -1,
        "filename": "ariadne_codegen-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98198f8c689db2289ffb6c8ed391388d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 37775,
        "upload_time": "2023-02-13T13:13:52",
        "upload_time_iso_8601": "2023-02-13T13:13:52.930327Z",
        "url": "https://files.pythonhosted.org/packages/07/f3/6b10e73033d37ad758170306baf84f7caf3e68188878c4ddf493ec432b30/ariadne_codegen-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5071435ef306c8814ac8a4c8cbfd051ff9a5255c6af54739020733c52003e2b",
          "md5": "3c2440f1cab3cd758f7ace12b9acb7d5",
          "sha256": "cbcf83f48226e7bf727f3d166cf1a75c9c9ce9e4f43c26aa482a43187ee6b152"
        },
        "downloads": -1,
        "filename": "ariadne_codegen-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3c2440f1cab3cd758f7ace12b9acb7d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23651,
        "upload_time": "2023-02-13T13:13:55",
        "upload_time_iso_8601": "2023-02-13T13:13:55.902258Z",
        "url": "https://files.pythonhosted.org/packages/e5/07/1435ef306c8814ac8a4c8cbfd051ff9a5255c6af54739020733c52003e2b/ariadne_codegen-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4c42fc28ffd360d83f7f662e46c6a0283ebe3abdb2f739668b647c9a8b6027d",
          "md5": "4b2cb72509ed368bf42cf1141e288c52",
          "sha256": "70aef9d2c3a3131f0ddf10558fba3926480199e6d243b11d41e3834faa4424f2"
        },
        "downloads": -1,
        "filename": "ariadne_codegen-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b2cb72509ed368bf42cf1141e288c52",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 42110,
        "upload_time": "2023-02-21T12:43:08",
        "upload_time_iso_8601": "2023-02-21T12:43:08.369710Z",
        "url": "https://files.pythonhosted.org/packages/a4/c4/2fc28ffd360d83f7f662e46c6a0283ebe3abdb2f739668b647c9a8b6027d/ariadne_codegen-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95dac0c8d07103f4c574af31776dc8adb75314c3d574ecd36f0393ed3f1f8c2e",
          "md5": "7f1cde4dd7c5382a38a7a47405b26900",
          "sha256": "b7680451e81ec5658ac4c09605ed7277a89ab18fe412c7ef35ad3d6519966e4a"
        },
        "downloads": -1,
        "filename": "ariadne_codegen-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7f1cde4dd7c5382a38a7a47405b26900",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26250,
        "upload_time": "2023-02-21T12:43:09",
        "upload_time_iso_8601": "2023-02-21T12:43:09.823443Z",
        "url": "https://files.pythonhosted.org/packages/95/da/c0c8d07103f4c574af31776dc8adb75314c3d574ecd36f0393ed3f1f8c2e/ariadne_codegen-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f63b5a4a973a77b57b693591e9d56851888094745d07e24ad27bd79a69953518",
          "md5": "5bc1efc20603b0646119fa7d84d6c4e5",
          "sha256": "c5a2907c413be23cda9bb4fc53576ed179ef09463330743f138fbaaeac8b32dc"
        },
        "downloads": -1,
        "filename": "ariadne_codegen-0.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bc1efc20603b0646119fa7d84d6c4e5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 47922,
        "upload_time": "2023-03-20T10:36:36",
        "upload_time_iso_8601": "2023-03-20T10:36:36.085056Z",
        "url": "https://files.pythonhosted.org/packages/f6/3b/5a4a973a77b57b693591e9d56851888094745d07e24ad27bd79a69953518/ariadne_codegen-0.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6e4b843ce70b1db6f073f489a18196d65ec1180c871e4a71c2040f6d1e73099",
          "md5": "6b7e166ea87e7442f76703db157a0a98",
          "sha256": "57cdf996bb2ec596ed19cd035b0ac31d588e1839bc9653faf2f52226702cdfc3"
        },
        "downloads": -1,
        "filename": "ariadne_codegen-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6b7e166ea87e7442f76703db157a0a98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29795,
        "upload_time": "2023-03-20T10:36:37",
        "upload_time_iso_8601": "2023-03-20T10:36:37.881505Z",
        "url": "https://files.pythonhosted.org/packages/d6/e4/b843ce70b1db6f073f489a18196d65ec1180c871e4a71c2040f6d1e73099/ariadne_codegen-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f63b5a4a973a77b57b693591e9d56851888094745d07e24ad27bd79a69953518",
        "md5": "5bc1efc20603b0646119fa7d84d6c4e5",
        "sha256": "c5a2907c413be23cda9bb4fc53576ed179ef09463330743f138fbaaeac8b32dc"
      },
      "downloads": -1,
      "filename": "ariadne_codegen-0.4.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5bc1efc20603b0646119fa7d84d6c4e5",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 47922,
      "upload_time": "2023-03-20T10:36:36",
      "upload_time_iso_8601": "2023-03-20T10:36:36.085056Z",
      "url": "https://files.pythonhosted.org/packages/f6/3b/5a4a973a77b57b693591e9d56851888094745d07e24ad27bd79a69953518/ariadne_codegen-0.4.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d6e4b843ce70b1db6f073f489a18196d65ec1180c871e4a71c2040f6d1e73099",
        "md5": "6b7e166ea87e7442f76703db157a0a98",
        "sha256": "57cdf996bb2ec596ed19cd035b0ac31d588e1839bc9653faf2f52226702cdfc3"
      },
      "downloads": -1,
      "filename": "ariadne_codegen-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6b7e166ea87e7442f76703db157a0a98",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29795,
      "upload_time": "2023-03-20T10:36:37",
      "upload_time_iso_8601": "2023-03-20T10:36:37.881505Z",
      "url": "https://files.pythonhosted.org/packages/d6/e4/b843ce70b1db6f073f489a18196d65ec1180c871e4a71c2040f6d1e73099/ariadne_codegen-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}