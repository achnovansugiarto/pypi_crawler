{
  "info": {
    "author": "Philip Kimmey",
    "author_email": "philip@rover.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Other Environment",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications :: Email",
      "Topic :: Text Processing :: Markup :: HTML"
    ],
    "description": "[![Build Status](https://travis-ci.org/roverdotcom/django-inlinecss.png?branch=master)](https://travis-ci.org/roverdotcom/django-inlinecss)\n\n## About\n\nInlining CSS is necessary for email generation and sending\nbut is currently a surprisingly large hassle.\n\nThis library aims to make it a breeze in the Django\ntemplate language.\n\n## Usage\n\n#### Step 1: Dependencies\n\n- BeautifulSoup\n- cssutils\n- Python 2.7+,3.4+\n- Django 1.11+\n\n\n#### Step 2: Install django_inlinecss\n\nAdd ```django_inlinecss``` to your ```settings.py```:\n\n```python\nINSTALLED_APPS = (\n        'django.contrib.auth',\n        'django.contrib.webdesign',\n        'django.contrib.contenttypes',\n        '...',\n        '...',\n        '...',\n        'django_inlinecss')\n```\n\n#### Step 3: Use the templatetag\n\n1. Place your CSS file somewhere staticfiles can find it\n2. Create your template:\n\n```html\n{% load inlinecss %}\n{% inlinecss \"css/extra-padding.css\" %}\n    <html>\n        <body>\n            <div class='lots-o-padding'>\n                Something in need of styling.\n            </div>\n        </body>\n    </html>\n{% endinlinecss %}\n```\n\n#### Step 4: Prepare to be Wowed\n\n```html\n<html>\n    <body>\n        <div style=\"padding-left: 10px; padding-right: 10px; padding-top: 10px;\" class=\"lots-o-padding\">\n            Something in need of styling.\n        </div>\n    </body>\n</html>\n```\n\n## Acknowledgements\n\nThanks to Tanner Netterville for his efforts on [Pynliner](https://github.com/rennat/pynliner).\n\nThanks to Thomas Yip for his unit tests on the `soupselect` module. These tests\nhelped on getting the core CSS2 selectors to work.\n\n## License\n\nMIT license. See LICENSE.md for more detail.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/roverdotcom/django-inlinecss",
    "keywords": "html,css,inline,style,email",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "q5-django-inlinecss",
    "package_url": "https://pypi.org/project/q5-django-inlinecss/",
    "platform": null,
    "project_url": "https://pypi.org/project/q5-django-inlinecss/",
    "project_urls": {
      "Homepage": "https://github.com/roverdotcom/django-inlinecss"
    },
    "release_url": "https://pypi.org/project/q5-django-inlinecss/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Django app useful for inlining CSS (primarily for e-mails)",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15845329,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1b8c2aabccd7080e0e94f442f828325f936ad531b462cd62e3e3fc856c9956f",
          "md5": "f073d9762961d1e019332398c4671442",
          "sha256": "6cbf4a205ac085b8be949afa462c060454a6a76ca043fb092d31185c14f38e8d"
        },
        "downloads": -1,
        "filename": "q5-django-inlinecss-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f073d9762961d1e019332398c4671442",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9104,
        "upload_time": "2022-11-21T20:49:40",
        "upload_time_iso_8601": "2022-11-21T20:49:40.067449Z",
        "url": "https://files.pythonhosted.org/packages/e1/b8/c2aabccd7080e0e94f442f828325f936ad531b462cd62e3e3fc856c9956f/q5-django-inlinecss-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1b8c2aabccd7080e0e94f442f828325f936ad531b462cd62e3e3fc856c9956f",
        "md5": "f073d9762961d1e019332398c4671442",
        "sha256": "6cbf4a205ac085b8be949afa462c060454a6a76ca043fb092d31185c14f38e8d"
      },
      "downloads": -1,
      "filename": "q5-django-inlinecss-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f073d9762961d1e019332398c4671442",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9104,
      "upload_time": "2022-11-21T20:49:40",
      "upload_time_iso_8601": "2022-11-21T20:49:40.067449Z",
      "url": "https://files.pythonhosted.org/packages/e1/b8/c2aabccd7080e0e94f442f828325f936ad531b462cd62e3e3fc856c9956f/q5-django-inlinecss-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}