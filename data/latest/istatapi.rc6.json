{
  "info": {
    "author": "Jacopo Attolini",
    "author_email": "jacopoattolini@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "ISTATAPI\n================\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->\n\n`istatapi` is a Python interface to discover and retrieve data from\nISTAT API (The Italian National Institute of Statistics). The library is\ndesigned to explore ISTAT metadata and to retreive data in different\nformats. `istatapi` is built on top of [ISTAT SDMX RESTful\nAPI](https://developers.italia.it/it/api/istat-sdmx-rest).\n\nWhether you are an existing organization, a curious individual or an\nacademic researcher, `istatapi` aims to allow you to easily access ISTAT\ndatabases with just a few lines of code. The library implements\nfunctions to:\n\n- Explore all available ISTAT datasets (dataflows in SDMX terminology)\n- Search available datasets by keywords\n- Retrieve information on a specific dataset like: the ID of the\n  dataflow, the names and available values of the dimensions of the\n  dataset, available filters.\n- Get data of an available dataset in a pandas DataFrame, csv or json\n  format.\n\n## Install\n\nYou can easily install the library by using the pip command:\n\n`pip install istatapi`\n\n## Tutorial\n\nFirst, let’s simply import the modules we need:\n\n``` python\nfrom istatapi import discovery, retrieval\nimport matplotlib.pyplot as plt\n```\n\nWith `istatapi` we can search through all the available datasets by\nsimply using the following function:\n\n``` python\ndiscovery.all_available()\n```\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>df_id</th>\n      <th>version</th>\n      <th>df_description</th>\n      <th>df_structure_id</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>101_1015</td>\n      <td>1.3</td>\n      <td>Crops</td>\n      <td>DCSP_COLTIVAZIONI</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>101_1030</td>\n      <td>1.0</td>\n      <td>PDO, PGI and TSG quality products</td>\n      <td>DCSP_DOPIGP</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>101_1033</td>\n      <td>1.0</td>\n      <td>slaughtering</td>\n      <td>DCSP_MACELLAZIONI</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>101_1039</td>\n      <td>1.2</td>\n      <td>Agritourism - municipalities</td>\n      <td>DCSP_AGRITURISMO_COM</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>101_1077</td>\n      <td>1.0</td>\n      <td>PDO, PGI and TSG products:  operators - munici...</td>\n      <td>DCSP_DOPIGP_COM</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>504</th>\n      <td>97_953</td>\n      <td>1.1</td>\n      <td>Environmental protection expenditure</td>\n      <td>DCCN_SPESAPROTAMB</td>\n    </tr>\n    <tr>\n      <th>505</th>\n      <td>98_1066</td>\n      <td>1.0</td>\n      <td>Productivity measures - Accounts in the 2014 v...</td>\n      <td>DCCN_PRODUTTIVITA_B14</td>\n    </tr>\n    <tr>\n      <th>506</th>\n      <td>98_1067</td>\n      <td>1.0</td>\n      <td>Productivity measures - Accounts in the 2011 v...</td>\n      <td>DCCN_PRODUTTIVITA_B11</td>\n    </tr>\n    <tr>\n      <th>507</th>\n      <td>98_197</td>\n      <td>1.3</td>\n      <td>Productivity measures</td>\n      <td>DCCN_PRODUTTIVITA</td>\n    </tr>\n    <tr>\n      <th>508</th>\n      <td>9_951</td>\n      <td>1.3</td>\n      <td>Mining and quarrying</td>\n      <td>DCCV_CAVE_MIN</td>\n    </tr>\n  </tbody>\n</table>\n<p>509 rows × 4 columns</p>\n</div>\n\nYou can also search for a specific dataset (in this example, a dataset\non imports), by doing:\n\n``` python\ndiscovery.search_dataset(\"import\")\n```\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>df_id</th>\n      <th>version</th>\n      <th>df_description</th>\n      <th>df_structure_id</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>10</th>\n      <td>101_962</td>\n      <td>1.0</td>\n      <td>Livestock import export</td>\n      <td>DCSP_LIVESTIMPEXP</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>139_176</td>\n      <td>1.0</td>\n      <td>Import and export by country and commodity Nac...</td>\n      <td>DCSP_COEIMPEX1</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>143_222</td>\n      <td>1.0</td>\n      <td>Import price index - monthly data</td>\n      <td>DCSC_PREIMPIND</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\nTo retrieve data from a specific dataset, we first need to create an\ninstance of the\n[`DataSet`](https://Attol8.github.io/istatapi/discovery.html#dataset)\nclass. We can use `df_id`, `df_description` or `df_structure_id` from\nthe above DataFrame to tell to the\n[`DataSet`](https://Attol8.github.io/istatapi/discovery.html#dataset)\nclass what dataset we want to retrieve. Here, we are going to use the\n`df_id` value. This may take a few seconds to load.\n\n``` python\n# initialize the dataset and get its dimensions\nds = discovery.DataSet(dataflow_identifier=\"139_176\")\n```\n\nWe now want to see what variables are included in the dataset that we\nare analysing. With `istatapi` we can easily print its variables\n(“dimensions” in ISTAT terminology) and their description.\n\n``` python\nds.dimensions_info()\n```\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>dimension</th>\n      <th>dimension_ID</th>\n      <th>description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>FREQ</td>\n      <td>CL_FREQ</td>\n      <td>Frequency</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>MERCE_ATECO_2007</td>\n      <td>CL_ATECO_2007_MERCE</td>\n      <td>Commodity Nace 2007</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>PAESE_PARTNER</td>\n      <td>CL_ISO</td>\n      <td>Geopolitics</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ITTER107</td>\n      <td>CL_ITTER107</td>\n      <td>Territory</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>TIPO_DATO</td>\n      <td>CL_TIPO_DATO12</td>\n      <td>Data type 12</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\nNow, each dimension can have a few possible values. `istatapi` provides\na quick method to analyze these values and print their English\ndescriptions.\n\n``` python\ndimension = \"TIPO_DATO\" #use \"dimension\" column from above\nds.get_dimension_values(dimension)\n```\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>values_ids</th>\n      <th>values_description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>EV</td>\n      <td>export - value (euro)</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>TBV</td>\n      <td>trade balance - value (euro)</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ISAV</td>\n      <td>import - seasonally adjusted value - world bas...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ESAV</td>\n      <td>export - seasonally adjusted value - world bas...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>TBSAV</td>\n      <td>trade balance - seasonally adjusted value  -wo...</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>IV</td>\n      <td>import - value (euro)</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\nIf we do not filter any of our variables, the data will just include all\nthe possible values in the dataset. This could result in too much data\nthat would slow our code and make it difficult to analyze. Thus, we need\nto filter our dataset. To do so, we can simply use the `values_ids` that\nwe found using the function `get_dimension_values` in the cell above.\n\n**Note**: Make sure to pass the names of the dimensions in lower case\nletters as arguments of the `set_filter` function. If you want to filter\nfor multiple values, simply pass them as lists.\n\n``` python\nfreq = \"M\" #monthly frequency\ntipo_dato = [\"ISAV\", \"ESAV\"] #imports and exports seasonally adjusted data\npaese_partner = \"WORLD\" #trade with all countries\n\nds.set_filters(freq = freq, tipo_dato = tipo_dato, paese_partner = paese_partner)\n```\n\nHaving set our filters, we can now finally retrieve the data by simply\npassing our\n[`DataSet`](https://Attol8.github.io/istatapi/discovery.html#dataset)\ninstance to the function\n[`get_data`](https://Attol8.github.io/istatapi/retrieval.html#get_data).\nIt will return a pandas DataFrame with all the data that we requested.\nThe data will be already sorted by datetime\n\n``` python\ntrade_df = retrieval.get_data(ds)\ntrade_df.head()\n```\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DATAFLOW</th>\n      <th>FREQ</th>\n      <th>MERCE_ATECO_2007</th>\n      <th>PAESE_PARTNER</th>\n      <th>ITTER107</th>\n      <th>TIPO_DATO</th>\n      <th>TIME_PERIOD</th>\n      <th>OBS_VALUE</th>\n      <th>BREAK</th>\n      <th>CONF_STATUS</th>\n      <th>OBS_PRE_BREAK</th>\n      <th>OBS_STATUS</th>\n      <th>BASE_PER</th>\n      <th>UNIT_MEAS</th>\n      <th>UNIT_MULT</th>\n      <th>METADATA_EN</th>\n      <th>METADATA_IT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>IT1:139_176(1.0)</td>\n      <td>M</td>\n      <td>10</td>\n      <td>WORLD</td>\n      <td>ITTOT</td>\n      <td>ESAV</td>\n      <td>1993-01-01</td>\n      <td>10775</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>360</th>\n      <td>IT1:139_176(1.0)</td>\n      <td>M</td>\n      <td>10</td>\n      <td>WORLD</td>\n      <td>ITTOT</td>\n      <td>ISAV</td>\n      <td>1993-01-01</td>\n      <td>9229</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>364</th>\n      <td>IT1:139_176(1.0)</td>\n      <td>M</td>\n      <td>10</td>\n      <td>WORLD</td>\n      <td>ITTOT</td>\n      <td>ISAV</td>\n      <td>1993-02-01</td>\n      <td>10014</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>IT1:139_176(1.0)</td>\n      <td>M</td>\n      <td>10</td>\n      <td>WORLD</td>\n      <td>ITTOT</td>\n      <td>ESAV</td>\n      <td>1993-02-01</td>\n      <td>10692</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>365</th>\n      <td>IT1:139_176(1.0)</td>\n      <td>M</td>\n      <td>10</td>\n      <td>WORLD</td>\n      <td>ITTOT</td>\n      <td>ISAV</td>\n      <td>1993-03-01</td>\n      <td>9951</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\nNow that we have our data, we can do whatever we want with it. For\nexample, we can plot the data after having it cleaned up a bit. You are\nfree to make your own analysis!\n\n``` python\n# set matplotlib themes\nplt.style.use('fivethirtyeight')\nplt.rcParams['figure.figsize'] = [16, 5]\n\n#fiveThirtyEight palette\ncolors = ['#30a2da', '#fc4f30', '#e5ae38', '#6d904f', '#8b8b8b']\n\n# calculate moving averages for the plot\ntrade_df[\"MA_3\"] = trade_df.groupby(\"TIPO_DATO\")[\"OBS_VALUE\"].transform(\n    lambda x: x.rolling(window=3).mean()\n)\n\n#replace the \"TIPO_DATO\" column values with more meaningful labels\ntrade_df[\"TIPO_DATO\"] = trade_df[\"TIPO_DATO\"].replace(\n    {\"ISAV\": \"Imports\", \"ESAV\": \"Exports\"}\n)\n\n# Plot the data\nafter_2013 = trade_df[\"TIME_PERIOD\"] >= \"2013\"\nis_ESAV = trade_df[\"TIPO_DATO\"] == \"Exports\"\nis_ISAV = trade_df[\"TIPO_DATO\"] == \"Imports\"\n\nexports = trade_df[is_ESAV & after_2013].rename(columns={\"OBS_VALUE\": \"Exports\", \"MA_3\": \"Exports - three months moving average\"})\nimports = trade_df[is_ISAV & after_2013].rename(columns={\"OBS_VALUE\": \"Imports\", \"MA_3\": \"Imports - three months moving average\"})\n\nplt.plot(\n    \"TIME_PERIOD\",\n    \"Exports\",\n    data=exports,\n    marker=\"\",\n    linestyle=\"dashed\",\n    color = colors[0],\n    linewidth=1\n)\nplt.plot(\n    \"TIME_PERIOD\",\n    \"Imports\",\n    data=imports,\n    marker=\"\",\n    linestyle=\"dashed\",\n    color = colors[1],\n    linewidth=1\n)\nplt.plot(\n    \"TIME_PERIOD\",\n    \"Exports - three months moving average\",\n    data=exports,\n    color = colors[0],\n    linewidth=2\n)\nplt.plot(\n    \"TIME_PERIOD\",\n    \"Imports - three months moving average\",\n    data=imports,\n    marker=\"\",\n    color = colors[1],\n    linewidth=2\n)\n\n# add a title\nplt.title(\"Italy's trade with the world\")\n\n# add a label to the x axis\nplt.xlabel(\"Year\")\n\n# turn y scale from millions to billions (divide by a 1000), and add a label\nplt.ylabel(\"Value in billions of euros\")\nplt.gca().yaxis.set_major_formatter(plt.FuncFormatter(lambda x, loc: \"{:,}\".format(int(x/1000))))\n```\n\n![](index_files/figure-commonmark/cell-10-output-1.png)\n\nWith just a few lines of code, we have been able to retrieve data from\nISTAT and make a simple plot. This is just a simple example of what you\ncan do with `istatapi`. You can find more examples in the `_examples`\nfolder. Enjoy!\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Attol8/istatapi",
    "keywords": "istat API python development datascience",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "istatapi",
    "package_url": "https://pypi.org/project/istatapi/",
    "platform": null,
    "project_url": "https://pypi.org/project/istatapi/",
    "project_urls": {
      "Homepage": "https://github.com/Attol8/istatapi"
    },
    "release_url": "https://pypi.org/project/istatapi/0.0.6/",
    "requires_dist": [
      "fastcore",
      "pandas",
      "requests",
      "matplotlib"
    ],
    "requires_python": ">=3.7",
    "summary": "Python API for ISTAT (The Italian National Institute of Statistics)",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17093274,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3a144c6e606a2f7f4571fcb6c839bd078f5870f0821bf157a476dc779bc60ad",
          "md5": "9bcdde08efce3830f110429282810730",
          "sha256": "9325b46de595a32ed165ad69467c5b89a92970b086b7a752d128df0bdd62b04d"
        },
        "downloads": -1,
        "filename": "istatapi-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9bcdde08efce3830f110429282810730",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14927,
        "upload_time": "2023-02-28T11:16:38",
        "upload_time_iso_8601": "2023-02-28T11:16:38.147400Z",
        "url": "https://files.pythonhosted.org/packages/d3/a1/44c6e606a2f7f4571fcb6c839bd078f5870f0821bf157a476dc779bc60ad/istatapi-0.0.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "new version"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50d40539e1b887f9f34952aa81341027be1c57b4abf4e07a59bc7eeacf3f8c44",
          "md5": "43f9896055bb6204174c7c8473a345fb",
          "sha256": "a16a810cacd6fb180ee7d187fc1e470620e8ef3517a92ac9b41f5e1761f3a91d"
        },
        "downloads": -1,
        "filename": "istatapi-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "43f9896055bb6204174c7c8473a345fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19639,
        "upload_time": "2023-02-28T11:16:40",
        "upload_time_iso_8601": "2023-02-28T11:16:40.368743Z",
        "url": "https://files.pythonhosted.org/packages/50/d4/0539e1b887f9f34952aa81341027be1c57b4abf4e07a59bc7eeacf3f8c44/istatapi-0.0.1.tar.gz",
        "yanked": true,
        "yanked_reason": "new version"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1a54cd553008daf899471b0c54d07a9db6b9368a929c6830793489b3a52a458",
          "md5": "93e072b3112f3e74a8e9356fb4664dc5",
          "sha256": "5c77067b85e2cea5487d87282e2a93b73ecdddceba06b0efb37e92a05422f769"
        },
        "downloads": -1,
        "filename": "istatapi-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93e072b3112f3e74a8e9356fb4664dc5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14874,
        "upload_time": "2023-02-28T11:32:33",
        "upload_time_iso_8601": "2023-02-28T11:32:33.790326Z",
        "url": "https://files.pythonhosted.org/packages/e1/a5/4cd553008daf899471b0c54d07a9db6b9368a929c6830793489b3a52a458/istatapi-0.0.2-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "new version"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "315bd63a680047961c0f44c0ad5bd36da48c781ef557919629dd79064ca6fe36",
          "md5": "8cfc75ffb54f36839d01dd0e966ddff7",
          "sha256": "29a2cb327647b9dfa5ca34ab0d4a455df3ffefa181127ced24306d5b5f4a1012"
        },
        "downloads": -1,
        "filename": "istatapi-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8cfc75ffb54f36839d01dd0e966ddff7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19587,
        "upload_time": "2023-02-28T11:32:36",
        "upload_time_iso_8601": "2023-02-28T11:32:36.873851Z",
        "url": "https://files.pythonhosted.org/packages/31/5b/d63a680047961c0f44c0ad5bd36da48c781ef557919629dd79064ca6fe36/istatapi-0.0.2.tar.gz",
        "yanked": true,
        "yanked_reason": "new version"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae71a18a237b7ceb95e4ef60fdf5097f81bd1255f6e68ada299a6a4c9c10999d",
          "md5": "ad3f3c2f118abe340c6ee59250c9b528",
          "sha256": "478b21924e6567339fa2725033cb399d929ec881062db3de30c63e8a77aa268c"
        },
        "downloads": -1,
        "filename": "istatapi-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad3f3c2f118abe340c6ee59250c9b528",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14874,
        "upload_time": "2023-02-28T11:40:50",
        "upload_time_iso_8601": "2023-02-28T11:40:50.550303Z",
        "url": "https://files.pythonhosted.org/packages/ae/71/a18a237b7ceb95e4ef60fdf5097f81bd1255f6e68ada299a6a4c9c10999d/istatapi-0.0.3-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "new version"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bc9f8eccd34cc087d27aefd5d7667bd8ca753de7e6655df031d81a1f01f8744",
          "md5": "d23e69977fef1e30306f83698b9eb487",
          "sha256": "2819eb7339e00437a8c084e0f0bc787241b3b015c599cad2dc912a3a8fe1c143"
        },
        "downloads": -1,
        "filename": "istatapi-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d23e69977fef1e30306f83698b9eb487",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19584,
        "upload_time": "2023-02-28T11:40:52",
        "upload_time_iso_8601": "2023-02-28T11:40:52.780637Z",
        "url": "https://files.pythonhosted.org/packages/8b/c9/f8eccd34cc087d27aefd5d7667bd8ca753de7e6655df031d81a1f01f8744/istatapi-0.0.3.tar.gz",
        "yanked": true,
        "yanked_reason": "new version"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e792a724ff8214c12b9628eff8ea692f413dc9d2e5ff9872ab530e25c70f69d",
          "md5": "407f6a952e77f6c80923ef7ffd9e8557",
          "sha256": "b701c0528a6faf0ef44a3a7e19ece197711b7090651b936cc4a556914ffcfa56"
        },
        "downloads": -1,
        "filename": "istatapi-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "407f6a952e77f6c80923ef7ffd9e8557",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14871,
        "upload_time": "2023-02-28T11:54:45",
        "upload_time_iso_8601": "2023-02-28T11:54:45.582320Z",
        "url": "https://files.pythonhosted.org/packages/1e/79/2a724ff8214c12b9628eff8ea692f413dc9d2e5ff9872ab530e25c70f69d/istatapi-0.0.4-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "new version available"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "518cc4ec8ca10494b14809d7bf14d09a99faa6f3a96761b5d9844b889c48064d",
          "md5": "0e4e970eb5c07456bc2a1629ca14e7ff",
          "sha256": "4bfb5c789a0cf916501c14880bb9a5ad8a4830ef08743cfc58986cc1af881534"
        },
        "downloads": -1,
        "filename": "istatapi-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0e4e970eb5c07456bc2a1629ca14e7ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19575,
        "upload_time": "2023-02-28T11:54:53",
        "upload_time_iso_8601": "2023-02-28T11:54:53.961636Z",
        "url": "https://files.pythonhosted.org/packages/51/8c/c4ec8ca10494b14809d7bf14d09a99faa6f3a96761b5d9844b889c48064d/istatapi-0.0.4.tar.gz",
        "yanked": true,
        "yanked_reason": "new version available"
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e80b56e808a24600df783d2ee4bd1b25a11b51cfec1ffdc837bacbb464cde00",
          "md5": "cc9edc906fcc4352482b4386446e36e7",
          "sha256": "ba0cf1bd08cd844bd1c935f7693cf315fdd66fdb3813c25ea4000093ad13c541"
        },
        "downloads": -1,
        "filename": "istatapi-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc9edc906fcc4352482b4386446e36e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14871,
        "upload_time": "2023-02-28T11:57:01",
        "upload_time_iso_8601": "2023-02-28T11:57:01.969082Z",
        "url": "https://files.pythonhosted.org/packages/4e/80/b56e808a24600df783d2ee4bd1b25a11b51cfec1ffdc837bacbb464cde00/istatapi-0.0.5-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "new version available "
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee1d8514ac30c91f1c71b2753c16b512661437a402823260addbb9f3d25008ed",
          "md5": "fb6e808ccbddaf72c2d6b35c497b0cdc",
          "sha256": "bf6672006bae0f17b76abe8b071772623ed29cf54b95644b2455fa183676df86"
        },
        "downloads": -1,
        "filename": "istatapi-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fb6e808ccbddaf72c2d6b35c497b0cdc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19589,
        "upload_time": "2023-02-28T11:57:11",
        "upload_time_iso_8601": "2023-02-28T11:57:11.016970Z",
        "url": "https://files.pythonhosted.org/packages/ee/1d/8514ac30c91f1c71b2753c16b512661437a402823260addbb9f3d25008ed/istatapi-0.0.5.tar.gz",
        "yanked": true,
        "yanked_reason": "new version available "
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1622dca689155e4910026fb765275f81d1b8c3b7cbca1e47833c383fc11d3e2",
          "md5": "41740f917d3e8d127534397a966027a1",
          "sha256": "7c2823dc09755e50fc8e2b0a7ae4f04235b46452cb8518e6aab431101e1127fe"
        },
        "downloads": -1,
        "filename": "istatapi-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41740f917d3e8d127534397a966027a1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14867,
        "upload_time": "2023-02-28T12:06:56",
        "upload_time_iso_8601": "2023-02-28T12:06:56.807851Z",
        "url": "https://files.pythonhosted.org/packages/a1/62/2dca689155e4910026fb765275f81d1b8c3b7cbca1e47833c383fc11d3e2/istatapi-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9dcebfcd6dda8b139102b26310fd88f716800124d667eacc1edb61c8fef1ff1e",
          "md5": "8f3e76f8f7ddd581be72e028694b98f7",
          "sha256": "363c57a547e8cac3c2f8010bce54b21eb14476377407cd22e44c949ca261b591"
        },
        "downloads": -1,
        "filename": "istatapi-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "8f3e76f8f7ddd581be72e028694b98f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19586,
        "upload_time": "2023-02-28T12:07:06",
        "upload_time_iso_8601": "2023-02-28T12:07:06.480574Z",
        "url": "https://files.pythonhosted.org/packages/9d/ce/bfcd6dda8b139102b26310fd88f716800124d667eacc1edb61c8fef1ff1e/istatapi-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1622dca689155e4910026fb765275f81d1b8c3b7cbca1e47833c383fc11d3e2",
        "md5": "41740f917d3e8d127534397a966027a1",
        "sha256": "7c2823dc09755e50fc8e2b0a7ae4f04235b46452cb8518e6aab431101e1127fe"
      },
      "downloads": -1,
      "filename": "istatapi-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "41740f917d3e8d127534397a966027a1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 14867,
      "upload_time": "2023-02-28T12:06:56",
      "upload_time_iso_8601": "2023-02-28T12:06:56.807851Z",
      "url": "https://files.pythonhosted.org/packages/a1/62/2dca689155e4910026fb765275f81d1b8c3b7cbca1e47833c383fc11d3e2/istatapi-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9dcebfcd6dda8b139102b26310fd88f716800124d667eacc1edb61c8fef1ff1e",
        "md5": "8f3e76f8f7ddd581be72e028694b98f7",
        "sha256": "363c57a547e8cac3c2f8010bce54b21eb14476377407cd22e44c949ca261b591"
      },
      "downloads": -1,
      "filename": "istatapi-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "8f3e76f8f7ddd581be72e028694b98f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 19586,
      "upload_time": "2023-02-28T12:07:06",
      "upload_time_iso_8601": "2023-02-28T12:07:06.480574Z",
      "url": "https://files.pythonhosted.org/packages/9d/ce/bfcd6dda8b139102b26310fd88f716800124d667eacc1edb61c8fef1ff1e/istatapi-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}