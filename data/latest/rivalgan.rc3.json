{
  "info": {
    "author": "Yves Greatti",
    "author_email": "yvgrotti@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n# RIVALGAN ![tech-stack](images/logo2.png)\n\n\n[Background](#background)  \n[The Dataset](#the-dataset)  \n[Implementation Overview](#implementation-overview) <br/>\n[Usage](#usage)<br/>\n[Visualizing the Data Augmentation Process](#visualizing-the-data-augmentation-process)<br/>\n[GitHub Folder Structure](#github-folder-structure)<br/>\n[Setup script](#setup-script)<br/>\n[Requirements](#requirements)\n\n\n------------\n\n## Background\nImbalanced data sets for Machine Learning classification problems could be difficult to solve.\nFor example suppose we have two classes in our data set where  the majority class is more than 90% of the dataset \nand the minority is less than 1% but we are more interested in identifying instances of the minority class.\nMost of the ML classifiers will reach an accuracy of 90% or more but this is not useful for our intended case.\nA more properly calibrated method may achieve a lower accuracy, but would have a higher true positive rate (or recall).\n\n\nA lot of critical real-data sets are imbalanced by nature like in credit card fraud detection or in the \nHealth Care Industry due to the scarcity of data.  Traditional ways to fix imbalanced datasets is either \nby oversampling instances of the minority class or undersampling instances of the majority class (SMOTE).\n\nInstead to tackle these issues, GANS are used to learn from the real dara and generate samples to augment \nthe training dataset. A GAN is composed of a generator and a discriminator  (both are deep neural networks). \nThe generator will try its best to make a sample by learning from a dataset  and the discriminator will learn \nto predict if a given sample is generated by the generator or if it is from  the original training dataset. \nThis indication is then used by Generator in turn to generate data as close to the real data so as to fool\nthe discriminator.\n\n------------\n\n## The Dataset\nThe dataset contains 284,807 transactions that occurred in two days, where we have 492 frauds. \nThe dataset is highly unbalanced, the positive class (frauds) account for 0.172% of all transactions.\nEach of these observations corresponds to an individual transaction.\nA binary response variable 'Class'  indicates whether or not this transaction is a fraud.\nThe dataset contains 30 features: \n* V1, V2, ... V28 which are anonymized features and uncorrelated after PCA transformations.\n* 'Time' and 'Amount'which have not been transformed.\n\n------------\n\n## Process Overview and Tech Stack\n\n![tech-stack](images/tech-stack.png)\n\n------------\n\n## Implementation Overview\n\nThis code trains a generative adversarial network to generate new synthetic data related to credit card fraud csv file. \nIt can also read data from any other csv files but the file will need to be transformed so the class variable to predict is \nclearly identified. The code provides an api to visualize the synthetic data, compare the data distributions \nbetween the real and the augmented data. It also allows to train different classifiers (LogisticRegression, SVM, \nRandomForrest, XGBoost) and compare their performances with the real and augmented datasets. The synthetic data could\nbe generated using either SMOTE or GANs. Different GANs architectures are proposed (Vanilla GAN, \nWasserstein GAN, Improved Wasserstein GAN, Least Squares GAN). Finally a random n-classes data set for classification\n problems is provided  and the decision boundaries are plotted on the real and augmented datasets.\n\n\n ------------\n\n\n ## Usage\n\n ``` bash\n\n\n $ python pipeline -h\n\n usage: pipeline.py [-h]\n                   [--CLASSIFIER {Logit,LinearSVC,RandomForest,SGDClassifier,SVC}]\n                   [--SAMPLER {SMOTE,SMOTETomek}]\n                   [--AUGMENTED_DATA_SIZE AUGMENTED_DATA_SIZE]\n                   [--TOTAL_TRAINING_STEPS TOTAL_TRAINING_STEPS]\n                   [--GEN_FILENAME GEN_FILENAME]\n                   [--train_classifier TRAIN_CLASSIFIER]\n                   [--classifier_scores CLASSIFIER_SCORES]\n                   [--generate_data GENERATE_DATA]\n                   [--compute_learning_curves COMPUTE_LEARNING_CURVES]\n                   [--aug_model_scores AUG_MODEL_SCORES]\n                   [--plot_augmented_learning_curves PLOT_AUGMENTED_LEARNING_CURVES]\n                   [--generate_distribution_plots GENERATE_DISTRIBUTION_PLOTS]\n                   [--compare_scores COMPARE_SCORES]\n                   [--random_dataset RANDOM_DATASET]\n                   [--retrieve_real_data_generated_data RETRIEVE_REAL_DATA_GENERATED_DATA]\n\n```\n## API\n\nExamples\n\n ``` python\n\nfrom pipeline import *\n\npipeline = Pipeline()\n\ndata = pipeline.read_process_data()\n\npipeline.run_train_classifier()\n\npipeline.run_classifier_scores_report()\n\ndargs = {\n         'AUGMENTED_DATA_SIZE':5000, \n         'TOTAL_TRAINING_STEPS': 1000,\n         'GAN_NAME':'VGAN'}\npipeline.set_configuration(dargs)\npipeline.run_train_gan()\n\npipeline.compare_classifier_gan_scores()\n\npipeline.generate_distribution_plots()\n\npipeline.plot_augmented_learning_curves()\n\n```\n\n------------\n\n#### Output\n\n```text\n\n------------- Reading data --------------\n\nLoading data from /home/ubuntu/insight/data/creditcard.engineered.pkl\nShape of the data=(284807, 31)\nHead: \n        Time        V1        V2        V3        V4        V5        V6  \\\n0 -2.495776 -0.760474 -0.059825  1.778510  0.998741 -0.282036  0.366454   \n1 -2.495776  0.645665  0.177226  0.108889  0.326641  0.047566 -0.064642   \n2 -2.495729 -0.759673 -0.946238  1.240864  0.277228 -0.418463  1.425391   \n\n         V7        V8        V9  ...         V21       V22       V23  \\\n0  0.234118  0.091669  0.343867  ...   -0.027953  0.392914 -0.259567   \n1 -0.078505  0.077453 -0.237661  ...   -0.405091 -0.908272  0.228784   \n2  0.775964  0.247431 -1.420257  ...    0.456138  1.094031  2.092428   \n\n        V24       V25       V26       V27       V28    Amount  Class  \n0  0.111992  0.253257 -0.396610  0.399584 -0.090140  1.130025      0  \n1 -0.569582  0.329670  0.267951 -0.031113  0.069997 -1.138642      0  \n2 -1.155079 -0.649083 -0.291089 -0.171222 -0.263354  1.695499      0  \n\n[3 rows x 31 columns]\nNumber of frauds in training data: 379 out of 213605 cases (0.1774303036% fraud)\nNumber of frauds in test data: 113 out of 71202 cases (0.1587034072% fraud)\nNumber of features=30\n\n------------- Training classifier --------------\n\n\nTraining 30 features with classifier SGDClassifier\nTime elapsed to train:  0:00:00.34\nSaving SGDClassifier in /home/ubuntu/insight/cache/SGDClassifier_Fraud.pkl\nNo sampler to train\n\n\n------------- Baseline scores --------------\n\nBaseline classifier SGDClassifier\nLoading classifier SGDClassifier from file /home/ubuntu/insight/cache/SGDClassifier_Fraud.pkl\nPredicting 30 features\nClassification Report: \n                    pre       rec       spe        f1       geo       iba       sup\n\n          0       1.00      0.96      0.91      0.98      0.93      0.88     71089\n          1       0.03      0.91      0.96      0.06      0.93      0.87       113\n\navg / total       1.00      0.96      0.91      0.98      0.93      0.88     71202\n\nAccuracy score: 0.9578523075194517\nPrecision score: 0.911504424778761\nRecall score: 0.03329023917259211\nF1 score: 0.06423448705955721\nConfusion Matrix:  \n [[68098  2991]\n [   10   103]] \n\n------------- Training GAN and generating synthetic data  -------------- \nTraining WGAN total_steps=1000, #generatedData=5000\nStep: 0\nGenerator loss: 0.6404243111610413 | discriminator loss: 1.3558526039123535 \n\nStep: 100\nGenerator loss: 0.3018853962421417 | discriminator loss: 1.5490034818649292 \n\n```\n\n------------\n\n## Visualizing the Data Augmentation Process\n\n<p align=\"left\"><img width=60% src=\"https://github.com/InsightDataCommunity/Rival-AI.NY-18C/blob/master/images/5KPrecisionRecallCurves.png\"></p>\n\n<p align=\"center\"><img width=60% src=\"https://github.com/InsightDataCommunity/Rival-AI.NY-18C/blob/master/images/DataDistributionComparison100K.png\"></p>\n\n<p align=\"center\"><img width=60% src=\"https://github.com/InsightDataCommunity/Rival-AI.NY-18C/blob/master/images/ScoresWithIncreasingFakeData.png\"></p>\n\n<p align=\"center\"><img width=60% src=\"https://github.com/InsightDataCommunity/Rival-AI.NY-18C/blob/master/images/OVOSVMAugData.png\"></p>\n\n\n------------\n\n## GitHub Folder Structure\n\n```text\n\n.\n|-- ./rivalgan                  <- Source code for use in this project.   \n|-- ./reports                   <- Generated analysis as text files.\n|-- ./generated_data            <- Generated data. \n|-- ./scripts                   <- Helper scripts to use the API.\n|-- ./notebooks                 <- Jupyter notebooks.\n|-- ./images                    <- Generated graphics and figures to be used in reporting.\n`-- ./README.md                 <- The top-level README for this project.\n\n```\n\n------------\n\n## Setup script\n A setup script is available to be used to generate RIVALGAN as a package.\n\n ------------\n ## Requirements\n See requirements.txt file in the same directory of this README.md\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/InsightDataCommunity/Rival-AI.NY-18C",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rivalgan",
    "package_url": "https://pypi.org/project/rivalgan/",
    "platform": "",
    "project_url": "https://pypi.org/project/rivalgan/",
    "project_urls": {
      "Homepage": "https://github.com/InsightDataCommunity/Rival-AI.NY-18C"
    },
    "release_url": "https://pypi.org/project/rivalgan/0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Generate business data to balance classes",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4347917,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cd2733e82ac80a422053696f93149b5a6c6e7a2b02e4a757bfa3c855137569f",
          "md5": "ea0e21c6654c904d05fef02ada0c7574",
          "sha256": "e14413eef4f076c2b31254c27393d30cff794a8416f7f2d627d65a21b280f85a"
        },
        "downloads": -1,
        "filename": "rivalgan-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea0e21c6654c904d05fef02ada0c7574",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30884,
        "upload_time": "2018-10-06T20:00:24",
        "upload_time_iso_8601": "2018-10-06T20:00:24.381841Z",
        "url": "https://files.pythonhosted.org/packages/9c/d2/733e82ac80a422053696f93149b5a6c6e7a2b02e4a757bfa3c855137569f/rivalgan-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd857115bb5d672732c783e85ee242c9b2ccd44895ea5aa3aa2f7461c47b06f2",
          "md5": "3e97eba551c6b88667b303ac751a500d",
          "sha256": "02c188f7c110cc6ed5e83e3a09110b14c60e8a7392ea4f7dcff024b0e7ed4024"
        },
        "downloads": -1,
        "filename": "rivalgan-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3e97eba551c6b88667b303ac751a500d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29128,
        "upload_time": "2018-10-06T20:00:25",
        "upload_time_iso_8601": "2018-10-06T20:00:25.620881Z",
        "url": "https://files.pythonhosted.org/packages/dd/85/7115bb5d672732c783e85ee242c9b2ccd44895ea5aa3aa2f7461c47b06f2/rivalgan-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "973940c4a51a1090b7d99120f62c01ed7000fcfbed140039066a118e557c205b",
          "md5": "1b273366c5f9f650cf660bb2bf5253c6",
          "sha256": "7c58b4c9de19a1f4ab21e7590d6cbb31baa9fbb9623cda52e47bad12dcbaa045"
        },
        "downloads": -1,
        "filename": "rivalgan-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b273366c5f9f650cf660bb2bf5253c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 56461,
        "upload_time": "2018-10-06T20:21:35",
        "upload_time_iso_8601": "2018-10-06T20:21:35.664305Z",
        "url": "https://files.pythonhosted.org/packages/97/39/40c4a51a1090b7d99120f62c01ed7000fcfbed140039066a118e557c205b/rivalgan-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6972dbdf804c54f67fff2862cca2884aac4b1c3a1c1b328b4b9a70353dddf75",
          "md5": "fa2ddf0472e6797fa7d21629f88436b9",
          "sha256": "881016c66a5bee8638f75dda4b3c2e4369cdb24e65777519247dd5251a32474a"
        },
        "downloads": -1,
        "filename": "rivalgan-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fa2ddf0472e6797fa7d21629f88436b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29050,
        "upload_time": "2018-10-06T20:21:36",
        "upload_time_iso_8601": "2018-10-06T20:21:36.889270Z",
        "url": "https://files.pythonhosted.org/packages/c6/97/2dbdf804c54f67fff2862cca2884aac4b1c3a1c1b328b4b9a70353dddf75/rivalgan-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49ac8a3c92388c44e49e09ffd4d89730720518a9dd763ecccc87ef4addd5934b",
          "md5": "856fd643f210e39854260ce6fa668575",
          "sha256": "8c69ad6340ca4c4474b67dee2e9c0170d61fedd2b59308edba9a4e8dc2689ea2"
        },
        "downloads": -1,
        "filename": "rivalgan-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "856fd643f210e39854260ce6fa668575",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 56529,
        "upload_time": "2018-10-06T20:42:26",
        "upload_time_iso_8601": "2018-10-06T20:42:26.034155Z",
        "url": "https://files.pythonhosted.org/packages/49/ac/8a3c92388c44e49e09ffd4d89730720518a9dd763ecccc87ef4addd5934b/rivalgan-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c139711a9952e2d7127cfb290846db4c0151f8dd2acf3cb9f943ff72c3f78348",
          "md5": "1952d1cf1e2689402f5a78fcc7a99b22",
          "sha256": "5bbdcc9e3b0a187844c7345772c6b855599ba75d3449cc9f4fb3311192bc6200"
        },
        "downloads": -1,
        "filename": "rivalgan-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1952d1cf1e2689402f5a78fcc7a99b22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29070,
        "upload_time": "2018-10-06T20:42:27",
        "upload_time_iso_8601": "2018-10-06T20:42:27.517338Z",
        "url": "https://files.pythonhosted.org/packages/c1/39/711a9952e2d7127cfb290846db4c0151f8dd2acf3cb9f943ff72c3f78348/rivalgan-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49ac8a3c92388c44e49e09ffd4d89730720518a9dd763ecccc87ef4addd5934b",
        "md5": "856fd643f210e39854260ce6fa668575",
        "sha256": "8c69ad6340ca4c4474b67dee2e9c0170d61fedd2b59308edba9a4e8dc2689ea2"
      },
      "downloads": -1,
      "filename": "rivalgan-0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "856fd643f210e39854260ce6fa668575",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 56529,
      "upload_time": "2018-10-06T20:42:26",
      "upload_time_iso_8601": "2018-10-06T20:42:26.034155Z",
      "url": "https://files.pythonhosted.org/packages/49/ac/8a3c92388c44e49e09ffd4d89730720518a9dd763ecccc87ef4addd5934b/rivalgan-0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c139711a9952e2d7127cfb290846db4c0151f8dd2acf3cb9f943ff72c3f78348",
        "md5": "1952d1cf1e2689402f5a78fcc7a99b22",
        "sha256": "5bbdcc9e3b0a187844c7345772c6b855599ba75d3449cc9f4fb3311192bc6200"
      },
      "downloads": -1,
      "filename": "rivalgan-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "1952d1cf1e2689402f5a78fcc7a99b22",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29070,
      "upload_time": "2018-10-06T20:42:27",
      "upload_time_iso_8601": "2018-10-06T20:42:27.517338Z",
      "url": "https://files.pythonhosted.org/packages/c1/39/711a9952e2d7127cfb290846db4c0151f8dd2acf3cb9f943ff72c3f78348/rivalgan-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}