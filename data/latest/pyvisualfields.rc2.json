{
  "info": {
    "author": "Mohammad Eslami",
    "author_email": "Mohammad_eslami@meei.harvard.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyVisualFields \n\n## A python tool collection for analyzing visual fields \n\nThis packages includes functions for visuald field analysis and display. \n\nhttps://pypi.org/project/PyVisualFields/\n\nWe use the rpy2 as the python wrapper to use R in Python. Then, we define and prepare the methods to call the methods and data implemented and introduced in R packages vfprogression (by Elze et al. [1]) and visualFields (by Marin-Granch et al. [2]). We write these functions in python language and demonstrate their functionalities in four categories of presenting data, plotting, scoring and progression analysis, and normalization analysis. For each category, we provide the examples, description of each function, associated requirements, and the output of that function in Jupyter notebooks.\n\n\n## Demo jupyter notebooks\n\nThe list and description of all functions are available at [All_Functions](#list-of-functions). They are all examined and introduced with examples in 4 different notebooks categorized: </br>\n- Data [demo_1_Data.ipynb](demo_1_Data.ipynb)\n- Normalization and deviation analysis [demo_2_Deviation_Analysis.ipynb](demo_2_Deviation_Analysis.ipynb)\n- Plotting [demo_3_Plotting.ipynb](demo_3_Plotting.ipynb)\n- Analysis [demo_4_Analysis.ipynb](demo_4_Analysis.ipynb)\n\n\n\n## Installation: \nThis python package depends on \n- R \n- rpy2 python package\n- vfprogression R package\n- visualFields R package\n\nMake sure to install them before installing this PyVisualFields package:\n\n- If you want to create a seperate conda environment and install everything from scratch follow this guidline: [readme_Installation_conda.md](https://github.com/mohaEs/PyVisualField/blob/main/readme_Installation_conda.md)\nor this video [installation_video](https://youtu.be/_L9YWrtlOhY) \n\n- If you have your preinstalled R or rpy2, follow the steps provided in our guideline: [readme_Installation.md](https://github.com/mohaEs/PyVisualField/blob/main/readme_Installation.md)\n\n## references:\n[1] https://cran.r-project.org/web/packages/vfprogression/index.html </br>\n[2] https://cran.r-project.org/web/packages/visualFields/index.html \n\n</br>\n\n![](./imgs/img.jpg)\n\n\n## list of functions\nThe list and description of all functions are as follow. They are all examined and introduced with examples in 4 different notebooks. It is important to mention that, based on the background R packages, the input VF dataframe needs to have columns with special column names. Make sure, to consider the data notebook. If further information is required, see the corresponding references: _vfprogression[1]_, _visualFields[2]_ </br>\n- Data [demo_1_Data.ipynb](demo_1_Data.ipynb)\n- Normalization and deviation analysis [demo_2_Deviation_Analysis.ipynb](demo_2_Deviation_Analysis.ipynb)\n- Plotting [demo_3_Plotting.ipynb](demo_3_Plotting.ipynb)\n- Analysis [demo_4_Analysis.ipynb](demo_4_Analysis.ipynb)\n\n</br>\n\n-   &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   __function__  &nbsp; ----------------------------- &nbsp; __description__ &nbsp; ----------- &nbsp; __from package__ </br> </br>\n- visualFields.data_vfpwgRetest24d2() &nbsp; ----------- &nbsp; VF data &nbsp; ----------- &nbsp; _visualFields[2]_ \n- visualFields.data_vfctrSunyiu24d2() &nbsp; ----------- &nbsp; VF data &nbsp; ----------- &nbsp; _visualFields[2]_ \n- visualFields.data_vfpwgSunyiu24d2() &nbsp; ----------- &nbsp; VF data &nbsp; ----------- &nbsp; _visualFields[2]_ \n- visualFields.data_vfctrSunyiu10d2() &nbsp; ----------- &nbsp; VF data &nbsp; ----------- &nbsp; _visualFields[2]_ \n-  visualFields.data_vfctrIowaPC26() &nbsp; ----------- &nbsp; VF data &nbsp; ----------- &nbsp; _visualFields[2]_ \n- visualFields.data_vfctrIowaPeri() &nbsp; ----------- &nbsp; VF data &nbsp; ----------- &nbsp; _visualFields[2]_ </br></br>\n- vfprogression.data_vfseries() &nbsp; ----------- &nbsp; VF data &nbsp; ----------- &nbsp; _vfprogression[1]_ \n- vfprogression.data_vfi() &nbsp; ----------- &nbsp; VF data &nbsp; ----------- &nbsp; _vfprogression[1]_ \n-  vfprogression.data_cigts() &nbsp; ----------- &nbsp; VF data &nbsp; ----------- &nbsp; _vfprogression[1]_ \n- vfprogression.data_plrnouri2012() &nbsp; ----------- &nbsp; VF data &nbsp; ----------- &nbsp; _vfprogression[1]_ \n- vfprogression.data_schell2014()  &nbsp; ----------- &nbsp; VF data &nbsp; ----------- &nbsp; _vfprogression[1]_  </br></br>\n- vfprogression.get_score_AGIS() &nbsp; ----------- &nbsp;  get AGIS score &nbsp; ----------- &nbsp; _vfprogression[1]_\n- vfprogression.get_score_CIGTS() &nbsp; ----------- &nbsp;  get CIGTS score &nbsp; ----------- &nbsp; _vfprogression[1]_\n- vfprogression.progression_cigts() &nbsp; ----------- &nbsp;  progression analysis by CIGTS &nbsp; ----------- &nbsp; _vfprogression[1]_\n- vfprogression.progression_plrnouri2012() &nbsp; ----------- &nbsp;  progression analysis by Nouri et al. &nbsp; ----------- &nbsp; _vfprogression[1]_\n- vfprogression.progression_vfi()&nbsp; ----------- &nbsp;  progression analysis by VFi measurements &nbsp; ----------- &nbsp; _vfprogression[1]_\n- vfprogression.progression_schell2014()&nbsp; ----------- &nbsp;  progression analysis by schell et al. &nbsp; ----------- &nbsp; _vfprogression[1]_\n- vfprogression.progression_agis()&nbsp; ----------- &nbsp;  progression analysis by AGIS &nbsp; ----------- &nbsp; _vfprogression[1]_ </br></br> \n- visualFields.glr() &nbsp; ----------- &nbsp;  Linear regression with global indices  &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.plr() &nbsp; ----------- &nbsp;  pointwise linear regression (PLR)  &nbsp; ----------- &nbsp; _visualFields[2]_  \n- visualFields.poplr() &nbsp; ----------- &nbsp;  PoPLR regression analysis  &nbsp; ----------- &nbsp; _visualFields[2]_ </br></br>\n- vfprogression.plotValues() &nbsp; ----------- &nbsp; plot/save VF values (s, td, pd) &nbsp; ----------- &nbsp; _vfprogression[1]_ \n- vfprogression.plotProbabilities() ----------- &nbsp; plot/save tdp/pdp values (tdp, pdp) &nbsp; ----------- &nbsp; _vfprogression[1]_\n- visualFields.vfplot() ----------- &nbsp; plot/save s/td/pd/tds/pds values (s, td, pd) &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.vfplot_s()  &nbsp; ----------- &nbsp; alias for vfplot(type='s') &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.vfplot_td()  &nbsp; ----------- &nbsp; alias for vfplot(type='td') &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.vfplot_pd() &nbsp; ----------- &nbsp; alias for vfplot(type='pd') &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.vfplot_tds()  &nbsp; ----------- &nbsp; alias for vfplot(type='tds') (s, td, pd) &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.vfplot_pds()  &nbsp; ----------- &nbsp; alias for vfplot(type='pds') (s, td, pd) &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.plotProbColormap() &nbsp; ----------- &nbsp; show colormap of probablies &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.vfplotsparklines() &nbsp; ----------- &nbsp; plot/save sparklines (s, td, pd) &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.vfplotsparklines_s()  &nbsp; ----------- &nbsp; alias for vfplotsparklines(type='s') &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.vfplotsparklines_td() &nbsp; ----------- &nbsp; alias for vfplotsparklines(type='td') &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.vfplotsparklines_pd() &nbsp; ----------- &nbsp; alias for vfplotsparklines(type='pd') &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.vfplotplr() &nbsp; ----------- &nbsp; -- &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.vflegoplot() &nbsp; ----------- &nbsp; -- &nbsp; ----------- &nbsp; _visualFields[2]_ \n- visualFields.vfsfa() &nbsp; ----------- &nbsp; Generates one-page report of single field analyses as a pdf file &nbsp; ----------- &nbsp; _visualFields[2]_  </br></br>\n- currentNV = visualFields.getnv() &nbsp; ----------- &nbsp; get current normative environment/setting (NV) &nbsp; ----------- &nbsp; _visualFields[2]_ \n- visualFields.getallvalues() &nbsp; ----------- &nbsp; compute all td, pd, pdp, tdp, gl, gh,glp based on the current NV &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.gettd() &nbsp; ----------- &nbsp; alias for getallvalues only to compute td &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.getgl() &nbsp; ----------- &nbsp; alias for getallvalues only to compute gl &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.gettdp() &nbsp; ----------- &nbsp; alias for getallvalues only to compute tdp &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.getpd() &nbsp; ----------- &nbsp; alias for getallvalues only to compute pd &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.getgh() &nbsp; ----------- &nbsp; alias for getallvalues only to compute gh &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.getpdp() &nbsp; ----------- &nbsp; alias for getallvalues only to compute pdp &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.getglp() &nbsp; ----------- &nbsp; alias for getallvalues only to compute gi &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.get_info_normvals() &nbsp; ----------- &nbsp; Get all avialbale predefined normalization environments/settings &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.setnv() &nbsp; ----------- &nbsp; change/set normalization environment based on a predefined NV &nbsp; ----------- &nbsp; _visualFields[2]_\n- visualFields.nvgenerate &nbsp; ----------- &nbsp; generate a normalization environment based new data &nbsp; ----------- &nbsp; _visualFields[2]_\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mohaEs/PyVisualField",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyVisualFields",
    "package_url": "https://pypi.org/project/PyVisualFields/",
    "platform": null,
    "project_url": "https://pypi.org/project/PyVisualFields/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mohaEs/PyVisualField/issues",
      "Demo Analysis": "https://github.com/mohaEs/PyVisualField/blob/main/demo_4_Analysis.ipynb",
      "Demo Data": "https://github.com/mohaEs/PyVisualField/blob/main/demo_1_Data.ipynb",
      "Demo Normalization": "https://github.com/mohaEs/PyVisualField/blob/main/demo_2_Deviation_Analysis.ipynb",
      "Demo Plotting": "https://github.com/mohaEs/PyVisualField/blob/main/demo_3_Plotting.ipynb",
      "Harvard Ophthalmology AI LAB": "https://ophai.hms.harvard.edu/",
      "Homepage": "https://github.com/mohaEs/PyVisualField"
    },
    "release_url": "https://pypi.org/project/PyVisualFields/1.0.4/",
    "requires_dist": [
      "tzlocal (>=3.0)",
      "scikit-image (>=0.18.1)",
      "pandas (>=1.2.4)",
      "PyPDF2 (>=1.26.0)",
      "PyMuPDF (>=1.19.1)",
      "reportlab (>=3.6.2)",
      "matplotlib (>=3.3.4)"
    ],
    "requires_python": ">=3.6",
    "summary": "A python toolkit for visual field analysis",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13901292,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2be654d6ca9930ddc3a012460deb40366e1ab312cd3db02624f7a4527e717acf",
          "md5": "bc2af6b46147b8e97bc34f0976737484",
          "sha256": "bea7732cb173891802493b3b891a994801b2eb6a208cb82ffbacbaadd94698e1"
        },
        "downloads": -1,
        "filename": "PyVisualFields-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc2af6b46147b8e97bc34f0976737484",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17995,
        "upload_time": "2022-05-06T21:59:48",
        "upload_time_iso_8601": "2022-05-06T21:59:48.607805Z",
        "url": "https://files.pythonhosted.org/packages/2b/e6/54d6ca9930ddc3a012460deb40366e1ab312cd3db02624f7a4527e717acf/PyVisualFields-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20a3c70f62a058f00db435f59e65e3e3d92727952a8c665e7e7ff1fe520b8b5c",
          "md5": "daa6cfb0cda5939b8c56060cf83ec5e0",
          "sha256": "36e13b8080701f1a72d4418cca3bba195b0d013ac15f17b06e52df97ed0e961e"
        },
        "downloads": -1,
        "filename": "PyVisualFields-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "daa6cfb0cda5939b8c56060cf83ec5e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18940,
        "upload_time": "2022-05-06T21:59:50",
        "upload_time_iso_8601": "2022-05-06T21:59:50.348369Z",
        "url": "https://files.pythonhosted.org/packages/20/a3/c70f62a058f00db435f59e65e3e3d92727952a8c665e7e7ff1fe520b8b5c/PyVisualFields-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cefbe4941d2f8f813a4608d0205a57f014616e48a54239238d917f1d3fa3dcfa",
          "md5": "4011bc18de0f62b1ce7b9ae47f95c135",
          "sha256": "318de3e14ed0f2f2dfdb3f263d68389ced55a05d07ce887ca35c122fba66f4aa"
        },
        "downloads": -1,
        "filename": "PyVisualFields-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4011bc18de0f62b1ce7b9ae47f95c135",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17982,
        "upload_time": "2022-05-23T12:27:57",
        "upload_time_iso_8601": "2022-05-23T12:27:57.860684Z",
        "url": "https://files.pythonhosted.org/packages/ce/fb/e4941d2f8f813a4608d0205a57f014616e48a54239238d917f1d3fa3dcfa/PyVisualFields-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c6e449c7a5ff9fdd9eca14d2317487b8fcae280d5a70cb910457e5516be184a",
          "md5": "524ab3ad7642c658f14310c1255b604a",
          "sha256": "543d946575f28228df18ca19a6a90b133249e7a8b99629463836e73da6650b25"
        },
        "downloads": -1,
        "filename": "PyVisualFields-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "524ab3ad7642c658f14310c1255b604a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18889,
        "upload_time": "2022-05-23T12:27:59",
        "upload_time_iso_8601": "2022-05-23T12:27:59.459216Z",
        "url": "https://files.pythonhosted.org/packages/2c/6e/449c7a5ff9fdd9eca14d2317487b8fcae280d5a70cb910457e5516be184a/PyVisualFields-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cefbe4941d2f8f813a4608d0205a57f014616e48a54239238d917f1d3fa3dcfa",
        "md5": "4011bc18de0f62b1ce7b9ae47f95c135",
        "sha256": "318de3e14ed0f2f2dfdb3f263d68389ced55a05d07ce887ca35c122fba66f4aa"
      },
      "downloads": -1,
      "filename": "PyVisualFields-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4011bc18de0f62b1ce7b9ae47f95c135",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17982,
      "upload_time": "2022-05-23T12:27:57",
      "upload_time_iso_8601": "2022-05-23T12:27:57.860684Z",
      "url": "https://files.pythonhosted.org/packages/ce/fb/e4941d2f8f813a4608d0205a57f014616e48a54239238d917f1d3fa3dcfa/PyVisualFields-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c6e449c7a5ff9fdd9eca14d2317487b8fcae280d5a70cb910457e5516be184a",
        "md5": "524ab3ad7642c658f14310c1255b604a",
        "sha256": "543d946575f28228df18ca19a6a90b133249e7a8b99629463836e73da6650b25"
      },
      "downloads": -1,
      "filename": "PyVisualFields-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "524ab3ad7642c658f14310c1255b604a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 18889,
      "upload_time": "2022-05-23T12:27:59",
      "upload_time_iso_8601": "2022-05-23T12:27:59.459216Z",
      "url": "https://files.pythonhosted.org/packages/2c/6e/449c7a5ff9fdd9eca14d2317487b8fcae280d5a70cb910457e5516be184a/PyVisualFields-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}