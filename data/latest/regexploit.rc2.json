{
  "info": {
    "author": "Ben Caller :: Doyensec",
    "author_email": "REMOVETHISPREFIX.ben@doyensec.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Regexploit\n\n![regexploit_logo](https://user-images.githubusercontent.com/6027823/110626827-7f46db80-81a1-11eb-9a3d-3e3376bd9a4f.png)\n\nFind regexes which are vulnerable to Regular Expression Denial of Service (ReDoS).\n\nMany default regular expression parsers have unbounded worst-case complexity. Regex matching may be quick when presented with a matching input string. However, certain non-matching input strings can make the regular expression matcher go into crazy backtracking loops and take ages to process. This can cause denial of service, as the CPU will be stuck trying to match the regex.\n\nThis tool is designed to:\n*  find regular expressions which are vulnerable to ReDoS\n*  give an example malicious string which will cause catastrophic backtracking\n\n## Worst-case complexity\n\nThis reflects the complexity of the regular expression matcher's backtracking procedure with respect to the length of the entered string.\n\nCubic complexity here means that if the vulnerable part of the string is doubled in length, the execution time should be about 8 times longer (2^3).\nFor exponential ReDoS with starred stars e.g. `(a*)*$` a fudge factor is used and the complexity will be greater than 10.\n\nFor explotability, cubic complexity or higher is typically required unless truly giant strings are allowed as input.\n\n## Example\n\nRun `regexploit` and enter the regular expression `v\\w*_\\w*_\\w*$` at the command line.\n\n```\n$ regexploit\nv\\w*_\\w*_\\w*$\nPattern: v\\w*_\\w*_\\w*$\n---\nWorst-case complexity: 3 ⭐⭐⭐ (cubic)\nRepeated character: [5f:_]\nFinal character to cause backtracking: [^WORD]\nExample: 'v' + '_' * 3456 + '!'\n```\n\nThe part `\\w*_\\w*_\\w*` contains three overlapping repeating groups (\\w matches letters, digits *and underscores*). As showed in the line `Repeated character: [5f:_]`, a long string of `_` (0x5f) will match this section in many different ways. The worst-case complexity is 3 as there are 3 infinitely repeating groups. An example to cause ReDoS is given: it consists of the required prefix `v`, a long string of `_` and then a `!` (non-word character) to cause backtracking. Not all ReDoSes require a particular character at the end, but in this case, a long string of `_` will match the regex successfully and won't backtrack. The line `Final character to cause backtracking: [^WORD]` shows that a non-matching character (not a word character) is required at the end to prevent matching and cause ReDoS.\n\nAs another example, install a module version vulnerable to ReDoS such as `pip install ua-parser==0.9.0`.\nTo scan the installed python modules run `regexploit-python-env`.\n\n```\nImporting ua_parser.user_agent_parser\nVulnerable regex in /somewhere/.env/lib/python3.9/site-packages/ua_parser/user_agent_parser.py #183\nPattern: \\bSmartWatch *\\( *([^;]+) *; *([^;]+) *;\nContext: self.user_agent_re = re.compile(self.pattern)\n---\nWorst-case complexity: 3 ⭐⭐⭐\nRepeated character: [20]\nExample: 'SmartWatch(' + ' ' * 3456\n\nWorst-case complexity: 3 ⭐⭐⭐\nRepeated character: [20]\nExample: 'SmartWatch(0;' + ' ' * 3456\n\nVulnerable regex in /somewhere/.env/lib/python3.9/site-packages/ua_parser/user_agent_parser.py #183\nPattern: ; *([^;/]+) Build[/ ]Huawei(MT1-U06|[A-Z]+\\d+[^\\);]+)[^\\);]*\\)\nContext: self.user_agent_re = re.compile(self.pattern)\n---\nWorst-case complexity: 3 ⭐⭐⭐\nRepeated character: [[0-9]]\nExample: ';0 Build/HuaweiA' + '0' * 3456\n...\n```\n\nFor each vulnerable regular expression it prints one or more malicious string to trigger ReDoS. Setting your user agent to `;0 Build/HuaweiA000000000000000...` and browsing a website using an old version of ua-parser may cause the server to take a long time to process your request, probably ending in status 502.\n\n# Installation\n\nPython 3.8+ is required. To extract regexes from JavaScript / TypeScript code, NodeJS 12+ is also required.\n\nOptionally make a virtual environment\n\n```bash\npython3 -m venv .env\nsource .env/bin/activate\n```\n\nNow actually install with pip\n\n```\npip install regexploit\n```\n\n# Usage\n\n## Regexploit with a list of regexes\n\nEnter regular expressions via stdin (one per line) into `regexploit`.\n\n```bash\nregexploit\n```\n\nor via a file\n\n```bash\ncat myregexes.txt | regexploit\n```\n\n## Extract regexes automatically\n\nThere is built-in support for parsing regexes out of Python, JavaScript, TypeScript, C#, YAML and JSON.\n### Python code\n\nParses Python code (without executing it) via the AST to find regexes. The regexes are then analysed for ReDoS.\n\n```bash\nregexploit-py my-project/\nregexploit-py \"my-project/**/*.py\" --glob\n```\n### Javascript / Typescript\n\nThis will use the bundled NodeJS package in `regexploit/bin/javascript` which parses your JavaScript as an AST with [eslint](https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/parser) and prints out all regexes.\n\nThose regexes are fed into the python ReDoS finder.\n\n```bash\nregexploit-js my-module/my-file.js another/file.js some/folder/\nregexploit-js \"my-project/node_modules/**/*.js\" --glob\n```\n\nN.B. there are differences between javascript and python regex parsing so there may be some errors. I'm [not sure I want](https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983) to write a JS regex AST!\n\n### Python imports\n\nSearch for regexes in all the python modules currently installed in your path / env. This means you can `pip install` whatever modules you are interested in and they will be analysed. Cpython code is included.\n\n```bash\nregexploit-python-env\n```\n\nN.B. this doesn't parse the python code to an AST and will only find regexes compiled automatically on module import. Modules are actually imported, **so code in the modules will be executed**. This is helpful for finding regexes which are built up from smaller strings on load e.g. [CVE-2021-25292 in Pillow](https://github.com/python-pillow/Pillow/commit/3bce145966374dd39ce58a6fc0083f8d1890719c)\n\n### JSON / YAML\n\nYaml support requires pyyaml, which can be installed with `pip install regexploit[yaml]`.\n\n```bash\nregexploit-json *.json\nregexploit-yaml *.yaml\n```\n### C# (.NET)\n\n```bash\nregexploit-csharp something.cs\n```\n# :trophy: Bugs reported :trophy:\n\n* [CVE-2020-5243: uap-core](https://github.com/ua-parser/uap-core/security/advisories/GHSA-cmcx-xhr8-3w9p) affecting uap-python, [uap-ruby](https://github.com/ua-parser/uap-ruby/security/advisories/GHSA-pcqq-5962-hvcw), etc. (User-Agent header parsing)\n* [CVE-2020-8492: cpython's urllib.request](https://github.com/python/cpython/commit/0b297d4ff1c0e4480ad33acae793fbaf4bf015b4) (WWW-Authenticate header parsing)\n* [CVE-2021-21236: CairoSVG](https://github.com/advisories/GHSA-hq37-853p-g5cf) (SVG parsing)\n* [CVE-2021-21240: httplib2](https://github.com/httplib2/httplib2/security/advisories/GHSA-93xj-8mrv-444m) (WWW-Authenticate header parsing)\n* [CVE-2021-25292: python-pillow](https://github.com/python-pillow/Pillow/commit/3bce145966374dd39ce58a6fc0083f8d1890719c) (PDF parsing)\n* [CVE-2021-26813: python-markdown2](https://github.com/trentm/python-markdown2/pull/387) (Markdown parsing)\n* [CVE-2021-27290: npm/ssri](https://doyensec.com/resources/Doyensec_Advisory_ssri_redos.pdf) (SRI parsing)\n* [CVE-2021-27291: pygments](https://github.com/pygments/pygments/commit/2e7e8c4a7b318f4032493773732754e418279a14) lexers for ADL, CADL, Ceylon, Evoque, Factor, Logos, Matlab, Octave, ODIN, Scilab & Varnish VCL (Syntax highlighting)\n* [CVE-2021-27292: ua-parser-js](https://github.com/faisalman/ua-parser-js/commit/809439e20e273ce0d25c1d04e111dcf6011eb566) (User-Agent header parsing)\n* [CVE-2021-27293: RestSharp](https://github.com/restsharp/RestSharp/issues/1556) (JSON deserialisation in a .NET C# package)\n* [bpo-38804: cpython's http.cookiejar](https://github.com/python/cpython/pull/17157) (Set-Cookie header parsing)\n* [SimpleCrawler (archived)](https://doyensec.com/resources/Doyensec_Advisory_simplecrawler_redos.pdf) (HTML parsing)\n* CVE-2021-28092: to be released\n* Plus unpublished bugs in a handful of pypi, npm, ruby and nuget packages\n\n## Credits\n\nThis tool has been created by Ben Caller of [Doyensec LLC](https://www.doyensec.com) during research time. \n\n![alt text](https://doyensec.com/images/logo.svg \"Doyensec Logo\")\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/doyensec/regexploit",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "regexploit",
    "package_url": "https://pypi.org/project/regexploit/",
    "platform": "",
    "project_url": "https://pypi.org/project/regexploit/",
    "project_urls": {
      "Homepage": "https://github.com/doyensec/regexploit"
    },
    "release_url": "https://pypi.org/project/regexploit/1.0.0/",
    "requires_dist": [
      "pyyaml (>=5.3.1) ; extra == 'yaml'"
    ],
    "requires_python": ">=3.8",
    "summary": "Find regular expressions vulnerable to ReDoS",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9740841,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da0a90dc0759b72d2d1b726dbcdbca2d044cd048f8089936f69c40dca474975f",
          "md5": "39fd8aa0427307b364b77659cb293788",
          "sha256": "71918acbd0134989cf3928577f3e5a6e0ab1a57891293dc83bfef198fc9949c2"
        },
        "downloads": -1,
        "filename": "regexploit-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39fd8aa0427307b364b77659cb293788",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 79818,
        "upload_time": "2021-03-11T14:32:37",
        "upload_time_iso_8601": "2021-03-11T14:32:37.392092Z",
        "url": "https://files.pythonhosted.org/packages/da/0a/90dc0759b72d2d1b726dbcdbca2d044cd048f8089936f69c40dca474975f/regexploit-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f54cfc58c4892615496d632404633d07ea098e075c68afeb0e0536e21c9babee",
          "md5": "b0b3cddbdd66891002b5ce76b8277809",
          "sha256": "1abd5f6a92fd0959ddf13c5e84246935d21c5cd173e8d38bcf58c24eb24cd36f"
        },
        "downloads": -1,
        "filename": "regexploit-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b0b3cddbdd66891002b5ce76b8277809",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 72704,
        "upload_time": "2021-03-11T14:32:38",
        "upload_time_iso_8601": "2021-03-11T14:32:38.950574Z",
        "url": "https://files.pythonhosted.org/packages/f5/4c/fc58c4892615496d632404633d07ea098e075c68afeb0e0536e21c9babee/regexploit-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c99748619b7d37d8b2e8f83c636049634fe92cadaeaa0c2b916b279ff8523db",
          "md5": "55b7d44044a1d28e9080235befa9b27f",
          "sha256": "0f788f824c02f94280ef3dfeaa7a66284c6e2d4b3efcccb0f7ccca777e4acc0e"
        },
        "downloads": -1,
        "filename": "regexploit-1.0.0rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "55b7d44044a1d28e9080235befa9b27f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 79623,
        "upload_time": "2021-03-09T22:18:32",
        "upload_time_iso_8601": "2021-03-09T22:18:32.148553Z",
        "url": "https://files.pythonhosted.org/packages/4c/99/748619b7d37d8b2e8f83c636049634fe92cadaeaa0c2b916b279ff8523db/regexploit-1.0.0rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee4da6abbc0b33fcac7e83a1a5a28583251cbaa6b4087489652054b66fde5180",
          "md5": "e905de5af6c66c1e6902ff53c415a47d",
          "sha256": "f1abe9ea0267ca1713c2ff260b810704451b9288d890899f6b976836f3241d9b"
        },
        "downloads": -1,
        "filename": "regexploit-1.0.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "e905de5af6c66c1e6902ff53c415a47d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 72294,
        "upload_time": "2021-03-09T22:18:33",
        "upload_time_iso_8601": "2021-03-09T22:18:33.524687Z",
        "url": "https://files.pythonhosted.org/packages/ee/4d/a6abbc0b33fcac7e83a1a5a28583251cbaa6b4087489652054b66fde5180/regexploit-1.0.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da0a90dc0759b72d2d1b726dbcdbca2d044cd048f8089936f69c40dca474975f",
        "md5": "39fd8aa0427307b364b77659cb293788",
        "sha256": "71918acbd0134989cf3928577f3e5a6e0ab1a57891293dc83bfef198fc9949c2"
      },
      "downloads": -1,
      "filename": "regexploit-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "39fd8aa0427307b364b77659cb293788",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 79818,
      "upload_time": "2021-03-11T14:32:37",
      "upload_time_iso_8601": "2021-03-11T14:32:37.392092Z",
      "url": "https://files.pythonhosted.org/packages/da/0a/90dc0759b72d2d1b726dbcdbca2d044cd048f8089936f69c40dca474975f/regexploit-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f54cfc58c4892615496d632404633d07ea098e075c68afeb0e0536e21c9babee",
        "md5": "b0b3cddbdd66891002b5ce76b8277809",
        "sha256": "1abd5f6a92fd0959ddf13c5e84246935d21c5cd173e8d38bcf58c24eb24cd36f"
      },
      "downloads": -1,
      "filename": "regexploit-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b0b3cddbdd66891002b5ce76b8277809",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 72704,
      "upload_time": "2021-03-11T14:32:38",
      "upload_time_iso_8601": "2021-03-11T14:32:38.950574Z",
      "url": "https://files.pythonhosted.org/packages/f5/4c/fc58c4892615496d632404633d07ea098e075c68afeb0e0536e21c9babee/regexploit-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}