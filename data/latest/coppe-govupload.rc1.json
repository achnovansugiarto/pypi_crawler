{
  "info": {
    "author": "COPPE",
    "author_email": "UNKNOWN",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Plone",
      "Framework :: Plone :: 4.2",
      "Framework :: Plone :: 4.3",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: JavaScript",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "*****************\ncoppe.govupload\n*****************\n\n.. contents:: Table of Contents\n\nLife, the Universe, and Everything\n----------------------------------\n\nFile upload widget with multiple file selection, drag&drop support, progress\nbars, client-side image resizing and preview images.\n\n``coppe.govupload`` is smoothly integrated with Plone's UI and works with\nany folderish content type based on Archetypes or Dexterity.\n\nMostly Harmless\n---------------\n\n.. image:: https://secure.travis-ci.org/collective/coppe.govupload.png?branch=master\n    :alt: Travis CI badge\n    :target: http://travis-ci.org/collective/coppe.govupload\n\n.. image:: https://coveralls.io/repos/collective/coppe.govupload/badge.png?branch=master\n    :alt: Coveralls badge\n    :target: https://coveralls.io/r/collective/coppe.govupload\n\n.. image:: https://pypip.in/d/coppe.govupload/badge.png\n    :alt: Downloads\n    :target: https://pypi.python.org/pypi/coppe.govupload\n\nGot an idea? Found a bug? Let us know by `opening a support ticket`_.\n\n.. _`opening a support ticket`: https://github.com/collective/coppe.govupload/issues\n\nDon't Panic\n-----------\n\nInstallation\n^^^^^^^^^^^^\n\nTo enable this product in a buildout-based installation:\n\n#. Edit your buildout.cfg and add ``coppe.govupload`` to the list of eggs to\n   install::\n\n    [buildout]\n    ...\n    eggs =\n        coppe.govupload\n\n#. If you're using Plone 4.2, you may need to pin the right versions of the\n   jQuery and jQuery Tools packages::\n\n    [versions]\n    plone.app.jquery = 1.7.2\n    plone.app.jquerytools = 1.5.7\n\nAfter updating the configuration you need to run ''bin/buildout'', which will\ntake care of updating your system.\n\nGo to the 'Site Setup' page in a Plone site and click on the 'Add-ons' link.\n\nCheck the box next to ``coppe.govupload`` and click the 'Activate' button.\n\n.. Note::\n    You may have to empty your browser cache and save your resource registries\n    in order to see the effects of the product installation.\n\nFeatures\n^^^^^^^^\n\n- Support for Archetypes and Dexterity-based content types\n- **Multiple file upload**: Allows to select multiple files at once and upload\n  them sequentially (simultaneously is not currently enabled)\n- **Drag & Drop support**: Allows to upload files by dragging them from your\n  desktop or file manager and dropping them on your browser window\n- **Upload progress bar**: Shows a progress bar indicating the upload progress\n  for individual files and for all uploads combined\n- **Cancelable uploads**: Individual file uploads can be canceled to stop the\n  upload progress\n- **Client-side image resizing**: Images can be automatically resized on\n  client-side with browsers supporting the required JS APIs\n- **Preview images**: A preview of image files can be displayed before\n  uploading with browsers supporting the required JS APIs\n- **No browser plugins required**: The implementation is based on open\n  standards like HTML5 and JavaScript and requires no additional browser\n  plugins\n- **Graceful fallback for legacy browsers**: Uploads files via XMLHttpRequests\n  if supported and uses iframes as fallback for legacy browsers\n- **Cross-site file uploads**: Supports uploading files to a different domain\n  with Cross-site XMLHttpRequests\n\nBrowsers supported\n^^^^^^^^^^^^^^^^^^\n\n- Google Chrome 7.0+\n- Mozilla Firefox 3.0+\n- Microsoft Internet Explorer 6.0+\n- Opera 10.0+\n- Apple Safari 4.0+\n\nDrag & Drop is only supported on Google Chrome, Firefox 4.0+ and Safari 5.0+.\n\nClient-side image resizing is only supported on Google Chrome, Firefox 4.0+.\n\nMicrosoft Internet Explorer has no support for multiple file selection or\nupload progress.\n\n`Extended browser support information`_.\n\nFuture features\n^^^^^^^^^^^^^^^\n\nWe want to implement these features at some point in the future:\n\n- Refactoring of widget's UI\n- **Resumable uploads**: Aborted uploads can be resumed with browsers\n  supporting the Blob API\n- **Chunked uploads**: Large files can be uploaded in smaller chunks with\n  browsers supporting the Blob API\n- **HTML file upload form fallback**: Shows a standard HTML file upload form\n  if JavaScript is disabled\n- Enable/disable automatic uploads\n- Server side image resizing\n- Server side file type constraint\n- Asynchronous Module Definition (`AMD`_) support\n- Widget for \"allowed extensions\" option\n\nDeveloper's notes\n^^^^^^^^^^^^^^^^^\n\nIn the folder \"static\" you are going to find the JavaScript used in this\nproject; here a list with the file name and function:\n\napplications.js\n  The main file; here you will find 2 important things: plugin initialization\n  and inheritance of basic UI code with custom templates (e.g. every new file\n  dropped in the file upload widget is going to generate a new row, here is\n  the code for that).\n\n`canvas-to-blob.min.js`_\n  Converts canvas elements into Blob objects, is a polyfill for the standard\n  HTML canvas.toBlob method.\n\n`load-image.min.js`_\n  Load Image is a function to load images provided as File or Blob objects or\n  via URL.\n\njquery.fileupload.js\n  The most basic version of the File Upload plugin, with no UI.\n\njquery.fileupload-fp.js\n  Extends the basic fileupload widget with image processing functionality.\n\njquery.fileupload-ui.js\n  Extends the FP version, adds complete user interface interaction.\n\njquery.iframe-transport.js\n  Used for cross-site iframe transport uploads a way of degradation for the\n  XHR upload.\n\ncors/jquery.xdr-transport.js\n  jQuery XDomainRequest Transport plugin; enables cross-domain AJAX requests\n  (GET and POST only) (not really used, its just there if you need to\n  implement that kind of functionality).\n\nvendor/jquery.ui.widget.js\n  jQuery UI widget factory; very lightweight, flexible base for building\n  complex, statefull plugins with a consistent API. It is designed for general\n  consumption by developers who want to create object-oriented components\n  without reinventing common infrastructure.\n\nvendor/jquery.getimagedata.min.js\n  It enables pixel level access to images from different origins. It works by sending a JSONP request with the URL of the image to the server. The server then converts the image into base64 encoded data URL and sends the image back as a JSON object. (what this script does, can be done with CORS)\n\nTo-do list\n^^^^^^^^^^\n\n* Check if constraints are in place before adding the menu item.\n\n.. _`Extended browser support information`: https://github.com/blueimp/jQuery-File-Upload/wiki/Browser-support\n.. _`canvas-to-blob.min.js`: https://github.com/blueimp/JavaScript-Canvas-to-Blob\n.. _`load-image.min.js`: https://github.com/blueimp/JavaScript-Load-Image\n.. _`AMD`: https://github.com/amdjs/amdjs-api/wiki/AMD\n\nNot entirely unlike\n-------------------\n\n`collective.quickupload`_\n    Pure javascript files upload tool for Plone, with drag and drop, multi\n    selection, and progress bar.\n\n`coppe.govuploadify`_\n    Multi File Upload for Plone.\n\n.. _`collective.quickupload`: http://pypi.python.org/pypi/collective.quickupload\n.. _`coppe.govuploadify`: http://pypi.python.org/pypi/coppe.govuploadify\n\nShare and Enjoy\n---------------\n\n``coppe.govupload`` would not have been possible without the contribution of\nthe following people:\n\n- Silvestre Huens\n- Joaquín Rosales\n- Héctor Velarde\n- Gonzalo Almeida\n\nYou can find an updated list of package contributors on `GitHub`_.\n\n``coppe.govupload`` is an implementation of the `jQuery File Upload`_ plugin\nfor Plone.\n\nDevelopment sponsored by Open Multimedia.\n\n.. _`jQuery File Upload`: http://blueimp.github.com/jQuery-File-Upload/\n.. _`GitHub`: https://github.com/collective/coppe.govupload/contributors\n\nChangelog\n---------\n\n1.0.1 (2017-03-29)\n--------------------\n\n### R2 - Sprint 8\n\n- Permite qualquer tipo de extensão de arquivo para upload.\n\n\n1.0rc1 (2017-01-10)\n--------------------\n\n### R2 - Sprint 3\n\n- Fork do produto collective.upload para trabalhar com ArquivoBiblioteca\nno produto mpdg.govbr.biblioteca",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/collective/coppe.govupload",
    "keywords": "plone jquery upload",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "coppe.govupload",
    "package_url": "https://pypi.org/project/coppe.govupload/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/coppe.govupload/",
    "project_urls": {
      "Homepage": "https://github.com/collective/coppe.govupload"
    },
    "release_url": "https://pypi.org/project/coppe.govupload/1.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "File upload widget with multiple file selection, drag&drop support, progress bars, client-side image resizing and preview images.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2767219,
  "releases": {
    "1.0.1": []
  },
  "urls": [],
  "vulnerabilities": []
}