{
  "info": {
    "author": "NMA2022DL_TrashDetect_Team",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# PyTorch-MaskRCNN\n![](notebooks/maskrcnn_visualize.png)\n\nA PyTorch implementation of simple Mask R-CNN.\n\nThis repository is a toy example of Mask R-CNN with two features:\n- It is pure python code and can be run immediately using PyTorch 1.5.1 and trochvision 0.8.2,\n- Simplified construction and easy to understand how the model works based on [tutorial](https://pytorch.org/tutorials/intermediate/torchvision_tutorial.html).\n\nThe code is based largely on [TorchVision](https://github.com/pytorch/vision).\n\n## Requirements\n\n- **Windows** or **Linux**, with **Python ≥ 3.7**\n- **[PyTorch](https://pytorch.org/) ≥ 1.5.0**\n- **matplotlib** - visualizing images and results\n- **[pycocotools](https://github.com/cocodataset/cocoapi)** - for COCO dataset and evaluation; Windows version is [here](https://github.com/philferriere/cocoapi)\n\n### Neptune\nTo track logs (for example training loss) we used [neptune.ai](https://neptune.ai/). If you are interested in logging your experiments there, you should create account on the platform and create new project. Then:\n* Find and set Neptune API token on your system as environment variable (your NEPTUNE_API_TOKEN should be added to ~./bashrc)\n* Add your project_qualified_name name in the `train.py`\n    ```python\n      neptune.init(project_qualified_name = 'YOUR_PROJECT_NAME/detect-waste')\n    ```\n    Currently it is set to private detect-waste neptune space.\n* install neptun-client library\n    ```bash\n      pip install neptune-client\n    ```\nTo run experiments with neptune simply add `--neptune` flag during launch `train.py`.\n\nFor more check [LINK](https://neptune.ai/how-it-works).\n\n## Datasets\n\nThis repository supports detect-waste datasets (usualy COCO based annotations) with two class - 'litter' and 'background'.\n\nWe expect the directory structure to be the following:\n```\npath/to/repository/\n  annotations/         # annotation json files\npath/to/images/        # all images\n```\nYou can modify `datasets/data.py` script to add new dataset and another format of paths for coco annotations type.\n\nCheck `detect-waste/annotations/README.md` to verify provided annotations by [Detect Waste in Pomerania team](https://detectwaste.ml/).\n\n## Training\n\nSimply run:\n\n```\npython3 train.py --num_epochs 26 --gpu_id 2 --output_dir /path/to/save/checkpoints --images_dir /path/to/images\n```\nor modify the parameters in ```run.sh```, and run:\n\n```\nbash ./run.sh\n```\n\nNote: This is a simple model and only supports one gpu (not distribiuted training).\n\n## Evaluation\n\nSimply run on cuda:2:\n\n```python\npython train.py --gpu_id 2 --images_dir /path/to/images --resume /path/to/checkpoint.pth --test-only\n```\n\nor modify the parameters in ```notebooks/eval.ipynb``` to visualize predictions of the model.\n\n## Performance\n\nThe model utilizes part of TorchVision's weights, which is pretrained on COCO dataset.\nTest on Multi detect-waste Segmentation val, on 1 RTX 2080Ti GPU:\n\n|     model   | backbone     |  dataset | bbox AP@0.5 | bbox AP@0.5:0.95 | mask AP@0.5 | mask AP@0.5:0.95 |\n| :---------: | :---------:  | :------: | :---------: |  :-------------: | :---------: | :--------------: |\n| Mask R-CNN  | ResNet 50    |  Multi   |    27.95    |       16.49      |   23.05     |    12.94         |\n| Mask R-CNN  | ResNetXt 101`*` |  Multi   |    19.70    |       6.20       |   24.70     |    13.20         |\n\n* `*` results achived using [mmdetection framework](https://github.com/open-mmlab/mmdetection).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "trashdetect-engine",
    "package_url": "https://pypi.org/project/trashdetect-engine/",
    "platform": null,
    "project_url": "https://pypi.org/project/trashdetect-engine/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/trashdetect-engine/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "trashdetect_engine",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14476602,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "713e550d11778341254338372506dcd7d742559d9ee810dc52b5968a5090cade",
          "md5": "64760314db928f0461aabf23ec3b8b1e",
          "sha256": "669498ce5b02f2c94e0902d88fdf5c5a0a7948d0869c1b20e60adc570f492054"
        },
        "downloads": -1,
        "filename": "trashdetect_engine-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "64760314db928f0461aabf23ec3b8b1e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14396,
        "upload_time": "2022-07-19T02:04:27",
        "upload_time_iso_8601": "2022-07-19T02:04:27.662146Z",
        "url": "https://files.pythonhosted.org/packages/71/3e/550d11778341254338372506dcd7d742559d9ee810dc52b5968a5090cade/trashdetect_engine-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2cd9bffa1b356ebf051b16457236a58d46b95e9bf31b400667cae4f694ce636",
          "md5": "32a1b38603a1e7d7aeec4a7ab383f1cb",
          "sha256": "7077931c377c97913cf0850356dddf176708df38faf889ebc7a9f1650056f68d"
        },
        "downloads": -1,
        "filename": "trashdetect_engine-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32a1b38603a1e7d7aeec4a7ab383f1cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15616,
        "upload_time": "2022-07-19T02:08:47",
        "upload_time_iso_8601": "2022-07-19T02:08:47.049589Z",
        "url": "https://files.pythonhosted.org/packages/b2/cd/9bffa1b356ebf051b16457236a58d46b95e9bf31b400667cae4f694ce636/trashdetect_engine-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b2cd9bffa1b356ebf051b16457236a58d46b95e9bf31b400667cae4f694ce636",
        "md5": "32a1b38603a1e7d7aeec4a7ab383f1cb",
        "sha256": "7077931c377c97913cf0850356dddf176708df38faf889ebc7a9f1650056f68d"
      },
      "downloads": -1,
      "filename": "trashdetect_engine-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "32a1b38603a1e7d7aeec4a7ab383f1cb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15616,
      "upload_time": "2022-07-19T02:08:47",
      "upload_time_iso_8601": "2022-07-19T02:08:47.049589Z",
      "url": "https://files.pythonhosted.org/packages/b2/cd/9bffa1b356ebf051b16457236a58d46b95e9bf31b400667cae4f694ce636/trashdetect_engine-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}