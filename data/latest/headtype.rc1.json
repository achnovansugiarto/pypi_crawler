{
  "info": {
    "author": "Sekgobela Kevin",
    "author_email": "kevinnoko23@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# headtype\nHeadtype is a python library for finding types/classes associated with\nobject. Sometimes it may be worth it to know which object would work with\nclass or vice-verse. You wouldnt want to pass non url object into class\nthat expects url in string form.\n\nManaging objects and classes could be a lot work especially having to do\nrepeately. This library takes that away and let you focus on how \nclasses/types would be matched against objects.\n\n### Install\nEnter this into your command-line application.\n```bash\npip install headtype\n```\n\n### Usage\nThe first thing is to import headtype library.\n```python\nimport headtype\n```\n\nNow headtype is imported and ready to use, its time to specify types/classes\nto be matched by objects. This will create `headtype.Type` instances that contain \nclass/type along with how it will match objects.\n\nBut first we need to setup functions for matching objects before creating \nthose `headtype.Type` instances.\n```python\ndef names_func(object_):\n    return object_ in {\"marry\", \"john\", \"hope\"}\n\ndef fruits_func(object_):\n    return object_ in {\"apple\", \"orange\", \"grapes\"}\n\ndef numbers_func(object_):\n    return object_ in {100, 500, 1000, 5000, 10000}\n```\n\nSince functions for matching are now setup, let setup types to be matched\nwith objects. We will also create fake classes for use with examples to \nmake things clear.\n```python\nclass names(): pass\n\nclass fruits(): pass\n\nclass numbers(): pass\n```\n\nNow everything is ready to actually create `headtype.Type` instances from \nthose classes and functions.\n```python\n# Here headtype.Type instances get created and associated with functions.\nnames_type = headtype.create_type(names, names_func)\nfruits_type = headtype.create_type(fruits, fruits_func)\nnumbers_type = headtype.create_type(numbers, numbers_func)\n```\n\nType instances need to be grouped into collection of types either\nin form of iterable or `headtype.Types`. \n```python \n# Creates list with headtype.Type instances\ntype_objects = [names_type, fruits_type, numbers_type]\n# Creates headtype.Types instance from headtype.Type instances.\ntypes_object = headtype.create_types(type_objects)\n```\n\nLet now check if object and type really match with each other based on\nthat function set type.\n```python\n# 1000 is number and is not in names.\nheadtype.object_matches_type(1000, names_type) # False\n# 'John' is in names and get matched.\nheadtype.object_matches_type(\"john\", names_type) # True\n# 1000 is number and satisfies numbers_type\nheadtype.object_matches_type(1000, numbers_type) # True\n```\n\nWhat about finding types/classes that matches certain object?, thats also\npossible. This is when order of items may become important especially if\naim is to get single type.\n```python\n# This gets first type matched(types order matters)\n# Just as expected, nothing was matched.\nheadtype.find_matching_type(1000, type_objects) # None\n# 'orange' is fruit according to fruits_type.\nheadtype.find_matching_type(\"orange\", type_objects) \n# <class '__main__.fruits'>\n\n# This gets multiple types but results is filter object.\nmatched_types = headtype.find_matching_types(\"orange\", type_objects) \nlist(matched_types) # [<class '__main__.fruits'>]\n# Limit can be provided to limit items involved.\nmatched_types = headtype.find_matching_types(500, type_objects) \nlist(matched_types) # [<class '__main__.numbers'>]\n```\n\nThere is something very obvious about the `headtype.Type` instances in \nthat they expect certain types of objects. Both `names_type` and \n`fruits_type` expects objects of `str` and `numbers_type` expects `int` \nobject types.\n\nIt may be better to remove `headtype.Type` instances that does not \ncorrespond with object type. That is done by supplying object types\nsupported by `headtype.Type` instance.\n\nHere are new `headtype.Type` instances with objects types/classes they\nexpected their objects to be. This may improve performance especially\nif `headtype.Type` instances take long to match objects.\n```python\n# Much faster since objects types are provided.\nnames_type = headtype.create_type(names, names_func, object_types=[str])\nfruits_type = headtype.create_type(names, fruits_func, object_types=[str])\nnumbers_type = headtype.create_type(names, names_func, object_types=[int])\n```\n\n### License\n[MIT license](https://github.com/sekgobela-kevin/headtype/blob/main/LICENSE)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sekgobela-kevin/headtype",
    "keywords": "types,classes,object,find",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "headtype",
    "package_url": "https://pypi.org/project/headtype/",
    "platform": null,
    "project_url": "https://pypi.org/project/headtype/",
    "project_urls": {
      "Bug Tracker": "https://github.com/sekgobela-kevin/headtype/issues",
      "Homepage": "https://github.com/sekgobela-kevin/headtype"
    },
    "release_url": "https://pypi.org/project/headtype/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Helps in finding types/classes associated with object",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15291366,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ac22ae7b5ac815485084442a1c30b6efdf5daa7c19eae88feb6c788dc5c02b3",
          "md5": "7675faafe8e84db4607e09ffebf34455",
          "sha256": "c901ce172b7ebd59b695439b2be495820bf97081fda00b6802ae90f1d9dead91"
        },
        "downloads": -1,
        "filename": "headtype-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7675faafe8e84db4607e09ffebf34455",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6401,
        "upload_time": "2022-10-03T15:46:13",
        "upload_time_iso_8601": "2022-10-03T15:46:13.803920Z",
        "url": "https://files.pythonhosted.org/packages/8a/c2/2ae7b5ac815485084442a1c30b6efdf5daa7c19eae88feb6c788dc5c02b3/headtype-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3175265c0ecec677414f98a23aef85b512c0c0eba212853fa0f3f9f1f39391e",
          "md5": "fade030b822ba16d2d72645b60af2a1f",
          "sha256": "e9b9af9b703325543917e4f3e576b5d3f4d3ce3e6ba9eeabc7e228a3ead49764"
        },
        "downloads": -1,
        "filename": "headtype-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fade030b822ba16d2d72645b60af2a1f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5900,
        "upload_time": "2022-10-03T15:46:15",
        "upload_time_iso_8601": "2022-10-03T15:46:15.500941Z",
        "url": "https://files.pythonhosted.org/packages/d3/17/5265c0ecec677414f98a23aef85b512c0c0eba212853fa0f3f9f1f39391e/headtype-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ac22ae7b5ac815485084442a1c30b6efdf5daa7c19eae88feb6c788dc5c02b3",
        "md5": "7675faafe8e84db4607e09ffebf34455",
        "sha256": "c901ce172b7ebd59b695439b2be495820bf97081fda00b6802ae90f1d9dead91"
      },
      "downloads": -1,
      "filename": "headtype-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7675faafe8e84db4607e09ffebf34455",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6401,
      "upload_time": "2022-10-03T15:46:13",
      "upload_time_iso_8601": "2022-10-03T15:46:13.803920Z",
      "url": "https://files.pythonhosted.org/packages/8a/c2/2ae7b5ac815485084442a1c30b6efdf5daa7c19eae88feb6c788dc5c02b3/headtype-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d3175265c0ecec677414f98a23aef85b512c0c0eba212853fa0f3f9f1f39391e",
        "md5": "fade030b822ba16d2d72645b60af2a1f",
        "sha256": "e9b9af9b703325543917e4f3e576b5d3f4d3ce3e6ba9eeabc7e228a3ead49764"
      },
      "downloads": -1,
      "filename": "headtype-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fade030b822ba16d2d72645b60af2a1f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5900,
      "upload_time": "2022-10-03T15:46:15",
      "upload_time_iso_8601": "2022-10-03T15:46:15.500941Z",
      "url": "https://files.pythonhosted.org/packages/d3/17/5265c0ecec677414f98a23aef85b512c0c0eba212853fa0f3f9f1f39391e/headtype-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}