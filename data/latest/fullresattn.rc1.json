{
  "info": {
    "author": "Lianfa Li",
    "author_email": "lspatial@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 6 - Mature",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "# Library of Full Residual Deep Network with Attention Layers (fullresattn)\n\nThe python library of full residual deep network with attention layers (fullresattn). \nCurrent version just supports the KERAS package of deep learning and \nwill extend to the others in the future. \n\n## Major modules\n\n**Model**\n\n* fullresAttCoder: major class to obtain a full residual \n      deep network with optional attention layers by setting the arguments. See the class and its \n      member functions' help for details.  \n* pmetrics: functions for regression metrics like rsquared and RMSE. \n\n\n**Data**\n\n* data: function to access each of two datasets,  \n         sim': simulated dataset in the format of Pandas's Data Frame,\n         'pm2.5':string, the name for a real dataset of the 2015 PM2.5 \n            and the relevant covariates for the Beijing-Tianjin-Tangshan\n            area. It is sampled by the fraction of 0.8 from the\n           the original dataset (stratified by the julian day).\n         See this function's help for details.  \n* simdata: function to simulate the test dataset,  \n         The simulated dataset generated according to the formula:\n             y=x1+x2*np.sqrt(x3)+x4+np.power((x5/500),0.3)-x6+\n                np.sqrt(x7)+x8+noise\n         See this function's help for details.\n\n## Installation\n\nYou can directly install it using the following command for the latest version:\n\n```\n  pip install fullresattn\n```\n\n## Note for installation and use \n\n**Runtime requirements**\n\nfullresattn requires installation of Keras with support of Tensorflow or other \nbackend system of deep learning (to support Keras). Also Pandas and Numpy should \nbe installed. \n\n\n## Use case \nThe package provides two specific examples for use of full residual deep network with optional attention layers.\nSee the following example. \n\n## License\n\nThe fullresattn is provided under a MIT license that can be found in the LICENSE\nfile. By using, distributing, or contributing to this project, you agree to the\nterms and conditions of this license.\n\n## Test call\n\n**Load the packages**\n```python\nimport fullresattn  \nfrom fullresattn.model import r2KAuto,r2K\nfrom keras.callbacks import ModelCheckpoint\n```\n**Load the simulated sample dataset**\n```python\nsimdata=fullresattn.data('sim')\n```\n\n**Preprocess the data** \n```python\ntcol=['x'+str(i) for i in range(1,9)]\nX=simdata[tcol].values\ny=simdata['y'].values\ny=y.reshape((y.shape[0],1))\nscX = preprocessing.StandardScaler().fit(X)\nscy = preprocessing.StandardScaler().fit(y)\nXn=scX.transform(X)\nyn=scy.transform(y)\n```\n\n**Sampling**\n```python\nx_train, x_test, y_train,y_test = train_test_split(Xn,yn,test_size=0.2)\nx_train, x_valid, y_train,y_valid = train_test_split(x_train,y_train,test_size=0.2)\n```\n\n**Model --Set the check point to check the validation**\n```python\nwtPath='/tmp/res_sim_wei.hdf5'\ncheckpointw=ModelCheckpoint(wtPath, monitor=\"loss\",verbose=0, \nsave_best_only=True, mode=\"min\")\n```\n\n**Call the model class**\n```python\nmodelCls = fullresattn.model.fullresAttCoder(x_train.shape[1], [32,16,8,4],'relu'   \n               1,inresidual=True,reg=keras.regularizers.l1_l2(0),batchnorm=True,\n                 outnres=None,defact='linear',outputtype=0,nAttlayers=4)\n```\n\n**Get the residual autoencoder network**\n```python\nresmodel = modelCls.resAutoNet()\n```\n\n**Show the network model's topology**\n```python\nresmodel.summary()\nresmodel.compile(optimizer=\"adam\", loss= 'mean_squared_error',metrics=['mean_squared_error',r2KAuto])\n```\n\n**Starting to train the model... ...**\n```python\nfhist_res=resmodel.fit(x_train, y_train, batch_size=128, epochs=200, verbose=1, \n    shuffle=True,validation_data=(x_valid, y_valid),callbacks=[checkpointw])\n```\n**Test performance**\n\nTests on the simulated dataset show that the full residual model with 4 attention \n  layers increased validation R2 by about 4% for the model with no attention layers. \n\n\n## Collaboration\n\nWelcome to contact Dr. Lianfa Li (Email: lspatial@gmail.com). \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fullresattn",
    "package_url": "https://pypi.org/project/fullresattn/",
    "platform": "",
    "project_url": "https://pypi.org/project/fullresattn/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/fullresattn/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Library for full residual deep network with attention layers",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9920887,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1837b042c2bacd051156d74f605c15bcc5a0b85b590cb97147fc67131e4bf260",
          "md5": "5ad5751051f811c9372a4aab4f703622",
          "sha256": "25ed164c07318573398994f0013a01498dac49d9d54ad5b7d45a261e166ef474"
        },
        "downloads": -1,
        "filename": "fullresattn-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ad5751051f811c9372a4aab4f703622",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4991684,
        "upload_time": "2021-03-30T06:55:43",
        "upload_time_iso_8601": "2021-03-30T06:55:43.687979Z",
        "url": "https://files.pythonhosted.org/packages/18/37/b042c2bacd051156d74f605c15bcc5a0b85b590cb97147fc67131e4bf260/fullresattn-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34be7518806ea8d5afb9d8d77de6b0aa4bb9cc7844fe21c2738f36209ce26f0d",
          "md5": "9bd1dfd3afddefd343ac4f546bbf11ca",
          "sha256": "4d04285147f8ee9fcb9011bf9a85d1b652b6681ea17c407ce7170c6c6cf56593"
        },
        "downloads": -1,
        "filename": "fullresattn-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9bd1dfd3afddefd343ac4f546bbf11ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2496180,
        "upload_time": "2021-03-30T06:55:46",
        "upload_time_iso_8601": "2021-03-30T06:55:46.900072Z",
        "url": "https://files.pythonhosted.org/packages/34/be/7518806ea8d5afb9d8d77de6b0aa4bb9cc7844fe21c2738f36209ce26f0d/fullresattn-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1837b042c2bacd051156d74f605c15bcc5a0b85b590cb97147fc67131e4bf260",
        "md5": "5ad5751051f811c9372a4aab4f703622",
        "sha256": "25ed164c07318573398994f0013a01498dac49d9d54ad5b7d45a261e166ef474"
      },
      "downloads": -1,
      "filename": "fullresattn-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5ad5751051f811c9372a4aab4f703622",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4991684,
      "upload_time": "2021-03-30T06:55:43",
      "upload_time_iso_8601": "2021-03-30T06:55:43.687979Z",
      "url": "https://files.pythonhosted.org/packages/18/37/b042c2bacd051156d74f605c15bcc5a0b85b590cb97147fc67131e4bf260/fullresattn-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34be7518806ea8d5afb9d8d77de6b0aa4bb9cc7844fe21c2738f36209ce26f0d",
        "md5": "9bd1dfd3afddefd343ac4f546bbf11ca",
        "sha256": "4d04285147f8ee9fcb9011bf9a85d1b652b6681ea17c407ce7170c6c6cf56593"
      },
      "downloads": -1,
      "filename": "fullresattn-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9bd1dfd3afddefd343ac4f546bbf11ca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2496180,
      "upload_time": "2021-03-30T06:55:46",
      "upload_time_iso_8601": "2021-03-30T06:55:46.900072Z",
      "url": "https://files.pythonhosted.org/packages/34/be/7518806ea8d5afb9d8d77de6b0aa4bb9cc7844fe21c2738f36209ce26f0d/fullresattn-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}