{
  "info": {
    "author": "Alan Hicks",
    "author_email": "ahicks@p-o.co.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Office/Business",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=============\nDocumentation\n=============\n\n**django-dmarc2 0.5.2 for Django 2 and Python 3**\n\n**Managing DMARC aggregate and feedback reports**\n\nDesigned to quickly and easily manage DMARC aggregate and feedback reports.\n\nDescription\n===========\n\nThis Django DMARC project aims to ease implementating DMARC\n\"Domain-based Message Authentication, Reporting & Conformance\" and\nongoing monitoring by importing aggregate and feedback reports about messages\nthat pass and/or fail DMARC evaluation into a more easily digested format.\n\nPerhaps one of the main reasons DMARC is gaining traction amongst\norganisations of all sizes is a desire to protect their people, brand and\nreputation.\nBy defining and implementing a DMARC policy, an organization can help combat\nphishing, protect users and their reputation.\n\nAt beta stage, the application is stable, with most efforts on improving\nusability and documentation.\n\nChoosing Django was an easy choice as it offers an easily built import\nmechanism and transformation from xml to database through to presentation.\n\nAlthough it has options for importing either xml or email files, zero\nmaintenance is achieved by fully automating import of feedback and reports.\n\nQuick start\n===========\n\n1. Install the app\n\n2. Add \"dmarc\" to your INSTALLED_APPS setting::\n\n    INSTALLED_APPS = (\n        ...\n        'dmarc',\n    )\n\n3. Add dmarc.urls to your urls::\n\n    from dmarc import urls as dmarc_urls\n\n    urlpatterns = [\n        ...\n        url(r\"^dmarc/\", include(dmarc_urls)),\n    ]\n\n4. Run 'python manage.py migrate' to create the database models.\n\n5. Import a report with::\n\n    python manage.py importdmarcreport --email\n\n6. See your aggregated feedback reports from the Admin page at admin/dmarc\n\nUsage\n=====\npython manage.py importdmarcreport --email\n\nYou can choose to import an xml or email file, alternatively with \"--email -\"\nyou can pipe an email and it will do the right thing.\n\nInstallation\n============\n\nInstall the app\n\nConfiguration\n-------------\n\nAdd \"dmarc\" to your INSTALLED_APPS setting::\n\n    INSTALLED_APPS = (\n        ...\n        'dmarc',\n    )\n\nAdd dmarc.urls to your urls::\n\n    from dmarc import urls as dmarc_urls\n\n    urlpatterns = [\n        ...\n        url(r\"^dmarc/\", include(dmarc_urls)),\n    ]\n\nDMARC reports are namespaced so if you're using django version 1.8 you will\nneed to add the namespace 'dmarc'::\n\n    urlpatterns = [\n        ...\n        url(r\"^dmarc/\", include(dmarc_urls, namespace='dmarc')),\n    ]\n\nInstall tables\n--------------\n\nRun 'python manage.py migrate' to create the database tables.\n\nImport feedback report\n----------------------\n\nImport an email DMARC aggregate report with::\n\n    python manage.py importdmarcreport --email\n\nAlternatively the xml report can be imported with::\n\n    python manage.py importdmarcreport --xml\n\nThe process of importing DMARC aggregate reports can be fully automated. At\nPersistent Objects we use Exim and the configuration couldn't be easier.\n\nRouter::\n\n    dmarcreports:\n        driver = accept\n        condition = ${if eq{$local_part}{dmarc_report}}\n        transport = trans_dmarcreports\n\nTransport::\n\n    trans_dmarcreports:\n        driver = pipe\n        command = \"/usr/local/bin/python2.7 /path/to/manage.py importdmarcreport --email -\"\n        freeze_exec_fail = true\n        return_fail_output = true\n\nCongratulations, you have django-dmarc installed and ready to import DMARC\naggregate feedback reports and start implementing DMARC and protecting your\nemails.\n\nDMARC reporting\n===============\n\nAggregated feedback reports are available from the Admin page at admin/dmarc.\n\n.. image:: ./docs/images/dmarc-index.png\n   :alt: Django Administration showing this DMARC application\n\nFrom the DMARC dashboard at 'Site administration/DMARC' where the intention is\nto highlight a summary of recent reports, there is one report 'DMARC feedback\nreports' and is available to any user with staff members authorization.\n\n.. image:: ./docs/images/dmarc-dashboard.png\n   :alt: DMARC dashboard\n\nThis is an example report, it can also be downloaded as a csv file suitable\nfor importing into your favourite spreadsheet.\n\n.. image:: ./docs/images/dmarc-report.png\n   :alt: Example DMARC aggregate feedback report\n\nThe report can be filtered by clicking on the filter and changing any of the\nreporting period, only showing errors/failures, disposition (quarantine,\nrejection or any) and by source ip address/reporting organisation.\n\n.. image:: ./docs/images/dmarc-reportfilter.png\n   :alt: Example DMARC aggregate feedback report\n\nThese reports can help ease any DMARC implementation.\n\nMaintenance\n===========\n\nAlthough there is usually no need to remove old records, access to the report\ntable is offered to allow for record deletion.\n\nDependencies\n============\n\n* `Django`_ 1.8+\n\nResources\n=========\n\n* `DMARC`_\n* `Django`_\n* `Google gmail DMARC`_\n* `Download from PyPI`_\n\nSupport\n=======\n\nTo report a security issue, please send an email privately to\n`ahicks@p-o.co.uk`_. This gives us a chance to fix the issue and\ncreate an official release prior to the issue being made\npublic.\n\nFor general questions or comments, please contact  `ahicks@p-o.co.uk`_.\n\n`Project website`_\n\nCommunications are expected to conform to the `Django Code of Conduct`_.\n\n.. GENERAL LINKS\n\n.. _`Django`: http://djangoproject.com/\n.. _`Django Code of Conduct`: https://www.djangoproject.com/conduct/\n.. _`Python`: http://python.org/\n.. _`Persistent Objects Ltd`: http://p-o.co.uk/\n.. _`Project website`: http://p-o.co.uk/tech-articles/django-dmarc/\n.. _`DMARC`: http://dmarc.org/\n.. _`Google gmail DMARC`: https://support.google.com/a/answer/2466580\n.. _`Download from PyPI`: https://pypi.python.org/pypi/django-dmarc\n\n.. PEOPLE WITH QUOTES\n\n.. _`Alan Hicks`: https://twitter.com/AlanHicksLondon\n.. _`ahicks@p-o.co.uk`: mailto:ahicks@p-o.co.uk?subject=django-dmarc+Security+Issue\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/django-dmarc2",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/webtweakers/django-dmarc",
    "keywords": "dmarc email spf dkim",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-dmarc2",
    "package_url": "https://pypi.org/project/django-dmarc2/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-dmarc2/",
    "project_urls": {
      "Download": "https://pypi.python.org/pypi/django-dmarc2",
      "Homepage": "https://github.com/webtweakers/django-dmarc"
    },
    "release_url": "https://pypi.org/project/django-dmarc2/0.5.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Managing DMARC aggregate and feedback reports",
    "version": "0.5.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6210471,
  "releases": {
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75520a63f67721b8622132b1c63534809b568d7eedc970f7f096f1f250bf183b",
          "md5": "198b3128c0b4c6c39bf255c510ac1380",
          "sha256": "7ef94dfca8163d2ee9c964363ae3646cba8398f12d37cfc4d8df75970cb49159"
        },
        "downloads": -1,
        "filename": "django_dmarc2-0.5.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "198b3128c0b4c6c39bf255c510ac1380",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 39869,
        "upload_time": "2019-11-27T19:53:05",
        "upload_time_iso_8601": "2019-11-27T19:53:05.340236Z",
        "url": "https://files.pythonhosted.org/packages/75/52/0a63f67721b8622132b1c63534809b568d7eedc970f7f096f1f250bf183b/django_dmarc2-0.5.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77317d5f918965f96452d4f3a739cd1562827d30023e8d98450f21503a8779ab",
          "md5": "6cb5ac3d8f80e111cb25cb1e32aa6e67",
          "sha256": "f65b0da4f5ef1f3b8dc17554f4ab50ea3ed766e052d197ad1795a65e8f0aa944"
        },
        "downloads": -1,
        "filename": "django-dmarc2-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6cb5ac3d8f80e111cb25cb1e32aa6e67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 181587,
        "upload_time": "2019-11-27T19:53:09",
        "upload_time_iso_8601": "2019-11-27T19:53:09.666652Z",
        "url": "https://files.pythonhosted.org/packages/77/31/7d5f918965f96452d4f3a739cd1562827d30023e8d98450f21503a8779ab/django-dmarc2-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75520a63f67721b8622132b1c63534809b568d7eedc970f7f096f1f250bf183b",
        "md5": "198b3128c0b4c6c39bf255c510ac1380",
        "sha256": "7ef94dfca8163d2ee9c964363ae3646cba8398f12d37cfc4d8df75970cb49159"
      },
      "downloads": -1,
      "filename": "django_dmarc2-0.5.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "198b3128c0b4c6c39bf255c510ac1380",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 39869,
      "upload_time": "2019-11-27T19:53:05",
      "upload_time_iso_8601": "2019-11-27T19:53:05.340236Z",
      "url": "https://files.pythonhosted.org/packages/75/52/0a63f67721b8622132b1c63534809b568d7eedc970f7f096f1f250bf183b/django_dmarc2-0.5.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77317d5f918965f96452d4f3a739cd1562827d30023e8d98450f21503a8779ab",
        "md5": "6cb5ac3d8f80e111cb25cb1e32aa6e67",
        "sha256": "f65b0da4f5ef1f3b8dc17554f4ab50ea3ed766e052d197ad1795a65e8f0aa944"
      },
      "downloads": -1,
      "filename": "django-dmarc2-0.5.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6cb5ac3d8f80e111cb25cb1e32aa6e67",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 181587,
      "upload_time": "2019-11-27T19:53:09",
      "upload_time_iso_8601": "2019-11-27T19:53:09.666652Z",
      "url": "https://files.pythonhosted.org/packages/77/31/7d5f918965f96452d4f3a739cd1562827d30023e8d98450f21503a8779ab/django-dmarc2-0.5.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}