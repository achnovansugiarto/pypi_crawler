{
  "info": {
    "author": "Werner Robitza",
    "author_email": "werner.robitza@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia :: Video"
    ],
    "description": "# h26x-extractor\n\n[![PyPI version](https://img.shields.io/pypi/v/h26x-extractor.svg)](https://pypi.org/project/h26x-extractor)\n\nAuthor: Werner Robitza, with contributions from @chemag, Paulo Sherring.\n\nExtracts NAL units from H.264 bitstreams and decodes their type and content, if supported.\n\n⚠️ `h26x-extractor` is neither fast nor robust to bitstream errors. It's rather a playground for parsing bitstreams. Use with caution! This program is no longer maintained, PRs are welcome.\n\nContents:\n\n- [Installation](#installation)\n- [Status](#status)\n- [Usage](#usage)\n- [Programmatic usage](#programmatic-usage)\n- [Alternatives](#alternatives)\n\n## Installation\n\nRequirements: Python 3.8 or higher\n\nVia pip:\n\n    pip3 install h26x-extractor\n\n## Status\n\nCurrently supported:\n\n- Parsing of H.264 bitstreams\n- Parsing of NALU\n- Parsing of AUD\n- Parsing of CodedSliceIDR\n- Parsing of CodedSliceNonIDR\n- Parsing of SPS\n- Parsing of PPS\n\nCurrently planned:\n\n- Parsing of SEI\n- Parsing of VUI\n- Parsing of H.265 bitstreams\n\n## Usage\n\nIf you installed the program via pip, you can run it directly:\n\n    h26x-extractor [options] <input-file>...\n\nOtherwise you can clone this repo and run it via:\n\n    python3 -m h264_extractor [options] <input-file>...\n\nYou can pass the `-v` flag to enable verbose output, e.g. the following. You will get, for each NAL unit:\n\n- The byte position range\n- The offset from the start of the stream\n- The overall length including start code\n- The type (also translated in plaintext)\n- Its content in raw bytes, encoded as hex\n- Its RBSP content\n- A table with its content decoded, if supported\n\nExample:\n\n    NALU bytepos:   [0, 28]\n    NALU offset:    0 Bytes\n    NALU length:    29 Bytes (including start code)\n    NALU type:      7 (Sequence parameter set)\n    NALU bytes:     0x0000000167f4000d919b28283f6022000003000200000300641e28532c\n    NALU RBSP:      0xf4000d919b28283f602200000002000000641e28532c\n\n    SPS (payload size: 22.0 Bytes)\n    +--------------------------------------+---------+\n    | field                                | value   |\n    +======================================+=========+\n    | constraint_set0_flag                 | 0       |\n    +--------------------------------------+---------+\n    | constraint_set1_flag                 | 0       |\n    +--------------------------------------+---------+\n    ....\n\n## Programmatic usage\n\nYou can also use this library in your code, e.g.:\n\n```python\nfrom h26x_extractor.h26x_parser import H26xParser\n\ndef do_something(bytes):\n    pass\n    # do something with the NALU bytes\n\nH26xParser.set_callback(\"nalu\", do_something)\nH26xParser.parse()\n```\n\nThe callback is called for each type of info found. Valid callbacks are:\n\n- `sps`\n- `pps`\n- `slice`\n- `aud`\n- `nalu`\n\nThe raw data for all callbacks includes the RBSP.\n\nYou can also call the `nalutypes` classes to decode the individual fields, e.g. `nalutypes.SPS`:\n\n```python\nfrom h26x_extractor.h26x_parser import H26xParser\nfrom h26x_extractor.nalutypes import SPS\n\ndef parse_sps(bytes):\n    sps = SPS(bytes)\n    sps.print_verbose()\n\nH26xParser.set_callback(\"sps\", parse_sps)\nH26xParser.parse()\n```\n\n## Alternatives\n\n[h264bitstream](https://github.com/aizvorski/h264bitstream) is a proper H.264 parser.\n\nFFmpeg can also parse bitstream data:\n\n```\nffmpeg -i video.h264 -c copy -bsf:v trace_headers -f null - 2> output.txt\n```\n\n# License\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Werner Robitza\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n# Changelog\n\n\n## v0.8.1 (2023-01-08)\n\n* Bump version to 0.8.1.\n\n* Organize imports.\n\n* Update module structure, readme.\n\n\n## v0.8.0 (2021-11-12)\n\n* Bump version to 0.8.0.\n\n* Remove unneeded imports.\n\n* Rename test dir.\n\n* Apply formatting with black.\n\n* Parse as bytearray instead of BitStream.\n\n* Update copyright year.\n\n* Add requirements.txt.\n\n* Update badge link.\n\n* Update README.\n\n\n## v0.7.0 (2021-03-10)\n\n* Bump version to 0.7.0.\n\n* Add python_requires to setup.py.\n\n* Remove release script.\n\n\n## v0.6 (2021-03-06)\n\n* Bump version to 0.6.\n\n* Switch version to string.\n\n* Format setup.py and switch to markdown.\n\n* Update badge URL.\n\n\n## v0.5 (2020-12-30)\n\n* Bump version to 0.5.\n\n* Apply formatting.\n\n* Rm python 2.x support, README fixes.\n\n* Fix frame_crop_left_offset typo (#5)\n\n* Formatting.\n\n* Import local package for tests.\n\n* Add pypi badge.\n\n* Add missing gitchangelog template.\n\n\n## v0.4 (2020-04-12)\n\n* Bump version to 0.4.\n\n* Update release script.\n\n* Update readme.\n\n* H26x_extractor: add deeper slice_header parsing (#4)\n\n  Includes:\n  * passing the SPS and PPS NALUs to CodedSliceIDR and CodedSliceNonIDR\n    (which need them to go further)\n  * adding an optional concept of order in the verbose printing, so that\n    NALU parameters are printed in the order they are parsed\n  * implementing ordering in SPS, PPS, and CodedSliceIDR NALUs\n  * fix on the SPS parser based on profile_idc values, per 2016-02\n    standard (Section 7.3.2.1.1, page 44). Note in particular that the if\n    loop does not include value 144\n  * fix minor type (s/slice_gropu_change_rate_minus1/slice_group_change_rate_minus1/)\n\n  Tested:\n  ```\n  $ h26x-extractor -v file.264\n  ...\n  SPS (payload size: 21.0 Bytes)\n  +--------------------------------------+---------+\n  | field                                | value   |\n  +======================================+=========+\n  | profile_idc                          | 66      |\n  +--------------------------------------+---------+\n  | constraint_set0_flag                 | 1       |\n  +--------------------------------------+---------+\n  | constraint_set1_flag                 | 1       |\n  +--------------------------------------+---------+\n  | constraint_set2_flag                 | 0       |\n  +--------------------------------------+---------+\n  | constraint_set3_flag                 | 0       |\n  +--------------------------------------+---------+\n  ...\n  NALU type:  5 (Coded slice of an IDR picture)\n  NALU bytes: 0x000000016588841afffffc2f14000416fd78e06380de6a1306bb224a722233e54ffa7cb9526c188ed1189699e7c6fd1a2307f757de5c3fca2f3d22b7fc667ccb6ff6b6a8dabb515b59fe53f8a7d83a8beb6ff17988adbfde818bdf2dafc5e7a2b5fde4a0bca4156137f8ceadff19bd5bfe233e152fbefbefbe2fab6dfe...\n  NALU RBSP:  0x88841afffffc2f14000416fd78e06380de6a1306bb224a722233e54ffa7cb9526c188ed1189699e7c6fd1a2307f757de5c3fca2f3d22b7fc667ccb6ff6b6a8dabb515b59fe53f8a7d83a8beb6ff17988adbfde818bdf2dafc5e7a2b5fde4a0bca4156137f8ceadff19bd5bfe233e152fbefbefbe2fab6dfed6d62d6ad7...\n\n  CodedSliceIDR (payload size: 4538.0 Bytes)\n  +----------------------+---------+\n  | field                | value   |\n  +======================+=========+\n  | first_mb_in_slice    | 0       |\n  +----------------------+---------+\n  | slice_type           | 7       |\n  +----------------------+---------+\n  | slice_type_clear     | I       |\n  +----------------------+---------+\n  | pic_parameter_set_id | 0       |\n  +----------------------+---------+\n  | frame_num            | 0       |\n  +----------------------+---------+\n  | idr_pic_id           | 0       |\n  ...\n  ```\n\n* Fix offset-by-one (#3)\n\n  * h26x-extractor: add a simple parsing test\n\n  Needed to refactor the parser constructor in order to allow testing\n  binary blobs.\n\n  Tested:\n\n  Before the AUD fix patch:\n\n  ```\n  $ ./tests/simple_parsing.py\n\n  ========================================================================================================\n\n  NALU bytepos: [0, 5]\n  NALU offset:  0 Bytes\n  NALU length:  6 Bytes (including start code)\n  NALU type:  9 (Access unit delimiter)\n  NALU bytes: 0x000000010910\n  NALU RBSP:\n\n  E\n  ======================================================================\n  ERROR: testAUDParser (__main__.ParsingTest)\n  Simple AUD parsing.\n  ----------------------------------------------------------------------\n  Traceback (most recent call last):\n    File \"./tests/simple_parsing.py\", line 17, in testAUDParser\n      ex.parse()\n    File \"/usr/local/lib/python3.7/site-packages/h26x_extractor-0.3-py3.7.egg/h26x_extractor/h26x_parser.py\", line 209, in parse\n      aud = nalutypes.AUD(rbsp_payload, self.verbose)\n    File \"/usr/local/lib/python3.7/site-packages/h26x_extractor-0.3-py3.7.egg/h26x_extractor/nalutypes.py\", line 120, in __init__\n      self.primary_pic_type = self.s.read('uint:3')\n    File \"/usr/lib/python3.7/site-packages/bitstring.py\", line 3902, in read\n      value, self._pos = self._readtoken(name, self._pos, length)\n    File \"/usr/lib/python3.7/site-packages/bitstring.py\", line 2016, in _readtoken\n      \"Tried to read {0} bits when only {1} available.\".format(int(length), self.length - pos))\n  bitstring.ReadError: Reading off the end of the data. Tried to read 3 bits when only 0 available.\n\n  ----------------------------------------------------------------------\n  Ran 1 test in 0.003s\n\n  FAILED (errors=1)\n  ```\n\n  After the AUD fix patch:\n\n  ```\n  $ ./tests/simple_parsing.py\n\n  ========================================================================================================\n\n  NALU bytepos: [0, 5]\n  NALU offset:  0 Bytes\n  NALU length:  6 Bytes (including start code)\n  NALU type:  9 (Access unit delimiter)\n  NALU bytes: 0x000000010910\n  NALU RBSP:  0x10\n\n  AUD (payload size: 1.0 Bytes)\n  +------------------+---------+\n  | field            |   value |\n  +==================+=========+\n  | primary_pic_type |       0 |\n  +------------------+---------+\n  .\n  ----------------------------------------------------------------------\n  Ran 1 test in 0.001s\n\n  OK\n  ```\n\n  * h26x_extractor: fix offset-by-1 in NALU parser\n\n  Tested:\n\n  Before the AUD fix patch:\n\n  ```\n  $ ./tests/simple_parsing.py\n\n  ========================================================================================================\n\n  NALU bytepos: [0, 5]\n  NALU offset:  0 Bytes\n  NALU length:  6 Bytes (including start code)\n  NALU type:  9 (Access unit delimiter)\n  NALU bytes: 0x000000010910\n  NALU RBSP:\n\n  E\n  ======================================================================\n  ERROR: testAUDParser (__main__.ParsingTest)\n  Simple AUD parsing.\n  ----------------------------------------------------------------------\n  Traceback (most recent call last):\n    File \"./tests/simple_parsing.py\", line 17, in testAUDParser\n      ex.parse()\n    File \"/usr/local/lib/python3.7/site-packages/h26x_extractor-0.3-py3.7.egg/h26x_extractor/h26x_parser.py\", line 209, in parse\n      aud = nalutypes.AUD(rbsp_payload, self.verbose)\n    File \"/usr/local/lib/python3.7/site-packages/h26x_extractor-0.3-py3.7.egg/h26x_extractor/nalutypes.py\", line 120, in __init__\n      self.primary_pic_type = self.s.read('uint:3')\n    File \"/usr/lib/python3.7/site-packages/bitstring.py\", line 3902, in read\n      value, self._pos = self._readtoken(name, self._pos, length)\n    File \"/usr/lib/python3.7/site-packages/bitstring.py\", line 2016, in _readtoken\n      \"Tried to read {0} bits when only {1} available.\".format(int(length), self.length - pos))\n  bitstring.ReadError: Reading off the end of the data. Tried to read 3 bits when only 0 available.\n\n  ----------------------------------------------------------------------\n  Ran 1 test in 0.003s\n\n  FAILED (errors=1)\n  ```\n\n  After the AUD fix patch:\n\n  ```\n  $ ./tests/simple_parsing.py\n\n  ========================================================================================================\n\n  NALU bytepos: [0, 5]\n  NALU offset:  0 Bytes\n  NALU length:  6 Bytes (including start code)\n  NALU type:  9 (Access unit delimiter)\n  NALU bytes: 0x000000010910\n  NALU RBSP:  0x10\n\n  AUD (payload size: 1.0 Bytes)\n  +------------------+---------+\n  | field            |   value |\n  +==================+=========+\n  | primary_pic_type |       0 |\n  +------------------+---------+\n  .\n  ----------------------------------------------------------------------\n  Ran 1 test in 0.001s\n\n  OK\n  ```\n\n\n## v0.3 (2020-03-15)\n\n* Bump version to 0.3.\n\n* Add release script.\n\n* Python 3.7 and 3.8.\n\n* Rename changelog.\n\n\n## v0.2 (2017-08-02)\n\n* Many updates.\n\n\n## v0.1 (2017-07-17)\n\n* Initial commit.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/slhck/h26x-extractor",
    "keywords": "video,h264",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "h26x-extractor",
    "package_url": "https://pypi.org/project/h26x-extractor/",
    "platform": null,
    "project_url": "https://pypi.org/project/h26x-extractor/",
    "project_urls": {
      "Homepage": "https://github.com/slhck/h26x-extractor"
    },
    "release_url": "https://pypi.org/project/h26x-extractor/0.8.1/",
    "requires_dist": [
      "docopt",
      "tabulate",
      "bitstring"
    ],
    "requires_python": ">=3.8",
    "summary": "Extract NAL units from H.264 bitstreams",
    "version": "0.8.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16349997,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd5f082050ce66e409ff085bb065ec37962b5f224ad703ccf7a069a79235a20e",
          "md5": "7f76e3408c1e9cd1f9071a5e6c5322bf",
          "sha256": "bf72d62746a3f7504a45f3f46c0c872b7bedb8e95b6c94674991b17d99007142"
        },
        "downloads": -1,
        "filename": "h26x_extractor-0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f76e3408c1e9cd1f9071a5e6c5322bf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11056,
        "upload_time": "2020-03-15T15:59:34",
        "upload_time_iso_8601": "2020-03-15T15:59:34.742935Z",
        "url": "https://files.pythonhosted.org/packages/fd/5f/082050ce66e409ff085bb065ec37962b5f224ad703ccf7a069a79235a20e/h26x_extractor-0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8f56e6f5dd286efd9015051ddb6b611e150da9afae7b8c795ce7115fc337f5e",
          "md5": "9dc359c14a0d09257906e9779cde9b96",
          "sha256": "54f61f1bff359e6dab83858b7a7f86d1c4eb4c5116db8493b1c7f77a8dea207d"
        },
        "downloads": -1,
        "filename": "h26x-extractor-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9dc359c14a0d09257906e9779cde9b96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10911,
        "upload_time": "2020-03-15T15:59:36",
        "upload_time_iso_8601": "2020-03-15T15:59:36.874156Z",
        "url": "https://files.pythonhosted.org/packages/f8/f5/6e6f5dd286efd9015051ddb6b611e150da9afae7b8c795ce7115fc337f5e/h26x-extractor-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e52d1c1a5306c7b0ada4816e9ea4de921fe22481212437f15cc87434e085bde",
          "md5": "56f3e17fcabf2269aef2680182286202",
          "sha256": "8f30ea447d4f4a4c515256575ce8e835891cbc024c65e27fda75aac233afc35a"
        },
        "downloads": -1,
        "filename": "h26x_extractor-0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "56f3e17fcabf2269aef2680182286202",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13024,
        "upload_time": "2020-04-12T18:03:21",
        "upload_time_iso_8601": "2020-04-12T18:03:21.686961Z",
        "url": "https://files.pythonhosted.org/packages/5e/52/d1c1a5306c7b0ada4816e9ea4de921fe22481212437f15cc87434e085bde/h26x_extractor-0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0924763061718b86e1de1cc85216f5fce852af959aa0e4595d05ac27b9f8d5a5",
          "md5": "161fa446eb8c719c95f2e7452eea90e2",
          "sha256": "d79b2466f5c734ed6ccc7b34d803e5c80c44c305516687cd1f8634d389d043f9"
        },
        "downloads": -1,
        "filename": "h26x-extractor-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "161fa446eb8c719c95f2e7452eea90e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14555,
        "upload_time": "2020-04-12T18:03:27",
        "upload_time_iso_8601": "2020-04-12T18:03:27.019383Z",
        "url": "https://files.pythonhosted.org/packages/09/24/763061718b86e1de1cc85216f5fce852af959aa0e4595d05ac27b9f8d5a5/h26x-extractor-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d87692d9f62c003a572bd04ba1a290eebd00846b05752082f92c65b0f8be774f",
          "md5": "2ee9c1bbf6077cd5fb44c94559d00b22",
          "sha256": "bc3e60b99397b7163c3ceb0760185833be1864312afc280f972ed4cd1127df58"
        },
        "downloads": -1,
        "filename": "h26x_extractor-0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ee9c1bbf6077cd5fb44c94559d00b22",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13287,
        "upload_time": "2020-12-30T10:16:03",
        "upload_time_iso_8601": "2020-12-30T10:16:03.130179Z",
        "url": "https://files.pythonhosted.org/packages/d8/76/92d9f62c003a572bd04ba1a290eebd00846b05752082f92c65b0f8be774f/h26x_extractor-0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2607c74d103765e923ec89be85d412e2046ce5a83c07a88bbc623a0495cd572b",
          "md5": "947a783658cdaa9458984f8f28c01f0f",
          "sha256": "506a1c8dd0aaf2d4c07324880c29d7a5af60f9af7cbcd92cf470ffb7b391395f"
        },
        "downloads": -1,
        "filename": "h26x-extractor-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "947a783658cdaa9458984f8f28c01f0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15228,
        "upload_time": "2020-12-30T10:16:05",
        "upload_time_iso_8601": "2020-12-30T10:16:05.052612Z",
        "url": "https://files.pythonhosted.org/packages/26/07/c74d103765e923ec89be85d412e2046ce5a83c07a88bbc623a0495cd572b/h26x-extractor-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6733020f0ed4361b6c2079529aaf0a0697f0547aa3129193726a28511659e1b1",
          "md5": "175eceb87ef10735655415612d466bb7",
          "sha256": "32e56673c3b18296b96aeb7590e2cdbb9800a12f83773aee67382e3149bbb9f0"
        },
        "downloads": -1,
        "filename": "h26x_extractor-0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "175eceb87ef10735655415612d466bb7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13282,
        "upload_time": "2021-03-06T12:41:21",
        "upload_time_iso_8601": "2021-03-06T12:41:21.927307Z",
        "url": "https://files.pythonhosted.org/packages/67/33/020f0ed4361b6c2079529aaf0a0697f0547aa3129193726a28511659e1b1/h26x_extractor-0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "324712e5da457eb652ca5c3c55cf23945af1963e7733f8d8b96537be21c2fa8f",
          "md5": "85bdcc764c9c611837bcf361d26c6029",
          "sha256": "ad69090e115364d68ff2a6c9757dcb8a5418cb03a5a9302aa276a9e6dbe6c6f2"
        },
        "downloads": -1,
        "filename": "h26x-extractor-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "85bdcc764c9c611837bcf361d26c6029",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15076,
        "upload_time": "2021-03-06T12:41:23",
        "upload_time_iso_8601": "2021-03-06T12:41:23.171474Z",
        "url": "https://files.pythonhosted.org/packages/32/47/12e5da457eb652ca5c3c55cf23945af1963e7733f8d8b96537be21c2fa8f/h26x-extractor-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2a1a06ef2dc9c8a2f5233f4381f89e2e484f8579340d0f0ee8c107c1b9f9777",
          "md5": "d5f994da3c0bfc45fe1f2c70ad13726a",
          "sha256": "d5f0022ab8dde475ac42e007833c5b304e5b0db5ab3d8b3eb19a1822719828b7"
        },
        "downloads": -1,
        "filename": "h26x_extractor-0.7.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5f994da3c0bfc45fe1f2c70ad13726a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 13351,
        "upload_time": "2021-03-10T20:01:05",
        "upload_time_iso_8601": "2021-03-10T20:01:05.594389Z",
        "url": "https://files.pythonhosted.org/packages/a2/a1/a06ef2dc9c8a2f5233f4381f89e2e484f8579340d0f0ee8c107c1b9f9777/h26x_extractor-0.7.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d94aa41bca825f519e9634b666fc2d195d60ae2ced35fbf2e1df364839550e56",
          "md5": "5d38790f5ba26ae5aa1b4044fcd9689d",
          "sha256": "6fa1e33a057e214a15e584c809e8c174a9ae7b7904d60a48dc63cd5ef45b7eb1"
        },
        "downloads": -1,
        "filename": "h26x-extractor-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5d38790f5ba26ae5aa1b4044fcd9689d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15196,
        "upload_time": "2021-03-10T20:01:07",
        "upload_time_iso_8601": "2021-03-10T20:01:07.104822Z",
        "url": "https://files.pythonhosted.org/packages/d9/4a/a41bca825f519e9634b666fc2d195d60ae2ced35fbf2e1df364839550e56/h26x-extractor-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "914d6ce4a5f879521db75335b5cfebc20c4f8cf5948e85d584099bc054cecf36",
          "md5": "6a2344f68031d07b70e8554654f948eb",
          "sha256": "713eda9080d3268d1591f409efb0ce1633f9ec9171570b1da455dfbc120cc5e0"
        },
        "downloads": -1,
        "filename": "h26x_extractor-0.8.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a2344f68031d07b70e8554654f948eb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 13662,
        "upload_time": "2021-11-12T16:49:55",
        "upload_time_iso_8601": "2021-11-12T16:49:55.083517Z",
        "url": "https://files.pythonhosted.org/packages/91/4d/6ce4a5f879521db75335b5cfebc20c4f8cf5948e85d584099bc054cecf36/h26x_extractor-0.8.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "532a3b800dbd2d4e4f3e3bcb42b4f4eb4463abe5b437295480958e42e11dc004",
          "md5": "dcd07340867bfbb4463405afc3a9a9a6",
          "sha256": "1c0ba3a5a4e3ad9e9cad0762ac176f3f0eb0d8778292afbf20e821f1b8ff2b92"
        },
        "downloads": -1,
        "filename": "h26x-extractor-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dcd07340867bfbb4463405afc3a9a9a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15723,
        "upload_time": "2021-11-12T16:49:56",
        "upload_time_iso_8601": "2021-11-12T16:49:56.361035Z",
        "url": "https://files.pythonhosted.org/packages/53/2a/3b800dbd2d4e4f3e3bcb42b4f4eb4463abe5b437295480958e42e11dc004/h26x-extractor-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e187bd4baf084dba661963422be4ad41922e573a74e4338d315fc53bbd8f96e",
          "md5": "379e12dba6fd291e8518acb4d0b53620",
          "sha256": "cd3f95f3fa12cf71335fb4e7ffd5ede31be46264b3571174581e5834d22b9bb1"
        },
        "downloads": -1,
        "filename": "h26x_extractor-0.8.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "379e12dba6fd291e8518acb4d0b53620",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 13813,
        "upload_time": "2023-01-08T15:59:34",
        "upload_time_iso_8601": "2023-01-08T15:59:34.552823Z",
        "url": "https://files.pythonhosted.org/packages/4e/18/7bd4baf084dba661963422be4ad41922e573a74e4338d315fc53bbd8f96e/h26x_extractor-0.8.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8901e140621eb06f3b9e11c953625bc18e69b59e5d3659cdb6a9c7e2aeb0fdeb",
          "md5": "b5640af0cfc38a81d10de8a87893f5fe",
          "sha256": "a4115437494af1c07511d78fa988333069cc12b77c0768397328a101b0044ca0"
        },
        "downloads": -1,
        "filename": "h26x-extractor-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b5640af0cfc38a81d10de8a87893f5fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15037,
        "upload_time": "2023-01-08T15:59:36",
        "upload_time_iso_8601": "2023-01-08T15:59:36.670848Z",
        "url": "https://files.pythonhosted.org/packages/89/01/e140621eb06f3b9e11c953625bc18e69b59e5d3659cdb6a9c7e2aeb0fdeb/h26x-extractor-0.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e187bd4baf084dba661963422be4ad41922e573a74e4338d315fc53bbd8f96e",
        "md5": "379e12dba6fd291e8518acb4d0b53620",
        "sha256": "cd3f95f3fa12cf71335fb4e7ffd5ede31be46264b3571174581e5834d22b9bb1"
      },
      "downloads": -1,
      "filename": "h26x_extractor-0.8.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "379e12dba6fd291e8518acb4d0b53620",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.8",
      "size": 13813,
      "upload_time": "2023-01-08T15:59:34",
      "upload_time_iso_8601": "2023-01-08T15:59:34.552823Z",
      "url": "https://files.pythonhosted.org/packages/4e/18/7bd4baf084dba661963422be4ad41922e573a74e4338d315fc53bbd8f96e/h26x_extractor-0.8.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8901e140621eb06f3b9e11c953625bc18e69b59e5d3659cdb6a9c7e2aeb0fdeb",
        "md5": "b5640af0cfc38a81d10de8a87893f5fe",
        "sha256": "a4115437494af1c07511d78fa988333069cc12b77c0768397328a101b0044ca0"
      },
      "downloads": -1,
      "filename": "h26x-extractor-0.8.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b5640af0cfc38a81d10de8a87893f5fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 15037,
      "upload_time": "2023-01-08T15:59:36",
      "upload_time_iso_8601": "2023-01-08T15:59:36.670848Z",
      "url": "https://files.pythonhosted.org/packages/89/01/e140621eb06f3b9e11c953625bc18e69b59e5d3659cdb6a9c7e2aeb0fdeb/h26x-extractor-0.8.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}