{
  "info": {
    "author": "Gabriel Couture",
    "author_email": "gacou54@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "PPyOrthanc\n=========\nPython library that \"purely\" wraps the Orthanc REST API and facilitates the manipulation\nof data with several cool utilities.\n\nThis is a fork of pyorthanc that avoids raising errors for failing requests.\n\nInstallation\n------------\n```sh\n$ pipenv install git+https://github.com/dnlcrl/pyorthanc-pure#egg=ppyorthanc\n```\n\nExample of usage\n----------------\nBe sure that Orthanc is running. The default URL (if running locally) is `http://localhost:8042`.\n\n#### Getting access to patients, studies, series and instances information:\n\n```python\nfrom ppyorthanc import Orthanc\n\northanc = Orthanc('http://localhost:8042', username='username', password='password')\n\n# To get patients identifier and main information\npatients_identifiers = orthanc.get_patients().json()\n\nfor patient_identifier in patients_identifiers:\n   # To get patient information\n   patient_info = orthanc.get_patients_id(patient_identifier).json()\n\n   patient_name = patient_info['MainDicomTags']['PatientName']\n   ...\n   study_identifiers = patient_info['Studies']\n\n# To get patient's studies identifier and main information\nfor study_identifier in study_identifiers:\n   # To get Study info\n   study_info = orthanc.get_studies_id(study_identifier).json()\n\n   study_date = study_info['MainDicomTags']['StudyDate']\n   ...\n   series_identifiers = study_info['Series']\n\n# To get study's series identifier and main information\nfor series_identifier in series_identifiers:\n   # Get series info\n   series_info = orthanc.get_series_id(series_identifier).json()\n\n   modality = series_info['MainDicomTags']['Modality']\n   ...\n   instance_identifiers = series_info['Instances']\n\n# and so on ...\nfor instance_identifier in instance_identifiers:\n   instance_info = orthanc.get_instances_id(instance_identifier).json()\n   ...\n```\n\n#### Find patients with certain characteristics in an Orthanc instance:\nEach patient is a tree. Layers in each tree have the following structure \n`Patient` -> `Study` -> `Series` -> `Instance`\nthat correspond to the provided filter functions.\n\n```python\nfrom pyorthanc import find\n\npatients = find(\n    orthanc_url='http://localhost:8042/',\n    auth=('username', 'password'),\n    series_filter=lambda s: s.modality == 'RTDOSE'  # Optional: filter with pyorthanc.Series object\n)\n\nfor patient in patients:\n   patient_info = patient.get_main_information()\n   patient.id_   # Access PatientID\n   patient.name  # Access PatientName\n   \n   patient.get_zip() # DICOM files' content in bytes\n   \n   anonymized_patient_1_resp = patient.anonymize()  # New patient that was anonymized by Orthanc\n   anonymized_patient_1 = Patient(anonymized_patient_1_resp[\"PatientID\"], client=patient.client)\n   anonymized_patient_2_resp = patient.anonymize(\n      keep=['PatientName'],   # You can keep/remove/replace the DICOM tags you want\n      replace={'PatientID': 'TheNewPatientID'},\n      remove=['ReferringPhysicianName'],\n      force=True  # Needed when changing PatientID/StudyInstanceUID/SeriesInstanceUID/SOPInstanceUID\n   )  \n   anonymized_patient_2 = Patient(anonymized_patient_2_resp[\"PatientID\"], client=patient.client)\n\n   ...\n\n   for study in patient.studies:\n      study.date  # Date as a datetime object\n      study.referring_physician_name\n      ...\n\n      for series in study.series:\n         series.modality  # Should be 'RTDOSE' because of the series_filter parameters\n         ...\n```\n\n\n#### Upload DICOM files to Orthanc:\n\n```python\nfrom pyorthanc import Orthanc\n\northanc = Orthanc('http://localhost:8042', 'username', 'password')\n\nwith open('A_DICOM_INSTANCE_PATH.dcm', 'rb') as file:\n   orthanc.post_instances(file.read())\n```\n\n#### Getting list of connected remote modalities:\n```python\nfrom pyorthanc import Orthanc\n\northanc = Orthanc('http://localhost:8042', 'username', 'password')\n\northanc.get_modalities()\n```\n\n#### Query (C-Find) and Retrieve (C-Move) from remote modality:\n\n```python\nfrom pyorthanc import RemoteModality, Orthanc\n\northanc = Orthanc('http://localhost:8042', 'username', 'password')\n\nmodality = RemoteModality(orthanc, 'modality')\n\n# Query (C-Find) on modality\ndata = {'Level': 'Study', 'Query': {'PatientID': '*'}}\nquery_response = modality.query(data=data)\n\nanswer = modality.get_query_answers()[query_response['ID']]\nprint(answer)\n\n# Retrieve (C-Move) results of query on a target modality (AET)\nmodality.move(query_response['ID'], {'TargetAet': 'target_modality'})\n```\n\n#### Anonymize patient:\n```python\nfrom pyorthanc import Orthanc, Patient\n\northanc = Orthanc('http://localhost:8042', 'username', 'password')\n\npatient_identifier = orthanc.get_patients().json()[0]\n\nanonymized_patient = Patient(patient_identifier, orthanc).anonymize(\n    keep=['PatientName'],   # You can keep/remove/replace the DICOM tags you want\n    replace={'PatientID': 'TheNewPatientID'},\n    remove=['ReferringPhysicianName'],\n    force=True  # Needed when changing PatientID/StudyInstanceUID/SeriesInstanceUID/SOPInstanceUID\n)\n# Or directly with\northanc.post_patients_id_anonymize(patient_identifier).json()\n\n# result is: (you can retrieve DICOM file from ID)\n# {'ID': 'dd41f2f1-24838e1e-f01746fc-9715072f-189eb0a2',\n#  'Path': '/patients/dd41f2f1-24838e1e-f01746fc-9715072f-189eb0a2',\n#  'PatientID': 'dd41f2f1-24838e1e-f01746fc-9715072f-189eb0a2',\n#  'Type': 'Patient'}\n```\n\n## Citation\nIf you publish using PyOrthanc, we kindly ask that you credit us. PyOrthanc can be found on Zenodo :\nhttps://zenodo.org/record/7086219 .\n\n\n## Contributing\nYou can contribute to this project with the following steps:\n1. First, fork the project on Github \n2. Clone the project\n   ```shell\n   git clone https://github.com/<your-github-username>/pyorthanc\n   cd pyorthanc\n   ```\n3. Enter the project and create a poetry environment \n   (this project use the [poetry](https://python-poetry.org/) for dependency management)\n   ```shell\n   peotry install \n   ```\n4. Make a new git branch where you will apply the changes\n   ```shell\n   git checkout -b your-branch-name\n   ```\n   Now you can make your changes\n5. Once done, `git add`, `git commit` and `git push` the changes.\n6. Make a Pull Request from your branch to the https://github.com/ulaval-rs/pyorthanc.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ppyorthanc",
    "package_url": "https://pypi.org/project/ppyorthanc/",
    "platform": null,
    "project_url": "https://pypi.org/project/ppyorthanc/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/ppyorthanc/2.0.0/",
    "requires_dist": [
      "httpx (>=0.23.0,<0.24.0)",
      "pydicom (>=2.3.0,<3.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Orthanc REST API python wrapper with additional utilities",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15309810,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c980ca3d34fd97302ecbb0b1715f5cd43ae0c500c14673470fba3627cf241b0",
          "md5": "c09df23ae7ba89c4c0f6216549580281",
          "sha256": "d08f2c714b17a5590b933eb8b451d0e6dc811e2be8a7c8575d6d9ce782e6e905"
        },
        "downloads": -1,
        "filename": "ppyorthanc-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c09df23ae7ba89c4c0f6216549580281",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 83838,
        "upload_time": "2022-10-05T07:40:01",
        "upload_time_iso_8601": "2022-10-05T07:40:01.760932Z",
        "url": "https://files.pythonhosted.org/packages/2c/98/0ca3d34fd97302ecbb0b1715f5cd43ae0c500c14673470fba3627cf241b0/ppyorthanc-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3eb2915acd961a8ef02355fde683aaa7501d15c689360f4179c097e5274f3415",
          "md5": "93e367a72166064229a200f4b51d7747",
          "sha256": "37e91fa2ad20500951bde197755478aeae137b31e58df487b059266d75f62c00"
        },
        "downloads": -1,
        "filename": "ppyorthanc-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "93e367a72166064229a200f4b51d7747",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 78563,
        "upload_time": "2022-10-05T07:40:04",
        "upload_time_iso_8601": "2022-10-05T07:40:04.144176Z",
        "url": "https://files.pythonhosted.org/packages/3e/b2/915acd961a8ef02355fde683aaa7501d15c689360f4179c097e5274f3415/ppyorthanc-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c980ca3d34fd97302ecbb0b1715f5cd43ae0c500c14673470fba3627cf241b0",
        "md5": "c09df23ae7ba89c4c0f6216549580281",
        "sha256": "d08f2c714b17a5590b933eb8b451d0e6dc811e2be8a7c8575d6d9ce782e6e905"
      },
      "downloads": -1,
      "filename": "ppyorthanc-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c09df23ae7ba89c4c0f6216549580281",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 83838,
      "upload_time": "2022-10-05T07:40:01",
      "upload_time_iso_8601": "2022-10-05T07:40:01.760932Z",
      "url": "https://files.pythonhosted.org/packages/2c/98/0ca3d34fd97302ecbb0b1715f5cd43ae0c500c14673470fba3627cf241b0/ppyorthanc-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3eb2915acd961a8ef02355fde683aaa7501d15c689360f4179c097e5274f3415",
        "md5": "93e367a72166064229a200f4b51d7747",
        "sha256": "37e91fa2ad20500951bde197755478aeae137b31e58df487b059266d75f62c00"
      },
      "downloads": -1,
      "filename": "ppyorthanc-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "93e367a72166064229a200f4b51d7747",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 78563,
      "upload_time": "2022-10-05T07:40:04",
      "upload_time_iso_8601": "2022-10-05T07:40:04.144176Z",
      "url": "https://files.pythonhosted.org/packages/3e/b2/915acd961a8ef02355fde683aaa7501d15c689360f4179c097e5274f3415/ppyorthanc-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}