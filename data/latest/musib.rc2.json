{
  "info": {
    "author": "",
    "author_email": "Mauricio Araneda-Hernandez <mauricio.araneda.h@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MUSIB: Music Inpainting Benchmark\r\n\r\nPython library for building and evaluation/benchmarking of Automated Music Generation models\r\n\r\n\r\n## Models\r\n\r\n| Model                     | Year | Repo                                                                |                                Paper                                |\r\n|---------------------------|:----:|---------------------------------------------------------------------|:-------------------------------------------------------------------:|\r\n| DeepBach                  | 2017 | <a href=\"https://github.com/Ghadjeres/DeepBach\">Repo</a>                               | <a href=\"https://arxiv.org/pdf/1612.01010.pdf\">Paper</a>                                |\r\n| CocoNet                   | 2017 | <a href=\"https://github.com/magenta/magenta/tree/main/magenta/models/coconet\">Repo</a> | <a href=\"https://arxiv.org/pdf/1903.07227.pdf\">Paper</a>                                |\r\n| AnticipationRNN           | 2018 | <a href=\"https://github.com/Ghadjeres/Anticipation-RNN\">Repo</a>                       | <a href=\"https://link.springer.com/content/pdf/10.1007/s00521-018-3868-4.pdf\">Paper</a> |\r\n| InpaintNet                | 2019 | <a href=\"https://github.com/ashispati/InpaintNet\">Repo</a>                             | <a href=\"https://archives.ismir.net/ismir2019/paper/000040.pdf\">Paper</a>               |\r\n| Music SketchNet           | 2020 | <a href=\"https://github.com/RetroCirce/Music-SketchNet\">Repo</a>                       | <a href=\"https://arxiv.org/pdf/2008.01291.pdf\">Paper</a>                                |\r\n| Variable Length Infilling | 2021 | <a href=\"https://github.com/reichang182/variable-length-piano-infilling\">Repo</a>      | <a href=\"https://arxiv.org/pdf/2108.05064.pdf\">Paper</a>                                |\r\n\r\n\r\n## Datasets\r\n\r\n| Dataset      | Size  | Description             |                                         Source                                        | Paper                                |             Type            |\r\n|--------------|-------|-------------------------|:-------------------------------------------------------------------------------------:|--------------------------------------|:---------------------------:|\r\n| AILabs       | 1747  | Live Piano Performances |  <a href=\"https://github.com/YatingMusic/compound-word-transformer/blob/main/dataset/Dataset.md\">Source</a>  | <a href=\"https://arxiv.org/pdf/2101.02402.pdf\">Paper</a> | Single Instrument Polyphony |\r\n| JSB Chorales | 385   | Bach Chorales Scores    | <a href=\"https://github.com/cuthbertLab/music21/tree/master/music21/corpus/bach\">Source</a>                | -                                    | Fixed Voices Polyphony      |\r\n| IrishFolk    | 45849 | Irish Folk Songs        | <a href=\"https://github.com/IraKorshunova/folk-rnn/tree/master/data\">Source</a>                            | <a href=\"https://arxiv.org/pdf/1604.08723.pdf\">Paper</a> | Monophony                   |\r\n\r\n## Data Representation\r\n\r\n\r\n### Music SketchNet\r\n\r\n```\r\nDEFAULT_FRACTION: 24\r\n\r\n# 0-127 note, 128 hold, 129 rest\r\nnote_seq: [\r\n    [48, 128, 128, 128, 128, 128, 50, 128, 128, 128, 128, 128, 52, 128, 128, 128, 128, 128, 53, 128, 128, 128, 128, 128]\r\n]\r\n\r\n# [px, rx, len_x, nrx, gd]\r\nfactorized: [\r\n    [48, 50, 52, 53, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128],\r\n    [1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],\r\n    [4],\r\n    [[1, 0, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [1, 0, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [1, 0, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [1, 0, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0]],\r\n    [48, 128, 128, 128, 128, 128, 50, 128, 128, 128, 128, 128, 52, 128, 128, 128, 128, 128, 53, 128, 128, 128, 128, 128]\r\n]\r\n\r\nmodel_input: [n_batch, **REVISAR**]\r\nmodel_output: [n_batch, n_measures_middle, DEFAULT_FRACTION, n_classes]\r\n\r\n```\r\n\r\n\r\n### DeepBach\r\n\r\n```\r\nindex2note:\r\n    {0: 'D#5', 1: 'E-4', 2: 'E-5', 3: 'rest', 4: 'F#4', 5: 'E#5', 6: 'G#4', 7: 'B4', 8: 'D4', 9: 'A5', 10: 'END', 11: 'G-4', 12: 'C#5', 13: 'G4', 14: 'A3', 15: 'D#4', 16: 'START', 17: 'D5', 18: 'C5', 19: 'F5', 20: 'A-4', 21: 'C4', 22: 'C#4', 23: 'E5', 24: 'E#4', 25: 'A#4', 26: 'D-5', 27: 'E4', 28: 'G-5', 29: 'A-5', 30: 'A4', 31: 'G5', 32: 'B-4', 33: 'F#5', 34: '__', 35: 'F4', 36: 'OOR', 37: 'G#5', 38: 'B3'}\r\n\r\nscore_tensor = tensor([[36, 34, 34, 34, 36, 34, 34, 34, 34, 34, 34, 34,  8, 34, 34, 34, 38, 34,\r\n         34, 34, 34, 34, 14, 34, 36, 34, 34, 34, 36, 34, 34, 34, 34, 34, 14, 34,\r\n         38, 34, 34, 34, 14, 34, 34, 34, 34, 34, 34, 34, 38, 34, 34, 34,  8, 34,\r\n         34, 34, 34, 34, 34, 34, 21, 34, 34, 34, 38, 34, 34, 34, 14, 34, 34, 34,\r\n         34, 34, 34, 34, 36, 34, 34, 34, 34, 34, 34, 34, 38, 34, 34, 34, 38, 34,\r\n         34, 34, 21, 34, 34, 34,  8, 34, 34, 34,  8, 34, 34, 34, 34, 34, 21, 34,\r\n         38, 34, 34, 34, 14, 34, 34, 34, 34, 34, 34, 34, 36, 34, 34, 34, 38, 34,\r\n         34, 34, 34, 34, 34, 34, 21, 34, 34, 34,  8, 34, 34, 34, 34, 34, 34, 34,\r\n         21, 34, 34, 34, 38, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 36, 34,\r\n         34, 34, 34, 34, 34, 34, 38, 34, 34, 34,  8, 34, 34, 34, 34, 34, 34, 34,\r\n         21, 34, 34, 34, 38, 34, 34, 34, 34, 34, 34, 34, 14, 34, 34, 34, 36, 34,\r\n         34, 34, 34, 34, 14, 34, 38, 34, 34, 34, 14, 34, 34, 34, 34, 34, 34, 34,\r\n         38, 34, 34, 34,  8, 34, 34, 34, 34, 34, 34, 34, 21, 34, 34, 34, 38, 34,\r\n         34, 34, 14, 34, 34, 34, 34, 34, 34, 34, 36, 34, 34, 34, 34, 34, 34, 34]])\r\n\r\n# Metadata = [Fermata, Tick, Key, N_Voice]\r\nmetadata_tensor = tensor([[ 0,  0, 15,  0],\r\n        [ 0,  1, 15,  0],\r\n        [ 0,  2, 15,  0],\r\n        [ 0,  3, 15,  0],\r\n        [ 0,  0, 15,  0],\r\n        [ 0,  1, 15,  0],\r\n        [ 0,  3, 15,  0],\r\n        [ 0,  0, 15,  0],\r\n        [ 1,  2, 15,  0],\r\n        [ 1,  3, 15,  0],\r\n        [ 1,  0, 15,  0],\r\n        [ 1,  1, 15,  0],\r\n        [ 1,  2, 15,  0],\r\n        [ 1,  3, 15,  0]])\r\n```\r\n------------\r\n\r\nProject Organization\r\n------------\r\n\r\n    ├── README.md          <- The top-level README for developers using this project.\r\n    ├── data\r\n    │   ├── interim        <- CSV data containing all notes coming from raw sources. Intermediate before vectorization.\r\n    │   ├── processed      <- Vectorization of data ready to feed the models.\r\n    │   └── raw            <- The original, immutable data dump.\r\n    │\r\n    ├── models             <- Trained models weights.\r\n    │\r\n    ├── results            <- Generated results, tables, csvs, etc.\r\n    │   └── images         <- Generated graphics and figures\r\n    │\r\n    ├── environment.yaml   <- Libraries and modules required by the environment to reproduce the project.\r\n    │\r\n    └── src                <- Source code for use in this project.\r\n        ├── __init__.py    <- Makes src a Python module\r\n        │\r\n        ├── data           <- Scripts to download or generate data\r\n        │   ├── download_from_souce.py\r\n        │   ├── standardize_data.py\r\n        │   └── process_data.py\r\n        │\r\n        ├── features       <- Scripts to turn raw data into features for modeling\r\n        │   └── build_features.py\r\n        │\r\n        ├── models         <- Scripts to train models and generate new data.\r\n        │   ├── sketchnet.py\r\n        │   ├── inpaintnet.py\r\n        │   ├── arnn.py\r\n        │   └── vli.py\r\n        │\r\n        ├── metrics         <- Scripts to calculation of metrics.\r\n        │\r\n        └── visualization  <- Scripts to create exploratory and results oriented visualizations\r\n            └── plot_metrics.py\r\n\r\n\r\n--------\r\n\r\n<p><small>Project based on the <a target=\"_blank\" href=\"https://drivendata.github.io/cookiecutter-data-science/\">cookiecutter data science project template</a>.</small></p>\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "musib",
    "package_url": "https://pypi.org/project/musib/",
    "platform": null,
    "project_url": "https://pypi.org/project/musib/",
    "project_urls": {
      "Bug Tracker": "https://github.com/maranedah/maranedah/issues",
      "Homepage": "https://github.com/maranedah/musib"
    },
    "release_url": "https://pypi.org/project/musib/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Python library for building and evaluation/benchmarking of Automated Music Generation models",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15783480,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6693ae0ba6bc5225a8693b319df7caa3288ce56e1a162b405bde9b025183376a",
          "md5": "004a98237fce9ff8f93193cc6382918e",
          "sha256": "7a0476365d646e4fbe96155e2f143726eba6eaaf4b1f7fa348dc88a561412121"
        },
        "downloads": -1,
        "filename": "musib-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "004a98237fce9ff8f93193cc6382918e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28899,
        "upload_time": "2022-11-16T02:02:17",
        "upload_time_iso_8601": "2022-11-16T02:02:17.004814Z",
        "url": "https://files.pythonhosted.org/packages/66/93/ae0ba6bc5225a8693b319df7caa3288ce56e1a162b405bde9b025183376a/musib-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e805387b1b08fa2b426d424bfe6362fdc1751a2298076236dea55510b869fbc9",
          "md5": "0aaf2115567645233cf974d8abafb691",
          "sha256": "c45cd830f088f605d4cf02b0513bd983957718ae33f343ad498395c4a20830d3"
        },
        "downloads": -1,
        "filename": "musib-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0aaf2115567645233cf974d8abafb691",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 24308,
        "upload_time": "2022-11-16T02:02:20",
        "upload_time_iso_8601": "2022-11-16T02:02:20.524019Z",
        "url": "https://files.pythonhosted.org/packages/e8/05/387b1b08fa2b426d424bfe6362fdc1751a2298076236dea55510b869fbc9/musib-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeb5424d0c65007b6a91f915ea0aa0a9e689800c2d9493c7445613524c880869",
          "md5": "12b4f30a7e3348e8be9adec5a624f8fe",
          "sha256": "09c4d94bea8fba9ff97e5025f82f78a9dd7ad03f365e1f41a2fa88a50a942d4b"
        },
        "downloads": -1,
        "filename": "musib-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12b4f30a7e3348e8be9adec5a624f8fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28892,
        "upload_time": "2022-11-16T02:07:42",
        "upload_time_iso_8601": "2022-11-16T02:07:42.819264Z",
        "url": "https://files.pythonhosted.org/packages/ae/b5/424d0c65007b6a91f915ea0aa0a9e689800c2d9493c7445613524c880869/musib-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae49ac7f604c51b1f05a5489f356d679ec1f014da6848c73221dbca4737551f3",
          "md5": "d5a81c29561959b5137ecb1d49f3509a",
          "sha256": "467f8523f7d759fa3e05585e840d9f119ef67196b1a85070f18574a8920a2015"
        },
        "downloads": -1,
        "filename": "musib-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d5a81c29561959b5137ecb1d49f3509a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 24274,
        "upload_time": "2022-11-16T02:07:44",
        "upload_time_iso_8601": "2022-11-16T02:07:44.776710Z",
        "url": "https://files.pythonhosted.org/packages/ae/49/ac7f604c51b1f05a5489f356d679ec1f014da6848c73221dbca4737551f3/musib-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aeb5424d0c65007b6a91f915ea0aa0a9e689800c2d9493c7445613524c880869",
        "md5": "12b4f30a7e3348e8be9adec5a624f8fe",
        "sha256": "09c4d94bea8fba9ff97e5025f82f78a9dd7ad03f365e1f41a2fa88a50a942d4b"
      },
      "downloads": -1,
      "filename": "musib-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12b4f30a7e3348e8be9adec5a624f8fe",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 28892,
      "upload_time": "2022-11-16T02:07:42",
      "upload_time_iso_8601": "2022-11-16T02:07:42.819264Z",
      "url": "https://files.pythonhosted.org/packages/ae/b5/424d0c65007b6a91f915ea0aa0a9e689800c2d9493c7445613524c880869/musib-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae49ac7f604c51b1f05a5489f356d679ec1f014da6848c73221dbca4737551f3",
        "md5": "d5a81c29561959b5137ecb1d49f3509a",
        "sha256": "467f8523f7d759fa3e05585e840d9f119ef67196b1a85070f18574a8920a2015"
      },
      "downloads": -1,
      "filename": "musib-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d5a81c29561959b5137ecb1d49f3509a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 24274,
      "upload_time": "2022-11-16T02:07:44",
      "upload_time_iso_8601": "2022-11-16T02:07:44.776710Z",
      "url": "https://files.pythonhosted.org/packages/ae/49/ac7f604c51b1f05a5489f356d679ec1f014da6848c73221dbca4737551f3/musib-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}