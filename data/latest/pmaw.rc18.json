{
  "info": {
    "author": "Matthew Podolak",
    "author_email": "mpodola2@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "<h2 align=\"center\">PMAW: Pushshift Multithread API Wrapper</h2>\n\n[![CircleCI](https://circleci.com/gh/mattpodolak/pmaw.svg?style=shield)](https://circleci.com/gh/mattpodolak/pmaw)\n[![codecov.io](https://codecov.io/github/mattpodolak/pmaw/coverage.svg?branch=master)](https://codecov.io/github/mattpodolak/pmaw)\n[![PyPI Version](https://img.shields.io/pypi/v/pmaw?color=blue)](https://pypi.org/project/pmaw/)\n[![Python Version](https://img.shields.io/pypi/pyversions/pmaw?color=blue)](https://www.python.org/)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n# Contents\n\n- [Description](#description)\n- [Getting Started](#getting-started)\n- [Features](#features)\n  - [Multithreading](#multithreading)\n  - [Rate Limiting](#rate-limiting)\n  - [Caching](#caching)\n  - [PRAW Enrichment](#praw-enrichment)\n  - [Custom Filtering](#custom-filtering)\n  - [Unsupported Parameters](#unsupported-parameters)\n- [Parameters](#parameters)\n- [Examples](#examples)\n  - [Comments](#comments)\n  - [Submissions](#submissions)\n- [Advanced Examples](#advanced-examples)\n  - [PRAW](#praw)\n  - [Custom Filter](#custom-filter)\n  - [Caching Examples](#caching-examples)\n- [Benchmarks](#benchmarks)\n- [Deprecated Examples](#deprecated-examples)\n\n# Description\n\n**PMAW** is a wrapper for the Pushshift API which uses multithreading to retrieve Reddit comments and submissions. General usage is through the `PushshiftAPI` class which provides methods for interacting with different `Pushshift` endpoints, please view the [Pushshift Docs](https://github.com/pushshift/api) for more details on the endpoints and accepted parameters. Parameters are provided through keyword arguments when calling the method, some methods will have required parameters. When using a method **PMAW** will complete all the required API calls to complete the query before returning a `Response` generator object.\n\nThe following three methods are currently supported:\n\n- Searching Comments: `search_comments`\n  - [Details](https://github.com/pushshift/api#searching-comments)\n- Search Submissions: `search_submissions`\n  - [Details](https://github.com/pushshift/api#searching-submissions)\n- Search Submission Comment IDs: `search_submission_comment_ids`\n  - [Details](https://github.com/pushshift/api#get-all-comment-ids-for-a-particular-submission)\n\n# Getting Started\n\n## Why Multithread?\n\nWhen building large datasets from Reddit submission and comment data it can require thousands of API calls to the Pushshift API. The time it takes for your code to complete pulling all this data is limited by both your network latency and the response time of the Pushshift server, which can vary throughout the day.\n\nCurrent API libraries such as PRAW and PSAW currently run requests sequentially, which can cause thousands of API calls to take many hours to complete. Since API requests are I/O-bound they can benefit from being run asynchronously using multiple threads. Implementing intelligent rate limiting can ensure that we minimize the number of rejected requests, and the time it takes to complete.\n\n## Installation\n\n**PMAW** currently supports _Python 3.5_ or later. To install it via _pip_, run:\n\n```sh\n$ pip install pmaw\n```\n\n### General Usage\n\n```python\nfrom pmaw import PushshiftAPI\napi = PushshiftAPI()\n```\n\nView the optional parameters for `PushshiftAPI` [here](#pushshiftapi).\n\n# Features\n\n## Multithreading\n\nThe number of threads to use during multithreading is set with the `num_workers` parameter. This is optional and defaults to `10`, however, you should provide a value as this may not be appropriate for your machine. Increasing the number of threads you use allows you to make more concurrent requests to Pushshift, however, the returns are diminishing as requests are constrained by the rate-limit. The optimal number of threads for requests is between `10` and `20` depending on the current response time of the Pushshift server.\n\nWhen selecting the number of `threads` you can follow one of the two methodologies:\n\n- Number of processors on the machine, multiplied by 5\n- Minimum value of 32 and the number of processors plus 4\n\nIf you are unsure how many processors you have use: `os.cpu_count()`.\n\n## Rate Limiting\n\nMultiple different options are available for rate-limiting your Pushshift API requests, and are defined by two different types, rate-averaging and exponential backoff. If you're unsure on which to use, refer to the [benchmark comparison](#benchmark-comparison).\n\n### Rate-Averaging\n\n**PMAW** by default rate limits using rate-averaging so that the concurrent API requests to the Pushshift server are limited to your provided rate.\n\nProviding a `rate_limit` value is optional, this defaults to `60` requests per minute which is the recommended value for interacting with the Pushshift API. Increasing this value above `60` will increase the number of rejected requests and will increase the burden on the Pushshift server. A maximum recommended value is `100` requests per minute.\n\nAdditionally, the rate-limiting behaviour can be constrained by the `max_sleep` parameter which allows you to select a maximum period of time to sleep between requests.\n\n### Exponential Backoff\n\nExponential backoff can be used by setting the `limit_type` to backoff. Four flavours of `backoff` are available based on the usage of jitter: None, full, equal, and decorr - decorrelated.\n\nExponential backoff is calculated by multiplying the `base_backoff` by 2 to the power of the number of failed batches. This allows batches to be spaced out, reducing the resulting rate-limit when requests start to be rejected. However, the threads will still be requesting at nearly the same time, increasing the overall number of required API requests. The exponential backoff sleep values are capped by the `max_sleep` parameter.\n\nIntroducing an element of randomness called `jitter` allows us to reduce the competition between threads and distribute the API requests across the window, reducing the number of rejected requests.\n\n- `full` jitter selects the length of sleep for a request by randomly sampling from a normal distribution for values between 0 and the capped exponential backoff value.\n- `equal` jitter selects the length of sleep for a request by adding half the capped exponential backoff value to a random sample from a normal distribution between 0 and half the capped exponential backoff value.\n- `decorr` - decorrelated jitter is similar to `full` jitter but increases the maximum jitter based on the last random value, selecting the length of sleep by the minimum value between `max_sleep` and a random sample between the `base_backoff` and the last sleep value multiplied by 3.\n\n## Caching\n\n### Memory Safety\n\nMemory safety allows us to reduce the amount of RAM used when requesting data, and can be enabled by setting `mem_safe=True` on a search method. This feature should be used if a large amount of data is being requested or if the machine in use has a limited amount of RAM.\n\nWhen enabled, **PMAW** caches the responses retrieved every 20 batches (approx 20,000 responses with 10 workers) by default, this can be changed by passing a different value for `file_checkpoint` when instantiating the `PushshiftAPI` object.\n\nWhen the search is complete, a `Response` generator object is returned, when iterating through the responses using this generator, responses from the cache will be loaded in 1 cache file at a time.\n\n### Safe Exiting\n\nSafe exiting will ensure that if a search method is interrupted that any unfinished requests and current responses are cached before exiting. If the search method successfully completes, all the responses are also cached. This can be enabled by setting `safe_exit=True` on a search method.\n\nRe-running a `search` method with the exact same parameters that you have ran before will load previous responses and any unfinished requests from the cache, allowing it to resume if all the required responses have not yet been retrieved. If there are no unfinished requests, the responses from the cache are returned.\n\nA `before` value is required to load previous responses / requests when using non-id based search, as `before` is set to the current time when the `search` method is called, which would result in a different set of parameters then when you last ran the search despite all other parameters being the same.\n\nSimilarly to the memory safety feature, a `Response` generator object is returned. When iterating through the responses using this generator, responses from the cache will be loaded in 1 cache file at a time.\n\n## PRAW Enrichment\n\nEnrich results with the most recent metadata from Reddit by passing a PRAW Reddit instance when instantiating the PushshiftAPI. Results not found on Reddit will not be enriched or returned.\n\nIf you don’t already have a client ID and client secret, follow Reddit’s [First Steps Guide](https://github.com/reddit-archive/reddit/wiki/OAuth2-Quick-Start-Example#first-steps) to create them. A user agent is a unique identifier that helps Reddit determine the source of network requests. To use Reddit’s API, you need a unique and descriptive user agent.\n\n## Custom Filtering\n\nA user-defined function can be provided using the `filter_fn` parameter for either the `search_submissions` or `search_comments` method. This function will be used to filter results before they are saved by passing each item to the function and filtering it out if a `False` value is returned, saving the value if `True` is returned. The `limit` parameter does not take into account any results that are filtered out.\n\n## Unsupported Parameters\n\n- `order='asc'` is unsupported as it can have unexpected results\n- `until` and `since` only support epoch time (float or int)\n- `aggs` are unsupported, as **PMAW** is intended to be used for collecting large numbers of submissions or comments. Use [PSAW](https://github.com/dmarx/psaw) for aggregation requests.\n\n### Feature Requests\n\n- For feature requests please open an issue with the `feature request` label, this will allow features to be better prioritized for future releases\n\n# Parameters\n\n## Objects\n\n### `PushshiftAPI`\n\n- `num_workers` (int, optional): Number of workers to use for multithreading, defaults to 10.\n- `max_sleep` (int, optional): Maximum rate-limit sleep time (in seconds) between requests, defaults to 60s.\n- `rate_limit` (int, optional): Target number of requests per minute for rate-averaging, defaults to 60 requests per minute.\n- `base_backoff` (float, optional): Base delay in seconds for exponential backoff, defaults to 0.5s\n- `batch_size` (int, optional): Size of batches for multithreading, defaults to number of workers.\n- `shards_down_behavior` (str, optional): Specifies how PMAW will respond if some shards are down during a query. Options are 'warn' to only emit a warning, 'stop' to throw a RuntimeError, or None to take no action. Defaults to 'warn'.\n- `limit_type` (str, optional): Type of rate limiting to use, options are 'average' for rate averaging, 'backoff' for exponential backoff. Defaults to 'average'.\n- `jitter` (str, optional): Jitter to use with backoff, options are None, 'full', 'equal', 'decorr'. Defaults to None.\n- `checkpoint` (int, optional): Size of interval in batches to print a checkpoint with stats, defaults to 10\n- `file_checkpoint` (int, optional): Size of interval in batches to cache responses when using mem_safe, defaults to 20\n- `praw` (praw.Reddit, optional): Used to enrich the Pushshift items retrieved with metadata directly from Reddit\n\n### `Response`\n\n`Response` is a generator object which will return the responses once when iterated over.\n\n- `len(Response)` will return the number of responses that were retrieved from Pushshift\n- `load_cache(key, cache_dir=None)` returns an instance of `Response` with the responses loaded with the provided key\n\n## `search_submissions` and `search_comments`\n\n- `max_ids_per_request` (int, optional): Maximum number of ids to use in a single request, defaults to 500, maximum 500.\n- `max_results_per_request` (int, optional): Maximum number of items to return in a single non-id based request, defaults to 100, maximum 100.\n- `mem_safe` (boolean, optional): If True, stores responses in cache during operation, defaults to False\n- `search_window` (int, optional): Size in days for search window for submissions / comments in non-id based search, defaults to 365\n- `safe_exit` (boolean, optional): If True, will safely exit if interrupted by storing current responses and requests in the cache. Will also load previous requests / responses if found in cache, defaults to False\n- `cache_dir` (str, optional) - An absolute or relative folder path to cache responses in when `mem_safe` or `safe_exit` is enabled\n- `filter_fn` (function, optional) - A function used for custom filtering the results before saving them. Accepts a single comment or submission parameter and returns False to filter out the item, otherwise returns True.\n\n### Keyword Arguments\n\n- Unlike the Pushshift API, the `until` and `since` keyword arguments must be in epoch time\n- `limit` is the number of submissions/comments to return. If set to `None` or if the set `limit` is higher than the number of available submissions/comments for the provided parameters then `limit` will be set to the amount available.\n- Other accepted parameters are covered in the Pushshift documentation for [submissions](https://github.com/pushshift/api#searching-submissions) and [comments](https://github.com/pushshift/api#searching-comments).\n\n## `search_submission_comment_ids`\n\n- `ids` is a required parameter and should be an array of submission ids, a single id can be passed as a string\n- `max_ids_per_request` (int, optional): Maximum number of ids to use in a single request, defaults to 500, maximum 500.\n- `mem_safe` (boolean, optional): If True, stores responses in cache during operation, defaults to False\n- `safe_exit` (boolean, optional): If True, will safely exit if interrupted by storing current responses and requests in the cache. Will also load previous requests / responses if found in cache, defaults to False\n- `cache_dir` (str, optional) - An absolute or relative folder path to cache responses in when `mem_safe` or `safe_exit` is enabled\n\n### Keyword Arguments\n\n- Other accepted parameters are covered in the Pushshift [documentation](https://github.com/pushshift/api#get-all-comment-ids-for-a-particular-submission)\n\n# Examples\n\nThe following examples are for `pmaw` version >= 1.0.0.\n\n## Comments\n\n### Search Comments\n\n```python\nfrom pmaw import PushshiftAPI\n\napi = PushshiftAPI()\ncomments = api.search_comments(subreddit=\"science\", limit=1000)\ncomment_list = [comment for comment in comments]\n```\n\n### Search Comments by IDs\n\n```python\nfrom pmaw import PushshiftAPI\n\napi = PushshiftAPI()\ncomment_ids = ['gjacwx5','gjad2l6','gjadatw','gjadc7w','gjadcwh',\n  'gjadgd7','gjadlbc','gjadnoc','gjadog1','gjadphb']\ncomments = api.search_comments(ids=comment_ids)\ncomment_list = [comment for comment in comments]\n```\n\nYou can supply a single comment by passing the id as a string or an array with a length of 1 to `ids`\n\n[Detailed Example](https://github.com/mattpodolak/pmaw/blob/master/examples/search_comments.ipynb)\n\n### Search Comment IDs by Submission ID\n\n```python\nfrom pmaw import PushshiftAPI\n\napi = PushshiftAPI()\npost_ids = ['kxi2w8','kxi2g1','kxhzrl','kxhyh6','kxhwh0',\n  'kxhv53','kxhm7b','kxhm3s','kxhg37','kxhak9']\ncomment_ids = api.search_submission_comment_ids(ids=post_ids)\ncomment_id_list = [c_id for c_id in comment_ids]\n```\n\nYou can supply a single submission by passing the id as a string or an array with a length of 1 to `ids`\n\n[Detailed Example](https://github.com/mattpodolak/pmaw/blob/master/examples/search_submission_comment_ids.ipynb)\n\n## Submissions\n\n### Search Submissions\n\n```python\nfrom pmaw import PushshiftAPI\n\napi = PushshiftAPI()\nposts = api.search_submissions(subreddit=\"science\", limit=1000)\npost_list = [post for post in posts]\n```\n\n### Search Submissions by IDs\n\n```python\nfrom pmaw import PushshiftAPI\n\napi = PushshiftAPI()\npost_ids = ['kxi2w8','kxi2g1','kxhzrl','kxhyh6','kxhwh0',\n  'kxhv53','kxhm7b','kxhm3s','kxhg37','kxhak9']\nposts = api.search_submissions(ids=post_ids)\npost_list = [post for post in posts]\n```\n\nYou can supply a single submission by passing the id as a string or an array with a length of 1 to `ids`\n\n[Detailed Example](https://github.com/mattpodolak/pmaw/blob/master/examples/search_submissions.ipynb)\n\n# Advanced Examples\n\n## PRAW\n\n```python\nimport praw\nfrom pmaw import PushshiftAPI\n\nreddit = praw.Reddit(\n client_id='YOUR_CLIENT_ID',\n client_secret='YOUR_CLIENT_SECRET',\n user_agent=f'python: PMAW request enrichment (by u/YOUR_USERNAME)'\n)\n\napi_praw = PushshiftAPI(praw=reddit)\ncomments = api_praw.search_comments(q=\"quantum\", subreddit=\"science\", limit=100, until=1629990795)\n```\n\n## Custom Filter\n\nThe user defined function must accept a single item (comment / submission) and return either True or False, returning False will filter out the item passed to it.\n\n```python\nfrom pmaw import PushshiftAPI\n\napi = PushshiftAPI()\ndef fxn(item):\n  return item['score'] > 2\nposts = api.search_submissions(ids=post_ids, filter_fn=fxn)\n```\n\n## Caching Examples\n\n### Memory Safety\n\nIf you are pulling large amounts of data or have a limited amount of RAM, using the memory safety feature will help you avoid an out of memory error from being thrown during data retrieval.\n\n```python\nfrom pmaw import PushshiftAPI\n\napi = PushshiftAPI()\nposts = api.search_submissions(subreddit=\"science\", limit=700000, mem_safe=True)\nprint(f'{len(posts)} posts retrieved from Pushshift')\n```\n\nA `Response` generator object will be returned, and you can load all the responses, including those that have been cached by iterating over the entire generator.\n\n```python\n# get all responses\npost_list = [post for post in posts]\n```\n\nWith default settings, responses are cached every 20 batches (approx 20,000 responses with 10 workers), however, with limited memory you can decrease this further.\n\n```python\n# cache responses every 10 batches\napi = PushshiftAPI(file_checkpoint=10)\n```\n\n### Safe Exiting\n\nIf you expect that your query may be interrupted while its running, setting `safe_exit=True` will cache responses and unfinished requests before exiting when an interrupt signal is received. Re-running a `search` method with the exact same parameters that you have ran before will load previous responses and any unfinished requests from the cache, allowing it to resume if all the required responses have not yet been retrieved.\n\n```python\nfrom pmaw import PushshiftAPI\n\napi = PushshiftAPI()\nposts = api.search_submissions(subreddit=\"science\", limit=700000, until=1613234822, safe_exit=True)\nprint(f'{len(posts)} posts retrieved from Pushshift')\n```\n\nA `until` value is required to load previous responses / requests when using non-id search, as `until` is set to the current time when the `search` method is called, which would result in a different set of parameters then when you last ran the search despite all other parameters being the same.\n\n### Loading Cache with Key\n\nThe `Response` class has a staticmethod `load_cache` that allows you to pass a `key` value and `cache_dir` to load responses from the cache into an instance of `Response`.\n\n```python\nfrom pmaw import Response\n\ncache_key = 'a904e22ea572a8c0109b7bc5330528e4'\ncache_dir = './cache'\nresp = Response.load_cache(cache_key, cache_dir)\n\n```\n\n# Benchmarks\n\n[Benchmark Notebook](https://github.com/mattpodolak/pmaw/blob/master/examples/benchmark.ipynb)\n\n## PMAW and PSAW Comparison\n\n### Completion Time\n\nA benchmark comparison was performed to determined the completion time for different size requests, ranging from 1 to 390,000 requested posts. This will allow us to determine which Pushshift wrappers and rate-limiting methods are best for different request sizes.\n\nDefault parameters were used for each **PMAW** rate-limit configuration as well as the default **PSAW** configuration, which does not provide multiple rate-limit implementations.\n\n![01 benchmark](https://raw.githubusercontent.com/mattpodolak/pmaw/master/examples/img/01-comparison.png)\n\nFor the first benchmark test we compare the completion times for all possible **PMAW** rate-limiting configurations with **PSAW** for up to 16,000 requested posts. We can see that the three most performant rate-limiting settings for **PMAW** are rate-averaging, and exponential backoff with full or equal jitter.\n\n![02 benchmark](https://raw.githubusercontent.com/mattpodolak/pmaw/master/examples/img/02-comparison.png)\n\nWe ran this second benchmark increasing up to 390,000 requested posts, excluding the least performant **PMAW** rate-limiting configurations. From this benchmark, we can see that **PMAW** was on average 1.79x faster than **PSAW** at 390,625 posts retrieved. The total completion time for 390,625 posts with **PSAW** was 2h38m, while the average completion time was 1h28m for **PMAW**.\n\n### Number of Requests\n\n![02 requests benchmark](https://raw.githubusercontent.com/mattpodolak/pmaw/master/examples/img/02-requests-comparison.png)\n\nWe also compare the number of required requests for each of the three **PMAW** rate-limit configurations. From this comparison, we can see that for 390,625 requested posts rate-averaging made 33.60% less API requests than exponential backoff.\n\n## Memory Safety (Cache)\n\nA benchmark test was performed for the memory safety feature (`mem_safe=True`) to see the impact of caching responses has on the completion time, memory use, and max memory use while running requests for different limits.\n\n![03 cache time benchmark](https://raw.githubusercontent.com/mattpodolak/pmaw/master/examples/img/03-cache-time-comparison.png)\n\nWe can see that when memory safety was enabled, the completion time for 390,000 posts was 17.11% slower than when this feature was disabled and responses were not being cached, finishing in 1h30m instead of 1h17m.\n\n![03 cache memory benchmark](https://raw.githubusercontent.com/mattpodolak/pmaw/master/examples/img/03-cache-memory-comparison.png)\n\nWhen memory safety is enabled responses start being cached after 20 checkpoints (default `file_checkpoint=20`), equivalent to approximately 20,000 responses, causing the memory use to level out around 170MB of memory. Enabling memory safety allows us to use 90.97% less memory is used than when it is disabled, with the non-cached responses using 1.9GB of memory when 390,000 posts were retrieved. It's clear to see that we could easily trigger an out of memory error if we were to retrieve millions of submissions with memory safety disabled.\n\n![03 cache max memory benchmark](https://raw.githubusercontent.com/mattpodolak/pmaw/master/examples/img/03-cache-max-memory-comparison.png)\n\nWe compare the maximum memory use during data retrieval as well. Once again, around the 20,000 response mark, the two methods diverge as responses begin to be added to the cache. For 390,000 posts, the maximum memory use when memory safety was enabled was 58.2% less than when it was disabled (797MB vs 1.9GB).\n\n# Deprecated Examples\n\nThese examples are for `pmaw` version <=0.1.3.\n\n## Comments\n\n### Search Comments\n\n```python\ncomments = api.search_comments(subreddit=\"science\", limit=1000)\n```\n\n### Search Comments by IDs\n\n```python\ncomment_ids = ['gjacwx5','gjad2l6','gjadatw','gjadc7w','gjadcwh',\n  'gjadgd7','gjadlbc','gjadnoc','gjadog1','gjadphb']\ncomments_arr = api.search_comments(ids=comment_ids)\n```\n\n### Search Comment IDs by Submission ID\n\n```python\npost_ids = ['kxi2w8','kxi2g1','kxhzrl','kxhyh6','kxhwh0',\n  'kxhv53','kxhm7b','kxhm3s','kxhg37','kxhak9']\ncomment_id_dict = api.search_submission_comment_ids(ids=post_ids)\n```\n\n## Submissions\n\n### Search Submissions\n\n```python\nsubmissions = api.search_submissions(subreddit=\"science\", limit=1000)\n```\n\n### Search Submissions by IDs\n\n```python\npost_ids = ['kxi2w8','kxi2g1','kxhzrl','kxhyh6','kxhwh0',\n  'kxhv53','kxhm7b','kxhm3s','kxhg37','kxhak9']\nposts_arr = api.search_submissions(ids=post_ids)\n```\n\n## License\n\n**PMAW** is released under the MIT License. See the\n[LICENSE](https://github.com/mattpodolak/pmaw/blob/master/LICENSE) file for more\ndetails.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mattpodolak/pmaw",
    "keywords": "reddit api wrapper pushshift multithread data collection cache",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pmaw",
    "package_url": "https://pypi.org/project/pmaw/",
    "platform": null,
    "project_url": "https://pypi.org/project/pmaw/",
    "project_urls": {
      "Homepage": "https://github.com/mattpodolak/pmaw"
    },
    "release_url": "https://pypi.org/project/pmaw/3.0.0/",
    "requires_dist": [
      "requests",
      "praw"
    ],
    "requires_python": ">=3.5",
    "summary": "A multithread Pushshift.io API Wrapper for reddit.com comment and submission searches.",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16203512,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "224e4e143b00728ead615fcb8d18be6c2c035e37edc77523c39d458c99d57300",
          "md5": "a2a3b19abc202cb05eb7a9c3f9231a69",
          "sha256": "78e62ef6f72285aea9c5f77d62a6973bf44281a257f548e45a3908c922371a23"
        },
        "downloads": -1,
        "filename": "pmaw-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2a3b19abc202cb05eb7a9c3f9231a69",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 9072,
        "upload_time": "2021-01-23T22:23:30",
        "upload_time_iso_8601": "2021-01-23T22:23:30.090768Z",
        "url": "https://files.pythonhosted.org/packages/22/4e/4e143b00728ead615fcb8d18be6c2c035e37edc77523c39d458c99d57300/pmaw-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eec857e12831fc686ac19ac27a5336d129374e9092946f77b2837b7a970b5659",
          "md5": "3dc2872423375d336a716adc883b9126",
          "sha256": "7d5f24e46f5a8dc6e85b99288b2ad05cad8c8cbb5740233223043ad43627afa7"
        },
        "downloads": -1,
        "filename": "pmaw-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3dc2872423375d336a716adc883b9126",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8323,
        "upload_time": "2021-01-23T22:23:31",
        "upload_time_iso_8601": "2021-01-23T22:23:31.529836Z",
        "url": "https://files.pythonhosted.org/packages/ee/c8/57e12831fc686ac19ac27a5336d129374e9092946f77b2837b7a970b5659/pmaw-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d2d31eb3ca49006585b48eae54af46d092bd600158a426ec21982e56ddd9492",
          "md5": "9f8b98ca7e0d394a2c8235fd774cdad2",
          "sha256": "552d7f145579ec478ef0a9d1fafff3b5311a7e2bba4b42683b7c129f38915db4"
        },
        "downloads": -1,
        "filename": "pmaw-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f8b98ca7e0d394a2c8235fd774cdad2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13011,
        "upload_time": "2021-02-05T16:11:12",
        "upload_time_iso_8601": "2021-02-05T16:11:12.988009Z",
        "url": "https://files.pythonhosted.org/packages/7d/2d/31eb3ca49006585b48eae54af46d092bd600158a426ec21982e56ddd9492/pmaw-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2adbcc82fc53c4a3b108280cd683ee5a409ef820af7c95fe4860e3317b2758f4",
          "md5": "3afbc26d7a0adaef173566b8c19eec5f",
          "sha256": "dd15f0e3ff8bb11aa09a542e9d975345ff26dfbe3608c0e331aa977cdf213b20"
        },
        "downloads": -1,
        "filename": "pmaw-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3afbc26d7a0adaef173566b8c19eec5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 15450,
        "upload_time": "2021-02-05T16:11:14",
        "upload_time_iso_8601": "2021-02-05T16:11:14.057343Z",
        "url": "https://files.pythonhosted.org/packages/2a/db/cc82fc53c4a3b108280cd683ee5a409ef820af7c95fe4860e3317b2758f4/pmaw-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "457b5a7620ebcd84b800236abcffe561725767bfad6aa1b2324f0b118fc8bed2",
          "md5": "e7bf3ef44b38f9a6ade2922c17ef9a1e",
          "sha256": "53704fbc8e568204beba2d706ed42328bc9b16219e5bc0b2573dccd414cd12ec"
        },
        "downloads": -1,
        "filename": "pmaw-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7bf3ef44b38f9a6ade2922c17ef9a1e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13071,
        "upload_time": "2021-02-06T14:48:13",
        "upload_time_iso_8601": "2021-02-06T14:48:13.348147Z",
        "url": "https://files.pythonhosted.org/packages/45/7b/5a7620ebcd84b800236abcffe561725767bfad6aa1b2324f0b118fc8bed2/pmaw-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "736588d88ca0c6a79868512b64bfacdd486845f9d94bcf4480a2dc73671ba14c",
          "md5": "0489d19fd01c3f6d48dd8f45c3b1eb9f",
          "sha256": "169f56fad3233c0e0e281d0e5b73c22889c78134605de8120737665e4a4be62d"
        },
        "downloads": -1,
        "filename": "pmaw-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0489d19fd01c3f6d48dd8f45c3b1eb9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 15496,
        "upload_time": "2021-02-06T14:48:14",
        "upload_time_iso_8601": "2021-02-06T14:48:14.695444Z",
        "url": "https://files.pythonhosted.org/packages/73/65/88d88ca0c6a79868512b64bfacdd486845f9d94bcf4480a2dc73671ba14c/pmaw-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "209d9a6297ec65aaa4b23ecbb77244138108a313522e198ce921b7a9a576309a",
          "md5": "b382aeb1a93c0de32b2212fcf9dfff26",
          "sha256": "b049e12abe332da15b00a278a52d7f70c110df35ff3c371c56d59e61d6a56f2d"
        },
        "downloads": -1,
        "filename": "pmaw-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b382aeb1a93c0de32b2212fcf9dfff26",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13091,
        "upload_time": "2021-02-07T02:55:11",
        "upload_time_iso_8601": "2021-02-07T02:55:11.213172Z",
        "url": "https://files.pythonhosted.org/packages/20/9d/9a6297ec65aaa4b23ecbb77244138108a313522e198ce921b7a9a576309a/pmaw-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0b342a5b8a34ee74e3cd8c5862dfdff4d76eb29971af609d7c98ffe198f433f",
          "md5": "00a894998639ae55e1c3f92be1d7fc97",
          "sha256": "dda26fe720a71fc4add5e6408e6bcd649336a260c3497a9a6d823676dc841d85"
        },
        "downloads": -1,
        "filename": "pmaw-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "00a894998639ae55e1c3f92be1d7fc97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 15551,
        "upload_time": "2021-02-07T02:55:12",
        "upload_time_iso_8601": "2021-02-07T02:55:12.657426Z",
        "url": "https://files.pythonhosted.org/packages/a0/b3/42a5b8a34ee74e3cd8c5862dfdff4d76eb29971af609d7c98ffe198f433f/pmaw-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37546118af3f4fcfc4e0b41d4c8c6bc666db7375f3e9dbc8908b6e14fc7df256",
          "md5": "4ad9cceaecefbca0ade7279505ef8752",
          "sha256": "c616fb9601577e1b04f1e6f68af599c285ba448e73a8cb7fe5a6c342c77f311a"
        },
        "downloads": -1,
        "filename": "pmaw-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ad9cceaecefbca0ade7279505ef8752",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13087,
        "upload_time": "2021-02-09T01:25:02",
        "upload_time_iso_8601": "2021-02-09T01:25:02.450892Z",
        "url": "https://files.pythonhosted.org/packages/37/54/6118af3f4fcfc4e0b41d4c8c6bc666db7375f3e9dbc8908b6e14fc7df256/pmaw-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "451286f1f956684848c552133b236fffc67cd1b9fdb30cf4baa568b867e36cc2",
          "md5": "8f4369291cd450b457e87506bf2b15fb",
          "sha256": "1a97ac9a166da76a9d64cf0f1de00431cd5d2ecabda97e0ac61e3487e46d44aa"
        },
        "downloads": -1,
        "filename": "pmaw-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8f4369291cd450b457e87506bf2b15fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 15537,
        "upload_time": "2021-02-09T01:25:03",
        "upload_time_iso_8601": "2021-02-09T01:25:03.467977Z",
        "url": "https://files.pythonhosted.org/packages/45/12/86f1f956684848c552133b236fffc67cd1b9fdb30cf4baa568b867e36cc2/pmaw-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8308b8200d905973a2e18b60f47cb8c9a78f31e298172d506a1d60f2365e0bda",
          "md5": "c322f1ee39b56c4b644149963991d41a",
          "sha256": "6fc649464c54f07d5c78def5e7b518a29fe634bdb0c8d8044b8b4cdb0c7b149b"
        },
        "downloads": -1,
        "filename": "pmaw-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c322f1ee39b56c4b644149963991d41a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 18196,
        "upload_time": "2021-02-14T20:29:43",
        "upload_time_iso_8601": "2021-02-14T20:29:43.755347Z",
        "url": "https://files.pythonhosted.org/packages/83/08/b8200d905973a2e18b60f47cb8c9a78f31e298172d506a1d60f2365e0bda/pmaw-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5db53e20924a94cf20a24989b51eed06bf69e6302872f27779e2681f9f6cf04",
          "md5": "a7b721efe0e0747d4fbd3568a7ea223d",
          "sha256": "d45b52fac9fa97c09df4a26007e596da294bd126555760b467ac3a1e22eb3728"
        },
        "downloads": -1,
        "filename": "pmaw-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7b721efe0e0747d4fbd3568a7ea223d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 21732,
        "upload_time": "2021-02-14T20:29:44",
        "upload_time_iso_8601": "2021-02-14T20:29:44.837783Z",
        "url": "https://files.pythonhosted.org/packages/b5/db/53e20924a94cf20a24989b51eed06bf69e6302872f27779e2681f9f6cf04/pmaw-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd83b4666468e059110d382ef22ab40dea893de49212d5a67a175402b93508ba",
          "md5": "fd0b862a73ff46f25ca25528cbbd1552",
          "sha256": "9185863398b50b75185f32f291b5cec2fb61e3afb3d8e9a0af817d3801361f1b"
        },
        "downloads": -1,
        "filename": "pmaw-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd0b862a73ff46f25ca25528cbbd1552",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 18197,
        "upload_time": "2021-02-16T20:10:50",
        "upload_time_iso_8601": "2021-02-16T20:10:50.713650Z",
        "url": "https://files.pythonhosted.org/packages/bd/83/b4666468e059110d382ef22ab40dea893de49212d5a67a175402b93508ba/pmaw-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff8dbe225b09acdf31c5ccfcf7629b3c23ea1a757c5c91c3fc9d80cee99c42be",
          "md5": "8cd8d5d9167088135bf618520a11ac74",
          "sha256": "0897e3313b703f2ba4421314c145f73e335cd49637d2def99f14fc234980f4dc"
        },
        "downloads": -1,
        "filename": "pmaw-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8cd8d5d9167088135bf618520a11ac74",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 21740,
        "upload_time": "2021-02-16T20:10:52",
        "upload_time_iso_8601": "2021-02-16T20:10:52.135550Z",
        "url": "https://files.pythonhosted.org/packages/ff/8d/be225b09acdf31c5ccfcf7629b3c23ea1a757c5c91c3fc9d80cee99c42be/pmaw-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67467109ba50da797c8e71fd6392a47a87fa81ea0abd00dd9b5757683e7c575e",
          "md5": "60fcf7f466f629e5bf071506eb468f1a",
          "sha256": "2e9385f00708f57864b444afb2a0b687c25ad71895b72900bae950cca5690f91"
        },
        "downloads": -1,
        "filename": "pmaw-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60fcf7f466f629e5bf071506eb468f1a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 18209,
        "upload_time": "2021-02-17T23:55:52",
        "upload_time_iso_8601": "2021-02-17T23:55:52.907837Z",
        "url": "https://files.pythonhosted.org/packages/67/46/7109ba50da797c8e71fd6392a47a87fa81ea0abd00dd9b5757683e7c575e/pmaw-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "931e0fc9dac9e101f31a61377a996301bd00b5e81d38af6fe6d3d64c4c881dd9",
          "md5": "60bfce5140836b2b6247df85331b19ac",
          "sha256": "e15510a6866dbdba25595a6c1c1a0d17ca8bb7b78e9a9095e93820179decd205"
        },
        "downloads": -1,
        "filename": "pmaw-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "60bfce5140836b2b6247df85331b19ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 21747,
        "upload_time": "2021-02-17T23:55:54",
        "upload_time_iso_8601": "2021-02-17T23:55:54.169473Z",
        "url": "https://files.pythonhosted.org/packages/93/1e/0fc9dac9e101f31a61377a996301bd00b5e81d38af6fe6d3d64c4c881dd9/pmaw-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1ffa189c2aff444e214e96b878681e720ce610c7f91db5c798848239b88ddd0",
          "md5": "8bd20e2234ddc48fa24377db5a886d46",
          "sha256": "7db7ac142ae7875e022e62ce9499e23a32db5fb32e9bea9961ac584472340637"
        },
        "downloads": -1,
        "filename": "pmaw-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8bd20e2234ddc48fa24377db5a886d46",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 18217,
        "upload_time": "2021-02-19T11:52:27",
        "upload_time_iso_8601": "2021-02-19T11:52:27.950405Z",
        "url": "https://files.pythonhosted.org/packages/c1/ff/a189c2aff444e214e96b878681e720ce610c7f91db5c798848239b88ddd0/pmaw-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "723f136fe1bc9f8df221d20f52c503657072e32b5aba0ce84a8348b8f8d0522c",
          "md5": "934226afda7e1c1df701a4693a927fea",
          "sha256": "48c29c37835ec2a5e68ede9005ae80bd112c1f4813de899ac95dd47c7a60087e"
        },
        "downloads": -1,
        "filename": "pmaw-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "934226afda7e1c1df701a4693a927fea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 21752,
        "upload_time": "2021-02-19T11:52:29",
        "upload_time_iso_8601": "2021-02-19T11:52:29.022984Z",
        "url": "https://files.pythonhosted.org/packages/72/3f/136fe1bc9f8df221d20f52c503657072e32b5aba0ce84a8348b8f8d0522c/pmaw-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f390b625bb7d220dffd128a8c8f6046ad06057a4f263c648e1e4066c05a7c845",
          "md5": "1f22250a8e08289bea9242d3326d28fe",
          "sha256": "51efa358f2ec3eb9572d57f870fd3818ee67f3df9471d25e7ae22540b0cf3176"
        },
        "downloads": -1,
        "filename": "pmaw-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f22250a8e08289bea9242d3326d28fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 18253,
        "upload_time": "2021-03-05T12:11:39",
        "upload_time_iso_8601": "2021-03-05T12:11:39.145422Z",
        "url": "https://files.pythonhosted.org/packages/f3/90/b625bb7d220dffd128a8c8f6046ad06057a4f263c648e1e4066c05a7c845/pmaw-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac8feb8e01698bb983f3199bdf1ba650390328347d522d2195814ce256bbf452",
          "md5": "c5ee5b1e2bed6a4daa7f0dd0e7f0b8a9",
          "sha256": "64fd0f776e686e8eac8f1397326079d2c36a2dc5bbe559e16c6f6fbe73b0de5b"
        },
        "downloads": -1,
        "filename": "pmaw-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c5ee5b1e2bed6a4daa7f0dd0e7f0b8a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 21779,
        "upload_time": "2021-03-05T12:11:40",
        "upload_time_iso_8601": "2021-03-05T12:11:40.574573Z",
        "url": "https://files.pythonhosted.org/packages/ac/8f/eb8e01698bb983f3199bdf1ba650390328347d522d2195814ce256bbf452/pmaw-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99709a1b0e000914eef5b5ea2c7630887d0ca1a2ec60cc0cfb5eb96ee919054d",
          "md5": "0cca578875f03aa8ad8a67369bc69f23",
          "sha256": "357f4609aa382164af099145594f1bbc2bc6fa4f9b0f2d33c8ac4efccf9cd682"
        },
        "downloads": -1,
        "filename": "pmaw-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0cca578875f03aa8ad8a67369bc69f23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 18348,
        "upload_time": "2021-04-21T12:20:26",
        "upload_time_iso_8601": "2021-04-21T12:20:26.889677Z",
        "url": "https://files.pythonhosted.org/packages/99/70/9a1b0e000914eef5b5ea2c7630887d0ca1a2ec60cc0cfb5eb96ee919054d/pmaw-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f00c8ae44a6fe6383410b68a16932d7f2a02e2691edddbd933662577371a1d25",
          "md5": "83234bbfd9114568e7e357014daba596",
          "sha256": "ca13bdfd9669c09b7d072c6115ef77a10014529fe4eb0747277a06bdf753e379"
        },
        "downloads": -1,
        "filename": "pmaw-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "83234bbfd9114568e7e357014daba596",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 21838,
        "upload_time": "2021-04-21T12:20:28",
        "upload_time_iso_8601": "2021-04-21T12:20:28.453564Z",
        "url": "https://files.pythonhosted.org/packages/f0/0c/8ae44a6fe6383410b68a16932d7f2a02e2691edddbd933662577371a1d25/pmaw-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "632b8960ff3bfe60133ab4c79afc3cecaf6d421f90dda2415f52f5520cfa6cc1",
          "md5": "497add68029806cc3d2f384c3a541d02",
          "sha256": "5acb8e4659fdb2878461bdfb88833479aa72b4aa4ca421679bcbfb7a080824ef"
        },
        "downloads": -1,
        "filename": "pmaw-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "497add68029806cc3d2f384c3a541d02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 18428,
        "upload_time": "2021-05-27T10:42:34",
        "upload_time_iso_8601": "2021-05-27T10:42:34.600024Z",
        "url": "https://files.pythonhosted.org/packages/63/2b/8960ff3bfe60133ab4c79afc3cecaf6d421f90dda2415f52f5520cfa6cc1/pmaw-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bf02b904d8bf31413655ddf57ffb23a63a19f592ff766ec8d19705adfd61909",
          "md5": "81b470421de8fcd05647c0ee1c008a0c",
          "sha256": "38716aa55aa15b8df0ca3a5d427db13098831a97e1e1d3fe41c44bbb4c983163"
        },
        "downloads": -1,
        "filename": "pmaw-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "81b470421de8fcd05647c0ee1c008a0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 22653,
        "upload_time": "2021-05-27T10:42:36",
        "upload_time_iso_8601": "2021-05-27T10:42:36.177025Z",
        "url": "https://files.pythonhosted.org/packages/0b/f0/2b904d8bf31413655ddf57ffb23a63a19f592ff766ec8d19705adfd61909/pmaw-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83aa03665c821ecdfd95510389932580f9b795c3da98c77647984aef4d18cdb4",
          "md5": "729d0dec5e9bcdafe2ce3bf4e7bf958b",
          "sha256": "4afce71d5e4bac227e42004da2b9686ba77c8f0aafa8a5c3381b2b56b6b3da1b"
        },
        "downloads": -1,
        "filename": "pmaw-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "729d0dec5e9bcdafe2ce3bf4e7bf958b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 23949,
        "upload_time": "2021-09-11T19:55:22",
        "upload_time_iso_8601": "2021-09-11T19:55:22.217898Z",
        "url": "https://files.pythonhosted.org/packages/83/aa/03665c821ecdfd95510389932580f9b795c3da98c77647984aef4d18cdb4/pmaw-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d7855dfb66daf0623f7b292327873d36b7d6d1b89c397ef5f49e09828e8f1b6",
          "md5": "57686b9c0bad44f8fa4bfa39e60cd8b6",
          "sha256": "2c2e0ef08f70c766b94bb16eaf4dc44ae4806588ce3409f5c7e9e1f2c4600549"
        },
        "downloads": -1,
        "filename": "pmaw-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "57686b9c0bad44f8fa4bfa39e60cd8b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 27362,
        "upload_time": "2021-09-11T19:55:23",
        "upload_time_iso_8601": "2021-09-11T19:55:23.943645Z",
        "url": "https://files.pythonhosted.org/packages/7d/78/55dfb66daf0623f7b292327873d36b7d6d1b89c397ef5f49e09828e8f1b6/pmaw-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94942db7d260577162306e3fde8fc6d1391f30165addc89efd57b9830ea5668a",
          "md5": "4eb47cbab7894751379faa5cce1b12f2",
          "sha256": "499ecc1e73ba45dda80aa4e16a999d7a89934ea6918c3b61e63142a8006f8df0"
        },
        "downloads": -1,
        "filename": "pmaw-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4eb47cbab7894751379faa5cce1b12f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 25606,
        "upload_time": "2021-10-01T13:59:57",
        "upload_time_iso_8601": "2021-10-01T13:59:57.382637Z",
        "url": "https://files.pythonhosted.org/packages/94/94/2db7d260577162306e3fde8fc6d1391f30165addc89efd57b9830ea5668a/pmaw-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f9f8b2b954d6179d9f556238ec735dd6a634f8b79abada5125d28ffcc5192d6",
          "md5": "40df5935ce5c672c3681183789014704",
          "sha256": "c289347d76dab1f29776aeaafa401f0dc31089190b8e6be2f007bfdaa5f5ace7"
        },
        "downloads": -1,
        "filename": "pmaw-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "40df5935ce5c672c3681183789014704",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 27482,
        "upload_time": "2021-10-01T13:59:58",
        "upload_time_iso_8601": "2021-10-01T13:59:58.789971Z",
        "url": "https://files.pythonhosted.org/packages/7f/9f/8b2b954d6179d9f556238ec735dd6a634f8b79abada5125d28ffcc5192d6/pmaw-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "455578ed8433c10b2b9a00345c6c9d77ff13697ab180b96140f1013090854912",
          "md5": "1f745bb1c40d2de39c971ed4e7eeab8c",
          "sha256": "a68dc6970d3f5b74fd7e689b7fc02d5381bee81dc40c74a11216ace88bd6be0c"
        },
        "downloads": -1,
        "filename": "pmaw-2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f745bb1c40d2de39c971ed4e7eeab8c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 25672,
        "upload_time": "2021-11-29T15:28:21",
        "upload_time_iso_8601": "2021-11-29T15:28:21.626344Z",
        "url": "https://files.pythonhosted.org/packages/45/55/78ed8433c10b2b9a00345c6c9d77ff13697ab180b96140f1013090854912/pmaw-2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18a380405da258a78f2f3169a03845bfef8a5738e51226302b62f589ae2f5370",
          "md5": "8c75ecafc99b6cf31cce11fbe655df7f",
          "sha256": "e9b922541e1f7025c9c8583f52430bdebee73f4be09c9df4294b5934ee904e9e"
        },
        "downloads": -1,
        "filename": "pmaw-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8c75ecafc99b6cf31cce11fbe655df7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 27528,
        "upload_time": "2021-11-29T15:28:23",
        "upload_time_iso_8601": "2021-11-29T15:28:23.081080Z",
        "url": "https://files.pythonhosted.org/packages/18/a3/80405da258a78f2f3169a03845bfef8a5738e51226302b62f589ae2f5370/pmaw-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36ee6f8f251fbdc4fae8c8c5ac3d017a10e964472a5c058ad2375846a19ee33c",
          "md5": "2066f25f76164e211ef3c735487e6bc2",
          "sha256": "55e41450e6accd7500a4faced8c004d6214471659f6c9a7ac0b320969bf8fcc2"
        },
        "downloads": -1,
        "filename": "pmaw-2.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2066f25f76164e211ef3c735487e6bc2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 25678,
        "upload_time": "2022-01-07T18:17:35",
        "upload_time_iso_8601": "2022-01-07T18:17:35.920476Z",
        "url": "https://files.pythonhosted.org/packages/36/ee/6f8f251fbdc4fae8c8c5ac3d017a10e964472a5c058ad2375846a19ee33c/pmaw-2.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a4b04705c2b6d72f59837f5a37c83a6dd08968b259cd83400bf7ae8f69f3edb",
          "md5": "8e8713241ecc8175ddcc3a9f5175dd12",
          "sha256": "3c002bd622d364c870b868d62903991e61601ea79417927754e87b32c510dd40"
        },
        "downloads": -1,
        "filename": "pmaw-2.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8e8713241ecc8175ddcc3a9f5175dd12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 27559,
        "upload_time": "2022-01-07T18:17:38",
        "upload_time_iso_8601": "2022-01-07T18:17:38.109524Z",
        "url": "https://files.pythonhosted.org/packages/5a/4b/04705c2b6d72f59837f5a37c83a6dd08968b259cd83400bf7ae8f69f3edb/pmaw-2.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a892cb67931d4c508e8b81832fd406d0e94896336fca8411d360ccfaa355bb4",
          "md5": "ac4e8f7830d6f85eb798be2a066eee7d",
          "sha256": "e90d0224a2efd34e862d52f21f62b3f09aaae2d1bbab43b6776a28045e636dd0"
        },
        "downloads": -1,
        "filename": "pmaw-2.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac4e8f7830d6f85eb798be2a066eee7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 25627,
        "upload_time": "2022-02-20T17:41:11",
        "upload_time_iso_8601": "2022-02-20T17:41:11.949789Z",
        "url": "https://files.pythonhosted.org/packages/0a/89/2cb67931d4c508e8b81832fd406d0e94896336fca8411d360ccfaa355bb4/pmaw-2.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "065d970c20bb91abd34cc34d71f7ad1ec09d06563013214741cab188ac19def9",
          "md5": "7f2172bb11d81810ce2fce1d1448660c",
          "sha256": "610d8c5fac1827d4a316f307a4f5faae0951144432af6200f27d5b7a0dcbed5b"
        },
        "downloads": -1,
        "filename": "pmaw-2.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7f2172bb11d81810ce2fce1d1448660c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 27507,
        "upload_time": "2022-02-20T17:41:13",
        "upload_time_iso_8601": "2022-02-20T17:41:13.905276Z",
        "url": "https://files.pythonhosted.org/packages/06/5d/970c20bb91abd34cc34d71f7ad1ec09d06563013214741cab188ac19def9/pmaw-2.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80fae8d30b2aa2016368640513d68a4a861d1b2563b9c4e29187d1807adcf226",
          "md5": "88d456682c227b66f554e76b3ad60100",
          "sha256": "78b381cc2aec81ddb2615387b483bafa9729ee926a3edf0f2a55453ba17a048d"
        },
        "downloads": -1,
        "filename": "pmaw-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "88d456682c227b66f554e76b3ad60100",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 29485,
        "upload_time": "2022-12-24T05:46:39",
        "upload_time_iso_8601": "2022-12-24T05:46:39.944072Z",
        "url": "https://files.pythonhosted.org/packages/80/fa/e8d30b2aa2016368640513d68a4a861d1b2563b9c4e29187d1807adcf226/pmaw-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "171a4d29f78920755fa4dae180390a7844633a8e2d9e4e6a1d85cdc1bb11a750",
          "md5": "3199b783cb8445856d3365727a1a5224",
          "sha256": "5b9d0fe7b44ea03e675240abc2d62b76e12c07f09c2e2d61bb9d307bc8375442"
        },
        "downloads": -1,
        "filename": "pmaw-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3199b783cb8445856d3365727a1a5224",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 30293,
        "upload_time": "2022-12-24T05:46:41",
        "upload_time_iso_8601": "2022-12-24T05:46:41.999451Z",
        "url": "https://files.pythonhosted.org/packages/17/1a/4d29f78920755fa4dae180390a7844633a8e2d9e4e6a1d85cdc1bb11a750/pmaw-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80fae8d30b2aa2016368640513d68a4a861d1b2563b9c4e29187d1807adcf226",
        "md5": "88d456682c227b66f554e76b3ad60100",
        "sha256": "78b381cc2aec81ddb2615387b483bafa9729ee926a3edf0f2a55453ba17a048d"
      },
      "downloads": -1,
      "filename": "pmaw-3.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "88d456682c227b66f554e76b3ad60100",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 29485,
      "upload_time": "2022-12-24T05:46:39",
      "upload_time_iso_8601": "2022-12-24T05:46:39.944072Z",
      "url": "https://files.pythonhosted.org/packages/80/fa/e8d30b2aa2016368640513d68a4a861d1b2563b9c4e29187d1807adcf226/pmaw-3.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "171a4d29f78920755fa4dae180390a7844633a8e2d9e4e6a1d85cdc1bb11a750",
        "md5": "3199b783cb8445856d3365727a1a5224",
        "sha256": "5b9d0fe7b44ea03e675240abc2d62b76e12c07f09c2e2d61bb9d307bc8375442"
      },
      "downloads": -1,
      "filename": "pmaw-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3199b783cb8445856d3365727a1a5224",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 30293,
      "upload_time": "2022-12-24T05:46:41",
      "upload_time_iso_8601": "2022-12-24T05:46:41.999451Z",
      "url": "https://files.pythonhosted.org/packages/17/1a/4d29f78920755fa4dae180390a7844633a8e2d9e4e6a1d85cdc1bb11a750/pmaw-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}