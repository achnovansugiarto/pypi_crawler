{
  "info": {
    "author": "Conrad Stansbury",
    "author_email": "chstansbury@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Operating System :: Microsoft :: Windows :: Windows 7",
      "Operating System :: Microsoft :: Windows :: Windows 8",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=========\n DAQuiri\n=========\n\ndaquiri := DAQ + UI generation + Reactivity + Instruments\n\nYou should be spending your time designing and running experiments,\nnot your DAQ software.\n\nDAQuiri is a nuts and bolts included framework for scientific data acquisition (DAQ),\ndesigned for rapid prototyping and the challenging DAQ environment of angle resolved\nphotoemission spectroscopy. If you specify how to sequence motions and data collection,\ndaquiri can manage the user interface, talking to and managing instruments,\nplotting interim data, data collation, and IO for you.\n\nDAQuiri also has logging and notification support built in and can let you know\nover email or Slack when your experiment finishes (successfully or not!).\n\nIf DAQuiri doesn't do exactly what you need, get in contact with us or\ncheck out the examples. There's a good chance that if it isn't built in,\nDAQuiri is flexible enough to support your use case.\n\n\nRequirements\n============\n\n* Python 3.7 over\n* NoArch\n\nFeatures\n========\n\nAutomated DAQ\n-------------\n\nDAQuiri wraps instruments and data sources in a uniform interface, if you specify how\nto sequence motion and acquisition, DAQuiri handles async collection, IO, and visualizing\nyour data as it is acquired.\n\nUI Generation\n-------------\n\nDAQuiri using PyQt and Qt5 to generate UIs for your experiments. It also\nprovides simple bindings (daquiri.ui) that make making managing the day to day\nof working on PyQt simpler, if you need to do UI scripting of your own.\n\nIt also ships with a window manager that you can register your windows against,\nmaking it seamless to add extra functionality to your experiments.\n\nThe DAQuiri UI bindings are wrapped to publish as RxPY observables, making it easier\nto integrate your PyQT UI into a coherent asynchronous application.\n\nInstallation\n============\n\n::\n\n  $ pip install daquiri\n\n\nUsage\n=====\n\nFor usage examples, explore the scripts in the examples folder. You can run them with\n\n::\n\n  $ python -m daquiri.examples.[example_name]\n\n\nreplacing [example_name] with one of:\n\n1. minimal_app\n2. plot_data\n3. simple_actors\n4. wrapping_instruments\n5. scanning_experiment\n6. scanning_experiment_revisited\n\n\n\nChangeLog\n=========\n\n0.0.2 (2019-09-10)\n------------------\n\nAdded scan modes + publish examples through the examples module.\n\n0.0.1 (2019-09-09)\n------------------\n\n* Essentially working for basic applications",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://daquiri.readthedocs.org",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "daquiri",
    "package_url": "https://pypi.org/project/daquiri/",
    "platform": "",
    "project_url": "https://pypi.org/project/daquiri/",
    "project_urls": {
      "Homepage": "https://daquiri.readthedocs.org"
    },
    "release_url": "https://pypi.org/project/daquiri/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7.0",
    "summary": "DAQuiri = DAQ + UI Generation + Reactivity + Instruments: A simple scientific DAQ framework.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5810866,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21428fabfcc6e91f1e747a14a27077402b82e6a1dffbe0db75b9e2feccdd6bdb",
          "md5": "8201b731dcc80cb243630c26fc35878f",
          "sha256": "e9f889c60a78c9a6209414591b4a35f6a8c11015a49cc1c81c9d00d7dd50c72b"
        },
        "downloads": -1,
        "filename": "daquiri-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8201b731dcc80cb243630c26fc35878f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 36227,
        "upload_time": "2019-09-10T04:35:02",
        "upload_time_iso_8601": "2019-09-10T04:35:02.732118Z",
        "url": "https://files.pythonhosted.org/packages/21/42/8fabfcc6e91f1e747a14a27077402b82e6a1dffbe0db75b9e2feccdd6bdb/daquiri-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6bda98659beefc0c63f9a1997cb7c9f5e60915b5dd4769e83d82c1680a702b1",
          "md5": "2c281ee939b0da515c0b918f34e1d054",
          "sha256": "205feca3df7965f3fac81cb2ad2a27e116e069b1c285152cbf267f44bd8b252a"
        },
        "downloads": -1,
        "filename": "daquiri-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2c281ee939b0da515c0b918f34e1d054",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 40942,
        "upload_time": "2019-09-10T19:30:46",
        "upload_time_iso_8601": "2019-09-10T19:30:46.293928Z",
        "url": "https://files.pythonhosted.org/packages/c6/bd/a98659beefc0c63f9a1997cb7c9f5e60915b5dd4769e83d82c1680a702b1/daquiri-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6bda98659beefc0c63f9a1997cb7c9f5e60915b5dd4769e83d82c1680a702b1",
        "md5": "2c281ee939b0da515c0b918f34e1d054",
        "sha256": "205feca3df7965f3fac81cb2ad2a27e116e069b1c285152cbf267f44bd8b252a"
      },
      "downloads": -1,
      "filename": "daquiri-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2c281ee939b0da515c0b918f34e1d054",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0",
      "size": 40942,
      "upload_time": "2019-09-10T19:30:46",
      "upload_time_iso_8601": "2019-09-10T19:30:46.293928Z",
      "url": "https://files.pythonhosted.org/packages/c6/bd/a98659beefc0c63f9a1997cb7c9f5e60915b5dd4769e83d82c1680a702b1/daquiri-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}