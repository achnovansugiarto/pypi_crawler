{
  "info": {
    "author": "Giovanni Salinas",
    "author_email": "gbs3@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<img src=\"media/pystone.png\" align=\"right\" width=\"125\">\n\n# pystone\n\nA command line tool written in Python for translating text through Reverso.\n\n\n## Requirements\n\nTo be able to use `pystone`, you will need at least Python 3.6 or higher. This tool makes use of the [requests](https://github.com/psf/requests) and [playsound](https://github.com/TaylorSMarks/playsound) packages.\n\n\n## Installation\n\nTo install `pystone`, run the following in your terminal:\n\n```\n$ pip install pystone\n```\n\n## Usage\n\nIn order to use `pystone`, simply type and enter it in your terminal:\n\n```\n$ pystone\n```\n\nThis will activate a command line interpreter that mimics a *session* and allows for quick <kbd>tab</kbd> completions, which in turn optimizes ease of use. It will remember your current source and target languages and will allow you to modify them within the same session. If you want to translate a piece of text into a variety of languages, you can do that without having to repeatedly enter the same text and/or command line arguments.\n\n### Command Line Arguments\n\nOn that note, I should explain that there are command line arguments that you *can* use but they're completely optional.\n\nHere they are:\n\n```\nTranslation options\n\noptional arguments:\n    -h, --help                                  show this help message and exit\n    -s LANGUAGE, --source LANGUAGE              the source language (default: English)\n    -t LANGUAGE, --target LANGUAGE              the target language\n    --text TEXT                                 the text to be translated\n```\n\nExample:\n\n```\npystone --target Spanish\n```\n\nI don't expect these commands to be used very often but they're there in case a user preemptively knows which languages they want to translate between or happens to have a specific text in mind.\n\n### Documented Commands\n\nOnce the interpreter has been activated, there are several commands that are at your disposal:\n\n```\nDocumented commands (type help <topic>):\n========================================\nalternatives  audio  deepl  examples  exit  help  reverse set settings  translate\n```\n\n#### settings\n\n`settings` accepts no arguments and outputs your current configuration to the console:\n\n```\n    Source language: English\n    Target language: None\n    Current text: None\n    Most recent translation: None\n```\n\n#### set\n\n`set` accepts at most two space-separated arguments and manages your source and target languages. If only one argument is provided, your target language will be set to that language. If two arguments are provided, both your source language and target language will respectively be set to those languages:\n\n```\n(pystone) set Spanish # target language -> Spanish\n\n# ==================\n# or\n# ==================\n\n(pystone) set German French # source language -> German, target language -> French\n```\n\n##### Flexibility\n\nThe `set` command is incredibly flexible in that the languages don't need to be specified in English or capitalized and will accept letters with accent marks:\n\n```\n(pystone) set Anglais español\n```\n\nIt will even attempt to determine the languages if you input short abbreviations (*at least 3 characters are recommended for each language*):\n\n```\n(pystone) set fra spa # source language -> French, target language -> Spanish\n```\n\n#### translate\n\n`translate` accepts text as input and outputs a translation of the text to your target language:\n\n```\n(pystone) translate What time is it?\n\n    What time is it?\n\n    ¿Qué hora es?\n```\n\n#### examples\n\n`examples` accepts no arguments and either outputs example sentences using your translation (if there are any available) or outputs nothing:\n\n```\n(pystone) examples\n\n¿Qué hora es? - Las dos.\n¿Qué hora es? son cinco para las diez.\n¿Qué hora es? - Las nueve.\n¿Qué hora es? - Las tres y media.\n¿Qué hora es? Pulse para actualizarla.\n¡Dolokhov! ¿Qué hora es?\n¿Qué hora es? -Las cuatro.\n¿No tiene reloj? - ¿Qué hora es? ...le lanza un puñetazo contundente.\nDiscúlpeme. ¿Qué hora es?\n¿Qué hora es? eh, creo que es, mediodía.\n```\n\n#### alternatives\n\n`alternatives` accepts no arguments and either outputs other translations that could be more accurate (if there are any available) or outputs nothing:\n\n```\n(pystone) alternatives\n\n¿Qué hora es ahora?\n¿QUÉ TIEMPO ES ESTE?\nqué hora es!\nla hora que es?\n¿qué horas son?\n```\n\n#### audio\n\n`audio` accepts no arguments and outputs audio of a text-to-speech voice reader reading your translation:\n\n```\n(pystone) audio\n\n# 🎶¿Qué hora es?🎶\n```\n\n#### reverse\n\n`reverse` accepts no arguments and swaps the languages for the source language and target language with each other:\n\n```\n(pystone) reverse\n\n# source language gets set to target language\n# target language gets set to source language\n```\n\n#### exit\n\n`exit` accepts no arguments and quits the program.\n\n#### help\n\n`help` accepts at most one argument. If no arguments are provided, the available commands will be printed to the console. If an argument is provided and that argument is the name of a command, a short description of the command will be printed to the console:\n\n```\n(pystone) help set\n\nExpects 1 or 2 languages separated by spaces as input.\n        If one argument is provided, the target language will be\n        changed to the specified language. If two arguments are provided,\n        both the source language and the target language will\n        be changed (in that order).\n```\n\n#### deepl\n\n*WARNING: this command is currently in experimental mode and I do **NOT** recommend using it without a VPN or a proxy*. *Once I deem it usable/safe, this warning will be removed but there is still much testing to be done*.\n\n*NOTE: translating **to** English or Portugese is not currently supported.*\n\n`deepl` works like `translate`. It accepts text as input and outputs a translation from DeepL of the text to your target language.\n\n\n## Supported Languages\n\nA table consisting of the currently supported languages:\n\n| Language   | Reverso | DeepL |\n| :------:   | :-----: | :---: |\n| Arabic     | ✔ | ❌ |\n| Chinese    | ✔ | ✔ |\n| Dutch      | ✔ | ✔ |\n| English    | ✔ | ✔ |\n| French     | ✔ | ✔ |\n| German     | ✔ | ✔ |\n| Hebrew     | ✔ | ❌ |\n| Italian    | ✔ | ✔ |\n| Japanese   | ✔ | ✔ |\n| Polish     | ✔ | ✔ |\n| Portuguese | ✔ | ✔ |\n| Romanian   | ✔ | ❌ |\n| Russian    | ✔ | ✔ |\n| Spanish    | ✔ | ✔ |\n| Turkish    | ✔ | ❌ |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GBS3/pystone",
    "keywords": "pystone,translation,language,python,reverso,deepl",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pystone",
    "package_url": "https://pypi.org/project/pystone/",
    "platform": "",
    "project_url": "https://pypi.org/project/pystone/",
    "project_urls": {
      "Homepage": "https://github.com/GBS3/pystone",
      "Source": "https://github.com/GBS3/pystone"
    },
    "release_url": "https://pypi.org/project/pystone/0.1.0/",
    "requires_dist": [
      "requests",
      "playsound"
    ],
    "requires_python": "",
    "summary": "A command line tool written in Python for translating text through Reverso.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13431077,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "915206816b73528d3706811f9b9fe8b051a48f5598f7c0a83316e0eb46cea468",
          "md5": "595f8f982ff4ffda9ed4b66111224982",
          "sha256": "786af429d2e2a2e52a6eacdad78cecea3ce91003304f7e18e22523a0166f4401"
        },
        "downloads": -1,
        "filename": "pystone-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "595f8f982ff4ffda9ed4b66111224982",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12369,
        "upload_time": "2021-02-10T05:06:41",
        "upload_time_iso_8601": "2021-02-10T05:06:41.933779Z",
        "url": "https://files.pythonhosted.org/packages/91/52/06816b73528d3706811f9b9fe8b051a48f5598f7c0a83316e0eb46cea468/pystone-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af5a4af4c9659be9ebffae26f50d3215915b34745fd894822eb2dd08b680922c",
          "md5": "6ef2969e45145750d5f7ad2f6c916242",
          "sha256": "dcd4c85811f5fb1efad4aa4a215529ebbca0abda79ed18ef76082a29ac99ea0a"
        },
        "downloads": -1,
        "filename": "pystone-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6ef2969e45145750d5f7ad2f6c916242",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13414,
        "upload_time": "2021-02-10T05:06:43",
        "upload_time_iso_8601": "2021-02-10T05:06:43.072081Z",
        "url": "https://files.pythonhosted.org/packages/af/5a/4af4c9659be9ebffae26f50d3215915b34745fd894822eb2dd08b680922c/pystone-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "915206816b73528d3706811f9b9fe8b051a48f5598f7c0a83316e0eb46cea468",
        "md5": "595f8f982ff4ffda9ed4b66111224982",
        "sha256": "786af429d2e2a2e52a6eacdad78cecea3ce91003304f7e18e22523a0166f4401"
      },
      "downloads": -1,
      "filename": "pystone-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "595f8f982ff4ffda9ed4b66111224982",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12369,
      "upload_time": "2021-02-10T05:06:41",
      "upload_time_iso_8601": "2021-02-10T05:06:41.933779Z",
      "url": "https://files.pythonhosted.org/packages/91/52/06816b73528d3706811f9b9fe8b051a48f5598f7c0a83316e0eb46cea468/pystone-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af5a4af4c9659be9ebffae26f50d3215915b34745fd894822eb2dd08b680922c",
        "md5": "6ef2969e45145750d5f7ad2f6c916242",
        "sha256": "dcd4c85811f5fb1efad4aa4a215529ebbca0abda79ed18ef76082a29ac99ea0a"
      },
      "downloads": -1,
      "filename": "pystone-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6ef2969e45145750d5f7ad2f6c916242",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13414,
      "upload_time": "2021-02-10T05:06:43",
      "upload_time_iso_8601": "2021-02-10T05:06:43.072081Z",
      "url": "https://files.pythonhosted.org/packages/af/5a/4af4c9659be9ebffae26f50d3215915b34745fd894822eb2dd08b680922c/pystone-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}