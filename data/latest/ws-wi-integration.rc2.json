{
  "info": {
    "author": "WhiteSource Professional Services",
    "author_email": "ps@whitesourcesoftware.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![Logo](https://whitesource-resources.s3.amazonaws.com/ws-sig-images/Whitesource_Logo_178x44.png)](https://www.whitesourcesoftware.com/)\n[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://opensource.org/licenses/Apache-2.0)\n[![WS projects cleanup](https://github.com/whitesource-ps/ws-cleanup-tool/actions/workflows/ci.yml/badge.svg)](https://github.com/whitesource-ps/ws-cleanup-tool/actions/workflows/ci.yml)\n[![Python 3.7](https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/Blue_Python_3.7%2B_Shield_Badge.svg/86px-Blue_Python_3.7%2B_Shield_Badge.svg.png)](https://www.python.org/downloads/release/python-370/)\n[![PyPI](https://img.shields.io/pypi/v/ws-cleanup-tool?style=plastic)](https://pypi.org/project/ws-cleanup-tool/)\n\n# WhiteSource Integration for Azure Work Items cloud platform - UNDER MAINTENANCE\n### Tool to proceed 2-ways integrations between WS entities and Azure Work Items \n* The tool creates and updates Workitems tasks for product\\project in **WhiteSource** Organization. \n* Full parameters list is available below\n* The tool can be configured :\n  * By configuring params.config on the executed dir or passing a path to file in the same format.\n\n## Supported Operating Systems\n- **Linux (Bash):**\tCentOS, Debian, Ubuntu, RedHat\n- **Windows (PowerShell):**\t10, 2012, 2016\n\n## Pre-requisites\n* Python 3.8+\n\n## Permissions\n* The user used to execute the tool has to have \"Organization Administrator\" or \"Product Administrator\" on all the maintained products and \"Organization Auditor\" permissions.\n* It is recommended to use a service user.\n* The user has to have permissions for creating and updating Work Items tasks in Azure DevOps organization. \n\n## Installation and Execution from PyPi (recommended):\n1. Install by executing: `pip install ws-wi-integration`\n2. Configure the appropriate parameters either by using in `params.config`.\n3. Execute the tool (`ws_wi_integration`). \n\n## Installation and Execution from GitHub:\n1. Download and unzip **ws-wi-integration.zip** \n2. Install requirements: `pip install -r requirements.txt`\n3. Configure the appropriate parameters either by in `params.config`.\n4. Execute: `python ws_wi_integration.py` \n\n## Full Usage parameters in the params.config file.\n###Structure of params.config file:\n\n[DEFAULT]  \nwsuserkey = **your WS user Key**  \nwsorgtoken = **your WS Org Token**  \nwsurl = https://saas.whitesourcesoftware.com  \nazureurl = https://dev.azure.com/  \nazureorg = **Your Azure Org**  \nazurepat = **Your Azure PAT (Personal Access Token)**  \nmodificationtypes = POLICY_MATCH  \nlastrun = **DateTime of last run** (Format YYY-MM-DD HH:MM:SS. Example: 2022-05-26 10:31:32)  \nutcdelta = -3   \nsynctime = 5  \nsyncrun = True  \ninitialsync = False  \ninitialstartdate = **Start date** for initial synchronization process. (Format YYY-MM-DD. Example: 2022-05-26)\n\n[links]  \nazureproject = **Name of your Azure project**  \nwsproducts = **List of your WS product's tokens.**  Separated by comma \nwsprojects = **List of your WS product's tokens.**  Separated by comma\n\n\n**Short description:**  \n1. Sync tool can be run just for one Azure project at this moment  \n2. **azureurl** is URL of Azure DevOps cloud platform. The default value is https://dev.azure.com/  \n3. **azurepat** is Personal Access Token for your Azure account.\n   1. The instruction of getting PAT here: https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops&tabs=Windows  \n4. **wsurl** is URL of WS cloud platform. The default value is https://saas.whitesourcesoftware.com\n5. **modificationtypes** is a List of possible issue's types which can be used in sync process.  \n   1. Possible values are : **INVENTORY,METADATA,SCAN,POLICY_MATCH,SCAN_COMMENT,SOURCE_FILE_MATCH**  \n   2. Please, pay attention that values should be provided **without** spaces as described above\n6. **utcdelta** is delta between local time of your server and UTC. For example, delta between local Israel time and UTS is **-3** hours\n7. **wsproducts** is a List of all your product's tokens that should be INCLUDED into Sync process. List separated by comma.      \n8. **wsprojects** is a List of all your project's tokens that should be INCLUDED into Sync process. List separated by comma.\n   1. Example\n```mermaid\ngraph TD\nProduct_1 --> Project_1\nProduct_1 --> Project_2\nProduct_1 --> Project_3\nProduct_2 --> Project_4\nProduct_2 --> Project_5\nProduct_2 --> Project_6\n```  \nIf you want to include to sync process all projects of Product_1 and Project_5 and Project_6 from Product_2 then you parameters should be  \nwsproducts = Product_1  \nwsprojects = Project_5, Project_6  \n**This configuration is equal of the such scheme:**  \nwsproducts =   \nwsprojects = Project_1, Project_2, Project_3, Project_5, Project_6  \n\n5. **synctime** is time period in **MINUTES** for running sync process in **synctime** minutes\n   1. Not recommended setting the value less than 20 minutes\n6. **syncrun** is True or False. **True** means run synchronization in **synctime** minutes\n7. **initialsync**  is True or False. **True** means run initial synchronization for all WS issues  \n8. **initialstartdate** is start date of synchronization process \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ws-wi-integration",
    "package_url": "https://pypi.org/project/ws-wi-integration/",
    "platform": null,
    "project_url": "https://pypi.org/project/ws-wi-integration/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/ws-wi-integration/0.0.1/",
    "requires_dist": [
      "DateTime (==4.4)",
      "certifi (==2022.5.18.1)",
      "charset-normalizer (==2.0.12)",
      "idna (==3.3)",
      "isodate (==0.6.1)",
      "msrest (==0.6.21)",
      "oauthlib (==3.2.0)",
      "pytz (==2022.1)",
      "requests-oauthlib (==1.3.1)",
      "requests (==2.27.1)",
      "six (==1.16.0)",
      "sqlparse (==0.4.2)",
      "tzdata (==2022.1)",
      "urllib3 (==1.26.9)",
      "vsts (==0.1.25)",
      "wheel",
      "ws-sdk (==0.9.3)",
      "zope.interface (==5.4.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "WI Integration",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14092815,
  "releases": {
    "0.0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "084f3f7211fb26658d66c1920f4741daaa65a5381550d841f2ec20b01793a61f",
          "md5": "3dc8c4ab7cfc4ce0f24196b1929ab68e",
          "sha256": "4a6eee1ab7c9d0aa302af1c59a41db31b80f279c231b8ed7c7632b3df5f21805"
        },
        "downloads": -1,
        "filename": "ws_wi_integration-0.0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3dc8c4ab7cfc4ce0f24196b1929ab68e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18767,
        "upload_time": "2022-06-10T09:59:28",
        "upload_time_iso_8601": "2022-06-10T09:59:28.736894Z",
        "url": "https://files.pythonhosted.org/packages/08/4f/3f7211fb26658d66c1920f4741daaa65a5381550d841f2ec20b01793a61f/ws_wi_integration-0.0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8df5fa6ca02de047f833e6a145594332aeab40c134254f92558f1031fad81df4",
          "md5": "e1d6f6ca6482d50f9fe6be76ac9713aa",
          "sha256": "9104de29eee16a14803c29310d433f7047c388e82d98f822f15c53a6c201663e"
        },
        "downloads": -1,
        "filename": "ws_wi_integration-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1d6f6ca6482d50f9fe6be76ac9713aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 14587,
        "upload_time": "2022-05-30T09:55:43",
        "upload_time_iso_8601": "2022-05-30T09:55:43.139913Z",
        "url": "https://files.pythonhosted.org/packages/8d/f5/fa6ca02de047f833e6a145594332aeab40c134254f92558f1031fad81df4/ws_wi_integration-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8df5fa6ca02de047f833e6a145594332aeab40c134254f92558f1031fad81df4",
        "md5": "e1d6f6ca6482d50f9fe6be76ac9713aa",
        "sha256": "9104de29eee16a14803c29310d433f7047c388e82d98f822f15c53a6c201663e"
      },
      "downloads": -1,
      "filename": "ws_wi_integration-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e1d6f6ca6482d50f9fe6be76ac9713aa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 14587,
      "upload_time": "2022-05-30T09:55:43",
      "upload_time_iso_8601": "2022-05-30T09:55:43.139913Z",
      "url": "https://files.pythonhosted.org/packages/8d/f5/fa6ca02de047f833e6a145594332aeab40c134254f92558f1031fad81df4/ws_wi_integration-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}