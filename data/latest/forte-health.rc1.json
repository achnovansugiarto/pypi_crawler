{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n\n<p align=\"center\">\n   <a href=\"https://github.com/asyml/ForteHealth/actions/workflows/main.yml\"><img src=\"https://github.com/asyml/ForteHealth/actions/workflows/main.yml/badge.svg\" alt=\"build\"></a>\n   <a href=\"https://github.com/asyml/ForteHealth/blob/master/LICENSE\"><img src=\"https://img.shields.io/badge/license-Apache%202.0-blue.svg\" alt=\"apache license\"></a>\n   <a href=\"https://gitter.im/asyml/community\"><img src=\"http://img.shields.io/badge/gitter.im-asyml/forte-blue.svg\" alt=\"gitter\"></a>\n   <a href=\"https://github.com/psf/black\"><img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" alt=\"code style: black\"></a>\n</p>\n\n<p align=\"center\">\n  <a href=\"#installation\">Download</a> •\n  <a href=\"#quick-start-guide\">Quick Start</a> •\n  <a href=\"#contributing\">Contribution Guide</a> •\n  <a href=\"#license\">License</a> •\n  <a href=\"https://asyml-forte.readthedocs.io/en/latest\">Documentation</a> •\n  <a href=\"https://aclanthology.org/2020.emnlp-demos.26/\">Publication</a>\n</p>\n\n-----------------\n**ForteHealth is in the incubation stage and still under development**\n\n**Bring good software engineering to your Biomedical/Clinical ML solutions, starting from Data!**\n\n**ForteHealth** is a biomedical and clinical domain centric framework designed to engineer complex ML workflows for several tasks including, but not limited to, Medical Entity Recognition, Negation Context Analysis and ICD Coding. ForteHealth allows practitioners to build ML components in a composable and modular way. It works in conjunction with Forte and Forte-wrappers project, and leverages the tools defined there to execute general  tasks vital in the biomedical and clinical use cases. \n\n## Installation\n\nTo install from source:\n\n```bash\ngit clone https://github.com/asyml/ForteHealth.git\ncd ForteHealth\npip install .\n```\n\nTo install some Forte adapter for some existing [libraries](https://github.com/asyml/forte-wrappers#libraries-and-tools-supported):\n\nInstall from PyPI:\n\nForteHealth is not available through PyPI yet, however it will be in the near future.\nSome tools are pre-requisites to a few tasks in our pipeline. For example, forte.spacy and stave maybe needed \nfor a pipeline that implements NER with visualisation and so on, depending on the use case.\n ```bash\n# To install other tools. Check here https://github.com/asyml/forte-wrappers#libraries-and-tools-supported for available tools.\npip install forte.spacy\npip install stave\n```\n\nSome components or modules in forte may require some [extra requirements](https://github.com/asyml/forte/blob/master/setup.py#L45):\n\n## Quick Start Guide\nWriting biomedical NLP pipelines with ForteHealth is easy. The following example creates a simple pipeline that analyzes the sentences, tokens, and medical named entities from a discharge note.\n\nBefore we start, make sure the SpaCy wrapper is installed.\n```bash\npip install forte.spacy\n```\nLet's look at an example of a full fledged medical pipeline:\n\n```python\nfrom fortex.spacy import SpacyProcessor\nfrom forte.data.data_pack import DataPack\nfrom forte.data.readers import PlainTextReader\nfrom forte.pipeline import Pipeline\nfrom ft.onto.base_ontology import Sentence, EntityMention\nfrom ftx.medical.clinical_ontology import NegationContext, MedicalEntityMention\nfrom fortex.health.processors.negation_context_analyzer import (\n    NegationContextAnalyzer,\n)\n\npl = Pipeline[DataPack]()\npl.set_reader(PlainTextReader())\npl.add(SpacyProcessor(), config={\n    processors: [\"sentence\", \"tokenize\", \"pos\", \"ner\", \"umls_link\"],\n    medical_onto_type: \"ftx.medical.clinical_ontology.MedicalEntityMention\"\n    umls_onto_type: \"ftx.medical.clinical_ontology.UMLSConceptLink\"\n    lang: \"en_ner_bc5cdr_md\"\n    })\n\npl.add(NegationContextAnalyzer())\npl.initialize()\n```\n\nHere we have successfully created a pipeline with a few components:\n* a `PlainTextReader` that reads data from text files, given by the `input_path`\n* a `SpacyProcessor` that calls SpaCy to split the sentences, create tokenization, \n  pos tagging, NER and umls_linking\n* finally, the processor `NegationContextAnalyzer` detects negated contexts\n\nLet's see it run in action!\n\n```python\nfor pack in pl.process_dataset(input_path):\n    for sentence in pack.get(Sentence):\n        medical_entities = []\n        for entity in pack.get(MedicalEntityMention, sentence):\n            for ent in entity.umls_entities:\n                medical_entities.append(ent)\n\n        negation_contexts = [\n             (negation_context.text, negation_context.polarity)\n             for negation_context in pack.get(NegationContext, sentence)\n        ]\n\n\tprint(\"UMLS Entity Mentions detected:\", medical_entities, \"\\n\")\n\tprint(\"Entity Negation Contexts:\", negation_contexts, \"\\n\")\n```\n\nWe have successfully created a simple pipeline. In the nutshell, the `DataPack`s are\nthe standard packages \"flowing\" on the pipeline. They are created by the reader, and\nthen pass along the pipeline.\n\nEach processor, such as our `SpacyProcessor` `NegationContextAnalyzer`,\ninterfaces directly with `DataPack`s and do not need to worry about the\nother part of the pipeline, making the engineering process more modular. \n\nThe above mentioned code snippet has been taken from the [Examples](https://github.com/asyml/ForteHealth/tree/master/examples/mimic_iii) folder.\n\nTo learn more about the details, check out of [documentation](https://asyml-forte.readthedocs.io/)!\nThe classes used in this guide can also be found in this repository or\n[the Forte Wrappers repository](https://github.com/asyml/forte-wrappers/tree/main/src/spacy)\n\n## And There's More\nThe data-centric abstraction of Forte opens the gate to many other opportunities.\nGo to [this](https://github.com/asyml/forte#and-theres-more) link for more information\n\nTo learn more about these, you can visit:\n* [Examples](https://github.com/asyml/ForteHealth/tree/master/examples)\n* [Documentation](https://asyml-forte.readthedocs.io/)\n* Currently we are working on some interesting [tutorials](https://asyml-forte.readthedocs.io/en/latest/index_toc.html), stay tuned for a full set of documentation on how to do NLP with Forte!\n\n\n## Contributing\nThis project is part of the [CASL Open Source](http://casl-project.ai/) family.\n\nIf you are interested in making enhancement to Forte, please first go over our [Code of Conduct](https://github.com/asyml/ForteHealth/master/CODE_OF_CONDUCT.md) and [Contribution Guideline](https://github.com/asyml/ForteHealth/master/CONTRIBUTING.md)\n\n## About\n\n### Supported By\n\n<p align=\"center\">\n   <img src=\"https://user-images.githubusercontent.com/28021889/165799232-2bb9f819-f394-4ade-98b0-c55c751ec8b1.png\", width=\"180\" align=\"top\">\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n   <img src=\"https://user-images.githubusercontent.com/28021889/165799272-9e51b864-04f6-432a-92e8-e0f84e091f72.png\" width=\"180\" align=\"top\">\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n   <img src=\"https://user-images.githubusercontent.com/28021889/165802470-f478de54-6c44-4ec8-8cab-ba74ed1f0163.png\" width=\"180\" align=\"top\">\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n</p>\n\n![image](https://user-images.githubusercontent.com/28021889/165806563-1542aeac-9656-4ad4-bf9c-f9a2e083f5d8.png)\n\n### License\n\n[Apache License 2.0](https://github.com/asyml/forte/blob/master/LICENSE)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/asyml/ForteHealth",
    "keywords": "",
    "license": "Apache License Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "forte.health",
    "package_url": "https://pypi.org/project/forte.health/",
    "platform": null,
    "project_url": "https://pypi.org/project/forte.health/",
    "project_urls": {
      "Homepage": "https://github.com/asyml/ForteHealth"
    },
    "release_url": "https://pypi.org/project/forte.health/0.1.0/",
    "requires_dist": [
      "forte (~=0.2.0)",
      "sortedcontainers (==2.1.0)",
      "numpy (>=1.16.6)",
      "jsonpickle (==1.4)",
      "pyyaml (==5.4)",
      "smart-open (>=1.8.4)",
      "typed-astunparse (==2.1.4)",
      "funcsigs (==1.0.2)",
      "mypy-extensions (==0.4.3)",
      "typed-ast (>=1.4.3)",
      "jsonschema (==3.0.2)",
      "texar-pytorch",
      "typing-inspect (>=0.6.0)",
      "fastapi (==0.65.2)",
      "uvicorn (==0.14.0)",
      "typing (>=3.7.4) ; python_version < \"3.5\"",
      "dataclasses (~=0.7) ; python_version < \"3.7\"",
      "importlib-resources (==5.1.4) ; python_version < \"3.7\"",
      "ddt ; extra == 'test'",
      "testfixtures ; extra == 'test'",
      "transformers (==4.2.2) ; extra == 'test'",
      "protobuf (==3.19.4) ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "NLP pipeline framework for biomedical and clinical domains",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13995926,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b1c0a01e6bfa6de2738e2cbaa3630b75a1d8a95aac6f7dbe90e83adc8c2ce83",
          "md5": "898c2a49a71132e0d54c62b202ccfad4",
          "sha256": "b538cfe12065cbcf58dfdd0a4a4252744a651daada5ce2b7bf5229c588e6c05a"
        },
        "downloads": -1,
        "filename": "forte.health-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "898c2a49a71132e0d54c62b202ccfad4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12606,
        "upload_time": "2022-06-01T02:15:52",
        "upload_time_iso_8601": "2022-06-01T02:15:52.932958Z",
        "url": "https://files.pythonhosted.org/packages/5b/1c/0a01e6bfa6de2738e2cbaa3630b75a1d8a95aac6f7dbe90e83adc8c2ce83/forte.health-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9f2e8b6851f6823c32fc20610d353728c3947b26eed18caafa7f00bc531801f",
          "md5": "eb5a37bc15296644eb42517c25d1d0e0",
          "sha256": "3b6ca8e66573b19dc23ac32f5021ef6833aab207672c5e0ffaef2d69ef43ec7e"
        },
        "downloads": -1,
        "filename": "forte.health-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eb5a37bc15296644eb42517c25d1d0e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11183,
        "upload_time": "2022-06-01T02:15:54",
        "upload_time_iso_8601": "2022-06-01T02:15:54.406597Z",
        "url": "https://files.pythonhosted.org/packages/a9/f2/e8b6851f6823c32fc20610d353728c3947b26eed18caafa7f00bc531801f/forte.health-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b1c0a01e6bfa6de2738e2cbaa3630b75a1d8a95aac6f7dbe90e83adc8c2ce83",
        "md5": "898c2a49a71132e0d54c62b202ccfad4",
        "sha256": "b538cfe12065cbcf58dfdd0a4a4252744a651daada5ce2b7bf5229c588e6c05a"
      },
      "downloads": -1,
      "filename": "forte.health-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "898c2a49a71132e0d54c62b202ccfad4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12606,
      "upload_time": "2022-06-01T02:15:52",
      "upload_time_iso_8601": "2022-06-01T02:15:52.932958Z",
      "url": "https://files.pythonhosted.org/packages/5b/1c/0a01e6bfa6de2738e2cbaa3630b75a1d8a95aac6f7dbe90e83adc8c2ce83/forte.health-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9f2e8b6851f6823c32fc20610d353728c3947b26eed18caafa7f00bc531801f",
        "md5": "eb5a37bc15296644eb42517c25d1d0e0",
        "sha256": "3b6ca8e66573b19dc23ac32f5021ef6833aab207672c5e0ffaef2d69ef43ec7e"
      },
      "downloads": -1,
      "filename": "forte.health-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "eb5a37bc15296644eb42517c25d1d0e0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11183,
      "upload_time": "2022-06-01T02:15:54",
      "upload_time_iso_8601": "2022-06-01T02:15:54.406597Z",
      "url": "https://files.pythonhosted.org/packages/a9/f2/e8b6851f6823c32fc20610d353728c3947b26eed18caafa7f00bc531801f/forte.health-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}