{
  "info": {
    "author": "Akim Mukhtarov",
    "author_email": "akim.int80h@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Televiewshka\n\n> Note: as for now, this is neither stable nor working code.\nBeing Created in ... purposes it is a subject for further updates and improvements\n\n_viewshka_ - Russian noun: informal of eng. \"view\", obtained by adding a diminutive suffix \"shka\"\n\nTeleviewshka allows you develop UI & logic for telegram bots with class based views.\nIn views you can define its content and how user actions and replies must be handled on it.\nWhen all stuff related particular step in user flow is held in one class, you can clearly\nsee relationship between components\n\nTeleviewshka supposed to be developed in such a manner to be compatible\nwith a bunch of libs and frameworks for telegram bot api widely used by community\n\nI guess I should write few adaptors for this purpose someday\n\n## (Supposed) Example\n\n```py\nfrom telebot import TeleBot\nfrom televiewshka import KeyboardView, \\\n    KeyboardLayout, Button, adaptors, handler, render\n\n# create adaptor for your lib/framework\nbot = TeleBot(\"super-secret\")\nbot = adaptors.create_adaptor(bot)\n\n\n# specify views\nclass FirstView(KeyboardView):\n    @bot.action_handler(action=\"next\")\n    def go_next(self, query: Query):\n        return render(\"NextView\", inplace=True, param=42)\n\n    @staticmethod\n    def render():\n        return KeyboardLayout(\n            keyboard = (\n                Button(\"Go next\", on_click=\"next\"),\n            ))\n\n\nclass NextView(KeyboardView):\n    @bot.action_handler()\n    def back(self, query: Query):\n        return render(FirstView, inplace=True)\n\n    @staticmethod\n    def render(param: int):\n        return KeyboardLayout(\n            text=f\"Passed param: {param}\",\n            keyboard = (\n                Button(\"Go back\", on_click=\"back\"),\n            ))\n\n# run the bot\nbot.start()\n```\n\n## Some details explained\n\n### Views\n\nsomething that can be rendered to user\nand than handle user actions on itselves\nactions are dispatched to appropriate view' and method\nin accordance with user state (e.g. current_scene flag)\nwhich is set when the view is rendered\n\n### Dispatch\n\nmessages are being dispatched according to user' state\nstate = current view\ncallback data or message = view method\n\n### User state\n\npass\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/akim-mukhtarov/televiewshka",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "televiewshka",
    "package_url": "https://pypi.org/project/televiewshka/",
    "platform": null,
    "project_url": "https://pypi.org/project/televiewshka/",
    "project_urls": {
      "Homepage": "https://github.com/akim-mukhtarov/televiewshka"
    },
    "release_url": "https://pypi.org/project/televiewshka/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A framework to develop UI & logic for telegram bots with class based views",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14756939,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d26695c4c3b99041067ee54488f83ac1238894ef821a5f51c7d13353bb000e1",
          "md5": "cbf9cce55af71babee7b7bbd51aedd4a",
          "sha256": "0bf0885c168ba52cbe64540bc447faf885853b9a3a1879e1cae223ced00baf6b"
        },
        "downloads": -1,
        "filename": "televiewshka-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cbf9cce55af71babee7b7bbd51aedd4a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11146,
        "upload_time": "2022-08-14T16:07:46",
        "upload_time_iso_8601": "2022-08-14T16:07:46.454893Z",
        "url": "https://files.pythonhosted.org/packages/7d/26/695c4c3b99041067ee54488f83ac1238894ef821a5f51c7d13353bb000e1/televiewshka-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3c245a75c3a81e0dbe2e31e1cd74797caa92728931dda3d00a53eabc1fa2894",
          "md5": "15f46c18ce739e508567ef9458cff7d7",
          "sha256": "eb5a5754215036b178db50be63346db3ecc60ba28ccad33efc082cb4736e3e70"
        },
        "downloads": -1,
        "filename": "televiewshka-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "15f46c18ce739e508567ef9458cff7d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10077,
        "upload_time": "2022-08-14T16:07:48",
        "upload_time_iso_8601": "2022-08-14T16:07:48.481496Z",
        "url": "https://files.pythonhosted.org/packages/e3/c2/45a75c3a81e0dbe2e31e1cd74797caa92728931dda3d00a53eabc1fa2894/televiewshka-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d26695c4c3b99041067ee54488f83ac1238894ef821a5f51c7d13353bb000e1",
        "md5": "cbf9cce55af71babee7b7bbd51aedd4a",
        "sha256": "0bf0885c168ba52cbe64540bc447faf885853b9a3a1879e1cae223ced00baf6b"
      },
      "downloads": -1,
      "filename": "televiewshka-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cbf9cce55af71babee7b7bbd51aedd4a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11146,
      "upload_time": "2022-08-14T16:07:46",
      "upload_time_iso_8601": "2022-08-14T16:07:46.454893Z",
      "url": "https://files.pythonhosted.org/packages/7d/26/695c4c3b99041067ee54488f83ac1238894ef821a5f51c7d13353bb000e1/televiewshka-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3c245a75c3a81e0dbe2e31e1cd74797caa92728931dda3d00a53eabc1fa2894",
        "md5": "15f46c18ce739e508567ef9458cff7d7",
        "sha256": "eb5a5754215036b178db50be63346db3ecc60ba28ccad33efc082cb4736e3e70"
      },
      "downloads": -1,
      "filename": "televiewshka-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "15f46c18ce739e508567ef9458cff7d7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10077,
      "upload_time": "2022-08-14T16:07:48",
      "upload_time_iso_8601": "2022-08-14T16:07:48.481496Z",
      "url": "https://files.pythonhosted.org/packages/e3/c2/45a75c3a81e0dbe2e31e1cd74797caa92728931dda3d00a53eabc1fa2894/televiewshka-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}