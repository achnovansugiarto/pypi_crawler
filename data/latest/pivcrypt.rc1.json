{
  "info": {
    "author": "Crayonic B.V.",
    "author_email": "support@crayonic.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PivCrypt - File encryption package using PIV Applet\n\n## Installation\n`pip install --upgrade pivcrypt`\n\n## Prerequisities\n1. Security key or card with PIV Applet installed.\n2. RSA2048 key+certificate in PIV slot\n    * Generated selfsigned RSA2048 certificate in PIV applet using PIV Manager. This is recommended for 1 key scenario.\n    * or Offcard generated private key and public certificate injected in PIV slot. Offcard keys can be backuped and restore to new security keys or cloned in multiple PIV applets, so many users can share the decryption key.\n\n## Usage\n```\n$ py -m pivcrypt\nUsage: python -m pivcrypt [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  decrypt      Decrypt file\n  encrypt      Encrypt file\n  export-cert  Export certificate used for future encryption\n  serve        Encryption/decryption service\n```\nDefault PIV slot for all operations is `9D`\n\n### Export public certificate from PIV slot\n```\n$ py -m pivcrypt export-cert --help\nUsage: python -m pivcrypt export-cert [OPTIONS] CERT\n\n  Export certificate used for future encryption\n\nOptions:\n  -r, --reader TEXT  When using NFC reader, set it's device name,\n                     default=\"Crayonic KeyVault\"\n  -s, --slot TEXT    PIV slot to be used for file encryption, default=9D\n  --help             Show this message and exit.\n```\nExport certificate to `cert.crt`\n```\n$ py -m pivcrypt export-cert cert.crt\nAvailable smartcard readers: Crayonic KeyVault 0\nSelected reader: Crayonic KeyVault 0\nExported cert from slot 9D stored as cert.crt\n```\n\n### Use cert file to encrypt desired file\n```\n$ py -m pivcrypt encrypt --help\nUsage: python -m pivcrypt encrypt [OPTIONS] FILE\n\n  Encrypt file\n\nOptions:\n  -c, --cert TEXT         Certificate with public key  [required]\n  -ext, --extension TEXT  Extension for encrypted file, default=\"kvef\"\n  --delete                Deletes original file after succesful encryption\n  --help                  Show this message and exit.\n```\nEncrypt file `cat.jpg` with public key from cert `cert.crt`\n```\n$ py -m pivcrypt encrypt cat.jpg -c cert.crt\n* Encrypting cat.jpg to cat.jpg.kvef\n\n```\n\n### Decrypt file with PIV\n```\n$ py -m pivcrypt decrypt --help\nUsage: python -m pivcrypt decrypt [OPTIONS] FILE\n\n  Decrypt file\n\nOptions:\n  -r, --reader TEXT       When using NFC reader, set it's device name,\n                          default=\"Crayonic KeyVault\"\n  -ext, --extension TEXT  Extension for encrypted file, default=\"kvef\"\n  -s, --slot TEXT         PIV slot to be used for file encryption, default=9D\n  --pin-mode TEXT         CMD -commandline mode, GUI -graphical window\n                          (default)\n  --help                  Show this message and exit.\n```\nDecrypt file `cat.jpg`\n```\n$ py -m pivcrypt decrypt cat.jpg\nAvailable smartcard readers: Crayonic KeyVault 0\nSelected reader: Crayonic KeyVault 0\nWaiting for PIN input\n* Decrypting file cat.jpg\n* Decrypted file cat.jpg\n```\n\n### Service mode for continus encryption/decryption\n```\n$ py -m pivcrypt serve --help\nUsage: python -m pivcrypt serve [OPTIONS] FILE\n\n  Encryption/decryption service\n\nOptions:\n  -r, --reader TEXT       When using NFC reader, set it's device name,\n                          default=\"Crayonic KeyVault\"\n  -c, --cert TEXT         Certificate with public key  [required]\n  -ext, --extension TEXT  Extension for encrypted file, default=\"kvef\"\n  -s, --slot TEXT         PIV slot to be used for file encryption, default=9D\n  --pin-mode TEXT         CMD -commandline mode, GUI -graphical window\n                          (default)\n  --help                  Show this message and exit.\n```\n\nEncrypt file `cat.jpg` when Crayonic KeyVault is disconnected and decrypt it back after KeyVault is connected and correct PIN is entered. This is intented to run as a service on PC to keep contents of given file secret.\n```\npy -m pivcrypt serve cat.jpg -c cert.crt -r \"Crayonic KeyVault\"\nAvailable smartcard readers: Crayonic KeyVault 0\nSelected reader: Crayonic KeyVault 0\nWaiting for PIN input\n* Decrypting file cat.jpg\n* Decrypted file cat.jpg\nAvailable smartcard readers:\n* Encrypting file cat.jpg\n* Encrypted file cat.jpg\nAvailable smartcard readers: Crayonic KeyVault 0\nSelected reader: Crayonic KeyVault 0\nWaiting for PIN input\n* Decrypting file cat.jpg\n* Decrypted file cat.jpg\n* Encrypting file cat.jpg\n* Encrypted file cat.jpg\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://crayonic.io",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pivcrypt",
    "package_url": "https://pypi.org/project/pivcrypt/",
    "platform": "",
    "project_url": "https://pypi.org/project/pivcrypt/",
    "project_urls": {
      "Homepage": "https://crayonic.io"
    },
    "release_url": "https://pypi.org/project/pivcrypt/1.0.0/",
    "requires_dist": [
      "cffi (==1.14.6)",
      "click (==8.0.1)",
      "colorama (==0.4.4)",
      "cryptography (==3.4.8)",
      "pycparser (==2.20)",
      "pyscard (==2.0.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "File encryption using PIV applet",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11570685,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94faed1f19ae834901d431cbc7636e5637f0afd5792a049c3492938f3b47cfc9",
          "md5": "a9fa0bfca01257e27a02ca8309b47804",
          "sha256": "622315d9c21c6f9ae6bdb6b93c80958ab26fb6e34af870078f78231ae1c9c639"
        },
        "downloads": -1,
        "filename": "pivcrypt-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9fa0bfca01257e27a02ca8309b47804",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8604,
        "upload_time": "2021-09-28T12:13:57",
        "upload_time_iso_8601": "2021-09-28T12:13:57.481317Z",
        "url": "https://files.pythonhosted.org/packages/94/fa/ed1f19ae834901d431cbc7636e5637f0afd5792a049c3492938f3b47cfc9/pivcrypt-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41bcbbb05a4079160271ede93769680d58d9f2101a2624f0a1089fa6b2e6e306",
          "md5": "3a79b132ae7f9362067c06d41324a5b2",
          "sha256": "c24298d601557d7339bfa91a8219873f514768926ea82e407db043577dfcd949"
        },
        "downloads": -1,
        "filename": "pivcrypt-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a79b132ae7f9362067c06d41324a5b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8964,
        "upload_time": "2021-09-28T12:13:59",
        "upload_time_iso_8601": "2021-09-28T12:13:59.151069Z",
        "url": "https://files.pythonhosted.org/packages/41/bc/bbb05a4079160271ede93769680d58d9f2101a2624f0a1089fa6b2e6e306/pivcrypt-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94faed1f19ae834901d431cbc7636e5637f0afd5792a049c3492938f3b47cfc9",
        "md5": "a9fa0bfca01257e27a02ca8309b47804",
        "sha256": "622315d9c21c6f9ae6bdb6b93c80958ab26fb6e34af870078f78231ae1c9c639"
      },
      "downloads": -1,
      "filename": "pivcrypt-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a9fa0bfca01257e27a02ca8309b47804",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8604,
      "upload_time": "2021-09-28T12:13:57",
      "upload_time_iso_8601": "2021-09-28T12:13:57.481317Z",
      "url": "https://files.pythonhosted.org/packages/94/fa/ed1f19ae834901d431cbc7636e5637f0afd5792a049c3492938f3b47cfc9/pivcrypt-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41bcbbb05a4079160271ede93769680d58d9f2101a2624f0a1089fa6b2e6e306",
        "md5": "3a79b132ae7f9362067c06d41324a5b2",
        "sha256": "c24298d601557d7339bfa91a8219873f514768926ea82e407db043577dfcd949"
      },
      "downloads": -1,
      "filename": "pivcrypt-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3a79b132ae7f9362067c06d41324a5b2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8964,
      "upload_time": "2021-09-28T12:13:59",
      "upload_time_iso_8601": "2021-09-28T12:13:59.151069Z",
      "url": "https://files.pythonhosted.org/packages/41/bc/bbb05a4079160271ede93769680d58d9f2101a2624f0a1089fa6b2e6e306/pivcrypt-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}