{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Flask-SpaProxy\n\nThis extension expose either static resources using a reverse proxy in development, or\nexpose static resources using static folder from flask in production.\n\n[![ci](https://github.com/FabienArcellier/Flask-SpaProxy/actions/workflows/ci.yml/badge.svg)](https://github.com/FabienArcellier/blueprint-library-pip/actions/workflows/ci.yml)\n\nWhen developing an SPA with React, frontend resources are exposed\non an API endpoint. By default, this is exposed at `http: // localhost: 5100`.\n\nIn production, the behavior is different. Flask serves these resources as\nstatic file.\n\nThis different operation makes the development of the Flask router\nrisky and complicates the alignment between the development environment and\nthat of production.\n\nOne of the symptoms of this problem is the addition of a CORS rule to address the fact\nthat the frontend is running on a different URL than the developing backend.\n\n```python\nfrom flask import Flask\nfrom flask_cors import CORS\n\napp = Flask(__name__)\ncors = CORS(app, resources={r\"/api/*\": {\"origins\": \"*\"}})\n\n@app.route(\"/\")\ndef hello_world():\n    return \"<p>Hello, World!</p>\"\n```\n\n`Flask-SpaProxy` allows with the same code to deal with this case.\n\nIf the variable `FLASK_SPA_PROXY_URL` exists, then Flask will call this endpoint to serve\nthe resources he does not know. If it is absent, Flask will serve the resources\nfrom the `static_folder` folder.\n\n### Don't use this extension when ...\n\nThe use of this extension is recommended only in the case where the frontend resources\nare served by Flask.\n\nIf your Frontend is served by an nginx server or by a production CDN,\nit is better to use the proxy provided by Webpack which will reproduce better\nthe final behavior of the application. Indeed, in this case, the Flask router is not\nnot solicited.\n\n## Getting started\n\n```bash\npip install Flask-SpaProxy\n```\n\nWrite a simple flask application in `hello.py`\n\n```python\nfrom flask import Flask\nfrom flask_spaproxy import SpaProxy\n\napp = Flask(__name__)\nSpaProxy(app)\n\n@app.route(\"/\")\ndef hello_world():\n    return \"<p>Hello, World!</p>\"\n```\n\nBefore running the application\n\n```bash\n$ export FLASK_APP=hello\n$ export FLASK_SPA_PROXY_URL=http://localhost:5001\n$ flask run\n```\n\n## The latest version\n\nYou can find the latest version to ...\n\n```bash\ngit clone https://github.com/FabienArcellier/Flask-SpaProxy.git\n```\n\n## Developper guideline\n\n```\n$ make\nactivate                       activate the virtualenv associate with this project\ncoverage                       output the code coverage in htmlcov/index.html\nhelp                           provides cli help for this makefile (default)\ninstall_requirements_dev       install pip requirements for development\ninstall_requirements           install pip requirements based on requirements.txt\nlint                           run pylint\ntests                          run automatic tests\ntests_units                    run only unit tests\nupdate_requirements            update the project dependencies based on setup.py declaration\n```\n\n### Install development environment\n\nUse make to instanciate a python virtual environment in ./venv and install the\npython dependencies.\n\n```bash\nmake install_requirements_dev\n```\n\n### Install production environment\n\n```bash\nmake install_requirements\n```\n\n### Initiate or update the library requirements\n\nIf you want to initiate or update all the requirements `install_requires` declared in `setup.py`\nand freeze a new `Pipfile.lock`, use this command\n\n```bash\nmake update_requirements\n```\n\n### Activate the python environment\n\nWhen you setup the requirements, a `venv` directory on python 3 is created.\nTo activate the venv, you have to execute :\n\n```bash\nmake venv\nsource venv/bin/activate\n```\n\n### Use continuous integration process\n\nBefore commit or send a pull request, you have to execute `pylint` to check the syntax\nof your code and run the unit tests to validate the behavior.\n\n```bash\nmake ci\n```\n\n## Contributors\n\n* Fabien Arcellier\n\n## License\n\nMIT License\n\nCopyright (c) 2018 Fabien Arcellier\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Flask-SpaProxy",
    "package_url": "https://pypi.org/project/Flask-SpaProxy/",
    "platform": "",
    "project_url": "https://pypi.org/project/Flask-SpaProxy/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/Flask-SpaProxy/0.2/",
    "requires_dist": [
      "flask",
      "requests",
      "alfred-cli ; extra == 'dev'",
      "build ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "twine ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11312429,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bb84819b4228d87dbfe5003c02ff2dd1888dacbc3b471ad5dd65ef02dd00968",
          "md5": "b729ef5f47b3fe8b008c56a401dcdf55",
          "sha256": "278e18d2da93833a519db077ed9da3be349ded6056b7895bea70e38466acd82b"
        },
        "downloads": -1,
        "filename": "Flask_SpaProxy-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b729ef5f47b3fe8b008c56a401dcdf55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6056,
        "upload_time": "2021-08-30T06:56:11",
        "upload_time_iso_8601": "2021-08-30T06:56:11.953267Z",
        "url": "https://files.pythonhosted.org/packages/1b/b8/4819b4228d87dbfe5003c02ff2dd1888dacbc3b471ad5dd65ef02dd00968/Flask_SpaProxy-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35a58f760b56ee69098c43363d2c876a0014c8caa27e399a94faf869c587beef",
          "md5": "449c5f337eb48d15fd68106a6c347ea5",
          "sha256": "eefbc0a05944058afe49df278f6544748fa03ab8b54725a18d86c290632be7b7"
        },
        "downloads": -1,
        "filename": "Flask-SpaProxy-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "449c5f337eb48d15fd68106a6c347ea5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4998,
        "upload_time": "2021-08-30T06:56:14",
        "upload_time_iso_8601": "2021-08-30T06:56:14.806121Z",
        "url": "https://files.pythonhosted.org/packages/35/a5/8f760b56ee69098c43363d2c876a0014c8caa27e399a94faf869c587beef/Flask-SpaProxy-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6034ad59242c8825584458cc421f994df37a83f1f7a48081045871d7faa161fb",
          "md5": "115706bc90bfd6ff5a09d23f18bdfcd1",
          "sha256": "06d548626dc1addf7ff6408968108a15cf040a8ee674b63e5fcf48b530a37432"
        },
        "downloads": -1,
        "filename": "Flask_SpaProxy-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "115706bc90bfd6ff5a09d23f18bdfcd1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6382,
        "upload_time": "2021-08-30T10:09:28",
        "upload_time_iso_8601": "2021-08-30T10:09:28.854743Z",
        "url": "https://files.pythonhosted.org/packages/60/34/ad59242c8825584458cc421f994df37a83f1f7a48081045871d7faa161fb/Flask_SpaProxy-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1957c8ab3492c69f42d019eba6f805deedbe724c8186609dec4e044aacae20f6",
          "md5": "7040b3605a0339469a42ac2043018f51",
          "sha256": "d69d2fba6887fc7abb1f21fa9a87043df4b4fdc40469a59b74df6444c2f655fe"
        },
        "downloads": -1,
        "filename": "Flask-SpaProxy-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7040b3605a0339469a42ac2043018f51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5149,
        "upload_time": "2021-08-30T10:09:30",
        "upload_time_iso_8601": "2021-08-30T10:09:30.506883Z",
        "url": "https://files.pythonhosted.org/packages/19/57/c8ab3492c69f42d019eba6f805deedbe724c8186609dec4e044aacae20f6/Flask-SpaProxy-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6034ad59242c8825584458cc421f994df37a83f1f7a48081045871d7faa161fb",
        "md5": "115706bc90bfd6ff5a09d23f18bdfcd1",
        "sha256": "06d548626dc1addf7ff6408968108a15cf040a8ee674b63e5fcf48b530a37432"
      },
      "downloads": -1,
      "filename": "Flask_SpaProxy-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "115706bc90bfd6ff5a09d23f18bdfcd1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6382,
      "upload_time": "2021-08-30T10:09:28",
      "upload_time_iso_8601": "2021-08-30T10:09:28.854743Z",
      "url": "https://files.pythonhosted.org/packages/60/34/ad59242c8825584458cc421f994df37a83f1f7a48081045871d7faa161fb/Flask_SpaProxy-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1957c8ab3492c69f42d019eba6f805deedbe724c8186609dec4e044aacae20f6",
        "md5": "7040b3605a0339469a42ac2043018f51",
        "sha256": "d69d2fba6887fc7abb1f21fa9a87043df4b4fdc40469a59b74df6444c2f655fe"
      },
      "downloads": -1,
      "filename": "Flask-SpaProxy-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7040b3605a0339469a42ac2043018f51",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5149,
      "upload_time": "2021-08-30T10:09:30",
      "upload_time_iso_8601": "2021-08-30T10:09:30.506883Z",
      "url": "https://files.pythonhosted.org/packages/19/57/c8ab3492c69f42d019eba6f805deedbe724c8186609dec4e044aacae20f6/Flask-SpaProxy-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}