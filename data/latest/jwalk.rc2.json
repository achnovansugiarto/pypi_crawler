{
  "info": {
    "author": "Kamil Sindi, Nir Yungster",
    "author_email": "kamil@jwplayer.com, nir@jwplayer.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Cython",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering"
    ],
    "description": "jwalk\n=====\n\n.. image:: https://travis-ci.org/jwplayer/jwalk.svg?branch=master\n    :target: https://travis-ci.org/jwplayer/jwalk\n    :alt: Build Status\n\n.. image:: https://readthedocs.org/projects/jwalk/badge/?version=latest\n    :target: http://jwalk.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\njwalk performs random walks on a graph and learns representations for nodes\nusing Word2Vec. It also has options to train existing models online and specify\nweights.\n\nInstall\n-------\n\n::\n\n    pip install -U jwalk\n\nBuild\n-----\n\n::\n\n    make build\n\nUsage\n-----\n\n::\n\n    jwalk -i tests/data/karate.edgelist -o karate.emb --delimiter=' '\n\nTo see the full list of options:\n\n::\n\n    jwalk --help\n\n    Prompt parameters:\n      debug:            drop a debugger if an exception is raised\n      delimiter:        delimiter for input file\n      embedding-size:   dimension of word2vec embedding (default=200)\n      has-header:       boolean if csv has header row\n      help (-h):        argparse help\n      input (-i):       file input (edgelist of 2/3 cols or adjacency matrix)\n      log-level (-l)    logging level (default=INFO)\n      model (-m):       use a pre-existing model\n      num-walks (-n):   number of of random walks per graph (default=1)\n      output (-o):      file output\n      stats:            boolean to calculate walk statistics [requires pandas]\n      undirected:       make graph undirected\n      walk-length:      length of random walks (default=10)\n      window-size:      word2vec window size (default=5)\n      workers:          number of workers (default=multiprocessing.cpu_count)\n\n\nInput File\n~~~~~~~~~~\n\nThe input file can be of the following formats:\n\n- Edgelist: CSV with 2 or 3 columns denoting the source, target and (optional)\n  weight.\n  There are CLI options to specify the delimiter and whether the file has\n  a header (default=False).\n  The CSV file is loaded using numpy if pandas is not installed. We strongly\n  recommend using pandas to load the CSV as it's a lot faster.\n\n- Graph: If the file has an extension that is \".npz\", jwalk will assume\n  that it is a `SciPy CSR matrix <https://docs.scipy.org/doc/scipy-0.18.1/reference/generated/scipy.sparse.csr_matrix.html>`_.\n  Included must be keys of data, indices, indptr, shape and labels\n  (default=None) where labels are the node labels.\n  For an example, see tests/data/karate.npz.\n\n\nTest\n----\n\nRunning unit tests::\n\n    make test\n\nRunning linter::\n\n    make lint\n\nRunning tox::\n\n    make test-all\n\nBlog\n----\nRead more about jwalk in our blog post here:\nhttps://www.jwplayer.com/blog/deepwalk-recommendations/\n\nLicense\n-------\n\nApache License 2.0\n\nReferences\n----------\n\n- [paper]: arXiv:1403.6652  [cs.SI] \"DeepWalk: Online Learning of Social Representations\"\n- [paper]: arXiv:1607.00653 [cs.SI] \"node2vec: Scalable Feature Learning for Networks\"",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jwplayer/jwalk",
    "keywords": "deep learning,neural networks,deepwalk",
    "license": "Apache License 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "jwalk",
    "package_url": "https://pypi.org/project/jwalk/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/jwalk/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/jwplayer/jwalk"
    },
    "release_url": "https://pypi.org/project/jwalk/0.5.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Representational learning on graphs",
    "version": "0.5.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8783474,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bc27cb71b61bfde4200afbcaeebcf146121c78f7ff62fb76fde9e893e4fc79e",
          "md5": "096ca0d803456ef7349b8dd45447bd64",
          "sha256": "89ae62b4b877f236f2d1acd9efb14394ad7ba3bc22a795883dceccd276b04eaa"
        },
        "downloads": -1,
        "filename": "jwalk-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "096ca0d803456ef7349b8dd45447bd64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 349432,
        "upload_time": "2017-01-10T22:55:44",
        "upload_time_iso_8601": "2017-01-10T22:55:44.270009Z",
        "url": "https://files.pythonhosted.org/packages/5b/c2/7cb71b61bfde4200afbcaeebcf146121c78f7ff62fb76fde9e893e4fc79e/jwalk-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5aba4bcecb790787ac81898daded7c32df06631aae5797107a463289fcbf0fd8",
          "md5": "856d832490495f0ae287f7d475ec990f",
          "sha256": "ac6440544241f3e6000b053119a22a7d0d90c443ae468702d2ea7e065e3762a7"
        },
        "downloads": -1,
        "filename": "jwalk-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "856d832490495f0ae287f7d475ec990f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 355911,
        "upload_time": "2017-04-24T12:44:50",
        "upload_time_iso_8601": "2017-04-24T12:44:50.530132Z",
        "url": "https://files.pythonhosted.org/packages/5a/ba/4bcecb790787ac81898daded7c32df06631aae5797107a463289fcbf0fd8/jwalk-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5aba4bcecb790787ac81898daded7c32df06631aae5797107a463289fcbf0fd8",
        "md5": "856d832490495f0ae287f7d475ec990f",
        "sha256": "ac6440544241f3e6000b053119a22a7d0d90c443ae468702d2ea7e065e3762a7"
      },
      "downloads": -1,
      "filename": "jwalk-0.5.3.tar.gz",
      "has_sig": false,
      "md5_digest": "856d832490495f0ae287f7d475ec990f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 355911,
      "upload_time": "2017-04-24T12:44:50",
      "upload_time_iso_8601": "2017-04-24T12:44:50.530132Z",
      "url": "https://files.pythonhosted.org/packages/5a/ba/4bcecb790787ac81898daded7c32df06631aae5797107a463289fcbf0fd8/jwalk-0.5.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}