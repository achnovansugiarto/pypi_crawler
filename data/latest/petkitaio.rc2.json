{
  "info": {
    "author": "Robert Drinovac",
    "author_email": "unlisted@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PetKitAIO\n\nAsynchronous Python library for PetKit's API.\n\nThis is PetKit's undocumented API. With that said, future changes made by PetKit may break this library. All API calls are made to PetKit's USA servers.\n\n## **Currently Supported Devices**:\n- [D3 Feeder (Fresh Element Infinity)](https://www.amazon.com/PETKIT-Automatic-Stainless-Programmable-Dispenser/dp/B09JFK8BCQ)\n- [D4 Feeder (Fresh Element Solo)](https://www.amazon.com/PETKIT-Automatic-Dispenser-Compatible-Freeze-Dried/dp/B09158J9PF/)\n- [Mini Feeder](https://www.amazon.com/PETKIT-Automatic-Stainless-Indicator-Dispenser-2-8L/dp/B08GS1CPHH/)\n- [W5 Water Fountain (Eversweet 3 Pro)](https://www.amazon.com/PETKIT-Wireless-Fountain-Stainless-Dispenser/dp/B09QRH6L3M/)\n- [T3 Litter Box (Pura X)](https://www.amazon.com/PETKIT-Self-Cleaning-Scooping-Automatic-Multiple/dp/B08T9CCP1M)\n\n## Important\n\nPetKit accounts can only be logged in on one device at a time. Using this library will result in getting signed out of the mobile app. You can avoid this by creating a secondary account and sharing devices from the main account (except water fountains). However, some device functionality is lost when using a secondary account as well as not being able to share pets between accounts.\n\n\nThis package depends on [aiohttp](https://docs.aiohttp.org/en/stable/) and [tzlocal](https://pypi.org/project/tzlocal/). `Python 3.7` or greater is required.\n\n## Usage\n\n### Creating Client\n\n```python\nimport asyncio\nfrom petkitaio import PetKitClient\nfrom aiohttp import ClientSession\n\nasync def main():\n    async with ClientSession() as session:\n\n        # Create a client using PetKit account email and password\n        client = PetKitClient('email', 'password', session)\n\n\n        ###################################################################################\n        Examples within the examples section utilize the PetKitClient instance created above\n        ###################################################################################\n\n\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n```\n\n## Examples\n\n### Retrieving all PetKit devices on account\n\n```python\n# See model.py for details regarding Data Classes created\n\ndevices = await client.get_petkit_data()\n```\n\n### Manual Feeding\n```python\n# See model.py for details regarding \"Feeder\" class\n\n\n# Reusing retrieved devices from above. Note: A valid amount (in grams) will depend on the capabilities of the feeder.\nawait client.manual_feeding(feeder=devices.feeders[feederid], amount=10)\n```\n\n### Change Feeder Setting\n```python\n# See constants.py FeederSetting class for available settings\n# Additional import needed:\nfrom petkitaio.constants import FeederSetting\n\n\n# Enabling child lock on a D4 feeder. Note: Mini Feeders use a different setting.\n# Reusing retrieved devices from above.\nawait client.update_feeder_settings(feeder=devices.feeders[feederid], setting=FeederSetting.CHILDLOCK, value=1)\n```\n\n### Reset Feeder Desiccant\n```python\n# Reusing retrieved devices from above.\nawait client.reset_feeder_desiccant(feeder=devices.feeders[feederid])\n```\n\n### Control Water Fountain via BLE Relay\n```python\n# A valid relay (set up through the PetKit app) is required in order to send commands to the Eversweet 3 Pro\n# See constants.py W5Command class for available commands\n# Additional import needed:\nfrom petkitaio.constants import W5Command\n\n# Set Water Fountain to Smart Mode. Reusing retrieved devices from above.\nawait client.control_water_fountain(water_fountain=devices.water_fountains[water_fountain_id], command=W5Command.SMART)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RobertD502/petkitaio",
    "keywords": "petkit,eversweet 3 pro,feeder mini,d4,petkit feeder,petkit water fountain,freshelement solo",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "petkitaio",
    "package_url": "https://pypi.org/project/petkitaio/",
    "platform": null,
    "project_url": "https://pypi.org/project/petkitaio/",
    "project_urls": {
      "Bug Reports": "https://github.com/RobertD502/petkitaio/issues",
      "Homepage": "https://github.com/RobertD502/petkitaio",
      "Source": "https://github.com/RobertD502/petkitaio/"
    },
    "release_url": "https://pypi.org/project/petkitaio/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Asynchronous Python library for PetKit's API",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16982657,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b931d87111fdfa1aef9e99a05eb5300b960596804c21a15ea0bbca869b581304",
          "md5": "2c8993038c925bf63895cfa0f1d1bcdf",
          "sha256": "c1348dce0f8521f0968c5c74b8fb8018d359a242dda61df571fb9c8161c476bb"
        },
        "downloads": -1,
        "filename": "petkitaio-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2c8993038c925bf63895cfa0f1d1bcdf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11129,
        "upload_time": "2023-02-06T17:36:46",
        "upload_time_iso_8601": "2023-02-06T17:36:46.310614Z",
        "url": "https://files.pythonhosted.org/packages/b9/31/d87111fdfa1aef9e99a05eb5300b960596804c21a15ea0bbca869b581304/petkitaio-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95a9a1c7462d663ae8adaebd4ad7698001f45c9bfef24a00e6ae70ad77ac9712",
          "md5": "ab9eab7215f614a0ba5c34048f092dfb",
          "sha256": "13fb524a3a003dfcd351816b3e4a7c0d653d592c245afc254b3bb15944a1b609"
        },
        "downloads": -1,
        "filename": "petkitaio-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ab9eab7215f614a0ba5c34048f092dfb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14994,
        "upload_time": "2023-02-22T20:41:36",
        "upload_time_iso_8601": "2023-02-22T20:41:36.128418Z",
        "url": "https://files.pythonhosted.org/packages/95/a9/a1c7462d663ae8adaebd4ad7698001f45c9bfef24a00e6ae70ad77ac9712/petkitaio-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95a9a1c7462d663ae8adaebd4ad7698001f45c9bfef24a00e6ae70ad77ac9712",
        "md5": "ab9eab7215f614a0ba5c34048f092dfb",
        "sha256": "13fb524a3a003dfcd351816b3e4a7c0d653d592c245afc254b3bb15944a1b609"
      },
      "downloads": -1,
      "filename": "petkitaio-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ab9eab7215f614a0ba5c34048f092dfb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 14994,
      "upload_time": "2023-02-22T20:41:36",
      "upload_time_iso_8601": "2023-02-22T20:41:36.128418Z",
      "url": "https://files.pythonhosted.org/packages/95/a9/a1c7462d663ae8adaebd4ad7698001f45c9bfef24a00e6ae70ad77ac9712/petkitaio-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}