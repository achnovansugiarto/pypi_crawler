{
  "info": {
    "author": "HaaS Python",
    "author_email": "yinsuo.mys@alibaba-inc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: MicroPython"
    ],
    "description": "\n## HaaS Python介绍\nHaaS Python是阿里云IoT团队最新研发的一套低代码编程框架，兼容MicroPython编程规范，依托HaaS平台软硬件积木提供AI、支付、蓝牙配网、云连接、UI等物联网场景常用的能力，从而解决了物联网应用开发难的问题。有了Python轻应用框架，物联网编程不再局限于专业软件开发人员，一般的技术员也可以快速实现复杂的物联网需求。\n更多HaaS Python介绍和开发资料见[HaaS Python官网](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp),[创意案例](https://haas.iot.aliyun.com/solution?from=crop), [硬件积木](https://haas.iot.aliyun.com/solution/hardware?from=corp)\n\nHaaS Python is a set of low-code programming frameworks newly developed by Alibaba Cloud IoT team. It is compatible with MicroPython programming specifications. It relies on the hardware and software building blocks of the HaaS platform to provide capabilities commonly used in IoT scenarios such as AI, payment, Bluetooth network configuration, cloud connection, and UI. Solve the difficult problem of IoT application development. With the Python light application framework, IoT programming is no longer limited to professional software developers, and general technicians can quickly implement complex IoT requirements.\nFor more HaaS Python introduction and development materials, see [HaaS Python official website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp), [Creative Case](https://haas.iot.aliyun.com/solution?from=crop), [Hardware Building Blocks](https://haas.iot.aliyun.com/solution/hardware?from=corp)\n\n## 安装方法\n* 在[HaaS Python官网](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/)下载开发板对应的固件，并完成固件烧录\n\nDownload the firmware corresponding to the development board at [HaaS Python website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/) and complete the firmware burning\n\n* 在开发板上运行以下命令完成安装和使用,如果您在使用过程中遇到问题，欢迎在[github上向我们提交issue](https://github.com/alibaba/AliOS-Things/issues)，我们的工程师会及时解答\n\nRun the following commands on the development board to complete the installation and use. If you encounter problems during use, please submit an issue to us on [github](https://github.com/alibaba/AliOS-Things/issues), Our engineers will answer in time\n```\nimport upip\nupip.install(\"haas-python-sn74hc595\")\nimport haas-python-sn74hc595\n```\n# 数码管驱动芯片 - SN74HC595\n\n## 一、产品简介\nSN74HC595是TI出品的一种能将串行信号转为并行信号芯片，常用在各种数码管或点阵屏的驱动芯片，使用SN74HC595可以节约单片机的IO资源，用3个io就可以控制8个数码管的管脚，它还具有一定的驱动能力，可以免掉三极管等放大电路。\n\n<div align=\"center\">\n<img src=./../../docs/images/ext_sn74hc595_实物.png  width=50%/>\n</div>\n\n### 引脚定义\n* VCC:  5V\n* SCLK: host GPIO\n* RCLK: host GPIO\n* DIO:  host GPIO\n* GND:  GND\n\n## 二、技术参数\n* 供电电压:2V~6V\n* 驱动能力:6mA(5V)\n* 3-bit串行数据转换成8-bit并行数据\n\n## 三、软件接口\n\nSN74HC595数码管驱动芯片HaaS Python驱动：[下载地址](https://github.com/alibaba/AliOS-Things/tree/master/haas_lib_bundles/python/libraries/sn74hc595)\n<br>\n\n### SN74HC595(rclk, sclk, dio) - 创建SN74HC595驱动对象\n* 函数原型:\n> displayDev = SN74HC595(rclk, sclk, dio)\n\n* 参数说明:\n\n|参数|类型|必选参数？|说明|\n|-----|----|:---:|----|\n|rclk|GPIO|是|调用此函数前需确保rclk对象已经处于open状态|\n|sclk|GPIO|是|调用此函数前需确保sclk对象已经处于open状态|\n|dio|GPIO|是|调用此函数前需确保dio对象已经处于open状态|\n* 返回值:\nSN74HC595对象成功，返回SN74HC595对象；SN74HC595对象创建失败，抛出Exception\n\n* 示例代码:\n\n```python\nfrom driver import GPIO               # 驱动库\nform sn74hc595 import *                        # SN74HC595驱动库\n\nrclk = GPIO()\nrclk.open(\"sn74hc595_rclk\")\nsclk = GPIO()\nsclk.open(\"sn74hc595_sclk\")\ndio = GPIO()\ndio.open(\"sn74hc595_dio\")\ndisplayDev = SN74HC595(rclk, sclk, dio)\n```\n\n* 输出:\n无\n\n### outSegmentDigit - 输出数码管数字\n\n* 函数功能:\n输出数码管数字\n\n* 函数原型:\n> SN74HC595.outSegmentDigit(position, digit)\n\n* 参数说明:\nposition: 数码管的位置，从0开始\ndigit: 数字，0x0-0xf\n* 返回值:\n无\n\n* 示例:\n\n```python\nfrom sn74hc595 import *\nrclk = GPIO()\nrclk.open(\"sn74hc595_rclk\")\nsclk = GPIO()\nsclk.open(\"sn74hc595_sclk\")\ndio = GPIO()\ndio.open(\"sn74hc595_dio\")\ndisplayDev = SN74HC595(rclk, sclk, dio)\n\ndisplayDev.outSegmentDigit(0, 6)\nsleep_ms(1000)\n\nrclk.close()\nsclk.close()\ndio.close()\ndel displayDev\n```\n* 输出:无\n\n## 四、接口案例\n此使用实例在board.json中定义了名为sn74hc595的GPIO类型的对象。在Python脚本中依次在四个数码管上输出\n0-f数字。\n\n* 代码:\n```json\n# board.json配置：\n{\n    \"name\": \"board-name\",\n    \"version\": \"1.0.0\",\n    \"io\": {\n      \"sn74hc595_rclk\": {\n        \"type\": \"GPIO\",\n        \"port\": 19,\n        \"dir\": \"output\",\n        \"pull\": \"pullup\"\n      },\n\n      \"sn74hc595_sclk\": {\n        \"type\": \"GPIO\",\n        \"port\": 27,\n        \"dir\": \"output\",\n        \"pull\": \"pullup\"\n      },\n\n      \"sn74hc595_dio\": {\n        \"type\": \"GPIO\",\n        \"port\": 0,\n        \"dir\": \"output\",\n        \"pull\": \"pullup\"\n      }\n    },\n    \"debugLevel\": \"ERROR\",\n    \"repl\": \"disable\"\n}\n\n```\n```python\nfrom sn74hc595 import *\nrclk = GPIO()\nrclk.open(\"sn74hc595_rclk\")\nsclk = GPIO()\nsclk.open(\"sn74hc595_sclk\")\ndio = GPIO()\ndio.open(\"sn74hc595_dio\")\ndisplayDev = SN74HC595(rclk, sclk, dio)\n\nfor i in range(4):\n    for j in range(0x10):\n        displayDev.out_digit(i, j)\n        sleep_ms(1000)\n\nrclk.close()\nsclk.close()\ndio.close()\ndel displayDev\n```\n\n* 输出:无\n\n<br>\n\n## 五、通信协议\n主控芯片和SN74HC595之间通信所用命令字如下表所示：\n|序号|功能说明|命令字宏定义|\n|:-:|:-|:-|\n|1|SER pin输出数据bit8|CMD_WRITE_DATA_BIT8|\n|2|SRCLK pin输出低电平|CMD_WRITE_SRCLK_LOW|\n|3|SRCLK pin输出高电平|CMD_WRITE_SRCLK HIGH|\n|4|SER pin输出数据bit7|CMD_WRITE_DATA_BIT7|\n|5|SRCLK pin输出低电平|CMD_WRITE_SRCLK_LOW|\n|6|SRCLK pin输出高电平|CMD_WRITE_SRCLK HIGH|\n|7|SER pin输出数据bit6|CMD_WRITE_DATA_BIT6|\n|8|SRCLK pin输出低电平|CMD_WRITE_SRCLK_LOW|\n|9|SRCLK pin输出高电平|CMD_WRITE_SRCLK HIGH|\n|...|...|...|\n|22|SER pin输出数据bit1|CMD_WRITE_DATA_BIT1|\n|23|SRCLK pin输出低电平|CMD_WRITE_SRCLK_LOW|\n|24|SRCLK pin输出高电平|CMD_WRITE_SRCLK HIGH|\n|25|RCLK pin输出低电平|CMD_WRITE_RCLK_LOW|\n|26|SRCLK pin输出高电平|CMD_WRITE_RCLK_HIGH|\n</br>\n\n* 输出数字流程\n```python\n对数字进行编码，按照主控芯片和SN74HC595的通信协议控制SER、SRCLK和RCLK，即可在数码管上显示出对应数字。\n```\n\n## 六、工作原理\n从如下方框图可以看到 SN74HC595 内部集成了一个8-bit 移位寄存器和一个8-bit D-type 锁存寄存器，8-bit 移位寄存器输出到8-bit D-type锁存寄存器，通过移位寄存器可以将串行数据转换成并行数据，并且通过锁存寄存器可以将输出的数字锁存下来，所以使用SN74HC595要同时显示多个数字需要利用余晖效应。\n<div align=\"center\">\n<img src=\"./../../docs/images/sn74hc595_block_diagram.png\" width=50%/>\n</div>\n\n引脚分布如下，QA-QH一般数码管的段，RCLK，SRCLK，SER分别是锁存clock，移位clock，和数据输入。\n\n<div align=\"center\">\n<img src=\"./../../docs/images/sn74hc595_pins.png\" width=50%/>\n</div>\n\n## 参考文献及购买链接\n[1] [SN74HC595数码管驱动芯片](https://www.ti.com/product/SN74HC595)<br>\n[2] [购买链接](https://detail.tmall.com/item.htm?id=42113080264)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://haas.iot.aliyun.com/?from=corp",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "haas-python-sn74hc595",
    "package_url": "https://pypi.org/project/haas-python-sn74hc595/",
    "platform": null,
    "project_url": "https://pypi.org/project/haas-python-sn74hc595/",
    "project_urls": {
      "Bug Tracker": "https://github.com/alibaba/AliOS-Things/issues",
      "Documentation": "https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.81b460b1lzwYKw#/?from=corp",
      "Homepage": "https://haas.iot.aliyun.com/?from=corp",
      "Source Code": "https://github.com/alibaba/AliOS-Things"
    },
    "release_url": "https://pypi.org/project/haas-python-sn74hc595/0.0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This is sn74hc595 driver for HaaS Python. HaaS Python is forked from micropython.",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14183384,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afe8fd65a09066a11719bce530f8fb39e18fd5399e3540f040906a3d925120de",
          "md5": "12ade21a20a4b2458899af6169eb3008",
          "sha256": "dd611698dd77cbd5756b00344952b70c8f30165d4093e791ee652e054de80404"
        },
        "downloads": -1,
        "filename": "haas-python-sn74hc595-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "12ade21a20a4b2458899af6169eb3008",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8516,
        "upload_time": "2022-06-06T12:48:36",
        "upload_time_iso_8601": "2022-06-06T12:48:36.557319Z",
        "url": "https://files.pythonhosted.org/packages/af/e8/fd65a09066a11719bce530f8fb39e18fd5399e3540f040906a3d925120de/haas-python-sn74hc595-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bdb7e5e6579d0d4abef6818bec82a5a345fa47d07acd0ec45ca7f6e2f63a99c",
          "md5": "883c250b7cbb4b8e221f15e06677c2c1",
          "sha256": "f2e26790b967bfe9ac68e8f969f3e5e4dd53916bf48ccbd5e890c96f051d6ace"
        },
        "downloads": -1,
        "filename": "haas-python-sn74hc595-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "883c250b7cbb4b8e221f15e06677c2c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8523,
        "upload_time": "2022-06-07T08:41:47",
        "upload_time_iso_8601": "2022-06-07T08:41:47.555916Z",
        "url": "https://files.pythonhosted.org/packages/7b/db/7e5e6579d0d4abef6818bec82a5a345fa47d07acd0ec45ca7f6e2f63a99c/haas-python-sn74hc595-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d2ee792b5a19e3d21ed9ae25045d4105817848498ca6c4a5623ca84152d4856",
          "md5": "96be204dc2b1405d90aad7e0bed06985",
          "sha256": "fc23318acd6aabdb5f6950c3cd77ed7330bbc556df2b7c2a2f57adc54cadf0bc"
        },
        "downloads": -1,
        "filename": "haas-python-sn74hc595-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "96be204dc2b1405d90aad7e0bed06985",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8522,
        "upload_time": "2022-06-08T11:43:18",
        "upload_time_iso_8601": "2022-06-08T11:43:18.210102Z",
        "url": "https://files.pythonhosted.org/packages/4d/2e/e792b5a19e3d21ed9ae25045d4105817848498ca6c4a5623ca84152d4856/haas-python-sn74hc595-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcf57bca212113435ab6b2dc0fad4ae41cc0e25030ce3b951676c0b8105a0bd0",
          "md5": "14d4bc3b42020e532db62fd4d4603f02",
          "sha256": "7d01a6359aa8ce21bb0731bc8226866ada814b73c08c7ba6c862eb2905b702c1"
        },
        "downloads": -1,
        "filename": "haas-python-sn74hc595-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "14d4bc3b42020e532db62fd4d4603f02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8524,
        "upload_time": "2022-06-10T06:13:56",
        "upload_time_iso_8601": "2022-06-10T06:13:56.592955Z",
        "url": "https://files.pythonhosted.org/packages/fc/f5/7bca212113435ab6b2dc0fad4ae41cc0e25030ce3b951676c0b8105a0bd0/haas-python-sn74hc595-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "114309c05aaef119882da856d597b9974f4707fa039818cb8ef5dd78bec5c933",
          "md5": "54ab0118b62a9410dbd249fe5d07a996",
          "sha256": "e659d1b617b80c7da1c64e5c459a312b2a780b07d1c3d26a706059e07d41b60b"
        },
        "downloads": -1,
        "filename": "haas-python-sn74hc595-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "54ab0118b62a9410dbd249fe5d07a996",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8525,
        "upload_time": "2022-06-14T09:58:59",
        "upload_time_iso_8601": "2022-06-14T09:58:59.508138Z",
        "url": "https://files.pythonhosted.org/packages/11/43/09c05aaef119882da856d597b9974f4707fa039818cb8ef5dd78bec5c933/haas-python-sn74hc595-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69b0bba59f164abf3cf6fc04acce066cd684b892d201935c1b1811b6c7c1a449",
          "md5": "c40341f5f2b2b51703a199e4c2da85df",
          "sha256": "db2a520dddbd908c8358caff631cf344ef0f724bf9c3c631eda741a8427465d5"
        },
        "downloads": -1,
        "filename": "haas-python-sn74hc595-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c40341f5f2b2b51703a199e4c2da85df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8525,
        "upload_time": "2022-06-15T11:16:55",
        "upload_time_iso_8601": "2022-06-15T11:16:55.205882Z",
        "url": "https://files.pythonhosted.org/packages/69/b0/bba59f164abf3cf6fc04acce066cd684b892d201935c1b1811b6c7c1a449/haas-python-sn74hc595-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a7adf39092813096fcf25c99940e8fbfa5dd1fa02a8822a1d691712503d2418",
          "md5": "3788e82ca4a9e8fe25a2add0c2a81197",
          "sha256": "56d77e5b9bc77865927849db50cff0e211bc6aec18b55f7b155947bf7b31c3d6"
        },
        "downloads": -1,
        "filename": "haas-python-sn74hc595-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "3788e82ca4a9e8fe25a2add0c2a81197",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8523,
        "upload_time": "2022-06-20T06:14:27",
        "upload_time_iso_8601": "2022-06-20T06:14:27.779602Z",
        "url": "https://files.pythonhosted.org/packages/2a/7a/df39092813096fcf25c99940e8fbfa5dd1fa02a8822a1d691712503d2418/haas-python-sn74hc595-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a7adf39092813096fcf25c99940e8fbfa5dd1fa02a8822a1d691712503d2418",
        "md5": "3788e82ca4a9e8fe25a2add0c2a81197",
        "sha256": "56d77e5b9bc77865927849db50cff0e211bc6aec18b55f7b155947bf7b31c3d6"
      },
      "downloads": -1,
      "filename": "haas-python-sn74hc595-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "3788e82ca4a9e8fe25a2add0c2a81197",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8523,
      "upload_time": "2022-06-20T06:14:27",
      "upload_time_iso_8601": "2022-06-20T06:14:27.779602Z",
      "url": "https://files.pythonhosted.org/packages/2a/7a/df39092813096fcf25c99940e8fbfa5dd1fa02a8822a1d691712503d2418/haas-python-sn74hc595-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}