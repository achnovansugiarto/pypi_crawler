{
  "info": {
    "author": "Sangwon Kim",
    "author_email": "bestksw@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# Sumav\nSumav is a fully automated labeling tool that assigns each file a family name based on AV labels.\nCreates a relationship graph between AV label tokens through VirusTotal file feed (similar to ML training), and then infers family name from AV label for one input file (similar to ML serving).\n![Image](./sumav_overview.jpg \"Overview of Sumav\")\n\n\n\n# Quickstart with docker-compose\nWe assume that you already have [docker-compose](https://docs.docker.com/compose/install/) installed.\n> NOTICE: We provide a sql file of pregenerated Suamv graph for a quick start, but for the best performance, you should update Sumav graph periodically.\n```\n$ git clone https://github.com/bestksw/sumav.git\n$ cd sumav\n$ zip -F sumav_paper_graph.zip --out full-archive.zip && unzip full-archive.zip && rm full-archive.zip\n$ docker-compose up -d --no-build\n$ docker exec -it sumav_sumav_1 sumav run select '[\"PUP/Win32.Dealply.C3316715\", \"Win32:DealPly-AJ [Adw]\", \"a variant of Win32/DealPly.RC potentially unwanted\", null]'\ndealply\n```\n\n# Install\n## Prerequsite\n- Above Python 3.5 with Ubuntu 16.04\n- Above PostgreSQL 11 server and clients\n\nTested on PostgreSQL 11.1 and Python 3.8 with Ubuntu 20.04 Desktop\n\n## pip install\n```\npip3 install sumav\n```\n\n# How to use\nYou should build your own graph from VT filefeed/apiv2 before run Sumav.\n\n## Create graph\n### CMD\n```\n$ sumav\nusage: sumav [-h] [-l {n,c,e,w,i,d}] [-v] [-s] {build,migrate,run} ...\n\npositional arguments:\n  {build,migrate,run}   command to run\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -l {n,c,e,w,i,d}, --logging_level {n,c,e,w,i,d}\n                        n:none, c:critical, e:error, w:warn, i:info, d:debug\n  -v, --version         show program's version number and exit\n  -s, --show-config     show configs came from environment variables. (refer\n                        to /home/bestksw/workspace_sumav/Sumav/sumav/conf.py)\n...\n\n$ sumav build\nusage: sumav build [-h] [-p] {vt,none} ...\n\npositional arguments:\n  {vt,none}             preprocess data from\n    vt                  virustotal\n    none                skip preprocess\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p, --preprocess-only\n\n$ PSQL_HOST=172.31.10.10 PSQL_DB=sumav_exp sumav build vt /srv/vt_file_feed  # Takes one day per a month of data\n...\n\n$ PSQL_HOST=172.31.10.10 PSQL_DB=sumav_exp sumav run \nusage: sumav run [-h] {select,compare,similar} ...\n\npositional arguments:\n  {select,compare,similar}\n                        query methods\n\noptional arguments:\n  -h, --help            show this help message and exit\n\n$ sumav run select '[\"PUP/Win32.Dealply.C3316715\", \"Win32:DealPly-AJ [Adw]\", \"a variant of Win32/DealPly.RC potentially unwanted\", null]'\ndealply\n```\n### API\n```python\n$ PSQL_HOST=172.31.10.10 PSQL_DB=sumav_exp python3\n>>> import sumav\n>>> from sumav.conf import get_conf, psql_conf\n>>> help(sumav)  # API documentation\n>>> get_conf()   # Can see configuration\n...\n>>> # Convert VT file feed to Sumav DB\n>>> from_vt = FromVT(**psql_conf)\n>>> from_vt.convert('/srv/vt_file_feed')\n...\n>>> from_vt.close() # Close connection\n>>> # Build graph\n>>> builder = SumavGraphBuilder(**psql_conf)\n>>> builder.build_graph(processes=30, skip_build_token_node=False)\n...\n>>> builder.close() # Close connection\n```\n## Run Sumav\n```python\n$ PSQL_HOST=172.31.10.10 PSQL_DB=sumav_exp python3\n>>> import sumav\n>>> from sumav.conf import get_conf, psql_conf\n>>> get_conf()   # Can see configuration\n...\n>>> # If you want to designate dumped graph, execute below line\n>>> # psql_conf['database'] = 'sumav_srv_200101-200601'\n>>> searcher = sumav.SumavGraphSearcher(**psql_conf)\n>>> # searcher.load_dumped_graph()  # Automatically load dumped graph came from remote\n>>> dn = ['PUP/Win32.Dealply.C3316715', 'Win32:DealPly-AJ [Adw]',\n          'a variant of Win32/DealPly.RC potentially unwanted',\n          None, 'DealPly Updater (PUA)', None, None]\n>>> searcher.get_representative_token(av_labels=dn)\ndealply\n```\n\n# License\nApache 2.0\n\\+ You must notify \"Sumav is used\" in your project even if only its outputs are used.\n\n# Paper\nKim, Sangwon, et al. \"Sumav: Fully automated malware labeling.\" ICT Express (2022).\n[Download pdf](https://reader.elsevier.com/reader/sd/pii/S2405959522000285?token=A8126AF7B95878CAA703DC9B86151A9369C80A7C1CFF36FFC3CD42D00AF37164D283F7FFF71B7B8D0034673EB245EB41&originRegion=us-east-1&originCreation=20220316000335)\n\nKim, Sangwon, et al. \"Sumav: A Scheme for Selecting a Keyword from Detection Names using Conditional Probability.\"  _2020 International Conference on Information and Communication Technology Convergence (ICTC)_. IEEE, 2020.\n[Download pdf](https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9289189)\n\n# Patent\n[KR102199704B1](https://patents.google.com/patent/KR102199704B1/en)\n\n[US11,232,200B2](https://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=11,232,200.PN.&OS=PN/11,232,200&RS=PN/11,232,200)\n\n# Authors\n- Sangwon Kim\n- Wookhyun Jung\n- Eltak Kim\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bestksw/sumav",
    "keywords": "summerize detecion anti-virus software virustotal labeling",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sumav",
    "package_url": "https://pypi.org/project/sumav/",
    "platform": null,
    "project_url": "https://pypi.org/project/sumav/",
    "project_urls": {
      "Homepage": "https://github.com/bestksw/sumav"
    },
    "release_url": "https://pypi.org/project/sumav/1.0.3/",
    "requires_dist": [
      "psycopg2-binary",
      "requests"
    ],
    "requires_python": ">=3.4",
    "summary": "Sumav is a fully automated labeling tool that assigns each file a family name based on AV labels.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13753666,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a09010e7b03c1b7e07377c4e7e225261a26b83ead4e9f94b5a4983759600250",
          "md5": "b323bd75805c8e579fb1dd1cfdaff839",
          "sha256": "808233140cfe3b90fd0f9b378513fabb4e8c598400fef83b744b44f03a99357e"
        },
        "downloads": -1,
        "filename": "sumav-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b323bd75805c8e579fb1dd1cfdaff839",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 3218455,
        "upload_time": "2022-05-09T00:43:15",
        "upload_time_iso_8601": "2022-05-09T00:43:15.463614Z",
        "url": "https://files.pythonhosted.org/packages/2a/09/010e7b03c1b7e07377c4e7e225261a26b83ead4e9f94b5a4983759600250/sumav-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8de3915c8285edaa79b9c6bde48746bd8c342c12230bc1231761ab3b27be8ec4",
          "md5": "534f9c6d7e5a9d888d9bdbad1b24ab2a",
          "sha256": "b1a16ef2974d523e5a00c884f2a47d18d6e7bec6adb2d3a66aa73198d4ecdb3f"
        },
        "downloads": -1,
        "filename": "sumav-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "534f9c6d7e5a9d888d9bdbad1b24ab2a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 3235869,
        "upload_time": "2022-05-09T01:11:14",
        "upload_time_iso_8601": "2022-05-09T01:11:14.199503Z",
        "url": "https://files.pythonhosted.org/packages/8d/e3/915c8285edaa79b9c6bde48746bd8c342c12230bc1231761ab3b27be8ec4/sumav-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8de3915c8285edaa79b9c6bde48746bd8c342c12230bc1231761ab3b27be8ec4",
        "md5": "534f9c6d7e5a9d888d9bdbad1b24ab2a",
        "sha256": "b1a16ef2974d523e5a00c884f2a47d18d6e7bec6adb2d3a66aa73198d4ecdb3f"
      },
      "downloads": -1,
      "filename": "sumav-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "534f9c6d7e5a9d888d9bdbad1b24ab2a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 3235869,
      "upload_time": "2022-05-09T01:11:14",
      "upload_time_iso_8601": "2022-05-09T01:11:14.199503Z",
      "url": "https://files.pythonhosted.org/packages/8d/e3/915c8285edaa79b9c6bde48746bd8c342c12230bc1231761ab3b27be8ec4/sumav-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}