{
  "info": {
    "author": "Guillaume Anciaux",
    "author_email": "guillaume.anciaux@epfl.ch",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Other/Proprietary License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<img width=\"30%\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=https://www.nicepng.com/png/detail/180-1803537_177kib-900x900-black-dynamite-black-dynamite.png>\n\n# Quick start\n\n## Documentation\n\nThe complete documentation of the project is on [readthedocs](https://blackdynamite.readthedocs.io/en/latest/)\n\n## Installation\n\nThe easiest is through pip:\n\n```bash\npip install blackdynamite\n```\n\nFor a user scope installation (recommended):\n\n```bash\npip install --user  blackdynamite\n```\n\nOr directly for the GitLab repository:\n\n```bash\npip install  https://gitlab.com/ganciaux/blackdynamite.git\n```\n\n\n## Getting the sources\n\nYou can clone the GIT repository:\n\n```bash\ngit clone https://gitlab.com/ganciaux/blackdynamite.git\n```\n\n## Installing completion\n\nTo benefit the autocompletion for **BlackDynamite** you need to\nactivate the global completion as described in the argcomplete website:\n[Howto activate global completion](https://kislyuk.github.io/argcomplete/#activating-global-completion).\n\n## Introduction and philosophy\n\n**Blackdynamite** is merely a tool to help\nmanaging parametric studies. In details it comprises:\n\n1) Launching a program repeatedly with varying parameters, to explore the\n  chosen parametric space.\n  \n2) Collect and sort results of **Small sizes** benefiting\n  from the power of modern databases.\n  \n3) Analyze the results by making requests to the associated databases.\n\n\n**Launching** is made simple by allowing any executable\nto be launched. The set of directories will be generated and managed\nby BlackDynamite to prevent errors. Requests of any kind will then\nbe made to the underlying database through friendly commands of BlackDynamite.\n\n**Collecting** the results will be possible thanks to the Blackdynamite C/C++ and python\nAPI which will let you send results directly to the database and thus automatically sort them. This is extremely useful. However heavy data such as Paraview files or any other kind of data should not be pushed to the database for obvious performance issues.\n\n**Analysis** of the results can be made easy thanks to Blackdynamite which\ncan retrieve data information in the form of Numpy array to be used, analyzed or plotted\nthanks to the powerful and vast Python libraries such as Matplotlib and Scipy.\n\nThe construction of a **BlackDynamite** parametric study follows these steps:\n\n- Describing the parametric space\n- Creating jobs (specific points in the parametric space)\n- Creating runs (instances of the jobs)\n- Launching runs\n- Intrumenting the simulation to send results\n- Analyzing the results\n\n# Setting up a parametric study\n\nThe parametrization of a study is done in a YAML file, labelled\n[bd.yaml](https://gitlab.com/ganciaux/blackdynamite/-/blob/master/example/bd.yaml).\nIt contains the information of the parametric space, spanned exploration and\nconfiguration of your simulations. An example of a working study is provided in\nthe [example](https://gitlab.com/ganciaux/blackdynamite/-/tree/master/example) directory.\n\nA study description starts with a provided name in the YAML format:\n\n```yaml\n---\n\nstudy: bd_study\n```\n\n## Choose the parameters of the study\n\n### Job description\n\nThe first thing to do is to list all the parameters characterizing \na specific case. These parameters can\nbe of simple scalar types (e.g. string, integers, floats), however no\nvectorial quantity can be considered as an input parameter.\nIt describes the `Job` pattern of the study.\nThis must be defined in a section in the the\n[bd.yaml](https://gitlab.com/ganciaux/blackdynamite/-/blob/master/example/bd.yaml) file.\nFor instance a three parameter space can be declared as:\n\n```yaml\njob:\n  param1: float\n  param2: float\n  param3: str\n\n```\n\nBy default there is one more entry to every job: its unique `id`.\n\n\n### Run description\n\nAside from the jobs, a run will represent a particular realisation (computation)\nof a job. For instance, the run will contain information of the machine\nit was run on, the executable version, or the number of processors employed.\nFor instance creating the run pattern can be done with:\n\n```yaml\nrun:\n  compiler: str\n```\n\nBy default there are entries created for the user:\n\n- id: the id of the run\n- machine_name: the name of the machine where the run must be executed\n- nproc: number of processors used to perform the computation (default: 1)\n- run_path: the directory where the run will be created and launched\n- job_id (integer): the ID of the running job\n- state (str): the current state of the run (`CREATED`, `FINISHED`, `ERROR`)\n- run_name (string): the name of the run (usually a name is given to a collection of runs, at creation)\n- start_time (datetime): time when the run started\n- last_step_time (datetime): last time a quantity was pushed to the database\n\n\n## Create the database\n\nThen you have to request for the creation of the database which can be done\nwith a simple command:\n```bash\ncanYouDigIt init --truerun\n```\n\nAs mentioned, all BlackDynamite\nscripts inherit from the parsing system. So that when needing to launch\none of these codes, you can always claim for the valid keywords:\n```bash\ncanYouDigIt init --help\n\nusage: canYouDigIt [--study STUDY] [--host HOST] [--port PORT] [--user USER] [--password PASSWORD] [--bdconf BDCONF] [--truerun] [--constraints CONSTRAINTS]\n                   [--binary_operator BINARY_OPERATOR] [--list_parameters] [--yes] [--logging] [--help]\n\ncreateDB\n\nGeneral:\n  --logging             Activate the file logging system (default: False)\n  --help                Activate the file logging system (default: False)\n\nBDParser:\n  --study STUDY         Specify the study from the BlackDynamite database. This refers to the schemas in PostgreSQL language (default: None)\n  --host HOST           Specify data base server address (default: None)\n  --port PORT           Specify data base server port (default: None)\n  --user USER           Specify user name to connect to data base server (default: tarantino)\n  --password PASSWORD   Provides the password (default: None)\n  --bdconf BDCONF       Path to a BlackDynamite file (*.bd) configuring current options (default: None)\n  --truerun             Set this flag if you want to truly perform the action on base. If not set all action are mainly dryrun (default: False)\n  --constraints CONSTRAINTS\n                        This allows to constraint run/job selections by properties (default: None)\n  --binary_operator BINARY_OPERATOR\n                        Set the default binary operator to make requests to database (default: and)\n  --list_parameters     Request to list the possible job/run parameters (default: False)\n  --yes                 Answer all questions to yes (default: False)\n```\n\nAn important point is that most of the actions are only applied\nwhen the `truerun` flag is set. \n\n## Creating the jobs\n\nThe goal of the parametric study is to explore a subpart\nof the parametric space. We need to create jobs that are\nthe points to explore. \n\nWe need to describe the desired set of jobs, to be explored.\nThis is done in the YAML file describing the study, under the\nsection `job_space`. For instance it could be:\n\n```yaml\njob_space:\n  param1: 10\n  param2: [3.14, 1., 2.]\n  param3: 'toto'\n```\n\nThe actual insertion of jobs can be done with the command:\n\n```python\ncanYouDigIt jobs create --truerun\n```\n\nYou can control the created jobs with:\n\n```python\ncanYouDigIt jobs info\n```\n\nIn the case of our [example](https://gitlab.com/ganciaux/blackdynamite/-/tree/master/example), 3 jobs should be created\nas a range of values for the second parameter was provided.\n\n\n## Creating the runs\n\nAt this point the jobs are in the database. You need to create runs\nthat will precise the conditions of the realization of the jobs,\nby giving the value of the run space.\n\n\nThis is specified in the YAML file under the section run_space. For instance\nwith:\n\n```yaml\nrun_space:\n  compiler: 'gcc'\n```\n\nThe default parameters for runs will then be automatically\nincluded in the parameters for the not provided ones (e.g. `state`).\n\nA run now specify what action to perform to realize the job.\nTherefore, one script must be provided as an entry point to each run execution.\nThis will be given in the YAML file as the `exec_file`. For instance from the\n[example](https://gitlab.com/ganciaux/blackdynamite/-/tree/master/example)\na bash script is the entry point and provided as follows:\n\n```yaml\nexec_file: launch.sh\n```\n\nUsually, an end-user has a script(s) and configuration files\nthat he wishes to link to the run.\nThis can be done with:\n\n```yaml\nconfig_files:\n  - config.txt\n  - script.py\n```\n\nFinally, we have to create Run objects and attach them to jobs,\nwhich is done with the command:\n\n```bash\ncanYouDigIt runs create --truerun\n```\n\nAfter that, all created runs should be present in the database in the state\n`CREATED`, ready to be launched. This can be controled with the command:\n\n```bash\ncanYouDigIt runs info\n```\n\n## Instrumenting *Text* simulation files (e.g. a bash script)\n\n`BlackDynamite` will replace specific text marks in the registered files\nwith the values from the job and run particular point. A precise syntax is\nexpected for `BlackDynamite` to recognize a replacement to be performed.\n\nFor instance:\n\n```\necho __BLACKDYNAMITE__param1__\n```\n\nshall be replaced by the value of `param1` parameter at the run creation.\n\nAs an additional example, the script `launch.sh` taken \nfrom the [example](https://gitlab.com/ganciaux/blackdynamite/-/tree/master/example) has lines such as:\n\n```\necho 'here is the job'\necho __BLACKDYNAMITE__id__\necho __BLACKDYNAMITE__param1__\necho __BLACKDYNAMITE__param2__\necho __BLACKDYNAMITE__param3__\n```\n\n## Instrumenting a *Python* simulation\n\nIn a python program, one can benefit from the possibilities of `Python` to\nget a handle object on the current job and run.\nThis will also allow to push produced data to the database.\nThis is done by the simplified commands:\n\n```python\n# import BlackDynamite\nimport BlackDynamite as BD\n# get the run from the current scope\nmyrun, myjob = BD.getRunFromScript()\n```\n\nIn order to have time entries for runs, the functions `start` and `finish`\nneed to be called:\n\n```python\nmyrun.start()\n...\n# your code\n...\nmyrun.finish()\n```\n\nFinally, to push data directly to the database, one can use\n`pushVectorQuantity` and/or `pushScalarQuantity`, attached to\nmeaurable `quantities`:\n\n```python\n# pushing vector types (numpy)\nmyrun.pushVectorQuantity(vector, step, \"quantity_id\")\n# pushing scalar types \nmyrun.pushScalarQuantity(scalar, step, \"quantity_id\")\n```\n\n## Executing the runs\n\nOnce the runs are created, they can be launched with a command like\n\n```\ncanYouDigIt runs launch --truerun\n```\n\nDuring and after the run the status can be controlled, once again, with:\n\n```bash\ncanYouDigIt runs info\n```\n\nFor detailed information on a specific run:\n\n```bash\ncanYouDigIt runs info --run_id RUN_ID_NUMBER\n```\n\nin order to be placed in the context of a specific run:\n\n```bash\ncanYouDigIt runs info --run_id RUN_ID_NUMBER --enter\n```\n\nto execute a specific command\n\n```bash\ncanYouDigIt runs info --exec COMMAND\n```\n\nand applied for a specific run:\n\n```bash\ncanYouDigIt runs info --run_id RUN_ID_NUMBER --exec COMMAND\n```\n\n# Manipulating the database\n## Selecting jobs and runs\n\nAll the previous commands may be applied to a subset of runs/jobs.\nIn order to select them one should place constraints, provided by\nthe option `--constraint`.\nFor instance, listing the runs constraining parameters\nlabeled `param1` and `param2` could be made with:\n\n```bash\ncanYouDigIt runs info --constraint 'param1 > 1, param2 = 2'\n```\n\nIn the exceptional case where parameters of jobs and runs would bear the same name\n(you should avoid to do that), one can disambiguate the situation with:\n\n\n```bash\ncanYouDigIt runs info --constraint 'jobs.id > 1, runs.id = 2'\n```\n\n## Cleaning Runs\n\nSometimes it can be necessary to re-launch a set of runs. Sometimes it\ncan be necessary to delete a run. In order to reset some runs,\nmaking them ready to relaunch, one should use the following:\n\n```bash\ncanYouDigIt runs clean --constraint 'jobs.id > 1, runs.id = 2' --truerun\n```\n\nTo completely delete them:\n\n```bash\ncanYouDigIt runs clean --constraint 'jobs.id > 1, runs.id = 2' --delete --truerun\n```\n\n## Altering runs\n\nRarely it can be necessary to manually change a set of runs. For instance changing the state of a set of runs can be done with:\n\n```bash\ncanYouDigIt runs update --truerun state = toto\n```\n\n## Plotting results\n\nFor starting the exploration of the collected data, and thus producing graphs,\nthe `plot`command can be employed. While tunable, it cannot produce any type of graphs. However, for quick exploration of the data, one could do:\n\n```bash\ncanYouDigIt runs plot --quantity ekin --legend \"%r.id\" --marker o\n```\n\n## Exporting the results (to zip file)\n\nUnder Construction\n\n## Fecthing the results\n\nUnder construction...\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/ganciaux/blackdynamite",
    "keywords": "",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "blackdynamite",
    "package_url": "https://pypi.org/project/blackdynamite/",
    "platform": null,
    "project_url": "https://pypi.org/project/blackdynamite/",
    "project_urls": {
      "Documentation": "https://blackdynamite.readthedocs.io/en/latest/",
      "Homepage": "https://gitlab.com/ganciaux/blackdynamite",
      "Repository": "https://gitlab.com/ganciaux/blackdynamite"
    },
    "release_url": "https://pypi.org/project/blackdynamite/1.0.5/",
    "requires_dist": [
      "argcomplete (>=2.0.0)",
      "ipython (>=8.11.0,<9.0.0)",
      "matplotlib (>=3.6.3,<4.0.0)",
      "numpy (>=1.24.1)",
      "pandas (>=1.5.3,<2.0.0)",
      "psutil (>=5.9.4,<6.0.0)",
      "psycopg2-binary (>=2.9.5,<3.0.0)",
      "pyparsing (>=3.0.9,<4.0.0)",
      "pyyaml (>=6.0,<7.0)",
      "tabulate (>=0.9.0,<0.10.0)",
      "tqdm (>=4.64.1,<5.0.0)",
      "traitlets (>=5.9.0,<6.0.0)",
      "zeo (>=5.4.0,<6.0.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "Scientific Parametric Study Tool",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17193434,
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61437c8cadba1e3d6cf25ea317f1644e54f00742f56e256b5ef2a6b06c725ee5",
          "md5": "c8e25606d91985a43673e4860720acbe",
          "sha256": "8752642e4ebcfc489b54c1aaaf5c141f0c69d6866661f2332828ae3a1e1a364c"
        },
        "downloads": -1,
        "filename": "blackdynamite-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8e25606d91985a43673e4860720acbe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 96880,
        "upload_time": "2023-01-30T14:36:50",
        "upload_time_iso_8601": "2023-01-30T14:36:50.577376Z",
        "url": "https://files.pythonhosted.org/packages/61/43/7c8cadba1e3d6cf25ea317f1644e54f00742f56e256b5ef2a6b06c725ee5/blackdynamite-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12e5f84fe789c9a6ea6e9786686f5d9e7a60e5eb87841bc590801b41978b5962",
          "md5": "1d316a9b1fc8f368183273f21fd02b42",
          "sha256": "0691ae283ecd44b93a6240d5fdb8b78be4b0e57a56f0ad94715f557cde76e338"
        },
        "downloads": -1,
        "filename": "blackdynamite-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1d316a9b1fc8f368183273f21fd02b42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 51483,
        "upload_time": "2023-01-30T14:36:52",
        "upload_time_iso_8601": "2023-01-30T14:36:52.505886Z",
        "url": "https://files.pythonhosted.org/packages/12/e5/f84fe789c9a6ea6e9786686f5d9e7a60e5eb87841bc590801b41978b5962/blackdynamite-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9271e90693f04d39bb5bd4de88ea49edf391ddb39d13b978f046e78e626dab4e",
          "md5": "97cdf481f213cfb192c6e2ec94a7b415",
          "sha256": "a9e86e24079d477d102ceec5129f629745b4faaa050a114c3f8675c38cf2ca33"
        },
        "downloads": -1,
        "filename": "blackdynamite-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97cdf481f213cfb192c6e2ec94a7b415",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 78202,
        "upload_time": "2023-01-30T15:00:27",
        "upload_time_iso_8601": "2023-01-30T15:00:27.221103Z",
        "url": "https://files.pythonhosted.org/packages/92/71/e90693f04d39bb5bd4de88ea49edf391ddb39d13b978f046e78e626dab4e/blackdynamite-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ca44de30592a97b5faa423e85da7ff1a1ede97b411aeaff1a187926cf049940",
          "md5": "b00c472f0ab3328a42a558aae30ed2f4",
          "sha256": "d84cacf41214c3aa4126f550a5665250a06e90b890e5dc39065ebe9d4ca40bf2"
        },
        "downloads": -1,
        "filename": "blackdynamite-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b00c472f0ab3328a42a558aae30ed2f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 46714,
        "upload_time": "2023-01-30T15:00:28",
        "upload_time_iso_8601": "2023-01-30T15:00:28.483773Z",
        "url": "https://files.pythonhosted.org/packages/3c/a4/4de30592a97b5faa423e85da7ff1a1ede97b411aeaff1a187926cf049940/blackdynamite-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5933f2e04d76982f9633cf314baec7df4346ddf3522c9c728f2c1da7bc486886",
          "md5": "50ecd85b3561b38a339da99849bff918",
          "sha256": "8ed1571ccc57a125b9a2ad5e861df347f776965d11d389b9215a0832ff867cc2"
        },
        "downloads": -1,
        "filename": "blackdynamite-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50ecd85b3561b38a339da99849bff918",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 78197,
        "upload_time": "2023-01-30T15:58:00",
        "upload_time_iso_8601": "2023-01-30T15:58:00.235685Z",
        "url": "https://files.pythonhosted.org/packages/59/33/f2e04d76982f9633cf314baec7df4346ddf3522c9c728f2c1da7bc486886/blackdynamite-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e230bf27e4edced4598b03081a57ddec87392e4304bae2de36081629971be4e",
          "md5": "fb2879a8fcfbc61f7babf0512553f7c3",
          "sha256": "1e3d8cebbeadc664bdb316e0e5cf43cb1f9a62a4df1f758a55d7e3061273ff4a"
        },
        "downloads": -1,
        "filename": "blackdynamite-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fb2879a8fcfbc61f7babf0512553f7c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 46706,
        "upload_time": "2023-01-30T15:58:01",
        "upload_time_iso_8601": "2023-01-30T15:58:01.562005Z",
        "url": "https://files.pythonhosted.org/packages/9e/23/0bf27e4edced4598b03081a57ddec87392e4304bae2de36081629971be4e/blackdynamite-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aff7b20ca8847ebd7b1eaf7cd69400a9b3f3fe38b8ee590716ab98b961dd72eb",
          "md5": "e85e097b508857a0ba3e7372e4bf8da9",
          "sha256": "ef648b58b55426a696a234e0880d629fcce290d4b35fd205508f7d13e2e7fe85"
        },
        "downloads": -1,
        "filename": "blackdynamite-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e85e097b508857a0ba3e7372e4bf8da9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 78200,
        "upload_time": "2023-01-31T09:53:14",
        "upload_time_iso_8601": "2023-01-31T09:53:14.486640Z",
        "url": "https://files.pythonhosted.org/packages/af/f7/b20ca8847ebd7b1eaf7cd69400a9b3f3fe38b8ee590716ab98b961dd72eb/blackdynamite-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2a58600478b2f9370f0772b02fb867e55e46fb39c7120bb5079d6032473a90c",
          "md5": "259eec69601474580f04d44dbb446c48",
          "sha256": "a1b984078427de1a1997f9ee7e64c229973899ce8ff9317ba2a4f69115656cf7"
        },
        "downloads": -1,
        "filename": "blackdynamite-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "259eec69601474580f04d44dbb446c48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 46728,
        "upload_time": "2023-01-31T09:53:16",
        "upload_time_iso_8601": "2023-01-31T09:53:16.218641Z",
        "url": "https://files.pythonhosted.org/packages/a2/a5/8600478b2f9370f0772b02fb867e55e46fb39c7120bb5079d6032473a90c/blackdynamite-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7afe17b04d688e38f8859299ce92fb4cdde83a69567766553e9d0e5a107982f",
          "md5": "ad778e6be5e301702a0e5c8170651b7b",
          "sha256": "0ec783e32f0f421feff653d2815925046bdac7923e714ba8db2e005c57eab660"
        },
        "downloads": -1,
        "filename": "blackdynamite-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad778e6be5e301702a0e5c8170651b7b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 78275,
        "upload_time": "2023-01-31T14:38:18",
        "upload_time_iso_8601": "2023-01-31T14:38:18.180089Z",
        "url": "https://files.pythonhosted.org/packages/e7/af/e17b04d688e38f8859299ce92fb4cdde83a69567766553e9d0e5a107982f/blackdynamite-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0f12980e31011a86337d6de68cf3975caccfd3bb735ad695de5834effa9b265",
          "md5": "7f4a67bc48804b5937d3c96b87a6172c",
          "sha256": "66d4fc56442210be66a062fc7637f652af0d49bda86c4dc10ba2980cccdac5b7"
        },
        "downloads": -1,
        "filename": "blackdynamite-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7f4a67bc48804b5937d3c96b87a6172c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 46779,
        "upload_time": "2023-01-31T14:38:19",
        "upload_time_iso_8601": "2023-01-31T14:38:19.765193Z",
        "url": "https://files.pythonhosted.org/packages/c0/f1/2980e31011a86337d6de68cf3975caccfd3bb735ad695de5834effa9b265/blackdynamite-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dbd53ea3dff33f49f2c217d9bcd326a8bf53e6d66bb622da2a64f7630fc6088",
          "md5": "f601beab55c7209fa8122096cef16ddc",
          "sha256": "1ee16cf0cb70a1ac3c36d218ab6acd6c4aeda98575012a86afc32e4784032698"
        },
        "downloads": -1,
        "filename": "blackdynamite-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f601beab55c7209fa8122096cef16ddc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 79758,
        "upload_time": "2023-03-01T13:58:57",
        "upload_time_iso_8601": "2023-03-01T13:58:57.565168Z",
        "url": "https://files.pythonhosted.org/packages/5d/bd/53ea3dff33f49f2c217d9bcd326a8bf53e6d66bb622da2a64f7630fc6088/blackdynamite-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5cfe590989889ac49beb71d768cc02078cb6cf8a2550fca641cdb361555624e",
          "md5": "7002456920bd530846461985d8d7acde",
          "sha256": "75964237c0d4d1cd2e616e4d67a706e6bbf43f5e15c5ba6c1e53537492767c84"
        },
        "downloads": -1,
        "filename": "blackdynamite-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7002456920bd530846461985d8d7acde",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 47648,
        "upload_time": "2023-03-01T13:58:59",
        "upload_time_iso_8601": "2023-03-01T13:58:59.298577Z",
        "url": "https://files.pythonhosted.org/packages/f5/cf/e590989889ac49beb71d768cc02078cb6cf8a2550fca641cdb361555624e/blackdynamite-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68c1fa4e977c6ab9fd12a6a09d813acec11e46895cbf5963a71ab620c5e52ac8",
          "md5": "63682e4f2c377891a8679592e043d983",
          "sha256": "fe11fb1d909f513dc8a53a1ae72c0653aff5d2fd905ec9a31fea20c5b65c0dff"
        },
        "downloads": -1,
        "filename": "blackdynamite-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63682e4f2c377891a8679592e043d983",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 82638,
        "upload_time": "2023-03-02T14:21:16",
        "upload_time_iso_8601": "2023-03-02T14:21:16.344053Z",
        "url": "https://files.pythonhosted.org/packages/68/c1/fa4e977c6ab9fd12a6a09d813acec11e46895cbf5963a71ab620c5e52ac8/blackdynamite-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3609445debdfb9b35d40e384e1f436cdc717279f483ca5994348cc48bb01334",
          "md5": "1153cfdae8a056711024f705dd56ed6e",
          "sha256": "cc8bd46326812d324b54c16272dc3a8aa2d39e69711ee6320fa6c83b62d9a0ef"
        },
        "downloads": -1,
        "filename": "blackdynamite-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1153cfdae8a056711024f705dd56ed6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 49673,
        "upload_time": "2023-03-02T14:21:17",
        "upload_time_iso_8601": "2023-03-02T14:21:17.525636Z",
        "url": "https://files.pythonhosted.org/packages/e3/60/9445debdfb9b35d40e384e1f436cdc717279f483ca5994348cc48bb01334/blackdynamite-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ddcb2240b8322e03dfae9db68591aea61cf44ce96a4794a80709050148e5bf8",
          "md5": "b0f3ee5c06517b3eaa80d50c3c7f4577",
          "sha256": "b7ec17f888427f325e3bd9e5b1057ade985b527a5e5fb8b0f232fbebd51c3c33"
        },
        "downloads": -1,
        "filename": "blackdynamite-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0f3ee5c06517b3eaa80d50c3c7f4577",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 82642,
        "upload_time": "2023-03-07T17:02:41",
        "upload_time_iso_8601": "2023-03-07T17:02:41.491901Z",
        "url": "https://files.pythonhosted.org/packages/0d/dc/b2240b8322e03dfae9db68591aea61cf44ce96a4794a80709050148e5bf8/blackdynamite-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1a4a051aad6e07ce5a5c45d54e66179494d28032f82c90c07f3928f3a702e90",
          "md5": "9355fb58bbba93583299cf4a8ab4909f",
          "sha256": "94da811d1c820a4316b3957f4bc4915a1a86a2afb91a1de69ff2c2ae4f35adbe"
        },
        "downloads": -1,
        "filename": "blackdynamite-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9355fb58bbba93583299cf4a8ab4909f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 49729,
        "upload_time": "2023-03-07T17:02:43",
        "upload_time_iso_8601": "2023-03-07T17:02:43.271662Z",
        "url": "https://files.pythonhosted.org/packages/e1/a4/a051aad6e07ce5a5c45d54e66179494d28032f82c90c07f3928f3a702e90/blackdynamite-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ddcb2240b8322e03dfae9db68591aea61cf44ce96a4794a80709050148e5bf8",
        "md5": "b0f3ee5c06517b3eaa80d50c3c7f4577",
        "sha256": "b7ec17f888427f325e3bd9e5b1057ade985b527a5e5fb8b0f232fbebd51c3c33"
      },
      "downloads": -1,
      "filename": "blackdynamite-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b0f3ee5c06517b3eaa80d50c3c7f4577",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 82642,
      "upload_time": "2023-03-07T17:02:41",
      "upload_time_iso_8601": "2023-03-07T17:02:41.491901Z",
      "url": "https://files.pythonhosted.org/packages/0d/dc/b2240b8322e03dfae9db68591aea61cf44ce96a4794a80709050148e5bf8/blackdynamite-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1a4a051aad6e07ce5a5c45d54e66179494d28032f82c90c07f3928f3a702e90",
        "md5": "9355fb58bbba93583299cf4a8ab4909f",
        "sha256": "94da811d1c820a4316b3957f4bc4915a1a86a2afb91a1de69ff2c2ae4f35adbe"
      },
      "downloads": -1,
      "filename": "blackdynamite-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "9355fb58bbba93583299cf4a8ab4909f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 49729,
      "upload_time": "2023-03-07T17:02:43",
      "upload_time_iso_8601": "2023-03-07T17:02:43.271662Z",
      "url": "https://files.pythonhosted.org/packages/e1/a4/a051aad6e07ce5a5c45d54e66179494d28032f82c90c07f3928f3a702e90/blackdynamite-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}