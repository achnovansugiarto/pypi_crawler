{
  "info": {
    "author": "Michael Connell",
    "author_email": "connellmp@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# littlebaker\n\n![littlebaker](https://user-images.githubusercontent.com/14168559/92421136-ebca1a80-f12b-11ea-8f90-c69ade7a659c.png)\n\nlittlebaker is your personal Python baker to create custom lists, dictionaries, matricies (lists of lists), [numpy arrays](https://numpy.org/doc/stable/reference/generated/numpy.array.html), csv files, in-memory json blobs, and [Pandas DataFrames](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html).\n\nAll it takes is\n\n    from littlebaker import littlebaker\n\n    baker_list = littlebaker.make.a_list() # returns list\n    baker_dict = littlebaker.make.a_dict() # returns dictionary\n    baker_matrix = littlebaker.make.a_matrix() # returns a list-of-lists\n    baker_array = littlebaker.make.an_array() # returns numpy array\n    baker_json = littlebaker.make.some_json() # returns json\n    baker_csv = littlebaker.make.a_csv() # creates a csv file\n    baker_df = littlebaker.make.a_df() # returns Pandas DataFrame\n\n## Installation\n\nsimply install littlebaker via pip `pip install littelbaker`\n\n## Examples and Usage\n\n### littlebaker.make.a_list(length, data_type)\n\n    length=\n        any integer greater than 0, specifies list length, defaults to 101\n    data_type=\n        specifies the type of values in the returned list, defaults to `int`. Valid options are\n            int: returns a list of integers\n            float: returns a list of floats\n            char: returns a list of single str characters\n            date: returns a list of dates\n            str: returns a list of random strings\n\n### littlebaker.make.a_dict(length, value_type)\n\n    length=\n        any integer greater than 0, specifies dictionary length, defaults to 101\n    value_type=\n        specifies the type returned in the value of the dictionary's key:value pair, defaults to char.\n        valid options are:\n            int: returns a dictionary with keys of integers and values of integers\n            float: returns a dictionary with keys of integers and values of floats\n            char: returns a dictionary with keys of integers and values of single str characters\n            date: returns a dictionary with keys of integers and values of dates\n            str: returns a dictionary with keys of integers and values of random strings\n\n### littlebaker.make.a_matrix(num_lists, list_length, value_type)\n\n    num_lists=\n        positive integer, specifies the number of lists within the returned matrix, defaults to 5\n    list_length=\n        positive integer, specifies the lentgh of the inner lists, defaults to 5\n    value_type=\n        specity the type returned in the inner lists, defaults to all\n        int: returns inner lists of integers\n        float: returns inner lists of floats\n        char: returns inner lists of single str characters\n        date: returns inner lists of dates\n        str: returns inner lists of random strings\n        all: returns inner lists of all of the above options. With this option, `num_lists` must be 5\n\n### littlebaker.make.an_array(matrix)\n\n    matrix=\n        matrix to use to create the array, defaults to the default values in `littlebaker.make.a_matrix()`\n        must be of type `List[list]`\n\n### littlebaker.make.some_json(value_length)\n\n    value_length=\n        positive integer, specifies the length of the values returned in the resulting json, defaults to 5\n\n### littlebaker.make.a_df(n)\n\n    n=\n        positive integer for the number of rows desired in the DataFrame, defaults to 100\n\n### littlebaker.make.a_csv(path, filename, rows, df, index)\n\n    path=\n        filepath to desired save location, defaults to the current `.py` file's directory\n    filename=\n        desired name of file, defaults to `littlebaker.csv`\n    rows=\n        positive integer to specity number of rows desired in the csv file, defaults to 100\n    df=\n        Pandas DataFrame to be written to csv, defaults to `littlebaker.make.a_df()`\n    index=\n        boolean to specify if an index is desired in the resulting csv\n\n**littlebaker can also generate dates for you with `littlebaker.date_generator()`**\n\n## date_generator(num_dates, start_year, end_year, as_list)\n\n    num_dates=\n        positive integer to specify the number of dates desired to be returned, defaults to 1\n    start_year=\n        positive integer for the beginning year of the random date(s) to be returned, defaults 1950\n    end_year=\n        positive integer for the end year of the random date(s) to be returned, defaults to the current year\n    as_list=\n        boolean to specify if the date(s) returned should be in list form or as individual newline separated dates, defaults to False\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MiConnell/littlebaker",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "littlebaker",
    "package_url": "https://pypi.org/project/littlebaker/",
    "platform": "",
    "project_url": "https://pypi.org/project/littlebaker/",
    "project_urls": {
      "Homepage": "https://github.com/MiConnell/littlebaker"
    },
    "release_url": "https://pypi.org/project/littlebaker/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Package to auto-generate lists, dictionaries, arrays, matricies (list-of-lists), json, csv files, and Pandas Dataframes",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8138867,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a1cc9e3faf425956a765037171bbff86ac61a4141c5c994e9d82c3bef7fb311",
          "md5": "f29fa67ad0900b58b228ff1c4889186b",
          "sha256": "5f70f07e6359a555697cf467259647a035c0a687e6eeff05d1b520dccf981ac9"
        },
        "downloads": -1,
        "filename": "littlebaker-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f29fa67ad0900b58b228ff1c4889186b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 29863,
        "upload_time": "2020-09-08T19:26:48",
        "upload_time_iso_8601": "2020-09-08T19:26:48.228757Z",
        "url": "https://files.pythonhosted.org/packages/8a/1c/c9e3faf425956a765037171bbff86ac61a4141c5c994e9d82c3bef7fb311/littlebaker-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cae2e91a4104acc60c4de9ce34512277266258ed0cca28987ac6290662a32012",
          "md5": "7d9ffe70b3dd369da7609074ec4f9006",
          "sha256": "c024bb9df1a8447ba9aa02d3d5b7fca305c4e6d00e1173ee83eae39134081655"
        },
        "downloads": -1,
        "filename": "littlebaker-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7d9ffe70b3dd369da7609074ec4f9006",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29912,
        "upload_time": "2020-09-08T19:26:51",
        "upload_time_iso_8601": "2020-09-08T19:26:51.144965Z",
        "url": "https://files.pythonhosted.org/packages/ca/e2/e91a4104acc60c4de9ce34512277266258ed0cca28987ac6290662a32012/littlebaker-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a1cc9e3faf425956a765037171bbff86ac61a4141c5c994e9d82c3bef7fb311",
        "md5": "f29fa67ad0900b58b228ff1c4889186b",
        "sha256": "5f70f07e6359a555697cf467259647a035c0a687e6eeff05d1b520dccf981ac9"
      },
      "downloads": -1,
      "filename": "littlebaker-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f29fa67ad0900b58b228ff1c4889186b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 29863,
      "upload_time": "2020-09-08T19:26:48",
      "upload_time_iso_8601": "2020-09-08T19:26:48.228757Z",
      "url": "https://files.pythonhosted.org/packages/8a/1c/c9e3faf425956a765037171bbff86ac61a4141c5c994e9d82c3bef7fb311/littlebaker-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cae2e91a4104acc60c4de9ce34512277266258ed0cca28987ac6290662a32012",
        "md5": "7d9ffe70b3dd369da7609074ec4f9006",
        "sha256": "c024bb9df1a8447ba9aa02d3d5b7fca305c4e6d00e1173ee83eae39134081655"
      },
      "downloads": -1,
      "filename": "littlebaker-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7d9ffe70b3dd369da7609074ec4f9006",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 29912,
      "upload_time": "2020-09-08T19:26:51",
      "upload_time_iso_8601": "2020-09-08T19:26:51.144965Z",
      "url": "https://files.pythonhosted.org/packages/ca/e2/e91a4104acc60c4de9ce34512277266258ed0cca28987ac6290662a32012/littlebaker-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}