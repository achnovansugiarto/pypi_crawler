{
  "info": {
    "author": "dm1sh",
    "author_email": "me@dmitriy.icu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# TTT-game\n\n[![codecov](https://codecov.io/gh/dm1sh/ttt-game/branch/main/graph/badge.svg?token=7GZ4FJ3E4E)](https://codecov.io/gh/dm1sh/ttt-game)\n[![Test and Publish](https://github.com/dm1sh/ttt-game/actions/workflows/ci.yml/badge.svg)](https://github.com/dm1sh/ttt-game/actions/workflows/ci.yml)\n\nA simple tic tac toe game implementation\n\n## Usage\n\n### Installation\n\nTesting builds:\n\n```bash\npython -m pip install -i https://test.pypi.org/simple/ ttt-game\n```\n\nProduction builds:\n\n```bash\npython -m pip install ttt-game\n```\n\nttt-game module exports main game class `Game` and `Pl` and `Tr` enums to simplify typing.\n\n```python\nfrom ttt_game import Game, Tr, Pl\n```\n\n### `Game` class\n\n```python\nclass Game:\n  \"\"\"\n  Board indexes preview:\n\n  [[0, 1, 2],\n\n   [3, 4, 5],\n\n   [6, 7, 8]]\n\n  Board array itself:\n\n  [Tr.E, Tr.E, Tr.E, Tr.E, Tr.E, Tr.E, Tr.E, Tr.E, Tr.E]\n  \"\"\"\n  _board: List[Tr]\n\n  def get_board(self) -> List[Tr]:\n    \"\"\"\n    Returns copy of game board. Use it to display board in UI.\n    \"\"\"\n\n  def check_move(self, pos: int) -> bool:\n    \"\"\"\n    Checks if board cell empty\n    \"\"\"\n\n  def check_filled(self) -> bool:\n    \"\"\"\n    Checks if game board is filled\n    \"\"\"\n\n  def check_win(self, pos: int) -> bool:\n    \"\"\"\n    Checks if this move will make player a winner.\n    \"\"\"\n\n  def insert(self, pos: int, who: Tr) -> None:\n    \"\"\"\n    Sets game board's cell to specified value. Better use `move` method when possible\n    \"\"\"\n\n  def move(self, pos: int, who: Pl) -> bool:\n    \"\"\"\n    Sets game board cell to specified value when possible. It also returns true if player has won.\n    \"\"\"\n\n  def get_free(self) -> Tuple[int]:\n    \"\"\"\n    Returns indexes of free game board cells\n    \"\"\"\n```\n\nTo use it you should initialize it like below:\n\n```python\ngame = Game()\n```\n\nTo make move, below code is listed. `result` variable will contain `True` if `Pl.X` player won the game.\n\n```python\nresult = game.move(1, Tr.X)\nif result:\n  print(\"Congrats, X player won!\")\n```\n\nYou also can get game board array with `get_board` method. To visualize it you can customize code listed below.\n\n```python\nboard = game.get_board()\n\nfor i in range(9):\n  print(board[i], end=\" \")\n  if i % 3 == 2:\n    print(\"\\n\", end=\"\")\n\n\"\"\"\noutput: Tr.E Tr.X Tr.E\n        Tr.E Tr.E Tr.E\n        Tr.E Tr.E Tr.E\n\"\"\"\n```\n\n### `Pl` and `Tr` Enums\n\n`Pl` has two members: `X` and `O` meaning X and O players.\n\n```python\nclass Pl(Enum):\n  X = 1\n  O = 2\n```\n\n`Tr` enum has all members of `Pl` plus `E` entry meaning empty cell.\n\n```python\nclass Tr(Enum):\n  E = 0\n  X = Pl.X\n  O = Pl.O\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dm1sh/ttt-game",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ttt-game",
    "package_url": "https://pypi.org/project/ttt-game/",
    "platform": "",
    "project_url": "https://pypi.org/project/ttt-game/",
    "project_urls": {
      "Bug Tracker": "https://github.com/dm1sh/ttt-game/issues",
      "Homepage": "https://github.com/dm1sh/ttt-game"
    },
    "release_url": "https://pypi.org/project/ttt-game/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A simple tic tac toe game implementation",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11139683,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15bad8575a3a5cd73c363624252004a703400d614873ba7c1c540d8a189fd19b",
          "md5": "2229f86a625f5abc39a3fed63cae4948",
          "sha256": "424e2487271182a4fb890ba549115399d8a8f5c0d772f66b96ad384aa385d333"
        },
        "downloads": -1,
        "filename": "ttt_game-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2229f86a625f5abc39a3fed63cae4948",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4169,
        "upload_time": "2021-08-10T12:30:46",
        "upload_time_iso_8601": "2021-08-10T12:30:46.342165Z",
        "url": "https://files.pythonhosted.org/packages/15/ba/d8575a3a5cd73c363624252004a703400d614873ba7c1c540d8a189fd19b/ttt_game-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9823c06db4f140bc24902eee94d9ca11200e05436ff1c517d2b0103d25c891f5",
          "md5": "a1e03a271129f142d5f05db26bba9725",
          "sha256": "227754a5301baac301e9132393a23c32789fcf224a9635e00994a3ebfa9ce065"
        },
        "downloads": -1,
        "filename": "ttt_game-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a1e03a271129f142d5f05db26bba9725",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3619,
        "upload_time": "2021-08-10T12:30:48",
        "upload_time_iso_8601": "2021-08-10T12:30:48.543032Z",
        "url": "https://files.pythonhosted.org/packages/98/23/c06db4f140bc24902eee94d9ca11200e05436ff1c517d2b0103d25c891f5/ttt_game-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15bad8575a3a5cd73c363624252004a703400d614873ba7c1c540d8a189fd19b",
        "md5": "2229f86a625f5abc39a3fed63cae4948",
        "sha256": "424e2487271182a4fb890ba549115399d8a8f5c0d772f66b96ad384aa385d333"
      },
      "downloads": -1,
      "filename": "ttt_game-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2229f86a625f5abc39a3fed63cae4948",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4169,
      "upload_time": "2021-08-10T12:30:46",
      "upload_time_iso_8601": "2021-08-10T12:30:46.342165Z",
      "url": "https://files.pythonhosted.org/packages/15/ba/d8575a3a5cd73c363624252004a703400d614873ba7c1c540d8a189fd19b/ttt_game-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9823c06db4f140bc24902eee94d9ca11200e05436ff1c517d2b0103d25c891f5",
        "md5": "a1e03a271129f142d5f05db26bba9725",
        "sha256": "227754a5301baac301e9132393a23c32789fcf224a9635e00994a3ebfa9ce065"
      },
      "downloads": -1,
      "filename": "ttt_game-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a1e03a271129f142d5f05db26bba9725",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3619,
      "upload_time": "2021-08-10T12:30:48",
      "upload_time_iso_8601": "2021-08-10T12:30:48.543032Z",
      "url": "https://files.pythonhosted.org/packages/98/23/c06db4f140bc24902eee94d9ca11200e05436ff1c517d2b0103d25c891f5/ttt_game-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}