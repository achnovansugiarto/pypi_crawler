{
  "info": {
    "author": "Josh Izaac",
    "author_email": "josh@iza.ac",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: OS Independent",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Processing"
    ],
    "description": "Google-Embed\r\n===============\r\n\r\nGoogle-Embed is a Pelican_ plugin providing restucturedText directives to allow\r\neasy embedding of Google+ (for example a public post or album) and Google Maps.\r\n\r\n`Live examples <http://iza.ac/posts/2014/03/google-embed/>`_ can also be viewed from a Pelican-built website.\r\n\r\n.. _Pelican: http://getpelican.com\r\n\r\n\r\nFeatures\r\n============\r\nEmbed Google+ posts within a page or blog post easily, simply by specifying the URL of\r\nthe post.\r\n\r\nGoogle Maps can also be embedded by specifying:\r\n\t\r\n\t* A place\r\n\t* A search term\r\n\t* Directions with optional waypoints\r\n\r\nFurthermore, a static image from Google Maps or Google Streetview can also\r\nbe embedded.\r\n\r\nInstallation\r\n============\r\nGoogle-Embed can be installed using `pip`\r\n\r\n.. code-block:: bash\r\n\t\r\n\t$ pip install google-embed\r\n\r\nor manually from the source code\r\n\r\n.. code-block:: bash\r\n\r\n\t$ python setup.py install\r\n\r\nOnce installed, simply add it to your ``pelicanconf.py`` configuration file:\r\n\r\n.. code-block:: python\r\n\r\n\tPLUGINS = [\r\n\t    # ...\r\n\t    'google_embed'\r\n\t]\r\n\r\n.. note::\r\n\tWhilst not required, it is recommended that you sign up for an\r\n\t`API key <https://code.google.com/apis/console>`_. This can be \r\n\tentered in your ``pelicanconf.py`` file after loading the\r\n\tgoogle_embed plugin like so:\r\n\r\n\t.. code-block:: python\r\n\r\n\t\tGMAPS_KEY = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'\r\n\r\n\r\nUsage\r\n============\r\n\r\nGoogle+\r\n----------\r\n\r\nTo embed a public Google+ post, you just need the permalink to\r\nthe post:\r\n\r\n.. code-block:: ReST\r\n\r\n\t.. gplus:: PERMALINK\r\n\r\nEmbed Google Maps\r\n-------------------\r\n\r\nTo embed a Google Map object:\r\n\r\n.. code-block:: ReST\r\n\r\n\t.. gmaps:: location\r\n\t\t:mode: place\r\n\r\nwhere ``location`` in this case is a name of a specific place. Note that\r\n``:mode:`` is a *required* option, and can take the value ``place`` or ``search``.\r\nIf in ``search`` mode, the value of ``location`` can be a more generic phrase,\r\nsuch as ``Mexican Restraunts near Fake St`` - the result will be displayed on\r\nthe map with markers.\r\n\r\nOther options include:\r\n\t\r\n* ``:align:`` - ``left``, ``right``, or ``center``\r\n* ``:maptype:`` - ``roadmap`` or ``satelite``\r\n* ``:width:``\r\n* ``:height:``\r\n\r\nEmbed Google Map Directions\r\n-----------------------------\r\n\r\nTo embed Google Map directions:\r\n\r\n.. code-block:: ReST\r\n\r\n\t.. directions::\r\n\t\t:mode: walking\r\n\t\t:origin: Tower of London\r\n\t\t:destination: Westminster Abbey\r\n\r\nRequired options:\r\n\r\n* ``:mode:`` - ``driving``, ``walking``, ``bicycling``, ``transit``, ``flying``\r\n* ``:origin:``\r\n* ``:destination:``\r\n\r\nOther options include:\r\n\t\r\n* ``:align:`` - ``left``, ``right``, or ``center``\r\n* ``:maptype:`` - ``roadmap`` or ``satelite``\r\n* ``:waypoints:`` - points to stop along the way. Should be entered like ``Berlin+Germany|Paris+France``\r\n* ``:width:``\r\n* ``:height:``\t\t\r\n\r\nEmbed Google Map as an Image\r\n-----------------------------\r\n\r\n.. code-block:: ReST\r\n\r\n\t.. static-map:: The queens larder\r\n\r\nOther options include:\r\n\t\r\n* ``:align:`` - ``left``, ``right``, or ``center``\r\n* ``:maptype:`` - ``roadmap``, ``satelite``, ``hybrid``, ``terrain``\r\n* ``:markers:`` - places markers on the map\r\n* ``:zoom:`` - default is ``12``\r\n* ``:width:``\r\n* ``:height:``\r\n\r\nWhen using markers, styles come before locations. For numerous markers of the same style,\r\n\r\n.. code-block:: ReST\r\n\r\n\t.. static-map:: The queens larder\r\n\t\t:markers: color:blue The+British+Museum Lamb+Bar\r\n\r\nFor markers of different styles, these should be separated with a ``&``:\r\n\r\n\r\n.. code-block:: ReST\r\n\r\n\t.. static-map:: The queens larder\r\n\t\t:markers: color:blue label:A The+British+Museum & color:red label:B Lamb+Bar\r\n\r\nNote that marker locations use ``+`` to seprate words, **not** spaces.\r\n\r\nEmbed Streetview as an Image\r\n-----------------------------\r\n\r\n.. code-block:: ReST\r\n\r\n\t.. streetview:: Paragon, Orchard Rd\r\n\r\nOther options include:\r\n\t\r\n* ``:align:`` - ``left``, ``right``, or ``center``\r\n* ``:width:``\r\n* ``:height:``",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/josh146/google_embed/archive/0.1.0.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/josh146/google_embed",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "google_embed",
    "package_url": "https://pypi.org/project/google_embed/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/google_embed/",
    "project_urls": {
      "Download": "https://github.com/josh146/google_embed/archive/0.1.0.zip",
      "Homepage": "https://github.com/josh146/google_embed"
    },
    "release_url": "https://pypi.org/project/google_embed/0.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Pelican plugin for embedding Google+ and Google Maps",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1038506,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "977da39211da7163b25f2a270252ad8a837deb789c0dcc12aab4e6da41c1ca72",
          "md5": "18428ddab3eaeccc0be568ac27e62940",
          "sha256": "59b7c80612960cccd9f597f17cd4ce2092f9ede4753bbbed42e56d1f0789af10"
        },
        "downloads": -1,
        "filename": "google_embed-0.1.0-py27-none-any.whl",
        "has_sig": false,
        "md5_digest": "18428ddab3eaeccc0be568ac27e62940",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "requires_python": null,
        "size": 7407,
        "upload_time": "2014-03-22T17:29:10",
        "upload_time_iso_8601": "2014-03-22T17:29:10.899573Z",
        "url": "https://files.pythonhosted.org/packages/97/7d/a39211da7163b25f2a270252ad8a837deb789c0dcc12aab4e6da41c1ca72/google_embed-0.1.0-py27-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fad4761e8607831c456bb4114220bce84b1944d1ada95256a593fb210f7a867",
          "md5": "63bef00310f860b31020a955fa872949",
          "sha256": "f13a130d3a4e5e54a86a979959651e7485f7ae406b02cfce50e6a56ee3561c09"
        },
        "downloads": -1,
        "filename": "google_embed-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "63bef00310f860b31020a955fa872949",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18318,
        "upload_time": "2014-03-22T17:29:06",
        "upload_time_iso_8601": "2014-03-22T17:29:06.930793Z",
        "url": "https://files.pythonhosted.org/packages/1f/ad/4761e8607831c456bb4114220bce84b1944d1ada95256a593fb210f7a867/google_embed-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "977da39211da7163b25f2a270252ad8a837deb789c0dcc12aab4e6da41c1ca72",
        "md5": "18428ddab3eaeccc0be568ac27e62940",
        "sha256": "59b7c80612960cccd9f597f17cd4ce2092f9ede4753bbbed42e56d1f0789af10"
      },
      "downloads": -1,
      "filename": "google_embed-0.1.0-py27-none-any.whl",
      "has_sig": false,
      "md5_digest": "18428ddab3eaeccc0be568ac27e62940",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 7407,
      "upload_time": "2014-03-22T17:29:10",
      "upload_time_iso_8601": "2014-03-22T17:29:10.899573Z",
      "url": "https://files.pythonhosted.org/packages/97/7d/a39211da7163b25f2a270252ad8a837deb789c0dcc12aab4e6da41c1ca72/google_embed-0.1.0-py27-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1fad4761e8607831c456bb4114220bce84b1944d1ada95256a593fb210f7a867",
        "md5": "63bef00310f860b31020a955fa872949",
        "sha256": "f13a130d3a4e5e54a86a979959651e7485f7ae406b02cfce50e6a56ee3561c09"
      },
      "downloads": -1,
      "filename": "google_embed-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "63bef00310f860b31020a955fa872949",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18318,
      "upload_time": "2014-03-22T17:29:06",
      "upload_time_iso_8601": "2014-03-22T17:29:06.930793Z",
      "url": "https://files.pythonhosted.org/packages/1f/ad/4761e8607831c456bb4114220bce84b1944d1ada95256a593fb210f7a867/google_embed-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}