{
  "info": {
    "author": "Zegami Ltd",
    "author_email": "help@zegami.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Zegami Python SDK\r\nAn SDK and general wrapper for the lower level Zegami API for Python. This package provides higher level collection interaction and data retrieval.\r\n\r\n# Getting started\r\nGrab this repo, open the script, and load an instance of ZegamiClient into a variable.\r\n\r\n```\r\nfrom zegami_sdk.client import ZegamiClient\r\n\r\nzc = ZegamiClient(username, login)\r\n```\r\n\r\n## Credentials\r\nThe client operates using a user token. By default, logging in once with a valid username/password will save the acquired token to your home directory as\r\n`zegami.token`. The next time you need to use ZegamiClient, you may call `zc = ZegamiClient()` with no arguments, and it will look for this stored token.\r\n\r\n\r\n## Example Usage\r\n### Get the metadata and images associated with every dog of the 'beagle' breed in a collection of dogs:\r\n\r\n```\r\nzc = ZegamiClient()\r\n```\r\n\r\n### Workspaces\r\nTo see your available workspaces, use:\r\n\r\n```\r\nzc.show_workspaces()\r\n```\r\n\r\nYou can then ask for a workspace by name, by ID, or just from a list\r\n```\r\nall_workspaces = zc.workspaces\r\nfirst_workspace = all_workspaces[0]\r\n```\r\n\r\nor:\r\n\r\n```\r\nzc.show_workspaces()\r\n\r\n# Note the ID of a workspace\r\nmy_workspace = zc.get_workspace_by_id(id)\r\n```\r\n\r\n\r\n### Collections\r\n```\r\nmy_workspace.show_collections()\r\n\r\n# Note the name of a collection\r\ncoll = my_workspace.get_collection_by_name(name_of_collection)\r\n```\r\n\r\n\r\nYou can get the metadata in a collection as a Pandas DataFrame using:\r\n\r\n```\r\nrows = coll.rows\r\n```\r\n\r\nYou can get the images of a collection using:\r\n\r\n```\r\nfirst_10_img_urls = coll.get_image_urls(list(range(10)))\r\nimgs = coll.download_image_batch(first_10_img_urls)\r\n```\r\n\r\nIf your collection supports the new multi-image-source functionality, you can see your available sources using:\r\n\r\n```\r\ncoll.show_sources()\r\n```\r\n\r\nFor source 2's (3rd in 0-indexed-list) images, you would use:\r\n\r\n```\r\nfirst_10_source3_img_urls = novo_col.get_image_urls(list(range(10)), source=2)`\r\n\r\n# To see the first of these:\r\ncoll.download_image(first_10_source3_img_urls[0])\r\n```\r\n\r\n### Using with onprem zegami\r\n\r\nTo use the client with an onprem installation of zegami you have to set the `home` keyword argument when instantiating `ZegamiClient`.\r\n\r\n```\r\nzegami_config = {\r\n  'username': <user>,\r\n  'password': <password>,\r\n  'home': <url of onprem zegami>,\r\n  'allow_save_token': True,\r\n}\r\n\r\nzc = ZegamiClient(**zegami_config)\r\n```\r\n\r\nIf your onprem installation has self-signed certificates you can disable SSL verification using the environment variable `ALLOW_INSECURE_SSL` before running the python.\r\n\r\n```\r\nexport ALLOW_INSECURE_SSL=true\r\npython myscript.py\r\n```\r\nor\r\n```\r\nALLOW_INSECURE_SSL=true python myscript.py\r\n```\r\nWARNING! You should not need to set this when using the SDK for cloud zegami\r\n\r\n# In Development\r\nThis SDK is in active development, not all features are available yet. Creating/uploading to collections is not supported currently - check back soon!\r\n\r\n\r\n# Developer Conventions\r\nKeeping the SDK easy and fluent to use externally and internally is crucial. If contributing PRs, some things to consider:\r\n\r\n## Relevant\r\nMOST IMPORTANT - Zegami has concepts used internally in its data engine, like 'imageset', 'dataset'. Strive to never require the user to have to know anything about these, or even see them. If the user needs an image, they should ask for an image from a concept they ARE expected to understand like a 'collection' or a 'workspace'. Anything obscure should be hidden, for example: `_get_imageset()`, so that auto-suggestions of a class will always contain relevant and useful methods/attribs/properties.\r\n\r\n## Obvious\r\nAvoid ambiguous parameters. Use the best worded, lowest level parameters types for functions/methods. Give them obvious names. Any ambiguity or unobvious parameters MUST be described in detail in the docstring. Avoid parameters like 'target' or 'action', or describe them explicitly. If an instance is needed, describe how/where that instance should come from.\r\n\r\n## `assert`\r\nIf you expect an RGB image, check that your input is an array, that its len(shape) == 3, that shape[2] == 3. Use a proper message if this is not the case.\r\n\r\n## Minimal\r\nDo not ask for more information than is already obtainable. A source knows its parent collection, which knows how to get its own IDs and knows the client. A method never needs to reference a source, the owning collection, and the client all together. Moreover, these chains should have sensible assertions and checks built in, and potentially property/method-based shortcuts (with assertions).\r\n\r\n## Helpful\r\nUse sensible defaults wherever possible for minimal effort when using the SDK. V1 collections typically use `source=None`, while V2 collections use `source=0`. This allows a user with an old/new (single source) collection to never even have to know what a source is when fetching images.\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zegami/zegami-python-sdk",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zegami-sdk-testrelease",
    "package_url": "https://pypi.org/project/zegami-sdk-testrelease/",
    "platform": "",
    "project_url": "https://pypi.org/project/zegami-sdk-testrelease/",
    "project_urls": {
      "Homepage": "https://github.com/zegami/zegami-python-sdk"
    },
    "release_url": "https://pypi.org/project/zegami-sdk-testrelease/0.4.6/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A suite of tools for interacting with Zegami through Python.",
    "version": "0.4.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13051685,
  "releases": {
    "0.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "570f96c68900f5eec8b01c1c80acc684d0327a672b9bae8d5ba8e99af5926c4f",
          "md5": "38905b532511f6c7afd49eb6de25412e",
          "sha256": "582939f70c75a0b0c073e01602ee84fb802bd7f8481b32978e867a2e0f2266a9"
        },
        "downloads": -1,
        "filename": "zegami-sdk-testrelease-0.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "38905b532511f6c7afd49eb6de25412e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35646,
        "upload_time": "2022-03-02T00:29:48",
        "upload_time_iso_8601": "2022-03-02T00:29:48.034941Z",
        "url": "https://files.pythonhosted.org/packages/57/0f/96c68900f5eec8b01c1c80acc684d0327a672b9bae8d5ba8e99af5926c4f/zegami-sdk-testrelease-0.4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "570f96c68900f5eec8b01c1c80acc684d0327a672b9bae8d5ba8e99af5926c4f",
        "md5": "38905b532511f6c7afd49eb6de25412e",
        "sha256": "582939f70c75a0b0c073e01602ee84fb802bd7f8481b32978e867a2e0f2266a9"
      },
      "downloads": -1,
      "filename": "zegami-sdk-testrelease-0.4.6.tar.gz",
      "has_sig": false,
      "md5_digest": "38905b532511f6c7afd49eb6de25412e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 35646,
      "upload_time": "2022-03-02T00:29:48",
      "upload_time_iso_8601": "2022-03-02T00:29:48.034941Z",
      "url": "https://files.pythonhosted.org/packages/57/0f/96c68900f5eec8b01c1c80acc684d0327a672b9bae8d5ba8e99af5926c4f/zegami-sdk-testrelease-0.4.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}