{
  "info": {
    "author": "Christoph Meyer",
    "author_email": "christophmeyer87@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: C++",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "This repository contains a C++ implementation of the CART algorithm (currently, only supporting classification), offering a similar API for decision trees and random forests as the [sklearn](https://scikit-learn.org/stable/) implementation. In addition to the C++ library, the python package `twigy` offers python bindings for the main user facing classes.\n\n# twigy\n\n## Getting Started\n\n### 1. Use pip install \n\n`pip install twigy`\n\n### 2. Build manylinux wheel from source\n\nThe manylinux wheel is build in a CentOS 7 docker container, so you need to have docker installed. Then run\n\n`./build_manylinux_wheel.sh`\n\nwhich will build the manylinux wheel. Then you can \n\n`pip install ./build/wheelhouse/twigy-0.0.1-cp36-cp36m-manylinux2014_x86_64.whl`\n\n### 3. Build extension library from source\n\nTo directly build the python extension library, you need cmake >= 3.10 and boost >= 1.66 on your system.\n\n`cd ./build && cmake ..`\n\n`cmake --build . --target twigy`\n\n## DecisionTreeClassifier\n\nImplements a CART decision tree classifier. See also `./example.py` for usage. \n\n### Parameters\n\n`impurity_measure` sets the measure of impurity used for the splits. Takes `twigy.ImpurityMeasure.gini` or `twigy.ImpurityMeasure.gini`. Default is `twigy.ImpurityMeasure.gini`.\n\n`max_depth` sets the maximum depth to which the tree is grown. Default is `-1`,  which corresponds to no restriction on the depth.\n\n`min_samples_split` sets the minimum number of samples for a node to be split. Default is `2`.\n\n`min_samples_leaf` sets the minimum number of samples at a leaf node. Split that would lead to a lower number are not considered. Default is `1`. \n\n`max_features` sets the maximum number of randomly selected features to be considered at each split. Default is `-1`, which corresponds chosing the number of features accoding to the `max_features_method`.\n\n`max_features_method` sets the method by which the number of features to be considerd at each split is chosen unless it is explicitly specified by `max_features`. Possible value `twigy.MaxFeaturesMethod.sqrt_method`, `twigy.MaxFeaturesMethod.log2_method` and `twigy.MaxFeaturesMethod.all_method`. Default is `twigy.MaxFeaturesMethod.all_method`.\n\n`min_impurity_split` sets the minimal impurity for a node to be considered for another split. Default is `0.0`.\n\n### Methods\n\n`build_tree(X, y)` grows the tree on the training set given by the features `X` and the labels `y`. Note that the class labels need to be given by `0,1,2,..., n_classes - 1`. \n\n`print_tree()` print a list of the nodes of the decision tree.\n\n`predict_classes(X)` predicts the class labels for the given samples `X`.\n\n## RandomForestClassifier\n\nImplements a random forest classifier. See also `./example.py` for usage.\n\n### Parameters\n\n`n_estimators` sets the number of decision tree estimators to train. \n\n`impurity_measure` sets the measure of impurity used for the splits. Takes `twigy.ImpurityMeasure.gini` or `twigy.ImpurityMeasure.gini`. Default is `twigy.ImpurityMeasure.gini`.\n\n`max_depth` sets the maximum depth to which the tree is grown. Default is `-1`,  which corresponds to no restriction on the depth.\n\n`min_samples_split` sets the minimum number of samples for a node to be split. Default is `2`.\n\n`min_samples_leaf` sets the minimum number of samples at a leaf node. Split that would lead to a lower number are not considered. Default is `1`. \n\n`max_features` sets the maximum number of randomly selected features to be considered at each split. Default is `-1`, which corresponds chosing the number of features accoding to the `max_features_method`.\n\n`max_features_method` sets the method by which the number of features to be considerd at each split is chosen unless it is explicitly specified by `max_features`. Possible value `twigy.MaxFeaturesMethod.sqrt_method`, `twigy.MaxFeaturesMethod.log2_method` and `twigy.MaxFeaturesMethod.all_method`. Default is `twigy.MaxFeaturesMethod.sqrt_method` (note that the default is different that for the `DecisionTreeClassifier`).\n\n`min_impurity_split` sets the minimal impurity for a node to be considered for another split. Default is `0.0`.\n\n`max_samples` sets the number of randomly selected samples to be used to train the individual trees. Default is `-1`, which corresponds to all samples being used for each tree. \n\n### Methods\n\n`build_forest(X, y)` trains the random forest on the training set given by the features `X` and the labels `y`. Note that the class labels need to be given by `0,1,2,..., n_classes - 1`. \n\n`predict_classes(X)` predicts the class labels for the given samples `X`.\n\n## Benchmark\n\ntwigy has been benchmarked (on an i3-7100 CPU @ 3.90 with 16GB memory) against scikit learn:\n\n![](./benchmark.png)\n\nThe benchmark shows that twigy is up to 8 times faster on this dataset. For more details see `benchmark.py`.\n\n## C++ library\n\ntwigy can also be used as c++ library as illustrated in `example.cpp`. \n\n### Build cpp example from source\n\nTo build the example you need cmake >= 3.10 and boost >= 1.66 on your system. Then run \n\n`cd ./build && cmake ..`\n\n`cmake --build . --target example`\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/christophmeyer/twigy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "twigy",
    "package_url": "https://pypi.org/project/twigy/",
    "platform": "",
    "project_url": "https://pypi.org/project/twigy/",
    "project_urls": {
      "Homepage": "https://github.com/christophmeyer/twigy"
    },
    "release_url": "https://pypi.org/project/twigy/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Fast C++ implementation of decision tree and random forest classifiers with python bindings.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7582731,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77b5daa30ddcb5d59a65f58559595770bc41eb27236867c7a30473d035ab8b23",
          "md5": "16e7f514fc4b7ac95db948e4e66b7eac",
          "sha256": "318c957391383eff2c60696897b765bb08308f606ffe0ec72129be431a4b51f2"
        },
        "downloads": -1,
        "filename": "twigy-0.0.1-cp36-cp36m-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "16e7f514fc4b7ac95db948e4e66b7eac",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6",
        "size": 144758,
        "upload_time": "2020-06-28T19:56:33",
        "upload_time_iso_8601": "2020-06-28T19:56:33.168069Z",
        "url": "https://files.pythonhosted.org/packages/77/b5/daa30ddcb5d59a65f58559595770bc41eb27236867c7a30473d035ab8b23/twigy-0.0.1-cp36-cp36m-manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77b5daa30ddcb5d59a65f58559595770bc41eb27236867c7a30473d035ab8b23",
        "md5": "16e7f514fc4b7ac95db948e4e66b7eac",
        "sha256": "318c957391383eff2c60696897b765bb08308f606ffe0ec72129be431a4b51f2"
      },
      "downloads": -1,
      "filename": "twigy-0.0.1-cp36-cp36m-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "16e7f514fc4b7ac95db948e4e66b7eac",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6",
      "size": 144758,
      "upload_time": "2020-06-28T19:56:33",
      "upload_time_iso_8601": "2020-06-28T19:56:33.168069Z",
      "url": "https://files.pythonhosted.org/packages/77/b5/daa30ddcb5d59a65f58559595770bc41eb27236867c7a30473d035ab8b23/twigy-0.0.1-cp36-cp36m-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}