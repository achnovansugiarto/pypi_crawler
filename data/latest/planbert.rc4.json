{
  "info": {
    "author": "Erzhuo Shao, Zachary A. Pardos",
    "author_email": "shaoerzhuo@gmail.com, zp@berkeley.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# PLAN-BERT\n\nKeras implementation of PLAN-BERT: A Transformer-based sequential basket recommender algorithm that incorporates future item information.\n\n```\n    pip install PLANBERT\n```\n\nAdapted from Shao, Guo, & Pardos ([AAAI 2021](https://ojs.aaai.org/index.php/AAAI/article/view/17751)) for a manuscript submitted to TKDE (under review). Scripts by Erzhuo Shao.\n\n## Requirements\nKeras>=2.3.1\nnumpy\npandas\ntensorflow-gpu\ntqdm\n\n\n\n## Installing PLAN-BERT ##\n\nYou can simply run:\n```\n    pip install PLANBERT\n```\nAlternatively, if `pip` poses some problems, you can clone the repository as such and then run the `setup.py` script manually.\n\n```\n    git clone https://github.com/CAHLR/PLAN-BERT.git\n    cd PLAN-BERT\n    python setup.py install\n```\n\n# Preparing Data and Running Model #\n\nThe following serves as a mini-tutorial for how to get started with PLAN-BERT.\nPrepare csv data\n\n\n\n\n## Input Format ##\n\nThe accepted input formats are Pandas DataFrames, which much includes columns 'user', 't', 'item'. Columns whose name include 'feat' would be considered as features. Time slots are relative, which means the minimum time slots of any user are reocmmended to be 0. Since PLAN-BERT is a basket-level recommendation model, one time slot may contain multiple items. All following columns are undeerstood as features. User or item features are not distingushed in DataFrame, all features must be provided in each row. The names of all columns are arbitrary.\n\n| 'user' | 't' | 'item' | 'feat_1'(Optional) | ... | 'feat_N'(Optional) |\n|:------:|:---:|:------:|:--------:|:--------:|:---:|\n| User1  |  0  | item0  |          |          |     |\n| User1  |  0  | item1  |          |          |     |\n| User1  |  1  | item2  |          |          |     |\n| User1  |  2  | item1  |          |          |     |\n| User1  |  3  | item3  |          |          |     |\n| User2  |  0  | item0  |          |          |     |\n| ...    |     |        |          |          |     |\n\nThe output of predict funtion includes 4 columns, 'user', 't', 'item', 'prob'. the number of future time slots is pred_time_slices, 't' start from the maximum historical time slots + 1. Each basket includes items_per_slice items, which are order by their predicted probability. \nThe maximum predicted time slots + historical time slots can exceed the width of PLAnBERT. If the number of required future time slots (e.g., 3) + the length of history (e.g., 3) is greater than the width of PLAN-BERT (e.g., 5), several beginning time slots (3+3-5) would be droped out from input DataFrame. So \n\n| 'user' | 't' | 'item' | 'prob' |\n|:------:|:---:|:------:|:------:|\n| User1  |  3  | item0  |        |\n| User1  |  3  | item1  |        |\n| User1  |  4  | item2  |        |\n| User1  |  5  | item1  |        |\n| User1  |  5  | item3  |        |\n| User2  |  3  | item0  |        |\n| ...    |     |        |        |\n\n## Creating and Training Models ##\n\nThe process of creating and training models in PLAN-BERT resemble that of SciKit Learn. \n\n```python\nfrom PLANBERT.Model import PLANBERT\n# Load the training, validation, and testing set.\nimport pandas as pd\nmaster_csv = pd.read_csv('./example/example_master.csv')\ntrain_len, train_valid_len = 153681, 153681+31661\ntrain_csv, valid_csv, test_csv = master_csv.iloc[:train_len], master_csv.iloc[train_len:train_valid_len], master_csv.iloc[train_valid_len:]\n\n# Train a PLAN-BERT with training set and validation set without checkpoint.\n\n#planbert = PLANBERT(num_times=6, num_items=10000, feat_dims=[5000, 1000], cuda_num=0) # [ Number of time slots, Number of items, [Number of features], ID of GPU]\nplanbert = PLANBERT(master_csv) # Automatically extract network hyper-parameters from DataFrame.\n#planbert.fit(train_csv, valid_csv)\n$planbert.test(test_csv, h_list=[9], r_list=[3], pool_size=25)\n\n# Obtain the output schedule. We note that the test_csv should only include historical items and future reference items. We should sample test_csv before feeding it into planbert.predict.\ntest_csv_history = test_csv[test_csv['t'] < 2]\ntest_csv_future = test_csv[test_csv['t'] >= 2]\npredict = planbert.predict(\n    test_csv_history, # Historical DataFrame\n    test_csv_future, # Future DataFrame, whose columns 't' would be useless in 'wishlist' mode.\n    mode='time', # PLAN-BERT's mode (time/wishlist)\n    pred_time_slices=4, # The number of required time slots in the future schedule.\n    items_per_slice=20 # The number of required items in each future time slots.\n)\n```\n# Internal Data Format #\n\n        | 0  0  0  0  1  0 |\n        | 0  1  0  0  0  0 |\n        | 0  0  0  0  0  1 |\n        | 0  0  0  0  0  1 |\n        | 0  0  1  0  0  0 |   \n\nThe above example shows the schedule of one user. It is of shape [5, 6], in which 5 is the number of time slots, 6 is the number of items. Similarly, the output of PLAN-BERT is of shape [ U, T, I ], where U is the number of users, T is the number of time slots, I is the number of items.\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CAHLR/PLAN-BERT",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PLANBERT",
    "package_url": "https://pypi.org/project/PLANBERT/",
    "platform": "",
    "project_url": "https://pypi.org/project/PLANBERT/",
    "project_urls": {
      "Homepage": "https://github.com/CAHLR/PLAN-BERT"
    },
    "release_url": "https://pypi.org/project/PLANBERT/1.3/",
    "requires_dist": [
      "Keras (>=2.3.0)",
      "numpy",
      "pandas",
      "tensorflow-gpu",
      "tqdm"
    ],
    "requires_python": ">=3.6.0",
    "summary": "A Bi-directional Transformer based sequential baskets recommender which incorporates future items",
    "version": "1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11182115,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bc1e3ab73c5f4cf50c82ddafa3885266e524318c6cdcd07b4f546f0554dfbe0",
          "md5": "c3bfcd103de639928470b4685bea63f9",
          "sha256": "a4ad4a85ecefa9d400688ed43102cec47bc933b2966b6d86dc98f334c3ad30a8"
        },
        "downloads": -1,
        "filename": "PLANBERT-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3bfcd103de639928470b4685bea63f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 35045,
        "upload_time": "2021-08-15T06:33:45",
        "upload_time_iso_8601": "2021-08-15T06:33:45.192669Z",
        "url": "https://files.pythonhosted.org/packages/1b/c1/e3ab73c5f4cf50c82ddafa3885266e524318c6cdcd07b4f546f0554dfbe0/PLANBERT-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "655f1cc35cea553b15157eb07c7e3eeb7406ac2fb5b34401fee664de92ed5dca",
          "md5": "8ae2d77e06bbd3224276b39425c763aa",
          "sha256": "4a67518533774c0d4e5a330fb8f1de46dd0aaa3efc4b609454b0ce9ea7638fb3"
        },
        "downloads": -1,
        "filename": "PLANBERT-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8ae2d77e06bbd3224276b39425c763aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 25965,
        "upload_time": "2021-08-15T06:33:48",
        "upload_time_iso_8601": "2021-08-15T06:33:48.574786Z",
        "url": "https://files.pythonhosted.org/packages/65/5f/1cc35cea553b15157eb07c7e3eeb7406ac2fb5b34401fee664de92ed5dca/PLANBERT-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cc262050f69f0005e985f557390e0829f9c85cec424aed7296ec6ed144c454c",
          "md5": "dfade1ba5d96639f70626a02b4b26046",
          "sha256": "14363d8ddc5054e82af37c136bf038e866f80eaadd2e7f813779d26c7099a3ff"
        },
        "downloads": -1,
        "filename": "PLANBERT-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dfade1ba5d96639f70626a02b4b26046",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 35045,
        "upload_time": "2021-08-15T06:33:47",
        "upload_time_iso_8601": "2021-08-15T06:33:47.115443Z",
        "url": "https://files.pythonhosted.org/packages/6c/c2/62050f69f0005e985f557390e0829f9c85cec424aed7296ec6ed144c454c/PLANBERT-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72bdb3a9f9149c60ea107c770ebac4fafdaec8d6687fb38ee788c19aee1e1d1d",
          "md5": "9d5539b7b6b6602a8fa2e9323f546cc9",
          "sha256": "3d01e40d8fdce76a7da378eac07a09c879ba4afc37599c47494e1d767fe2dbd4"
        },
        "downloads": -1,
        "filename": "PLANBERT-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9d5539b7b6b6602a8fa2e9323f546cc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 25970,
        "upload_time": "2021-08-15T06:33:49",
        "upload_time_iso_8601": "2021-08-15T06:33:49.910786Z",
        "url": "https://files.pythonhosted.org/packages/72/bd/b3a9f9149c60ea107c770ebac4fafdaec8d6687fb38ee788c19aee1e1d1d/PLANBERT-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "505b2d237e007496d6777666bd3533496b7665dfed307e5d1ed5a06c88b59b11",
          "md5": "c37bfcdb37d620756625fd6fe8e30f05",
          "sha256": "a7ca8323d144489781d3601741561939ab1b64bcff2c0b377575798e14bb956f"
        },
        "downloads": -1,
        "filename": "PLANBERT-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c37bfcdb37d620756625fd6fe8e30f05",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 36891,
        "upload_time": "2021-08-15T06:49:00",
        "upload_time_iso_8601": "2021-08-15T06:49:00.365159Z",
        "url": "https://files.pythonhosted.org/packages/50/5b/2d237e007496d6777666bd3533496b7665dfed307e5d1ed5a06c88b59b11/PLANBERT-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a851c75fd5f8e3ed4a8270131ee483bfe5190b0f1153614e17a1bcafec0a423",
          "md5": "0f8b965b2953662edd62691d562005d5",
          "sha256": "bc29364b541797c9be7a3d55c74d3771f4b41a2b41b79a138c9dd27a3ebd55dd"
        },
        "downloads": -1,
        "filename": "PLANBERT-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0f8b965b2953662edd62691d562005d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 28115,
        "upload_time": "2021-08-15T06:49:02",
        "upload_time_iso_8601": "2021-08-15T06:49:02.030446Z",
        "url": "https://files.pythonhosted.org/packages/4a/85/1c75fd5f8e3ed4a8270131ee483bfe5190b0f1153614e17a1bcafec0a423/PLANBERT-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d126b8b1844544e81b4a5ee0e06e63ed9b2ca54b098bfbad40dcdf3691f69a4",
          "md5": "8cc8004a6daefa5edd223c4d5216833f",
          "sha256": "1bb1298b63725c4a56ae0df5e56b58df85e0e63d6721f75085c7adad5f9321c1"
        },
        "downloads": -1,
        "filename": "PLANBERT-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cc8004a6daefa5edd223c4d5216833f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 36880,
        "upload_time": "2021-08-15T07:01:38",
        "upload_time_iso_8601": "2021-08-15T07:01:38.747071Z",
        "url": "https://files.pythonhosted.org/packages/2d/12/6b8b1844544e81b4a5ee0e06e63ed9b2ca54b098bfbad40dcdf3691f69a4/PLANBERT-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29d072349c2fe5c1fa38c4be95449ded52187acc0968b58c21b75dd0023121c1",
          "md5": "7a511d14aa274358518ddbce55b09da0",
          "sha256": "8a9a751d453199b0a791726e2db9d013788a812b43896c39da2200eb110b2a58"
        },
        "downloads": -1,
        "filename": "PLANBERT-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7a511d14aa274358518ddbce55b09da0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 28101,
        "upload_time": "2021-08-15T07:01:40",
        "upload_time_iso_8601": "2021-08-15T07:01:40.222480Z",
        "url": "https://files.pythonhosted.org/packages/29/d0/72349c2fe5c1fa38c4be95449ded52187acc0968b58c21b75dd0023121c1/PLANBERT-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d126b8b1844544e81b4a5ee0e06e63ed9b2ca54b098bfbad40dcdf3691f69a4",
        "md5": "8cc8004a6daefa5edd223c4d5216833f",
        "sha256": "1bb1298b63725c4a56ae0df5e56b58df85e0e63d6721f75085c7adad5f9321c1"
      },
      "downloads": -1,
      "filename": "PLANBERT-1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8cc8004a6daefa5edd223c4d5216833f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 36880,
      "upload_time": "2021-08-15T07:01:38",
      "upload_time_iso_8601": "2021-08-15T07:01:38.747071Z",
      "url": "https://files.pythonhosted.org/packages/2d/12/6b8b1844544e81b4a5ee0e06e63ed9b2ca54b098bfbad40dcdf3691f69a4/PLANBERT-1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29d072349c2fe5c1fa38c4be95449ded52187acc0968b58c21b75dd0023121c1",
        "md5": "7a511d14aa274358518ddbce55b09da0",
        "sha256": "8a9a751d453199b0a791726e2db9d013788a812b43896c39da2200eb110b2a58"
      },
      "downloads": -1,
      "filename": "PLANBERT-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "7a511d14aa274358518ddbce55b09da0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 28101,
      "upload_time": "2021-08-15T07:01:40",
      "upload_time_iso_8601": "2021-08-15T07:01:40.222480Z",
      "url": "https://files.pythonhosted.org/packages/29/d0/72349c2fe5c1fa38c4be95449ded52187acc0968b58c21b75dd0023121c1/PLANBERT-1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}