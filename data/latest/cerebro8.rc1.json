{
  "info": {
    "author": "AmrSaber, WafaaIsmail, MohamedAhmed, SalmaSayed, MuhammadAref, ManarArabi",
    "author_email": "amr.m.saber.mail@gmail.com, wafaaismail595@gmail.com, mohamedmaim97@gmail.com, Salmasayed797@gmail.com, muhammad.aref224@gmail.com, manar.araby.ma@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# Cerebro\nCerebro is a python package for **Facial Expression Detection**, we provide a trained model with accuracy around 98% of 8 emotions [Happy, surprise, contempt, sad ,angry,disgust,Neutral,Fear], with a very simple interface for detection from image,video with any rotation and Real time streaming.\n\n**Documentation**\n\n**Example**\nIn this Example we get an image , predict an emotion then save it with the emotion.\n```python\nfrom interface import video_stream as vs\nfrom interface import process_image as pi\n\ndef main():\n\tim = cv2.imread(\"interface/7.jpg\")\n\titems =pi.extract_faces_emotions(im)\n\tim =pi.mark_faces_emotions(im)\n\tcv2.imwrite(\"interface/77.jpg\",im)\n\tcv2.imshow(\"detected emotions\",im)\n\tcv2.waitKey(0)\n\nif __name__ == '__main__': main()\n\n```\n![alt text](https://github.com/AmrSaber/Cerebro/blob/master/images/BeFunky-collage.jpg \"Example\")\n\n**Installition**\nCerebro depends on some python packages, once you install Cerebro any missing Module will be automatically installed, \nfor ***FFmpeg*** use this [link](https://github.com/adaptlearning/adapt_authoring/wiki/Installing-FFmpeg).\n\n***Installation by hand***: download the sources, either from [PyPI](https://test.pypi.org/project/CEREBRO1/#description) or, if you want the development version, from GitHub, clone the project then use this command in terminal to setup.\n\n```$ (sudo) python setup.py install```\n\n***Installation with pip***: if you have pip installed, just type this in a terminal:\n\n```$ (sudo) pip install CEREBRO8```\n***Using Model*** : once You install Cerebro You have to dowenload our trained model from this [link](https://github.com/AmrSaber/Cerebro/blob/master/Cerebro/saved-models/emotions_model_specs.bin) and full model [link](https://github.com/AmrSaber/Cerebro/blob/master/Cerebro/saved-models/emotions_model.f5) then add them to new foldercalled ```saved-models```\n***Using Landmark*** : if you want to use Landmark feature extractor you have to dowenload this file landmarks with 68 point using this [link](https://github.com/AmrSaber/Cerebro/tree/master/Cerebro/saved-models/face-landmarks) in this path\n```saved-models/face-landmarks``` \"create new folder called landmarks in saved-models\" \n\n**Video demo**\n\n**Real Time demo**\n\n**Maintainers** \n\n* [AmrSaber](https://github.com/AmrSaber)\n* [Wafaaismail](https://github.com/Wafaaismail)\n* [aim97](https://github.com/aim97)\n* [ManarArabi](https://github.com/ManarArabi)\n* [SalmaSayed](https://github.com/SalmaSayed)\n* [MuhammeaAef](https://github.com/MuhammadAref)\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/AmrSaber/Cerebro/archive/v1.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AmrSaber/Cerebro",
    "keywords": "emotions,expressions,real-time stream",
    "license": "gpl-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CEREBRO8",
    "package_url": "https://pypi.org/project/CEREBRO8/",
    "platform": "",
    "project_url": "https://pypi.org/project/CEREBRO8/",
    "project_urls": {
      "Download": "https://github.com/AmrSaber/Cerebro/archive/v1.0.tar.gz",
      "Homepage": "https://github.com/AmrSaber/Cerebro"
    },
    "release_url": "https://pypi.org/project/CEREBRO8/0.0.1/",
    "requires_dist": [
      "opencv-contrib-python (==3.4.4.19)",
      "numpy",
      "moviepy",
      "ffmpeg-python",
      "imutils",
      "argparse",
      "keras",
      "pathlib",
      "matplotlib",
      "scikit-image",
      "dlib",
      "Theano"
    ],
    "requires_python": "",
    "summary": "Recognizing facial expressions from images, videos and real-time stream",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5492840,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3e8f12e6685b8a7e2dfa04b4f0865711f0391ed8eb6d16c53fe695fd817513f",
          "md5": "5996ec119044942fd1693bd4056f7ccc",
          "sha256": "d1ed548924bd1ff54f34ea447ba91610cc9eb6d7bae344c6571dcd8dd19d8677"
        },
        "downloads": -1,
        "filename": "CEREBRO8-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5996ec119044942fd1693bd4056f7ccc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31751,
        "upload_time": "2019-07-04T22:02:00",
        "upload_time_iso_8601": "2019-07-04T22:02:00.387926Z",
        "url": "https://files.pythonhosted.org/packages/b3/e8/f12e6685b8a7e2dfa04b4f0865711f0391ed8eb6d16c53fe695fd817513f/CEREBRO8-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21df7a588c5d6de116ad78f2ad84bc85898a4dbfabb38ca14ebfe51d44816cdd",
          "md5": "e6c42b51557c084af1dda3920018a010",
          "sha256": "823187a2beea405dc49553528d6dcaa50d7f6e22d7d8b5c7a35977760bb88a8a"
        },
        "downloads": -1,
        "filename": "CEREBRO8-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e6c42b51557c084af1dda3920018a010",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14026,
        "upload_time": "2019-07-04T22:02:03",
        "upload_time_iso_8601": "2019-07-04T22:02:03.347473Z",
        "url": "https://files.pythonhosted.org/packages/21/df/7a588c5d6de116ad78f2ad84bc85898a4dbfabb38ca14ebfe51d44816cdd/CEREBRO8-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3e8f12e6685b8a7e2dfa04b4f0865711f0391ed8eb6d16c53fe695fd817513f",
        "md5": "5996ec119044942fd1693bd4056f7ccc",
        "sha256": "d1ed548924bd1ff54f34ea447ba91610cc9eb6d7bae344c6571dcd8dd19d8677"
      },
      "downloads": -1,
      "filename": "CEREBRO8-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5996ec119044942fd1693bd4056f7ccc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 31751,
      "upload_time": "2019-07-04T22:02:00",
      "upload_time_iso_8601": "2019-07-04T22:02:00.387926Z",
      "url": "https://files.pythonhosted.org/packages/b3/e8/f12e6685b8a7e2dfa04b4f0865711f0391ed8eb6d16c53fe695fd817513f/CEREBRO8-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21df7a588c5d6de116ad78f2ad84bc85898a4dbfabb38ca14ebfe51d44816cdd",
        "md5": "e6c42b51557c084af1dda3920018a010",
        "sha256": "823187a2beea405dc49553528d6dcaa50d7f6e22d7d8b5c7a35977760bb88a8a"
      },
      "downloads": -1,
      "filename": "CEREBRO8-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e6c42b51557c084af1dda3920018a010",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14026,
      "upload_time": "2019-07-04T22:02:03",
      "upload_time_iso_8601": "2019-07-04T22:02:03.347473Z",
      "url": "https://files.pythonhosted.org/packages/21/df/7a588c5d6de116ad78f2ad84bc85898a4dbfabb38ca14ebfe51d44816cdd/CEREBRO8-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}