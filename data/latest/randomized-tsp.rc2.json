{
  "info": {
    "author": "Akshat Karani",
    "author_email": "akshatkarani@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# randomized_tsp\n\nA python3 package implementing randomized algorithms for [Travelling Salesman Problem](https://en.wikipedia.org/wiki/Travelling_salesman_problem).\nThe implementations are based off of [A first course in Artificial Intelligence: Deepak Khemani](https://www.mheducation.co.in/a-first-course-in-artificial-intelligence-9781259029981-india).\n\nThe algorithms implemented include:\n- [Genetic Algorithm](https://en.wikipedia.org/wiki/Genetic_algorithm)\n- [Simulated Annealing](https://en.wikipedia.org/wiki/Simulated_annealing)\n- [Ant Colony Optimization](https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithms)\n\n## Installation\n\nYou can install this using `pip`. Just run\n\n``pip install randomized_tsp``\n\n## Usage\n\nSee [example](example/) here.\n\nIf you have `n` cities in your problem then you need to define the distances between cities using a two dimensional `n X n` list.\n`distances[i][j]` should give the distance between city i and city j.\n\n```python\nfrom randomized_tsp.tsp import tsp\n\n# If you have 3 cities then you need to define this list \n# which gives the distances between two cities\ndistances = [[0, 4, 2], [4, 0, 3], [2, 3, 0]]\n\ntsp_obj = tsp(distances)\n\n# To run genetic algorithm\ntour, cost = tsp_obj.genetic_algorithm()\n\n# To run simulated annealing\ntour, cost = tsp_obj.simulated_annealing()\n\n# To run ant colony optimization\ntour, cost = tsp_obj.ant_colony()\n```\n\nAll the three algorithms return that best tour found and the cost of that tour. Tour is represented using path representation.\n\nSome optional parameters are also available for the above algorithms.\n```python\ndef genetic_algorithm(self,\n                      population_size=50,\n                      mutation_prob=0.1,\n                      crossover='order'):\n        \"\"\"\n        :param population_size: Defines the size of the population used in the algorithm\n        :param mutation_prob:   Probability that a offspring will mutate\n        :param crossover:       Defines the crossover operator, currently two options are available\n                                `order` and `cycle`.\n        :return:                Returns the best tour found and the cost of that tour\n                                A tour is represented using path representation\n        \"\"\"\n\ndef simulated_annealing(self):\n        \"\"\"\n        :return: Returns the best tour found and the cost of that tour\n                 A tour is represented using path representation\n        \"\"\"\n\ndef ant_colony(self,\n               num_of_ants=20,\n               pheromone_evapouration=0.2):\n        \"\"\"\n        :param num_of_ants:            Number of ants in the colony\n        :param pheromone_evapouration: Evapouration rate of the pheromone deposited by ants\n        :return:                       Returns the best tour found and the cost of that tour\n                                       A tour is represented using path representation\n        \"\"\"\n```\n\n\n## Contributing\n\nMany of these algorithms need improvements and optimizations. If you want to improve this project or fix a bug then all contributions are welcome. \n\n## Contact\n\nIf you find any bugs then open a issue on this repository. You can also contact me on [gitter](https://gitter.im/akshatkarani).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/akshatkarani/randomized_tsp",
    "keywords": "travelling salesman problem,tsp,randomized algorithm",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "randomized-tsp",
    "package_url": "https://pypi.org/project/randomized-tsp/",
    "platform": "",
    "project_url": "https://pypi.org/project/randomized-tsp/",
    "project_urls": {
      "Homepage": "https://github.com/akshatkarani/randomized_tsp"
    },
    "release_url": "https://pypi.org/project/randomized-tsp/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Randomized algorithms for Travelling Salesman Problem",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7471435,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba66cfd3e34f6b69e9296fa5af3c6945c4a33c29631e1e87e4c01fa58b2f7c59",
          "md5": "bf59eea744fe490a3592754cb54dd727",
          "sha256": "5c97fbafa017e464d7474839b3f7dbf60090cfcb4d8cd681aa1e7c710aa889a8"
        },
        "downloads": -1,
        "filename": "randomized_tsp-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf59eea744fe490a3592754cb54dd727",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7700,
        "upload_time": "2020-06-14T05:18:52",
        "upload_time_iso_8601": "2020-06-14T05:18:52.894830Z",
        "url": "https://files.pythonhosted.org/packages/ba/66/cfd3e34f6b69e9296fa5af3c6945c4a33c29631e1e87e4c01fa58b2f7c59/randomized_tsp-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "757c1093cabd54a6df4041c97db69e1443afb83d921ab5d99f68b5137e616342",
          "md5": "8049db28bb43a08ecdd9953b289f97d8",
          "sha256": "6dd116f1702e2b1ccbef27c4a7d829dfa54a1928db4ec8f34da03fde5e9ae95b"
        },
        "downloads": -1,
        "filename": "randomized_tsp-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8049db28bb43a08ecdd9953b289f97d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 4830,
        "upload_time": "2020-06-14T05:18:55",
        "upload_time_iso_8601": "2020-06-14T05:18:55.166358Z",
        "url": "https://files.pythonhosted.org/packages/75/7c/1093cabd54a6df4041c97db69e1443afb83d921ab5d99f68b5137e616342/randomized_tsp-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ad353df2c07028068ecdb85d2fcf6a5c44e8050ac714dc569f7e342f710f68a",
          "md5": "6655af785d2bab8c8b511c13b4e35b06",
          "sha256": "b3d2e493083119efccfce386667ccb3a79c725380a2e6378ecbca2b29c382437"
        },
        "downloads": -1,
        "filename": "randomized_tsp-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6655af785d2bab8c8b511c13b4e35b06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7747,
        "upload_time": "2020-06-14T06:05:08",
        "upload_time_iso_8601": "2020-06-14T06:05:08.409088Z",
        "url": "https://files.pythonhosted.org/packages/2a/d3/53df2c07028068ecdb85d2fcf6a5c44e8050ac714dc569f7e342f710f68a/randomized_tsp-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11cf27e262e38716b78cb8e917f7ae32e32a43a4d60a3cf8eaa315ccd861c8ae",
          "md5": "6128b25d989763c1432a9385cb4f6db1",
          "sha256": "b71986a6ece08f8e723e7e821363c2f0fa6a735b9fda6b8d6de8a193f3e5c7d3"
        },
        "downloads": -1,
        "filename": "randomized_tsp-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6128b25d989763c1432a9385cb4f6db1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 4882,
        "upload_time": "2020-06-14T06:05:09",
        "upload_time_iso_8601": "2020-06-14T06:05:09.756957Z",
        "url": "https://files.pythonhosted.org/packages/11/cf/27e262e38716b78cb8e917f7ae32e32a43a4d60a3cf8eaa315ccd861c8ae/randomized_tsp-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ad353df2c07028068ecdb85d2fcf6a5c44e8050ac714dc569f7e342f710f68a",
        "md5": "6655af785d2bab8c8b511c13b4e35b06",
        "sha256": "b3d2e493083119efccfce386667ccb3a79c725380a2e6378ecbca2b29c382437"
      },
      "downloads": -1,
      "filename": "randomized_tsp-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6655af785d2bab8c8b511c13b4e35b06",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 7747,
      "upload_time": "2020-06-14T06:05:08",
      "upload_time_iso_8601": "2020-06-14T06:05:08.409088Z",
      "url": "https://files.pythonhosted.org/packages/2a/d3/53df2c07028068ecdb85d2fcf6a5c44e8050ac714dc569f7e342f710f68a/randomized_tsp-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11cf27e262e38716b78cb8e917f7ae32e32a43a4d60a3cf8eaa315ccd861c8ae",
        "md5": "6128b25d989763c1432a9385cb4f6db1",
        "sha256": "b71986a6ece08f8e723e7e821363c2f0fa6a735b9fda6b8d6de8a193f3e5c7d3"
      },
      "downloads": -1,
      "filename": "randomized_tsp-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6128b25d989763c1432a9385cb4f6db1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 4882,
      "upload_time": "2020-06-14T06:05:09",
      "upload_time_iso_8601": "2020-06-14T06:05:09.756957Z",
      "url": "https://files.pythonhosted.org/packages/11/cf/27e262e38716b78cb8e917f7ae32e32a43a4d60a3cf8eaa315ccd861c8ae/randomized_tsp-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}