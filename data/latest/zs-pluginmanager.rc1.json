{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Plugins",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ZS-PluginManager\n\nPluginManager to use entry-points in projects\n\n# Usage\n\n## Import\n```\nfrom zs_pluginmanager.manager import PluginManager\n```\n\n## Load plugins (entry-points)\n```\nplugins_manager = PluginManager()\nplugins_manager.load_global(\"distutils.commands\", label=\"commands\")\nplugins_manager.load_global(\"distutils.setup_keywords\", label=\"setup_keywords\")\n```\n\n## Show loaded plugins (entry-points)\n### All\n```\nprint(\"print all plugins (entry-points):\")\nfor plugin in plugins_manager:\n    print(\"\", plugin.name, plugin.plugin)\n```\n\nOutput:\n```\nprint all plugins (entry-points):\n alias <class 'setuptools.command.alias.alias'>\n bdist_egg <class 'setuptools.command.bdist_egg.bdist_egg'>\n bdist_rpm <class 'setuptools.command.bdist_rpm.bdist_rpm'>\n bdist_wininst <class 'setuptools.command.bdist_wininst.bdist_wininst'>\n build_clib <class 'setuptools.command.build_clib.build_clib'>\n build_ext <class 'setuptools.command.build_ext.build_ext'>\n build_py <class 'setuptools.command.build_py.build_py'>\n develop <class 'setuptools.command.develop.develop'>\n dist_info <class 'setuptools.command.dist_info.dist_info'>\n easy_install <class 'setuptools.command.easy_install.easy_install'>\n egg_info <class 'setuptools.command.egg_info.egg_info'>\n install <class 'setuptools.command.install.install'>\n install_egg_info <class 'setuptools.command.install_egg_info.install_egg_info'>\n install_lib <class 'setuptools.command.install_lib.install_lib'>\n install_scripts <class 'setuptools.command.install_scripts.install_scripts'>\n rotate <class 'setuptools.command.rotate.rotate'>\n saveopts <class 'setuptools.command.saveopts.saveopts'>\n sdist <class 'setuptools.command.sdist.sdist'>\n setopt <class 'setuptools.command.setopt.setopt'>\n test <class 'setuptools.command.test.test'>\n upload_docs <class 'setuptools.command.upload_docs.upload_docs'>\n bdist_wheel <class 'wheel.bdist_wheel.bdist_wheel'>\n convert_2to3_doctests <function assert_string_list at 0x000001A90BCDF160>\n dependency_links <function assert_string_list at 0x000001A90BCDF160>\n eager_resources <function assert_string_list at 0x000001A90BCDF160>\n entry_points <function check_entry_points at 0x000001A90BCDF550>\n exclude_package_data <function check_package_data at 0x000001A90BCDF670>\n extras_require <function check_extras at 0x000001A90BCDF280>\n include_package_data <function assert_bool at 0x000001A90BCDF3A0>\n install_requires <function check_requirements at 0x000001A90BCDF430>\n namespace_packages <function check_nsp at 0x000001A90BCDF1F0>\n package_data <function check_package_data at 0x000001A90BCDF670>\n packages <function check_packages at 0x000001A90BCDF700>\n python_requires <function check_specifier at 0x000001A90BCDF4C0>\n setup_requires <function check_requirements at 0x000001A90BCDF430>\n test_loader <function check_importable at 0x000001A90BCDF0D0>\n test_runner <function check_importable at 0x000001A90BCDF0D0>\n test_suite <function check_test_suite at 0x000001A90BCDF5E0>\n tests_require <function check_requirements at 0x000001A90BCDF430>\n use_2to3 <function assert_bool at 0x000001A90BCDF3A0>\n use_2to3_exclude_fixers <function assert_string_list at 0x000001A90BCDF160>\n use_2to3_fixers <function assert_string_list at 0x000001A90BCDF160>\n zip_safe <function assert_bool at 0x000001A90BCDF3A0>\n```\n\n### Only selected\n```\nprint(\"print selected entry-points by label:\")\nfor plugin in plugins_manager.filter(label=\"commands\"):\n    print(\"\", plugin.name, plugin.plugin)\n```\nOutput:\n```\nprint selected entry-points by label:\n alias <class 'setuptools.command.alias.alias'>\n bdist_egg <class 'setuptools.command.bdist_egg.bdist_egg'>\n bdist_rpm <class 'setuptools.command.bdist_rpm.bdist_rpm'>\n bdist_wininst <class 'setuptools.command.bdist_wininst.bdist_wininst'>\n build_clib <class 'setuptools.command.build_clib.build_clib'>\n build_ext <class 'setuptools.command.build_ext.build_ext'>\n build_py <class 'setuptools.command.build_py.build_py'>\n develop <class 'setuptools.command.develop.develop'>\n dist_info <class 'setuptools.command.dist_info.dist_info'>\n easy_install <class 'setuptools.command.easy_install.easy_install'>\n egg_info <class 'setuptools.command.egg_info.egg_info'>\n install <class 'setuptools.command.install.install'>\n install_egg_info <class 'setuptools.command.install_egg_info.install_egg_info'>\n install_lib <class 'setuptools.command.install_lib.install_lib'>\n install_scripts <class 'setuptools.command.install_scripts.install_scripts'>\n rotate <class 'setuptools.command.rotate.rotate'>\n saveopts <class 'setuptools.command.saveopts.saveopts'>\n sdist <class 'setuptools.command.sdist.sdist'>\n setopt <class 'setuptools.command.setopt.setopt'>\n test <class 'setuptools.command.test.test'>\n upload_docs <class 'setuptools.command.upload_docs.upload_docs'>\n bdist_wheel <class 'wheel.bdist_wheel.bdist_wheel'>\n```\n\n## Limitation\n\n Key of PluginManager.plugins Should be unique by (namespace, entry_point.name, label, local).  \n If one name of entry_point is in several different groups, then it will be several times.  \n To find exact pligun do use plugins_manager.filter() which filter plugins by different options.  \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Zoynels/ZS-PluginManager",
    "keywords": "plugin,plug-in,manager",
    "license": "GNU Affero General Public License v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ZS-PluginManager",
    "package_url": "https://pypi.org/project/ZS-PluginManager/",
    "platform": "",
    "project_url": "https://pypi.org/project/ZS-PluginManager/",
    "project_urls": {
      "Homepage": "https://github.com/Zoynels/ZS-PluginManager"
    },
    "release_url": "https://pypi.org/project/ZS-PluginManager/0.0.1/",
    "requires_dist": [
      "entrypoints (>=0.3)"
    ],
    "requires_python": "",
    "summary": "Library to use plugins in Python programs.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7216830,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "737a4252f25d526213ad6da2caee8da57a57b812ea00a0b284f36a7cc51a7aed",
          "md5": "4635adad5f7a19a237bc9346815a103d",
          "sha256": "a84af31f39597753ea399a7805320c6b09555c0b0c9fca27a1cc5db3c56a739b"
        },
        "downloads": -1,
        "filename": "ZS_PluginManager-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4635adad5f7a19a237bc9346815a103d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20141,
        "upload_time": "2020-05-11T17:01:30",
        "upload_time_iso_8601": "2020-05-11T17:01:30.194998Z",
        "url": "https://files.pythonhosted.org/packages/73/7a/4252f25d526213ad6da2caee8da57a57b812ea00a0b284f36a7cc51a7aed/ZS_PluginManager-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "737a4252f25d526213ad6da2caee8da57a57b812ea00a0b284f36a7cc51a7aed",
        "md5": "4635adad5f7a19a237bc9346815a103d",
        "sha256": "a84af31f39597753ea399a7805320c6b09555c0b0c9fca27a1cc5db3c56a739b"
      },
      "downloads": -1,
      "filename": "ZS_PluginManager-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4635adad5f7a19a237bc9346815a103d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20141,
      "upload_time": "2020-05-11T17:01:30",
      "upload_time_iso_8601": "2020-05-11T17:01:30.194998Z",
      "url": "https://files.pythonhosted.org/packages/73/7a/4252f25d526213ad6da2caee8da57a57b812ea00a0b284f36a7cc51a7aed/ZS_PluginManager-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}