{
  "info": {
    "author": "Noah Huppert",
    "author_email": "contact@noahh.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[**PyPi**](https://pypi.org/project/wallet-sdk-Noah-Huppert)\n\n# Wallet Python SDK\nPython interface for a wallet service.\n\n# Table Of Contents\n- [Overview](#overview)\n- [Wallet Client](#wallet-client)\n- [Request Credentials](#request-credentials)\n- [Development](#development)\n- [Operations](#operations)\n\n# Overview\nWallet service Python 3 SDK.\n\nFirst [follow the instructions to request wallet service credentials](#request-credentials).\n\nNext install the [`wallet-sdk-Noah-Huppert`](https://pypi.org/project/wallet-sdk-Noah-Huppert/) pip package and import the `wallet_sdk` module. Then use the `WalletClient` class to interact with the wallet service API.\n\n```py\n# Import wallet service Python SDK\nimport wallet_sdk\n\n# Initialize the client\nc = wallet_sdk.WalletClient.LoadFromConfig(\"./your-authority-client-config.json\")\n\n# Add / remove value and items from user's wallets\nc.create_entry(user_id='foobar123',\n               amount=99,\n               reason='returned a lot of cans')\ntry:\n    c.create_entry(user_id='bobcats9',\n                   amount=-5,\n                   reason='bought a soda',\n                   item={ 'name': 'Soda Can' })\nexcept wallet_sdk.NotEnoughFundsError as e:\n    print(\"Sorry user 'bobcats9' cannot afford to buy soda right now\")\n\n# Get wallet values\nall_wallets = c.get_wallets()\nprint(all_wallets) # [{ 'user_id': 'foobar123', 'total': 99},\n                   #  { 'user_id': 'bobcats9', 'total': 595 }]\nc.get_wallets(user_ids=['foobar123'],\n              authority_id=['xxyyzz'])\n\n# Get items\nall_inventory = c.get_inventory()\nprint(all_inventory) # [{'entry_id': 'xxx',\n                    #   'authority_id': 'xxx',\n                    #   'user_id': 'xxx',\n                    #   'item': { 'name': 'xxx', 'used': False, 'data': 'xxx' } },\n                    #  { ... }]\nc.get_inventory(entry_ids=['1234'],\n                user_ids=['foobar123'],\n                authority_ids=['yyzzii'])\n\n# Mark items as used up\nc.use_item(entry_id='998877')\n```\n\n## Wallet Client\nThe wallet service stores arbitrary transaction data. Certain trusted applications, named \"authorities\", can create entries to add or remove value from a user's wallet, and optionally add an item to a user's inventory.\n\nA user's wallet value and items they own are aggregated and returned by the wallet service server.\n\nThis SDK allows you to act as an authority, and perform these actions.\n\n### Create Entries\n**Examples**  \n```py\n# Add 1000 to user 1 's wallet\nc.create_entry(user_id='1',\n               amount=1000,\n               reason='payday')\n\n# Remove 100 from user 1 's wallet and give them an item named Cool Shades\ntry:\n    c.create_entry(user_id='1',\n                   amount=-100,\n                   reason='bought sunglasses',\n                   item={\n                     'name': 'Cool Shades',\n                     'data': '{ \"internal_id\": \"001122\" }'\n                   })\nexcept wallet_sdk.NotEnoughFundsError as e:\n    print(\"Sorry, user 1 does not have enough money to buy cool shades right now\")\n\n```\n\n**Overview**  \nAs an authority you can create an entry to modify a user's wallet and inventory.\n\nCreate entries with the `create_entry` method. Specify entry parameters via the arguments:\n\n- `user_id` (`str`)\n- `amount` (`int`)\n- `reason` (`str`)\n- `item` (`object`, optional)\n  - `name` (`str`)\n  - `data` (anything)\n\nSee [Data Types - Entry](#entry) for descriptions of fields.\n\n**Exceptions**  \n- `NotEnoughFundsError`: Raised when the API determines that the user cannot afford to back a transaction\n\n**Return Value**  \nThe `create_entry` method returns the newly created entry. See [Data Types - Entry](#entry).\n\n## Query Wallets\n**Examples**  \n```py\n# Get all wallets\nall_wallets = c.get_wallets()\nprint(all_wallets) # [{'user_id': '1', 'total': 900},\n                   #  { ... },\n                   #  {'user_id': '60', 'total': 6000}]\n\n# Find wallets of only users 0 and 2\nwallets_0_and_2 = c.get_wallets(user_ids=['0', '2'])\nprint(wallets_0_and_2) # [{'user_id': '0', 'total': 10},\n                       #  {'user_id': '2', 'total': 97000}]\n\n# Find wallets but only take into account entries we've made\nmy_transactions = c.get_wallets(authority_ids=['<your authority id>'])\nprint(my_transactions) # [{'user_id': '1', 'total': 900},\n                       #  {'user_id': '34', 'total': 150000},\n                       #  {'user_id': '41', 'total': 700}]\n```\n\n**Overview**  \nEntries are totaled for each user and can be retrieved using the `get_wallets` method.\n\nQueries can narrowed to only retrieve certain users by providing an array of their IDs via the `user_ids` argument.\n\nWallet totals can be limited to entries which only specific authorities created. This will omit entries not created by the specified authorities in the total value calculations. To do so provide an array of authorities IDs via the `authority_ids` argument.\n\nThese arguments can both be provided.\n\n**Return Value**  \nThe `get_wallets` method returns an array of [Data Type - Wallet Total](#wallet-total) objects.\n\n## Query Inventory\n**Examples**  \n```py\n# Get all user inventory items\nall_inventory = c.get_inventory()\nprint(all_inventory) # [{'entry_id': 'xxx',\n                     #   'authority_id': 'xxx',\n                     #   'user_id': 'xxx',\n                     #   'item': { 'name': 'xxx', 'used': False, 'data': 'xxx' } },\n                     #  { ... }]\n\n# Filter inventory by entry IDs\nc.get_inventory(entry_ids=['abc00', 'xyz99'])\n\n# Filter inventory by user IDs\nc.get_inventory(user_ids=['0', '30'])\n\n# Filter inventory by authority IDs\nc.get_inventory(authority_ids=['xxx', 'zzz'])\n\n# Find inventory which has been used\nc.get_inventory(used=True)\n\n# Do not filter by used\nc.get_inventory(used=None)\n```\n\n**Overview**  \nUser inventory items can be retrieved using the `get_inventory` method.\n\nThe results can be filtered by entry ID, user ID, and authority ID via the `entry_ids`, `user_ids`, `authority_ids` arguments respectively.\n\nResults can also be filtered based off of if they are marked as used by providing the `used` argument. By default only unused items are returned. Set `True` to find used items, and to `None` in order to disable filtering based on used status.\n\nThese arguments may be provided together.\n\n**Return Value**  \nThe `get_inventory` method returns an array of [Data Type - Entry Item](#entry-item) objects.\n\n## Mark Item As Used\n**Example**  \n```py\n# Mark item from entry xyz012 as used\nc.use_item(entry_id='xyz012')\n```\n\n**Overview**  \nTo mark an item as used call the `use_item` method. \n\nThe ID of the entry in which the item was created is used to specify the item.\n\n**Return Value**  \nThe `use_item` method returns the [Data Type - Entry](#entry) which was modified.\n\n## Ensure wallet service is operational\n**Example**  \n```py\ntry:\n    c.check_service_health()\nexcept wallet_sdk.WalletAPIError as e:\n    print(\"Failed to ensure wallet service is running:\", e)\n    sys.exit(1)\n```\n\n**Overview**  \nIf you would like to create a circuit breaker in your code and determine if the wallet service is running use the `check_service_health` method.\n\n**Return Value**  \nThe `check_service_health` method returns a `bool` indicating if the wallet service server can be used. A `wallet_sdk.WalletAPIError` exception may be raised if the SDK fails to communicate with the wallet service server.\n\n## Data Types\n### Entry\nA transaction entry.\n\n- `entry_id` (`str`): Unique ID of entry\n- `authority_id` (`str`): ID of authority which created entry\n- `user_id` (`str`): ID of user for which entry pertains\n- `created_on` (`int`): Unix timestamp of when entry was created\n- `amount` (`int`): Amount added (positive) or removed (negative) from the user's wallet\n- `reason` (`str`): User friendly description of why this transaction occurred\n- `item` (`object`, optional): Item given to user in this transaction\n  - `name` (`str`): User friendly name of item\n  - `used` (`bool`): If item has been used up\n  - `data` (`object`, optional): Any arbitrary data which the creating authority would like to store for this item\n\n### Wallet Total\nDescribes the current value of a wallet.\n\n- `user_id` (`str`): ID of user who owns wallet\n- `total` (`int`): Total amount of money in user's wallet\n\n### Entry Item\nAn item a user owns from a transaction.\n\n- `entry_id` (`str`): ID of the entry in which this item was given to the user, this is used as the unique ID for this item\n- `authority_id` (`str`): ID of authority who gave the user the item\n- `user_id` (`str`): ID of the user who owns the item\n- `item` (`object`): Owned item\n  - `name` (`str`): User friendly name of item\n  - `used` (`bool`): If the item has been used up\n  - `data` (`object`, optional): Arbitrary data which the creating authority specified\n\n# Request Credentials\nThe wallet service Python SDK is a generic interface to any wallet service. \nThere is no single wallet service. Instead this repository provides the \nsource code required for someone to host their own wallet service.\n\nTo obtain credentials you must contact the administrator of the wallet service \nwith which you wish to interact. Ask them for an \"authority client configuration\nfile\". If they agree to give you access the administrator should provide you\nwith a JSON file. **This file is secret, it authenticates you with the wallet \nservice, !!!and should never be made public!!!**.\n\nThen simply provide the `WalletClient.LoadFromConfig()` function a path to\nthis file. \n\n# Development\nA virtual environment is provided for development purposes.\n\nInstall [Pipenv](https://pipenv.pypa.io/en/latest/), the official Python virtual\nenvironment manager.\n\nThen install dependencies:\n\n```\npipenv install\n```\n\nFinally activate the environment:\n\n```\npipenv shell\n```\n\n# Operations\n## Release PyPi Package\nThis section documents how the `wallet-sdk-Noah-Huppert` pip package \nis generated.\n\n1. First activate the development python virtual environment:\n   ```\n   pipenv shell\n   ```\n2. Update the version\n   1. Pick new [semantic version](https://semver.org/). Change major if not \n\t  backwards compatible changes, minor for new backwards compatible features,\n\t  and patch for new backwards compatible bug fixes.\n   2. Edit the version in [`wallet_sdk/VERSION`](./wallet_sdk/VERSION).\n   3. Ensure the API compatible version `COMPATIBLE_API_VERSION` is correct.\n   4. Update [the compatibility matrix in the general `README.md`](../README.md#version-compatibility-matrix).\n3. Merge code into the `master` branch.\n4. Publish to test pip\n   ```\n   make clean\n   make publish\n   ```\n   Inspect package page to ensure everything looks good.\n5. Tag the current `master` as `py-sdk-v<version>`.\n6. Create a new GitHub release named `Python SDK v<version>`.\n   - Include a short one or two sentence summary of the changes\n   - Include an h1 \"Change log\" section: list detailed changes\n5. Publish to pip:\n   ```\n   make clean\n   make publish PIP_REPO=pypi\n   ```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Noah-Huppert/wallet-service/tree/master/py-sdk",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wallet-sdk-Noah-Huppert",
    "package_url": "https://pypi.org/project/wallet-sdk-Noah-Huppert/",
    "platform": "",
    "project_url": "https://pypi.org/project/wallet-sdk-Noah-Huppert/",
    "project_urls": {
      "Homepage": "https://github.com/Noah-Huppert/wallet-service/tree/master/py-sdk"
    },
    "release_url": "https://pypi.org/project/wallet-sdk-Noah-Huppert/1.1.0/",
    "requires_dist": [
      "pyjwt",
      "requests",
      "voluptuous"
    ],
    "requires_python": ">=3.6",
    "summary": "Wallet service API SDK",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11245310,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2790121a4021d032feaf65cad8aea94cf38cf38bacd98f85762ed0b75154163",
          "md5": "0affa80c003fab003fa677367cbcf162",
          "sha256": "50fdfc2caabce216707c5d8e1796554e1c162ec4eb3a0bb1b3b528b9901c6396"
        },
        "downloads": -1,
        "filename": "wallet_sdk_Noah_Huppert-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0affa80c003fab003fa677367cbcf162",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7729,
        "upload_time": "2020-08-11T21:12:59",
        "upload_time_iso_8601": "2020-08-11T21:12:59.119153Z",
        "url": "https://files.pythonhosted.org/packages/c2/79/0121a4021d032feaf65cad8aea94cf38cf38bacd98f85762ed0b75154163/wallet_sdk_Noah_Huppert-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be93460f2451e3a7d6f64eddf2cd10a3ce2d0d2d8c107b35aa7761434cf268bc",
          "md5": "eb03b5b128973cbcab36630907dd81e1",
          "sha256": "50d56ba6256aa63db015098e1fcecc79ad325061204782209a6b74131de5922c"
        },
        "downloads": -1,
        "filename": "wallet-sdk-Noah-Huppert-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eb03b5b128973cbcab36630907dd81e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4888,
        "upload_time": "2020-08-11T21:13:01",
        "upload_time_iso_8601": "2020-08-11T21:13:01.348628Z",
        "url": "https://files.pythonhosted.org/packages/be/93/460f2451e3a7d6f64eddf2cd10a3ce2d0d2d8c107b35aa7761434cf268bc/wallet-sdk-Noah-Huppert-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7214d8e29f452ba562296d7340eace8fd60d3358a04806bac3bcc2ff9730893d",
          "md5": "bbc03fa14e647c88da30a74916cee138",
          "sha256": "a2d4355305812159b8dc530891a25c0b50e95e0b53db9cbbb5826555909b3621"
        },
        "downloads": -1,
        "filename": "wallet_sdk_Noah_Huppert-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbc03fa14e647c88da30a74916cee138",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10127,
        "upload_time": "2020-08-12T06:12:40",
        "upload_time_iso_8601": "2020-08-12T06:12:40.445531Z",
        "url": "https://files.pythonhosted.org/packages/72/14/d8e29f452ba562296d7340eace8fd60d3358a04806bac3bcc2ff9730893d/wallet_sdk_Noah_Huppert-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30456d5dab5817c33f9932f3e1e990f0113103c237bdeea829931a630564bd5e",
          "md5": "f39bd101007c5b7e7019b324cf45d331",
          "sha256": "1ef700672ed78ae7ff32e33a14696e56375b7124b5847ebf882d7621572a9590"
        },
        "downloads": -1,
        "filename": "wallet-sdk-Noah-Huppert-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f39bd101007c5b7e7019b324cf45d331",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7983,
        "upload_time": "2020-08-12T06:12:42",
        "upload_time_iso_8601": "2020-08-12T06:12:42.081268Z",
        "url": "https://files.pythonhosted.org/packages/30/45/6d5dab5817c33f9932f3e1e990f0113103c237bdeea829931a630564bd5e/wallet-sdk-Noah-Huppert-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d42fac66991da36782f9651f0e06b5cdfc0f204a2a0df7c3d57e860fbb39e08",
          "md5": "ba1a1d4e782a0546c81243632bf88082",
          "sha256": "fa8c366ed590274d56a61a20930a44cf6d2e9984bda35e642cc027c7504089d8"
        },
        "downloads": -1,
        "filename": "wallet_sdk_Noah_Huppert-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba1a1d4e782a0546c81243632bf88082",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9093,
        "upload_time": "2020-08-12T17:07:34",
        "upload_time_iso_8601": "2020-08-12T17:07:34.806791Z",
        "url": "https://files.pythonhosted.org/packages/4d/42/fac66991da36782f9651f0e06b5cdfc0f204a2a0df7c3d57e860fbb39e08/wallet_sdk_Noah_Huppert-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5c28e4da9e7ea7fe306c6da6fc181493bf8937c972efa5c7a56813cc2753195",
          "md5": "db0bd489a24578511dd3b1a7d724fd7d",
          "sha256": "33374a86abb12906e14f1b90f727ad7c9a01884978ac3d0466bef62b84bae257"
        },
        "downloads": -1,
        "filename": "wallet-sdk-Noah-Huppert-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "db0bd489a24578511dd3b1a7d724fd7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9232,
        "upload_time": "2020-08-12T17:07:36",
        "upload_time_iso_8601": "2020-08-12T17:07:36.113469Z",
        "url": "https://files.pythonhosted.org/packages/e5/c2/8e4da9e7ea7fe306c6da6fc181493bf8937c972efa5c7a56813cc2753195/wallet-sdk-Noah-Huppert-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f13f06364a983c03f05ac0a445cd474e74b2e7f4c1c285a858b03df42a8015e3",
          "md5": "8af23e64fdc3069ab4c148e43835e1e9",
          "sha256": "e05381cb34cf49787d67c2b1ed67a917e0b5b783450d91d2c2b4e65b5737334f"
        },
        "downloads": -1,
        "filename": "wallet_sdk_Noah_Huppert-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8af23e64fdc3069ab4c148e43835e1e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11413,
        "upload_time": "2021-06-03T15:45:54",
        "upload_time_iso_8601": "2021-06-03T15:45:54.262448Z",
        "url": "https://files.pythonhosted.org/packages/f1/3f/06364a983c03f05ac0a445cd474e74b2e7f4c1c285a858b03df42a8015e3/wallet_sdk_Noah_Huppert-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce6471577d3a86a1d2daea924849228ffbfc720268fe1ee00fb208b2a09771b4",
          "md5": "1933fae0bdae8845a62e3b72d0a42a61",
          "sha256": "e88a558d67f32ce3ca5fb6599aeae0adab58b4f8b3dd8a6558040fae5907ece4"
        },
        "downloads": -1,
        "filename": "wallet-sdk-Noah-Huppert-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1933fae0bdae8845a62e3b72d0a42a61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14625,
        "upload_time": "2021-06-03T15:45:55",
        "upload_time_iso_8601": "2021-06-03T15:45:55.712291Z",
        "url": "https://files.pythonhosted.org/packages/ce/64/71577d3a86a1d2daea924849228ffbfc720268fe1ee00fb208b2a09771b4/wallet-sdk-Noah-Huppert-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3baa5be10f5e3c01226db8b6241cf8ec834160fe3889700e4e79ce3be5ddc7c0",
          "md5": "6920bee0cdc1386e5a7011f891dc1d7d",
          "sha256": "93c05c0f0adf9f574c348c8d281a1402fad08907a872a560b0df182af06bd8bf"
        },
        "downloads": -1,
        "filename": "wallet_sdk_Noah_Huppert-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6920bee0cdc1386e5a7011f891dc1d7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11794,
        "upload_time": "2021-08-22T16:44:29",
        "upload_time_iso_8601": "2021-08-22T16:44:29.650969Z",
        "url": "https://files.pythonhosted.org/packages/3b/aa/5be10f5e3c01226db8b6241cf8ec834160fe3889700e4e79ce3be5ddc7c0/wallet_sdk_Noah_Huppert-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a847578a1e0b9140c9dee5c1bee325790ef4d71864c4097d19f95d4419f9586a",
          "md5": "ee7bce1f363c5bad56d98ec61cba1877",
          "sha256": "2abb6900917c39c777149aba920fe1fc6e366c660f766b4ff95f5a3e6d0f05c1"
        },
        "downloads": -1,
        "filename": "wallet-sdk-Noah-Huppert-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ee7bce1f363c5bad56d98ec61cba1877",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15095,
        "upload_time": "2021-08-22T16:44:31",
        "upload_time_iso_8601": "2021-08-22T16:44:31.270861Z",
        "url": "https://files.pythonhosted.org/packages/a8/47/578a1e0b9140c9dee5c1bee325790ef4d71864c4097d19f95d4419f9586a/wallet-sdk-Noah-Huppert-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3baa5be10f5e3c01226db8b6241cf8ec834160fe3889700e4e79ce3be5ddc7c0",
        "md5": "6920bee0cdc1386e5a7011f891dc1d7d",
        "sha256": "93c05c0f0adf9f574c348c8d281a1402fad08907a872a560b0df182af06bd8bf"
      },
      "downloads": -1,
      "filename": "wallet_sdk_Noah_Huppert-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6920bee0cdc1386e5a7011f891dc1d7d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11794,
      "upload_time": "2021-08-22T16:44:29",
      "upload_time_iso_8601": "2021-08-22T16:44:29.650969Z",
      "url": "https://files.pythonhosted.org/packages/3b/aa/5be10f5e3c01226db8b6241cf8ec834160fe3889700e4e79ce3be5ddc7c0/wallet_sdk_Noah_Huppert-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a847578a1e0b9140c9dee5c1bee325790ef4d71864c4097d19f95d4419f9586a",
        "md5": "ee7bce1f363c5bad56d98ec61cba1877",
        "sha256": "2abb6900917c39c777149aba920fe1fc6e366c660f766b4ff95f5a3e6d0f05c1"
      },
      "downloads": -1,
      "filename": "wallet-sdk-Noah-Huppert-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ee7bce1f363c5bad56d98ec61cba1877",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15095,
      "upload_time": "2021-08-22T16:44:31",
      "upload_time_iso_8601": "2021-08-22T16:44:31.270861Z",
      "url": "https://files.pythonhosted.org/packages/a8/47/578a1e0b9140c9dee5c1bee325790ef4d71864c4097d19f95d4419f9586a/wallet-sdk-Noah-Huppert-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}