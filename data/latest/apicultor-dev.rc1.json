{
  "info": {
    "author": "Hernán Ordiales, Marcelo Tuller",
    "author_email": "hordiales@gmail.com, marscrophimself@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 6 - Mature",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia :: Sound/Audio :: Analysis"
    ],
    "description": "# About the project\n\n* Interactive __DEMO__:\n  * [Cloud Instrument](https://www.youtube.com/watch?v=SCYEEpfct_Y) raspicultor + custom controller version video. Interactive demo retrieving sounds from the Cloud using MIR descriptors and processing them in realtime (using raspicultor aka raspberry pi + apicultor).\n  * [Experimental session with sounds from the cloud](https://www.youtube.com/watch?v=2sMsKvfZKGA). First live demo with an standard midi controller.\n* Embedded instrument running in a [Bela](http://bela.io/) or Raspberry Pi: [cloudpicultor](https://github.com/hordiales/cloudpicultor_instrument).\n* Cloud Instrument mention in [ArCiTec prize, Technology applied to Arts](https://arcitec.frba.utn.edu.ar/tecnologia-aplicada-al-arte/) (2018).\n* Publication: [Sound recycling from public databases](https://www.researchgate.net/publication/317388443_Sound_recycling_from_public_databases) @ [Audio Mostly](http://audiomostly.com) 2017 \n* \"Forgotten pieces from unknown people\" and \"Dialectic in suspense\" constructed using APICultor, were showed in [NIPS 2017 Art Gallery](http://nips4creativity.com/music/) (Machine Learning for Creativity and Design, Long Beach, California, USA)\n* \"Sound recycling from public databases\" was presented at [Technarte Los Angeles 2017](http://www.technarte.org/losangeles-2017-program/).\n* Recycled sounds: [Sound miniatures](http://redpanal.org/p/reciclado-de-samples/)\n\nAPICultor born to realize interdisciplinary performances based on sounds of the web platform [http://redpanal.org](http://redpanal.org). The system is also useful to use with any other sound database on the internet or even running it locally.\n\nThe sound is processed digitally using different live-coding techniques. A pre-analysis based on Music Information Retrieval (MIR) stored in a database and accessed via a web-service REST API is combined with real-time processing and synthesis, random processes and human control via external interfaces.\n\n![](doc/InstrCloudIT_play.png)\n\nExamples available with SuperCollider, Pyo and pure data.\n\nSpanish version: [README_es.md](README_es.md)\n\n# News\n\n* 2018\n  * Migration to Python3 and setup.py install thanks to MarsCrop!\n  * MusicEmotionMachine by MarsCrop (in development)\n  * Cloud Instrument ready to play with an external controller, running in a dedicated device like Raspberry Pi or Bela Platform\n* 2017: \n  * SuperCollider patch to play in realtime using sounds from public repositories (databases on the web). Realtime synthesis, wav retrieving using MIR descriptors, OSC & MIDI communication between process and controllers.\n* 2016: First demos (extracting MIR features, database build, MIR State Machine, etc)\n\n# Developers\n\nSee [Development Guidelines](doc/Dev-Guidelines.md).\n\n# License\n\nFree Software shared with GPL v3, see [LICENSE](LICENSE).\n\n# Cloud Instrument\n\nUsing a desktop computer, a Raspberry pi or bela platform.\n\nSee [cloud_instrument/README.md](cloud_instrument/README.md)\n\nInteractive __DEMO__: [Cloud Instrument](https://www.youtube.com/watch?v=SCYEEpfct_Y). Interactive demo retrieving sounds from the Cloud using MIR descriptors and processing them in realtime (using raspicultor aka raspberry pi + apicultor).\n\n### UI\n[Open Stage Control](https://osc.ammd.net/) User Interface\n\n![](doc/UI%20ArCiTec.png)\n\n## Custom MIDI Controller design\n\n![](doc/yaeltex-pre-print-front.png)\n[Yaeltex](https://yaeltex.com/en) custom MIDI controllers\n\n![](doc/controller.jpg)\n\nWith a SuperCollider synthesizer/effects processor running in a Raspberry pi, plus an external sound card for high fidelity.\n\n\n## Performances\n\n### Sonidos Mutantes\n\nInterdisciplinary performances based on sounds of the web platform [Redpanal.org](Redpanal.org)\n\n## Proofs of concept:\n\n* [APICultor + No Input + Granular synthesis live performance](https://soundcloud.com/sonidosmutantes/apicultor-no-input).\n\n* Compositions & recycled samples\n  * [API-Cultor compositions](http://redpanal.org/p/apicultor/)\n  * [Proyecto de reciclado de sonidos libres de la web en RedPanal.org](http://redpanal.org/p/reciclado-de-samples/) (sonido + referencia al original).\n\n* Generative music using MIR state machine a free/libre sounds from Freesound.org: \n  * \"[Feature Thinking](https://soundcloud.com/hern-n-ordiales/feature-thinking)\" (with Creative Commons sounds from Freesound.org) by hordia.\n  * State Machine @ CASo (Centro de Arte Sonoro) https://www.youtube.com/watch?v=sG1YUc8PQV4\n\n* Live performances using this tool:\n  * Jam con guitarras + fx chain y sintes analógicos: [Perfo mutante en La Siesta del Fauno](https://soundcloud.com/hern-n-ordiales/perfo-mutante-mobile)\n  * Closing performance of the Workshop of Experimental Sound: [http://redpanal.org/a/banda-de-mutantes-cierre-taller/](http://redpanal.org/a/banda-de-mutantes-cierre-taller/)\n  * La Noche de los Museos La Casa del Bicentenario: [Performance 29/10/2016](http://redpanal.org/a/performance-casa-tomada/) [Con visuales 3D (Blender game engine)](https://www.youtube.com/watch?v=eKcvkgtJIEo) ) **Reseña**: [enjambrebit-y-la-banda-de-mutantes/](http://blog.enjambrelab.com.ar/enjambrebit-y-la-banda-de-mutantes/)\n\n* \"Remixes que toman audios libres de [RedPanal.org](http://redpanal.org/) para categorizarlos según diferentes tipos de emociones. Luego se elige una y se sincronizan las pistas, cambiando las tonalidades. De ser posible se separan de fuentes dentro de las mismas\" (by Mars Crop)\n  * [Beats intro jazz](http://redpanal.org/a/sm-beats-remix/)\n  * [Bass & DJ] (http://redpanal.org/a/sm-bass-guitar-plays-with-dj/)\n\n\n## Components\n\n* Mock web service with API REST to provide audio samples using MIR descriptors as parameters\n* State machine, with each state defined by several MIR descriptors.\n* Interaction with the free internet sound database [http://redpanal.org](http://redpanal.org)\n * API REST\n * Webscrapping by tag\n* Algorithms MIR to extract mean values or by frame of audio samples\n* Segmentation algorithms using different criteria.\n* Classify algorithms and clustering of samples of the sound database\n* Server OSC\n* Examples in Supercollider, pyo\n* Examples with MIDI and OSC controller. Locale and remote.\n\n![](doc/Apicultor_chain.png)\n\n# Dependencies\n\nTested under Linux, Mac OS (>10.11) and Windows 10.\n\nDebian, Ubuntu 15.04 and 16.04 (and .10). And [Docker](docker/Docker.md) images.\nRaspian @ Raspberry Pi\n\nSee [INSTALL.md](INSTALL.md)\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/sonidosmutantes/apicultor/archive/refs/heads/dev.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.github.com/sonidosmutantes/apicultor",
    "keywords": "deeplearning,ml,mlops,svm,music,dsp,sound,audio",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "apicultor-dev",
    "package_url": "https://pypi.org/project/apicultor-dev/",
    "platform": "",
    "project_url": "https://pypi.org/project/apicultor-dev/",
    "project_urls": {
      "Download": "https://github.com/sonidosmutantes/apicultor/archive/refs/heads/dev.zip",
      "Homepage": "https://www.github.com/sonidosmutantes/apicultor"
    },
    "release_url": "https://pypi.org/project/apicultor-dev/2.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "BigData system of sound effects, remixes and sound collections",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12203468,
  "releases": {
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7274bf3bdc51adc2ebc4524aa6ad61a75038df4e6608e0e488e75874ee238bb1",
          "md5": "cacb8d268196530d66b6788ac97748df",
          "sha256": "5fcace845880cf4e553e707aa42913c5d2c9cb999fd394a19e573eef8006f38a"
        },
        "downloads": -1,
        "filename": "apicultor-dev-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cacb8d268196530d66b6788ac97748df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 116992,
        "upload_time": "2021-12-03T17:38:02",
        "upload_time_iso_8601": "2021-12-03T17:38:02.054871Z",
        "url": "https://files.pythonhosted.org/packages/72/74/bf3bdc51adc2ebc4524aa6ad61a75038df4e6608e0e488e75874ee238bb1/apicultor-dev-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7274bf3bdc51adc2ebc4524aa6ad61a75038df4e6608e0e488e75874ee238bb1",
        "md5": "cacb8d268196530d66b6788ac97748df",
        "sha256": "5fcace845880cf4e553e707aa42913c5d2c9cb999fd394a19e573eef8006f38a"
      },
      "downloads": -1,
      "filename": "apicultor-dev-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cacb8d268196530d66b6788ac97748df",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 116992,
      "upload_time": "2021-12-03T17:38:02",
      "upload_time_iso_8601": "2021-12-03T17:38:02.054871Z",
      "url": "https://files.pythonhosted.org/packages/72/74/bf3bdc51adc2ebc4524aa6ad61a75038df4e6608e0e488e75874ee238bb1/apicultor-dev-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}