{
  "info": {
    "author": "Mingyang Li",
    "author_email": "mingyli@ebay.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11"
    ],
    "description": "# **Py**thon-based **Ja**va code **mi**gration helper (Pyjami)\n[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Code Coverage](coverage.svg)](https://github.com/dbrgn/coverage-badge)\n[![CodeQL](https://github.com/ebay/pyjami/workflows/CodeQL/badge.svg)](https://github.com/ebay/pyjami/actions?query=workflow%3ACodeQL)\n[![PyPI version](https://badge.fury.io/py/pyjami.svg)](https://badge.fury.io/py/pyjami)\n[![HitCount](https://hits.dwyl.com/ebay/pyjami.svg?style=flat)](http://hits.dwyl.com/ebay/pyjami)\n\nPython library which helps to automate the migration of Java classes/enums/interfaces.\n\n## Scenario\n\nWhen would you want to use this?\n\nYou have a Java project. You want to migrate 99+ classes/enums/interfaces in it. Let's say it contains a `com.foo.bar.MyClass`, and you want to replace all its usages with those of `org.example.newPackage.MyClass`.\n\nYour first instinct is a **find-and-replace**, but you'd have to deal with [wildcard imports](https://www.baeldung.com/java-wildcard-imports) and partially-qualified references at each level of the package.\n\nYou thought of **IntelliJ IDEA**. It offers a `Refactor` > `Migrate Packages and Classes` feature, but:\n* You have a more **complicated mapping** to specify. Perhaps you want to migrate `lorem.Foo` to `ipsum.Foo`, but for `lorem.Bar`, you want to migrate it to `dolor.Bar`. To do so in IntelliJ IDEA, you'd have to manually punch in each mapping rule.\n* You don't want to migrate all of them in **one transaction**. Maybe you want to run unit tests after migrating each, committing the changes to a separate revision only if the tests all pass. IntelliJ IDEA doesn't offer such fine-grained control.\n* Or you simply can't use / would avoid IntelliJ IDEA for some reason.\n\nThat's when this toolkit comes to help.\n\n## Usage\n\n### Migrate one symbol\nPlease ensure that you've installed these executable programs:\n\n* `gnu-sed` (installed by default on most Linux distros; a manual step on macOS). This is because the BSD edition of `sed` does not support word boundaries (\"`\\b`\").\n* [`ripgrep`](https://github.com/BurntSushi/ripgrep), a line-oriented search tool that recursively searches the current directory for a regex pattern.\n\nTo migrate usages of `com.foo.bar.MyClass` to `org.example.newPackage.MyClass`, use `migrate(...)` in `java_symbol_migration_helpers.py`:\n\n```python\nfrom pathlib import Path\nfrom pyjami.java_symbol_migration_helpers import find_suitable_sed_command, migrate\nmigrate(\n    symbol=\"MyClass\",\n    path=\"src/main/com/foo/bar\",\n    old_package=\"com.foo.bar\",\n    new_package=\"org.example.newPackage\",\n    repo_dir=Path(\"repo/\"),\n    pom_dependency=\"\"\"\n        <dependency>\n            <!-- New home for MyClass. -->\n            <groupId>org.example</groupId>\n            <artifactId>newPackage</artifactId>\n        </dependency>\n    \"\"\",\n    sed_executable=find_suitable_sed_command(),\n)\n```\n\n### Gather information for a list of symbols to migrate\n\nWe provide a `make_table()` function that gathers information about the symbols that are required in the migration process to follow.\n\nGiven an iterable (preferably a Pandas Series) of string, each of which being a symbol to migrate, this function returns a Pandas Dataframe with each line indicating the name, the java file path, and the package name of that symbol in the given directory.\n\nFor example, if you have `MyProject/Lorem.java` containing:\n\n```java\npackage com.example.MyProject;\n\nclass Lorem {...}\n```\n\nand you run:\n\n```python\nmake_table(\n    symbols_to_migrate=(\"Lorem\",),\n    search_within_directory=pathlib.Path(\"MyProject/\"),\n)\n```\n\nyou will get a table with one row of these values:\n\n- `symbol`: `Lorem`\n- `path`: `MyProject/Lorem.java`\n- `package`: `com.example.MyProject`\n\nThese are the required information to feed into `migrate()`.\n\nIn the case that multiple file paths are found for a given symbol, the first file path that is a child of the firstmost entry in `order_of_preference` is taken. When none is present, it's treated as if no file path is found for this symbol. Therefore, even if you don't have a preference of which directories to favor, you might still want to provide `order_of_preference` with at least a `search_within_directory`, so that at least some choice is taken.\n\n### Extra -- Sorting Components in an OpenAPI Contract\n\nThis is a common scenario to encounter when migrating handwritten Java code to a library generated from OpenAPI contract. In fact, this is the original case that kicked off this project.\n\nTherefore, Pyjami also provides tools that specifically help with OpenAPI migrations. For example, `sort_components_in_contract.py` sorts components (data models) in an OpenAPI contract YAML file topologically, so that you can migrate with confidence.\n\nSuppose your OpenAPI contract declares 2 components, `Pet` and `Pets`, with `Pets` referencing (\"depending on\") `Pet`:\n```yaml\nopenapi: \"3.0.0\"\ncomponents:\n  schemas:\n    Pet:\n      type: object\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n```\n\nYou can get the optimal order to migrate these symbols using `sort_symbols(...)`:\n\n```python\n>>> from pyjami.sort_components_in_contract import sort_symbols\n>>> sort_symbols(\"contract.yaml\")\n(\"Pet\", \"Pets\")\n```\n\nThis ensures that, by the time you attempt to migrate `class Pets`, `class Pet` has already been migrated. This is particularly useful if you want to ensure that the migration of every single symbol should keep the unit tests intact.\n\n## Development\n\nThis repository uses [Poetry](https://python-poetry.org/) for managing dependencies and packaging.\n\n### Documentation\n\nRefer to `docs/index.html` for documentation. It's also published as GitHub pages [here](https://opensource.ebay.com/pyjami/pyjami/java_symbol_migration_helpers.html).\n\nPyjami's documentation is generated via the [`pdoc`](https://pdoc.dev/docs/pdoc.html) tool:\n\n```shell\npdoc ./pyjami -o ./docs\n```\n\n### Pre-Commit Hooks\n\nThe hooks are required for the team. Although skipping this step does not prevent you from making a commit, this step is critical in maintaining a uniform coding style across developers.\n\nFrom now on, whenever you make a new commit, you should see logs like this in your terminal:\n\n```\nCheck Yaml...............................................................Passed\nFix End of Files.........................................................Passed\nTrim Trailing Whitespace.................................................Passed\nblack....................................................................Passed\n```\n\nIf you see [Black](https://github.com/psf/black) failed and modified files:\n\n```\nCheck Yaml...............................................................Passed\nFix End of Files.........................................................Passed\nTrim Trailing Whitespace.................................................Passed\nblack....................................................................Failed\n- hook id: black\n- files were modified by this hook\n\nreformatted path/to/file.py\nAll done! ‚ú® üç∞ ‚ú®\n1 file reformatted.\n```\n\nThen `git add` the auto-modified files and retry your `git commit` command.\n\nPlease report a bug if you do not see such messages.\n\n### Testing\n\nThis project uses [`pytest`](https://docs.pytest.org/) for running tests and [`pytest-cov`](https://pytest-cov.readthedocs.io/en/latest/) for collecting test coverage information.\n\nTo run the tests, run:\n\n```shell\npytest --cov=pyjami\n```\n\nYou'll see a report like this:\n\n```\n---------- coverage: platform darwin, python 3.10.6-final-0 ----------\nName                                      Stmts   Miss  Cover\n-------------------------------------------------------------\npyjami/__init__.py                            0      0   100%\npyjami/java_symbol_migration_helpers.py     150     18    88%\npyjami/sort_components_in_contract.py        53      8    85%\n-------------------------------------------------------------\nTOTAL                                       203     26    87%\n```\n\nThen, you can update the coverage badge:\n\n```shell\ncoverage-badge -o coverage.svg\n```\n\n### Releasing\n\nThis library is available as a package on PyPI [here](https://pypi.org/project/pyjami/). To release a new version:\n\n1. Bump the version number in `pyproject.toml` with a commit. Please follow [Semantic Versioning 2.0.0](https://semver.org/) specifications.\n2. Create a new release on GitHub [here](https://github.com/eBay/pyjami/releases).\n\nA GitHub workflow will be automatically triggered to build & publish this package to PyPI. Till eBay have an official account on PyPI, this action will keep on using a _PyPI API Token_ associated with Ming's personal PyPI account. The Token is stored on this GitHub repository as an Action Secret.\n\n# License\n\nApache 2.0.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyjami",
    "package_url": "https://pypi.org/project/pyjami/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyjami/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pyjami/0.1.6/",
    "requires_dist": [
      "PyYAML (>=6.0,<7.0)",
      "docopt (>=0.6.2,<0.7.0)",
      "pandas (>=1.5.0,<2.0.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "Migrate Java code with Python.",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16188660,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4865adf09249daa6a1e02703f4e817a78c940f129fdee6c5e5884bd776a4240",
          "md5": "9c6def58d1145f8a7d195557f5613046",
          "sha256": "d2bc91e6f0b07f6e108b89283508c728ea8864af756ff77391edfceef4efb27a"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c6def58d1145f8a7d195557f5613046",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 14553,
        "upload_time": "2022-10-11T21:55:55",
        "upload_time_iso_8601": "2022-10-11T21:55:55.760764Z",
        "url": "https://files.pythonhosted.org/packages/d4/86/5adf09249daa6a1e02703f4e817a78c940f129fdee6c5e5884bd776a4240/pyjami-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a91d2b69f2dad2847c9a90b047f378a02513e3dfab5a2cbb6ec58f8d31bdd047",
          "md5": "11aa7ce99deaa9162d22bda7f7614360",
          "sha256": "9fcc7cf922ae0220e58adf32b3289ac914ae2352e436594e4fbd6ac11a09afdf"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "11aa7ce99deaa9162d22bda7f7614360",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 16232,
        "upload_time": "2022-10-11T21:55:58",
        "upload_time_iso_8601": "2022-10-11T21:55:58.592844Z",
        "url": "https://files.pythonhosted.org/packages/a9/1d/2b69f2dad2847c9a90b047f378a02513e3dfab5a2cbb6ec58f8d31bdd047/pyjami-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad870598c470f1904492039afcbaa53a1b6ccad805acc7f781d58f70aacff4b7",
          "md5": "bad213b8174966108621cd5bd6a9428d",
          "sha256": "1539925d7cad70bc5430c0365214cf9ec08593670dfcb01211f6a3130eb3a7c7"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bad213b8174966108621cd5bd6a9428d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 14628,
        "upload_time": "2022-12-02T18:26:07",
        "upload_time_iso_8601": "2022-12-02T18:26:07.750388Z",
        "url": "https://files.pythonhosted.org/packages/ad/87/0598c470f1904492039afcbaa53a1b6ccad805acc7f781d58f70aacff4b7/pyjami-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af2bd96b72a2805675fd405647e4b9508fbd31f5c6234555237f192ab1b252d3",
          "md5": "e9a8f8e9d7e9f7c569799c7df991c82a",
          "sha256": "2d3b565c21438a12d29e34d98572e521103388001823d44440a9700ea60e776e"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e9a8f8e9d7e9f7c569799c7df991c82a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 16208,
        "upload_time": "2022-12-02T18:26:09",
        "upload_time_iso_8601": "2022-12-02T18:26:09.816721Z",
        "url": "https://files.pythonhosted.org/packages/af/2b/d96b72a2805675fd405647e4b9508fbd31f5c6234555237f192ab1b252d3/pyjami-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04dfa435826a73f29167908200e1b87e60296805e1923fc1f4471c931362b1c6",
          "md5": "9b3b82963b728f3e3f4ffc2206b3bb4d",
          "sha256": "582db55c83fa5c3ca44115f9765daf259206aa1e07b0f112675b2339043d0c0a"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b3b82963b728f3e3f4ffc2206b3bb4d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 15072,
        "upload_time": "2022-12-21T01:10:27",
        "upload_time_iso_8601": "2022-12-21T01:10:27.724762Z",
        "url": "https://files.pythonhosted.org/packages/04/df/a435826a73f29167908200e1b87e60296805e1923fc1f4471c931362b1c6/pyjami-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38de5d99cf8a398c0213135c7f7c81231aadb57d82a5e1d310b4972c34e2e217",
          "md5": "a6efdf6e00472f18f1fd5b11f4325723",
          "sha256": "6b009ba97b0a16dc3dba06343bb601cd317975d30eae58ef02a9b5b05a3dfa7a"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a6efdf6e00472f18f1fd5b11f4325723",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 16989,
        "upload_time": "2022-12-21T01:10:29",
        "upload_time_iso_8601": "2022-12-21T01:10:29.341060Z",
        "url": "https://files.pythonhosted.org/packages/38/de/5d99cf8a398c0213135c7f7c81231aadb57d82a5e1d310b4972c34e2e217/pyjami-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7e5e4458533276869c7cb2b335fe2b818598561624648504d1c25a68ed7ac4d",
          "md5": "d18ce6431f31994c81e2fb24ba47cc73",
          "sha256": "73a6ac366fae448663ebf17ca2ccf4c25090006db8204dc66b4435d733ab0417"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d18ce6431f31994c81e2fb24ba47cc73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 15424,
        "upload_time": "2022-12-22T17:38:16",
        "upload_time_iso_8601": "2022-12-22T17:38:16.184023Z",
        "url": "https://files.pythonhosted.org/packages/b7/e5/e4458533276869c7cb2b335fe2b818598561624648504d1c25a68ed7ac4d/pyjami-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0258018242411d917931fec5ce6f858daab41c25aecb65835fa23a327eb73161",
          "md5": "ba1bf953c5a0768e1df8219cb844c01f",
          "sha256": "eea1729871966b681317b1b9558cd1591a7bd9aaf0d07c7e7130e77123462335"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ba1bf953c5a0768e1df8219cb844c01f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 17307,
        "upload_time": "2022-12-22T17:38:17",
        "upload_time_iso_8601": "2022-12-22T17:38:17.256964Z",
        "url": "https://files.pythonhosted.org/packages/02/58/018242411d917931fec5ce6f858daab41c25aecb65835fa23a327eb73161/pyjami-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "117995fc64b3b20b7048810a91ca99dcc273028eb3b801518adf9b744d752656",
          "md5": "1fe4859f3f7a7be314dc0710f1ad1211",
          "sha256": "97aac9750cc83f61acc3b81392703ba6addf2e058626ecdd173e8a32b4e05b53"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1fe4859f3f7a7be314dc0710f1ad1211",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 15490,
        "upload_time": "2022-12-22T17:45:56",
        "upload_time_iso_8601": "2022-12-22T17:45:56.947358Z",
        "url": "https://files.pythonhosted.org/packages/11/79/95fc64b3b20b7048810a91ca99dcc273028eb3b801518adf9b744d752656/pyjami-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f9d5e3dea5b7102e4393893578ce00ec980ff79a9e84c6ae2ebf97afc8d668b",
          "md5": "1c43692e905c5f183841c92d7fa50bbf",
          "sha256": "09cb622346645f346de2135d918639545fa6a3166729b87206df6b98f66cb9c2"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1c43692e905c5f183841c92d7fa50bbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 17370,
        "upload_time": "2022-12-22T17:45:58",
        "upload_time_iso_8601": "2022-12-22T17:45:58.159610Z",
        "url": "https://files.pythonhosted.org/packages/2f/9d/5e3dea5b7102e4393893578ce00ec980ff79a9e84c6ae2ebf97afc8d668b/pyjami-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a8737c076711c81ab23abd9ad637fda17a278f70ef17adbbdd6117a3f0a5380",
          "md5": "a7f24cf95154cadf7f20433098bf3aad",
          "sha256": "4ecf3778de4350a70c472f32e28536ebda7dad9a04ca947c202c57214dfc6493"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7f24cf95154cadf7f20433098bf3aad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 15489,
        "upload_time": "2022-12-22T18:30:32",
        "upload_time_iso_8601": "2022-12-22T18:30:32.755110Z",
        "url": "https://files.pythonhosted.org/packages/5a/87/37c076711c81ab23abd9ad637fda17a278f70ef17adbbdd6117a3f0a5380/pyjami-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbb76b15347774698aa48a56b0fa9363b4902cc1e538e0d32cfa7a20233769b8",
          "md5": "9d44aa882bb079400e755d49fd537eb8",
          "sha256": "01db370867e6c10c83cbc767fa64a50c34595483542b3cd3d68b664a84d4e2bf"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9d44aa882bb079400e755d49fd537eb8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 17373,
        "upload_time": "2022-12-22T18:30:34",
        "upload_time_iso_8601": "2022-12-22T18:30:34.085266Z",
        "url": "https://files.pythonhosted.org/packages/cb/b7/6b15347774698aa48a56b0fa9363b4902cc1e538e0d32cfa7a20233769b8/pyjami-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de15cbe3f406dd4017e832e7c2a02b6a4983e51e95fb5f79ce32283f3df5f712",
          "md5": "4849cdb5777ab60fe9bc6af7b3e4a24e",
          "sha256": "df27d284836da359958710fe0989bf21449bdb3be65344173e6948adf1d89a8b"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4849cdb5777ab60fe9bc6af7b3e4a24e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 15498,
        "upload_time": "2022-12-22T18:40:25",
        "upload_time_iso_8601": "2022-12-22T18:40:25.518764Z",
        "url": "https://files.pythonhosted.org/packages/de/15/cbe3f406dd4017e832e7c2a02b6a4983e51e95fb5f79ce32283f3df5f712/pyjami-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e566a1712d4ebcb42149cca93e2d35ff5d7f9a0accb9d85c3ca72abd8b20796b",
          "md5": "faf2782dec503d841a5c18ec05dd5e5e",
          "sha256": "51ff2ddd8917bf0390014efa06720d9aa63a0c961c3f66a86288a750191f3bbb"
        },
        "downloads": -1,
        "filename": "pyjami-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "faf2782dec503d841a5c18ec05dd5e5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 17381,
        "upload_time": "2022-12-22T18:40:26",
        "upload_time_iso_8601": "2022-12-22T18:40:26.867043Z",
        "url": "https://files.pythonhosted.org/packages/e5/66/a1712d4ebcb42149cca93e2d35ff5d7f9a0accb9d85c3ca72abd8b20796b/pyjami-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de15cbe3f406dd4017e832e7c2a02b6a4983e51e95fb5f79ce32283f3df5f712",
        "md5": "4849cdb5777ab60fe9bc6af7b3e4a24e",
        "sha256": "df27d284836da359958710fe0989bf21449bdb3be65344173e6948adf1d89a8b"
      },
      "downloads": -1,
      "filename": "pyjami-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4849cdb5777ab60fe9bc6af7b3e4a24e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 15498,
      "upload_time": "2022-12-22T18:40:25",
      "upload_time_iso_8601": "2022-12-22T18:40:25.518764Z",
      "url": "https://files.pythonhosted.org/packages/de/15/cbe3f406dd4017e832e7c2a02b6a4983e51e95fb5f79ce32283f3df5f712/pyjami-0.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e566a1712d4ebcb42149cca93e2d35ff5d7f9a0accb9d85c3ca72abd8b20796b",
        "md5": "faf2782dec503d841a5c18ec05dd5e5e",
        "sha256": "51ff2ddd8917bf0390014efa06720d9aa63a0c961c3f66a86288a750191f3bbb"
      },
      "downloads": -1,
      "filename": "pyjami-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "faf2782dec503d841a5c18ec05dd5e5e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 17381,
      "upload_time": "2022-12-22T18:40:26",
      "upload_time_iso_8601": "2022-12-22T18:40:26.867043Z",
      "url": "https://files.pythonhosted.org/packages/e5/66/a1712d4ebcb42149cca93e2d35ff5d7f9a0accb9d85c3ca72abd8b20796b/pyjami-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}