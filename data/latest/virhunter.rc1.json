{
  "info": {
    "author": "Grigorii sukhorukov",
    "author_email": "grsukhorukov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# VirHunter\n\n**VirHunter** is a deep learning method that uses Convolutional Neural Networks (CNNs) and a Random Forest Classifier to identify viruses in sequening datasets. More precisely, VirHunter classifies previously assembled contigs as viral, host and bacterial (contamination). \n\n## System Requirements\nVirHunter installation requires a Unix environment with [python 3.8](http://www.python.org/). \nIt was tested on Linux and macOS operating systems. \nFor now, VirHunter is still not fully compatible with M1 chip MacBook.\n\nIn order to run VirHunter your installation should include conda. \nIf you are installing it for the first time, we suggest you to use \na lightweight [miniconda](https://docs.conda.io/en/latest/miniconda.html).\nOtherwise, you can use pip for the dependencies' installation.\n         \n## Installation \n\nThe full installation process should take less than 15 minutes on a standard computer.\n\nThen clone the repository from [github](https://github.com/cbib/virhunter)\n\n```shell\ngit clone https://github.com/cbib/virhunter.git\n```\n\nGo to the VirHunter root folder\n\n```shell\ncd virhunter/\n```\n\n\n## Installing dependencies with Conda\n\nFirst, you have to create the environment from the `envs/environment.yml` file. \nThe installation may take around 500 Mb of drive space. \n\n```shell\nconda env create -f envs/environment.yml\n```\n\nSecond, activate the environment:\n\n```shell\nconda activate virhunter\n```\n\n## Installing dependencies with pip\n\nIf you don't have Conda installed in your system, you can install python dependencies via pip program:\n\n```shell\npip install -r envs/requirements.txt\n```\n\nThen if you have macOS you will need to install `wget` library to run some scripts (Conda installation already has it). You can do this with `brew` package manager.\n\n```shell\nbrew install wget\n```\n\n## Testing installation of the VirHunter\n\nYou can test that VirHunter was successfully installed on the toy dataset we provide. \nIMPORTANT: the toy dataset is intended only to test the correct work of VirHunter. \nThe trained modules should not be used for prediction on your datasets!\n\nFirst, you have to download the toy dataset\n```shell\nbash scripts/download_test_installation.sh\n```\nThen launch the script for testing training and prediction python scripts of VirHunter\n```shell\nbash scripts/test_installation.sh\n```\n## Using VirHunter for prediction\n\nVirHunter takes as input a fasta file with contigs and outputs a prediction for each contig to be viral, host (plant) or bacterial.\n\nFor given contigs VirHunter produces a tab delimited csv file with prediction. `id` stores the fasta header of a contig,\n`length` describes the length of the contig. Columns `virus`, `plant` and `bacteria` store the number of fragments of the contig\nthat received corresponding prediction by the RF classifier. Finally, column `decision` tell you about the final decision for a given contig.\nYou should refer to it, when filtering viral contigs. \n\nTo do predictions VirHunter needs to be fully trained for fragment sizes 500 and 1000. VirHunter will discard from prediction\ncontigs shorter than 500 bp. VirHunter trained on 500 fragment size will be used for contigs with `750 < length < 1500`. The VirHunter\ntrained on fragment size 1500 will be used for contigs longer than 1500 bp.\n\nBefore running VirHunter you have to fill in the `predict_config.yaml` file.\n\nTo run VirHunter you can use the already pre-trained models. Provided are fully trained models for 3 host species  (peach, grapevine, sugar beet) and \nfor fragment sizes 500 and 1000. Weights for these models can be downloaded by running the `download_weights.sh` script:\n```shell\nbash scripts/download_weights.sh\n```\nOnce the weights are downloaded, if you want for example to use the weights of the model trained on peach, \nyou should add in the `configs/predict_config.yaml` paths  `weights/peach/1000` and `weights/peach/500`.\n\nThe command to run predictions is then:\n\n```shell\npython virhunter/predict.py configs/predict_config.yaml\n```\n\n## Training your own model\n\nYou can train your own model, for example for a specific host species. Before training, you need to collect sequence \ndata for training for three reference datasets: _viruses_, _bacteria_ and _host_. \nExamples are provided by running `scripts/download_test_installation.sh` that will download `viruses.fasta`, \n`host.fasta` and `bacteria.fasta` files (real reference datasets should correspond \ne.g. to the whole genome of the host, all bacteria and all viruses from the NCBI).\n\nTraining requires execution of the following steps:\n- prepare the training dataset for the neural network module from fasta files with `prepare_ds_nn.py`. \nThis step splits the reference datasets into fragments of fixed size (specified in the `config.yaml` file, see below)\n- prepare the training dataset for Random Forest classifier module with `prepare_ds_rf.py`\n- train the neural network module with `train_nn.py`\n- train the Random Forest module with `train_rf.py`\n\nThe successful training of VirHunter produces weights for the three neural networks from the first module and weights for the \ntrained Random Forest classifier. They can be subsequently used for prediction.\n\nTo execute the steps of the training you must first fill in the `train_config.yaml`. This file already contains information on all expected inputs.\nOnce `train_config.yaml` is filled you can launch the scripts consecutively providing them with the config file like this:\n```shell\npython virhunter/prepare_ds_nn.py configs/train_config.yaml\n```\n\n\n\n## VirHunter on GPU\n\nIf you plan to train VirHunter on GPU, please use `environment_gpu.yml` or `requirements_gpu.txt` for dependencies installation.\nThose recipes were tested only on the Linux cluster with multiple GPUs.\nIf you plan to train VirHunter on cluster with multiple GPUs, you will need to uncomment line with\n`CUDA_VISIBLE_DEVICES` variable and replace `\"\"` with `\"N\"` in header of `train_nn.py`, where N is the number of GPU you want to use.\n\n```python\nimport os\nos.environ[\"CUDA_VISIBLE_DEVICES\"] = \"N\"\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cbib/virhunter",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "virhunter",
    "package_url": "https://pypi.org/project/virhunter/",
    "platform": "",
    "project_url": "https://pypi.org/project/virhunter/",
    "project_urls": {
      "Homepage": "https://github.com/cbib/virhunter"
    },
    "release_url": "https://pypi.org/project/virhunter/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A virus identifier for High Throughput Sequencing datasets",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12972108,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "223081faa86fdc5c8a9def9bbf3b9ef2dbdf244ef968ec99d55b6dbf14e463fa",
          "md5": "ad59781203c558ae4b59f733447deaa6",
          "sha256": "5579484e179a3f5c8291f1c7b97f5dc1b61e34cbb04bdd93f603682789c41ab8"
        },
        "downloads": -1,
        "filename": "virhunter-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad59781203c558ae4b59f733447deaa6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4305,
        "upload_time": "2022-02-22T14:28:24",
        "upload_time_iso_8601": "2022-02-22T14:28:24.540233Z",
        "url": "https://files.pythonhosted.org/packages/22/30/81faa86fdc5c8a9def9bbf3b9ef2dbdf244ef968ec99d55b6dbf14e463fa/virhunter-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f26ece8083d93139a177c239a1dc6c67359fe6ff200bbbcbd66d342446593c1",
          "md5": "dc17ffa726ac0666e8420e05d2d128d5",
          "sha256": "195329e55815b82356db2cf88857a44b887c022e7a4ab43f9f00b31e76e31c5e"
        },
        "downloads": -1,
        "filename": "virhunter-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dc17ffa726ac0666e8420e05d2d128d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4324,
        "upload_time": "2022-02-22T14:28:26",
        "upload_time_iso_8601": "2022-02-22T14:28:26.178479Z",
        "url": "https://files.pythonhosted.org/packages/6f/26/ece8083d93139a177c239a1dc6c67359fe6ff200bbbcbd66d342446593c1/virhunter-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "223081faa86fdc5c8a9def9bbf3b9ef2dbdf244ef968ec99d55b6dbf14e463fa",
        "md5": "ad59781203c558ae4b59f733447deaa6",
        "sha256": "5579484e179a3f5c8291f1c7b97f5dc1b61e34cbb04bdd93f603682789c41ab8"
      },
      "downloads": -1,
      "filename": "virhunter-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ad59781203c558ae4b59f733447deaa6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4305,
      "upload_time": "2022-02-22T14:28:24",
      "upload_time_iso_8601": "2022-02-22T14:28:24.540233Z",
      "url": "https://files.pythonhosted.org/packages/22/30/81faa86fdc5c8a9def9bbf3b9ef2dbdf244ef968ec99d55b6dbf14e463fa/virhunter-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f26ece8083d93139a177c239a1dc6c67359fe6ff200bbbcbd66d342446593c1",
        "md5": "dc17ffa726ac0666e8420e05d2d128d5",
        "sha256": "195329e55815b82356db2cf88857a44b887c022e7a4ab43f9f00b31e76e31c5e"
      },
      "downloads": -1,
      "filename": "virhunter-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dc17ffa726ac0666e8420e05d2d128d5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4324,
      "upload_time": "2022-02-22T14:28:26",
      "upload_time_iso_8601": "2022-02-22T14:28:26.178479Z",
      "url": "https://files.pythonhosted.org/packages/6f/26/ece8083d93139a177c239a1dc6c67359fe6ff200bbbcbd66d342446593c1/virhunter-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}