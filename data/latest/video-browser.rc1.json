{
  "info": {
    "author": "Dominik Vilsmeier",
    "author_email": "d.vilsmeier@gsi.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Multimedia :: Video :: Display"
    ],
    "description": "Video Browser\n=============\n\nThis application can be used to browse the frames of video files and\napply basic transformations on them.\n\n\nInstallation\n------------\n\n.. code-block:: text\n\n   pip install video-browser\n\nThe application requires OpenCV and in case you have already installed it,\nplease make sure you have a compatible version\n(`see here <https://pypi.org/project/opencv-python/>`_ for more information).\n\n\nUsage\n-----\n\nThe application can be started from the command-line by providing the\npath to the directory containing the relevant video files:\n\n.. code-block:: text\n\n   python -m video_browser <video-dir>\n\nIt contains various control elements at the top, from left to right:\n\n* Bash-style globbing filter -- specify a globbing pattern to filter the\n  videos in the video-dir, e.g. ``favorite_*.ts``.\n* Drop-down list containing all available video file names (optionally filtered)\n  -- change the selection to load a new video.\n* Three elements for frame selection:\n\n  - ``<`` button selects the previous frame,\n  - Frame counter spin box indicates the current frame and selects a new one\n    when changed,\n  - ``>`` button selects the next frame.\n* Four elements for transforming the current frame; these transformations are\n  temporary in a sense that if the same frame number is loaded again\n  (e.g. by pressing ``<`` followed by ``>``) then the original frame without\n  previous transformations is displayed. That is the transformations only\n  change how a frame is displayed, not how it is stored.\n\n  - ``Median Filter (3)`` -- apply a median filter with kernel size 3,\n  - ``Median Filter (5)`` -- apply a median filter with kernel size 5,\n  - ``Denoising`` -- apply non-local means denoising,\n  - ``Grayscale`` -- change from color to grayscale; if already in grayscale, do nothing.\n* One button for displaying the current Region Of Interest (the axes boundaries of\n  the image canvas).\n\nIn addition to these control elements, the canvas' toolbar at the top of it can be\nused to zoom or otherwise modify the displayed image (this is the standard matplotlib\nQt-style toolbar).\n\n\nCustomization\n~~~~~~~~~~~~~\n\nThe application can be customized via command line arguments, for example changing\nthe figure size:\n\n.. code-block:: text\n\n   python -m video_browser <video-dir> --canvas-figsize-inches 8 6\n\nA complete overview of all available parameters can be obtained by using ``--help``:\n\n.. code-block:: text\n\n   python -m video_browser --help\n\n\nExample Screenshot\n------------------\n\nThe UI window:\n\n.. image:: https://gitlab.com/Dominik1123/video-browser/-/raw/master/screenshot.png?inline=false\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/Dominik1123/video-browser",
    "keywords": "video,display,frames",
    "license": "GPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "video-browser",
    "package_url": "https://pypi.org/project/video-browser/",
    "platform": "",
    "project_url": "https://pypi.org/project/video-browser/",
    "project_urls": {
      "Homepage": "https://gitlab.com/Dominik1123/video-browser"
    },
    "release_url": "https://pypi.org/project/video-browser/1.0/",
    "requires_dist": [
      "arguable",
      "matplotlib",
      "numpy",
      "opencv-python",
      "PyQt5"
    ],
    "requires_python": ">=3.7",
    "summary": "Browse video frames and apply basic transformations.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7435716,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c9761022fa2812322e1a4b2cfe23070e555010e6b5d31914a0f1e1fe2427dad",
          "md5": "4ebe0a7723873cab053b74f93cd942a7",
          "sha256": "ac99ae74d2e8a39cbe89ebde1468ba60fa5825036227c0f7bfa42267423ef100"
        },
        "downloads": -1,
        "filename": "video_browser-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ebe0a7723873cab053b74f93cd942a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19360,
        "upload_time": "2020-06-09T19:33:54",
        "upload_time_iso_8601": "2020-06-09T19:33:54.264997Z",
        "url": "https://files.pythonhosted.org/packages/6c/97/61022fa2812322e1a4b2cfe23070e555010e6b5d31914a0f1e1fe2427dad/video_browser-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61ffd82a22fdb2d1f4f57969ceb0793d92fb65e4f2730b38844fbdfd1289ebe7",
          "md5": "7d82363c8100c1fc5a2a967e1912a10f",
          "sha256": "71f0d2d3e346bd628225e4db2612351e03aac36ba97b7c360652b9a889569f72"
        },
        "downloads": -1,
        "filename": "video-browser-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7d82363c8100c1fc5a2a967e1912a10f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5805,
        "upload_time": "2020-06-09T19:33:56",
        "upload_time_iso_8601": "2020-06-09T19:33:56.397569Z",
        "url": "https://files.pythonhosted.org/packages/61/ff/d82a22fdb2d1f4f57969ceb0793d92fb65e4f2730b38844fbdfd1289ebe7/video-browser-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c9761022fa2812322e1a4b2cfe23070e555010e6b5d31914a0f1e1fe2427dad",
        "md5": "4ebe0a7723873cab053b74f93cd942a7",
        "sha256": "ac99ae74d2e8a39cbe89ebde1468ba60fa5825036227c0f7bfa42267423ef100"
      },
      "downloads": -1,
      "filename": "video_browser-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4ebe0a7723873cab053b74f93cd942a7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 19360,
      "upload_time": "2020-06-09T19:33:54",
      "upload_time_iso_8601": "2020-06-09T19:33:54.264997Z",
      "url": "https://files.pythonhosted.org/packages/6c/97/61022fa2812322e1a4b2cfe23070e555010e6b5d31914a0f1e1fe2427dad/video_browser-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61ffd82a22fdb2d1f4f57969ceb0793d92fb65e4f2730b38844fbdfd1289ebe7",
        "md5": "7d82363c8100c1fc5a2a967e1912a10f",
        "sha256": "71f0d2d3e346bd628225e4db2612351e03aac36ba97b7c360652b9a889569f72"
      },
      "downloads": -1,
      "filename": "video-browser-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7d82363c8100c1fc5a2a967e1912a10f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 5805,
      "upload_time": "2020-06-09T19:33:56",
      "upload_time_iso_8601": "2020-06-09T19:33:56.397569Z",
      "url": "https://files.pythonhosted.org/packages/61/ff/d82a22fdb2d1f4f57969ceb0793d92fb65e4f2730b38844fbdfd1289ebe7/video-browser-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}