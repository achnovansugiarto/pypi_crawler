{
  "info": {
    "author": "Arseniy Banayev",
    "author_email": "arseniy.banayev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# aiotime\n\nAn `asyncio` test helper that allows you to deterministically control the event loop's internal clock in your tests, affecting the behavior of the following functions:\n\n1. `asyncio.sleep`\n2. `loop.call_at`\n3. `loop.call_later`\n\n## Note about behavior\n\nIf you enter the `aiotime.FastForward` context manager (as in the `with` block in the examples below), then the `loop` supplied to its constructor will STOP triggering scheduled events, tasks or callbacks. Once you `__enter__` the context manager, you MUST call the returned object or the event loop will be stuck in time. Only when you `__exit__` the context manager will the loop return to normal behavior.\n\n(Using the same event loop with and without `aiotime` control is not supported; there may be unexpected effects with scheduling at the margins.)\n\n## Getting started\n\n```python\n# TODO Add to pypi\n```\n\n### Controlling `asyncio.sleep`\n\n```python\nloop = asyncio.get_event_loop()\n\n# Try sleeping with normal loop behavior\nstart = dt.datetime.now()\nsleep_task = asyncio.create_task(asyncio.sleep(0.25))\nawait sleep_task\nassert dt.datetime.now() - start > dt.timedelta(seconds=0.25)\n\nwith aiotime.FastForward(loop) as ff:\n    # Try fast-forwarding through the sleep\n    start = dt.datetime.now()\n    sleep_task = asyncio.create_task(asyncio.sleep(0.25))\n    await ff(1.5)  # ff more than necessary\n    await sleep_task\n    assert dt.datetime.now() - start < dt.timedelta(seconds=0.05)\n```\n\n### Controlling `loop.call_later`\n\n```python\nloop = asyncio.get_event_loop()\n\nwith aiotime.FastForward(loop) as ff:\n    # Try call_later() with fast-forwarding\n    start = dt.datetime.now()\n    event = asyncio.Event()\n    def test():\n        event.set()\n    loop.call_later(0.25, test)\n    await ff(1.5)  # ff more than necessary\n    await asyncio.wait_for(event.wait(), 2)  # timeout just in case\n    assert dt.datetime.now() - start < dt.timedelta(seconds=0.05)\n\n# call_later() with normal loop behavior now, after context manager exits\nstart = dt.datetime.now()\nevent = asyncio.Event()\ndef test():\n    event.set()\nloop.call_later(0.25, test)\nawait asyncio.wait_for(event.wait(), 1)  # timeout just in case\nassert dt.datetime.now() - start > dt.timedelta(seconds=0.25)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/arseniybanayev/aiotime",
    "keywords": "asyncio async time sleep",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiotime",
    "package_url": "https://pypi.org/project/aiotime/",
    "platform": "",
    "project_url": "https://pypi.org/project/aiotime/",
    "project_urls": {
      "Homepage": "https://github.com/arseniybanayev/aiotime"
    },
    "release_url": "https://pypi.org/project/aiotime/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Test helper for controlling the asyncio event loop's internal clock",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7671406,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "495f7cb0f8fed2c32d59bc3a807c01766a019436eb68ebcbf66ca1af33056ea9",
          "md5": "7f45dfac33eef2d45873d01d626e6ffa",
          "sha256": "45e491eb484c9de44064b882988dda161aadd825d0f8ac6a42425fe987a0fe91"
        },
        "downloads": -1,
        "filename": "aiotime-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f45dfac33eef2d45873d01d626e6ffa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4635,
        "upload_time": "2020-07-10T01:30:32",
        "upload_time_iso_8601": "2020-07-10T01:30:32.324381Z",
        "url": "https://files.pythonhosted.org/packages/49/5f/7cb0f8fed2c32d59bc3a807c01766a019436eb68ebcbf66ca1af33056ea9/aiotime-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6884df8ceeb6bc114899550b79307bb4f8805d626e696a39d6a933a38b6f8d98",
          "md5": "f63aa8b6fcdbae77844aa1f0ca22e4ac",
          "sha256": "35b260a63bf05d32733215b7c348511968d6ac8264d0ca2a05a00a3d277d1cfc"
        },
        "downloads": -1,
        "filename": "aiotime-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f63aa8b6fcdbae77844aa1f0ca22e4ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3193,
        "upload_time": "2020-07-10T01:30:34",
        "upload_time_iso_8601": "2020-07-10T01:30:34.347095Z",
        "url": "https://files.pythonhosted.org/packages/68/84/df8ceeb6bc114899550b79307bb4f8805d626e696a39d6a933a38b6f8d98/aiotime-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "495f7cb0f8fed2c32d59bc3a807c01766a019436eb68ebcbf66ca1af33056ea9",
        "md5": "7f45dfac33eef2d45873d01d626e6ffa",
        "sha256": "45e491eb484c9de44064b882988dda161aadd825d0f8ac6a42425fe987a0fe91"
      },
      "downloads": -1,
      "filename": "aiotime-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7f45dfac33eef2d45873d01d626e6ffa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4635,
      "upload_time": "2020-07-10T01:30:32",
      "upload_time_iso_8601": "2020-07-10T01:30:32.324381Z",
      "url": "https://files.pythonhosted.org/packages/49/5f/7cb0f8fed2c32d59bc3a807c01766a019436eb68ebcbf66ca1af33056ea9/aiotime-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6884df8ceeb6bc114899550b79307bb4f8805d626e696a39d6a933a38b6f8d98",
        "md5": "f63aa8b6fcdbae77844aa1f0ca22e4ac",
        "sha256": "35b260a63bf05d32733215b7c348511968d6ac8264d0ca2a05a00a3d277d1cfc"
      },
      "downloads": -1,
      "filename": "aiotime-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f63aa8b6fcdbae77844aa1f0ca22e4ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3193,
      "upload_time": "2020-07-10T01:30:34",
      "upload_time_iso_8601": "2020-07-10T01:30:34.347095Z",
      "url": "https://files.pythonhosted.org/packages/68/84/df8ceeb6bc114899550b79307bb4f8805d626e696a39d6a933a38b6f8d98/aiotime-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}