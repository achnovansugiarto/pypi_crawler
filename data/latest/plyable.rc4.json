{
  "info": {
    "author": "Christine Kinniburgh",
    "author_email": "Christine Kinniburgh <pip@cjkinni.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Plyable\n\nA Python microframework for interacting with OpenAI's chat APIs.\n\n## Installing\n\nInstall and update using [pip](https://pip.pypa.io/en/stable/quickstart/):\n\n```bash\n$ pip install plyable\n```\n\nCurrently, the only API supported is OpenAI's chat API.  You will need to [sign up for an OpenAI account](https://beta.openai.com/), and [create an API key](https://beta.openai.com/account/api-keys).\n\nOnce you have your key, you can set it as the OPENAI_API_KEY environment variable, or you can pass it to the Plyable constructor.\n\n```bash\n$ export OPEN_API_KEY=\"your-key-here\"\n```\n\n## A Simple Example\n\n```python\nfrom plyable import Plyable\n\nsession = Plyable()\n\nwhile True:\n    in_message = input(\">> \")\n    print(\"<< \" + session.send(in_message))\n```\n\n```bash\n$ python bot.py\n>> Hello, how are you?\n<< Hello! As an AI language model, I do not have personal emotions, but I am functioning properly and ready to assist you. How may I help you today?\n>>\n```\n\n## Overview\n\nPlyable provides an interface for working with chat-based LLMs.\n\nIt:\n - Gets you sending messages to OpenAI quickly and easily.\n - Manages timeouts.\n - Allows for custom validations.\n - Retries when validations fail.\n\n## JSON input and output evaluation\n\nPlyable provides a decorator to validate input and output messages. This decorator will check that the message is valid JSON, and that it contains the specified keys. If the message is not valid, it will be logged, and the LLM will be sent an explanation of the error, and will be asked to retry.  This retry loop will occur up to a specified retry limit (3 by default.)\n\nIn this example, plyable is used to build a chat bot that sends a JSON string to ChatGPT, and expects a JSON response with 3 keys.  Each response is validated, and if ChatGPT fails to return a valid response, Plyable sends a message back explaining the problem and asking for another attempt.\n\nThis example uses `plyable.helpers.validate_json()`, but you can easily build your own validators.\n\n```python\nfrom plyable import Plyable\nimport plyable.helpers\nimport time\nimport json\n\nsession = Plyable()\nsession.system_message =  \"\"\"\nYou are a chat therapist.\nYou will be sent messages from a user in a JSON format like so:\n\n{\n    \"message\": \"Hello, how are you?\",\n    \"seconds_to_respond\": 3.8452117443084717\n}\n\nseconds_to_respond is the number of seconds it took the user to respond to the message.\n\nYou must return a JSON object formatted as follows:\n\n{\n    \"message\": \"I'm doing well, how are you?\",\n    \"severity\": 0.3,\n}\n\nSeverity is a number between 0 and 1, where 0 is not concerning and 1 is very concerning.\nA Human will monitor responses and will intervene if the severity is too high.\n\nDo not include anything else in your response.\nYour response must be valid JSON.\nYou must not return any other output.\nThe first line of your response must be a '{' character.\nThe last line of your response must be a '}' character.\n\"\"\"\n\n@Plyable.validate_input_message\ndef check_in_json(self, message):\n    return plyable.helpers.validate_json(message, ['message', 'seconds_to_respond'], log=True)\n\n@Plyable.validate_output_message\ndef check_out_json(self, message):\n    return plyable.helpers.validate_json(message, ['message', 'severity'], log=True)\n\n\nwhile True:\n    try:\n        start_time = time.time()\n        in_message = input(\">> \")\n        response = session.send(\n            json.dumps({\n                \"message\": in_message,\n                \"seconds_to_respond\": time.time() - start_time\n            })\n        )\n        print(response) # This is the response from the model, in JSON format\n    except KeyboardInterrupt:\n        break\n```\n\n## An overview of the Plyable class\n\nThe Plyable class is the main class for interacting with the chat API.  It provides methods for sending messages, and for receiving responses.  It also provides a few helper methods for interacting with the API.\n\n### Callbacks\n\nPlyable allows you to specify four callbacks:\n\n - `on_input_message`\n - `on_output_message`\n - `validate_input_message`\n - `validate_output_message`\n\nThe `on_input_message` and `on_output_message` callbacks are called after a message is sent or received.  They are passed the message as a string, and return None. They are useful for logging messages, or for performing other actions on messages.\n\nThe `validate_input_message` and `validate_output_message` callbacks are called before a message is sent or received.  They are passed the message as a string, and return a tuple. The tuple is of the form `(bool, str)`.  The first element of the tuple is a boolean indicating whether the message is valid.  The second element is a string containing an error message, if the message is not valid.  These callbacks are useful for validating messages.  If a message is not valid, the LLM will be sent the error messages of all failed validations, and will be asked to retry.  This retry loop will occur up to a specified retry limit (3 by default.)\n\n### Why Validations?\n\nValidations are important when using ChatGPT for programatic tasks. It's capable of returning a JSON object fairly regularly, and that can be incredibly useful.  But you want to make sure that whenever it fails, you catch it and handle the failure appropriately.\n\n### Variables\n\nThere are a few main variables you might want to modify:\n\n - `system_message` (default \"You are a chat bot\"): This is the message that will be sent to the LLM when the session is started.  The system message helps set the behavior of the assistant.\n - `retries` (default 3) This is the number of times the LLM will be asked to retry if the message is not valid.\n - `gpt_version` (default `gpt-3.5-turbo`) Currently only `gpt-3.5-turbo` and `gpt-4` are supported.\n - `rate_limit_retry_enabled` (default `True`) If True, the client will retry if it receives a rate limit error.\n - `rate_limit_retry_timeout` (default `25`) The number of seconds to wait before retrying if a rate limit error is received.\n - `rate_limit_retries` (default `5`) The number of times to retry if a rate limit error is received.\n\n### Methods\n\n#### `send(message)`\n\nSends a message (string) to the LLM.  Returns the response from the LLM as a string.\n\nLLMs may return data in a particular format.  Currently, this response will only include the content of the message, and will not include any other metadata.  This may change in the future.\n\nTo access the entire log, with all metadata, you can access the `message_log` variable.\n\n#### `update_openai_api_key(key)`\n\nSets the OpenAI API key to the specified key.\n\n## Roadmap:\n\n - [ ] Tiktoken support to manage token length.\n - [ ] Pre-validation response-massaging.\n - [ ] Support other LLMs beyond OpenAI's.\n - [ ] Improve Helper class (and structure.)\n\n## License\n\nThis project is licensed under the terms of the AGPLv3 license.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "llm openai chatgpt gpt3 gpt4 gpt-3 gpt-4",
    "license": "AGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "plyable",
    "package_url": "https://pypi.org/project/plyable/",
    "platform": null,
    "project_url": "https://pypi.org/project/plyable/",
    "project_urls": {
      "Bug Tracker": "https://github.com/cjkinni/plyable/issues",
      "Homepage": "https://github.com/cjkinni/plyable"
    },
    "release_url": "https://pypi.org/project/plyable/0.0.4/",
    "requires_dist": [
      "openai (>=0.10.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "A Microframework for working with LLMs",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17370779,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "376dc37257b3eedf54a24783fbb16a7515f8b6e6a2d6661f32b830e53837b20c",
          "md5": "9f4150176a300916cdc760405445157e",
          "sha256": "4ba17a1677560da07f46f8018f698cb9d795a0c637fba7aed579742b0e1b3519"
        },
        "downloads": -1,
        "filename": "plyable-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f4150176a300916cdc760405445157e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17237,
        "upload_time": "2023-03-20T21:12:43",
        "upload_time_iso_8601": "2023-03-20T21:12:43.168766Z",
        "url": "https://files.pythonhosted.org/packages/37/6d/c37257b3eedf54a24783fbb16a7515f8b6e6a2d6661f32b830e53837b20c/plyable-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd3e838fd43d5fd7da1548070c71f987a0820c3a27b9117b4c3e5375533de5f8",
          "md5": "5fd80437d0ed3af162b8b03e2f6da3b0",
          "sha256": "5b7d266874db25de9aacf9ca40c68cf1e418163f13a1e3d29e47ee0ca45b049e"
        },
        "downloads": -1,
        "filename": "plyable-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5fd80437d0ed3af162b8b03e2f6da3b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16966,
        "upload_time": "2023-03-20T21:12:44",
        "upload_time_iso_8601": "2023-03-20T21:12:44.892515Z",
        "url": "https://files.pythonhosted.org/packages/fd/3e/838fd43d5fd7da1548070c71f987a0820c3a27b9117b4c3e5375533de5f8/plyable-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce8f52b97b3a0edfc3db1593161352204b5c98e01ae21c370ffe3cc128a5f340",
          "md5": "8974c93f39439b33f907836465febb5e",
          "sha256": "70c9abfc7878f3f4455777d69fead8c957330fba604d53a6f5ef5d94874a3f3c"
        },
        "downloads": -1,
        "filename": "plyable-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8974c93f39439b33f907836465febb5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18980,
        "upload_time": "2023-03-20T21:19:58",
        "upload_time_iso_8601": "2023-03-20T21:19:58.188610Z",
        "url": "https://files.pythonhosted.org/packages/ce/8f/52b97b3a0edfc3db1593161352204b5c98e01ae21c370ffe3cc128a5f340/plyable-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89d421015f02d374891e002057a471cd56d9528c9ab149c4c6979c6d9b0356a7",
          "md5": "9ff2536bb352046f81759c4017f29e64",
          "sha256": "3c43663a082564c4d423ef040b1dc6932c6f01237a411d400901d4e37fe379af"
        },
        "downloads": -1,
        "filename": "plyable-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9ff2536bb352046f81759c4017f29e64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16966,
        "upload_time": "2023-03-20T21:20:00",
        "upload_time_iso_8601": "2023-03-20T21:20:00.744921Z",
        "url": "https://files.pythonhosted.org/packages/89/d4/21015f02d374891e002057a471cd56d9528c9ab149c4c6979c6d9b0356a7/plyable-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b2c1e58ebc0e20cf0dc47e6a2e9e22ccb819ea68e396183d5c8dec53c181710",
          "md5": "aeaa0ed9ab9a1b55ee7bd664c784225c",
          "sha256": "4575f279879acd5c896310a8f9044484a59c1416ab1a215e5d048e50e26a7a4f"
        },
        "downloads": -1,
        "filename": "plyable-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aeaa0ed9ab9a1b55ee7bd664c784225c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19031,
        "upload_time": "2023-03-20T23:07:09",
        "upload_time_iso_8601": "2023-03-20T23:07:09.198546Z",
        "url": "https://files.pythonhosted.org/packages/4b/2c/1e58ebc0e20cf0dc47e6a2e9e22ccb819ea68e396183d5c8dec53c181710/plyable-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e034285e179bb73d162ec26d5e2af3066d9a112da1ae0e91687c9b0c7175bb81",
          "md5": "7e31523573baf872916c8253fcad714d",
          "sha256": "285fed63206b71fd43e3e87f2f442619c6fc34d04f5abe829fa9174b0cfcb03c"
        },
        "downloads": -1,
        "filename": "plyable-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7e31523573baf872916c8253fcad714d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17022,
        "upload_time": "2023-03-20T23:07:12",
        "upload_time_iso_8601": "2023-03-20T23:07:12.813791Z",
        "url": "https://files.pythonhosted.org/packages/e0/34/285e179bb73d162ec26d5e2af3066d9a112da1ae0e91687c9b0c7175bb81/plyable-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d515601be1b87f0f35de14227d4f46a437d6902e9c3a1937e00391d3f7e69af",
          "md5": "57706a7e8d8ec09186e7d44da15ce368",
          "sha256": "1ad966b9cd98cf19b903b1ccc418f70d139b31e22fda128cb03290d37aafaf90"
        },
        "downloads": -1,
        "filename": "plyable-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57706a7e8d8ec09186e7d44da15ce368",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19509,
        "upload_time": "2023-03-20T23:18:15",
        "upload_time_iso_8601": "2023-03-20T23:18:15.510781Z",
        "url": "https://files.pythonhosted.org/packages/5d/51/5601be1b87f0f35de14227d4f46a437d6902e9c3a1937e00391d3f7e69af/plyable-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd5d3a4b1d46c85ac26b1e379b18e9392127bf9c50b540ac0d2dfea2c7bdc7ac",
          "md5": "79ee634a2c9b30c78ae3b6ad09aefd72",
          "sha256": "902ce1674acab20eb0c563cf2745f2974fe316db2ef0e2d0e290abc6254241c6"
        },
        "downloads": -1,
        "filename": "plyable-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "79ee634a2c9b30c78ae3b6ad09aefd72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17540,
        "upload_time": "2023-03-20T23:18:18",
        "upload_time_iso_8601": "2023-03-20T23:18:18.122726Z",
        "url": "https://files.pythonhosted.org/packages/fd/5d/3a4b1d46c85ac26b1e379b18e9392127bf9c50b540ac0d2dfea2c7bdc7ac/plyable-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d515601be1b87f0f35de14227d4f46a437d6902e9c3a1937e00391d3f7e69af",
        "md5": "57706a7e8d8ec09186e7d44da15ce368",
        "sha256": "1ad966b9cd98cf19b903b1ccc418f70d139b31e22fda128cb03290d37aafaf90"
      },
      "downloads": -1,
      "filename": "plyable-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "57706a7e8d8ec09186e7d44da15ce368",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 19509,
      "upload_time": "2023-03-20T23:18:15",
      "upload_time_iso_8601": "2023-03-20T23:18:15.510781Z",
      "url": "https://files.pythonhosted.org/packages/5d/51/5601be1b87f0f35de14227d4f46a437d6902e9c3a1937e00391d3f7e69af/plyable-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd5d3a4b1d46c85ac26b1e379b18e9392127bf9c50b540ac0d2dfea2c7bdc7ac",
        "md5": "79ee634a2c9b30c78ae3b6ad09aefd72",
        "sha256": "902ce1674acab20eb0c563cf2745f2974fe316db2ef0e2d0e290abc6254241c6"
      },
      "downloads": -1,
      "filename": "plyable-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "79ee634a2c9b30c78ae3b6ad09aefd72",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 17540,
      "upload_time": "2023-03-20T23:18:18",
      "upload_time_iso_8601": "2023-03-20T23:18:18.122726Z",
      "url": "https://files.pythonhosted.org/packages/fd/5d/3a4b1d46c85ac26b1e379b18e9392127bf9c50b540ac0d2dfea2c7bdc7ac/plyable-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}