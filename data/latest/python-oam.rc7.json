{
  "info": {
    "author": "['Rodrigo Faria', 'Tiago Colli']",
    "author_email": "rodrigo.f.ss@uol.com.br",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Python-OAM\n\n### OAM toolbox made by the community for the community\n\nOutlier detection has been used to detect and, if appropriate, remove anomalous observati-\nons from the data. Itâ€™s usability can identify system failures and frauds before they escalate\nwith potentially huge consequences.\n\nOne ramification of the contribution made by the outlier detection field is related\nto understand which aspects of the anomalous observation significantly separate it from\nthe others in a given dataset. This area of research has been\ncalled Outlier Aspect Mining (OAM). Promising results and applications and cases have\nbeen presented by the community.\n\nThe objective of this lib is to contribute to OAM research in a practical way. **Python-OAM** allow\nyou to apply Outlier Aspect Mining algorithms and analyze the results in your own\ndatasets.\n\nFeel free to not only use it but also extend it as wished.\n\n\nInstallation\n---\n\nTo see Python-OAM in action on your own data:\n\nYou can install it using pip\n```\npip install python-oam\n```\n\npython-oam is tested with:\n\n|                     | Version (dev)  |\n|---------------------|----------------|\n| Python              | 3.7, 3.8, 3.9  |\n| pandas              | 1.3.2          |\n| seaborn             | 0.11.2         |\n| tqdm                | 4.62.0         |\n\nWhat 's OAM?\n---\nOutlying Aspect Mining (OAM), can be interpreted as \"The task of looking for a set of\ncharacteristics (or subspaces) where a given object is different from the rest of the other objects.\"\n\nSomething in the lines of:\n\n> \"OK, I know that this object is an outlier, but why exactly?\"\n\n**OAM helps you to figure it out!**\n\nDefining the problem in a generic way, we consider a set of data\n*X = {x1, x2, ..., xn}* with n observations in a D-dimensional space. The application of\nOAM seeks to understand which dimensions of *D* make a sample of *X* to be considered\nan outlier.\n\nThe existing OAM techniques are classified into three major groups,\n*Score and Search* , *Feature Selection* and *Hybrid Approach*.\n\nWe mainly focused on the development of a **Score and Search** based toolbox,\nso let's talk a little bit more about it\n\nScore and Search\n---\nThe Score and Search is the most researched OAM technique and the one with the greatest results till the moment.\n\nThis approach requires a **scoring** function, to measure how much the object differs from the other objects in a\ngiven a set of dimensions (subspace).\nThe **search** algorithm will define which dimensions should be compared.\nThen, the score will be compared across all subspaces generated by the search algorithm to detect the most divergent aspects.\n\nThat may have sounded a little too complex so we may break it down into an example\n\nLet's say you have a dataset with different basketball players and their stats for a given season.\nWe can all agree that Stephen Curry was indeed an outlier in the 2015 season, but among all of\nhis stats, which one, or which set of stats, made him deliver so much more than the other players?\n\nWas it the number of jumps? or his high number of field goals attempts? maybe the average running speed?\n\nThe **scoring** function will evaluate how different he was from the other players in, let's say,\nthe dimension of \"Field Goals Made\", in that matter he was one of the greatest at that season so, very different.\n\nthe **search** algorithm will combine different dimensions to be evaluated, like\nlet's come with a score of how different Stephen Curry was in comparison with the other\ngiven his \"Number of Jumps\" and \"Three Points Made\". How about \"Average Running Speed\" and\n\"Offensive rebound\"?\n\nAfter scoring all the dimensions the search function returned, we compare them all\nto get to the most outlier set of dimensions\n> and that's a way to explain why Stephen Curry was recognized as an outlier basketball player in 2015 season.\n\nScoring Functions\n---\n### Ipath\n\nThe iPath (isolation Path) arises from the study published by\n[Vinh et al. (2016)](https://link.springer.com/article/10.1007/s10618-016-0453-2).\nThe authors found that using the iForest anomaly detection approach (isolation\nForest), it is possible to establish a dimensionally unbiased metric. The idea behind scoring the\niPath is that, in the most discrepant subspace, **an anomalous object is easier to isolate than the others.**\n\nThe iPath process consists of making cuts in space, isolating objects from the rest\nof the dough. In this scenario, if the object is surrounded by several others, you will need to\nmore cuts to separate it from the rest, while if the object is an outlier, it will take\nless cuts. This behavior can be observed in Figure 1, where (a) represents the\nprocedure of an outlier that was isolated with only three cuts, while (b), a value\nnot considered an outlier, it needed 7 cuts to be isolated from the rest of the data.\n\n![Image 1](https://i.postimg.cc/3w3Kwd5Q/ipath.png)\n\n\nSearch Functions\n---\n### Simple Combination\n\nSimple Combinations consists of making all possible combinations of spaces between\na minimum and maximum size. This means that, for example, for a dataset of\n*n* dimensions and a minimum and maximum size value equal to *i* and *j* respectively, the Simple\nCombination will create all possible combinations without repetition.\n\nLet's say you have a dataset with the followin dimensions\n```python\n['datetime','ticker','open','close','high','low','volume']\n```\n\nif your maximum value is one the Simple Combination algorithm will return:\n```python\n[['datetime'],['ticker'],['open'],['close'],['high'],['low'],['volume']]\n```\nif your maximum value is two the Simple Combination algorithm will return:\n```python\n[['datetime', 'ticker'], ['datetime', 'open'], ['datetime', 'close'], ['datetime', 'high'], ...]\n```\nThis technique allows the user to analyze a large number of dimensions\ncontrolling the combinatorial explosion caused by an all-to-all combination with no size limit.\n\nArchitecture\n---\n\n- Preprocess: contains a normalization function that allows the user to assign\nweights for chosen dimensions;\n- Score: contains the iPath class and will contain other score classes in the future;\n- Search: contains the SimpleCombination class and will contain other search classes\nin the future;\n- Visualization: contains some functions to assist in the before and after visualization\napplication of OAM techniques\n\nAlthough the implementation separates them into different modules, Score and Search\nfunction as a set. As the scoring algorithm chosen, for the creation of\nan instance of iPath requires only two parameters, the size of the generated subsamples\nand the number of trees to be generated.\n\n```python\nipath = IsolationPath(\n    subsample_size=256,\n    number_of_paths=50\n)\n```\n\nThen SimpleCombination, implemented as a search method, receives the instance of the chosen scoring method,\nthe parameters that define the size of the generated subspaces and which dimensions will be used.\n\n```python\nsearch = SimpleCombination(\n    ipath,\n    min_items_per_subspace=2,\n    max_items_per_subspace=4,\n    dimensions=[\n        \"variation_mean\", \"variation_std\", \"up_count\", \"down_count\",\n    ]\n)\n```\n\nThe decision to decouple the Score from the Search, and then reference them in the moment\ninstance of classes, is linked to the possibility of combining them in different ways.\nIf a new scoring algorithm is implemented, it will only need to contain one\nmethod called *score*, returning a number, to integrate with *SimpleCombination*.\nLikewise, if a new *search* method is implemented, it will only need to\nevaluate the dimension through the score method of the class received as a parameter to\nintegrate with the rest.\n\nYou can check a few examples of the lib in use in the ```oam/analysis```folder\nand in the ```test/sample_search.py``` as well. Also, the tests should serve you\nwith some guidance on how to use specific functions - the coverage is pretty good\nat the moment.\n\nTests\n---\nWe recognize our testing strategy is quite simple, many times we just look for\nexceptions in the happy path - we'll be glad to accept some help improving this area.\n\nYou can run them on your own through\n```make test```.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "oam,outlier,aspect,mining,data,explicability,outlying",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-oam",
    "package_url": "https://pypi.org/project/python-oam/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-oam/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/python-oam/0.7/",
    "requires_dist": [
      "pandas (==1.3.2)",
      "seaborn (==0.11.2)",
      "tqdm (==4.62.0)"
    ],
    "requires_python": "",
    "summary": "OAM toolbox made by the community to the community",
    "version": "0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15131066,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfb633afe798970f00757984af1f095880e1267a261b277a882555029a08cea1",
          "md5": "295fe3b4ce9772d2be1c37f86c2b0fa5",
          "sha256": "60224b5e0b62a19f853260981977a444d2268b94c6303d65cceba21bd0af2792"
        },
        "downloads": -1,
        "filename": "python_oam-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "295fe3b4ce9772d2be1c37f86c2b0fa5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5458,
        "upload_time": "2022-03-16T22:09:11",
        "upload_time_iso_8601": "2022-03-16T22:09:11.665400Z",
        "url": "https://files.pythonhosted.org/packages/bf/b6/33afe798970f00757984af1f095880e1267a261b277a882555029a08cea1/python_oam-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f39e982a3e25dc26e8a3a0a7c4eab5e8ceddebc8f3674baa2e2842530bbf0fde",
          "md5": "96f889c9b42f83c535215fe011e04592",
          "sha256": "e97ff71a762637992e3dd6dd8c79be6946b562be13287c695b9c5a7e7335d93d"
        },
        "downloads": -1,
        "filename": "python-oam-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "96f889c9b42f83c535215fe011e04592",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8590,
        "upload_time": "2022-03-16T22:09:14",
        "upload_time_iso_8601": "2022-03-16T22:09:14.010696Z",
        "url": "https://files.pythonhosted.org/packages/f3/9e/982a3e25dc26e8a3a0a7c4eab5e8ceddebc8f3674baa2e2842530bbf0fde/python-oam-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63dc696fb3778c3caa3c4bf7a4e0e8994350f695004f72355bc831be4a1c6654",
          "md5": "75ef693c00c2df4b5b1b6d3d979a8aa7",
          "sha256": "a87827b24712739979a56759c610eddc06ddabedde3b167138b0c11d15f6b477"
        },
        "downloads": -1,
        "filename": "python_oam-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75ef693c00c2df4b5b1b6d3d979a8aa7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8899,
        "upload_time": "2022-03-16T22:17:04",
        "upload_time_iso_8601": "2022-03-16T22:17:04.022420Z",
        "url": "https://files.pythonhosted.org/packages/63/dc/696fb3778c3caa3c4bf7a4e0e8994350f695004f72355bc831be4a1c6654/python_oam-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c72229b2cfabe872b2b5268b9ca2efa5e09625e15e1a8cb90dc3207402bad3bd",
          "md5": "d115f6dde8229be1b6d4cfec69d41c67",
          "sha256": "5046dd94c1fe1ae7c63ae94eaf3ca2e9cab09dbc0eadfa177366aadfde68720f"
        },
        "downloads": -1,
        "filename": "python-oam-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d115f6dde8229be1b6d4cfec69d41c67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10177,
        "upload_time": "2022-03-16T22:17:07",
        "upload_time_iso_8601": "2022-03-16T22:17:07.157343Z",
        "url": "https://files.pythonhosted.org/packages/c7/22/29b2cfabe872b2b5268b9ca2efa5e09625e15e1a8cb90dc3207402bad3bd/python-oam-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2ccb0a63c9f6d0bc9edb9daa53abfea1fd6bbc1324443cc85c3c91145951890",
          "md5": "09e6e9340354f73aaffd2ff798b161d5",
          "sha256": "0e5b9f6fdeb3a9da4be224f3af24cf1c5215454cb159a904f2c01c59c961a171"
        },
        "downloads": -1,
        "filename": "python_oam-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09e6e9340354f73aaffd2ff798b161d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8816,
        "upload_time": "2022-03-16T22:18:18",
        "upload_time_iso_8601": "2022-03-16T22:18:18.565365Z",
        "url": "https://files.pythonhosted.org/packages/a2/cc/b0a63c9f6d0bc9edb9daa53abfea1fd6bbc1324443cc85c3c91145951890/python_oam-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e5b07cef805620993cd74fb491d9b7a207c81a547920e7d16876eb1d6caab6e",
          "md5": "b554db46073772a3ab9751d88dbf0cb8",
          "sha256": "2ac7c5b2055ea8f746cb9ddce2f26d61d29188f301e7e363ebd43a09fb2435cb"
        },
        "downloads": -1,
        "filename": "python-oam-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b554db46073772a3ab9751d88dbf0cb8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10110,
        "upload_time": "2022-03-16T22:18:22",
        "upload_time_iso_8601": "2022-03-16T22:18:22.568951Z",
        "url": "https://files.pythonhosted.org/packages/5e/5b/07cef805620993cd74fb491d9b7a207c81a547920e7d16876eb1d6caab6e/python-oam-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc2184f1be687cad61cf0b86bd637af902b558bad8fdc57bef07f16702e72fae",
          "md5": "dff7e255fc8d512795f5bbc64f920392",
          "sha256": "c71e32684b4b63ecc5b6d711a46e4dcf0429b9b9989b9fc035e52fb15f29ddcd"
        },
        "downloads": -1,
        "filename": "python_oam-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dff7e255fc8d512795f5bbc64f920392",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8816,
        "upload_time": "2022-05-12T00:02:33",
        "upload_time_iso_8601": "2022-05-12T00:02:33.066016Z",
        "url": "https://files.pythonhosted.org/packages/cc/21/84f1be687cad61cf0b86bd637af902b558bad8fdc57bef07f16702e72fae/python_oam-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27c9846ccc04001cadc8d1aeae8be1bbc6ff79cba47f8bf13f5743d0f78754b7",
          "md5": "7841d90ba10f466791caabd9d59aae29",
          "sha256": "f3c73a48f46f911ade60d65df9235fce06c9254e8cff4cbaefe1d172fe32ff6d"
        },
        "downloads": -1,
        "filename": "python-oam-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7841d90ba10f466791caabd9d59aae29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10261,
        "upload_time": "2022-05-12T00:02:34",
        "upload_time_iso_8601": "2022-05-12T00:02:34.660663Z",
        "url": "https://files.pythonhosted.org/packages/27/c9/846ccc04001cadc8d1aeae8be1bbc6ff79cba47f8bf13f5743d0f78754b7/python-oam-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ce31c812f38c7ebe4b80e8523df9bc9a15e71e1a1c6d75d630b94a2eabda784",
          "md5": "1e11e179066031a5db4c0c199578510c",
          "sha256": "959a2b85db738600e513ddebceb582256b7558dd78b688c136c7ce397ff0f608"
        },
        "downloads": -1,
        "filename": "python_oam-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e11e179066031a5db4c0c199578510c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14689,
        "upload_time": "2022-05-12T01:51:13",
        "upload_time_iso_8601": "2022-05-12T01:51:13.748632Z",
        "url": "https://files.pythonhosted.org/packages/6c/e3/1c812f38c7ebe4b80e8523df9bc9a15e71e1a1c6d75d630b94a2eabda784/python_oam-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66b137feffbce55eb57f7334023e84a3685ede01fa4892e117d36d4662d10e1c",
          "md5": "55acd5dd17733be00aabab0af431d99e",
          "sha256": "345384732f1a5b85d171f168d4d3e9b88af18bc001f235dbef6b14de6daea9a3"
        },
        "downloads": -1,
        "filename": "python-oam-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "55acd5dd17733be00aabab0af431d99e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18171,
        "upload_time": "2022-05-12T01:51:15",
        "upload_time_iso_8601": "2022-05-12T01:51:15.786955Z",
        "url": "https://files.pythonhosted.org/packages/66/b1/37feffbce55eb57f7334023e84a3685ede01fa4892e117d36d4662d10e1c/python-oam-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c908d588c4748f1ae5c0d29492a539085fe14a2276a2ae56c7937c93381fba4b",
          "md5": "c021ebab6d7195ec357579fa802465ca",
          "sha256": "753de6bbc04c72f2b9195bf320269f258269c72601e8fee478a977ad50e6558b"
        },
        "downloads": -1,
        "filename": "python_oam-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c021ebab6d7195ec357579fa802465ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14730,
        "upload_time": "2022-05-12T02:38:07",
        "upload_time_iso_8601": "2022-05-12T02:38:07.718602Z",
        "url": "https://files.pythonhosted.org/packages/c9/08/d588c4748f1ae5c0d29492a539085fe14a2276a2ae56c7937c93381fba4b/python_oam-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d5835b785c2b9aad00be3f9403a855283f4e223d242e0aeddd601de3b9d587b",
          "md5": "cb6212b054dd75723199ef4d8123e212",
          "sha256": "05371ad6fcba4a74ae2cd1f9078c3365cc9e799d4a810cfa64fbbc4b1c8043f8"
        },
        "downloads": -1,
        "filename": "python-oam-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "cb6212b054dd75723199ef4d8123e212",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18213,
        "upload_time": "2022-05-12T02:38:09",
        "upload_time_iso_8601": "2022-05-12T02:38:09.590822Z",
        "url": "https://files.pythonhosted.org/packages/8d/58/35b785c2b9aad00be3f9403a855283f4e223d242e0aeddd601de3b9d587b/python-oam-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11025f6d6c9d38ffef92831cae9b4fb3b8b85b5fa0a69d52c34901b5f5458174",
          "md5": "8882803f7c95451548529aa52ce94e59",
          "sha256": "16448a0b07662549ed2afae6a1a29cf5fd3046de0aec87d6c718871726899492"
        },
        "downloads": -1,
        "filename": "python_oam-0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8882803f7c95451548529aa52ce94e59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14760,
        "upload_time": "2022-09-18T02:50:48",
        "upload_time_iso_8601": "2022-09-18T02:50:48.946079Z",
        "url": "https://files.pythonhosted.org/packages/11/02/5f6d6c9d38ffef92831cae9b4fb3b8b85b5fa0a69d52c34901b5f5458174/python_oam-0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "408cd3be1996e9efa9682c0d9a5ec57a61464a2907472fd615884f352f5520e2",
          "md5": "2296df4136e187f5fe1cdd7ccca7c18d",
          "sha256": "33f95f319b4f3a3f9f3c47875f20904fa3f26dd2c9f1102d3991c730499f2250"
        },
        "downloads": -1,
        "filename": "python-oam-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "2296df4136e187f5fe1cdd7ccca7c18d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18264,
        "upload_time": "2022-09-18T02:50:51",
        "upload_time_iso_8601": "2022-09-18T02:50:51.590378Z",
        "url": "https://files.pythonhosted.org/packages/40/8c/d3be1996e9efa9682c0d9a5ec57a61464a2907472fd615884f352f5520e2/python-oam-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11025f6d6c9d38ffef92831cae9b4fb3b8b85b5fa0a69d52c34901b5f5458174",
        "md5": "8882803f7c95451548529aa52ce94e59",
        "sha256": "16448a0b07662549ed2afae6a1a29cf5fd3046de0aec87d6c718871726899492"
      },
      "downloads": -1,
      "filename": "python_oam-0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8882803f7c95451548529aa52ce94e59",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14760,
      "upload_time": "2022-09-18T02:50:48",
      "upload_time_iso_8601": "2022-09-18T02:50:48.946079Z",
      "url": "https://files.pythonhosted.org/packages/11/02/5f6d6c9d38ffef92831cae9b4fb3b8b85b5fa0a69d52c34901b5f5458174/python_oam-0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "408cd3be1996e9efa9682c0d9a5ec57a61464a2907472fd615884f352f5520e2",
        "md5": "2296df4136e187f5fe1cdd7ccca7c18d",
        "sha256": "33f95f319b4f3a3f9f3c47875f20904fa3f26dd2c9f1102d3991c730499f2250"
      },
      "downloads": -1,
      "filename": "python-oam-0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "2296df4136e187f5fe1cdd7ccca7c18d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18264,
      "upload_time": "2022-09-18T02:50:51",
      "upload_time_iso_8601": "2022-09-18T02:50:51.590378Z",
      "url": "https://files.pythonhosted.org/packages/40/8c/d3be1996e9efa9682c0d9a5ec57a61464a2907472fd615884f352f5520e2/python-oam-0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}