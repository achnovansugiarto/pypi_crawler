{
  "info": {
    "author": "Martin Brochhaus",
    "author_email": "mbrochh.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Django Monitoring\n=================\n\nDO NOT USE THIS. Work in progress.\n\nA reusable Django app to monitor all aspects of your webapp.\n\nThe idea is to create an app that provides some APIs that can be re-used\nby any other app.\n\nLet's say you want to create a graph that shows how many users sign up at your\nsite every day.\n\nFirst you will create a model that can hold this data. django-monitoring will\nprovide some abstract base classes for commonly used model types::\n\n    class MonitorUserCount(MonitorCountBase, models.Model):\n        pass\n\nNext you will register a new monitor that is connected to that monitor model::\n\n    from monitoring import monitor\n    from myapp.models import MonitorUserCount\n\n    monitor.register('user_count', UserRegistrationCount)\n\nNow you can add one count to this monitor anywhere in your code::\n\n    from monitoring import monitor\n\n    def post_registration__handler(sender, user, *args, **kwargs):\n        monitor.add('user_count', 1)\n\ndjango-monitoring will figure out, that the ``user_count`` monitor is connected\nto the ``MonitorUserCount`` model and it will also know that this model is\nof the type ``MonitorCountBase`` which will know how to add one data point to\nitself. In this case it would just add a row to the table which says that 1\nuser was added at ``timezone.now()``.\n\nFinally django-monitoring provides a view which will show graphs for all\nconnected monitors. I still have to think about how to teach that view which\nmonitors to show, how to render the data and how to filter the data.\n\nThe base classes will probably have an attribute which describes the default\ntemplate but you could easily override those templates for your app.\n\nInstallation\n------------\n\nTo get the latest stable release from PyPi (not yet released!)\n\n.. code-block:: bash\n\n    $ pip install django-monitoring\n\nTo get the latest commit from GitHub\n\n.. code-block:: bash\n\n    $ pip install -e git+git://github.com/bitmazk/django-monitoring.git#egg=monitoring\n\nAdd ``monitoring`` to your ``INSTALLED_APPS``\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...,\n        'monitoring',\n    )\n\nAdd the ``monitoring`` URLs to your ``urls.py``\n\n.. code-block:: python\n\n    urlpatterns = patterns('',\n        ...\n        url(r'^monitoring/', include('monitoring.urls')),\n    )\n\nDon't forget to migrate your database\n\n.. code-block:: bash\n\n    ./manage.py migrate monitoring\n\n\nUsage\n-----\n\nTODO: Describe usage or point to docs. Also describe available settings and\ntemplatetags.\n\n\nContribute\n----------\n\nIf you want to contribute to this project, please perform the following steps\n\n.. code-block:: bash\n\n    # Fork this repository\n    # Clone your fork\n    $ mkvirtualenv -p python2.7 django-monitoring\n    $ python setup.py install\n    $ pip install -r dev_requirements.txt\n\n    $ git co -b feature_branch master\n    # Implement your feature and tests\n    $ git add . && git commit\n    $ git push -u origin feature_branch\n    # Send us a pull request for your feature branch",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bitmazk/django-monitoring",
    "keywords": "django,app,reusable,monitor,monitoring,statistics",
    "license": "The MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-monitoring",
    "package_url": "https://pypi.org/project/django-monitoring/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/django-monitoring/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/bitmazk/django-monitoring"
    },
    "release_url": "https://pypi.org/project/django-monitoring/0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A reusable Django app to monitor all aspects of your webapp",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 825478,
  "releases": {
    "0.1": []
  },
  "urls": [],
  "vulnerabilities": []
}