{
  "info": {
    "author": "DevsData",
    "author_email": "tpotanski@devsdata.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# DD-woodpecker\nA Python library designed to simplify work with the woodpecker API.\n\n# Installation\n`pip install dd-woodpecker`\n\n# Usage\n\n### Woodpecker.get_prospects()\n Returns list of all prospects in the database.\n\n    Args:\n        per_page (int): Defines a number of results per page.\n        page (int): Defines a page number you want access to.\n        sort (str): Defines the sort order, as well as the field on which sorting will be based.\n                    Usage: +/- and a parameter\n    Returns:\n        list_of_prospects (Optional[List[Dict]]): Lit of all prospects filtered by given criteria\n\n### Woodpecker.get_single_prospect()\nReturns details of a single prospect.\n\n    Args:\n        prospect_id (int): Prospect's ID\n        campaigns_details (bool): Show campaign details for a specific prospect\n    Returns:\n        single_prospect (Optional[List[Dict]]): Single prospect's details\n\n### Woodpecker.add_prospects_list()\nAdds a list of new prospects to the database.\n\n    Args:\n        prospects_list (List[Dict]): List containing prospect's details\n        update (bool): Defines if prospects, who already are in database should be overwritten\n    Returns:\n        response (Optional[Dict]): Contains emails of added prospects and status\n\n### Woodpecker.add_prospects_campaign()\nAdds a list of new prospects to the certain campaign. If any of the prospects is not in the\n        database yet, also inserts him there.\n\n    Args:\n        campaign_id (int): Id of the campaign, which you want to add the prospects to\n        prospects_list (List[Dict]): List containing prospect's details\n    Returns:\n        response (Optional[Dict]): Contains emails of added prospects and status\n\n### Woodpecker.delete_prospect()\nDeletes certain prospect from a campaign or database.\n\n    Args:\n        prospect_id (int): Id of the prospect, that should be deleted\n        campaign_id (Optional[int]): Id of campaign, which you want to remove the prospect from.\n            If this param is not specified, then the prospect is deleted from the entire database.\n    Returns:\n        status_code (Dict): Status code returned by the request\n\n### Woodpecker.get_campaigns()\nReturns list of all campaigns\n\n    Returns:\n        list_of_campaigns (Optional[List[Dict]]): List of all available campaigns\n\n### Woodpecker.get_single_campaign()\nReturns details of a certain campaign.\n\n    Args:\n        campaign_id (Optional[int]): id of a specific campaign\n        tatus (Optional[str]): status of a specific campaign\n    Returns:\n        campaign_details (Optional[List[Dict]]): Single campaign details\n\n### Woodpecker.args_to_url_params()\nConverts a dict containing url path arguments into a valid url-like string.\n\n    Args:\n        args (dict): Contains url path params with their values\n    Returns:\n        url_path (str): Args converted to valid url path\n\n### WoodpeckerHook.subscribe()\nAdds a trigger, which when activated will send a request to a given endpoint.\n        \n    Args:\n        target_url (str): User defined endpoint\n        event (str): type of event, on which action should be triggered\n        to_subscribe (bool): Determines whether to subscribe or unsubscribe\n    Returns:\n         None\n\n### WoodpeckerHook.unsubscribe()\nDeletes certain trigger.\n\n    Args:\n         target_url (str): User defined endpoint\n           event (str): type of event, on which action should be triggered\n    Returns:\n         None\n\n### insert_tags_into_snippets()\nFunction takes in a list of tags and inserts them into snippets, there can only be 15 of them.\n\n    Args:\n        prospect (Dict): Woodpecker prospect object, where snippets should be added\n        tags (List[str]): List of tags, that should be inserted into snippets\n    Returns:\n        None: Function makes changes in place",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "woodpecker,woodpecker api,devsdata",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dd-woodpecker",
    "package_url": "https://pypi.org/project/dd-woodpecker/",
    "platform": "",
    "project_url": "https://pypi.org/project/dd-woodpecker/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/dd-woodpecker/0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python library designed to simplify work with the woodpecker API",
    "version": "0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11137952,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4093864b7ac30ed95441f6023d4cdd8efe9967c3c054aa960c760a06185954d",
          "md5": "27ec7d5182c82a99714d3d3a0b013f7b",
          "sha256": "8c499bcffd77a922ab90a06427c08ca35d7a0e49c08421c84011f08c64f02c0c"
        },
        "downloads": -1,
        "filename": "dd_woodpecker-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "27ec7d5182c82a99714d3d3a0b013f7b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3083,
        "upload_time": "2021-08-09T16:09:15",
        "upload_time_iso_8601": "2021-08-09T16:09:15.463855Z",
        "url": "https://files.pythonhosted.org/packages/a4/09/3864b7ac30ed95441f6023d4cdd8efe9967c3c054aa960c760a06185954d/dd_woodpecker-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74d075f044d03be7a6a3bf6f3e0ad33af72614c8b727d71367b04497ca78798a",
          "md5": "6d3eed9e9d91860f28b8eef5074e1c6f",
          "sha256": "8a4e9ad76334c6c16397c687bc0e470a722d22244d7c9cd174f68832f0823d62"
        },
        "downloads": -1,
        "filename": "dd_woodpecker-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6d3eed9e9d91860f28b8eef5074e1c6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3178,
        "upload_time": "2021-08-09T16:42:31",
        "upload_time_iso_8601": "2021-08-09T16:42:31.164030Z",
        "url": "https://files.pythonhosted.org/packages/74/d0/75f044d03be7a6a3bf6f3e0ad33af72614c8b727d71367b04497ca78798a/dd_woodpecker-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbf7873d5f339af9f3250167c9ff91be51b56a2736612e227762f6c0345217f2",
          "md5": "f834adb024161cf7f39e8775667e7d66",
          "sha256": "b781334c86ace63539b65ab1561baea2a166ccee27200cef56de5f2c1bded5cc"
        },
        "downloads": -1,
        "filename": "dd_woodpecker-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f834adb024161cf7f39e8775667e7d66",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3165,
        "upload_time": "2021-08-09T16:44:31",
        "upload_time_iso_8601": "2021-08-09T16:44:31.721265Z",
        "url": "https://files.pythonhosted.org/packages/cb/f7/873d5f339af9f3250167c9ff91be51b56a2736612e227762f6c0345217f2/dd_woodpecker-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2884ea6b19ffcefb83449e09f7f0c4751b3257d0dcb48489c964f93d8d93b88d",
          "md5": "d0b21da328c4291761869f09617e222e",
          "sha256": "228cc7d2cd5ad6a1cb8e1b9fb0670dfdce8c350a388cce52764bd298e099e751"
        },
        "downloads": -1,
        "filename": "dd_woodpecker-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d0b21da328c4291761869f09617e222e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3610,
        "upload_time": "2021-08-10T08:12:58",
        "upload_time_iso_8601": "2021-08-10T08:12:58.755258Z",
        "url": "https://files.pythonhosted.org/packages/28/84/ea6b19ffcefb83449e09f7f0c4751b3257d0dcb48489c964f93d8d93b88d/dd_woodpecker-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3abf6dd59e13e82c47d08e33f51014f3f4e427eff9fe77a97084a203a2b1fd90",
          "md5": "3fe8c5c412280906e2e17dd3b1486989",
          "sha256": "4eddb36f050d38b99ce81308f5191252a97c706f13e3ba4064579e732cca01b0"
        },
        "downloads": -1,
        "filename": "dd_woodpecker-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "3fe8c5c412280906e2e17dd3b1486989",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4361,
        "upload_time": "2021-08-10T08:43:57",
        "upload_time_iso_8601": "2021-08-10T08:43:57.849746Z",
        "url": "https://files.pythonhosted.org/packages/3a/bf/6dd59e13e82c47d08e33f51014f3f4e427eff9fe77a97084a203a2b1fd90/dd_woodpecker-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84c486524a6a312e4ff454a1251e74f4bb256f56b4fbb633bf1b3f1fc8d48bca",
          "md5": "b82b2373962e340cbb40f82c8f0e713c",
          "sha256": "ca987a487e1761ceb285534663349cdf251f683c6101a31d1e6b97116b7b0eeb"
        },
        "downloads": -1,
        "filename": "dd_woodpecker-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b82b2373962e340cbb40f82c8f0e713c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5069,
        "upload_time": "2021-08-10T08:54:09",
        "upload_time_iso_8601": "2021-08-10T08:54:09.428265Z",
        "url": "https://files.pythonhosted.org/packages/84/c4/86524a6a312e4ff454a1251e74f4bb256f56b4fbb633bf1b3f1fc8d48bca/dd_woodpecker-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "84c486524a6a312e4ff454a1251e74f4bb256f56b4fbb633bf1b3f1fc8d48bca",
        "md5": "b82b2373962e340cbb40f82c8f0e713c",
        "sha256": "ca987a487e1761ceb285534663349cdf251f683c6101a31d1e6b97116b7b0eeb"
      },
      "downloads": -1,
      "filename": "dd_woodpecker-0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "b82b2373962e340cbb40f82c8f0e713c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5069,
      "upload_time": "2021-08-10T08:54:09",
      "upload_time_iso_8601": "2021-08-10T08:54:09.428265Z",
      "url": "https://files.pythonhosted.org/packages/84/c4/86524a6a312e4ff454a1251e74f4bb256f56b4fbb633bf1b3f1fc8d48bca/dd_woodpecker-0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}