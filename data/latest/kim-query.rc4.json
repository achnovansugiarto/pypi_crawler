{
  "info": {
    "author": "Daniel S. Karls",
    "author_email": "karl0100@umn.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Common Development and Distribution License 1.0 (CDDL-1.0)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# kim-query\n![Python package](https://github.com/openkim/kim-query/workflows/Python%20package/badge.svg?branch=master)\n[![PyPI](https://img.shields.io/pypi/v/kim-query.svg)](https://pypi.python.org/pypi/kim-query)\n[![Anaconda-Server Badge](https://img.shields.io/conda/vn/conda-forge/kim-query.svg)](https://anaconda.org/conda-forge/kim-query)\n[![License](https://img.shields.io/badge/license-CDDL--1.0-blue)](LICENSE.CDDL)\n\nHelper routines for querying the OpenKIM database hosted at https://query.openkim.org\n\n\n## Usage examples\n\n**LAMMPS**\n\n  ```bash\n  kim_init EAM_Dynamo_ErcolessiAdams_1994_Al__MO_123629422045_005 metal\n  kim_query a0 get_lattice_constant_cubic crystal=[\"fcc\"] species=[\"Al\"] units=[\"angstrom\"]\n  ```\n\n**python**\n\n  ```python\n  from kim_query import get_lattice_constant_cubic\n  get_lattice_constant_cubic([\"MO_123629422045_005\"], [\"fcc\"], [\"Al\"], [\"angstrom\"])\n  ```\n\n**curl**\n\n  ```bash\n  curl --data-urlencode 'model=[\"MO_123629422045_005\"]' \\\n       --data-urlencode 'crystal=[\"fcc\"]'               \\\n       --data-urlencode 'species=[\"Al\"]'                \\\n       --data-urlencode 'units=[\"angstrom\"]'            \\\n       https://query.openkim.org/api/get_lattice_constant_cubic\n  ```\n\n## Functions\n\n*Note: For a listing that includes a full parameter list and example usage of\n each function, see\n https://openkim.org/doc/usage/kim-query/*\n\n- **raw\\_query** Perform a raw mongo query of the OpenKIM Repository\n- **get\\_available\\_models** Retrieve the latest versions of all models that\n  support a given set of atomic species\n\n- **get\\_test\\_result** Retrieve specific keys from a property instance within\n  a result generated by a Test-Model pair\n\n- **get\\_lattice\\_constant\\_cubic** Retrieve the equilibrium lattice constant of\n  the conventional unit cell of a cubic crystal comprised of one or more\n  species at a given temperature and hydrostatic pressure\n\n- **get\\_lattice\\_constant\\_hexagonal** Retrieve equilibrium lattice constants of\n  the conventional unit cell of a hexagonal crystal comprised of one or more\n  species at a given temperature and hydrostatic pressure\n\n- **get\\_lattice\\_constant\\_2Dhexagonal** Retrieve equilibrium lattice constant of\n  the conventional unit cell of a 2D hexagonal crystal comprised of one or more\n  species at a given temperature and hydrostatic pressure\n\n- **get\\_cohesive\\_energy\\_cubic** Retrieve cohesive energy of a cubic crystal\n  comprised of one or more species at zero temperature and pressure\n\n- **get\\_cohesive\\_energy\\_hexagonal** Retrieve cohesive energy of a hexagonal\n  crystal comprised of one or more species at zero temperature and pressure\n\n- **get\\_cohesive\\_energy\\_2Dhexagonal** Retrieve cohesive energy of a 2D\n  hexagonal crystal comprised of one or more species at zero temperature and\n  pressure\n\n- **get\\_elastic\\_constants\\_isothermal\\_cubic** Retrieve isothermal elastic\n  constants of a cubic crystal comprised of one or more species at a given\n  temperature and hydrostatic pressure\n\n- **get\\_bulk\\_modulus\\_isothermal\\_cubic** Retrieve isothermal bulk modulus of a\n  cubic crystal comprised of one or more species at a given temperature and\n  hydrostatic pressure\n\n- **get\\_bulk\\_modulus\\_isothermal\\_hexagonal** Retrieve isothermal bulk modulus of\n  a hexagonal crystal comprised of one or more species at zero temperature and\n  pressure\n\n- **get\\_linear\\_thermal\\_expansion\\_coefficient\\_cubic** Retrieve linear\n  coefficient of thermal expansion of a cubic crystal comprised of one or more\n  species at a given temperature and hydrostatic pressure, calculated according\n  to (change-in-length)/(original-length)/(change-in-temperature)\n\n- **get\\_intrinsic\\_stacking\\_fault\\_relaxed\\_energy\\_fcc** Retrieve relaxed\n  intrinsic stacking fault (ISF) energy for a face-centered monoatomic cubic\n  crystal at zero temperature and a specified pressure.  The ISF corresponds to\n  a fault of the form ABC|BCA.  Relaxation of the atomic coordinates is\n  performed in the direction perpendicular to the fault plane\n\n- **get\\_extrinsic\\_stacking\\_fault\\_relaxed\\_energy\\_fcc** Retrieve relaxed\n  extrinsic stacking fault (ESF) energy for a face-centered monoatomic cubic\n  crystal at zero temperature and a specified pressure.  The ESF corresponds to\n  an ABC|BA|BC stacking, which can also be understood as a two-layer twin\n  nucleus.  Relaxation of the atomic coordinates is performed in the direction\n  perpendicular to the fault plane\n\n- **get\\_unstable\\_stacking\\_fault\\_relaxed\\_energy\\_fcc** Retrieve the relaxed\n  unstable stacking fault energy (USFE) of a face-centered monoatomic cubic\n  crystal at zero temperature and a specified pressure.  The USFE corresponds to\n  the energy barrier for rigidly slipping one-half of an infinite crystal\n  relative to the other along a <112> direction (fcc partial dislocation\n  direction).  Relaxation of the atomic positions is performed perpendicular to\n  the fault plane.\n\n- **get\\_unstable\\_twinning\\_fault\\_relaxed\\_energy\\_fcc** Retrieve the relaxed\n  unstable twinning fault energy (UTFE) of a face-centered monoatomic cubic\n  crystal at zero temperature and a specified pressure.  The UTFE corresponds\n  to the energy barrier for rigidly slipping one part of an infinite crystal on\n  a {111} plane adjacent to a preexisting intrinsic stacking fault relative to\n  the other part along a <112> direction (fcc partial dislocation direction).\n  Relaxation of the atomic coordinates is performed perpendicular to the fault\n  plane.\n\n- **get\\_surface\\_energy\\_ideal\\_cubic** Retrieve ideal surface energy of a\n  high-symmetry surface in a cubic crystal comprised of one or more species at\n  zero temperature and pressure, as computed by the latest current version of\n  the SurfaceEnergyCubicCrystalBrokenBondFit Test Driver (TD\\_955413365818).\n\n- **get\\_surface\\_energy\\_relaxed\\_cubic** Retrieve free energy of a cubic relaxed\n  surface energy of a high-symmetry surface in a cubic crystal comprised of one\n  or more species at a given temperature and hydrostatic pressure.  This\n  corresponds to the 'relaxed' surface energy found by performing an energy\n  minimization.  At zero temperature, this corresponds to the potential energy\n  rather than the free energy.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/openkim/kim-query",
    "keywords": "kim-query,kim_query,openkim",
    "license": "CDDL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kim-query",
    "package_url": "https://pypi.org/project/kim-query/",
    "platform": "",
    "project_url": "https://pypi.org/project/kim-query/",
    "project_urls": {
      "Homepage": "https://github.com/openkim/kim-query"
    },
    "release_url": "https://pypi.org/project/kim-query/3.0.0/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.6",
    "summary": "Helper routines for querying the OpenKIM Repository",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9461321,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2ca020fbccbb082cbab474898eea67630283487b7f66594ec204a0f38fae60e",
          "md5": "de5ea181790e9dcaea182f479631b72f",
          "sha256": "9d82e773f8153f5a2d3dcc2a456f931ca857cecaf4e3758e6a9c9faccc45450d"
        },
        "downloads": -1,
        "filename": "kim_query-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de5ea181790e9dcaea182f479631b72f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17891,
        "upload_time": "2020-02-29T02:26:26",
        "upload_time_iso_8601": "2020-02-29T02:26:26.680355Z",
        "url": "https://files.pythonhosted.org/packages/f2/ca/020fbccbb082cbab474898eea67630283487b7f66594ec204a0f38fae60e/kim_query-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "245b9339ad282c52bb3c90d8b18fe5b327f148d5909ea636a0a556e45c73b9c3",
          "md5": "92a582b0076be3edbb2d1c752535edf8",
          "sha256": "b8fe405b3a5ac37db4d9c3febc71c316119b4aba9dc8e8d966100f9fa40dd537"
        },
        "downloads": -1,
        "filename": "kim-query-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "92a582b0076be3edbb2d1c752535edf8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28478,
        "upload_time": "2020-02-29T02:26:28",
        "upload_time_iso_8601": "2020-02-29T02:26:28.948630Z",
        "url": "https://files.pythonhosted.org/packages/24/5b/9339ad282c52bb3c90d8b18fe5b327f148d5909ea636a0a556e45c73b9c3/kim-query-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc972f8b7f0e0e84922cc5c0ddec03adcf4e33ea59a50c8f7606954ce25befbf",
          "md5": "7e5c83b74e3979eeba526b5000c21afa",
          "sha256": "83f1014fd5ed78d18e9cd46cb005eb773c03ae888306c3aaec0ab2e447355381"
        },
        "downloads": -1,
        "filename": "kim_query-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e5c83b74e3979eeba526b5000c21afa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18148,
        "upload_time": "2020-08-24T22:41:39",
        "upload_time_iso_8601": "2020-08-24T22:41:39.278787Z",
        "url": "https://files.pythonhosted.org/packages/cc/97/2f8b7f0e0e84922cc5c0ddec03adcf4e33ea59a50c8f7606954ce25befbf/kim_query-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4a523cd02bc32db6d9d95e516745cd3bca36ac25e0748d7dda78c664a48b0b7",
          "md5": "a7ae8ece23496d13667cd77f8c89282a",
          "sha256": "385e959bee1edbdad6391ec6372870cd68be13802793ee666dd004a8ea2d0644"
        },
        "downloads": -1,
        "filename": "kim-query-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7ae8ece23496d13667cd77f8c89282a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29241,
        "upload_time": "2020-08-24T22:41:40",
        "upload_time_iso_8601": "2020-08-24T22:41:40.535837Z",
        "url": "https://files.pythonhosted.org/packages/a4/a5/23cd02bc32db6d9d95e516745cd3bca36ac25e0748d7dda78c664a48b0b7/kim-query-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b9a8c320839ef4aa5d62903071e61edc82c7c55959b4086d3f2cca271cf90e8",
          "md5": "3e07c833e93420469c207c175ebe2616",
          "sha256": "42872e5a6e73c4290daba2e766aa6917e110da27cbdac344d32e4c355d0e1bd8"
        },
        "downloads": -1,
        "filename": "kim_query-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e07c833e93420469c207c175ebe2616",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18568,
        "upload_time": "2021-01-22T02:34:03",
        "upload_time_iso_8601": "2021-01-22T02:34:03.281081Z",
        "url": "https://files.pythonhosted.org/packages/8b/9a/8c320839ef4aa5d62903071e61edc82c7c55959b4086d3f2cca271cf90e8/kim_query-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec517002ecdbcc2cad92d73d5a8225fd2a8943bacdb766c7540dfb1f26d3eb40",
          "md5": "8a68560ebfc10fcd5123459aac2a65da",
          "sha256": "e8cf7147635984f37297765f69ccb77d7def7a8f41d1fbf5d8d2c8a94137a113"
        },
        "downloads": -1,
        "filename": "kim-query-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8a68560ebfc10fcd5123459aac2a65da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29625,
        "upload_time": "2021-01-22T02:34:04",
        "upload_time_iso_8601": "2021-01-22T02:34:04.410930Z",
        "url": "https://files.pythonhosted.org/packages/ec/51/7002ecdbcc2cad92d73d5a8225fd2a8943bacdb766c7540dfb1f26d3eb40/kim-query-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46aab2d99630792a675ddc68d2476a6a9f79a2c4edf80a556a086efae9a8d244",
          "md5": "c9de90d582a2503ac354e1562ffc1d8d",
          "sha256": "b681de14a030c2f38c899f07ed3ea9880aacbbc2800a246b18ae9a7c3481d6d8"
        },
        "downloads": -1,
        "filename": "kim_query-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c9de90d582a2503ac354e1562ffc1d8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18574,
        "upload_time": "2021-02-19T00:28:46",
        "upload_time_iso_8601": "2021-02-19T00:28:46.086342Z",
        "url": "https://files.pythonhosted.org/packages/46/aa/b2d99630792a675ddc68d2476a6a9f79a2c4edf80a556a086efae9a8d244/kim_query-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d31948dd16b308cd5572f778d5338b03101065b56515ba73148216b9ab45535",
          "md5": "c545ec426aa8d38ebba91c2370e9df98",
          "sha256": "f02031dab5e1c872ade93f5b52257d7f6ce3de8107dd52ac73661b00d26297af"
        },
        "downloads": -1,
        "filename": "kim-query-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c545ec426aa8d38ebba91c2370e9df98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29629,
        "upload_time": "2021-02-19T00:28:47",
        "upload_time_iso_8601": "2021-02-19T00:28:47.310984Z",
        "url": "https://files.pythonhosted.org/packages/6d/31/948dd16b308cd5572f778d5338b03101065b56515ba73148216b9ab45535/kim-query-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "46aab2d99630792a675ddc68d2476a6a9f79a2c4edf80a556a086efae9a8d244",
        "md5": "c9de90d582a2503ac354e1562ffc1d8d",
        "sha256": "b681de14a030c2f38c899f07ed3ea9880aacbbc2800a246b18ae9a7c3481d6d8"
      },
      "downloads": -1,
      "filename": "kim_query-3.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c9de90d582a2503ac354e1562ffc1d8d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18574,
      "upload_time": "2021-02-19T00:28:46",
      "upload_time_iso_8601": "2021-02-19T00:28:46.086342Z",
      "url": "https://files.pythonhosted.org/packages/46/aa/b2d99630792a675ddc68d2476a6a9f79a2c4edf80a556a086efae9a8d244/kim_query-3.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6d31948dd16b308cd5572f778d5338b03101065b56515ba73148216b9ab45535",
        "md5": "c545ec426aa8d38ebba91c2370e9df98",
        "sha256": "f02031dab5e1c872ade93f5b52257d7f6ce3de8107dd52ac73661b00d26297af"
      },
      "downloads": -1,
      "filename": "kim-query-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c545ec426aa8d38ebba91c2370e9df98",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 29629,
      "upload_time": "2021-02-19T00:28:47",
      "upload_time_iso_8601": "2021-02-19T00:28:47.310984Z",
      "url": "https://files.pythonhosted.org/packages/6d/31/948dd16b308cd5572f778d5338b03101065b56515ba73148216b9ab45535/kim-query-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}