{
  "info": {
    "author": "Brain Diseases Analysis Laboratory",
    "author_email": "galaz@vut.cz",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# Predictor API client\n\n![GitHub last commit](https://img.shields.io/github/last-commit/BDALab/predictor-api-client)\n![GitHub issues](https://img.shields.io/github/issues/BDALab/predictor-api-client)\n![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/BDALab/predictor-api-client)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/predictor-api-client)\n![GitHub top language](https://img.shields.io/github/languages/top/BDALab/predictor-api-client)\n![PyPI - License](https://img.shields.io/pypi/l/predictor-api-client)\n\nThis package provides a [PyPi-installable](https://pypi.org/project/predictor-api-client/) lightweight client application for the [Predictor API](https://github.com/BDALab/predictor-api/) RESTFull server application. The package implements `PredictorApiClient` class enabling fast and easy method-based calls to all endpoints accessible on the API. To make working with the client a piece of cake, it provides full-documented example scripts for each of the supported endpoints. For more information about the Predictor API, please read the official [readme](https://github.com/BDALab/predictor-api#readme) and [documentation](https://github.com/BDALab/predictor-api/tree/master/docs).\n\n_The full programming sphinx-generated docs can be seen in the [official documentation](https://predictor-api-client.readthedocs.io/en/latest/)_.\n\n**Endpoints**:\n1. predictor endpoints (`/predict` and `/predict_proba`)\n    1. `/predict` - calls `.predict` on the specified predictor.\n    2. `/predict_proba` - calls `.predict_proba` on the specified predictor.\n2. security endpoints (`/signup`, `/login`, and `/refresh`)\n    1. `/signup` - signs-up a new user.\n    2. `/login` - logs-in an existing user (obtains access and refresh authorization tokens).\n    3. `/refresh` - refreshes an expired access token (obtains refreshed authorization access token).\n\n**Contents**:\n1. [Installation](#Installation)\n2. [Configuration](#Configuration)\n3. [Data](#Data)\n4. [Examples](#Examples)\n5. [License](#License)\n6. [Contributors](#Contributors)\n\n---\n\n## Installation\n\n```\npip install predictor-api-client\n```\n\n## Configuration\n\nThe package provides the following configuration of the `PredictorApiClient` object during the instantiation:\n1. API deployment specific configuration: it supports the configuration of the `host` (IP address), `port` (port number), and other settings related to the deployment and operation of the Predictor API (for more information, see the `docs/`).\n2. API client specific configuration: it supports the configuration of the logging (`logging_configuration`). In this version, the package provides logging of the successful as well as unsuccessful `/predict` and `/predict_proba` endpoint calls (for more information, see the `docs/`).\n\n## Data\n\nThe full description of the requirements on input/output data (format, shape, etc.) can be found [here](https://github.com/BDALab/predictor-api#data).\n\n## Examples\n\nIn general, every time a client is used, the `PredictorApiClient` class must be instantiated. Next, all endpoint-specific data must be prepared. And finally, the endpoint-specific methods can be called. The full example scripts for each of the supported endpoints are placed at `./examples` (simplified examples are shown bellow).\n\n### Client instantiation\n\n```python\nfrom pprint import pprint\nfrom http import HTTPStatus\nfrom predictor_api_client.client import PredictorApiClient\n\n# Prepare the predictor API client settings\n#\n# --------------------------------------------- #\n# Must be same as for the running Predictor API #\n# --------------------------------------------- #\n#\n# 1. host (IP address)\n# 2. port (port number)\n# 3. request verification\n# 4. request timeout in seconds\nhost = \"http://127.0.0.1\"\nport = 5000\nverify = True\ntimeout = 2\n\n# Instantiate the predictor API client\nclient = PredictorApiClient(host=host, port=port, verify=verify, timeout=timeout)\n```\n\n### User sign-up\n\n```python\n# This example assumes the presence of the client instantiation code\n\n# TODO: prepare data for a new user (see the API's requirements on the password)\n#\n# 1. username\n# 2. password (e.g. can be generated with https://passwordsgenerator.net/)\nusername = \"<TODO: FILL-IN>\"\npassword = \"<TODO: FILL-IN>\"\n\nprint(\"\\n-- [01] example --\")\nprint(f\"Signing-up a new user with username: {username} and password: {password}\\n\")\n\n# Sign-up a new user\n\nresponse, status_code = client.sign_up(username, password)\n\n# Check the output\nif status_code == HTTPStatus.OK:\n    print(\"Successfully signed-up a new user\")\nelse:\n    print(f\"The request was unsuccessful ({status_code}): {response}\")\n\nprint(\"Response:\")\npprint(response)\n```\n\n### User log-in\n\n```python\n# This example assumes the presence of the client instantiation code\n\n# TODO: prepare data for an existing user (data from: user sign-up)\n#\n# 1. username\n# 2. password\nusername = \"<TODO: FILL-IN>\"\npassword = \"<TODO: FILL-IN>\"\n\nprint(\"\\n-- [02] example --\")\nprint(f\"Logging-in an existing user with username: {username} and password: {password}\\n\")\n\n# Log-in an existing user\nresponse, status_code = client.log_in(username, password)\n\n# Check the output\nif status_code == HTTPStatus.OK:\n    print(\"Successfully logged-in an existing user\")\nelse:\n    print(f\"The request was unsuccessful ({status_code}): {response}\")\n\nprint(\"Response:\")\npprint(response)\n```\n\n### Expired access token refresh\n\n```python\n# This example assumes the presence of the client instantiation code\n\n# TODO: prepare data for request authorization (refresh token from: user log-in)\nrefresh_token = \"<TODO: FILL-IN>\"\n\nprint(\"\\n-- [03] example --\")\nprint(\"Refreshing an expired access token\\n\")\n\n# Refresh an expired access token\nresponse, status_code = client.refresh_access_token(refresh_token)\n\n# Check the output\nif status_code == HTTPStatus.OK:\n    print(\"Successfully refreshed an expired access token\")\nelse:\n    print(f\"The request was unsuccessful ({status_code}): {response}\")\n\nprint(\"Response:\")\npprint(response)\n```\n\n### Prediction\n\n```python\n# This example assumes the presence of the client instantiation code\n\nimport numpy\n\n# TODO: prepare data for request authorization (access token and refresh token)\naccess_token = \"<TODO: FILL-IN>\"\nrefresh_token = \"<TODO: FILL-IN>\"\n\n# TODO: prepare model identifier\n#\n# Example:\n# model_identifier = \"dummy_predictor\"\nmodel_identifier = \"<TODO: FILL-IN>\"\n\n# TODO: prepare predictor data (feature values/labels)\n#\n# ---------------------------------------------------- #\n# Must meet the data requirements of the Predictor API #\n# ---------------------------------------------------- #\n#\n# Example (10 subjects, each having 100 1-D features):\n# feature_values = numpy.random.rand(10, 1, 100)\n# feature_labels = None\nfeature_values = \"<TODO: FILL-IN>\"\nfeature_labels = None\n\nprint(\"\\n-- [04] example --\")\nprint(f\"Calling for prediction(s) on a predictor identified with: {model_identifier}\\n\")\n\n# Make the prediction(s)\n#\n# Use one of the following:\n# 1. client.predict(...)\n# 2. client.predict_proba(...)\nresponse, status_code = client.predict(  # or client.predict_proba(...)\n    access_token=access_token,\n    refresh_token=refresh_token,\n    model_identifier=model_identifier,\n    feature_values=feature_values,\n    feature_labels=feature_labels)\n\n# Check the output\nif status_code == HTTPStatus.OK:\n    print(\"Successfully called .predict(...)/.predict_proba(...)\")\nelse:\n    print(f\"The request was unsuccessful ({status_code}): {response}\")\n\nprint(\"Response:\")\npprint(response)\n```\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## Contributors\n\nThis package is developed by the members of [Brain Diseases Analysis Laboratory](http://bdalab.utko.feec.vutbr.cz/). For more information, please contact the head of the laboratory Jiri Mekyska <mekyska@vut.cz> or the main developer: Zoltan Galaz <galaz@vut.cz>.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BDALab/predictor-api-client",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "predictor-api-client",
    "package_url": "https://pypi.org/project/predictor-api-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/predictor-api-client/",
    "project_urls": {
      "Homepage": "https://github.com/BDALab/predictor-api-client"
    },
    "release_url": "https://pypi.org/project/predictor-api-client/1.0.1/",
    "requires_dist": [
      "numpy",
      "requests",
      "json-tricks"
    ],
    "requires_python": ">=3.7",
    "summary": "Predictor API client",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12132757,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b51a8f13cf2babcbd5cf0944c20da1f0d0f7b948c2add70b7f03a29fd9e717e5",
          "md5": "f83f2175f7cf40c36e71ff7e99ff2b79",
          "sha256": "7e34745f85de16ea012c8d1cd45bf16e220ca4f4cc218ed21b0355c31f85d52e"
        },
        "downloads": -1,
        "filename": "predictor_api_client-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f83f2175f7cf40c36e71ff7e99ff2b79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10049,
        "upload_time": "2021-11-09T21:49:34",
        "upload_time_iso_8601": "2021-11-09T21:49:34.100180Z",
        "url": "https://files.pythonhosted.org/packages/b5/1a/8f13cf2babcbd5cf0944c20da1f0d0f7b948c2add70b7f03a29fd9e717e5/predictor_api_client-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7018c48610f2200af38341c83088bcbc70d9e95ae4af6cb593d744ef387dec2",
          "md5": "ab8f694477f08a0803f355035cb439ab",
          "sha256": "9b86325ca272d214e6d528dd12d24715cfad0ddaa675f902753bd0252f864114"
        },
        "downloads": -1,
        "filename": "predictor-api-client-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ab8f694477f08a0803f355035cb439ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10855,
        "upload_time": "2021-11-09T21:49:35",
        "upload_time_iso_8601": "2021-11-09T21:49:35.508232Z",
        "url": "https://files.pythonhosted.org/packages/b7/01/8c48610f2200af38341c83088bcbc70d9e95ae4af6cb593d744ef387dec2/predictor-api-client-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e0f8bccc5fc86ead5ee11f9573f4c67676ca24637d8e04166caaa6bb224fc37",
          "md5": "5437e906dafe75bea7ffe092e31a1acf",
          "sha256": "275ef86cad447b4d49b96885b1611f51114576747963b0d5137ef18b3dc18fe1"
        },
        "downloads": -1,
        "filename": "predictor_api_client-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5437e906dafe75bea7ffe092e31a1acf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10168,
        "upload_time": "2021-11-26T13:19:44",
        "upload_time_iso_8601": "2021-11-26T13:19:44.881975Z",
        "url": "https://files.pythonhosted.org/packages/4e/0f/8bccc5fc86ead5ee11f9573f4c67676ca24637d8e04166caaa6bb224fc37/predictor_api_client-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58e8b5e6dbb440dfbcb1e335c6a516566b37e0b934909a294722f93293ba01e6",
          "md5": "223c52a63974645066da75d09495ffca",
          "sha256": "faa42265e9b6c7eb3985a64bbb37231ac6081010c54bd0fad03dd486636141ba"
        },
        "downloads": -1,
        "filename": "predictor-api-client-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "223c52a63974645066da75d09495ffca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11110,
        "upload_time": "2021-11-26T13:19:46",
        "upload_time_iso_8601": "2021-11-26T13:19:46.775661Z",
        "url": "https://files.pythonhosted.org/packages/58/e8/b5e6dbb440dfbcb1e335c6a516566b37e0b934909a294722f93293ba01e6/predictor-api-client-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e0f8bccc5fc86ead5ee11f9573f4c67676ca24637d8e04166caaa6bb224fc37",
        "md5": "5437e906dafe75bea7ffe092e31a1acf",
        "sha256": "275ef86cad447b4d49b96885b1611f51114576747963b0d5137ef18b3dc18fe1"
      },
      "downloads": -1,
      "filename": "predictor_api_client-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5437e906dafe75bea7ffe092e31a1acf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10168,
      "upload_time": "2021-11-26T13:19:44",
      "upload_time_iso_8601": "2021-11-26T13:19:44.881975Z",
      "url": "https://files.pythonhosted.org/packages/4e/0f/8bccc5fc86ead5ee11f9573f4c67676ca24637d8e04166caaa6bb224fc37/predictor_api_client-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "58e8b5e6dbb440dfbcb1e335c6a516566b37e0b934909a294722f93293ba01e6",
        "md5": "223c52a63974645066da75d09495ffca",
        "sha256": "faa42265e9b6c7eb3985a64bbb37231ac6081010c54bd0fad03dd486636141ba"
      },
      "downloads": -1,
      "filename": "predictor-api-client-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "223c52a63974645066da75d09495ffca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11110,
      "upload_time": "2021-11-26T13:19:46",
      "upload_time_iso_8601": "2021-11-26T13:19:46.775661Z",
      "url": "https://files.pythonhosted.org/packages/58/e8/b5e6dbb440dfbcb1e335c6a516566b37e0b934909a294722f93293ba01e6/predictor-api-client-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}