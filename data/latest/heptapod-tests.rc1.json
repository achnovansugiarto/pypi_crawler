{
  "info": {
    "author": "octobus",
    "author_email": "contact@octobus.net",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Heptapod automated functional tests\n\nThis source tree is both a library to write functional tests involving\nHeptapod and the standard set of functional tests of Heptapod itself.\n\nCaveats:\n\n- Usage as a library is totally undocumented at this point.\n- The distribution on pypi.org does not contain the tests of Heptapod\n  itself. In other words, it contains the library part only.\n- This README is mostly about the tests of Heptapod itself.\n\n\nWARNING: to test production instances, use the dedicated mode exclusively. Other\nmodes assume that you are ready to **throw all data away** after the test\nrun, and hence are suitable at most for preflight full testing of a fresh\nproduction instance.\n\n## Installation\n\n### Client-side install\n\n#### Mercurial\n\nThe tests need a working `hg` executable, available on `$PATH`, with the\nfollowing extensions available:\n\n- evolve and topic: [hg-evolve](https://pypi.org/project/hg-evolve) ≥ 9.3.0\n- configexpress: [hg-configexpress](https://pypi.org/project/hg-configexpress)\n\n#### Test harness (Selenium)\n\n- tox: `pip install --user tox`\n- [ChromeDriver](https://sites.google.com/a/chromium.org/chromedriver/home)\n\n  For direct installation on the system running the tests:\n\n  + Fedora 29 to 33: `dnf install chromedriver`\n  + Debian 9 to 10, Ubuntu < 20.04: `apt install chromium-driver`\n  + Ubuntu ≥ 20.04: the `chromium-driver` package actually installs a snap,\n    which can be problematic in some environments. See how it is done in the\n    `docker-inside` job of our [CI pipelines](.gitlab-ci.yml).\n\n  Another option is to use a Selenium RemoteWebDriver, which proxies the\n  actual web browsing through a dedicated system. Selenium provides the\n  `selenium/standalone-chrome` Docker image for these purposes.\n\nAll further dependencies will be installed by the first run.\n\n### Heptapod server requirements\n\nThese tests can work against Heptapod servers provided either as\n\n- (default) local Docker containers manageable by the system user running the\n  tests, or\n- installed from source and being run by the same user as the tests, or\n- completely remote, skipping some of the tests, or\n- production, relying on users with at most ownership of a dedicated projects\n  group, and running a subset of suitable tests.\n\nExcept in production server mode, the Gitlab root password\nwill be initialized by the first test to run.\nThe tests will fail if the Gitlab root password is already set\nand does not match the expected one.\n\n\n\n### Default Docker setup\n\nIn the Docker case, the expected container name is by default `heptapod`.\n\nBy default, the tests expect to be running on the Docker host, and that the\ncontainer can initiate TCP connections to the host, identified as the main\nIPv4 gateway of the container. Don't forget to *allow incoming TCP connections\nfrom the container in your firewall*, if you have one. You can also pass a\nreachable address explicitely with `--heptapod-reverse-call-host` or disable\nsuch tests by passing an empty string as address.\n\nThe container HTTP and SSH ports must be forwarded by default to `heptapod:81`\nand `heptapod:2022`. This is usually done by making the `heptapod` host name\nresolve to a loopback IP address, such as 127.0.0.2, and forwarding the\ncontainer ports like this:\n\n```\ndocker run --publish 127.0.0.2:2022:22 --publish 127.0.0.2:81:22\n```\n\nUsing a dedicated host name and IP address helps preventing confusion in\nthe user's `.ssh/known_hosts` file.\n\n## Running the tests\n\n`tox` is the executable launching the tests. It is also responsible to\nsetup Python libraries used in the tests. The tests themselves are\nwritten with [pytest](https://docs.pytest.org).\n\nAll `tox` commands have to be run from the root of this repository.\n\nIt is possible to pass down options to the underlying `pytest` command:\n\n```\n    tox -- --heptapod-url URL -k push_basic\n```\n\nAll Heptapod specific options take the `--heptapod-some-option` form. For\nthe full list, do\n\n```\n   tox -- --help\n```\n\n### Common network options\n\nThese are available in all cases\n\n- `--heptapod-url` (default `http://heptapod:81`): HTTP URL of the tested\n  Heptapod instance. It must use a resolvable host *name*, not an IP address.\n  It does not have to be resolved through DNS, an `/etc/host` entry pointing\n  to the loopback interface is fine.\n- `--heptapod-ssh-port` (default 2022): SSH port of the tested Heptapod\n  instance. The same host name will be used as for HTTP. If the host name\n  resolves to the loopback interface, it is advised to tie it to a dedicated\n  address, such  as `127.0.0.2`, to minimize risks with your SSH\n  `known_hosts` file.\n- `--heptapod-reverse-call-host`: address that the Heptapod server can use\n  to reach the system running theses tests (necessary to test outbound\n  connections, such as web hooks).\n- `--heptapod-root-password` (default `5iveL!fe`). The password to use and maybe\n  set for the `root` user. The default value is the same as with the GitLab\n  Development Kit (GDK).\n\n### Running the tests concurrently\n\nUse the `---tests-per-worker` option only.\n\nDo *NOT* use the `--workers` option: it would setup the `Heptapod` session\nfixture several times, leading to problems with GitLab user tokens and other\nshared data that are session-local.\n\n### Testing a Docker container\n\nBeing the default, this is the simplest. If you followed the default namings\nand the current system user can managed Docker containers,\njust running `tox` will launch the whole tests suite\n\nSpecific options:\n\n- `--heptapod-container-name` (default `heptapod`)\n\n### Testing a local install from source.\n\nYou will need to run the tests and the Heptapod server under the same user\nand to pass some mandatory options:\n\nMinimal example:\n\n```\n~/heptapod/heptapod-tests $ tox -- --heptapod-source-install\\\n    --heptapod--repositories-root ~/heptapod/gdk/repositories-root\n```\n\n### Testing a remote server\nMandatory reminder: **Never, ever run these tests on an\n  Heptapod server if you're not prepared to throw all its data**\n\nyou'll have to provide the `--heptapod-remote` option, and probably be explicit\nabout all network options:\n\n```\n~/heptapod/heptapod-tests $ tox -- --heptapod-remote \\\n  --heptapod-ssh-port 22 \\\n  --heptapod-url https://heptapod.test \\\n  --heptapod-root-password SECRET\n```\n\nThe root password option is listed because you probably don't want to have\nan instance with the default root password available on the internet.\n\n### Testing a production instance\n\n*New on 2021-02-18*: see !80\n\nTo run the tests suitable for production instances, you will need first to\nprepare:\n\n- a projects group entirely dedicated to these functional tests\n- a dedicated user that owns the dedicated group (more users will probably be\n  needed in the future).\n\nThe production mode is activated by an explicit command-line option. Another\noption is used to pass the dedicated user credentials.\n\nExample:\n\n```\n~/heptapod/heptapod-tests $ tox -- --heptapod-prod-server \\\n    --heptapod-prod-group-owner-credentials ID:USERNAME:EMAIL:PASSWORD \\\n    --heptapod-url https://foss.heptapod.net \\\n    --heptapod-ssh-port 22 \\\n    --heptapod-ssh-user hg\n```\n\nwhere ID is the numeric user id, and USERNAME is the user login name\n(e.g `testfonct`).\n\nTo launch tests on an instance tied to the Clever Cloud SSO,\nuse additionally the `--heptapod-clever-cloud-sso` option.\n\n\nRemarks and safety:\n\n- The user password must be fully operational: the functional tests won't\n  take care of the finalization sequence that occurs at first login.\n- Do not give the dedicated user any rights outside of the dedicated groups.\n- It is advisable to block the dedicated user when not in use.\n- Be prepared to receive email for Merge Requests on the dedicated user address.\n  Arguably, this is part of the testing.\n\n\n### Docker: choosing the version to test\n\nThe versions installed in the Docker image you're using are specified by the\n[heptapod_revisions.json](https://dev.heptapod.net/heptapod/omnibus/blob/branch/heptapod/heptapod_docker/heptapod_revisions.json) file.\n\nTo test your local clone of heptapod/heptapod:\n\n- mount your local `heptapod` clone in the container (assuming below it's seen\n  as `/home/heptapod-rails` from the container)\n- execute the following in the container:\n\n  ```\n  cd /var/opt/gitlab/embedded/service/gitlab-rails\n  hg pull --config phases.publish=False /home/heptapod-rails\n  hg up -r WISHED_REVISION\n  gitlab-ctl restart unicorn\n  ```\n\nIf you want to try changes to other components (e.g., `hg-git`), do something similar.\nThe paths can be seen in the Docker build logs, or you can read them in the [install script](https://dev.heptapod.net/heptapod/docker/blob/branch/default/heptapod/assets/install_heptapod.py)\n\n## Adding new tests\n\n### Branch and topics rules\n\nThe convention is that the tests in the default branch should pass against\nthe current `octobus/heptapod:latest` Docker image, so\n\n* if you want to share a bug reproduction, please open a new topic\n* even if a bug fix in heptapod has landed, please wait for the Docker push\n  before publishing the corresponding tests\n* tests can be published before a Heptapod new release, but please have the\n  corresponding fixes landed and pushed to Docker Hub first.\n\nIf there is an active stable branch (e.g. `heptapod-0-6-stable` or similar),\nthen the tests of that branch must pass against the latest release version\ncorresponding to that branch. The same conclusions follow.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://foss.heptapod.net/heptapod/heptapod-tests",
    "keywords": "hg mercurial git heptapod gitlab selenium REST GraphQL",
    "license": "GPL3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "heptapod-tests",
    "package_url": "https://pypi.org/project/heptapod-tests/",
    "platform": null,
    "project_url": "https://pypi.org/project/heptapod-tests/",
    "project_urls": {
      "Homepage": "https://foss.heptapod.net/heptapod/heptapod-tests"
    },
    "release_url": "https://pypi.org/project/heptapod-tests/0.9.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Heptapod Functional Tests",
    "version": "0.9.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14526122,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61ff3833992c631bde67dea4b82a2a0a9cc3c37ca7682a9267cef0cb7468f467",
          "md5": "5308995a500809de1037d5cd1888f697",
          "sha256": "670332e2dd4b0cd6ae4aca4b24bba8b142c47accda14c1ba23cc1890bc583153"
        },
        "downloads": -1,
        "filename": "heptapod-tests-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5308995a500809de1037d5cd1888f697",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 56365,
        "upload_time": "2022-07-23T20:01:25",
        "upload_time_iso_8601": "2022-07-23T20:01:25.138434Z",
        "url": "https://files.pythonhosted.org/packages/61/ff/3833992c631bde67dea4b82a2a0a9cc3c37ca7682a9267cef0cb7468f467/heptapod-tests-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61ff3833992c631bde67dea4b82a2a0a9cc3c37ca7682a9267cef0cb7468f467",
        "md5": "5308995a500809de1037d5cd1888f697",
        "sha256": "670332e2dd4b0cd6ae4aca4b24bba8b142c47accda14c1ba23cc1890bc583153"
      },
      "downloads": -1,
      "filename": "heptapod-tests-0.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5308995a500809de1037d5cd1888f697",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 56365,
      "upload_time": "2022-07-23T20:01:25",
      "upload_time_iso_8601": "2022-07-23T20:01:25.138434Z",
      "url": "https://files.pythonhosted.org/packages/61/ff/3833992c631bde67dea4b82a2a0a9cc3c37ca7682a9267cef0cb7468f467/heptapod-tests-0.9.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}