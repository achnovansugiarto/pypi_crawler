{
  "info": {
    "author": "Martin \"March\" Miguel",
    "author_email": "m2.march@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Run Audio Experiment\n\n`runAudioExperiment` is an utility to run an experimental setup where input\ntimes must be recorded with precision synchronized to an audio stimulus. The \nutility was developed in the context of _\"Simple and cheap setup for measuring \ntimed responses to auditory stimuli\"_ (Miguel et. al., under review).\n\nThe utility works by executing several trials that consist of reproducing an\nauditory stimulus while simultaneously recording the signal of an input device.\nAs an output, the utility saves an audio file for each trial. With the expected\nsetup, each audio file has the input signal in one channel and the stimulus\nsignal in another. Recording both signals (the input and the stimulus loopback)\nallows extracting the input times relative to the stimulus signal by\nsynchronizing the recording with the orignal stimulus (see utility\n[`rec2taps`](https://github.com/m2march/rec2taps)).\n\nFor details on how to create the setup, please see Miguel et. al., under review.\n\n\n## Installation\n\n* From pypi:\n\n```\n    pip install m2-runAudioExperiment\n```\n\n* From sources:\n\n```\n    git clone https://github.com/m2march/runAudioExperiment.git\n    cd runAudioExperiment\n    python setup.py install\n```\n\nOnce installation is done, the script `runAudioExperiment` should be available\nin the command line interface.\n\n\n# Usage\n\n    runAudioExperiment trial_config stimuli_list output_dir\n\n* `trial_config` is a path to a yaml format file describing the configuration\n    of the execution\n* `stimuli_list` is a path to a txt file declaring the path to the stimuli\n    audios, one per line, relative to the current dir\n* `output_dir` is a path to a directory where output from the experiment\n    will be written. In case the directory does not exists, it will be created.\n    If the directory exists, it must be empty.\n\n\n## Trials\n\nEach trial execution consists of the following steps:\n\n* A black screen is shown for a specified duration\n* Screen changes color and white noise with a tone is played\n* A black screen is shown and the stimulus is played while recording the\n  input device. A silence time after the stimulus ended can be configured.\n* Screen changes color and white noise with a tone is played\n\nTrials are executed back to back. \n\n\n## Configuration\n\nThe following is an example of a trial configuration file:\n\n    black_duration: 600         # Duration of black screen (in ms)\n    c1_duration: [1500, 3000]   # Duration of first noise screen (in ms)\n    c1_color: \"#afd444\"         # Color of first noise screen\n    c2_duration: 000            # Duration of second noise screen (in ms)\n    c2_color: \"#afd444\"         # Color of second noise screen\n    randomize: false            # Whether trial order should be randomized\n    sound_device: \"USB Audio\"   # String or int identifying the sound deviced used\n    silence_duration: 1500      # Duration of silence after stimuli playback\n\nDurations may be specified as a single number or as a list of two numbers. If\nit is a single number, it specifies the duration of the section. Otherwise, the\nduration will be a random number between the two defined ones. If the duration\nis 0, the section is skipped.\n\n`sound_device` is a string used to locate the sound device to be used. In our\nproposed setup, an external USB card is usted. A list of available devices\ncan be obtained by executing:\n\n    `runAudioExperiment -l`\n\n\n## Output\n\nAfter the experiment is executed, the following files are generated in\n`output_dir`:\n\n* `experiment_settings.json`: a copy of the configuration defined in\n    `trial_config` in json format. The configuration is extended with the\n    complete information of the selected sound device.\n* `trial_settings.csv`: a csv formatted table describing the executed trials.\n    This table allows knowing the duration of the sections where duration was\n    specified as an interval. It also presents the order in which the stimulus\n    were presented in case the `randomize` setting was set to `true`.\n* `*.rec.*`: a serie of audio files are generated, one per trial, with the\n    recording of the input signal and the stimulus lookback. The files are\n    prefixed with the basename of the stimulus file and end with a `.rec`\n    extension continued with the original extension of the stimulus file.\n\n\n### Example execution\n\nThe directory `example` contains example data to test run the utility and see\nits workings and results. A test run can be done as so:\n\n    $> cd example\n    $> runAudioExperiment test_config.yaml stimuli_3.txt output\n\nThis will run the experiment with three stimuli and create a new folder named\n`output` were recordings and `trial_settings.csv` will be output. \n\nBefore using the utility it may be necessary to configure the `sound_device`\nconfiguration in `test_config.yaml` to refer to a sound card available in the\ncomputer. Use `runAudioExperiment -l` to list options.\n\n### Caveat in the duration of the sections\n\nThe duration of the sections may differ slightly from the specifications,\nmainly due to the delay in starting playback in the soundcard. Added delay is\naround 20ms. The `--debug-durations` flag instructs the utility to write ohe\nactual duration of the sections in an extra `trial_durtions.csv` file.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/m2march/runAudioExperiment",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "m2-runAudioExperiment",
    "package_url": "https://pypi.org/project/m2-runAudioExperiment/",
    "platform": "",
    "project_url": "https://pypi.org/project/m2-runAudioExperiment/",
    "project_urls": {
      "Homepage": "https://github.com/m2march/runAudioExperiment"
    },
    "release_url": "https://pypi.org/project/m2-runAudioExperiment/0.9.0/",
    "requires_dist": [
      "psychopy",
      "pydub",
      "numpy",
      "sounddevice",
      "fuzzywuzzy",
      "pyyaml",
      "pandas",
      "scipy"
    ],
    "requires_python": "",
    "summary": "Library and utility to run an tapping audio experiment. From \"Simple and cheap setup for measuring timed responses to auditory stimuli\" (Miguel et. al., under review).",
    "version": "0.9.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7626675,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a87cca3e40ef1f6d56ca919c124e0f70e9203233ad84d11b211f1c95f29cbe7",
          "md5": "df197fd4e76f45f4e49f290e890db5c5",
          "sha256": "daa195c4e8e4d8066ae83d1703c57a6bf52d3385657376d5c2922549edf8c3b7"
        },
        "downloads": -1,
        "filename": "m2_runAudioExperiment-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df197fd4e76f45f4e49f290e890db5c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12129,
        "upload_time": "2020-07-03T23:02:52",
        "upload_time_iso_8601": "2020-07-03T23:02:52.400382Z",
        "url": "https://files.pythonhosted.org/packages/3a/87/cca3e40ef1f6d56ca919c124e0f70e9203233ad84d11b211f1c95f29cbe7/m2_runAudioExperiment-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec83f29666ac2c9f90cdceb4a0e3136f89cda2a456028cfa08a90fe8e475e980",
          "md5": "539d1d3598b1f6826ce01fece03f354a",
          "sha256": "260eaa2875ef45c5374ac3ac2691815b7e0e8fc290253a3683b5b4ec2571951d"
        },
        "downloads": -1,
        "filename": "m2-runAudioExperiment-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "539d1d3598b1f6826ce01fece03f354a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10946,
        "upload_time": "2020-07-03T23:02:54",
        "upload_time_iso_8601": "2020-07-03T23:02:54.867115Z",
        "url": "https://files.pythonhosted.org/packages/ec/83/f29666ac2c9f90cdceb4a0e3136f89cda2a456028cfa08a90fe8e475e980/m2-runAudioExperiment-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a87cca3e40ef1f6d56ca919c124e0f70e9203233ad84d11b211f1c95f29cbe7",
        "md5": "df197fd4e76f45f4e49f290e890db5c5",
        "sha256": "daa195c4e8e4d8066ae83d1703c57a6bf52d3385657376d5c2922549edf8c3b7"
      },
      "downloads": -1,
      "filename": "m2_runAudioExperiment-0.9.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "df197fd4e76f45f4e49f290e890db5c5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12129,
      "upload_time": "2020-07-03T23:02:52",
      "upload_time_iso_8601": "2020-07-03T23:02:52.400382Z",
      "url": "https://files.pythonhosted.org/packages/3a/87/cca3e40ef1f6d56ca919c124e0f70e9203233ad84d11b211f1c95f29cbe7/m2_runAudioExperiment-0.9.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec83f29666ac2c9f90cdceb4a0e3136f89cda2a456028cfa08a90fe8e475e980",
        "md5": "539d1d3598b1f6826ce01fece03f354a",
        "sha256": "260eaa2875ef45c5374ac3ac2691815b7e0e8fc290253a3683b5b4ec2571951d"
      },
      "downloads": -1,
      "filename": "m2-runAudioExperiment-0.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "539d1d3598b1f6826ce01fece03f354a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10946,
      "upload_time": "2020-07-03T23:02:54",
      "upload_time_iso_8601": "2020-07-03T23:02:54.867115Z",
      "url": "https://files.pythonhosted.org/packages/ec/83/f29666ac2c9f90cdceb4a0e3136f89cda2a456028cfa08a90fe8e475e980/m2-runAudioExperiment-0.9.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}