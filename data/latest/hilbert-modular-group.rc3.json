{
  "info": {
    "author": "Fredrik Stromberg",
    "author_email": "fredrik314@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: C",
      "Programming Language :: C++",
      "Programming Language :: Cython",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "# Hilbert Modular Groups\n\nThis repository contains a python package `hilbert_modgroup` that implements algorithms \nfor Hilbert modular groups, in particular a reduction algorithm. The implementation is written in Python \nand is dependent on SageMath.\n\n## Requirements\n- SageMath v9.4+ (https://www.sagemath.org/)\n\n## Installation\n### Using sage pip\nThis package needs to be installed in the virtual environment provided by SageMath, and it is therefore necessary \nto run the following command \n```console\n$ sage -pip install --no-build-isolation hilbert-modular-group\n```\n**Note**: The `--no-build-isolation` is necessary as the compiler needs access \nto certain library files from the sage installation and SageMath itself is \ntoo large to be required as a build dependency. \nAs an alternative to this flag you can also specify the environment variable \nSAGE_LIB explicitly.\n\n### From git source\nIf the SageMath executable `sage` is in the current path you can install from source using the Makefile\n\n```console\n$ git clone https://github.com/fredstro/hilbertmodgroup.git\n$ cd hilbertmodgrup\n$ make install\n```\n\n### Docker\nIf you do not have SageMath installed, but you have docker you can use install this package\nin a docker container built and executed using e.g. `make docker-sage` or `make docker-examples`\n\n\n## Usage\nThe package can be imported and used as any other package. \nFor example, to find the reduction of the point given by [1+i,1+i] in H^2 \nwith respect to the Hilbert modular group of Q joint by square-root of 5 write: \n\n```\nsage: from hilbert_modgroup.all import *\nsage: H1=HilbertModularGroup(5)\nsage: P1=HilbertPullback(H1)\nsage: z = UpperHalfPlaneProductElement([1+I,1+I])\nsage: P1.reduce(z)\n[1.00000000000000*I, 1.00000000000000*I]\nsage: z = UpperHalfPlaneProductElement([0.25+I/2,1+I])\nsage: P1.reduce(z) # abs tol 1e-10\n[0.694427190999916 + 0.611145618000168*I, -0.309016994374947 + 1.30901699437495*I]\nsage: P1.reduce(z, return_map=True)[1]\n[-1/2*a + 1/2  1/2*a + 1/2]\n[-1/2*a + 1/2            0]\n\n```\nFor more examples see the embedded doctests (search for `EXAMPLES`) as well as\nthe `/examples` directory which contains Jupyter notebook with more extensive \nexamples corresponding to the paper\n\"Reduction Algorithms for Hilbert Modular Groups\" by F. Stromberg. (Reference to appear)\n\n## Examples\n\nThe directory `/examples` contains Jupyter notebooks with example code to illustrate the interface and functionality of this package. \nYou can either open them manually from SageMath or run one of the following commands:\n`make examples`\n`make docker-examples`\nwhich will start up a Jupyter notebook server from sagemath either locally or in a docker container. \n\n## Community Guidelines\n\n### How to Contribute?\n- Open an issue on GitHub and create a pull / merge request against the `develop` branch.\n### How to report an issue or a problem? \n- First check if the issue is resolved in the `develop` branch. If not, open an issue on GitHub. \n### How to seek help and support?\n- Contact the maintainer, Fredrik Stromberg, at: fredrik314@gmail.com (alternatively at fredrik.stromberg@nottingham.ac.uk)\n\n## Development and testing\n\nThe make file `Makefile` contains a number of useful commands that you can run using \n```console\n$ make <command>\n```\nThe following commands are run in your local SagMath environment:\n1. `build` -- builds the package in place (sometimes useful for development).\n2. `sdist` -- create a source distribution in /sdist (can be installed using `sage -pip install sdist/<dist name>`)\n3. `install` -- build and install the package in the currently active sage environment\n4. `clean` -- remove all build and temporary files\n5. `test` -- run sage's doctests (same as `sage -t src/*`)\n6. `examples` -- run a Jupyter notebook with the SageMath kernel initialised at the `/examples` directory.\n7. `tox` -- run `sage -tox` with all environments: `doctest`, `coverage`, `pycodestyle`, `relint`, `codespell`\n   Note: If your local SageMath installation does not contain tox this will run `sage -pip install tox`.\n\nThe following commands are run in an isolated docker container \nand requires docker to be installed and running:\n1. `docker` -- build a docker container with the tag `hilbertmodgroup-{GIT_BRANCH}`\n2. `docker-rebuild` -- rebuild the docker container without cache\n3. `docker-test` -- run SageMath's doctests in the docker container\n4. `docker-examples` -- run a Jupyter notebook with the SageMath kernel initialised at the `/examples` directory \n  and exposing the notebook at http://127.0.0.1:8888. The port used can be modified by \n5. `docker-tox` -- run tox with all environments: `doctest`, `coverage`, `pycodestyle`, `relint`, `codespell`. \n6. `docker-shell` -- run a shell in a docker container\n7. `docker-sage` -- run a sage interactive shell in a docker container\n\nThe following command-line parameters are available \n- `NBPORT` -- set the port of the notebook for `examples` and `docker-examples`  (default is 8888)\n- `TOX_ARGS` -- can be used to select one or more of the tox environments (default is all)\n- `REMOTE_SRC` -- set to 0 if you want to use the local source instead of pulling from gitHub (default 1)\n- `GIT_BRANCH` -- the branch to pull from gitHub (used if REMOTE_SRC=1)\n\n### Example usage\nRun tox coverage on the branch `main` from gitHub:\n\n`make docker-tox REMOTE_SRC=1 GIT_BRANCH=main TOX_ARGS=coverage`\n\nRun doctests on the local source with local version of sage:\n\n`make tox TOX_ARGS=doctest`\n\nRun relint on the local source with docker version of sage:\n\n`make docker-tox REMOTE_SRC=0 TOX_ARGS=relint`\n\n## Development\n\n### GitHub Workflow\n\n- There are two long-lived branches `main` and `develop`.\n- The `develop` branch is used for development and can contain new / experimental features.  \n- Pull-requests should be based on `develop`.\n- Releases should be based on `main`.\n- The `main` branch should always be as stable and functional as possible. In particular, merges should always happen from `develop` into `main`. \n- Git-Flow is enabled (and encouraged) with feature branches based on `develop` and hotfixes based on `main`. \n\n### GitHub Actions\n\nEach commit is tested and checked using gitHub actions with tox running:\n- `doctest` -- run all doctests\n- `coverage` -- ensure that all functions and classes are documented \n- `pycodestyle-minimal` -- ensure PEP8 style guide is followed (except we allow max line length 99)\n- `relint` -- relint against some patterns taken from the SageMath source (config file .relint.yaml)\n- `codespell` -- spellchecker\n\nTo make sure that your commit passes all tests you should `make tox` or `make docker-tox REMOTE_SRC=0` on the command line.\n\n### Versions\n\nVersioning of this project is managed by setuptools_scm.\nTo bump the version create a git tag `x.y.z` and the file \n `src/hilbert_modgroup/version.py` will then be automatically updated to contain \n```\nversion = 'x.y.z.???'\nversion_tuple = (x, y, z, '???')\n```\nwhere ??? depends on the state of the current directory. \nIf you are creating a new version to release the source directory should be clean.\n\n### PyPi\n\nTo upload new versions to PyPi: \n1. `make sdist` -- creates a source distribution `dist/hilbert_modular_group-x.y.z`\n2. `twine check dist/hilbert_modular_group-x.y.z`\n3. `twine upload --repository pypi dist/hilbert_modular_group-z.y.z`",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fredstro/hilbertmodgroup",
    "keywords": "\"hilbert modular groups,reduction algorithms\"",
    "license": "GPL v3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hilbert-modular-group",
    "package_url": "https://pypi.org/project/hilbert-modular-group/",
    "platform": "any",
    "project_url": "https://pypi.org/project/hilbert-modular-group/",
    "project_urls": {
      "Bug Tracker": "https://github.com/fredstro/hilbertmodgroup/issues",
      "Homepage": "https://github.com/fredstro/hilbertmodgroup",
      "Source Code": "https://github.com/fredstro/hilbertmodgroup/"
    },
    "release_url": "https://pypi.org/project/hilbert-modular-group/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Algorithms for Hilbert modular groups",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13444204,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "830c8d0f07f1e6044a91a59b6e2c44ac1371f0c9d7e3bf4f701391f93871306c",
          "md5": "68a08404cdcfd546804e171ae7d09ee5",
          "sha256": "ab84e845e704e19a00a1125630ab9279c2f32839d38173e8d464127090745bad"
        },
        "downloads": -1,
        "filename": "hilbert_modular_group-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "68a08404cdcfd546804e171ae7d09ee5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 150668,
        "upload_time": "2022-01-20T00:28:17",
        "upload_time_iso_8601": "2022-01-20T00:28:17.056309Z",
        "url": "https://files.pythonhosted.org/packages/83/0c/8d0f07f1e6044a91a59b6e2c44ac1371f0c9d7e3bf4f701391f93871306c/hilbert_modular_group-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "178063cb766649a345cfeab3c90557406b5c58f1487b1ee67f61b3934593f9e7",
          "md5": "7d860454e01328262f7f240b09005e2a",
          "sha256": "bda28f61bb8d73158c812a767863bf5b5af29526de71fbee8f177793722d1b83"
        },
        "downloads": -1,
        "filename": "hilbert_modular_group-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7d860454e01328262f7f240b09005e2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 68138,
        "upload_time": "2022-02-21T16:33:22",
        "upload_time_iso_8601": "2022-02-21T16:33:22.661642Z",
        "url": "https://files.pythonhosted.org/packages/17/80/63cb766649a345cfeab3c90557406b5c58f1487b1ee67f61b3934593f9e7/hilbert_modular_group-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00499283d6ec19a016336ffa009c15c8f14038dcf0474e368673f6c9528a3eef",
          "md5": "ff18e8cd8982f910c40f8cce2b092b65",
          "sha256": "f78f7b26a84b0b76023db0c3dbce03ca231ee1c46d09e12d082cd1e07a3b934c"
        },
        "downloads": -1,
        "filename": "hilbert_modular_group-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ff18e8cd8982f910c40f8cce2b092b65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 71090,
        "upload_time": "2022-04-07T17:36:55",
        "upload_time_iso_8601": "2022-04-07T17:36:55.660336Z",
        "url": "https://files.pythonhosted.org/packages/00/49/9283d6ec19a016336ffa009c15c8f14038dcf0474e368673f6c9528a3eef/hilbert_modular_group-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00499283d6ec19a016336ffa009c15c8f14038dcf0474e368673f6c9528a3eef",
        "md5": "ff18e8cd8982f910c40f8cce2b092b65",
        "sha256": "f78f7b26a84b0b76023db0c3dbce03ca231ee1c46d09e12d082cd1e07a3b934c"
      },
      "downloads": -1,
      "filename": "hilbert_modular_group-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ff18e8cd8982f910c40f8cce2b092b65",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 71090,
      "upload_time": "2022-04-07T17:36:55",
      "upload_time_iso_8601": "2022-04-07T17:36:55.660336Z",
      "url": "https://files.pythonhosted.org/packages/00/49/9283d6ec19a016336ffa009c15c8f14038dcf0474e368673f6c9528a3eef/hilbert_modular_group-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}