{
  "info": {
    "author": "Xiaowen Ying",
    "author_email": "shawnying.inbox@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<div align=\"center\">\n\n![TorchShow Logo](https://raw.githubusercontent.com/xwying/torchshow/master/imgs/torchshow.png)\n\n[![PyPI version](https://badge.fury.io/py/torchshow.svg)](https://badge.fury.io/py/torchshow)\n[![Downloads](https://static.pepy.tech/personalized-badge/torchshow?period=total&units=international_system&left_color=grey&right_color=brightgreen&left_text=Downloads)](https://pepy.tech/project/torchshow)\n![License](https://img.shields.io/github/license/xwying/torchshow?color=brightgreen)\n\n</div>\n\n----\n\nTorchshow visualizes your data in one line of code. It is designed to help debugging Computer Vision project.\n\nTorchshow automatically infers the type of a tensor such as RGB images, grayscale images, binary masks, categorical masks (automatically apply color palette), etc. and perform necessary unnormalization if needed. \n\n**Supported Type:**\n\n- [x] RGB Images\n- [x] Grayscale Images\n- [x] Binary Mask\n- [x] Categorical Mask (Integer Labels)\n- [x] Multiple Images\n- [x] Videos\n- [x] Multiple Videos\n- [x] Optical Flows (powered by [flow_vis](https://github.com/tomrunia/OpticalFlow_Visualization))\n\n\n\n## What's New in v0.5.0\n- Support specifying the color map for grayscale image. \n- Support PIL Image.\n- Support filenames as input.\n- Addinng `ts.overlay()` API which can be used to blend multiple plots. See [examples](#12-overlay-visualizations).\n- Fix bugs when unnormalize with customize mean and std.\n\nSee the complete [changelogs](changelogs.md).\n\n\n## Installation\nInstall from [PyPI](https://pypi.org/project/torchshow/):\n\n```bash\npip install torchshow\n```\n\nAlternatively, you can install directly from this repo to test the latest features.\n\n```bash\npip install git+https://github.com/xwying/torchshow.git@master\n```\n\n\n## Basic Usage\n\nThe usage of TorchShow is extremely simple. Simply import the package and visualize your data in one line:\n\n```python\nimport torchshow as ts\nts.show(tensor)\n```\n\nIf you work on a headless server without display. You can use `ts.save(tensor)` command (since version 0.3.2).\n\n```python\nimport torchshow as ts\nts.save(tensor) # Figure will be saved under ./_torchshow/***.png\nts.save(tensor, './vis/test.jpg') # You can specify the save path.\n```\n\n## API References\n\nPlease check [this page](./API.md) for detailed API references.\n\n\n## Examples\n\n### Table of Contents\n- [Visualizing Image Tensor](#1-visualizing-image-tensor)\n- [Visualizing Mask Tensors](#2-visualizing-mask-tensors)\n- [Visualizing Batch of Tensors](#3-visualizing-batch-of-tensors)\n- [Visualizing Channels in Feature Maps](#4-visualizing-feature-maps)\n- [Visualizing Multiple Tensors with Custom Layout.](#5-visualizing-multiple-tensors-with-custom-layout)\n- [Examine the pixel with rich information.](#6-examine-the-pixel-with-richer-information)\n- [Visualizing Tensors as Video Clip](#7-visualizing-tensors-as-video-clip)\n- [Display Video Animation in Jupyter Notebook](#8-display-video-animation-in-jupyter-notebook)\n- [Visualizing Optical Flows](#9-visualizing-optical-flows)\n- [Change Channel Order (RGB/BGR)](#10-change-channel-order-rgbbgr)\n- [Change Unnormalization Presets](#11-change-unnormalization-presets)\n- [Overlay Visualizations](#12-overlay-visualizations)\n\n### 1. Visualizing Image Tensor\nVisualizing an image-like tensor is not difficult but could be very cumbersome. You usually need to convert the tensor to numpy array with proper shapes. In many cases images were normalized during dataloader, which means that you have to unnormalize it so it can be displayed correctly.\n\nIf you need to frequently verify what your tensors look like, TorchShow is a very helpful tool. \n\nUsing Matplotlib             |  Using TorchShow\n:-------------------------:|:-------------------------:\n![](./imgs/RGB_image_plt.gif)  |  ![](./imgs/RGB_image_ts.gif)\n|The image tensor has been normalized so Matlotlib cannot display it correctly. | TorchShow does the conversion automatically.|\n\n### 2. Visualizing Mask Tensors\nFor projects related to Semantic Segmentation or Instance Segmentation, we often need to visualize mask tensors -- either ground truth annotations or model's prediction. This can be easily done using TorchShow.\n\nUsing Matplotlib             |  Using TorchShow\n:-------------------------:|:-------------------------:\n![](./imgs/cat_mask_plt.gif)  |  ![](./imgs/cat_mask_ts.gif)\n| Different instances have same colors. Some categories are missing. | TorchShow automatically apply color palletes during visualization.|\n\n### 3. Visualizing Batch of Tensors\nWhen the tensor is a batch of images, TorchShow will automatically create grid layout to visualize them. It is also possible to manually control the number of rows and columns.\n\n![](./imgs/batch_imgs.gif)\n\n### 4. Visualizing Feature Maps\nIf the input tensor has more than 3 channels, TorchShow will visualize each of the channel similar to batch visualization. This is useful to visualize a feature map.\n\n![](./imgs/featuremap.gif)\n\n### 5. Visualizing Multiple Tensors with Custom Layout.\nTorchShow has more flexibility to visualize multiple tensor using a custom layout.\n\nTo control the layout, put the tensors in list of list as an 2D array. The following example will create a 2 x 3 grid layout.\n\n```\nts.show([[tensor1, tensor2, tensor3],\n         [tensor4, tensor5, tensor6]])\n```\n\nIt is worth mentioning that there is no need to fill up all the places in the grid. The following example visualizes 5 tensors in a 2 x 3 grid layout.\n\n```\nts.show([[tensor1, tensor2],\n         [tensor3, tensor4, tensor5]])\n```\n\n![](./imgs/custom_layout.gif)\n\n\n### 6. Examine the pixel with richer information.\nSince `v0.4.1`, TorchShow allows you to get richer information from a pixel you are interested by simply hovering your mouse over that pixel. This is very helpful for some types of tensors such as Categorical Mask and Optical Flows. \n\nCurrently, Torchshow displays the following information: \n\n- `Mode`: Visualization Mode.\n- `Shape`: Shape of the tensor.\n- `X`, `Y`: The pixel location of the mouse cursor.\n- `Raw`: The raw tensor value at (X, Y).\n- `Disp`: The display value at (X, Y).\n\n![](./imgs/rich_info.gif)\n\n**Note: if the information is not showing on the status bar, try to resize the window and make it wider.**\n\nThis feature can be turned off by `ts.show_rich_info(False)`.\n\n\n### 7. Visualizing Tensors as Video Clip\nTensors can be visualized as video clips, which very helpful if the tensor is a sequence of frames. This can be done using `show_video` function.\n\n```python\nts.show_video(video_tensor)\n```\n\n![](./imgs/video.gif)\n\nIt is also possible to visualize multiple videos in a custom grid layout.\n\n![](./imgs/video_grid.gif)\n\n### 8. Display Video Animation in Jupyter Notebook\nTorchShow visualizes video clips as an `matplotlib.func_animation` object and may not display in a notebook by default. The following example shows a simple trick to display it.\n\n```python\nimport torchshow as ts\nfrom IPython.display import HTML\n\nani = ts.show_video(video_tensor)\nHTML(ani.to_jshtml())\n```\n\n### 9. Visualizing Optical Flows\nTorchShow support visualizing optical flow (powered by [flow_vis](https://github.com/tomrunia/OpticalFlow_Visualization)). Below is a demostration using a VSCode debugger remotely attached to a SSH server (with X-server configured). Running in a Jupyter Notebook is also supported.\n\n![](./imgs/flow_ts.gif)\n\n### 10. Change Channel Order (RGB/BGR)\nBy default tensorflow visualize image tensor in the RGB mode, you can switch the setting to BGR in case you are using opencv to load the image.\n```python\nts.set_color_mode('bgr')\n```\n\n### 11. Change Unnormalization Presets\nThe image tensor may have been preprocessed with a normalization function. If not specified, torchshow will automatically rescale it to 0-1. \n\n\nTo change the preset to imagenet normalization. Use the following code.\n```python\nts.show(tensor, unnormalize='imagenet')\n```\n\nTo use a customize mean and std value, use the following command. \n```python\nts.set_image_mean([0., 0., 0.])\nts.set_image_std([1., 1., 1.])\n```\nNote that once this is set, torchshow will use this value for the following visualization. This is useful because usually only a single normalization preset will be used for the entire project.\n\n\n### 12. Overlay Visualizations\nIn Computer Vision project there are many times we will be dealing with different representations of the scene, including but not limited to RGB image, depth image, infrared image, semantic mask, instance mask, etc. Sometimes it will be very helpful to overlay these different data for visualization. Since `v0.5.0`, TorchShow provides a very useful API `ts.overlay()` for this purpose.\n\nIn the below example we have an RGB image and its corresponding semantic mask. Let's first check what they look like using TorchShow.\n\n```python\nimport torchshow as ts\nts.show([\"example_rgb.jpg\", \"example_category_mask.png\"])\n```\n\n![](./imgs/overlay_1.png)\n\nNow I would like to overlay the mask on top of the RGB image to gain more insights, with TorchShow this can be easily done with one line of code.\n\n```python\nimport torchshow as ts\nts.overlay([\"example_rgb.jpg\", \"example_category_mask.png\"], alpha=[1, 0.6])\n```\n\n![](./imgs/overlay_2.png)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xwying/torchshow",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "torchshow",
    "package_url": "https://pypi.org/project/torchshow/",
    "platform": null,
    "project_url": "https://pypi.org/project/torchshow/",
    "project_urls": {
      "Homepage": "https://github.com/xwying/torchshow"
    },
    "release_url": "https://pypi.org/project/torchshow/0.5.0/",
    "requires_dist": [
      "numpy",
      "matplotlib"
    ],
    "requires_python": ">=3.6",
    "summary": "Visualizing PyTorch tensors with a single line of code.",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15691809,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "791f9ed51247e28b6f5de5de92c0ea0188c2462d64a4d85124a1b9fbc3b8a9c5",
          "md5": "7f55a280489716cea5222f34e57ed0cb",
          "sha256": "2de76ee3487c1e3d0e7d1fab2a6bd649b345e79dfe5a1ad20c56a13f454f8aa7"
        },
        "downloads": -1,
        "filename": "torchshow-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f55a280489716cea5222f34e57ed0cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10561,
        "upload_time": "2021-01-09T03:27:58",
        "upload_time_iso_8601": "2021-01-09T03:27:58.469470Z",
        "url": "https://files.pythonhosted.org/packages/79/1f/9ed51247e28b6f5de5de92c0ea0188c2462d64a4d85124a1b9fbc3b8a9c5/torchshow-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0900fdf6bebb03d33affa3d62d83a9f256ca2a352afa73c4af61a09bc12ee68b",
          "md5": "e77251bb224f95bb6cdc03f9797dc331",
          "sha256": "e5d0aad5d2e94ea16c114e4a474baf2d92837aee0d2179d93447fe7729b5c2d0"
        },
        "downloads": -1,
        "filename": "torchshow-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e77251bb224f95bb6cdc03f9797dc331",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9383,
        "upload_time": "2021-01-09T03:27:59",
        "upload_time_iso_8601": "2021-01-09T03:27:59.908906Z",
        "url": "https://files.pythonhosted.org/packages/09/00/fdf6bebb03d33affa3d62d83a9f256ca2a352afa73c4af61a09bc12ee68b/torchshow-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65d50d3fe86a769f21c8418b6bfc3d7a9ccfa2c5b2759ab91e092e35325e5866",
          "md5": "e57b0abe2251dab73b4016c75a03d2da",
          "sha256": "45c6c2e26801d1690504d65ba2e64587bf28ecfdbce9023884e2f3785ae658fa"
        },
        "downloads": -1,
        "filename": "torchshow-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e57b0abe2251dab73b4016c75a03d2da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12347,
        "upload_time": "2021-04-25T23:49:12",
        "upload_time_iso_8601": "2021-04-25T23:49:12.971936Z",
        "url": "https://files.pythonhosted.org/packages/65/d5/0d3fe86a769f21c8418b6bfc3d7a9ccfa2c5b2759ab91e092e35325e5866/torchshow-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4bb96e2540ddd234c30400839e012210bdf7ac938d0f253972b70d5b61b48e6",
          "md5": "9ff854cd84cc89ed8b0a1d868e24b318",
          "sha256": "c14eb78034e0417b5ea1ddd1a71eef546a482f6795970ca9afd780d95f4f3f2c"
        },
        "downloads": -1,
        "filename": "torchshow-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9ff854cd84cc89ed8b0a1d868e24b318",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12849,
        "upload_time": "2021-04-25T23:49:14",
        "upload_time_iso_8601": "2021-04-25T23:49:14.263120Z",
        "url": "https://files.pythonhosted.org/packages/b4/bb/96e2540ddd234c30400839e012210bdf7ac938d0f253972b70d5b61b48e6/torchshow-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a98c026cbcbd766957ce083d1c7e41fa20ea64a37912816d948181b882d7504c",
          "md5": "5af06c3a118765cbe8ab30f9eb14e2fb",
          "sha256": "76d1bb4e052a39da7aade4bc863ba60d92f07d5b7386fb805a74af081100fb38"
        },
        "downloads": -1,
        "filename": "torchshow-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5af06c3a118765cbe8ab30f9eb14e2fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12631,
        "upload_time": "2021-06-14T19:52:49",
        "upload_time_iso_8601": "2021-06-14T19:52:49.735937Z",
        "url": "https://files.pythonhosted.org/packages/a9/8c/026cbcbd766957ce083d1c7e41fa20ea64a37912816d948181b882d7504c/torchshow-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34afc3b6e5f603b45e19c3ad7389c6fad4ec2c81093ac48ffb1e08cb11d01d35",
          "md5": "c355cb77aa0cfb88766109775829ce0f",
          "sha256": "754c58ab67c2ebbe0ffff4328040ef4518eb7fdb53ca2a8957d41e18b4690615"
        },
        "downloads": -1,
        "filename": "torchshow-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c355cb77aa0cfb88766109775829ce0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12781,
        "upload_time": "2021-06-14T19:52:52",
        "upload_time_iso_8601": "2021-06-14T19:52:52.381512Z",
        "url": "https://files.pythonhosted.org/packages/34/af/c3b6e5f603b45e19c3ad7389c6fad4ec2c81093ac48ffb1e08cb11d01d35/torchshow-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "071cf5dca1eab15379211e7cc38efc5d1b6b8664b2612ba64ed9a0845c5e80a9",
          "md5": "c7f194d200395325358ddf41126d008e",
          "sha256": "157f4c40f9e824ab8707f03c5e8430df5ad2bdcca204972931d7f214249c3cd3"
        },
        "downloads": -1,
        "filename": "torchshow-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c7f194d200395325358ddf41126d008e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12894,
        "upload_time": "2021-08-23T18:01:36",
        "upload_time_iso_8601": "2021-08-23T18:01:36.305010Z",
        "url": "https://files.pythonhosted.org/packages/07/1c/f5dca1eab15379211e7cc38efc5d1b6b8664b2612ba64ed9a0845c5e80a9/torchshow-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46fd3827728e4cecfe8ecc95fbf2475da892749ef7d58a57e2cc5d03fa5667d0",
          "md5": "3b98f26ba70490f6ea5b5188fc12687b",
          "sha256": "7147a72e52ea7ae0e806688e4ff527abce4504d34241b89164573b6c2648fa66"
        },
        "downloads": -1,
        "filename": "torchshow-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3b98f26ba70490f6ea5b5188fc12687b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13228,
        "upload_time": "2021-08-23T18:01:38",
        "upload_time_iso_8601": "2021-08-23T18:01:38.404255Z",
        "url": "https://files.pythonhosted.org/packages/46/fd/3827728e4cecfe8ecc95fbf2475da892749ef7d58a57e2cc5d03fa5667d0/torchshow-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65390bb88220823f086cf0dffec4a5c87711b963a4a8c70a543c35936e82650d",
          "md5": "bd48c25b2f2985d73a563e18b7f5c80f",
          "sha256": "abd32e610b98c3d8bcd74ac499e13215f014dcf0a68b9919d7f211947518ce6e"
        },
        "downloads": -1,
        "filename": "torchshow-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd48c25b2f2985d73a563e18b7f5c80f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13039,
        "upload_time": "2022-05-20T00:22:05",
        "upload_time_iso_8601": "2022-05-20T00:22:05.433643Z",
        "url": "https://files.pythonhosted.org/packages/65/39/0bb88220823f086cf0dffec4a5c87711b963a4a8c70a543c35936e82650d/torchshow-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "778cd93e155f4d891a1f99d62674d7d1b067ca82cbdb4b424febc32dfdc09f97",
          "md5": "b76101bbb43cce68af4ac8cfcbaca36b",
          "sha256": "4905cccae99ba7d93069ea2bcf9c5d5d457dae099a14c5a321cebcb8e164afe3"
        },
        "downloads": -1,
        "filename": "torchshow-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b76101bbb43cce68af4ac8cfcbaca36b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13353,
        "upload_time": "2022-05-20T00:22:07",
        "upload_time_iso_8601": "2022-05-20T00:22:07.253316Z",
        "url": "https://files.pythonhosted.org/packages/77/8c/d93e155f4d891a1f99d62674d7d1b067ca82cbdb4b424febc32dfdc09f97/torchshow-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "495d0f3f4bbafe5a5c09c9561687aac4227529325a59754662cb3fad51ac400d",
          "md5": "3f4bd120233b990f36785964de858716",
          "sha256": "3a84bf5fcc43062b4b37c4875826d083396839ddbd9ad62b5c201fe2c2e4d8cc"
        },
        "downloads": -1,
        "filename": "torchshow-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f4bd120233b990f36785964de858716",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14106,
        "upload_time": "2022-05-22T01:47:19",
        "upload_time_iso_8601": "2022-05-22T01:47:19.873979Z",
        "url": "https://files.pythonhosted.org/packages/49/5d/0f3f4bbafe5a5c09c9561687aac4227529325a59754662cb3fad51ac400d/torchshow-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c39b0744ec9307405b7e43c6fb92da6ecb06653cea3669c5e2355b4850a8cf3",
          "md5": "0ce324824e9b75363404643b8b57a3a8",
          "sha256": "f0beff8d2f5de677f90bf309ac820b488a31f7d923842bb793f12f0f665a8de4"
        },
        "downloads": -1,
        "filename": "torchshow-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0ce324824e9b75363404643b8b57a3a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14786,
        "upload_time": "2022-05-22T01:47:21",
        "upload_time_iso_8601": "2022-05-22T01:47:21.738258Z",
        "url": "https://files.pythonhosted.org/packages/2c/39/b0744ec9307405b7e43c6fb92da6ecb06653cea3669c5e2355b4850a8cf3/torchshow-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "691611b93628da60fcac859ade30d8509943c6de3fc4b3c9d2f4ce25f6c49353",
          "md5": "9cb083a6e8e2048849ad5cc5d6970079",
          "sha256": "390b1cbeaff31e5ea516e2d0979c353ace7a364a52b60e48c747c56c8371188c"
        },
        "downloads": -1,
        "filename": "torchshow-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9cb083a6e8e2048849ad5cc5d6970079",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14672,
        "upload_time": "2022-06-30T05:00:08",
        "upload_time_iso_8601": "2022-06-30T05:00:08.118443Z",
        "url": "https://files.pythonhosted.org/packages/69/16/11b93628da60fcac859ade30d8509943c6de3fc4b3c9d2f4ce25f6c49353/torchshow-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e332fe774e438ad31fb2082f9ebe57f3eb81024807f0812bd43e671ca57d732",
          "md5": "8c1dde4adc63c4f23f27b7c180673fbb",
          "sha256": "86834960d20e27d17e51df346a26d70650bc6fa42a8dbcc3ff51c39936d11809"
        },
        "downloads": -1,
        "filename": "torchshow-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8c1dde4adc63c4f23f27b7c180673fbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15694,
        "upload_time": "2022-06-30T05:00:10",
        "upload_time_iso_8601": "2022-06-30T05:00:10.230258Z",
        "url": "https://files.pythonhosted.org/packages/8e/33/2fe774e438ad31fb2082f9ebe57f3eb81024807f0812bd43e671ca57d732/torchshow-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff09bd6d8540a0c0eb607cab233ee8d4367e418d7c1d5cab443ff45a24e1817b",
          "md5": "da90c30668ec65034eed22c71ae61513",
          "sha256": "96340e83b4aab0d5a543265790da7bcf9368cee8eb5d6538d4e626c898733ab6"
        },
        "downloads": -1,
        "filename": "torchshow-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da90c30668ec65034eed22c71ae61513",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16989,
        "upload_time": "2022-11-07T23:32:16",
        "upload_time_iso_8601": "2022-11-07T23:32:16.117248Z",
        "url": "https://files.pythonhosted.org/packages/ff/09/bd6d8540a0c0eb607cab233ee8d4367e418d7c1d5cab443ff45a24e1817b/torchshow-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f54b5eb10906e10f237004be8eef5ba2f684bd98c460d1440958be29f813b15a",
          "md5": "5aaa0ae53927b46d02b974cf0387e8d9",
          "sha256": "a05f82cfbcd4019504abf7fb10bcb2eede89e50d893d9b148ff8c861cea6fff6"
        },
        "downloads": -1,
        "filename": "torchshow-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5aaa0ae53927b46d02b974cf0387e8d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18730,
        "upload_time": "2022-11-07T23:32:17",
        "upload_time_iso_8601": "2022-11-07T23:32:17.679717Z",
        "url": "https://files.pythonhosted.org/packages/f5/4b/5eb10906e10f237004be8eef5ba2f684bd98c460d1440958be29f813b15a/torchshow-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff09bd6d8540a0c0eb607cab233ee8d4367e418d7c1d5cab443ff45a24e1817b",
        "md5": "da90c30668ec65034eed22c71ae61513",
        "sha256": "96340e83b4aab0d5a543265790da7bcf9368cee8eb5d6538d4e626c898733ab6"
      },
      "downloads": -1,
      "filename": "torchshow-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "da90c30668ec65034eed22c71ae61513",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 16989,
      "upload_time": "2022-11-07T23:32:16",
      "upload_time_iso_8601": "2022-11-07T23:32:16.117248Z",
      "url": "https://files.pythonhosted.org/packages/ff/09/bd6d8540a0c0eb607cab233ee8d4367e418d7c1d5cab443ff45a24e1817b/torchshow-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f54b5eb10906e10f237004be8eef5ba2f684bd98c460d1440958be29f813b15a",
        "md5": "5aaa0ae53927b46d02b974cf0387e8d9",
        "sha256": "a05f82cfbcd4019504abf7fb10bcb2eede89e50d893d9b148ff8c861cea6fff6"
      },
      "downloads": -1,
      "filename": "torchshow-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5aaa0ae53927b46d02b974cf0387e8d9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 18730,
      "upload_time": "2022-11-07T23:32:17",
      "upload_time_iso_8601": "2022-11-07T23:32:17.679717Z",
      "url": "https://files.pythonhosted.org/packages/f5/4b/5eb10906e10f237004be8eef5ba2f684bd98c460d1440958be29f813b15a/torchshow-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}