{
  "info": {
    "author": "Aaron Clayton",
    "author_email": "ecoahaaron@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Programming Language :: Python :: 3"
    ],
    "description": "# charcade\r\n\r\ncharcade is a string manipulation library that can animate, color, and bruteforce strings.\r\n\r\n## Features\r\n\r\n- Animating text for CLI applications with easy to use syntax.\r\n- Coloring text with easy to use syntax.\r\n- Bruteforce strings showing all possible outcomes, or real words that are hidden within.\r\n\r\n## Usage\r\n\r\n### **Arcade class**\r\n\r\n---\r\n\r\n**_This class is for animating text._**\r\n\r\n**_General Functions_**\r\n\r\n- Arcade.erase() # Clears Terminal\r\n- Arcade(\"text here\", \"color here\").clearline() # Clears current line of animation.\r\n\r\n**There are currently 9 animation types.**\r\n\r\n- write()\r\n  > _Writes your string out like a typewriter._\r\n- casewave()\r\n  > _Sends a casewave across your string._\r\n- slide()\r\n  > _Slides your string like a billboard._\r\n- shuffle()\r\n  > _Randomly shuffles your string._\r\n- load()\r\n  > _Creates an in-place animation. Accepts lists and strings._\r\n- flicker()\r\n  > _Flickers your string like a neon sign._\r\n- glitch()\r\n  > _Glitches your string out._\r\n- shadeglitch()\r\n  > _Glitches your string out with flashing shades of the color in your Arcade object_\r\n- writeglitch()\r\n  > _Glitches out strings as they're typed out in the terminal_\r\n\r\n**Lets look at an example of some code.**\r\n\r\n```python\r\nfrom charcade import Arcade\r\n\r\n# This will clear your terminal for cleaner looking applications.\r\nArcade.erase()\r\n\r\n\r\n# The 'flow=' parameter controls the animation speed. default value is .1\r\nanimation = Arcade('charcade charcade', 'orange40', flow=.08)\r\n\r\n# To create an animation sequence simply do this.\r\nanimation.write()\r\nanimation.casewave()\r\nanimation.casewave('left')\r\nanimation.slide()\r\nanimation.slide('right')\r\nanimation.casewave()\r\nanimation.casewave('left')\r\n\r\n# Without stamp() your animation will stack ontop of itself\r\n# It is recommended to use this at the end of every animation sequence\r\nanimation.stamp()\r\n```\r\n\r\n---\r\n\r\n### **Brute class**\r\n\r\n---\r\n\r\n**_This class is for brute-forcing strings_**\r\n\r\n**There are 4 ways to brute-force your strings.**\r\n\r\n- bulk()\r\n  > _Returns a list of all possible combinations of your string._\r\n- halfbulk()\r\n  > _Returns a list of all possible combinations of your string that are the same length._\r\n- genuine()\r\n  > _Returns a list of all possible combinations of your string that are real words._\r\n- bigfoot()\r\n  > _Returns a list of all possible combinations of your string that are real words and the same length as your string._\r\n\r\n**Lets look at an example of some code.**\r\n\r\n```python\r\nfrom charcade import Brute\r\n\r\nwords = Brute('ports').bigfoot()\r\n\r\n# Since Brute returns a list we're going to iterate over it and print each element.\r\nfor word in words:\r\n    print(word)\r\n```\r\n\r\n**Output:**\r\n\r\n```\r\nports\r\nprost\r\nsport\r\nsprot\r\nstrop\r\n```\r\n\r\n---\r\n\r\n### **color method**\r\n\r\n**_This method is for coloring strings_**\r\n\r\n_There are currently 26 colors to choose from although you are not\r\nlimited to just the available colors._\r\n\r\n_This method also accepts RGB values in place of the color for the\r\nfg color and bg color._\r\n\r\n\\*All colors here are also available in **Arcade\\***\r\n\r\n**Lets look at an example of some code.**\r\n\r\n```python\r\nfrom charcade import color\r\n\r\nmy_string = 'charcade'\r\n\r\nprint(color(my_string, fg='red', bg='black'))\r\n# OR\r\nprint(color(my_string, fg='255,0,0', bg='0,0,0'))\r\n\r\n# Both will output the same thing since RGB values are accepted as colors.\r\n```\r\n\r\n**Available colors:**\r\n\r\n---\r\n\r\n```\r\nwhite, gray10, gray20, gray30, gray40, gray50,\r\ngray60, gray70, gray80, gray90, black\r\n\r\nred10, red20, red30, red40, red50,\r\nred60, red70, red80, red90, red\r\n\r\norange10, orange20, orange30, orange40, orange50,\r\norange60, orange70, orange80, orange90, orange\r\n\r\nyellow10, yellow20, yellow30, yellow40, yellow50,\r\nyellow60, yellow70, yellow80, yellow90, yellow\r\n\r\ngreen10, green20, green30, green40, green50,\r\ngreen60, green70, green80, green90, green\r\n\r\nblue10, blue20, blue30, blue40, blue50,\r\nblue60, blue70, blue80, blue90, blue\r\n\r\npurple10, purple20, purple30, purple40, purple50,\r\npurple60, purple70, purple80, purple90, purple\r\n\r\npink10, pink20, pink30, pink40, pink50,\r\npink60, pink70, pink80, pink90, pink\r\n```\r\n\r\n---\r\n\r\n# Roadmap\r\n\r\n- _Add more animation styles_\r\n- _Add custom tailored color palettes for your apps_\r\n- _Autocorrect_\r\n- _Word mixing to create new words_\r\n- _Show definitions of words_\r\n- _Color blending functionality_\r\n\r\n\r\n# Changelog\r\n\r\n### Version _1.0.3_\r\n\r\n_04/28/2022_\r\n\r\n- Optimization fixes.\r\n- Color scales added for every major color.\r\n- Color chart function to show all available colors.\r\n  ```python\r\n  from charcade import colorchart\r\n  colorchart()\r\n  ```\r\n- Added 4 new animation types.\r\n- **glitch()** _Glitches out text._\r\n- **shadeglitch()** _Glitches out texts with different shades of color_\r\n- **writeglitch()** _Glitches out text while writing it out_\r\n- **flicker()** _Flickers text like a neon sign_\r\n- Added clearline function for animation sequences.\r\n- Added color palette function.\r\n- Returns color palettes as lists to use in your CLI apps. STILL IN PROGRESS\r\n\r\n---\r\n\r\n### Version _1.0.2_\r\n\r\n_01/25/2022_\r\n\r\n- Minor bug fixes\r\n\r\n---\r\n\r\n### Version _1.0.1_\r\n\r\n_01/25/2022_\r\n\r\n- Minor bug fixes\r\n\r\n---\r\n\r\n### Version _1.0.0_\r\n\r\n_01/25/2022_\r\n\r\n- First release\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "string",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "charcade",
    "package_url": "https://pypi.org/project/charcade/",
    "platform": null,
    "project_url": "https://pypi.org/project/charcade/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/charcade/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "String manipulation.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13647379,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3188e8e272e4a41dcbc198c4be9a25e930b02595b62c1c37b5fc646c0f054c2",
          "md5": "727c6e181a0461d089c282291ae64d31",
          "sha256": "ad03e101fda8134da161d7e7c218483646e6c8e5a1137e2da0daf53e946ef353"
        },
        "downloads": -1,
        "filename": "charcade-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "727c6e181a0461d089c282291ae64d31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2298600,
        "upload_time": "2022-01-25T10:46:05",
        "upload_time_iso_8601": "2022-01-25T10:46:05.244555Z",
        "url": "https://files.pythonhosted.org/packages/f3/18/8e8e272e4a41dcbc198c4be9a25e930b02595b62c1c37b5fc646c0f054c2/charcade-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2c89e5c1e6b89c22cad181d598b9ca0858d267fa22d6ea3109d39262a3bd56e",
          "md5": "2cd12faf4b9a0b5113a26649443c84da",
          "sha256": "71fc287871bf6bfa10a05c37678b60923fb00bba7e886a66b01fb7ee3fcf8e13"
        },
        "downloads": -1,
        "filename": "charcade-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2cd12faf4b9a0b5113a26649443c84da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2298623,
        "upload_time": "2022-01-25T11:03:22",
        "upload_time_iso_8601": "2022-01-25T11:03:22.674085Z",
        "url": "https://files.pythonhosted.org/packages/e2/c8/9e5c1e6b89c22cad181d598b9ca0858d267fa22d6ea3109d39262a3bd56e/charcade-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8512568ecd74fcd556923675cdb7a1ee202ec00ea94582ee08e30a1939fcdbf",
          "md5": "59548228f7641ce6315cd9781545eb09",
          "sha256": "261f7dd227b6dbb0935a66953c04995a74e085085b66155db8dffcc500102ec0"
        },
        "downloads": -1,
        "filename": "charcade-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "59548228f7641ce6315cd9781545eb09",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2298697,
        "upload_time": "2022-01-25T11:07:37",
        "upload_time_iso_8601": "2022-01-25T11:07:37.502958Z",
        "url": "https://files.pythonhosted.org/packages/a8/51/2568ecd74fcd556923675cdb7a1ee202ec00ea94582ee08e30a1939fcdbf/charcade-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efc83b04e3635a923c3b730d93800de6b3201a92f9527a0e5f2b4c7bd14315d8",
          "md5": "028f3a9430bdbfceeba69c3584905b53",
          "sha256": "58651cf34d1be8e64923110b98656a12ecc9d0fd4930515c33494352cbd387d4"
        },
        "downloads": -1,
        "filename": "charcade-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "028f3a9430bdbfceeba69c3584905b53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2301945,
        "upload_time": "2022-04-28T02:39:46",
        "upload_time_iso_8601": "2022-04-28T02:39:46.939278Z",
        "url": "https://files.pythonhosted.org/packages/ef/c8/3b04e3635a923c3b730d93800de6b3201a92f9527a0e5f2b4c7bd14315d8/charcade-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "efc83b04e3635a923c3b730d93800de6b3201a92f9527a0e5f2b4c7bd14315d8",
        "md5": "028f3a9430bdbfceeba69c3584905b53",
        "sha256": "58651cf34d1be8e64923110b98656a12ecc9d0fd4930515c33494352cbd387d4"
      },
      "downloads": -1,
      "filename": "charcade-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "028f3a9430bdbfceeba69c3584905b53",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2301945,
      "upload_time": "2022-04-28T02:39:46",
      "upload_time_iso_8601": "2022-04-28T02:39:46.939278Z",
      "url": "https://files.pythonhosted.org/packages/ef/c8/3b04e3635a923c3b730d93800de6b3201a92f9527a0e5f2b4c7bd14315d8/charcade-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}