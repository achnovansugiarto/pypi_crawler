{
  "info": {
    "author": "bfzs",
    "author_email": "ydf0509@sohu.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "纯面向对象，支持链式操作的时间转换。\n\n\npip  install chained_mode_time_tool\n\n```\n 时间转换，支持链式操作，纯面向对象的的。\n 无限链式操作之后，通过对象的 datetime_obj datetime_str 等属性和方法，取得自己想要的值。\n\n相比模块级下面定义几十个函数，然后将不同类型的时间变量传到不同的函数中return结果，然后把结果作为入参传入到另一个函数进行转换，\n纯面向对象支持链式转换的要方便很多。\n\n初始化能够接受的变量类型丰富，可以传入一切类型的时间变量，兼容性和容错度高。::\n\n``` \n\n例如不支持链式操作的，并且需要使用不同的函数处理不同的时间变量类型的是这样的\n\nhttps://github.com/lishenluo/dtutils/blob/master/DTUtils.py\n\n\n支持链式操作和不支持链式操作的调用写法区别是：\n```\n支持链式操作是：\nfrom modulexx import  DatetimeConverter \nDatetimeConverter(var).fun1.fun2.fun3.attr\n\n不支持链式是:\nimport modulexx\nmodulexx.fun4((modulexx.fun3(modulexx.fun2(modulexx.fun1(var)))))\n```\n\n```python\n\nimport typing\nimport re\nimport time\nimport datetime\n\n\nclass DatetimeConverter:\n    \"\"\" 时间转换，支持链式操作，纯面向对象的的。\n\n    相比模块级下面定义几十个函数，然后将不同类型的时间变量传到不同的函数中return结果，然后把结果作为入参传入到另一个函数进行转换，\n    纯面向对象支持链式转换的要方便很多。\n\n    初始化能够接受的变量类型丰富，可以传入一切类型的时间变量。\n\n    \"\"\"\n    DATETIME_FORMATTER = \"%Y-%m-%d %H:%M:%S\"\n    DATETIME_FORMATTER2 = \"%Y-%m-%d\"\n    DATETIME_FORMATTER3 = \"%H:%M:%S\"\n\n    @classmethod\n    def bulid_conveter_with_other_formatter(cls, datetime_str, datetime_formatter):\n        \"\"\"\n        :param datetime_str: 时间字符串\n        :param datetime_formatter: 能够格式化该字符串的模板\n        :return:\n        \"\"\"\n        datetime_obj = datetime.datetime.strptime(datetime_str, datetime_formatter)\n        return cls(datetime_obj)\n\n    def __init__(self, datetimex: typing.Union[None,int, float, datetime.datetime, str, 'DatetimeConverter'] = None):\n        \"\"\"\n        :param datetimex: 接受时间戳  datatime类型 和 时间字符串 和类对象本身四种类型,如果为None，则默认当前时间。\n        \"\"\"\n        if isinstance(datetimex, str):\n            if not re.match('\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}', datetimex):\n                raise ValueError('时间字符串的格式不符合此传参的规定,如果是其他格式的时间字符串，'\n                                 '可以使用 bulid_conveter_with_other_formatter方法来生成对象')\n            else:\n                self.datetime_obj = datetime.datetime.strptime(datetimex, self.DATETIME_FORMATTER)\n        elif isinstance(datetimex, (int, float)):\n            if datetimex < 1:\n                datetimex += 86400\n            self.datetime_obj = datetime.datetime.fromtimestamp(datetimex)  # 时间戳0在windows会出错。\n        elif isinstance(datetimex, datetime.datetime):\n            self.datetime_obj = datetimex\n        elif isinstance(datetimex, DatetimeConverter):\n            self.datetime_obj = datetimex.datetime_obj\n        elif datetimex is None:\n            self.datetime_obj = datetime.datetime.now()\n        else:\n            raise ValueError('实例化时候的传参不符合规定')\n        \n    # 以下为常用的属性\n    @property\n    def datetime_str(self) -> str:\n        return self.datetime_obj.strftime(self.DATETIME_FORMATTER)\n\n    @property\n    def time_str(self) -> str:\n        return self.datetime_obj.strftime(self.DATETIME_FORMATTER3)\n\n    @property\n    def date_str(self) -> str:\n        return self.datetime_obj.strftime(self.DATETIME_FORMATTER2)\n\n    def get_str_by_specify_formatter(self, specify_formatter='%Y-%m-%d %H:%M:%S'):\n        return self.datetime_obj.strftime(specify_formatter)\n\n    @property\n    def timestamp(self) -> float:\n        return self.datetime_obj.timestamp()\n\n    def is_greater_than_now(self) -> bool:\n        return self.timestamp > time.time()\n\n    def __str__(self) -> str:\n        return self.datetime_str\n\n    def __call__(self) -> datetime.datetime:\n        return self.datetime_obj\n\n    # 以下为不常用的辅助方法。\n    def get_converter_by_interval_seconds(self, seconds_interval) -> 'DatetimeConverter':\n        return self.__class__(self.datetime_obj + datetime.timedelta(seconds=seconds_interval))\n\n    def get_converter_by_interval_minutes(self, minutes_interval) -> 'DatetimeConverter':\n        return self.__class__(self.datetime_obj + datetime.timedelta(seconds=minutes_interval))\n\n    def get_converter_by_interval_hour(self, hour_interval) -> 'DatetimeConverter':\n        return self.__class__(self.datetime_obj + datetime.timedelta(hours=hour_interval))\n\n    def get_converter_by_interval_days(self, days_interval) -> 'DatetimeConverter':\n        return self.__class__(self.datetime_obj + datetime.timedelta(days=days_interval))\n\n    @property\n    def one_hour_ago_converter(self) -> 'DatetimeConverter':\n        \"\"\"\n        酒店经常需要提前一小时免费取消，直接封装在这里\n        :return:\n        \"\"\"\n        one_hour_ago_datetime_obj = self.datetime_obj + datetime.timedelta(hours=-1)\n        return self.__class__(one_hour_ago_datetime_obj)\n\n    @property\n    def one_day_ago_converter(self) -> 'DatetimeConverter':\n        one_hour_ago_datetime_obj = self.datetime_obj + datetime.timedelta(days=-1)\n        return self.__class__(one_hour_ago_datetime_obj)\n\n    @property\n    def next_day_converter(self) -> 'DatetimeConverter':\n        one_hour_ago_datetime_obj = self.datetime_obj + datetime.timedelta(days=1)\n        return self.__class__(one_hour_ago_datetime_obj)\n\n\ndef seconds_to_hour_minute_second(seconds):\n    \"\"\"\n    把秒转化成还需要的时间\n    :param seconds:\n    :return:\n    \"\"\"\n    m, s = divmod(seconds, 60)\n    h, m = divmod(m, 60)\n    return \"%02d:%02d:%02d\" % (h, m, s)\n\n\nif __name__ == '__main__':\n    import nb_log\n\n    \"\"\"\n    1557113661.0\n    '2019-05-06 12:34:21'\n    '2019/05/06 12:34:21'\n    DatetimeConverter(1557113661.0)()\n    \"\"\"\n    # noinspection PyShadowingBuiltins\n    o3 = DatetimeConverter('2019-05-06 12:34:21')\n    print(DatetimeConverter(o3))\n    print(o3)\n    print(o3.next_day_converter.next_day_converter.next_day_converter)  # 可以无限链式。\n    print('- - - - -  - - -')\n    o = DatetimeConverter.bulid_conveter_with_other_formatter('2019/05/06 12:34:21', '%Y/%m/%d %H:%M:%S')\n    print(o)\n    print(o.get_str_by_specify_formatter('%Y %m %dT%H:%M:%S'))\n    print(o.date_str)\n    print(o.timestamp)\n    print('***************')\n    o2 = o.one_hour_ago_converter\n    print(o2)\n    print(o2.date_str)\n    print(o2.timestamp)\n    print(o2.is_greater_than_now())\n    print(o2(), type(o2()))\n    print(DatetimeConverter())\n    print(datetime.datetime.now())\n    time.sleep(5)\n    print(DatetimeConverter())\n    print(datetime.datetime.now())\n    print(DatetimeConverter(3600 * 24))\n\n    print(seconds_to_hour_minute_second(3600 * 2.3))\n\n    print(DatetimeConverter('2019-05-06 12:34:21').one_hour_ago_converter.one_hour_ago_converter)\n    print(DatetimeConverter(\n        1596985665).one_hour_ago_converter.one_hour_ago_converter)\n    print(DatetimeConverter(\n        datetime.datetime(year=2020, month=5, day=4)).one_hour_ago_converter.one_hour_ago_converter)\n\n\n\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ydf0509/chained_mode_time_tool",
    "keywords": "datetime,time util",
    "license": "BSD License",
    "maintainer": "ydf",
    "maintainer_email": "ydf0509@sohu.com",
    "name": "chained-mode-time-tool",
    "package_url": "https://pypi.org/project/chained-mode-time-tool/",
    "platform": "all",
    "project_url": "https://pypi.org/project/chained-mode-time-tool/",
    "project_urls": {
      "Homepage": "https://github.com/ydf0509/chained_mode_time_tool"
    },
    "release_url": "https://pypi.org/project/chained-mode-time-tool/0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "chained_mode_time_tool",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11711888,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de9782c2c9ffe43cae81d14b4416e82a782ab9f2d39bb69a0c26b940ca671710",
          "md5": "621b1752a9994e5919a0c5d7df548865",
          "sha256": "4e1a4a26953422dea9a1079849612d220308659251f83a34de034d179ad5e728"
        },
        "downloads": -1,
        "filename": "chained_mode_time_tool-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "621b1752a9994e5919a0c5d7df548865",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4761,
        "upload_time": "2021-07-26T02:39:07",
        "upload_time_iso_8601": "2021-07-26T02:39:07.983108Z",
        "url": "https://files.pythonhosted.org/packages/de/97/82c2c9ffe43cae81d14b4416e82a782ab9f2d39bb69a0c26b940ca671710/chained_mode_time_tool-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91fcd680242ee78cadbf6b73418b7919ecf86ce2aacf94ae9f3b0a4ee33f3f14",
          "md5": "f174c63c42f9ebaca452d2c7d92af7ce",
          "sha256": "c4f7d03cec4eaca16c3507748cccfb3d967d1bf402078491abc5ca915929bad2"
        },
        "downloads": -1,
        "filename": "chained_mode_time_tool-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f174c63c42f9ebaca452d2c7d92af7ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4792,
        "upload_time": "2021-07-26T02:41:20",
        "upload_time_iso_8601": "2021-07-26T02:41:20.069689Z",
        "url": "https://files.pythonhosted.org/packages/91/fc/d680242ee78cadbf6b73418b7919ecf86ce2aacf94ae9f3b0a4ee33f3f14/chained_mode_time_tool-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1155a0cc571741b5059b6bf3fb15087932878ec20b6ae48d0c2e1bb3d45f61b5",
          "md5": "282e842e9322ee85e35182225538a43c",
          "sha256": "494d15266cf1e4d51de9fec9b4de0ad0d4b74d020a52bbde666edcb42ef78af4"
        },
        "downloads": -1,
        "filename": "chained_mode_time_tool-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "282e842e9322ee85e35182225538a43c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4782,
        "upload_time": "2021-07-26T02:43:57",
        "upload_time_iso_8601": "2021-07-26T02:43:57.772283Z",
        "url": "https://files.pythonhosted.org/packages/11/55/a0cc571741b5059b6bf3fb15087932878ec20b6ae48d0c2e1bb3d45f61b5/chained_mode_time_tool-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc0c7e672ab15028727981d14b15151315eeaf1c5d1ec4324ac9e305edae4dfb",
          "md5": "3af188ce10abfa004354a645dc7cdab6",
          "sha256": "a981158707cbb68d99a79ad4bcbe7f1c94e5d8e7ef3c2cab4bc52fa89c2ab91b"
        },
        "downloads": -1,
        "filename": "chained_mode_time_tool-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3af188ce10abfa004354a645dc7cdab6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5066,
        "upload_time": "2021-10-13T11:47:27",
        "upload_time_iso_8601": "2021-10-13T11:47:27.969306Z",
        "url": "https://files.pythonhosted.org/packages/fc/0c/7e672ab15028727981d14b15151315eeaf1c5d1ec4324ac9e305edae4dfb/chained_mode_time_tool-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc0c7e672ab15028727981d14b15151315eeaf1c5d1ec4324ac9e305edae4dfb",
        "md5": "3af188ce10abfa004354a645dc7cdab6",
        "sha256": "a981158707cbb68d99a79ad4bcbe7f1c94e5d8e7ef3c2cab4bc52fa89c2ab91b"
      },
      "downloads": -1,
      "filename": "chained_mode_time_tool-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "3af188ce10abfa004354a645dc7cdab6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5066,
      "upload_time": "2021-10-13T11:47:27",
      "upload_time_iso_8601": "2021-10-13T11:47:27.969306Z",
      "url": "https://files.pythonhosted.org/packages/fc/0c/7e672ab15028727981d14b15151315eeaf1c5d1ec4324ac9e305edae4dfb/chained_mode_time_tool-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}