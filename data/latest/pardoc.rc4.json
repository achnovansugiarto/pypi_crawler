{
  "info": {
    "author": "pwwang",
    "author_email": "pwwang@pwwang.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pardoc\n\n[![pypi][3]][4] [![tag][5]][6] ![pyver][12] [![build][7]][8] [![codacy quality][9]][10] [![codacy quality][11]][10]\n\nYet another docstring parser for python, using [`lark-parser`][1]\n\n## Installation\n\n```python\npip install pardoc\n```\n\n## A quick look\n\n```python console\n>>> from pardoc import google_parser, pretty\n\n>>> docstring = \"\"\"This is an example of a module level function.\n\nFunction parameters should be documented in the ``Args`` section. The name\nof each parameter is required. The type and description of each parameter\nis optional, but should be included if not obvious.\n\nIf \\*args or \\*\\*kwargs are accepted,\nthey should be listed as ``*args`` and ``**kwargs``.\n\nThe format for a parameter is::\n\n    name (type): description\n        The description may span multiple lines. Following\n        lines should be indented. The \"(type)\" is optional.\n\n        Multiple paragraphs are supported in parameter\n        descriptions.\n\nArgs:\n    param1 (int): The first parameter.\n    param2 (:obj:`str`, optional): The second parameter. Defaults to None.\n        Second line of description should be indented.\n    *args: Variable length argument list.\n    **kwargs: Arbitrary keyword arguments.\n\nReturns:\n    bool: True if successful, False otherwise.\n\n    The return type is optional and may be specified at the beginning of\n    the ``Returns`` section followed by a colon.\n\n    The ``Returns`` section may span multiple lines and paragraphs.\n    Following lines should be indented to match the first line.\n\n    The ``Returns`` section supports any reStructuredText formatting,\n    including literal blocks::\n\n        {\n            'param1': param1,\n            'param2': param2\n        }\n\nRaises:\n    AttributeError: The ``Raises`` section is a list of all exceptions\n        that are relevant to the interface.\n    ValueError: If `param2` is equal to `param1`.\n\n\"\"\"\n\n>>> parsed = google_parser.parse(docstring)\n>>> pretty(parsed, print_=True)\n\nParsedSection(title=SUMMARY)\n   ParsedPara(lines=1)\n      This is an example of a module level function.\n   ParsedPara(lines=3)\n      Function parameters should be documented in the ``Args`` section. The name\n      of each parameter is required. The type and description of each parameter\n      is optional, but should be included if not obvious.\n   ParsedPara(lines=2)\n      If \\*args or \\*\\*kwargs are accepted,\n      they should be listed as ``*args`` and ``**kwargs``.\n   ParsedPara(lines=1)\n      The format for a parameter is::\n   ParsedPara(lines=2)\n      ParsedPara(lines=1)\n         name (type): description\n      ParsedPara(lines=2)\n         ParsedPara(lines=2)\n            The description may span multiple lines. Following\n            lines should be indented. The \"(type)\" is optional.\n         ParsedPara(lines=2)\n            Multiple paragraphs are supported in parameter\n            descriptions.\n\nParsedSection(title=Args)\n   ParsedItem(name=param1, type=int, desc=The first parameter.)\n   ParsedItem(name=param2, type=:obj:`str`, optional, desc=The second parameter. Defaults to None.)\n      ParsedPara(lines=1)\n         Second line of description should be indented.\n   ParsedItem(name=*args, type=None, desc=Variable length argument list.)\n   ParsedItem(name=**kwargs, type=None, desc=Arbitrary keyword arguments.)\n\nParsedSection(title=Returns)\n   ParsedItem(name=bool, type=None, desc=True if successful, False otherwise.)\n   ParsedPara(lines=2)\n      The return type is optional and may be specified at the beginning of\n      the ``Returns`` section followed by a colon.\n   ParsedPara(lines=2)\n      The ``Returns`` section may span multiple lines and paragraphs.\n      Following lines should be indented to match the first line.\n   ParsedPara(lines=2)\n      The ``Returns`` section supports any reStructuredText formatting,\n      including literal blocks::\n   ParsedPara(lines=2)\n      ParsedPara(lines=1)\n         {\n      ParsedPara(lines=1)\n         ParsedPara(lines=2)\n            'param1': param1,\n            'param2': param2\n   ParsedPara(lines=1)\n      ParsedPara(lines=1)\n         }\n\nParsedSection(title=Raises)\n   ParsedItem(name=AttributeError, type=None, desc=The ``Raises`` section is a list of all exceptions)\n      ParsedPara(lines=1)\n         that are relevant to the interface.\n   ParsedItem(name=ValueError, type=None, desc=If `param2` is equal to `param1`.)\n\n```\n\n## Usage\n\n### Parsing a known style docstring\n\n```python\nfrom pardoc import google_parser, numpy_parser\nparsed = google_parser(docstring)\n# or\nparsed = numpy_parser(docstring)\n```\n\n### Parsing an unknown style docstring\n\n```python\nfrom pardoc import auto_parser\n\nparser = auto_parser(docstring)\n# parsing results from auto_parser is cached and reused.\nparsed = parser.parse(docstring)\n```\n\n### Parsed object\n\nThere are 6 types of parsed objects, include the final `Parsed` object that\nattaches all sections\n\nThe first 5 are all `namedtuple`s:\n\n```python\nParsedItem = namedtuple('ParsedItem',\n                        ['name', 'type', 'desc', 'more'])\nParsedTodo = namedtuple('ParsedTodo', ['todo', 'more'])\nParsedSection = namedtuple('ParsedSection', ['title', 'section'])\nParsedPara = namedtuple('ParsedPara', ['lines'])\nParsedCode = namedtuple('ParsedCode', ['lang', 'codes'])\n\n```\n\nThe `Parsed` is an ordered dictionary (`OrderedDiot`) from [`diot`][2], which\nallows dot access to keys:\n\n```python\nfrom diot import OrderedDiot\n\nclass Parsed(OrderedDiot):\n    \"\"\"Parsed object\"\"\"\n```\n\n### Formatting a parsed object to the original style\n\n```python console\n>>> from pardoc import google_parser\n>>> docstring = \"\"\"Example function with types documented in the docstring.\n\n\nArgs:\n\n\n    param0: No type\n\n    param1 (int): The first parameter.\n    param2 (str): The second parameter.\n\nReturns:\n\n\n    bool: The return value. True for success, False otherwise.\n\n\"\"\"\n>>> # note the arbitrary empty lines\n>>> reformatted = google_parser.format(docstring)\n>>> # or\n>>> reformatted = google_parser.format(google_parser.parse(docstring))\n>>> print(reformatted)\nExample function with types documented in the docstring.\n\nArgs:\n    param0: No type\n    param1 (int): The first parameter.\n    param2 (str): The second parameter.\n\nReturns:\n    bool: The return value. True for success, False otherwise.\n```\n\n### Pretty printing the parsed objects\n\nSee `A quick look`\n\n[1]: https://github.com/lark-parser/lark\n[2]: https://github.com/pwwang/diot\n[3]: https://img.shields.io/pypi/v/pardoc?style=flat-square\n[4]: https://pypi.org/project/pardoc/\n[5]: https://img.shields.io/github/tag/pwwang/pardoc?style=flat-square\n[6]: https://github.com/pwwang/pardoc\n[7]: https://img.shields.io/github/workflow/status/pwwang/pardoc/Build%20and%20Deploy?style=flat-square\n[8]: https://github.com/pwwang/pardoc\n[9]: https://img.shields.io/codacy/grade/a1ba6573a5fa4fc589ce3cf7daa5ddea?style=flat-square\n[10]: https://app.codacy.com/project/pwwang/pardoc/dashboard\n[11]: https://img.shields.io/codacy/coverage/a1ba6573a5fa4fc589ce3cf7daa5ddea?style=flat-square\n[12]: https://img.shields.io/pypi/pyversions/pardoc?style=flat-square\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pwwang/pardoc",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pardoc",
    "package_url": "https://pypi.org/project/pardoc/",
    "platform": null,
    "project_url": "https://pypi.org/project/pardoc/",
    "project_urls": {
      "Homepage": "https://github.com/pwwang/pardoc",
      "Repository": "https://github.com/pwwang/pardoc"
    },
    "release_url": "https://pypi.org/project/pardoc/0.1.0/",
    "requires_dist": [
      "lark-parser (>=0.12,<0.13)",
      "diot (>=0.1.6,<0.2.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Yet another docstring parser for python",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15147794,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05416957a234cbe08d0ac6e6197992f1f37ef5a22232fc15e31280e80b6f44bb",
          "md5": "d7129801075f6db796ae3013e7e76d25",
          "sha256": "1b98d345b077af49ba02a7e85580710c4f993b30e006ece7ddb3e78e9ac6e3b9"
        },
        "downloads": -1,
        "filename": "pardoc-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7129801075f6db796ae3013e7e76d25",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 14101,
        "upload_time": "2020-06-23T22:11:16",
        "upload_time_iso_8601": "2020-06-23T22:11:16.440716Z",
        "url": "https://files.pythonhosted.org/packages/05/41/6957a234cbe08d0ac6e6197992f1f37ef5a22232fc15e31280e80b6f44bb/pardoc-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb6e831ff5f6d62a7f8a04c5bcaad764eed49f3241a4aa214ed89db82b0b8a0b",
          "md5": "2f0729ce61709cb2cea24779e5a661e7",
          "sha256": "e9a5930fca0cb298fd16238cdee420aa4ffcf05b7cad3df71151cfaac08557be"
        },
        "downloads": -1,
        "filename": "pardoc-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2f0729ce61709cb2cea24779e5a661e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 10024,
        "upload_time": "2020-06-23T22:11:18",
        "upload_time_iso_8601": "2020-06-23T22:11:18.775812Z",
        "url": "https://files.pythonhosted.org/packages/bb/6e/831ff5f6d62a7f8a04c5bcaad764eed49f3241a4aa214ed89db82b0b8a0b/pardoc-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b35174931333777cad516268cd4f1b69410391b051ec9e40bed2e32017f0ea16",
          "md5": "eeb4d489dc409ac4a7f613f3628b5f9a",
          "sha256": "11b816efe45a7e6b1c0cc11dd720474b1ada8bdebf742c2b1659ab781fd6d109"
        },
        "downloads": -1,
        "filename": "pardoc-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eeb4d489dc409ac4a7f613f3628b5f9a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 13370,
        "upload_time": "2020-12-11T06:01:04",
        "upload_time_iso_8601": "2020-12-11T06:01:04.996580Z",
        "url": "https://files.pythonhosted.org/packages/b3/51/74931333777cad516268cd4f1b69410391b051ec9e40bed2e32017f0ea16/pardoc-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "caa341a62777236713638a2b80fdbffa1c23ef30a98fcd42ceefbe1d782d7d6d",
          "md5": "5520df98d8c595eba1bc4bc9ce743cac",
          "sha256": "2ec000d39c0c9d1340efb6b787eda717d87e9a0d29364050a5374d969af7cbfd"
        },
        "downloads": -1,
        "filename": "pardoc-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5520df98d8c595eba1bc4bc9ce743cac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 11428,
        "upload_time": "2020-12-11T06:01:06",
        "upload_time_iso_8601": "2020-12-11T06:01:06.069865Z",
        "url": "https://files.pythonhosted.org/packages/ca/a3/41a62777236713638a2b80fdbffa1c23ef30a98fcd42ceefbe1d782d7d6d/pardoc-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb3f65a7d5ec94459b732994003648971bd5c0d17f2e1393517b53622401151a",
          "md5": "4bad984812191ee4c1ac859e4fca5cbf",
          "sha256": "f42bb6d05f80247e9205e562a2e5bbb707fc96938e839b30978c58b174b2e2d3"
        },
        "downloads": -1,
        "filename": "pardoc-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4bad984812191ee4c1ac859e4fca5cbf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 13952,
        "upload_time": "2021-04-08T22:31:53",
        "upload_time_iso_8601": "2021-04-08T22:31:53.266849Z",
        "url": "https://files.pythonhosted.org/packages/fb/3f/65a7d5ec94459b732994003648971bd5c0d17f2e1393517b53622401151a/pardoc-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d125842c81ca2c7eae4e886932fd7b5fb49c3712601601daf0db9836a2f031d8",
          "md5": "50d7806fce8ea402b1b85a3777bf1703",
          "sha256": "f1561a38e3eb7c6712c615a6e6351f364c4008ac076c5d763d2fba1950ef3bf5"
        },
        "downloads": -1,
        "filename": "pardoc-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "50d7806fce8ea402b1b85a3777bf1703",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 11839,
        "upload_time": "2021-04-08T22:31:54",
        "upload_time_iso_8601": "2021-04-08T22:31:54.874787Z",
        "url": "https://files.pythonhosted.org/packages/d1/25/842c81ca2c7eae4e886932fd7b5fb49c3712601601daf0db9836a2f031d8/pardoc-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "421643b2ed40413669d0f8ebbbade4be86154a060715ca10eee283645d929272",
          "md5": "2e35ec7ebc7d5f59ce4f0ea7962f3cb7",
          "sha256": "64348487740f7870fed88668e277c4212ae3c253b6351b6eba566ad0ae190bd5"
        },
        "downloads": -1,
        "filename": "pardoc-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e35ec7ebc7d5f59ce4f0ea7962f3cb7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 13720,
        "upload_time": "2022-09-19T22:07:30",
        "upload_time_iso_8601": "2022-09-19T22:07:30.614975Z",
        "url": "https://files.pythonhosted.org/packages/42/16/43b2ed40413669d0f8ebbbade4be86154a060715ca10eee283645d929272/pardoc-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4208e083a8369078dfbbba30ee1d297d2287f47dc49e482653741db47b16320c",
          "md5": "4dc36086a1c6fd86c8d99b0c237da446",
          "sha256": "38a5947740e9a353a728e60c2db2be547f44c0227308f9d09ac79227fcccc620"
        },
        "downloads": -1,
        "filename": "pardoc-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4dc36086a1c6fd86c8d99b0c237da446",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 12034,
        "upload_time": "2022-09-19T22:07:32",
        "upload_time_iso_8601": "2022-09-19T22:07:32.472201Z",
        "url": "https://files.pythonhosted.org/packages/42/08/e083a8369078dfbbba30ee1d297d2287f47dc49e482653741db47b16320c/pardoc-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "421643b2ed40413669d0f8ebbbade4be86154a060715ca10eee283645d929272",
        "md5": "2e35ec7ebc7d5f59ce4f0ea7962f3cb7",
        "sha256": "64348487740f7870fed88668e277c4212ae3c253b6351b6eba566ad0ae190bd5"
      },
      "downloads": -1,
      "filename": "pardoc-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2e35ec7ebc7d5f59ce4f0ea7962f3cb7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 13720,
      "upload_time": "2022-09-19T22:07:30",
      "upload_time_iso_8601": "2022-09-19T22:07:30.614975Z",
      "url": "https://files.pythonhosted.org/packages/42/16/43b2ed40413669d0f8ebbbade4be86154a060715ca10eee283645d929272/pardoc-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4208e083a8369078dfbbba30ee1d297d2287f47dc49e482653741db47b16320c",
        "md5": "4dc36086a1c6fd86c8d99b0c237da446",
        "sha256": "38a5947740e9a353a728e60c2db2be547f44c0227308f9d09ac79227fcccc620"
      },
      "downloads": -1,
      "filename": "pardoc-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4dc36086a1c6fd86c8d99b0c237da446",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 12034,
      "upload_time": "2022-09-19T22:07:32",
      "upload_time_iso_8601": "2022-09-19T22:07:32.472201Z",
      "url": "https://files.pythonhosted.org/packages/42/08/e083a8369078dfbbba30ee1d297d2287f47dc49e482653741db47b16320c/pardoc-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}