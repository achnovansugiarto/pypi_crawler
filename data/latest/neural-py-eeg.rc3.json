{
  "info": {
    "author": "Brian Murphy",
    "author_email": "Brian.M.Murphy@umail.ucc.ie",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "NEURAL_py: A Neonatal EEG Feature Set in python\n============================================\n\nPython code that replicates the [MATLAB](https://github.com/otoolej/qEEG_feature_set) version of the NEURAL feature set. The code is used\nto generate a set of quantitative features from multichannel EEG recordings. \nFeatures include amplitude measures, spectral measures, and basic connectivity\nmeasures (across hemisphere's only). Also, for preterm EEG (assuming gestational age < 32\nweeks), will generate features from bursts annotations (e.g. maximum inter-burst\ninterval). Burst annotations require a separate package, also available on\n[github](https://github.com/otoolej/py_burst_detector). \n\nFull details of the methods can be found in: `JM O’Toole and GB Boylan (2017). NEURAL:\nquantitative features for newborn EEG using Matlab. ArXiv e-prints, arXiv:1704.05694`\navailable at https://arxiv.org/abs/1704.05694.\n\n---\n\n[Requirements](#requirements) | [Use](#use) | [Quantitative\nfeatures](#quantitative-features) | [Files](#files) | [Test computer\nsetup](#test-computer-setup) | [Licence](#licence) | [References](#references) |\n[Contact](#contact)\n\n## Requirements:\nPython 3.7 or newer with the following packages installed\n| Package       | Version installed  |\n| ------------- |:------------------:|\n| mne           | 0.18.2             |\n| pandas        | 0.25.1             |\n| numpy         | 1.17.1             |\n| matplotlib    | 3.1.1              |\n| scipy         | 1.3.1              |\n| pyEDFlib      | 0.1.14             |\n\n## Use \n\nSet path `(path_to_NEURAL_py)` to the folder location of NEURAL_py. Then the following will load the main functions:\n```\n  import sys\n  sys.path.append(path_to_NEURAL_py)\n  import utils,  preprocessing_EEG, generate_all_features\n```\n\nAs an example, generate simulated EEG and calculate relative spectral power, standard\ndeviation of range-EEG, and brain symmetry index:\n```\n  # generate EEG-like data (coloured Gaussian noise)\n  data_st = utils.gen_test_EEGdata(5*60,64,1)\n\n  # define feature set (or can define in neural_parameters.m):\n  feature_set = ['spectral_relative_power','rEEG_SD', 'connectivity_BSI']\n  \n  # estimate features:\n  feats_per_epochs, feat_pd_names, feat_st, feats_median_ch, feats_median_all = generate_all_features.generate_all_features(data_st, feat_set=feature_set)\n\n  print('Features extracted')\n  print(feat_pd_names)\n```\n\nSee the `demos.py` file for further examples. To run the demo code without previously adding the package:\n```\n  import sys\n  sys.path.append(path_to_NEURAL_py)\n  import demos\n\n\n  demos.artefact_removal_examples()\n  demos.generate_a_subset_of_features_example()\n  demos.generate_all_features_example()\n  demos.preprocessing_and_feature_extraction()\n  demos.load_edf_preprocessing_and_feature_extraction()\n```\n\n\n\n\n\nAll parameters are set the file\n`utils.NEURAL_parameters`.\n\n\n## Quantitative features\n\nThe feature set contains amplitude, spectral, connectivity, and burst annotation features.\nAmplitude features include range-EEG (D. O’ Reilly et al., 2012;\nsee [references](#references)), a clearly-defined alternative to amplitude-integrated EEG\n(aEEG). All features are generated for four different frequency bands (typically 0.5–4,\n4–7, 7–13, and 13–30 Hz), with some exceptions. The following table describes the features\nin more detail:\n\n| feature name               | description                                                                   | FB  |\n|----------------------------|-------------------------------------------------------------------------------|-----|\n| spectral\\_power            | spectral power: absolute                                                      | yes |\n| spectral\\_relative\\_power  | spectral power: relative (normalised to total spectral power)                 | yes |\n| spectral\\_flatness         | spectral entropy: Wiener (measure of spectral flatness)                       | yes |\n| spectral\\_entropy          | spectral entropy: Shannon                                                     | yes |\n| spectral\\_diff             | difference between consecutive short-time spectral estimates                  | yes |\n| spectral\\_edge\\_frequency  | cut-off frequency (fc): 95% of spectral power contained between 0.5 and fc Hz | no  |\n| FD                         | fractal dimension                                                             | yes |\n| amplitude\\_total\\_power    | time-domain signal: total power                                               | yes |\n| amplitude\\_SD              | time-domain signal: standard deviation                                        | yes |\n| amplitude\\_skew            | time-domain signal: skewness (absolute value)                                 | yes |\n| amplitude\\_kurtosis        | time-domain signal: kurtosis                                                  | yes |\n| amplitude\\_env\\_mean       | envelope: mean value                                                          | yes |\n| amplitude\\_env\\_SD         | envelope: standard deviation (SD)                                             | yes |\n| connectivity\\_BSI          | brain symmetry index (see Van Putten 2007)                                    | yes |\n| connectivity\\_corr         | correlation (Spearman) between envelopes of hemisphere-paired channels        | yes |\n| connectivity\\_coh\\_mean    | coherence: mean value                                                         | yes |\n| connectivity\\_coh\\_max     | coherence: maximum value                                                      | yes |\n| connectivity\\_coh\\_freqmax | coherence: frequency of maximum value                                         | yes |\n| rEEG\\_mean                 | range EEG: mean                                                               | yes |\n| rEEG\\_median               | range EEG: median                                                             | yes |\n| rEEG\\_lower\\_margin        | range EEG: lower margin (5th percentile)                                      | yes |\n| rEEG\\_upper\\_margin        | range EEG: upper margin (95th percentile)                                     | yes |\n| rEEG\\_width                | range EEG: upper margin - lower margin                                        | yes |\n| rEEG\\_SD                   | range EEG: standard deviation                                                 | yes |\n| rEEG\\_CV                   | range EEG: coefficient of variation                                           | yes |\n| rEEG\\_asymmetry            | range EEG: measure of skew about median                                       | yes |\n| IBI\\_length\\_max           | burst annotation: maximum (95th percentile) inter-burst interval              | no  |\n| IBI\\_length\\_median        | burst annotation: median inter-burst interval                                 | no  |\n| IBI\\_burst\\_prc            | burst annotation: burst percentage                                            | no  |\n| IBI\\_burst\\_number         | burst annotation: number of bursts                                            | no  |\n\nFB: features generated for each frequency band (FB)\n\n\n## Files\nSome python files (.py files) have a description and an example in the header. To read this\nheader, type `help(filename)` in the console after importing (`import filename`).  Directory structure is as follows: \n```\n├── amplitude_features.py                  # amplitude features\n├── connectivity_features.py               # hemisphere connectivity features\n├── demos.py                               # python file to give examples on how to use the code\n├── fd_features.py                         # fractal dimension features\n├── generate_all_features.py               # main function: generates feature set on EEG\n├── IBI_features.py                        # features from the burst annotations  \n├── LICENSE.md                             # license file  \n├── mfiltfilt.py                           # MATLAB implementation of filtfilt function \n├── preprocessing_EEG.py                   # loads EEG from EDF files (including artefact removal)\n├── README.md                              # readme file describing project\n├── rEEG.py                                # range-EEG (similar to aEEG)\n├── spectral_features.py                   # spectral features\n└── utils.py                               # misc. functions\n```\n\n\n\n\n## Test computer setup\n- hardware:  Intel Core i7-8700K @ 3.2GHz; 32GB memory.\n- operating system: Windows 10 64-bit\n- software: python 3.7\n\n\n## Licence\n\n```\nCopyright (c) 2020, Brian M. Murphy and John M. O' Toole, University College Cork\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n  Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n\n  Neither the name of the University College Cork nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n\n## References\n\n1. JM O’Toole and GB Boylan (2017). NEURAL: quantitative features for newborn EEG using\nMatlab. ArXiv e-prints, arXiv:[1704.05694](https://arxiv.org/abs/1704.05694).\n\n2. D O’Reilly, MA Navakatikyan, M Filip, D Greene, & LJ Van Marter (2012). Peak-to-peak\namplitude in neonatal brain monitoring of premature infants. Clinical Neurophysiology,\n123(11):2139–2153.\n\n3. MJAM van Putten (2007). The revised brain symmetry index. Clinical Neurophysiology,\n118(11):2362–2367.\n\n4. T Higuchi (1988). Approach to an irregular time series on the basis of the fractal theory,\nPhysica D: Nonlinear Phenomena, 31:277–283.\n\n5. MJ Katz (1988). Fractals and the analysis of waveforms. Computers in Biology and\nMedicine, 18(3):145–156.\n\n6. AV Oppenheim, RW Schafer. Discrete-Time Signal Processing. Prentice-Hall, Englewood\nCliffs, NJ 07458, 1999.\n\n7. JM O’ Toole, GB Boylan, S Vanhatalo, NJ Stevenson (2016). Estimating functional brain\nmaturity in very and extremely preterm neonates using automated analysis of the\nelectroencephalogram. Clinical Neurophysiology, 127(8):2910–2918\n\n8. JM O’ Toole, GB Boylan, RO Lloyd, RM Goulding, S Vanhatalo, NJ Stevenson\n(2017). Detecting Bursts in the EEG of Very and Extremely Premature Infants using a\nMulti-Feature Approach. Medical Engineering and\nPhysics, vol. 45, pp. 42-50, 2017. \n[DOI:10.1016/j.medengphy.2017.04.003](https://dx.doi.org/10.1016/j.medengphy.2017.04.003)\n  \n9. JM O'Toole and GB Geraldine (2019). Quantitative Preterm EEG Analysis: The Need for\nCaution in Using Modern Data Science Techniques. Frontiers in Pediatrics 7, 174\n[DOI:10.3389/fped.2019.00174](https://doi.org/10.3389/fped.2019.00174)\n  \n\n## Contact\n\nBrian M. Murphy\n\nNeonatal Brain Research Group,  \n[INFANT Research Centre](https://www.infantcentre.ie/),  \nDepartment of Paediatrics and Child Health,  \nRoom 2.18 UCC Academic Paediatric Unit, Cork University Hospital,  \nUniversity College Cork,  \nIreland\n\n- email: Brian.M.Murphy AT umail dot ucc dot ie \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BrianMur92/NEURAL_py_EEG_feature_set",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "NEURAL-py-EEG",
    "package_url": "https://pypi.org/project/NEURAL-py-EEG/",
    "platform": null,
    "project_url": "https://pypi.org/project/NEURAL-py-EEG/",
    "project_urls": {
      "Bug Tracker": "https://github.com/BrianMur92/NEURAL_py_EEG_feature_set/issues",
      "Homepage": "https://github.com/BrianMur92/NEURAL_py_EEG_feature_set"
    },
    "release_url": "https://pypi.org/project/NEURAL-py-EEG/0.1.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A Neonatal EEG Pre-Processing and Feature Set in python",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14556337,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdbf7a2aac44a4375cf502d16320f51a4186b39f93d43035ca1acfaaaa47667a",
          "md5": "1166afd7169dd98913f487faf71e8725",
          "sha256": "f3ee92d568e941c2c1c0242245aee573b3bbfdb8fbd767be7df247099a7ab26c"
        },
        "downloads": -1,
        "filename": "NEURAL_py_EEG-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1166afd7169dd98913f487faf71e8725",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46594,
        "upload_time": "2022-07-26T08:38:36",
        "upload_time_iso_8601": "2022-07-26T08:38:36.392468Z",
        "url": "https://files.pythonhosted.org/packages/cd/bf/7a2aac44a4375cf502d16320f51a4186b39f93d43035ca1acfaaaa47667a/NEURAL_py_EEG-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21f71afdd326e7c008cc963f0c1231bf03bcd2eacfb88103e533a643c0857a5b",
          "md5": "2405738522ae115d4de94a1b9e59d48e",
          "sha256": "252918825454235cef9b07145725da25071f337926dcac06f519ad3709098292"
        },
        "downloads": -1,
        "filename": "NEURAL_py_EEG-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2405738522ae115d4de94a1b9e59d48e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41990,
        "upload_time": "2022-07-26T08:38:39",
        "upload_time_iso_8601": "2022-07-26T08:38:39.094466Z",
        "url": "https://files.pythonhosted.org/packages/21/f7/1afdd326e7c008cc963f0c1231bf03bcd2eacfb88103e533a643c0857a5b/NEURAL_py_EEG-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa78f4054df4818f621fa319525868401be5692115e19ea7979eae1accddfa4e",
          "md5": "b0be889982f8818df7d96bb632fdee1a",
          "sha256": "8e1b1b609fcdd32ae74f40fd046bf457873a1bb892986a64fe529e6fa708c7c2"
        },
        "downloads": -1,
        "filename": "NEURAL_py_EEG-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0be889982f8818df7d96bb632fdee1a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46600,
        "upload_time": "2022-07-26T08:41:34",
        "upload_time_iso_8601": "2022-07-26T08:41:34.548937Z",
        "url": "https://files.pythonhosted.org/packages/aa/78/f4054df4818f621fa319525868401be5692115e19ea7979eae1accddfa4e/NEURAL_py_EEG-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b804b6849bd3257589348cc139b2d6f360f578b0f49fdea155e08b970689e9e",
          "md5": "78a2eddb0df5e619880a0f534da8a89c",
          "sha256": "be11f8a7196e756d4c3885230317ed0d41ca0bb91dc60be0fe0e8d58895f5ce2"
        },
        "downloads": -1,
        "filename": "NEURAL_py_EEG-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "78a2eddb0df5e619880a0f534da8a89c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41990,
        "upload_time": "2022-07-26T08:41:36",
        "upload_time_iso_8601": "2022-07-26T08:41:36.254017Z",
        "url": "https://files.pythonhosted.org/packages/8b/80/4b6849bd3257589348cc139b2d6f360f578b0f49fdea155e08b970689e9e/NEURAL_py_EEG-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d54b993b2e011b064a333c2e455fe89b68cc42b4443a0ffa1a6f260a1ed7a851",
          "md5": "f3e7dfab153a75cd99499d8d9e7e123b",
          "sha256": "2100b11fdf2d1d22918f95590d59d1325daa2fe60cceda06320f73bffdcff64c"
        },
        "downloads": -1,
        "filename": "NEURAL_py_EEG-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3e7dfab153a75cd99499d8d9e7e123b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46635,
        "upload_time": "2022-07-26T17:54:18",
        "upload_time_iso_8601": "2022-07-26T17:54:18.488079Z",
        "url": "https://files.pythonhosted.org/packages/d5/4b/993b2e011b064a333c2e455fe89b68cc42b4443a0ffa1a6f260a1ed7a851/NEURAL_py_EEG-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03686d0df08843905b1052e215cabdc28be10ec29b5b3fd0af50d321444c3fb8",
          "md5": "e1a08821f9cbef0e185efd2bcb2b1a40",
          "sha256": "4755b9bc97432c8d6637273751561f3e563d351e80f1479e2f1a1091772074e4"
        },
        "downloads": -1,
        "filename": "NEURAL_py_EEG-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e1a08821f9cbef0e185efd2bcb2b1a40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 42027,
        "upload_time": "2022-07-26T17:54:22",
        "upload_time_iso_8601": "2022-07-26T17:54:22.065450Z",
        "url": "https://files.pythonhosted.org/packages/03/68/6d0df08843905b1052e215cabdc28be10ec29b5b3fd0af50d321444c3fb8/NEURAL_py_EEG-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d54b993b2e011b064a333c2e455fe89b68cc42b4443a0ffa1a6f260a1ed7a851",
        "md5": "f3e7dfab153a75cd99499d8d9e7e123b",
        "sha256": "2100b11fdf2d1d22918f95590d59d1325daa2fe60cceda06320f73bffdcff64c"
      },
      "downloads": -1,
      "filename": "NEURAL_py_EEG-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f3e7dfab153a75cd99499d8d9e7e123b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 46635,
      "upload_time": "2022-07-26T17:54:18",
      "upload_time_iso_8601": "2022-07-26T17:54:18.488079Z",
      "url": "https://files.pythonhosted.org/packages/d5/4b/993b2e011b064a333c2e455fe89b68cc42b4443a0ffa1a6f260a1ed7a851/NEURAL_py_EEG-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03686d0df08843905b1052e215cabdc28be10ec29b5b3fd0af50d321444c3fb8",
        "md5": "e1a08821f9cbef0e185efd2bcb2b1a40",
        "sha256": "4755b9bc97432c8d6637273751561f3e563d351e80f1479e2f1a1091772074e4"
      },
      "downloads": -1,
      "filename": "NEURAL_py_EEG-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "e1a08821f9cbef0e185efd2bcb2b1a40",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 42027,
      "upload_time": "2022-07-26T17:54:22",
      "upload_time_iso_8601": "2022-07-26T17:54:22.065450Z",
      "url": "https://files.pythonhosted.org/packages/03/68/6d0df08843905b1052e215cabdc28be10ec29b5b3fd0af50d321444c3fb8/NEURAL_py_EEG-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}