{
  "info": {
    "author": "Jan Šafařík",
    "author_email": "cowjen01@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Swing Server\nSwing Server is an open-source Swing Chart repository written in Python language.\n\n## Installation\n\nThe application can be installed from the PyPI repository using the next command.\n\n```shell\npip install swing-server\n```\n\n## Requirements\n\nTo run the application, you have to provide a connection to the PostgreSQL database\nand some folder, where uploaded archives will be stored. You also need to install\nthe Flask framework from the PyPI repository.\n\n```shell\npip install flask\n```\n\n## Configuration\n\nYou can configure the application using environment variables.\n\n* `SECRET_KEY` Secret token for storing of the user's session. (required)\n* `DATABASE_URI` PostgreSQL database URI. (required)\n* `PUBLIC_URL` Public address where the application will be accessible. (default: http://localhost:5000)\n* `STORAGE_TYPE` There is currently only single type of the storage. (default: local)\n* `STORAGE_LOCAL_DIR` Directory where uploaded charts will be stored. (required)\n* `INIT_USER_EMAIL` E-mail of the initial user that will be created after server start-up. (default: none)\n* `INIT_USER_PASSWORD` Password of the initial user. (required)\n\n## Server Startup\n\nThe application can be started as a Flask server using the next command.\n\n```shell\nFLASK_APP=swing_server flask run\n```\n\n## Server API\n\n* GET `/status` Return current server status, and a number of created charts.\n* GET `/chart?query=<keyword>` Return list of all charts. If the query is specified, then filter charts by their name or description.\n* GET `/release?chart=<chart_name>` Return list of all releases for the specific chart. Releases are ordered by the version.\n* GET `/release/<chart_name>-<version>.zip` Download specific release of the chart. The filename can be for example `redis-1.0.0.zip`.\n* POST `/release` Upload a new release of the chart. If the chart does not exist, then a new one is created. The archive has to be sent as a multipart form under the `chart` key with the `Content-Type` header set to `multipart/form-data`.\n* DELETE `/chart/<chart_name>?version=<version>` Remove chart both from the database and from local storage. If the version is specified, then remove only the specific release.\n* POST `/login` Login user using encoded credentials sent in the `Authorization` header of the request. It is used the `Basic` type of authorization in this format `<username>:<password>`.\n* POST `/logout` Log out currently logged user.\n\n## Project Requirements\n\n### Functional Requirements\n- List all uploaded charts.\n- Get the detail and releases of the chart.\n- Download a specific version of the chart.\n- Upload a new version of the chart.\n- Retrieve server status information.\n\n### Nonfunctional Requirements\n- Charts should be stored in the server filesystem.\n- The server can be configurable using environment variables.\n- Editing of charts has to be secured by user authentication.\n- New chart storage should be easily implementable.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/docker-swing/swing-server",
    "keywords": "docker,swarm,repository",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "swing-server",
    "package_url": "https://pypi.org/project/swing-server/",
    "platform": "",
    "project_url": "https://pypi.org/project/swing-server/",
    "project_urls": {
      "Homepage": "https://github.com/docker-swing/swing-server"
    },
    "release_url": "https://pypi.org/project/swing-server/0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An open-source Swing chart repository server",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9377489,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4829ac2a4b4c15e588cacdec635a29e506e8afd1033bbc1c32829e7b882e15ce",
          "md5": "496d75ff970be0e46d6c6074db25e9d9",
          "sha256": "f025d7a1cd1c51c4be49c2a5ef142cd2680b6209d851bb3f9d3d7d7b649e1cb1"
        },
        "downloads": -1,
        "filename": "swing_server-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "496d75ff970be0e46d6c6074db25e9d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13796,
        "upload_time": "2021-02-10T20:05:15",
        "upload_time_iso_8601": "2021-02-10T20:05:15.125606Z",
        "url": "https://files.pythonhosted.org/packages/48/29/ac2a4b4c15e588cacdec635a29e506e8afd1033bbc1c32829e7b882e15ce/swing_server-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1073ce76cd8e856f182bdadd43c1b32106de2d3069576871b7fb856e65a65af",
          "md5": "bf17ec8c539c9387020a80b257508f6a",
          "sha256": "696971ed913ef6a0056ee617d06da359e8d2e973c265e6feb67b6ef211f3ea09"
        },
        "downloads": -1,
        "filename": "swing_server-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bf17ec8c539c9387020a80b257508f6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13827,
        "upload_time": "2021-02-10T20:08:41",
        "upload_time_iso_8601": "2021-02-10T20:08:41.540585Z",
        "url": "https://files.pythonhosted.org/packages/b1/07/3ce76cd8e856f182bdadd43c1b32106de2d3069576871b7fb856e65a65af/swing_server-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b1073ce76cd8e856f182bdadd43c1b32106de2d3069576871b7fb856e65a65af",
        "md5": "bf17ec8c539c9387020a80b257508f6a",
        "sha256": "696971ed913ef6a0056ee617d06da359e8d2e973c265e6feb67b6ef211f3ea09"
      },
      "downloads": -1,
      "filename": "swing_server-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "bf17ec8c539c9387020a80b257508f6a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13827,
      "upload_time": "2021-02-10T20:08:41",
      "upload_time_iso_8601": "2021-02-10T20:08:41.540585Z",
      "url": "https://files.pythonhosted.org/packages/b1/07/3ce76cd8e856f182bdadd43c1b32106de2d3069576871b7fb856e65a65af/swing_server-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}