{
  "info": {
    "author": "SAAO/SALT",
    "author_email": "salt-software@saao.ac.za",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# SALT Finder Charts\n\nGenerate finder charts for the Southern African Large Telescope (SALT).\n\n## This package will change...\n\nThis is a preliminary and rudimentary version, and you should expect major changes in future versions.\n\n## Installation\n\nThe package can be installed with pip.\n\n```bash\npip install salt_finder_charts\n```\n\n## Usage\n\nYou can generate finder charts with the `standard_finder_chart` function. This returns a generator of binary streams containing the finder charts. For example, this is how you would generate finder charts for a longslit observation of an 18th magnitude target.\n\n```python\nimport astropy.units as u\nfrom salt_finder_charts import standard_finder_charts\nfrom salt_finder_charts.mode import Mode\nfrom salt_finder_charts.output import OutputFormat\n\nfcs = standard_finder_charts(\n    bandpass=\"V\",\n    dec=-27.63792 * u.deg,\n    max_magnitude=18,\n    min_magnitude=18,\n    mode=Mode.LONGSLIT,\n    output_format=OutputFormat.PDF,\n    position_angle=0 * u.deg,\n    ra=78.6568723 * u.deg,\n    slitwidth=2 * u.arcsec,\n    title=\"Test Finding Chart\"\n)\n```\n\nWhy a generator? Isn't there a single finder chart only? Usually that's true. However, in case of an asteroid you may get multiple finder charts, in particular if the considered time interval covers multiple nights.\n\nSaving the generated finder charts to disk is fairly straightforward.\n\n```python\ncounter = 1\nfor fc in fcs:\n    with open(f\"FindingChart-{counter}.pdf\", \"wb\") as f:\n        f.write(fc.read())\n        counter += 1\n``` \n\nIf you are certain there is only one finder chart, you could just use `next()` to get it.\n\n```python\nfc = next(fcs)\n```\n\nHere is how you could view finder charts for an asteroid. Note that both the pytz and the Pillow library must have been installed, and that you have to hit enter for moving to the next finder chart.\n\n```python\nfrom datetime import datetime\nfrom PIL import Image\n\nimport pytz\nimport astropy.units as u\nfrom salt_finder_charts import standard_finder_charts\nfrom salt_finder_charts.mode import Mode\nfrom salt_finder_charts.output import OutputFormat\n\nutc = pytz.timezone(\"UTC\")\nstart = utc.localize(datetime(2019, 6, 28, 11, 31, 0))\nend = utc.localize(datetime(2019, 6, 29, 12, 31, 0))\n\nfor fc in standard_finder_charts(\n    mode=Mode.IMAGING,\n    horizons_id='54827',\n    start_time=start,\n    end_time=end,\n    slitwidth=2 * u.arcsec,\n    basic_annotations=False,\n    output_format=OutputFormat.PNG\n):\n    image = Image.open(fc)\n    image.show()\n    input('Press enter to continue')\n    image.close()\n```\n\nThe `standard_finder_charts` function accepts the following arguments.\n\nArgument | Description | Default\n--- | --- | ---\nbandpass | Bandpass for the magnitudes, such as V.\nbasic_annotations | Whether to add basic annotations only. | False\ndec | Declination of the finder chart center, as an angle between -90 and 90 degrees.\nend_time | End time until which to generate finder charts. This is only relevant for non-sidereal targets. Must be timezone-aware. | End of the current Julian day\nhorizons_id | Identifier for the Horizons service.\nhorizons_stepsize | Time between ephemerides queried from the Horizons service | 5 minutes\nmax_magnitude | Maximum magnitude\nmin_magnitude | Minimum magnitude for the target.\nmode | Observation mode, such as imaging or longslit.\nmos_mask_rsmt | Binary stream containing an RSMT MOS mask definition file.\noutput_format | Output format of the generated finder charts, such as PDF. | `OutputFormat.PDF`\nposition_angle | Position angle. | Generally 0&deg; or, if appropriate, chosen to allow for easier acquisition.\nra | Right ascension of the finder chart center, as an angle between 0 and 360 degrees.\nslitwidth | Slit width, as an angle.\nstart_time | Start time from which to generate finder charts. This is only relevant for non-sidereal targets. | Start of the current Julian day. Must be timezone-aware.\nsurvey | Survey from which to get the finder chart image.  | `Survey.POSS2UKSTU_RED`\ntitle | Title of the finder chart.\n\nWhich of these arguments are required depends on the combination of arguments used. Also, some arguments may be ignored when used with others. For example, the slit width won;t be used if the observing mode is imaging.\n\nWhile normally you wouldn't have to use it, the `salt_finder_charts` package also offers a `finder_charts` function which lets you customise some aspects of the finder chart generation.\n\nFor example, you could create the same longslit observation finder charts as above with the following code.\n\n```python\nimport astropy.units as u\nfrom salt_finder_charts import finder_charts\nfrom salt_finder_charts.ephemerides import ConstantEphemerisService\nfrom salt_finder_charts.image import SurveyImageService, Survey\nfrom salt_finder_charts.mode import LongslitModeDetails\nfrom salt_finder_charts.output import output_pdf\nfrom salt_finder_charts.util import MagnitudeRange\n\nmagnitude_range = MagnitudeRange(bandpass=\"V\", max_magnitude=18, min_magnitude=18)\nephemeris_service = ConstantEphemerisService(\n    ra=78.6568723 * u.deg,\n    dec=-27.63792 * u.deg,\n    magnitude_range=magnitude_range\n)\nimage_service = SurveyImageService(Survey.POSS2UKSTU_RED)\nmode_details = LongslitModeDetails(slitwidth=2 * u.arcsec, pa=0 * u.deg)\nfcs = finder_charts(\n    ephemeris_service=ephemeris_service,\n    image_service=image_service,\n    mode_details=mode_details,\n    output=output_pdf,\n    title=\"test Finding Chart\"\n)\n```\n\nLike the `standard_finder_charts` function, `finder_charts` returns a generator of binary streams with the finder charts. It uses the following arguments.\n\nArgument | Description | Default\n--- | --- | ---\nbasic_annotations | Whether to add basic annotations only. | False\nend_time | End time until which to generate finder charts. This is only relevant for non-sidereal targets. Must be timezone-aware. | End of the current Julian day\nephemeris_service | Service for getting ephemerides.\nimage_service | Service for getting finder chart images.\nmode_details | Observing mode and its details\noutput | Function for converting a finding chart into an output format such as pdf.\nstart_time | Start time from which to generate finder charts. This is only relevant for non-sidereal targets.  Must be timezone-aware. | Start of the current Julian day.\ntitle | Title for the finder chart.\n\n## Command-line interface for generating finder charts\n\nFor convenience, a command `saltfc` is provided, which you can run in a terminal. It saves the generated finding charts in a directory. The filename of the generated files consists of a basename (such as `FinderChart`) followed by a dash and a running number. The basename can be customised with a command line option. Existing files are replaced without warning,\n\nFor example, you can generate finder charts for an asteroid by running the following command in a terminal.\n\n```bash\nsaltfc \\\n    --output-dir /tmp \\\n    --basename \"Asteroid_54827\" \\\n    --mode imaging \\\n    --horizons-id 54827 \\\n    --start-time \"2019-06-28 11:31:00\" \\\n    --end-time \"2019-06-29 12:31:00\" \\\n    --output-format PDF\n```\n\nThe command line options for `saltfc` are essentially the same as the arguments for the `standard_finder_charts` function, plus options for customising the file base name and setting the output directory.\n\nArgument | Description | Default\n--- | --- | ---\n--bandpass | Bandpass for the magnitudes, such as V.\n--basename | Basename for the saved finder chart files | FinderChart\n--basic_annotations | Add basic annotations only. | False\n--dec | Declination of the finder chart center, as an angle between -90 and 90 degrees, in degrees.\n--end_time | End time until which to generate finder charts. This is only relevant for non-sidereal targets. The time is supposed to be in UTC. | End of the current Julian day\n--horizons_id | Identifier for the Horizons service.\n--horizons_stepsize | Minutes between ephemerides queried from the Horizons service | 5\n--max_magnitude | Maximum magnitude for the target\n--min_magnitude | Minimum magnitude for the target.\n--mode | Observation mode, such as imaging or longslit.\n--mos_mask_rsmt | RSMT MOS mask file\n--output-dir | Directory where to store the generated finder chart files.\n--output_format | Output format of the generated finder charts, such as PDF. | PDF\n--position_angle | Position angle, in degrees. | Generally 0 or, if appropriate, chosen to allow for easier acquisition.\n--ra | Right ascension of the finder chart center, as an angle between 0 and 360 degrees, in degrees.\n--slitwidth | Slit width, as an angle in arcseconds.\n--start_time | Start time from which to generate finder charts. This is only relevant for non-sidereal targets. | Start of the current Julian day. The time is supposed to be in UTC.\n--survey | Survey from which to get the finder chart image.  | `Survey.POSS2UKSTU_RED`\n--title | Title of the finder chart.\n\nBoth the start and end time use the format `yyyy-mm-dd hh:mm:ss`. For example, valid values are `2019-01-25 9:45:16'` or `2020-01-02 12:00:00`.\n\n## Command interface for calculating position angles\n\nA suitable position angle for a target can be calculated with the `pa` command. It tries to find a star in an annulus around the target with a magnitude in a given magnitude range. The stsr must have a given minimum separation from its neighbouring stars.\n\nThe radii, magnitudes and minimum separation all have default values, and usually you should not have to specify them. Hence a typical call of `pa` looks as follows./\n\n```bash\npa --ra 217.524 --dec -23.97611\n```\n\nHere is a list of the available arguments for `pa`.\n\nArgument | Description | Default\n--- | --- | ---\n--dec | Declination of the target, in degrees.\n--max-mag | Maximum (faintest) magnitude a suitable star may have. | 18\n--max-radius | Maximum radius, in arcminutes, of the annulus in which the suitable stars are located. \" | 3\n--min-mag | Minimum (brightest) magnitude a suitable star may have. | 15\n--min-radius | Minimum radius of the annulus in which the suitable stars are located. | 1\n--min-separation | Minimum angular distance, in arcseconds, a suitable star must have from its neighbouring stars. | 10\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/saltastroops/salt_finder_charts",
    "keywords": "salt_finder_charts",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "salt-finder-charts",
    "package_url": "https://pypi.org/project/salt-finder-charts/",
    "platform": "",
    "project_url": "https://pypi.org/project/salt-finder-charts/",
    "project_urls": {
      "Homepage": "https://github.com/saltastroops/salt_finder_charts"
    },
    "release_url": "https://pypi.org/project/salt-finder-charts/0.3.7/",
    "requires_dist": [
      "aplpy",
      "astropy",
      "astroquery",
      "Click",
      "defusedxml",
      "ephem",
      "gilmenel",
      "numpy",
      "pillow",
      "PyPDF2",
      "pyregion",
      "pytz"
    ],
    "requires_python": "",
    "summary": "Generate finder charts for the Southern African Large Telescope (SALT)",
    "version": "0.3.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8906819,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2526fdf07eebfbbc96766924226d3cc8cedce0f67606c36cf73ff95442e9f932",
          "md5": "3608e6b672f4a952452ea86183f6363f",
          "sha256": "b723f38210f2a0bdbaf7c35b032a016ddd779fe9e400c839dec6494f64907a75"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3608e6b672f4a952452ea86183f6363f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13267,
        "upload_time": "2019-05-10T11:10:40",
        "upload_time_iso_8601": "2019-05-10T11:10:40.989172Z",
        "url": "https://files.pythonhosted.org/packages/25/26/fdf07eebfbbc96766924226d3cc8cedce0f67606c36cf73ff95442e9f932/salt_finder_charts-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4a89f9c201626b6a4539ec1e103371c6a80c461afd3f92f0afe1d676c8d66cf",
          "md5": "fff0ebc6695df11927b28ca756cd0e69",
          "sha256": "4ed5436800d2ba70bb1037b70b7a5f74a7912e6b105134c989be72cc6cacf28a"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fff0ebc6695df11927b28ca756cd0e69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13573,
        "upload_time": "2019-05-10T11:10:43",
        "upload_time_iso_8601": "2019-05-10T11:10:43.310636Z",
        "url": "https://files.pythonhosted.org/packages/c4/a8/9f9c201626b6a4539ec1e103371c6a80c461afd3f92f0afe1d676c8d66cf/salt_finder_charts-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31ecda03f83f75bee3221d9e451c1b795c4841da4388930b448d1c08b5372582",
          "md5": "f65bfdb8e6e5042427fab6cf377f855c",
          "sha256": "f5ff3c74f25c6ac0475d21bd72b648d8836dec3c0ff53acf70015f2a6a7bccb0"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f65bfdb8e6e5042427fab6cf377f855c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27213,
        "upload_time": "2020-01-04T16:44:04",
        "upload_time_iso_8601": "2020-01-04T16:44:04.133091Z",
        "url": "https://files.pythonhosted.org/packages/31/ec/da03f83f75bee3221d9e451c1b795c4841da4388930b448d1c08b5372582/salt_finder_charts-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76181338b5151952c77df34e4c027801f687d0cab3471e88a851be4366a67af0",
          "md5": "fe7628178e8f12d60a65580dccbd95b8",
          "sha256": "551c38a1894a6e51a1f38fdf172e306899112f4be4b6fc2784b7993ea9e5f577"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fe7628178e8f12d60a65580dccbd95b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24130,
        "upload_time": "2020-01-04T16:44:06",
        "upload_time_iso_8601": "2020-01-04T16:44:06.106352Z",
        "url": "https://files.pythonhosted.org/packages/76/18/1338b5151952c77df34e4c027801f687d0cab3471e88a851be4366a67af0/salt_finder_charts-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffd28963fbb7393a1b2dfbe54ac9256bcf1e1a20802669acceef0e1eaf7d1b52",
          "md5": "be9b784f95bed5470b93e4c71dd53b66",
          "sha256": "29159b3074b5b0355599cdf0a1d9e5189e2c120a00d35046e061a7a818cb55d1"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be9b784f95bed5470b93e4c71dd53b66",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30321,
        "upload_time": "2020-05-29T17:55:45",
        "upload_time_iso_8601": "2020-05-29T17:55:45.683177Z",
        "url": "https://files.pythonhosted.org/packages/ff/d2/8963fbb7393a1b2dfbe54ac9256bcf1e1a20802669acceef0e1eaf7d1b52/salt_finder_charts-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "056cc7833a7b429c68b6c8d0414b9e82f47d101838c3dcdce7d3477af70541c2",
          "md5": "a241c1a4961d6e0dd121b3f599e24afd",
          "sha256": "10016788da982ffd14af089cdc8910f733c34be6efdf9d88877c66d90226d3c8"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a241c1a4961d6e0dd121b3f599e24afd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27023,
        "upload_time": "2020-05-29T17:55:47",
        "upload_time_iso_8601": "2020-05-29T17:55:47.398288Z",
        "url": "https://files.pythonhosted.org/packages/05/6c/c7833a7b429c68b6c8d0414b9e82f47d101838c3dcdce7d3477af70541c2/salt_finder_charts-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cc1bab7d0cac15ae680935374e0460f894af8c06a51071f2be9484389171d9d",
          "md5": "8c786d511c59fc76d7cb882084a3e197",
          "sha256": "2910ccacb9f6e4d37da23420490a2f2a236fb50bd5533e7134c76ed4c554bca9"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c786d511c59fc76d7cb882084a3e197",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30154,
        "upload_time": "2020-10-05T13:44:51",
        "upload_time_iso_8601": "2020-10-05T13:44:51.753095Z",
        "url": "https://files.pythonhosted.org/packages/4c/c1/bab7d0cac15ae680935374e0460f894af8c06a51071f2be9484389171d9d/salt_finder_charts-0.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eadeb3b46f118f913497b7fa4485a2d8cfafb1742e20d9215b112d3c31b6f64f",
          "md5": "af43cfe5c96cc220503623142d255690",
          "sha256": "a31eb6973afc7116dc9c2fefcebd3e763b625f3f784e0150d1179866aa67c8e0"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "af43cfe5c96cc220503623142d255690",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27796,
        "upload_time": "2020-10-05T13:44:53",
        "upload_time_iso_8601": "2020-10-05T13:44:53.376082Z",
        "url": "https://files.pythonhosted.org/packages/ea/de/b3b46f118f913497b7fa4485a2d8cfafb1742e20d9215b112d3c31b6f64f/salt_finder_charts-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "528eec50d88038cf556cc78863bb9a72d6895fd59206828dc051f84faaef32e5",
          "md5": "3f0e0826e385bb9ed0f4ad9f87e1589e",
          "sha256": "5a1a74a023edeb8a496db972e44c30a05fe0bef2ce5d3ba841d5860cb2407cf4"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.3.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f0e0826e385bb9ed0f4ad9f87e1589e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30257,
        "upload_time": "2020-11-05T13:54:00",
        "upload_time_iso_8601": "2020-11-05T13:54:00.510783Z",
        "url": "https://files.pythonhosted.org/packages/52/8e/ec50d88038cf556cc78863bb9a72d6895fd59206828dc051f84faaef32e5/salt_finder_charts-0.3.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaa9992d98541a6b66e2cd0ab729892279f00978761f2de6b75d69acef4fb1b7",
          "md5": "7e8a245a934c5b0c2c8c0a9f790f591b",
          "sha256": "7fa0317f9cdbaa1d4845238ba9531f60cc32af7cf8d20621d55078e11d57daa3"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7e8a245a934c5b0c2c8c0a9f790f591b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28006,
        "upload_time": "2020-11-05T13:54:03",
        "upload_time_iso_8601": "2020-11-05T13:54:03.059721Z",
        "url": "https://files.pythonhosted.org/packages/ea/a9/992d98541a6b66e2cd0ab729892279f00978761f2de6b75d69acef4fb1b7/salt_finder_charts-0.3.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6a3668360aa43d75c75339a23c672b4e33594f3ef194ff397db756f3431554d",
          "md5": "7d76d029f11ee425bfb5daeb539e776d",
          "sha256": "fcc8fb50373103bd0f3c57c134876daf73735c2178b3412743c0e5858d0e2a86"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.3.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d76d029f11ee425bfb5daeb539e776d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30274,
        "upload_time": "2020-11-06T19:03:42",
        "upload_time_iso_8601": "2020-11-06T19:03:42.710781Z",
        "url": "https://files.pythonhosted.org/packages/d6/a3/668360aa43d75c75339a23c672b4e33594f3ef194ff397db756f3431554d/salt_finder_charts-0.3.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "904180be737c0768f8049a74cded9b787555a3b92e0aa0965d6a5fcff647a71d",
          "md5": "139fb39ba71a7fad363a39cb66f34015",
          "sha256": "7f8ce332fd4f8154c30be144207185e1fb8307320fa61fd96025fcc8f32e6cbc"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.3.6.tar.gz",
        "has_sig": false,
        "md5_digest": "139fb39ba71a7fad363a39cb66f34015",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28033,
        "upload_time": "2020-11-06T19:03:44",
        "upload_time_iso_8601": "2020-11-06T19:03:44.419169Z",
        "url": "https://files.pythonhosted.org/packages/90/41/80be737c0768f8049a74cded9b787555a3b92e0aa0965d6a5fcff647a71d/salt_finder_charts-0.3.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97a91c4d6221d741b2d0ef34b1cec7e3038e5ca195cfa6ecc5850b9f721197ec",
          "md5": "db44db46447d9ebb58e3f1f4cc20aa23",
          "sha256": "1bccdfaf73aecd0c679df051526bf0920557d0ddede613ec2283b589f415dbbb"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.3.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db44db46447d9ebb58e3f1f4cc20aa23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30271,
        "upload_time": "2020-12-15T19:05:50",
        "upload_time_iso_8601": "2020-12-15T19:05:50.378918Z",
        "url": "https://files.pythonhosted.org/packages/97/a9/1c4d6221d741b2d0ef34b1cec7e3038e5ca195cfa6ecc5850b9f721197ec/salt_finder_charts-0.3.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13480c161bab087ecda70868048831f05f1060a053518cb3f1f8c414a436e4e5",
          "md5": "01713b72bb3a900794dc879a63fdb0b5",
          "sha256": "34557da43e7dfd786cfc76aaed85133a142db4a95a0c33b598b30e3ca2f324d8"
        },
        "downloads": -1,
        "filename": "salt_finder_charts-0.3.7.tar.gz",
        "has_sig": false,
        "md5_digest": "01713b72bb3a900794dc879a63fdb0b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28074,
        "upload_time": "2020-12-15T19:05:52",
        "upload_time_iso_8601": "2020-12-15T19:05:52.069445Z",
        "url": "https://files.pythonhosted.org/packages/13/48/0c161bab087ecda70868048831f05f1060a053518cb3f1f8c414a436e4e5/salt_finder_charts-0.3.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97a91c4d6221d741b2d0ef34b1cec7e3038e5ca195cfa6ecc5850b9f721197ec",
        "md5": "db44db46447d9ebb58e3f1f4cc20aa23",
        "sha256": "1bccdfaf73aecd0c679df051526bf0920557d0ddede613ec2283b589f415dbbb"
      },
      "downloads": -1,
      "filename": "salt_finder_charts-0.3.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "db44db46447d9ebb58e3f1f4cc20aa23",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 30271,
      "upload_time": "2020-12-15T19:05:50",
      "upload_time_iso_8601": "2020-12-15T19:05:50.378918Z",
      "url": "https://files.pythonhosted.org/packages/97/a9/1c4d6221d741b2d0ef34b1cec7e3038e5ca195cfa6ecc5850b9f721197ec/salt_finder_charts-0.3.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "13480c161bab087ecda70868048831f05f1060a053518cb3f1f8c414a436e4e5",
        "md5": "01713b72bb3a900794dc879a63fdb0b5",
        "sha256": "34557da43e7dfd786cfc76aaed85133a142db4a95a0c33b598b30e3ca2f324d8"
      },
      "downloads": -1,
      "filename": "salt_finder_charts-0.3.7.tar.gz",
      "has_sig": false,
      "md5_digest": "01713b72bb3a900794dc879a63fdb0b5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28074,
      "upload_time": "2020-12-15T19:05:52",
      "upload_time_iso_8601": "2020-12-15T19:05:52.069445Z",
      "url": "https://files.pythonhosted.org/packages/13/48/0c161bab087ecda70868048831f05f1060a053518cb3f1f8c414a436e4e5/salt_finder_charts-0.3.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}