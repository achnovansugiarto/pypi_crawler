{
  "info": {
    "author": "brainelectronics",
    "author_email": "info@brainelectronics.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# MicroPython Winbond Flash\n\n[![Downloads](https://pepy.tech/badge/micropython-winbond)](https://pepy.tech/project/micropython-winbond)\n![Release](https://img.shields.io/github/v/release/brainelectronics/micropython-winbond?include_prereleases&color=success)\n![MicroPython](https://img.shields.io/badge/micropython-Ok-green.svg)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![CI](https://github.com/brainelectronics/micropython-winbond/actions/workflows/release.yml/badge.svg)](https://github.com/brainelectronics/micropython-winbond/actions/workflows/release.yml)\n\nMicroPython library to interact with Winbond W25Q Flash chips\n\nðŸ“š The latest documentation is available at\n[MicroPython Winbond ReadTheDocs][ref-rtd-micropython-winbond] ðŸ“š\n\n-----------------------\n\n<!-- MarkdownTOC -->\n\n- [Installation](#installation)\n\t- [Install required tools](#install-required-tools)\n- [Stetup](#stetup)\n\t- [Install package with upip](#install-package-with-upip)\n\t\t- [General](#general)\n\t\t- [Specific version](#specific-version)\n\t\t- [Test version](#test-version)\n\t- [Manually](#manually)\n\t\t- [Upload files to board](#upload-files-to-board)\n- [Usage](#usage)\n- [Credits](#credits)\n\n<!-- /MarkdownTOC -->\n\n## Installation\n\n### Install required tools\n\nPython3 must be installed on your system. Check the current Python version\nwith the following command\n\n```bash\npython --version\npython3 --version\n```\n\nDepending on which command `Python 3.x.y` (with x.y as some numbers) is\nreturned, use that command to proceed.\n\n```bash\npython3 -m venv .venv\nsource .venv/bin/activate\n\npip install -r requirements.txt\n```\n\nFor interaction with the filesystem of the device the\n[Remote MicroPython shell][ref-remote-upy-shell] can be used.\n\nTest the tool by showing its man/help info description.\n\n```bash\nrshell --help\n```\n\n## Stetup\n\n### Install package with upip\n\nConnect your MicroPython board to a network\n\n```python\nimport network\nstation = network.WLAN(network.STA_IF)\nstation.connect('SSID', 'PASSWORD')\nstation.isconnected()\n```\n\n#### General\n\nInstall the latest package version of this lib on the MicroPython device\n\n```python\nimport mip\nmip.install(\"github:brainelectronics/micropython-winbond\")\n```\n\nFor MicroPython versions below 1.19.1 use the `upip` package instead of `mip`\n\n```python\nimport upip\nupip.install('micropython-winbond')\n```\n\n#### Specific version\n\nInstall a specific, fixed package version of this lib on the MicroPython device\n\n```python\nimport mip\n# install a verions of a specific branch\nmip.install(\"github:brainelectronics/micropython-winbond\", version=\"feature/add-docs-and-detailed-examples\")\n# install a tag version\nmip.install(\"github:brainelectronics/micropython-winbond\", version=\"0.4.0\")\n```\n\nFor MicroPython versions below 1.19.1 use the `upip` package instead of `mip`\n\n```python\nimport upip\nupip.install('micropython-winbond')\n```\n\n#### Test version\n\nInstall a specific release candidate version uploaded to\n[Test Python Package Index](https://test.pypi.org/) on every PR on the\nMicroPython device. If no specific version is set, the latest stable version\nwill be used.\n\n```python\nimport mip\nmip.install(\"github:brainelectronics/micropython-winbond\", version=\"0.4.0-rc2.dev4\")\n```\n\nFor MicroPython versions below 1.19.1 use the `upip` package instead of `mip`\n\n```python\nimport upip\n# overwrite index_urls to only take artifacts from test.pypi.org\nupip.index_urls = ['https://test.pypi.org/pypi']\nupip.install('micropython-winbond')\n```\n\nSee also [brainelectronics Test PyPi Server in Docker][ref-brainelectronics-test-pypiserver]\nfor a test PyPi server running on Docker.\n\n### Manually\n\n#### Upload files to board\n\nCopy the module to the MicroPython board and import them as shown below\nusing [Remote MicroPython shell][ref-remote-upy-shell]\n\nOpen the remote shell with the following command. Additionally use `-b 115200`\nin case no CP210x is used but a CH34x.\n\n```bash\nrshell -p /dev/tty.SLAB_USBtoUART --editor nano\n```\n\nPerform the following command inside the `rshell` to copy all files and\nfolders to the device\n\n```bash\nmkdir /pyboard/lib\nmkdir /pyboard/lib/winbond\n\ncp winbond.py /pyboard/lib/winbond\ncp main.py /pyboard/lib/winbond\ncp boot.py /pyboard/lib/winbond\n```\n\n## Usage\n\n```python\nfrom machine import SPI, Pin\nimport os\nfrom winbond import W25QFlash\n\n# the used SPI and CS pin is setup specific, change accordingly\nflash = W25QFlash(spi=SPI(2), cs=Pin(5), baud=2000000, software_reset=True)\n\nflash_mount_point = '/external'\n\ntry:\n    os.mount(flash, flash_mount_point)\nexcept Exception as e:\n    if e.errno == 19:\n        # [Errno 19] ENODEV aka \"No such device\"\n        # create the filesystem, this takes some seconds (approx. 10 sec)\n        print('Creating filesystem for external flash ...')\n        print('This might take up to 10 seconds')\n        os.VfsFat.mkfs(flash)\n    else:\n        # takes some seconds/minutes (approx. 40 sec for 128MBit/16MB)\n        print('Formatting external flash ...')\n        print('This might take up to 60 seconds')\n        # !!! only required on the very first start (will remove everything)\n        flash.format()\n\n        # create the filesystem, this takes some seconds (approx. 10 sec)\n        print('Creating filesystem for external flash ...')\n        print('This might take up to 10 seconds')\n        # !!! only required on first setup and after formatting\n        os.VfsFat.mkfs(flash)\n\n    print('Filesystem for external flash created')\n\n    # finally mount the external flash\n    os.mount(flash, flash_mount_point)\n```\n\n## Credits\n\nKudos and big thank you to [crizeo of the MicroPython Forum][ref-crizeo] and\nhis [post to use Winbond flash chips][ref-upy-forum-winbond-driver]\n\n<!-- Links -->\n[ref-rtd-micropython-winbond]: https://micropython-winbond.readthedocs.io/en/latest/\n[ref-remote-upy-shell]: https://github.com/dhylands/rshell\n[ref-brainelectronics-test-pypiserver]: https://github.com/brainelectronics/test-pypiserver\n[ref-be32]: https://github.com/brainelectronics/BE32-01/\n[ref-pfalcon-picoweb-sdist-upip]: https://github.com/pfalcon/picoweb/blob/b74428ebdde97ed1795338c13a3bdf05d71366a0/sdist_upip.py\n[ref-test-pypi]: https://test.pypi.org/\n[ref-pypi]: https://pypi.org/\n[ref-invalid-auth-test-pypi]: https://test.pypi.org/help/#invalid-auth\n[ref-crizeo]: https://forum.micropython.org/memberlist.php?mode=viewprofile&u=3067\n[ref-upy-forum-winbond-driver]: https://forum.micropython.org/viewtopic.php?f=16&t=3899&start=10\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brainelectronics/micropython-winbond",
    "keywords": "micropython,winbond,library",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "micropython-winbond",
    "package_url": "https://pypi.org/project/micropython-winbond/",
    "platform": null,
    "project_url": "https://pypi.org/project/micropython-winbond/",
    "project_urls": {
      "Bug Reports": "https://github.com/brainelectronics/micropython-winbond/issues",
      "Homepage": "https://github.com/brainelectronics/micropython-winbond",
      "Source": "https://github.com/brainelectronics/micropython-winbond"
    },
    "release_url": "https://pypi.org/project/micropython-winbond/0.4.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple MicroPython Winbond library",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17431727,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1c07509bfb068055f853b81604e228a9147abbdd85be8e1ec1e9f767ab2b2a1",
          "md5": "e888542f8d215faef851d6385f0609eb",
          "sha256": "98e7bb69fb37f5126be66fa0fe5e047094bd43fc27a7572e87081de676b6bbfb"
        },
        "downloads": -1,
        "filename": "micropython-winbond-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e888542f8d215faef851d6385f0609eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7441,
        "upload_time": "2022-02-21T18:50:36",
        "upload_time_iso_8601": "2022-02-21T18:50:36.002716Z",
        "url": "https://files.pythonhosted.org/packages/d1/c0/7509bfb068055f853b81604e228a9147abbdd85be8e1ec1e9f767ab2b2a1/micropython-winbond-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6136cf76e68bf38c0a578b40db968372645824529811496dee31a88944142bcd",
          "md5": "7620c6bbcefab328da5952dabfe933be",
          "sha256": "8a98714af8e30c52e604556847a561fe17128682f782b4a2d410c1719721c11d"
        },
        "downloads": -1,
        "filename": "micropython-winbond-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7620c6bbcefab328da5952dabfe933be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7372,
        "upload_time": "2022-11-03T13:01:44",
        "upload_time_iso_8601": "2022-11-03T13:01:44.493572Z",
        "url": "https://files.pythonhosted.org/packages/61/36/cf76e68bf38c0a578b40db968372645824529811496dee31a88944142bcd/micropython-winbond-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b567cb0bf23ba1b810e0649c325a48c25f298ae94300da9a8f54e195f33676d",
          "md5": "053b7ae5e6405da9de1f8e86543b959a",
          "sha256": "364a1324a928ecfbce294f6a1938af1b577cfb815e7d7394b81b87594c19ec2a"
        },
        "downloads": -1,
        "filename": "micropython-winbond-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "053b7ae5e6405da9de1f8e86543b959a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7163,
        "upload_time": "2023-03-24T14:21:07",
        "upload_time_iso_8601": "2023-03-24T14:21:07.429609Z",
        "url": "https://files.pythonhosted.org/packages/9b/56/7cb0bf23ba1b810e0649c325a48c25f298ae94300da9a8f54e195f33676d/micropython-winbond-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b567cb0bf23ba1b810e0649c325a48c25f298ae94300da9a8f54e195f33676d",
        "md5": "053b7ae5e6405da9de1f8e86543b959a",
        "sha256": "364a1324a928ecfbce294f6a1938af1b577cfb815e7d7394b81b87594c19ec2a"
      },
      "downloads": -1,
      "filename": "micropython-winbond-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "053b7ae5e6405da9de1f8e86543b959a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7163,
      "upload_time": "2023-03-24T14:21:07",
      "upload_time_iso_8601": "2023-03-24T14:21:07.429609Z",
      "url": "https://files.pythonhosted.org/packages/9b/56/7cb0bf23ba1b810e0649c325a48c25f298ae94300da9a8f54e195f33676d/micropython-winbond-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}