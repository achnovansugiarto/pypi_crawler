{
  "info": {
    "author": null,
    "author_email": "Noam Teyssier <noam.teyssier@ucsf.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# adpbulk\n\n# Summary\nPerforms pseudobulking of an `AnnData` object based on columns available in the `.obs` dataframe. This was originally intended to be used to pseudo-bulk single-cell RNA-seq data to higher order combinations of the data as to use existing RNA-seq differential expression tools such as `edgeR` and `DESeq2`. An example usage of this would be pseudobulking cells based on their cluster, sample of origin, or CRISPRi guide identity. This is intended to work on both individual categories (i.e. one of the examples) or combinations of categories (two of the three, etc.)\n\n# Installation\n## From PyPI\n```bash\npip install adpbulk\n```\n\n## From Github\n```bash\ngit clone https://github.com/noamteyssier/adpbulk\ncd adpbulk\npip install .\npytest -v \n```\n\n# Usage\nThis package is intended to be used as a python module. \n\n## Single Category Pseudo-Bulk\nThe simplest use case is to aggregate on a single category. This will aggregate all the observations belonging to the same class within the category and return a pseudo-bulked matrix with dimensions equal to the number of values within the category. \n```python3\nfrom adpbulk import ADPBulk\n\n# initialize the object\nadpb = ADPBulk(adat, \"category_name\")\n\n# perform the pseudobulking\npseudobulk_matrix = adpb.fit_transform()\n\n# retrieve the sample meta data (useful for easy incorporation with edgeR)\nsample_meta = adpb.get_meta()\n```\n\n## Multiple Category Pseudo-Bulk\nA common use case is to aggregate on multiple categories. This will aggregate all observations beloging to the combination of classes within two categories and return a pseudo-bulked matrix with dimensions equal to the number of values of nonzero intersections between categories. \n```python3\nfrom adpbulk import ADPBulk\n\n# initialize the object\nadpb = ADPBulk(adat, [\"category_a\", \"category_b\"])\n\n# perform the pseudobulking\npseudobulk_matrix = adpb.fit_transform()\n\n# retrieve the sample meta data (useful for easy incorporation with edgeR)\nsample_meta = adpb.get_meta()\n```\n\n## Pseudo-Bulk using raw counts\nSome differential expression software expects the counts to be untransformed counts. SCANPY uses the `.raw` attribute in its `AnnData` objects to store the initial `AnnData` object before transformation. If you'd like to perform the pseudo-bulk aggregation using these raw counts you can provide the `use_raw=True` flag. \n```python3\nfrom adpbulk import ADPBulk\n\n# initialize the object w. aggregation on the `.raw` attribute\nadpb = ADPBulk(adat, [\"category_a\", \"category_b\"], use_raw=True)\n\n# perform the pseudobulking\npseudobulk_matrix = adpb.fit_transform()\n\n# retrieve the sample meta data (useful for easy incorporation with edgeR)\nsample_meta = adpb.get_meta()\n```\n\n## Alternative Aggregation Options\nIt may also be useful to aggregate using an alternative function besides the sum - this option will allow you to choose between sum, mean, and median as an aggregation function.\n```python3\nfrom adpbulk import ADPBulk\n\n# initialize the object w. an alternative aggregation option\n# aggregation options are: sum, mean, and median\n# default aggregation is sum\nadpb = ADPBulk(adat, \"category\", method=\"mean\")\n\n# perform the pseudobulking\npseudobulk_matrix = adpb.fit_transform()\n\n# retrieve the sample meta data (useful for easy incorporation with edgeR)\nsample_meta = adpb.get_meta()\n```\n\n## Alternative Formatting Options\n```python3\nfrom adpbulk import ADPBulk\n\n# initialize the object w. alternative name formatting options\nadpb = ADPBulk(adat, [\"category_a\", \"category_b\"], name_delim=\".\", group_delim=\"::\")\n\n# perform the pseudobulking\npseudobulk_matrix = adpb.fit_transform()\n\n# retrieve the sample meta data (useful for easy incorporation with edgeR)\nsample_meta = adpb.get_meta()\n```\n\n\n## Example `AnnData` Function\nHere is a function to generate an `AnnData` object to test the module or to play with the object if unfamiliar.\n```python3\nimport numpy as np\nimport pandas as pd\nimport anndata as ad\n\ndef build_adat(SIZE_N=100, SIZE_M=100):\n    \"\"\"\n    creates an anndata for testing\n    \"\"\"\n    # generates random values (mock transformed data)\n\tmat = np.random.random((SIZE_N, SIZE_M))\n\n\t# generates random values (mock raw count data)\n    raw = np.random.randint(0, 1000, (SIZE_N, SIZE_M))\n\n\t# creates the observations and categories\n    obs = pd.DataFrame({\n        \"cell\": [f\"b{idx}\" for idx in np.arange(SIZE_N)],\n        \"cA\": np.random.choice(np.random.choice(5)+1, SIZE_N),\n        \"cB\": np.random.choice(np.random.choice(5)+1, SIZE_N),\n        \"cC\": np.random.choice(np.random.choice(5)+1, SIZE_N),\n        \"cD\": np.random.choice(np.random.choice(5)+1, SIZE_N),\n        }).set_index(\"cell\")\n\n\t# creates the variables (genes) and categories\n    var = pd.DataFrame({\n        \"symbol\": [f\"g{idx}\" for idx in np.arange(SIZE_M)],\n        \"cA\": np.random.choice(np.random.choice(5)+1, SIZE_M),\n        \"cB\": np.random.choice(np.random.choice(5)+1, SIZE_M),\n        \"cC\": np.random.choice(np.random.choice(5)+1, SIZE_M),\n        \"cD\": np.random.choice(np.random.choice(5)+1, SIZE_M),\n        }).set_index(\"symbol\")\n    \n\t# Creates the `AnnData` object\n\tadat = ad.AnnData(\n            X=mat,\n            obs=obs,\n            var=var)\n    \n\t# Creates an `AnnData` object to simulate the `.raw` attribute\n\tadat_raw = ad.AnnData(\n            X=raw,\n            obs=obs,\n            var=var)\n    \n\t# Sets the `.raw` attribute\n\tadat.raw = adat_raw\n    \n\treturn adat\n\nadat = build_adat()\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "adpbulk",
    "package_url": "https://pypi.org/project/adpbulk/",
    "platform": null,
    "project_url": "https://pypi.org/project/adpbulk/",
    "project_urls": {
      "Source": "https://github.com/noamteyssier/adpbulk"
    },
    "release_url": "https://pypi.org/project/adpbulk/0.1.3/",
    "requires_dist": [
      "anndata>=0.7.4",
      "numpy>=1.17.0",
      "pandas>=0.21",
      "tqdm",
      "pytest"
    ],
    "requires_python": null,
    "summary": "Pseudo-Bulking Single-Cell RNA-seq",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13654949,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b082feceb2f66c9cf844e62ce453b08e1d83553c921ee064a508d67afde8283",
          "md5": "f3ff7d3088c39888e507a53208c4c7ae",
          "sha256": "69f6cc6da8a15d2b64b4abd92d7be0b8da206b0c6e3625ae3c4c813bbf9f1456"
        },
        "downloads": -1,
        "filename": "adpbulk-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3ff7d3088c39888e507a53208c4c7ae",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5835,
        "upload_time": "2021-12-11T02:25:31",
        "upload_time_iso_8601": "2021-12-11T02:25:31.237770Z",
        "url": "https://files.pythonhosted.org/packages/5b/08/2feceb2f66c9cf844e62ce453b08e1d83553c921ee064a508d67afde8283/adpbulk-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad8d3d5a37c0f5eb3cbff1b3ed4749302e06d5a9daf61ec0d889260b1400819b",
          "md5": "6a4eea05713c03598669630ddfc35ae0",
          "sha256": "cbb9be31ac62eb58ff17d03ecd65c24534e92aae7298c975022d0754b963aafc"
        },
        "downloads": -1,
        "filename": "adpbulk-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6a4eea05713c03598669630ddfc35ae0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7364,
        "upload_time": "2021-12-11T02:25:32",
        "upload_time_iso_8601": "2021-12-11T02:25:32.706954Z",
        "url": "https://files.pythonhosted.org/packages/ad/8d/3d5a37c0f5eb3cbff1b3ed4749302e06d5a9daf61ec0d889260b1400819b/adpbulk-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62bfa732b742220e8b5a0e646c6a6d59b90110401242f0226b76e711cea926fc",
          "md5": "b3d5b6f519c9a6ba820ed31cb78b13e5",
          "sha256": "15333270933cc78de1fc4c15009186a775b915e49cc15cc86607231a790ed3cf"
        },
        "downloads": -1,
        "filename": "adpbulk-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3d5b6f519c9a6ba820ed31cb78b13e5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5881,
        "upload_time": "2021-12-11T02:47:07",
        "upload_time_iso_8601": "2021-12-11T02:47:07.829141Z",
        "url": "https://files.pythonhosted.org/packages/62/bf/a732b742220e8b5a0e646c6a6d59b90110401242f0226b76e711cea926fc/adpbulk-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bcca1209cc9ee69464bf57d8078bea495c283c52003a944dcaed653751c2cd4",
          "md5": "7d7936a6d04c2347d7ea05df1387d4c4",
          "sha256": "f93b3fc666a20fc6924c60754cb5902ce4b3ea24565cbbb52c37b1631b22b05b"
        },
        "downloads": -1,
        "filename": "adpbulk-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7d7936a6d04c2347d7ea05df1387d4c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7400,
        "upload_time": "2021-12-11T02:47:09",
        "upload_time_iso_8601": "2021-12-11T02:47:09.157192Z",
        "url": "https://files.pythonhosted.org/packages/7b/cc/a1209cc9ee69464bf57d8078bea495c283c52003a944dcaed653751c2cd4/adpbulk-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c17ff64aed569ab8a45eac0daaed3f9ca3e6a5fd0e2beba9e9c61128075632a",
          "md5": "ac0ae5277bc42c5f91ec6a7021462505",
          "sha256": "b9e4cfab8a73e55919f40f8fc8d33e966ed2b020ae157a87737cbb0b3037c377"
        },
        "downloads": -1,
        "filename": "adpbulk-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac0ae5277bc42c5f91ec6a7021462505",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5921,
        "upload_time": "2021-12-13T21:45:15",
        "upload_time_iso_8601": "2021-12-13T21:45:15.145418Z",
        "url": "https://files.pythonhosted.org/packages/8c/17/ff64aed569ab8a45eac0daaed3f9ca3e6a5fd0e2beba9e9c61128075632a/adpbulk-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb39ecf6c2fa584071982cdf80ae783262a3478ebee94533c6a537316997bb4d",
          "md5": "b714b078cf952edcdc00fc682cf58a48",
          "sha256": "a09ccf9cdeae25672854195db9461e5dcdd03a381ae9f51bb4d3a3744a7c593d"
        },
        "downloads": -1,
        "filename": "adpbulk-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b714b078cf952edcdc00fc682cf58a48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7370,
        "upload_time": "2021-12-13T21:45:16",
        "upload_time_iso_8601": "2021-12-13T21:45:16.994040Z",
        "url": "https://files.pythonhosted.org/packages/eb/39/ecf6c2fa584071982cdf80ae783262a3478ebee94533c6a537316997bb4d/adpbulk-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "f34a43ddde035b6c114bed97daece464ea0f138435389cea6a8ddf8835ea9888",
          "md5": "a290681aee067324c7efcd846efba40b",
          "sha256": "d00c96b00d82bbabd15caa3e9ebf1d5c4c69b54f0ad6cdc98d3a6b3f3ce9ec64"
        },
        "downloads": -1,
        "filename": "adpbulk-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a290681aee067324c7efcd846efba40b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5988,
        "upload_time": "2022-04-28T15:36:54",
        "upload_time_iso_8601": "2022-04-28T15:36:54.393776Z",
        "url": "https://files.pythonhosted.org/packages/f3/4a/43ddde035b6c114bed97daece464ea0f138435389cea6a8ddf8835ea9888/adpbulk-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "2d28b877490a9fa355909b1707389fb8db143276859bc3920ed96c94c2cfc463",
          "md5": "13eefae4e847395a19e1ffe78f823e0f",
          "sha256": "d0fe81157ccfb31f521fae21d3f633028496d6225389bb7537a2a6c422ce9eee"
        },
        "downloads": -1,
        "filename": "adpbulk-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "13eefae4e847395a19e1ffe78f823e0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7588,
        "upload_time": "2022-04-28T15:36:59",
        "upload_time_iso_8601": "2022-04-28T15:36:59.331143Z",
        "url": "https://files.pythonhosted.org/packages/2d/28/b877490a9fa355909b1707389fb8db143276859bc3920ed96c94c2cfc463/adpbulk-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "f34a43ddde035b6c114bed97daece464ea0f138435389cea6a8ddf8835ea9888",
        "md5": "a290681aee067324c7efcd846efba40b",
        "sha256": "d00c96b00d82bbabd15caa3e9ebf1d5c4c69b54f0ad6cdc98d3a6b3f3ce9ec64"
      },
      "downloads": -1,
      "filename": "adpbulk-0.1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a290681aee067324c7efcd846efba40b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 5988,
      "upload_time": "2022-04-28T15:36:54",
      "upload_time_iso_8601": "2022-04-28T15:36:54.393776Z",
      "url": "https://files.pythonhosted.org/packages/f3/4a/43ddde035b6c114bed97daece464ea0f138435389cea6a8ddf8835ea9888/adpbulk-0.1.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "2d28b877490a9fa355909b1707389fb8db143276859bc3920ed96c94c2cfc463",
        "md5": "13eefae4e847395a19e1ffe78f823e0f",
        "sha256": "d0fe81157ccfb31f521fae21d3f633028496d6225389bb7537a2a6c422ce9eee"
      },
      "downloads": -1,
      "filename": "adpbulk-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "13eefae4e847395a19e1ffe78f823e0f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7588,
      "upload_time": "2022-04-28T15:36:59",
      "upload_time_iso_8601": "2022-04-28T15:36:59.331143Z",
      "url": "https://files.pythonhosted.org/packages/2d/28/b877490a9fa355909b1707389fb8db143276859bc3920ed96c94c2cfc463/adpbulk-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}