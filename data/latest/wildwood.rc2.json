{
  "info": {
    "author": "Stéphane Gaïffas",
    "author_email": "stephane.gaiffas@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "\n[![Build Status](https://travis-ci.com/pyensemble/wildwood.svg?branch=master)](https://travis-ci.com/pyensemble/wildwood)\n[![Documentation Status](https://readthedocs.org/projects/wildwood/badge/?version=latest)](https://wildwood.readthedocs.io/en/latest/?badge=latest)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/wildwood)\n![PyPI - Wheel](https://img.shields.io/pypi/wheel/wildwood)\n[![GitHub stars](https://img.shields.io/github/stars/pyensemble/wildwood)](https://github.com/pyensemble/wildwood/stargazers)\n[![GitHub issues](https://img.shields.io/github/issues/pyensemble/wildwood)](https://github.com/pyensemble/wildwood/issues)\n[![GitHub license](https://img.shields.io/github/license/pyensemble/wildwood)](https://github.com/pyensemble/wildwood/blob/master/LICENSE)\n[![Coverage Status](https://coveralls.io/repos/github/pyensemble/wildwood/badge.svg?branch=master)](https://coveralls.io/github/pyensemble/wildwood?branch=master)\n\n# WildWood\n\nScikit-Learn compatible Random Forest algorithms\n\n[Documentation](https://wildwood.readthedocs.io) | [Reproduce experiments](https://wildwood.readthedocs.io/en/latest/experiments.html) |\n\n# Installation\n\nThe easiest way to install wildwood is using pip\n\n    pip install wildwood\n\nBut you can also use the latest development from github directly with\n\n    pip install git+https://github.com/pyensemble/wildwood.git\n\n# Experiments\n\n## Experiments with hyperparameters optimization\n\nTo run experiments with hyperparameters optimization, under directory `experiments/`, use\n\n    python run_hyperopt_classfiers.py --clf_name WildWood --dataset_name adult\n\n(with `WildWood` and on `adult` dataset in this example).\n\nSome options are\n\n- Setting `--n_estimators` or `-t` for number of estimators \n  (for maximal number of boosting iterations in case of gradient boosting algorithms), default 100.\n- Setting `--hyperopt_evals` or `-n` for number of hyperopt steps, default 50.\n\n## Experiments on default parameters\n\nTo run experiments with default parameters, under directory `experiments/`, use\n\n    python run_benchmark_default_params_classifiers.py --clf_name WildWood --dataset_name adult\n\n(with `WildWood` and on `adult` dataset in this example).\n\n## Datasets and classifiers\n\nFor both `run_hyperopt_classfiers.py` and `run_benchmark_default_params_classifiers.\npy`, the available options for `dataset_name` are:\n\n- `adult`\n- `bank`\n- `breastcancer`\n- `car`\n- `cardio`\n- `churn`\n- `default-cb`\n- `letter`\n- `satimage`\n- `sensorless`\n- `spambase`\n- `amazon`\n- `covtype`\n- `internet`\n- `kick`\n- `kddcup`\n- `higgs`\n\nwhile the available options for `clf_name` are\n\n- `LGBMClassifier`\n- `XGBClassifier`\n- `CatBoostClassifier`\n- `RandomForestClassifier`\n- `HistGradientBoostingClassifier`\n- `WildWood`\n\n## Experiments presented in the paper\n\nAll the scripts allowing to reproduce the experiments from the paper are available \nin the `experiments/` folder\n\n1. Figure 1 is produced using `fig_aggregation_effect.py`.\n1. Figure 2 is produced using `n_tree_experiment.py`. \n1. Tables 1 and 3 from the paper are produced using `run_hyperopt_classfiers.py` \n   with `n_estimators=5000` for gradient boosting algorithms and with \n   `n_estimators=n` for `RFn` and `WWn`\n   - call\n   ```shell\n   python run_hyperopt_classfiers.py --clf_name <classifier> --dataset_name <dataset> --n_estimators <n_estimators>\n   ```   \n   for each pair `(<classifier>, <dataset>)` to run hyperparameters optimization experiments;\n   - use for example\n   ```python\n   import pickle as pkl\n   filename = 'exp_hyperopt_xxx.pickle'\n   with open(filename, \"rb\") as f:\n       results = pkl.load(f)\n   df = results[\"results\"]\n   ```\n   to retrieve experiments information, such as AUC, logloss and their standard deviation.\n\n1. Tables 2 and 4 are produced using `benchmark_default_params.py`\n    - call\n   ```shell\n   python run_benchmark_default_params_classifiers.py --clf_name <classifier> --dataset_name <dataset>\n   ```   \n   for each pair `(<classifier>, <dataset>)` to run experiments with default parameters;\n   -  use similar commands to retrieve experiments information.\n    \n1. Using experiments results (AUC and fit time) done by `run_hyperopt_classfiers.py`, \n   then concatenating dataframes and using `fig_auc_fit_time.py` to produce Figure 3.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://wildwood.readthedocs.io",
    "keywords": "python,machine-learning,classification,regression,random-forests,robust-methods",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wildwood",
    "package_url": "https://pypi.org/project/wildwood/",
    "platform": "",
    "project_url": "https://pypi.org/project/wildwood/",
    "project_urls": {
      "Documentation": "https://wildwood.readthedocs.io",
      "Homepage": "https://wildwood.readthedocs.io",
      "Repository": "https://github.com/pyensemble/wildwood"
    },
    "release_url": "https://pypi.org/project/wildwood/0.2/",
    "requires_dist": [
      "matplotlib (>=3.1)",
      "numba (>=0.48)",
      "numpy (>=1.17)",
      "pandas (>=1.1.3)",
      "scikit-learn (>=0.22)",
      "scipy (>=1.3.2)",
      "tqdm (>=4.36)",
      "xlrd (>=1.2.0)"
    ],
    "requires_python": ">=3.6.1,<4.0",
    "summary": "scikit-learn compatible alternative random forests algorithms",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11536709,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc706debe08f12456bf857647ac15b4125a57d25fbe125a9dbf578bd20bdb3c1",
          "md5": "049648d10c3c6782be9a304dacca915d",
          "sha256": "fb803dee1ede895cf2b310f53e7fb209001f8f4f723b65171fe04c507ced987f"
        },
        "downloads": -1,
        "filename": "wildwood-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "049648d10c3c6782be9a304dacca915d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13700,
        "upload_time": "2020-12-02T15:47:37",
        "upload_time_iso_8601": "2020-12-02T15:47:37.586406Z",
        "url": "https://files.pythonhosted.org/packages/cc/70/6debe08f12456bf857647ac15b4125a57d25fbe125a9dbf578bd20bdb3c1/wildwood-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c51a63bf6ffed5611faf7d1474c2d0f490cf86c905be5044f5e436ccc435b18",
          "md5": "b80b5254ce68e00ed6be198ee3c06bc3",
          "sha256": "e70c61867bfd439075eb58bbeaf9b2337ab078bed5cc579d613ceade5855f1ae"
        },
        "downloads": -1,
        "filename": "wildwood-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b80b5254ce68e00ed6be198ee3c06bc3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13771,
        "upload_time": "2020-12-02T15:47:38",
        "upload_time_iso_8601": "2020-12-02T15:47:38.629503Z",
        "url": "https://files.pythonhosted.org/packages/1c/51/a63bf6ffed5611faf7d1474c2d0f490cf86c905be5044f5e436ccc435b18/wildwood-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c1f665d32ac0e08d4cf67de24abf447a5091ca1aa875666e6615dbdb8431982",
          "md5": "14107267b3331c440f55eea071ef5292",
          "sha256": "0a9dbedb84706f8550716d4f0fd40d71fd756bcb49c4fa2083143369a1446bfc"
        },
        "downloads": -1,
        "filename": "wildwood-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14107267b3331c440f55eea071ef5292",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0",
        "size": 21802261,
        "upload_time": "2021-09-24T07:58:02",
        "upload_time_iso_8601": "2021-09-24T07:58:02.569495Z",
        "url": "https://files.pythonhosted.org/packages/4c/1f/665d32ac0e08d4cf67de24abf447a5091ca1aa875666e6615dbdb8431982/wildwood-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64bcbebda0fe51a79436377f628c8d997dc7327d0690d990c13f784f4651818d",
          "md5": "0e8a40af5360b9e349da97cabf70ecfa",
          "sha256": "662d849fad90d89496e0be9fbb0e203d451fc2eb9ea533516d3ba6a9d7131a9b"
        },
        "downloads": -1,
        "filename": "wildwood-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0e8a40af5360b9e349da97cabf70ecfa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0",
        "size": 21792336,
        "upload_time": "2021-09-24T07:58:07",
        "upload_time_iso_8601": "2021-09-24T07:58:07.484279Z",
        "url": "https://files.pythonhosted.org/packages/64/bc/bebda0fe51a79436377f628c8d997dc7327d0690d990c13f784f4651818d/wildwood-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4c1f665d32ac0e08d4cf67de24abf447a5091ca1aa875666e6615dbdb8431982",
        "md5": "14107267b3331c440f55eea071ef5292",
        "sha256": "0a9dbedb84706f8550716d4f0fd40d71fd756bcb49c4fa2083143369a1446bfc"
      },
      "downloads": -1,
      "filename": "wildwood-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "14107267b3331c440f55eea071ef5292",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.1,<4.0",
      "size": 21802261,
      "upload_time": "2021-09-24T07:58:02",
      "upload_time_iso_8601": "2021-09-24T07:58:02.569495Z",
      "url": "https://files.pythonhosted.org/packages/4c/1f/665d32ac0e08d4cf67de24abf447a5091ca1aa875666e6615dbdb8431982/wildwood-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64bcbebda0fe51a79436377f628c8d997dc7327d0690d990c13f784f4651818d",
        "md5": "0e8a40af5360b9e349da97cabf70ecfa",
        "sha256": "662d849fad90d89496e0be9fbb0e203d451fc2eb9ea533516d3ba6a9d7131a9b"
      },
      "downloads": -1,
      "filename": "wildwood-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0e8a40af5360b9e349da97cabf70ecfa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.1,<4.0",
      "size": 21792336,
      "upload_time": "2021-09-24T07:58:07",
      "upload_time_iso_8601": "2021-09-24T07:58:07.484279Z",
      "url": "https://files.pythonhosted.org/packages/64/bc/bebda0fe51a79436377f628c8d997dc7327d0690d990c13f784f4651818d/wildwood-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}