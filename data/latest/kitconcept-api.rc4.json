{
  "info": {
    "author": "kitconcept GmbH",
    "author_email": "contact@kitconcept.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Plone",
      "Framework :: Plone :: 5.2",
      "Framework :: Plone :: 6.0",
      "Framework :: Plone :: Core",
      "Framework :: Zope",
      "Framework :: Zope :: 5",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "<div align=\"center\"><img alt=\"logo\" src=\"https://kitconcept.com/logo.svg\" width=\"150\" /></div>\n\n<h1 align=\"center\">kitconcept.api</h1>\n\nA facade enhancing the already amazing [plone.api](https://github.com/plone/plone.api).\n\n<div align=\"center\">\n\n[![PyPI](https://img.shields.io/pypi/v/kitconcept.api)](https://pypi.org/project/kitconcept.api/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/kitconcept.api)](https://pypi.org/project/kitconcept.api/)\n[![PyPI - Wheel](https://img.shields.io/pypi/wheel/kitconcept.api)](https://pypi.org/project/kitconcept.api/)\n[![PyPI - License](https://img.shields.io/pypi/l/kitconcept.api)](https://pypi.org/project/kitconcept.api/)\n[![PyPI - Status](https://img.shields.io/pypi/status/kitconcept.api)](https://pypi.org/project/kitconcept.api/)\n\n\n[![PyPI - Plone Versions](https://img.shields.io/pypi/frameworkversions/plone/kitconcept.api)](https://pypi.org/project/kitconcept.api/)\n\n[![Code analysis checks](https://github.com/kitconcept/kitconcept.api/actions/workflows/code-analysis.yml/badge.svg)](https://github.com/kitconcept/kitconcept.api/actions/workflows/code-analysis.yml)\n[![Tests](https://github.com/kitconcept/kitconcept.api/actions/workflows/tests.yml/badge.svg)](https://github.com/kitconcept/kitconcept.api/actions/workflows/tests.yml)\n![Code Style](https://img.shields.io/badge/Code%20Style-Black-000000)\n\n[![GitHub contributors](https://img.shields.io/github/contributors/kitconcept/kitconcept.api)](https://github.com/kitconcept/kitconcept.api)\n[![GitHub Repo stars](https://img.shields.io/github/stars/kitconcept/kitconcept.api?style=social)](https://github.com/kitconcept/kitconcept.api)\n\n</div>\n\n## Installation\n\nAdd `kitconcept.api` as a requirement of your package (in setup.py or setup.cfg).\n\n## Usage\n\nReplace, in your codebase, occurrences of `from plone import api` with `from kitconcept import api`.\n\n## Inclusion of api.addon\n### api.addon.get_addons\n\nReturn a list of addons (`kitconcept.api._typing.AddonInformation`) in the installation.\n\nExample:\n```python\nfrom kitconcept import api\nfrom kitconcept.api._typing import AddonInformation\n\n\naddons = api.addon.get_addons()\n\n# List of AddonInformation\nassert isinstance(addons, list)\nassert isinstance(addons[0], AddonInformation)\n```\n\nIt is possible to filter the addons using the parameter `limit`:\n```python\nfrom kitconcept import api\n\n\n# Return all valid addons\nall_addons = api.addon.get_addons()\n\n# Only installed addons\ninstalled_addons = api.addon.get_addons(limit=\"installed\")\n\n# Only upgradable (already installed) addons\nupgradable_addons = api.addon.get_addons(limit=\"upgradable\")\n\n# Available addons -- not installed\navailable_addons = api.addon.get_addons(limit=\"available\")\n\n# It is also possible to get addons not available in the UI\n# Only broken addons (with installation problems)\nbroken_addons = api.addon.get_addons(limit=\"broken\")\n\n# Only non-installable addons\nbroken_addons = api.addon.get_addons(limit=\"non_installable\")\n```\n\n### api.addon.get_addons_ids\n\nSimilar to `api.addon.get_addons`, but return only the addon ids.\n\nExample:\n```python\nfrom kitconcept import api\n\n\naddons_ids = api.addon.get_addons_ids()\n\n# List of str\nassert isinstance(addons_ids, list)\nassert isinstance(addons_ids[0], str)\n```\n\n### api.addon.get\n\nGet information about one addon.\n\nExample:\n```python\nfrom kitconcept import api\n\n\n# Get information about plone.restapi\naddon = api.addon.get(\"plone.restapi\")\nassert addon.id, \"plone.restapi\"\nassert addon.valid is True\nassert addon.description == \"RESTful hypermedia API for Plone.\"\nassert addon.profile_type == \"default\"\nassert addon.version == \"8.21.0\"\n```\n\n### api.addon.install\n\nInstall an addon\n\nExample:\n```python\nfrom kitconcept import api\n\n\nstatus = api.addon.install(\"plone.restapi\")\nassert status is True\nassert \"plone.restapi\" in api.addon.get_addons_ids(limit=\"installed\")\n```\n\n### api.addon.uninstall\n\nUninstall an addon\n\nExample:\n```python\nfrom kitconcept import api\n\n\nstatus = api.addon.uninstall(\"plone.restapi\")\nassert status is True\nassert \"plone.restapi\" in api.addon.get_addons_ids(limit=\"available\")\n```\n\n## Additions to api.content\n### api.content.get_constrains\n\nGet constrains -- limits -- of a folderish content.\n\nExample:\n```python\nfrom kitconcept import api\n\n\nconstrains = api.content.get_constrains(obj)\n\n# Constrains are not enabled by default\nassert constrains.mode == \"disabled\"\n\n# Document is allowed to be added to obj\nassert \"Document\" in constrains.allowed_types\n\n# Document is a prefered type to be added to obj\nassert \"Document\" in constrains.immediately_addable_types\n```\n### api.content.set_constrains\n\nSet constrains -- limits -- of a folderish content.\n\nExample:\n```python\nfrom kitconcept import api\n\n\nconstrains = api.content.set_constrains(\n    obj,\n    mode=\"enabled\",\n    allowed_types=[\"Folder\", \"Image\"],\n    immediately_addable_types=[\n        \"Image\",\n    ],\n)\n\n# Constrains now enabled\nassert constrains.mode == \"enabled\"\n\n# Folder and Image are allowed to be added to obj\nassert \"Folder\" in constrains.allowed_types\nassert \"Image\" in constrains.allowed_types\n\n# Image is a prefered type to be added to obj\nassert \"Image\" in constrains.immediately_addable_types\n```\n\n### api.content.serialize\n\nSerialize an object, using the serializers defined in plone.restapi.\n\nExample:\n```python\nfrom kitconcept import api\n\n\nportal = api.portal.get()\ndata = api.content.serialize(portal)\n\n# data is a dictionary\nassert isinstance(data, dict)\n\n# We have the serialized info\nassert data[\"@type\"] == \"Plone Site\"\nassert data[\"id\"] == \"plone\"\nassert data[\"title\"] == \"Site\"\n```\n\n## Inclusion of api.fti\n\n### api.fti.get_types\n\nReturn a dictionary with all FTI's registered for the Portal.\n\nExample:\n```python\nfrom kitconcept import api\nfrom plone.dexterity.fti import DexterityFTI\n\n\nftis = api.fti.get_types()\n\n# Dictionary with FTI\nassert isinstance(ftis, dict)\n# Document FTI should be present\nassert \"Document\" in ftis\nassert isinstance(ftis[\"Document\"], DexterityFTI)\n```\n\n### api.fti.get\n\nReturn a FTI for a type.\n\nExample:\n```python\nfrom kitconcept import api\nfrom plone.dexterity.fti import DexterityFTI\n\n\nfti = api.fti.get(type=\"Document\")\n\n# FTI for Document content type\nassert isinstance(fti, DexterityFTI)\nassert fti.id == \"Document\n```\n\n### api.fti.behaviors_for_type\n\nReturn a list of behaviors for a type.\n\nExample:\n```python\nfrom kitconcept import api\nfrom plone.dexterity.fti import DexterityFTI\n\n\nbehaviors = api.fti.behaviors_for_type(type=\"Document\")\n\n# List of behaviors for Document\nassert isinstance(behaviors, list)\nassert \"plone.dublincore\" in behaviors\n```\n\n### api.fti.get_behavior_registration\n\nReturn a list of behaviors for a type.\n\nExample:\n```python\nfrom kitconcept import api\nfrom plone.behavior.registration import BehaviorRegistration\n\n\nbehavior = api.fti.get_behavior_registration(name=\"plone.dublincore\")\n\n# Behavior registration info\nassert isinstance(behavior, BehaviorRegistration)\nassert behavior.title == \"Dublin Core metadata\"\n```\n\n### api.fti.add_behavior_for_type\n\nAdds the given behavior to the given portal type.\n\nExample:\n```python\nfrom kitconcept import api\n\napi.fti.add_behavior_for_type(\"Document\", \"plone.leadimage\")\nbehaviors = api.fti.behaviors_for_type(type=\"Document\")\n\n# List of behaviors for Document\nassert isinstance(behaviors, list)\nassert \"plone.leadimage\" in behaviors\n```\n\n### api.fti.remove_behavior_for_type\n\nRemoves the given behavior from the given portal type.\n\nExample:\n```python\nfrom kitconcept import api\n\napi.fti.remove_behavior_for_type(\"Document\", \"plone.allowdiscussion\")\nbehaviors = api.fti.behaviors_for_type(type=\"Document\")\n\n# List of behaviors for Document\nassert isinstance(behaviors, list)\nassert \"plone.allowdiscussion\" not in behaviors\n```\n\n## Inclusion of api.vocabulary\n\n### api.vocabulary.get_vocabulary_names\n\nReturn a list of names for all vocabularies\n\nExample:\n```python\nfrom kitconcept import api\n\n\nvocabularies = api.addon.get_vocabulary_names()\n\n# List of str\nassert isinstance(vocabularies, list)\nassert isinstance(vocabularies[0], str)\nassert \"plone.app.vocabularies.Month\" in vocabularies\n```\n\n### api.vocabulary.get\n\nGet one vocabulary.\n\nExample:\n```python\nfrom kitconcept import api\nfrom zope.schema.vocabulary import SimpleVocabulary\n\n\n# Return one vocabulary\nvocabulary = api.vocabulary.get(\"plone.app.vocabularies.Month\")\nassert isinstance(vocabulary, SimpleVocabulary)\nassert vocabulary.getTerm(0).title == \"month_jan\"\n```\n## Wish List\n\n* api.concent.deserialize\n* plone.app.multilingual: Translations management\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://kitconcept.com/",
    "keywords": "Plone,CMS",
    "license": "GPL version 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kitconcept.api",
    "package_url": "https://pypi.org/project/kitconcept.api/",
    "platform": null,
    "project_url": "https://pypi.org/project/kitconcept.api/",
    "project_urls": {
      "Homepage": "https://kitconcept.com/"
    },
    "release_url": "https://pypi.org/project/kitconcept.api/1.0.0a4/",
    "requires_dist": [
      "plone.api (>=2.0.0a2)",
      "setuptools (>=36.2)",
      "Plone",
      "plone.restapi",
      "Products.CMFPlone ; extra == 'test'",
      "plone.app.dexterity ; extra == 'test'",
      "plone.app.testing ; extra == 'test'",
      "plone.testing ; extra == 'test'",
      "plone.restapi[test] ; extra == 'test'",
      "zest.releaser[recommended] ; extra == 'test'",
      "zestreleaser.towncrier ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "Enhanced Python API for the Plone Content Management System",
    "version": "1.0.0a4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15155960,
  "releases": {
    "1.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96c08c76a81a83d1dbc639dbcf1511e01654ff7c236ee8ad6a5e41f89f6a2214",
          "md5": "1f83e6bdb8ca191da4e97e6a13de3c1b",
          "sha256": "26e3fb3108f6058fc4a7b35a058660d05e049935e49d67023845c835c39047ac"
        },
        "downloads": -1,
        "filename": "kitconcept.api-1.0.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f83e6bdb8ca191da4e97e6a13de3c1b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 22358,
        "upload_time": "2022-03-17T22:59:43",
        "upload_time_iso_8601": "2022-03-17T22:59:43.525533Z",
        "url": "https://files.pythonhosted.org/packages/96/c0/8c76a81a83d1dbc639dbcf1511e01654ff7c236ee8ad6a5e41f89f6a2214/kitconcept.api-1.0.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db90c3b0bb6705c463a6dcfdbde379a55af5e7ba74db354a41edcf5829bae864",
          "md5": "03112ad1ccfc7de45a1b365f836f7b29",
          "sha256": "fafec8c12c642d0756e224e0aa47138ceec6a7fe73dee8b09a249a705143b155"
        },
        "downloads": -1,
        "filename": "kitconcept.api-1.0.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "03112ad1ccfc7de45a1b365f836f7b29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20706,
        "upload_time": "2022-03-17T22:59:45",
        "upload_time_iso_8601": "2022-03-17T22:59:45.632273Z",
        "url": "https://files.pythonhosted.org/packages/db/90/c3b0bb6705c463a6dcfdbde379a55af5e7ba74db354a41edcf5829bae864/kitconcept.api-1.0.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f4f473a11c39574e5f94e9192227b4236c0480477e4b4c77d0caf3c0db8aff0",
          "md5": "2c76576deb8133baf825986777d8c00a",
          "sha256": "98c0b0ea42c7407319d6c57a4047004ef02c9db00d4ac760c7df0d10f06e922e"
        },
        "downloads": -1,
        "filename": "kitconcept.api-1.0.0a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c76576deb8133baf825986777d8c00a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 24542,
        "upload_time": "2022-03-21T15:49:23",
        "upload_time_iso_8601": "2022-03-21T15:49:23.094732Z",
        "url": "https://files.pythonhosted.org/packages/5f/4f/473a11c39574e5f94e9192227b4236c0480477e4b4c77d0caf3c0db8aff0/kitconcept.api-1.0.0a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6453526afdb7b385c8ef62444ee2662755a1209d767e8dd9347963fbe9a8e18a",
          "md5": "cca850b405883f7fdc7cf95cd206e919",
          "sha256": "d052a10a568808a61321c8d67f514dc4f1c6a7b2f430e9d288c312b4981c72d4"
        },
        "downloads": -1,
        "filename": "kitconcept.api-1.0.0a2.tar.gz",
        "has_sig": false,
        "md5_digest": "cca850b405883f7fdc7cf95cd206e919",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 22367,
        "upload_time": "2022-03-21T15:49:25",
        "upload_time_iso_8601": "2022-03-21T15:49:25.180901Z",
        "url": "https://files.pythonhosted.org/packages/64/53/526afdb7b385c8ef62444ee2662755a1209d767e8dd9347963fbe9a8e18a/kitconcept.api-1.0.0a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82e4500be9909f4fc4629e21ff14f5a95e5e7105ce1a95e6a80aa1b8f15c099f",
          "md5": "29656a0bc2e34bb76b5be062a10af79b",
          "sha256": "1ce5dfbbbc750c321b906a3e6f50eb6875fe2f9eef39c890ba00643a9ee069d1"
        },
        "downloads": -1,
        "filename": "kitconcept.api-1.0.0a3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29656a0bc2e34bb76b5be062a10af79b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 24923,
        "upload_time": "2022-04-18T21:34:08",
        "upload_time_iso_8601": "2022-04-18T21:34:08.807813Z",
        "url": "https://files.pythonhosted.org/packages/82/e4/500be9909f4fc4629e21ff14f5a95e5e7105ce1a95e6a80aa1b8f15c099f/kitconcept.api-1.0.0a3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d104ac9a64cf547c1336e238aa2d473e6c1e011496d30dc8209e4d6fedb36b3c",
          "md5": "62e517c489b97108dfa000158282d9c8",
          "sha256": "03d7da5b380fc866fd6382bc83d5c380078e2613b34b7fc1939c853553a48de6"
        },
        "downloads": -1,
        "filename": "kitconcept.api-1.0.0a3.tar.gz",
        "has_sig": false,
        "md5_digest": "62e517c489b97108dfa000158282d9c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 22868,
        "upload_time": "2022-04-18T21:34:10",
        "upload_time_iso_8601": "2022-04-18T21:34:10.662230Z",
        "url": "https://files.pythonhosted.org/packages/d1/04/ac9a64cf547c1336e238aa2d473e6c1e011496d30dc8209e4d6fedb36b3c/kitconcept.api-1.0.0a3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2299bcc4f1b2b384d44bf02f40a647fa5856eb274e6412a4611233f4f2bba6ee",
          "md5": "7620be74b9af9a159cd33690eb7477f3",
          "sha256": "7588ea2e04100e2c9ee5d1e91a97ea2e5d6398006c91cbc319656869960807a6"
        },
        "downloads": -1,
        "filename": "kitconcept.api-1.0.0a4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7620be74b9af9a159cd33690eb7477f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 25332,
        "upload_time": "2022-09-14T19:17:48",
        "upload_time_iso_8601": "2022-09-14T19:17:48.370821Z",
        "url": "https://files.pythonhosted.org/packages/22/99/bcc4f1b2b384d44bf02f40a647fa5856eb274e6412a4611233f4f2bba6ee/kitconcept.api-1.0.0a4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2b4d5a49387a140d6c5fa338d7a7a6cceef641b54c0eb91a85c1be0065da325",
          "md5": "65d6f89036022355781c56c8e426b884",
          "sha256": "c93623da5cc63773961a5f99f1671c031a5abadd733933744a4613f7e53e9ba7"
        },
        "downloads": -1,
        "filename": "kitconcept.api-1.0.0a4.tar.gz",
        "has_sig": false,
        "md5_digest": "65d6f89036022355781c56c8e426b884",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 23054,
        "upload_time": "2022-09-14T19:17:51",
        "upload_time_iso_8601": "2022-09-14T19:17:51.133405Z",
        "url": "https://files.pythonhosted.org/packages/e2/b4/d5a49387a140d6c5fa338d7a7a6cceef641b54c0eb91a85c1be0065da325/kitconcept.api-1.0.0a4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2299bcc4f1b2b384d44bf02f40a647fa5856eb274e6412a4611233f4f2bba6ee",
        "md5": "7620be74b9af9a159cd33690eb7477f3",
        "sha256": "7588ea2e04100e2c9ee5d1e91a97ea2e5d6398006c91cbc319656869960807a6"
      },
      "downloads": -1,
      "filename": "kitconcept.api-1.0.0a4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7620be74b9af9a159cd33690eb7477f3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 25332,
      "upload_time": "2022-09-14T19:17:48",
      "upload_time_iso_8601": "2022-09-14T19:17:48.370821Z",
      "url": "https://files.pythonhosted.org/packages/22/99/bcc4f1b2b384d44bf02f40a647fa5856eb274e6412a4611233f4f2bba6ee/kitconcept.api-1.0.0a4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2b4d5a49387a140d6c5fa338d7a7a6cceef641b54c0eb91a85c1be0065da325",
        "md5": "65d6f89036022355781c56c8e426b884",
        "sha256": "c93623da5cc63773961a5f99f1671c031a5abadd733933744a4613f7e53e9ba7"
      },
      "downloads": -1,
      "filename": "kitconcept.api-1.0.0a4.tar.gz",
      "has_sig": false,
      "md5_digest": "65d6f89036022355781c56c8e426b884",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 23054,
      "upload_time": "2022-09-14T19:17:51",
      "upload_time_iso_8601": "2022-09-14T19:17:51.133405Z",
      "url": "https://files.pythonhosted.org/packages/e2/b4/d5a49387a140d6c5fa338d7a7a6cceef641b54c0eb91a85c1be0065da325/kitconcept.api-1.0.0a4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}