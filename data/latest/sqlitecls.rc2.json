{
  "info": {
    "author": "Matjaž Guštin",
    "author_email": "dev@matjaz.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development"
    ],
    "description": "SQLite Class wrapper with auto-initialisation of empty DB and PRAGMAs\n===============================================================================\n\nSQLiteDb class wrapping the operations from the `sqlite3` module,\nproviding better support for the `with` operator and automatic\ninitialisation of an empty DB upon first creation of the DB\nand setting of the per-connection pragmas.\n\nAdditional wrappers are available as a utility, including\nextraction of a list of tables, extraction of the list of columns\nof a `SELECT` query, commit, rollback, start of a transaction,\ncheck if the DB is in memory and if it's empty. Executions of SQL script\nfiles is also made easy.\n\n\nExample usage\n----------------------------------------\n\n```python\nimport sqlitecls\n\nwith sqlitecls.SqliteDb('mydata.db', 'mydbschema.sql', 'mypragmas.sql') as db:\n    # Now the DB connection is established. If the DB did not exist before,\n    # its schema is initialised by running the 'mydbschema.sql' script,\n    # preparing it for whatever your application has to do.\n    #\n    # The 'mypragmas.sql' script is also run EVERY time a connection is\n    # opened or re-opened, to ensure each connection to the same file has\n    # the correct per-connection PRAGMA settings.\n    # For example, imagine we have `PRAGMA synchronous = 3;` in the script\n    assert db.pragma('synchronous') == 3\n\n    # You can easily check which tables are available\n    tables = db.tables_names()\n    # and what columns they have\n    columns = db.columns_names('some_table')\n    # Otherwise use as any other DB API from now on\n    cursor = db.execute('SELECT * FROM mytable')\n    # Simplified extraction of the column names from the SELECT query\n    columns = sqlitecls.cursor_column_names(cursor)\n    # Use as any other DB API from now on\n    for row in cursor:\n        pass  # Do something with each row\n    db.connection, db.cursor  # Accessible for custom operations\n    # More utility functions!\n    db.start_transaction()\n    db.commit()\n    db.rollback()\n    db.vacuum()\n    db.size_bytes()\n    db.is_in_memory()\n    # Have existing SQL script files? Just run them as they are!\n    db.execute_sql_file('myotherfile.sql')  # Load WHOLE file in memory\n# Connection automatically closed now\n```\n\n\nInstallation\n----------------------------------------\n\n```\npip install SQLteCls\n```\n\nor just include the `sqlitecls.py` file in your project (copy-paste).\nIt's self-contained and has no dependencies other than the standard\nPython library.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TheMatjaz/SQLiteCls",
    "keywords": "sqlite,sqlite3,database,wrapper,class,with",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SQLiteCls",
    "package_url": "https://pypi.org/project/SQLiteCls/",
    "platform": "",
    "project_url": "https://pypi.org/project/SQLiteCls/",
    "project_urls": {
      "Homepage": "https://github.com/TheMatjaz/SQLiteCls"
    },
    "release_url": "https://pypi.org/project/SQLiteCls/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "SQLite API wrapped into a class with automatic DB schema initialisation and PRAGMA execution upon connection",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10130306,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bc877805bad2fe35855f8aad434ed84d2f15739f58de537427b27d65b948b7f",
          "md5": "8fc0741953d22514f5e5c0aa568b02cb",
          "sha256": "a82791a6415e6b896468104ae181cb4288c618b8c370cc693afb568dde42e51f"
        },
        "downloads": -1,
        "filename": "SQLiteCls-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fc0741953d22514f5e5c0aa568b02cb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3",
        "size": 5151,
        "upload_time": "2021-04-18T13:28:23",
        "upload_time_iso_8601": "2021-04-18T13:28:23.274506Z",
        "url": "https://files.pythonhosted.org/packages/0b/c8/77805bad2fe35855f8aad434ed84d2f15739f58de537427b27d65b948b7f/SQLiteCls-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a783382485731e102bce9a030118b2718b7ea9c32c8f365f3d7803eb4fad52d1",
          "md5": "769d69a8b1f8bc01fe6c2e100f188ae3",
          "sha256": "15a394247f100a8af03e370fb96dc4abd101ef714ed14e52095984c5c1a30781"
        },
        "downloads": -1,
        "filename": "SQLiteCls-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "769d69a8b1f8bc01fe6c2e100f188ae3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 6108,
        "upload_time": "2021-04-18T13:28:24",
        "upload_time_iso_8601": "2021-04-18T13:28:24.759062Z",
        "url": "https://files.pythonhosted.org/packages/a7/83/382485731e102bce9a030118b2718b7ea9c32c8f365f3d7803eb4fad52d1/SQLiteCls-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8532aa63ed266036c10402fed904f7f867cf660f7aa4f7fdbfba8cf57f294395",
          "md5": "0a138fcdbb5ff56496933cce43e5092a",
          "sha256": "d02c50dfb4dcb19c7cd90a8af398d45ab0110b93bcf5670d376ba4a46e2cde1c"
        },
        "downloads": -1,
        "filename": "SQLiteCls-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a138fcdbb5ff56496933cce43e5092a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3",
        "size": 5883,
        "upload_time": "2021-04-21T15:26:42",
        "upload_time_iso_8601": "2021-04-21T15:26:42.970462Z",
        "url": "https://files.pythonhosted.org/packages/85/32/aa63ed266036c10402fed904f7f867cf660f7aa4f7fdbfba8cf57f294395/SQLiteCls-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e9d5cabe99c28ee58ea4f22b59f27fa3b4d0afe0ca654ead503deaecdd870ff",
          "md5": "466fe4a907f8744ad05816c626bc6cef",
          "sha256": "237ba2ede7b956c47b02412c4cac9fc72c24142930bcc9fcc6599ad79d29be9b"
        },
        "downloads": -1,
        "filename": "SQLiteCls-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "466fe4a907f8744ad05816c626bc6cef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 7422,
        "upload_time": "2021-04-21T15:26:44",
        "upload_time_iso_8601": "2021-04-21T15:26:44.611998Z",
        "url": "https://files.pythonhosted.org/packages/6e/9d/5cabe99c28ee58ea4f22b59f27fa3b4d0afe0ca654ead503deaecdd870ff/SQLiteCls-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8532aa63ed266036c10402fed904f7f867cf660f7aa4f7fdbfba8cf57f294395",
        "md5": "0a138fcdbb5ff56496933cce43e5092a",
        "sha256": "d02c50dfb4dcb19c7cd90a8af398d45ab0110b93bcf5670d376ba4a46e2cde1c"
      },
      "downloads": -1,
      "filename": "SQLiteCls-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a138fcdbb5ff56496933cce43e5092a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3",
      "size": 5883,
      "upload_time": "2021-04-21T15:26:42",
      "upload_time_iso_8601": "2021-04-21T15:26:42.970462Z",
      "url": "https://files.pythonhosted.org/packages/85/32/aa63ed266036c10402fed904f7f867cf660f7aa4f7fdbfba8cf57f294395/SQLiteCls-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e9d5cabe99c28ee58ea4f22b59f27fa3b4d0afe0ca654ead503deaecdd870ff",
        "md5": "466fe4a907f8744ad05816c626bc6cef",
        "sha256": "237ba2ede7b956c47b02412c4cac9fc72c24142930bcc9fcc6599ad79d29be9b"
      },
      "downloads": -1,
      "filename": "SQLiteCls-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "466fe4a907f8744ad05816c626bc6cef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 7422,
      "upload_time": "2021-04-21T15:26:44",
      "upload_time_iso_8601": "2021-04-21T15:26:44.611998Z",
      "url": "https://files.pythonhosted.org/packages/6e/9d/5cabe99c28ee58ea4f22b59f27fa3b4d0afe0ca654ead503deaecdd870ff/SQLiteCls-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}