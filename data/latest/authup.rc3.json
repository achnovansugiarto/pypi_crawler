{
  "info": {
    "author": "Michael Graf",
    "author_email": "michael.graf3110@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![CI](https://github.com/migraf/authup-py/actions/workflows/main.yml/badge.svg)](https://github.com/migraf/authup-py/actions/workflows/main.yml)\n[![codecov](https://codecov.io/gh/migraf/authup-py/branch/main/graph/badge.svg?token=qILJEFdh8I)](https://codecov.io/gh/migraf/authup-py)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/authup)\n![PyPI - Downloads](https://img.shields.io/pypi/dw/authup)\n[![Maintainability](https://api.codeclimate.com/v1/badges/520401d6c07170a6e413/maintainability)](https://codeclimate.com/github/migraf/authup-py/maintainability)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n# Authup Python Plugins\n\nThis repository contains python plugins for using the [Authup](https://authup.org) authentication and authorization\nframework in the python language.\nThe plugins are used to integrate Authup with different python frameworks and libraries.\n\n## Supported Python frameworks\n\n### Client\n| Plugin                                      | Extra        | Sync | Async |\n|---------------------------------------------|--------------|:----:|------:|\n| [httpx](https://github.com/encode/httpx)    |              |  ✅   |     ✅ |\n| [requests](https://github.com/psf/requests) | `[requests]` |  ✅   |     ❌ |\n\n### Server\n\n| Plugin                                                        | Extra       | Sync | Async | Middleware | User |\n|---------------------------------------------------------------|-------------|:----:|------:|------------|------|\n| [FastApi](https://fastapi.tiangolo.com/)                      | `[fastapi]` |  ✅   |     ✅ | ✅          | ✅    |\n| [ASGI](https://asgi.readthedocs.io/en/latest/specs/main.html) | `[asgi]`    |  ❌   |     ✅ | ✅          | ✅    |\n| [Flask](https://flask.palletsprojects.com/en/2.2.x/)          | `[flask]`   |  ⏳   |     ⏳ | ⏳          | ⏳    |\n\nTable of Contents\n=================\n\n* [Authup Python Plugins](#authup-python-plugins)\n   * [Supported Python frameworks](#supported-python-frameworks)\n      * [Client](#client)\n      * [Server](#server)\n   * [Installation](#installation)\n      * [Extra dependencies](#extra-dependencies)\n   * [How to use](#how-to-use)\n      * [httpx](#httpx)\n      * [requests](#requests)\n      * [ASGI Middleware](#asgi-middleware)\n         * [Optional user injection](#optional-user-injection)\n      * [FastAPI Dependency](#fastapi-dependency)\n         * [Basic user dependency](#basic-user-dependency)\n         * [Require permissions](#require-permissions)\n   * [How to develop](#how-to-develop)\n      * [Install](#install)\n      * [Test](#test)\n\n\n## Installation\n\nThe plugins are available via [PyPi](https://pypi.org/project/authup-py/).\n\n```bash\npip install authup-py\n```\n\n### Extra dependencies\nThe plugin for the project's base library [httpx](https://github.com/encode/httpx) needs no extra dependencies. To\nuse the additional plugins for other libraries, you need to install with the corresponding extra i.e. for `requests`:\n\n```bash\npip install authup-py[requests]\n```\n\n## How to use\nAll the plugins share the underlying `Authup` class. The class is initialized with the url of the Authup server and\nthe credentials you would like to use (username/password or robot_id/secret).    \nThe class provides both sync and async methods for the different authentication and authorization flows.\n\n```python\n\nfrom authup import Authup\n\nauthup = Authup(\n    url=\"https://authup.org\",\n    username=\"username\",\n    password=\"password\"\n)\n\nauthup_robot = Authup(\n    url=\"https://authup.org\",\n    robot_id=\"robot\",\n    robot_secret=\"secret\"\n)\n\n```\n\nThe following plugins all expect the same arguments as the `Authup` class with the addition of the\napp as a first argument for server side libraries (e.g. FastApi, Flask).\n\n### httpx\nFor synchronously using the plugin with [httpx](https://github.com/encode/httpx) , you can use the `AuthupHttpx` class and pass an instance to your\n`httpx.Client` or a basic `httpx.Request` as the `auth` parameter:\n\n```python\nimport httpx\nfrom authup.plugins.httpx import AuthupHttpx\n\nauthup = AuthupHttpx(\n    url=\"https://authup.org\",\n    username=\"username\",\n    password=\"password\",\n)\n\n# Use the authup instance as the auth parameter for the httpx client\nclient = httpx.Client(auth=authup)\n\nwith client:\n    response = client.get(\"https://authup.org\")\n    print(response.status_code)\n\n\n# Use the authup instance as the auth parameter for a top level request function\nrequest = httpx.get(\"https://authup.org\", auth=authup)\n\n```\n\nIt works the same way for the asynchronous httpx client:\n\n```python\nimport httpx\nfrom authup.plugins.httpx import AuthupHttpxAsync\n\nauthup = AuthupHttpxAsync(\n    url=\"https://authup.org\",\n    username=\"username\",\n    password=\"password\",\n)\n\nasync with httpx.AsyncClient(auth=authup) as client:\n    response = await client.get(\"https://authup.org\")\n    print(response.status_code)\n\n```\n\n### requests\nSince [requests](https://github.com/psf/requests) is a synchronous library, the plugin is also synchronous. You can use the `AuthupRequests` class and\nuse it with the `requests.Session` or the `requests.request` functions:\n> **Note**\n> Requires the `requests` extra to be installed. `pip install authup-py[requests]`\n\n```python\nimport requests\nfrom authup.plugins.requests import AuthupRequests\n\nauthup = AuthupRequests(\n    url=\"https://authup.org\",\n    username=\"username\",\n    password=\"password\",\n)\n\n# Use the authup instance as the auth parameter for the requests session\nwith requests.Session() as session:\n    session.auth = authup\n    response = session.get(\"https://authup.org\")\n    print(response.status_code)\n\n# Use the authup instance as the auth parameter for a top level request function\nresponse = requests.get(\"https://authup.org\", auth=authup)\nprint(response.status_code)\n\n```\n\n### ASGI Middleware\n\nThe `AuthupASGIMiddleware` class can be used as an ASGI middleware for any ASGI framework (i.e. FastAPI, Starlette). \nThe middleware will check the incoming requests for a valid token and otherwise return a 401 response. If you pass the\noptional `user` parameter, the middleware will inject the user object into the request scope (`r.state.user`).\n\nThe first argument is the ASGI application and the second argument is the URL of the authup instance.\n> **Note**\n> Requires the `asgi` extra to be installed. `pip install authup-py[asgi]`\n\nThe following shows a simple example for using the middleware with a FastAPI application but it should work with any ASGI framework.\n\n> **Note**\n> Expects a running authup instance available at the given URL.\n> \n```python\nfrom fastapi import FastAPI\nfrom authup.plugins.asgi import AuthupASGIMiddleware\n\napp = FastAPI()\n\nauthup_url = \"https://authup.org\"  # change to your authup instance\n@app.get(\"/test\")\nasync def test():\n    return {\"message\": \"Hello World\"}\n\n# register the middleware pass the authup url as argument\napp.add_middleware(AuthupASGIMiddleware, authup_url=authup_url)\n\n```\nNow you can access the `/test` endpoint without a token and will receive a 401 response. When using a valid token, you will receive the expected response.\n\n```python\nimport httpx\nfrom authup.plugins.httpx import AuthupHttpx\n\n# no token or invalid token raises 401\nresponse = httpx.get(\"http://localhost:8000/test\") # 401\nprint(response.status_code)\n\n# valid token receives the expected response\nauthup = AuthupHttpx(\n    url=\"https://authup.org\",\n    username=\"username\",\n    password=\"password\",\n)\n\nresponse = httpx.get(\"http://localhost:8000/test\", auth=authup) # 200\nprint(response.status_code)\n\n```\n\n#### Optional user injection\nSet the `user` parameter to `True` when adding the middleware to your ASGI application:\n\n```python\nfrom fastapi import FastAPI, Request\nfrom authup.plugins.asgi import AuthupASGIMiddleware\n\napp = FastAPI()\n\nauthup_url = \"https://authup.org\"  # change to your authup instance\n@app.get(\"/test-user\")\nasync def test(request: Request):\n    return {\"user\": request.state.user}\n\n# register the middleware pass the authup url as argument\napp.add_middleware(AuthupASGIMiddleware, authup_url=authup_url, user=True)\n\n```\n\nCalling the `/test-user` endpoint without a token will return a 401 response. When using a valid token, the user object \nwill be injected into the request scope, and you will receive the expected response containing your user.\n\n### FastAPI Dependency\nThe `AuthupUser` class can be used as a FastAPI dependency. \nIt will check the incoming requests for a valid token and otherwise return a 401 response. If the token is valid a user object\nwill be available in the dependency call.\n\n#### Basic user dependency\nThe following shows a simple example for using the dependency with a FastAPI application that will return the user\nobject obtained from the token.\n\n```python\nfrom fastapi import FastAPI, Depends\nfrom authup.plugins.fastapi import AuthupUser\nfrom authup import User\n\n\napp = FastAPI()\n\nuser_dependency = AuthupUser(url=\"http://localhost:3010\")\n\n@app.get(\"/test\")\nasync def user_test(user: User = Depends(user_dependency)):\n    return {\"user\": user.dict()}\n\n```\n\n#### Require permissions\nYou can also require specific permissions for the user. The following example will only allow users with the \n`client_add` permission and a power level of over `100`. Otherwise, a 401 response will be returned.\n\n```python\nfrom fastapi import FastAPI, Depends\nfrom authup.plugins.fastapi import AuthupUser\nfrom authup import User\nfrom authup.permissions import Permission\n\npermissions = [\n        Permission(name=\"client_add\", inverse=False, power=100),\n    ]\n\nrequired_permissions = AuthupUser(\n    url=\"http://localhost:3010\",\n    permissions=permissions,\n)\n\napp = FastAPI()\n\n@app.get(\"/test\")\nasync def user_test(user: User = Depends(required_permissions)):\n    return {\"user\": user.dict()}\n\n```\n\n\n\n## How to develop\n\n### Install\n\nRequires [poetry](https://python-poetry.org/) and [pre-commit](https://pre-commit.com/) and python 3.7+.\n\n```shell\npoetry install --with dev --all-extras\n```\n\nInstall pre-commit hooks\n\n```shell\npoetry run pre-commit install\n```\n\n### Test\n\n```shell\npoetry run pytest\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://authup.org",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "authup",
    "package_url": "https://pypi.org/project/authup/",
    "platform": null,
    "project_url": "https://pypi.org/project/authup/",
    "project_urls": {
      "Homepage": "https://authup.org",
      "Repository": "https://github.com/migraf/authup-py.git"
    },
    "release_url": "https://pypi.org/project/authup/0.5.0/",
    "requires_dist": [
      "httpx (>=0.23.2,<0.24.0)",
      "pydantic (>=1.10.4,<2.0.0)",
      "fastapi (>=0.87.0) ; extra == \"fastapi\" or extra == \"all\"",
      "requests (>=2.26.0,<3.0.0) ; extra == \"requests\" or extra == \"all\"",
      "flask (>=2.0.0,<3.0.0) ; extra == \"flask\" or extra == \"all\"",
      "asgiref (>=3.6.0,<4.0.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Python plugins for the Authup authentication and authorization framework",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16498729,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e110a4d26500abebb900b1f1c5339d97680a2dc282f1390c00a23cde996666e",
          "md5": "4f807b2ecf324f6657849f7e4d2a1d06",
          "sha256": "3cf500d69f71de83a1bbe5a764c46d58b0dd81243880817eae2421db73e835de"
        },
        "downloads": -1,
        "filename": "authup-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f807b2ecf324f6657849f7e4d2a1d06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 17796,
        "upload_time": "2023-01-08T21:56:55",
        "upload_time_iso_8601": "2023-01-08T21:56:55.300131Z",
        "url": "https://files.pythonhosted.org/packages/6e/11/0a4d26500abebb900b1f1c5339d97680a2dc282f1390c00a23cde996666e/authup-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cffaf3a6defbc59db88acbad337d54ce692f7d9bb770c115cafba222b7bb812",
          "md5": "a08b95e1901e8d8b9d69a0b0262c62b4",
          "sha256": "1e38e7a4b134313dd062871090e9a429242f3b87fcf7dc39f94b176d1492508c"
        },
        "downloads": -1,
        "filename": "authup-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a08b95e1901e8d8b9d69a0b0262c62b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 13694,
        "upload_time": "2023-01-08T21:56:56",
        "upload_time_iso_8601": "2023-01-08T21:56:56.775703Z",
        "url": "https://files.pythonhosted.org/packages/8c/ff/af3a6defbc59db88acbad337d54ce692f7d9bb770c115cafba222b7bb812/authup-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56461d65c8184061f18db9e83ec179c394474cd29203e59f4816df1f6023914b",
          "md5": "1b94e1049bac544353b4a2a63677275c",
          "sha256": "a65825ee1b9e9a14ac2cece1b705efe17b5829b2912efa55e2030c5f4b9a1ad3"
        },
        "downloads": -1,
        "filename": "authup-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b94e1049bac544353b4a2a63677275c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 17743,
        "upload_time": "2023-01-09T21:37:35",
        "upload_time_iso_8601": "2023-01-09T21:37:35.985224Z",
        "url": "https://files.pythonhosted.org/packages/56/46/1d65c8184061f18db9e83ec179c394474cd29203e59f4816df1f6023914b/authup-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "857af2c6fded8317bb20e4c193d45516b487ffb92ac80d1929cb11da85226221",
          "md5": "f1e02ff9f4aae25d8b4edd1dee21586f",
          "sha256": "e9761bffb954085bb7a63c35fa80f9a245bb4b51ee8fb2acd9dce02a4190dea5"
        },
        "downloads": -1,
        "filename": "authup-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f1e02ff9f4aae25d8b4edd1dee21586f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 13379,
        "upload_time": "2023-01-09T21:37:37",
        "upload_time_iso_8601": "2023-01-09T21:37:37.655788Z",
        "url": "https://files.pythonhosted.org/packages/85/7a/f2c6fded8317bb20e4c193d45516b487ffb92ac80d1929cb11da85226221/authup-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c79855f26aa7b4f9a0bc7af883f5f6a40a1446f876e92ca56eafafb7432ef1d0",
          "md5": "8ff8eaed561f67dccae77099011557d5",
          "sha256": "e581d62ca5a02624f12de1e7d0b8feecebf74757f5e9658a6ca1f24b13118199"
        },
        "downloads": -1,
        "filename": "authup-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ff8eaed561f67dccae77099011557d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 22686,
        "upload_time": "2023-01-20T08:20:29",
        "upload_time_iso_8601": "2023-01-20T08:20:29.258191Z",
        "url": "https://files.pythonhosted.org/packages/c7/98/55f26aa7b4f9a0bc7af883f5f6a40a1446f876e92ca56eafafb7432ef1d0/authup-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0b5f0afd88a9234c2f5674dde12e1c5b1c2f5707cbecb41bdc2f3d92f3141e5",
          "md5": "215055e1ab83326bc047e631c50fbfb8",
          "sha256": "16b550ff4324ff44c7f78134361a2ed891ef677669ece6be2efaea4ac920734d"
        },
        "downloads": -1,
        "filename": "authup-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "215055e1ab83326bc047e631c50fbfb8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 16035,
        "upload_time": "2023-01-20T08:20:30",
        "upload_time_iso_8601": "2023-01-20T08:20:30.984849Z",
        "url": "https://files.pythonhosted.org/packages/c0/b5/f0afd88a9234c2f5674dde12e1c5b1c2f5707cbecb41bdc2f3d92f3141e5/authup-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c79855f26aa7b4f9a0bc7af883f5f6a40a1446f876e92ca56eafafb7432ef1d0",
        "md5": "8ff8eaed561f67dccae77099011557d5",
        "sha256": "e581d62ca5a02624f12de1e7d0b8feecebf74757f5e9658a6ca1f24b13118199"
      },
      "downloads": -1,
      "filename": "authup-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8ff8eaed561f67dccae77099011557d5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 22686,
      "upload_time": "2023-01-20T08:20:29",
      "upload_time_iso_8601": "2023-01-20T08:20:29.258191Z",
      "url": "https://files.pythonhosted.org/packages/c7/98/55f26aa7b4f9a0bc7af883f5f6a40a1446f876e92ca56eafafb7432ef1d0/authup-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c0b5f0afd88a9234c2f5674dde12e1c5b1c2f5707cbecb41bdc2f3d92f3141e5",
        "md5": "215055e1ab83326bc047e631c50fbfb8",
        "sha256": "16b550ff4324ff44c7f78134361a2ed891ef677669ece6be2efaea4ac920734d"
      },
      "downloads": -1,
      "filename": "authup-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "215055e1ab83326bc047e631c50fbfb8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 16035,
      "upload_time": "2023-01-20T08:20:30",
      "upload_time_iso_8601": "2023-01-20T08:20:30.984849Z",
      "url": "https://files.pythonhosted.org/packages/c0/b5/f0afd88a9234c2f5674dde12e1c5b1c2f5707cbecb41bdc2f3d92f3141e5/authup-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}