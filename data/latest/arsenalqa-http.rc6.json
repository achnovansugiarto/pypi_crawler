{
  "info": {
    "author": "Wargaming.net QA group",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Testing"
    ],
    "description": "Quick start\n=====================================\n\nArsenalQA is a framework that helps to abstract QA functional tests from  developers realisation in ORM style.\n\nModel your data - Models help you to change and test your data faster.\n\nMake you transports abstract - it helps you to add them on the fly.\n\nMake relations between models by transports or other models - it helps your colleagues to understand your code easily.\n\n**Why not django, graphql, etc?**\n\nBecause all of this instruments are created for developers. Developers code works in the middle of project logic,\nbetween two endpoints: users and database(for example), and are adapted for using strong interaction protocols,\nwhereas QA need more flexible and comfortable behavior.\n\n\n**Instalation:**\n```\n$ pip install arsenalqa[http]\n```\n\nLets make our first example with Post model:\n\n``` python\nfrom arsenalqa.fields import Field\nfrom arsenalqa.models import Model\nfrom arsenalqa.transports.managers import TransportManager\nfrom arsenalqa.transports.http import Http\n\n\nclass Post(Model):\n\n    http: Http = TransportManager(Http, url='https://jsonplaceholder.typicode.com/posts/{id}')\n\n    id = Field()\n    user_id = Field(name='userId')\n    title = Field()\n    body = Field()\n```\n\nOur entity was created.\n\nNow you can:\n\n``` python\nprint(Post.http.get())  # get list of posts models\n\nmy_model = Post()  # new instance of my model\nmy_model.id = 1\nresponse_model = my_model.http.get()  # get single instance from web\nprint(response_model)  # model from web\nprint(response_model.id == my_model.id)\n\n# Lets fill new instance of our model and post it to the web\nnew_model = Post()\nnew_model.title = 'My new title'\nnew_model.body = 'My new Post body'\n\nnew_created_model = new_model.http.post(expected_status=201)  # Send via http POST method\nprint(new_created_model)  # Response wrapped in new model. Has filled field id.\nprint(new_model == new_created_model)  # False because, response model contains only id field.\n\n# Lets get list of posts from web, and filter it by user\nprint(Post.http.get().filter_by_attrs(user_id=1))\n\n# Lets get list of posts from web, and filter single unique model by id\nfirst_post = Post.http.get().unique_by_attrs(id=1)\nprint(first_post)\n\n# Lets request again from response model, and get title attribute from response model\nprint(first_post.http.get().title)\n```\nCongrats! Now you can start learning this framework. **More [docs](https://github.com/wgnet/arsenalqa/blob/main/docs/INDEX.md) page!**\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wgnet/arsenalqa",
    "keywords": "TESTING,MICROSERVICES",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "arsenalqa-http",
    "package_url": "https://pypi.org/project/arsenalqa-http/",
    "platform": "",
    "project_url": "https://pypi.org/project/arsenalqa-http/",
    "project_urls": {
      "Homepage": "https://github.com/wgnet/arsenalqa"
    },
    "release_url": "https://pypi.org/project/arsenalqa-http/2020.0.6/",
    "requires_dist": [
      "requests (<3.0,>=2.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Extra for ArsenalQA package",
    "version": "2020.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8702176,
  "releases": {
    "2020.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb4af8c7b301ef60655eb6c3ce169a1fa55a686075170801e9ace7d9393b6a2c",
          "md5": "264e4952220661487c0c5cdd2aba6316",
          "sha256": "bad17b1fe89d3462f5ce70eb30373b4981c3e45fb72abee47c5c261811bec3d0"
        },
        "downloads": -1,
        "filename": "arsenalqa_http-2020.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "264e4952220661487c0c5cdd2aba6316",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22336,
        "upload_time": "2020-11-04T20:11:04",
        "upload_time_iso_8601": "2020-11-04T20:11:04.607974Z",
        "url": "https://files.pythonhosted.org/packages/cb/4a/f8c7b301ef60655eb6c3ce169a1fa55a686075170801e9ace7d9393b6a2c/arsenalqa_http-2020.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cae6af7a887062d3dd04af9b22fbff2ed1d9388d8cce866eef3f304136c95213",
          "md5": "3e23d6e64800d8897233e1ce5a71b19a",
          "sha256": "10ed9389072d2fd0e40941fc8630cf26aa39028d07a46f93d9a05a697e592029"
        },
        "downloads": -1,
        "filename": "arsenalqa_http-2020.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e23d6e64800d8897233e1ce5a71b19a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23357,
        "upload_time": "2020-11-04T20:58:15",
        "upload_time_iso_8601": "2020-11-04T20:58:15.473066Z",
        "url": "https://files.pythonhosted.org/packages/ca/e6/af7a887062d3dd04af9b22fbff2ed1d9388d8cce866eef3f304136c95213/arsenalqa_http-2020.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12a3b8617caf9f0b6f61dd7efd6708c7c58f102916c571c79e96732fa68e371d",
          "md5": "11350e04526b0b5db657bc2bec5f759e",
          "sha256": "82f5ea3b9205f53dbbf57a7857db2815da45c0283fa6b8f0964354f900d0c420"
        },
        "downloads": -1,
        "filename": "arsenalqa_http-2020.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11350e04526b0b5db657bc2bec5f759e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23443,
        "upload_time": "2020-11-05T15:48:29",
        "upload_time_iso_8601": "2020-11-05T15:48:29.778205Z",
        "url": "https://files.pythonhosted.org/packages/12/a3/b8617caf9f0b6f61dd7efd6708c7c58f102916c571c79e96732fa68e371d/arsenalqa_http-2020.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac365c11ef6d6b3e1913ff6c73c733a44cc63b2ba7376f462aa1b6b1ddc84125",
          "md5": "15a430ef2e00e020fdada6e75f37c6eb",
          "sha256": "9824720dc466a2f7517a4049931bc8879c8798e7d521f7b82376d3cec7b072bc"
        },
        "downloads": -1,
        "filename": "arsenalqa_http-2020.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15a430ef2e00e020fdada6e75f37c6eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23483,
        "upload_time": "2020-11-05T16:12:55",
        "upload_time_iso_8601": "2020-11-05T16:12:55.203906Z",
        "url": "https://files.pythonhosted.org/packages/ac/36/5c11ef6d6b3e1913ff6c73c733a44cc63b2ba7376f462aa1b6b1ddc84125/arsenalqa_http-2020.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28e3a477043af464ca7af3f03ea80cfbfeee0d49b1fdfb1686234ea97570c5e7",
          "md5": "875236e75ee274e06c577e47ff5f708e",
          "sha256": "09ca3f0eea5b72d54b00a7286eba124a8d97219d1f68b59393c6578cb845932c"
        },
        "downloads": -1,
        "filename": "arsenalqa_http-2020.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "875236e75ee274e06c577e47ff5f708e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23500,
        "upload_time": "2020-11-05T19:21:11",
        "upload_time_iso_8601": "2020-11-05T19:21:11.378782Z",
        "url": "https://files.pythonhosted.org/packages/28/e3/a477043af464ca7af3f03ea80cfbfeee0d49b1fdfb1686234ea97570c5e7/arsenalqa_http-2020.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2356d4d4ba202d0fc88dd00293109a2d67005d1464bb5a94f76f7b2495712150",
          "md5": "4f9f55598b27313506642bbbb6d86d82",
          "sha256": "1b370cba3b454dfefd72b62bac3def1dafac61686c1f48d89e6d7561d5fb17ea"
        },
        "downloads": -1,
        "filename": "arsenalqa_http-2020.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f9f55598b27313506642bbbb6d86d82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23560,
        "upload_time": "2020-11-19T18:44:32",
        "upload_time_iso_8601": "2020-11-19T18:44:32.431290Z",
        "url": "https://files.pythonhosted.org/packages/23/56/d4d4ba202d0fc88dd00293109a2d67005d1464bb5a94f76f7b2495712150/arsenalqa_http-2020.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2356d4d4ba202d0fc88dd00293109a2d67005d1464bb5a94f76f7b2495712150",
        "md5": "4f9f55598b27313506642bbbb6d86d82",
        "sha256": "1b370cba3b454dfefd72b62bac3def1dafac61686c1f48d89e6d7561d5fb17ea"
      },
      "downloads": -1,
      "filename": "arsenalqa_http-2020.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4f9f55598b27313506642bbbb6d86d82",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 23560,
      "upload_time": "2020-11-19T18:44:32",
      "upload_time_iso_8601": "2020-11-19T18:44:32.431290Z",
      "url": "https://files.pythonhosted.org/packages/23/56/d4d4ba202d0fc88dd00293109a2d67005d1464bb5a94f76f7b2495712150/arsenalqa_http-2020.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}