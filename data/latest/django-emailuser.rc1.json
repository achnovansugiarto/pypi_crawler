{
  "info": {
    "author": "Himel Rana",
    "author_email": "contact@himelrana-swe.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# # `emailuser` is a Django Custom User Module\n\n#Package Version: 1.x\n`emailuser` makes it easy to use email address as your identification token instead of a username.\nemailuser is a custom Django user model (extends  `AbstractBaseUser`) so it takes a tiny amount of effort to use.\n\nThe only difference between emailuser and the vanilla Django  `User`  is email address is the  `USERNAME_FIELD`  (and username also exist, If you not give it in `create_user` it will generate a `random 12 char unique string as username`).\n\nemailuser supports Django 2.* to 3.*\n# When to use emailuser ?\n\nWhen you need email as username in django project.\n\n# Why I have created emailuser?\n\nI have created this custom user package for my university final project where I need to create user using university email also all user must have a profile link using unique username.\n\nI think this package can help me in other application development also it can help other people too. That is why I published it.\nIf you love it you can [donate](https://commerce.coinbase.com/checkout/c3eafb3c-65ba-40b5-b555-2037989de629).\n\n# Install and setup\n\n 1. Install with `pip`:\n  ```\n    #Django 2.x, or 3.x\n\n    pip install django-emailuser \n  ```\n 2. Add `emailuser` to your `INSTALLED_APPS` setting:\n \n  ```  \n    \n    INSTALLED_APPS = [\n        ...\n        'emailuser',\n    ]\n    \n  ```\n 3. Specify the custom model as the default user model for your project using the `AUTH_USER_MODEL` setting in your setting:\n \n  ```\n    AUTH_USER_MODEL = \"emailuser.User\"\n  ```\n 5. Run migrations (Don't do any migrate before `emailuser` makemigrations).\n \n   if you have tables referencing Django  `User`  model, you will have to delete those table and migrations, then re-migrate. This will ensure everything is set up correctly from the beginning.\n  \n   ```\n    python manage.py makemigrations emailuser\n    python manage.py migrate\n  ```\n\n 6. Instead of referring to User directly, you should reference the user model using  `django.contrib.auth.get_user_model()`\n\n  When you define a foreign key or many-to-many relations to the  `User`  model, you should specify the custom model using the  `AUTH_USER_MODEL`  setting.\n\n  ```\n  from django.conf import settings\n  from django.db import models\n\n  class Profile(models.Model):\n      user = models.ForeignKey(\n          settings.AUTH_USER_MODEL,\n          on_delete=models.CASCADE,\n  )\n  ```\n7: For Django Rest Framework\n\n    from django.contrib.auth import get_user_model\n    class  UserSerializer(serializers.ModelSerializer):\n      class  Meta:\n        model = get_user_model()\n        fields = ('id', 'email', 'username', 'first_name', 'last_name')\n\n 8: Helper Functions\n  \n\n    from django.contrib.auth import get_user_model\n    \n    get_user_model().objects.get_full_name()  # Return Full Name\n    \n    /*\n    For sending email you must configure smtp setting like below\n      EMAIL_HOST = 'hostname'\n    EMAIL_PORT = port\n    EMAIL_HOST_USER = 'username'\n    EMAIL_HOST_PASSWORD = 'password'\n    EMAIL_USE_TLS = True\n  */\n  \n    get_user_model().objects.send_email(subject, message, from_email)   \n  \n  # this will send email to logged in user\n  # by default it will not show sending error \n  # for showing error extra False argument required like below\n  \n  get_user_model().objects.send_email(subject, message, from_email, False)  \n\n9: Registraion\n\n    get_user_model().objects.create_user(email, password, first_name, last_name, username)\n    #username field is optional. If it's empty a rendom unique username will be created\n    \n10: Login\n\n    #Required argument\n    email and password\n\nNote. FOO@example.com will be replaced to foo@example.com automatically\n\n \n## License\n\nReleased under the MIT license. See [LICENSE](https://github.com/Swe-HimelRana/django-email-user/blob/master/LICENSE) for details.\n\n## [](https://github.com/Swe-HimelRana/django-email-user#questions-comments-or-anything-else)Questions, comments, or anything else?\n-   [Contribute](https://github.com/Swe-HimelRana/django-email-user/)\n-   [Open an issue](https://github.com/Swe-HimelRana/django-email-user/issues)\n-   [https://www.linkedin.com/in/swe-himelrana](https://www.linkedin.com/in/swe-himelrana)\n-   [contact@himelrana-swe.com](mailto:contact@himelrana-swe.com)\n \n Give a thanks by [Donation](https://commerce.coinbase.com/checkout/c3eafb3c-65ba-40b5-b555-2037989de629)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Swe-HimelRana/django-email-user",
    "keywords": "django,django emailuser,django email user,django email username,django email as username",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-emailuser",
    "package_url": "https://pypi.org/project/django-emailuser/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-emailuser/",
    "project_urls": {
      "Homepage": "https://github.com/Swe-HimelRana/django-email-user"
    },
    "release_url": "https://pypi.org/project/django-emailuser/1.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "emailuser, make email as username, But unique username also exists.",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7261437,
  "releases": {
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbc793e6f97c5d66c2bd072d481d530d285fb4ff8e03377d274407b878cc8303",
          "md5": "6d3151402e4c921f8305d4ee27afbf0f",
          "sha256": "99dd061fec95ac0d8fac70d8dd59c1195ad1c8468ce1a4d30af0e6368171d369"
        },
        "downloads": -1,
        "filename": "django-emailuser-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6d3151402e4c921f8305d4ee27afbf0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5363,
        "upload_time": "2020-05-17T13:48:14",
        "upload_time_iso_8601": "2020-05-17T13:48:14.046951Z",
        "url": "https://files.pythonhosted.org/packages/db/c7/93e6f97c5d66c2bd072d481d530d285fb4ff8e03377d274407b878cc8303/django-emailuser-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dbc793e6f97c5d66c2bd072d481d530d285fb4ff8e03377d274407b878cc8303",
        "md5": "6d3151402e4c921f8305d4ee27afbf0f",
        "sha256": "99dd061fec95ac0d8fac70d8dd59c1195ad1c8468ce1a4d30af0e6368171d369"
      },
      "downloads": -1,
      "filename": "django-emailuser-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6d3151402e4c921f8305d4ee27afbf0f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5363,
      "upload_time": "2020-05-17T13:48:14",
      "upload_time_iso_8601": "2020-05-17T13:48:14.046951Z",
      "url": "https://files.pythonhosted.org/packages/db/c7/93e6f97c5d66c2bd072d481d530d285fb4ff8e03377d274407b878cc8303/django-emailuser-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}