{
  "info": {
    "author": "ShipEngine",
    "author_email": "support@shipengine.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![ShipEngine](https://shipengine.github.io/img/shipengine-logo-wide.png)](https://shipengine.com)\n\nShipEngine Python SDK\n=====================\n\n![GitHub Workflow Status](https://img.shields.io/github/workflow/status/ShipEngine/shipengine-python/Python%20package?label=shipengine-python&logo=github&logoColor=white)\n[![Coverage Status](https://coveralls.io/repos/github/ShipEngine/shipengine-python/badge.svg?branch=main)](https://coveralls.io/github/ShipEngine/shipengine-python?branch=main)\n![GitHub](https://img.shields.io/github/license/shipengine/shipengine-python?color=blue)\n![OS Compatibility](https://shipengine.github.io/img/badges/os-badges.svg)\n\n> ATTN: This project is under development and not ready for consumer use.\n\n- The official Python module for ShipEngine API.\n\nQuick Start\n===========\n\nInstall `shipengine` via pip (not yet published):\n```bash\npip install shipengine\n```\n\n- The only configuration requirement is providing an [API Key](https://www.shipengine.com/docs/auth/#api-keys \"ShipEngine Authentication Docs\").\n\n> The following assumes that you have already set the `SHIPENGINE_API_KEY` environment variable with your API Key using `os.environ[\"SHIPENGINE_API_KEY\"] = \"<YOUR_API_KEY_HERE>\"`.\n\nInstantiate ShipEngine Class\n----------------------------\n\n```python\nimport os\n\nfrom shipengine import ShipEngine\n\napi_key = os.getenv(\"SHIPENGINE_API_KEY\")\n\nshipengine = ShipEngine(api_key)\n```\n- You can also pass in a `dictionary` containing configuration options instead of just passing in a string that is your `API Key`.\n\n```python\nimport os\n\nfrom shipengine import ShipEngine\n\napi_key = os.getenv(\"SHIPENGINE_API_KEY\")\n\nshipengine = ShipEngine(\n    {\"api_key\": api_key, \"page_size\": 75, \"retries\": 3, \"timeout\": 10}\n)\n```\n\nMethods\n-------\n- [addresses_validate](./docs/addresses_validate_example.md) - Indicates whether the provided address is valid. If the\n  address is valid, the method returns a normalized version of the address based on the standards of the country in\n  which the address resides.\n- [create_label_from_rate_id](./docs/create_label_from_rate_id_example.md) - Purchase a label by `rate_id`. When using the `get_rates_from_shipment` method, you can use one of the returned `rate_id` values with this method to purchase a label against a given rate.\n- [create_label_from_shipment](./docs/create_label_from_shipment.md) - Purchase a label created from shipment details.\n- [get_rates_from_shipment](./docs/get_rates_from_shipment_example.md) - Fetch rates from shipment details to shop the best shipping rate for your package.\n- [list_carriers](./docs/list_carriers_example.md) - Lists the carrier accounts connected to your SHipEngine account.\n- [track_package_by_label_id](./docs/track_package_by_label_id_example.md) - Track a package by `label_id`, the preferred way to track shipments if you crate shipping labels using ShipEngine. This method returns\nthe all tracking events for a given shipment.\n- [track_package_by_carrier_code_and_tracking_number](./docs/track_package_by_carrier_code_and_tracking_number_example.md) - Track a package by `carrier_code` and `tracking_number`. This method returns\nthe all tracking events for a given shipment.\n- [void_label_by_label_id](./docs/void_label_by_label_id_example.md) - Void a shipping label you created using ShipEngine by its `label_id`. This method returns an object that indicates the status of the void label request.\n\nClass Objects\n-------------\n- [ShipEngine](./) - A configurable entry point to the ShipEngine API SDK, this class provides convenience methods\n  for various ShipEngine API Services.\n\nContributing\n============\n\nLocal Development\n-----------------\n> You will need to install `Python3.7` if you do not have it locally, before working on this project.\n\nThis project uses [Poetry]() to manage project dependencies, build steps, and publishing to [PYPI]().\n\nYou can use the following `curl` command to download **Poetry** from your terminal is you are\non `osx / linux / bashonwindows`:\n\n```bash\ncurl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -\n```\n\n- Once you have **Poetry** installed you need to install the projects dependencies with this command from the project root:\n\n```bash\nbin/setup\n```\n- This script will install all dependencies specified in `pyproject.toml` via `Poetry` and install the `pre-commit` hooks\nthis project uses.\n\n## Adding dependencies to the project\nIf your changes require you to install a python package/module using `poetry add <some package>` or\n`poetry add <some package> -D` for a dev dependency. You will also need to run the following command to\nregenerate a `requirements.txt` file that includes the newly added dependencies:\n```bash\npoetry export -f requirements.txt --output requirements.txt --without-hashes --dev\n```\n\n## Pre-Commit Hooks\nWe are using [Pre-Commit](https://pre-commit.com/) to enforce formatting, lint rules, and code analysis so that\nthis repo is always in good health.\n- `Pre-Commit` is installed and initialized when you run `bin/setup` from the project root as outlined above.\n\n- If you choose not to use `Poetry` and prefer `pip` you can simply run `pip install -r requirements.txt`\nTo be able to commit & push a PR to the repo after making changes locally, you will need to install `pre-commit` which\nis a tool that runs tests, linting, formatting, and code analysis on your changes.\n```bash\npre-commit install\n```\n> Note: The checks run in pre-commit hooks are the same checks run in CI in our GitHub Actions.\n\nTesting\n-------\nYou can run the tests in the `tests/` directory using [Pytest]() in the **Poetry** environment like this:\n\n```bash\npoetry run pytest\n```\n\nOR via `Tox`:\n\n```bash\npoetry run tox\n```\n\nLinting\n-------\nYou can run the `linting environment` in **Tox** using this command:\n\n```bash\npoetry tox -e lint\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.shipengine.com/",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "shipengine",
    "package_url": "https://pypi.org/project/shipengine/",
    "platform": "",
    "project_url": "https://pypi.org/project/shipengine/",
    "project_urls": {
      "Homepage": "https://www.shipengine.com/",
      "Repository": "https://github.com/ShipEngine/shipengine-python"
    },
    "release_url": "https://pypi.org/project/shipengine/1.0.0/",
    "requires_dist": [
      "aiohttp (>=3.7.4,<4.0.0)",
      "requests (>=2.25.1,<3.0.0)",
      "python-dotenv (>=0.15.0,<0.16.0)",
      "dataclasses-json (>=0.5.3,<0.6.0)",
      "fuuid (>=0.1.0,<0.2.0)",
      "poetry-dynamic-versioning (>=0.13.0,<0.14.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "The official Python library for ShipEngine API.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11153582,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2e1b9fdadaf1122f9815babd294df5367b5b20a9ba81a48cb792096c917a7f8",
          "md5": "25a11b5f6b65511ff8e958846b7c056d",
          "sha256": "7b313ad76e0931550036326d46aa3064ce04df07eabedc7f52aad05f24f10b11"
        },
        "downloads": -1,
        "filename": "shipengine-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25a11b5f6b65511ff8e958846b7c056d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 26497,
        "upload_time": "2021-08-11T20:16:44",
        "upload_time_iso_8601": "2021-08-11T20:16:44.653484Z",
        "url": "https://files.pythonhosted.org/packages/d2/e1/b9fdadaf1122f9815babd294df5367b5b20a9ba81a48cb792096c917a7f8/shipengine-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72d11d79b9af6696136daf149a9af8d08add092f529bcd2e9a313cc90dd0736b",
          "md5": "cdeff96648e5b26a77e7177f2341ac20",
          "sha256": "92de26fa0f1aefa98072a31aeee8f2a81dc23bed46bac975fdd0a70ff3d7f8a8"
        },
        "downloads": -1,
        "filename": "shipengine-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cdeff96648e5b26a77e7177f2341ac20",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 24556,
        "upload_time": "2021-08-11T20:16:46",
        "upload_time_iso_8601": "2021-08-11T20:16:46.105029Z",
        "url": "https://files.pythonhosted.org/packages/72/d1/1d79b9af6696136daf149a9af8d08add092f529bcd2e9a313cc90dd0736b/shipengine-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2e1b9fdadaf1122f9815babd294df5367b5b20a9ba81a48cb792096c917a7f8",
        "md5": "25a11b5f6b65511ff8e958846b7c056d",
        "sha256": "7b313ad76e0931550036326d46aa3064ce04df07eabedc7f52aad05f24f10b11"
      },
      "downloads": -1,
      "filename": "shipengine-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "25a11b5f6b65511ff8e958846b7c056d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 26497,
      "upload_time": "2021-08-11T20:16:44",
      "upload_time_iso_8601": "2021-08-11T20:16:44.653484Z",
      "url": "https://files.pythonhosted.org/packages/d2/e1/b9fdadaf1122f9815babd294df5367b5b20a9ba81a48cb792096c917a7f8/shipengine-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "72d11d79b9af6696136daf149a9af8d08add092f529bcd2e9a313cc90dd0736b",
        "md5": "cdeff96648e5b26a77e7177f2341ac20",
        "sha256": "92de26fa0f1aefa98072a31aeee8f2a81dc23bed46bac975fdd0a70ff3d7f8a8"
      },
      "downloads": -1,
      "filename": "shipengine-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cdeff96648e5b26a77e7177f2341ac20",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 24556,
      "upload_time": "2021-08-11T20:16:46",
      "upload_time_iso_8601": "2021-08-11T20:16:46.105029Z",
      "url": "https://files.pythonhosted.org/packages/72/d1/1d79b9af6696136daf149a9af8d08add092f529bcd2e9a313cc90dd0736b/shipengine-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}