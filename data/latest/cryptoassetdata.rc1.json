{
  "info": {
    "author": "Linus Kohl",
    "author_email": "linus@munichresearch.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "================\ncryptoassetdata\n================\n\n\n|release| |pypi| |license|\n\nPython module to fetch historic crypto asset market data from `CoinMarketCap <https://coinmarketcap.com/>`_.\nTo reduce traffic extracted data is cached. Furthermore loading the required pages is threaded for performance improvement. Returns Pandas DataFrames with dates as index. As symbols are *not* unique, the *website slug* is used.\n\nDocumentation\n=============\n\nSee `requirements.txt <https://github.com/linuskohl/cryptoassetdata/blob/master/requirements.txt>`_\nfile for additional dependencies:\n\n* Python_ 3.x\n* dateparser_\n* Pandas_\n* requests_\n* lxml_\n\nInstallation\n------------------\n\nPip Installation:\n::\n\n    $ pip install cryptoassetdata\n\nTo install from source:\n::\n\n    $ git clone https://github.com/linuskohl/cryptoassetdata\n    $ pip install -r requirements.txt\n    $ python setup.py install\n\nUsage\n-----\n\nSample code to plot Ethereums Open data\n\n.. code-block:: python\n\n    import cryptoassetdata\n    import matplotlib.pyplot as plt\n\n    def available_assets():\n        # As Symbols are not unique, the website slugs are used.\n        # Get a list of available crypt assets\n        print(cryptoassetdata.get_slugs())\n\n    def plot_ethereum_price():\n        # get_historic_data takes an array containing asset slugs, start and end date of the data.\n        # fill_na specifies if the DataFrame contains only dates the assets were traded, or every date\n        # in the specified date range. A dictionary containing a DataFrame for every is returned.\n        data = cryptoassetdata.get_historic_data([\"ethereum\"], \"01/01/2017\", \"12/31/2017\", fill_na=True)\n        ethereum = data['ethereum'].Open # Get open data from Ethereum\n        ethereum.plot()\n        plt.show() # Display plot\n\n\n\nContribute\n----------\n- Source Code: https://github.com/linuskohl/cryptoassetdata\n- Issue Tracker: https://github.com/linuskohl/cryptoassetdata/issues\n\nChangelog\n------------------\n\nPlease see the `CHANGES.txt\n<https://github.com/linuskohl/cryptoassetdata/blob/master/CHANGES.txt>`__ for a list\nof all changes.\n\n\nLicense\n-------\n\nThe project is licensed under the GPLv3 License. See `LICENSE.txt <https://github.com/linuskohl/cryptoassetdata/blob/master/LICENSE.txt>`_ for more details.\n\nPackage Author\n--------------\n* Linus Kohl <linus@munichresearch.com>\n\n.. |release| image:: https://img.shields.io/github/release/linuskohl/cryptoassetdata.svg?style=flat-square\n.. |license| image:: https://img.shields.io/github/license/linuskohl/cryptoassetdata.svg?style=flat-square\n.. |pypi| image:: https://img.shields.io/pypi/v/cryptoassetdata.svg?style=flat-square\n\n.. _Python: http://www.python.org\n.. _Pandas: https://pandas.pydata.org\n.. _Dateparser: https://github.com/scrapinghub/dateparser\n.. _Requests: http://docs.python-requests.org/en/master/\n.. _lxml: http://lxml.de/",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/linuskohl/cryptoassetdata",
    "keywords": "cryptocurrency,cryptoassets,crypto,token,bitcoin,data,historic,coinmarketcap",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cryptoassetdata",
    "package_url": "https://pypi.org/project/cryptoassetdata/",
    "platform": "",
    "project_url": "https://pypi.org/project/cryptoassetdata/",
    "project_urls": {
      "Homepage": "https://github.com/linuskohl/cryptoassetdata"
    },
    "release_url": "https://pypi.org/project/cryptoassetdata/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.0",
    "summary": "Fetch historic crypto asset data from CoinMarketCap",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3916356,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7d341843e7673e1b830ccedc2d4e7ee8fe6de0647a2497c8c21256594722902",
          "md5": "c5d9f44542167bbf5316284fc465e2fc",
          "sha256": "f782c0b9722dd24bb8f7bb08a962ce1582c4745625f4f65511da890d2fa832fc"
        },
        "downloads": -1,
        "filename": "cryptoassetdata-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c5d9f44542167bbf5316284fc465e2fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 18998,
        "upload_time": "2018-05-31T09:43:24",
        "upload_time_iso_8601": "2018-05-31T09:43:24.727903Z",
        "url": "https://files.pythonhosted.org/packages/b7/d3/41843e7673e1b830ccedc2d4e7ee8fe6de0647a2497c8c21256594722902/cryptoassetdata-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b7d341843e7673e1b830ccedc2d4e7ee8fe6de0647a2497c8c21256594722902",
        "md5": "c5d9f44542167bbf5316284fc465e2fc",
        "sha256": "f782c0b9722dd24bb8f7bb08a962ce1582c4745625f4f65511da890d2fa832fc"
      },
      "downloads": -1,
      "filename": "cryptoassetdata-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c5d9f44542167bbf5316284fc465e2fc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0",
      "size": 18998,
      "upload_time": "2018-05-31T09:43:24",
      "upload_time_iso_8601": "2018-05-31T09:43:24.727903Z",
      "url": "https://files.pythonhosted.org/packages/b7/d3/41843e7673e1b830ccedc2d4e7ee8fe6de0647a2497c8c21256594722902/cryptoassetdata-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}