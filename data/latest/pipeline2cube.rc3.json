{
  "info": {
    "author": "FNNDSC",
    "author_email": "rudolph.pienaar@childrens.harvard.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Medical Science Apps."
    ],
    "description": "plugin2cube\n===========\n\n|Version| |MIT License| |ci|\n\nAbstract\n--------\n\nA small utility application that can register a list of ChRIS pipeline\nfiles and all dependent plugins to a CUBE instance.\n\nOverview\n--------\n\nThis app is a straightforward CLI tool that can be used to register a\npipeline directly to a CUBE instance by using the the ``chrs`` and\n``pipeline2cube`` apps.\n\nA given pipeline (in a list) is passed to ``chrs`` to add to a CUBE. Any\nplugins in the pipeline that are not currently registered to CUBE will\nbe returned as errors by ``chrs``.\n\nThe ``pipeline2cube`` app will then simply parse that error information\nand attempt to register the missing plugin, afterwhich it will\nre-attempt the ``chrs`` operation.\n\nIn some ways, this app is akin to a Linux package installer that\ninstalls a “meta” package (a pipeline) and fetches/installs all its\ndependencies (plugins) if they don’t exist (are not yet registered to a\nCUBE).\n\nDependencies\n------------\n\nThe dependencies of ``plugin2cube`` are most pertinent, i.e. ``docker``\non the host for complete plugin registration. For its part\n``pipeline2cube`` relies on ``chrs`` for its internal heavy lifting.\n\nArguments\n---------\n\n.. code:: html\n\n           --pipelines <comma,list,of,pipelinefiles>\n           A comma separated list of pipeline files to register. These are in either\n           JSON or YML format suitable for processing the ChRIS command line client\n           tool `chrs` (see https://crates.io/crates/chrs).\n\n           Each pipeline file in turn is dispatched to `chrs` for processing, and\n           any outputs from `chrs` are processed to either continue, register\n           missing plugins, or abort.\n\n           [--registry <defaultContainerRegistry>] (\"fnndsc\")\n           The default registry organization -- assumed to be valid for all\n           plugins in a given pipeline.\n\n           [--computenames <commalist,of,envs>] (\"host\")\n           A comma separted list of compute environments within a CUBE to which\n           the plugin can be registered.\n\n           [--CUBEurl <CUBEURL>] (\"http://localhost:8000/api/v1/\")\n           The URL of the CUBE to manage.\n\n           [--CUBEuser <user>] (\"chris\")\n           The name of the administration CUBE user.\n\n           [--CUBEpasswd <password>] (\"chris1234\")\n           The admin password.\n\n           [--inputdir <inputdir>]\n           An optional input directory specifier.\n\n           [--outputdir <outputdir>]\n           An optional output directory specifier. Some files are typically created\n           and executed from the <outputdir>.\n\n           [--man]\n           If specified, show this help page and quit.\n\n           [--verbosity <level>]\n           Set the verbosity level. The app is currently chatty at level 0 and level 1\n           provides even more information.\n\n           [--debug]\n           If specified, toggle internal debugging. This will break at any breakpoints\n           specified with 'Env.set_trace()'\n\n           [--debugTermsize <253,62>]\n           Debugging is via telnet session. This specifies the <cols>,<rows> size of\n           the terminal.\n\n           [--debugHost <0.0.0.0>]\n           Debugging is via telnet session. This specifies the host to which to connect.\n\n           [--debugPort <7900>]\n           Debugging is via telnet session. This specifies the port on which the telnet\n           session is listening.\n\nInstallation\n------------\n\nEasiest vector for installation is\n\n.. code:: bash\n\n   pip install pipeline2cube\n\nExamples\n--------\n\n``pipeline2cube`` accepts several CLI flags/arguments that together\nspecify the CUBE instance, pipelines to process, and several optional\nparameters. For a full list of supported arguments, do\n\n.. code:: shell\n\n   pipeline2cube --man\n\nTo register a plugin, do\n\n.. code:: shell\n\n   pipeline2cube                                                           \\\n       --CUBEurl http:localhost:8000/api/v1/                               \\\n       --CUBEuser chrisadmin                                               \\\n       --CUBEpasswd something1234                                          \\\n       --computenames host,galena                                          \\\n       --registry fnndsc\n       --pipeline pipeline1.yml,pipeline2.yml                              \\\n       --verbosity 1\n\nDevelopment\n-----------\n\nInstructions for developers.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo debug, the simplest mechanism is to trigger the internal remote\ntelnet session with the ``--debug`` CLI. Then, in the code, simply add\n``Env.set_trace()`` calls where appropriate. These can remain in the\ncodebase (i.e. you don’t need to delete/comment them out) since they are\nonly *live* when a ``--debug`` flag is passed.\n\nTesting\n~~~~~~~\n\nRun unit tests using ``pytest``. Coming soon!\n\n*-30-*\n\n.. |Version| image:: https://img.shields.io/docker/v/fnndsc/pl-plugin2cube?sort=semver\n   :target: https://hub.docker.com/r/fnndsc/pl-plugin2cube\n.. |MIT License| image:: https://img.shields.io/github/license/fnndsc/pl-plugin2cube\n   :target: https://github.com/FNNDSC/pl-plugin2cube/blob/main/LICENSE\n.. |ci| image:: https://github.com/FNNDSC/pl-plugin2cube/actions/workflows/ci.yml/badge.svg\n   :target: https://github.com/FNNDSC/pl-plugin2cube/actions/workflows/ci.yml\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FNNDSC/plugin2cube",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pipeline2cube",
    "package_url": "https://pypi.org/project/pipeline2cube/",
    "platform": null,
    "project_url": "https://pypi.org/project/pipeline2cube/",
    "project_urls": {
      "Homepage": "https://github.com/FNNDSC/plugin2cube"
    },
    "release_url": "https://pypi.org/project/pipeline2cube/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A ChRIS helper app that registers pipelines to a CUBE instance",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16515122,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c3296046341efce3a1e3a06ee2145801c4fc402e1c83f5d90c4ff4ecc85b5c6",
          "md5": "316b261914d3e57727ed4b04619b3cc7",
          "sha256": "d3167af633ac52761cb64f946c9056e50d53e47876064b755036b8bc3acbe94e"
        },
        "downloads": -1,
        "filename": "pipeline2cube-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "316b261914d3e57727ed4b04619b3cc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12472,
        "upload_time": "2023-01-20T23:26:41",
        "upload_time_iso_8601": "2023-01-20T23:26:41.347692Z",
        "url": "https://files.pythonhosted.org/packages/6c/32/96046341efce3a1e3a06ee2145801c4fc402e1c83f5d90c4ff4ecc85b5c6/pipeline2cube-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c158c4b63aa49f158bc5bd12e8122dbb6fcfb96cf060f11096e314f6ce1f7a1",
          "md5": "5b58f2438a9e6d79b507d3f6e473803d",
          "sha256": "74c0f35d3db14c7f1a0c2117882eddca1e0206e121ed4029e2c37125f0ba546a"
        },
        "downloads": -1,
        "filename": "pipeline2cube-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5b58f2438a9e6d79b507d3f6e473803d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11097,
        "upload_time": "2023-01-20T23:34:57",
        "upload_time_iso_8601": "2023-01-20T23:34:57.638736Z",
        "url": "https://files.pythonhosted.org/packages/0c/15/8c4b63aa49f158bc5bd12e8122dbb6fcfb96cf060f11096e314f6ce1f7a1/pipeline2cube-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ec895ebce9757d01c258a343823c0f112fad6a461e1f073aa892478f8096509",
          "md5": "6f2c5d7a25f66ffe26f7bf52ebfce7b3",
          "sha256": "d5d07219f4c977bec192714c61f9e9847ec3c2099f5b6e688e24ddfb31c16e9e"
        },
        "downloads": -1,
        "filename": "pipeline2cube-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6f2c5d7a25f66ffe26f7bf52ebfce7b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11163,
        "upload_time": "2023-01-21T20:19:49",
        "upload_time_iso_8601": "2023-01-21T20:19:49.875855Z",
        "url": "https://files.pythonhosted.org/packages/5e/c8/95ebce9757d01c258a343823c0f112fad6a461e1f073aa892478f8096509/pipeline2cube-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ec895ebce9757d01c258a343823c0f112fad6a461e1f073aa892478f8096509",
        "md5": "6f2c5d7a25f66ffe26f7bf52ebfce7b3",
        "sha256": "d5d07219f4c977bec192714c61f9e9847ec3c2099f5b6e688e24ddfb31c16e9e"
      },
      "downloads": -1,
      "filename": "pipeline2cube-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "6f2c5d7a25f66ffe26f7bf52ebfce7b3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11163,
      "upload_time": "2023-01-21T20:19:49",
      "upload_time_iso_8601": "2023-01-21T20:19:49.875855Z",
      "url": "https://files.pythonhosted.org/packages/5e/c8/95ebce9757d01c258a343823c0f112fad6a461e1f073aa892478f8096509/pipeline2cube-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}