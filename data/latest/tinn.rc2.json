{
  "info": {
    "author": "Shashank Sahu",
    "author_email": "shashankcs083@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# TINN\nTINN acronym for Tiny Neural Network is a lightweight, neural network library,build over numpy.\n\n# Installation\nYou can download  tinn using pip via pypi.\n``` $ pip install tinn ```\n\n# Getting Started\n\n### Creating a neural network \nLets start by creating a 3 layer neural network\n\nFirst start with importing the required modules\n\n```\n    from tinn.neural import NeuralNet\n    from tinn.layer import Layer\n```\n\nA neural network is composed of a series of layers of neurons, such that all the neurons in each layer connect to the neurons in the next layer.\n\nLets see how to make a layer using tinn.\n\nA layer in tinn requires 2 parameters\n- num_neurons : No of neurons in that layer\n- activation : Activation function for that layer\n\nLets create a layer with 5 neurons and sigmoid activation function\n``` l1=Layer(5,'sigmoid') ```\n\nOnce the layer is created a neural network can be created by combining multiple layers using ``` tinn.neural.NeuralNet ``` class.\n\n```python\n    model= NeuralNet() # Creates an empty neural network with 0 layers\n    model.add(Layer(3,'sigmoid') # Hidden layer with 3 neurons\n    model.add(Layer(5,'sigmoid') # Hidden layer with 5 neurons\n    model.add(Layer(1,'sigmoid') # Outpput layer with1 neuron\n```\nAbove code creates a 3 layered neural network with 2 hidden layers and 1 output layer.\n\n### Training the model\n\n``` tinn.neural.NeuralNet.train() ``` can be used to train the neural network on a given set of training data using stochastic gradient descent algorithm.\n\nHere is the prototype of train method in NeuralNet class.\n``` def train(self,inputData,outputData,learning_rate=0.01,epocs=100,suffle=True) ```\n\n- inputData      : An array of all inputs of the training set. \n- outputData     : Array of corresponding outputs of the training set.\n- learning_rate  : Could be used to tweak the learning rate parameter\n- epocs          : Default epocs is 100, it denotes the number of traning iterations over the given dataset\n- suffle         : If set to false, dataset will not be shuffled between epocs.\n\n\n### Accuracy of the model\n``` tinn.neural.NeuralNet.validate() ``` is used to compute the accuracy of the model on given testing data. It returns a floating number between [0,1] inclusive where 1 represents 100 percent accuracy.\n\n### Prediction\nOnce the model is trained ``` tinn.neural.NeuralNet.predict() ``` can be used to get the predicted outputs from the trained neural network.\n\n### Saving the model\n\n``` tinn.neural.NeuralNet.save()  ``` saves the model to a file.\n``` python\n    NeuralNet.save(self,filepath)\n```\nSaves the model along with weights and architecture ,in the specified file, uses pickle module of python.\n\n### Loading the model\n\nTrained model can be loaded from the file using ``` tinn.neural.NeuralNet.load() ```\n``` model=NeuralNet.load('handWrittenDigit.pkl') ```\nOnce loaded the model can be use for prediction.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/bit-shashank/tinn/archive/v0.2-alpha.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bit-shashank/tinn",
    "keywords": "Neural,Deep,Learning,Machine,Network",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tinn",
    "package_url": "https://pypi.org/project/tinn/",
    "platform": "",
    "project_url": "https://pypi.org/project/tinn/",
    "project_urls": {
      "Download": "https://github.com/bit-shashank/tinn/archive/v0.2-alpha.tar.gz",
      "Homepage": "https://github.com/bit-shashank/tinn"
    },
    "release_url": "https://pypi.org/project/tinn/2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A light weight simple, multi layer ,feedforward neural network library",
    "version": "2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7920132,
  "releases": {
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff7dad4fc85a4df7ed39ef88321aa304e09ca76c97e37f3284fd26289e67ace6",
          "md5": "7a34b510f40b37b84befdcc959471a80",
          "sha256": "a2adda7153721ce9b2d0e42932c6da54f092e6e464152237398d3a2a38f643f6"
        },
        "downloads": -1,
        "filename": "tinn-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7a34b510f40b37b84befdcc959471a80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5509,
        "upload_time": "2020-08-09T02:57:26",
        "upload_time_iso_8601": "2020-08-09T02:57:26.635652Z",
        "url": "https://files.pythonhosted.org/packages/ff/7d/ad4fc85a4df7ed39ef88321aa304e09ca76c97e37f3284fd26289e67ace6/tinn-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bed147bf2d55113d41e811c601a58cc8e7c60bc8a4c9669730d549f2b288c1e",
          "md5": "d6f7c086b4f17d3c9051ea963f1a8ad6",
          "sha256": "795861cb1b5cfb4b0e1c1a1173a2d524369b10db81dac2b437ca7ee7ae087fa9"
        },
        "downloads": -1,
        "filename": "tinn-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d6f7c086b4f17d3c9051ea963f1a8ad6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5948,
        "upload_time": "2020-08-09T16:57:07",
        "upload_time_iso_8601": "2020-08-09T16:57:07.048392Z",
        "url": "https://files.pythonhosted.org/packages/7b/ed/147bf2d55113d41e811c601a58cc8e7c60bc8a4c9669730d549f2b288c1e/tinn-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7bed147bf2d55113d41e811c601a58cc8e7c60bc8a4c9669730d549f2b288c1e",
        "md5": "d6f7c086b4f17d3c9051ea963f1a8ad6",
        "sha256": "795861cb1b5cfb4b0e1c1a1173a2d524369b10db81dac2b437ca7ee7ae087fa9"
      },
      "downloads": -1,
      "filename": "tinn-2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d6f7c086b4f17d3c9051ea963f1a8ad6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5948,
      "upload_time": "2020-08-09T16:57:07",
      "upload_time_iso_8601": "2020-08-09T16:57:07.048392Z",
      "url": "https://files.pythonhosted.org/packages/7b/ed/147bf2d55113d41e811c601a58cc8e7c60bc8a4c9669730d549f2b288c1e/tinn-2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}