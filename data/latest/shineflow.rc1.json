{
  "info": {
    "author": "Subhash Sarangi",
    "author_email": "subhashsarangi123@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Feed Forward Neural Networks using NumPy\nThis library is a modification of my previous one. [Click Here](https://github.com/Subhash3/Neural-Networks/tree/master/Feed_Forward_Networks) to check my previous library.\n\n\n## Installation  \n```bash\n$ [sudo] pip3 install shineflow\n``` \n\n## Development Installation\n```bash\n$ git clone https://github.com/Subhash3/Neural_Net_Using_NumPy.git\n```\n\n## Usage\n\n```python3\n>>> from shineflow import NeuralNetwork\n```\n### Creating a Neural Network\n```python3\ninputs = 2\noutputs = 1\nnetwork = NeuralNetwork(inputs, outputs)\n\n# Add 2 hidden layers with 16 neurons each and activation function 'tanh'\nnetwork.addLayer(16, activation_function=\"tanh\") \nnetwork.addLayer(16, activation_function=\"tanh\")\n\n# Finish the neural network by adding the output layer with sigmoid activation function.\nnetwork.compile(activation_function=\"sigmoid\")\n```\n### Building a dataset\nThe package contains a Dataset class to create a dataset.\n\n```python3\n>>> from shineflow import Dataset\n```\n\nMake sure you have inputs and target values in seperate files in csv format.\n\n```python3\ninput_file = \"inputs.csv\"\ntarget_file = \"targets.csv\"\n\n# Create a dataset object with the same inputs and outputs defined for the network.\ndatasetCreator = Dataset(inputs, outputs)\ndatasetCreator.makeDataset(input_file, target_file)\ndata, size = datasetCreator.getRawData()\n```\n\nIf you want to manually make a dataset, follow these rules:\n- Dataset must be a list of data samples.\n- A data sample is a list containing inputs and target values.\n- Input and target values are column vector of size (inputs x 1) and (outputs x 1) respectively.\n\nFor eg, a typical XOR data set looks something like :\n```python3\n>>> XOR_data = [\n    [\n        np.array([[0], [0]]),\n        np.array([[0]])\n    ],\n    [\n        np.array([[0], [1]]),\n        np.array([[1]])\n    ],\n    [\n        np.array([[1], [0]]),\n        np.array([[1]])\n    ],\n    [\n        np.array([[1], [1]]),\n        np.array([[0]])\n    ]\n]\n>>> size = 4\n```\n\n### Training The network\nThe library provides a *Train* function which accepts the dataset, dataset size, and two optional parameters epochs, and logging.\n```python3\ndef Train(dataset, size, epochs=5000, logging=True) :\n\t....\n\t....\n```\nFor Eg: If you want to train your network for 1000 epochs.\n```python3\n>>> network.Train(data, size, epochs=1000)\n```\nNotice that I didn't change the value of log_outputs as I want the output to printed for each epoch.\n\n\n### Debugging\nPlot a nice epoch vs error graph\n```python3\n>>> network.epoch_vs_error()\n```\n\nKnow how well the model performed.\n```python3\n>>> network.evaluate()\n```\n\nTo take a look at all the layers' info\n```python3\n>>> network.display()\n```\n\nSometimes, learning rate might have to be altered for better convergence.\n```python3\n>>> network.setLearningRate(0.1)\n```\n\n### Exporting Model\nYou can export a trained model to a json file which can be loaded and used for predictions in the future.\n```python3\nfilename = \"model.json\"\nnetwork.export_model(filename)\n```\n\n### Load Model\nTo load a model from an exported model (json) file.\nload\\_model is a static function, so you must not call this on a NeuralNetwork object!.\n```python3\nfilename = \"model.json\"\nnetwork = NeuralNetwork.load_model(filename)\n```\n\n### Todo\n    - [ ] Data scaling\n        - [x] Min Max scaler\n        - [ ] Data Standardization\n    - [ ] Implement Cross Entropy Loss\n    - [ ] Linear and Relu activation function\n    - [ ] Ability to perform regression\n    - [ ] Convolution Nets\n    - [ ] Recurrent Nets\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Subhash3/Neural_Net_Using_NumPy/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "shineflow",
    "package_url": "https://pypi.org/project/shineflow/",
    "platform": "",
    "project_url": "https://pypi.org/project/shineflow/",
    "project_urls": {
      "Homepage": "https://github.com/Subhash3/Neural_Net_Using_NumPy/"
    },
    "release_url": "https://pypi.org/project/shineflow/0.0.1/",
    "requires_dist": [
      "numpy (>=1.18.1)",
      "matplotlib (>=3.1.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "Feed Forward Neural Networks",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10454092,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce9751f8aefea38311f36b9549c624642b11435e47b6053c81113ca1061a49ad",
          "md5": "ab9e99baf78f64830dea641d07af306f",
          "sha256": "37292a5ae8a5ed527f331948edbe803a0ebe060d285684566f3802f03a4425b4"
        },
        "downloads": -1,
        "filename": "shineflow-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab9e99baf78f64830dea641d07af306f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13007,
        "upload_time": "2021-05-24T13:36:01",
        "upload_time_iso_8601": "2021-05-24T13:36:01.994020Z",
        "url": "https://files.pythonhosted.org/packages/ce/97/51f8aefea38311f36b9549c624642b11435e47b6053c81113ca1061a49ad/shineflow-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ccb45a031d629299ac6048ef33c5c7ed5eda85f9c4d4b191f3c8d9bc1da696a",
          "md5": "75ab51b7c6f1b5831d5da86777a42bda",
          "sha256": "338e3dba1ccccd7bee7595cbc709a3048840c4632034e442754ce38fe57cc454"
        },
        "downloads": -1,
        "filename": "shineflow-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "75ab51b7c6f1b5831d5da86777a42bda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8445,
        "upload_time": "2021-05-24T13:36:04",
        "upload_time_iso_8601": "2021-05-24T13:36:04.371720Z",
        "url": "https://files.pythonhosted.org/packages/5c/cb/45a031d629299ac6048ef33c5c7ed5eda85f9c4d4b191f3c8d9bc1da696a/shineflow-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce9751f8aefea38311f36b9549c624642b11435e47b6053c81113ca1061a49ad",
        "md5": "ab9e99baf78f64830dea641d07af306f",
        "sha256": "37292a5ae8a5ed527f331948edbe803a0ebe060d285684566f3802f03a4425b4"
      },
      "downloads": -1,
      "filename": "shineflow-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ab9e99baf78f64830dea641d07af306f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13007,
      "upload_time": "2021-05-24T13:36:01",
      "upload_time_iso_8601": "2021-05-24T13:36:01.994020Z",
      "url": "https://files.pythonhosted.org/packages/ce/97/51f8aefea38311f36b9549c624642b11435e47b6053c81113ca1061a49ad/shineflow-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ccb45a031d629299ac6048ef33c5c7ed5eda85f9c4d4b191f3c8d9bc1da696a",
        "md5": "75ab51b7c6f1b5831d5da86777a42bda",
        "sha256": "338e3dba1ccccd7bee7595cbc709a3048840c4632034e442754ce38fe57cc454"
      },
      "downloads": -1,
      "filename": "shineflow-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "75ab51b7c6f1b5831d5da86777a42bda",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8445,
      "upload_time": "2021-05-24T13:36:04",
      "upload_time_iso_8601": "2021-05-24T13:36:04.371720Z",
      "url": "https://files.pythonhosted.org/packages/5c/cb/45a031d629299ac6048ef33c5c7ed5eda85f9c4d4b191f3c8d9bc1da696a/shineflow-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}