{
  "info": {
    "author": "",
    "author_email": "sdooley <author@example.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# SPD's collection of EDA tools\n\n## For use on pandas dataframes\n\n### `DataFrameEDA`\nUse the `DataFrameEda` class for quick analysis on a pandas dataframe.\n\n```\nfrom spd_eda import DataframeEda\n\nDataframeEda(\n    df, agg_fcn,\n    control_var_list=[], ord_bin_threshold=100, ord_bin_count=5, cat_value_limit=30\n    )\n```\nArguments:\n- `df`: dataframe to be reviewed\n- `ag_fcn`: user-defined aggregation function that can be applied to the dataframe\n- `control_var_list` (optional): list of additional one-way variables for control totals (defaults to empty list)\n- `ord_bin_threshold` (optional): maximum number of distinct numeric values before bucketing will occur (default=100)\n- `ord_bin_count` (optional): If ordinal bucketing occurs, determines number of `pd.cut()` buckets (default=5)\n- `cat_value_limit` (optional): maximum number of distinct categorical values before bucketing will occur (default=30)\n- `calculate_signals` (optional): boolean for whether to calculate signals (based on agg_fcn) for each variable\n- `signal_weight_col` (optional): if signals are calculated, this is the column to use for weighting.  If omitted, will use the first column from the agg_fcn\n- `calculate_cramers_v` (optional): boolean for whether to calculate cramers V against each of the control variables (from `control_var_list`)\n- `start_with_user_provided_summary_df` (optional): boolean to specify if user will provide the summary dataframe.  If False, will use pd.describe()\n- `user_provided_summary_df` (optional): if user providing summary dataframe, column names MUST be in the index.\n\n### `ExcelExport`\nUse the `ExcelExport` class to write results of the `DataFrameEda` into excel.\n\n```\nfrom spd_eda import ExcelExport\n\nExcelExport(\n    filename, control_df_list, col_summary_df, var_info_dict,\n    col_type_dict={}, col_cond_format_list=[]\n    )\n```\nArguments:\n- `filename`: name of excel file to be created (e.g. 'sample_output.xlsx')\n- `control_df_list`: a list of dataframes to include on the 'control' tab of the output\n- `col_summary_df`: single dataframe with one record per column... first column should be the variable name\n- `var_info_dict`: dictionary where keys are column names & values are one-way stats for the variable (using the agg function)\n- `col_type_dict` (optional): dictionary to control number formatting in excel\n- `col_cond_format_list` (optional): list of columns to conditionally format in the excel\n\n\nSample usage:\n\n```\nfrom spd_eda import DataframeEda, ExcelExport\n\n# define an aggregation function\ndef my_agg_fcn(df):\n    return df.agg({'fid': 'count', 'building_a': 'mean',})\n\n# create EDA object\neda_obj = DataframeEda(df, my_agg_fcn, control_var_list=['city'])\n\n# formatting options\ncol_type_dict = {\n        'fid': '#,##0',\n        'building_a': '#,##0',\n        }\ncol_cond_format_list = ['fid']\n\n# export it\nExcelExport('EDA_station_16_addresses.xlsx',\n            eda_obj.control_df_list, eda_obj.var_summary, eda_obj.var_info_dict,\n            col_type_dict=col_type_dict, col_cond_format_list=col_cond_format_list)\n```\n\n## For use on PA/Predict entities\n\nMust be running from a machine with database access.\n\n\n### `DataViewEda` \nThe `DataViewEda` class for doing quick analysis on a data view in the Predict software.\n\n```\nDataViewEda(\n    db_name, dv_name,\n    secondary_var_list=[], bin_override_dict={}\n    )\n```\n\nArguments:\n- `db_name`: database name\n- `dv_name`: data view name\n- `secondary_var_list` (optional): list of secondary fields that be part of two-way comparisons for all data elements\n- `bin_override_dict` (optional): dictionary of binning overrides (default={})\n\nOnce object is instantiated, use the `export_summary()` method to create formatted output in excel.\n\n```\nexport_summary(\n    filename, obj_to_format,\n    stats_formatting=INS_STATS_FORMATTING_DICT\n    )\n```\nArguments:\n- `filename`: name of excel file to be created (e.g. 'dv_summary.xlsx')\n- `obj_to_format`: list of columns to conditionally format (e.g. ['EExp', 'LR'])\n- `stats_formatting` (optional): dictionary of column formats for the output.  Has sensible defaults already, but format is like this: {'Freq': '0.00', 'Sev': '#,##0', 'LR': '0.00%'}\n\n\nSample usage:\n\n```\nfrom spd_eda import DataViewEda\n\ntest_dv_eda = DataViewEda(\n        'GuidewireResearchCM_Insight',\n        'eda_testing',\n        secondary_var_list=['ax_year', 'LOSSSTATE'],\n        )\n\ntest_dv_eda.export_summary(\"DataViewEDA_eda_testing.xlsx\", obj_to_format=['LR'])       \n```\n\n\n### `AnalysisSummary` \nThe `AnalysisSummary` class supplements the analysis that comes from the Predict software, producing a file of the form `ModelSummary_<analysis_id>.xlsx`.\n\n```\nAnalysisSummary(\n    db_name, analysis_id,\n    geo_col='LOSSSTATE', naics_col='LOB',\n    objectives_to_format=[], stats_formatting=INS_STATS_FORMATTING_DICT\n    )\n```\nArguments:\n- `db_name`: database name\n- `analysis_id`: analysis ID\n- `geo_col`: column name <b> already included in the data view</b> to use for geography (will be used in two-way exhibits)\n- `naics_col`: column name <b> already included in the data view</b> to use for naics (can be anything... will just be used for two-ways)\n- `objectives_to_format` (optional): list of columns to conditionally format (e.g. ['EExp', 'LR'])\n- `stats_formatting` (optional): dictionary of column formats for the output.  Has sensible defaults already, but format is like this: {'Freq': '0.00', 'Sev': '#,##0', 'LR': '0.00%'}\n\n\nSample usage:\n\n```\nfrom spd_eda import AnalysisSummary\n\nAnalysisSummary(\n    db_name='GuidewireCooperativeModelsClaimsHO_Insight',\n    analysis_id='711b0a41-a49b-46df-8dff-68dd04776520',\n    geo_col='LOSSSTATE', naics_col='LOB', objectives_to_format=['Freq']\n    )      \n```\n\n\n\n### `Plinko` \nThe `Plinko` class can be used to trace an individual policy through a Boosting model from Predict.\n\nNote that the `Plinko` model references the `Analysis` class, which is briefly defined below. \n\n```\nAnalysis(db_name, analysis_id)\n```\nArguments:\n- `db_name`: database name\n- `analysis_id`: analysis ID\n\n\n```\nPlinko(model, policyno)\n```\nArguments:\n- `model`: an `Analysis` object corresponding to a Boosting model\n- `policyno`: a specific POLICYNO value from the original modeling dataset (i.e. needs the model variable for the model)\n\nProperties:\n- `plinko_df`: dataframe that traces the specific example through all the iterations of the boosting model\n\n\nSample usage:\n\n```\nfrom spd_eda import Analysis, Plinko\n\n# create Analysis object\nmodel = Analysis(\n    db_name='GuidewireCooperativeModelsClaimsHO_Insight',\n    analysis_id='711b0a41-a49b-46df-8dff-68dd04776520'\n    )\n\n# create specific plinko object\nplinko_obj = Plinko(model, '63_155334')\n\n# review the trace file\nplinko_obj.plinko_df      \n```\n\n\n\n## For use on Athena tables\n\nMust have appropriate AWS credentials to connect.\n\n\n### `AthenaTable`\nUse the `AthenaTable` class for doing quick analysis on tables in AWS Athena\n\n```\nAthenaTable(db_name, tbl_name)\n```\nArguments:\n- `db_name`: database name\n- `tbl_name`: table name\n\n\nAvailable properties:\n\n- `row_count`: integer value with number of rows in the table\n- `information_schema`: dataframe with metadata on the columns in the table\n- `col_info`: dictionary of key: value pairs, where key is the column name & value is dataframe of (binned) record counts\n\nAvailable methods:\n\n- `get_sample_records(num_rows=10, filter_string=\"1=1\", col_subset_list=[])` - returns dataframe\n- `get_row_count(filter_string=\"1=1\")` - returns row count, note the optional filter\n- `get_custom_counts(custom_expression)` - returns record counts based on the provided expression\n- `get_records_per_thread_summary(thread_list, filter_string=\"1=1\")` - Define a \"thread\" as set of columns, provides value distribution of # records that exist within each thread (useful for finding keys)\n- `get_thread_examples_with_specified_num_records(thread_list, records_per_thread, num_thread_examples=1, filter_string=\"1=1\")` - returns dataframe with examples of \"threads\" with the desired number of \"records-per-thread\".  Useful in conjunction with `get_records_per_thread_summary()`\n- `get_column_info()` - This populates the `col_info` attribute... can take a long time to run.\n- `write_summary(filename)` - creates excel file summarizing the table\n\nSample Usage:\n```\nfrom spd_eda import AthenaTable\n\nEDA_osha_accident_injury_raw = AthenaTable('assess_db', 'osha_accident_injury_raw')\n\n# distributions by column & expression\nEDA_osha_accident_injury_raw.get_custom_counts(\"degree_of_inj\")\nEDA_osha_accident_injury_raw.get_custom_counts(\"SUBSTRING (load_dt, 1, 4)\")\n\n# thread hunting\nEDA_osha_accident_injury_raw.get_records_per_thread_summary(['summary_nr'])\nEDA_osha_accident_injury_raw.get_records_per_thread_summary(['summary_nr', 'injury_line_nr'])\nEDA_osha_accident_injury_raw.get_thread_examples_with_specified_num_records(['summary_nr', 'injury_line_nr'], 2, num_thread_examples=3)\n\n# generating excel summary\nEDA_osha_accident_injury_raw.get_column_info()\nEDA_osha_accident_injury_raw.write_summary('EDA_osha_accident_injury_raw.xlsx')\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spd-eda",
    "package_url": "https://pypi.org/project/spd-eda/",
    "platform": null,
    "project_url": "https://pypi.org/project/spd-eda/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/spd-eda/0.0.7/",
    "requires_dist": [
      "pandas (>=1.4.*)",
      "xlsxwriter (>=3.0.*)",
      "pyodbc (>=4.0.*)",
      "seaborn (>=0.12.*)",
      "scipy (>=1.9.*)",
      "awswrangler (>=2.16.*)"
    ],
    "requires_python": ">=3.8",
    "summary": "initial testing",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15513312,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71c1acda50ccd682712e70dfbb4855bbd1fa9fe8dec65c20c18b487c3229c4d6",
          "md5": "7fb890770acdf5b0eb441dd37c6da56c",
          "sha256": "2e4813dee9315c9c09198ff5df824a30aa6890c5be03d6ea4a41e06e7b1b8044"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7fb890770acdf5b0eb441dd37c6da56c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 34999,
        "upload_time": "2022-09-13T20:15:07",
        "upload_time_iso_8601": "2022-09-13T20:15:07.962061Z",
        "url": "https://files.pythonhosted.org/packages/71/c1/acda50ccd682712e70dfbb4855bbd1fa9fe8dec65c20c18b487c3229c4d6/spd_eda-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77e456881340a523222672be8eecd73224c103b0cc8e5be5f03fa9444f9a2ef6",
          "md5": "755374195678b3d039e9b5d8702d9f58",
          "sha256": "59bf366693160f08d8267981b7d81df4b2421a2b77eacf717a520b2bd7cdae86"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "755374195678b3d039e9b5d8702d9f58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30657,
        "upload_time": "2022-09-13T20:15:10",
        "upload_time_iso_8601": "2022-09-13T20:15:10.153222Z",
        "url": "https://files.pythonhosted.org/packages/77/e4/56881340a523222672be8eecd73224c103b0cc8e5be5f03fa9444f9a2ef6/spd_eda-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d1d078ef8ec915e2d6a0d9d7eb8b9e858d82269b602203c367a9218f4025296",
          "md5": "6747e238bdde7b6398a15dbb9f75cbd9",
          "sha256": "dabe929b97ae2e3fff8d1c23f51067d0fd6014e9c9a3b206b3d1653144edf784"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6747e238bdde7b6398a15dbb9f75cbd9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 36632,
        "upload_time": "2022-09-14T15:48:56",
        "upload_time_iso_8601": "2022-09-14T15:48:56.485944Z",
        "url": "https://files.pythonhosted.org/packages/0d/1d/078ef8ec915e2d6a0d9d7eb8b9e858d82269b602203c367a9218f4025296/spd_eda-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d089f67045933ddb4c2c64882f44ace596b0a52b782d6de8a88762ba8bf2783",
          "md5": "0fdd4d8c8bd3f21d0e061daf7b4fbb96",
          "sha256": "59d6ca9ac6fec2ccdef102ac37b7c44ef01522f224efbe7c47ba82cb6016e041"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0fdd4d8c8bd3f21d0e061daf7b4fbb96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 32109,
        "upload_time": "2022-09-14T15:48:58",
        "upload_time_iso_8601": "2022-09-14T15:48:58.534714Z",
        "url": "https://files.pythonhosted.org/packages/8d/08/9f67045933ddb4c2c64882f44ace596b0a52b782d6de8a88762ba8bf2783/spd_eda-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b74d4b83c3407370ab8106f8d5ab95cfe02df1e6a8595e29a9bcdcd999c9acee",
          "md5": "94996955b40ff6b14da07885ffacfb63",
          "sha256": "adf44af3df0aeaac0d3ab15a93a71337b395edbc46c7f963c80fb98f111296c0"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94996955b40ff6b14da07885ffacfb63",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 37611,
        "upload_time": "2022-09-15T15:30:31",
        "upload_time_iso_8601": "2022-09-15T15:30:31.698717Z",
        "url": "https://files.pythonhosted.org/packages/b7/4d/4b83c3407370ab8106f8d5ab95cfe02df1e6a8595e29a9bcdcd999c9acee/spd_eda-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "959a2096fb951a8bb112db4307717bcd99cd6c0a2025b94de6f3985805075668",
          "md5": "a00df6c2ac5fb81e7f5bc2da1ff3a82a",
          "sha256": "a40516f98b45328ba1def2a54b6c963ef0fe17c2e50f726886f637d429eae586"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a00df6c2ac5fb81e7f5bc2da1ff3a82a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 33782,
        "upload_time": "2022-09-15T15:30:33",
        "upload_time_iso_8601": "2022-09-15T15:30:33.532799Z",
        "url": "https://files.pythonhosted.org/packages/95/9a/2096fb951a8bb112db4307717bcd99cd6c0a2025b94de6f3985805075668/spd_eda-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "466a7ee17e69dc280a952a7922108d42ed88bda5e594963414c460c944676f75",
          "md5": "e6c0b226b47c06cc52c792b854bae902",
          "sha256": "b00c7a3dd2f371714bf242aeede643c39e9adf0fcdae65e9f20b561987f42626"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6c0b226b47c06cc52c792b854bae902",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 37623,
        "upload_time": "2022-09-26T15:16:11",
        "upload_time_iso_8601": "2022-09-26T15:16:11.871165Z",
        "url": "https://files.pythonhosted.org/packages/46/6a/7ee17e69dc280a952a7922108d42ed88bda5e594963414c460c944676f75/spd_eda-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "488560d1f1d31a07192d00e1052a6e60ac8123cfc8fa368f1eba07f2a2312771",
          "md5": "6ed2d30d68fc89e3fd388113956a33ab",
          "sha256": "37780276ca095ed00c430db7c37105b2dbbcbcdd030d5970215726bf2eafb960"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6ed2d30d68fc89e3fd388113956a33ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 33782,
        "upload_time": "2022-09-26T15:16:14",
        "upload_time_iso_8601": "2022-09-26T15:16:14.105770Z",
        "url": "https://files.pythonhosted.org/packages/48/85/60d1f1d31a07192d00e1052a6e60ac8123cfc8fa368f1eba07f2a2312771/spd_eda-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dd76407c3db5ff2b4f70884c90efeffd15adf7be8a7cd96a12e62e96a7dc72c",
          "md5": "26080331a01b1399f1b16c6f3cfc9c66",
          "sha256": "e32db6b3273a4804efbfe72226e919be638195233083d8476bdc8324106eaa33"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26080331a01b1399f1b16c6f3cfc9c66",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 39237,
        "upload_time": "2022-10-20T14:16:14",
        "upload_time_iso_8601": "2022-10-20T14:16:14.931346Z",
        "url": "https://files.pythonhosted.org/packages/0d/d7/6407c3db5ff2b4f70884c90efeffd15adf7be8a7cd96a12e62e96a7dc72c/spd_eda-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c7e4148fc13728b117f839c12c54b472a68647ff30eb2c63891db990a6a3677",
          "md5": "2182820b3968fe7eab376e32131db2d9",
          "sha256": "4e10fe0b35b09081b0714fa195c79f47c0d657ea3c7019781f70c0203c374191"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2182820b3968fe7eab376e32131db2d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 35602,
        "upload_time": "2022-10-20T14:16:16",
        "upload_time_iso_8601": "2022-10-20T14:16:16.943685Z",
        "url": "https://files.pythonhosted.org/packages/7c/7e/4148fc13728b117f839c12c54b472a68647ff30eb2c63891db990a6a3677/spd_eda-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6a8fec319f1377b35c21683078bde35a10d58c65486d37c897f9c6228004cce",
          "md5": "623b006b0ce1a4e19a0803beb1cf0008",
          "sha256": "350c29fb31aca2c13f4e9de0fa4abf53e874ce124f046ac708249a7f5ad6e6cf"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "623b006b0ce1a4e19a0803beb1cf0008",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 39366,
        "upload_time": "2022-10-20T17:27:36",
        "upload_time_iso_8601": "2022-10-20T17:27:36.030292Z",
        "url": "https://files.pythonhosted.org/packages/f6/a8/fec319f1377b35c21683078bde35a10d58c65486d37c897f9c6228004cce/spd_eda-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "767ac6e467bab4d85e356f7f1b6c274130e7543fab6c692f5c46a3b3ba7683b8",
          "md5": "e4be15aaf1d103134405eb63ebccd7e8",
          "sha256": "d444fb40dabfabe59ebe234c140ef4cb7aa43522d0f58dc5ab5b40e41e5457d5"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e4be15aaf1d103134405eb63ebccd7e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 35702,
        "upload_time": "2022-10-20T17:27:39",
        "upload_time_iso_8601": "2022-10-20T17:27:39.344023Z",
        "url": "https://files.pythonhosted.org/packages/76/7a/c6e467bab4d85e356f7f1b6c274130e7543fab6c692f5c46a3b3ba7683b8/spd_eda-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "034bb757f01cd4388aecbb1ed692472a65314fb7a2a4a41b6bd95e63825f33fb",
          "md5": "24fff4bdc169eb5ddd1b35e36016ff8f",
          "sha256": "2fbd6dc86eee36ad33b46bff94a972691c6324a4b722a4afbfc242604b37ab5d"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24fff4bdc169eb5ddd1b35e36016ff8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 39506,
        "upload_time": "2022-10-20T20:57:45",
        "upload_time_iso_8601": "2022-10-20T20:57:45.055125Z",
        "url": "https://files.pythonhosted.org/packages/03/4b/b757f01cd4388aecbb1ed692472a65314fb7a2a4a41b6bd95e63825f33fb/spd_eda-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2a78f152f9ed492f8a80974b6bbe304c8179f9684ee30a47792ecb54c384b3c",
          "md5": "fc0e4cb6ba66690c89d31e82f700facb",
          "sha256": "2e79f790f0f9be6f9bd50be84165af4bd1dae68a75fccdb0762c6415cbfeed7b"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "fc0e4cb6ba66690c89d31e82f700facb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 35963,
        "upload_time": "2022-10-20T20:57:47",
        "upload_time_iso_8601": "2022-10-20T20:57:47.180001Z",
        "url": "https://files.pythonhosted.org/packages/f2/a7/8f152f9ed492f8a80974b6bbe304c8179f9684ee30a47792ecb54c384b3c/spd_eda-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "705c2aa13124907fb13e619dcf32dbc28a3f4178eb8dd84c103ed7b8fdb541bb",
          "md5": "31ca8686a28093d508dbb61d2dc5eb1c",
          "sha256": "ac1ef855a03c5412bef07d7368e4cd574dfb6e6dc8420c3910f939856caa8499"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "31ca8686a28093d508dbb61d2dc5eb1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 39846,
        "upload_time": "2022-10-24T19:58:13",
        "upload_time_iso_8601": "2022-10-24T19:58:13.368944Z",
        "url": "https://files.pythonhosted.org/packages/70/5c/2aa13124907fb13e619dcf32dbc28a3f4178eb8dd84c103ed7b8fdb541bb/spd_eda-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4980bf4981975256f912b1d6aec2cab586f155532a3efd461360b34cf30d5176",
          "md5": "034e5f909591c65745810ea1e271d766",
          "sha256": "21870cca572c2a879866cbbf362405aec3877e6095c469bad3e21c70037d4ad8"
        },
        "downloads": -1,
        "filename": "spd_eda-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "034e5f909591c65745810ea1e271d766",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 36366,
        "upload_time": "2022-10-24T19:58:15",
        "upload_time_iso_8601": "2022-10-24T19:58:15.554557Z",
        "url": "https://files.pythonhosted.org/packages/49/80/bf4981975256f912b1d6aec2cab586f155532a3efd461360b34cf30d5176/spd_eda-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "705c2aa13124907fb13e619dcf32dbc28a3f4178eb8dd84c103ed7b8fdb541bb",
        "md5": "31ca8686a28093d508dbb61d2dc5eb1c",
        "sha256": "ac1ef855a03c5412bef07d7368e4cd574dfb6e6dc8420c3910f939856caa8499"
      },
      "downloads": -1,
      "filename": "spd_eda-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "31ca8686a28093d508dbb61d2dc5eb1c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 39846,
      "upload_time": "2022-10-24T19:58:13",
      "upload_time_iso_8601": "2022-10-24T19:58:13.368944Z",
      "url": "https://files.pythonhosted.org/packages/70/5c/2aa13124907fb13e619dcf32dbc28a3f4178eb8dd84c103ed7b8fdb541bb/spd_eda-0.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4980bf4981975256f912b1d6aec2cab586f155532a3efd461360b34cf30d5176",
        "md5": "034e5f909591c65745810ea1e271d766",
        "sha256": "21870cca572c2a879866cbbf362405aec3877e6095c469bad3e21c70037d4ad8"
      },
      "downloads": -1,
      "filename": "spd_eda-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "034e5f909591c65745810ea1e271d766",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 36366,
      "upload_time": "2022-10-24T19:58:15",
      "upload_time_iso_8601": "2022-10-24T19:58:15.554557Z",
      "url": "https://files.pythonhosted.org/packages/49/80/bf4981975256f912b1d6aec2cab586f155532a3efd461360b34cf30d5176/spd_eda-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}