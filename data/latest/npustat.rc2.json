{
  "info": {
    "author": "wmc1992",
    "author_email": "m18810541081@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Monitoring"
    ],
    "description": "# `npustat`\n\n一个能够简洁的显示华为atlas设备状态的命令行工具；\n\n之前使用GPU时习惯了使用工具 [`gpustat`](https://github.com/wookayin/gpustat) 查看GPU状态，使用华为的Atlas设备之后发现并没有类似的工具，于是仿照  [`gpustat`](https://github.com/wookayin/gpustat) 自己写了一个；\n显示效果如下图：\n\n <img src=\"https://user-images.githubusercontent.com/50796589/147898619-79ada678-6709-48f2-bdb5-9366f0db2ee0.png\" width=\"80%\" height=\"80%\" alt=\"npustat png\" align=center />\n\n主要解决命令 `npu-smi info` 的两个缺点：\n\n* 显示的信息总是特别长，笔记本单屏显示不下；\n* `watch` 下，同一芯片每次展示不在屏幕的同一位置，观察该芯片的变化较困难；\n\n## 依赖说明\n\npython版本要求：`python>=3.6`；\n\n基础软件方面依赖说明：\n\n华为Atlas设备目前有两种方式可以获取加速卡的状态信息：`ascend-dmi -i` 和 `npu-smi info`，这两者的区别为：\n\n* 命令 `ascend-dmi -i`：\n    * 优点：\n        * 查询结果为json格式，易于解析，不会出错；\n        * 查询结果中包含实时功率信息；\n    * 缺点：\n        * 速度较慢，每次查询耗时约2～3秒；\n        * 需要安装了 `toolbox` 工具包并正确配置了环境变量；\n* 命令 `npu-smi info`：\n    * 优点：\n        * 查询速度快，每次查询小于1秒；\n        * 只要正确安装了驱动即可，不需要额外安装其他包；\n    * 缺点：\n        * 查询结果中不包含实时功率信息；\n        * 查询结果无法以json格式返回，解析容易出错，遇到错误时欢迎反馈； \n\n默认使用命令 `ascend-dmi -i` 做查询，可以使用参数 `--use-npu-smi` 修改为使用命令 `npu-smi info` 做查询；\n\n目前仅在配备了4张 `Atlas 300I-3000` 推理卡的 Atlas 500 服务器上进行过测试；所以在其他设备上难免会有问题，欢迎反馈问题；有任何优化建议也欢迎反馈；\n\n> 注：若要安装 `toolbox` 需要注意，华为的 `toolbox` 工具包相关的版本体系出现过多次变迁：\n> \n> * 在`CANN`的`v5.0.1`及以前版本，`toolbox` 工具包归属到`CANN`中，可在`CANN`的软件下载链接中进行下载；\n> * 在`CANN`的`v5.0.2`及以后的版本中不再包含`toolbox` 工具包，而是迁移到了`mindx`中，需要到`mindx`的软件下载链接中进行下载；\n\n## 安装说明\n \n从 [PyPI](https://pypi.org/project/npustat/) 进行安装:\n\n```\npip install npustat\n```\n\n## 使用说明\n\n使用如下命令单次获取当前atlas设备信息：\n\n```shell\nnpustat\n```\n\n使用如下命令动态刷新当前atlas设备信息，默认每2秒刷新一次：\n\n```\nnpustat --watch\n```\n\n可选参数如下：\n\n```\nusage: cli.py [-h] [--json] [-i [INTERVAL]] [--no-header] [--no-title]\n              [--use-npu-smi] [--show-power] [--compact] [--debug] [-v]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  \n  --json                将所有结果输出为JSON格式；\n  \n  -i [INTERVAL], --interval [INTERVAL], --watch [INTERVAL]\n                        动态刷新模式；INTERVAL为刷新间隔，单位：秒；默认每2秒刷新一次；\n  \n  --no-header           是否隐藏 header 信息；header 信息包含机器名称、当前时间、版本号；默认展示 header 信息，配置该参数后 header 信息不再展示；\n  \n  --no-title            是否隐藏 title 信息；title 信息为对当前设备状态值各字段的说明；默认展示 title 信息，配置该参数后 title 信息不再展示；\n  \n  --use-npu-smi         使用命令\"npu-smi info\"获取当前设备状态值；注意该命令无法获取到加速卡的实时功率信息；\n  \n  --show-power          是否展示加速卡的功率信息，默认为展示；配置了参数 \"--use-npu-smi\" 之后该参数无效；\n  \n  --compact             是否采用紧凑模式展示信息，默认为不采用；紧凑模式下会去掉空白行及其他无意义的行，适用于加速卡较多，显示器较小，屏幕显示不下的情况；\n  \n  --debug               Debug模式时允许在程序出错的情况下打印更多的调试信息；\n  \n  -v, --version         show program's version number and exit\n```\n\n#### 另外：\n\n比较遗憾的是，目前我没有在任何华为的官方文档中找到获取每个设备上运行了哪些进程的功能，在昇腾论坛的询问结果也是如此：[【Atlas 300I 推理卡】怎样查看有哪些进程正在上面运行？\n](https://bbs.huaweicloud.com/forum/thread-173510-1-1.html)\n\n所以本项目也不具有显示每个设备上运行了哪些进程的功能；如有人知道如何获取每个atlas上运行了哪些进程，还请告知；\n\n## 显示内容说明\n\n```\nmachine_name  Mon Dec 20 22:38:59 2021  ascend-dmi version: 2.0.3\n========================================================\n[加速卡ID], 加速卡类型, 功率\n[芯片ID] [DeviceID] Health, 芯片名称 | 温度, AICore, 内存\n========================================================\n\n[1], Atlas 300I-3000, 16.30 W\n[0] [1] OK, Ascend 310 | 51°C,   0 %, 2621 MB / 8192 MB\n```\n\n* header：第1行为header，可以使用参数 `--no-header` 不展示该信息；展示的信息从左到右依次为机器名称、当前时间、软件 `ascend-dmi/npu-smi` 的版本；\n\n* title：第2~5行为title，可以使用参数 `--no-title` 不展示该信息；title是对后面展示的信息的各字段的说明；\n\n*  `[1], Atlas 300I-3000, 16.30 W`：每个加速卡的信息：\n    * `[1]`：加速卡ID；\n    * `Atlas 300I-3000`：加速卡类型；\n    * `16.30 W`： 加速卡实时功率；\n\n*  `[0] [1] OK, Ascend 310 | 51°C,   0 %, 2621 MB / 8192 MB`：每个芯片的信息：\n    * `[0]`：芯片ID；\n    * `[1]`：DeviceID；\n    * `OK`：芯片健康状态；\n    * `Ascend 310`：芯片名称；\n    * `51°C`：温度；\n    * `0 %`：AICore；\n    * `2621 MB / 8192 MB`：内存；\n\n## Reference\n\n[`gpustat`](https://github.com/wookayin/gpustat)\n\n## License\n\n[MIT License](./LICENSE)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wmc1992/npustat",
    "keywords": "atlas npu monitoring npustat",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "npustat",
    "package_url": "https://pypi.org/project/npustat/",
    "platform": "",
    "project_url": "https://pypi.org/project/npustat/",
    "project_urls": {
      "Homepage": "https://github.com/wmc1992/npustat"
    },
    "release_url": "https://pypi.org/project/npustat/0.0.2/",
    "requires_dist": [
      "six (>=1.7)",
      "blessed (>=1.17.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "An utility to monitor Huawei Atlas status and usage",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13012019,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1039ab53ede02e280ae35a491a76251137cf4558d948c42fe588fcc3802d0f0",
          "md5": "a416f02e2ad42cf78baf2e06589b18a0",
          "sha256": "ea77f57638856e6dcc56684db5ad25e588ec53c03302d36189816c2218c60402"
        },
        "downloads": -1,
        "filename": "npustat-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a416f02e2ad42cf78baf2e06589b18a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15190,
        "upload_time": "2022-02-25T17:40:52",
        "upload_time_iso_8601": "2022-02-25T17:40:52.564522Z",
        "url": "https://files.pythonhosted.org/packages/e1/03/9ab53ede02e280ae35a491a76251137cf4558d948c42fe588fcc3802d0f0/npustat-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad835c8cc69baf0d8fe25a94ba8ef6aedd0271df07f532bb301c6ac3d45a9330",
          "md5": "eb049474c5caf0e95c1d1997d3fc8792",
          "sha256": "14aa468c06a2639b78614c49f06b9e63b2c5ab667c69c4bc589a4c814d289566"
        },
        "downloads": -1,
        "filename": "npustat-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb049474c5caf0e95c1d1997d3fc8792",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15167,
        "upload_time": "2022-02-25T18:01:21",
        "upload_time_iso_8601": "2022-02-25T18:01:21.719081Z",
        "url": "https://files.pythonhosted.org/packages/ad/83/5c8cc69baf0d8fe25a94ba8ef6aedd0271df07f532bb301c6ac3d45a9330/npustat-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad835c8cc69baf0d8fe25a94ba8ef6aedd0271df07f532bb301c6ac3d45a9330",
        "md5": "eb049474c5caf0e95c1d1997d3fc8792",
        "sha256": "14aa468c06a2639b78614c49f06b9e63b2c5ab667c69c4bc589a4c814d289566"
      },
      "downloads": -1,
      "filename": "npustat-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eb049474c5caf0e95c1d1997d3fc8792",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15167,
      "upload_time": "2022-02-25T18:01:21",
      "upload_time_iso_8601": "2022-02-25T18:01:21.719081Z",
      "url": "https://files.pythonhosted.org/packages/ad/83/5c8cc69baf0d8fe25a94ba8ef6aedd0271df07f532bb301c6ac3d45a9330/npustat-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}