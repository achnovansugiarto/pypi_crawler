{
  "info": {
    "author": "Ralf Schlatterbeck",
    "author_email": "rsc@runtux.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Ham-Radio scripts\n=================\n\n:Author: Ralf Schlatterbeck <rsc@runtux.com>\n\n.. |--| unicode:: U+2013   .. en dash\n\nNote that the binaries currently installed with the package work only in\nconjunction with my logging database based on Roundup_.\n\nThe software in the modules of this python package centers around\nhandling of QSO logging data, retrieval of electronic QSLs from various\nelectronic QSL services (currently Logbook of the World LOTW_ and eQSL_)\nand interfacing to my logging database written with the bugtracking\nframework Roundup_. The logging database is part of my `time-track-tool`_\nseveral packages that build on Roundup_, among them a time tracking tool\nand a QSO logger.\n\n.. _Roundup: https://sourceforge.net/projects/roundup/\n.. _eQSL: https://www.eqsl.cc/\n.. _LOTW: https://lotw.arrl.org/\n.. _`time-track-tool`: https://github.com/time-track-tool/time-track-tool\n\nThe adif module is used to parse ADIF files.\nBasic usage is at the end of the file, it can be called to do a\nround-trip of an ADIF file (reading it in and writing it out).\n\nThe bandplan module implements a definition of the ham radio bands and\ncorresponding frequencies for a country. Currently only Austria is\nimplemented, it should be easy to add other countries. I'm mainly using\nit for looking up the corresponding band for a given frequency (e.g.\nwhen receiving data from WSJTX_ which includes only a frequency not the\nband).\n\n.. _WSJTX: https://physics.princeton.edu/pulsar/k1jt/wsjtx.html\n\nThe dbimport module is used for communicating with my time-track-tool_\nlogging database via its `REST API`_. It makes use of the requester\nmodule which factors out some of the common `REST API`_ calls.\n\n.. _`REST API`: https://roundup.sourceforge.io/docs/rest.html\n\nThe dxcc module is used to parse the `official DXCC list`_ from the ARRL\nhomepage and do basic callsign lookups via the prefix list given in that\ndocument. Note that the prefix list often does not identify the DXCC\nentity unambiguously or even gets the DXCC entity wrong in some cases.\n\n.. _`official DXCC list`:\n    http://www.arrl.org/files/file/DXCC/2019_Current_Deleted(3).txt\n\nThe cty module is used to extract information from the well known\n``CTY.DAT`` `country database`_ by Jim Reisert, AD1C. This database is\nmuch better at matching callsign prefixes to DXCC country, CQ-Zone and\nITU-Zone information than the information in the ARRL list used by the\ndxcc module above. The module can be called with a set of callsigns to\nlook up, the code at the end of the module should give you an idea on\nhow to use it. Currently only DXCC lookup is implemented, CQ-Zone and\nITU-Zone info may follow at some point.\n\n.. _`country database`: https://www.country-files.com\n\nThe eqsl and lotw modules are used for retrieving QSO and QSL log\ninformation from Logbook of the World LOTW_ and eQSL_. Note that the\neqsl package also supports retrieving the QSL \"cards\". You should have a\n`silver membership with eQSL`_ for using that feature. You should get a\nquick idea how to use these modules from looking into the dbimport\nmodule. Note that both, eqsl and lotw use the requester module.\n\n.. _`silver membership with eQSL`: http://www.eqsl.cc/qslcard/GeteQSL.txt\n\nThe qth module implements conversion from GPS coordinates to Maidenhead\nlocator. It has a doctest in the Maidenhead_Locator class that should\ngive you an idea on how to use it. It does support extended locators\nbeyond length 6 used by some VHF groups.\n\nChanges\n-------\n\nVersion 0.4: Fix setup.py install_requires\n\nVersion 0.2-0.3: Updates to documentation and setup\n\nVersion 0.1: Initial release\n\nNote that this project is quite old |--| I'm using it for myself so far\nand the first release just now should not scare you too much.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/schlatterbeck/hamradio",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hamradio",
    "package_url": "https://pypi.org/project/hamradio/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/hamradio/",
    "project_urls": {
      "Homepage": "https://github.com/schlatterbeck/hamradio"
    },
    "release_url": "https://pypi.org/project/hamradio/0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Utilities for Ham radio",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13815763,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff373bf884adb7cf810dd7562842469786366b67bf2ca056006cb75ef1aa3830",
          "md5": "d78adb989c96036ec457fe0daceac769",
          "sha256": "588fcd058214f7b55bf804b6b12c8350483875b4a6a95a50fb710d6e0b1401c0"
        },
        "downloads": -1,
        "filename": "hamradio-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d78adb989c96036ec457fe0daceac769",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 150017,
        "upload_time": "2021-10-07T14:41:20",
        "upload_time_iso_8601": "2021-10-07T14:41:20.237701Z",
        "url": "https://files.pythonhosted.org/packages/ff/37/3bf884adb7cf810dd7562842469786366b67bf2ca056006cb75ef1aa3830/hamradio-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "024912aa2629456922b1f6f3ba130505579366fb8a5ba7f80930469ccf310d13",
          "md5": "d584828f4638a7be6bf8fc5aa1af7b4b",
          "sha256": "5c2d3cce87d7bef69a1831f19bd35a7ae5cdf78650b2a886a30c995fd4d0c36b"
        },
        "downloads": -1,
        "filename": "hamradio-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d584828f4638a7be6bf8fc5aa1af7b4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 150020,
        "upload_time": "2021-10-07T15:32:10",
        "upload_time_iso_8601": "2021-10-07T15:32:10.721100Z",
        "url": "https://files.pythonhosted.org/packages/02/49/12aa2629456922b1f6f3ba130505579366fb8a5ba7f80930469ccf310d13/hamradio-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7109e72deb51fa4f3d83d150ee7381d00971338c9c3aaeea5595a76f71693b5",
          "md5": "66529ff231598cba229f73c3924971df",
          "sha256": "060b219d5bb11313eac685f061ce0bbe4077480f0ae4c42265f6949070cb9bdc"
        },
        "downloads": -1,
        "filename": "hamradio-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "66529ff231598cba229f73c3924971df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 150039,
        "upload_time": "2021-10-08T08:32:38",
        "upload_time_iso_8601": "2021-10-08T08:32:38.644919Z",
        "url": "https://files.pythonhosted.org/packages/f7/10/9e72deb51fa4f3d83d150ee7381d00971338c9c3aaeea5595a76f71693b5/hamradio-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74fd48c24326daa12932cabdb944d22c28a325b76c44237dc3d288bd3a480b33",
          "md5": "0094cad346253aa183db23595de84e13",
          "sha256": "d8c88fd5f1efa02a09334f260e313c9abee2bde7f68ea55f1e0ff11c9395465e"
        },
        "downloads": -1,
        "filename": "hamradio-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0094cad346253aa183db23595de84e13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 151028,
        "upload_time": "2022-05-14T10:22:27",
        "upload_time_iso_8601": "2022-05-14T10:22:27.090892Z",
        "url": "https://files.pythonhosted.org/packages/74/fd/48c24326daa12932cabdb944d22c28a325b76c44237dc3d288bd3a480b33/hamradio-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74fd48c24326daa12932cabdb944d22c28a325b76c44237dc3d288bd3a480b33",
        "md5": "0094cad346253aa183db23595de84e13",
        "sha256": "d8c88fd5f1efa02a09334f260e313c9abee2bde7f68ea55f1e0ff11c9395465e"
      },
      "downloads": -1,
      "filename": "hamradio-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "0094cad346253aa183db23595de84e13",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 151028,
      "upload_time": "2022-05-14T10:22:27",
      "upload_time_iso_8601": "2022-05-14T10:22:27.090892Z",
      "url": "https://files.pythonhosted.org/packages/74/fd/48c24326daa12932cabdb944d22c28a325b76c44237dc3d288bd3a480b33/hamradio-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}