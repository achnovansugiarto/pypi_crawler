{
  "info": {
    "author": "Giulio Zani, Ali Rahimi",
    "author_email": "yerba.mate.dl@proton.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# What is Bombilla?\n\nBombilla is a configuration format for describing python objects and executions in plain json. Bombilla is compatible with any python framework, e.g pytorch lightning, keras and jax. You can use bombilla to define an experiment with a json file, and then execute it. \n\n# Installation\n\nbombilla can be installed with pip:\n\n```bash\npip install bomba\n```\n\n# API\n\nExample of using bombilla API:\n```python\nfrom bombilla import Bombilla\n\nbombilla = Bombilla(bombilla_object_descriptor_dict)\n\n# parses dict and loads modules, does not executes anything yet\nbombilla.load()\n\n# executes everything in the dictionary, creates objects\nbombilla.execute()\n\n# you can pass argument if you want to execute a function on a specific object (e.g. train a model)\nbombilla.execute_method(\"trainer\", \"fit\", *args, **kwargs)\n \n# you can get the object by key\nbombilla.find(\"resnet\")\n```\n\n\n## Object descriptor format\n\nAn object descriptor is a dictionary that describes python objects and executions.\nThe dictionary can contain the following keys:\n* `module`: the python module where the object is defined\n* `class_name`: the name of the class\n* `object_key`: the key of the object for dynamic referencing\n* `params`: the parameters for creating the object\n* `function`: the function to be executed\n* `method_args`: arguments for calling a specific method on an object\n\n**Note that all the arguments are directly passed to the object constructor, so you can use any argument that is accepted by the function's singnature.**\n\n\nFor example, here an object is described from `torchvision.models` python module, and used to load a pre-trained resnet.\n\n```\n\"resnet\":{\n   \"module\":\"torchvision.models\",\n   \"class_name\":\"resnet18\",\n   \"object_key\":\"resnet\",\n   \"params\":{\n      \"pretrained\":true\n   }\n}\n\n```\n\n\nOr a simple jax execution configuration file that executes a function:\n\n```\n{\n    \"data\": {\n        \"module\": \"data_loader.datasets\",\n        \"function\": \"mnist\",\n        \"object_key\": \"data\",\n        \"params\": {\n            \"permute_train\": true\n        }\n    },\n    \"train_function\": {\n        \"module\": \"trainers.mnist_classifier\",\n        \"function\": \"train\",\n        \"params\": {\n            \"datasets\": \"{data}\",\n            \"step_size\": 0.001,\n            \"num_epochs\": 10,\n            \"batch_size\": 128,\n            \"momentum_mass\": 0.9\n        }\n    }\n}\n```\n\nOr you can call methods on objects:\n```\n{\n    \"data\": {\n        \"module\": \"data_loaders.cifar10.data_loader\",\n        \"function\": \"get_train_data_loader\",\n        \"object_key\": \"data\",\n        \"params\": {\n            \"batch_size\": 128\n        }\n    },\n    \"trainer\": {\n        \"module\": \"modules.resnet.resnet\",\n        \"function\": \"get_model\",\n        \"params\": {\n            \"input_shape\": [\n                180,\n                180,\n                3\n            ],\n            \"num_classes\": 2\n        },\n        \"object_key\": \"model\",\n        \"method_args\": [\n            {\n                \"function\": \"compile\",\n                \"params\": {\n                    \"optimizer\": {\n                        \"module\": \"tensorflow.keras.optimizers\",\n                        \"class_name\": \"Adam\",\n                        \"params\": {\n                            \"learning_rate\": 0.001\n                        }\n                    },\n                    \"loss\": \"binary_crossentropy\",\n                    \"metrics\": [\n                        \"accuracy\"\n                    ]\n                }\n            },\n            {\n                \"function\": \"fit\",\n                \"params\": {\n                    \"\": \"{data}\",\n                    \"epochs\": 10\n                }\n            }\n        ]\n    }\n}\n```\n\n\n\nAnd describe a nested dictionary of any depth:\n```\n{\n    \"data\": {\n        \"module\": \"data_loaders.cifar10.data_loader\",\n        \"class_name\": \"CifarLightningDataModule\",\n        \"object_key\": \"data\",\n        \"params\": {\n            \"location\": \"./data/cifar10\",\n            \"batch_size\": 128,\n            \"image_size\": [\n                256,\n                256\n            ],\n            \"crop_size\": 4\n        }\n    },\n    \"pytorch_lightning_module\": {\n        \"module\": \"base_classification\",\n        \"class_name\": \"LightningClassificationModule\",\n        \"object_key\": \"pl_model\",\n        \"params\": {\n            \"classifier\": {\n                \"module\": \"modules.resnet.resnet\",\n                \"object_key\": \"classifier\",\n                \"class_name\": \"ResNet\",\n                \"params\": {\n                    \"block\": \"BasicBlock\",\n                    \"layers\": [\n                        3,\n                        4,\n                        6,\n                        3\n                    ],\n                    \"num_classes\": 10,\n                    \"in_channels\": 3,\n                    \"zero_init_residual\": false,\n                    \"groups\": 1,\n                    \"width_per_group\": 64,\n                    \"replace_stride_with_dilation\": [\n                        false,\n                        false,\n                        false\n                    ],\n                    \"norm_layer\": \"BatchNorm2d\"\n                }\n            },\n            \"optimizers\": {\n                \"optimizer\": {\n                    \"module\": \"torch.optim\",\n                    \"class_name\": \"Adam\",\n                    \"object_key\": \"optimizer\",\n                    \"params\": {\n                        \"lr\": 0.0004,\n                        \"betas\": [\n                            0.5,\n                            0.999\n                        ],\n                        \"params\": {\n                            \"function_call\": \"parameters\",\n                            \"reference_key\": \"classifier\",\n                            \"params\": {}\n                        }\n                    }\n                },\n                \"lr_scheduler\": {\n                    \"monitor\": \"val_loss\",\n                    \"scheduler\": {\n                        \"module\": \"torch.optim.lr_scheduler\",\n                        \"class_name\": \"ReduceLROnPlateau\",\n                        \"params\": {\n                            \"optimizer\": \"{optimizer}\",\n                            \"mode\": \"min\",\n                            \"factor\": 0.5,\n                            \"threshold\": 1e-08,\n                            \"threshold_mode\": \"rel\",\n                            \"patience\": 0,\n                            \"verbose\": true\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"trainer\": {\n        \"module\": \"pytorch_lightning\",\n        \"class_name\": \"Trainer\",\n        \"params\": {\n            \"gpus\": 1,\n            \"max_epochs\": 100,\n            \"precision\": 16,\n            \"gradient_clip_val\": 0.5,\n            \"enable_checkpointing\": true,\n            \"callbacks\": [\n                {\n                    \"module\": \"pytorch_lightning.callbacks\",\n                    \"class_name\": \"EarlyStopping\",\n                    \"params\": {\n                        \"monitor\": \"val_loss\",\n                        \"patience\": 10,\n                        \"mode\": \"min\"\n                    }\n                },\n                {\n                    \"module\": \"pytorch_lightning.callbacks\",\n                    \"class_name\": \"ModelCheckpoint\",\n                    \"params\": {\n                        \"dirpath\": \"{save_dir}/checkpoints\",\n                        \"monitor\": \"val_loss\",\n                        \"save_top_k\": 1,\n                        \"verbose\": true,\n                        \"save_last\": true,\n                        \"mode\": \"min\"\n                    }\n                }\n            ],\n            \"logger\": {\n                \"module\": \"pytorch_lightning.loggers\",\n                \"class_name\": \"CSVLogger\",\n                \"params\": {\n                    \"save_dir\": \"./logs\"\n                }\n            }\n        },\n        \"method_args\": [\n            {\n                \"function\": \"fit\",\n                \"params\": {\n                    \"model\": \"{pl_model}\",\n                    \"datamodule\": \"{data}\"\n                }\n            },\n            {\n                \"function\": \"test\",\n                \"params\": {\n                    \"model\": \"{pl_model}\",\n                    \"datamodule\": \"{data}\"\n                }\n            }\n        ]\n    }\n}\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ilex-paraguariensis/bombilla",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bomba",
    "package_url": "https://pypi.org/project/bomba/",
    "platform": null,
    "project_url": "https://pypi.org/project/bomba/",
    "project_urls": {
      "Homepage": "https://github.com/ilex-paraguariensis/bombilla"
    },
    "release_url": "https://pypi.org/project/bomba/1.1.113/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "A cowsay clone for python in one file.",
    "version": "1.1.113",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15261425,
  "releases": {
    "1.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56ec107229886c4f6d92030e927bd3421270bc31466882e16034a050b0498644",
          "md5": "d20780d7c67f35a1286ef35b37c6b15c",
          "sha256": "b6476c60d144f141ba073e180578bc8200295e5670cd0a42fb545abee98b9bac"
        },
        "downloads": -1,
        "filename": "bomba-1.1.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d20780d7c67f35a1286ef35b37c6b15c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 10497,
        "upload_time": "2022-09-29T21:35:11",
        "upload_time_iso_8601": "2022-09-29T21:35:11.716335Z",
        "url": "https://files.pythonhosted.org/packages/56/ec/107229886c4f6d92030e927bd3421270bc31466882e16034a050b0498644/bomba-1.1.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccd209aa263bf397f65918f4a07e882dd7eb3d42e42b872834af966285555e54",
          "md5": "f97d901f3ef186332b5613815654d971",
          "sha256": "d0903250e1e9ab0525ec7d1efa91cf45f5bbc01874b09c2305155ed3bc51a882"
        },
        "downloads": -1,
        "filename": "bomba-1.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "f97d901f3ef186332b5613815654d971",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 11040,
        "upload_time": "2022-09-29T21:35:13",
        "upload_time_iso_8601": "2022-09-29T21:35:13.365150Z",
        "url": "https://files.pythonhosted.org/packages/cc/d2/09aa263bf397f65918f4a07e882dd7eb3d42e42b872834af966285555e54/bomba-1.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.112": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3eeab1dc5cbce831c8566c38474b6755c2b03b831f350513db13ebe26ff78bab",
          "md5": "f8d02be949a833215efd13405b716a59",
          "sha256": "ebf5b9bc5f4100a4eba8ec443086ba68e76330c92b6419169cf4d4b71ed03d33"
        },
        "downloads": -1,
        "filename": "bomba-1.1.112-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8d02be949a833215efd13405b716a59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 21513,
        "upload_time": "2022-09-29T22:07:00",
        "upload_time_iso_8601": "2022-09-29T22:07:00.778845Z",
        "url": "https://files.pythonhosted.org/packages/3e/ea/b1dc5cbce831c8566c38474b6755c2b03b831f350513db13ebe26ff78bab/bomba-1.1.112-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e23e552b2689e5244a72901df1fd2d10efce47452cf36ea806e89c754d6c4966",
          "md5": "bf08901b78fc9e453942962f4cd9e9da",
          "sha256": "2a48f956d1c4823f01c6692b57173a66d627eee09214290d76e23765b9f6f749"
        },
        "downloads": -1,
        "filename": "bomba-1.1.112.tar.gz",
        "has_sig": false,
        "md5_digest": "bf08901b78fc9e453942962f4cd9e9da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 20769,
        "upload_time": "2022-09-29T22:07:02",
        "upload_time_iso_8601": "2022-09-29T22:07:02.795311Z",
        "url": "https://files.pythonhosted.org/packages/e2/3e/552b2689e5244a72901df1fd2d10efce47452cf36ea806e89c754d6c4966/bomba-1.1.112.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.113": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c315afc9d2096e5fc97ae4effc25d1e8302d9592b76343de8e5d3fda11e2e5c",
          "md5": "c2dc6597d7bb3952619f3eb5f9fbb03b",
          "sha256": "c1271eef8360ea17262414254cf8750f82f7817fa23a46710b29e775776a1bb2"
        },
        "downloads": -1,
        "filename": "bomba-1.1.113.tar.gz",
        "has_sig": false,
        "md5_digest": "c2dc6597d7bb3952619f3eb5f9fbb03b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 21146,
        "upload_time": "2022-09-29T23:38:00",
        "upload_time_iso_8601": "2022-09-29T23:38:00.441062Z",
        "url": "https://files.pythonhosted.org/packages/4c/31/5afc9d2096e5fc97ae4effc25d1e8302d9592b76343de8e5d3fda11e2e5c/bomba-1.1.113.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d53b02a44172f55ae56e2dafad8e15225964d63fc3f3f30b6e329fb33acdda03",
          "md5": "edbf70290aa16922f50d0f4bf30a2be1",
          "sha256": "76ee7ff95a8199279749c9dda47171d31c658134a9db0bbb33ce0b9ab0d3fa41"
        },
        "downloads": -1,
        "filename": "bomba-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edbf70290aa16922f50d0f4bf30a2be1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 12863,
        "upload_time": "2022-09-29T20:48:38",
        "upload_time_iso_8601": "2022-09-29T20:48:38.526733Z",
        "url": "https://files.pythonhosted.org/packages/d5/3b/02a44172f55ae56e2dafad8e15225964d63fc3f3f30b6e329fb33acdda03/bomba-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bdc7a7227c7b17f21dafc66a298621dbd8a3467297c28383156c98a938bf581",
          "md5": "23dc6c629588a927772e4e8a1c3f3b6b",
          "sha256": "8393691de37038c9f6c1f160282f9807b36999266514eb5bb6ece802cfb6b8e2"
        },
        "downloads": -1,
        "filename": "bomba-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "23dc6c629588a927772e4e8a1c3f3b6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 14083,
        "upload_time": "2022-09-29T20:48:40",
        "upload_time_iso_8601": "2022-09-29T20:48:40.982715Z",
        "url": "https://files.pythonhosted.org/packages/5b/dc/7a7227c7b17f21dafc66a298621dbd8a3467297c28383156c98a938bf581/bomba-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4c315afc9d2096e5fc97ae4effc25d1e8302d9592b76343de8e5d3fda11e2e5c",
        "md5": "c2dc6597d7bb3952619f3eb5f9fbb03b",
        "sha256": "c1271eef8360ea17262414254cf8750f82f7817fa23a46710b29e775776a1bb2"
      },
      "downloads": -1,
      "filename": "bomba-1.1.113.tar.gz",
      "has_sig": false,
      "md5_digest": "c2dc6597d7bb3952619f3eb5f9fbb03b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 21146,
      "upload_time": "2022-09-29T23:38:00",
      "upload_time_iso_8601": "2022-09-29T23:38:00.441062Z",
      "url": "https://files.pythonhosted.org/packages/4c/31/5afc9d2096e5fc97ae4effc25d1e8302d9592b76343de8e5d3fda11e2e5c/bomba-1.1.113.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}