{
  "info": {
    "author": "",
    "author_email": "Andreas Haagner <ahaagner@gmx.de>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# mvgext\n\nThis package aims to provide a clean, performant and barrier-free interface to timetable information of the *Münchner Verkehrsgesellschaft* (MVG), responsible for public transport in Munich. It exports the class `MvgApi` to retrieve stations, lines and departures from the unofficial JSON API at https://www.mvg.de.\n\nThis package extends the work from mondbaron (https://github.com/mondbaron/mvg) to provide stable functionality even for Munich District Areas (Landkreis München).\n\n\n## Disclaimer\n\nThis project is **not an official project from the Münchner Verkehrsgesellschaft (MVG)**. It was developed as a private project from lack of a documented and openly accessible API. It simply reproduces the requests made by https://www.mvg.de to provide a barrier-free access to local timetable information.\n\nTherefore, the following **usage restrictions from the MVG Imprint do apply to all users of this package**:\n\n> Our systems are used for direct customer interaction. The processing of our content or data by third parties requires our express consent. For **private, non-commercial purposes, moderate use is tolerated** without our explicit consent. Any form of **data mining does not constitute moderate use**. We reserve the right to revoke this permission in principle or in individual cases. Please direct any questions to: redaktion@mvg.de\n> \n> (from https://www.mvg.de/impressum.html, accessed on 04. Feb 2023)\n\n## Why another MVG package?\n\nThe project was inspired by two existing packages:\n- The package [PyMVGLive](https://pypi.org/project/PyMVGLive) from 2017 does provide an interface to the former MVGLive API at `mvg-live.de`. As of 2022 the MVGLive website does not exist anymore and the package has been archived. Although the old API still works for some stations, it does not for others - mainly due to updated station identifiers. Therefore, the package is considered deprecated and cannot be used for new designs.\n- The newer package [mvg-api](https://pypi.org/project/mvg-api) offers an implementation from 2020 based on the API at `www.mvg.de/api/fahrinfo`. It considers the updated station identifiers and still works perfectly. This package provides the basis for recent projects such as [mvg-cli](https://pypi.org/project/mvg-cli).\n\nSo why another MVG API package? In the end three reasons were decisive:\n- The recent website at uses a new API at `www.mvg.de/api/fib/v2`, which seems to be more performant than the previous one.\n- None of the existing packages offer asynchronous calls for concurrent code projects.\n- An optimized package was required to develop a [Home Assistant](https://www.home-assistant.io) integration.\n\n## Installation\n\nInstall from the Python Package Index (PyPI) using `pip`:\n```\npip install mvg\n```\n\n## Basic Usage\n\nThe interface was designed to be simple and intuitive. Basic usage follows these steps:\n- Find a station using `MvgApi.station(station)` by its name and place (e.g. `\"Universität, München\"`) or its global station identifier (e.g. `\"de:09162:70\"`).\n- Alternatively, `MvgApi.nearby(latitude, longitude)` finds the nearest station.\n- Create an API instance using `MvgApi(station)` by station name and place or its global identifier.\n- Use the method `.departures()` to retrieve information from the API.\n\nA basic example looks like this:\n\n```python\nfrom mvg import MvgApi\n\nstation = MvgApi.station('Universität, München')\nif station:\n    mvgapi = MvgApi(station['id'])\n    departures = mvgapi.departures()\n    print(station, departures)\n```\n\n### Available Stations and Lines\n\nThe static methods `MvgApi.stations()` and `MvgApi.lines()` expose a list of all available stations and a list of all available lines from designated API endpoints. While these calls are great for reference, they are also quite extensive and should not be used within a frequent query loop.\n\n### Filters\n\nThe results from `.departures(limit, offset, transport_types)` can be filtered using the following arguments:\n\n- `limit` limits the output to the given number of departures, defaults to 10\n- `offset` adds an offset (e.g. walking distance to the station) in minutes, defaults to 0\n- `transport_types` filters the result by a list of transport types (e.g. `[TransportType.UBAHN]`)\n\nA filtered example looks like this:\n\n```python\nfrom mvg import MvgApi, TransportType\n\nstation = MvgApi.station('Universität, München')\nif station:\n    mvgapi = MvgApi(station['id'])\n    departures = mvgapi.departures(\n        limit=3,\n        offset=5,\n        transport_types=[TransportType.UBAHN])\n    print(station, departures)\n```\n\n### Example results\n\n`station()` or `nearby()` results a `dict`:\n```\n{ \n'id': 'de:09162:70', \n'name': 'Universität', \n'place': 'München'\n}\n```\n`departures()` results a `list` of `dict`:\n```\n[{\n'time': 1668524580,\n'planned': 1668524460,\n'line': 'U3',\n'destination': 'Fürstenried West',\n'type': 'U-Bahn',\n'icon': 'mdi:subway',\n'cancelled': False,\n'messages': []\n}, ... ]\n```\n\n## Advanced Usage: Asynchronous Methods\n\nThe class `MvgApi` internally calls asynchronous methods using `asyncio` and `aiohttp` to perform the web requests efficiently. These asynchronous methods are marked by the suffix `_async` and can be utilized by users in projects with concurrent code.\n\nThe basic example but with asynchronous calls looks like this:\n\n```python\nimport asyncio\nfrom mvg import MvgApi\n\nasync def demo() -> None:\n    station = await MvgApi.station_async('Universität, München')\n    if station:\n        departures = MvgApi.departures_async(station['id'])\n        print(station, await departures)\nloop = asyncio.get_event_loop()\nloop.run_until_complete(demo())\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mvgext",
    "package_url": "https://pypi.org/project/mvgext/",
    "platform": null,
    "project_url": "https://pypi.org/project/mvgext/",
    "project_urls": {
      "Bug Tracker": "https://github.com/piehler73/mvgext/issues",
      "Documentation": "https://github.com/piehler73/mvgext",
      "Source": "https://github.com/piehler73/mvgext"
    },
    "release_url": "https://pypi.org/project/mvgext/1.0.3/",
    "requires_dist": [
      "aiohttp (~=3.8)",
      "furl (~=2.1)",
      "autopep8 ; extra == 'dev'",
      "build ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-asyncio ; extra == 'dev'",
      "sphinx ; extra == 'dev'",
      "sphinx-mdinclude ; extra == 'dev'",
      "sphinx-pyproject ; extra == 'dev'",
      "sphinx-rtd-theme ; extra == 'dev'",
      "twine ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "An unofficial interface to timetable information of the Münchner Verkehrsgesellschaft (MVG).",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16851635,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99a5cafc447745b7947298c006c26ae367a2f99d47b8ef676e707113255f3694",
          "md5": "6484dabfa858ff688054b45678c6f6f5",
          "sha256": "09018d6f366791ceec2c3ad9dc4e89aa15421ed112b963797bf692b5782b71b8"
        },
        "downloads": -1,
        "filename": "mvgext-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6484dabfa858ff688054b45678c6f6f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8007,
        "upload_time": "2023-02-12T09:34:49",
        "upload_time_iso_8601": "2023-02-12T09:34:49.135622Z",
        "url": "https://files.pythonhosted.org/packages/99/a5/cafc447745b7947298c006c26ae367a2f99d47b8ef676e707113255f3694/mvgext-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf7291827afc1cab3fdd039f5708a645135e2222b7e65a0451926248c8665503",
          "md5": "6418ff8d0fabefd546ea261777d7e0b8",
          "sha256": "9bd03d577c19c2d8c4fa42712681a744848675f85fe0ce888dc16c3736bebe8a"
        },
        "downloads": -1,
        "filename": "mvgext-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6418ff8d0fabefd546ea261777d7e0b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10295,
        "upload_time": "2023-02-12T09:34:50",
        "upload_time_iso_8601": "2023-02-12T09:34:50.848627Z",
        "url": "https://files.pythonhosted.org/packages/bf/72/91827afc1cab3fdd039f5708a645135e2222b7e65a0451926248c8665503/mvgext-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b688ecbf4119f6607e6662dca2838cefa19597e6c6ab36676ea4c0fb95d1f629",
          "md5": "4e244e0d9a520f3be512e8450dc9b583",
          "sha256": "a51eb88c956303e7420fbac3790693fc2dbf96d0731bb15b34f7c0f849ef5ac2"
        },
        "downloads": -1,
        "filename": "mvgext-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e244e0d9a520f3be512e8450dc9b583",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8021,
        "upload_time": "2023-02-12T09:49:20",
        "upload_time_iso_8601": "2023-02-12T09:49:20.516946Z",
        "url": "https://files.pythonhosted.org/packages/b6/88/ecbf4119f6607e6662dca2838cefa19597e6c6ab36676ea4c0fb95d1f629/mvgext-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "007deb125260882d97acadb1e6ba16d4db584e51944f71e828af9deb29ddef13",
          "md5": "7892655ffed34b32c2a42714a2dc2672",
          "sha256": "7aab5af2c05319b35688890cc3a89b834634f2783cb0388cb897137993d7d123"
        },
        "downloads": -1,
        "filename": "mvgext-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7892655ffed34b32c2a42714a2dc2672",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10300,
        "upload_time": "2023-02-12T09:49:22",
        "upload_time_iso_8601": "2023-02-12T09:49:22.686070Z",
        "url": "https://files.pythonhosted.org/packages/00/7d/eb125260882d97acadb1e6ba16d4db584e51944f71e828af9deb29ddef13/mvgext-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6f61b2f4732bb4dae0fad0efa10ff95f41f0a67b04b4ab02cdc3d66ee7f022e",
          "md5": "48fc298ae03d3497d9b5574abb90bd2b",
          "sha256": "ad1d0a9d39dc3cb3c1317cdf1bbff4e625e8f30568ad96b8968346b6851190f0"
        },
        "downloads": -1,
        "filename": "mvgext-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "48fc298ae03d3497d9b5574abb90bd2b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8120,
        "upload_time": "2023-02-12T11:19:37",
        "upload_time_iso_8601": "2023-02-12T11:19:37.188760Z",
        "url": "https://files.pythonhosted.org/packages/b6/f6/1b2f4732bb4dae0fad0efa10ff95f41f0a67b04b4ab02cdc3d66ee7f022e/mvgext-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1d21e95d60b8899a4a4c54b8fa9d821daad63bbe8c72dc623c89f9a26e2605a",
          "md5": "cc960b7459cedc6d1d9c5ee1c7384624",
          "sha256": "c5b180377a8cdbf2011946c57c3b9e5d5f72a15b2c5881e0e55765e2485080e2"
        },
        "downloads": -1,
        "filename": "mvgext-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cc960b7459cedc6d1d9c5ee1c7384624",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10457,
        "upload_time": "2023-02-12T11:19:39",
        "upload_time_iso_8601": "2023-02-12T11:19:39.004753Z",
        "url": "https://files.pythonhosted.org/packages/b1/d2/1e95d60b8899a4a4c54b8fa9d821daad63bbe8c72dc623c89f9a26e2605a/mvgext-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2510bbd54835e2d19f2dc4b61c423f7130d7476231279c7f0ed41e5693dda14c",
          "md5": "0ad64b82529fba85d0bd842ee5a160c3",
          "sha256": "0f7b6e78f82ff730955fc4b036e0ecdc3ef26e47e275d3f4cbc19b7a5309819a"
        },
        "downloads": -1,
        "filename": "mvgext-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ad64b82529fba85d0bd842ee5a160c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8150,
        "upload_time": "2023-02-14T05:18:22",
        "upload_time_iso_8601": "2023-02-14T05:18:22.626834Z",
        "url": "https://files.pythonhosted.org/packages/25/10/bbd54835e2d19f2dc4b61c423f7130d7476231279c7f0ed41e5693dda14c/mvgext-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3a1c818441e69e3026ab053c2893e698888e70a153a052bd6126b997ba9f127",
          "md5": "e9f6b9a45beee9386f663ad50b288282",
          "sha256": "a431471513647664813aa610f1c4332954fe4bb8df43aead7538d10398bc3565"
        },
        "downloads": -1,
        "filename": "mvgext-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e9f6b9a45beee9386f663ad50b288282",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10487,
        "upload_time": "2023-02-14T05:18:24",
        "upload_time_iso_8601": "2023-02-14T05:18:24.973150Z",
        "url": "https://files.pythonhosted.org/packages/a3/a1/c818441e69e3026ab053c2893e698888e70a153a052bd6126b997ba9f127/mvgext-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2510bbd54835e2d19f2dc4b61c423f7130d7476231279c7f0ed41e5693dda14c",
        "md5": "0ad64b82529fba85d0bd842ee5a160c3",
        "sha256": "0f7b6e78f82ff730955fc4b036e0ecdc3ef26e47e275d3f4cbc19b7a5309819a"
      },
      "downloads": -1,
      "filename": "mvgext-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0ad64b82529fba85d0bd842ee5a160c3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8150,
      "upload_time": "2023-02-14T05:18:22",
      "upload_time_iso_8601": "2023-02-14T05:18:22.626834Z",
      "url": "https://files.pythonhosted.org/packages/25/10/bbd54835e2d19f2dc4b61c423f7130d7476231279c7f0ed41e5693dda14c/mvgext-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3a1c818441e69e3026ab053c2893e698888e70a153a052bd6126b997ba9f127",
        "md5": "e9f6b9a45beee9386f663ad50b288282",
        "sha256": "a431471513647664813aa610f1c4332954fe4bb8df43aead7538d10398bc3565"
      },
      "downloads": -1,
      "filename": "mvgext-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e9f6b9a45beee9386f663ad50b288282",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 10487,
      "upload_time": "2023-02-14T05:18:24",
      "upload_time_iso_8601": "2023-02-14T05:18:24.973150Z",
      "url": "https://files.pythonhosted.org/packages/a3/a1/c818441e69e3026ab053c2893e698888e70a153a052bd6126b997ba9f127/mvgext-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}