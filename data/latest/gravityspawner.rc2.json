{
  "info": {
    "author": "LALALA",
    "author_email": "toorxkh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# gravityspawner for Jupyterhub\n\nThis package is for [**Gravity of DOA, SJTU**](https://gravity.sjtu.edu.cn/)\n\nWe attend to select PBS/Slurm job queue first, then input arguments like *hours, memory, CPU cores* to spawn a Jupyter server.\n\nWe need to combine *templates* and *wrapspawner* to achieve this goal:\n```shell\nâ”œâ”€â”€ jupyterhub\nâ”‚   â””â”€â”€ templates               # jinja template\nâ”‚       â”œâ”€â”€ page.html           # change the navigation bar, add some button\nâ”‚       â”œâ”€â”€ spawn.html          # user can select and input arguments such as hour, cpu, memory. use JavaScript to hide the input form.\nâ”‚       â””â”€â”€ spawn_pending.html  # waiting for spawning server, add some message\nâ””â”€â”€ src\n    â”œâ”€â”€ gravityspawner\n        â”œâ”€â”€ gravityspawner.py   # get extra arguments from jinja template, then pass them to batchspawner [thanks wrapspawner.ProfilesSpawner]. set resource limits as well.\n```\n\n## Installation\n\nInstall via **pip**:\n\n   ```shell\n   pip install gravityspawner\n   ```\n   Or, another better way to use **pip**:\n   ```shell\n   python -m pip install gravityspawner\n   ```\n\n## Usage\n1. Add lines in `jupyterhub_config.py`:\n   \n   ```python\n      c.JupyterHub.spawner_class = 'gravityspawner.GravitySpawner'\n   ```\n\n2. If we use `batchspawner.TorqueSpawner`, then add these lines in `jupyterhub_config.py`:\n\n   ```python\n   c.GravitySpawner.profiles = [\n      ('[ LOGIN 01 ] 8 cores 8 GB running forever (unless idle for more than 3 days)', 'local', 'jupyterhub.   spawner.LocalProcessSpawner', {'ip':'0.0.0.0'} ),\n      ('[ SMALL ] Max: [ 72 cores + 400 GB ]', 'small', 'batchspawner.TorqueSpawner',\n         dict(min_max_hour=(1,12),min_max_cpu=(8,72),min_max_memory=(10,360))),\n      ('[ GPU ] Max: [ 72 cores + 400 GB + NVIDIA Tesla V100 32GB ]', 'gpu', 'batchspawner.TorqueSpawner',\n         dict(min_max_hour=(1,12),min_max_cpu=(8,72),min_max_memory=(10,360))),\n      ('[ FAT ] Max: [ 192 cores + 6000 GB ]', 'fat', 'batchspawner.TorqueSpawner',\n         dict(min_max_hour=(1,12),min_max_cpu=(8,192),min_max_memory=(400,6000))),\n   ]\n   ```\n   **profiles** here represent *display, key, Spawner, options*. We can set limits of resource here, such as *hour, memory, CPU cores*. If you need more options or change options, you also need to edit the `jupyterhub/templates/spawn.html` (front-end)\n\nThe final *piece of* configuration of `jupyterhub_config.py` like this:\n```python\nimport batchspawner\nimport gravityspawner\n\n# our jinja template, change front-end style and add extra options\nc.JupyterHub.template_paths = ['/opt/jupyterhub/templates']\n\n# specify the spawner we use\nc.JupyterHub.spawner_class = 'gravityspawner.GravitySpawner'\n\n# PBS script to start Jupyter on computing nodes!\nc.TorqueSpawner.batch_script = '''#!/bin/bash\n#PBS -N jupyterhub\n#PBS -q {queue}\n#PBS -l walltime={runtime}:00:00\n#PBS -l nodes=1:ppn={nprocs}\n#PBS -l mem={memory}gb\n####PBS -v {keepvars}\n#PBS -V\n#PBS -j oe\n#PBS -o /home/$USER/.jupyter/jupyterhub.log\nconda deactivate 1>/dev/null 2>&1\nconda deactivate 1>/dev/null 2>&1\nmodule load anaconda/conda-4.12.0 cuda/cuda-11.3\nsource /opt/conda/conda-4.12.0/bin/activate\nconda activate /opt/jupyterhub/envs/hub02\n{cmd}\n'''\n\n# Defaul options of Spawner. local + small + gpu + fat\nc.GravitySpawner.profiles = [\n   ('[ LOGIN 02 ] 8 cores 8 GB running forever (unless idle for more than 3 days)', 'local', 'jupyterhub.spawner.LocalProcessSpawner', {'ip':'0.0.0.0'} ),\n   ('[ SMALL ] Max: [ 72 cores + 400 GB ]', 'small', 'batchspawner.TorqueSpawner',\n      dict(min_max_hour=(1,12),min_max_cpu=(8,72),min_max_memory=(10,360))),\n   ('[ GPU ] Max: [ 72 cores + 400 GB + NVIDIA Tesla V100 32GB ]', 'gpu', 'batchspawner.TorqueSpawner',\n      dict(min_max_hour=(1,12),min_max_cpu=(8,72),min_max_memory=(10,360))),\n   ('[ FAT ] Max: [ 192 cores + 6000 GB ]', 'fat', 'batchspawner.TorqueSpawner',\n      dict(min_max_hour=(1,12),min_max_cpu=(8,192),min_max_memory=(400,6000))),\n]\n```\n\n## Example\n\nThis is a typical dropdown menu letting the user choose between local **Login node** and **Torque/PBS queues**\n![selection menu](https://github.com/lalalabox/gravityspawner/raw/master/imgs/select.png)\n\nAfter using `jupyterhub/templates`, we can input args according to our selection, e.g.ðŸŒ°\n1. select **login node**, which is `'local'` in code:\n![select login node](https://github.com/lalalabox/gravityspawner/raw/master/imgs/input_local.png)\n2. select **Torque/PBS gpu queue**, which is `'gpu'` in code:\n![select PBS gpu queue](https://github.com/lalalabox/gravityspawner/raw/master/imgs/input_gpu.png)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lalalabox/gravityspawner",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gravityspawner",
    "package_url": "https://pypi.org/project/gravityspawner/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/gravityspawner/",
    "project_urls": {
      "Bug Tracker": "https://github.com/lalalabox/gravityspawner/issues",
      "Homepage": "https://github.com/lalalabox/gravityspawner"
    },
    "release_url": "https://pypi.org/project/gravityspawner/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "GravitySpawner: A spawner for Jupyterhub to let user select and input options at the same time",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14207525,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "846523d771c9ac0eec83616015fb4327e5b7970196bce360e11e0baf81bee00e",
          "md5": "70237769b3b9e51ebd8f7976effef160",
          "sha256": "b81bff16d364250c0386913963ee23b891d44a885e5e064c847b571d29f3791e"
        },
        "downloads": -1,
        "filename": "gravityspawner-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70237769b3b9e51ebd8f7976effef160",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6779,
        "upload_time": "2022-06-12T18:43:48",
        "upload_time_iso_8601": "2022-06-12T18:43:48.820249Z",
        "url": "https://files.pythonhosted.org/packages/84/65/23d771c9ac0eec83616015fb4327e5b7970196bce360e11e0baf81bee00e/gravityspawner-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb2abdf84f4036b951c7c72058531f9162e096432472347ddd9ee90be9432a0b",
          "md5": "12db5dbc3f359286fa83e348e06d8116",
          "sha256": "e0636a484f48c53ef0f385b9cae8fb2f9f33fd8d3b0073daee71597385b47d48"
        },
        "downloads": -1,
        "filename": "gravityspawner-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "12db5dbc3f359286fa83e348e06d8116",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 114207,
        "upload_time": "2022-06-12T18:43:53",
        "upload_time_iso_8601": "2022-06-12T18:43:53.179057Z",
        "url": "https://files.pythonhosted.org/packages/bb/2a/bdf84f4036b951c7c72058531f9162e096432472347ddd9ee90be9432a0b/gravityspawner-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1459c0cb1d83cc15083e1ae87132038f6f4edec0a241e1fc80ecb37413605c3",
          "md5": "3bf0273d76350d911f1140732d6c21f9",
          "sha256": "cf6e113e2d0b6584f8a6a5c29c3f60352a88411cfe4a4e8f3270606bd45aa800"
        },
        "downloads": -1,
        "filename": "gravityspawner-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3bf0273d76350d911f1140732d6c21f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6717,
        "upload_time": "2022-06-22T04:51:28",
        "upload_time_iso_8601": "2022-06-22T04:51:28.985542Z",
        "url": "https://files.pythonhosted.org/packages/e1/45/9c0cb1d83cc15083e1ae87132038f6f4edec0a241e1fc80ecb37413605c3/gravityspawner-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bf0ab6817bca392ee5c1cc8caa070569205e1bb33f418ba09b7eb6116a9e787",
          "md5": "befcc1d1e2f688da157acc69dc487574",
          "sha256": "b85c0470ac45552831ad80a9dc49cb36381ef578f1fedc1c58a575b128f97109"
        },
        "downloads": -1,
        "filename": "gravityspawner-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "befcc1d1e2f688da157acc69dc487574",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 114898,
        "upload_time": "2022-06-22T04:51:33",
        "upload_time_iso_8601": "2022-06-22T04:51:33.458883Z",
        "url": "https://files.pythonhosted.org/packages/4b/f0/ab6817bca392ee5c1cc8caa070569205e1bb33f418ba09b7eb6116a9e787/gravityspawner-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1459c0cb1d83cc15083e1ae87132038f6f4edec0a241e1fc80ecb37413605c3",
        "md5": "3bf0273d76350d911f1140732d6c21f9",
        "sha256": "cf6e113e2d0b6584f8a6a5c29c3f60352a88411cfe4a4e8f3270606bd45aa800"
      },
      "downloads": -1,
      "filename": "gravityspawner-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3bf0273d76350d911f1140732d6c21f9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6717,
      "upload_time": "2022-06-22T04:51:28",
      "upload_time_iso_8601": "2022-06-22T04:51:28.985542Z",
      "url": "https://files.pythonhosted.org/packages/e1/45/9c0cb1d83cc15083e1ae87132038f6f4edec0a241e1fc80ecb37413605c3/gravityspawner-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4bf0ab6817bca392ee5c1cc8caa070569205e1bb33f418ba09b7eb6116a9e787",
        "md5": "befcc1d1e2f688da157acc69dc487574",
        "sha256": "b85c0470ac45552831ad80a9dc49cb36381ef578f1fedc1c58a575b128f97109"
      },
      "downloads": -1,
      "filename": "gravityspawner-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "befcc1d1e2f688da157acc69dc487574",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 114898,
      "upload_time": "2022-06-22T04:51:33",
      "upload_time_iso_8601": "2022-06-22T04:51:33.458883Z",
      "url": "https://files.pythonhosted.org/packages/4b/f0/ab6817bca392ee5c1cc8caa070569205e1bb33f418ba09b7eb6116a9e787/gravityspawner-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}