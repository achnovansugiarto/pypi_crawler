{
  "info": {
    "author": "Nymeria, LLC",
    "author_email": "dev@nymeria.io",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Nymeria\n\n[![PyPI version](https://badge.fury.io/py/nymeria.svg)](https://badge.fury.io/py/nymeria)\n\nThe official python package to interact with Nymeria's service.\n\nYou can use Nymeria to enrich data with contact information such as email\naddresses, phone numbers and social links. The python package wraps Nymeria's [public\nAPI](https://www.nymeria.io/developers) so you don't have to.\n\n![Nymeria makes finding contact details a breeze.](https://www.nymeria.io/assets/images/marquee.png)\n\n## Usage\n\n#### Installation\n\n```bash\n$ pip install nymeria\n```\n\n#### Setting up a Client\n\n```python\nfrom nymeria import api\n\nclient = api.Client('YOUR API KEY GOES HERE')\n```\n\nAll actions that interact with the Nymeria service assume an API key has been\nset and will fail if a key hasn't been set. A key only needs to be set once and\ncan be set at the start of your program.\n\n#### Verifying an Email Address\n\n```python\nfrom nymeria import api\n\nclient = api.Client('YOUR API KEY GOES HERE')\n\nclient.email.verify('dev@nymeria.io')\n```\n\nYou can verify the deliverability of an email address using Nymeria's service.\nThe response will contain a result and tags.\n\nThe result will either be \"valid\" or \"invalid\". The tags will give you\nadditional details regarding the email address. For example, the tags will tell\nyou if the mail server connection was successful, if the domain's DNS records\nare set up to send and receive email, etc.\n\n#### Enriching a Profile\n\n```python\nfrom nymeria import api\n\nclient = api.Client('YOUR API KEY GOES HERE')\n\n# Single Enrichment\n\nclient.person.enrich({ 'profile': 'linkedin.com/in/wozniaksteve' }) # => dict (see below)\n\n# Bulk Enrichment (pass n-queries to enrich)\n\nclient.person.bulk_enrich([{ 'email': 'woz@steve.org' }, { 'profile': 'github.com/nymeriaio' }])\n```\n\nYou can enrich one or more profiles using the enrich function. The enrich\nfunction takes a dict, or an array of dicts. The most common dict keys\nto use are `profile` and `email`.\n\nIf you want to enrich an email address you can specify an email and the Nymeria\nservice will locate the person and return all associated data for them.\nLikewise, you can specify a supported url via the url parameter if you prefer\nto enrich via a url.\n\nAt this time, Nymeria supports look ups for the following sites:\n\n1. LinkedIn\n1. Facebook\n1. Twitter\n1. GitHub\n\nPlease note, if using LinkedIn urls provide the public profile LinkedIn url.\n\nTwo other common parameters are filter and require. If you wish to filter out\nprofessional emails (only receive personal emails) you can do so by specifying\n\"professional-emails\" as the filter parameter.\n\nThe require parameter works by requiring certain kinds of data. For example,\nyou can request an enrichment but only receive a result if the profile\ncontains a phone number (or an email, personal email, professional email,\netc). The following are all valid requirements:\n\n1. \"email\"\n1. \"phone\"\n1. \"professional-email\"\n1. \"personal-email\"\n\nYou can specify multiple requirements by using a comma\nbetween each requirement. For example you can require a\nphone and personal email with: \"phone,personal-email\" as\nthe require parameter.\n\n#### Searching for People\n\n```python\nfrom nymeria import api\n\nclient = api.Client('YOUR API KEY GOES HERE')\n\n# Query for people.\npeople = client.person.search({ 'query': 'skills:\"Ruby on Rails\"' })\n```\n\nThe dict parameter enables you to specify your search criteria. In\nparticular, you can specify:\n\n1. `query` for general keyword matching text.\n1. `size` for the number of results to return.\n1. `from` the number to begin pagination from (size+1).\n\nBy default, 10 people will be returned for each page of search\nresults. You can specify the page as part of your dict if you\nwant to access additional pages of people.\n\n## License\n\nMIT License\n\nCopyright (c) 2022, Nymeria LLC.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.nymeria.io/nymeria.py",
    "keywords": "osint contact-discovery email-finder phonenumber-finder",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nymeria",
    "package_url": "https://pypi.org/project/nymeria/",
    "platform": null,
    "project_url": "https://pypi.org/project/nymeria/",
    "project_urls": {
      "Homepage": "https://git.nymeria.io/nymeria.py"
    },
    "release_url": "https://pypi.org/project/nymeria/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Discover contact details such as phone numbers, email addresses and social links using Nymeria's service.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15656571,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e404415d7c868e973ab53ce6cc352a7bc276b7fb658ab3f65c11a50040f4a0b",
          "md5": "12ac84042a38e821705954352536026b",
          "sha256": "78f7616259b60ec914e0bf6fc002579b933592132c687ade277183c4c37c525a"
        },
        "downloads": -1,
        "filename": "nymeria-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "12ac84042a38e821705954352536026b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3659,
        "upload_time": "2022-04-28T17:56:47",
        "upload_time_iso_8601": "2022-04-28T17:56:47.006089Z",
        "url": "https://files.pythonhosted.org/packages/1e/40/4415d7c868e973ab53ce6cc352a7bc276b7fb658ab3f65c11a50040f4a0b/nymeria-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e517f5aac3fe3663c2a9d8d4b01c7f165a95fae835ae769e9a1271cafdeb1609",
          "md5": "e4164a2aa32189d72d1cc4f7ee3d3c8a",
          "sha256": "c1e3eeea010eac73829c72122f5c6d06b8686551ca9cf7f80046bb9343298726"
        },
        "downloads": -1,
        "filename": "nymeria-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e4164a2aa32189d72d1cc4f7ee3d3c8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4068,
        "upload_time": "2022-05-02T19:19:46",
        "upload_time_iso_8601": "2022-05-02T19:19:46.623931Z",
        "url": "https://files.pythonhosted.org/packages/e5/17/f5aac3fe3663c2a9d8d4b01c7f165a95fae835ae769e9a1271cafdeb1609/nymeria-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fab6f7a0af69086969fca03310c5ff7f808c38b389bd048f5447316148636a85",
          "md5": "e140a49ef6b9cef903eb3645ca7d605e",
          "sha256": "71f3e81cf7bb54a22c984ea544fa3f731aa8564ab7829dc3e5aece8355a0e596"
        },
        "downloads": -1,
        "filename": "nymeria-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e140a49ef6b9cef903eb3645ca7d605e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4111,
        "upload_time": "2022-05-02T19:26:13",
        "upload_time_iso_8601": "2022-05-02T19:26:13.434193Z",
        "url": "https://files.pythonhosted.org/packages/fa/b6/f7a0af69086969fca03310c5ff7f808c38b389bd048f5447316148636a85/nymeria-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c91a0794e0111a1645a7c3ecee9dd30518651daa4ed45a6d3c28b8057c735fb2",
          "md5": "0038c0147ab3add9b1e9053f83f9ff56",
          "sha256": "b354f68add5131441f14cfa9adbf4d0c9a8b2918ebaa51ddd04b8a17765f8350"
        },
        "downloads": -1,
        "filename": "nymeria-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0038c0147ab3add9b1e9053f83f9ff56",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4643,
        "upload_time": "2022-05-21T00:37:24",
        "upload_time_iso_8601": "2022-05-21T00:37:24.594565Z",
        "url": "https://files.pythonhosted.org/packages/c9/1a/0794e0111a1645a7c3ecee9dd30518651daa4ed45a6d3c28b8057c735fb2/nymeria-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d6a636dd7e186c8d27579ffa0ea42321b902ab540a7f5b6379e14de19604e83",
          "md5": "01ad64064bc0df21f79a0b8d7ba4104a",
          "sha256": "874d92f6a0c9e6f7bdbbf57f5a7d947f702798e60a3ad86ed42f5b71dd161c26"
        },
        "downloads": -1,
        "filename": "nymeria-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "01ad64064bc0df21f79a0b8d7ba4104a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4384,
        "upload_time": "2022-11-04T15:08:50",
        "upload_time_iso_8601": "2022-11-04T15:08:50.916311Z",
        "url": "https://files.pythonhosted.org/packages/8d/6a/636dd7e186c8d27579ffa0ea42321b902ab540a7f5b6379e14de19604e83/nymeria-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8d6a636dd7e186c8d27579ffa0ea42321b902ab540a7f5b6379e14de19604e83",
        "md5": "01ad64064bc0df21f79a0b8d7ba4104a",
        "sha256": "874d92f6a0c9e6f7bdbbf57f5a7d947f702798e60a3ad86ed42f5b71dd161c26"
      },
      "downloads": -1,
      "filename": "nymeria-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "01ad64064bc0df21f79a0b8d7ba4104a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4384,
      "upload_time": "2022-11-04T15:08:50",
      "upload_time_iso_8601": "2022-11-04T15:08:50.916311Z",
      "url": "https://files.pythonhosted.org/packages/8d/6a/636dd7e186c8d27579ffa0ea42321b902ab540a7f5b6379e14de19604e83/nymeria-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}