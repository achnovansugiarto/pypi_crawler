{
  "info": {
    "author": "Microsoft Corporation",
    "author_email": "azpysdkhelp@microsoft.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Azure Maps Render Package client library for Python\n\nThis package contains a Python SDK for Azure Maps Services for Render.\nRead more about Azure Maps Services [here](https://docs.microsoft.com/azure/azure-maps/)\n\n[Source code](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/maps/azure-maps-render) | [API reference documentation](https://docs.microsoft.com/rest/api/maps/render) | [Product documentation](https://docs.microsoft.com/azure/azure-maps/)\n\n## _Disclaimer_\n\n_Azure SDK Python packages support for Python 2.7 has ended 01 January 2022. For more information and questions, please refer to <https://github.com/Azure/azure-sdk-for-python/issues/20691>_\n\n## Getting started\n\n### Prerequisites\n\n- Python 3.7 or later is required to use this package.\n- An [Azure subscription][azure_subscription] and an [Azure Maps account](https://docs.microsoft.com/azure/azure-maps/how-to-manage-account-keys).\n- A deployed Maps Services resource. You can create the resource via [Azure Portal][azure_portal] or [Azure CLI][azure_cli].\n\nIf you use Azure CLI, replace `<resource-group-name>` and `<account-name>` of your choice, and select a proper [pricing tier](https://docs.microsoft.com/azure/azure-maps/choose-pricing-tier) based on your needs via the `<sku-name>` parameter. Please refer to [this page](https://docs.microsoft.com/cli/azure/maps/account?view=azure-cli-latest#az_maps_account_create) for more details.\n\n```bash\naz maps account create --resource-group <resource-group-name> --account-name <account-name> --sku <sku-name>\n```\n\n### Install the package\n\nInstall the Azure Maps Service Render SDK.\n\n```bash\npip install azure-maps-render\n```\n\n### Create and Authenticate the MapsRenderClient\n\nTo create a client object to access the Azure Maps Render API, you will need a **credential** object. Azure Maps Render client also support two ways to authenticate.\n\n#### 1. Authenticate with a Subscription Key Credential\n\nYou can authenticate with your Azure Maps Subscription Key.\nOnce the Azure Maps Subscription Key is created, set the value of the key as environment variable: `AZURE_SUBSCRIPTION_KEY`.\nThen pass an `AZURE_SUBSCRIPTION_KEY` as the `credential` parameter into an instance of [AzureKeyCredential][azure-key-credential].\n\n```python\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.maps.render import MapsRenderClient\n\ncredential = AzureKeyCredential(os.environ.get(\"AZURE_SUBSCRIPTION_KEY\"))\n\nrender_client = MapsRenderClient(\n    credential=credential,\n)\n```\n\n#### 2. Authenticate with an Azure Active Directory credential\n\nYou can authenticate with [Azure Active Directory (AAD) token credential][maps_authentication_aad] using the [Azure Identity library][azure_identity].\nAuthentication by using AAD requires some initial setup:\n\n- Install [azure-identity][azure-key-credential]\n- Register a [new AAD application][register_aad_app]\n- Grant access to Azure Maps by assigning the suitable role to your service principal. Please refer to the [Manage authentication page][manage_aad_auth_page].\n\nAfter setup, you can choose which type of [credential][azure-key-credential] from `azure.identity` to use.\nAs an example, [DefaultAzureCredential][default_azure_credential]\ncan be used to authenticate the client:\n\nNext, set the values of the client ID, tenant ID, and client secret of the AAD application as environment variables:\n`AZURE_CLIENT_ID`, `AZURE_TENANT_ID`, `AZURE_CLIENT_SECRET`\n\nYou will also need to specify the Azure Maps resource you intend to use by specifying the `clientId` in the client options. The Azure Maps resource client id can be found in the Authentication sections in the Azure Maps resource. Please refer to the [documentation][how_to_manage_authentication] on how to find it.\n\n```python\nfrom azure.maps.render import MapsRenderClient\nfrom azure.identity import DefaultAzureCredential\n\ncredential = DefaultAzureCredential()\nrender_client = MapsRenderClient(\n    client_id=\"<Azure Maps Client ID>\",\n    credential=credential\n)\n```\n\n## Key concepts\n\nThe Azure Maps Render client library for Python allows you to interact with each of the components through the use of a dedicated client object.\n\n### Sync Clients\n\n`MapsRenderClient` is the primary client for developers using the Azure Maps Render client library for Python.\nOnce you initialized a `MapsRenderClient` class, you can explore the methods on this client object to understand the different features of the Azure Maps Render service that you can access.\n\n### Async Clients\n\nThis library includes a complete async API supported on Python 3.5+. To use it, you must first install an async transport, such as [aiohttp](https://pypi.org/project/aiohttp/).\nSee [azure-core documentation](https://github.com/Azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/CLIENT_LIBRARY_DEVELOPER.md#transport) for more information.\n\nAsync clients and credentials should be closed when they're no longer needed. These\nobjects are async context managers and define async `close` methods.\n\n## Examples\n\nThe following sections provide several code snippets covering some of the most common Azure Maps Render tasks, including:\n\n- [Get Maps Attribution](#get-maps-attribution)\n- [Get Maps Static Image](#get-maps-static-image)\n- [Get Maps Tile](#get-maps-tile)\n- [Get Maps Tileset](#get-maps-tileset)\n- [Get Maps Copyright for World](#get-maps-copyright-for-world)\n\n### Get Maps Attribution\n\nThis request allows users to request map copyright attribution information for a\nsection of a tileset.\n\n```python\nfrom azure.maps.render import MapsRenderClient\n\nresult = maps_render_client.get_map_attribution(\n    tileset_id=TilesetID.MICROSOFT_BASE,\n    zoom=6,\n    bounds=BoundingBox(\n        south=42.982261,\n        west=24.980233,\n        north=56.526017,\n        east=1.355233\n    )\n)\n```\n\n### Get Maps Tile\n\nThis request will return map tiles in vector or raster formats typically\nto be integrated into a map control or SDK. Some example tiles that can be requested are Azure\nMaps road tiles, real-time  Weather Radar tiles. By default, Azure Maps uses vector tiles for its web map\ncontrol (Web SDK) and Android SDK.\n\n```python\nfrom azure.maps.render import MapsRenderClient\n\nresult = maps_render_client.get_map_tile(\n    tileset_id=TilesetID.MICROSOFT_BASE,\n    z=6,\n    x=9,\n    y=22,\n    tile_size=\"512\"\n)\n```\n\n### Get Maps Tileset\n\nThis request will give metadata for a tileset.\n\n```python\nfrom azure.maps.render import MapsRenderClient\n\nresult = maps_render_client.get_map_tileset(tileset_id=TilesetID.MICROSOFT_BASE)\n```\n\n### Get Maps Static Image\n\nThis request will provide the static image service renders a user-defined, rectangular image containing a map section\nusing a zoom level from 0 to 20.\nThe static image service renders a user-defined,\nrectangular image containing a map section using a zoom level from 0 to 20.\nAnd also save the result to file as png.\n\n```python\nfrom azure.maps.render import MapsRenderClient\n\nresult = maps_render_client.get_map_static_image(img_format=\"png\", center=(52.41064,4.84228))\n# Save result to file as png\nfile = open('result.png', 'wb')\nfile.write(next(result))\nfile.close()\n```\n\n### Get Maps Copyright for World\n\nThis request will serve copyright information for Render Tile service.\n\n```python\nfrom azure.maps.render import MapsRenderClient\n\nresult = maps_render_client.get_copyright_for_world()\n```\n\n## Troubleshooting\n\n### General\n\nMaps Render clients raise exceptions defined in [Azure Core](https://github.com/Azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/README.md).\n\nThis list can be used for reference to catch thrown exceptions. To get the specific error code of the exception, use the `error_code` attribute, i.e, `exception.error_code`.\n\n### Logging\n\nThis library uses the standard [logging](https://docs.python.org/3/library/logging.html) library for logging.\nBasic information about HTTP sessions (URLs, headers, etc.) is logged at INFO level.\n\nDetailed DEBUG level logging, including request/response bodies and unredacted headers, can be enabled on a client with the `logging_enable` argument:\n\n```python\nimport sys\nimport logging\nfrom azure.maps.render import MapsRenderClient\n\n# Create a logger for the 'azure.maps.render' SDK\nlogger = logging.getLogger('azure.maps.render')\nlogger.setLevel(logging.DEBUG)\n\n# Configure a console output\nhandler = logging.StreamHandler(stream=sys.stdout)\nlogger.addHandler(handler)\n\n```\n\n### Additional\n\nStill running into issues? If you encounter any bugs or have suggestions, please file an issue in the [Issues](<https://github.com/Azure/azure-sdk-for-python/issues>) section of the project.\n\n## Next steps\n\n### More sample code\n\nGet started with our [Maps Render samples](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/maps/azure-maps-render/samples) ([Async Version samples](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/maps/azure-maps-render/samples/async_samples)).\n\nSeveral Azure Maps Render Python SDK samples are available to you in the SDK's GitHub repository. These samples provide example code for additional scenarios commonly encountered while working with Maps Render\n\n```bash\nset AZURE_SUBSCRIPTION_KEY=\"<RealSubscriptionKey>\"\n\npip install azure-maps-render --pre\n\npython samples/sample_authentication.py\npython sample/sample_get_copyright_caption.py\npython sample/sample_get_copyright_for_tile.py\npython sample/sample_get_copyright_for_world.py\npython sample/sample_get_copyright_from_bounding_box.py\npython sample/sample_get_map_attribution.py\npython sample/sample_get_map_static_image.py\npython sample/sample_get_map_tile.py\npython sample/sample_get_map_tileset.py\n```\n\n> Notes: `--pre` flag can be optionally added, it is to include pre-release and development versions for `pip install`. By default, `pip` only finds stable versions.\n\nFurther detail please refer to [Samples Introduction](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/maps/azure-maps-render/samples/README.md)\n\n### Additional documentation\n\nFor more extensive documentation on Azure Maps Render, see the [Azure Maps Render documentation](https://docs.microsoft.com/rest/api/maps/render) on docs.microsoft.com.\n\n## Contributing\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit <https://cla.microsoft.com>.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n<!-- LINKS -->\n[azure_subscription]: https://azure.microsoft.com/free/\n[azure_identity]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/identity/azure-identity\n[azure_portal]: https://portal.azure.com\n[azure_cli]: https://docs.microsoft.com/cli/azure\n[azure-key-credential]: https://aka.ms/azsdk/python/core/azurekeycredential\n[default_azure_credential]: https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/identity/azure-identity#defaultazurecredential\n[register_aad_app]: https://docs.microsoft.com/powershell/module/Az.Resources/New-AzADApplication?view=azps-8.0.0\n[maps_authentication_aad]: https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication\n[create_new_application_registration]: https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/applicationsListBlade/quickStartType/AspNetWebAppQuickstartPage/sourceType/docs\n[manage_aad_auth_page]: https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication\n[how_to_manage_authentication]: https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication#view-authentication-details\n\n\n# Release History\n\n## 1.0.0b1 (2022-10-13)\n\n### Features Added\n\n- Initial release\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/maps/azure-maps-render",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "azure-maps-render",
    "package_url": "https://pypi.org/project/azure-maps-render/",
    "platform": null,
    "project_url": "https://pypi.org/project/azure-maps-render/",
    "project_urls": {
      "Homepage": "https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/maps/azure-maps-render"
    },
    "release_url": "https://pypi.org/project/azure-maps-render/1.0.0b1/",
    "requires_dist": [
      "msrest (>=0.6.21)",
      "azure-common (~=1.1)",
      "azure-mgmt-core (<2.0.0,>=1.3.0)"
    ],
    "requires_python": "",
    "summary": "Microsoft Azure Maps Render Client Library for Python",
    "version": "1.0.0b1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15404746,
  "releases": {
    "1.0.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "449fedd15a3e2784cb5064ce942bfc9152035d119f436566108618bc2c1964df",
          "md5": "49f39196611fe92939cffaf815ce07fa",
          "sha256": "41abdbea2a2743fb7bcc915b98b3471556734b79b102f862937a98f7d81fd95e"
        },
        "downloads": -1,
        "filename": "azure_maps_render-1.0.0b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "49f39196611fe92939cffaf815ce07fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 77578,
        "upload_time": "2022-10-13T23:44:55",
        "upload_time_iso_8601": "2022-10-13T23:44:55.570027Z",
        "url": "https://files.pythonhosted.org/packages/44/9f/edd15a3e2784cb5064ce942bfc9152035d119f436566108618bc2c1964df/azure_maps_render-1.0.0b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82eff4090f8afe96a6a4bebda023c8f458fc889fb6ca107fc5ab9b0e8135ced7",
          "md5": "0d24caf2a3e09b6a9f25c0cc8251a786",
          "sha256": "a49df1f8b45761d1e4d42c0edc98c71e88d62919c6122e6fbc97ff95fa691c67"
        },
        "downloads": -1,
        "filename": "azure-maps-render-1.0.0b1.zip",
        "has_sig": false,
        "md5_digest": "0d24caf2a3e09b6a9f25c0cc8251a786",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 112753,
        "upload_time": "2022-10-13T23:44:58",
        "upload_time_iso_8601": "2022-10-13T23:44:58.620816Z",
        "url": "https://files.pythonhosted.org/packages/82/ef/f4090f8afe96a6a4bebda023c8f458fc889fb6ca107fc5ab9b0e8135ced7/azure-maps-render-1.0.0b1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "449fedd15a3e2784cb5064ce942bfc9152035d119f436566108618bc2c1964df",
        "md5": "49f39196611fe92939cffaf815ce07fa",
        "sha256": "41abdbea2a2743fb7bcc915b98b3471556734b79b102f862937a98f7d81fd95e"
      },
      "downloads": -1,
      "filename": "azure_maps_render-1.0.0b1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "49f39196611fe92939cffaf815ce07fa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 77578,
      "upload_time": "2022-10-13T23:44:55",
      "upload_time_iso_8601": "2022-10-13T23:44:55.570027Z",
      "url": "https://files.pythonhosted.org/packages/44/9f/edd15a3e2784cb5064ce942bfc9152035d119f436566108618bc2c1964df/azure_maps_render-1.0.0b1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82eff4090f8afe96a6a4bebda023c8f458fc889fb6ca107fc5ab9b0e8135ced7",
        "md5": "0d24caf2a3e09b6a9f25c0cc8251a786",
        "sha256": "a49df1f8b45761d1e4d42c0edc98c71e88d62919c6122e6fbc97ff95fa691c67"
      },
      "downloads": -1,
      "filename": "azure-maps-render-1.0.0b1.zip",
      "has_sig": false,
      "md5_digest": "0d24caf2a3e09b6a9f25c0cc8251a786",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 112753,
      "upload_time": "2022-10-13T23:44:58",
      "upload_time_iso_8601": "2022-10-13T23:44:58.620816Z",
      "url": "https://files.pythonhosted.org/packages/82/ef/f4090f8afe96a6a4bebda023c8f458fc889fb6ca107fc5ab9b0e8135ced7/azure-maps-render-1.0.0b1.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}