{
  "info": {
    "author": "hotstar.com",
    "author_email": "gaurav.s@hotstar.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. image:: https://travis-ci.org/globocom/m3u8.svg\n    :target: https://travis-ci.org/globocom/m3u8\n\n.. image:: https://coveralls.io/repos/globocom/m3u8/badge.png?branch=master\n    :target: https://coveralls.io/r/globocom/m3u8?branch=master\n\n.. image:: https://badge.fury.io/py/m3u8.svg\n    :target: https://badge.fury.io/py/m3u8\n\nm3u8\n====\n\nPython `m3u8`_ parser.\n\nDocumentation\n=============\n\nThe basic usage is to create a playlist object from uri, file path or\ndirectly from a string:\n\n.. code-block:: python\n\n    import m3u8\n\n    m3u8_obj = m3u8.load('http://videoserver.com/playlist.m3u8')  # this could also be an absolute filename\n    print m3u8_obj.segments\n    print m3u8_obj.target_duration\n\n    # if you already have the content as string, use\n    \n    m3u8_obj = m3u8.loads('#EXTM3U8 ... etc ... ')\n\nSupported tags\n==============\n\n* `#EXT-X-TARGETDURATION`_\n* `#EXT-X-MEDIA-SEQUENCE`_\n* `#EXT-X-DISCONTINUITY-SEQUENCE`_\n* `#EXT-X-PROGRAM-DATE-TIME`_\n* `#EXT-X-MEDIA`_\n* `#EXT-X-PLAYLIST-TYPE`_\n* `#EXT-X-KEY`_\n* `#EXT-X-STREAM-INF`_\n* `#EXT-X-VERSION`_\n* #EXT-X-ALLOW-CACHE\n* `#EXT-X-ENDLIST`_\n* `#EXTINF`_\n* `#EXT-X-I-FRAMES-ONLY`_\n* `#EXT-X-BYTERANGE`_\n* `#EXT-X-I-FRAME-STREAM-INF`_\n* `#EXT-X-DISCONTINUITY`_\n* #EXT-X-CUE-OUT\n* #EXT-X-CUE-OUT-CONT\n* #EXT-X-CUE-IN\n* #EXT-X-CUE-SPAN\n* #EXT-OATCLS-SCTE35\n* `#EXT-X-INDEPENDENT-SEGMENTS`_\n* `#EXT-X-MAP`_\n* `#EXT-X-START`_\n* #EXT-X-SERVER-CONTROL\n* #EXT-X-PART-INF\n* #EXT-X-PART\n* #EXT-X-RENDITION-REPORT\n* #EXT-X-SKIP\n* `#EXT-X-SESSION-DATA`_\n\nEncryption keys\n---------------\n\nThe segments may be or not encrypted. The ``keys`` attribute list will\nbe a list  with all the different keys as described with `#EXT-X-KEY`_:\n\nEach key has the next properties:\n\n-  ``method``: ex.: \"AES-128\"\n-  ``uri``: the key uri, ex.: \"http://videoserver.com/key.bin\"\n-  ``iv``: the initialization vector, if available. Otherwise ``None``.\n\nIf no ``#EXT-X-KEY`` is found, the ``keys`` list will have a unique element ``None``. Multiple keys are supported.\n\nIf unencrypted and encrypted segments are mixed in the M3U8 file, then the list will contain a ``None`` element, with one\nor more keys afterwards.\n\nTo traverse the list of keys available:\n\n.. code-block:: python\n\n    import m3u8\n\n    m3u8_obj = m3u8.loads('#EXTM3U8 ... etc ...')\n    len(m3u8_obj.keys) => returns the number of keys available in the list (normally 1)\n    for key in m3u8_obj.keys:\n       if key:  # First one could be None\n          key.uri\n          key.method\n          key.iv\n\n\nGetting segments encrypted with one key\n---------------------------------------\n\nThere are cases where listing segments for a given key is important. It's possible to\nretrieve the list of segments encrypted with one key via ``by_key`` method in the\n``segments`` list.\n\nExample of getting the segments with no encryption:\n\n.. code-block:: python\n\n    import m3u8\n\n    m3u8_obj = m3u8.loads('#EXTM3U8 ... etc ...')\n    segmk1 = m3u8_obj.segments.by_key(None)\n\n    # Get the list of segments encrypted using last key\n    segm = m3u8_obj.segments.by_key( m3u8_obj.keys[-1] )\n\n\nWith this method, is now possible also to change the key from some of the segments programmatically:\n\n\n.. code-block:: python\n\n    import m3u8\n\n    m3u8_obj = m3u8.loads('#EXTM3U8 ... etc ...')\n\n    # Create a new Key and replace it\n    new_key = m3u8.Key(\"AES-128\", \"/encrypted/newkey.bin\", None, iv=\"0xf123ad23f22e441098aa87ee\")\n    for segment in m3u8_obj.segments.by_key( m3u8_obj.keys[-1] ):\n        segm.key = new_key\n    # Remember to sync the key from the list as well\n    m3u8_obj.keys[-1] = new_key\n\n\n\nVariant playlists (variable bitrates)\n-------------------------------------\n\nA playlist can have a list to other playlist files, this is used to\nrepresent multiple bitrates videos, and it's called `variant streams`_.\nSee an `example here`_.\n\n.. code-block:: python\n\n    variant_m3u8 = m3u8.loads('#EXTM3U8 ... contains a variant stream ...')\n    variant_m3u8.is_variant    # in this case will be True\n\n    for playlist in variant_m3u8.playlists:\n        playlist.uri\n        playlist.stream_info.bandwidth\n\nthe playlist object used in the for loop above has a few attributes:\n\n-  ``uri``: the url to the stream\n-  ``stream_info``: a ``StreamInfo`` object (actually a namedtuple) with\n   all the attributes available to `#EXT-X-STREAM-INF`_\n-  ``media``: a list of related ``Media`` objects with all the attributes\n   available to `#EXT-X-MEDIA`_\n-  ``playlist_type``: the type of the playlist, which can be one of `VOD`_\n   (video on demand) or `EVENT`_\n\n**NOTE: the following attributes are not implemented yet**, follow\n`issue 4`_ for updates\n\n-  ``alternative_audios``: its an empty list, unless it's a playlist\n   with `Alternative audio`_, in this case it's a list with ``Media``\n   objects with all the attributes available to `#EXT-X-MEDIA`_\n-  ``alternative_videos``: same as ``alternative_audios``\n\nA variant playlist can also have links to `I-frame playlists`_, which are used\nto specify where the I-frames are in a video. See `Apple's documentation`_ on\nthis for more information. These I-frame playlists can be accessed in a similar\nway to regular playlists.\n\n.. code-block:: python\n\n    variant_m3u8 = m3u8.loads('#EXTM3U ... contains a variant stream ...')\n\n    for iframe_playlist in variant_m3u8.iframe_playlists:\n        iframe_playlist.uri\n        iframe_playlist.iframe_stream_info.bandwidth\n\nThe iframe_playlist object used in the for loop above has a few attributes:\n\n-  ``uri``: the url to the I-frame playlist\n-  ``base_uri``: the base uri of the variant playlist (if given)\n-  ``iframe_stream_info``: a ``StreamInfo`` object (same as a regular playlist)\n\nCustom tags\n-----------\n\nQuoting the documentation::\n\n    Lines that start with the character '#' are either comments or tags.\n    Tags begin with #EXT.  They are case-sensitive.  All other lines that\n    begin with '#' are comments and SHOULD be ignored.\n\nThis library ignores all the non standard tags by default. If you want them to be collected while loading the file content,\nyou need to pass a function to the `load/loads` functions, following the example below:\n\n.. code-block:: python\n\n    import m3u8\n\n    def get_movie(line, data, lineno):\n        if line.startswith('#MOVIE-NAME:'):\n            custom_tag = line.split(':')\n            data['movie'] = custom_tag[1].strip()\n\n    m3u8_obj = m3u8.load('http://videoserver.com/playlist.m3u8', custom_tags_parser=get_movie)\n    print(m3u8_obj.data['movie'])  #  million dollar baby\n\n\nRunning Tests\n=============\n\n.. code-block:: bash\n\n    $ ./runtests\n\nContributing\n============\n\nAll contribution is welcome, but we will merge a pull request if, and only if, it\n\n-  has tests\n-  follows the code conventions\n\nIf you plan to implement a new feature or something that will take more\nthan a few minutes, please open an issue to make sure we don't work on\nthe same thing.\n\n.. _m3u8: https://tools.ietf.org/html/rfc8216\n.. _#EXT-X-VERSION: https://tools.ietf.org/html/rfc8216#section-4.3.1.2\n.. _#EXTINF: https://tools.ietf.org/html/rfc8216#section-4.3.2.1\n.. _#EXT-X-BYTERANGE: https://tools.ietf.org/html/rfc8216#section-4.3.2.2\n.. _#EXT-X-DISCONTINUITY: https://tools.ietf.org/html/rfc8216#section-4.3.2.3\n.. _#EXT-X-KEY: https://tools.ietf.org/html/rfc8216#section-4.3.2.4\n.. _#EXT-X-MAP: https://tools.ietf.org/html/rfc8216#section-4.3.2.5\n.. _#EXT-X-PROGRAM-DATE-TIME: https://tools.ietf.org/html/rfc8216#section-4.3.2.6\n.. _#EXT-X-DATERANGE: https://tools.ietf.org/html/rfc8216#section-4.3.2.7\n.. _#EXT-X-TARGETDURATION: https://tools.ietf.org/html/rfc8216#section-4.3.3.1\n.. _#EXT-X-MEDIA-SEQUENCE: https://tools.ietf.org/html/rfc8216#section-4.3.3.2\n.. _#EXT-X-DISCONTINUITY-SEQUENCE: https://tools.ietf.org/html/rfc8216#section-4.3.3.3\n.. _#EXT-X-ENDLIST: https://tools.ietf.org/html/rfc8216#section-4.3.3.4\n.. _#EXT-X-PLAYLIST-TYPE: https://tools.ietf.org/html/rfc8216#section-4.3.3.5\n.. _#EXT-X-I-FRAMES-ONLY: https://tools.ietf.org/html/rfc8216#section-4.3.3.6\n.. _#EXT-X-MEDIA: https://tools.ietf.org/html/rfc8216#section-4.3.4.1\n.. _#EXT-X-STREAM-INF: https://tools.ietf.org/html/rfc8216#section-4.3.4.2\n.. _#EXT-X-I-FRAME-STREAM-INF: https://tools.ietf.org/html/rfc8216#section-4.3.4.3\n.. _#EXT-X-SESSION-DATA: https://tools.ietf.org/html/rfc8216#section-4.3.4.4\n.. _#EXT-X-INDEPENDENT-SEGMENTS: https://tools.ietf.org/html/rfc8216#section-4.3.5.1\n.. _#EXT-X-START: https://tools.ietf.org/html/rfc8216#section-4.3.5.2\n.. _issue 1: https://github.com/globocom/m3u8/issues/1\n.. _variant streams: https://tools.ietf.org/html/rfc8216#section-6.2.4\n.. _example here: http://tools.ietf.org/html/draft-pantos-http-live-streaming-08#section-8.5\n.. _issue 4: https://github.com/globocom/m3u8/issues/4\n.. _I-frame playlists: https://tools.ietf.org/html/rfc8216#section-4.3.4.3\n.. _Apple's documentation: https://developer.apple.com/library/ios/technotes/tn2288/_index.html#//apple_ref/doc/uid/DTS40012238-CH1-I_FRAME_PLAYLIST\n.. _Alternative audio: http://tools.ietf.org/html/draft-pantos-http-live-streaming-08#section-8.7\n.. _VOD: https://developer.apple.com/library/mac/technotes/tn2288/_index.html#//apple_ref/doc/uid/DTS40012238-CH1-TNTAG2\n.. _EVENT: https://developer.apple.com/library/mac/technotes/tn2288/_index.html#//apple_ref/doc/uid/DTS40012238-CH1-EVENT_PLAYLIST",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gsingh42/m3u8",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hotstar-m3u8",
    "package_url": "https://pypi.org/project/hotstar-m3u8/",
    "platform": "",
    "project_url": "https://pypi.org/project/hotstar-m3u8/",
    "project_urls": {
      "Homepage": "https://github.com/gsingh42/m3u8"
    },
    "release_url": "https://pypi.org/project/hotstar-m3u8/0.5.5/",
    "requires_dist": null,
    "requires_python": ">=2.7",
    "summary": "Python m3u8 parser",
    "version": "0.5.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6682265,
  "releases": {
    "0.5.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c23d161b2a3757002e0d4d3af31840999281ff2dfddfa3cda4fa3b0147d025e",
          "md5": "14b7ba68b20fac6ac1b8bb03750a4ca5",
          "sha256": "385874bcfa4313f7128d6a5fd8db81a65b7d8f38456ca465548568686beac209"
        },
        "downloads": -1,
        "filename": "hotstar_m3u8-0.5.5.tar.gz",
        "has_sig": false,
        "md5_digest": "14b7ba68b20fac6ac1b8bb03750a4ca5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 18350,
        "upload_time": "2020-02-22T23:00:51",
        "upload_time_iso_8601": "2020-02-22T23:00:51.277061Z",
        "url": "https://files.pythonhosted.org/packages/5c/23/d161b2a3757002e0d4d3af31840999281ff2dfddfa3cda4fa3b0147d025e/hotstar_m3u8-0.5.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c23d161b2a3757002e0d4d3af31840999281ff2dfddfa3cda4fa3b0147d025e",
        "md5": "14b7ba68b20fac6ac1b8bb03750a4ca5",
        "sha256": "385874bcfa4313f7128d6a5fd8db81a65b7d8f38456ca465548568686beac209"
      },
      "downloads": -1,
      "filename": "hotstar_m3u8-0.5.5.tar.gz",
      "has_sig": false,
      "md5_digest": "14b7ba68b20fac6ac1b8bb03750a4ca5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 18350,
      "upload_time": "2020-02-22T23:00:51",
      "upload_time_iso_8601": "2020-02-22T23:00:51.277061Z",
      "url": "https://files.pythonhosted.org/packages/5c/23/d161b2a3757002e0d4d3af31840999281ff2dfddfa3cda4fa3b0147d025e/hotstar_m3u8-0.5.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}