{
  "info": {
    "author": "Rasmus Arpe Fogh Egeb√¶k",
    "author_email": "rasmus@alvenir.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Alvenir Client for Speech Recognition (BETA)\ngRPC client for speech recognition using Alvenir as backend. \n\nThe client and the gRPC integration is in **beta** and ongoing development. Hence, there might be\na few stability issues. It currently supports only Danish and you need to receive an API key from Alvenir to use.\n\nWrite an email to martin[at]alvenir.ai or rasmus[at]alvenir.ai if you want an API key!\n\n\n## How to install\nInstalling the client is as easy as writing:\n```commandline\npip install alvenirclient\n```\n\n## How to use\nIt is very simple to use! The preferred format of audio is single channel 16kHz wav with pcm_s16le audio encoding.\n\nIf you audio files is in different format, you can use a tool such as ffmpeg to do the transcoding. An example is:\n```\nffmpeg -i <existing_audio_file_path> -acodec pcm_s16le -ar 16000 -ac 1 <new_wav_audio_file_path>\n```\n\nThe server can also perform transcoding but this feature is still experimential.\n \n### Basic usage\n```python\nfrom alvenirclient.client import AlvenirClient\n\nclient = AlvenirClient(key=\"<YOUR KEY HERE>\")\nresponse = client.transcribe_file(\"<Path to file>\", server_transcoding=False)\nprint(response.transcription)\nprint(response.full_document)\n```\nThe response is of class `AlvenirResponse` and contains:\n* transcription; The transcription as a string\n* full_document; A json document with confidences and timestamps. An example of a full document is\n```json\n{\n  \"confidence\": 0.9141539366420111,\n  \"segments\": [\n    {\n      \"confidence\": 0.9141539366420111,\n      \"end_time\": 1.77,\n      \"start_time\": 0.93,\n      \"word_list\": [\n        {\n          \"confidence\": 0.995308015467965,\n          \"end_time\": 1.01,\n          \"start_time\": 0.93,\n          \"word\": \"Jeg\"\n        },\n        {\n          \"confidence\": 0.9983347185448589,\n          \"end_time\": 1.1500000000000001,\n          \"start_time\": 1.03,\n          \"word\": \"bor\"\n        },\n        {\n          \"confidence\": 0.9622011164767056,\n          \"end_time\": 1.29,\n          \"start_time\": 1.21,\n          \"word\": \"hos\"\n        },\n        {\n          \"confidence\": 0.9999113092492331,\n          \"end_time\": 1.4500000000000002,\n          \"start_time\": 1.37,\n          \"word\": \"min\"\n        },\n        {\n          \"confidence\": 0.6150145234712928,\n          \"end_time\": 1.77,\n          \"start_time\": 1.51,\n          \"word\": \"datter.\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n### Server transcoding\nPerforming server_transcoding just requires setting server_transcoding=True. This way, the samplerate and\nfileformat does not matter as long as it is a common audio format (wav, mp3 etc.). \n\n```python\nfrom alvenirclient.client import AlvenirClient\n\nclient = AlvenirClient(key=\"<YOUR KEY HERE>\")\nresponse = client.transcribe_file(\"<Path to file>\", server_transcoding=True)\nprint(response.transcription)\nprint(response.full_document)\n```\n\n\n### Microphone transcription\nThe client allows you to use your own microphone for transcriptions. It does however require you\nto additionally install [pyaudio](http://people.csail.mit.edu/hubert/pyaudio/). It is a very experimential\nfeature and the transcriptions might not be very accurate depending on the microphone and how the audio is recorded. \n\nThe most simple usage with microphone is: \n```python\nfrom alvenirclient.client import AlvenirClient\n\nclient = AlvenirClient(key=\"<YOUR KEY HERE>\")\nresponse = client.transcribe_microphone()\nprint(response.transcription)\nprint(response.full_document)\n```\nThe microphone will stop recording when you press the key \"enter\". This will not be real time, but the transcription is being made while you speak, so the response should be pretty instant.\n\nFor real time transcription i.e. continously getting a response, use the following code.\n\n```python\nfrom alvenirclient.client import AlvenirClient\nfrom alvenirclient.audio_pb2 import STOP\n\nclient = AlvenirClient(key=\"<YOUR KEY HERE>\")\nfinal_response = None\nresponses_iterable = client.transcribe_microphone_realtime()\n\nfor response in responses_iterable:\n    if response.status == STOP:\n        final_response = response\n        break\n    else:\n        print(response.transcription)\n\nprint(final_response.transcription)\nprint(final_response.full_document)\n```\n\nNote, the intermediate responses do not have full_document but only text in the transcription.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alvenirai/alvenirclient",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alvenirclient",
    "package_url": "https://pypi.org/project/alvenirclient/",
    "platform": null,
    "project_url": "https://pypi.org/project/alvenirclient/",
    "project_urls": {
      "Homepage": "https://github.com/alvenirai/alvenirclient"
    },
    "release_url": "https://pypi.org/project/alvenirclient/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Client for alvenir gRPC streaming services",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13590795,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a0ef71246e62523296c97165bffd49837fb22d14c902eb428e3324a746398f4",
          "md5": "4e697646c1ae4010d7a3b66d098181ed",
          "sha256": "10b546bd4e4f2995cf3478880e77a65fea0a12d4b2bef4df6c330d4d6426d133"
        },
        "downloads": -1,
        "filename": "alvenirclient-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e697646c1ae4010d7a3b66d098181ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10753,
        "upload_time": "2022-04-22T12:20:57",
        "upload_time_iso_8601": "2022-04-22T12:20:57.434433Z",
        "url": "https://files.pythonhosted.org/packages/7a/0e/f71246e62523296c97165bffd49837fb22d14c902eb428e3324a746398f4/alvenirclient-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "469281ef2ad407eb5319ef6baf2813cff80045d0684e655a4cef07b6a34bc59f",
          "md5": "7ca28c2537fdf946a1696538ffbb8513",
          "sha256": "fb90c1766634855737db5752e22ff04dbff3d30d2004db13d4429b3dcb91f999"
        },
        "downloads": -1,
        "filename": "alvenirclient-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7ca28c2537fdf946a1696538ffbb8513",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11600,
        "upload_time": "2022-04-22T12:44:30",
        "upload_time_iso_8601": "2022-04-22T12:44:30.519903Z",
        "url": "https://files.pythonhosted.org/packages/46/92/81ef2ad407eb5319ef6baf2813cff80045d0684e655a4cef07b6a34bc59f/alvenirclient-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "469281ef2ad407eb5319ef6baf2813cff80045d0684e655a4cef07b6a34bc59f",
        "md5": "7ca28c2537fdf946a1696538ffbb8513",
        "sha256": "fb90c1766634855737db5752e22ff04dbff3d30d2004db13d4429b3dcb91f999"
      },
      "downloads": -1,
      "filename": "alvenirclient-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7ca28c2537fdf946a1696538ffbb8513",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11600,
      "upload_time": "2022-04-22T12:44:30",
      "upload_time_iso_8601": "2022-04-22T12:44:30.519903Z",
      "url": "https://files.pythonhosted.org/packages/46/92/81ef2ad407eb5319ef6baf2813cff80045d0684e655a4cef07b6a34bc59f/alvenirclient-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}