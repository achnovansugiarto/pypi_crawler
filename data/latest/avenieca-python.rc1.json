{
  "info": {
    "author": "Ogban Ugot",
    "author_email": "ogbanugot@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# avenieca-python\nPython SDK for publishing state signals to the AveniECA suite.\n\n```bash\npip install avenieca-python\n```\n\n## Usage\n\n### Stream continuously to a topic\n```python\nimport os\nimport numpy as np\nfrom avenieca.utils import Config\nfrom avenieca.utils import Signal\nfrom avenieca.producers import Stream\n\n# Define a handler that returns a signal dict like  \n# the sample in avenieca.utils.signal\n\ndef handler():\n    Signal[\"valence\"] = 10\n    Signal[\"state\"] = np.array([0.2, 0.3, 0.8])\n    return Signal\n\n# Initialize Kafka configuration for the Stream\nConfig[\"bootstrap_servers\"] = os.environ[\"KAFKA_URL\"]\nConfig[\"topic\"] = \"left_wheel\" #digital twin subscriber-topic\n\n#Initialize the Stream object with a sync_rate \n# (the rate at which to publish signals).\nstream = Stream(config=Config, sync_rate=1)\nstream.publish(handler)\n```\n\n### Publish one signal as an event\n```python\nimport os\nimport numpy as np\nfrom avenieca.utils import Config\nfrom avenieca.utils import Signal\nfrom avenieca.producers import Event\n\n# Initialize Kafka configuration for the Event\nConfig[\"bootstrap_servers\"] = os.environ[\"KAFKA_URL\"]\nConfig[\"topic\"] = \"left_wheel\" #digital twin subscriber-topic\n\n# Define the signal\nSignal[\"valence\"] = 9\nSignal[\"state\"] = np.array([0.2, 0.3, 0.8])\n\nevent = Event(config=Config)\nevent.publish(Signal)\n```\n\n### Consume from kafka topic\n```python\nimport os\nimport numpy as np\nfrom avenieca.utils import Config\nfrom avenieca.utils.signal import get_state_as_list, get_state_as_array\nfrom avenieca.consumer import Consumer\n\n# Initialize Kafka configuration for the Event\nConfig[\"bootstrap_servers\"] = os.environ[\"KAFKA_URL\"]\nConfig[\"topic\"] = \"left_wheel\" #digital twin subscriber-topic\n\n# Define a handler to process incoming messages\ndef handler(data):\n    valence = data[\"valence\"]\n    state = data[\"state\"]\n    assert valence == 10\n    assert state == \"[0.2, 0.3, 0.8]\"\n\nclient = Consumer(config=Config)\nclient.consume(handler, True) # pass in handler\n\n# You can use util functions in your handler to \n# convert the state signal from byte string to \n# np.ndarray or python list\ndef handler(data):\n    assert data[\"valence\"] == 10\n    assert data[\"state\"] == \"[0.2, 0.3, 0.8]\"\n    get_state_as_list(data)\n    assert data[\"state\"] == [0.2, 0.3, 0.8]\n\ndef handler(data):\n    assert data[\"valence\"] == 10\n    assert data[\"state\"] == \"[0.2, 0.3, 0.8]\"\n    get_state_as_array(data)\n    assert True, np.array_equal(data[\"state\"], np.array([0.2, 0.3, 0.8]))\n```\n\n## Tests\n```bash\npython -m pytest test/\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aveni-hub/avenieca-python",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "avenieca-python",
    "package_url": "https://pypi.org/project/avenieca-python/",
    "platform": null,
    "project_url": "https://pypi.org/project/avenieca-python/",
    "project_urls": {
      "Homepage": "https://github.com/aveni-hub/avenieca-python"
    },
    "release_url": "https://pypi.org/project/avenieca-python/0.1.2/",
    "requires_dist": [
      "kafka-python",
      "numpy"
    ],
    "requires_python": "",
    "summary": "Python SDK for AveniECA",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16459843,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53edb772c276c0b5814395dcd4bd6e6d467d2048e24e576d214be624a482f986",
          "md5": "6ee72dee459de6d245bbe72a65cc04b0",
          "sha256": "0231c461c29d91f5ad630ae81200c1abc1ad12b2c80e91f24d2548696bb36ec9"
        },
        "downloads": -1,
        "filename": "avenieca_python-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ee72dee459de6d245bbe72a65cc04b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18261,
        "upload_time": "2023-01-17T15:38:38",
        "upload_time_iso_8601": "2023-01-17T15:38:38.001488Z",
        "url": "https://files.pythonhosted.org/packages/53/ed/b772c276c0b5814395dcd4bd6e6d467d2048e24e576d214be624a482f986/avenieca_python-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6abe07f7661322090a8de392f58f74ed2e5d6a1a633c33341e78fc52d7cb89a5",
          "md5": "1b6f1c5382a34c299aef4930e9b95bd5",
          "sha256": "a9d8f9d035ca9ffab67f604ddb477dbdaea2441019b6b3a2b91f158d387a5b72"
        },
        "downloads": -1,
        "filename": "avenieca-python-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1b6f1c5382a34c299aef4930e9b95bd5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17435,
        "upload_time": "2023-01-17T15:38:39",
        "upload_time_iso_8601": "2023-01-17T15:38:39.258406Z",
        "url": "https://files.pythonhosted.org/packages/6a/be/07f7661322090a8de392f58f74ed2e5d6a1a633c33341e78fc52d7cb89a5/avenieca-python-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53edb772c276c0b5814395dcd4bd6e6d467d2048e24e576d214be624a482f986",
        "md5": "6ee72dee459de6d245bbe72a65cc04b0",
        "sha256": "0231c461c29d91f5ad630ae81200c1abc1ad12b2c80e91f24d2548696bb36ec9"
      },
      "downloads": -1,
      "filename": "avenieca_python-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6ee72dee459de6d245bbe72a65cc04b0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18261,
      "upload_time": "2023-01-17T15:38:38",
      "upload_time_iso_8601": "2023-01-17T15:38:38.001488Z",
      "url": "https://files.pythonhosted.org/packages/53/ed/b772c276c0b5814395dcd4bd6e6d467d2048e24e576d214be624a482f986/avenieca_python-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6abe07f7661322090a8de392f58f74ed2e5d6a1a633c33341e78fc52d7cb89a5",
        "md5": "1b6f1c5382a34c299aef4930e9b95bd5",
        "sha256": "a9d8f9d035ca9ffab67f604ddb477dbdaea2441019b6b3a2b91f158d387a5b72"
      },
      "downloads": -1,
      "filename": "avenieca-python-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1b6f1c5382a34c299aef4930e9b95bd5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17435,
      "upload_time": "2023-01-17T15:38:39",
      "upload_time_iso_8601": "2023-01-17T15:38:39.258406Z",
      "url": "https://files.pythonhosted.org/packages/6a/be/07f7661322090a8de392f58f74ed2e5d6a1a633c33341e78fc52d7cb89a5/avenieca-python-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}