{
  "info": {
    "author": "Samuel Prevost",
    "author_email": "samuel.prevost@pm.me",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Tensor Type\n[![PyPI version](https://badge.fury.io/py/tensor_type.svg)](https://badge.fury.io/py/tensor_type)\n\nAnnotates shapes of PyTorch Tensors using type annotation in Python3, and provides optional runtime shape validation.\n\nThis comes in very handy when debugging complex programs that manipulate huge `torch.Tensor`s where shape (dimensions) vary widely and are hard to track down.\n\nI got tired of writing tons of `assert my_tensor.shape == (batch, channels, height, width)` over and over, so I made that utility, but then\nI got tired of copy/pasting it into every new projects from my Gist of it, so here I finally made it a library that I can pip install everywhere.\n\n## Getting started\n\n```sh\npip3 install tensor_type\n```\n\n`tensor_type` only works with PyTorch, but that's only because I make the annotation type inherit from `torch.Tensor` to satisfy static annotations.\n\n\n## Usage\n```python3\nfrom tensor_type import Tensor, Tensor3d, Tensor4d\nimport torch\n\n# You can use the type in function's signatures\n\ndef my_obscure_function(x: Tensor4d) -> Tensor3d:\n    return x.sum(dim=3)/x.mean()\n\nt = my_obscure_function(x=torch.rand(3,2,4,2))\n\n# You can check the shape with an explicit assert\nassert Tensor3d(t)\n\n# Or you can check it with the .check() method which will produce a nicer error message\nTensor3d.check(t)\n\n# Check specific shape\nassert Tensor[3, 2, 4](t)\n\n# This will match no matter the size of the second axis\nassert Tensor[3, :, 4](t)\n\nbatch = 64\nchannels = 3\nh, w = 256, 512\n\n# You can statically annotate the shape like so\n# This WILL NOT be checked at run time, it's just for clarity\n\nmy_tensor: Tensor[batch, channels, h, w] = load_images(...)\n\n# You can assert it later like so:\nassert Tensor[batch, channels, h, w](my_tensor)\n\n# You can define new \"types\" like so:\nImageBatch = Tensor[64, 3, :, :]\n\n# And then use the new type\nassert ImageBatch(torch.rand(64, 3, 256, 256))\nassert ImageBatch(torch.rand(64, 3, 512, 512))\nassert not ImageBatch(torch.rand(64, 1, 256, 256))\n```\n\n## Development\n\nTo install the latest version from Github, run:\n\n```\ngit clone git@github.com:sam1902/tensor_type.git tensor_type\ncd tensor_type\npip3 install -U .\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sam1902/tensor_type",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tensor-type",
    "package_url": "https://pypi.org/project/tensor-type/",
    "platform": "",
    "project_url": "https://pypi.org/project/tensor-type/",
    "project_urls": {
      "Homepage": "https://github.com/sam1902/tensor_type"
    },
    "release_url": "https://pypi.org/project/tensor-type/0.1.0/",
    "requires_dist": [
      "torch"
    ],
    "requires_python": "",
    "summary": "Annotates shapes of PyTorch Tensors using type annotation in Python3, and provides optional runtime shape validation.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11172497,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e11516a7bb4704e64ecaade0b3af80647b213d13eafb01e74c9caf556b207e9",
          "md5": "556836f581ab2165b96a9c93183ae4e6",
          "sha256": "b18328776771fb88b2e042ded4cc83523758c1fda345de7d847d59016b331e4e"
        },
        "downloads": -1,
        "filename": "tensor_type-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "556836f581ab2165b96a9c93183ae4e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5107,
        "upload_time": "2021-08-13T16:03:38",
        "upload_time_iso_8601": "2021-08-13T16:03:38.374513Z",
        "url": "https://files.pythonhosted.org/packages/2e/11/516a7bb4704e64ecaade0b3af80647b213d13eafb01e74c9caf556b207e9/tensor_type-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f5ca73971c3d34ea6ae8f35fdc9f1d32f2c0b0e85d13e7dd34f6543c88c77f9",
          "md5": "40d26b80a3f8a62d3b04fe171b41ffc1",
          "sha256": "01c0f3a66daa5d0f81810e1e6ede91fa45fc3096d44d93d66ef33be8ee49e2e1"
        },
        "downloads": -1,
        "filename": "tensor_type-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "40d26b80a3f8a62d3b04fe171b41ffc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4702,
        "upload_time": "2021-08-13T16:03:40",
        "upload_time_iso_8601": "2021-08-13T16:03:40.013674Z",
        "url": "https://files.pythonhosted.org/packages/4f/5c/a73971c3d34ea6ae8f35fdc9f1d32f2c0b0e85d13e7dd34f6543c88c77f9/tensor_type-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e11516a7bb4704e64ecaade0b3af80647b213d13eafb01e74c9caf556b207e9",
        "md5": "556836f581ab2165b96a9c93183ae4e6",
        "sha256": "b18328776771fb88b2e042ded4cc83523758c1fda345de7d847d59016b331e4e"
      },
      "downloads": -1,
      "filename": "tensor_type-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "556836f581ab2165b96a9c93183ae4e6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5107,
      "upload_time": "2021-08-13T16:03:38",
      "upload_time_iso_8601": "2021-08-13T16:03:38.374513Z",
      "url": "https://files.pythonhosted.org/packages/2e/11/516a7bb4704e64ecaade0b3af80647b213d13eafb01e74c9caf556b207e9/tensor_type-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4f5ca73971c3d34ea6ae8f35fdc9f1d32f2c0b0e85d13e7dd34f6543c88c77f9",
        "md5": "40d26b80a3f8a62d3b04fe171b41ffc1",
        "sha256": "01c0f3a66daa5d0f81810e1e6ede91fa45fc3096d44d93d66ef33be8ee49e2e1"
      },
      "downloads": -1,
      "filename": "tensor_type-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "40d26b80a3f8a62d3b04fe171b41ffc1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4702,
      "upload_time": "2021-08-13T16:03:40",
      "upload_time_iso_8601": "2021-08-13T16:03:40.013674Z",
      "url": "https://files.pythonhosted.org/packages/4f/5c/a73971c3d34ea6ae8f35fdc9f1d32f2c0b0e85d13e7dd34f6543c88c77f9/tensor_type-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}