{
  "info": {
    "author": "Som Energia SCCL",
    "author_email": "itcrowd@somenergia.coop",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "description": "# Redasher\n\nThis tool manages Redash objects as files,\nenabling version control and having development environments.\n\nThe purpose of this tool is to serialize [Redash](http://redash.io) objects\n(dashboards, queries, visualizations...)\ninto the filesystem so that they can be maintained using tools like Git.\nYou might use that to keep track of the changes with tools like git, or\nyou can even modify those objects with a text editor and update your instance.\nBy tracking a second Redash instance you can use this tool to syncronize objects among them.\nThis is useful, for example, to make and test changes in a development  environment\nand eventually apply those changes into a production one.\n\n\n## Usage\n\nLets start by defining our production server, by setting up the base url\nand the API key of the user we will use to interact.\n\n```bash\nredasher setup prod http://redash.mycompany.com:8012 a2xcvvr23werwcdvhtsdfa23424df\n```\n\nA configuration file in `~/.config/redash_gitstudio/config.yaml` will be created.\n\nThen lets download all the objects from `prod`\n\n```bash\nredasher checkout prod\n```\n\nThis will create the following directory structure in the current directory:\n\n```\nmaps/\nmaps/prod.yaml # mappings from local files to object ids in `prod` server\ndashboards/<name>/metadata.yaml # dashboards metadata\ndashboards/<name>/widgets/<name>.yaml # dashboard widgets\nqueries/<name>/query.sql # The query string file\nqueries/<name>/metadata.yaml # The rest of the metadata\nqueries/<name>/visualizations/<name>.yaml # query visualizatons\n```\n\nYou can put those files under the wing of a version control system like git,\nand keep track of your object changes in redash\nby running checkout and committing resulting files at any step.\n\nYou can also modify the content of those files\nand then upload them back to the server:\n\n```bash\nredasher upload prod dashboard/my-dashboard\n```\n\nAnother common workflow is working with an internal server\nto develop without disturbing production users and\nsynchronize when you are done with the changes.\n\nFor that you must define a new server:\n\n```bash\nredasher setup dev http://localhost:8080 sdfa23424dfa2xcvvr23werwcdvht\n```\n\nRedash datasource objects are considered readonly.\nIf you want to synchronize two servers, first you must\nmanually bind the datasource file object\nchecked out from the first server, to the\nid of an equivalent datasource you created in the second server.\n\n```bash\nredasher bind dev datasource/my-database.yaml 3\n```\n\nThen you can upload the objects to create them.\n\n```bash\nredasher upload dev dashboard/my-dashboard\n```\n\nFrom now on, succesive file uploads to the new server\nwill be updates on the same objects.\n\n\n## Understanding maps/\n\nThe directory `maps` contains a file for each server.\nSuch files relate server object id's to file objects.\nSuch a relation is set the first time you checkout an object from a server,\nor the first time you upload an object into a server and thus creating a new object.\n\nWhen you upload a file object to a server.\nIf the file object already has a bound id on the server,\nthe object is updated.\nOtherwise a new object is created.\n\nLikewise, whenever you checkout an object from a server,\nif the map exists, the content will be dump in the same file.\nIf not, a proper file name will be generated based on the slug\nof the current object name.\nIf the name already exists a serial number is added.\n\nYou can also set a server mapping by hand with the `bind` subcommand\nlike in the previous example with the datasource.\n\n\n\n## Design\n\n### Decision Log\n\n- Sluggified names are used as object file names since they are more easily spotted than a hash\n- Sluggified names are keept even if the name of the object changes later\n- Non composition relations are mapped with an attribute refering the object path names instead of ids.\n  - Numeric id's from server are instance dependant\n  - A common numeric serialization id would solve that but it would be harder to search and replace\n- Composition relations (dashboard -> widgets, query -> visualizations) are\n  mapped as directory hierarchy. This eases copying objects as a whole.\n- Ids in each redash instance are different so \"instance id\" to \"object file\" maps should be tracked per instance\n- While production object mapping should be part of a shared repository,\n  private development servers might have sense for a single developer.\n  So, file-id maps should be in different files for each file so you can\n  decide which servers are shared in a repository.\n- Permanent mapping from id and a file object should be stablished:\n  - The first time you download a given server object with no previous bound in that server\n  - The first time you upload a file object to a given server with no previous bound in that server\n- Successive uploads and downloads should keep that binding\n  - Uploading a file object to a server where it has a bound, should update the object instead of creating it\n  - Downloading an object from a server having already a bound to a file object, overwrites the same file object\n- Data sources are mapped as well but not updated on upload, since they might point to different database configurations depending on the instance.\n  - Thus, before uploading objects refering to a datasource into a new instance,\n    it has to be created in the instance and bound using the bind command before uploading.\n- Server configuration is not to be committed, and apikey should be kept private,\n  thus it has been separated from the server id map into a user configuration file.\n- Users might be different in production and testing, a dashboard could\n  be created using a different user. \n  Thus, creation and modification users are not kept\n- Object creation and modification dates are not to be kept, or do they? (they might be used to compare update times and detecting overwritten changes)\n- Cascading uploads\n  - Uploading a dashboard uploads all its widgets\n  - Uploading a widget uploads its dashboard and its visualization\n  - Uploading a visualization uploads its query\n  - Uploading a query uploads its datasource, its visualizations and any param query\n\n### TODO\n\n- Partial checkouts\n- Alerts and destinations\n- Groups\n- Detecting overwritting changes on upload\n- git ops executed automatically",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/som-energia/redasher",
    "keywords": "",
    "license": "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "redasher",
    "package_url": "https://pypi.org/project/redasher/",
    "platform": "",
    "project_url": "https://pypi.org/project/redasher/",
    "project_urls": {
      "Homepage": "https://github.com/som-energia/redasher"
    },
    "release_url": "https://pypi.org/project/redasher/1.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Manage Redash objects as files, enabling version control and development environments",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10238201,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5e39bab23f0531c4288f607a673dc2e484ac4cd15a8c2045aa36b41a7ebe231",
          "md5": "dd74a890efe0a43c23da62a71460fdc2",
          "sha256": "60e509bed019a57b44cb58e77e77e0b2aec4235648ecc2faa7381da34889e5ac"
        },
        "downloads": -1,
        "filename": "redasher-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dd74a890efe0a43c23da62a71460fdc2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14422,
        "upload_time": "2021-05-03T07:21:04",
        "upload_time_iso_8601": "2021-05-03T07:21:04.813313Z",
        "url": "https://files.pythonhosted.org/packages/f5/e3/9bab23f0531c4288f607a673dc2e484ac4cd15a8c2045aa36b41a7ebe231/redasher-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3de3b14a8bacb89a4ddac22d6dc01a4d6b28380b89eacfdeb2f6fc531601990b",
          "md5": "dc4837e232692f73d8c4e58dc16ef2c1",
          "sha256": "7453cb6f4c76c223c5aa4281aa2a59f358b596e66fbff707cc4d016e03aa3b0b"
        },
        "downloads": -1,
        "filename": "redasher-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dc4837e232692f73d8c4e58dc16ef2c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26525,
        "upload_time": "2021-05-03T07:45:06",
        "upload_time_iso_8601": "2021-05-03T07:45:06.836974Z",
        "url": "https://files.pythonhosted.org/packages/3d/e3/b14a8bacb89a4ddac22d6dc01a4d6b28380b89eacfdeb2f6fc531601990b/redasher-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c205bd65a4ce6373199858a9cf9bdab85ea25db87dfb661c5382fa0a7072718",
          "md5": "64ddbd2c3c8c6dba49b6e7124e8d00c6",
          "sha256": "55bfd31d75232db7bc75dc1dc34301c41012507acf016b3e10beb0b7f7982170"
        },
        "downloads": -1,
        "filename": "redasher-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "64ddbd2c3c8c6dba49b6e7124e8d00c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26645,
        "upload_time": "2021-05-03T07:51:43",
        "upload_time_iso_8601": "2021-05-03T07:51:43.630513Z",
        "url": "https://files.pythonhosted.org/packages/7c/20/5bd65a4ce6373199858a9cf9bdab85ea25db87dfb661c5382fa0a7072718/redasher-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92dc94ee4532b84824ea0f3e9f19056294a48d663aaad599e05782b8cfd69255",
          "md5": "fa3ef5ed26655f345ecc5a6e638c904a",
          "sha256": "3805097235601629c021e49367427bd77b3a2be7827e87e57af250b1da177f80"
        },
        "downloads": -1,
        "filename": "redasher-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fa3ef5ed26655f345ecc5a6e638c904a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26667,
        "upload_time": "2021-05-03T08:25:41",
        "upload_time_iso_8601": "2021-05-03T08:25:41.784480Z",
        "url": "https://files.pythonhosted.org/packages/92/dc/94ee4532b84824ea0f3e9f19056294a48d663aaad599e05782b8cfd69255/redasher-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92dc94ee4532b84824ea0f3e9f19056294a48d663aaad599e05782b8cfd69255",
        "md5": "fa3ef5ed26655f345ecc5a6e638c904a",
        "sha256": "3805097235601629c021e49367427bd77b3a2be7827e87e57af250b1da177f80"
      },
      "downloads": -1,
      "filename": "redasher-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "fa3ef5ed26655f345ecc5a6e638c904a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 26667,
      "upload_time": "2021-05-03T08:25:41",
      "upload_time_iso_8601": "2021-05-03T08:25:41.784480Z",
      "url": "https://files.pythonhosted.org/packages/92/dc/94ee4532b84824ea0f3e9f19056294a48d663aaad599e05782b8cfd69255/redasher-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}