{
  "info": {
    "author": "Maxim Bonnaerens",
    "author_email": "maxim@bonnaerens.be",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Visual Wake Words Dataset\nPython library to work with the [Visual Wake Words Dataset](https://arxiv.org/abs/1906.05721), \ncomparable to [pycococools](https://github.com/cocodataset/cocoapi) for the COCO dataset.\n\n`pyvww.utils.VisualWakeWords` inherits from `pycocotools.coco.COCO` and can be used in an similar fashion.\n\n`pyvww.pytorch.VisualWakeWordsClassification` is a pytorch `Dataset` which can be used like any \nimage classification dataset.\n\n ---\n ### Installation\n The code is implemented in Python 3.7 and can be installed with pip:\n ```bash\n pip install pyvww\n ```\n\n ### Usage\n The Visual Wake Words Dataset is derived from the publicly available [COCO](cocodataset.org/#/home) dataset.\n To download the COCO dataset use the script `download_coco.sh`\n ```bash\nbash scripts/download_mscoco.sh path-to-COCO-dataset year\n```\nWhere `year` is an optional argument that can be either 2014 (default) or 2017.\n\nThe Visual Wake Words Dataset evaluates the accuracy on the [minival image ids](https://raw.githubusercontent.com/tensorflow/models/master/research/object_detection/data/mscoco_minival_ids.txt),\nand for training uses the remaining 115k images of the COCO training/validation dataset.\n\nTo create COCO annotation files that converts the 2014 or 2017 split to the minival split use:\n`scripts/create_coco_train_minival_split.py`\n```bash\nTRAIN_ANNOTATIONS_FILE=\"path-to-mscoco-dataset/annotations/instances_train2014.json\"\nVAL_ANNOTATIONS_FILE=\"path-to-mscoco-dataset/annotations/instances_val2014.json\"\nDIR=\"path-to-mscoco-dataset/annotations/\"\npython scripts/create_coco_train_minival_split.py \\\n  --train_annotations_file=\"${TRAIN_ANNOTATIONS_FILE}\" \\\n  --val_annotations_file=\"${VAL_ANNOTATIONS_FILE}\" \\\n--output_dir=\"${DIR}\"\n```\n(2014 can be replaced by 2017 if you downloaded the 2017 dataset)\n\nThe process of creating the Visual Wake Words dataset from COCO dataset is as follows.\nEach image is assigned a label 1 or 0. \nThe label 1 is assigned as long as it has at least one bounding box corresponding \nto the object of interest (e.g. person) with the box area greater than a certain threshold \n(e.g. 0.5% of the image area).\n\nTo generate the new annotations, use the script `scripts/create_visualwakewords_annotations.py`.\n```bash\nMAXITRAIN_ANNOTATIONS_FILE=\"path-to-mscoco-dataset/annotations/instances_maxitrain.json\"\nMINIVAL_ANNOTATIONS_FILE=\"path-to-mscoco-dataset/annotations/instances_minival.json\"\nVWW_OUTPUT_DIR=\"new-path-to-visualwakewords-dataset/annotations/\"\npython scripts/create_visualwakewords_annotations.py \\\n  --train_annotations_file=\"${MAXITRAIN_ANNOTATIONS_FILE}\" \\\n  --val_annotations_file=\"${MINIVAL_ANNOTATIONS_FILE}\" \\\n  --output_dir=\"${VWW_OUTPUT_DIR}\" \\\n  --threshold=0.005 \\\n  --foreground_class='person'\n```\n\nThe generated annotations follow the [COCO Data format](http://cocodataset.org/#format-data).\n```\n{\n  \"info\" : info, \n  \"images\" : [image], \n  \"annotations\" : [annotation], \n  \"licenses\" : [license],\n}\n\ninfo{\n  \"year\" : int, \n  \"version\" : str, \n  \"description\" : str, \n  \"url\" : str, \n}\n\nimage{\n  \"id\" : int, \n  \"width\" : int, \n  \"height\" : int, \n  \"file_name\" : str, \n  \"license\" : int, \n  \"flickr_url\" : str, \n  \"coco_url\" : str, \n  \"date_captured\" : datetime,\n}\n\nlicense{\n  \"id\" : int, \n  \"name\" : str, \n  \"url\" : str,\n}\n\nannotation{\n  \"id\" : int, \n  \"image_id\" : int, \n  \"category_id\" : int, \n  \"area\" : float, \n  \"bbox\" : [x,y,width,height], \n  \"iscrowd\" : 0 or 1,\n}\n```\n\n### Pytorch Dataset\n\nThe `pyvww.pytorch.VisualWakeWordsClassification` can be used in pytorch like any other pytorch image classification\ndataset such as MNIST or ImageNet.\n\n```python\nimport torch\nimport pyvww\n\ntrain_dataset = pyvww.pytorch.VisualWakeWordsClassification(root=\"path-to-mscoco-dataset/all\", \n                    annFile=\".../visualwakewords/annotations/instances_train.json\")\n```\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Mxbonn/visualwakewords",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyvww",
    "package_url": "https://pypi.org/project/pyvww/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyvww/",
    "project_urls": {
      "Homepage": "https://github.com/Mxbonn/visualwakewords"
    },
    "release_url": "https://pypi.org/project/pyvww/0.1.1/",
    "requires_dist": [
      "pycocotools",
      "torchvision"
    ],
    "requires_python": "",
    "summary": "Python API to work with the Visual Wake Words Dataset.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8314370,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42aeade768da67ab85065a01870a0d09c1615b27e63cd4f1b2135e401e365112",
          "md5": "cf615e78ff992b51dae8f5ba136e6c7e",
          "sha256": "d1f827901e92b749558f0188b0d02473c822e39584dc1e33ec2a55204815bf41"
        },
        "downloads": -1,
        "filename": "pyvww-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf615e78ff992b51dae8f5ba136e6c7e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8964,
        "upload_time": "2019-07-09T07:36:54",
        "upload_time_iso_8601": "2019-07-09T07:36:54.496017Z",
        "url": "https://files.pythonhosted.org/packages/42/ae/ade768da67ab85065a01870a0d09c1615b27e63cd4f1b2135e401e365112/pyvww-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6af200167f36bee6989d2a321313467d2c2791f3c51938792bed91babf40f8d5",
          "md5": "6933b140ca1114e4863ac58f0a11b87b",
          "sha256": "2ebed1557f5df29452ec4ff6ca1246060e2f447cc68e50abd81ea1ac0fa054ee"
        },
        "downloads": -1,
        "filename": "pyvww-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6933b140ca1114e4863ac58f0a11b87b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4162,
        "upload_time": "2019-07-09T07:36:56",
        "upload_time_iso_8601": "2019-07-09T07:36:56.799182Z",
        "url": "https://files.pythonhosted.org/packages/6a/f2/00167f36bee6989d2a321313467d2c2791f3c51938792bed91babf40f8d5/pyvww-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3ab1bf6a32048b845bd84e445413279c36fd0716d65cbab848d3deb1abca5a2",
          "md5": "22e592f5b559925c5ddf11ceb9dc37bd",
          "sha256": "eb721e3d5f73d176f6262e7c04c1d12fb92aa3fa8f95c2b5a9a3c77bd0662eca"
        },
        "downloads": -1,
        "filename": "pyvww-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22e592f5b559925c5ddf11ceb9dc37bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8941,
        "upload_time": "2020-10-01T09:00:33",
        "upload_time_iso_8601": "2020-10-01T09:00:33.948133Z",
        "url": "https://files.pythonhosted.org/packages/b3/ab/1bf6a32048b845bd84e445413279c36fd0716d65cbab848d3deb1abca5a2/pyvww-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e78ae1c8cf7e6f35c051d4de9c3b2285582bc7f81d882a55b5288332340a15c9",
          "md5": "e561016cec189fecad88a1a8fad9d01b",
          "sha256": "5d4b9d3cf2c0ffed130c659c933fdb01278f2b0affd47818b971846e7736aa56"
        },
        "downloads": -1,
        "filename": "pyvww-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e561016cec189fecad88a1a8fad9d01b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4425,
        "upload_time": "2020-10-01T09:00:36",
        "upload_time_iso_8601": "2020-10-01T09:00:36.022666Z",
        "url": "https://files.pythonhosted.org/packages/e7/8a/e1c8cf7e6f35c051d4de9c3b2285582bc7f81d882a55b5288332340a15c9/pyvww-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3ab1bf6a32048b845bd84e445413279c36fd0716d65cbab848d3deb1abca5a2",
        "md5": "22e592f5b559925c5ddf11ceb9dc37bd",
        "sha256": "eb721e3d5f73d176f6262e7c04c1d12fb92aa3fa8f95c2b5a9a3c77bd0662eca"
      },
      "downloads": -1,
      "filename": "pyvww-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "22e592f5b559925c5ddf11ceb9dc37bd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8941,
      "upload_time": "2020-10-01T09:00:33",
      "upload_time_iso_8601": "2020-10-01T09:00:33.948133Z",
      "url": "https://files.pythonhosted.org/packages/b3/ab/1bf6a32048b845bd84e445413279c36fd0716d65cbab848d3deb1abca5a2/pyvww-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e78ae1c8cf7e6f35c051d4de9c3b2285582bc7f81d882a55b5288332340a15c9",
        "md5": "e561016cec189fecad88a1a8fad9d01b",
        "sha256": "5d4b9d3cf2c0ffed130c659c933fdb01278f2b0affd47818b971846e7736aa56"
      },
      "downloads": -1,
      "filename": "pyvww-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e561016cec189fecad88a1a8fad9d01b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4425,
      "upload_time": "2020-10-01T09:00:36",
      "upload_time_iso_8601": "2020-10-01T09:00:36.022666Z",
      "url": "https://files.pythonhosted.org/packages/e7/8a/e1c8cf7e6f35c051d4de9c3b2285582bc7f81d882a55b5288332340a15c9/pyvww-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}