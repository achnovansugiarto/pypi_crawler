{
  "info": {
    "author": "Michele Cappellari",
    "author_email": "michele.cappellari@physics.ox.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "The AdaMet Package\n==================\n\n**Adaptive Metropolis for Bayesian Analysis**\n\n.. image:: https://img.shields.io/pypi/v/adamet.svg\n        :target: https://pypi.org/project/adamet/\n.. image:: https://img.shields.io/badge/arXiv-1208.3522-orange.svg\n    :target: https://arxiv.org/abs/1208.3522\n.. image:: https://img.shields.io/badge/DOI-10.1093/mnras/stt562-green.svg\n    :target: https://doi.org/10.1093/mnras/stt562\n\nAdaMet is a well-tested Python implementation by \n`Cappellari et al. (2013) <https://ui.adsabs.harvard.edu/abs/2013MNRAS.432.1709C>`_ \nof the Adaptive Metropolis algorithm by\n`Haario H., Saksman E., Tamminen J. (2001) <https://doi.org/10.2307/3318737>`_.\nIt was used in a number of published papers in the astrophysics literature.\n\n.. contents:: :depth: 1\n\nAttribution\n-----------\n\nIf you use this software for your research, please cite at least\n`Cappellari et al. (2013)`_ where the implementation was introduced. \nThe BibTeX entry for the paper is::\n\n    @ARTICLE{Cappellari2013a,\n        author = {{Cappellari}, M. and {Scott}, N. and {Alatalo}, K. and\n            {Blitz}, L. and {Bois}, M. and {Bournaud}, F. and {Bureau}, M. and\n            {Crocker}, A.~F. and {Davies}, R.~L. and {Davis}, T.~A. and {de Zeeuw},\n            P.~T. and {Duc}, P.-A. and {Emsellem}, E. and {Khochfar}, S. and\n            {Krajnovi{\\'c}}, D. and {Kuntschner}, H. and {McDermid}, R.~M. and\n            {Morganti}, R. and {Naab}, T. and {Oosterloo}, T. and {Sarzi}, M. and\n            {Serra}, P. and {Weijmans}, A.-M. and {Young}, L.~M.},\n        title = \"{The ATLAS$^{3D}$ project - XV. Benchmark for early-type\n            galaxies scaling relations from 260 dynamical models: mass-to-light\n            ratio, dark matter, Fundamental Plane and Mass Plane}\",\n        journal = {MNRAS},\n        eprint = {1208.3522},\n        year = 2013,\n        volume = 432,\n        pages = {1709-1741},\n        doi = {10.1093/mnras/stt562}\n    }\n\nInstallation\n------------\n\ninstall with::\n\n    pip install adamet\n\nWithout writing access to the global ``site-packages`` directory, use::\n\n    pip install --user adamet\n\nDocumentation\n-------------\n\nThe documentation is in the docstring of the file ``adamet.py``\nor on `PyPi <https://pypi.org/project/adamet/>`_.\n\n\n\n\n\n\n\n\n\n\n\n\nAdaMet Purpose\n--------------\n\nThis is the implementation by\n`Cappellari et al. (2013) <https://ui.adsabs.harvard.edu/abs/2013MNRAS.432.1709C>`_\nof the Adaptive Metropolis algorithm by\n`Haario H., Saksman E., Tamminen J. (2001) <https://doi.org/10.2307/3318737>`_\nfor Bayesian analysis.\n\nUsage Example\n-------------\n\nTo learn how to use ``AdaMet`` run the example program in the\n``adamet/examples`` directory, within the main package installation\nfolder inside ``site-packages``, and read the detailed documentation\nin the docstring of the file ``adamet.py`` or on\n`PyPi <https://pypi.org/project/adamet/>`_.\n\nNote: For dimensions = 1 to 6, the optimal acceptance rates are\n`rate = [0.441, 0.352, 0.316, 0.279, 0.275, 0.266]`\nand the asymptotic value for many parameters is 23%\n\nCalling Sequence\n----------------\n\n.. code-block:: python\n\n    pars, lnprob = adamet(lnprob_fun, pars0, sigpars0, bounds, nstep,\n       labels=None, nprint=100, quiet=False, fignum=None, plot=True,\n       labels_scaling=1, seed=None, args=(), kwargs={})\n\nInput Parameters\n----------------\n\nlnprob_fun: callable\n    This function returns the natural logarithm of the conditional\n    probability of the model, given the data::\n\n        P(model | data) ~ P(data | model) P(model)\n\npars0: array_like with shape (n,)\n    vector with the mean of the multivariate Gaussian describing the\n    proposal distribution from which samples are drawn.\n    For maximum efficiency, this initial Gaussian should approximate the\n    posterior distribution. This suggests adopting as `pars0` an initial\n    guess for the model best-fitting parameters.\nsigpars0: array_like with shape (n,)\n    vector with the dispersion `sigma` of the multivariate Gaussian\n    describing the proposal distribution.\n    For maximum efficiency, this initial Gaussian should approximate the\n    posterior distribution. This suggests adopting as `sigpars` an initial\n    guess of the uncertainty in the model parameters `pars`.\nbounds: 2-tuple of array_like\n    Lower and upper bounds on independent variables. Each array must match\n    the size of `pars`. The model probability is set to zero outside the\n    bounds. This keyword is also used to define the plotting ranges.\nnsteps: integer\n    Number of attempted moves in the chain. Typical numbers are a few\n    thousands `nsteps`.\n\n\nOptional Keywords\n-----------------\n\nlabels: array_like with shape (n,)\n    String labels for each parameter to be used in the `corner_plot`\nnprint: integer\n    Specifies the frequency for the intermediate plots, in moves.\n    A typical value could be `nstep/10`.\nplot: boolean, optional\n    Specifies whether to show a plot of the results or not.\nfignum: integer, optional\n    Specifies the figure number for the plot.\nlabels_scaling: float\n    Relative scaling for the plotting labels.\nseed: integer\n    Seed for the random generator. Specify this value for a repeatable\n    random sequence.\nargs, kwargs: tuple and dict, optional\n    Additional arguments passed to `lnprob_fun`. Both empty by default.\n    The calling signature is `lnprob_fun(x, *args, **kwargs)`.\n\nOutput Parameters\n-----------------\n\npars: array_like with shape (nsteps, n)\n    Posterior distribution for the model parameters\nlnprob: array_like with shape (nsteps, n)\n    Logarithm of the probbaility of the model, given the data, for each set\n    of parameters in the posterior distribution `pars`.\n\n\n\nLicense\n-------\n\nOther/Proprietary License\n\nCopyright (c) 2012-2020 Michele Cappellari\n\nThis software is provided as is without any warranty whatsoever.\nPermission to use, for non-commercial purposes is granted.\nPermission to modify for personal or internal use is granted,\nprovided this copyright and disclaimer are included in all \ncopies of the software. All other rights are reserved.\nIn particular, redistribution of the code is not allowed.",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://purl.org/cappellari/software",
    "keywords": "",
    "license": "Other/Proprietary License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "adamet",
    "package_url": "https://pypi.org/project/adamet/",
    "platform": "",
    "project_url": "https://pypi.org/project/adamet/",
    "project_urls": {
      "Homepage": "http://purl.org/cappellari/software"
    },
    "release_url": "https://pypi.org/project/adamet/2.0.9/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "AdaMet: Adaptive Metropolis for Bayesian Analysis",
    "version": "2.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8346417,
  "releases": {
    "2.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48042ecabe60443e6833e58126aa3ce3a792f33d156a32f326c6e98b7796ae7f",
          "md5": "523090c284c4ab0dd2f34ffb68609354",
          "sha256": "e67cd3d080d7d1915716fab4b8accf8a0187842fb28a00753c51c4552ea5cd8b"
        },
        "downloads": -1,
        "filename": "adamet-2.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "523090c284c4ab0dd2f34ffb68609354",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12454,
        "upload_time": "2018-05-21T09:12:32",
        "upload_time_iso_8601": "2018-05-21T09:12:32.300740Z",
        "url": "https://files.pythonhosted.org/packages/48/04/2ecabe60443e6833e58126aa3ce3a792f33d156a32f326c6e98b7796ae7f/adamet-2.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0479e6541cc123edbffe7ac016034ad9aed9bc4cfdf21696d52cff3856fd6105",
          "md5": "ffeab5064a98824416977b51401033c8",
          "sha256": "570e8d5433f206889c6ac8c86031d95372e0084cb8eb11322dfc01605c99e0c3"
        },
        "downloads": -1,
        "filename": "adamet-2.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "ffeab5064a98824416977b51401033c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16637,
        "upload_time": "2020-08-11T18:38:31",
        "upload_time_iso_8601": "2020-08-11T18:38:31.145998Z",
        "url": "https://files.pythonhosted.org/packages/04/79/e6541cc123edbffe7ac016034ad9aed9bc4cfdf21696d52cff3856fd6105/adamet-2.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40907b1175702b1810a1f36493de99ce679b557a7bea61f08ae41f7d94cc10f9",
          "md5": "b295d4cc01079d7db056f6ba82c57c92",
          "sha256": "1b59f7eb1d193ff201a24e66c7872dfc847e344e43cfe94f75bb8ad066afeef2"
        },
        "downloads": -1,
        "filename": "adamet-2.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "b295d4cc01079d7db056f6ba82c57c92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16792,
        "upload_time": "2020-10-05T23:35:32",
        "upload_time_iso_8601": "2020-10-05T23:35:32.256227Z",
        "url": "https://files.pythonhosted.org/packages/40/90/7b1175702b1810a1f36493de99ce679b557a7bea61f08ae41f7d94cc10f9/adamet-2.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "40907b1175702b1810a1f36493de99ce679b557a7bea61f08ae41f7d94cc10f9",
        "md5": "b295d4cc01079d7db056f6ba82c57c92",
        "sha256": "1b59f7eb1d193ff201a24e66c7872dfc847e344e43cfe94f75bb8ad066afeef2"
      },
      "downloads": -1,
      "filename": "adamet-2.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "b295d4cc01079d7db056f6ba82c57c92",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16792,
      "upload_time": "2020-10-05T23:35:32",
      "upload_time_iso_8601": "2020-10-05T23:35:32.256227Z",
      "url": "https://files.pythonhosted.org/packages/40/90/7b1175702b1810a1f36493de99ce679b557a7bea61f08ae41f7d94cc10f9/adamet-2.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}