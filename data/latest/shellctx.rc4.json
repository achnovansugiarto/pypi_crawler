{
  "info": {
    "author": "Roger D. Serwy",
    "author_email": "roger.serwy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Shells",
      "Topic :: Utilities"
    ],
    "description": "# shellctx\n\nShell context helper for saving, recalling, and executing information from\na persistent dictionary.\n\n\n## Motivation\n\nSetting environment variables and aliases (`.bashrc`, `.cshrc`, etc.)\nis useful when you have an established workflow with known common actions.\nThis program is for discovering what that workflow should be, when the needed\nworking directories and commands are not fully known just yet. All shell\ninstances have access to the work-in-progress context dictionary.\n\n\n## Usage\n\nThe `ctx` command is the entry into the program. It behaves like a dictionary\nthat can get/set/delete keys and values.\n\n    $ ctx set x 123\n    $ ctx get x\n    123\n\n    $ ctx del x\n\nIt can be used for storing a long directory for later use:\n\n    $ cd /very/long/directory/to/type/manually\n    $ ctx set project `pwd`\n\n    $ cd \"`ctx get project`\"\n\nIt can store long commands for later use:\n\n    $ ctx set server '/usr/bin/python3 -m http.server'\n    $ ctx shell server\n    Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...\n\n\nIt can also save and load environment variables:\n\n    $ ctx set mypath $PATH\n    $ export PATH=\"`ctx get mypath`\"\n\nBy default, `ctx` shows the current context dictionary and the\nsorted timestamped (newest on top) entries:\n\n    $ ctx\n    Using context main\n    There are 2 entries.\n\n    2020-01-01T23:24:40.893719    server = python3 -m http.server\n    2020-01-01T23:07:57.792251    home = /home/serwy\n\n\n## Available Commands\n\n`copy` - copies a key, updates timestamp\n\n    $ ctx copy home home2\n\n`rename` - renames a key, preserves timestamp\n\n    $ ctx rename home2 home3\n\n`items` - provides a sort-by-timestamp display of key-values\n\n    $ ctx items\n    home=/home/serwy\n    server=python3 -m http.server\n\n`keys` - provides a list of keys\n\n    $ ctx keys\n    home\n    server\n\n`log` - print out a log of changes to the context dictionary\n\n    $ ctx log\n    ['2020-01-01T22:51:50.180685', 'set', 'home', '/home/serwy']\n    ['2020-01-01T22:52:01.008981', 'copy', 'home', 'home2']\n    ['2020-01-01T22:52:08.194826', 'rename', 'home2', 'home3']\n\n\n`switch` - switch the context dictionary, or print a list.\nNew contexts may be created this way.\n\n    $ ctx switch dev\n    switching to \"dev\" from \"main\"\n\n    $ ctx switch\n    * dev\n      main\n\n`shell` - uses the key as a command, and values are treated as\nadditional keys. The command string is passed to a shell.\n\n    $ ctx set port 9999\n    $ ctx shell server port\n    Serving HTTP on 0.0.0.0 port 9999 (http://0.0.0.0:9999/) ...\n\n`dryshell` - prints the command passed to the shell without executing\n\n    $ ctx dryshell server port\n    dryrun shell command: python3 -m http.server 9999\n\n`exec` - uses the key to get the executable, and the additional arguments\nare passed directly to the executable. This is like an alias.\n\n    $ ctx exec server 9999\n    Serving HTTP on 0.0.0.0 port 9999 (http://0.0.0.0:9999/) ...\n\n`dryexec` - prints the arguments passed to the executable without executing.\n\n    $ ctx dryexec server 9999\n    dryrun exec command: ['python3', '-m', 'http.server', '9999']\n\n`set` - set a key to a value\n\n    $ ctx set keyname value\n\n`get` - print the value for the given key\n\n    $ ctx get server\n    python3 -m http.server\n\n`del` - delete a key\n\n    $ ctx del keyname\n\n`setpath` - add the present working directory to the value when setting\nthe given key\n\n    $ ctx setpath keyname .bashrc\n    keyname=/home/serwy/.bashrc\n\n`args` - print out the arguments as seen by the program, quoted. This\nis useful when debugging argument quoting errors.\n\n    $ ctx args some arguments \"kept together\"\n    sys.argv[:]\n        0 = '/home/serwy/.local/bin/ctx'\n        1 = 'args'\n        2 = 'some'\n        3 = 'arguments'\n        4 = 'kept together'\n\n`entry` - auto-increment the maximum suffix for a key before setting.\nThis is useful for storing quick notes.\n\n    $ ctx entry _note This is an observation\n    _note_001=This is an observation\n\n    $ ctx entry _note system A depends on system B\n    _note_002=system A depends on system B\n\n`now` - prints out the iso8601 time, filesystem safe.\nThis is useful for quickly appending a suffix to a file\n\n    $ ctx now\n    2020-01-01T193048.465660\n\n    $ cp myfile.txt ~/backup/myfile.txt_`ctx now`\n\n`update` - opens a given file for loading `key=value` data. Use a\nhyphen to read from stdin.\n\n    $ ctx switch env\n    $ env | ctx update -\n    $ ctx\n    Using context env\n    There are 6 entries.\n\n    2020-01-01T17:06:10.234052    _ = /usr/bin/env\n    2020-01-01T17:06:10.234040    PATH = /home/serwy/.local/bin:/usr/local/bin:/usr/bin\n    2020-01-01T17:06:10.234038    LC_ALL = en_US.UTF-8\n    2020-01-01T17:06:10.234028    DISPLAY = :0\n    2020-01-01T17:06:10.234012    HOME = /home/serwy\n    2020-01-01T17:06:10.233881    SHELL = /bin/bash\n\n## Environment Variables\n\n### `CTX_NAME`\n\nThe active context may be forced by setting the `CTX_NAME` environment variable.\n\nThis is useful when needing to dedicate a terminal to a particular context.\n\n### `CTX_VERBOSE`\n\nA flag to increase verbosity. It is an integer value of `0`, `1`, or more.\nIf undefined, it defaults to `0`.\n\n### `CTX_HOME`\n\nSet the directory containing the dictionaries and logs. If unset,\nit defaults to `~/.ctx/`.\n\n## Implementation details\n\nThe context dictionaries are stored in `~/.ctx/`\nThe `.json` files are the context dictionaries.\nThe `.log` files are the change logs.\n\nThe `_name.txt` file contains the name of the active context.\nIf missing, defaults to `main`.\n\n\n## Install\n\nEnsure that the `ctx` script can be found on your system `PATH`,\ne.g. `~/.local/bin`.\n\n    pip3 install shellctx\n\nor\n\n    python3 setup.py install\n\nIf you just want the script directly, you can download and copy\n`shellctx/ctx.py` as `ctx` somewhere on your `$PATH` and apply `chmod +x`.\nThe direct link is: https://raw.githubusercontent.com/serwy/shellctx/latest/shellctx/ctx.py\n\n    curl  https://raw.githubusercontent.com/serwy/shellctx/latest/shellctx/ctx.py > ctx\n    chmod +x ctx\n\n## License\n\nLicensed under the GNU General Public License, Version 3.0\n\n\n## See also\n\n* https://en.wikipedia.org/wiki/ISO_8601\n* https://xkcd.com/1179/",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/serwy/shellctx",
    "keywords": "",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "shellctx",
    "package_url": "https://pypi.org/project/shellctx/",
    "platform": "",
    "project_url": "https://pypi.org/project/shellctx/",
    "project_urls": {
      "Homepage": "http://github.com/serwy/shellctx"
    },
    "release_url": "https://pypi.org/project/shellctx/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "shell context helper",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7635274,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fa5b32560e155a09561c695e340ce7b4ebb4592ed36c6ff8cf9257c52bd1023",
          "md5": "f88a98d7a7d503a89767d1b69272d5bf",
          "sha256": "ce3918c1d58e1ead28ffce8391aa1e3d0a5e999d0cc5bd77b3b37cbdba318beb"
        },
        "downloads": -1,
        "filename": "shellctx-0.1.0.zip",
        "has_sig": false,
        "md5_digest": "f88a98d7a7d503a89767d1b69272d5bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7112,
        "upload_time": "2020-06-27T03:43:01",
        "upload_time_iso_8601": "2020-06-27T03:43:01.371478Z",
        "url": "https://files.pythonhosted.org/packages/1f/a5/b32560e155a09561c695e340ce7b4ebb4592ed36c6ff8cf9257c52bd1023/shellctx-0.1.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92903092a85ace2059ed371ad9f29c957f06fbf9e168f4b5214c530bfd58cbf8",
          "md5": "3b9ba1c3dbc5403d87abd32d25445559",
          "sha256": "994368c4e3a184292611ccd8554f8a153a3e300071984f44624ec636a696acc7"
        },
        "downloads": -1,
        "filename": "shellctx-0.1.1.zip",
        "has_sig": false,
        "md5_digest": "3b9ba1c3dbc5403d87abd32d25445559",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10153,
        "upload_time": "2020-06-27T03:51:45",
        "upload_time_iso_8601": "2020-06-27T03:51:45.315918Z",
        "url": "https://files.pythonhosted.org/packages/92/90/3092a85ace2059ed371ad9f29c957f06fbf9e168f4b5214c530bfd58cbf8/shellctx-0.1.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82773692bbd63311c26b38ee08e280d27f9a85445edd0f12ae5f9ad132180aab",
          "md5": "2a8ad5c0fd1dee9aa1d152b9ae3a6fc0",
          "sha256": "ef26e367c46dc5d615a6c75291e9af7ff1753d2d42fdc414cf8c5160f86aa45d"
        },
        "downloads": -1,
        "filename": "shellctx-0.1.2.zip",
        "has_sig": false,
        "md5_digest": "2a8ad5c0fd1dee9aa1d152b9ae3a6fc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13601,
        "upload_time": "2020-06-28T05:15:34",
        "upload_time_iso_8601": "2020-06-28T05:15:34.816786Z",
        "url": "https://files.pythonhosted.org/packages/82/77/3692bbd63311c26b38ee08e280d27f9a85445edd0f12ae5f9ad132180aab/shellctx-0.1.2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d986f41769ef4a654213ff848e584e7c450761fbc8255d7da54993045da0dc1",
          "md5": "b4a9e792306a1832db359c13f57f2992",
          "sha256": "fe9511bb6ea8bbaeed2e54202f7fde34468d8bf53c892fc02579e70fcdf91421"
        },
        "downloads": -1,
        "filename": "shellctx-0.1.3.zip",
        "has_sig": false,
        "md5_digest": "b4a9e792306a1832db359c13f57f2992",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16029,
        "upload_time": "2020-07-05T22:14:46",
        "upload_time_iso_8601": "2020-07-05T22:14:46.704147Z",
        "url": "https://files.pythonhosted.org/packages/6d/98/6f41769ef4a654213ff848e584e7c450761fbc8255d7da54993045da0dc1/shellctx-0.1.3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6d986f41769ef4a654213ff848e584e7c450761fbc8255d7da54993045da0dc1",
        "md5": "b4a9e792306a1832db359c13f57f2992",
        "sha256": "fe9511bb6ea8bbaeed2e54202f7fde34468d8bf53c892fc02579e70fcdf91421"
      },
      "downloads": -1,
      "filename": "shellctx-0.1.3.zip",
      "has_sig": false,
      "md5_digest": "b4a9e792306a1832db359c13f57f2992",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16029,
      "upload_time": "2020-07-05T22:14:46",
      "upload_time_iso_8601": "2020-07-05T22:14:46.704147Z",
      "url": "https://files.pythonhosted.org/packages/6d/98/6f41769ef4a654213ff848e584e7c450761fbc8255d7da54993045da0dc1/shellctx-0.1.3.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}