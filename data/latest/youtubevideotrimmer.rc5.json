{
  "info": {
    "author": "Arunkumar Palani",
    "author_email": "arunkumarpas002@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Environment :: Web Environment",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet",
      "Topic :: Multimedia :: Video",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Terminals",
      "Topic :: Utilities"
    ],
    "description": "\r\n# YoutubeVideoTrimmer\r\n\r\nA compact solution for trimming YouTube videos You may get the desired output video clip by providing the YouTube video URL and required duration.\r\n\r\n<div align=\"center\">\r\n\r\n  <p>\r\n\r\n    <a href=\"#\"><img src=\"https://assets.nickficano.com/gh-pytube.min.svg\" width=\"456\" height=\"143\" alt=\"pytube logo\" /></a>\r\n\r\n  </p>\r\n\r\n  <p align=\"center\">\r\n\r\n\t<a href=\"https://pypi.org/project/pytube/\"><img src=\"https://img.shields.io/pypi/dm/pytube?style=flat-square\" alt=\"pypi\"/></a>\r\n\r\n\t<a href=\"https://pytube.io/en/latest/\"><img src=\"https://readthedocs.org/projects/python-pytube/badge/?version=latest&style=flat-square\" /></a>\r\n\r\n\t<a href=\"https://pypi.org/project/pytube/\"><img src=\"https://img.shields.io/pypi/v/pytube?style=flat-square\" /></a>\r\n\r\n  </p>\r\n\r\n</div>\r\n\r\n\r\n\r\n### Actively soliciting contributors!\r\n\r\n\r\n\r\nHave ideas for how pytube can be improved? Feel free to open an issue or a pull request!\r\n\r\n\r\n\r\n# pytube\r\n\r\n\r\n\r\n*pytube* is a genuine, lightweight, dependency-free Python library (and command-line utility) for downloading YouTube videos.\r\n\r\n\r\n\r\n## Documentation\r\n\r\n\r\n\r\nDetailed documentation about the usage of the library can be found at [pytube.io](https://pytube.io). This is recommended for most cases. If you want to hastily download a single video, the [quick start](#Quickstart) guide below might be what you're looking for.\r\n\r\n\r\n\r\n## Description\r\n\r\n\r\n\r\nYouTube is the most popular video-sharing platform in the world and as a hacker, you may encounter a situation where you want to script something to download videos. For this, I present to you: *pytube*.\r\n\r\n\r\n\r\n*pytube* is a lightweight library written in Python. It has no third-party\r\n\r\ndependencies and aims to be highly reliable.\r\n\r\n\r\n\r\n*pytube* also makes pipelining easy, allowing you to specify callback functions for different download events, such as  ``on progress`` or ``on complete``.\r\n\r\n\r\n\r\nFurthermore, *pytube* includes a command-line utility, allowing you to download videos right from the terminal.\r\n\r\n\r\n\r\n## Features\r\n\r\n\r\n\r\n- Support for both progressive & DASH streams\r\n\r\n- Support for downloading the complete playlist\r\n\r\n- Easily register ``on_download_progress`` & ``on_download_complete`` callbacks\r\n\r\n- Command-line interfaced included\r\n\r\n- Caption track support\r\n\r\n- Outputs caption tracks to .srt format (SubRip Subtitle)\r\n\r\n- Ability to capture thumbnail URL\r\n\r\n- Extensively documented source code\r\n\r\n- No third-party dependencies\r\n\r\n\r\n\r\n## Quickstart\r\n\r\n\r\n\r\nThis guide covers the most basic usage of the library. For more detailed information, please refer to [pytube.io](https://pytube.io).\r\n\r\n\r\n\r\n### Installation\r\n\r\n\r\n\r\nPytube requires an installation of Python 3.6 or greater, as well as pip. (Pip is typically bundled with Python [installations](https://python.org/downloads).)\r\n\r\n\r\n\r\nTo install from PyPI with pip:\r\n\r\n\r\n\r\n```bash\r\n\r\n$ python -m pip install pytube\r\n\r\n```\r\n\r\n\r\n\r\nSometimes, the PyPI release becomes slightly outdated. To install from the source with pip:\r\n\r\n\r\n\r\n```bash\r\n\r\n$ python -m pip install git+https://github.com/pytube/pytube\r\n\r\n```\r\n\r\n\r\n\r\n### Using pytube in a Python script\r\n\r\n\r\n\r\nTo download a video using the library in a script, you'll need to import the YouTube class from the library and pass an argument of the video URL. From there, you can access the streams and download them.\r\n\r\n\r\n\r\n```python\r\n\r\n >>> from pytube import YouTube\r\n\r\n >>> YouTube('https://youtu.be/2lAe1cqCOXo').streams.first().download()\r\n\r\n >>> yt = YouTube('http://youtube.com/watch?v=2lAe1cqCOXo')\r\n\r\n >>> yt.streams\r\n\r\n  ... .filter(progressive=True, file_extension='mp4')\r\n\r\n  ... .order_by('resolution')\r\n\r\n  ... .desc()\r\n\r\n  ... .first()\r\n\r\n  ... .download()\r\n\r\n```\r\n\r\n\r\n\r\n### Using the command-line interface\r\n\r\n\r\n\r\nUsing the CLI is remarkably straightforward as well. To download a video at the highest progressive quality, you can use the following command:\r\n\r\n```bash\r\n\r\n$ pytube https://youtube.com/watch?v=2lAe1cqCOXo\r\n\r\n```\r\n\r\n\r\n\r\nYou can also do the same for a playlist:\r\n\r\n```bash\r\n\r\n$ pytube https://www.youtube.com/playlist?list=PLS1QulWo1RIaJECMeUT4LFwJ-ghgoSH6n\r\n\r\n```\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.karuwy.com/",
    "keywords": "youtube,download,video,stream,trimmer,youtube video trimmer,youtube video downloader,youtube video downloader and trimmer",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "YoutubeVideoTrimmer",
    "package_url": "https://pypi.org/project/YoutubeVideoTrimmer/",
    "platform": null,
    "project_url": "https://pypi.org/project/YoutubeVideoTrimmer/",
    "project_urls": {
      "Homepage": "https://www.karuwy.com/"
    },
    "release_url": "https://pypi.org/project/YoutubeVideoTrimmer/0.0.5/",
    "requires_dist": [
      "pytube",
      "moviepy"
    ],
    "requires_python": "",
    "summary": "A compact solution for trimming YouTube videos You may get the desired output video clip by providing the YouTube video URL and required duration.",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15913058,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75487e22bd2aa4fcd331c47f06c53c01037055aa7cb83ebcbc8e6b2721654670",
          "md5": "919ce7757f7233743ed28da7d47e1b46",
          "sha256": "72e02955c3457611a0963d2e6ce961a9a81add6f03a30a1ee12758d889d39adb"
        },
        "downloads": -1,
        "filename": "YoutubeVideoTrimmer-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "919ce7757f7233743ed28da7d47e1b46",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2411,
        "upload_time": "2022-11-27T15:42:01",
        "upload_time_iso_8601": "2022-11-27T15:42:01.672736Z",
        "url": "https://files.pythonhosted.org/packages/75/48/7e22bd2aa4fcd331c47f06c53c01037055aa7cb83ebcbc8e6b2721654670/YoutubeVideoTrimmer-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d845a7164e8497c2bcf2c35b16809e63049b84ba73ffe241203e39eca49e0e7",
          "md5": "3d0c5db18785d4cf9662f5063838e78b",
          "sha256": "2558d151734a9473b5efac6b857b0bc0d768227e5884fbf29ed4abdd083b2bc4"
        },
        "downloads": -1,
        "filename": "YoutubeVideoTrimmer-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d0c5db18785d4cf9662f5063838e78b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2442,
        "upload_time": "2022-11-27T16:05:01",
        "upload_time_iso_8601": "2022-11-27T16:05:01.151413Z",
        "url": "https://files.pythonhosted.org/packages/8d/84/5a7164e8497c2bcf2c35b16809e63049b84ba73ffe241203e39eca49e0e7/YoutubeVideoTrimmer-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a649fa3760996aef458e28993efe591c9d9054c9e92caefcea3eb164e41243d8",
          "md5": "a377529bcbe07e78fcd379dfe7ab02d9",
          "sha256": "91a9f8696c3340dd6127ecded18280dc682aa3191045782f50fc8126ab5dbc44"
        },
        "downloads": -1,
        "filename": "YoutubeVideoTrimmer-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a377529bcbe07e78fcd379dfe7ab02d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2445,
        "upload_time": "2022-11-27T16:10:26",
        "upload_time_iso_8601": "2022-11-27T16:10:26.161013Z",
        "url": "https://files.pythonhosted.org/packages/a6/49/fa3760996aef458e28993efe591c9d9054c9e92caefcea3eb164e41243d8/YoutubeVideoTrimmer-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58f0b027eaff561844d614ef05a1f36466ac3763b9200bd8fc9b048997f8154a",
          "md5": "547d64ee8627e2f0891bf12eafc0e204",
          "sha256": "f7e91b4fec9b43aeb7adcfeccc9e2ea2ca66b274b6379e0c5cb12d3eeabdf7cb"
        },
        "downloads": -1,
        "filename": "YoutubeVideoTrimmer-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "547d64ee8627e2f0891bf12eafc0e204",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2507,
        "upload_time": "2022-11-28T10:58:46",
        "upload_time_iso_8601": "2022-11-28T10:58:46.041200Z",
        "url": "https://files.pythonhosted.org/packages/58/f0/b027eaff561844d614ef05a1f36466ac3763b9200bd8fc9b048997f8154a/YoutubeVideoTrimmer-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5daabb7d0d25c6a868795d0c3400208c626eb96bda119b28d3321660bf8cb846",
          "md5": "b257c456f0836ccc4af6e3a4012728ae",
          "sha256": "1c6ef3c94669b829bef28ec3198c9be2839607891b79462176c54562b42357d2"
        },
        "downloads": -1,
        "filename": "YoutubeVideoTrimmer-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b257c456f0836ccc4af6e3a4012728ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5380,
        "upload_time": "2022-11-28T11:38:18",
        "upload_time_iso_8601": "2022-11-28T11:38:18.228443Z",
        "url": "https://files.pythonhosted.org/packages/5d/aa/bb7d0d25c6a868795d0c3400208c626eb96bda119b28d3321660bf8cb846/YoutubeVideoTrimmer-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5daabb7d0d25c6a868795d0c3400208c626eb96bda119b28d3321660bf8cb846",
        "md5": "b257c456f0836ccc4af6e3a4012728ae",
        "sha256": "1c6ef3c94669b829bef28ec3198c9be2839607891b79462176c54562b42357d2"
      },
      "downloads": -1,
      "filename": "YoutubeVideoTrimmer-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b257c456f0836ccc4af6e3a4012728ae",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5380,
      "upload_time": "2022-11-28T11:38:18",
      "upload_time_iso_8601": "2022-11-28T11:38:18.228443Z",
      "url": "https://files.pythonhosted.org/packages/5d/aa/bb7d0d25c6a868795d0c3400208c626eb96bda119b28d3321660bf8cb846/YoutubeVideoTrimmer-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}