{
  "info": {
    "author": "Boris Yangel",
    "author_email": "boris.jangel@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# dejax\nAn implementation of replay buffer data structure in JAX. Operations involving dejax replay buffers can be jitted and run on both CPU and GPU.\n\n## Package contents\n* `dejax.circular_buffer` — an implementation of a circular buffer data structure that can store pytrees of arbitrary structure (with the restriction that the corresponding tensor shapes in different pytrees match).\n* `dejax.uniform` — a FIFO replay buffer of fixed size that samples replayed items uniformly.\n* `dejax.clustered` — a replay buffer that assigns every trajectory to a cluster and maintains a separate replay buffer per cluster. Sampling is performed uniformly over all clusters. This kind of replay buffer is helpful when, for instance, one needs to replay low and high reward trajectories at the same rate.\n\n## How to use dejax replay buffers\n\n```python\nimport dejax\n```\n\nFirst, instantiate a buffer object. Buffer objects don't have state but rather provide methods to initialize and manipulate state.\n\n```python\nbuffer = uniform_replay(max_size=10000)\n```\n\nHaving a buffer object, we can initialize the state of the replay buffer. For that we would need a prototype item that will be used to determine the structure of the storage. The prototype item must have the same structure and tensor shapes as the items that will be stored in the buffer.\n\n```python\nbuffer_state = buffer.init_fn(item_prototype)\n```\n\nNow we can fill the buffer:\n```python\nfor item in items:\n    buffer_state = buffer.add_fn(buffer_state, make_item(item))\n```\n\nAnd sample from it:\n```python\nbatch = buffer.sample_fn(buffer_state, rng, batch_size)\n```\n\nOr apply an update op to the items in the buffer:\n```python\ndef item_update_fn(item):\n    # Possibly update an item\n    return item\nbuffer_state = buffer.update_fn(buffer_state, item_update_fn)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hr0nix/dejax",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dejax",
    "package_url": "https://pypi.org/project/dejax/",
    "platform": null,
    "project_url": "https://pypi.org/project/dejax/",
    "project_urls": {
      "Homepage": "https://github.com/hr0nix/dejax"
    },
    "release_url": "https://pypi.org/project/dejax/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Accelerated replay buffers in JAX.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14951679,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad9d6ac90213273ea3289bfc06b46ad20b9273b0e6dafed814d613e61a1bc853",
          "md5": "aac2e303422eba5353f0d77d0dbd6185",
          "sha256": "f06527e750a9436985545641ebc5ee529fcaf546c607b44399a02fad81209a93"
        },
        "downloads": -1,
        "filename": "dejax-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aac2e303422eba5353f0d77d0dbd6185",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8413,
        "upload_time": "2022-08-25T16:04:44",
        "upload_time_iso_8601": "2022-08-25T16:04:44.696942Z",
        "url": "https://files.pythonhosted.org/packages/ad/9d/6ac90213273ea3289bfc06b46ad20b9273b0e6dafed814d613e61a1bc853/dejax-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4a688ebdbfc81c103d21f4a2ab8123f90f0cc71fd74a84607ade5d8d03cabbd",
          "md5": "968918016c2bee1350bc71c9144728cc",
          "sha256": "0f774fc3753f283277ad26b21f9cc08e6197dfcb56c744742d80941f15d96721"
        },
        "downloads": -1,
        "filename": "dejax-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "968918016c2bee1350bc71c9144728cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9722,
        "upload_time": "2022-08-29T12:04:30",
        "upload_time_iso_8601": "2022-08-29T12:04:30.068670Z",
        "url": "https://files.pythonhosted.org/packages/a4/a6/88ebdbfc81c103d21f4a2ab8123f90f0cc71fd74a84607ade5d8d03cabbd/dejax-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cc81948f8332cf0b898c39c876a3a00edf19fdb48d2a5f0d8c25902ee4d09f9",
          "md5": "633245d45067e368f04da8ee9d65ff40",
          "sha256": "ef99f08ad7810a779e683edfb2bad17a58d123d13212339802a05807baf4a8b7"
        },
        "downloads": -1,
        "filename": "dejax-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "633245d45067e368f04da8ee9d65ff40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9759,
        "upload_time": "2022-08-29T12:52:01",
        "upload_time_iso_8601": "2022-08-29T12:52:01.127266Z",
        "url": "https://files.pythonhosted.org/packages/4c/c8/1948f8332cf0b898c39c876a3a00edf19fdb48d2a5f0d8c25902ee4d09f9/dejax-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ae99175a2d6ae90640b3e816fbf78098fa7031d0d03ea0704dc726e2f3fed00",
          "md5": "e5ee9d66d3cbccaa842f09aa7dd50e01",
          "sha256": "0511ef769bf9603415cd6f7bc24a42c11048658b826fe75c1ae0656e202f2aac"
        },
        "downloads": -1,
        "filename": "dejax-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e5ee9d66d3cbccaa842f09aa7dd50e01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9792,
        "upload_time": "2022-08-31T16:08:35",
        "upload_time_iso_8601": "2022-08-31T16:08:35.346934Z",
        "url": "https://files.pythonhosted.org/packages/7a/e9/9175a2d6ae90640b3e816fbf78098fa7031d0d03ea0704dc726e2f3fed00/dejax-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ae99175a2d6ae90640b3e816fbf78098fa7031d0d03ea0704dc726e2f3fed00",
        "md5": "e5ee9d66d3cbccaa842f09aa7dd50e01",
        "sha256": "0511ef769bf9603415cd6f7bc24a42c11048658b826fe75c1ae0656e202f2aac"
      },
      "downloads": -1,
      "filename": "dejax-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e5ee9d66d3cbccaa842f09aa7dd50e01",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9792,
      "upload_time": "2022-08-31T16:08:35",
      "upload_time_iso_8601": "2022-08-31T16:08:35.346934Z",
      "url": "https://files.pythonhosted.org/packages/7a/e9/9175a2d6ae90640b3e816fbf78098fa7031d0d03ea0704dc726e2f3fed00/dejax-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}