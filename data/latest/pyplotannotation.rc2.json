{
  "info": {
    "author": "AurÃ©lien COLIN",
    "author_email": "aureliencolin@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "\r\n# PyplotAnnotation\r\n\r\n- [Introduction](#introduction)\r\n- [Requirements](#requirements)\r\n- [How to Use](#how-to-use)\r\n    - [The command line](#the-command-line)\r\n    - [Legal actions](#legal-actions)\r\n- [Format of the output](#format-of-the-output)\r\n- [Examples](#examples)\r\n    \r\n## Introduction\r\n\r\nThe goal of the library is to create a software for quick annotation. More specifically, it is used for the generation of a segmentation dataset.\r\nThe application shows images in a pyplot window and asks the user to choose a class, choose points to draw a polygon, and validate.\r\n\r\nThe application support up to nine classes, multiple polygons per label, and multiple labels per class.\r\n\r\n## Requirements\r\n\r\n- matplotlib\r\n- pillow\r\n- fire\r\n\r\n\r\n## How to use\r\n\r\n### The command line\r\n\r\nTo run the application, write the following command to the cmd:\r\n\r\n```bash\r\npython PyplotAnnotation {arg1} {arg2} {arg3}\r\n```\r\n\r\n- *{arg1}* describes the path of the picture to segment, as recognized by glob. The default value is \"*\\*.png*\", which correspond to the .png in the current working directory.\r\n- *{arg2}* is the name of the folder in which the input of the dataset will be written.\r\n- *{arg3}* is the name of the folder in which the output of the dataset (the masks) will be written.\r\n\r\nExample:\r\n\r\n```bash\r\npython -m PyplotAnnotation.PyplotAnnotation *.png inputs masks\r\n```\r\n\r\n\r\n### Legal actions\r\n\r\nThe application follows a quite simple automaton:\r\n\r\n![](https://raw.githubusercontent.com/Rignak/PyplotAnnotation/master/README_files/Diagram.png)\r\n\r\n#### *New image* state (initial state)\r\n\r\n##### Actions performed on entering the state\r\n\r\n- A new picture is plotted.\r\n- The current polygons are initialized to a void list.\r\n\r\nIf coming from *Polygon validated*:\r\n- Save the picture inside the *input_folder*.\r\n- Save the masks (one per used class) to the *mask_folder*.\r\n\r\nIf these files already exist, they will be overwritten.\r\n\r\n##### Leaving the state\r\n\r\n| Input | State |\r\n|---|---|\r\n| 1, 2, 3, 4, 5, 6, 7, 8, 9 | *Class selected* |\r\n\r\n#### *Class selected* state\r\n\r\n##### Actions performed on entering the state\r\n\r\n- The class of the current polygon is set to the input used to access this state.\r\n\r\n##### Leaving the state\r\n\r\n| Input | State |\r\n|---|---|\r\n| 1, 2, 3, 4, 5, 6, 7, 8, 9 | *Class selected* |\r\n| Central click | *First point put* |\r\n\r\n#### *First point put* state\r\n\r\n##### Actions performed on entering the state\r\n\r\nIf coming from *Class selected*:\r\n- A point is added to the polygon.\r\n- The point is plotted on the picture.\r\n    \r\nIf coming from *Second point put*:\r\n- The second point is removed.\r\n- The line between the second and first point is removed.\r\n\r\n##### Leaving the state\r\n\r\n| Input | State |\r\n|---|---|\r\n| Central click | *Second point put* |\r\n| Right click | *Class selected* |\r\n\r\n#### *Second point put* state\r\n\r\n##### Actions performed on entering the state\r\n\r\nIf coming from *First point put*:\r\n- A point is added to the polygon.\r\n- The point is plotted on the picture.\r\n- A line between the first and second point is plotted.\r\n\r\nIf coming from *n-th point put*:\r\n- The third point is removed.\r\n- The line between the third and second point is removed.\r\n\r\n##### Leaving the state\r\n\r\n| Input | State |\r\n|---|---|\r\n| Central click | *n-th point put* |\r\n| Right click | *First point put* |\r\n\r\n#### *n-th point put* state\r\n\r\n##### Actions performed on entering the state\r\n\r\nIf coming with a central click:\r\n- A point is added to the polygon.\r\n- The point is plotted on the picture.\r\n- A line between the two last point is plotted.\r\n- If coming from *Second point put*, set *n* at 3\r\n- If coming from *n-th point put*, set *n* at *n*+1\r\n\r\nIf coming with a right click:\r\n- The last point is removed.\r\n- The line between the last and second last point is removed.\r\n- Set *n* at *n*-1.\r\n\r\n##### Leaving the state\r\n\r\n| Input | State |\r\n|---|---|\r\n| 0 | *Polygon validated* |\r\n| Central click | *n-th point put* |\r\n| Right click | *n-th point put* |\r\n| Right click | *Second point put* |\r\n\r\nWhen using \"Right click\" : if *n* is three, go to \"*Second point put*\"-state, else go to \"*n-th point put*\".\r\n#### *Polygon validated* state\r\n\r\n##### Actions performed on entering the state\r\n\r\nThe current polygon is saved (now, it cannot be modified). A new polygon is initialized.\r\n\r\n##### Leaving the state\r\n\r\n| Input | State |\r\n|---|---|\r\n| Enter | *New image* |\r\n| 1, 2, 3, 4, 5, 6, 7, 8, 9 | *Class selected* |\r\n\r\n\r\n### Format of the output\r\n\r\nAfter the acceptation of each picture, multiple files are created. \r\n\r\n- First, a new image is generated in the *input_folder*, with the same name as the picture except that the extension is forced to be *.png*.\r\n- Second, the mask files are generated. Localised in the *mask_folder*, one of them as the same name as the same name as the input : this is the concatenation of each mask. Other files are created, one by class used. For each mask, the background is set at 0 while the mask is set at 255. Of course, the masks only have one canal each.\r\n\r\n### Examples\r\n\r\nCredit for xiao_qiang (#pixiv1754781) for drawing the picture we use in example.\r\n\r\nSo, here is the figure plotted by the program. You can see the polygons created for the classes 1, 2 and 9.\r\nThe 9-th class act as a eraser of any other layer.\r\nOn the side, the legend contains the color of each class and the currently selectionned class.\r\n\r\nMultiple polygons can be draw for a single label. You can use multiple labels on a single images, and also put points outside the picture.\r\n\r\n![](https://raw.githubusercontent.com/Rignak/PyplotAnnotation/master/README_files/Figure_1.png)\r\n\r\nIn the *mask_folder*, the following files are created.\r\n\r\n![](https://raw.githubusercontent.com/Rignak/PyplotAnnotation/master/README_files/Figure_2.PNG)\r\n\r\nThe first one is the concatenation of each class. The two other the segmentation of the classes 1 and 2. The class 9 has no file of his own but the mask of the first class is altered by the erasion of a part.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Rignak/PyplotAnnotation",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyplotAnnotation",
    "package_url": "https://pypi.org/project/PyplotAnnotation/",
    "platform": null,
    "project_url": "https://pypi.org/project/PyplotAnnotation/",
    "project_urls": {
      "Homepage": "https://github.com/Rignak/PyplotAnnotation"
    },
    "release_url": "https://pypi.org/project/PyplotAnnotation/1.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Quickly draw segmentation dataset",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15460302,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b143a8c2d0efc5bda0cdf2ec2b0672fcd568de90ac6b090b8ec7879a09eb4aad",
          "md5": "7a458a16c43ac761244e4ecc482263f5",
          "sha256": "8f14aafa4546814efa3fe4961060762c46ce0750e65e3e9167916cb2b11ce29c"
        },
        "downloads": -1,
        "filename": "PyplotAnnotation-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a458a16c43ac761244e4ecc482263f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18280,
        "upload_time": "2020-03-08T18:47:56",
        "upload_time_iso_8601": "2020-03-08T18:47:56.250686Z",
        "url": "https://files.pythonhosted.org/packages/b1/43/a8c2d0efc5bda0cdf2ec2b0672fcd568de90ac6b090b8ec7879a09eb4aad/PyplotAnnotation-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "328afb23625507d85d6f168bc0ffd6689654ef9644ae97e64d68eb2ea9320cba",
          "md5": "a8430edbdd900339d5f09d9d91023fb3",
          "sha256": "bb0c6dc9416200eb9779b3013c24bd4cfad2599e3675a850f41d7bfb81cc21db"
        },
        "downloads": -1,
        "filename": "PyplotAnnotation-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a8430edbdd900339d5f09d9d91023fb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5747,
        "upload_time": "2020-03-08T18:47:58",
        "upload_time_iso_8601": "2020-03-08T18:47:58.200405Z",
        "url": "https://files.pythonhosted.org/packages/32/8a/fb23625507d85d6f168bc0ffd6689654ef9644ae97e64d68eb2ea9320cba/PyplotAnnotation-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c27e9bc0d6a44f9077cd40ea55b63445f0e2d45f086d02151c7f5763b613133",
          "md5": "57d3555e468089da0cd9b87bc221b1e8",
          "sha256": "40b50910a621f8e3438529472299694ce91433e35d796ccd0254619b87a52931"
        },
        "downloads": -1,
        "filename": "PyplotAnnotation-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "57d3555e468089da0cd9b87bc221b1e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18369,
        "upload_time": "2022-10-19T11:26:02",
        "upload_time_iso_8601": "2022-10-19T11:26:02.242739Z",
        "url": "https://files.pythonhosted.org/packages/5c/27/e9bc0d6a44f9077cd40ea55b63445f0e2d45f086d02151c7f5763b613133/PyplotAnnotation-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c27e9bc0d6a44f9077cd40ea55b63445f0e2d45f086d02151c7f5763b613133",
        "md5": "57d3555e468089da0cd9b87bc221b1e8",
        "sha256": "40b50910a621f8e3438529472299694ce91433e35d796ccd0254619b87a52931"
      },
      "downloads": -1,
      "filename": "PyplotAnnotation-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "57d3555e468089da0cd9b87bc221b1e8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 18369,
      "upload_time": "2022-10-19T11:26:02",
      "upload_time_iso_8601": "2022-10-19T11:26:02.242739Z",
      "url": "https://files.pythonhosted.org/packages/5c/27/e9bc0d6a44f9077cd40ea55b63445f0e2d45f086d02151c7f5763b613133/PyplotAnnotation-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}