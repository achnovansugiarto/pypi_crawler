{
  "info": {
    "author": "Bharat Sinha",
    "author_email": "bharat.sinha.2307@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# WPT Parser\n\n[![Upload Python Package](https://github.com/Bharat23/wpt-parser/actions/workflows/python-publish.yml/badge.svg)](https://github.com/Bharat23/wpt-parser/actions/workflows/python-publish.yml)\n\n- ## [Getting Started](#getting-started)\n    * [Prerequiste](#prerequiste)\n    * [Installation](#installation)\n    * [Examples](#example)\n        * [Key Types](#key-type)\n- ## [Available Methods](#available-methods)\n\n## Getting Started\n\n- ### Prerequisites\n    - Python >= 3.6.x\n    - pip\n\n- ### Installation\n    ```\n    $ pip install wpt-parser\n    ```\n\n- ### Examples\n    - Using the JSON Parser\n    ```\n    # import the class\n    from WPTParser.Fetch import Fetch\n    from WPTParser.JSONParser import JSONParser\n    \n    test_json = Fetch().json()\n    keys = ['data.median.firstView.loadTime',]\n    # returns a new dict with specified keys\n    JSONParser(test_json).pick(keys=keys).exec()\n\n    ```\n- ### Key Types:\n    - #### key_name\n        - Works like simple JSON extraction. Provide the name of the key and boom!.\n        - For extraction from beyond first level, append keys with a separator and provide `key_delimiter` for the program to recognize the start of next level.\n        - Example: \n        ```\n        \"\"\"\n        {\n            keylevel11: {\n                keylevel21: value,\n                keylevel22: {\n                    keylevel31: value\n                }\n            }\n        }\n        \"\"\"\n        # key to extract first level\n        # keylevel11\n        # returns {keylevel21: ...}\n\n        # key to extract second level, first key\n        # keylevel11.keylevel21\n        # returns value\n        ```\n    - #### [list_index]\n        - When you have a list as value and you want to extract a specific index value/object.\n        - For extraction from beyond first level, append keys with a separator and provide `key_delimiter` for the program to recognize the start of next level.\n        - Example: \n        ```\n        \"\"\"\n        {\n            keylevel11: {\n                keylevel21: [\n                    1, 2, 3\n                ],\n                keylevel22: {\n                    keylevel31: value\n                }\n            }\n        }\n        \"\"\"\n        # key to extract second level, third index\n        # keylevel11.keylevel21.[2]\n        # returns 3\n        ```\n    - #### [{key=value}]\n        - When you have a unordered list of object and you want extract a specific object from the list based on the key and value inside the object\n        - For extraction from beyond first level, append keys with a separator and provide `key_delimiter` for the program to recognize the start of next level.\n        - Example: \n        ```\n        \"\"\"\n        {\n            keylevel11: {\n                keylevel21: [\n                    1, 2, 3\n                ],\n                keylevel22: {\n                    keylevel31: value\n                },\n                keylevel23: [\n                    {\n                        name: Awesome,\n                    },\n                    {\n                        name: Package\n                    }\n                ]\n            }\n        }\n        \"\"\"\n        # key to extract second level, and from that extarct the object with name = Awesome\n        # keylevel11.keylevel23.[{name=Awesome}]\n        # return {name: Awesome}\n        ```\n    \n    - #### [{key~regex}]\n        - When you have a unordered list of object and you want extract a specific object from the list based on the key and a regex of value inside the object\n        - For extraction from beyond first level, append keys with a separator and provide `key_delimiter` for the program to recognize the start of next level.\n        - The regex search is case sensitive. You do not need to add `//` or `r''` to write your regex.\n        - The search will find all the matches and return a list\n        - Example: \n        ```\n        \"\"\"\n        {\n            keylevel11: {\n                keylevel21: [\n                    1, 2, 3\n                ],\n                keylevel22: {\n                    keylevel31: value\n                },\n                keylevel23: [\n                    {\n                        name: Awesome123,\n                    },\n                    {\n                        name: Package\n                    }\n                ]\n            }\n        }\n        \"\"\"\n        # key to extract second level, and from that extarct the object with name matching Awesome\n        # keylevel11.keylevel23.[{name~Awesome}]\n        # return [{name: Awesome}]\n        ```\n\n### Available Methods\n\n- JSONParser\n\n| Method | Params | type | default | Description \n| --- | --- | --- | --- | --- |\n| pick | key | str | None | selects a key to be returned\n| pick | keys | list | [] | selects a list key to be returned\n| pick | key_delimiter | str | \".\" | Separator used to identify multi level JSON\n| pick | key_mapping | dict | {} | Mapping of keys for picking with custom key name. \n\n- Fetch\n\n| Method | Params | type | default | Description \n| --- | --- | --- | --- | --- |\n| json | test_id | str | None | test_id for a wpt or a speed curve test\n| json | WPT_URI | str | 'https://webpagetest.org' | URI for your WPT instance\n\n### Note:\n - The package is under development and will be prone to more frequent updates",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Bharat23/wpt-parser",
    "keywords": "WPT parser,wpt,speed curve,webpagetest,json",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wpt-parser",
    "package_url": "https://pypi.org/project/wpt-parser/",
    "platform": "",
    "project_url": "https://pypi.org/project/wpt-parser/",
    "project_urls": {
      "Homepage": "https://github.com/Bharat23/wpt-parser"
    },
    "release_url": "https://pypi.org/project/wpt-parser/0.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A plug-n-play package fetch test data from WPT and parse for specific keys",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11918247,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd79442b558845b47e664a10d695f4dae20f83b1e58dc02b6a6c49605ebc01f0",
          "md5": "daed1f26638e88aaf39e50899bb97ace",
          "sha256": "f2e56e30dbaae97b3b2d790766da68f2b801317c74a6dc72d1614903555196bb"
        },
        "downloads": -1,
        "filename": "wpt-parser-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "daed1f26638e88aaf39e50899bb97ace",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2688,
        "upload_time": "2020-05-19T01:12:11",
        "upload_time_iso_8601": "2020-05-19T01:12:11.929913Z",
        "url": "https://files.pythonhosted.org/packages/bd/79/442b558845b47e664a10d695f4dae20f83b1e58dc02b6a6c49605ebc01f0/wpt-parser-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c876adf8a25b257eafb1dd300f58ab345160c76ba7d8bd6fb685f118aaf22124",
          "md5": "4d14cfec744a17055c233c81c88e318b",
          "sha256": "0b585c161723eaa491d1d7ebfb17c14afec32c97d9189c0812a7fa2080282667"
        },
        "downloads": -1,
        "filename": "wpt-parser-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4d14cfec744a17055c233c81c88e318b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4474,
        "upload_time": "2020-05-21T18:31:35",
        "upload_time_iso_8601": "2020-05-21T18:31:35.580456Z",
        "url": "https://files.pythonhosted.org/packages/c8/76/adf8a25b257eafb1dd300f58ab345160c76ba7d8bd6fb685f118aaf22124/wpt-parser-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbf34f1a3b4f9666f6c277c1eeb093a56a07ab75b17f0fc552c1e9ff5cf144a3",
          "md5": "fbdc67f06e0d9902be5dfe793ec17e74",
          "sha256": "213e38a8cab1e86501888c63c2cc6a89f79edad521d6cae268e836d5e9ca567e"
        },
        "downloads": -1,
        "filename": "wpt-parser-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fbdc67f06e0d9902be5dfe793ec17e74",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4508,
        "upload_time": "2020-07-08T20:17:19",
        "upload_time_iso_8601": "2020-07-08T20:17:19.206804Z",
        "url": "https://files.pythonhosted.org/packages/db/f3/4f1a3b4f9666f6c277c1eeb093a56a07ab75b17f0fc552c1e9ff5cf144a3/wpt-parser-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bc7a4b8baaec10dac628db019abfed9ff2907407165ad093b05b65de751f19f",
          "md5": "5352a2b6ab6d3df264895d52084d4fc8",
          "sha256": "9f17b7d03ef610b2fe2fbf98a415fc2f6243b7c494e697cf0bfbea2148e439e6"
        },
        "downloads": -1,
        "filename": "wpt-parser-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5352a2b6ab6d3df264895d52084d4fc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4720,
        "upload_time": "2020-08-25T21:58:21",
        "upload_time_iso_8601": "2020-08-25T21:58:21.577129Z",
        "url": "https://files.pythonhosted.org/packages/4b/c7/a4b8baaec10dac628db019abfed9ff2907407165ad093b05b65de751f19f/wpt-parser-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a14736d650ff6921d11b7900585963631d3138675162ffae560d5da96195b23f",
          "md5": "808cdd79915fcf5ee2f23dad3f7146cd",
          "sha256": "27c8297b6dac62c7204a0b398a6bf433a11d4e3d5eca6b1126184080e55a2343"
        },
        "downloads": -1,
        "filename": "wpt-parser-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "808cdd79915fcf5ee2f23dad3f7146cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5176,
        "upload_time": "2021-11-02T16:41:07",
        "upload_time_iso_8601": "2021-11-02T16:41:07.287048Z",
        "url": "https://files.pythonhosted.org/packages/a1/47/36d650ff6921d11b7900585963631d3138675162ffae560d5da96195b23f/wpt-parser-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "421aa4b3b23945651dc57d4e0c5168796b60fa3890e36e78187d16fa45c15ba0",
          "md5": "2a029cf756dfdc8a7c3b70e1c03cb88d",
          "sha256": "1fbfc310a122f9f3e5a36433cd2ccfe7f4137ee894a61b3ae69c5e0d8c5dac2c"
        },
        "downloads": -1,
        "filename": "wpt-parser-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "2a029cf756dfdc8a7c3b70e1c03cb88d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5318,
        "upload_time": "2021-11-03T19:59:56",
        "upload_time_iso_8601": "2021-11-03T19:59:56.665182Z",
        "url": "https://files.pythonhosted.org/packages/42/1a/a4b3b23945651dc57d4e0c5168796b60fa3890e36e78187d16fa45c15ba0/wpt-parser-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "421aa4b3b23945651dc57d4e0c5168796b60fa3890e36e78187d16fa45c15ba0",
        "md5": "2a029cf756dfdc8a7c3b70e1c03cb88d",
        "sha256": "1fbfc310a122f9f3e5a36433cd2ccfe7f4137ee894a61b3ae69c5e0d8c5dac2c"
      },
      "downloads": -1,
      "filename": "wpt-parser-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "2a029cf756dfdc8a7c3b70e1c03cb88d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5318,
      "upload_time": "2021-11-03T19:59:56",
      "upload_time_iso_8601": "2021-11-03T19:59:56.665182Z",
      "url": "https://files.pythonhosted.org/packages/42/1a/a4b3b23945651dc57d4e0c5168796b60fa3890e36e78187d16fa45c15ba0/wpt-parser-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}