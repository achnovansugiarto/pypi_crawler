{
  "info": {
    "author": "audioflux",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Matplotlib",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: C",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<img src='./image/logo.png'  width=\"400\"  style=\"max-width: 100%;\" > \n\n# audioFlux\n\n<!--<p align=\"center\">\n<img src='./image/logo.png'  width=\"380\"  style=\"max-width: 100%;\" > \n</p>-->\n\n\n<!-- \n[![Pypi Downloads](https://img.shields.io/pypi/dm/aubio.svg?label=Pypi%20downloads)](https://pypi.org/project/aubio/)\n[![Conda Downloads](https://img.shields.io/conda/dn/conda-forge/aubio.svg?label=Conda%20downloads)](https://anaconda.org/conda-forge/aubio)\n[![Documentation](https://readthedocs.org/projects/aubio/badge/?version=latest)](http://aubio.readthedocs.io/en/latest/?badge=latest \"Latest documentation\") -->\n<!--![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/libAudioFlux/audioFlux)-->\n\n<!-- shields.io -->\n![GitHub Workflow Status (with branch)](https://img.shields.io/github/actions/workflow/status/libAudioFlux/audioFlux/build.yml?branch=master)\n![example branch parameter](https://github.com/libAudioFlux/audioFlux/actions/workflows/build.yml/badge.svg?branch=master)\n![language](https://img.shields.io/badge/language-C%20%7C%20Python%20-blue.svg)\n[![PyPI - Version](https://img.shields.io/pypi/v/audioflux)](https://pypi.org/project/audioflux/)\n[![PyPI - Python Version](https://img.shields.io/badge/python-%3E%3D3.6-brightgreen)](https://pypi.org/project/audioflux/)\n[![Docs](https://img.shields.io/badge/Docs-passing-brightgreen)](https://audioflux.top/index.html)\n![GitHub](https://img.shields.io/github/license/libAudioFlux/audioFlux)\n<!--[![PyPI Downloads](https://img.shields.io/pypi/dm/audioflux.svg?label=Pypi%20downloads)](https://pypi.org/project/audioflux/)-->\n\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7548288.svg)](https://doi.org/10.5281/zenodo.7548288)\n\n<!--[![codebeat badge](https://codebeat.co/badges/0e21a344-0928-4aee-8262-be9a41fa488b)](https://codebeat.co/projects/github-com-libaudioflux-audioflux-master)\n![](https://img.shields.io/badge/pod-v0.1.1-blue.svg)-->\n\n\n**`audioflux`** is a deep learning tool library for audio and music analysis, feature extraction. It supports dozens of\ntime-frequency analysis transformation methods and hundreds of corresponding time-domain and frequency-domain feature\ncombinations. It can be provided to deep learning networks for training, and is used to study various tasks in the audio\nfield such as Classification, Separation, Music Information Retrieval(MIR) and ASR etc.\n\n<!-- **`audioflux`** has the following features: \n- Systematic and multi-dimensional feature extraction and combination can be flexibly used for various task research and analysis.\n- High performance, core part C implementation, FFT hardware acceleration based on different platforms, convenient for large-scale data feature extraction.\n- It supports the mobile end and meets the real-time calculation of audio stream at the mobile end. -->\n\n### Table of Contents\n\n- [Overview](#overview)\n- [Installation](#installation)\n    - [Python Package Install](#python-package-install)\n    - [Other Build](#other-build)\n- [Quickstart](#quickstart)\n- [Benchmark](#benchmark)\n    - [Server Performance](#server-performance)\n    - [Mobile Performance](#mobile-performance)\n- [Documentation](#documentation)\n- [Contributing](#contributing)\n- [Citing](#citing)\n- [License](#license)\n\n## Overview\n\n**`audioFlux`** is based on data stream design. It decouples each algorithm module in structure, and can quickly and efficiently extract features of multiple dimensions. The following is the main feature architecture diagram.\n\n<img src='./image/feature_all.png'>\n<!--<img src='./feature_all.pdf'>-->\n\nYou can use multiple dimensional feature combinations, select different deep learning networks training,  study various tasks in the audio field such as Classification, Separation, MIR etc.\n\n<img src='./image/flow.png'>\n\n\nThe main functions of **`audioFlux`** include **transform**, **feature** and **mir** modules.\n\n#### 1. Transform\n\nIn the timeâ€“frequency representation, main transform algorithm:\n\n- **`BFT`**&nbsp;&nbsp; - &nbsp;&nbsp;Based Fourier Transform, similar short-time Fourier transform.\n- **`NSGT`** - &nbsp; Non-Stationary Gabor Transform.\n- **`CWT`**&nbsp;&nbsp; - &nbsp;&nbsp;Continuous Wavelet Transform.\n- **`PWT`**&nbsp;&nbsp; - &nbsp;&nbsp;Pseudo Wavelet Transform.\n\n<!-- &emsp -->\n\nThe above transform supports all the following frequency scale types:\n\n- Linear - Short-time Fourier transform spectrogram.\n- Linspace - Linspace-scale spectrogram.\n- Mel - Mel-scale spectrogram.\n- Bark - Bark-scale spectrogram.\n- Erb - Erb-scale spectrogram.\n- Octave - Octave-scale spectrogram.\n- Log - Logarithmic-scale spectrogram.\n\nThe following transform are not supports multiple frequency scale types, only used as independent transform:\n\n- **`CQT`** - &nbsp;&nbsp;Constant-Q Transform.\n- **`VQT`** - &nbsp;&nbsp;Variable-Q Transform.\n- **`ST`**&nbsp;&nbsp; - &nbsp;&nbsp;S-Transform/Stockwell Transform.\n- **`FST`** - &nbsp;&nbsp;Fast S-Transform.\n- **`DWT`** - &nbsp;&nbsp;Discrete Wavelet Transform.\n- **`WPT`** - &nbsp;&nbsp;Wave Packet Transform.\n- **`SWT`** - &nbsp;&nbsp;Stationary Wavelet Transform.\n\nDetailed transform function, description, and use view the documentation.\n\nThe *_synchrosqueezing_* or *_reassignment_* is a technique for sharpening a time-frequency representation, contains the\nfollowing algorithms:\n\n- **`reassign`** - reassign transform for `STFT`.\n- **`synsq`** - reassign data use `CWT` data.\n- **`wsst`** - reassign transform for `CWT`.\n\n#### 2. Feature\n\nThe feature module contains the following algorithms:\n\n- **`spectral`** - Spectrum feature, supports all spectrum types.\n- **`xxcc`** - Cepstrum coefficients, supports all spectrum types.\n- **`deconv`** - Deconvolution for spectrum, supports all spectrum types.\n- **`chroma`** - Chroma feature, only supports `CQT` spectrum, Linear/Octave spectrum based on `BFT`.\n\n<!-- harmonic pitch class profiles(HPCP) -->\n\n#### 3. MIR\n\nThe mir module contains the following algorithms:\n\n- **`pitch`** - YIN, STFT, etc algorithm.\n- **`onset`** - Spectrum flux, novelty, etc algorithm.\n- **`hpss`** - Median filtering, NMF algorithm.\n\n\n## Installation\n\n![language](https://img.shields.io/badge/platform-%20Linux%20%7C%20macOS%20%7C%20Windows%20%7C%20iOS%20%7C%20Android%20-lyellow.svg)\n\nThe library is cross-platform and currently supports Linux, macOS, Windows, iOS and Android systems.\n\n### Python Package Install\n\nTo install the **audioFlux** package, Python >=3.6, using the released python package.\n\nUsing PyPI:\n\n```\n$ pip install audioflux \n```\n\nUsing Anaconda:\n\n```\n$ conda install -c tanky25 -c conda-forge audioflux\n```\n\n<!--Read installation instructions:\nhttps://audioflux.top/install-->\n\n### Other Build\n\n- [iOS build](docs/installing.md#ios-build)\n- [Android build](docs/installing.md#android-build)\n- [Building from source](docs/installing.md#building-from-source)\n\n## Quickstart\n\n- [Mel & MFCC](docs/examples.md#mel--mfcc)\n- [CWT & Synchrosqueezing](docs/examples.md#cwt--synchrosqueezing)\n- [CQT & Chroma](docs/examples.md#cqt--chroma)\n- [Different Wavelet Type](docs/examples.md#different-wavelet-type)\n- [Spectral Features](docs/examples.md#spectral-features)\n- [Pitch Estimate](docs/examples.md#pitch-estimate)\n- [Onset Detection](docs/examples.md#onset-detection)\n- [Harmonic Percussive Source Separation](docs/examples.md#harmonic-percussive-source-separation)\n\nMore example scripts are provided in the [Documentation](https://audioflux.top/) section.\n\n## Benchmark\n\n### Server Performance\n\nserver hardware:\n\n    - CPU: AMD Ryzen Threadripper 3970X 32-Core Processor\n    - Memory: 128GB\n\nEach sample data is 128ms(sampling rate: 32000, data length: 4096).\n\nThe total time spent on extracting features for 1000 sample data.\n\n| Package    | [audioFlux](https://github.com/libAudioFlux/audioFlux) | [librosa](https://github.com/librosa/librosa) | [pyAudioAnalysis](https://github.com/tyiannak/pyAudioAnalysis) | [python\\_speech\\_features](https://github.com/jameslyons/python_speech_features) |\n| ------ |  ------ |  ------ |  ------ |  ------ | \n| Mel    | 0.777s    | 2.967s  | --              | --                       |\n| MFCC   | 0.797s    | 2.963s  | 0.805s          | 2.150s                   |\n| CQT    | 5.743s    | 21.477s | --              | --                       |\n| Chroma | 0.155s    | 2.174s  | 1.287s          | --                       |\n\n### Mobile Performance\n\nFor 128ms audio data per frame(sampling rate: 32000, data length: 4096).\n\nThe time spent on extracting features for 1 frame data.\n\n| Mobile | iPhone 13 Pro | iPhone X | Honor V40 | OPPO Reno4 SE 5G |\n| ------ |  ------ |  ------ |  ------ |  ------ | \n| Mel    | 0.249ms       | 0.359ms  | 0.313ms   | 0.891ms          |\n| MFCC   | 0.249ms       | 0.361ms  | 0.315ms   | 1.116ms          |\n| CQT    | 0.350ms       | 0.609ms  | 0.786ms   | 1.779ms          |\n| Chroma | 0.354ms       | 0.615ms  | 0.803ms   | 1.775ms          |\n\n## Documentation\n\nDocumentation of the package can be found online:\n\n[https://audioflux.top](https://audioflux.top/)\n\n## Contributing\n\nWe are more than happy to collaborate and receive your contributions to **`audioFlux`**. If you want to contribute,\nplease fork the latest git repository and create a feature branch. Submitted requests should pass all continuous\nintegration tests.\n\nYou are also more than welcome to suggest any improvements, including proposals for need help, find a bug, have a\nfeature request, ask a general question, new algorithms. <a href=\"https://github.com/libAudioFlux/audioFlux/issues/new\">\nOpen an issue</a>\n\n## Citing\n\nIf you want to cite **`audioFlux`** in a scholarly work, please use the following ways:\n\n- If you are using the library for your work, for the sake of reproducibility, please cite the version you used as\n  indexed at Zenodo:\n\n  [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7548288.svg)](https://doi.org/10.5281/zenodo.7548288)\n\n## License\n\naudioFlux project is available MIT License.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://audioflux.top",
    "keywords": "audioflux",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "audioflux",
    "package_url": "https://pypi.org/project/audioflux/",
    "platform": null,
    "project_url": "https://pypi.org/project/audioflux/",
    "project_urls": {
      "Homepage": "https://audioflux.top",
      "Source": "https://github.com/libAudioFlux/audioFlux"
    },
    "release_url": "https://pypi.org/project/audioflux/0.1.4/",
    "requires_dist": [
      "numpy",
      "scipy (>=1.2.0)",
      "soundfile (>=0.12.1)",
      "matplotlib"
    ],
    "requires_python": ">=3.6",
    "summary": "A library for audio and music analysis, feature extraction.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17428610,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19eca5ff7f64d61d4aa1a5cc65e1e7d9b005de3f0d8a6c2421088edf3b149248",
          "md5": "fb90b827aa54aeebac96da39623fc056",
          "sha256": "1097c9f27f834e1b1c0e049d6669754ec28c96ecdee4a84fab547d38c669238a"
        },
        "downloads": -1,
        "filename": "audioflux-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb90b827aa54aeebac96da39623fc056",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4605657,
        "upload_time": "2023-01-18T14:13:54",
        "upload_time_iso_8601": "2023-01-18T14:13:54.067221Z",
        "url": "https://files.pythonhosted.org/packages/19/ec/a5ff7f64d61d4aa1a5cc65e1e7d9b005de3f0d8a6c2421088edf3b149248/audioflux-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc08ed04fb3c4de1b8b0e9f1731d863215bbc80bb6e475b75757845a6862f755",
          "md5": "93e4d50b5673d0327178acdd5418d937",
          "sha256": "4118ff6d0e7cf0e029c3c068298fe1c447fd8dc203622f3a7b1fb12373415e82"
        },
        "downloads": -1,
        "filename": "audioflux-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "93e4d50b5673d0327178acdd5418d937",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4551617,
        "upload_time": "2023-01-18T14:41:33",
        "upload_time_iso_8601": "2023-01-18T14:41:33.708542Z",
        "url": "https://files.pythonhosted.org/packages/cc/08/ed04fb3c4de1b8b0e9f1731d863215bbc80bb6e475b75757845a6862f755/audioflux-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02addef975d0118fef960bff7f1bf865bd9d48511c40ff799a7ac7c34e3079b6",
          "md5": "77ab6a44a25584f09d302ff7b5a5d919",
          "sha256": "8a705bb45b8af1d0ae51c7e71d7647819fc716c935d383412888fa6a4fd3f1e1"
        },
        "downloads": -1,
        "filename": "audioflux-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77ab6a44a25584f09d302ff7b5a5d919",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4604253,
        "upload_time": "2023-01-19T00:31:11",
        "upload_time_iso_8601": "2023-01-19T00:31:11.697578Z",
        "url": "https://files.pythonhosted.org/packages/02/ad/def975d0118fef960bff7f1bf865bd9d48511c40ff799a7ac7c34e3079b6/audioflux-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82c3a274c1ec7d8848a4052173c285816a45a92b0ed01b1a88b954a676964380",
          "md5": "68dae91b6d985a793e0297366b2a8a08",
          "sha256": "d1924da03af5326bf7425e60fca10b92b8a89276044078f0dc6b5c169081632d"
        },
        "downloads": -1,
        "filename": "audioflux-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68dae91b6d985a793e0297366b2a8a08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6741520,
        "upload_time": "2023-02-11T12:36:11",
        "upload_time_iso_8601": "2023-02-11T12:36:11.871372Z",
        "url": "https://files.pythonhosted.org/packages/82/c3/a274c1ec7d8848a4052173c285816a45a92b0ed01b1a88b954a676964380/audioflux-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dc9f7143eb588b7349eea9298375129a2da971401e86fb2291e9d90e14b985a",
          "md5": "baf1a1fb071ea9df126a1435238709f9",
          "sha256": "5afd05969f6b7522c9739e25d1638bc52999ee851e5a08c1ffb54ae4cdf33b8c"
        },
        "downloads": -1,
        "filename": "audioflux-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "baf1a1fb071ea9df126a1435238709f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6740072,
        "upload_time": "2023-03-07T07:49:45",
        "upload_time_iso_8601": "2023-03-07T07:49:45.012181Z",
        "url": "https://files.pythonhosted.org/packages/0d/c9/f7143eb588b7349eea9298375129a2da971401e86fb2291e9d90e14b985a/audioflux-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f2a83ce5f9fb73cdee4000e41342556354c5294e19e65a7f47d79ac32094329",
          "md5": "ef1adeeb55de065182153ed9098bda5c",
          "sha256": "c67a237bbc9bad19736f8d7bc8d014afe6742f17b0134fba1ba48b12a94af3b3"
        },
        "downloads": -1,
        "filename": "audioflux-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef1adeeb55de065182153ed9098bda5c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6882073,
        "upload_time": "2023-03-24T08:35:23",
        "upload_time_iso_8601": "2023-03-24T08:35:23.957712Z",
        "url": "https://files.pythonhosted.org/packages/1f/2a/83ce5f9fb73cdee4000e41342556354c5294e19e65a7f47d79ac32094329/audioflux-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f2a83ce5f9fb73cdee4000e41342556354c5294e19e65a7f47d79ac32094329",
        "md5": "ef1adeeb55de065182153ed9098bda5c",
        "sha256": "c67a237bbc9bad19736f8d7bc8d014afe6742f17b0134fba1ba48b12a94af3b3"
      },
      "downloads": -1,
      "filename": "audioflux-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ef1adeeb55de065182153ed9098bda5c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6882073,
      "upload_time": "2023-03-24T08:35:23",
      "upload_time_iso_8601": "2023-03-24T08:35:23.957712Z",
      "url": "https://files.pythonhosted.org/packages/1f/2a/83ce5f9fb73cdee4000e41342556354c5294e19e65a7f47d79ac32094329/audioflux-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}