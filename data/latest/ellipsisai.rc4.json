{
  "info": {
    "author": "Daniel van der Maas",
    "author_email": "daniel@ellipsis-drive.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "This package is meant to help you run models on Ellipsis Drive content. It should be used in combination with the ellipsis package.\n\n\n### Install\n```python\npip install ellipsisAI\n```\n\n### Example\n```python\nimport ellipsisAI as ai\nimport ellipsis as el\n\nblockId = '170aadad-8eaa-4509-9c0e-c1536d58a1fe'\ncaptureId = \"633b4b9f-d939-4c4a-8d90-0e9fceb64b83\"\ntargetBlockId = \"066458f4-f018-4f49-a1f0-dedfa71b3368\"\ntemp_folder = 'YOUR_PATH'\n\n#login to get a authentication token\ntoken = el.logIn('YOUR_USERNAME','YOUR_PASSWORD')\n\n#retrieve the zoom and bounds of the capture you wish to classify\nclassificationZoom = ai.getZoom(blockId, captureId, token)\nbounds = ai.getBounds(blockId, captureId, token)\n\n\n#we create a dummy model. We use the identity function mapping an image to itself. We use the getTleData function to retirve the image for the given input tile ofthe model.\ndef model(tile):\n    image = ai.getTileData(blockId, captureId, tile, token)\n    return(image)\n\n#apply the model on the given bounds on the given zoomlevel\nai.applyModel(model, bounds, targetBlockId, classificationZoom, token, temp_folder)\n```\n\n\n### Functions\n\n#### getZoom\n\n```python\ngetZoom(blockId, captureId, token)\n```\n\nThis function retrieves the max zoomlevel of the specified capture. The result can be used as classificationgZoom argument in the applyModel or getTiles function.\n\n| Name        | Description |\n| ----------- | -----------|\n| blockId     | The id of the block the capture is in |\n| captureId     | The id of the capture |\n| token        | Your token|\n\n\n#### getBounds\n\n```python\ngetBounds(blockId, captureId, token)\n```\n\nThis function retrieves the bounds of the specified capture. The result can be used as bounds argument in the applyModel function.\n\n| Name        | Description |\n| ----------- | -----------|\n| blockId     | The id of the block the capture is in |\n| captureId     | The id of the capture |\n| token        | Your token|\n\n\n#### applyModel\n\n```python\napplyModel(model, bounds, targetBlockId, classificationZoom, token, temp_folder, visualizationId = None, targetNoDataValue = 0, targetStartDate = None, targetEndDate = None)\n```\n\nThis function applies the given model on all tiles of zoomlevel classificationZoom withing the specified bounds. The results will be written in a new capture of the specified target block.\n\n| Name        | Description |\n| ----------- | -----------|\n| model        | A function mapping mapping a tile object to a 3 dimensional numpy array. The dimensions of the numpy array should be independent of the tile id. A tile object is a dictionary with keys 'tileX', 'tileY' and 'zoom' as integers. |\n| bounds        | A shapely polygon or multipolygon indicating the region you wish to classify |\n| targetBlockId        | The id of the block to write the result to |\n| classificationZoom        | The zoomlevel of the tiles you wish to use for the model input as integer. |\n| token        | Your token|\n| temp_folder        | A path where temporary files can be written|\n| visualizationId        | visualization to use as input, if not given original raster is used|\n| targetNoDataValue        | Which number of the model output to interpret as transparent|\n| targetStartDate        | datetime object with date to use for the capture to which the results will be written. Defaults to current date|\n| targetEndDate        | datetime object with date to use for the capture to which the results will be written. Defaults to targetStartDate|\n\n\n\n#### getTileData\n\n```python\ngetTileData(blockId, captureId, tile, token, visualizationId = None, downsampleFactor = 1 )\n```\n\nThis function retrieves data for the given tile as numpy array. This function can be used within your model function te retireve relevant data for the given tile.\n\n| Name        | Description |\n| ----------- | -----------|\n| blockId     | the id of the block to get data from |\n| captureId     | the id of the capture to get data from |\n| tile     | A dictionary with keys tileX, tileY and zoom as int |\n| token        | Your token|\n| visualizationId        | The id of the visualization you wish to retrieve. If not given raw data is used|\n| downsampleFactor        | A factor with which to downsample the data. Default 1 (no downsampling)|\n\n\n#### getTiles\n\n```python\ngetTiles(bounds, classificationZoom)\n```\n\nThis function covers a given bounds with tiles of the given zoomlevel. You can use the result to get tile arguments for the getTileData function\n\n| Name        | Description |\n| ----------- | -----------|\n| bounds     | A shapely polygon or multipolygon |\n| classificationZoom        | The zoomlevel of the tiles to cover with as int |\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ellipsis-drive-internal/python-package-AI",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ellipsisAI",
    "package_url": "https://pypi.org/project/ellipsisAI/",
    "platform": null,
    "project_url": "https://pypi.org/project/ellipsisAI/",
    "project_urls": {
      "Homepage": "https://github.com/ellipsis-drive-internal/python-package-AI"
    },
    "release_url": "https://pypi.org/project/ellipsisAI/0.1.0/",
    "requires_dist": [
      "Pillow",
      "ellipsis",
      "geopandas",
      "numpy",
      "pandas",
      "rasterio",
      "requests",
      "shapely",
      "tifffile"
    ],
    "requires_python": ">=3.6",
    "summary": "Package to use Ellipsis Drive for AI",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15805521,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f193e9ae57ad88a9559e95092cbd5d801d809a85897fde0eeb9d4ff739625a2e",
          "md5": "7732305c32b9252b1c6550f8210d916a",
          "sha256": "eda71cf548ebd5f1189e95406d6031a7e9b6ce796027862649448f7af179c74b"
        },
        "downloads": -1,
        "filename": "ellipsisAI-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7732305c32b9252b1c6550f8210d916a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5753,
        "upload_time": "2021-11-19T12:24:58",
        "upload_time_iso_8601": "2021-11-19T12:24:58.386796Z",
        "url": "https://files.pythonhosted.org/packages/f1/93/e9ae57ad88a9559e95092cbd5d801d809a85897fde0eeb9d4ff739625a2e/ellipsisAI-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "146df9f261ff5d8a1ce99471c84919b5a6c3d45ef8e4f13108676791e0442d50",
          "md5": "8fb778bedb803b4de67afa146705b57a",
          "sha256": "5f0b1720a0c772aae6e3040c5c4d18f76919f9b146c65f2dcda49d71b4173091"
        },
        "downloads": -1,
        "filename": "ellipsisAI-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8fb778bedb803b4de67afa146705b57a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4790,
        "upload_time": "2021-11-19T12:25:00",
        "upload_time_iso_8601": "2021-11-19T12:25:00.180881Z",
        "url": "https://files.pythonhosted.org/packages/14/6d/f9f261ff5d8a1ce99471c84919b5a6c3d45ef8e4f13108676791e0442d50/ellipsisAI-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c809298d1ac971f0e4957c3c048a5dd8ff3a63b59c63d2d1dee2f8a7c30ff4ee",
          "md5": "9b990bd6e9181bc1798cf95f40e606e2",
          "sha256": "f4abeeec25c9224db8a0c73a3f249b511e51efe7205a499bdb18f2ef13efff43"
        },
        "downloads": -1,
        "filename": "ellipsisAI-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b990bd6e9181bc1798cf95f40e606e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5761,
        "upload_time": "2021-11-19T12:57:10",
        "upload_time_iso_8601": "2021-11-19T12:57:10.101275Z",
        "url": "https://files.pythonhosted.org/packages/c8/09/298d1ac971f0e4957c3c048a5dd8ff3a63b59c63d2d1dee2f8a7c30ff4ee/ellipsisAI-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1654d2c47895bd39686e4e4e55ef7bcb9b5ce46d5b65106b0dfc727a0010f047",
          "md5": "439ef06740557a3cffaf9e110778130c",
          "sha256": "b9513b670e9c1117216b772ac56e5e1cbb34ffaf0535c4d3e717fd652f8ebb1e"
        },
        "downloads": -1,
        "filename": "ellipsisAI-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "439ef06740557a3cffaf9e110778130c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4793,
        "upload_time": "2021-11-19T12:57:11",
        "upload_time_iso_8601": "2021-11-19T12:57:11.823156Z",
        "url": "https://files.pythonhosted.org/packages/16/54/d2c47895bd39686e4e4e55ef7bcb9b5ce46d5b65106b0dfc727a0010f047/ellipsisAI-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c766cd427beb047193950baea1e18aad7398229c38781e08203598e692336915",
          "md5": "3769fe93422ec05f6709222bdf1c265d",
          "sha256": "66139f2cc0ac2a7a5e9264fb972c9842e4b737f70e435fad5e28a4ae28c118c4"
        },
        "downloads": -1,
        "filename": "ellipsisAI-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3769fe93422ec05f6709222bdf1c265d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7049,
        "upload_time": "2021-11-24T16:28:48",
        "upload_time_iso_8601": "2021-11-24T16:28:48.209606Z",
        "url": "https://files.pythonhosted.org/packages/c7/66/cd427beb047193950baea1e18aad7398229c38781e08203598e692336915/ellipsisAI-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8edefa1bea00ff5b4246cb50a62e4570918944b3c301ab52974d49e7e9bfcd49",
          "md5": "af6ca63a64d4702da1e50b5609fe2aaa",
          "sha256": "e47316410b70f1baf325abbb5e47174230db4c306c019ae1e61390dba2abce32"
        },
        "downloads": -1,
        "filename": "ellipsisAI-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "af6ca63a64d4702da1e50b5609fe2aaa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6174,
        "upload_time": "2021-11-24T16:28:49",
        "upload_time_iso_8601": "2021-11-24T16:28:49.845663Z",
        "url": "https://files.pythonhosted.org/packages/8e/de/fa1bea00ff5b4246cb50a62e4570918944b3c301ab52974d49e7e9bfcd49/ellipsisAI-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8013636711fda1fe36fabe41f3c6716ac32f31bc06be8880541cb473c5e3edc1",
          "md5": "169ec359eed49fe07597714734f9ca65",
          "sha256": "7c146542c6df126934fc7f8ff7ec536a56775cbf9bc6e6da8822b6451a751abd"
        },
        "downloads": -1,
        "filename": "ellipsisAI-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "169ec359eed49fe07597714734f9ca65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7305,
        "upload_time": "2022-11-17T19:11:20",
        "upload_time_iso_8601": "2022-11-17T19:11:20.742352Z",
        "url": "https://files.pythonhosted.org/packages/80/13/636711fda1fe36fabe41f3c6716ac32f31bc06be8880541cb473c5e3edc1/ellipsisAI-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daa788a4b63eb77be60dc7332db30459b64867b2056a799f2e00c1f69f281d38",
          "md5": "dedd8419afa7079e8e6c9c0a4edd998f",
          "sha256": "e6c7ead72d8e2d1a9c3e45d95095b7c8dd20e01fc7d0866192d342180195c22c"
        },
        "downloads": -1,
        "filename": "ellipsisAI-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dedd8419afa7079e8e6c9c0a4edd998f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7105,
        "upload_time": "2022-11-17T19:11:23",
        "upload_time_iso_8601": "2022-11-17T19:11:23.498206Z",
        "url": "https://files.pythonhosted.org/packages/da/a7/88a4b63eb77be60dc7332db30459b64867b2056a799f2e00c1f69f281d38/ellipsisAI-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8013636711fda1fe36fabe41f3c6716ac32f31bc06be8880541cb473c5e3edc1",
        "md5": "169ec359eed49fe07597714734f9ca65",
        "sha256": "7c146542c6df126934fc7f8ff7ec536a56775cbf9bc6e6da8822b6451a751abd"
      },
      "downloads": -1,
      "filename": "ellipsisAI-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "169ec359eed49fe07597714734f9ca65",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7305,
      "upload_time": "2022-11-17T19:11:20",
      "upload_time_iso_8601": "2022-11-17T19:11:20.742352Z",
      "url": "https://files.pythonhosted.org/packages/80/13/636711fda1fe36fabe41f3c6716ac32f31bc06be8880541cb473c5e3edc1/ellipsisAI-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "daa788a4b63eb77be60dc7332db30459b64867b2056a799f2e00c1f69f281d38",
        "md5": "dedd8419afa7079e8e6c9c0a4edd998f",
        "sha256": "e6c7ead72d8e2d1a9c3e45d95095b7c8dd20e01fc7d0866192d342180195c22c"
      },
      "downloads": -1,
      "filename": "ellipsisAI-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dedd8419afa7079e8e6c9c0a4edd998f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7105,
      "upload_time": "2022-11-17T19:11:23",
      "upload_time_iso_8601": "2022-11-17T19:11:23.498206Z",
      "url": "https://files.pythonhosted.org/packages/da/a7/88a4b63eb77be60dc7332db30459b64867b2056a799f2e00c1f69f281d38/ellipsisAI-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}