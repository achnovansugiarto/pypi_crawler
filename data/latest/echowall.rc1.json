{
  "info": {
    "author": "ww166",
    "author_email": "ww166mail@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Documentation"
    ],
    "description": "### 项目简介\n  - 项目代号：EchoWall-回音壁\n  - 项目定位：通用消息中间件兼容层\n  - 项目功能：消息中间件配置，消息、消费者、生产者的统一封装\n  - 详细描述： 目前仅针对 RocketMQ 进行封装。\n\n### rocket_mq\n- 版本\n- python 3.6\n\n#### 打包与安装(whl)\n- 打包: `python setup.py sdist bdist_wheel`\n- 安装: `pip install echowall-2.6.0-py3-none-any.whl`\n\n#### 打包与安装(egg)\n- 打包: python setup.py bdist_egg\n- 安装 egg:\n    - 解压 pf_mq_sdk-0.1-py3.6.egg 源码包\n    - cd pf_mq_sdk-0.1-py3.6.egg\n    - python setup.py install\n\n#### 依赖环境\n- librocketmq\n    - centos 7\n    ```\n        wget https://github.com/apache/rocketmq-client-cpp/releases/download/2.2.0/rocketmq-client-cpp-2.2.0-centos7.x86_64.rpm\n        sudo rpm -ivh rocketmq-client-cpp-2.2.0-centos7.x86_64.rpm\n    ```\n    - debian\n    ```\n        wget https://github.com/apache/rocketmq-client-cpp/releases/download/2.2.0/rocketmq-client-cpp-2.2.0.amd64.deb\n        sudo dpkg -i rocketmq-client-cpp-2.2.0.amd64.deb\n    ```\n    - macOS\n    ```\n        wget https://github.com/apache/rocketmq-client-cpp/releases/download/2.2.0/rocketmq-client-cpp-2.2.0-bin-release-darwin.tar.gz\n        tar -xzf rocketmq-client-cpp-2.2.0-bin-release-darwin.tar.gz\n        cd rocketmq-client-cpp\n        mkdir /usr/local/include/rocketmq\n        cp include/* /usr/local/include/rocketmq\n        cp lib/* /usr/local/lib\n        install_name_tool -id \"@rpath/librocketmq.dylib\" /usr/local/lib/librocketmq.dylib\n    ```\n- 详细文档： https://github.com/apache/rocketmq-client-python\n\n#### rocket_mq 服务\n- 本地部署\n    - 部署文档：https://hub.docker.com/r/xuchengen/rocketmq\n    - 注意事项：\n    ``` # Linux 或 Mac 剔除 net 启动参数\n        docker run -itd \\\n        --name=rocketmq \\\n        --hostname rocketmq \\\n        --restart=always \\\n        -p 8080:8080 \\\n        -p 9876:9876 \\\n        -p 10909:10909 \\\n        -p 10911:10911 \\\n        -p 10912:10912 \\\n        -v rocketmq_data:/home/app/data \\\n        -v /etc/localtime:/etc/localtime \\\n        -v /var/run/docker.sock:/var/run/docker.sock \\\n        xuchengen/rocketmq:latest\n    ```\n- 常用命令\n```\n    # 进入docker\n    docker exec -it rocketmq /bin/bash\n    \n    # 配置参考 /home/app/rocketmq/conf/broker.conf\n    brokerClusterName = DefaultCluster\n    brokerName = broker-a\n    brokerId = 0\n    deleteWhen = 04\n    fileReservedTime = 48\n    brokerRole = ASYNC_MASTER\n    flushDiskType = ASYNC_FLUSH\n    autoCreateTopicEnable = True\n    namesrvAddr = 127.0.0.1:9876\n    brokerIP1 = 127.0.0.1 # 必填\n    \n    # 启动命令\n    nohup /bin/sh /home/app/rocketmq/bin/mqnamesrv &\n    nohup /bin/sh /home/app/rocketmq/bin/mqbroker -c /home/app/rocketmq/conf/broker.conf -n 127.0.0.1:9876 &\n    \n    # 服务停止\n    /bin/sh /home/app/rocketmq/bin/mqshutdown broker\n    /bin/sh /home/app/rocketmq/bin/mqshutdown namesrv\n```\n\n# 使用方式\n1. ### 集成 EchoWall 项目\n    1. requirements.txt 添加依赖项： \n        echowall\n        或者 直接 \n        ```shell\n        pip install echowall\n        ```\n    2. 增加MessageQueue（Rocketmq server 配置）\n       ```\n       # 消息队列配置信息\n       MQ_HOST = 172.18.0.76\n       MQ_PORT = 9876\n       MQ_TIMEOUT = 6000\n       MQ_GROUP_NAME = SDB-GROUP-MAIN    \n       ```\n    3. flask项目中，配置文件（config.py ）增加对应变量解析\n       ```\n       #消息队列配置信息\n       MQ_HOST = os.getenv(\"MQ_HOST\")\n       MQ_PORT = os.getenv(\"MQ_PORT\")\n       MQ_TIMEOUT = os.getenv(\"MQ_TIMEOUT\")\n       MQ_GROUP_NAME = os.getenv(\"MQ_GROUP_NAME\")`\n       ```\n    4. flask 项目中， extensions.py 增加 echowall 项目的 初始化变量\n        ``` python\n        from echowall import (\n            EWConfig,\n            EWClient\n        )\n        from base.app_context import auto_app_contexts\n\n        def init_main_mq():\n            \"\"\"\n                初始化 EchoWall，启动生产者\n            :return:\n            \"\"\"\n            from flask import current_app as app\n            from apps.commons.message_queue import set_message_record\n        \n            @auto_app_contexts()\n            def _fun(_app):\n                conf = EWConfig()\n                conf.host = _app.config['MQ_HOST']\n                conf.port = int(_app.config['MQ_PORT'])\n                conf.timeout = int(_app.config.get('MQ_TIMEOUT', '6000'))\n                conf.compress_level = 5\n        \n                # 生产者发送重试\n                conf.send_retry_count = 2\n                conf.send_retry_backoff = 1\n        \n                # 生产者发送消息落库\n                conf.record_func = set_message_record\n                conf.record_only_success = False\n        \n                # 消费相关\n                conf.consumer_thread_count = 1\n        \n                rmq_client = EWClient(conf)\n        \n                group_name = app.config['MQ_GROUP_NAME']\n        \n                rmq_client.start_producer(group_name)\n        \n                return rmq_client\n        \n            return _fun(app)\n        ```\n    5. 配置topic（参见Topic命名规范）\n2. ### 发送消息\n    ```python\n    try:\n        message = mq_client.new_message(MessageTopic.sdb_bu_main.value)\n        message.keys = 'send-1'\n        message.tags = 'send-1'\n        message.body = 'send-%s' % (str(datetime.datetime.now()))\n        send_message(message)\n    except Exception as e:\n        print(traceback.format_exc())\n    ```\n3. 接收消息\n    1. 定义 处理消息的回调函数\n        ```python\n        import traceback\n        \n        from echowall import EWConsumeStatus\n        \n        from apps.extensions import ew\n    \n        @ew.pc_callback\n        def sdb_callback(msg):\n            try:\n                print(type(msg))\n                print(str(msg))\n                body = msg.body.decode('utf-8')\n                print('Message body is: {}'.format(body))\n                print(msg.latest_send_timestamp)\n                print(msg.version)\n                return EWConsumeStatus.CONSUME_SUCCESS\n            except Exception as e:\n                print(e)\n                print(traceback.format_exc())\n                return EWConsumeStatus.RECONSUME_LATER\n        ```\n    2. 注册回调函数，启动消费者\n        ```python\n        # start push consumers example\n        settings = [\n            ('GID_1', 'TopicTest', '*', 'sdb_callback')\n        ]\n        ew = echo_wall\n        rmq_client.bind_echo_wall(ew)\n        rmq_client.set_push_consumers_with_echo_wall(settings)\n        rmq_client.start_push_consumers()\n        while True:\n            sleep(3)  \n        ```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "RocketMQ,MessageQueue",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "echowall",
    "package_url": "https://pypi.org/project/echowall/",
    "platform": null,
    "project_url": "https://pypi.org/project/echowall/",
    "project_urls": {
      "GitHub": "https://github.com/ww166/echowall"
    },
    "release_url": "https://pypi.org/project/echowall/2.6.7/",
    "requires_dist": [
      "rocketmq-client-python (==2.0.0)",
      "snowflake-id (==0.0.2)"
    ],
    "requires_python": "",
    "summary": "",
    "version": "2.6.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15911277,
  "releases": {
    "2.6.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de66f5e5163203a25e2c77d80ce74906be9b4d9af7c3086bf7dad3cf26d84847",
          "md5": "6c5a52170d5a2d284ba838c3087e88dd",
          "sha256": "ff282b23384c3d862433065c507aa45d016d601d92d5b99b3443d5339c4388ce"
        },
        "downloads": -1,
        "filename": "echowall-2.6.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c5a52170d5a2d284ba838c3087e88dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22688,
        "upload_time": "2022-11-28T08:12:12",
        "upload_time_iso_8601": "2022-11-28T08:12:12.009278Z",
        "url": "https://files.pythonhosted.org/packages/de/66/f5e5163203a25e2c77d80ce74906be9b4d9af7c3086bf7dad3cf26d84847/echowall-2.6.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4f7a062bd247d3fecd94d4599c50e75596d4782387c7af936d83c1591ac4ae6",
          "md5": "86f9a05d8087f7dc5057880f3939e4fc",
          "sha256": "3790dda6a54678a590b7baa57ec417256c6f4b401b35546901ce38f5d0332e4e"
        },
        "downloads": -1,
        "filename": "echowall-2.6.7.tar.gz",
        "has_sig": false,
        "md5_digest": "86f9a05d8087f7dc5057880f3939e4fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17458,
        "upload_time": "2022-11-28T08:12:13",
        "upload_time_iso_8601": "2022-11-28T08:12:13.630353Z",
        "url": "https://files.pythonhosted.org/packages/d4/f7/a062bd247d3fecd94d4599c50e75596d4782387c7af936d83c1591ac4ae6/echowall-2.6.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de66f5e5163203a25e2c77d80ce74906be9b4d9af7c3086bf7dad3cf26d84847",
        "md5": "6c5a52170d5a2d284ba838c3087e88dd",
        "sha256": "ff282b23384c3d862433065c507aa45d016d601d92d5b99b3443d5339c4388ce"
      },
      "downloads": -1,
      "filename": "echowall-2.6.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6c5a52170d5a2d284ba838c3087e88dd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22688,
      "upload_time": "2022-11-28T08:12:12",
      "upload_time_iso_8601": "2022-11-28T08:12:12.009278Z",
      "url": "https://files.pythonhosted.org/packages/de/66/f5e5163203a25e2c77d80ce74906be9b4d9af7c3086bf7dad3cf26d84847/echowall-2.6.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d4f7a062bd247d3fecd94d4599c50e75596d4782387c7af936d83c1591ac4ae6",
        "md5": "86f9a05d8087f7dc5057880f3939e4fc",
        "sha256": "3790dda6a54678a590b7baa57ec417256c6f4b401b35546901ce38f5d0332e4e"
      },
      "downloads": -1,
      "filename": "echowall-2.6.7.tar.gz",
      "has_sig": false,
      "md5_digest": "86f9a05d8087f7dc5057880f3939e4fc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17458,
      "upload_time": "2022-11-28T08:12:13",
      "upload_time_iso_8601": "2022-11-28T08:12:13.630353Z",
      "url": "https://files.pythonhosted.org/packages/d4/f7/a062bd247d3fecd94d4599c50e75596d4782387c7af936d83c1591ac4ae6/echowall-2.6.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}