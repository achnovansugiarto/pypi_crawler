{
  "info": {
    "author": "José Manuel Gómez Soriano",
    "author_email": "jmgomez.soriano@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# db-tqdm\nA web based tqdm process bars.\n\nThis TQDM based module is very useful for web, airflow, servers or similar environments which do not have console \nto show the typical tqdm process bars.\nIn these environments are not useful to use the standard TQDM module because the access to the console or log files are\nnot easy, and if it writes into logs, this one are fulfilled with the progress bar information instead of the\nreal information log data.\n\nThis module, by default, works the same way that the standard TQDM module. Only if the mode parameter is changed by\n'mongo', or the environment variable 'TQDM_MODE' is defined with 'mongo', then the progress bar will store into a\ndatabase,instead of printing it in the standard error output.\nThis module also include the Uvicorn server in order to show this information with a browser like this:\n\n![Example of DB-TQDM progress bar](https://github.com/jmgomezsoriano/db-tqdm/raw/master/img/example01.jpg)\n\n## Content\n\n* [db-tqdm module](#db-tqdm-module)\n  * [Install db-tqdm](#install-db-tqdm)\n  * [Execute the server](#execute-the-server)\n  * [Use db-tqdm module](#use-db-tqdm-module)\n* [db-tqdm environment variables](#db-tqdm-environment-variables)\n* [db-tqdm docker](#db-tqdm-docker)\n* [To do](#to-do)\n\n# db-tqdm module<a id=\"db-tqdm-module\" name=\"db-tqdm-module\"></a>\n\nYou can use db-tqdm as a usual Python module and integrate it into your Python projects. This section explains how to\n[install](#install-db-tqdm), execute the server and test the db-tqdm module.\n\n## Install db-tqdm<a id=\"install-db-tqdm\" name=\"install-db-tqdm\"></a>\nTo install only need to do the following:\n\n```shell\npip install db-tqdm\n```\n\nIf you are using the pymongo database instead the standard TQDM module, you need to install:\n\n```shell\npip install monutils~=0.1.3\n```\n\nIn the case, this module will be not installed, then, db-tqdm are going to work as a normal tqdm progress bar.\n\nIf you are using also the web user interface, you need to install the following modules:\n\n```shell\npip install fastapi~=0.70.0 Jinja2~=3.0.2 uvicorn~=0.15.0 importlib-resources~=5.1.3\n```\n\n## Execute the server<a id=\"execute-the-server\" name=\"execute-the-server\"></a>\n\nYou can execute the db-tqdm server in both, docker image or natively. If you choose the second option, \nyou can use the following command:\n\n```bash\nusage: dbtqdm [-h] [-H HOST] [-P PORT] [-t TYPE] [--db_host HOST] [--db_port PORT] [--root_path PATH] \n              [-r NAME] [-d NAME] [-u USER] [-p PASS] [--cert_key_file FILE] \n              [--ca_file FILE] [--session_token SESSION] [-i SECONDS] [TITLE]\n\nStart the server to serve the bar progress data.\n\npositional arguments:\n  TITLE                 The web page title. By default, \"Process monitors\".\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -H HOST, --host HOST  The server host. By default, localhost.\n  -P PORT, --port PORT  The server port. By default, 5000.\n  --root_path PATH      The server root path. By default, \"/\".\n  -t TYPE, --db_type TYPE\n                        The database host. By default, mongo. Available databases: ['mongo'].\n  --db_host HOST        The database host. By default, localhost.\n  --db_port PORT        The database port. By default, 27017.\n  -r NAME, --replicaset NAME\n                        The replicaset. By default, none.\n  -d NAME, --database NAME\n                        The database name. By default, tqdm.\n  -u USER, --user USER  The database user. By default, none.\n  -p PASS, --password PASS\n                        The user password. By default, none.\n  --cert_key_file FILE  The cert key fle to connect to the database. By default, none.\n  --ca_file FILE        The CA file to connect to the database. By default, none.\n  --session_token SESSION\n                        The session token to connect to the database. By default, none.\n  -i SECONDS, --interval SECONDS\n                        The default web refresh interval. By default, 5.\n```\n\nFor example:\n\n```bash\n# Execute the server to connect with mongodb in localhost and port 27017 \n# without authentication method and the database name \"tqdm\"\ndbtqdm\n\n# The same as above but defining database connection data\ndbtqdm --db_host mymongoserver.com --db_port 18 -u mymongouser -p mymongopass\n\n# Also, you can use environment variables instead command arguments\nexport TQDM_DB_HOST=mymongoserver.com\nexport TQDM_DB_PORT=18\nexport TQDM_DB_USER=mymongouser\nexport TQDM_DB_PASSWORD=mymongopass\n\ndbtqdm\n```\n\n## Use db-tqdm module<a id=\"use-db-tqdm-module\" name=\"use-db-tqdm-module\"></a>\n\nThe use of db-tqdm is very similar to normal tqdm. For example, if you are using the progress bar into normal\nconsole application or jupyter notebook, you only need to execute:\n\n```python\nfrom dbtqdm.mongo import tqdm\nfrom time import sleep\n\nfor i in tqdm(range(0, 10), desc='Normal bar'):\n    sleep(1)\n```\n\nThis code will show in the suitable output the following progress bar as usual:\n\n```shell\nNormal bar:  60%|██████    | 6/10 [00:06<00:04,  1.00s/it]\n```\n\nYou can change te normal tqdm progrsss bar by the database based one,\nusing the own db-tqdm parameters, specially mode and name, but not uniquely:\n\n```python\nfrom dbtqdm.mongo import tqdm\nfrom time import sleep\n\n# Create a tqdm based on MongoDB in localhost:27017 with the name \"test1\" and red colour\nfor _ in tqdm(range(0, 5000), desc=f'Description of the progress bar 1',\n              mode='mongo', name='test1', colour='red'):\n    sleep(1)\n\n# The same as above but with the database connection\nfor _ in tqdm(range(0, 5000), desc=f'Description of the progress bar 1',\n              mode='mongo', name='test1', colour='red',\n              host='mymongoserver.com', port=18, user='mymongouser', password='mymongopassword'):\n    sleep(1)\n```\n\nThis code will generate the following web-based bar progress:\n\n![Example of DBTQDM progress bar](https://github.com/jmgomezsoriano/db-tqdm/raw/master/img/example02.jpg)\n\nHowever, we strongly recommend to use environment variables instead of the function parameters because, this way,\nyour code will be the same if you use the tqdm locally or web-based. For example. this code will generate a normal\ntqdm bar progress:\n\n```python\nfrom dbtqdm.mongo import tqdm\nfrom time import sleep\n\nfor _ in tqdm(range(0, 5000), desc=f'Description of the progress bar 1', colour='red'):\n    sleep(1)\n```\nNevertheless, if you define previously the follwoing environment variables, the same code will generate a web-based one:\n\n```bash\nexport TQDM_MODE=mongo\nexport TQDM_NAME=test1\n```\n\nBut this approach has a problem in the case you want to use several progress bars at the same time, \nbecause each progress bar is identified by its name. The solution is to change the previous code adding the suffix\nparameter:\n\n```python\nfrom dbtqdm.mongo import tqdm\nfrom time import sleep\n\nfor _ in tqdm(range(0, 10), desc=f'Description of the progress bar 1', colour='red', suffix='_main'):\n    for _ in tqdm(range(0, 20), desc=f'Description of the progress bar 1', colour='yellow', suffix='_secondary'):\n        sleep(1)\n```\n\nIf you do not define the DB-TQDM environment variables, both progress bars will be normal ones,\nignoring the suffix parameter. However, if you define those variables, you will have two progress bars with\nthe name \"<bar_name>_main\" and \"<bar_name>_secondary\", respectively.\n\n**Note:** At the moment, do not put spaces neither, the bar name nor bar suffix.\n\nAs we can see above, using environment variables instead the parameters allow you to use exactly the same code in \ndifferent platforms (for example, local workstation or in remote airflow server), \nand depending on the defined environment variables can switch between different user interfaces.\n\n**Note:** At the moment, the argument 'db_type' is not supported, and it will be ignored.\n\n# db-tqdm environment variables<a id=\"db-tqdm-environment-variables\" name=\"db-tqdm-environment-variables\"></a>\nYou can define environment variables to change the way tqdm progress bar appears \nand the MondogDB connection data. All the environment variables you can define are:\n\n|Variable             |Description                                                                                   |\n|---------------------|----------------------------------------------------------------------------------------------|\n|TQDM_MODE            |If you want a normal or mongo bar progress. By default, normal.                               |                                    |\n|TQDM_NAME            |The bar progress name.                                                                        |\n|TQDM_SUFFIX          |The suffix of the bar progress name. This value is better to set by function parameter.       |                                    |\n|TQDM_HOST            |The Web server host address. By default, localhost.                                           |\n|TQDM_PORT            |The Web server port. By default, 5000.                                                        |\n|TQDM_TYPE            |The database type. In the current implementation only \"mongo\" is available. By default, mongo.|\n|TQDM_DB_HOST         |The database host address. By default, localhost.                                             |\n|TQDM_DB_PORT         |The database port. By default, 27017.                                                         |\n|TQDM_DB_REPLICASET   |The mongo replicaset. By default, none.                                                       |\n|TQDM_DB_NAME         |The database name. By default, tqdm.                                                          |\n|TQDM_DB_USER         |The database username. By default, none.                                                      |\n|TQDM_DB_PASSWORD     |The user password. By default, none.                                                          |\n|TQDM_DB_CERT_KEY_FILE|The certificate key file. By default, none.                                                   |\n|TQDM_DB_CA_FILE      |The CA file. By default, none.                                                                |\n|TQDM_INTERVAL        |The web refresh interval in seconds. By default, 5s.                                          |\n|TQDM_TITLE           |The web title. By default, 'Process monitors'.                                                |\n\nThe TQDM_HOST and TQDM_PORT if only for the Web server.\n\n# db-tqdm docker<a id=\"db-tqdm-docker\" name=\"db-tqdm-docker\"></a>\n\nYou can install the db-tqdm server by means a docker image.\n\n```bash\ndocker pull ialife/db-tqdm:1.1\n```\n\nRemember you can define the [environment variables] to set the database connection. \nFor example, if you have the mongodb in your localhost, you can execute the following command to connect\nthe service in the db-tqdm docker with your mongodb:\n\n```bash\ndocker run -e TQDM_DB_USER=myusename -e TQDM_DB_PASSWORD=mypassword -e TQDM_DB_HOST=localhost \\\n           -e ROOT_URL=http://localhost -e MONGO_URL=mongodb://localhost:27017 --network=\"host\" ialife/db-tqdm\n```\n\n# To do<a id=\"to-do\" name=\"to-do\"></a>\n\n## Message when there are any active process bar\n\nShow a message when there are no active process bars.\n\n## User and password for MongoDB connection\n\nAdd the possibility to set the user and password for the MongoDB connection.\n\n## Create a historical view of finished processes\n\nIn the collection _&#95;stats&#95;_ are the historical information about the finished processes. \nIt could be interesting to use them in a view with this information. The idea is to use the home page, below \nthe progress bars in the main page, to add a section with a paged table with the finished processes ordered descending\nby start time.\n\n## Generalize to be able to use other database managers\n\nThe core of the module is ready to use another database managers creating classes inherited from _DatabaseTqdm_.\nHowever, the server process is not prepared to use other database managers, only MongoDB. \nIt could be interesting to refactor the code to add this functionality.\n\n## Use Redis or Kafka\n\nThis can be adapted (but without historical information) to be used with [Redis](https://redis.io/) or \n[Kafka](https://kafka.apache.org/) platforms.\n\n## Pass collections to registers \n\nI made the design decision to create each process bar in a MongoDB collection instead of create a register for each\nprocess. I do not sure because I made that decision, and I think it would be better to replace the different collections\nby registers of a unique MongoDB collection.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jmgomezsoriano/db-tqdm",
    "keywords": "",
    "license": "lGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "db-tqdm",
    "package_url": "https://pypi.org/project/db-tqdm/",
    "platform": "",
    "project_url": "https://pypi.org/project/db-tqdm/",
    "project_urls": {
      "Homepage": "https://github.com/jmgomezsoriano/db-tqdm"
    },
    "release_url": "https://pypi.org/project/db-tqdm/1.1.4/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A database tqdm process monitor with web user interface.",
    "version": "1.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12958756,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ed9124b267dd4ee9ff27ddc7a46ee70b46fc93cd5f764606a87d59ff7458076",
          "md5": "a1a64241c4ccfb2c69a2d701577907ba",
          "sha256": "028a42ed8e0e7358e5e85ee93a383effaae9c56942f1f6b8aa02c1f2efe135fe"
        },
        "downloads": -1,
        "filename": "db-tqdm-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a1a64241c4ccfb2c69a2d701577907ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18908,
        "upload_time": "2021-05-24T15:00:33",
        "upload_time_iso_8601": "2021-05-24T15:00:33.613964Z",
        "url": "https://files.pythonhosted.org/packages/4e/d9/124b267dd4ee9ff27ddc7a46ee70b46fc93cd5f764606a87d59ff7458076/db-tqdm-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46f7e9b4c331838499be45f38ff626010858bd3191cf9fb247eb20569eeca051",
          "md5": "e16dc13e4b707756098a7f88f1149abf",
          "sha256": "db675ce474e739720b6000e8990ea413dd003fd9b4e20f139e7f2332b14ac3cf"
        },
        "downloads": -1,
        "filename": "db-tqdm-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e16dc13e4b707756098a7f88f1149abf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18901,
        "upload_time": "2021-05-24T15:00:49",
        "upload_time_iso_8601": "2021-05-24T15:00:49.803015Z",
        "url": "https://files.pythonhosted.org/packages/46/f7/e9b4c331838499be45f38ff626010858bd3191cf9fb247eb20569eeca051/db-tqdm-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c03a9b3204f37b2f4b6dd20cef87877097f4fb5d85ed0ffb2aeeb12a7c7726e3",
          "md5": "02b8adaa779cd4ba6c96d7fdc7036c18",
          "sha256": "6acb35b9d5ff8a56cf484b6c4050bca299495d1b3e502dc8362a07d8f789982c"
        },
        "downloads": -1,
        "filename": "db-tqdm-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "02b8adaa779cd4ba6c96d7fdc7036c18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 20198,
        "upload_time": "2021-05-26T08:47:35",
        "upload_time_iso_8601": "2021-05-26T08:47:35.726789Z",
        "url": "https://files.pythonhosted.org/packages/c0/3a/9b3204f37b2f4b6dd20cef87877097f4fb5d85ed0ffb2aeeb12a7c7726e3/db-tqdm-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7a0d693c3cffd281a714b1263ef5b7c57fdb748055688460a6c15eff8e1dcaf",
          "md5": "f72c5000a805e37659e27793c0a40fac",
          "sha256": "8b8aaf21bc3ae830b5996313043e7f0dbe4b970870bf0eb2fba4f51f5f76b339"
        },
        "downloads": -1,
        "filename": "db-tqdm-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f72c5000a805e37659e27793c0a40fac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 21837,
        "upload_time": "2021-10-23T13:29:44",
        "upload_time_iso_8601": "2021-10-23T13:29:44.973564Z",
        "url": "https://files.pythonhosted.org/packages/a7/a0/d693c3cffd281a714b1263ef5b7c57fdb748055688460a6c15eff8e1dcaf/db-tqdm-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daa1f93c981960d030969539d25dbeb6feeb81deaaaae39a413e7377957671d5",
          "md5": "29927ff267fc395aeeb4700de54b6be4",
          "sha256": "a8c065f93576d91971c100fc4d4f501dceb4a03e87f5aea1de81bf9639fae356"
        },
        "downloads": -1,
        "filename": "db-tqdm-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "29927ff267fc395aeeb4700de54b6be4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 23075,
        "upload_time": "2021-10-27T17:21:40",
        "upload_time_iso_8601": "2021-10-27T17:21:40.981981Z",
        "url": "https://files.pythonhosted.org/packages/da/a1/f93c981960d030969539d25dbeb6feeb81deaaaae39a413e7377957671d5/db-tqdm-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "135339bb59d89307491fe308174255f32f9f985caf58454d748f1db6c94481d4",
          "md5": "3507605190a28114796d141f4ba19595",
          "sha256": "3b9a6aa711e155aff862cdf79981a556df554f256270bc1e459d53463191b4fe"
        },
        "downloads": -1,
        "filename": "db-tqdm-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3507605190a28114796d141f4ba19595",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 23276,
        "upload_time": "2021-10-28T14:11:30",
        "upload_time_iso_8601": "2021-10-28T14:11:30.099645Z",
        "url": "https://files.pythonhosted.org/packages/13/53/39bb59d89307491fe308174255f32f9f985caf58454d748f1db6c94481d4/db-tqdm-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8eb3d4302f02a77ec56d564ec60badd4a8ee90582a17d1d520411a880d98e59f",
          "md5": "88d2f07b562550b9e2876a4a9a83ad52",
          "sha256": "fc5b0ccf95438d8b82f6535572c7c111c2102384928a4e603dac2455ca977862"
        },
        "downloads": -1,
        "filename": "db-tqdm-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "88d2f07b562550b9e2876a4a9a83ad52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 23424,
        "upload_time": "2021-11-26T13:41:22",
        "upload_time_iso_8601": "2021-11-26T13:41:22.014927Z",
        "url": "https://files.pythonhosted.org/packages/8e/b3/d4302f02a77ec56d564ec60badd4a8ee90582a17d1d520411a880d98e59f/db-tqdm-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d666f998f42da9f84919b550f8a9c168db2dc27c2a3a0639f7412a0631cff349",
          "md5": "a0bfc4fb7bd7ab3920d69873358c6f28",
          "sha256": "123cc7ee0035dfdc0c8849e3c5c9684f70fd953627350ded08bd3dfbf05d7341"
        },
        "downloads": -1,
        "filename": "db-tqdm-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a0bfc4fb7bd7ab3920d69873358c6f28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 23424,
        "upload_time": "2022-02-21T10:55:29",
        "upload_time_iso_8601": "2022-02-21T10:55:29.671556Z",
        "url": "https://files.pythonhosted.org/packages/d6/66/f998f42da9f84919b550f8a9c168db2dc27c2a3a0639f7412a0631cff349/db-tqdm-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d666f998f42da9f84919b550f8a9c168db2dc27c2a3a0639f7412a0631cff349",
        "md5": "a0bfc4fb7bd7ab3920d69873358c6f28",
        "sha256": "123cc7ee0035dfdc0c8849e3c5c9684f70fd953627350ded08bd3dfbf05d7341"
      },
      "downloads": -1,
      "filename": "db-tqdm-1.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "a0bfc4fb7bd7ab3920d69873358c6f28",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 23424,
      "upload_time": "2022-02-21T10:55:29",
      "upload_time_iso_8601": "2022-02-21T10:55:29.671556Z",
      "url": "https://files.pythonhosted.org/packages/d6/66/f998f42da9f84919b550f8a9c168db2dc27c2a3a0639f7412a0631cff349/db-tqdm-1.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}