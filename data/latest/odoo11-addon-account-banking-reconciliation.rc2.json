{
  "info": {
    "author": "NovaPoint Group LLC, Open Source Integrators, Odoo Community Association (OCA)",
    "author_email": "support@odoo-community.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Odoo",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Programming Language :: Python"
    ],
    "description": "===========================\nBank Account Reconciliation\n===========================\n\n.. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge2| image:: https://img.shields.io/badge/github-OCA%2Faccount--reconcile-lightgray.png?logo=github\n    :target: https://github.com/OCA/account-reconcile/tree/11.0/account_banking_reconciliation\n    :alt: OCA/account-reconcile\n.. |badge3| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/account-reconcile-11-0/account-reconcile-11-0-account_banking_reconciliation\n    :alt: Translate me on Weblate\n.. |badge4| image:: https://img.shields.io/badge/runbot-Try%20me-875A7B.png\n    :target: https://runbot.odoo-community.org/runbot/98/11.0\n    :alt: Try me on Runbot\n\n|badge1| |badge2| |badge3| |badge4| \n\nThis module is designed to provide an easy method in which Odoo accounting users\ncan manually reconcile/validate their financial transactions from their financial\ninstitution/transaction providers (e.g. Paypal, A financial institution, google\nwallet, etc) against Odoo GL Chart of Account bank accounts.\n\nUsers will be able to validate and indicate if a transaction has \"Cleared the\nBank\" using a checkmark on a new Reconcile Financial Account Statement view on\neach individual financial transaction. Users will also be able to mark\ntransactions on a bank account for future research.\n\nThe idea is that as a first step users will manually look at their paper statement\nand line-by-line check off which financial transactions have cleared the bank in\nOdoo using the new Bank Reconciliation Wizard. These changes will be displayed on\nthe  new Reconcile Financial Account Statement tree view screen. This is the\nprocess in which many companies reconcile (aka Audit) their bank account statements\nand accounting system today and represents good segregation of duties.\n\nUsers can save their in-process reconciliations.\n\nBackground\n----------\n\nUsing the search view filters - users will also be able to effectively sort,\nfilter the transactions on a particular GL Financial Account. This new screen\nwill display the journal items associated with a particular bank account.\nSeveral of the field labels have been relabeled to a more common vernacular.\n\nThe need for this module is driven by the following:\n\n* Users want to easily record whether bank transactions sent to their bank have\n  \"cleared the bank\"- definition of \"cleared the bank\": presented to the bank for\n  payment and paid by the bank - added/subtracted funds on a bank account.\n* Users want the ability to validate if the bank processed the transactions them\n  correctly (e.g. properly encoded transaction - e.g. company sent a payment of\n  $20.20 to the bank. Was it processed for $20.20?). This can be considered\n  \"Auditing the bank statement\". We don't assume the bank correctly processed any\n  transaction.\n* Users want to understand what payments they've made are still outstanding and\n  have not been paid by the bank.\n* The financial auditing segregation standard of separating the duties of:\n  recording customer payments and making deposits; recording supplier payments\n  and writing checks; and monitoring bank account activity. This segregation of\n  duties is necessary to monitor and help prevent fraud.\n\nAssumptions\n-----------\n\n#. Companies using Odoo have setup a one-to-one relationship between their\n   bank accounts and their Odoo GL accounts. Each bank account should have a\n   corresponding GL account that is not shared with another account.\n   Example:\n\n   +----------------------+------------------------------------------------------------+\n   | Odoo GL Account #    | Corresponding Bank Account                                 |\n   +======================+============================================================+\n   | 10100                | Bank (AR) Account Checking 5434 (held at Institution A)    |\n   +----------------------+------------------------------------------------------------+\n   | 10200                | Master Bank Account 2343 (held at Institution A)           |\n   +----------------------+------------------------------------------------------------+\n   | 10300                | Bank Payable Account Checking  5678 (held at Institution A)|\n   +----------------------+------------------------------------------------------------+\n   | 10400                | Bank Payroll Account 6656 (held at Institution B)          |\n   +----------------------+------------------------------------------------------------+\n   | 10500                | Paypal Account 3343 (held at Paypal)                       |\n   +----------------------+------------------------------------------------------------+\n   | 10600                | Google Wallet Account 6788                                 |\n   +----------------------+------------------------------------------------------------+\n   | 10700                | AMEX Corporate Card Account 9989                           |\n   +----------------------+------------------------------------------------------------+\n\n#. Companies have included a Non-Deposited Funds Account in their GL account\n   (typically in current assets in their bank account areas). This account is\n   used to store payments that have been recorded in Odoo - but not yet\n   deposited into the financial institution. (NOTE: this account is important to\n   have if the user \"batches check deposits\"- which is the process of making a\n   large single deposits of customer payment into the bank (e.g. $20,000USD), but\n   it is made up of smaller checks (e.g. 20 checks of $1,000 each). Many banks\n   just record the total deposit amount ($20,000) and don￢ﾀﾙt provide the\n   breakdown of the individual checks that make up the larger deposit. This\n   setup approach enables users to drill down and see the individual checks that\n   make up a larger deposit.\n\nRecommendations\n---------------\n\nFrom a cash management and financial control perspective, it is recommended that\nusers establish the following four (4) bank accounts at their financial\ninstitution at a minimum to handle financial transactions. (NOTE: we recommend\nusers place the last 4 digits of their bank account in the GL account name of the\naccount. It helps accountants in their management of the system):\n\n* Bank (AR) Account Checking 5434. This is a checking account designated as the\n  account where payments made to the company are deposited (e.g. a customer\n  payment made by check is deposited here, or a customer paying by electronic\n  transaction EFT/ACH is deposited into this GL).\n* Master Bank Account 2343. This is the master account in which the company\n  keeps the majority of their funds. Often with the most limited access.\n* Bank Payable Account Checking  5678. This is a checking account designated for\n  the company to pay their expenses from. (e.g. Company writes a check to pay a\n  supplier for their office supplies).\n* Bank Payroll Account 6656. This is a checking account designated for a company\n  to pay their employees and payroll.\n\nNote\n----\n\nThere has been common confusion in the Odoo community about managing bank\nstatements in the base Odoo system. This module hopes to alleviate this gap and\nprovide users with a sound alternative to maintain fiscal control, be easy to\nunderstand, and allow for future growth.\n\nWhy this approach?\n------------------\n\nUsers in Odoo have several options in which to record financial transactions that\naffect the balances of a bank account (GL Bank Account entries). We believe our\napproach allows these to work in conjunction with each other: Import Electronic\nBank Statements to enter payments (this approach follows the philosophy that you\nfirst find out that a transaction has occurred from your bank which is very\ncommon in Europe due to the electronic nature of transactions).\n\n* Payment Order Payments (using the direct Method) - Payments are instantly recorded\n  and financial transactions posted into the GL\n* Voucher Payments - Payments are instantly recorded and financial transactions\n  posted into the GL\n* Sales Receipts/Refunds\n* Transfers between accounts (a new module is being developed to help manage this)\n* Funds moved from the Undeposited Funds GL account to a Bank Account GL account.\n* Direct Journal Entries\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nConfiguration\n=============\n\nTo configure this module\n\n* Go to Settings and activate the developer mode\n* Go to Settings > Users and Companies > Users\n* Add users who will prepare the bank statements to the \"Bank Statement Preparer\"\n* Add users who will verify them to the \"Bank Statement Manager\" group\n\nUsage\n=====\n\nTo use this module:\n\n* Go to Accounting > Adviser > Bank Statements\n* Create a new bank statement\n* Select the account and provide a name\n* Enter the ending balance from the bank statement\n* Check the transactions that cleared the bank\n* Check the balances\n* Save and submit for review\n* As a reviewer, check the transactions, totals and balances\n* Click on Process\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/account-reconcile/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us smashing it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/account-reconcile/issues/new?body=module:%20account_banking_reconciliation%0Aversion:%2011.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n~~~~~~~\n\n* NovaPoint Group LLC\n* Open Source Integrators\n\nContributors\n~~~~~~~~~~~~\n\n* Nova Point Group <info@novapointgroup.com>\n* Balaji Kannan <bkannan@opensourceintegrators.com>\n* Bhavesh Odedra <bodedra@opensourceintegrators.com>\n* Sandeep Mangukiya <smangukiya@opensourceintegrators.com>\n* Murtuza Saleh <murtuza.saleh@serpentcs.com>\n\nOther credits\n~~~~~~~~~~~~~\n\n* Nova Point Group <https://www.novapointgroup.com>\n* Open Source Integrators <https://www.opensourceintegrators.com>\n* Serpent Consulting Services Pvt. Ltd. <https://www.serpentcs.com>\n\nMaintainers\n~~~~~~~~~~~\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\n.. |maintainer-max3903| image:: https://github.com/max3903.png?size=40px\n    :target: https://github.com/max3903\n    :alt: max3903\n\nCurrent `maintainer <https://odoo-community.org/page/maintainer-role>`__:\n\n|maintainer-max3903| \n\nThis module is part of the `OCA/account-reconcile <https://github.com/OCA/account-reconcile/tree/11.0/account_banking_reconciliation>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/OCA/account-reconcile",
    "keywords": "",
    "license": "AGPL-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "odoo11-addon-account-banking-reconciliation",
    "package_url": "https://pypi.org/project/odoo11-addon-account-banking-reconciliation/",
    "platform": "",
    "project_url": "https://pypi.org/project/odoo11-addon-account-banking-reconciliation/",
    "project_urls": {
      "Homepage": "https://github.com/OCA/account-reconcile"
    },
    "release_url": "https://pypi.org/project/odoo11-addon-account-banking-reconciliation/11.0.1.0.0.99.dev4/",
    "requires_dist": [
      "odoo (<11.1dev,>=11.0a)"
    ],
    "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
    "summary": "Check transactions that cleared the bank",
    "version": "11.0.1.0.0.99.dev4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5603697,
  "releases": {
    "11.0.1.0.0.99.dev3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21486b0645690f4eb08aa88a22b37ac26df116a04c6da4d82dd34affe99577f2",
          "md5": "126eb4c193aef2bd0506c123f2c8082d",
          "sha256": "aca73b9223b61a2d8a0ccad4c0b6b56c6ca876363ed1b4e39f51a70db0d00aee"
        },
        "downloads": -1,
        "filename": "odoo11_addon_account_banking_reconciliation-11.0.1.0.0.99.dev3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "126eb4c193aef2bd0506c123f2c8082d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 50928,
        "upload_time": "2019-07-09T04:37:08",
        "upload_time_iso_8601": "2019-07-09T04:37:08.030259Z",
        "url": "https://files.pythonhosted.org/packages/21/48/6b0645690f4eb08aa88a22b37ac26df116a04c6da4d82dd34affe99577f2/odoo11_addon_account_banking_reconciliation-11.0.1.0.0.99.dev3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "11.0.1.0.0.99.dev4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6514273758be81cb12585b116ac3e66647729e8ecc6b28858c2e8e02c3f795a7",
          "md5": "04ab9d7067cc3cb55186b30f0da44e3e",
          "sha256": "e550bdfbc8ff69986f6b4c062d7e86ea5f9e29645e511faa4008626dd477abd4"
        },
        "downloads": -1,
        "filename": "odoo11_addon_account_banking_reconciliation-11.0.1.0.0.99.dev4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04ab9d7067cc3cb55186b30f0da44e3e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 50924,
        "upload_time": "2019-07-30T04:45:26",
        "upload_time_iso_8601": "2019-07-30T04:45:26.123516Z",
        "url": "https://files.pythonhosted.org/packages/65/14/273758be81cb12585b116ac3e66647729e8ecc6b28858c2e8e02c3f795a7/odoo11_addon_account_banking_reconciliation-11.0.1.0.0.99.dev4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6514273758be81cb12585b116ac3e66647729e8ecc6b28858c2e8e02c3f795a7",
        "md5": "04ab9d7067cc3cb55186b30f0da44e3e",
        "sha256": "e550bdfbc8ff69986f6b4c062d7e86ea5f9e29645e511faa4008626dd477abd4"
      },
      "downloads": -1,
      "filename": "odoo11_addon_account_banking_reconciliation-11.0.1.0.0.99.dev4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "04ab9d7067cc3cb55186b30f0da44e3e",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
      "size": 50924,
      "upload_time": "2019-07-30T04:45:26",
      "upload_time_iso_8601": "2019-07-30T04:45:26.123516Z",
      "url": "https://files.pythonhosted.org/packages/65/14/273758be81cb12585b116ac3e66647729e8ecc6b28858c2e8e02c3f795a7/odoo11_addon_account_banking_reconciliation-11.0.1.0.0.99.dev4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}