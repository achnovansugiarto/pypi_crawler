{
  "info": {
    "author": "Ray Salemi",
    "author_email": "ray.raysalemi@siemens.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# License\n© 2022 Siemens.\n\n This material may only be used with products of Siemens Industry Software Inc.\n or its affiliates, and for no other purpose.\n\n**License continued below**\n\n# pyquesta module\n\n**pyquesta* provides resources for Python programmers using Questa. The first\nresource released is `SVconduit`\n\n## SVConduit\n\nThe SystemVerilog Conduit system with the **SVConduit** module allows a Python\ntestbench writer to exchange an object with SystemVerilog.  This allows the\nPython programmer to leverage Questa's advanced constraint-solver, and\nfunctional coverage and the UCDB.\n\n### SVconduit introduction\n\nThe first step to using SVConduit is to define a class using YAML. The system will generated\nmodules that define a Python version of the class and a SystemVerilog version of the class.\n\n#### Define the communication class\n\nFor example, here is a transction class (`ALUCommand`) that sends instructions\nto the TinyALU, which has two 8-bit legs and four operations.  \n\n```YAML\nALUCommand:\n  A:\n   uchar\n  B:\n   uchar\n  op:\n   uchar\n```\n\n\nThe `gen_svconduit_pkgs` program reads this YAML file and generates a Python module\nand SystemVerilog package that define the class in those languages along with the \nserialization methods to pass it between Python and SystemVerilog.\n\n#### Commuinate with SystemVerilog from Python\n\nThis snippet of test code creates a `cmd` using the SystemVerilog constraint-solver \nand writes the command into a SystemVerilog covergroup:\n\n```python\nfrom pyquesta import SVConduit\nfrom ALUCommand import *\n\n<snip>\n    for _ in range(2):\n        cmd = SVConduit.get(ALUCommand)  # get random command\n        SVConduit.put(cmd)  # put in coverage\n<snip>\n```\n\n`SVConduit.get()` class method knows where to get the object based on the\n`ALUCommand` class passed to it. The `SVConduit.put()` class method knows where\nto send the object based on its type.\n\n#### Populate the SystemVerilog functions\n\nThe `ALUCommand.sv` file defines a package named `ALUCommand`.  This package\ndefines `sv_put()` and `sv_get()` which define the SystemVerilog behavior\nassociated with `ALUCommand` objects.\n\nThe `sv_get()` function uses the constraint solver to randomize an `ALUCommand` object\nand return it to Python:\n\n```SystemVerilog\nfunction string sv_get();\n    ALUCommand obj;\n    string obj_str;\n    obj = new();\n    // Insert user to populate obj\n    void'(obj.randomize() with {op inside {[1:4]};});\n    // User code ends. You must have populated obj\n    obj_str = obj.serialize();\n    return obj_str;\nendfunction\n```\nThe `sv_put()` function gets a handle to a singleton containing a covergroup and samples the command:\n\n```SystemVerilog\nfunction void sv_put(ALUCommand_buf_t byte_buf);\n    ALUCommand obj;\n    obj = new(byte_buf);\n    // Replace with user code for put function\n    cov = Coverer::get();\n    cov.A = obj.A;\n    cov.B = obj.B;\n    cov.op = obj.op;\n    cov.op_cov.sample();\n    // User code ends. You have used data from obj\nendfunction\n```\n\nNow the Python code can get objects and send objects to the SystemVerilog package.\n\n## Learn more about SVConduit\n\nYou can get a copy of the example used in this `README.md` file as well as read a tutorial\nand documentation about SVConduit at the [Verification Academy](www.verificationacademy.com). \n\n# Full license\n© 2022 Siemens.\n\n This material may only be used with products of Siemens Industry Software Inc.\n or its affiliates, and for no other purpose.\n\nIf you have a signed license agreement with Siemens for the product with which\nthis Software will be used, your use of this Software is subject to the scope of\nlicense and the software protection and security provisions of that agreement.\nIf you do not have such a signed license agreement, your use is subject to the\nSiemens Universal Customer Agreement, which may be viewed at\nhttps://www.sw.siemens.com/en-US/sw-terms/base/uca/, as supplemented by the\nelectronic design automation (EDA) specific terms which may be viewed at\nhttps://www.sw.siemens.com/en-US/sw-terms/supplements/.\n\nNOTWITHSTANDING ANYTHING TO THE CONTRARY IN YOUR SIGNED LICENSE AGREMENT WITH\nSISW OR THE SISW END USER LICENSE AGREEMENT, THIS SOFTWARE IS BEING PROVIDED “AS\nIS;” SISW MAKES NO WARRANTY OF ANY KIND WITH REGARD TO THIS SOFTWARE INCLUDING,\nBUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE, AND NON-INFRINGEMENT OF INTELLECTUAL PROPERTY. SISW SHALL\nNOT BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL OR PUNITIVE\nDAMAGES, LOST DATA OR PROFITS, EVEN IF SUCH DAMAGES WERE FORESEEABLE, ARISING\nOUT OF OR RELATED TO THIS SOFTWARE OR THE INFORMATION CONTAINED IN IT, EVEN IF\nSISW HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\nUnless agreed in writing, SISW has no obligation to support or otherwise\nmaintain this Software.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Siemens Universal Customer Agreement",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyquesta",
    "package_url": "https://pypi.org/project/pyquesta/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyquesta/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pyquesta/2.5.1/",
    "requires_dist": [
      "cocotb (>=1.6.0)",
      "protlib",
      "pyyaml"
    ],
    "requires_python": ">=3.6",
    "summary": "A link between Questa and Python",
    "version": "2.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13868378,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90a43be874f90535dc4d798798f645652f54f2c8317f233a14ba48406ecd1a30",
          "md5": "da66336af230d011c424809bc327ffbe",
          "sha256": "32fe98b2b8a857e94f863c0abb7f0357385c785c2db626991d9b776b93c43f35"
        },
        "downloads": -1,
        "filename": "pyquesta-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da66336af230d011c424809bc327ffbe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15020,
        "upload_time": "2022-02-09T16:24:07",
        "upload_time_iso_8601": "2022-02-09T16:24:07.033286Z",
        "url": "https://files.pythonhosted.org/packages/90/a4/3be874f90535dc4d798798f645652f54f2c8317f233a14ba48406ecd1a30/pyquesta-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68799165224904b9b264355abdf431c95f5defcbe8672ae3da2f587851f35a6d",
          "md5": "b91100b26b219700432e6711a65c6fb6",
          "sha256": "ce9eb53cf872755f089790223517c036525ce67ae64c74f02592eda3e7dac5fd"
        },
        "downloads": -1,
        "filename": "pyquesta-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b91100b26b219700432e6711a65c6fb6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7177,
        "upload_time": "2022-02-09T16:24:09",
        "upload_time_iso_8601": "2022-02-09T16:24:09.054898Z",
        "url": "https://files.pythonhosted.org/packages/68/79/9165224904b9b264355abdf431c95f5defcbe8672ae3da2f587851f35a6d/pyquesta-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af2c8538e162c8d6aebde5c2e3d6e7da706ac8a516bf745f0c9562c5f9597bb8",
          "md5": "6ac1aea1e17d619cadf6f56cd31ba654",
          "sha256": "26fdf4d3b8d2e802b7944afbb66efa101e5468050168770d667fd934aa7b182f"
        },
        "downloads": -1,
        "filename": "pyquesta-2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ac1aea1e17d619cadf6f56cd31ba654",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15031,
        "upload_time": "2022-02-28T15:19:33",
        "upload_time_iso_8601": "2022-02-28T15:19:33.715107Z",
        "url": "https://files.pythonhosted.org/packages/af/2c/8538e162c8d6aebde5c2e3d6e7da706ac8a516bf745f0c9562c5f9597bb8/pyquesta-2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05bad33cd7c398b067c7fd68c2ab7076ff8e990d9f0576755a7098068a74b4a6",
          "md5": "5a55c4ccc4a9fd9e8aaf196b9bbc2dc9",
          "sha256": "7524ff935aa0d9e70123e48dfa73ad1036dd9db52b9f0914d26e000d04a22c75"
        },
        "downloads": -1,
        "filename": "pyquesta-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5a55c4ccc4a9fd9e8aaf196b9bbc2dc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7199,
        "upload_time": "2022-02-28T15:19:35",
        "upload_time_iso_8601": "2022-02-28T15:19:35.678348Z",
        "url": "https://files.pythonhosted.org/packages/05/ba/d33cd7c398b067c7fd68c2ab7076ff8e990d9f0576755a7098068a74b4a6/pyquesta-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e45beb364e9dfb67354936b765fb18b69bc9460cca66b7849c3bddc83b42c0b8",
          "md5": "29b9579d96c03cd8105a9d77a33e7197",
          "sha256": "2b4d392a5faaf7235f74fb0b1b9380e6b6c444cd9b426f83466c0d99a1583c26"
        },
        "downloads": -1,
        "filename": "pyquesta-2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29b9579d96c03cd8105a9d77a33e7197",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15021,
        "upload_time": "2022-05-19T17:44:55",
        "upload_time_iso_8601": "2022-05-19T17:44:55.734977Z",
        "url": "https://files.pythonhosted.org/packages/e4/5b/eb364e9dfb67354936b765fb18b69bc9460cca66b7849c3bddc83b42c0b8/pyquesta-2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5a5e8b294b2f42b401641eec9f73193155cef305e723b7402879244537477cf",
          "md5": "6051e3e5e33ea2961d3a3123e376fe8d",
          "sha256": "1907e8a10d0b9eed6f23755dcd9bfc699ce3d25ee6486fd8eea0bf26068bcc27"
        },
        "downloads": -1,
        "filename": "pyquesta-2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6051e3e5e33ea2961d3a3123e376fe8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7152,
        "upload_time": "2022-05-19T17:44:57",
        "upload_time_iso_8601": "2022-05-19T17:44:57.716760Z",
        "url": "https://files.pythonhosted.org/packages/a5/a5/e8b294b2f42b401641eec9f73193155cef305e723b7402879244537477cf/pyquesta-2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76346b4a5bbc67a7f5c6cd7fd8279d09cf9b3099ab8a66d7483080d4bbc23c17",
          "md5": "d447007a05fdd3281b60edc80399e781",
          "sha256": "77b2ff8ad89082a9a5a219c25d68e7bb09d921820c5e8c7e4caa1ddbcd78f4dc"
        },
        "downloads": -1,
        "filename": "pyquesta-2.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d447007a05fdd3281b60edc80399e781",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15057,
        "upload_time": "2022-05-19T19:06:02",
        "upload_time_iso_8601": "2022-05-19T19:06:02.421160Z",
        "url": "https://files.pythonhosted.org/packages/76/34/6b4a5bbc67a7f5c6cd7fd8279d09cf9b3099ab8a66d7483080d4bbc23c17/pyquesta-2.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3a1cb720a3b1462cd974e1f9265b91a8fe710427da01847445dc0a170f17996",
          "md5": "41e4e2361fbfc7e69ee03cf3c4f042ab",
          "sha256": "897c21b817eb7f66db146854a4533829c9c1cb54a4a0d4da44b6d29ed7173182"
        },
        "downloads": -1,
        "filename": "pyquesta-2.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "41e4e2361fbfc7e69ee03cf3c4f042ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7162,
        "upload_time": "2022-05-19T19:06:04",
        "upload_time_iso_8601": "2022-05-19T19:06:04.360292Z",
        "url": "https://files.pythonhosted.org/packages/c3/a1/cb720a3b1462cd974e1f9265b91a8fe710427da01847445dc0a170f17996/pyquesta-2.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76346b4a5bbc67a7f5c6cd7fd8279d09cf9b3099ab8a66d7483080d4bbc23c17",
        "md5": "d447007a05fdd3281b60edc80399e781",
        "sha256": "77b2ff8ad89082a9a5a219c25d68e7bb09d921820c5e8c7e4caa1ddbcd78f4dc"
      },
      "downloads": -1,
      "filename": "pyquesta-2.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d447007a05fdd3281b60edc80399e781",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15057,
      "upload_time": "2022-05-19T19:06:02",
      "upload_time_iso_8601": "2022-05-19T19:06:02.421160Z",
      "url": "https://files.pythonhosted.org/packages/76/34/6b4a5bbc67a7f5c6cd7fd8279d09cf9b3099ab8a66d7483080d4bbc23c17/pyquesta-2.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c3a1cb720a3b1462cd974e1f9265b91a8fe710427da01847445dc0a170f17996",
        "md5": "41e4e2361fbfc7e69ee03cf3c4f042ab",
        "sha256": "897c21b817eb7f66db146854a4533829c9c1cb54a4a0d4da44b6d29ed7173182"
      },
      "downloads": -1,
      "filename": "pyquesta-2.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "41e4e2361fbfc7e69ee03cf3c4f042ab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7162,
      "upload_time": "2022-05-19T19:06:04",
      "upload_time_iso_8601": "2022-05-19T19:06:04.360292Z",
      "url": "https://files.pythonhosted.org/packages/c3/a1/cb720a3b1462cd974e1f9265b91a8fe710427da01847445dc0a170f17996/pyquesta-2.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}