{
  "info": {
    "author": "Documatic",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Automated Documentation\n\nThis project is in a private beta.\nfor more information on using the tool,\nto provide feedback,\nor request access for a friend or colleague,\ncontact the beta runners.\n**N.b.** this project calls an AWS API\nwith snippets of code\nin order to generate documentation.\nNo code is stored.\nOnly your API key and a hash of your project name,\nfor the purposes of identifying usage,\nare logged.\n\nDocumatic detects important information\nabout your project,\nhighlights important scripts,\nfunctions and classes,\nand summarises bits of code.\nSee the [featureset](#featureset)\nfor information on what is supported.\n**N.b**\nSome users have AI-aided code summarisation\nactivated,\nhowever that is not the default behaviour.\nIf you would like to AI-aided summarisation,\nplease contact the team\n(currently Python support only).\nIf you do not have AI-aided summarisation,\nthe tool fallsback to reading existing docstrings.\nIf you have a small python project\n(a few functions),\nall functions will be summarised.\nWe are working on improve our coverage\nfor functions and classes\nso that useful documentation is generated for all.\nIf you have questions about the docs generated for your project,\nplease email `info@documatic.com` with a link to your codebase\nand your generated docs attached.\n\n## Get started\n\n### Requirements\n\n* `python 3.8` or greater\n* `pip install documatic`\n* In the base directory of your project, create a `.documatic.ini` config file\n* Run `documatic-init` in a terminal in your project's base directory to generate a template config\n* Documatic API key\n\n#### Config file\n\n##### pyproject.toml (preferred)\n\nConfigure `documatic`\nin your pyproject.toml file\nunder a `[tool.documatic]` section.\nIt can have the following fields\n\n| Field | Purpose | Required | Default |\n:------|:--------|:---------|:--------|\n| name | Project name | Y | - |\n| description | Short description of the project | N | \"SHORT PROJECT DESCRIPTION\" |\n| srcdir | Path to source code directory from the project root | Y | - |\n| package | Name of the project codebase as imported in files (if not using local imports) | N | `srcdir` |\n| local | For development purposes only. If `true`, uses local server for testing | N | `false` |\n| docdir | Path to the folder in which generated docs should be saved. `.` is project root | Y | - |\n| docname | Name of the document to be generated. \".md\" file suffix will be added if not present | N | technical_doc.md |\n\n**Note: strings in toml files must be wrapped in quotes.**\nE.g.:\n\n```\n[tool.documatic]\nname = \"documatic\"\nsrcdir = \"documatic\"\ndocdir = \"docs/\"\ndocname = \"README.md\"\n```\n\n##### .documatic.ini\n\nInstead of a pyproject.toml, you can use a `.documatic.ini` file.\n\n`.documatic.ini` can have the following fields:\n\n| Header | Field | Purpose | Required | Default |\n|:-------|:------|:--------|:---------|:--------|\n| project | name | Project name | Y | - |\n| project | description | Short description of the project | N | \"SHORT PROJECT DESCRIPTION\" |\n| project | srcdir | Path to source code directory from the project root | Y | - |\n| project | package | Name of the project codebase as imported in files (if not using local imports) | N | `srcdir` |\n| project | local | For development purposes only. If `true`, uses local server for testing | N | `false` |\n| project | language | The predominant codebase language | N | python |\n| docs | docdir | Path to the folder in which generated docs should be saved. `.` is project root | Y | - |\n\nAn example `.documatic.ini` is:\n\n```\n[project]\nname = MyCoolProject\nlanguage = python\nsrcdir = src/cool\npackage = cool\n\n[docs]\ndocdir = .\n```\n\n#### API Key\n\nTo get full functionality of `documatic`,\na (free) API key is needed.\nIf you have been invited to join\nthe private beta,\nyour coordinator will provide\nan API key for\nand your team members\nto use.\nTo setup your API key,\ncreate a `.env` file in your project root\nand give it the following fields.\n\n```\nDOCUMATIC_API_KEY = <YOUR-API-KEY>\n```\n\n**IMPORTANT: DO NOT ADD `.env` TO SOURCE CONTROL. YOUR API KEY MUST REMAIN PRIVATE.**\nWhen `documatic` reads your config file,\nit uses `python-dotenv` to read environment variables\nfrom the `.env` file.\n\n### Generate documentation\n\n**Via CLI:**\n\nThe documatic package provides\na number of command line arguments:\n\n| Command | Purpose |\n|:--------|:--------|\n| `documatic` | Generates/updates technical documentation |\n| `documatic code` | Updates code snippets in technical documentation |\n| `documatic changelog` | Generates a changelog/release notes |\n| `documatic api` | Generate documentation for the API created by your project, if applicable (only **FastAPI** currently supported) |\n\nTo run one of the commands:\n\n1. Open a terminal/command prompt\n2. Navigate to the root directory of your project\n3. Ensure you have the correct configuration and API key setup\n4. Run your command of choice\n\n**VSCode:**\n\nThere is a VSCode extension for this tool.\nSearch for `documatic` in the marketplace.\nThe extension comes with additional features\nfor streamlining your entire documentation generation process.\n\n## Concepts\n\n### Doc comments\n\nDocumatic adds markdown comments to technical documentation\nto signal the start\nand end\nof different sections,\nto help you curate automated technical documentation.\nFor example\n```\n<!---Documatic-section-code: e22c5ecb-myproj/folder/file.py-20-25--->\n```\ntells Documatic that the following bit of documentation\nis a code snippet\nand gives some information on when it was generated.\nIf that snippet of code is updated over time,\nDocumatic will automatically track that code\nand update the snippet.\n\n### Fixed document sections\n\nHave a bit of documentation\nwhich isn't autogenerated by Documatic?\nWrap the section in comments:\n\n```\n<!---Documatic-section-fixed: <position><number>-start--->\nBit of documentation to fix in place.\nMaybe add your logo here,\nor a markdown badge?\n<!---Documatic-section-fixed: <position><number>-end--->\n```\n\nWhere `<position>` is `top` to fix the section to the top\nof the document\nand `bottom` to fix it to the bottom,\nand `<number>` is the order within the fixed sections.\nE.g. `<!---Documatic-section-fixed: top1-start--->`\nwould fix some documentation to the very top\nof the document.\n\n## Featureset\n\nOur current features\nand short-term roadmap.\n\n### Environment\n\n* [X] requirements.txt\n* [X] environment.yml\n* [X] setup.py\n* [X] setup.cfg\n* [ ] pyproject.toml\n* [ ] tox.ini\n\n### Summarisation\n\n* [X] AI-aided function summarisation\n* [ ] AI-aided class summarisation (coming soon!)\n* [X] Docstring + AI summarisation \n\n### Misc\n\n* [X] Environment variables\n* [X] REST requests\n* [X] AWS calls (e.g. boto3)\n* [X] MongoDB\n* [X] FastAPI\n* [X] Flask\n* [ ] Celery\n* [ ] Click (CLI)\n\n#### Important code\n\n`Documatic` tries to infer\nwhat bits of code are important enough to document.\nIt does this in a number of ways:\n* Imports into a top-level `__init__` or `__main__`\n* A `if __name__ == \"__main__\"` script entrypoint\n* Inherited class structure\n* Classes used as type hints in functions\n\nIf no bits of code are identified as \"important\"\nin your codebase,\nplease contact `info@documatic.com`\nwith details\nso we can improve the tool\nto work better with your code.\n\n## License\n\nYou may download this package via pip\nand use as intended,\n**but you may not copy,\nshare\nor edit the code**.\nThis is signified by the lack of specific license attached to the codebase.\n\n## Development - Get started\n\n### Requirements\n\n- Developed with `python 3.9`\n- `pip install -r requirements.txt`\n- `pip install -r requirements-dev.txt`\n- `pip install -e .`\n\n\nIn `.documatic.ini` add the following tags:\n\n```\n[project]\n...\nlocal = true\n...\n```\n\nThis will call `localhost` instead of the hosted server.\nIn a separate terminal,\nrun the web app locally in order to connect.\n\n## Style Guide\n\n- Use `black` to format code\n- Other than `black` niches, adhere to PEP\n- Use `isort` to sort imports\n- Use numpy-style docstrings\n- Use type hints and verify with `mypy`\n\n### Testing\n\n| CI | Purpose |\n|:--:|:--------|\n| `.github/workflows/test.yml` | Run linting and unit tests. Executes on all pull request branches |\n\nTesting performed with `pytest`.\nRun `pytest tests/unit`\nto run unit tests.\nThere are integration tests\nwhich should be run with a local API app running.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "documatic",
    "package_url": "https://pypi.org/project/documatic/",
    "platform": null,
    "project_url": "https://pypi.org/project/documatic/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/documatic/0.8.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "API interface for generating documentation for Python projects",
    "version": "0.8.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13323269,
  "releases": {
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2345b3bc129861d3f97a8b5b3923c0465f14e99164c28d7457bb424723739e39",
          "md5": "e99de10717375ce2bce529680dd04dd7",
          "sha256": "04f7001e5fb1021147eeaa7c4f81b1756f0daf15c5a7e296d5ae26479ae1bff0"
        },
        "downloads": -1,
        "filename": "documatic-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e99de10717375ce2bce529680dd04dd7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5107,
        "upload_time": "2022-03-28T14:56:48",
        "upload_time_iso_8601": "2022-03-28T14:56:48.755961Z",
        "url": "https://files.pythonhosted.org/packages/23/45/b3bc129861d3f97a8b5b3923c0465f14e99164c28d7457bb424723739e39/documatic-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2345b3bc129861d3f97a8b5b3923c0465f14e99164c28d7457bb424723739e39",
        "md5": "e99de10717375ce2bce529680dd04dd7",
        "sha256": "04f7001e5fb1021147eeaa7c4f81b1756f0daf15c5a7e296d5ae26479ae1bff0"
      },
      "downloads": -1,
      "filename": "documatic-0.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e99de10717375ce2bce529680dd04dd7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5107,
      "upload_time": "2022-03-28T14:56:48",
      "upload_time_iso_8601": "2022-03-28T14:56:48.755961Z",
      "url": "https://files.pythonhosted.org/packages/23/45/b3bc129861d3f97a8b5b3923c0465f14e99164c28d7457bb424723739e39/documatic-0.8.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}