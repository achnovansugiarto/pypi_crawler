{
  "info": {
    "author": null,
    "author_email": "HCP LLC <support@highchartspython.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Jupyter",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Healthcare Industry",
      "Intended Audience :: Manufacturing",
      "Intended Audience :: Science/Research",
      "License :: Other/Proprietary License",
      "Operating System :: OS Independent",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Office/Business",
      "Topic :: Office/Business :: Scheduling",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Code Generators",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "###################################################\nHighcharts Gantt for Python\n###################################################\n\n**High-end Gantt chart visualization for the Python ecosystem**\n\n**Highcharts Gantt for Python** is an extension to the\n`Highcharts Stock for Python <https://stock-docs.highchartspython.com>`__ library, providing\na Python wrapper for the\n`Highcharts Gantt <https://www.highcharts.com/products/gantt/>`__\nJavaScript data visualization library. \n\n**Highcharts Gantt for Python** also supports\n\n  * **Highcharts Core (JS)** - the core Highcharts data visualization library\n  * **Highcharts Stock (JS)** - the Highcharts extension providing time series and asset price data visualization\n  * The **Highcharts Export Server** - enabling the programmatic creation of static\n    (downloadable) data visualizations\n\n**Highcharts Gantt for Python** is fully integrated with the broader Python ecosystem,\nfeaturing native integrations with:\n\n  * **Jupyter Labs/Notebook**. You can now produce high-end and interactive plots and\n    renders using the full suite of Highcharts visualization capabilities.\n  * **Pandas**. Automatically produce data visualizations from your Pandas dataframes\n  * **PySpark**. Automatically produce data visualizations from data in a PySpark\n    dataframe.\n  * **Asana**. You can generate Gantt charts from your Asana projects using one simple method call.\n  * **Monday.com**. Produce Gantt charts automatically from your Monday.com projects.\n  * **JIRA**. Generate Gantt charts from your Atlassian JIRA Cloud projects.\n\n**COMPLETE DOCUMENTATION:** http://gantt-docs.highchartspython.com/en/latest/index.html\n\n-----------------------\n\n***************************************\nThe Highcharts for Python Toolkit\n***************************************\n\nThe **Highcharts Gantt for Python** library is part of the broader \n`Highcharts for Python Toolkit <https://www.highcharts.com/integrations/python>`__, \nwhich together provides comprehensive support across the entire \n`Highcharts <https://www.highcharts.com>`__ suite of data visualization libraries:\n\n.. list-table::\n  :widths: 30 30 40\n  :header-rows: 1\n\n  * - Python Library\n    - JavaScript Library\n    - Description\n  * - `Highcharts Core for Python <https://core-docs.highchartspython.com/>`__\n    - `Highcharts Core (JS) <https://www.highcharts.com/products/highcharts/>`__\n    - (this library) the core Highcharts data visualization library\n  * - `Highcharts Stock for Python <https://stock-docs.highchartspython.com/>`__\n    - `Highcharts Stock (JS) <https://www.highcharts.com/products/stock/>`__\n    - the time series visualization extension to Highcharts Core\n  * - `Highcharts Maps for Python <https://maps-docs.highchartspython.com/>`__ \n    - `Highcharts Maps (JS) <https://www.highcharts.com/products/maps/>`__\n    - the map visualization extension to Highcharts Core\n  * - **Highcharts Gantt for Python**\n    - `Highcharts Gantt (JS) <https://www.highcharts.com/products/gantt/>`__\n    - the Gantt charting extension to Highcharts Core\n  * - (all libraries in the Python toolkit)\n    - The **Highcharts Export Server** \n    - enabling the programmatic creation of static (downloadable) data visualizations\n\n--------------------\n\n***************\nInstallation\n***************\n\nTo install **Highcharts Gantt for Python**, just execute:\n\n  .. code-block:: bash\n\n    $ pip install highcharts-gantt\n\n-------------\n\n*********************************\nWhy Highcharts for Python?\n*********************************\n\n`Highcharts <https://www.highcharts.com>`__ is the world's most popular, most powerful, \ncategory-defining JavaScript data visualization library. If you are building a web or \nmobile app/dashboard that will be visualizing data in some fashion, you should \nabsolutely take a look at the Highcharts suite of solutions. Take a peak at some \nfantastic `demo visualizations <https://www.highcharts.com/demo>`__.\n\nAs a suite of JavaScript libraries, `Highcharts <https://www.highcharts.com>`__ is \nwritten in JavaScript, and is used to configure and render data visualizations in a\nweb browser (or other JavaScript-executing) environment. As a set of JavaScript\nlibraries, its audience is JavaScript developers. But what about the broader ecosystem of\nPython developers and data scientists?\n\nGiven Python's increasing adoption as the technology of choice for data science and for\nthe backends of leading enterprise-grade applications, Python is often the backend that \ndelivers data and content to the front-end...which then renders it using JavaScript and \nHTML.\n\nThere are numerous Python frameworks (Django, Flask, Tornado, etc.) with specific\ncapabilities to simplify integration with Javascript frontend frameworks (React, Angular,\nVueJS, etc.). But facilitating that with Highcharts has historically been very difficult.\nPart of this difficulty is because the Highcharts JavaScript suite - while supporting JSON as a\nserialization/deserialization format - leverages JavaScript object literals to expose the\nfull power and interactivity of its data visualizations. And while it's easy to serialize\nJSON from Python, serializing and deserializing to/from JavaScript object literal notation\nis much more complicated. \n\nThis means that Python developers looking to integrate with Highcharts typically had to \neither invest a lot of effort, or were only able to leverage a small portion of Highcharts' \nrich functionality.\n\nSo we wrote the **Highcharts for Python Toolkit** to bridge that gap.\n\n**Highcharts for Python** provides Python object representation for *all* of the\nJavaScript objects defined in the\n`Highcharts (JavaScript) API <https://api.highcharts.com/highcharts/>`__. It provides automatic \ndata validation, and exposes simple and standardized methods for serializing those Python\nobjects back-and-forth to JavaScript object literal notation.\n\n**Highcharts Gantt for Python** provides support for\nthe `Highcharts Gantt <https://www.highcharts.com/products/maps/>`__ extension, which is\ndesigned to provide extensive capabilities optimized for project, time, and resource \nallocation data visualization with robust interactivity. For ease of use, it also includes \nthe full functionality of \n`Highcharts Stock for Python <https://stock-docs.highchartspython.com/>`__ and \n`Highcharts Core for Python <https://core-docs.highchartspython.com/>`__.\n\nKey Highcharts Gantt for Python Features\n==============================================\n\n* **Clean and consistent API**. No reliance on \"hacky\" code, ``dict``\n  and JSON serialization, or impossible to maintain / copy-pasted \"spaghetti code\".\n* **Comprehensive Highcharts support**. Every single Highcharts chart type and every\n  single configuration option is supported in **Highcharts Gantt for Python**. This\n  includes:\n\n    * the over 70 data visualization types supported by\n      `Highcharts Core <https://www.highcharts.com/product/highcharts/>`__,\n    * the 50+ visualizations supported by \n      `Highcharts Stock <https://www.highcharts.com/products/stock/>`__ \n    * the multiple Gantt visualizations available in\n      `Highcharts Gantt <https://www.highcharts.com/product/gantt/>`__\n      \n  all with full support for the rich JavaScript formatter (JS callback functions)\n  capabilities that are often needed to get the most out of Highcharts' visualization and\n  interaction capabilities.\n\n  .. note::\n\n    **See Also:**\n\n    * `Supported Visualizations <https://gantt-docs.highchartspython.com/en/latest/visualizations.html>`__\n\n* **Simple JavaScript Code Generation**. With one method call, produce production-ready\n  JavaScript code to render your interactive visualizations using Highcharts' rich\n  capabilities.\n* **Easy Chart Download**. With one method call, produce high-end static\n  visualizations that can be downloaded or shared as files with your audience. Produce\n  static charts using the Highsoft-provided **Highcharts Export Server**, or using your \n  own private export server as needed.\n* **Integration with Asana, Monday.com, and Jira**. Your project data likely lives in\n  a modern project management platform like `Asana <https://www.asana.com/>`__, \n  `Monday.com <https://www.monday.com>`__, or `Atlassian JIRA <https://www.atlassian.com>`__. \n  You can easily pull data from those platforms into your **Highcharts Gantt** visualizations \n  using one method call.\n* **Integration with Pandas and PySpark**. With two lines of code, produce a high-end\n  interactive visualization of your Pandas or PySpark dataframe.\n* **Consistent Code Style**. For Python developers, switching between Pythonic code\n  conventions and JavaScript code conventions can be...annoying. So\n  **Highcharts for Python** applies Pythonic syntax with automatic conversion between\n  Pythonic ``snake_case`` notation and JavaScript ``camelCase`` styles.\n\n|\n\n**Highcharts Gantt for Python** vs Alternatives\n===================================================\n\nFor a discussion of **Highcharts Gantt for Python** in comparison to alternatives, please see\nthe **COMPLETE DOCUMENTATION:** http://gantt-docs.highchartspython.com/en/latest/index.html\n\n---------------------\n\n********************************\nHello World, and Basic Usage\n********************************\n\n1. Import Highcharts Gantt for Python\n==========================================\n\n  .. code-block:: python\n    \n    # BEST PRACTICE!\n    # PRECISE LOCATION PATTERN\n    # This method of importing Highcharts Gantt for Python objects yields the fastest\n    # performance for the import statement. However, it is more verbose and requires\n    # you to navigate the extensive Highcharts Gantt for Python API.\n\n    # Import classes using precise module indications. For example:\n    from highcharts_gantt.chart import Chart\n    from highcharts_gantt.global_options.shared_options import SharedGanttOptions\n    from highcharts_gantt.options import HighchartsGanttOptions\n    from highcharts_gantt.options.plot_options.gantt import GanttOptions\n    from highcharts_gantt.options.series.gantt import GanttSeries\n\n    # CATCH-ALL PATTERN\n    # This method of importing Highcharts Gantt for Python classes has relatively slow\n    # performance because it imports hundreds of different classes from across the entire\n    # library. This is also a known anti-pattern, as it obscures the namespace within the\n    # library. Both may be acceptable to you in your use-case, but do use at your own risk.\n\n    # Import objects from the catch-all \".highcharts\" module.\n    from highcharts_gantt import highcharts\n\n    # You can now access specific classes without individual import statements.\n    highcharts.Chart\n    highcharts.SharedGanttOptions\n    highcharts.HighchartsGanttOptions\n    highcharts.GanttOptions\n    highcharts.GanttSeries\n\n\n2. Create Your Chart\n================================\n\n  .. code-block:: python\n\n    # from a JavaScript file\n    my_chart = highcharts.Chart.from_js_literal('my_js_literal.js')\n\n    # from a JSON file\n    my_chart = highcharts.Chart.from_json('my_json.json')\n\n    # from a Python dict\n    my_chart = highcharts.Chart.from_dict(my_dict_obj)\n\n    # from a Pandas dataframe\n    my_chart = highcharts.Chart.from_pandas(df,\n                                            property_map = {\n                                                'x': 'transactionDate',\n                                                'y': 'invoiceAmt',\n                                                'id': 'id'\n                                            },\n                                            series_type = 'line')\n\n    # from a PySpark dataframe\n    my_chart = highcharts.Chart.from_pyspark(df,\n                                             property_map = {\n                                                 'x': 'transactionDate',\n                                                 'y': 'invoiceAmt',\n                                                 'id': 'id'\n                                             },\n                                             series_type = 'line')\n\n    # from a CSV\n    my_chart = highcharts.Chart.from_csv('/some_file_location/filename.csv'\n                                         column_property_map = {\n                                            'x': 0,\n                                            'y': 4,\n                                            'id': 14\n                                         },\n                                         series_type = 'line')\n\n    # from a HighchartsOptions configuration object\n    my_chart = highcharts.Chart.from_options(my_options)\n\n    # from a Series configuration\n    my_chart = highcharts.Chart.from_series(my_series)\n\n\n3. Configure Global Settings (optional)\n=============================================\n\n  .. code-block:: python\n\n    # Import SharedGanttOptions\n    from highcharts_gantt.global_options.shared_options import SharedGanttOptions\n\n    # from a JavaScript file\n    my_global_settings = SharedGanttOptions.from_js_literal('my_js_literal.js')\n\n    # from a JSON file\n    my_global_settings = SharedGanttOptions.from_json('my_json.json')\n\n    # from a Python dict\n    my_global_settings = SharedGanttOptions.from_dict(my_dict_obj)\n\n    # from a HighchartsOptions configuration object\n    my_global_settings = SharedGanttOptions.from_options(my_options)\n\n\n4. Configure Your Chart / Global Settings\n================================================\n\n  .. code-block:: python\n\n    from highcharts_gantt.options.title import Title\n    from highcharts_gantt.options.credits import Credits\n\n    # Using dicts\n    my_chart.title = {\n        'align': 'center'\n        'floating': True,\n        'text': 'The Title for My Chart',\n        'use_html': False,\n    }\n\n    my_chart.credits = {\n        'enabled': True,\n        'href': 'https://www.highcharts.com/',\n        'position': {\n            'align': 'center',\n            'vertical_align': 'bottom',\n            'x': 123,\n            'y': 456\n        },\n        'style': {\n            'color': '#cccccc',\n            'cursor': 'pointer',\n            'font_size': '9px'\n        },\n        'text': 'Chris Modzelewski'\n    }\n\n    # Using direct objects\n    from highcharts_gantt.options.title import Title\n    from highcharts_gantt.options.credits import Credits\n\n    my_title = Title(text = 'The Title for My Chart', floating = True, align = 'center')\n    my_chart.options.title = my_title\n\n    my_credits = Credits(text = 'Chris Modzelewski', enabled = True, href = 'https://www.highcharts.com')\n    my_chart.options.credits = my_credits\n\n\n5. Generate the JavaScript Code for Your Chart\n=================================================\n\nNow having configured your chart in full, you can easily generate the JavaScript code\nthat will render the chart wherever it is you want it to go:\n\n  .. code-block:: python\n\n    # as a string\n    js_as_str = my_chart.to_js_literal()\n\n    # to a file (and as a string)\n    js_as_str = my_chart.to_js_literal(filename = 'my_target_file.js')\n\n\n6. Generate the JavaScript Code for Your Global Settings (optional)\n=========================================================================\n\n  .. code-block:: python\n\n    # as a string\n    global_settings_js = my_global_settings.to_js_literal()\n\n    # to a file (and as a string)\n    global_settings_js = my_global_settings.to_js_literal('my_target_file.js')\n\n\n7. Generate a Static Version of Your Chart\n==============================================\n\n  .. code-block:: python\n\n    # as in-memory bytes\n    my_image_bytes = my_chart.download_chart(format = 'png')\n\n    # to an image file (and as in-memory bytes)\n    my_image_bytes = my_chart.download_chart(filename = 'my_target_file.png',\n                                             format = 'png')\n\n--------------\n\n***********************\nGetting Help/Support\n***********************\n\nThe **Highcharts for Python Toolkit** comes with all of the great support that \nyou are used to from working with the Highcharts JavaScript libraries. When you \nlicense the toolkit, you are welcome to use any of the following channels to get \nhelp using the toolkit:\n\n  * Use the `Highcharts Forums <https://highcharts.com/forum>`__\n  * Use `Stack Overflow <https://stackoverflow.com/questions/tagged/highcharts-for-python>`__ \n    with the ``highcharts-for-python`` tag\n  * `Report bugs or request features <https://github.com/highcharts-for-python/highcharts-gantt/issues>`__  \n    in the library's Github repository\n  * `File a support ticket <https://www.highchartspython.com/get-help>`__ with us\n  * `Schedule a live chat or video call <https://www.highchartspython.com/get-help>`__ \n    with us\n\n**FOR MORE INFORMATION:** https://www.highchartspython.com/get-help\n\n-----------------\n\n*********************\nContributing\n*********************\n\nWe welcome contributions and pull requests! For more information, please see the\n`Contributor Guide <https://gantt-docs.highchartspython.com/en/latest/contributing.html>`. \nAnd thanks to all those who've already contributed!\n\n-------------------\n\n*********************\nTesting\n*********************\n\nWe use `TravisCI <http://travisci.com>`_ for our build automation and\n`ReadTheDocs <https://readthedocs.com>`_ for our documentation.\n\nDetailed information about our test suite and how to run tests locally can be\nfound in our Testing Reference.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "charts,data visualization,data viz,gantt,graphing,highcharts,highcharts gantt,plotting,project management",
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "highcharts-gantt",
    "package_url": "https://pypi.org/project/highcharts-gantt/",
    "platform": null,
    "project_url": "https://pypi.org/project/highcharts-gantt/",
    "project_urls": {
      "Bug Tracker": "https://github.com/highcharts-for-python/highcharts-gantt/issues",
      "Documentation": "https://gantt-docs.highchartspython.com/en/latest/",
      "History": "https://github.com/highcharts-for-python/highcharts-gantt/blob/master/CHANGES.rst",
      "Homepage": "https://www.highchartspython.com",
      "Source Code": "https://github.com/highcharts-for-python/highcharts-gantt",
      "Support": "https://www.highchartspython.com/get-help"
    },
    "release_url": "https://pypi.org/project/highcharts-gantt/1.0.0rc2/",
    "requires_dist": [
      "esprima>=4.0.1",
      "highcharts-stock>=1.0.0-rc1",
      "requests>=2.28.1",
      "validator-collection>=1.5.0",
      "asana>=3.0.0; extra == 'dev'",
      "ipython>=8.10.0; extra == 'dev'",
      "jira>=3.4.0; extra == 'dev'",
      "monday>=1.3.0; extra == 'dev'",
      "orjson>=3.7.7; extra == 'dev'",
      "pandas>=1.3.3; extra == 'dev'",
      "pyspark>=3.3.0; extra == 'dev'",
      "pytest-cov>=3.0.0; extra == 'dev'",
      "pytest-xdist>=2.5.0; extra == 'dev'",
      "pytest>=7.0.2; extra == 'dev'",
      "python-dotenv>=1.0.0; extra == 'dev'",
      "pytz>=2022.1; extra == 'dev'",
      "sphinx-rtd-theme==1.2.0; extra == 'dev'",
      "sphinx-tabs==3.4.1; extra == 'dev'",
      "sphinx-toolbox==3.4.0; extra == 'dev'",
      "sphinx==6.1.3; extra == 'dev'",
      "tox>=4.0.0; extra == 'dev'",
      "sphinx-rtd-theme==1.2.0; extra == 'docs'",
      "sphinx-tabs==3.4.1; extra == 'docs'",
      "sphinx-toolbox==3.4.0; extra == 'docs'",
      "sphinx==6.1.3; extra == 'docs'",
      "asana>=3.0.0; extra == 'soft'",
      "ipython>=8.10.0; extra == 'soft'",
      "jira>=3.4.0; extra == 'soft'",
      "monday>=1.3.0; extra == 'soft'",
      "orjson>=3.7.7; extra == 'soft'",
      "pandas>=1.3.3; extra == 'soft'",
      "pyspark>=3.3.0; extra == 'soft'"
    ],
    "requires_python": ">=3.10",
    "summary": "High-end Gantt Chart Visualization for the Python Ecosystem",
    "version": "1.0.0rc2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17468677,
  "releases": {
    "1.0.0rc1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "2e47b411f686696d77907193cfe6edf48acaf0058c3d97f85e6089a263e9a3c9",
          "md5": "4d91058f786c627c7c8c790798d5b04b",
          "sha256": "6670ecc48f2746e410688c96a6d1e0c7d2d26d9e452ff227f97b3be604376a3f"
        },
        "downloads": -1,
        "filename": "highcharts_gantt-1.0.0rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d91058f786c627c7c8c790798d5b04b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 148176,
        "upload_time": "2023-03-23T22:21:52",
        "upload_time_iso_8601": "2023-03-23T22:21:52.749361Z",
        "url": "https://files.pythonhosted.org/packages/2e/47/b411f686696d77907193cfe6edf48acaf0058c3d97f85e6089a263e9a3c9/highcharts_gantt-1.0.0rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "90622e9dc3c8f1401849bbfefb4a5ab819feb60280462544df27f11731fb1acf",
          "md5": "3e2a4c1f1feef96821e7382de6bc9a33",
          "sha256": "326996aeb2c2860424d9933449a1468f309c6e112ef304912321b6ad6a073b30"
        },
        "downloads": -1,
        "filename": "highcharts_gantt-1.0.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "3e2a4c1f1feef96821e7382de6bc9a33",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 9853419,
        "upload_time": "2023-03-23T22:21:50",
        "upload_time_iso_8601": "2023-03-23T22:21:50.579362Z",
        "url": "https://files.pythonhosted.org/packages/90/62/2e9dc3c8f1401849bbfefb4a5ab819feb60280462544df27f11731fb1acf/highcharts_gantt-1.0.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0rc2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "a4e6d3a1c2aa1322b1e5e5876169ce6ecdb1c1a4cf4a7d3db2818c2304343a7e",
          "md5": "15113a199a4ae13a406a034bab6ab15f",
          "sha256": "f67d733869eaa802294a05904d8e029c2e986facb1b05e9f16e5a5203579bbe9"
        },
        "downloads": -1,
        "filename": "highcharts_gantt-1.0.0rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15113a199a4ae13a406a034bab6ab15f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 148900,
        "upload_time": "2023-03-27T22:14:48",
        "upload_time_iso_8601": "2023-03-27T22:14:48.241266Z",
        "url": "https://files.pythonhosted.org/packages/a4/e6/d3a1c2aa1322b1e5e5876169ce6ecdb1c1a4cf4a7d3db2818c2304343a7e/highcharts_gantt-1.0.0rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "924ae2b65145b7a6754e014f1f8566d3367b65dd2c52aff56edce4b3627eb9a0",
          "md5": "31fff266bbaefe742393b09f6016d2ac",
          "sha256": "5b662810cc5eb27f1fd1a3a4201b00bf6f82ae1a67b9cc03b5715e627a940403"
        },
        "downloads": -1,
        "filename": "highcharts_gantt-1.0.0rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "31fff266bbaefe742393b09f6016d2ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 9855304,
        "upload_time": "2023-03-27T22:14:45",
        "upload_time_iso_8601": "2023-03-27T22:14:45.387246Z",
        "url": "https://files.pythonhosted.org/packages/92/4a/e2b65145b7a6754e014f1f8566d3367b65dd2c52aff56edce4b3627eb9a0/highcharts_gantt-1.0.0rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "a4e6d3a1c2aa1322b1e5e5876169ce6ecdb1c1a4cf4a7d3db2818c2304343a7e",
        "md5": "15113a199a4ae13a406a034bab6ab15f",
        "sha256": "f67d733869eaa802294a05904d8e029c2e986facb1b05e9f16e5a5203579bbe9"
      },
      "downloads": -1,
      "filename": "highcharts_gantt-1.0.0rc2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "15113a199a4ae13a406a034bab6ab15f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 148900,
      "upload_time": "2023-03-27T22:14:48",
      "upload_time_iso_8601": "2023-03-27T22:14:48.241266Z",
      "url": "https://files.pythonhosted.org/packages/a4/e6/d3a1c2aa1322b1e5e5876169ce6ecdb1c1a4cf4a7d3db2818c2304343a7e/highcharts_gantt-1.0.0rc2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "924ae2b65145b7a6754e014f1f8566d3367b65dd2c52aff56edce4b3627eb9a0",
        "md5": "31fff266bbaefe742393b09f6016d2ac",
        "sha256": "5b662810cc5eb27f1fd1a3a4201b00bf6f82ae1a67b9cc03b5715e627a940403"
      },
      "downloads": -1,
      "filename": "highcharts_gantt-1.0.0rc2.tar.gz",
      "has_sig": false,
      "md5_digest": "31fff266bbaefe742393b09f6016d2ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 9855304,
      "upload_time": "2023-03-27T22:14:45",
      "upload_time_iso_8601": "2023-03-27T22:14:45.387246Z",
      "url": "https://files.pythonhosted.org/packages/92/4a/e2b65145b7a6754e014f1f8566d3367b65dd2c52aff56edce4b3627eb9a0/highcharts_gantt-1.0.0rc2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}