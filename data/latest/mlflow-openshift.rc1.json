{
  "info": {
    "author": "sklingel",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "**_IMPORTANT NOTE:_**  This package is no longer maintained and not adapted for mlflow>2.*. \n\n# Openshift Mlflow Deployment Plugin\nMlflow deployment plugin for openshift. This plugin offers the possibility to deploy mlflow packed models into openshift using the regular `mlflow deployment` command line interface.\n\n\n## Installation\n1. Install the mlflow openshift plugin: `pip install mlflow-openshift`.\n2. Make sure the openshift CLI tool is installed by calling `oc` in the command line. If not, you can find an installation tutorial [here](https://docs.openshift.com/container-platform/3.11/cli_reference/get_started_cli.html) \n\n## Get Started\n1. Get your login token from the openshift web-ui and use it to log in. You can find it on the top right > question mark > about > command line tools. \n    ```\n    oc login <token>\n    ```\n2. Navigate to the openshift project you want to the deploy the model. Make sure you have admin priviliges in that project. \n    ```\n    oc project <my-project>\n    ```\n    You can validate if your current user has admin rights for the project by executing this command:\n    ```\n    oc get rolebindings admin -n <my-project>\n    ```\n3. Setup the mlflow (and s3/minio) environment variables:\n    ```\n    AWS_ACCESS_KEY_ID=<>\n    AWS_SECRET_ACCESS_KEY=<>\n    MLFLOW_S3_ENDPOINT_URL=<>\n    ``` \n\n\n## Create a Deployment\nCreates all necessary artifacts for a model deployment in openshift, i.e. hosting the model in the specified container image and putting and nginx basic authentication proxy in front of the container to publisch an https endpoint.\n\nThe succesful deployment will return the created https host. Requests can be sent against mlflow's default `/invocations` endpoint.\n\nMandatory config items\n```\n--name\n--model-uri\n--docker-registry\n--image\n--tag\n--auth_user\n--auth_password\n```\n\nOptional config items:\n```\n--cpu_limit -> default: `1`\n--cpu_request -> default: `100m`\n--mem_limit -> default: `512Mi`\n--mem_request -> default: `256Mi`\n--gunicorn_workers -> default: `1`\n```\n\n### Example: MLflow CLI\n```\nmlflow deployments create -t openshift \\\n    --name <name> \\\n    --model-uri <model-uri>\n    --config docker_registry=<docker-registry> \\\n    --config image=<image> \\\n    --config tag=<tag>\n```\n\n### Example: python mlflow API\n```\nfrom mlflow.deployments import get_deploy_client\ntarget_uri = 'openshift'\nopenshift_client = get_deploy_client(target_uri)\n\nopenshift_client.create_deployment(\n    <name>,\n    <model-uri>,\n        \"docker_registry\": <docker_registry>,\n        \"image\": <image>,\n        \"tag\": <tag>\n    }\n)\n```\n\n## Updating an existing Deployment\nUpdates an existing model deployment in openshift. It can either update\n        the `model_uri` and/or the config items describing the container image (all three of them need to be provided),\n        i.e `image`, `docker_registry`, `tag`.\n\n### Example: MLflow CLI\n```\nmlflow deployments update -t openshift \\\n    --name <name> \\\n    --model-uri <model-uri>\n```\n\n### Example: python mlflow API\n```\nfrom mlflow.deployments import get_deploy_client\ntarget_uri = 'openshift'\nopenshift_client = get_deploy_client(target_uri)\n\nopenshift_client.update_deployment(\n    <name>,\n    model_uri=<model-uri>\n)\n```\n\n## Deleting a Deyployment\nDeletes the deployment and resources (openshift artifacts like routes).\n\n### Example: MLflow CLI\n```\nmlflow deployments delete -t openshift --name <name>\n```\n\n### Example: python mlflow API\n```\nfrom mlflow.deployments import get_deploy_client\ntarget_uri = 'openshift'\nopenshift_client = get_deploy_client(target_uri)\n\nopenshift_client.delete_deployment(<name>)\n```\n\n\n## Listing all Mlflow Deplyoments\nLists all mlflow deployments in the current openshift project.\n\n### Example: MLflow CLI\n```\nmlflow deployments list -t openshift\n```\n\n### Example: python mlflow API\n```\nfrom mlflow.deployments import get_deploy_client\ntarget_uri = 'openshift'\nopenshift_client = get_deploy_client(target_uri)\n\nopenshift_client.list_deployments()\n```\n\n## Get Deplyoment Information\nRetrieves raw, detailed information for the deployment.\n\n### Example: MLflow CLI\n```\nmlflow deployments get -t openshift --name <name>\n```\n\n### Example: python mlflow API\n```\nfrom mlflow.deployments import get_deploy_client\ntarget_uri = 'openshift'\nopenshift_client = get_deploy_client(target_uri)\n\nopenshift_client.get_deployment(<name>)\n```\n\n\n## Predict with Deployment\nMakes predictions using the specified deployment name. This can be used for\nmaking batch predictions using the openshift infrastrucutre, e.g. in automated\ndaily/weekly pipelines. This option is only available for the python mlflow API. However, the REST endpoint can of course be called by and REST capable service.\n\n### Example: python mlflow API\nFor a iris flower dataset model\n```\nfrom mlflow.deployments import get_deploy_client\ntarget_uri = 'openshift'\nopenshift_client = get_deploy_client(target_uri)\n\ndf = pd.DataFrame(\n    columns=[\"sepalLength\", \"sepalWidth\", \"petalWidth\"],\n    data=[[0, 1, 0], [0, 1, 1]]\n)\n\npredictions = openshift_client.predict(<name>, df)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BIX-Digital/mlflow-openshift",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlflow-openshift",
    "package_url": "https://pypi.org/project/mlflow-openshift/",
    "platform": null,
    "project_url": "https://pypi.org/project/mlflow-openshift/",
    "project_urls": {
      "Homepage": "https://github.com/BIX-Digital/mlflow-openshift"
    },
    "release_url": "https://pypi.org/project/mlflow-openshift/0.2.3/",
    "requires_dist": [
      "mlflow (<2.*,>=1.13.*)",
      "numpy (>=1.19.*)",
      "openshift-client (>=1.0.*)"
    ],
    "requires_python": ">=3.6",
    "summary": "MLFlow Openshift Deployment Plugin",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15968214,
  "releases": {
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54510402c60bb6328c215fb1511059c3cbc187ca021e8fe8dba3fd194be6149a",
          "md5": "41fec83c120d6cc19c615f7c6ccda19c",
          "sha256": "d9379ba81bf92172c9ee60d85e89b66eb9bde5841ca22e63e572e15f05a1eb25"
        },
        "downloads": -1,
        "filename": "mlflow_openshift-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41fec83c120d6cc19c615f7c6ccda19c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20298,
        "upload_time": "2022-12-02T09:45:11",
        "upload_time_iso_8601": "2022-12-02T09:45:11.379198Z",
        "url": "https://files.pythonhosted.org/packages/54/51/0402c60bb6328c215fb1511059c3cbc187ca021e8fe8dba3fd194be6149a/mlflow_openshift-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82e4124375010ccaaaa8e23a6e64342cd0fb46ea902bf5c5b47568c739f40322",
          "md5": "ce77c6db006aa84e29c30fc650732678",
          "sha256": "097cd9b40e5a104e80559f6886e281814cecf92243637aef702b5487bcaf4f50"
        },
        "downloads": -1,
        "filename": "mlflow_openshift-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ce77c6db006aa84e29c30fc650732678",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16388,
        "upload_time": "2022-12-02T09:45:12",
        "upload_time_iso_8601": "2022-12-02T09:45:12.902158Z",
        "url": "https://files.pythonhosted.org/packages/82/e4/124375010ccaaaa8e23a6e64342cd0fb46ea902bf5c5b47568c739f40322/mlflow_openshift-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54510402c60bb6328c215fb1511059c3cbc187ca021e8fe8dba3fd194be6149a",
        "md5": "41fec83c120d6cc19c615f7c6ccda19c",
        "sha256": "d9379ba81bf92172c9ee60d85e89b66eb9bde5841ca22e63e572e15f05a1eb25"
      },
      "downloads": -1,
      "filename": "mlflow_openshift-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "41fec83c120d6cc19c615f7c6ccda19c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20298,
      "upload_time": "2022-12-02T09:45:11",
      "upload_time_iso_8601": "2022-12-02T09:45:11.379198Z",
      "url": "https://files.pythonhosted.org/packages/54/51/0402c60bb6328c215fb1511059c3cbc187ca021e8fe8dba3fd194be6149a/mlflow_openshift-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82e4124375010ccaaaa8e23a6e64342cd0fb46ea902bf5c5b47568c739f40322",
        "md5": "ce77c6db006aa84e29c30fc650732678",
        "sha256": "097cd9b40e5a104e80559f6886e281814cecf92243637aef702b5487bcaf4f50"
      },
      "downloads": -1,
      "filename": "mlflow_openshift-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ce77c6db006aa84e29c30fc650732678",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16388,
      "upload_time": "2022-12-02T09:45:12",
      "upload_time_iso_8601": "2022-12-02T09:45:12.902158Z",
      "url": "https://files.pythonhosted.org/packages/82/e4/124375010ccaaaa8e23a6e64342cd0fb46ea902bf5c5b47568c739f40322/mlflow_openshift-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}