{
  "info": {
    "author": "Joel Johnson",
    "author_email": "johnson.joel.b@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# SqlAlchemy Postgres Full Text Search\n\nThis provides the `websearch_to_tsquery` functionality that postgres\nprovides out of the box, but it adds support for using `*` as a wildcard.\n\n## Usage\n\n### Saving a TSQuery\n\n```python\nclass Query(Base):\n    __tablename__ = 'query'\n    query = Column(TSQuery) # english query by default\n    spanish_query = Column(TSQuery(language = 'spanish'))\n    simple_query = Column(TSQuery(language = None)) # or 'simple'\n```\n\n### Saving a TSVector\n\nNote: there isn't much value in doing this as opposed to creating the\nindexes on a `TEXT` column unless the original text does not matter.\n\n```python\nclass Vector(Base):\n    __tablename__ = 'vector'\n    vector = Column(TSVector) # english by default\n    spanish_vector = Column(TSVector(language = 'spanish'))\n    simple_vector = Column(TSVector(language = None)) # or 'simple'\n```\n\n### Filtering with `to_tsquery`\n\n```python\nfrom sql_alchemy_fts import to_tsquery\n\nvecs = session.\n    query(Vector).\n    filter(\n        Vector.vector.op(\"@@\")(to_tsquery('english', 'dinosaur & extinction')),\n    ).all()\n\n```\n\nNote: `vector` is a `TSVector`. This will also work as text, but it will\nnot give a chance to specify language (so will be `'simple'` by default,\nunless postgres has been configured otherwise).\n\n### Filtering with `websearch`\n\n```python\nfrom sql_alchemy_fts import to_tsquery, websearch\nquery = websearch('dinosaur \"long time\" -\"jurassic park\"')\nvecs = session.\n    query(Vector).\n    filter(\n        Vector.vector.op(\"@@\")(to_tsquery('english', query),\n    ).all()\n```\n\n### Creating a TSVector index\n\n```python\nfrom sql_alchemy_fts import to_tsvector\n\nclass Document(Base):\n    __tablename__ = 'document'\n    body = Column(Text)\n    # track language so we can create partial indexes for language matches\n    language = Column(Text)\n\n    __tableargs__ = [Index(\"ix_document_body_english_gin_tsvector\", to_tsvector(\n        # Create english language index\n        Index(\n            \"ix_document_body_english_gin_tsvec\",\n            text(\"to_tsvector('english', body)\"),\n            postgresql_using=\"gin\",\n            postgresql_where=text(\"language = 'english'\"),\n        ),\n        # Create spanish language index\n        Index(\n            \"ix_document_body_spanish_gin_tsvec\",\n            text(\"to_tsvector('spanish', body)\"),\n            postgresql_using=\"gin\",\n            postgresql_where=text(\"language = 'spanish'\"),\n        ),\n    ]\n\n# querying spanish docs:\nsession.\n    query(Document).\n    filter(\n        # convert the text type to_tsvector to match the index\n        to_tsvector('spanish', Document.body).\n            op(\"@@\")(to_tsquery(\"spanish\", \"dinosaurios & vivieron\"))\n    ).\n    # required for postgres to match the index to be used\n    filter(Document.language == \"spanish\").\n    all()\n\n```\n\nNote: an index is likely going to be useful even if the `TEXT` was dropped\nand only a `TSVector` was saved on the table.\n\n\n### Websearch Syntax\n\nThis is inspired by the `websearch_to_tsquery` function that is defined in\npostgres, but it does not allow a `\"*\"` to wildcard after a prefix,\ndespite that `tsquery` supports it. Therefore, to make this work, the\nentire websearch to tsquery has to be done within python.\n\n1. `websearch(\"dinosaur stomp\")`: Dinosaur and stomp both must show up.\n1. `websearch(\"dinosaur or stomp\")`: Either must show up.\n1. `websearch(\"dinosaur \"long time ago\")`: Dinosaur must show up and the\n   phrase \"long time ago\" must show up.\n1. `websearch(\"the of a an by dinosaur\")`: Dinosaur must show up and the\n   other words are of no value so they are filtered (by postgres itself).\n1. `websearch(\"super*\")`: Word with the prefix of super* is required such\n   as superman, superb, or superior.\n1. `websearch(\"-dinosaur\")` Anything without the word dinosaur.\n1. `websearch(\"dinosuar -\"jurassic park\")`: The phrase jurassic park must\n   not be present, but dinosaur must show up.\n\nThe `websearch` class only renders out a tsquery text fragment. It is\nintended to be composed with `to_tsquery`.\n\n## Development\n\n### Setup\n\n1. Install [asdf](https://asdf-vm.com/guide/getting-started.html#_1-install-dependencies).\n1. Add python plugin: `asdf plugin-add python`.\n    1. Add a `$HOME/.default-python-packages` containing `poetry`.\n1. Optionally, add postgres plugin: `asdf plugin-add postgres.\n1. `asdf install` to install python and postgres.\n\n### Tests\n\nRun `poetry run tox` or `poetry run tox --asdf-install` if some versions of python are missing.\n\nNote: make sure postgres is running. If installed through asdf, it needs to be started with `pg_ctl`.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/liaden/sqlalchemy-pg-fts",
    "keywords": "postgres,tsquery,sqlalchemy,full text search",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sqlalchemy-pg-fts",
    "package_url": "https://pypi.org/project/sqlalchemy-pg-fts/",
    "platform": null,
    "project_url": "https://pypi.org/project/sqlalchemy-pg-fts/",
    "project_urls": {
      "Homepage": "https://github.com/liaden/sqlalchemy-pg-fts",
      "Repository": "https://github.com/liaden/sqlalchemy-pg-fts"
    },
    "release_url": "https://pypi.org/project/sqlalchemy-pg-fts/0.1.3/",
    "requires_dist": [
      "sqlalchemy (>=1.3.24,<2.0.0)"
    ],
    "requires_python": ">=3.6.13,<4.0.0",
    "summary": "SqlAlchemy Postgres tsquery functionality",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13583697,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6a606f1f76b14a082e4d541724d09540db06fa1fca0edaf8b6410e4b36331db",
          "md5": "b4ca0912dac94e7cc02667a68bb33783",
          "sha256": "2e22598549a28a5913b7b6db71158b52b8aa25be24eff5e23aaceccc38c0f05e"
        },
        "downloads": -1,
        "filename": "sqlalchemy_pg_fts-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4ca0912dac94e7cc02667a68bb33783",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.15,<4.0.0",
        "size": 6235,
        "upload_time": "2022-04-21T16:05:41",
        "upload_time_iso_8601": "2022-04-21T16:05:41.294454Z",
        "url": "https://files.pythonhosted.org/packages/b6/a6/06f1f76b14a082e4d541724d09540db06fa1fca0edaf8b6410e4b36331db/sqlalchemy_pg_fts-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48cda308370ddc0fced70eae86444838a48cc221d1c221a31f411d59930fcc1b",
          "md5": "21ac4c0928bb201a3c831feac718b264",
          "sha256": "cc1d035287a92dfae690f9ea898924438013a737cbfeedbbce1660135f2e6a8a"
        },
        "downloads": -1,
        "filename": "sqlalchemy-pg-fts-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "21ac4c0928bb201a3c831feac718b264",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.15,<4.0.0",
        "size": 5651,
        "upload_time": "2022-04-21T16:05:39",
        "upload_time_iso_8601": "2022-04-21T16:05:39.881612Z",
        "url": "https://files.pythonhosted.org/packages/48/cd/a308370ddc0fced70eae86444838a48cc221d1c221a31f411d59930fcc1b/sqlalchemy-pg-fts-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b41ba1c940b2693b08afaad940e2796209477e35753c19bb035106797857808",
          "md5": "c20ad320e65f1e4a3253b116b2a0b0dc",
          "sha256": "88a2f3692c78f2a642843ae125b1d891152d9fc76f174393f7ce45ad4d7ea2ea"
        },
        "downloads": -1,
        "filename": "sqlalchemy_pg_fts-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c20ad320e65f1e4a3253b116b2a0b0dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.13,<4.0.0",
        "size": 6233,
        "upload_time": "2022-04-21T17:28:32",
        "upload_time_iso_8601": "2022-04-21T17:28:32.787485Z",
        "url": "https://files.pythonhosted.org/packages/9b/41/ba1c940b2693b08afaad940e2796209477e35753c19bb035106797857808/sqlalchemy_pg_fts-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b32647fb586807c06e694a27823f0a51783ff4e63c4e3eede695cd1ecca89c1",
          "md5": "9a96f14369aa06c7bd324abffd677e8f",
          "sha256": "c156ed057fdfdeb62d47211c8ec086e0637cb73d1bcb4d444186513ca299bcc3"
        },
        "downloads": -1,
        "filename": "sqlalchemy-pg-fts-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9a96f14369aa06c7bd324abffd677e8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.13,<4.0.0",
        "size": 5652,
        "upload_time": "2022-04-21T17:28:31",
        "upload_time_iso_8601": "2022-04-21T17:28:31.161125Z",
        "url": "https://files.pythonhosted.org/packages/9b/32/647fb586807c06e694a27823f0a51783ff4e63c4e3eede695cd1ecca89c1/sqlalchemy-pg-fts-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ba1c57b51c7fbd1c42dbdb2c506c7f82d679f27ec21dd77218b0a6eae408c4b",
          "md5": "97a5d6516618cbc9c0ccd30a5dee5e33",
          "sha256": "461f34d7eb54278d39b1ec63be838813aafe56d2bddca1dd896c63804476f221"
        },
        "downloads": -1,
        "filename": "sqlalchemy_pg_fts-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97a5d6516618cbc9c0ccd30a5dee5e33",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.13,<4.0.0",
        "size": 6339,
        "upload_time": "2022-04-21T21:03:41",
        "upload_time_iso_8601": "2022-04-21T21:03:41.407061Z",
        "url": "https://files.pythonhosted.org/packages/5b/a1/c57b51c7fbd1c42dbdb2c506c7f82d679f27ec21dd77218b0a6eae408c4b/sqlalchemy_pg_fts-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcb360934e27b86207406ef82da38103f411e51bd3fe953173312e66a081a389",
          "md5": "cd65131b572bd3e75ebdc8de2f9d41af",
          "sha256": "7683ff5b19c93c4cf3a013ea18b139e208ae1acac37c4198e772739885916037"
        },
        "downloads": -1,
        "filename": "sqlalchemy-pg-fts-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cd65131b572bd3e75ebdc8de2f9d41af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.13,<4.0.0",
        "size": 5764,
        "upload_time": "2022-04-21T21:03:40",
        "upload_time_iso_8601": "2022-04-21T21:03:40.104428Z",
        "url": "https://files.pythonhosted.org/packages/fc/b3/60934e27b86207406ef82da38103f411e51bd3fe953173312e66a081a389/sqlalchemy-pg-fts-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ba1c57b51c7fbd1c42dbdb2c506c7f82d679f27ec21dd77218b0a6eae408c4b",
        "md5": "97a5d6516618cbc9c0ccd30a5dee5e33",
        "sha256": "461f34d7eb54278d39b1ec63be838813aafe56d2bddca1dd896c63804476f221"
      },
      "downloads": -1,
      "filename": "sqlalchemy_pg_fts-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "97a5d6516618cbc9c0ccd30a5dee5e33",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.13,<4.0.0",
      "size": 6339,
      "upload_time": "2022-04-21T21:03:41",
      "upload_time_iso_8601": "2022-04-21T21:03:41.407061Z",
      "url": "https://files.pythonhosted.org/packages/5b/a1/c57b51c7fbd1c42dbdb2c506c7f82d679f27ec21dd77218b0a6eae408c4b/sqlalchemy_pg_fts-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcb360934e27b86207406ef82da38103f411e51bd3fe953173312e66a081a389",
        "md5": "cd65131b572bd3e75ebdc8de2f9d41af",
        "sha256": "7683ff5b19c93c4cf3a013ea18b139e208ae1acac37c4198e772739885916037"
      },
      "downloads": -1,
      "filename": "sqlalchemy-pg-fts-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "cd65131b572bd3e75ebdc8de2f9d41af",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.13,<4.0.0",
      "size": 5764,
      "upload_time": "2022-04-21T21:03:40",
      "upload_time_iso_8601": "2022-04-21T21:03:40.104428Z",
      "url": "https://files.pythonhosted.org/packages/fc/b3/60934e27b86207406ef82da38103f411e51bd3fe953173312e66a081a389/sqlalchemy-pg-fts-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}