{
  "info": {
    "author": null,
    "author_email": "Bonan Zhu <zhubonan@outlook.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: AiiDA",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python"
    ],
    "description": "[![Build Status][ci-badge]][ci-link]\n[![Coverage Status][cov-badge]][cov-link]\n[![PyPI version][pypi-badge]][pypi-link]\n\n# aiida-grouppathx\n\nAiiDA plugin provides the `GroupPathX` class.\n\nThis plugin was kickstarted using\n[AiiDA plugin cutter](https://github.com/aiidateam/aiida-plugin-cutter),\nintended to help developers get started with their AiiDA plugins.\n\n## Features and usage\n\n This package is provides a enhanced version of `GroupPath` - `GroupPathX`.\n The main feature is that it allows nodes stored under a group to be *named* by an alias.\n This way, one can address a specific `Node` as `GroupPath('mygroup/structure1')`.\n In addition, a `show_tree` method is provided for visualising the content of a specific `GroupPathX`,\n similiar to the command line tool `tree` that works on the file system.\n The goal is to provide a way for managing data with an interface what is similar to a file system based approach.\n\n ```\n tree aiida_grouppathx\n\naiida_grouppathx\n├── __init__.py\n├── pathx.py\n└── __pycache__\n    ├── __init__.cpython-38.pyc\n    └── pathx.cpython-38.pyc\n```\n\nIn analogy:\n\n```python\nfrom aiida_grouppathx import GroupPathX\npath = GroupPathX('group1')\npath.get_or_create_group()\npath['group2'].get_or_create_group()\npath.add_node(Int(1).store(), 'int1')\npath['group2'].add_node(Int(1).store(), 'int2')\n\npath.show_tree()\n```\n\ngives\n\n```\ngroup1\n├── group2\n│   └── int2 *\n└── int1 *\n```\n\nwhere the `*` highlights that a leaf is a `Node` rather than a group.\nThis kind of mark up can be customised, for example, to show the status of workflow nodes.\n\n```python\ndef decorate_name(path):\n    if path.is_node:\n        return ' ' + str(path.get_node())\npath.show_tree(decorate_name)\n```\n\ngives:\n\n```\ngroup1\n├── group2\n│   └── int2  uuid: de79d244-d3bb-4f61-9d3a-b3f09e1afb72 (pk: 7060) value: 1\n└── int1  uuid: e2f70643-0c25-4ae5-929a-a3e055969d10 (pk: 7059) value: 1\n```\n\nMultiple decorators can be combined\n\n```\nfrom aiida_grouppathx import decorate_with_group_names, decorate_with_label decorate_with_uuid_first_n\n\npath.show_tree(decorate_with_group_names, decorate_with_label, decorate_with_uuid_first_n())\n```\n\noutput:\n\n```\ngroup1\n├── group2\n│   └── int2 group1/group2 |  | de79d244-d3b\n└── int1 group1 |  | e2f70643-0c2\n```\n\n\nThe stored nodes can be access through:\n\n```\ngroup1['group2/int2'].get_node()  # Gives node de89d2\ngroup1.browse.group2.int2().get_node()  # Also gives node de89d2\n```\n\nand also\n\n```\npath.browse.<tab>\npath.browse.int1()     # To access the `group1/int1` path\npath.browse.int1().get_node()     # To access the `group1/int1` node\n```\n\nPlease see the `pathx.py` for the extended methods, and the official documentation for the concept of `GroupPath`.\n\nThe package does not change how `Group` and `Node` operates in the AiiDA.\nIt is only built on top of the existing system as an alternative way to access the underlying data.\n\n## Installation\n\n```shell\npip install aiida-grouppathx\nverdi quicksetup  # better to set up a new profile\n```\n\n## Development\n\n```shell\ngit clone https://github.com/zhubonan/aiida-grouppathx .\ncd aiida-grouppathx\npip install --upgrade pip\npip install -e .[pre-commit,testing]  # install extra dependencies\npre-commit install  # install pre-commit hooks\npytest -v  # discover and run all tests\n```\n\nSee the [developer guide](http://aiida-grouppathx.readthedocs.io/en/latest/developer_guide/index.html) for more information.\n\n## License\n\nMIT\n## Contact\n\nzhubonan@outlook.com\n\n\n[ci-badge]: https://github.com/zhubonan/aiida-grouppathx/workflows/ci/badge.svg?branch=master\n[ci-link]: https://github.com/zhubonan/aiida-grouppathx/actions\n[cov-badge]: https://coveralls.io/repos/github/zhubonan/aiida-grouppathx/badge.svg?branch=master\n[cov-link]: https://coveralls.io/github/zhubonan/aiida-grouppathx?branch=master\n[docs-badge]: https://readthedocs.org/projects/aiida-grouppathx/badge\n[docs-link]: http://aiida-grouppathx.readthedocs.io/\n[pypi-badge]: https://badge.fury.io/py/aiida-grouppathx.svg\n[pypi-link]: https://badge.fury.io/py/aiida-grouppathx\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "aiida,plugin",
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "aiida-grouppathx",
    "package_url": "https://pypi.org/project/aiida-grouppathx/",
    "platform": null,
    "project_url": "https://pypi.org/project/aiida-grouppathx/",
    "project_urls": {
      "Source": "https://github.com/zhubonan/aiida-grouppathx"
    },
    "release_url": "https://pypi.org/project/aiida-grouppathx/0.2.0/",
    "requires_dist": [
      "aiida-core>=1.6.4,<3",
      "treelib",
      "sphinx ; extra == \"docs\"",
      "sphinxcontrib-contentui ; extra == \"docs\"",
      "sphinxcontrib-details-directive ; extra == \"docs\"",
      "furo ; extra == \"docs\"",
      "markupsafe<2.1 ; extra == \"docs\"",
      "pre-commit~=2.2 ; extra == \"pre-commit\"",
      "pylint>=2.5.0,<2.9 ; extra == \"pre-commit\"",
      "pgtest~=1.3.1 ; extra == \"testing\"",
      "wheel~=0.31 ; extra == \"testing\"",
      "coverage[toml] ; extra == \"testing\"",
      "pytest~=6.0 ; extra == \"testing\"",
      "pytest-cov ; extra == \"testing\""
    ],
    "requires_python": ">=3.7",
    "summary": "AiiDA plugin provides the GroupPathX class",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13929903,
  "releases": {
    "0.2.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "7007b1355aa3c056fd7d4fe9f3e88e420f83d8cf31783947bed35841091ee58b",
          "md5": "a9ace22da64526cf8e83e15bf1eb5b0f",
          "sha256": "86046be91dfff2362c18776f2cf1505e7c374751721b590f76d8671345789980"
        },
        "downloads": -1,
        "filename": "aiida_grouppathx-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9ace22da64526cf8e83e15bf1eb5b0f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8399,
        "upload_time": "2022-05-25T06:52:38",
        "upload_time_iso_8601": "2022-05-25T06:52:38.502019Z",
        "url": "https://files.pythonhosted.org/packages/70/07/b1355aa3c056fd7d4fe9f3e88e420f83d8cf31783947bed35841091ee58b/aiida_grouppathx-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "f384667ae34912703a00dea4ec17befc974c82482ce75ba2a89b611ee3f150ae",
          "md5": "f2e90ffdac48459b0cbcd3935d78b3a1",
          "sha256": "d04a8ae894b3277b591e164cf4fef61e3571c8d3f2a332fd2fe452706aeea101"
        },
        "downloads": -1,
        "filename": "aiida-grouppathx-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f2e90ffdac48459b0cbcd3935d78b3a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19272,
        "upload_time": "2022-05-25T06:52:40",
        "upload_time_iso_8601": "2022-05-25T06:52:40.588292Z",
        "url": "https://files.pythonhosted.org/packages/f3/84/667ae34912703a00dea4ec17befc974c82482ce75ba2a89b611ee3f150ae/aiida-grouppathx-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "7007b1355aa3c056fd7d4fe9f3e88e420f83d8cf31783947bed35841091ee58b",
        "md5": "a9ace22da64526cf8e83e15bf1eb5b0f",
        "sha256": "86046be91dfff2362c18776f2cf1505e7c374751721b590f76d8671345789980"
      },
      "downloads": -1,
      "filename": "aiida_grouppathx-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a9ace22da64526cf8e83e15bf1eb5b0f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8399,
      "upload_time": "2022-05-25T06:52:38",
      "upload_time_iso_8601": "2022-05-25T06:52:38.502019Z",
      "url": "https://files.pythonhosted.org/packages/70/07/b1355aa3c056fd7d4fe9f3e88e420f83d8cf31783947bed35841091ee58b/aiida_grouppathx-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "f384667ae34912703a00dea4ec17befc974c82482ce75ba2a89b611ee3f150ae",
        "md5": "f2e90ffdac48459b0cbcd3935d78b3a1",
        "sha256": "d04a8ae894b3277b591e164cf4fef61e3571c8d3f2a332fd2fe452706aeea101"
      },
      "downloads": -1,
      "filename": "aiida-grouppathx-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f2e90ffdac48459b0cbcd3935d78b3a1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 19272,
      "upload_time": "2022-05-25T06:52:40",
      "upload_time_iso_8601": "2022-05-25T06:52:40.588292Z",
      "url": "https://files.pythonhosted.org/packages/f3/84/667ae34912703a00dea4ec17befc974c82482ce75ba2a89b611ee3f150ae/aiida-grouppathx-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}