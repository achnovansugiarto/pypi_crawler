{
  "info": {
    "author": "William Attache",
    "author_email": "william.attache@mydevacademy.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Topic :: Utilities"
    ],
    "description": "# Terracheck\n\nA Python library to check Terraform style and structure good practices defined in \n[Google Coud Terraform sytel and practices documentation](https://cloud.google.com/docs/terraform/best-practices-for-terraform#general-style).\n\nThe code is Python 3. Compatibility with Python 2 has not been tested.\n\n## Installation\n\nFast install:\n\n```sh\npip install terracheck\n\n```\n\nInstall the package:\n\n```sh\npython setup.py install\n\n```\n\n## Example\n\n### StyleChecker\n\n```python\n\n    from terracheck.io.HclCheckerReader import HclCheckerReader\n    from terracheck.checker.StyleChecker import StyleChecker\n\n    # Read files in a HCL folder\n    hcl_checker_reader = HclCheckerReader()\n    hcl_checker_reader.read(\"/hcl/folder/path\")\n\n    # Check style good practices\n    style_checker = StyleChecker()\n    style_checker.check(hcl_checker_reader.extract)\n    \n    style_report = style_checker.report\n\n    style_metadata = style_checker.metadata\n ```\n\nAn output example :\n\n```sh\n    [DASH_IN_NAME]: Name of variable named 'gcp-folder_parent_id' contains dash ('-'). Shoud be underscores ('_').\n    [DASH_IN_NAME]: Name of data 'google_storage_bucket' 'google-storage_bucket' contains dash ('-'). Shoud be underscores ('_').\n    [DASH_IN_NAME]: Name of resource 'google_storage_bucket' 'google-storage_bucket' contains dash ('-'). Shoud be underscores ('_').\n    [DASH_IN_NAME]: Name of output named 'my-output' contains dash ('-'). Shoud be underscores ('_').\n    [NAME_IS_RESOURCE]: Resource 'google_storage_bucket' is named 'google_storage_bucket'. Chose a name different than the resource name.\n    [FILE_PURPOSE]: Required_providers 'google' should be declared in file versions.tf not in version.tf.\n    [FILE_PURPOSE]: Variable 'gcp-folder_parent_id' should be declared in file variables.tf not in hcl_2.tf.\n    [FILE_PURPOSE]: Output 'my-output' should be declared in file outputs.tf not in hcl_1.tf.\n    [FILE_PURPOSE]: Required_providers 'google-beta' should be declared in file versions.tf not in variables.tf.\n    [FILE_PURPOSE]: Required_providers 'gitlab' should be declared in file versions.tf not in variables.tf.\n    [FILE_PURPOSE]: Provider 'gitlab' should be declared in file versions.tf not in variables.tf.\n    [OUTPUT_EXPOSURE]: Output 'cycling_output' references a variable as value. It should not.\n    [NAME_UNIQUENESS]: Resource 'google_bigquery_dataset' is unique, and thus should be named 'main', not 'dataset'.\n    [NAME_UNIQUENESS]: Resource 'google_service_account' is unique, and thus should be named 'main', not 'bqowner'.\n```\n\n### StructureChecker\n\n```python\n\n    from terracheck.checker.StructureChecker import StructureChecker\n    \n    structure_checker = StructureChecker(\"/checker/config/path\")\n\n    structure_checker.check(\"/hcl/folder/path\")\n\n    structure_report = structure_checker.report\n\n    structure_metadata = structure_checker.metadata\n```\n\nWith respect to the following hcl folder structure:\n\n```sh\ndemo_hcl_folder\n   | google-hcl_1.tf\n   | hcl_2-org.tf\n   | outputs.tf\n   | variables.tf\n   | version.tf\n```\n\nand the following ```StructureChecker``` config:\n\n```yaml\nmandatory_files:\n  version:\n    - \"versions.tf\"\n  readme:\n    - \"README.MD\"\n    - \"README.md\"\n\nfilenames_nomenclature:\n  startswith: \"google\"\n  endswith: \"org\"\n  contains: \"-\"\n```\n\nthe output is :\n\n```sh\n    [MISSING_FILE]: File 'version' is missing in your terraform folder. Available denominations : ['versions.tf'].\n    [MISSING_FILE]: File 'readme' is missing in your terraform folder. Available denominations : ['README.MD', 'README.md'].\n    [FILENAME_CONSTRAINT]: File 'google-hcl_1.tf' does not respect constraint 'endswith org'.\n    [FILENAME_CONSTRAINT]: File 'version.tf' does not respect constraint 'startswith google'.\n    [FILENAME_CONSTRAINT]: File 'version.tf' does not respect constraint 'endswith org'.\n    [FILENAME_CONSTRAINT]: File 'version.tf' does not respect constraint 'contains -'.\n    [FILENAME_CONSTRAINT]: File 'hcl_2-org.tf' does not respect constraint 'startswith google'.\n    [FILENAME_CONSTRAINT]: File 'hcl_2-org.tf' does not respect constraint 'endswith org'.\n```\n\n### HCL Reader\n\nAs in examples bellow, HclCheckerReader reads from a folder path. But the content to check can \nalso be extended from string HCL content :\n\n````python\n\n    import json\n    from terracheck.io.HclCheckerReader import HclCheckerReader\n    \n    hcl_checker_reader = HclCheckerReader()\n    \n    file_path_1 = \"/file/path/1\"\n    file_path_2 = \"/file/path/2\"\n    \n    with open(file_path_1, \"r\") as f:\n        hcl_checker_reader.extend(f.read(), file_path_1)\n    \n    with open(file_path_2, \"r\") as f:\n        hcl_checker_reader.extend(f.read(), file_path_2)\n    \n    for element_type, checker_element in hcl_checker_reader.extract.items():\n        print(json.dumps(checker_element.to_dict(), indent=4))\n````\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "terraform gcp goodpractices",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "terracheck",
    "package_url": "https://pypi.org/project/terracheck/",
    "platform": null,
    "project_url": "https://pypi.org/project/terracheck/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/terracheck/0.2.0/",
    "requires_dist": [
      "python-hcl2 (==3.0.5)",
      "colorama (==0.4.5)",
      "pytest (==7.2.0)",
      "PyYAML (==6.0)"
    ],
    "requires_python": "",
    "summary": "Python Terraform checker from GCP good practices",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15779666,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d22ff5fa47749c1cde43ed03731d2e9fd85ec332482118ed5411c50e9b1308e1",
          "md5": "339eea1a69a3dba6484606980757e745",
          "sha256": "889e02c50b0988c84ffa220052de6cc2f38d7db599a245a578e4e7381dbe6f40"
        },
        "downloads": -1,
        "filename": "terracheck-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "339eea1a69a3dba6484606980757e745",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9572,
        "upload_time": "2022-10-28T16:38:59",
        "upload_time_iso_8601": "2022-10-28T16:38:59.012178Z",
        "url": "https://files.pythonhosted.org/packages/d2/2f/f5fa47749c1cde43ed03731d2e9fd85ec332482118ed5411c50e9b1308e1/terracheck-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84c19309d53de4e9cf8da9f7c9719432fba73feb40419faa233df7d1e41a15a8",
          "md5": "10128dd421ee64cebd4d653b133b69af",
          "sha256": "946017ec20ce30a174af2ba8acb35001ec8b78a2eb07c10a812dfcaae0440029"
        },
        "downloads": -1,
        "filename": "terracheck-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "10128dd421ee64cebd4d653b133b69af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7959,
        "upload_time": "2022-10-28T16:39:00",
        "upload_time_iso_8601": "2022-10-28T16:39:00.417559Z",
        "url": "https://files.pythonhosted.org/packages/84/c1/9309d53de4e9cf8da9f7c9719432fba73feb40419faa233df7d1e41a15a8/terracheck-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6c6aafa0b9bff051e0a697fef89886124095fde8451f1a56daa32abcacbcead",
          "md5": "8402c73c2c18d7fcb8470ef4da646590",
          "sha256": "2a44135a73b651dc6ed45c74a4034a31a633344fadf38f1893e11c9d3bd43f3b"
        },
        "downloads": -1,
        "filename": "terracheck-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8402c73c2c18d7fcb8470ef4da646590",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9761,
        "upload_time": "2022-11-07T15:41:51",
        "upload_time_iso_8601": "2022-11-07T15:41:51.699675Z",
        "url": "https://files.pythonhosted.org/packages/a6/c6/aafa0b9bff051e0a697fef89886124095fde8451f1a56daa32abcacbcead/terracheck-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccb443b2f80630379c7b47b67f22a5bde7225c2af81a3c10e3f2f254deef3447",
          "md5": "f1fdc5a5ba3c261b9bdaa69e18d74cc4",
          "sha256": "7c32c1b0cc613244ef81c44052a22baac18cc03ba803f2f5eff3cc62d43fd3a0"
        },
        "downloads": -1,
        "filename": "terracheck-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f1fdc5a5ba3c261b9bdaa69e18d74cc4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8138,
        "upload_time": "2022-11-07T15:41:54",
        "upload_time_iso_8601": "2022-11-07T15:41:54.091556Z",
        "url": "https://files.pythonhosted.org/packages/cc/b4/43b2f80630379c7b47b67f22a5bde7225c2af81a3c10e3f2f254deef3447/terracheck-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6db079167be2b75d85dc14004928faee259c017727d2b8f01043929a3998952b",
          "md5": "ebe1e98eb5b2c1723c379acf5ce18861",
          "sha256": "9c50d0393a404222e070edbe29bcb0e3067dbc6dcc112bcdea45f1653573fdbf"
        },
        "downloads": -1,
        "filename": "terracheck-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ebe1e98eb5b2c1723c379acf5ce18861",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10097,
        "upload_time": "2022-11-15T18:41:32",
        "upload_time_iso_8601": "2022-11-15T18:41:32.013798Z",
        "url": "https://files.pythonhosted.org/packages/6d/b0/79167be2b75d85dc14004928faee259c017727d2b8f01043929a3998952b/terracheck-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6450200639c8746044a82922120b1a14507549acf7157ead00406e380bba0156",
          "md5": "13014dfc253fdba95bb64f9afdb7f92a",
          "sha256": "cb6289f95721476e981e4c1506e87edc0c5190283e53090479f70761d48648d4"
        },
        "downloads": -1,
        "filename": "terracheck-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "13014dfc253fdba95bb64f9afdb7f92a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8639,
        "upload_time": "2022-11-15T18:41:34",
        "upload_time_iso_8601": "2022-11-15T18:41:34.541562Z",
        "url": "https://files.pythonhosted.org/packages/64/50/200639c8746044a82922120b1a14507549acf7157ead00406e380bba0156/terracheck-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6db079167be2b75d85dc14004928faee259c017727d2b8f01043929a3998952b",
        "md5": "ebe1e98eb5b2c1723c379acf5ce18861",
        "sha256": "9c50d0393a404222e070edbe29bcb0e3067dbc6dcc112bcdea45f1653573fdbf"
      },
      "downloads": -1,
      "filename": "terracheck-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ebe1e98eb5b2c1723c379acf5ce18861",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10097,
      "upload_time": "2022-11-15T18:41:32",
      "upload_time_iso_8601": "2022-11-15T18:41:32.013798Z",
      "url": "https://files.pythonhosted.org/packages/6d/b0/79167be2b75d85dc14004928faee259c017727d2b8f01043929a3998952b/terracheck-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6450200639c8746044a82922120b1a14507549acf7157ead00406e380bba0156",
        "md5": "13014dfc253fdba95bb64f9afdb7f92a",
        "sha256": "cb6289f95721476e981e4c1506e87edc0c5190283e53090479f70761d48648d4"
      },
      "downloads": -1,
      "filename": "terracheck-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "13014dfc253fdba95bb64f9afdb7f92a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8639,
      "upload_time": "2022-11-15T18:41:34",
      "upload_time_iso_8601": "2022-11-15T18:41:34.541562Z",
      "url": "https://files.pythonhosted.org/packages/64/50/200639c8746044a82922120b1a14507549acf7157ead00406e380bba0156/terracheck-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}