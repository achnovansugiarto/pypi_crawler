{
  "info": {
    "author": "Pretaweb",
    "author_email": "mailto:support@pretaweb.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Plone",
      "Framework :: Plone :: 5.0",
      "Framework :: Plone :: 5.1",
      "Framework :: Plone :: 5.2",
      "Framework :: Plone :: Addon",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "collective.pfg.signup\n=====================\n\n|CI| |Coverage|\n\n|Workflows|\n\n.. |CI| image:: https://github.com/collective/collective.pfg.signup/workflows/CI/badge.svg\n.. |Coverage| image:: https://coveralls.io/repos/github/collective/collective.pfg.signup/badge.svg?branch=master\n   :target: https://coveralls.io/github/collective/collective.pfg.signup\n.. |Workflows| image:: http://github-actions.40ants.com/collective/collective.pfg.signup/matrix.svg\n   :target: https://github.com/collective/collective.pfg.signup/actions\n\n.. contents::\n\nIntroduction\n------------\n\nFlexible member registration, membership workflow and membership management in Plone.\n\nFeatures:\n\n- Customisable user registration forms (via PloneFormGen);\n- different registration forms for certain areas of the site;\n- user approval workflow and user management based on groups;\n- collecting additional information about members.\n\nThis plugin provides a PloneFormGen save adapter that uses the details from the \nsubmitted form to add Plone members.\n\nIt can be configured to:\n\n- put the user in a predefined group, and\n- allow members of a group to approve users before they are added. \n- The destination group or the group of approvers can be predefined, or\n- polcies of groups based on naming conventions by using python expressions\n\nUse Cases\n------------\n\nThere are 3 use cases for adding users:\n\n- User is automatically created with the password supplied in the form.\n- User is created, password is randomly generated, and a password reset email is sent.\n- User is held within the adaptor, pending approval.\n\n\nDestination group\n~~~~~~~~~~~~~~~~~\n\n\nOnce someone is signed up, they are added to a *destination group*.\nThe id of the destination group is determined by the **destination group id template**\nin your signup adapter.\n\nIf you enter `Members` into the **destination group id template** field, all\nusers will be added to the `Members` group.\n\nDynamic Destination Group\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can vary the group that a user gets added to by using variable substitution\nin your **destination group id template** TAL expression.\n\nFor example, if you \n- create a registration form \n- with a selection box called **organisation** \n- with the values `IBM`, `APPLE`, `GOOGLE`, \n- configure the adapter **destination group id template** to ```Members_${organisation}```\n- Users will be added to `Members_APPLE`, `Members_IBM`, `Members_GOOGLE` based on the registration form\n\nThe substitutions need to correspond to fields on your registration form\nand the groups need to exist\n\nIf the group doesn't exist the registrations will be held\nfor approval and an error email sent to the portal administrator.\n\nRegistration Approval Workflow\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n\nTo hold registrations temporarily before the user accounts are added you can set a \n**Approval Group** on your adapter. This specifies the policy on which group manages \nusers being added to another group.\n\n**Approval Group** is a python expression returning a dict of ```python:{manager_group: [group1, group2, ...]}```\n\n- Create a registration form\n- Set adapter **Approval Group** to ```python:{'Administrators': ['*']}```\n- Upon registration the user is emailed to say their registration is pending approval\n- and email of the group is sent an email to notify that a registration needs to approved\n    - if the group has no email, every memeber of group will be notified\n- Someone from the adminstrators group can login, view a list of waiting registrations\n- Once approved they are able to be edited or deactivated by the manager\n\nNote if the approval group doesn't exist then email will be sent to the portal administrator instead.\n\nPost approval actions\n~~~~~~~~~~~~~~~~~~~~~\n\nIf you want to store the information entered into a signup form,\nor take any other actions based on this information,\nyou can configure an additional PFG save action adapter.\nInstead of directly activating that on the form, \nconfigure it as the **approved save action adapter** in the signup adapter\nand this adapter will be activated only once the user has finally been approved.\nYou can use this with a scriptable adapter for example to do scriptable actions\non user approval.\n\nMembership management view\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis plugin adds the `@@user_search_view` browser view, which improves upon the \ndefault Plone **Users and Groups** settings page for member management.\n\nUser profile pages are filtered by the **Manage Group Template** field.\nMembers have the fields **Access approved by**, **Access approved\ndate**, **Access last updated by** and **Access last updated date** to have a\nrecord of membership management actions.\n\nThere are **activate** and **deactivate** buttons to disable user for accessing\nthe site.\n\nContributors\n============\n\nPretaweb, Author\n\nChangelog\n=========\n\n1.6.1 (2021-02-05)\n------------------\n\n* Use SemVer\n\n1.6 (2021-02-03)\n----------------\n\n* Fix bug with user not auto-created when user approve group is not set\n  [nngu6036]\n\n* Fix deprecation errors related to plone.app.controlpanel and Products.CMFPlone.\n  [b4oshany]\n* Add email domain verification option.\n  [ivanteoh]\n* Display Login ID rather than User ID on search, profile view and profile edit view.\n  [JeffersonBledsoe]\n* Fix users not being able to be deactivated if their login id is different to their user id.\n  [JeffersonBledsoe]\n\n1.5 (2017-03-08)\n----------------\n\n* Fix aaData contains unicode.\n  [ivanteoh]\n* Default to 'Administrators' when the TAL expression miss out the approval group.\n  [ivanteoh]\n\n1.4 (2016-07-25)\n----------------\n\n* Use Plone 5 valid email regular expression.\n  [ivanteoh]\n\n1.3 (2016-05-04)\n----------------\n\n* Change 'approval_group' to accept a list of groups instead of one group in\n  string.\n  [ivanteoh]\n\n1.2 (2015-09-10)\n----------------\n\n* Remove unused JavaScript file.\n  [ivanteoh]\n\n1.1 (2015-08-27)\n----------------\n\n* User management\n  [ivanteoh]\n\n1.0 (2013-06-20)\n----------------\n\n* User sign up management\n  [davismr, ivanteoh, djay]\n\n0.1 (2013-02-05)\n----------------\n\n* Initial implementation\n  [Pretaweb]",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/collective/collective.pfg.signup",
    "keywords": "plone ploneformgen form signup users",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "collective.pfg.signup",
    "package_url": "https://pypi.org/project/collective.pfg.signup/",
    "platform": "",
    "project_url": "https://pypi.org/project/collective.pfg.signup/",
    "project_urls": {
      "Homepage": "http://github.com/collective/collective.pfg.signup"
    },
    "release_url": "https://pypi.org/project/collective.pfg.signup/1.6.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A PloneFormGen adapter that saves signup form",
    "version": "1.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9331218,
  "releases": {
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d5b470c54afb0ac7fcac966a62b5f15eeb646cb7d241a74ea06b5d7e104815d",
          "md5": "b14a907d36aa1320434b3c2313fd6e24",
          "sha256": "d18e1c39ecf7693aadf8fdf3cb349f5fcabefec93620034cd6ed05eb952ba847"
        },
        "downloads": -1,
        "filename": "collective.pfg.signup-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b14a907d36aa1320434b3c2313fd6e24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39199,
        "upload_time": "2021-02-03T19:17:55",
        "upload_time_iso_8601": "2021-02-03T19:17:55.228888Z",
        "url": "https://files.pythonhosted.org/packages/1d/5b/470c54afb0ac7fcac966a62b5f15eeb646cb7d241a74ea06b5d7e104815d/collective.pfg.signup-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb1c54931047be80900a32be12b5ea604c657a6b1ad357d690bbb7c3631a78ac",
          "md5": "5ee9618556549c68b7611326e739c96e",
          "sha256": "289404c11589ab4c38b8e96c07fe3aebd1c306f4875182c2ed66980b12ee35f0"
        },
        "downloads": -1,
        "filename": "collective.pfg.signup-1.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ee9618556549c68b7611326e739c96e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39241,
        "upload_time": "2021-02-05T17:10:28",
        "upload_time_iso_8601": "2021-02-05T17:10:28.865706Z",
        "url": "https://files.pythonhosted.org/packages/fb/1c/54931047be80900a32be12b5ea604c657a6b1ad357d690bbb7c3631a78ac/collective.pfg.signup-1.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb1c54931047be80900a32be12b5ea604c657a6b1ad357d690bbb7c3631a78ac",
        "md5": "5ee9618556549c68b7611326e739c96e",
        "sha256": "289404c11589ab4c38b8e96c07fe3aebd1c306f4875182c2ed66980b12ee35f0"
      },
      "downloads": -1,
      "filename": "collective.pfg.signup-1.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5ee9618556549c68b7611326e739c96e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39241,
      "upload_time": "2021-02-05T17:10:28",
      "upload_time_iso_8601": "2021-02-05T17:10:28.865706Z",
      "url": "https://files.pythonhosted.org/packages/fb/1c/54931047be80900a32be12b5ea604c657a6b1ad357d690bbb7c3631a78ac/collective.pfg.signup-1.6.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}