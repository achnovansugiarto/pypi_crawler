{
  "info": {
    "author": "Adrian Hungate",
    "author_email": "adrian@tlspu.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: BSD :: FreeBSD",
      "Operating System :: POSIX :: BSD :: NetBSD",
      "Operating System :: POSIX :: Linux",
      "Operating System :: POSIX :: SunOS/Solaris",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Topic :: System :: Filesystems",
      "Topic :: Utilities"
    ],
    "description": "=============================================================\nPyMMBfuse - FUSE filesystem for BBC Microcomputer disc images\n=============================================================\n\n.. contents:: Table of Contents\n   :depth: 2\n\nOverview\n--------\n\n**PyMMBfuse** is a FUSE (Filesystem in User Space) written in Python to\nprovide access to BBC Microcomputer DFS disc images, and MMB disc image\nbundles.\n\nHistory\n-------\n\nThe BBC Microcomputer has been around for many years (over 30 years now),\nand in all that time it has supported Tape, Floppy Disk, and occasionally\nsmall Hard Disk Drive storage (If you have a 1770 and ADFS) but thanks to\nthe work of a number of enthusiasts there is now an inexpensive add-on to\nallow any BBC Microcomputer (even those without Floppy Disk hardware) to\naccess mass storage on MMC Flash Cards.\n\nThis is wonderful but then poses a further problem, how to get the disk\nimages that the MMC/SuperMMC/TurboMMC hardware supports onto the flash card?\n\nThere are some tools which have been used for several years, they work ok,\nas long as you are running a supported version of Windows (They don't work,\nfor example, under Wine or CrossoverOffice), but I've found them a little\nconfusing. The process to create an MMB, add a new disk and put files on it\nis well documented but requires several steps and provides ample opportunity\nfor mistakes.\n\nDetails\n-------\n\nThis is where PyMMB is intended to fit in. The aim of the project is to\nprovide a platform independant library, command-line toolset, GUI application\nand FUSE binding for managing files stored on DFS disks, contained within\nMMB files.\n\nThis package is the FUSE driver which allows you to mount a DFS or MMB\nfile as though it were a normal device on your Un*x type system.\n\nRequirements\n------------\n\n    * PyMMB - The library (part of the PyMMB project) which supports all\n      all MMB and DFS access functionality.\n\n    * fusepy (> 2.0) - Provides access to the FUSE OS functionality.\n\nThis package is written for Python 2.x (at least 2.5) and currently is not\nsupported under Python 3.x\n\nInstallation\n------------\n\nYou can install PyMMBfuse with your favourite egg installer. We recommend\nusing **pip** ::\n\n  pip install PyMMBfuse\n\nUninstall\n---------\n\nIf you are using **pip** you can uninstall using ::\n\n  pip uninstall PyMMBfuse\n\nContributing\n------------\n\nContributions of code, development time, testing, or money are welcome. If\nyou are kind enough to donate money, your name (and optionally company name,\nand email or web address) will be listed as a sponsor.\n\nYou can join the project, see the current auto-build status, download the\ncode or browse the repository at https://projects.limbicly.com/bbc-micro/PyMMB/\n\nPlease consider joining the PyMMB project before you fork. While you are\nwelcome to do either, joining us will help propell PyMMB forwards faster\nthe larger the contributor base becomes.\n\nSponsoring\n----------\n\nDevelopment of this project is being sponsored by the following generous\nindividuals or organisations :\n\n    * Top Level Software Products Unlimited\n\n    * Limbic Cloud Solutions\n\nCredits\n-------\n\n    * Acorn Computers - For producing probably the most innovative computer\n      for its time ever.\n\n    * Martin Mather - For developing the original MMC Flash Card interface\n      (and the MMB file format which bears his initials) for the BBC Micro.\n\n    * Steve O'Leary - The code for FS Manager which helped me understand both\n      MMB and DFS formats better.\n\nChangelog\n---------\n\n0.1\n^^^\n\n- First alpha release\n\n0.7\n^^^\n\n- First beta release\n- New build/release system (Gitlab CI based)\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://projects.limbicly.com/bbc-micro/PyMMB",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymmbfuse",
    "package_url": "https://pypi.org/project/pymmbfuse/",
    "platform": "noarch",
    "project_url": "https://pypi.org/project/pymmbfuse/",
    "project_urls": {
      "Homepage": "https://projects.limbicly.com/bbc-micro/PyMMB"
    },
    "release_url": "https://pypi.org/project/pymmbfuse/0.7.4/",
    "requires_dist": [
      "PyMMB (>=0.7)",
      "fusepy (>=2.0)"
    ],
    "requires_python": ">=2.5, <3",
    "summary": "Fuse driver for BBC Microcomputer DFS disk images and MMB disk bundles",
    "version": "0.7.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7216896,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f3a9b4c162c58f77821a893b7e84b1e42688d881e2f46613d5f36fc208d85d3",
          "md5": "7de43c5f3ad382a54e9dbe505496ee98",
          "sha256": "f7abcaf702dc8324db6b0db4fff1965d0dc0b24e629033a3f74b15a98e396d7c"
        },
        "downloads": -1,
        "filename": "PyMMBfuse-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7de43c5f3ad382a54e9dbe505496ee98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12194,
        "upload_time": "2012-12-25T12:03:52",
        "upload_time_iso_8601": "2012-12-25T12:03:52.380924Z",
        "url": "https://files.pythonhosted.org/packages/3f/3a/9b4c162c58f77821a893b7e84b1e42688d881e2f46613d5f36fc208d85d3/PyMMBfuse-0.1.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.7.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "217a236732612ddb03452fb0a8d8aff56de775be3f050f7284aa8cba4aedf647",
          "md5": "7094fb23544068591beeb9b336948dae",
          "sha256": "f05257d77c836ee12ae0c73b9eeeaf1de28c5de8aa576ddccb63d1440ff0b0cf"
        },
        "downloads": -1,
        "filename": "pymmbfuse-0.7.4-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "7094fb23544068591beeb9b336948dae",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.5, <3",
        "size": 11449,
        "upload_time": "2020-05-11T17:10:58",
        "upload_time_iso_8601": "2020-05-11T17:10:58.705290Z",
        "url": "https://files.pythonhosted.org/packages/21/7a/236732612ddb03452fb0a8d8aff56de775be3f050f7284aa8cba4aedf647/pymmbfuse-0.7.4-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "217a236732612ddb03452fb0a8d8aff56de775be3f050f7284aa8cba4aedf647",
        "md5": "7094fb23544068591beeb9b336948dae",
        "sha256": "f05257d77c836ee12ae0c73b9eeeaf1de28c5de8aa576ddccb63d1440ff0b0cf"
      },
      "downloads": -1,
      "filename": "pymmbfuse-0.7.4-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "7094fb23544068591beeb9b336948dae",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": ">=2.5, <3",
      "size": 11449,
      "upload_time": "2020-05-11T17:10:58",
      "upload_time_iso_8601": "2020-05-11T17:10:58.705290Z",
      "url": "https://files.pythonhosted.org/packages/21/7a/236732612ddb03452fb0a8d8aff56de775be3f050f7284aa8cba4aedf647/pymmbfuse-0.7.4-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}