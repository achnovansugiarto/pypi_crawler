{
  "info": {
    "author": "SelectPdf",
    "author_email": "support@selectpdf.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# SelectPdf Online REST API - Python Client\n\nSelectPdf Online REST API is a professional solution for managing PDF documents online. It now has a dedicated, easy to use, Python client library that can be setup in minutes.\n\n## Installation\n\nDownload [selectpdf-api-python-client-1.4.0.zip](https://github.com/selectpdf/selectpdf-api-python-client/releases/download/1.4.0/selectpdf-api-python-client-1.4.0.zip), unzip it and run:\n\n```\ncd selectpdf-api-python-client-1.4.0\npython setup.py install\n```\n\nOR\n\nInstall SelectPdf Python Client for Online API via PyPI: [SelectPdf on PyPI](https://pypi.python.org/pypi/selectpdf).\n\n```\npip install selectpdf\n```\n\nOR\n\nClone [selectpdf-api-python-client](https://github.com/selectpdf/selectpdf-api-python-client) from Github and install the library.\n\n```\ngit clone https://github.com/selectpdf/selectpdf-api-python-client\ncd selectpdf-api-python-client\npython setup.py install\n```\n\n## HTML To PDF API - Python Client\n\nSelectPdf HTML To PDF Online REST API is a professional solution that lets you create PDF from web pages and raw HTML code in your applications. The API is easy to use and the integration takes only a few lines of code.\n\n### Features\n\n* Create PDF from any web page or html string.\n* Full html5/css3/javascript support.\n* Set PDF options such as page size and orientation, margins, security, web page settings.\n* Set PDF viewer options and PDF document information.\n* Create custom headers and footers for the pdf document.\n* Hide web page elements during the conversion.\n* Automatically generate bookmarks during the html to pdf conversion.\n* Support for partial page conversion.\n* Easy integration, no third party libraries needed.\n* Works in all programming languages.\n* No installation required.\n\nSign up for for free to get instant API access to SelectPdf [HTML to PDF API](https://selectpdf.com/html-to-pdf-api/).\n\n### Sample Code\n\n```python\n# -*- coding: utf-8 -*-\n\nimport sys, json\nimport selectpdf\n\nurl = \"https://selectpdf.com\"\nlocalFile = \"Test.pdf\"\napiKey = \"Your API key here\"\n\npythonVersion = \"Python 3\" if selectpdf.IS_PYTHON3 else \"Python 2\"\nprint (\"This is SelectPdf-{0} using {1}.\".format(selectpdf.CLIENT_VERSION, pythonVersion))\n\ntry:\n    client = selectpdf.HtmlToPdfClient(apiKey)\n\n    # set parameters - see full list at https://selectpdf.com/html-to-pdf-api/\n\n    # main properties\n\n    client.setPageSize(selectpdf.PageSize.A4) # PDF page size\n    client.setPageOrientation(selectpdf.PageOrientation.Portrait) # PDF page orientation\n    client.setMargins(0) # PDF page margins\n    client.setRenderingEngine(selectpdf.RenderingEngine.WebKit) # rendering engine\n    client.setConversionDelay(1) # conversion delay\n    client.setNavigationTimeout(30) # navigation timeout\n    client.setShowPageNumbers(False) # page numbers\n    client.setPageBreaksEnhancedAlgorithm(True) # enhanced page break algorithm\n\n    # additional properties\n\n    # client.setUseCssPrint(True) # enable CSS media print\n    # client.setDisableJavascript(True) # disable javascript\n    # client.setDisableInternalLinks(True) # disable internal links\n    # client.setDisableExternalLinks(True) # disable external links\n    # client.setKeepImagesTogether(True) # keep images together\n    # client.setScaleImages(True) # scale images to create smaller pdfs\n    # client.setSinglePagePdf(True) # generate a single page PDF\n    # client.setUserPassword(\"password\") # secure the PDF with a password\n\n    # generate automatic bookmarks\n\n    # client.setPdfBookmarksSelectors(\"H1, H2\") # create outlines (bookmarks) for the specified elements\n    # client.setViewerPageMode(selectpdf.PageMode.UseOutlines) # display outlines (bookmarks) in viewer\n\n    print (\"Starting conversion ...\")\n\n    # convert url to file\n    client.convertUrlToFile(url, localFile)\n\n    # convert url to memory\n    # pdf = client.convertUrl(url)\n\n    # convert html string to file\n    # client.convertHtmlStringToFile(\"This is some <b>html</b>.\", localFile)\n\n    # convert html string to memory\n    # pdf = client.convertHtmlString(\"This is some <b>html</b>.\")\n\n    print (\"Finished! Number of pages: {0}.\".format(client.getNumberOfPages()))\n\n    # get API usage\n    usageClient = selectpdf.UsageClient(apiKey)\n    usage = usageClient.getUsage()\n    print(\"Conversions remained this month: {0}.\".format(usage[\"available\"]))\n\nexcept selectpdf.ApiException as ex:\n    print (\"An error occurred: {0}.\".format(ex.getMessage()))\n\n```\n\n## Pdf Merge API\n\nSelectPdf Pdf Merge REST API is an online solution that lets you merge local or remote PDFs into a final PDF document.\n\n### Features\n\n* Merge local PDF document.\n* Merge remote PDF from public url.\n* Set PDF viewer options and PDF document information.\n* Secure generated PDF with a password.\n* Works in all programming languages.\n\nSee [PDF Merge API](https://selectpdf.com/pdf-merge-api/) page for full list of parameters.\n\n### Sample Code\n\n```python\n# -*- coding: utf-8 -*-\n\nimport sys, json\nimport selectpdf\n\ntestUrl = \"https://selectpdf.com/demo/files/selectpdf.pdf\"\ntestPdf = \"Input.pdf\"\nlocalFile = \"Result.pdf\"\napiKey = \"Your API key here\"\n\npythonVersion = \"Python 3\" if selectpdf.IS_PYTHON3 else \"Python 2\"\nprint (\"This is SelectPdf-{0} using {1}.\".format(selectpdf.CLIENT_VERSION, pythonVersion))\n\ntry:\n    client = selectpdf.PdfMergeClient(apiKey)\n\n    # set parameters - see full list at https://selectpdf.com/pdf-merge-api/\n\n    # specify the pdf files that will be merged (order will be preserved in the final pdf)\n\n    client.addFile(testPdf) # add PDF from local file\n    client.addUrlFile(testUrl) # add PDF From public url\n    # client.addFileWithPassword(testPdf, \"pdf_password\") # add PDF (that requires a password) from local file\n    # client.addUrlFileWithPassword(testUrl, \"pdf_password\") # add PDF (that requires a password) from public url\n\n    print (\"Starting pdf merge ...\")\n\n    # merge pdfs to local file\n    client.saveToFile(localFile)\n\n    # merge pdfs to memory\n    # pdf = client.save()\n\n    print (\"Finished! Number of pages: {0}.\".format(client.getNumberOfPages()))\n\n    # get API usage\n    usageClient = selectpdf.UsageClient(apiKey)\n    usage = usageClient.getUsage()\n    print(\"Conversions remained this month: {0}.\".format(usage[\"available\"]))\n\nexcept selectpdf.ApiException as ex:\n    print (\"An error occurred: {0}.\".format(ex.getMessage()))\n\n```\n\n## Pdf To Text API\n\nSelectPdf Pdf To Text REST API is an online solution that lets you extract text from your PDF documents or search your PDF document for certain words.\n\n### Features\n\n* Extract text from PDF.\n* Search PDF.\n* Specify start and end page for partial file processing.\n* Specify output format (plain text or html).\n* Use a PDF from an online location (url) or upload a local PDF document.\n\nSee [Pdf To Text API](https://selectpdf.com/pdf-to-text-api/) page for full list of parameters.\n\n### Sample Code - Pdf To Text\n\n```python\n# -*- coding: utf-8 -*-\n\nimport sys, json\nimport selectpdf\n\ntestUrl = \"https://selectpdf.com/demo/files/selectpdf.pdf\"\ntestPdf = \"Input.pdf\"\nlocalFile = \"Result.txt\"\napiKey = \"Your API key here\"\n\npythonVersion = \"Python 3\" if selectpdf.IS_PYTHON3 else \"Python 2\"\nprint (\"This is SelectPdf-{0} using {1}.\".format(selectpdf.CLIENT_VERSION, pythonVersion))\n\ntry:\n    client = selectpdf.PdfToTextClient(apiKey)\n\n    # set parameters - see full list at https://selectpdf.com/pdf-to-text-api/\n\n    client.setStartPage(1) # start page (processing starts from here)\n    client.setEndPage(0) # end page (set 0 to process file til the end)\n    client.setOutputFormat(selectpdf.OutputFormat.Text) # set output format (0-Text or 1-HTML)\n\n    print (\"Starting pdf to text ...\")\n\n    # convert local pdf to local text file\n    client.getTextFromFileToFile(testPdf, localFile)\n\n    # extract text from local pdf to memory\n    # text = client.getTextFromFile(testPdf)\n    # print text\n    # print (text)\n\n    # convert pdf from public url to local text file\n    # client.getTextFromUrlToFile(testUrl, localFile)\n\n    # extract text from pdf from public url to memory\n    # text = client.getTextFromUrl(testUrl)\n    # print text\n    # print (text)\n\n    print (\"Finished! Number of pages processed: {0}.\".format(client.getNumberOfPages()))\n\n    # get API usage\n    usageClient = selectpdf.UsageClient(apiKey)\n    usage = usageClient.getUsage()\n    print(\"Conversions remained this month: {0}.\".format(usage[\"available\"]))\n\nexcept selectpdf.ApiException as ex:\n    print (\"An error occurred: {0}.\".format(ex.getMessage()))\n\n```\n\n### Sample Code - Search Pdf\n\n```python\n# -*- coding: utf-8 -*-\n\nimport sys, json\nimport selectpdf\n\ntestUrl = \"https://selectpdf.com/demo/files/selectpdf.pdf\"\ntestPdf = \"Input.pdf\"\napiKey = \"Your API key here\"\n\npythonVersion = \"Python 3\" if selectpdf.IS_PYTHON3 else \"Python 2\"\nprint (\"This is SelectPdf-{0} using {1}.\".format(selectpdf.CLIENT_VERSION, pythonVersion))\n\ntry:\n    client = selectpdf.PdfToTextClient(apiKey)\n\n    # set parameters - see full list at https://selectpdf.com/pdf-to-text-api/\n\n    client.setStartPage(1) # start page (processing starts from here)\n    client.setEndPage(0) # end page (set 0 to process file til the end)\n    client.setOutputFormat(selectpdf.OutputFormat.Text) # set output format (0-Text or 1-HTML)\n\n    print (\"Starting search pdf ...\")\n\n    # search local pdf\n    results = client.searchFile(testPdf, \"pdf\")\n\n    # search pdf from public url\n    # results = client.searchUrl(testUrl, \"pdf\")\n\n    print (\"Search results:\\n{0}\\nSearch results count: {1}.\".format(json.dumps(results, indent=4), len(results)))\n\n    print (\"Finished! Number of pages processed: {0}.\".format(client.getNumberOfPages()))\n\n    # get API usage\n    usageClient = selectpdf.UsageClient(apiKey)\n    usage = usageClient.getUsage()\n    print(\"Conversions remained this month: {0}.\".format(usage[\"available\"]))\n\nexcept selectpdf.ApiException as ex:\n    print (\"An error occurred: {0}.\".format(ex.getMessage()))\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/selectpdf/selectpdf-api-python-client",
    "keywords": "",
    "license": "License :: OSI Approved :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "selectpdf",
    "package_url": "https://pypi.org/project/selectpdf/",
    "platform": null,
    "project_url": "https://pypi.org/project/selectpdf/",
    "project_urls": {
      "Homepage": "https://github.com/selectpdf/selectpdf-api-python-client"
    },
    "release_url": "https://pypi.org/project/selectpdf/1.4.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python client for SelectPdf Online REST API",
    "version": "1.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13355594,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d04d108c7625669fd33edc59346ca1edbed6bd1b3478fdae4198b9c2c3e0bd7",
          "md5": "39bf2b5fe70f3a0580fe9b44134f51d7",
          "sha256": "a813e9a95f53b5e6912ceca7a91e41827a49a08233fcd87f8d8dfcb11d2d44bb"
        },
        "downloads": -1,
        "filename": "selectpdf-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39bf2b5fe70f3a0580fe9b44134f51d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11528,
        "upload_time": "2020-10-13T11:48:23",
        "upload_time_iso_8601": "2020-10-13T11:48:23.398791Z",
        "url": "https://files.pythonhosted.org/packages/5d/04/d108c7625669fd33edc59346ca1edbed6bd1b3478fdae4198b9c2c3e0bd7/selectpdf-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b9ef61309b2a89888e6d35be5619082321401738f7f01ab236bbe8000c7a962",
          "md5": "e649549e337d1cb69a74f9251d19479b",
          "sha256": "96c781c0f757fbc640483eac477440d832f8f0cfa21d5b14e22ebd16104ed271"
        },
        "downloads": -1,
        "filename": "selectpdf-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e649549e337d1cb69a74f9251d19479b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10957,
        "upload_time": "2020-10-13T11:48:25",
        "upload_time_iso_8601": "2020-10-13T11:48:25.584260Z",
        "url": "https://files.pythonhosted.org/packages/7b/9e/f61309b2a89888e6d35be5619082321401738f7f01ab236bbe8000c7a962/selectpdf-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef3fff168713c834ca562f835b80d0171fa7d54f90f18cdfbc8daa0a8523fa7a",
          "md5": "d920588f5061c3f7869d0d4b0366d8e9",
          "sha256": "57d0d4bbbdc45f5db7f9d85381a790ca6e6dc49b43bb0b1c05f74f4c026a1d5c"
        },
        "downloads": -1,
        "filename": "selectpdf-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d920588f5061c3f7869d0d4b0366d8e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19586,
        "upload_time": "2022-03-31T06:19:34",
        "upload_time_iso_8601": "2022-03-31T06:19:34.949522Z",
        "url": "https://files.pythonhosted.org/packages/ef/3f/ff168713c834ca562f835b80d0171fa7d54f90f18cdfbc8daa0a8523fa7a/selectpdf-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92a34a6a9a261d0a02cb9afe91eba18584156e8b9443789b3bf3893965f9d40c",
          "md5": "5bd09fd89d82063a7212e6655ae10f45",
          "sha256": "adb05283b67565597b9667aa59a3cd049a66b8676867f14981a9e04d092bc060"
        },
        "downloads": -1,
        "filename": "selectpdf-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5bd09fd89d82063a7212e6655ae10f45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19370,
        "upload_time": "2022-03-31T06:19:36",
        "upload_time_iso_8601": "2022-03-31T06:19:36.882303Z",
        "url": "https://files.pythonhosted.org/packages/92/a3/4a6a9a261d0a02cb9afe91eba18584156e8b9443789b3bf3893965f9d40c/selectpdf-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef3fff168713c834ca562f835b80d0171fa7d54f90f18cdfbc8daa0a8523fa7a",
        "md5": "d920588f5061c3f7869d0d4b0366d8e9",
        "sha256": "57d0d4bbbdc45f5db7f9d85381a790ca6e6dc49b43bb0b1c05f74f4c026a1d5c"
      },
      "downloads": -1,
      "filename": "selectpdf-1.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d920588f5061c3f7869d0d4b0366d8e9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19586,
      "upload_time": "2022-03-31T06:19:34",
      "upload_time_iso_8601": "2022-03-31T06:19:34.949522Z",
      "url": "https://files.pythonhosted.org/packages/ef/3f/ff168713c834ca562f835b80d0171fa7d54f90f18cdfbc8daa0a8523fa7a/selectpdf-1.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92a34a6a9a261d0a02cb9afe91eba18584156e8b9443789b3bf3893965f9d40c",
        "md5": "5bd09fd89d82063a7212e6655ae10f45",
        "sha256": "adb05283b67565597b9667aa59a3cd049a66b8676867f14981a9e04d092bc060"
      },
      "downloads": -1,
      "filename": "selectpdf-1.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5bd09fd89d82063a7212e6655ae10f45",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19370,
      "upload_time": "2022-03-31T06:19:36",
      "upload_time_iso_8601": "2022-03-31T06:19:36.882303Z",
      "url": "https://files.pythonhosted.org/packages/92/a3/4a6a9a261d0a02cb9afe91eba18584156e8b9443789b3bf3893965f9d40c/selectpdf-1.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}