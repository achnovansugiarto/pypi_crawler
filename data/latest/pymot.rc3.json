{
  "info": {
    "author": null,
    "author_email": "Simas Sirutavicius <sirutavicius.simas@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Multi object tracking class\n\n> Perform multi object tracking and use a custom function for tracked objects\n\nMOT arguments:\n\n-   _mot_cfg_ - configuration dictionary for MOT (tamplate below)\n\n```python\nmot_cfg = {\n           'od_classes':'SPECIFY',       # Object detection algorithm classes\n           'od_algo':'yolo',\n           'od_wpath':'SPECIFY',         # Object detection algorithm weights path\n           'od_cpath':'SPECIFY',         # Object detection algorithm config path\n           'od_nms_thr':0.4,\n           'od_conf_thr':0.5,\n           'od_img_size':416,\n           'od_cuda':True,\n           't_classes':'SPECIFY',        # Classes to track\n           't_algo':'deepsort',\n           't_cuda':True,\n           't_metric':'cosine',\n           't_max_cosine_distance':0.2,\n           't_budget':100,\n           't_max_iou_distance':0.7,\n           't_max_age':70,\n           't_n_init':3\n        }\n```\n\nMOT methods:\n\n- _detect_objects_ - detect object from a frame\n- _track_objects_ - perform a tracking update on frame\n\n## Algorithms\n\nCurrently available object detection algorithms:\n        \n- YOLOv3\n- YOLOv4\n        \nCurrently available tracking algorithms:\n        \n- DeepSORT\n\n## Installation\n\nTo use the package torch, torchvision and opencv must be also installed.\n\nNote: It is recommended to use opencv compiled with CUDA support, because algorithms that use opencv's darknet\nbackend like YOLOv3/v4 run an order of magnitude faster on a GPU.\n\n```sh\npip install pymot\n```\n\n## Usage\n\nWithout a custom function for tracked objects\n\n```python\nfrom pymot.mot import MOT\nimport cv2\n\nmot_tracker = MOT(mot_cfg)\n\ncap = cv2.VideoCapture(0)\n\nwhile True:\n    ret, frame = cap.read()\n    if not ret:\n        break\n\n    if cv2.waitKey(1) & 0xFF == ord(\"q\"):\n        cap.release()\n        cv2.destroyAllWindows()\n        break\n\n    tracked_ojb_info, frame_with_bboxes, _ = obj_tracking.track_objects(frame)\n\n    cv2.imshow('Object tracking with deepSORT', frame_with_bboxes)\n```\n\nWith a custom function for tracked objects\n\n```python\nfrom pymot.mot import MOT\nimport cv2\n\nmot_tracker = MOT(mot_cfg)\n\ncap = cv2.VideoCapture(0)\n\n\ndef custom_processing_function(frame, tracking_id, obj_coord, **proc_kwargs) -> tuple[dict, tuple]:\n    xmin, ymin, xmax, ymax = obj_coord\n\n    # If number of processed objects is more than max limit,\n    # delete the first to enter.\n    if len(proc_kwargs['proc_obj_info']) > proc_kwargs['max_n_obj']:\n        if proc_kwargs['last_obj_to_del'] not in proc_kwargs['proc_obj_info']:\n            proc_kwargs['last_obj_to_del'] += 1\n        else:\n            del proc_kwargs['proc_obj_info'][proc_kwargs['last_obj_to_del']]\n\n    # If there are no processed objects set the first to enter id\n    # as last_obj_to_del.\n    if len(proc_kwargs['proc_obj_info']) == 0:\n        proc_kwargs['last_obj_to_del'] = tracking_id\n\n    # If new tracking id, create new entry in the processed objects dict.\n    if tracking_id > proc_kwargs['prev_id']:\n        proc_kwargs['prev_id'] = tracking_id\n        proc_kwargs['proc_obj_info'][tracking_id] = [1, [], [], False]\n        # Processing object information dict list element meaning:\n        # 0 - counter,\n        # 1 - custom intermediate data accumulated until final processing,\n        # 2 - data assigned after final processing,\n        # 3 - if object has 2 states, e.g. recognized, unrecognized\n\n    # If the number of performed processings on a object with a certain\n    # tracking id is less than needed, do another processing.\n    if proc_kwargs['proc_obj_info'][tracking_id][0] <= proc_kwargs['n_det']:\n\n        # DO SOMETHING\n\n        proc_kwargs['proc_obj_info'][tracking_id][1].append(plate_number)\n\n        idx = int(proc_kwargs['proc_obj_info'][tracking_id][0] \\\n            * (len(proc_kwargs['proc_animation']) / proc_kwargs['n_det']))\n\n        proc_kwargs['proc_obj_info'][tracking_id][2] \\\n            = proc_kwargs['proc_animation'][idx - 1 \\\n                if idx == len(proc_kwargs['proc_animation']) else idx]\n\n        proc_kwargs['proc_obj_info'][tracking_id][0] += 1\n\n    # If the number of performed processings on a object with a certain\n    # tracking id has sufficed do final processing.\n    if proc_kwargs['proc_obj_info'][tracking_id][0] == proc_kwargs['n_det'] + 1:\n\n        # DO SOMETHING\n\n        proc_kwargs['proc_obj_info'][tracking_id][0] += 1\n\n    return ((proc_kwargs['proc_obj_info'], proc_kwargs['last_obj_to_del'], proc_kwargs['prev_id']),\n    (False, proc_kwargs['proc_obj_info'][tracking_id][3],\n    ((0,255,0),(0,0,255)),\n    proc_kwargs['proc_obj_info'][tracking_id][2]))\n\n\nprev_id = -1\nn_det = 10\nmax_n_obj = 50\nlast_obj_to_del = 0\nproc_obj_info = {}\nproc_animation = {0: \"|\",\n                  1: \"|\"*2,\n                  2: \"|\"*3,\n                  3: \"|\"*4,\n                  4: \"|\"*5,\n                  5: \"|\"*6,\n                  6: \"|\"*7,\n                  7: \"|\"*8,}\n\nwhile True:\n    ret, frame = cap.read()\n    if not ret:\n        break\n\n    if cv2.waitKey(1) & 0xFF == ord(\"q\"):\n        cap.release()\n        cv2.destroyAllWindows()\n        break\n\n    output = obj_tracking.track_objects(frame,\n                                        custom_processing_function,\n                                        prev_id = prev_id,\n                                        n_det = n_det,\n                                        max_n_obj = max_n_obj,\n                                        last_obj_to_del = last_obj_to_del,\n                                        proc_animation = proc_animation,\n                                        # Custom kwargs\n                                        )\n\n    tracked_ojb_info, frame_with_bboxes, proc_obj_info_tuple = output\n\n    if None not in proc_obj_info_tuple:\n        proc_obj_info, last_obj_to_del, prev_id = proc_obj_info_tuple\n\n    cv2.imshow('Object tracking with deepSORT', frame_with_bboxes)\n```\n\n## [Changelog](https://github.com/simsiru/pymot/blob/main/CHANGELOG.md)\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "pymot",
    "package_url": "https://pypi.org/project/pymot/",
    "platform": null,
    "project_url": "https://pypi.org/project/pymot/",
    "project_urls": {
      "Source": "https://github.com/simsiru/pymot"
    },
    "release_url": "https://pypi.org/project/pymot/0.0.3/",
    "requires_dist": [
      "numpy >=1.22.0",
      "scipy >=1.8.0"
    ],
    "requires_python": ">=3.8",
    "summary": "Multi object tracking",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14681099,
  "releases": {
    "0.0.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "97c92dfa53a0919f743491935f52ff37b207ddacfafbf1781bea20fbcbcc14ff",
          "md5": "b0db13a169876a1d2771da167167a549",
          "sha256": "182c189b79d947d1e376043a008af395dc7ff9332834fe22577ca88f7d7f70d5"
        },
        "downloads": -1,
        "filename": "pymot-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0db13a169876a1d2771da167167a549",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 42958433,
        "upload_time": "2022-08-06T18:51:55",
        "upload_time_iso_8601": "2022-08-06T18:51:55.259224Z",
        "url": "https://files.pythonhosted.org/packages/97/c9/2dfa53a0919f743491935f52ff37b207ddacfafbf1781bea20fbcbcc14ff/pymot-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "b047557fa62cfb29356a6f01c9049a318a0e5c4925ed2df3c1d5485d992beda4",
          "md5": "dabdc54f5f3bffc1f7793f2bab2c8410",
          "sha256": "4e0b442d3175388466645498829d1a4dc9727cd95d2db38abf6f500532fa55c9"
        },
        "downloads": -1,
        "filename": "pymot-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dabdc54f5f3bffc1f7793f2bab2c8410",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 42956224,
        "upload_time": "2022-08-06T18:52:09",
        "upload_time_iso_8601": "2022-08-06T18:52:09.514356Z",
        "url": "https://files.pythonhosted.org/packages/b0/47/557fa62cfb29356a6f01c9049a318a0e5c4925ed2df3c1d5485d992beda4/pymot-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "664454ab9921be3f5d9330ab13015f4a454df0e239f6e8dbf946f82681c15db1",
          "md5": "1712c64839e2bfbf69ebe50787641bb5",
          "sha256": "1c41fa60d70bbc31b16e0963fec0f70beb5663cbfa2778d395ef1a203af1a147"
        },
        "downloads": -1,
        "filename": "pymot-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1712c64839e2bfbf69ebe50787641bb5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 42953745,
        "upload_time": "2022-08-07T15:40:56",
        "upload_time_iso_8601": "2022-08-07T15:40:56.045150Z",
        "url": "https://files.pythonhosted.org/packages/66/44/54ab9921be3f5d9330ab13015f4a454df0e239f6e8dbf946f82681c15db1/pymot-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "4557f4a220218d13e1f1e83b7085475bbb081be45ca005d03205e4b950a3d183",
          "md5": "0d9dbd3fa9760acaf5d4468380bfc2b9",
          "sha256": "f42ac4c829d65ac67df0b14bcbf5b7f94bd86d9a19ee5effaa955a966b440472"
        },
        "downloads": -1,
        "filename": "pymot-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0d9dbd3fa9760acaf5d4468380bfc2b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 42953084,
        "upload_time": "2022-08-07T15:41:05",
        "upload_time_iso_8601": "2022-08-07T15:41:05.287344Z",
        "url": "https://files.pythonhosted.org/packages/45/57/f4a220218d13e1f1e83b7085475bbb081be45ca005d03205e4b950a3d183/pymot-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "90e1bcb6f89f43b0f266691fa7396724bc677e6230c06f504b4bcc854cb8b66d",
          "md5": "7b59a1ec786a939f0b671bcd1a077418",
          "sha256": "dcc3f275290523d82f2267ad84029194e36a4e21b3ecfa68bff10a0234676589"
        },
        "downloads": -1,
        "filename": "pymot-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b59a1ec786a939f0b671bcd1a077418",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 42953720,
        "upload_time": "2022-08-07T16:56:22",
        "upload_time_iso_8601": "2022-08-07T16:56:22.707256Z",
        "url": "https://files.pythonhosted.org/packages/90/e1/bcb6f89f43b0f266691fa7396724bc677e6230c06f504b4bcc854cb8b66d/pymot-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "826ecd4fce84b86ceb879e803375ab4131ff333f7734c89476a7127e9174795d",
          "md5": "c037a2334e3767bc982abbf518cfe94c",
          "sha256": "b8e7c360ca4423cc8f8e82ad9932b8a21d7de8dc07ac748891c52ef6a1879f0d"
        },
        "downloads": -1,
        "filename": "pymot-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c037a2334e3767bc982abbf518cfe94c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 42953143,
        "upload_time": "2022-08-07T16:56:32",
        "upload_time_iso_8601": "2022-08-07T16:56:32.237550Z",
        "url": "https://files.pythonhosted.org/packages/82/6e/cd4fce84b86ceb879e803375ab4131ff333f7734c89476a7127e9174795d/pymot-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "90e1bcb6f89f43b0f266691fa7396724bc677e6230c06f504b4bcc854cb8b66d",
        "md5": "7b59a1ec786a939f0b671bcd1a077418",
        "sha256": "dcc3f275290523d82f2267ad84029194e36a4e21b3ecfa68bff10a0234676589"
      },
      "downloads": -1,
      "filename": "pymot-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7b59a1ec786a939f0b671bcd1a077418",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 42953720,
      "upload_time": "2022-08-07T16:56:22",
      "upload_time_iso_8601": "2022-08-07T16:56:22.707256Z",
      "url": "https://files.pythonhosted.org/packages/90/e1/bcb6f89f43b0f266691fa7396724bc677e6230c06f504b4bcc854cb8b66d/pymot-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "826ecd4fce84b86ceb879e803375ab4131ff333f7734c89476a7127e9174795d",
        "md5": "c037a2334e3767bc982abbf518cfe94c",
        "sha256": "b8e7c360ca4423cc8f8e82ad9932b8a21d7de8dc07ac748891c52ef6a1879f0d"
      },
      "downloads": -1,
      "filename": "pymot-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c037a2334e3767bc982abbf518cfe94c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 42953143,
      "upload_time": "2022-08-07T16:56:32",
      "upload_time_iso_8601": "2022-08-07T16:56:32.237550Z",
      "url": "https://files.pythonhosted.org/packages/82/6e/cd4fce84b86ceb879e803375ab4131ff333f7734c89476a7127e9174795d/pymot-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}