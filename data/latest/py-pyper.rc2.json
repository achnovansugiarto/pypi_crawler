{
  "info": {
    "author": "James Bradbury",
    "author_email": "jamesbradbury93@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# pyper\n\n`pyper` is a python package for constructing REAPER session with native python constructs. The majority of the interface is a reflection of the `.rpp` file structure which itself is very similar to `.xml` with tags and elements (except each element is called a 'chunk'). As such, you may need to know a bit about the underlying structure of REAPER's file format before using something like this. A good way to do this is to make a REAPER project and open the project in a text editor. You might also refer to [this document](https://github.com/ReaTeam/Doc/blob/master/State%20Chunk%20Definitions) which is fairly exhaustive.\n\n## installation\n\nYou can `git clone` this repo, `cd` to it and then install via `pip install -e pyper`. You need to point `pip` to the folder containing setup.py, not the parent folder with examples and README.md etc.\n\nYou can also `pip install py-pyper`.\n\n## usage\n\n`pyper` exposes objects for each type of 'chunk' or as I've called it **node** in the graph of objects in a session. A very simple example of a REAPER project with a single track would go as follows.\n\n```python\nfrom pyper.nodes import * # import all of the pyper nodes\n\nproject = Project( # create an instance of a project\n    Track() # and pass a Track() object to the constructor\n)\n\nproject.write(\"basic.rpp\") # write the project out to the path\n```\n\nWe can construct such graphs in a variety of ways which lends `pyper` towards programmatic constructions of projects.\n\n```python\n# Using Loops\nfrom pyper.nodes import *\n\nproject = Project() # create an instance of a project\n\nfor x in range(1024):\n    project.add(Track()) # use the add method of the project to add a Track()\n\nproject.write(\"loops.rpp\") # write the project out to the path\n```\n\n```python\n# Comprehensions\nfrom pyper.nodes import *\ntracks = [Track() for x in range(100)]\nproject = Project(*tracks)\nproject.write(\"comprehensions.rpp\") # write the project out to the path\n```\n\nA more complex example might be to arrange a series of sound files randomly along a single track, similar to a granular synthesiser. This example presents new `pyper` nodes you won't have seen before\n\n```python\nfrom pyper.nodes import Project, Track, Item, Source # note new nodes Item() and Source()\nfrom pathlib import Path\nimport random\n\nsources = []\n\n# create a source object for each of the .wav files in a directory (can you tell I love comprehensions)\nsources = [\n    Source(file=f'{str(x)}')\n    for x in Path('my-sounds').rglob(\"*.wav\") # you would point it to an actual folder of sounds, not just 'my-sounds'\n]\n\ntrack = Track() # create a blank Track()\n\npos = 0.0 # set our initial position to 0\nfor x in range(1000): # 1000 grains\n    grain = random.choice(sources) # random file from our sources\n    \n    length = random.uniform(0.1, 0.5) # random length of the item\n    track.add(\n        Item(\n            grain, # Item()'s have a child Source() node, which is randomly selected above\n            position = pos, # and we set the position\n            length = length # and we set the length\n        )\n    )\n    pos += length # increment the position by the length to create contiguous blocks\n\nproject = Project(track) # create the project with our composed track\nproject.write(\"granular.rpp\") # write it out\n```\n\n### props\nIn the `.rpp` structure each 'chunk' can have various properties. For example, the `ITEM` chunk will have length and position properties that determine where in the timeline the item is positioned and the duration of the item. I don't want to implement functions for each of these so there are ways to insert arbitrary properties for each 'chunk', or what you are now familiar with as a `pyper` 'node'.\n\n```python\n# modifiying properties with function arguments\nfrom pyper.nodes import *\nitem = Item(\n    length = 10, \n    position = 0.5\n) # create a blank item 10 seconds in length a 0.5 seconds in the timeline\n# the convention is you match the word of the property as lower case.\n# if the property in the file is LENGTH, then the function argument is 'length'\ntrack = Track(item)\nproject = Project(track)\nproject.write(\"properties1.rpp\") # write the project out to the path\n```\n\n```python\n# modifiying properties by directly modifying the .props of the object\nfrom pyper.nodes import *\nitem = Item() # create a blank item 10 seconds in length a 0.5 seconds in the timeline\nitem.props = {\n    \"LENGTH\" : 10,\n    \"POSITION\" : 0.5\n}\ntrack = Track(item)\nproject = Project(track)\nproject.write(\"properties1.rpp\") # write the project out to the path\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jamesb93/pyper",
    "keywords": "",
    "license": "GLPv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-pyper",
    "package_url": "https://pypi.org/project/py-pyper/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-pyper/",
    "project_urls": {
      "Homepage": "https://github.com/jamesb93/pyper"
    },
    "release_url": "https://pypi.org/project/py-pyper/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Construct REAPER projects in Python.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9112989,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "521b24102d31b2ecc631569916f253699aa78f449ff4774954dcb910c58c62bf",
          "md5": "ad43ec8230d87ac6962bb5b75339e71c",
          "sha256": "b49662fb2530c3f3c3c75a4a4481248f856331093e298af9886f5255f910dda3"
        },
        "downloads": -1,
        "filename": "py-pyper-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ad43ec8230d87ac6962bb5b75339e71c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4061,
        "upload_time": "2021-01-12T09:59:56",
        "upload_time_iso_8601": "2021-01-12T09:59:56.434200Z",
        "url": "https://files.pythonhosted.org/packages/52/1b/24102d31b2ecc631569916f253699aa78f449ff4774954dcb910c58c62bf/py-pyper-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcc6151d9dc64ad4f7429f5232bc2090a5bfeec0cb40104222f7f0398257a707",
          "md5": "7ce0c92affb2abff39d8d71de7bb8455",
          "sha256": "b8381817ccf60f8f71579209a00b9c08989d8b80abe3ecc708a6d66040a7ea72"
        },
        "downloads": -1,
        "filename": "py-pyper-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7ce0c92affb2abff39d8d71de7bb8455",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4050,
        "upload_time": "2021-01-12T10:04:13",
        "upload_time_iso_8601": "2021-01-12T10:04:13.580237Z",
        "url": "https://files.pythonhosted.org/packages/fc/c6/151d9dc64ad4f7429f5232bc2090a5bfeec0cb40104222f7f0398257a707/py-pyper-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcc6151d9dc64ad4f7429f5232bc2090a5bfeec0cb40104222f7f0398257a707",
        "md5": "7ce0c92affb2abff39d8d71de7bb8455",
        "sha256": "b8381817ccf60f8f71579209a00b9c08989d8b80abe3ecc708a6d66040a7ea72"
      },
      "downloads": -1,
      "filename": "py-pyper-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7ce0c92affb2abff39d8d71de7bb8455",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4050,
      "upload_time": "2021-01-12T10:04:13",
      "upload_time_iso_8601": "2021-01-12T10:04:13.580237Z",
      "url": "https://files.pythonhosted.org/packages/fc/c6/151d9dc64ad4f7429f5232bc2090a5bfeec0cb40104222f7f0398257a707/py-pyper-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}