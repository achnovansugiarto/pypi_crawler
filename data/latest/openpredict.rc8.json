{
  "info": {
    "author": "Arif Yilmaz, Elif",
    "author_email": "Remzi Çelebi <r.celebi@maastrichtuniversity.nl>, Vincent Emonet <vincent.emonet@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# 🔮🐍 Translator OpenPredict\n\n[![Python versions](https://img.shields.io/pypi/pyversions/openpredict)](https://pypi.org/project/openpredict) [![Version](https://img.shields.io/pypi/v/openpredict)](https://pypi.org/project/openpredict) [![Publish package](https://github.com/MaastrichtU-IDS/translator-openpredict/actions/workflows/publish-package.yml/badge.svg)](https://github.com/MaastrichtU-IDS/translator-openpredict/actions/workflows/publish-package.yml)\n\n[![Test the production API](https://github.com/MaastrichtU-IDS/translator-openpredict/actions/workflows/test-prod.yml/badge.svg)](https://github.com/MaastrichtU-IDS/translator-openpredict/actions/workflows/test-prod.yml) [![Run integration tests for TRAPI](https://github.com/MaastrichtU-IDS/translator-openpredict/actions/workflows/test-integration.yml/badge.svg)](https://github.com/MaastrichtU-IDS/translator-openpredict/actions/workflows/test-integration.yml) [![SonarCloud Coverage](https://sonarcloud.io/api/project_badges/measure?project=MaastrichtU-IDS_translator-openpredict&metric=coverage)](https://sonarcloud.io/dashboard?id=MaastrichtU-IDS_translator-openpredict)\n\n**OpenPredict** is a python package to help serve predictions of biomedical associations, as Translator Reasoner API (aka. TRAPI).\n\nThe [Translator Reasoner API](https://github.com/NCATSTranslator/ReasonerAPI) (TRAPI) defines a standard HTTP API for communicating biomedical questions and answers leveraging the [Biolink model](https://github.com/biolink/biolink-model/).\n\nThe package provides:\n\n* a decorator `@trapi_predict` to which the developer can pass all informations required to integrate the prediction function to a Translator Reasoner API\n* a `TRAPI` class to deploy a Translator Reasoner API serving a list of prediction functions decorated with `@trapi_predict`\n* Helpers to store your models in a FAIR manner, using tools such as [`dvc`](https://dvc.org/) and [`mlem`](https://mlem.ai/)\n\nPredictions are usually generated from machine learning models (e.g. predict disease treated by drug), but it can adapt to generic python function, as long as the input params and return object follow the expected structure.\n\nAdditionally to the library, this repository contains the code for the **OpenPredict Translator API** available at **[openpredict.semanticscience.org](https://openpredict.semanticscience.org)**, which serves a few prediction models developed at the Institute of Data Science.\n\n## 📦️ Use the package\n\n### Install\n\n```bash\npip install openpredict\n```\n\n### Use\n\nThe `openpredict` package provides a decorator `@trapi_predict` to annotate your functions that generate predictions. The code for this package is in `src/openpredict/`.\n\nPredictions generated from functions decorated with `@trapi_predict` can easily be imported in the Translator OpenPredict API, exposed as an API endpoint to get predictions from the web, and queried through the Translator Reasoner API (TRAPI)\n\n```python\nfrom openpredict import trapi_predict, PredictOptions, PredictOutput\n\n@trapi_predict(path='/predict',\n    name=\"Get predicted targets for a given entity\",\n    description=\"Return the predicted targets for a given entity: drug (DrugBank ID) or disease (OMIM ID), with confidence scores.\",\n    edges=[\n        {\n            'subject': 'biolink:Drug',\n            'predicate': 'biolink:treats',\n            'object': 'biolink:Disease',\n        },\n        {\n            'subject': 'biolink:Disease',\n            'predicate': 'biolink:treated_by',\n            'object': 'biolink:Drug',\n        },\n    ],\n\tnodes={\n        \"biolink:Disease\": {\n            \"id_prefixes\": [\n                \"OMIM\"\n            ]\n        },\n        \"biolink:Drug\": {\n            \"id_prefixes\": [\n                \"DRUGBANK\"\n            ]\n        }\n    }\n)\ndef get_predictions(\n        input_id: str, options: PredictOptions\n    ) -> PredictOutput:\n    # Add the code the load the model and get predictions here\n    predictions = {\n        \"hits\": [\n            {\n                \"id\": \"DB00001\",\n                \"type\": \"biolink:Drug\",\n                \"score\": 0.12345,\n                \"label\": \"Leipirudin\",\n            }\n        ],\n        \"count\": 1,\n    }\n    return predictions\n```\n\n> 🍪 You can use [**our cookiecutter template**](https://github.com/MaastrichtU-IDS/cookiecutter-openpredict-api/) to quickly bootstrap a repository with everything ready to start developing your prediction models, to then easily publish, and integrate them in the Translator ecosystem\n\n## 🌐 The OpenPredict Translator API\n\nAdditionally to the library, this repository contains the code for the **OpenPredict Translator API** available at **[openpredict.semanticscience.org](https://openpredict.semanticscience.org)** and the predictions models it exposes:\n\n* the code for the OpenPredict API endpoints in  `src/trapi/` defines:\n  *  a TRAPI endpoint returning predictions for the loaded models\n  * individual endpoints for each loaded models, taking an input id, and returning predicted hits\n  * endpoints serving metadata about runs, models evaluations, features for the OpenPredict model, stored as RDF, using the [ML Schema ontology](http://ml-schema.github.io/documentation/ML%20Schema.html).\n* various folders for **different prediction models** served by the OpenPredict API are available under `src/`:\n  * the OpenPredict drug-disease prediction model in `src/openpredict_model/`\n  * a model to compile the evidence path between a drug and a disease explaining the predictions of the OpenPredict model in `src/openpredict_evidence_path/`\n  * a prediction model trained from the Drug Repurposing Knowledge Graph (aka. DRKG) in `src/drkg_model/`\n\nThe data used by the models in this repository is versionned using `dvc` in the `data/` folder, and stored **on DagsHub at https://dagshub.com/vemonet/translator-openpredict**\n\n### Deploy the OpenPredict API locally\n\nRequirements: Python 3.8+ and `pip` installed\n\n1. Clone the repository:\n\n   ```bash\n   git clone https://github.com/MaastrichtU-IDS/translator-openpredict.git\n   cd translator-openpredict\n   ```\n\n2. Pull the data required to run the models in the `data` folder with [`dvc`](https://dvc.org/):\n\n   ```bash\n   pip install dvc\n   dvc pull\n   ```\n\n\nStart the API in development mode with docker on http://localhost:8808, the API will automatically reload when you make changes in the code:\n\n```bash\ndocker-compose up api\n# Or with the helper script:\n./scripts/api.sh\n```\n\n> Contributions are welcome! If you wish to help improve OpenPredict, see the [instructions to contribute :woman_technologist:](/CONTRIBUTING.md) for more details on the development workflow\n\n### Test the OpenPredict API\n\nRun the tests locally with docker:\n\n```bash\ndocker-compose run tests\n# Or with the helper script:\n./scripts/test.sh\n```\n\n> See the [`TESTING.md`](/TESTING.md) file for more details on testing the API.\n\nYou can change the entrypoint of the test container to run other commands, such as training a model:\n\n```bash\ndocker-compose run --entrypoint \"python src/openpredict_model/train.py train-model\" tests\n# Or with the helper script:\n./scripts/run.sh python src/openpredict_model/train.py train-model\n```\n\n### Use the OpenPredict API\n\n\nThe user provides a drug or a disease identifier as a CURIE (e.g. DRUGBANK:DB00394, or OMIM:246300), and choose a prediction model (only the `Predict OMIM-DrugBank` classifier is currently implemented).\n\nThe API will return predicted targets for the given drug or disease:\n\n* The **potential drugs treating a given disease** :pill:\n* The **potential diseases a given drug could treat** :microbe:\n\n> Feel free to try the API at **[openpredict.semanticscience.org](https://openpredict.semanticscience.org)**\n\n#### TRAPI operations\n\nOperations to query OpenPredict using the [Translator Reasoner API](https://github.com/NCATSTranslator/ReasonerAPI) standards.\n\n##### Query operation\n\nThe `/query` operation will return the same predictions as the `/predict` operation, using the [ReasonerAPI](https://github.com/NCATSTranslator/ReasonerAPI) format, used within the [Translator project](https://ncats.nih.gov/translator/about).\n\nThe user sends a [ReasonerAPI](https://github.com/NCATSTranslator/ReasonerAPI) query asking for the predicted targets given: a source, and the relation to predict. The query is a graph with nodes and edges defined in JSON, and uses classes from the [BioLink model](https://biolink.github.io/biolink-model).\n\nYou can use the default TRAPI query of OpenPredict `/query` operation to try a working example.\n\nExample of TRAPI query to retrieve drugs similar to a specific drug:\n\n```json\n{\n    \"message\": {\n        \"query_graph\": {\n        \"edges\": {\n            \"e01\": {\n            \"object\": \"n1\",\n            \"predicates\": [\n                \"biolink:similar_to\"\n            ],\n            \"subject\": \"n0\"\n            }\n        },\n        \"nodes\": {\n            \"n0\": {\n            \"categories\": [\n                \"biolink:Drug\"\n            ],\n            \"ids\": [\n                \"DRUGBANK:DB00394\"\n            ]\n            },\n            \"n1\": {\n            \"categories\": [\n                \"biolink:Drug\"\n            ]\n            }\n        }\n        }\n    },\n    \"query_options\": {\n        \"n_results\": 3\n    }\n}\n```\n\n##### Predicates operation\n\nThe `/predicates` operation will return the entities and relations provided by this API in a JSON object (following the [ReasonerAPI](https://github.com/NCATSTranslator/ReasonerAPI) specifications).\n\n> Try it at [https://openpredict.semanticscience.org/predicates](https://openpredict.semanticscience.org/predicates)\n\n#### Notebooks examples :notebook_with_decorative_cover:\n\nWe provide [Jupyter Notebooks](https://jupyter.org/) with examples to use the OpenPredict API:\n\n1. [Query the OpenPredict API](https://github.com/MaastrichtU-IDS/translator-openpredict/blob/master/docs/openpredict-examples.ipynb)\n2. [Generate embeddings with pyRDF2Vec](https://github.com/MaastrichtU-IDS/translator-openpredict/blob/master/docs/openpredict-pyrdf2vec-embeddings.ipynb), and import them in the OpenPredict API\n\n#### Add embedding :station:\n\nThe default baseline model is `openpredict_baseline`. You can choose the base model when you post a new embeddings using the `/embeddings` call. Then the OpenPredict API will:\n\n1. add embeddings to the provided model\n2. train the model with the new embeddings\n3. store the features and model using a unique ID for the run (e.g. `7621843c-1f5f-11eb-85ae-48a472db7414`)\n\nOnce the embedding has been added you can find the existing models previously generated (including `openpredict_baseline`), and use them as base model when you ask the model for prediction or add new embeddings.\n\n#### Predict operation :crystal_ball:\n\nUse this operation if you just want to easily retrieve predictions for a given entity. The `/predict` operation takes 4 parameters (1 required):\n\n* A `drug_id` to get predicted diseases it could treat (e.g. `DRUGBANK:DB00394`)\n  * **OR** a `disease_id` to get predicted drugs it could be treated with (e.g. `OMIM:246300`)\n* The prediction model to use (default to `Predict OMIM-DrugBank`)\n* The minimum score of the returned predictions, from 0 to 1 (optional)\n* The limit of results to return, starting from the higher score, e.g. 42 (optional)\n\nThe API will return the list of predicted target for the given entity, the labels are resolved using the [Translator Name Resolver API](https://nodenormalization-sri.renci.org)\n\n> Try it at [https://openpredict.semanticscience.org/predict?drug_id=DRUGBANK:DB00394](https://openpredict.semanticscience.org/predict?drug_id=DRUGBANK:DB00394)\n\n---\n\n### More about the data model :minidisc:\n\n* The gold standard for drug-disease indications has been retrieved from https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979\n* Metadata about runs, models evaluations, features are stored as RDF using the [ML Schema ontology](http://ml-schema.github.io/documentation/ML%20Schema.html).\n  * See the [ML Schema documentation](http://ml-schema.github.io/documentation/ML%20Schema.html) for more details on the data model.\n\nDiagram of the data model used for OpenPredict, based on the ML Schema ontology (`mls`):\n\n![OpenPredict datamodel](https://raw.githubusercontent.com/MaastrichtU-IDS/translator-openpredict/master/docs/OpenPREDICT_datamodel.jpg)\n\n---\n\n## Translator application\n\n### Service Summary\nQuery for drug-disease pairs predicted from pre-computed sets of graphs embeddings.\n\nAdd new embeddings to improve the predictive models, with versioning and scoring of the models.\n\n### Component List\n**API component**\n\n1. Component Name: **OpenPredict API**\n\n2. Component Description: **Python API to serve pre-computed set of drug-disease pair predictions from graphs embeddings**\n\n3. GitHub Repository URL: https://github.com/MaastrichtU-IDS/translator-openpredict\n\n4. Component Framework: **Knowledge Provider**\n\n5. System requirements\n\n    5.1. Specific OS and version if required: **python 3.8**\n\n    5.2. CPU/Memory (for CI, TEST and PROD):  **32 CPUs and 32 Go memory ?**\n\n    5.3. Disk size/IO throughput (for CI, TEST and PROD): **20 Go ?**\n\n    5.4. Firewall policies: does the team need access to infrastructure components?\n    **The NodeNormalization API https://nodenormalization-sri.renci.org**\n\n\n6. External Dependencies (any components other than current one)\n\n    6.1. External storage solution: **Models and database are stored in `/data/openpredict` in the Docker container**\n\n7. Docker application:\n\n    7.1. Path to the Dockerfile: **`Dockerfile`**\n\n    7.2. Docker build command:\n\n    ```bash\n    docker build ghcr.io/maastrichtu-ids/openpredict-api .\n    ```\n\n    7.3. Docker run command:\n\n\t**Replace `${PERSISTENT_STORAGE}` with the path to persistent storage on host:**\n\n    ```bash\n    docker run -d -v ${PERSISTENT_STORAGE}:/data/openpredict -p 8808:8808 ghcr.io/maastrichtu-ids/openpredict-api\n    ```\n\n9. Logs of the application\n\n    9.2. Format of the logs: **TODO**\n\n# Acknowledgments​\n\n* This service has been built from the [fair-workflows/openpredict](https://github.com/fair-workflows/openpredict) project.\n* Predictions made using the [PREDICT method](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979/).\n* Service funded by the [NIH NCATS Translator project](https://ncats.nih.gov/translator/about).\n\n![Funded the the NIH NCATS Translator project](https://ncats.nih.gov/files/TranslatorGraphic2020_1100x420.jpg)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "Biomedical Data Translator,Predictions,Python,TRAPI",
    "license": "MIT License  Copyright (c) 2020 Vincent Emonet  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openpredict",
    "package_url": "https://pypi.org/project/openpredict/",
    "platform": null,
    "project_url": "https://pypi.org/project/openpredict/",
    "project_urls": {
      "Documentation": "https://github.com/MaastrichtU-IDS/translator-openpredict",
      "History": "https://github.com/MaastrichtU-IDS/translator-openpredict/releases",
      "Homepage": "https://github.com/MaastrichtU-IDS/translator-openpredict",
      "Source": "https://github.com/MaastrichtU-IDS/translator-openpredict",
      "Tracker": "https://github.com/MaastrichtU-IDS/translator-openpredict/issues"
    },
    "release_url": "https://pypi.org/project/openpredict/0.2.1/",
    "requires_dist": [
      "fastapi>=0.68.1",
      "mlem==0.3.2",
      "pydantic>=1.9",
      "rdflib>=6.1.1",
      "reasoner-pydantic==3.0.1",
      "requests>=2.23.0",
      "sparqlwrapper<3.0.0,>=2.0.0",
      "autoflake<2.0.0,>=1.4.0; extra == 'dev'",
      "dvc==2.38.1; extra == 'dev'",
      "flake8-pyproject>=1.1.0.post0; extra == 'dev'",
      "flake8<6.0.0,>=3.8.3; extra == 'dev'",
      "flaky; extra == 'dev'",
      "isort<6.0.0,>=5.0.6; extra == 'dev'",
      "pre-commit<3.0.0,>=2.17.0; extra == 'dev'",
      "typer==0.7.0; extra == 'dev'",
      "types-requests; extra == 'dev'",
      "httpx; extra == 'test'",
      "pytest-cov<4.0.0,>=2.12.0; extra == 'test'",
      "pytest<8.0.0,>=7.1.3; extra == 'test'",
      "reasoner-validator>=3.1.4; extra == 'test'",
      "cython==0.29.32; extra == 'train'",
      "gensim==3.8.3; extra == 'train'",
      "matplotlib==3.4.3; extra == 'train'",
      "networkx; extra == 'train'",
      "numpy==1.16.1; extra == 'train'",
      "pandas==1.1.1; extra == 'train'",
      "pyrdf2vec==0.0.5; extra == 'train'",
      "pyspark==3.1.1; extra == 'train'",
      "python-multipart>=0.0.5; extra == 'train'",
      "scikit-learn==0.23.1; extra == 'train'",
      "scipy==1.5.4; extra == 'train'",
      "shap==0.41.0; extra == 'train'",
      "torch==1.13.1; extra == 'train'"
    ],
    "requires_python": "<3.11,>=3.8",
    "summary": "A package to help serve predictions of biomedical concepts associations as Translator Reasoner API.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16374545,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54115a50764868274551d45c05a1174991d9ba21ceefdcd5939de30b5d28f507",
          "md5": "3a75dbb37d0e9fbe3e715a8bc59536aa",
          "sha256": "8edbfffa03e29cd85d4cb024a432dde0e5272c221350fa8401b20105bfa81335"
        },
        "downloads": -1,
        "filename": "openpredict-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a75dbb37d0e9fbe3e715a8bc59536aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 12138,
        "upload_time": "2020-08-26T12:09:47",
        "upload_time_iso_8601": "2020-08-26T12:09:47.012365Z",
        "url": "https://files.pythonhosted.org/packages/54/11/5a50764868274551d45c05a1174991d9ba21ceefdcd5939de30b5d28f507/openpredict-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "184c833c21333da3970941ce623b5a2bb58d80fe083ac0d9e88c397adc785bfa",
          "md5": "6648830843d40ecfe605504d38b69119",
          "sha256": "62996bbf277b2f41645c9a28838e315e19afa4975d3b3fa74110ffd744cb0864"
        },
        "downloads": -1,
        "filename": "openpredict-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6648830843d40ecfe605504d38b69119",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 12175,
        "upload_time": "2020-08-26T12:09:50",
        "upload_time_iso_8601": "2020-08-26T12:09:50.035847Z",
        "url": "https://files.pythonhosted.org/packages/18/4c/833c21333da3970941ce623b5a2bb58d80fe083ac0d9e88c397adc785bfa/openpredict-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf52c0da1c728f3db77a50a34bb57224765368e1b9d5ea6a695051d55c9d496e",
          "md5": "cca3af7ea9cea0cb480384a0a2f08b4e",
          "sha256": "326fe69c4aedb22bfc50bdce79035a04391e530fc68198213b417e5d30a63f85"
        },
        "downloads": -1,
        "filename": "openpredict-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cca3af7ea9cea0cb480384a0a2f08b4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 12172,
        "upload_time": "2020-08-27T09:12:24",
        "upload_time_iso_8601": "2020-08-27T09:12:24.902976Z",
        "url": "https://files.pythonhosted.org/packages/bf/52/c0da1c728f3db77a50a34bb57224765368e1b9d5ea6a695051d55c9d496e/openpredict-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd16b2dd4542ea4a4fe3e618c447a446d65475e3f22d4c05e9107829a5f59abb",
          "md5": "9acc7f0ebbf96cdba8aff9f7972d5c4a",
          "sha256": "b58205d3874e973d5a14ef558dc449275a278773d59516aa11a49412e7d5f9ec"
        },
        "downloads": -1,
        "filename": "openpredict-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9acc7f0ebbf96cdba8aff9f7972d5c4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 12245,
        "upload_time": "2020-08-27T09:12:26",
        "upload_time_iso_8601": "2020-08-27T09:12:26.142874Z",
        "url": "https://files.pythonhosted.org/packages/fd/16/b2dd4542ea4a4fe3e618c447a446d65475e3f22d4c05e9107829a5f59abb/openpredict-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c17246274bceac4143e53407e8fa7f338a9f772c4b4864ded8106ea892facfc1",
          "md5": "d37112b57978de9981b972d01c328bd5",
          "sha256": "4605b1b345d788f7129bcf6143c082912f6c506d47ccb0c287222891c7442ad0"
        },
        "downloads": -1,
        "filename": "openpredict-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d37112b57978de9981b972d01c328bd5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 12188,
        "upload_time": "2020-08-27T15:37:21",
        "upload_time_iso_8601": "2020-08-27T15:37:21.517012Z",
        "url": "https://files.pythonhosted.org/packages/c1/72/46274bceac4143e53407e8fa7f338a9f772c4b4864ded8106ea892facfc1/openpredict-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a557749054aac64a2b1aeed148f70ce86c68e642ff72b9fb924857672b0abd5",
          "md5": "6e620b114d55c3dc2f8b37f8a5caf20a",
          "sha256": "aebb5d020d998bc1f0e7403b4fa123d54b779eaeb58a7b6dfc37c124b765bb19"
        },
        "downloads": -1,
        "filename": "openpredict-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6e620b114d55c3dc2f8b37f8a5caf20a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 12248,
        "upload_time": "2020-08-27T15:37:22",
        "upload_time_iso_8601": "2020-08-27T15:37:22.977553Z",
        "url": "https://files.pythonhosted.org/packages/2a/55/7749054aac64a2b1aeed148f70ce86c68e642ff72b9fb924857672b0abd5/openpredict-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57bf55c089817f1b46c0c06345b29d3318f1f8ee2b9b5b724ec22b51aff79891",
          "md5": "5fa76d2c403e8229031d657d758cdb0a",
          "sha256": "c3c76711910833bfdd42975ab318ea760d31f79e70b30195c7effc0b086f470c"
        },
        "downloads": -1,
        "filename": "openpredict-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5fa76d2c403e8229031d657d758cdb0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 12288,
        "upload_time": "2020-08-28T14:33:11",
        "upload_time_iso_8601": "2020-08-28T14:33:11.906882Z",
        "url": "https://files.pythonhosted.org/packages/57/bf/55c089817f1b46c0c06345b29d3318f1f8ee2b9b5b724ec22b51aff79891/openpredict-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "984fcbbe799a43bb77c83b08baf342eea35f00fa7b763e84a865d87a6ccf9b0f",
          "md5": "dcc966452fdc3f6a847afa507ad1ae2a",
          "sha256": "558552c8db912e2921d147bf3ffb0f06e4d8e28e242b8c9737006c51834299b0"
        },
        "downloads": -1,
        "filename": "openpredict-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "dcc966452fdc3f6a847afa507ad1ae2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 12383,
        "upload_time": "2020-08-28T14:33:12",
        "upload_time_iso_8601": "2020-08-28T14:33:12.987306Z",
        "url": "https://files.pythonhosted.org/packages/98/4f/cbbe799a43bb77c83b08baf342eea35f00fa7b763e84a865d87a6ccf9b0f/openpredict-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ecc6b9396b6a6fe46218cacf22a8fa53a3ae2e7c977f4083c5faae1fb8671ee",
          "md5": "10edfea766a74aa2336313e8ae66f5a3",
          "sha256": "1f6ed30dfd2a7e7a4b32215ba5084439960993fbefcb0fe39aeb903722a79934"
        },
        "downloads": -1,
        "filename": "openpredict-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10edfea766a74aa2336313e8ae66f5a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 43789521,
        "upload_time": "2020-09-08T20:44:26",
        "upload_time_iso_8601": "2020-09-08T20:44:26.037041Z",
        "url": "https://files.pythonhosted.org/packages/6e/cc/6b9396b6a6fe46218cacf22a8fa53a3ae2e7c977f4083c5faae1fb8671ee/openpredict-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43676d8256bd99ba434e148ae687a59694a3de8ca3bf359a4227475e5e3296d2",
          "md5": "cb029f4600cc22cf9b2053d3ebb4b1d5",
          "sha256": "ee3e4ecfb14ed09877b974fb4abacf82f78f5d1139a0bcc47dcf2bb67a99103d"
        },
        "downloads": -1,
        "filename": "openpredict-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "cb029f4600cc22cf9b2053d3ebb4b1d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 17178,
        "upload_time": "2020-09-08T20:44:28",
        "upload_time_iso_8601": "2020-09-08T20:44:28.214402Z",
        "url": "https://files.pythonhosted.org/packages/43/67/6d8256bd99ba434e148ae687a59694a3de8ca3bf359a4227475e5e3296d2/openpredict-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba8dd31746e1606da734a05e068d3775298dea01efd299fa1ce89f5a04ef35ae",
          "md5": "7393704345a52e5ece2dd092c8db633f",
          "sha256": "eef3d21afaf97b89f223d377040e22e7abcb71081207b1063975d9193535ed2d"
        },
        "downloads": -1,
        "filename": "openpredict-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7393704345a52e5ece2dd092c8db633f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 21570899,
        "upload_time": "2020-12-15T18:32:42",
        "upload_time_iso_8601": "2020-12-15T18:32:42.039974Z",
        "url": "https://files.pythonhosted.org/packages/ba/8d/d31746e1606da734a05e068d3775298dea01efd299fa1ce89f5a04ef35ae/openpredict-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11029a2861fa404eb91d8d60b22b728305cd2f852360def39204c595f576ecd7",
          "md5": "0f14c3816c20d5ab5679d0bbe417514a",
          "sha256": "c03055035543eb50b94e580c4b19d97779071ac2d60b8e9795e0a56ef6633d26"
        },
        "downloads": -1,
        "filename": "openpredict-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0f14c3816c20d5ab5679d0bbe417514a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 27882,
        "upload_time": "2020-12-15T18:32:44",
        "upload_time_iso_8601": "2020-12-15T18:32:44.292855Z",
        "url": "https://files.pythonhosted.org/packages/11/02/9a2861fa404eb91d8d60b22b728305cd2f852360def39204c595f576ecd7/openpredict-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86597f53283764146c72a5fbb9c2e53439fd8cd50ba476856b290c601df1fe7a",
          "md5": "b2cc7b4e8ca5c1ebc7f09fc4f4f5a579",
          "sha256": "4d77c2b62851d7cde1568f284130a8e05b47259fd055f2b0c1f45220ea042ca2"
        },
        "downloads": -1,
        "filename": "openpredict-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2cc7b4e8ca5c1ebc7f09fc4f4f5a579",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.11,>=3.8",
        "size": 15813,
        "upload_time": "2022-12-12T16:39:58",
        "upload_time_iso_8601": "2022-12-12T16:39:58.532800Z",
        "url": "https://files.pythonhosted.org/packages/86/59/7f53283764146c72a5fbb9c2e53439fd8cd50ba476856b290c601df1fe7a/openpredict-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abaf5b65ac26188dd698eff0dccce24b85ccd49371c249ef4bed29c98eadb74e",
          "md5": "9d6ab80ebcb8e0c008be74f993a02e90",
          "sha256": "0689177a3532fc23df35d0a46b59fa255d9f8d6645d6d70dcd8cace819b2bcce"
        },
        "downloads": -1,
        "filename": "openpredict-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9d6ab80ebcb8e0c008be74f993a02e90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.11,>=3.8",
        "size": 2716533,
        "upload_time": "2022-12-12T16:40:00",
        "upload_time_iso_8601": "2022-12-12T16:40:00.011814Z",
        "url": "https://files.pythonhosted.org/packages/ab/af/5b65ac26188dd698eff0dccce24b85ccd49371c249ef4bed29c98eadb74e/openpredict-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb0c78c530f576b48919162fb412bb021a01e41a2ca6fe16f450879fc1be19a8",
          "md5": "47ebf3c756735f0bdb824ace6318bb76",
          "sha256": "b05c3d5f9c863af6f256270793da5ec34798090bb086892c9ecba4b14a75efd7"
        },
        "downloads": -1,
        "filename": "openpredict-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47ebf3c756735f0bdb824ace6318bb76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.11,>=3.8",
        "size": 24342,
        "upload_time": "2023-01-10T12:34:10",
        "upload_time_iso_8601": "2023-01-10T12:34:10.345985Z",
        "url": "https://files.pythonhosted.org/packages/cb/0c/78c530f576b48919162fb412bb021a01e41a2ca6fe16f450879fc1be19a8/openpredict-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d18625f4b779198701ed2f7947d11a626742f48957455e3b459f173c6ebcf7c",
          "md5": "015d9db1087819a0bd5a5e6e94f1da95",
          "sha256": "43280badf7ae96ffacbaa3a6af41ddc38fafb99931212b22ec0e72db7deaa78f"
        },
        "downloads": -1,
        "filename": "openpredict-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "015d9db1087819a0bd5a5e6e94f1da95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.11,>=3.8",
        "size": 2723975,
        "upload_time": "2023-01-10T12:34:11",
        "upload_time_iso_8601": "2023-01-10T12:34:11.960037Z",
        "url": "https://files.pythonhosted.org/packages/0d/18/625f4b779198701ed2f7947d11a626742f48957455e3b459f173c6ebcf7c/openpredict-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb0c78c530f576b48919162fb412bb021a01e41a2ca6fe16f450879fc1be19a8",
        "md5": "47ebf3c756735f0bdb824ace6318bb76",
        "sha256": "b05c3d5f9c863af6f256270793da5ec34798090bb086892c9ecba4b14a75efd7"
      },
      "downloads": -1,
      "filename": "openpredict-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47ebf3c756735f0bdb824ace6318bb76",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "<3.11,>=3.8",
      "size": 24342,
      "upload_time": "2023-01-10T12:34:10",
      "upload_time_iso_8601": "2023-01-10T12:34:10.345985Z",
      "url": "https://files.pythonhosted.org/packages/cb/0c/78c530f576b48919162fb412bb021a01e41a2ca6fe16f450879fc1be19a8/openpredict-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d18625f4b779198701ed2f7947d11a626742f48957455e3b459f173c6ebcf7c",
        "md5": "015d9db1087819a0bd5a5e6e94f1da95",
        "sha256": "43280badf7ae96ffacbaa3a6af41ddc38fafb99931212b22ec0e72db7deaa78f"
      },
      "downloads": -1,
      "filename": "openpredict-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "015d9db1087819a0bd5a5e6e94f1da95",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<3.11,>=3.8",
      "size": 2723975,
      "upload_time": "2023-01-10T12:34:11",
      "upload_time_iso_8601": "2023-01-10T12:34:11.960037Z",
      "url": "https://files.pythonhosted.org/packages/0d/18/625f4b779198701ed2f7947d11a626742f48957455e3b459f173c6ebcf7c/openpredict-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}