{
  "info": {
    "author": "Caden Churchman",
    "author_email": "ccaden21@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Audio effects framework\nThe audio effects framework is a python module that allows for easy use of audio effects created in puredata (https://puredata.info).\n\n## Dependencies\n\nThese installs are needed for core functionality:\n\n```\npip install watchdog\npip install aitpi\nsudo apt install puredata\nsudo apt install jackd\n```\n\nDepending on your use case, these packages may be needed:\n\nFor aitpi keyboard input - `pip install pynput`\nFor the GUI app - `pip install PyQt6`\nFor bluetooth - `sudo apt install bluez python-bluez`\n\n## Use\nThe audio effect framework was built upon the AITPI system (https://github.com/c3n3/AITPI). This system is used in order to control the application and modification of the audio effects framework. It allows inputs (currently supported keyboard input, raspberry pi GPIO buttons, and raspberry pi GPIO encoders) to be written in JSON to control what audio effects are applied in real time. These inputs are to be expanded over time.\n\n### Running\n\nIn order to run the aef:\n\n```\nimport aef\nimport aitpi\n\n# Any application setup...\n\naef.run(effectsFolder, recordingsFolder, presetsFolder, sys.argv)\ninputJson = os.path.join(dirname, 'your_input.json')\naitpi.initInput(inputJson)\n```\n\nAnd when done:\n\n```\naef.shutdown()\n```\n\nAef will automatically link into the jack audio system and will automatically start receiving input.\n\nNOTE: Currently the setup is to use Qjackctl with a preset named 'guitar-module'. This setup must be done before hand. This will be ammended in the future.\n\n\n### Setting up AITPI\n\nSee https://github.com/c3n3/AITPI. The possible commands to link to are all listed out in the temp folder.\n\n>> NOTE: wherever you run the aef, it will create a ./temp/ folder in the local directory. This will contain all temporary files such as recordings, puredata temp files, and the command registry. This allows for persistent saves, if everything is run from the same directories.\n\nCurrently you can retrieve these commands by calling:\n\n```\naef.getCommands()\n```\n\nYou can also change the input links on the fly by calling:\n\n```\naef.changeLink(inputName, newCommandToLink)\n```\n\n### Presets\n\nYou can create presets that specify multiple audio effects to apply at once. These are simply text files that list out the names of all effects. You can see examples of these in the default_presets folder. These will show up automatically in the command registry if they are put into the 'presetsFolder' (specified in `aef.run`).\n\n\n### Effects\n\nYou can create new puredata patches in input them into the 'effectsFolder' (specified in `aef.run`). These must follow a specific format in puredata in order to be linked properly. TODO: Specify puredata format rules.\n\n\n### Recordings\n\nRecordings are created with the 'save' command. It will save whatever was the last 'record' audio into the recordings folder (as specified in `aef.run`). This will then be added to the command list in so that you can replay the recording with a keystroke (based on AITPI).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/c3n3/aef",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aef",
    "package_url": "https://pypi.org/project/aef/",
    "platform": null,
    "project_url": "https://pypi.org/project/aef/",
    "project_urls": {
      "Bug Tracker": "https://github.com/c3n3/aef/issues",
      "Homepage": "https://github.com/c3n3/aef"
    },
    "release_url": "https://pypi.org/project/aef/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "A tool to setup arbitrary guitar effects pedals",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14887431,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4b4d582b524b2e1135cde4e673e6c99e553b3f3f983fcb5e7e2ef3879b3c411",
          "md5": "c575a1f6b62af8c0357e7071fe09517b",
          "sha256": "a0893ae63ab3223d7a655c43b2fe0108f8b97032ede251667b2f19a02d1a1762"
        },
        "downloads": -1,
        "filename": "aef-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c575a1f6b62af8c0357e7071fe09517b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 44068,
        "upload_time": "2022-08-25T23:14:49",
        "upload_time_iso_8601": "2022-08-25T23:14:49.247657Z",
        "url": "https://files.pythonhosted.org/packages/f4/b4/d582b524b2e1135cde4e673e6c99e553b3f3f983fcb5e7e2ef3879b3c411/aef-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd2205a6b63f420ce04743523e20ec329c72bb666a42b0e5569ad3386dbd9098",
          "md5": "6bd1bc9fba6868aef257a308e1fad6a1",
          "sha256": "1ffa0de19eb2a683bec58b13d7ccb639e06e7ff99c3874b16baff265287c8175"
        },
        "downloads": -1,
        "filename": "aef-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6bd1bc9fba6868aef257a308e1fad6a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 29330,
        "upload_time": "2022-08-25T23:14:51",
        "upload_time_iso_8601": "2022-08-25T23:14:51.157650Z",
        "url": "https://files.pythonhosted.org/packages/cd/22/05a6b63f420ce04743523e20ec329c72bb666a42b0e5569ad3386dbd9098/aef-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "054450c0ea84e08e1af070b6fb9c03f22be57b1f895e78e0e63269648a19ff8e",
          "md5": "bf8047f4dece1e961c235d5ece48dc99",
          "sha256": "d7905759c0e5bd2cd7e50c11913309c588ad23c5171dd1126f61a2b8d42af47d"
        },
        "downloads": -1,
        "filename": "aef-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf8047f4dece1e961c235d5ece48dc99",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 44263,
        "upload_time": "2022-08-26T01:01:30",
        "upload_time_iso_8601": "2022-08-26T01:01:30.510933Z",
        "url": "https://files.pythonhosted.org/packages/05/44/50c0ea84e08e1af070b6fb9c03f22be57b1f895e78e0e63269648a19ff8e/aef-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9ba7fdf76e70b4473b88e20770d4c6069dd6301e30f425959808e1e1548c666",
          "md5": "6c1423ed93d5226c9a64d11151f2cf89",
          "sha256": "8bd41b60273f4c9a53a86056e4984c7a16016ee1e64d65d541142b7b4229357d"
        },
        "downloads": -1,
        "filename": "aef-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6c1423ed93d5226c9a64d11151f2cf89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 29736,
        "upload_time": "2022-08-26T01:01:32",
        "upload_time_iso_8601": "2022-08-26T01:01:32.268645Z",
        "url": "https://files.pythonhosted.org/packages/e9/ba/7fdf76e70b4473b88e20770d4c6069dd6301e30f425959808e1e1548c666/aef-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "054450c0ea84e08e1af070b6fb9c03f22be57b1f895e78e0e63269648a19ff8e",
        "md5": "bf8047f4dece1e961c235d5ece48dc99",
        "sha256": "d7905759c0e5bd2cd7e50c11913309c588ad23c5171dd1126f61a2b8d42af47d"
      },
      "downloads": -1,
      "filename": "aef-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bf8047f4dece1e961c235d5ece48dc99",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 44263,
      "upload_time": "2022-08-26T01:01:30",
      "upload_time_iso_8601": "2022-08-26T01:01:30.510933Z",
      "url": "https://files.pythonhosted.org/packages/05/44/50c0ea84e08e1af070b6fb9c03f22be57b1f895e78e0e63269648a19ff8e/aef-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9ba7fdf76e70b4473b88e20770d4c6069dd6301e30f425959808e1e1548c666",
        "md5": "6c1423ed93d5226c9a64d11151f2cf89",
        "sha256": "8bd41b60273f4c9a53a86056e4984c7a16016ee1e64d65d541142b7b4229357d"
      },
      "downloads": -1,
      "filename": "aef-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6c1423ed93d5226c9a64d11151f2cf89",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 29736,
      "upload_time": "2022-08-26T01:01:32",
      "upload_time_iso_8601": "2022-08-26T01:01:32.268645Z",
      "url": "https://files.pythonhosted.org/packages/e9/ba/7fdf76e70b4473b88e20770d4c6069dd6301e30f425959808e1e1548c666/aef-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}