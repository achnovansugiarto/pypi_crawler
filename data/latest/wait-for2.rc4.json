{
  "info": {
    "author": "Nándor Mátravölgyi",
    "author_email": "nandor.matra@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# wait_for2\nAlternate implementation of `asyncio.wait_for()` based on the version from Python 3.8. It handles simultaneous\ncancellation of wait and completion of future differently and consistently across Python versions 3.6+.\n\n## Details\nBuiltin `asyncio.wait_for()` behaviours:\n  - Python 3.6, 3.7 and PyPy3:\n    Cancellation of `wait_for` could lose the completed future's result.\n  - Python 3.8+:\n    Cancellation of `wait_for` could lose the cancellation request.\n\nWhenever waiting for a future's result the user expects to either have the future completed or cancelled.\nUnfortunately due to technical details there is a chance that both will happen simultaneously. The builtin version\nof `asyncio.wait_for()` shipped with Python either handles one or the other only. If losing the future's result or\nignoring the cancellation is critical to the application it may not be suitable for use.\n\nUsing this implementation, in case both conditions occur at the same time a subclassed `CancelledError` will be\nraised which also contains the result of the future. The caller code must catch this exception and handle the\nresult if it is important. Otherwise, it can be used the same way as the builtin `wait_for`.\n\nIf the caller prefers to handle the race-condition with a callback, the `race_handler` argument may be provided.\nIt will be called with the result of the future when the waiter task is being cancelled. Even if this is provided,\nthe special error will be raised in the place of a normal CancelledError.\n\nAdditionally, this implementation will inherit the behaviour of the inner future when it comes to ignoring\ncancellation. The builtin version prefers to always be cancellable, even if that means the wrapped future may\nnot be terminated with it. (behaviour of builtin _cancel_and_wait) This behaviour is also improved in\ntimeout-cancel edge cases, where the builtin would not wait for the termination of the inner future if the\nwaiter was cancelled after timeout handling had already started. This is more consistent as the inner future\nmust always be stopped for it to return.\n\nNOTE: `CancelledWithResultError` is limited to the coroutine `wait_for` is invoked from!\nIf this `wait_for` is wrapped in tasks those will not propagate the special exception, but raise their own\n`CancelledError` instances.\n\n# Install & usage\nA package is available on PyPI:\n\n```console\n$ python -m pip install wait_for2\n```\n\n```python\nimport asyncio\nimport wait_for2\n\ntask = asyncio.create_task(...)\n\ndef process_result(r, is_exc=False):\n    print(\"processed:\", r, is_exc)\n\n...\n\ntry:\n    process_result(await wait_for2.wait_for(task, 5.0))\nexcept wait_for2.CancelledWithResultError as e:\n    # NOTE: e.result could be an exception raised by the task; handling or ignoring it is up to the user code here\n    process_result(e.result, e.is_exception)\n    raise asyncio.CancelledError()\n\n# alternatively with a callback:\nprocess_result(await wait_for2.wait_for(task, 5.0, race_handler=process_result))\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Traktormaster/wait-for2",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wait-for2",
    "package_url": "https://pypi.org/project/wait-for2/",
    "platform": "",
    "project_url": "https://pypi.org/project/wait-for2/",
    "project_urls": {
      "Homepage": "https://github.com/Traktormaster/wait-for2"
    },
    "release_url": "https://pypi.org/project/wait-for2/0.3.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Asyncio wait_for that can handle simultaneous cancellation and future completion.",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12360123,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1ca8e4292682de3c8ac92f911a456de973b4c9d64da4b077bfef1d9f74b8957",
          "md5": "8ea0f5fd2201f6c89214fc3982d99d86",
          "sha256": "c087392c92e8f702a9243a5c7be9032feb4f169c30786f46afb0546929e8801d"
        },
        "downloads": -1,
        "filename": "wait_for2-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ea0f5fd2201f6c89214fc3982d99d86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8089,
        "upload_time": "2021-03-04T09:45:57",
        "upload_time_iso_8601": "2021-03-04T09:45:57.909282Z",
        "url": "https://files.pythonhosted.org/packages/f1/ca/8e4292682de3c8ac92f911a456de973b4c9d64da4b077bfef1d9f74b8957/wait_for2-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "134da54da82e00f3b58a176b28496dc103b0fd51599181419f910276d79847c6",
          "md5": "35c76233a983e987e99c90916ba0e56c",
          "sha256": "daf797324e6f525ce257bd95d70d9db64749c26ab5f56645eee65caf18435cce"
        },
        "downloads": -1,
        "filename": "wait_for2-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "35c76233a983e987e99c90916ba0e56c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8845,
        "upload_time": "2021-03-04T09:45:59",
        "upload_time_iso_8601": "2021-03-04T09:45:59.486432Z",
        "url": "https://files.pythonhosted.org/packages/13/4d/a54da82e00f3b58a176b28496dc103b0fd51599181419f910276d79847c6/wait_for2-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ffa4f7913b6919822549805569fdbf198d17146058eefc834cc6d8c9fc9d197",
          "md5": "81a94ce29f592aea1b06ea10123b545b",
          "sha256": "6a6c983eae9f91100d87a05f2cf17d54f40f5eabe4b49e80876d8ee16808d72e"
        },
        "downloads": -1,
        "filename": "wait_for2-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81a94ce29f592aea1b06ea10123b545b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8457,
        "upload_time": "2021-05-14T20:30:26",
        "upload_time_iso_8601": "2021-05-14T20:30:26.699344Z",
        "url": "https://files.pythonhosted.org/packages/6f/fa/4f7913b6919822549805569fdbf198d17146058eefc834cc6d8c9fc9d197/wait_for2-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50d247582516a14d57454e462b27e86ed9a7a86264623a2ed2ef780eee03809b",
          "md5": "486ac2ab36844c2f6214990c910af8d2",
          "sha256": "61292c0395b3ff5af649399133edfe2bd996965b6146854524582e30b4c4a17b"
        },
        "downloads": -1,
        "filename": "wait_for2-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "486ac2ab36844c2f6214990c910af8d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13762,
        "upload_time": "2021-12-19T18:12:19",
        "upload_time_iso_8601": "2021-12-19T18:12:19.351964Z",
        "url": "https://files.pythonhosted.org/packages/50/d2/47582516a14d57454e462b27e86ed9a7a86264623a2ed2ef780eee03809b/wait_for2-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea3ab8af4001cf9b3c2e371a32c5ca871839d489858d531d20e22c2a831a12a8",
          "md5": "7795773f683923da43dcb865dc8bac02",
          "sha256": "4f5645d39c5318facba2135d30aca7d6944befb19174cb8a9da78b05902f181e"
        },
        "downloads": -1,
        "filename": "wait_for2-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7795773f683923da43dcb865dc8bac02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13914,
        "upload_time": "2021-12-20T10:56:54",
        "upload_time_iso_8601": "2021-12-20T10:56:54.953775Z",
        "url": "https://files.pythonhosted.org/packages/ea/3a/b8af4001cf9b3c2e371a32c5ca871839d489858d531d20e22c2a831a12a8/wait_for2-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea3ab8af4001cf9b3c2e371a32c5ca871839d489858d531d20e22c2a831a12a8",
        "md5": "7795773f683923da43dcb865dc8bac02",
        "sha256": "4f5645d39c5318facba2135d30aca7d6944befb19174cb8a9da78b05902f181e"
      },
      "downloads": -1,
      "filename": "wait_for2-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7795773f683923da43dcb865dc8bac02",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13914,
      "upload_time": "2021-12-20T10:56:54",
      "upload_time_iso_8601": "2021-12-20T10:56:54.953775Z",
      "url": "https://files.pythonhosted.org/packages/ea/3a/b8af4001cf9b3c2e371a32c5ca871839d489858d531d20e22c2a831a12a8/wait_for2-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}