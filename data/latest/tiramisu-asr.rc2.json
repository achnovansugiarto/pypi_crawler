{
  "info": {
    "author": "Huy Le Nguyen",
    "author_email": "nlhuy.cs.16@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<h1 align=\"center\">\n<p>TiramisuASR :cake:</p>\n<p align=\"center\">\n<a href=\"https://github.com/usimarit/TiramisuASR/blob/master/LICENSE\">\n  <img alt=\"GitHub\" src=\"https://img.shields.io/github/license/usimarit/TiramisuASR?style=for-the-badge&logo=apache\">\n</a>\n<img alt=\"python\" src=\"https://img.shields.io/badge/python-%3E%3D3.6-blue?style=for-the-badge&logo=python\">\n<img alt=\"tensorflow\" src=\"https://img.shields.io/badge/tensorflow-%3E%3D2.3.0-orange?style=for-the-badge&logo=tensorflow\">\n<img alt=\"ubuntu\" src=\"https://img.shields.io/badge/ubuntu-%3E%3D18.04-blueviolet?style=for-the-badge&logo=ubuntu\">\n</p>\n</h1>\n<h2 align=\"center\">\n<p>Almost State-of-the-art Automatic Speech Recognition in Tensorflow 2</p>\n</h2>\n\n<p align=\"center\">\nTiramisuASR implements some speech recognition architectures such as CTC-based models (Deep Speech 2, etc.), RNN Transducer (Conformer, etc.). These models can be converted to TFLite to reduce memory and computation for deployment :smile:\n</p>\n\n## What's New?\n\n- (10/10/2020) Update documents and upload package to pypi\n- (10/6/2020) Change `nlpaug` version to `>=1.0.1`\n- (9/18/2020) Support `word-pieces` (aka `subwords`) using `tensorflow-datasets`\n- Support `transducer` tflite greedy decoding (conversion and invocation)\n- Distributed training using `tf.distribute.MirroredStrategy`\n\n## :yum: Supported Models\n\n- **CTCModel** (End2end models using CTC Loss for training)\n- **Transducer Models** (End2end models using RNNT Loss for training)\n- **Conformer Transducer** (Reference: [https://arxiv.org/abs/2005.08100](https://arxiv.org/abs/2005.08100))\n  See [examples/conformer](./examples/conformer)\n\n## Setup Environment and Datasets\n\nInstall tensorflow: `pip3 install -U tensorflow` or `pip3 install tf-nightly` (for using tflite)\n\nInstall packages (choose _one_ of these options):\n\n- Run `pip3 install -U tiramisu-asr`\n- Clone the repo and run `python3 setup.py install` in the repo's directory\n\nFor **setting up datasets**, see [datasets](./tiramisu_asr/datasets/README.md)\n\n- For _training, testing and using_ **CTC Models**, run `./scripts/install_ctc_decoders.sh`\n\n- For _training_ **Transducer Models**, export `CUDA_HOME` and run `./scripts/install_rnnt_loss.sh`\n\n- Method `tiramisu_asr.utils.setup_environment()` enable **mixed_precision** if available.\n\n- To enable XLA, run `TF_XLA_FLAGS=--tf_xla_auto_jit=2 $python_train_script`\n\nClean up: `python3 setup.py clean --all` (this will remove `/build` contents)\n\n## TFLite Convertion\n\nAfter converting to tflite, the tflite model is like a function that transforms directly from an **audio signal** to **unicode code points**, then we can convert unicode points to string.\n\n1. Install `tf-nightly` using `pip install tf-nightly`\n2. Build a model with the same architecture as the trained model _(if model has tflite argument, you must set it to True)_, then load the weights from trained model to the built model\n3. Load `TFSpeechFeaturizer` and `TextFeaturizer` to model using function `add_featurizers`\n4. Convert model's function to tflite as follows:\n\n```python\nfunc = model.make_tflite_function(greedy=True) # or False\nconcrete_func = func.get_concrete_function()\nconverter = tf.lite.TFLiteConverter.from_concrete_functions([concrete_func])\nconverter.experimental_new_converter = True\nconverter.optimizations = [tf.lite.Optimize.DEFAULT]\nconverter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS,\n                                       tf.lite.OpsSet.SELECT_TF_OPS]\ntflite_model = converter.convert()\n```\n\n5. Save the converted tflite model as follows:\n\n```python\nif not os.path.exists(os.path.dirname(tflite_path)):\n    os.makedirs(os.path.dirname(tflite_path))\nwith open(tflite_path, \"wb\") as tflite_out:\n    tflite_out.write(tflite_model)\n```\n\n5. Then the `.tflite` model is ready to be deployed\n\n## Features Extraction\n\nSee [features_extraction](./tiramisu_asr/featurizers/README.md)\n\n## Augmentations\n\nSee [augmentations](./tiramisu_asr/augmentations/README.md)\n\n## Training & Testing\n\n**Example YAML Config Structure**\n\n```yaml\nspeech_config: ...\nmodel_config: ...\ndecoder_config: ...\nlearning_config:\n  augmentations: ...\n  dataset_config:\n    train_paths: ...\n    eval_paths: ...\n    test_paths: ...\n    tfrecords_dir: ...\n  optimizer_config: ...\n  running_config:\n    batch_size: 8\n    num_epochs: 20\n    outdir: ...\n    log_interval_steps: 500\n```\n\nSee [examples](./examples/) for some predefined ASR models and results\n\n## Corpus Sources and Pretrained Models\n\nFor pretrained models, go to [drive](https://drive.google.com/drive/folders/1BD0AK30n8hc-yR28C5FW3LqzZxtLOQfl?usp=sharing)\n\n### English\n\n|   **Name**   |                             **Source**                             | **Hours** |\n| :----------: | :----------------------------------------------------------------: | :-------: |\n| LibriSpeech  |              [LibriSpeech](http://www.openslr.org/12)              |   970h    |\n| Common Voice | [https://commonvoice.mozilla.org](https://commonvoice.mozilla.org) |   1932h   |\n\n### Vietnamese\n\n|                **Name**                |                                       **Source**                                       | **Hours** |\n| :------------------------------------: | :------------------------------------------------------------------------------------: | :-------: |\n|                 Vivos                  |          [https://ailab.hcmus.edu.vn/vivos](https://ailab.hcmus.edu.vn/vivos)          |    15h    |\n|          InfoRe Technology 1           |  [InfoRe1 (passwd: BroughtToYouByInfoRe)](https://files.huylenguyen.com/25hours.zip)   |    25h    |\n| InfoRe Technology 2 (used in VLSP2019) | [InfoRe2 (passwd: BroughtToYouByInfoRe)](https://files.huylenguyen.com/audiobooks.zip) |   415h    |\n\n### German\n\n|   **Name**   |                             **Source**                              | **Hours** |\n| :----------: | :-----------------------------------------------------------------: | :-------: |\n| Common Voice | [https://commonvoice.mozilla.org/](https://commonvoice.mozilla.org) |   750h    |\n\n## References & Credits\n\n1. [NVIDIA OpenSeq2Seq Toolkit](https://github.com/NVIDIA/OpenSeq2Seq)\n2. [https://github.com/noahchalifour/warp-transducer](https://github.com/noahchalifour/warp-transducer)\n3. [Sequence Transduction with Recurrent Neural Network](https://arxiv.org/abs/1211.3711)\n4. [End-to-End Speech Processing Toolkit in PyTorch](https://github.com/espnet/espnet)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/usimarit/TiramisuASR",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tiramisu-asr",
    "package_url": "https://pypi.org/project/tiramisu-asr/",
    "platform": "",
    "project_url": "https://pypi.org/project/tiramisu-asr/",
    "project_urls": {
      "Homepage": "https://github.com/usimarit/TiramisuASR"
    },
    "release_url": "https://pypi.org/project/tiramisu-asr/0.2.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Almost State-of-the-art Automatic Speech Recognition using Tensorflow 2",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8381722,
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b25a0d8262eb74b5a7949ad1f29ee846298bcc4a5ebcebbaa39ae8007887c4d",
          "md5": "0db9675208dc2f338c7415a33eddc16d",
          "sha256": "be2250a6544c043586c69aec22e9ad2c74243491cb39f64b496f748c5443f861"
        },
        "downloads": -1,
        "filename": "tiramisu_asr-0.2.2-py3.7.egg",
        "has_sig": false,
        "md5_digest": "0db9675208dc2f338c7415a33eddc16d",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 157350,
        "upload_time": "2020-10-10T08:59:55",
        "upload_time_iso_8601": "2020-10-10T08:59:55.917078Z",
        "url": "https://files.pythonhosted.org/packages/7b/25/a0d8262eb74b5a7949ad1f29ee846298bcc4a5ebcebbaa39ae8007887c4d/tiramisu_asr-0.2.2-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b594a242abe0cf5a373b49608b4616061d22cd948c66a90823e80dae589ec666",
          "md5": "b89fd8f30f0ab2fcd43322f642754b07",
          "sha256": "cc6c4ca4e1cf41e5ce11d9c25a1fc1c5e2a18c21ed229f5ec444cc408798e38a"
        },
        "downloads": -1,
        "filename": "tiramisu-asr-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b89fd8f30f0ab2fcd43322f642754b07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 45543,
        "upload_time": "2020-10-10T08:35:40",
        "upload_time_iso_8601": "2020-10-10T08:35:40.008561Z",
        "url": "https://files.pythonhosted.org/packages/b5/94/a242abe0cf5a373b49608b4616061d22cd948c66a90823e80dae589ec666/tiramisu-asr-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5766369b434cfd62598aa79a68b76e34e23cdebc6bdcd9835a2bb1d0e8b137f",
          "md5": "39ae0f7dd979b23b94c945233e8e8173",
          "sha256": "948ac0eabfec1cf2e8f56afa8e3fc95b85138d824167904ac584d3572484c2a1"
        },
        "downloads": -1,
        "filename": "tiramisu_asr-0.2.3-py3.7.egg",
        "has_sig": false,
        "md5_digest": "39ae0f7dd979b23b94c945233e8e8173",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 157353,
        "upload_time": "2020-10-10T09:03:12",
        "upload_time_iso_8601": "2020-10-10T09:03:12.459304Z",
        "url": "https://files.pythonhosted.org/packages/e5/76/6369b434cfd62598aa79a68b76e34e23cdebc6bdcd9835a2bb1d0e8b137f/tiramisu_asr-0.2.3-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a001127a52ffb36c6fe9951214d8daa490062f902537bbd25089ec5ff3a8bb3",
          "md5": "21e391e3f0ea40b85f9db1ca9a084f7e",
          "sha256": "f1537c5fca923a23983fba504758b12e13bc51a299c2486ca720275127bdee93"
        },
        "downloads": -1,
        "filename": "tiramisu-asr-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "21e391e3f0ea40b85f9db1ca9a084f7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 45605,
        "upload_time": "2020-10-10T09:03:14",
        "upload_time_iso_8601": "2020-10-10T09:03:14.872859Z",
        "url": "https://files.pythonhosted.org/packages/4a/00/1127a52ffb36c6fe9951214d8daa490062f902537bbd25089ec5ff3a8bb3/tiramisu-asr-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e5766369b434cfd62598aa79a68b76e34e23cdebc6bdcd9835a2bb1d0e8b137f",
        "md5": "39ae0f7dd979b23b94c945233e8e8173",
        "sha256": "948ac0eabfec1cf2e8f56afa8e3fc95b85138d824167904ac584d3572484c2a1"
      },
      "downloads": -1,
      "filename": "tiramisu_asr-0.2.3-py3.7.egg",
      "has_sig": false,
      "md5_digest": "39ae0f7dd979b23b94c945233e8e8173",
      "packagetype": "bdist_egg",
      "python_version": "3.7",
      "requires_python": ">=3.6",
      "size": 157353,
      "upload_time": "2020-10-10T09:03:12",
      "upload_time_iso_8601": "2020-10-10T09:03:12.459304Z",
      "url": "https://files.pythonhosted.org/packages/e5/76/6369b434cfd62598aa79a68b76e34e23cdebc6bdcd9835a2bb1d0e8b137f/tiramisu_asr-0.2.3-py3.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a001127a52ffb36c6fe9951214d8daa490062f902537bbd25089ec5ff3a8bb3",
        "md5": "21e391e3f0ea40b85f9db1ca9a084f7e",
        "sha256": "f1537c5fca923a23983fba504758b12e13bc51a299c2486ca720275127bdee93"
      },
      "downloads": -1,
      "filename": "tiramisu-asr-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "21e391e3f0ea40b85f9db1ca9a084f7e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 45605,
      "upload_time": "2020-10-10T09:03:14",
      "upload_time_iso_8601": "2020-10-10T09:03:14.872859Z",
      "url": "https://files.pythonhosted.org/packages/4a/00/1127a52ffb36c6fe9951214d8daa490062f902537bbd25089ec5ff3a8bb3/tiramisu-asr-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}