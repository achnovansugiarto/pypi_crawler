{
  "info": {
    "author": "",
    "author_email": "Skyler Tan <shiuhtan123@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ATM Data Tools\r\n Tools for air traffic data analysis. The package currently consists of 3 functions for reading ADSB files.\r\n\r\n# Installation\r\nThis package is available via PyPi:\r\n\r\n```\r\npip install atm-datatools\r\n```\r\n\r\n# Import\r\nYou can import the package by using\r\n\r\n```\r\nimport atmdatatools as adt\r\n```\r\n\r\n# Functions\r\n## read_adsb()\r\n**`read_adsb(fname, datestr, downsample=None, floor=None, ceiling=None)`**\r\n\r\nReads raw ADSB files, assuming that each file only has 1 day worth of data. Raw ADSB files should have the columns `['073:071_073TimeforPos','131:Latitude','131:Longitude','140:GeometricHeight','170:TargetID']`. The column `073:071_073TimeforPos` contains the time elapsed in seconds in UTC and the timezone of the file is currently hardcoded for UTC+8. Hence, the first row of this column starts at approximately 57,600s representing 16:00 UTC of the previous day.\r\n\r\nReturns a GeoDataFrame with the columns `['id','datetime','unix_timestamp','geometry']`. Each row represents 1 ADSB position report.\r\n\r\n### Parameters\r\n- **fname:** the filename of the adsb csv file\r\n- **datestr**: date string in the format 'YYYYMMDD'\r\n- [Optional] **downsample = None:** downsample the track data, e.g. 2 will take every 2nd point in the track data\r\n- [Optional] **floor = None:** cuts off tracks below this altitude in feet, recommend 100 feet if you wish to exclude ground movements\r\n- [Optional] **ceiling = None:** cuts off tracks above this altitude in feet\r\n\r\n### Returns\r\n- **GeoDataFrame:** A GeoDataFrame with the columns `['id','datetime','unix_timestamp','geometry']`. Each row represents 1 ADSB position report.\r\n    - `id` contains the flight number (e.g. SIA92). Increments the id of a position if a time gap of more than 15 minutes is detected. e.g. MEDIC77 becomes MEDIC77_1.\r\n    - Times are in UTC\r\n    - `geometry` column has Shapely Point objects with lat, long, and altitude information\r\n\r\n\r\n## read_adsb_byflightid()\r\n**`read_adsb_byflightid(fname, datestr, flightid, downsample=None, floor=None, ceiling=None)`**\r\n\r\nReads raw ADSB files, assuming that each file only has 1 day worth of data, returning a GeoDataFrame with flight tracks of the desired flightid. Each row represents 1 ADSB position report. Parameters allow for additional filtering.\r\n\r\nSee the `read_adsb()` function documentation for raw ADSB file format.\r\n\r\n### Parameters\r\n- **fname:** the filename of the adsb csv file\r\n- **datestr**: date string in the format 'YYYYMMDD'\r\n- **airport**: Accepts ICAO airport codes, currently accepts `WSSS`, `WSSL`.\r\n- [Optional] **downsample = None:** downsample the track data, e.g. 2 will take every 2nd point in the track data\r\n- [Optional] **floor = None:** cuts off tracks below this altitude in feet, recommend 100 feet if you wish to exclude ground movements\r\n- [Optional] **ceiling = None:** cuts off tracks above this altitude in feet\r\n\r\n### Returns\r\n- **GeoDataFrame:** A GeoDataFrame with the columns `['id','datetime','unix_timestamp','geometry']`. Each row represents 1 ADSB position report.\r\n    - `id` contains the flight number (e.g. SIA92). Increments the id of a position if a time gap of more than 15 minutes is detected. e.g. MEDIC77 becomes MEDIC77_1.\r\n    - Times are in UTC\r\n    - `geometry` column has Shapely Point objects with lat, long, and altitude information\r\n\r\n\r\n## read_adsb_byairport()\r\n**`read_adsb_byairport(fname, datestr, airport, arrdep=None, downsample=None, floor=None, ceiling=None)`**\r\n\r\nReads raw ADSB files, assuming that each file only has 1 day worth of data, returning a GeoDataFrame with flight tracks filtered by airport of interest. Each row represents 1 flightpath. Parameters allow for additional filtering.\r\n\r\nSee the `read_adsb()` function documentation for raw ADSB file format.\r\n\r\n### Parameters\r\n- **fname:** the filename of the adsb csv file\r\n- **datestr**: date string in the format 'YYYYMMDD'\r\n- **airport**: Accepts ICAO airport codes, currently accepts `WSSS`, `WSSL`.\r\n- [Optional] **downsample = None:** downsample the track data, e.g. 2 will take every 2nd point in the track data\r\n- [Optional] **floor = None:** cuts off tracks below this altitude in feet, recommend 100 feet if you wish to exclude ground movements\r\n- [Optional] **ceiling = None:** cuts off tracks above this altitude in feet\r\n\r\n### Returns\r\n- **GeoDataFrame:** A GeoDataFrame with the columns `['id','geometry']`. Each row represents 1 flightpath.\r\n    - `id` contains the flight number (e.g. SIA92). Increments the id of a position if a time gap of more than 15 minutes is detected. e.g. MEDIC77 becomes MEDIC77_1.\r\n    - `geometry` column contains a Shapely LineString representing the flight's flightpath\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "air,traffic,management,ADSB,ADS-B",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "atmdatatools",
    "package_url": "https://pypi.org/project/atmdatatools/",
    "platform": null,
    "project_url": "https://pypi.org/project/atmdatatools/",
    "project_urls": {
      "Homepage": "https://github.com/skulu/ATM_datatools"
    },
    "release_url": "https://pypi.org/project/atmdatatools/0.0.1/",
    "requires_dist": [
      "pandas (>=1.5.3)",
      "geopandas (>=0.12.2)",
      "shapely (>=2.0.1)"
    ],
    "requires_python": ">=3.9",
    "summary": "Tools for air traffic data analysis",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17267168,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7409a164db38ce6c5e2bb9b04d65fd493dc01c34d45da2859bc1490d1b542565",
          "md5": "2673bdf215a37b552072f728301345fc",
          "sha256": "266921f56cd6a2f3b62882db93fee6e740e0b31b360540864234c5dc340b3f6c"
        },
        "downloads": -1,
        "filename": "atmdatatools-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2673bdf215a37b552072f728301345fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 17932,
        "upload_time": "2023-03-13T07:10:28",
        "upload_time_iso_8601": "2023-03-13T07:10:28.050401Z",
        "url": "https://files.pythonhosted.org/packages/74/09/a164db38ce6c5e2bb9b04d65fd493dc01c34d45da2859bc1490d1b542565/atmdatatools-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d0a636119347492c80e67672c313ded2966bd8379a624f21e6a29547f52d86f",
          "md5": "fb60337704ccadd9a9581e47c1d8cd22",
          "sha256": "cbf3402245e2b8847749a4ee78166ab6173034d7ff072604ea56050ca433d868"
        },
        "downloads": -1,
        "filename": "atmdatatools-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fb60337704ccadd9a9581e47c1d8cd22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17501,
        "upload_time": "2023-03-13T07:10:30",
        "upload_time_iso_8601": "2023-03-13T07:10:30.222599Z",
        "url": "https://files.pythonhosted.org/packages/6d/0a/636119347492c80e67672c313ded2966bd8379a624f21e6a29547f52d86f/atmdatatools-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7409a164db38ce6c5e2bb9b04d65fd493dc01c34d45da2859bc1490d1b542565",
        "md5": "2673bdf215a37b552072f728301345fc",
        "sha256": "266921f56cd6a2f3b62882db93fee6e740e0b31b360540864234c5dc340b3f6c"
      },
      "downloads": -1,
      "filename": "atmdatatools-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2673bdf215a37b552072f728301345fc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 17932,
      "upload_time": "2023-03-13T07:10:28",
      "upload_time_iso_8601": "2023-03-13T07:10:28.050401Z",
      "url": "https://files.pythonhosted.org/packages/74/09/a164db38ce6c5e2bb9b04d65fd493dc01c34d45da2859bc1490d1b542565/atmdatatools-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6d0a636119347492c80e67672c313ded2966bd8379a624f21e6a29547f52d86f",
        "md5": "fb60337704ccadd9a9581e47c1d8cd22",
        "sha256": "cbf3402245e2b8847749a4ee78166ab6173034d7ff072604ea56050ca433d868"
      },
      "downloads": -1,
      "filename": "atmdatatools-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fb60337704ccadd9a9581e47c1d8cd22",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 17501,
      "upload_time": "2023-03-13T07:10:30",
      "upload_time_iso_8601": "2023-03-13T07:10:30.222599Z",
      "url": "https://files.pythonhosted.org/packages/6d/0a/636119347492c80e67672c313ded2966bd8379a624f21e6a29547f52d86f/atmdatatools-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}