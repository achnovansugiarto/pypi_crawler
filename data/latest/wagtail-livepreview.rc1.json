{
  "info": {
    "author": "Kalob Taulien",
    "author_email": "kalob@learnwagtail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Wagtail",
      "Framework :: Wagtail :: 2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "====================\nWagtail Live Preview\n====================\n\nWagtail Live Preview lets you view your page changes as you make them in the Wagtail Admin.\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n**Using React or Vue?** This won't work for you, nor was it designed to. This Live Preview package is designed for simple Wagtail websites.\n\n============\nHow it works\n============\nTell it how often to save a snapshot of the page you're working on and how often to poll for updates in the Live Preview.\n\nIt does *not* piggy back on Wagtails Revision system, but you can tell it to save a page revision every *x* number of saves so you never accidentally lose your work (or if you just want to log your progress and maybe revert back to a previous content iteration).\n\nThe package itself is called ``wagtail-livepreview`` to let everyone know this is a Wagtail specific package. But the code references ``livepreview`` instead of ``wagtail_livepreview`` as to not confuse Wagtail features with what's in this package.\n\n\n\n============\nInstallation\n============\n1. Install the package with::\n\n\tpip install wagtail-livepreview\n\n2. Add it to your ``INSTALLED_APPS`` *above* the ``'wagtail.admin'`` app::\n\n    INSTALLED_APPS = [\n        # ...\n        'livepreview',\n        # ...\n        'wagtail.admin',\n    ]\n\n\n3. Add ``{% load livepreview_tags %}`` to your ``base.html`` template. And add ``{% livepreview_js %}`` right above your ``</body>`` tag in ``base.html``::\n\n\t{% load static wagtailuserbar livepreview_tags %}\n\n\t<!DOCTYPE html>\n\t<html class=\"no-js\" lang=\"en\">\n\t\t<head>\n\t\t\t...\n\t\t</head>\n\n\t\t<body class=\"{% block body_class %}{% endblock %}\">\n\t\t\t...\n\n\t\t\t{% livepreview_js %}\n\t\t</body>\n\t</html>\n\n4. You'll need to apply migrations::\n\n\tpython manage.py migrate\n\n=====\nHooks\n=====\nYou can take an action before and after a Live Preview using a generic Wagtail hook::\n\n\n\t@hooks.register('after_live_preview_save')\n\tdef after_live_preview_save(request, page):\n\t\t\"\"\"Event to happen before the live preview is served.\"\"\"\n\t\tprint(page.id)\n\n\n\t@hooks.register('before_live_preview_save')\n\tdef before_live_preview_save(request, page):\n\t\t\"\"\"Event to happen after the live preview is served.\"\"\"\n\t\tprint(page.id)\n\n\n**Caution:** It's a bad idea to provide a process intensive task in these hooks since these hooks may end up being called as frequently as once per second. It might be best to offload your tasks in these hooks to a task runner.\n\n===========================================\nChecking if a view is a Live Preview or not\n===========================================\nYou'll want to adjust your template so you aren't triggering your analytics every second. You can prevent this with::\n\n\t{% if not livepreview %}\n\t\t.. analytics in here\n\t{% else %}\n\t\t<div id=\"warning\">This is a live preview</div>\n\t{% endif %}\n\n\nYou can also use ``{{ request.livepreview }}`` in your template to check against the ``request``.\n\n========\nSettings\n========\nThere a few global settings you can apply::\n\n\t# base settings.py\n\n\t# How often (in milliseconds) should the livepreview check for page updates? Default is 1000ms.\n\tLIVEPREVIEW_TIMEOUT = 1000\n\n\t# If you'd like to turn on auto-revision saving every x number of Live Preview saves, set this as True. Default is False.\n\tLIVEPREVIEW_SAVE_AS_REVISIONS = False\n\n\t# How many Live Preview saves should happen before a new revision is automatically saved? Default is 10. Requires LIVEPREVIEW_SAVE_AS_REVISIONS = True.\n\tLIVEPREVIEW_SAVE_REVISION_COUNT = 10\n\n\t# Render Live Previews into a temporary file, and attempt to serve that file. Default is true.\n\t# If True, LIVEPREVIEW_TIMEOUT can be as low as 250ms.\n\t# If False, the minimum LIVEPREVIEW_TIMEOUT is 1000ms.\n\tLIVEPREVIEW_USE_FILE_RENDERING = True\n\n\n==============\nModel Settings\n==============\n\nYou can disable Live Preview for specific page models. For example, you might have a simple Blog Index Page with just a ``title`` field. Or a page that redirects to another page. In these scenarios you might not want Live Preview enabled::\n\n\tclass YourPage(Page):\n\t\t# ...\n\t\tLIVEPREVIEW_DISABLED = True  # Disable Live Preview on a per-model basis",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/KalobTaulien/wagtail-livepreview",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wagtail-livepreview",
    "package_url": "https://pypi.org/project/wagtail-livepreview/",
    "platform": "",
    "project_url": "https://pypi.org/project/wagtail-livepreview/",
    "project_urls": {
      "Homepage": "https://github.com/KalobTaulien/wagtail-livepreview"
    },
    "release_url": "https://pypi.org/project/wagtail-livepreview/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Live preview your page changes as you make them.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13989978,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e68ee43efc07b1adaa78c837fee4a99dfcce59a5062f8ed6ee2884e22c40670",
          "md5": "fb25c2bdd9d9c6f72b25f814c2a4ed96",
          "sha256": "fc19d1337933185575e4fb1bd6b0c785fb423d73347745048cdb2887765bdfbf"
        },
        "downloads": -1,
        "filename": "wagtail-livepreview-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fb25c2bdd9d9c6f72b25f814c2a4ed96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11538465,
        "upload_time": "2019-08-10T21:54:32",
        "upload_time_iso_8601": "2019-08-10T21:54:32.110789Z",
        "url": "https://files.pythonhosted.org/packages/8e/68/ee43efc07b1adaa78c837fee4a99dfcce59a5062f8ed6ee2884e22c40670/wagtail-livepreview-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e68ee43efc07b1adaa78c837fee4a99dfcce59a5062f8ed6ee2884e22c40670",
        "md5": "fb25c2bdd9d9c6f72b25f814c2a4ed96",
        "sha256": "fc19d1337933185575e4fb1bd6b0c785fb423d73347745048cdb2887765bdfbf"
      },
      "downloads": -1,
      "filename": "wagtail-livepreview-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fb25c2bdd9d9c6f72b25f814c2a4ed96",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11538465,
      "upload_time": "2019-08-10T21:54:32",
      "upload_time_iso_8601": "2019-08-10T21:54:32.110789Z",
      "url": "https://files.pythonhosted.org/packages/8e/68/ee43efc07b1adaa78c837fee4a99dfcce59a5062f8ed6ee2884e22c40670/wagtail-livepreview-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}