{
  "info": {
    "author": "gunville",
    "author_email": "rk13088@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Route53 SPF Flattener\n=======\n\n* `r53spflat` is an extension to [sender-policy-flattener](https://github.com/cetanu/sender_policy_flattener) which is a different project maintaind by ***centanu***.\n* `r53spflat` can update the SPF TXT records in [Amazon Route53](https://aws.amazon.com/route53)\n* `r53spflat` was adapted from [`cfspflat`](https://github.com/Glocktober/cfspflat) - which provides the same capability for Cloudflare DNS\n\n### SPF Flattening\n[Sender Policy Framework](http://www.open-spf.org/Introduction/) [(SPF) has certain restricitions](https://tools.ietf.org/html/rfc7208#section-4.6.4) on the number of DNS lookups (10) to validate a sender is authorized by SPF.\n* Organizations utilizing vendors and SaaS products that send email on their behalf. They do this by adding an `include` for an SPF record the vendor provides - and manages.  \n* The vendor managed SPF record contains the `ip4` and `ip6` records for that vendors email infrastrucure and often contains additional `include` statements.\n* As each vendor SPF record is included to your SPF it requires more DNS lookups.  This can exceed the SPF protocol limit of 10 lookups. When this happens, your email can be rejected by recipients because the authorized sender's IP was never reached.\n* SPF Flattening is the process of resolving the authorized senders SPF `include` records into `ip4` and `ip6` records to reduce the number of DNS lookups.\n* Converting the `include` records to `ip4` and `ip6` statements can be a problem if the vendor modifies their SPF record. How do you keep them in sync?\n    * [sender-policy-flattener]() detects these changes and reports them by email.\n    * `r53spflat` uses `sender-policy-flattener`, but includes an `--update` capability.\n\n\n## `r53spflat` - Route53 Sender Policy Flattener\n\nQuick overview:\n```bash\n% r53spflat -h\nusage: r53spflat [-h] [-c CONFIG] [-o OUTPUT] [--update-records] [--force-update]\n          [--no-email]\n\nA script that crawls and compacts SPF records into IP networks. This helps to\navoid exceeding the DNS lookup limit of the Sender Policy Framework (SPF)\nhttps://tools.ietf.org/html/rfc7208#section-4.6.4\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONFIG, --config CONFIG\n                        Name/path of JSON configuration file (default:\n                        spfs.json)\n  -o OUTPUT, --output OUTPUT\n                        Name/path of output file (default spf_sums.json)\n  --update-records      Update SPF records in Route53\n  --force-update        Force an update of SPF records in Route53\n  --no-email            don't send the email\n```\n* The `sender-policy-flattener` python module is installed as part of `r53spflat`\n* The existing core of `spflat` is kept mostly intact, so the basic features are maintained by `r53spflat`.  \n* The changes to accomodate `r53spflat` were in the parameter handling and adding the Route53 updates to the processing look.\n* The `boto3` library, with some abstraction classes, is used to make the zone updates in Route53.\n* `r53spflat` eliminates many of the command arguments of spflat in favor of using the json config file.\n* Rotue53 TXT records are automatically generated and updated when the configuration changes.\n* With `r53spflat` you can completely automate your SPF flattening using cfspflat with the `--update` switch in a cron job, even silently with the `--no-email` switch\n\n## Installing and Configuring `r53spflat`\n\n### 1. pip install the r53spflat module\n```bash\n% pip install r53spflat\n```\n* But it's advisable to do this in its own venv:\n```bash\n% python3 -m venv spfenv\n% source spfenv/bin/activate\n% pip install r53spflat\n```\n* pip will install the prerequisites, including the `sender-policy-flattner` (spflat), `dnspython`, `netaddr`, and `boto3` python modules.\n* The executable is installed in bin of the venv as `r53spflat`\n### 2. Create an anchor SPF record for the zone apex in Route53\n\nCreate the TXT SPF record on zone apex used (e.g. example.com), At the end of this anchor record include the first SPF record that slpat will write - spf0.example.com\n * we also include our own `ip4` and `ip6` entries in this anchor record. \n```\nexample.com TXT \"v=spf1 mx include:spf0.example.com -all\"\n```\n* This anchor record is never changed by `r53spflat`. It's purpose is to link to the first SPF record in the chain that `r53spflat` manages.\n\n### 2. Edit the r53spflat configuration file\nCreate a spfs.json file.  Add all the entries required:\n* `r53spflat` uses the same configuration and sums file formats as the original `spflat`.\n* If you already use spflat you can use those files as is with r53spflat.\n* There is one extension - the \"update_subject\" entry containing the subject of the email sent when r53spflat has updated your SPF records.  This message will contain the same detail spflat provides.\n* `spfs.json` is the default name of the config file, but it can be specified with the `--config` switch.\n* Here is an example config file:\n#### Example spfs.json configuration file:\n```json\n{\n    \"sending domains\": {\n        \"example.edu\": {\n              \"amazonses.com\": \"txt\",\n              \"goodwebsolutions.net\": \"txt\",\n              .... more sender spf's here ....\n              \"delivery.xyz.com\": \"txt\",\n              \"spf.protection.outlook.com\": \"txt\"\n        }\n    },\n    \"resolvers\": [\n            \"1.1.1.1\", \"8.8.8.8\"\n    ],\n    \"email\": {\n        \"to\": \"dnsadmins@example.com\",\n        \"from\": \"spf_monitor@example.com\",\n        \"subject\": \"[WARNING] SPF Records for {zone} have changed and should be updated.\",\n        \"update_subject\" : \"[NOTICE] SPF Records for {zone} have been updated.\",\n        \"server\": \"smtp.example.com\"\n    },\n    \"output\": \"monitor_sums.json\"\n}\n```\n#### Config file details\n* The `sending domains` section is **required** and contains sending domain entries: this is your sender domain (e.g. example.com for j.smith@example.com, noreply.example.com for deals@noreply.example.com )  There can be multiple sending domains in the config file.\n* Each sending domain contains dns spf records for the dns `include` records of your approved senders.These dns names are resolved and flattened:\n  * These entries are in the key-value pairs of <fqdn> : <record type>.\n  * Record type can be \"txt\" (other SPF records),  \"A\" and \"AAAA\" records (for specific hosts).\n* The `resolvers` section is **optional** (using the system default DNS resolvers if none are supplied)\n* The `email` stanza is **required** and is global (i.e. for all `sending domains`).  This section includes:\n  * `subject` **(optional)** is the email subject if a change was detected but no updates were made. The default message is the one shown in the example.\n  * `update_subject` **(optional)** is the email subject if a change was detected and the dns records were updated. The default message is shown in the example.\n    * `to` - is **required** - this is the destination for emails sent by `r53spflat` \n    * `from` - is **required** - the source email of the messages `r53spflat` sends\n    * `server` - is **required** - your mail relay.\n* `output` is the file that maintains the existing state and checksum of sender records. If this is not specified `spfs_sum.json` is used.\n#### Output file details\n* The `output` file is a JSON file only updated if it is new (empty) or the records have been updated. \n* Likewise the default output file is `spf_sums.json` but can be changed in the config file or by the `--output` switch.\n* This contains the list of flattened spf records and a checksum used to assess changes in senders records. \n* Because you recieve emails of detected changes or updates, there is little reason to care about the output file.\n### 3. Create a credentials file for AWS\n* The AWS user or role used for `r53spflat` must have these permissions to make updates:\n    * `route53:ListHostedZones` to Route53\n    * `route53:ChangeResourceRecordSets` and `route53:ListResourceRecordSets` to the zones that will be updated \n* If `r53spflat` run on an AWS EC2 instance, an IAM role with the required privileges can be attached to the instance.\n* If `r53spflat` runs on prem, API keys are required to make the AWS Route53 updates and placed in a configuation file.\n    * Configuring this beyond our scope: refere to [AWS cli](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html)\n    * Route53 is a global service, so any region can be specified.\n    * These credentials are typically in `~/.aws/credentials` and `~/.aws/config`\n* It's also possible to pass the credentials as environment variables.\n\n### 4. Run `r53spflat` to build the sums file and SPF entries\n* Run r53spflat twice:\n```bash\n% r53spflat --no-email\n% r53spflat --force \n```\n* The first time constructs the base records and the second time forces the dns updates.\n* With force update the DNS records are created even if a change hasn't been detected.\n* A list of the records will be sent to your email.\n\n### 5. Automate `r53spflat` to the level you are comfortable with\n* You are up and running:\n  * You can run `r53spflat` in advisory mode (like `spflat`) sending you emails notifying of changes\n  * Or you can run it with the `--update-records` switch and update your records automatically whenever they change (still giving you notifications of the changes made.)\n\nExample email format\n--------------------\n* Example from `sender-policy-flattener` README\n* This would be in \n\n<img src='https://raw.githubusercontent.com/cetanu/sender_policy_flattener/master/example/email_example.png' alt='example screenshot'></img>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Glocktober/r53spflat",
    "keywords": "'route53 aws dns spf flattener'",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "r53spflat",
    "package_url": "https://pypi.org/project/r53spflat/",
    "platform": "",
    "project_url": "https://pypi.org/project/r53spflat/",
    "project_urls": {
      "Homepage": "https://github.com/Glocktober/r53spflat",
      "overview": "https://github.com/Glocktober/r53spflat/blob/master/README.md",
      "repo": "https://github.com/Glocktober/r53spflat.git"
    },
    "release_url": "https://pypi.org/project/r53spflat/22.2.20/",
    "requires_dist": [
      "boto3 (>=1.21.2)",
      "sender-policy-flattener (==0.3.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Flattens SPF records and updates Cloudflare zones",
    "version": "22.2.20",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12955264,
  "releases": {
    "22.2.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cf2addceb0ad00230c8cde199fcde61b6bda1d465ff4089af8f97744f1419c7",
          "md5": "a126a2f3488f13f962fac4c8d822578c",
          "sha256": "182c31ad4c60e9f63eedcee734fe46c18e9a52c10f88ea2062a1922da1ddf704"
        },
        "downloads": -1,
        "filename": "r53spflat-22.2.20-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a126a2f3488f13f962fac4c8d822578c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10426,
        "upload_time": "2022-02-21T01:35:01",
        "upload_time_iso_8601": "2022-02-21T01:35:01.336890Z",
        "url": "https://files.pythonhosted.org/packages/4c/f2/addceb0ad00230c8cde199fcde61b6bda1d465ff4089af8f97744f1419c7/r53spflat-22.2.20-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86aca04e872ee6e9af5bf0d530a303853b5ccd6a20f352974c91b4fd4b79c858",
          "md5": "b89084251510a4f49ce6d3ca60fd1c4c",
          "sha256": "cfc6ae3ebe490df27150857f3c4f17a361fc2aa1d46919317ea18f202b158c54"
        },
        "downloads": -1,
        "filename": "r53spflat-22.2.20.tar.gz",
        "has_sig": false,
        "md5_digest": "b89084251510a4f49ce6d3ca60fd1c4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13180,
        "upload_time": "2022-02-21T01:35:03",
        "upload_time_iso_8601": "2022-02-21T01:35:03.612172Z",
        "url": "https://files.pythonhosted.org/packages/86/ac/a04e872ee6e9af5bf0d530a303853b5ccd6a20f352974c91b4fd4b79c858/r53spflat-22.2.20.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4cf2addceb0ad00230c8cde199fcde61b6bda1d465ff4089af8f97744f1419c7",
        "md5": "a126a2f3488f13f962fac4c8d822578c",
        "sha256": "182c31ad4c60e9f63eedcee734fe46c18e9a52c10f88ea2062a1922da1ddf704"
      },
      "downloads": -1,
      "filename": "r53spflat-22.2.20-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a126a2f3488f13f962fac4c8d822578c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10426,
      "upload_time": "2022-02-21T01:35:01",
      "upload_time_iso_8601": "2022-02-21T01:35:01.336890Z",
      "url": "https://files.pythonhosted.org/packages/4c/f2/addceb0ad00230c8cde199fcde61b6bda1d465ff4089af8f97744f1419c7/r53spflat-22.2.20-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86aca04e872ee6e9af5bf0d530a303853b5ccd6a20f352974c91b4fd4b79c858",
        "md5": "b89084251510a4f49ce6d3ca60fd1c4c",
        "sha256": "cfc6ae3ebe490df27150857f3c4f17a361fc2aa1d46919317ea18f202b158c54"
      },
      "downloads": -1,
      "filename": "r53spflat-22.2.20.tar.gz",
      "has_sig": false,
      "md5_digest": "b89084251510a4f49ce6d3ca60fd1c4c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13180,
      "upload_time": "2022-02-21T01:35:03",
      "upload_time_iso_8601": "2022-02-21T01:35:03.612172Z",
      "url": "https://files.pythonhosted.org/packages/86/ac/a04e872ee6e9af5bf0d530a303853b5ccd6a20f352974c91b4fd4b79c858/r53spflat-22.2.20.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}