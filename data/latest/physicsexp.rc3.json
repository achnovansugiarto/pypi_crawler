{
  "info": {
    "author": "ustcpetergu",
    "author_email": "guyimin@mail.ustc.edu.cn",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PhysicsExp\n### USTC Physics Experiments Data Processing Tools\n\n### 中科大大物实验数据处理工具\n\n*The package is released on [pypi](https://pypi.org/project/physicsexp/).*\n\n*For readers from pypi, [here](https://github.com/ustcpetergu/PhysicsExp) please.*\n\n关于本人的实验数据和数据处理脚本、图片、计算结果（从一级到四级），请见 [USTCPhysExpData](https://github.com/ustcpetergu/USTCPhysExpData) 项目。\n\nMy experiment data, data processing scripts, figures, and some results(from experiment level I to IV), please visit the [USTCPhysExpData](https://github.com/ustcpetergu/USTCPhysExpData) project. \n\n## About\n\nDon't want to use OriginLab or Excel? Try Python!  \n\n~~最终目的是建造一套用于自动化处理大物实验数据、绘制图像、生成可打印文档、将文档提交到在线打印系统的工具；针对常用数据处理需求实现简化和自动化，只要简单的几行代码，就能完成通用的绘图、拟合、不确定度计算等大物实验常用任务。~~\n理想与现实差距还很大，目前仅仅包装了matplotlib绘图库、简单拟合、文件输入、docx生成，简化重复劳动。\n\nImagination and expectation are far from reality. Now I only wrapped matplotlib plotting library, implemented simple regression, easy file input, and `docx` generation. To simplify repetious works. \n\nThis project comes with NO WARRENTY.\n\n\n## Installation\n\n**Install the package**\n\n Use TUNA mirror to accelerate. Depencencies like numpy and matplotlib will be installed automatically. \n\n```\npip install -i https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple physicsexp\n```\n\n**Test the installation(Optional)**\n\n```\n>>> from physicsexp.mainfunc import *\n>>> from physicsexp.gendocx import *\n>>>\n```\n\nIf no error then you are ready! If error occurs feel free to open an issue.\n\n**Run the example script(Recommended)**\n\n```\npython3 ./physicsexp/example/plot.py\n```\n\nYou'll see graphs poped out and saved to .png, a generated gen.docx ready to print, and calculations printed to output, in the `./physicsexp/example` directory. You can also clone USTCPhysExpData to try some real-life cases. Then you can modify the code or write your own code to process your data!\n\n## Example Script Explained\n\nIt is a real-case example of input several lines of data, plot the data and do linear regression, and generate a printable docx document containing plot and analyse results. \n\nIf you really want to know, the experiment is about verifying the relativistic kinetic energy vs. momentum relationship of electron(beta-ray) and measuring the extraction of beta-ray by aluminum pieces of different thickness. \n\n**First, put your data in `data.txt`**, like this:\n\n```\n# 位置x\ne -2\n23.     24.2    25.5    26.5    27.7    29.     30.5    31.8\n# 峰位N\n245.77  291.79  336.40  378.52  417.94  456.14  510.12  544.95\n# 铝片数量M\n0       1       2       3       4       5\n# 选区计数N\n43901   34258   28725   23670   19386   16866\n```\n\nYou can use `#` to comment a line, and `e *` to specify the order of magnitude. \n\n**Then it's time to write python**\n\nHeaders & imports\n\n```python\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nfrom physicsexp.mainfunc import *\nfrom physicsexp.gendocx import *\n```\n\nRead the file easily with the `readoneline` function\n\n```python\nfin = open('./data.txt', 'r', encoding='utf-8')\npos = readoneline(fin)\nN = readoneline(fin)\nAl_num = readoneline(fin)\nCnt = readoneline(fin)\nfin.close()\n```\n\nCalculate and print some results. This is python, you can do whatever you like easily. (This part is not related to the library, you can skip this)\n\n```python\na = 2.373e-3\nb = -.0161\ndEk = .20\n\nc0 = 299792458.\nMeV = 1e6 * electron\n\nEmeasure = a * N + b + dEk\nx0 = .10\nR = (pos - x0) / 2\nB = 640.01e-4\nMomentum = 300 * B * R\nEclassic = ((Momentum * MeV)**2 / (2 * me * c0**2)) / MeV\nErela = np.array([math.sqrt((i * MeV)**2 + (me * c0**2)**2) - me * c0**2 for i in Momentum]) / MeV\nprint('pos\\t', pos)\nprint('R\\t', R*100)\nprint('pc\\t', Momentum)\nprint('N\\t', N)\nprint('Eclas\\t', Eclassic)\nprint('Erela\\t', Erela)\nprint('Emes\\t', Emeasure)\n```\n\n**Now, plot!**\n\nFirst graph: three curve in one figure. Using `simple_plot`. You can use LaTeX in plot labels. Graph is saved to `1.png`. Use `show=0` to plot multiple lines on one figure. \n\n```python\nsimple_plot(Momentum, Emeasure, show=0, issetrange=0, dot='+', lab='测量动能')\nsimple_plot(Momentum, Eclassic, show=0, issetrange=0, dot='*', lab='经典动能')\nsimple_plot(Momentum, Erela, dot='o', save='1.png', issetrange=0, xlab='$pc/MeV$', ylab='$E/MeV$', title='电子动能随动量变化曲线', lab='相对论动能')\n```\n\nSecond graph, a simple curve, saved to `2.png`:\n\n```python\nLen = 150\nCnt = Cnt / Len\nsimple_plot(Al_num, Cnt, xlab='铝片数', ylab='选区计数率(射线强度)', title='$\\\\beta$射线强度随铝片数衰减曲线', save='2.png')\n```\n\nThird graph, a curve with a linear fit, using `simple_linear_plot`, saved to `3.png`:\n\n```python\nCntLn = np.log(Cnt)\nd = 50\nAl_Real = Al_num * d\nslope, intercept = simple_linear_plot(Al_Real, CntLn, xlab='质量厚度$g/cm^{-2}$', ylab='选区计数率对数(射线强度)', title='半对数曲线曲线', save='3.png')\nprint(-slope)\nprint(math.log(1e4) / (-slope))\nprint((math.log(Cnt[0]) - 4 * math.log(10) - intercept) / slope)\n```\n\n**Don't bother putting pictures in documents yourself!**\n\nWith a single line of code, generate a printable docx document with the above three pictures and the fit results. \n\n```python\ngendocx('gen.docx', '1.png', '2.png', '3.png', 'slope, intercept: %f %f' % (slope, intercept))\n```\n\n**Results**\n\nOutput:\n\n```\npos\t [0.23  0.242 0.255 0.265 0.277 0.29  0.305 0.318]\nR\t [ 6.5   7.1   7.75  8.25  8.85  9.5  10.25 10.9 ]\npc\t [1.2480195  1.3632213  1.48802325 1.58402475 1.69922655 1.8240285\n 1.96803075 2.0928327 ]\nN\t [245.77 291.79 336.4  378.52 417.94 456.14 510.12 544.95]\nEclas\t [1.52375616 1.81804848 2.16616816 2.45469003 2.82471934 3.25488743\n 3.78910372 4.28491053]\nErela\t [0.83752628 0.94478965 1.0622588  1.15334615 1.26333503 1.3831891\n 1.52222218 1.64324566]\nEmes\t [0.76711221 0.87631767 0.9821772  1.08212796 1.17567162 1.26632022\n 1.39441476 1.47706635]\n0.0038199159787357996\n2411.136900195471\n2402.45428200782\n```\n\nGenerated docx: \n\n![](./physicsexp/example/gen.png)\n\nDon't forget to change my name to yours. \n\n## Detailed Usage\n\nWanna know how to use after reading the example? \n\nYou can: \n\n- Have a look at my programs in USTCPhysExpData.\n > However, they are not intended to run directly on your machine and magically give you correct answer without any change, but, if you really want to run them, maybe a `git reset` on this repository and dive into the dark history is the last resort. \n\n- Read the source code yourself. Especially `physicsexp/mainfunc.py` and `physicsexp/gendocx.py`. \n\n- Or open an issue. If you are also a USTC student just contact me with QQ/Email. Contacts are on my website. \n\nBut don't be frustrated if none of these works. \n\n**And can using these tools boost your efficiency? I don't know, but probably can't.**\n\n**Finally, think twice before wasting time on this project, instead, enjoy your life, learn some real physics, and find a (boy|girl)friend.**\n\n## Misc Information\n\n[Here](./misc.md). \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ustcpetergu/PhysicsExp",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "physicsexp",
    "package_url": "https://pypi.org/project/physicsexp/",
    "platform": "",
    "project_url": "https://pypi.org/project/physicsexp/",
    "project_urls": {
      "Homepage": "https://github.com/ustcpetergu/PhysicsExp"
    },
    "release_url": "https://pypi.org/project/physicsexp/0.0.3/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "scipy",
      "python-docx"
    ],
    "requires_python": "",
    "summary": "A simple wrapper of numpy and matplotlib to make physics experiment data analyse easier",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7765895,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53f0e10b2b51e7c5685fb172706e97dc883e05cc4ff7fc7bc4eb703e389146d8",
          "md5": "c47094b0307b8cb06af8c3626e21768c",
          "sha256": "2b4d92487541a0eafc892615353a886f412dbf99dedd990c15e62a41e3afc303"
        },
        "downloads": -1,
        "filename": "physicsexp-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c47094b0307b8cb06af8c3626e21768c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9189,
        "upload_time": "2019-04-07T11:55:56",
        "upload_time_iso_8601": "2019-04-07T11:55:56.815002Z",
        "url": "https://files.pythonhosted.org/packages/53/f0/e10b2b51e7c5685fb172706e97dc883e05cc4ff7fc7bc4eb703e389146d8/physicsexp-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "095921813a2a4d3cca882bb87a1b883cdc431a2c5bc0ca29746beca7ae81e50d",
          "md5": "2338c1761c6cf492472098d50ea2db3e",
          "sha256": "a0d3193992aca5c948efe76bf2c8a165646e17631c7f37cdd897e20da9aeaa60"
        },
        "downloads": -1,
        "filename": "physicsexp-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2338c1761c6cf492472098d50ea2db3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7341,
        "upload_time": "2019-04-07T11:55:58",
        "upload_time_iso_8601": "2019-04-07T11:55:58.962996Z",
        "url": "https://files.pythonhosted.org/packages/09/59/21813a2a4d3cca882bb87a1b883cdc431a2c5bc0ca29746beca7ae81e50d/physicsexp-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f722c19802f27a2a7cc26896ad4d50452cbdb819a5ce82ed9fcc92bef2d45588",
          "md5": "500be3434c5382d147a8c24f91d98791",
          "sha256": "75a09d884693469de253612fadb6fbf015a29486c7a5b0c7350901ab87f102d9"
        },
        "downloads": -1,
        "filename": "physicsexp-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "500be3434c5382d147a8c24f91d98791",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9906,
        "upload_time": "2019-05-08T09:24:42",
        "upload_time_iso_8601": "2019-05-08T09:24:42.528824Z",
        "url": "https://files.pythonhosted.org/packages/f7/22/c19802f27a2a7cc26896ad4d50452cbdb819a5ce82ed9fcc92bef2d45588/physicsexp-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b429f9398c842d2bf92b93409e0f66750b0c1fc46d013d4d6fb4979ca7537ad",
          "md5": "d05b308047bafb6caeee744d14837291",
          "sha256": "32daee948f7107f94fed6aa55d40a808f062aadd13fcb26a47394fd6c2023d18"
        },
        "downloads": -1,
        "filename": "physicsexp-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d05b308047bafb6caeee744d14837291",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8196,
        "upload_time": "2019-05-08T09:24:44",
        "upload_time_iso_8601": "2019-05-08T09:24:44.124938Z",
        "url": "https://files.pythonhosted.org/packages/1b/42/9f9398c842d2bf92b93409e0f66750b0c1fc46d013d4d6fb4979ca7537ad/physicsexp-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fb8b815972bd9f78f292c85dd1cb9941c988e89c27fb5ddd488e9ad838bca9a",
          "md5": "e96b97f03497ecafdfceb54035540611",
          "sha256": "7304b3a670416cf8a735a81745bbc5e81d96023afc172790e99e4a5634af6066"
        },
        "downloads": -1,
        "filename": "physicsexp-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e96b97f03497ecafdfceb54035540611",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11825,
        "upload_time": "2020-07-23T03:44:18",
        "upload_time_iso_8601": "2020-07-23T03:44:18.976469Z",
        "url": "https://files.pythonhosted.org/packages/7f/b8/b815972bd9f78f292c85dd1cb9941c988e89c27fb5ddd488e9ad838bca9a/physicsexp-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cae7b1629fb4ab0bdd0709634b43f1ff76c381265d983e96d2a0e9b528c0cef",
          "md5": "0ad4abbba414fe9dbb6467a69fce8abc",
          "sha256": "cbc0cbf7c4c044f9779fdf6cd87b58333058304b02e52736ec335d70103ee0c1"
        },
        "downloads": -1,
        "filename": "physicsexp-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0ad4abbba414fe9dbb6467a69fce8abc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14405,
        "upload_time": "2020-07-23T03:44:20",
        "upload_time_iso_8601": "2020-07-23T03:44:20.642782Z",
        "url": "https://files.pythonhosted.org/packages/5c/ae/7b1629fb4ab0bdd0709634b43f1ff76c381265d983e96d2a0e9b528c0cef/physicsexp-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7fb8b815972bd9f78f292c85dd1cb9941c988e89c27fb5ddd488e9ad838bca9a",
        "md5": "e96b97f03497ecafdfceb54035540611",
        "sha256": "7304b3a670416cf8a735a81745bbc5e81d96023afc172790e99e4a5634af6066"
      },
      "downloads": -1,
      "filename": "physicsexp-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e96b97f03497ecafdfceb54035540611",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11825,
      "upload_time": "2020-07-23T03:44:18",
      "upload_time_iso_8601": "2020-07-23T03:44:18.976469Z",
      "url": "https://files.pythonhosted.org/packages/7f/b8/b815972bd9f78f292c85dd1cb9941c988e89c27fb5ddd488e9ad838bca9a/physicsexp-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5cae7b1629fb4ab0bdd0709634b43f1ff76c381265d983e96d2a0e9b528c0cef",
        "md5": "0ad4abbba414fe9dbb6467a69fce8abc",
        "sha256": "cbc0cbf7c4c044f9779fdf6cd87b58333058304b02e52736ec335d70103ee0c1"
      },
      "downloads": -1,
      "filename": "physicsexp-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "0ad4abbba414fe9dbb6467a69fce8abc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14405,
      "upload_time": "2020-07-23T03:44:20",
      "upload_time_iso_8601": "2020-07-23T03:44:20.642782Z",
      "url": "https://files.pythonhosted.org/packages/5c/ae/7b1629fb4ab0bdd0709634b43f1ff76c381265d983e96d2a0e9b528c0cef/physicsexp-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}