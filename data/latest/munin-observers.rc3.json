{
  "info": {
    "author": "Andr√© Hedesand",
    "author_email": "andre.hedesand@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries",
      "Typing :: Typed"
    ],
    "description": "# Munin\n\n\nThe observer pattern implementation with a cool name.\n\n\n### Features:\n- Simple observer implementation with Observer (`Protocol`) and ObservableMixin.\n- Concept of *\"discretion\"* to break infinite call-back loops.\n- Simple, **No python wizardry!**\n- Easily control behaviour with decorators `@notify` and `@discrete`.\n\n### Goals:\n- **Simplicity**: Limit python wizardry\n- **Concise**: *SLOC* should never reach thousands\n- **Flexible**: Should be able to cover every Pythonista's observing needs.\n- **Typed**: Keep `munin` typed and type-safe to the furthest extent possible.\n- **Well tested**: Code coverage should be *\"at least\"* 100%.\n\n### Walk-through\nSay we have a text field from some GUI-framework, `FrameworkTextField`. It's common for\nGUI-frameworks to offer some synchronization mechanism of their own to handle certain events\n(user input in a text field, for example), be it signals, call-backs or black magic.\n\n```python\nclass FrameworkTextField:\n    def __init__(self):\n        self.content: str = \"<Placeholder text>\"\n        self.content_changed_callbacks: List[Callable[str, ...]] = []\n\n    def set_content(self, new_content):\n        self.content = new_content\n        self.on_content_changed()\n\n    def on_content_changed(self):\n        for callback in self.content_changed_callbacks:\n            callback(self.content)\n```\n\nOne is easily tempted to use the framework's synchronization mechanisms to keep their model synced,\nbut as in Uncle Bob's words; *\"We should be sceptic of frameworks\"* and most important of all:\nWe should not depend on them.\n\nTo separate view and model, you can do something like this with `munin`:\n\n```python\nfrom munin import Observer, ObservableMixin\n\nclass MyTextModel(ObservableMixin):\n    \"\"\"\n    Basically an observable str.\n    \"\"\"\n    def __init__(self):\n        super().__init__()\n        self.text: str = \"\"\n\n    def set_text(self, new_text: str):\n        self.text = new_text\n        self.notify()  # alternatively decorator `@notify`\n\n    # Implemented in ObservableMixin:\n    #\n    # * def add_observer(self, observer): ...\n    # * def notify(self): ...\n\n\nclass MyTextField(FrameworkTextField, Observer[MyTextModel]):\n    def __init__(self, model):\n        FrameworkTextField.__init__(self)\n\n        model.add_observer(self)\n        self.content_changed_callbacks.append(model.set_text)\n\n    def act(self, observable: MyTextModel):\n        \"\"\"\n        act() is munin's \"update\"-function.\n        When an Observable notify:s, the Observable passes itself through this function to\n        all its Observers.\n        \"\"\"\n        self.set_content(observable.content)\n\nmodel = MyTextModel()\nMyTextField(model)\n\n```\n\nThe keen reader sees that a call to `MyTextField.set_content(...)` will start an infinite loop.\nThis can be combatted with *\"Discretion\"*, **litteraly**.\n*\"Discretion\"* is the `munin`-way to temporarily turn off the observer synchronization.\n\n```python\nfrom munin import discretion, discrete, ...\n\nclass MyTextField(FrameworkTextField, Observer[MyTextModel]):\n    ...\n\n    @discrete  # \"Discretion\" with a decorator\n    def act(self, observable: MyTextModel):\n        # \"Discretion\" with a context manager\n        with discretion:\n            self.set_content(observable.content)\n```\n\nSome GUI frameworks (PySide for example) experience metaclass conflicts when doing\nmultiple inheritance like in this example. Luckily, `Observer` is a `Protocol`, which means that\nthe inheritance can be omitted without any repercussions.\n\n```python\nclass MyTextField(FrameworkTextField):\n    def act(self, observable: MyTextModel):\n        \"\"\"Still satisfies the Observer Protocol\"\"\"\n        pass\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hedesandxlii/munin-observers",
    "keywords": "munin,observer,listener,signal,pattern,synchronization",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "munin-observers",
    "package_url": "https://pypi.org/project/munin-observers/",
    "platform": "",
    "project_url": "https://pypi.org/project/munin-observers/",
    "project_urls": {
      "Homepage": "https://github.com/hedesandxlii/munin-observers"
    },
    "release_url": "https://pypi.org/project/munin-observers/0.2.1/",
    "requires_dist": [
      "coverage[toml] ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "black ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "pytest-mypy ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "PySide6 ; extra == 'examples'"
    ],
    "requires_python": "",
    "summary": "Your one-stop-shop for observer synchronization.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12874751,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a0162d9364cf2da897677a0ab5fe8dd5297ef62909ecd234c47875a7055f9f4",
          "md5": "07be18baa5d84eeac2f36ab61a0e2c9d",
          "sha256": "789cbad293302a3f8cfdeb04471d42cfc7fe9bf7b983bcea0a245019b5c4d7d9"
        },
        "downloads": -1,
        "filename": "munin_observers-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07be18baa5d84eeac2f36ab61a0e2c9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5033,
        "upload_time": "2022-02-12T16:04:32",
        "upload_time_iso_8601": "2022-02-12T16:04:32.997671Z",
        "url": "https://files.pythonhosted.org/packages/1a/01/62d9364cf2da897677a0ab5fe8dd5297ef62909ecd234c47875a7055f9f4/munin_observers-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4598456a9b6dc5fdf4538ee3cc4a4d50b4f858f03e0ec58d96df2fb11a0f546",
          "md5": "d768c4517b711a3d1ae7d9ebe0dcd562",
          "sha256": "cb46fdc9eda716dfee21e7162972c89e62fa303b5e8accd5b503a6610ebe90ab"
        },
        "downloads": -1,
        "filename": "munin-observers-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d768c4517b711a3d1ae7d9ebe0dcd562",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4691,
        "upload_time": "2022-02-12T16:04:34",
        "upload_time_iso_8601": "2022-02-12T16:04:34.656687Z",
        "url": "https://files.pythonhosted.org/packages/e4/59/8456a9b6dc5fdf4538ee3cc4a4d50b4f858f03e0ec58d96df2fb11a0f546/munin-observers-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6078e34f39028b578a5cac2d00734f026ab0173f0b35a7468e4d7be20a3cd4a",
          "md5": "aaafab9bb6ac5b29455b1cf43fff867d",
          "sha256": "7230ba98e30c095d7ed1b3dcf85d3f6066850260603cc33dc55fe2db8bf412a7"
        },
        "downloads": -1,
        "filename": "munin_observers-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aaafab9bb6ac5b29455b1cf43fff867d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5267,
        "upload_time": "2022-02-13T08:34:41",
        "upload_time_iso_8601": "2022-02-13T08:34:41.181426Z",
        "url": "https://files.pythonhosted.org/packages/b6/07/8e34f39028b578a5cac2d00734f026ab0173f0b35a7468e4d7be20a3cd4a/munin_observers-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d349995b61498a1f802d7f47b9d9b0e71c5e1744d88543fa4740920a90265c19",
          "md5": "ac9e31f189cddaaba788b6683b3b43b0",
          "sha256": "e00e615cb56e5fcf063ea45ba77624920b2481f84f1f78b86a3687f5a1b05500"
        },
        "downloads": -1,
        "filename": "munin-observers-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ac9e31f189cddaaba788b6683b3b43b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4967,
        "upload_time": "2022-02-13T08:34:43",
        "upload_time_iso_8601": "2022-02-13T08:34:43.649932Z",
        "url": "https://files.pythonhosted.org/packages/d3/49/995b61498a1f802d7f47b9d9b0e71c5e1744d88543fa4740920a90265c19/munin-observers-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00ed8c234b3d81898ada08757b42c75110ea58acb38ef0d0256ced18d57b3cf5",
          "md5": "07daf24c50b9a12c316d985235bcee79",
          "sha256": "7628c66e9302e8738932a955c4083c9b7f5678b271486f045bed9d3b84939be9"
        },
        "downloads": -1,
        "filename": "munin_observers-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07daf24c50b9a12c316d985235bcee79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5265,
        "upload_time": "2022-02-13T08:41:37",
        "upload_time_iso_8601": "2022-02-13T08:41:37.365872Z",
        "url": "https://files.pythonhosted.org/packages/00/ed/8c234b3d81898ada08757b42c75110ea58acb38ef0d0256ced18d57b3cf5/munin_observers-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61b6ecdf903faf857f182d9a1dd58c896a7ad52934c17d486729e1f0b99f0e79",
          "md5": "8aa03e1b1bf26bbb0fc16a3c639de14f",
          "sha256": "6c80ccacea5cb7d2e26779fc9ee41c182376e69ba3e45f9436f66a3bd208d187"
        },
        "downloads": -1,
        "filename": "munin-observers-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8aa03e1b1bf26bbb0fc16a3c639de14f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4962,
        "upload_time": "2022-02-13T08:41:38",
        "upload_time_iso_8601": "2022-02-13T08:41:38.985692Z",
        "url": "https://files.pythonhosted.org/packages/61/b6/ecdf903faf857f182d9a1dd58c896a7ad52934c17d486729e1f0b99f0e79/munin-observers-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00ed8c234b3d81898ada08757b42c75110ea58acb38ef0d0256ced18d57b3cf5",
        "md5": "07daf24c50b9a12c316d985235bcee79",
        "sha256": "7628c66e9302e8738932a955c4083c9b7f5678b271486f045bed9d3b84939be9"
      },
      "downloads": -1,
      "filename": "munin_observers-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "07daf24c50b9a12c316d985235bcee79",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5265,
      "upload_time": "2022-02-13T08:41:37",
      "upload_time_iso_8601": "2022-02-13T08:41:37.365872Z",
      "url": "https://files.pythonhosted.org/packages/00/ed/8c234b3d81898ada08757b42c75110ea58acb38ef0d0256ced18d57b3cf5/munin_observers-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61b6ecdf903faf857f182d9a1dd58c896a7ad52934c17d486729e1f0b99f0e79",
        "md5": "8aa03e1b1bf26bbb0fc16a3c639de14f",
        "sha256": "6c80ccacea5cb7d2e26779fc9ee41c182376e69ba3e45f9436f66a3bd208d187"
      },
      "downloads": -1,
      "filename": "munin-observers-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8aa03e1b1bf26bbb0fc16a3c639de14f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4962,
      "upload_time": "2022-02-13T08:41:38",
      "upload_time_iso_8601": "2022-02-13T08:41:38.985692Z",
      "url": "https://files.pythonhosted.org/packages/61/b6/ecdf903faf857f182d9a1dd58c896a7ad52934c17d486729e1f0b99f0e79/munin-observers-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}