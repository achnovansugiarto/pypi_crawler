{
  "info": {
    "author": "",
    "author_email": "Pete Kazmier <opensource@fidelity.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Utilities"
    ],
    "description": "[![ci](https://github.com/fidelity/awsrun/actions/workflows/ci.yml/badge.svg?branch=master)](https://github.com/fidelity/awsrun/actions/workflows/ci.yml)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n# awsrun & azurerun\n\nCLI tool and library to concurrently execute user-defined commands across AWS\naccounts or Azure subscriptions.\n\n> **Note**\n> As of release 3.0.0, installation has changed with the introduction of\n> optional dependencies. Previously, `pip install awsrun` would install all\n> dependencies needed for `awsrun`, `azurerun`, and all of the bundled\n> commands. You **must** now specify the optional dependencies when installing:\n> `pip install \"awsrun[aws,azure]\"`. See Installation for more details.\n\n## Overview\n\nAwsrun/azurerun is both a CLI tool and Python package that can be used to\nexecute commands concurrently over one or more AWS accounts or Azure\nsubscriptions. Commands are user-defined Python modules that implement a simple\ninterface to abstract away the complications of obtaining credentials for Boto3\nand Azure SDK sessions&mdash;especially when using SAML authentication and/or\ncross-account access in AWS. The key features of awsrun/azurerun include the\nfollowing:\n\n**Concurrent Account Processing**:\nRun a command concurrently across subset or all of your accounts/subscriptions.\nA worker pool manages the execution to ensure accounts/subscriptions are\nprocessed quickly, so you don't have to wait for them to be processed one at a\ntime. Process hundreds of accounts in a few minutes.\n\n**SAML and Cross-Account Access**:\nTired of dealing with AWS temporary STS credentials with SAML and cross-account\nauthentication? Use any of the included credential plug-ins based on your needs,\nor build your own plug-in to provide credentials for your command authors. Don't\nuse SAML? Define profiles in your AWS credentials file instead. With Azure, the\ndefault credentials are obtained via the Azure CLI or interactively via the browser.\n\n**Built-in Command for AWS CLI & Azure CLI**:\nEver wish you could run the standard AWS CLI tool or Azure CLI tool across\nmultiple accounts/subscriptions? Now you can using the included\n[`aws`](https://fidelity.github.io/awsrun/commands/aws/aws.html) or\n[`az`](https://fidelity.github.io/awsrun/commands/azure/az.html) commands. These\ncommands are simple wrappers for AWS's and Azure's CLI tools respectively, but\nwith the added benefits of using metadata to select multiple accounts as well as\nsimplified credential handling.\n\n**User-Defined Commands**:\nBuild your own commands using the powerful Boto3 SDK or Azure SDK without the\nhassle of obtaining sessions and credentials. Thanks to a simple interface,\ncommands are easy to build and can be integrated directly into the CLI with\ncustom arguments and help messages.\n\n**Metadata Enriched Accounts**:\nAccounts/subscriptions can be enriched with metadata from external sources, such\nas a corporate CMBD, via the account loader plug-in mechanism. This enables you\nto use metadata to select accounts to process rather than explicitly listing\neach account/subscription on the command line. In addition, command authors have\naccess to this metadata, so it can used while processing an account if needed.\n\n## Screenshots\n\nThese examples demonstrate the wide-range of possibilities when building your\nown awsrun & azurerun commands. While these commands are included in awsrun,\nthey use the same command library that you would if building your own. Nothing is\nspecial about these commands other than they are included in the base install of\nawsrun. You could have built these yourself.\n\n### awsrun `aws` command\n\nThis screencast illustrates the power of awsrun once it has been configured to\nyour environment using appropriate credential and account loader plug-ins. In\nthis demo, we use awsrun to gather VPC information. While we could do the same\nusing only AWS's native CLI, we would be limited to processing one account at a\ntime. Instead, we'll use awsrun and the built-in\n[`aws`](https://fidelity.github.io/awsrun/commands/aws/aws.html) command to\nexecute an AWS CLI command across multiple accounts concurrently. We'll also\nmake use of the awsrun's metadata explorer to select accounts for command\nexecution.\n\n![aws command](https://fidelity.github.io/awsrun/demo.svg)\n\nNote: The output has been obfuscated with random account numbers and\nidentifiers.\n\n### awsrun `last` command\n\nThis screenshot demonstrates the use of the\n[`last`](https://fidelity.github.io/awsrun/commands/aws/last.html) command to\ninteractively explore CloudTrail events. Don't have a simple means to view\nCloudTrail logs? Tired of using the AWS Console? The `last` command provides a\nsimple way of viewing events in one or more accounts.\n\n![last command](https://fidelity.github.io/awsrun/last.jpg)\n\n### awsrun `dx_status` command\n\nIf you manage AWS Direct Connects to provide connectivity to your on-premise\ncorporate networks, you might find the\n[`dx_status`](https://fidelity.github.io/awsrun/commands/aws/dx_status.html)\ncommand helpful. It provides an overview of Direct Connects contained within an\naccount. This includes pulling CloudWatch metrics and generating terminal-based\ngraphs using [sparklines](https://en.wikipedia.org/wiki/Sparkline) and\nASCII-based charts.\n\n![dx_status spark command](https://fidelity.github.io/awsrun/dx_status-spark.jpg)\n\n![dx_status chart command](https://fidelity.github.io/awsrun/dx_status-chart.jpg)\n\n## Installation\n\nPython 3.7 or higher is required.\n\nTo install only `awsrun`:\n\n    $ pip install \"awsrun[aws]\"\n\nTo install only `azurerun`:\n\n    $ pip install \"awsrun[azure]\"\n\nTo install both `awsrun` and `azurerun`:\n\n    $ pip install \"awsrun[aws,azure]\"\n\nIn all cases, the console scripts `awsrun` and `azurerun` are installed, but\nonly the dependencies for the specified CSPs are installed.\n\nSome of the bundled commands have additional dependencies. You will be prompted\nto install those if you use one of them. Alternatively, you can install all of\nthose ahead of time:\n\n    $ pip install \"awsrun[cmds]\"\n\nFinally, to install from source with the development dependencies:\n\n    $ git clone https://github.com/fidelity/awsrun.git\n    $ cd awsrun\n    $ pip install -e \".[aws,azure,cmds,dev]\"\n\n## AWS Quick Start\n\nOut of the box, the utility of awsrun is limited as most of its power comes from\nthe configuration of an [account loader\nplug-in](https://fidelity.github.io/awsrun/cli.html#account-plug-ins) (to\nsimplify the selection of multiple accounts) and a [credential loader\nplug-in](https://fidelity.github.io/awsrun/cli.html#credential-plug-ins) (to\nsimplify access to those accounts). With that said, however, you can still use\nit, as it will default to loading credentials from your `$HOME/.aws/credentials`\nfile. While not convenient when managing hundreds of accounts, it will suffice\nto get you started.\n\nAssume you wanted to list the EC2 instances in two accounts: 100200300400\nand 200300400100. We can use the built-in\n[`aws`](https://fidelity.github.io/awsrun/commands/aws/aws.html) command to\nexecute any [AWS CLI\ncommand](https://docs.aws.amazon.com/cli/latest/reference/index.html#cli-aws)\nacross one or more accounts concurrently. Be sure you have followed the\ninstallation instructions in the previous section. Then, create two profiles,\n`[100200300400]` and `[200300400100]`, in your local AWS credentials file\n`$HOME/.aws/credentials`. If awsrun cannot find a profile for named for the\nspecific account, it will fallback to the `[default]` profile.\n\nNote: The AWS credentials file is not part of awsrun, but it is used as the\ndefault mechanism to obtain credentials if more [advanced\noptions](https://fidelity.github.io/awsrun/plugins/creds/aws.html) have not been\nconfigured. For help on the configuration of the AWS credential file, refer to\n[AWS CLI Named\nProfiles](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html).\n\nWith the profiles defined, you can now run the following to list the EC2\ninstances in both accounts across multiple regions concurrently:\n\n    $ awsrun --account 100200300400 --account 200300400100 aws ec2 describe-instances --region us-east-1 --region us-west-2\n    2 accounts selected:\n\n    100200300400, 200300400100\n\n    Proceed (y/n)? y\n    ...\n\nIf, instead, you want to list lambda functions in those accounts:\n\n    $ awsrun --account 100200300400 --account 200300400100 aws lambda list-functions --region us-east-1 --region us-west-2\n    2 accounts selected:\n\n    100200300400, 200300400100\n\n    Proceed (y/n)? y\n    ...\n\nThere are several other [built-in\ncommands](https://fidelity.github.io/awsrun/commands/aws/index.html) that have\nbeen included in awsrun. The more interesting ones include the\n[`last`](https://fidelity.github.io/awsrun/commands/aws/last.html) command to\ninspect CloudTrail events as well as the\n[`dx_status`](https://fidelity.github.io/awsrun/commands/aws/dx_status.html)\ncommand to check the status of Direct Connect circuits. Remember, you are\nencouraged to build your own custom commands. These have been provided to show\nyou how to do so.\n\n## Azure Quick Start\n\nLet's list all the Azure VMs in two subscriptions:\n00000000-0000-0000-0000-000000000000 and 11111111-1111-1111-1111-111111111111.\nWe can use the built-in\n[`az`](https://fidelity.github.io/awsrun/commands/azure/az.html) command to\nexecute an [Azure CLI\ncommand](https://docs.microsoft.com/en-us/cli/azure/reference-index?view=azure-cli-latest)\nacross one or more subscriptions concurrently. Assuming you have already\nfollowed the installation instructions:\n\n    $ az login   # Use the Azure CLI to obtain credentials\n    $ azurerun --account 00000000-0000-0000-0000-000000000000 --account 11111111-1111-1111-1111-111111111111 az vm list --output table\n    2 accounts selected:\n\n    00000000-0000-0000-0000-000000000000, 11111111-1111-1111-1111-111111111111\n\n    Proceed (y/n)? y\n    ...\n    Name   ResourceGroup      Location    Zones\n    -----  -----------------  ----------  -----\n    vm1    rg1                centralus   1\n    vm2    rg1                eastus2     1\n\n    Name   ResourceGroup      Location    Zones\n    -----  -----------------  ----------  -----\n    vm1    rg2                centralus   1\n    vm2    rg2                eastus1     1\n    vm3    rg2                eastus2     1\n\nOut of the box, the utility of azurerun is limited as most of its power comes\nfrom the configuration of an [account loader\nplug-in](https://fidelity.github.io/awsrun/cli.html#account-plug-ins) (to\nsimplify selection of multiple accounts). Using the included\n[AzureCLI](https://fidelity.github.io/awsrun/plugins/accts/azure.html) plug-in,\nazurerun will use the Azure CLI to obtain a list of subscriptions and metadata\nassociated with those. Furthermore, assuming you use a naming convention for\nyour subscriptions, we can parse the name to pull out additional metadata. For\nexample, if your subscriptions are named \"azure-retail-prod\" and\n\"azure-retail-nonprod\", then we can use this regexp to add the \"bu\" and \"env\"\nmetadata attributes:\n\n    azure-(?P<bu>[^-]+)-(?P<env>.+)\n\nCreate the following azurerun configuration file called `.azurerun.yaml` in your\nhome directory:\n\n    Accounts:\n      plugin: awsrun.plugins.accts.azure.AzureCLI\n      options:\n        name_regexp: 'azure-(?P<bu>[^-]+)-(?P<env>.+)'\n\nNow, you can use the metadata filters to specify subscriptions instead of\nenumerating them on the azurerun command line. Here are a few examples:\n\n    # Let's see what metadata we can use\n    $ azurerun --metadata\n    bu\n    cloudName\n    env\n    homeTenantId\n    id\n    isDefault\n    name\n    state\n    tenantId\n\n    # Run the command over all subscriptions.\n    $ azurerun az vm list --output table\n    ...\n\n    # Run the command over all prod subscriptions.\n    $ azurerun --include env=prod az vm list --output table\n    ...\n\n    # Run the command over all enabled, nonprod subscriptions\n    $ azurerun --include state=Enabled --include Env=nonprod az vm list --output table\n    ...\n\nThere are several other [built-in\ncommands](https://fidelity.github.io/awsrun/commands/azure/index.html) that have\nbeen included in azurerun. Remember, you are encouraged to build your own custom\ncommands. These have been provided to show you how to do so.\n\n## Documentation\n\nawsrun includes extensive [documentation](https://fidelity.github.io/awsrun/), which\nincludes the following:\n\n- The [CLI User Guide](https://fidelity.github.io/awsrun/cli.html#cli-user-guide)\n  includes basic usage, configuration of awsrun, and how to use the account\n  loader and credential loader plug-ins to enhance the user experience on the\n  CLI.\n\n- The [Library User Guide](https://fidelity.github.io/awsrun/#api-usage)\n  includes pointers to the key documentation required to use awsrun\n  programmatically instead of via the CLI. All of the awsrun\n  [modules](https://fidelity.github.io/awsrun/#header-submodules) are also\n  extensively documented.\n\n- The [How-to Write Your Own\n  Commands](https://fidelity.github.io/awsrun/commands/#user-defined-commands)\n  guide provides everything you need to write your own custom awsrun commands.\n  This is where you'll spend a lot of time once you become familiar with the\n  capabilities of awsrun.\n\n- The [How-to Write Your Own\n  Plug-ins](https://fidelity.github.io/awsrun/#user-defined-plug-ins) section\n  includes pointers to the documentation required to build your own account\n  loader plug-in and credential plug-in if the included ones are not suitable to\n  your environment.\n\n## Change Log\n\n### v3.0.0\n\n- **BREAKING CHANGE**: Installation via `pip install awsurn` no longer installs\n  all of the dependencies for `awsrun`, `azurerun`, and the bundled commands.\n  Instead, users must now specify which optional dependendencies to install.\n  See Installation section above for details. Note: while the major version\n  was bumped, there are no API changes to awsrun. This was bumped from \"2\"\n  to \"3\" solely to bring awareness to the different installation instructions.\n\n- The terminal-based UI for the `last` command, a CloudTrail event viewer,\n  was rewritten using the amazing Textual TUI framework. With this change,\n  several new features were added to the command: dark/light modes, mouse\n  support, filtering events, exporting events, OS clipboard integration,\n  highlighting of events with errors, ability to toggle layout, as well as\n  a brand new look and feel. See screenshot above.\n\n- Modernized the python packaging to use `pyproject.toml` instead of the\n  `setup.py` style of packgaing.\n\n- Thanks to Gábor Lipták for the GitHub actions contributions. This included\n  adding the new check for PR titles to ensure they adhere to the Conventional\n  Commits standard.\n\n- Added a CONTRIBUTING document thanks to Brian Warner, a member of our\n  open-source office at Fidelity.\n\n### v2.5.2\n\n- Resolve all pylint warnings.\n\n- Update `dx_status` for `asciichart` API changes and bump version.\n\n- Allow reuse of `argparse` option flags for command authors that use the same\n  flag across multiple argparse subcommands. Previously, reuse of option flags\n  was prohibited across different instances of `argparse.ArgumentParser`.\n\n### v2.5.1\n\n- Fix tag and redeploy pypi artifacts.\n\n### v2.5.0\n\n- `last` command now appends each CloudTrail event line in non-interactive mode\n  with \"ERROR: \" and the `errorCode` from the event if present. This allows users\n  to quickly identify errors (`grep ERROR`). The CloudTrail API does not provide\n  a means to filter on errors, so it can only be done after retrieving events.\n\n- `last` command TUI now allows users to filter CloudTrail events interactively\n  via a popup (mapped to 'f' key). Users can specify one or more terms to match\n  events. Terms are logically OR'd together. A term may be prefixed with `-` to\n  exclude events matching it. For example, \"errorCode -s3\" will show only\n  events that had errors excluding S3 events.\n\n### v2.4.2\n\n- Update `kubectl` wrapper to use latest `v1beta1` Kubernetes API instead of\n  `v1alpha1` to fix compatibility issues with the latest version of Kubernetes\n  `kubectl` and latest AWS CLI tool.\n\n### v2.4.1\n\n- Require Python 3.7 or greater in `setup.py`.\n\n### v2.4.0\n\n- Remove Python 3.6 classifier from `setup.py`.\n\n- Update authentication method in `kubectl` wrapper from `aws-iam-authenticator`\n  to use the AWS CLI command `aws eks get-token`. Users will no longer need\n  to install the separate `aws-iam-authenticator` helper moving forward.\n\n- Use `KUBECONFIG` environment variable instead of `--kubeconfig` command line\n  flag when the `kubectl` wrapper command invokes the real `kubectl` command.\n  This change should be transparent to users of the `kubectl` command.\n\n### v2.3.1\n\n- Add new sample awsrun command, `dx_maint`, that queries the AWS Health API to\n  display recent and upcoming maintenance events (technically any open events)\n  on Direct Connects.\n\n- Add new sample azurerun command, `list_udrs`, that displays all User Defined\n  Routes (UDRs) in an Azure VNET.\n\n### v2.3.0\n\n- Add support for Azure. By default, installation now installs both `awsrun` as\n  well as `azurerun`. See the quick start for Azure above.\n\n### v2.2.2\n\n- Add a decorator `awsrun.runner.max_thread_limit` that can be used by command\n  authors to limit the number of concurrent executions. There are some scenarios\n  where a command author may never want their command run concurrently across\n  multiple accounts. By default, awsrun uses a thread pool of ten workers, and\n  users can override, so this gives command authors ability to limit if needed.\n\n### v2.2.1\n\n- Reorganized the documentation. The CLI user guide and reference are now part\n  of the `awsrun.cli` module documentation. The user guide on writing commands\n  has been moved to the `awsrun.commands` module. Lots of other minor edits were\n  made as part of this reorganization. Hopefully, things are easier to find with\n  the new layout.\n\n### v2.2.0\n\n- Add three new built-in commands:\n  [`console`](https://fidelity.github.io/awsrun/commands/aws/console.html),\n  [`dx_status`](https://fidelity.github.io/awsrun/commands/aws/dx_status.html),\n  and [`last`](https://fidelity.github.io/awsrun/commands/aws/last.html). Console\n  generates sign-in URLs for the AWS Console using credentials from awsrun.\n  Dx_status shows the status of Direct Connect circuits (terminal graphs too!).\n  Last provides an easier way to review CloudTrail events in both an interactive\n  and non-interactive manner.\n\n- Add the [`cloudwatch`](https://fidelity.github.io/awsrun/cloudwatch.html)\n  module to simplify the retrieval of CloudWatch metrics using bulk retrieval\n  for efficiency. This module is used be the new\n  [`dx_status`](https://fidelity.github.io/awsrun/commands/aws/dx_status.html)\n  command.\n\n- Update the included built-in commands that iterate over VPCs to filter out\n  VPCs that have been shared with an account, as opposed to being owned by the\n  account, as generally that is the behavior one is expecting.\n\n- Remove AWS CLI as a python dependency in `setup.py`. AWS has released v2 of\n  the AWS CLI, so we should not presume to install v1 via pip installation. In\n  addition, AWS has stated that the only supported installation of the AWS CLI\n  v2 is via their own bundled package installers. What does this mean for awsrun\n  users? Install the AWS CLI on your own if you plan on using the built-in `aws`\n  command.\n\n- Fonts used in documentation have been updated to use Charter and Fira Mono.\n\n### v2.1.0\n\n- Add a YAML account loader plug-in to complement the CSV and JSON account\n  loader plug-ins.\n\n- Minor clarification in user guide about the interaction between `--accounts` and\n  metadata filters (`--include`/`--exclude`).\n\n### v2.0.0\n\n- Initial open source release of awsrun from Fidelity's CloudX Network team. This\n  version abstracts the Fidelity specific integrations into plug-ins, so others\n  can take advantage of this tool, which has proven to be valuable for our teams.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "aws,azure,cli,command runner",
    "license": "Copyright 2019 FMR LLC  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "awsrun",
    "package_url": "https://pypi.org/project/awsrun/",
    "platform": null,
    "project_url": "https://pypi.org/project/awsrun/",
    "project_urls": {
      "homepage": "https://github.com/fidelity/awsrun"
    },
    "release_url": "https://pypi.org/project/awsrun/3.0.0/",
    "requires_dist": [
      "PyYAML (>=3.10)",
      "requests",
      "requests-file",
      "requests-ntlm",
      "awsrun[aws,azure,cmds,dev] ; extra == 'all'",
      "boto3 (>=1.12.39) ; extra == 'aws'",
      "bs4 ; extra == 'aws'",
      "azure-identity ; extra == 'azure'",
      "azure-mgmt-network ; extra == 'azure'",
      "awsrun[dx-maint,dx-status,last] ; extra == 'cmds'",
      "black ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "freezegun ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "pdoc3 ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-mock ; extra == 'dev'",
      "colorama ; extra == 'dx-maint'",
      "colorama ; extra == 'dx-status'",
      "asciichartpy (>=1.5.25) ; extra == 'dx-status'",
      "pysparklines (>=1.0) ; extra == 'dx-status'",
      "pyperclip ; extra == 'last'",
      "colorama ; extra == 'last'",
      "rich ; extra == 'last'",
      "textual (==0.16) ; extra == 'last'"
    ],
    "requires_python": ">=3.7",
    "summary": "CLI and library to execute commands over one or more AWS or Azure accounts concurrently.",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17434683,
  "releases": {
    "2.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99dfa83e910072eebbccbaae2e6dd9cafb0a2ac028f73cd8c15ee4ccb30c646b",
          "md5": "ece49b10c884ebdb8368494c3ad94e12",
          "sha256": "80a9b9118c2f684c9dd8b2afc06feacd01d40d04905c756646903029c940a313"
        },
        "downloads": -1,
        "filename": "awsrun-2.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ece49b10c884ebdb8368494c3ad94e12",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 164918,
        "upload_time": "2022-08-09T20:05:58",
        "upload_time_iso_8601": "2022-08-09T20:05:58.944877Z",
        "url": "https://files.pythonhosted.org/packages/99/df/a83e910072eebbccbaae2e6dd9cafb0a2ac028f73cd8c15ee4ccb30c646b/awsrun-2.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fc45b765f66d79ebc4e9c0e78fb982a85045eb64834c0c5fe380ed017c9cbcf",
          "md5": "4b0022a4c6177aa33a6a5b02155e6fc8",
          "sha256": "16ca2ef769bfd547fcd49c5002e5fcb48602c7e6e2325c3ad080a5e994547c7d"
        },
        "downloads": -1,
        "filename": "awsrun-2.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4b0022a4c6177aa33a6a5b02155e6fc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 142255,
        "upload_time": "2022-08-09T20:06:01",
        "upload_time_iso_8601": "2022-08-09T20:06:01.378228Z",
        "url": "https://files.pythonhosted.org/packages/8f/c4/5b765f66d79ebc4e9c0e78fb982a85045eb64834c0c5fe380ed017c9cbcf/awsrun-2.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f909f124d6ce6e05bc8dbb88a9d0eb1b6d7831dee1fb85b623b41282531e511a",
          "md5": "cc63fcb22e698f50ba2a5ad13dade802",
          "sha256": "fd6aece3f6280ced3432ccbb35a0a52ffc9a713cc50b66395244c6f4c0038315"
        },
        "downloads": -1,
        "filename": "awsrun-2.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc63fcb22e698f50ba2a5ad13dade802",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 165021,
        "upload_time": "2022-08-09T22:39:41",
        "upload_time_iso_8601": "2022-08-09T22:39:41.108630Z",
        "url": "https://files.pythonhosted.org/packages/f9/09/f124d6ce6e05bc8dbb88a9d0eb1b6d7831dee1fb85b623b41282531e511a/awsrun-2.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3b314950006aae613a0fa13bae97f6cd1c510e6d8f9410a5d7e9841e2d84bb7",
          "md5": "6e58171ebc93da68f1f1a8d3579131e9",
          "sha256": "2501fa5bafed79e647e2ad3be4209b8e29adb26f626f06c2e472c4b1120cdece"
        },
        "downloads": -1,
        "filename": "awsrun-2.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6e58171ebc93da68f1f1a8d3579131e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 142505,
        "upload_time": "2022-08-09T22:39:43",
        "upload_time_iso_8601": "2022-08-09T22:39:43.035917Z",
        "url": "https://files.pythonhosted.org/packages/d3/b3/14950006aae613a0fa13bae97f6cd1c510e6d8f9410a5d7e9841e2d84bb7/awsrun-2.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "799a66941743cab7d9781de83baacc3264b9da3622edcca02c7da9c2eb632d8d",
          "md5": "f2a83b422b30d1ac6b5d2a6a0b928b5d",
          "sha256": "10ad3c40282b5cd54694820fd39f65039fe688f9a880c7f6c49ee269486bab07"
        },
        "downloads": -1,
        "filename": "awsrun-2.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2a83b422b30d1ac6b5d2a6a0b928b5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 165022,
        "upload_time": "2022-09-01T19:52:31",
        "upload_time_iso_8601": "2022-09-01T19:52:31.024288Z",
        "url": "https://files.pythonhosted.org/packages/79/9a/66941743cab7d9781de83baacc3264b9da3622edcca02c7da9c2eb632d8d/awsrun-2.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e15e0632aaec67c4759701ccf49725941ce622f810a0b8f02ea6f7425b0cd867",
          "md5": "66b93dafbf5394720bbf1e82dc2fd99c",
          "sha256": "6950e12bc00a9caeae2de31828f7cd2b54272055561577982571f4d4f3e5e508"
        },
        "downloads": -1,
        "filename": "awsrun-2.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "66b93dafbf5394720bbf1e82dc2fd99c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 142833,
        "upload_time": "2022-09-01T19:52:32",
        "upload_time_iso_8601": "2022-09-01T19:52:32.285943Z",
        "url": "https://files.pythonhosted.org/packages/e1/5e/0632aaec67c4759701ccf49725941ce622f810a0b8f02ea6f7425b0cd867/awsrun-2.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e41661d2d96aee16f5c64c18ae843ffdcc17a6606b10b90e4d6c4f7a431aa757",
          "md5": "12508c16862c8f34f5ff3cbb30d20485",
          "sha256": "1852fa98a7bd6fc232193de6bea11829de2c69d1b8df4249f9962babeb4bd411"
        },
        "downloads": -1,
        "filename": "awsrun-2.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12508c16862c8f34f5ff3cbb30d20485",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 165797,
        "upload_time": "2022-09-01T20:07:10",
        "upload_time_iso_8601": "2022-09-01T20:07:10.502745Z",
        "url": "https://files.pythonhosted.org/packages/e4/16/61d2d96aee16f5c64c18ae843ffdcc17a6606b10b90e4d6c4f7a431aa757/awsrun-2.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac72ee9a29254ac6fa9ae1727369b80d19ef5f22ef56f09c52f752cc77e662b5",
          "md5": "a5835208dc957b79e5682cba78f47783",
          "sha256": "28a0b80db71d876b4bd51c6c5221a2490294f2c83cb697391459d76aca4c6310"
        },
        "downloads": -1,
        "filename": "awsrun-2.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a5835208dc957b79e5682cba78f47783",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 143638,
        "upload_time": "2022-09-01T20:07:12",
        "upload_time_iso_8601": "2022-09-01T20:07:12.443118Z",
        "url": "https://files.pythonhosted.org/packages/ac/72/ee9a29254ac6fa9ae1727369b80d19ef5f22ef56f09c52f752cc77e662b5/awsrun-2.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d0a412e8db544c51c2b6a711f0866673c11f1645e4be450aad507eab7941cd8",
          "md5": "4954a71161be50bf3a87c9b53e6e1480",
          "sha256": "a716ce8b8f446b1d0c43150dc553c4a35c9fa7966753041862ad0dd5df3f7524"
        },
        "downloads": -1,
        "filename": "awsrun-2.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4954a71161be50bf3a87c9b53e6e1480",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 165171,
        "upload_time": "2022-09-23T16:55:30",
        "upload_time_iso_8601": "2022-09-23T16:55:30.952588Z",
        "url": "https://files.pythonhosted.org/packages/1d/0a/412e8db544c51c2b6a711f0866673c11f1645e4be450aad507eab7941cd8/awsrun-2.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5ace23812ed3fa64f360c438e46e0cfb4154fa59e2e536f27f2eeabcce8501c",
          "md5": "c197cd2cbb08672f51b70b46dbecad81",
          "sha256": "6e4e4cae82f2fc30a5475fe23013106cb4aa35ed2b234280a68352f89f89d5cc"
        },
        "downloads": -1,
        "filename": "awsrun-2.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c197cd2cbb08672f51b70b46dbecad81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 143193,
        "upload_time": "2022-09-23T16:55:32",
        "upload_time_iso_8601": "2022-09-23T16:55:32.308983Z",
        "url": "https://files.pythonhosted.org/packages/d5/ac/e23812ed3fa64f360c438e46e0cfb4154fa59e2e536f27f2eeabcce8501c/awsrun-2.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4b5aa6393acd95608e61d307a2e7c10271b30fffe806d571e00b66010a55c34",
          "md5": "9dca8b33aca4565da5215c32cbbb55c4",
          "sha256": "dd62fc29d75e35345c2cf2d84c4523d3849456553f2ea23416738d40b85e7058"
        },
        "downloads": -1,
        "filename": "awsrun-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9dca8b33aca4565da5215c32cbbb55c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 174412,
        "upload_time": "2023-03-24T18:34:00",
        "upload_time_iso_8601": "2023-03-24T18:34:00.708246Z",
        "url": "https://files.pythonhosted.org/packages/f4/b5/aa6393acd95608e61d307a2e7c10271b30fffe806d571e00b66010a55c34/awsrun-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1e68b08c46d0dde9cf5dd44f0c690cd01270e57be1d45ca94ba6c7d25667efc",
          "md5": "afda947888012856d26f03cd99d62093",
          "sha256": "0f74ac2c5e8773b8c49867bdcc66a4511fb411bd9b4f5dfcc8dac1aef73db06d"
        },
        "downloads": -1,
        "filename": "awsrun-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "afda947888012856d26f03cd99d62093",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 153317,
        "upload_time": "2023-03-24T18:34:02",
        "upload_time_iso_8601": "2023-03-24T18:34:02.585687Z",
        "url": "https://files.pythonhosted.org/packages/b1/e6/8b08c46d0dde9cf5dd44f0c690cd01270e57be1d45ca94ba6c7d25667efc/awsrun-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f4b5aa6393acd95608e61d307a2e7c10271b30fffe806d571e00b66010a55c34",
        "md5": "9dca8b33aca4565da5215c32cbbb55c4",
        "sha256": "dd62fc29d75e35345c2cf2d84c4523d3849456553f2ea23416738d40b85e7058"
      },
      "downloads": -1,
      "filename": "awsrun-3.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9dca8b33aca4565da5215c32cbbb55c4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 174412,
      "upload_time": "2023-03-24T18:34:00",
      "upload_time_iso_8601": "2023-03-24T18:34:00.708246Z",
      "url": "https://files.pythonhosted.org/packages/f4/b5/aa6393acd95608e61d307a2e7c10271b30fffe806d571e00b66010a55c34/awsrun-3.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b1e68b08c46d0dde9cf5dd44f0c690cd01270e57be1d45ca94ba6c7d25667efc",
        "md5": "afda947888012856d26f03cd99d62093",
        "sha256": "0f74ac2c5e8773b8c49867bdcc66a4511fb411bd9b4f5dfcc8dac1aef73db06d"
      },
      "downloads": -1,
      "filename": "awsrun-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "afda947888012856d26f03cd99d62093",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 153317,
      "upload_time": "2023-03-24T18:34:02",
      "upload_time_iso_8601": "2023-03-24T18:34:02.585687Z",
      "url": "https://files.pythonhosted.org/packages/b1/e6/8b08c46d0dde9cf5dd44f0c690cd01270e57be1d45ca94ba6c7d25667efc/awsrun-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}