{
  "info": {
    "author": "4gboframram",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia :: Graphics",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Python-Gelbooru\n## An async (and soon sync) wrapper for the Gelbooru API\n\nEverything starts with the `AsyncGelbooru` class. It can be used as a context manager.\nHere's an example before showing the full docs\n\n```py\nimport asyncio\nfrom python_gelbooru import AsyncGelbooru\n\napi_key, user_id = (\"haha_not\", \"telling_you\")\nasync def main():\n    async with AsyncGelbooru(api_key=api_key,\n                             user_id=user_id) as gel:\n        yuyu = await gel.search_posts(['saigyouji yuyuko', 'rating:explicit'], limit=10, random=True)\n       \n\n        tasks = [i.async_download(f\"./arts/{i.id}\") for i in yuyu]\n        await asyncio.gather(*tasks)\n\nif __name__ == \"__main__\":\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n```\nThis downloads 10 random arts with the tags `saigyouji_yuyuko` that are rated explicit to the `arts` folder and uses the id of the post for the file name (and automatically uses the correct extension)\n\n## Classes\nThe documentation of all of the attributes, methods and properties of these classes can be found here, or in the docstrings.\n- `AsyncGelbooru` - The base class used for interacting with Gelbooru asynchronously.\n  The other classes should almost never be constructed except from one of this class's methods.\n- `Post` - Represents a Gelbooru post.\n- `Tag` - Represents a Gelbooru tag\n- `Comment` - Represents a Gelbooru Comment\n\n### AsyncGelbooru\nAttributes\n- `AsyncGelbooru.session: aiohttp.ClientSession`\n    - The session this instance uses to fetch everything on Gelbooru. The constructor creates a new session every time the class is created, and not every time a function is called.\n\nMethods\n- `def __init__(self, *, api_key: Optional[str] = None, user_id: Optional[str] = None)`\n    - If values are provided to the constructor, it will represent a session that has a verified API key and user id.\n\n    - **Note:** Results will not be changed if the API key or user id is invalid, just that you might be more rate limited more often.\n\n-  `async def search_posts(self, tags: Iterable[str], *, exclude_tags: Iterable[str] = None,\n   limit=1, page_number: int = 0, random: bool = False\n   ) -> Tuple[Post, ...]`\n    - Searches Gelbooru with the tags and excluded tags provided.\n      These tags are not `Tag` objects, but you can call `str()` on the `Tag` object to get the tag that goes in the iterable.\n\n    - The strings that go in both of the `tags` and `exclude_tags` parameters can have spaces, improper capitalization. They will be properly formatted during search.\n    - If `random` is True: returns random posts.\n    - `page_number` is with respect to the limit.\n    - Even though the Gelbooru API returns 100 posts by default when a limit isn't provided, this library returns 1 to save from some disasters.\n\n-  `async def get_post(self, *, post_id: Optional[int] = None,\n   md5: Optional[str] = None) -> Tuple[Post, ...]`\n    - Grabs a post either by id or md5 hash.\n        - The md5 hash is also the default file name for an image, so if you have a random image from Gelbooru, you can find its source.\n    - Always returns a tuple. Almost always, these tuples contain a single element, or no elements if no matching posts can be found.\n    - `post_id` and `md5` are mutually exclusive and passing both in will raise a `ValueError`, along with not passing either in.\n\n- `async def get_post_comments(self, post: Post) -> Tuple[Comment, ...]`\n    - Gets all comments on a post.\n\n- `async def search_tags(self, names: Optional[Iterable[str]] = None, limit: int = 1, *,\n  name_pattern: Optional[str] = None,\n  after_id: Optional[int] = None,\n  order: Optional[Literal['asc', 'desc']] = None,\n  order_by: Optional[Literal['date', 'count', 'name']] = None) -> Tuple[Tag, ...]`\n    - Search the Gelbooru Tag List for tags.\n    - `names`: An `Iterable` of strings that contain the names of tags to get.\n      Can contain spaces and improper capitalization, as that becomes fixed.\n    - `limit`: The maximum amount of tags to return\n    - `name_pattern`: A wildcard-based search for searching for tags. `_` represents a single character wildcard,\n      and `%` represents a multi-character wildcard.\n      DO NOT TRY TO USE REGEX. IT WILL NOT END WELL.\n    - `after_id`: Returns only posts with an id greater than this.\n      Not compatible with `name_pattern`, due to something weird.\n    - `order`: Whether to sort tags in ascending or descending order\n    - `order_by`: What to sort tags by\n- `async def get_tag(self, *, name: Optional[str] = None, tag_id: Optional[int] = None) -> Tag`\n    - Get a tag by either name or id\n- `async def close(self) -> None`\n    - Closes the session\n\n### Post\n\nAttributes\n- Represents a Gelbooru post. Should not be constructed manually.\n- Check out the docstring for the list of attributes\n\nMethods\n- `async def async_download(self, path: Optional[str] = None, *,\n  session: Optional[aiohttp.ClientSession] = None,\n  stream: Optional[BinaryIO] = None):`\n    - Downloads the post asynchronously either to a file, or a stream\n    -  You can use a custom aiohttp `session` to download the file\n\n- `def sync_download(self, path: Optional[str] = None, *,\n  session: Optional[requests.Session] = None,\n  stream: Optional[BinaryIO] = None):`\n    - Same as `async_download`, but is synchronous\n\nMagic Methods\n- `def __str__(self)`\n    - Casting a `Post` to a string returns its `file_url`\n\n### Comment\n- Attributes can be found in the docstrings\n\nMagic Methods\n- `def __str__(self)`\n    - Casting a `Comment` to a string returns `[author]: [content]`\n\n### Tag\n- Attributes can be found in the docstrings\n\n- `def __str__(self)`\n    - Casting a `Tag` to a string returns the tag name\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/4gboframram/Python-Gelbooru",
    "keywords": "gelbooru,anime,artwork,anime artwork,booru",
    "license": "gpl-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-gelbooru",
    "package_url": "https://pypi.org/project/python-gelbooru/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-gelbooru/",
    "project_urls": {
      "Homepage": "https://github.com/4gboframram/Python-Gelbooru"
    },
    "release_url": "https://pypi.org/project/python-gelbooru/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python-Gelbooru is an unofficial and lightweight asynchronous wrapper for the Gelbooru API.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14364046,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03a92eec9798b7808cde756db74515f495593f7fb45236b4470615341218ce21",
          "md5": "49adf05c02cd726769b9e9349a22b0da",
          "sha256": "b55031a77866d8ae22a1f47e85930131ccd7aff1d5079583b05fbeb803f73c19"
        },
        "downloads": -1,
        "filename": "python_gelbooru-0.1.0-py3.9.egg",
        "has_sig": false,
        "md5_digest": "49adf05c02cd726769b9e9349a22b0da",
        "packagetype": "bdist_egg",
        "python_version": "0.1.0",
        "requires_python": null,
        "size": 18485,
        "upload_time": "2021-09-07T20:42:09",
        "upload_time_iso_8601": "2021-09-07T20:42:09.298244Z",
        "url": "https://files.pythonhosted.org/packages/03/a9/2eec9798b7808cde756db74515f495593f7fb45236b4470615341218ce21/python_gelbooru-0.1.0-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0acca11fac59c69e516c007bf4128927b21185bd2ecce80a6269036cc83c22cc",
          "md5": "8bbde396dfa3054ab0ca6481df769215",
          "sha256": "c6c482ab8f85003f1b71c0c8df1200df7ac1e5b77ba646eed19034b332e390a6"
        },
        "downloads": -1,
        "filename": "python_gelbooru-0.1.1-py3.10.egg",
        "has_sig": false,
        "md5_digest": "8bbde396dfa3054ab0ca6481df769215",
        "packagetype": "bdist_egg",
        "python_version": "0.1.1",
        "requires_python": null,
        "size": 18602,
        "upload_time": "2022-07-07T12:37:07",
        "upload_time_iso_8601": "2022-07-07T12:37:07.597658Z",
        "url": "https://files.pythonhosted.org/packages/0a/cc/a11fac59c69e516c007bf4128927b21185bd2ecce80a6269036cc83c22cc/python_gelbooru-0.1.1-py3.10.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ec89c5941c39b4f4749bace60dfa22c727896a82ff7b3fc70a3bd32a3f787db",
          "md5": "9d2f90887926e99a0a9fce284b384eac",
          "sha256": "b4af97e555344e3e06333afe7ec24eb2449e9f1947b8a71f6584bcb58a60a7d0"
        },
        "downloads": -1,
        "filename": "python_gelbooru-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9d2f90887926e99a0a9fce284b384eac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10888,
        "upload_time": "2021-09-07T21:24:21",
        "upload_time_iso_8601": "2021-09-07T21:24:21.255364Z",
        "url": "https://files.pythonhosted.org/packages/8e/c8/9c5941c39b4f4749bace60dfa22c727896a82ff7b3fc70a3bd32a3f787db/python_gelbooru-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e67c658bde0ff84524978bfe1e644f6caabadb2c0b2a2789ab6d3163fe1504c",
          "md5": "38d28112ecdc18b20be4480c1a25bf71",
          "sha256": "ecd39f576f1c83d14a28e460140f151a661d4d815274f8a042adef58d3121dca"
        },
        "downloads": -1,
        "filename": "python_gelbooru-0.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "38d28112ecdc18b20be4480c1a25bf71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10967,
        "upload_time": "2021-09-07T21:32:43",
        "upload_time_iso_8601": "2021-09-07T21:32:43.748777Z",
        "url": "https://files.pythonhosted.org/packages/7e/67/c658bde0ff84524978bfe1e644f6caabadb2c0b2a2789ab6d3163fe1504c/python_gelbooru-0.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44a603a4311b266163d0e29d81c41e56ce6a822edcb3ef9f19217347aa5d1d06",
          "md5": "7c936219b0cea5b472f84c04a49b6f42",
          "sha256": "8b62e0f0279b90637b1b7672c13676bd9c989a9ac2552c3ef8e02d55b1114eb4"
        },
        "downloads": -1,
        "filename": "python_gelbooru-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7c936219b0cea5b472f84c04a49b6f42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10978,
        "upload_time": "2022-07-07T12:40:07",
        "upload_time_iso_8601": "2022-07-07T12:40:07.341591Z",
        "url": "https://files.pythonhosted.org/packages/44/a6/03a4311b266163d0e29d81c41e56ce6a822edcb3ef9f19217347aa5d1d06/python_gelbooru-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44a603a4311b266163d0e29d81c41e56ce6a822edcb3ef9f19217347aa5d1d06",
        "md5": "7c936219b0cea5b472f84c04a49b6f42",
        "sha256": "8b62e0f0279b90637b1b7672c13676bd9c989a9ac2552c3ef8e02d55b1114eb4"
      },
      "downloads": -1,
      "filename": "python_gelbooru-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7c936219b0cea5b472f84c04a49b6f42",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10978,
      "upload_time": "2022-07-07T12:40:07",
      "upload_time_iso_8601": "2022-07-07T12:40:07.341591Z",
      "url": "https://files.pythonhosted.org/packages/44/a6/03a4311b266163d0e29d81c41e56ce6a822edcb3ef9f19217347aa5d1d06/python_gelbooru-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}