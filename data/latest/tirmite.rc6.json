{
  "info": {
    "author": "Adam Taranto",
    "author_email": "adam.taranto@anu.edu.au",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n<p align=\"center\">\n  <img src=\"docs/tirmite_hexlogo.jpg\"  width=\"350\" height=\"350\" title=\"tirmite_hex\">\n</p>\n\n# TIRmite\n\nBuild and map profile Hidden Markov Models for Terminal Inverted Repeat \nfamilies (TIR-pHMMs) to genomic sequences for annotation of MITES and complete \nDNA-Transposons with variable internal sequence composition.  \n\n\nTIRmite is packaged with *tSplit* a tool for extraction of terminal repeats \nfrom complete transposons.\n\nCurrent version: 1.1.4\n\n# Table of contents\n\n* [About TIRmite](#about-tirmite)\n* [Algorithm overview](#algorithm-overview)\n* [Options and usage](#options-and-usage)\n    * [Installing TIRmite](#installing-tirmite)\n    * [Example usage](#example-usage)\n    * [Standard options](#standard-options)\n    * [Custom DNA matrices](#custom-dna-matrices)\n* [Additional tools](additional-tools)\n    * [tSplit](tsplit)\n    * [tSplit algorithm overview](tsplit-algorithm-overview)\n    * [tSplit options and usage](tsplit-options-and-usage)\n* [Issues](#issues)\n* [License](#license)\n* [Logo](#logo)\n\n\n## About TIRmite\n\nTIRmite will use profile-HMM models of Terminal Inverted Repeats (TIRs) for \ngenome-wide annotation of TIR families. These can be provided by the user or\nbuilt from aligned TIRs oriented as 5' outer edge --> 3' inner edge.\n\nThree classes of output are produced:\n  1. All significant TIR hit sequences written to fasta (per query HMM).\n  2. Candidate elements comprised of paired TIRs are written to fasta (per query HMM).\n  3. Genomic annotations of candidate elements and, optionally, TIR hits \n  (paired and unpaired) are written as a single GFF3 file.\n\n## Algorithm overview\n\n  1. Use nhmmer genome with TIR-pHMM.\n  2. Import all hits below *--maxeval* threshold.\n  3. For each significant TIR match identify candidate partners, where:  \n    * Is on the same sequence.  \n    * Hit is in complementary orientation.  \n    * Distance is <= *--maxdist*.  \n    * Hit length is >= model length \\* *--mincov*.  \n  4. Rank candidate partners by distance downstream of positive-strand hits, and upstream of negative-strand hits.\n  5. Pair reciprocal top candidate hits.\n  6. For unpaired hits, find first unpaired candidate partner and check for reciprocity.\n  7. If the first unpaired candidate is non-reciprocal, check for 2nd-order reciprocity (is outbound top-candidate of current candidate reciprocal.)\n  8. Iterate steps 6-7 until all TIRs are paired OR number of iterations without new pairing exceeds *--stableReps*.\n\n## Options and usage\n\n### Installing TIRmite\n\nTIRmite requires Python >= v3.6\n\nDependencies:  \n  - TIR-pHMM build and search\n    * [HMMER3](http://hmmer.org)\n  - Extract terminal repeats from predicted TEs\n    * [pymummer](https://pypi.python.org/pypi/pymummer) version >= 0.10.3 with wrapper for nucmer option *--diagfactor*.\n    * [MUMmer](http://mummer.sourceforge.net/)\n    * [BLAST+](ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/) (Optional)\n\nInstallation options:  \n\nClone from this repository and install as a local Python package.\n\n```bash\n% git clone https://github.com/Adamtaranto/TIRmite.git && cd TIRmite && pip install -e .\n```\n\nInstall from PyPi.\n\n```bash\n% pip install tirmite\n```\n\nInstall from Bioconda.\n```bash\n% conda install -c bioconda tirmite\n```\n\nTest installation.\n\n```bash\n# Print version number and exit.\n% tirmite --version\ntirmite 1.1.4\n\n# Get usage information\n% tirmite --help\n```\n\n### Example usage\n\nReport all hits and valid pairings of TIR_A in target.fasta (interval <= 10000, hits cover > 40% len of hmm model), \nand write GFF3 annotation file.\n\n```bash\n% tirmite --genome target.fasta --hmmFile TIR_A.hmm --gffOut TIR_elements_in_Target.gff3 --maxdist 10000 --mincov 0.4\n```\n\n### Standard options\n\nRun `tirmite --help` to view the program's most commonly used options:\n\n```\ntirmite [-h] [--version] --genome GENOME [--hmmDir HMMDIR]\n               [--hmmFile HMMFILE] [--alnDir ALNDIR] [--alnFile ALNFILE]\n               [--alnFormat {clustal,fasta,nexus,phylip,stockholm}]\n               [--pairbed PAIRBED] [--stableReps STABLEREPS] [--outdir OUTDIR]\n               [--prefix PREFIX] [--nopairing] [--gffOut]\n               [--reportTIR {None,all,paired,unpaired}] [--padlen PADLEN]\n               [--keeptemp] [-v] [--cores CORES] [--maxeval MAXEVAL]\n               [--maxdist MAXDIST] [--nobias] [--matrix MATRIX]\n               [--mincov MINCOV] [--hmmpress HMMPRESS] [--nhmmer NHMMER]\n               [--hmmbuild HMMBUILD]\n\nInfo: \n  -h, --help            Show this help message and exit\n  --version             Show program's version number and exit\n  \nInput options:\n  --genome              Path to target genome that will be queried with HMMs.\n                          Note: Sequence names must be unique. (required)\n  --hmmDir              Directory containing pre-prepared TIR-pHMMs.\n  --hmmFile             Path to single TIR-pHMM file. Incompatible with \"--hmmDir\".\n  --alnDir              Path to directory containing only TIR alignments to be\n                          converted to HMM.\n  --alnFile             Provide a single TIR alignment to be converted to HMM.\n                          Incompatible with \"--alnDir\".\n  --alnFormat           Alignments provided with \"--alnDir\" or \"--alnFile\" are\n                          all in this format.\n                          Choices=[\"clustal\",\"fasta\",\"nexus\",\"phylip\", \"stockholm\"]\n  --pairbed             If set TIRmite will preform pairing on TIRs from\n                          custom bedfile only.\n\nPairing heuristics:\n  --stableReps          Number of times to iterate pairing procedure when no\n                         additional pairs are found AND remaining unpaired hits > 0.\n                         (Default = 0)\n\nOutput and housekeeping:\n  --outdir OUTDIR       All output files will be written to this directory.\n  --prefix PREFIX       Add prefix to all TIRs and Paired elements detected in\n                          this run. Useful when running same TIR-pHMM against\n                          many genomes.\n                          (Default = None)\n  --nopairing           If set, only report TIR-pHMM hits. Do not attempt\n                          pairing.\n                          (Default = False)\n  --gffOut              If set report features as prefix.gff3. File saved to\n                          outdir.\n                          (Default = False)\n  --reportTIR           Options for reporting TIRs in GFF annotation file.\n                          Choices=[None,'all','paired','unpaired']\n                          (Default = 'all')\n  --padlen              Extract x bases either side of TIR when writing TIRs to fasta.\n                          (Default = None)\n  --keeptemp            If set do not delete temp file directory.\n                          (Default = False)\n  -v, --verbose         Set syscall reporting to verbose.\n  \nHMMER options:\n  --cores               Set number of cores available to hmmer software.\n  --maxeval             Maximum e-value allowed for valid hit.\n                          (Default = 0.001)\n  --maxdist             Maximum distance allowed between TIR candidates to\n                          consider valid pairing.\n                          (Default = None)\n  --nobias              Turn OFF bias correction of scores in nhmmer.\n                          (Default = False)\n  --matrix              Use custom DNA substitution matrix with nhmmer.\n  --mincov              Minimum valid hit length as prop of model length.\n                          (Default = 0.5)\n\nNon-standard HMMER paths:\n  --hmmpress            Set location of hmmpress if not in PATH.\n  --nhmmer              Set location of nhmmer if not in PATH.\n  --hmmbuild            Set location of hmmbuild if not in PATH.\n```\n\n### Custom DNA Matrices\n\nnhmmer can be supplied with custom DNA score matrices for assessing hmm match scores. \nStandard NCBI-BLAST matrices such as NUC.4.4 are compatible. (See: ftp://ftp.ncbi.nlm.nih.gov/blast/matrices/NUC.4.4) \n\n## Additional tools\n\n### tSplit\n\nExtract Terminal Inverted Repeats (TIRs) DNA transposons.  \n\n### tSplit algorithm overview\n\ntSplit attempts to identify terminal repeats in transposable elements by \nfirst aligning each element to itself using nucmer, and then applying a set of \ntuneable heuristics to select an alignment pair most likely to represent a TIR.  \n\n  1. Exclude all diagonal/self-matches\n  2. If tsplit-TIR: Retain only alignment pairs on opposite strands (inverse repeats)\n  3. Retain pairs for which the 5' match begins within x bases of element start\n     and whose 3' match ends within x bases of element end\n  4. Exclude alignment pairs which overlap (potential SSRs)\n  5. If multiple candidates remain select alignment pair with largest internal segment \n  (i.e. closest to element ends)\n\n### tSplit options and usage  \n\n### tSplit example usage  \n\nFor each element in *dna-transposons.fasta* split into internal and external (TIR) segments. \nSplit segments will be written to *TIR_split_TE-splitter_output.fasta* with suffix \"_I\" for \ninternal or \"_TIR\" for external segments. TIRs must be at least 10bp in length and share 80% \nidentity and occur within 10bp of each end of the input element. Additionally, synthetic \nMITEs will be constructed by concatenation of left and right TIRs, with internal segments \nexcised.\n\n\n```bash\n% tsplit-TIR -i dna-transposons.fasta -p TIR_split\n```\n\n### tSplit options\n\nRun `tsplit-TIR --help` to view the programs' most commonly used \noptions:\n\n```\nUsage: tsplit-TIR [-h] -i INFILE [-p PREFIX] [-d OUTDIR]\n                        [--splitmode {all,split,internal,external,None}]\n                        [--makemites] [--keeptemp] [-v] [-m MAXDIST]\n                        [--minid MINID] [--minterm MINTERM] [--minseed MINSEED]\n                        [--diagfactor DIAGFACTOR] [--method {blastn,nucmer}]\n\nHelp:\n  -h, --help         Show this help message and exit.\n\nInput:\n  -i, --infile       Multifasta containing complete elements. \n                       (Required)  \n\nOutput:\n  -p, --prefix       All output files begin with this string.  (Default:[infile basename])  \n  -d, --outdir       Write output files to this directory. (Default: cwd)  \n  --keeptemp         If set do not remove temp directory on completion.\n  -v, --verbose      If set, report progress.\n\nReport settings:\n  --splitmode        Options: {all,split,internal,external,None} \n                       all = Report input sequence as well as internal and external segments.  \n                       split = Report internal and external segments after splitting.  \n                       internal = Report only internal segments.  \n                       external = Report only terminal repeat segments.  \n                       None = Only report synthetic MITES (when --makemites is also set).  \n                       (Default: split)  \n  --makemites        Experimental function: Attempt to construct synthetic MITE sequences from TIRs by concatenating \n                       5' and 3' TIRs. Available only in 'tsplit-TIR' mode \n\nAlignment settings:\n  --method          Select alignment tool. Note: blastn may perform better on very short high-identity TRs,\n                      while nucmer is more robust to small indels.\n                      Options: {blastn,nucmer} \n                      (Default: nucmer)\n  --minid           Minimum identity between terminal repeat pairs. As float. \n                      (Default: 80.0)  \n  --minterm         Minimum length for a terminal repeat to be considered.  \n                      Equivalent to nucmer \"--mincluster\" \n                      (Default: 10)  \n  -m, --maxdist     Terminal repeat candidates must be no more than this many bases from ends of an input element. \n                      Note: Increase this value if you suspect that your element is nested within some flanking sequence. \n                      (Default: 10)\n  --minseed         Minimum length of a maximal exact match to be included in final match cluster. \n                      Equivalent to nucmer \"--minmatch\". \n                      (Default: 5)\n  --diagfactor      Maximum diagonal difference factor for clustering of matches within nucmer, \n                      i.e. diagonal difference / match separation \n                      (default 0.20) \n                      Note: Increase value for greater tolerance of indels between terminal repeats.\n```\n\n## Issues\n\nSubmit feedback to the [Issue Tracker](https://github.com/Adamtaranto/TIRmite/issues)\n\n## License\n\nSoftware provided under MIT license.\n\n## Logo\n\nTermite hex-sticker was designed by [@Super_Coleider](www.instagram.com/Super_Coleider).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Adamtaranto/TIRmite",
    "keywords": "Transposon,TIR,MITE,TE,HMM",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tirmite",
    "package_url": "https://pypi.org/project/tirmite/",
    "platform": "",
    "project_url": "https://pypi.org/project/tirmite/",
    "project_urls": {
      "Homepage": "https://github.com/Adamtaranto/TIRmite"
    },
    "release_url": "https://pypi.org/project/tirmite/1.1.4/",
    "requires_dist": null,
    "requires_python": ">= 3.6",
    "summary": "Map TIR-pHMM models to genomic sequences for annotation of MITES and complete DNA-Transposons.",
    "version": "1.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6357963,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "718124ba7369f03577d525109477d2e45b89c2b580914b3b2914fc796aebe442",
          "md5": "1bd8bb0b4ea9886566d6372f5462a531",
          "sha256": "cbf710da9b36b6338ab21802d2c2e300b6d61d517144223f7b75bd46cfaf2ede"
        },
        "downloads": -1,
        "filename": "tirmite-0.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "1bd8bb0b4ea9886566d6372f5462a531",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16431,
        "upload_time": "2017-09-01T02:53:43",
        "upload_time_iso_8601": "2017-09-01T02:53:43.073306Z",
        "url": "https://files.pythonhosted.org/packages/71/81/24ba7369f03577d525109477d2e45b89c2b580914b3b2914fc796aebe442/tirmite-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6641f0b7adf34f5f0c5230203ed41f77c474625bb296be9ca6de5bffaa46e385",
          "md5": "98375e8769175d951d5131d29b37d661",
          "sha256": "f02c93e3d89bcc4c646135fae4f97d1e7cc7c1b4d4afc7e3f8d7b9c2826c2479"
        },
        "downloads": -1,
        "filename": "tirmite-1.0.0.tar.gz",
        "has_sig": true,
        "md5_digest": "98375e8769175d951d5131d29b37d661",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18775,
        "upload_time": "2017-10-02T08:03:13",
        "upload_time_iso_8601": "2017-10-02T08:03:13.051259Z",
        "url": "https://files.pythonhosted.org/packages/66/41/f0b7adf34f5f0c5230203ed41f77c474625bb296be9ca6de5bffaa46e385/tirmite-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10664636b9a8a700dd417c5f4d7f1ef7e81f2aa3492372a22868f9c54b23e2dd",
          "md5": "1439e917c4d8449566f60cf5036ae1b1",
          "sha256": "6da31ef07b1d8fbf8fe3a21f327fc9d8febbad43eda732ff8eb352de01fab7f9"
        },
        "downloads": -1,
        "filename": "tirmite-1.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "1439e917c4d8449566f60cf5036ae1b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27733,
        "upload_time": "2017-10-11T01:32:00",
        "upload_time_iso_8601": "2017-10-11T01:32:00.551988Z",
        "url": "https://files.pythonhosted.org/packages/10/66/4636b9a8a700dd417c5f4d7f1ef7e81f2aa3492372a22868f9c54b23e2dd/tirmite-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a03d4b492f9bbc53b7757fe80c58e08c1e0fdfa1f36073e39777453f8aa839a7",
          "md5": "80d3ed39aead631ab377108225bc63fd",
          "sha256": "b56ff33626253e95edc27af9503febc1ac5becaf00921acb2477b0d010790412"
        },
        "downloads": -1,
        "filename": "tirmite-1.1.1.tar.gz",
        "has_sig": true,
        "md5_digest": "80d3ed39aead631ab377108225bc63fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26224,
        "upload_time": "2018-11-05T18:57:51",
        "upload_time_iso_8601": "2018-11-05T18:57:51.741569Z",
        "url": "https://files.pythonhosted.org/packages/a0/3d/4b492f9bbc53b7757fe80c58e08c1e0fdfa1f36073e39777453f8aa839a7/tirmite-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5f48f090af7ff1c6c5ae9269ae73fcf6ce849cbbfeff7d0cef411abc6175885",
          "md5": "15ada166934dfea3d1d315424dbe7dbe",
          "sha256": "6fa2cea73b40e0faa813a19957801629e971bcc9bd4c4feb2f4f67ce0031039e"
        },
        "downloads": -1,
        "filename": "tirmite-1.1.3.tar.gz",
        "has_sig": true,
        "md5_digest": "15ada166934dfea3d1d315424dbe7dbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26162,
        "upload_time": "2018-11-29T08:43:18",
        "upload_time_iso_8601": "2018-11-29T08:43:18.984010Z",
        "url": "https://files.pythonhosted.org/packages/d5/f4/8f090af7ff1c6c5ae9269ae73fcf6ce849cbbfeff7d0cef411abc6175885/tirmite-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cc680299f3711d841a9d452a668e185d037ad8e8314f5897712657c6ce3905b",
          "md5": "974a446aaeb53283e10edb35f286b308",
          "sha256": "82657d6f84f51731cb5f92c33d9e672a61009ecc79a61ba21f6f3fc637b2a25b"
        },
        "downloads": -1,
        "filename": "tirmite-1.1.4.tar.gz",
        "has_sig": true,
        "md5_digest": "974a446aaeb53283e10edb35f286b308",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 27700,
        "upload_time": "2019-12-25T08:10:28",
        "upload_time_iso_8601": "2019-12-25T08:10:28.812442Z",
        "url": "https://files.pythonhosted.org/packages/9c/c6/80299f3711d841a9d452a668e185d037ad8e8314f5897712657c6ce3905b/tirmite-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9cc680299f3711d841a9d452a668e185d037ad8e8314f5897712657c6ce3905b",
        "md5": "974a446aaeb53283e10edb35f286b308",
        "sha256": "82657d6f84f51731cb5f92c33d9e672a61009ecc79a61ba21f6f3fc637b2a25b"
      },
      "downloads": -1,
      "filename": "tirmite-1.1.4.tar.gz",
      "has_sig": true,
      "md5_digest": "974a446aaeb53283e10edb35f286b308",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.6",
      "size": 27700,
      "upload_time": "2019-12-25T08:10:28",
      "upload_time_iso_8601": "2019-12-25T08:10:28.812442Z",
      "url": "https://files.pythonhosted.org/packages/9c/c6/80299f3711d841a9d452a668e185d037ad8e8314f5897712657c6ce3905b/tirmite-1.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}