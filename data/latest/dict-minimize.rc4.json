{
  "info": {
    "author": "Ryan Turner",
    "author_email": "rdturnermtl@github.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. figure:: https://user-images.githubusercontent.com/28273671/90945755-c2935580-e3db-11ea-9ba9-dbb054834b02.png\n   :alt: Rosenbrock\n\n*************************\nThe Dict Minimize Package\n*************************\n\nAccess ``scipy`` optimizers from your favorite deep learning framework.\n\nInstallation\n============\n\nOnly ``Python>=3.6`` is officially supported, but older versions of Python likely work as well.\n\nThe core package itself can be installed with:\n\n.. code-block:: bash\n\n   pip install dict_minimize\n\nTo also get the dependencies for all the supported frameworks (torch, JAX, tensorflow) in the README install with\n\n.. code-block:: bash\n\n   pip install dict_minimize[framework]\n\nSee the `GitHub <https://github.com/twitter/dict_minimize>`_, `PyPI <https://pypi.org/project/dict-minimize/>`_, and `Read the Docs <https://dict-minimize.readthedocs.io/en/latest/>`_.\n\nExample Usage\n=============\n\nIn these examples we optimize a modified `Rosenbrock <https://en.wikipedia.org/wiki/Rosenbrock_function>`_ function.\nHowever, the arguments have been split into two chunks and stored as two entries in a dictionary.\nThis is to illustrate how this package optimizes *dictionaries* of (tensor) parameters rather then vectors.\nWe also pass in an extra ``shift`` argument to demonstrate how ``minimize`` allows extra constant arguments to be passed into the objective.\n\nPyTorch\n-------\n\n.. code-block:: python\n\n    import torch\n    from dict_minimize.torch_api import minimize\n\n    def rosen_obj(params, shift):\n        \"\"\"Based on augmented Rosenbrock from botorch.\"\"\"\n        X, Y = params[\"x_half_a\"], params[\"x_half_b\"]\n        X = X - shift\n        Y = Y - shift\n        obj = 100 * (X[1] - X[0] ** 2) ** 2 + 100 * (Y[1] - Y[0] ** 2) ** 2\n        return obj\n\n    def d_rosen_obj(params, shift):\n        obj = rosen_obj(params, shift=shift)\n        da, db = torch.autograd.grad(obj, [params[\"x_half_a\"], params[\"x_half_b\"]])\n        d_obj = OrderedDict([(\"x_half_a\", da), (\"x_half_b\", db)])\n        return obj, d_obj\n\n    torch.manual_seed(123)\n\n    n_a = 2\n    n_b = 2\n    shift = -1.0\n\n    params = OrderedDict([(\"x_half_a\", torch.randn((n_a,))), (\"x_half_b\", torch.randn((n_b,)))])\n\n    params = minimize(d_rosen_obj, params, args=(shift,), method=\"L-BFGS-B\", options={\"disp\": True})\n\nTensorFlow\n----------\n\n.. code-block:: python\n\n    import tensorflow as tf\n    from dict_minimize.tensorflow_api import minimize\n\n    def rosen_obj(params, shift):\n        \"\"\"Based on augmented Rosenbrock from botorch.\"\"\"\n        X, Y = params[\"x_half_a\"], params[\"x_half_b\"]\n        X = X - shift\n        Y = Y - shift\n        obj = 100 * (X[1] - X[0] ** 2) ** 2 + 100 * (Y[1] - Y[0] ** 2) ** 2\n        return obj\n\n    def d_rosen_obj(params, shift):\n        with tf.GradientTape(persistent=True) as t:\n            t.watch(params[\"x_half_a\"])\n            t.watch(params[\"x_half_b\"])\n\n            obj = rosen_obj(params, shift=shift)\n\n        da = t.gradient(obj, params[\"x_half_a\"])\n        db = t.gradient(obj, params[\"x_half_b\"])\n        d_obj = OrderedDict([(\"x_half_a\", da), (\"x_half_b\", db)])\n        del t  # Explicitly drop the reference to the tape\n        return obj, d_obj\n\n    tf.random.set_seed(123)\n\n    n_a = 2\n    n_b = 2\n    shift = -1.0\n\n    params = OrderedDict([(\"x_half_a\", tf.random.normal((n_a,))), (\"x_half_b\", tf.random.normal((n_b,)))])\n\n    params = minimize(d_rosen_obj, params, args=(shift,), method=\"L-BFGS-B\", options={\"disp\": True})\n\nNumPy\n-----\n\n.. code-block:: python\n\n    import numpy as np\n    from scipy.optimize import rosen, rosen_der\n    from dict_minimize.numpy_api import minimize\n\n    def rosen_obj(params, shift):\n        val = rosen(params[\"x_half_a\"] - shift) + rosen(params[\"x_half_b\"] - shift)\n\n        dval = OrderedDict(\n            [\n                (\"x_half_a\", rosen_der(params[\"x_half_a\"] - shift)),\n                (\"x_half_b\", rosen_der(params[\"x_half_b\"] - shift)),\n            ]\n        )\n        return val, dval\n\n    np.random.seed(0)\n\n    n_a = 3\n    n_b = 5\n    shift = -1.0\n\n    params = OrderedDict([(\"x_half_a\", np.random.randn(n_a)), (\"x_half_b\", np.random.randn(n_b))])\n\n    params = minimize(rosen_obj, params, args=(shift,), method=\"L-BFGS-B\", options={\"disp\": True})\n\nJAX\n---\n\n.. code-block:: python\n\n    from jax import random, value_and_grad\n    import jax.numpy as np\n    from dict_minimize.jax_api import minimize\n\n    def rosen(x):\n        r = np.sum(100.0 * (x[1:] - x[:-1] ** 2.0) ** 2.0 + (1 - x[:-1]) ** 2.0, axis=0)\n        return r\n\n    def rosen_obj(params, shift):\n        val = rosen(params[\"x_half_a\"] - shift) + rosen(params[\"x_half_b\"] - shift)\n        return val\n\n    n_a = 3\n    n_b = 5\n    shift = -1.0\n\n    # Jax makes it this simple:\n    d_rosen_obj = value_and_grad(rosen_obj, argnums=0)\n\n    # Setup randomness in JAX\n    key = random.PRNGKey(0)\n    key, subkey_a = random.split(key)\n    key, subkey_b = random.split(key)\n\n    params = OrderedDict(\n        [(\"x_half_a\", random.normal(subkey_a, shape=(n_a,))), (\"x_half_b\", random.normal(subkey_b, shape=(n_b,)))]\n    )\n\n    params = minimize(d_rosen_obj, params, args=(shift,), method=\"L-BFGS-B\", options={\"disp\": True})\n\nContributing\n============\n\nThe following instructions have been tested with Python 3.7.4 on Mac OS (10.14.6).\n\nInstall in editable mode\n------------------------\n\nFirst, define the variables for the paths we will use:\n\n.. code-block:: bash\n\n   GIT=/path/to/where/you/put/repos\n   ENVS=/path/to/where/you/put/virtualenvs\n\nThen clone the repo in your git directory ``$GIT``:\n\n.. code-block:: bash\n\n   cd $GIT\n   git clone https://github.com/twitter/dict_minimize.git\n\nInside your virtual environments folder ``$ENVS``, make the environment:\n\n.. code-block:: bash\n\n   cd $ENVS\n   virtualenv dict_minimize --python=python3.7\n   source $ENVS/dict_minimize/bin/activate\n\nNow we can install the pip dependencies. Move back into your git directory and run\n\n.. code-block:: bash\n\n   cd $GIT/dict_minimize\n   pip install -r requirements/base.txt\n   pip install -e .  # Install the package itself\n\nContributor tools\n-----------------\n\nFirst, we need to setup some needed tools:\n\n.. code-block:: bash\n\n   cd $ENVS\n   virtualenv dict_minimize_tools --python=python3.7\n   source $ENVS/dict_minimize_tools/bin/activate\n   pip install -r $GIT/dict_minimize/requirements/tools.txt\n\nTo install the pre-commit hooks for contributing run (in the ``dict_minimize_tools`` environment):\n\n.. code-block:: bash\n\n   cd $GIT/dict_minimize\n   pre-commit install\n\nTo rebuild the requirements, we can run:\n\n.. code-block:: bash\n\n   cd $GIT/dict_minimize\n\n   # Check if there any discrepancies in the .in files\n   pipreqs dict_minimize/core/ --diff requirements/base.in\n   pipreqs dict_minimize/ --diff requirements/frameworks.in\n   pipreqs tests/ --diff requirements/tests.in\n   pipreqs docs/ --diff requirements/docs.in\n\n   # Regenerate the .txt files from .in files\n   pip-compile-multi --no-upgrade\n\nGenerating the documentation\n----------------------------\n\nFirst setup the environment for building with ``Sphinx``:\n\n.. code-block:: bash\n\n   cd $ENVS\n   virtualenv dict_minimize_docs --python=python3.7\n   source $ENVS/dict_minimize_docs/bin/activate\n   pip install -r $GIT/dict_minimize/requirements/docs.txt\n\nThen we can do the build:\n\n.. code-block:: bash\n\n   cd $GIT/dict_minimize/docs\n   make all\n   open _build/html/index.html\n\nDocumentation will be available in all formats in ``Makefile``. Use ``make html`` to only generate the HTML documentation.\n\nRunning the tests\n-----------------\n\nThe tests for this package can be run with:\n\n.. code-block:: bash\n\n   cd $GIT/dict_minimize\n   ./local_test.sh\n\nThe script creates an environment using the requirements found in ``requirements/test.txt``.\nA code coverage report will also be produced in ``$GIT/dict_minimize/htmlcov/index.html``.\n\nDeployment\n----------\n\nThe wheel (tar ball) for deployment as a pip installable package can be built using the script:\n\n.. code-block:: bash\n\n   cd $GIT/dict_minimize/\n   ./build_wheel.sh\n\nThis script will only run if the git repo is clean, i.e., first run ``git clean -x -ff -d``.\n\nLinks\n=====\n\nThe `source <https://github.com/twitter/dict_minimize>`_ is hosted on GitHub.\n\nThe `documentation <https://dict-minimize.readthedocs.io/en/latest/>`_ is hosted at Read the Docs.\n\nInstallable from `PyPI <https://pypi.org/project/dict-minimize/>`_.\n\nLicense\n=======\n\nThis project is licensed under the Apache 2 License - see the LICENSE file for details.",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/twitter/dict_minimize/",
    "keywords": "",
    "license": "Apache v2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dict-minimize",
    "package_url": "https://pypi.org/project/dict-minimize/",
    "platform": "any",
    "project_url": "https://pypi.org/project/dict-minimize/",
    "project_urls": {
      "Homepage": "https://github.com/twitter/dict_minimize/"
    },
    "release_url": "https://pypi.org/project/dict-minimize/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Access scipy optimizers from your favorite deep learning framework.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8527821,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3c21dafbd5a3f36ef5c7d921697614fb1b54bf939e4489a71bcb7bfe20b3c44",
          "md5": "09edc82ef5b9c23bc5d8bdd2ea8a96fa",
          "sha256": "13ef5180fe1cacb134b467220b18d0a998523d088a6c9d8dda0ef524ed8d24d1"
        },
        "downloads": -1,
        "filename": "dict_minimize-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "09edc82ef5b9c23bc5d8bdd2ea8a96fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15176,
        "upload_time": "2020-08-24T22:38:44",
        "upload_time_iso_8601": "2020-08-24T22:38:44.073363Z",
        "url": "https://files.pythonhosted.org/packages/a3/c2/1dafbd5a3f36ef5c7d921697614fb1b54bf939e4489a71bcb7bfe20b3c44/dict_minimize-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92862c4fdc8ed51511e2994012037ffa5567b72ed3acf7938c5abe54f612c9ca",
          "md5": "d7c8359c1d5d91c5098bb69e1e9da814",
          "sha256": "7d85ad58f66b777c0d58a554489cd01740b2cd094a5841729dd373c066389dec"
        },
        "downloads": -1,
        "filename": "dict_minimize-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d7c8359c1d5d91c5098bb69e1e9da814",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15182,
        "upload_time": "2020-08-25T00:50:08",
        "upload_time_iso_8601": "2020-08-25T00:50:08.048972Z",
        "url": "https://files.pythonhosted.org/packages/92/86/2c4fdc8ed51511e2994012037ffa5567b72ed3acf7938c5abe54f612c9ca/dict_minimize-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4408adc5440bb5ec27682f080432132c440b87be23af6cfe481a0395c5c8cff6",
          "md5": "a34819438d5a29c0c5c9c0c4187b0186",
          "sha256": "1522a339162df679d43b5df0b41358a5bbb2bc4984ba5313aa60097821fe8ef4"
        },
        "downloads": -1,
        "filename": "dict_minimize-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a34819438d5a29c0c5c9c0c4187b0186",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15153,
        "upload_time": "2020-09-30T23:16:12",
        "upload_time_iso_8601": "2020-09-30T23:16:12.606872Z",
        "url": "https://files.pythonhosted.org/packages/44/08/adc5440bb5ec27682f080432132c440b87be23af6cfe481a0395c5c8cff6/dict_minimize-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44429e26e9e17d18ed4eb623d312fc1dfcfb920a286b4d63d811f194b10b7f60",
          "md5": "cb9d399819b31c12975d9cbca60a2768",
          "sha256": "3c279c82c5a25839507ec66835b803ce6560ae7c3f36bf3f19538b8811e65372"
        },
        "downloads": -1,
        "filename": "dict_minimize-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cb9d399819b31c12975d9cbca60a2768",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15156,
        "upload_time": "2020-10-29T00:14:02",
        "upload_time_iso_8601": "2020-10-29T00:14:02.997566Z",
        "url": "https://files.pythonhosted.org/packages/44/42/9e26e9e17d18ed4eb623d312fc1dfcfb920a286b4d63d811f194b10b7f60/dict_minimize-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44429e26e9e17d18ed4eb623d312fc1dfcfb920a286b4d63d811f194b10b7f60",
        "md5": "cb9d399819b31c12975d9cbca60a2768",
        "sha256": "3c279c82c5a25839507ec66835b803ce6560ae7c3f36bf3f19538b8811e65372"
      },
      "downloads": -1,
      "filename": "dict_minimize-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "cb9d399819b31c12975d9cbca60a2768",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15156,
      "upload_time": "2020-10-29T00:14:02",
      "upload_time_iso_8601": "2020-10-29T00:14:02.997566Z",
      "url": "https://files.pythonhosted.org/packages/44/42/9e26e9e17d18ed4eb623d312fc1dfcfb920a286b4d63d811f194b10b7f60/dict_minimize-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}