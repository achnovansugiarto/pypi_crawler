{
  "info": {
    "author": "rdmchik",
    "author_email": "denkickgames@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1>PyGame Video Injection</h1>\n<h2>You are probably looking on how to make it so you can easily \nplay videos inside of your pygame project without facing any huge troubles\nand reinstalling old pygame versions. So here is a great solution for you!\nonly compatable with mp4 files</h2>\n<h2>Now, you can easily create a 'video surface' and simply blit it onto your screen</h2>\n<pre>from video_pygame.video import VideoSurface</pre>\n<pre>vs = VideoSurface(\n    video_path='example.mp4',\n    position=pygame.Vector2(0, 0,),\n    size=(1000, 500)\n)</pre>\n<h2>You can move it by changing it's position parameter - vs.position.x = 123</h2>\n<h2>You can check if it is playing or not by checking vs.playing</h2>\n<h2>and to get current frame, just call the object it self - vs()<h2>\n<h2>here are some function the library also has</h2>\n<pre>VideoSurface().play() -> None: start playing video (audio included)\nVideoSurface().stop() -> None: stop playing video and reset frame to zero (audio included)\nVideoSurface().get_position() -> list: get current position of the video surface</pre>\n<h2>Here is some deeper explanation you dont really have to know</h2>\n<h4>So there is a data folder in the library, when you create a new video surface object\nit should create a folder inside of this data called what your .mp4 file is named, if it already\nexists we just leave it as it is. Next we add all of the frames of the video as .jpg files into this new\nfolder, if it was done before already we just leave it as it is again. And last but not least we check if \nthe final result is corrupted, what that means is if all of the frames are in place. If the video has\n730 frames, then you can only finish vs' initialization when there is a 'frame730.jpg' file in the folder, if there is not\nthen we clear all of the files currently being there and start initialization all over again and repeat the proccess\nof creating .jpg files. So thats why it might take some time when creating a new vs object for the first time, but after\nit has initialized for once, its going to be Way more faster next time you run your code. I am not going to explain how\nvideo is being synced with its sound, which is stored as a .wav and converted to pygame.mixer.Sound object, and\neverything i said is pretty much everything you have to know, though you can also go through the code - i left some notes there\nbut not much really</h4>\n<h1>Thank you for choosing PyGame Video Injection :))</h1>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RDMchik/VideoInjectionPyGame",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "video-injection-pygame",
    "package_url": "https://pypi.org/project/video-injection-pygame/",
    "platform": null,
    "project_url": "https://pypi.org/project/video-injection-pygame/",
    "project_urls": {
      "Bug Tracker": "https://github.com/RDMchik/VideoInjectionPyGame/issues",
      "Homepage": "https://github.com/RDMchik/VideoInjectionPyGame"
    },
    "release_url": "https://pypi.org/project/video-injection-pygame/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Inject mp4 videos into your pygame surface",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14209422,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56f74d2f8bffbdf69125c6041a922c1588f9d1b970946d131fde32119cfc2e18",
          "md5": "81a14578f5e0db4579d99ad3f6b03f13",
          "sha256": "3ce876883b67a6371ba51ed1d9789d7b9ffac6dbbafd6418ca8e3ce511bad7ec"
        },
        "downloads": -1,
        "filename": "video_injection_pygame-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81a14578f5e0db4579d99ad3f6b03f13",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5056,
        "upload_time": "2022-06-22T08:42:09",
        "upload_time_iso_8601": "2022-06-22T08:42:09.937542Z",
        "url": "https://files.pythonhosted.org/packages/56/f7/4d2f8bffbdf69125c6041a922c1588f9d1b970946d131fde32119cfc2e18/video_injection_pygame-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13e3968a297ba5e582b82204d99dfc5c9eb7492ec612dbbdc5878f8f1cbe43a9",
          "md5": "5c45b25a6aab7458d17414de101c9aa1",
          "sha256": "8957ccc29ca3dfb3bdbbb0d9b12b3f683a53d9d1cf83869d5433d250c6d8200f"
        },
        "downloads": -1,
        "filename": "video-injection-pygame-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5c45b25a6aab7458d17414de101c9aa1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4477,
        "upload_time": "2022-06-22T08:42:11",
        "upload_time_iso_8601": "2022-06-22T08:42:11.511438Z",
        "url": "https://files.pythonhosted.org/packages/13/e3/968a297ba5e582b82204d99dfc5c9eb7492ec612dbbdc5878f8f1cbe43a9/video-injection-pygame-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fea8183283e203f3e7255ad5a8ccf2d8ef37b7a73dca451be5d4f6a943763d84",
          "md5": "0b8abf24d69599da1e6a0c0d187e17f8",
          "sha256": "ff2e82e5c44267db6c840e83546b1611c5c1c09b968c9f064a0ec08c9e39d40c"
        },
        "downloads": -1,
        "filename": "video_injection_pygame-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b8abf24d69599da1e6a0c0d187e17f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5817,
        "upload_time": "2022-06-22T09:02:57",
        "upload_time_iso_8601": "2022-06-22T09:02:57.709548Z",
        "url": "https://files.pythonhosted.org/packages/fe/a8/183283e203f3e7255ad5a8ccf2d8ef37b7a73dca451be5d4f6a943763d84/video_injection_pygame-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a75ea532af79114648b4c66704661749e2af3e77acfd9f030d251b5bda49bdd5",
          "md5": "6173525403f85249a192ba2e5761089e",
          "sha256": "f85a71bafc72e20c7d65c96a2dae23d8e8e9229671c9d646aad803399ca3785b"
        },
        "downloads": -1,
        "filename": "video-injection-pygame-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6173525403f85249a192ba2e5761089e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4899,
        "upload_time": "2022-06-22T09:02:59",
        "upload_time_iso_8601": "2022-06-22T09:02:59.222184Z",
        "url": "https://files.pythonhosted.org/packages/a7/5e/a532af79114648b4c66704661749e2af3e77acfd9f030d251b5bda49bdd5/video-injection-pygame-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fea8183283e203f3e7255ad5a8ccf2d8ef37b7a73dca451be5d4f6a943763d84",
        "md5": "0b8abf24d69599da1e6a0c0d187e17f8",
        "sha256": "ff2e82e5c44267db6c840e83546b1611c5c1c09b968c9f064a0ec08c9e39d40c"
      },
      "downloads": -1,
      "filename": "video_injection_pygame-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0b8abf24d69599da1e6a0c0d187e17f8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5817,
      "upload_time": "2022-06-22T09:02:57",
      "upload_time_iso_8601": "2022-06-22T09:02:57.709548Z",
      "url": "https://files.pythonhosted.org/packages/fe/a8/183283e203f3e7255ad5a8ccf2d8ef37b7a73dca451be5d4f6a943763d84/video_injection_pygame-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a75ea532af79114648b4c66704661749e2af3e77acfd9f030d251b5bda49bdd5",
        "md5": "6173525403f85249a192ba2e5761089e",
        "sha256": "f85a71bafc72e20c7d65c96a2dae23d8e8e9229671c9d646aad803399ca3785b"
      },
      "downloads": -1,
      "filename": "video-injection-pygame-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "6173525403f85249a192ba2e5761089e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4899,
      "upload_time": "2022-06-22T09:02:59",
      "upload_time_iso_8601": "2022-06-22T09:02:59.222184Z",
      "url": "https://files.pythonhosted.org/packages/a7/5e/a532af79114648b4c66704661749e2af3e77acfd9f030d251b5bda49bdd5/video-injection-pygame-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}