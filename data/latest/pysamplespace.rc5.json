{
  "info": {
    "author": "Coriander V. Pines",
    "author_email": "contact@corianderpines.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Artistic Software",
      "Topic :: Games/Entertainment",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing"
    ],
    "description": "![SampleSpace banner](docs/source/img/header.png \"SampleSpace\")\n\n# SampleSpace: Cross-Platform Tools for Generating Random Numbers\n\n[![pipeline status](https://gitlab.com/cvpines/pysamplespace/badges/master/pipeline.svg)](https://gitlab.com/cvpines/pysamplespace/-/commits/master)\n[![coverage report](https://gitlab.com/cvpines/pysamplespace/badges/master/coverage.svg)](https://gitlab.com/cvpines/pysamplespace/-/commits/master)\n[![PyPI](https://img.shields.io/pypi/v/pysamplespace)](https://pypi.org/project/pysamplespace/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pysamplespace)]((https://pypi.org/project/pysamplespace/))\n[![PyPI - License](https://img.shields.io/pypi/l/pysamplespace)](https://gitlab.com/cvpines/pysamplespace/-/blob/master/LICENSE)\n\nSampleSpace is a cross-platform library for describing and sampling from\nrandom distributions.\n\nWhile SampleSpace is primarily intended for creating\nprocedurally-generated content, it is also useful for Monte-Carlo\nsimulations, unit testing, and anywhere that flexible, repeatable random\nnumbers are required.\n\n## Platforms\n\nSampleSpace supports the following platforms:\n\n* Python &mdash; [pysamplespace](https://pypi.org/project/pysamplespace/)\n* C++ &mdash; In development\n* C# &mdash; In development\n\nSampleSpace guarantees that the value of random sequences is consistent\nand serialized states are compatible across each platform implementation.\n\n## Installation\n\nInstallation is simple using `pip`:\n\n> `$ pip install pysamplespace`\n\nSampleSpace's only dependency is\n[xxHash](https://pypi.org/project/xxhash/), though it optionally\noffers additional functionality if\n[PyYAML](https://pypi.org/project/PyYAML/) is installed.\n\n## [Usage](https://pysamplespace.readthedocs.io/en/latest/)\n\nAll documentation is available at on [Read the Docs](https://pysamplespace.readthedocs.io/en/latest/). \n\nSampleSpace provides the following submodules:\n\n* [samplespace.repeatablerandom](https://pysamplespace.readthedocs.io/en/latest/repeatablerandom.html) &mdash;  Repeatable Random Sequences\n* [samplespace.distributions](https://pysamplespace.readthedocs.io/en/latest/distributions.html) &mdash;  Serializable Probability Distributions\n* [samplespace.algorithms](https://pysamplespace.readthedocs.io/en/latest/algorithms.html) &mdash;  General Sampling Algorithms\n* [samplespace.pyyaml_support](https://pysamplespace.readthedocs.io/en/latest/pyyaml_support.html) &mdash;  YAML serialization support\n \n### Repeatable Random Sequences\n\n`samplespace.repeatablerandom` allows for generating repeatable, \ndeterministic random sequences. It is compatible with the built-in\n[random](https://docs.python.org/3/library/random.html) module as a\ndrop-in replacement.\n\nA key feature of `RepeatableRandomSequence` is its ability to get, serialize, and restore internal\nstate. This is especially useful when generating procedural content from a fixed seed.\n\nA `RepeatableRandomSequence` can also be used for unit testing by replacing the built-in random module.\nBecause each random sequence is deterministic and repeatable for a given seed, expected values can be \nrecorded and compared against within unit tests.\n\n`RepeatableRandomSequence` produces high-quality pseudo-random values. See \n[Randomness Test Results](https://pysamplespace.readthedocs.io/en/latest/rrs_quality.html) for \nresults from randomness tests.\n\n```python\nimport samplespace\n\nrrs = samplespace.RepeatableRandomSequence(seed=1234)\n\nsamples = [rrs.randrange(30) for _ in range(10)]\nprint(samples)\n# Will always print:\n# [21, 13, 28, 19, 16, 29, 28, 24, 29, 25]\n\n# Generate some random values to advance the state\n[rrs.random() for _ in range(90)]\n\n# Save the state for later recall\n# State can be serialzied to a dict and serialized as JSON\nstate = rrs.getstate()\nstate_as_dict = state.as_dict()\nstate_as_json = json.dumps(state_as_dict)\nprint(state_as_json)\n# Prints {\"seed\": 12345, \"hash_input\": \"gxzNfDj4Ypc=\", \"index\": 100}\n\nprint(rrs.random())\n# Will print 0.5940559149714152\n\n# Generate some more values\n[rrs.random() for _ in range(100)]\n\n# Return the sequence to the saved state. The next value will match\n# the value following when the state was saved.\nnew_state_as_dict = json.loads(state_as_json)\nnew_state = samplespace.repeatablerandom.RepeatableRandomSequenceState.from_dict(new_state_as_dict)\nrrs.setstate(new_state)\nprint(rrs.random())\n# Will also print 0.5940559149714152\n```\n\n### Distributions\n\n`samplespace.distributions` implements a number of useful probability distributions.\n\nEach distribution can be sampled using any random number generator providing at least the same\nfunctionality as the random module; this includes `samplespace.repeatablerandom`.\n\nThe classes in this module are primarily intended for storing information on random distributions\nin configuration files using `Distribution.as_dict()`/`distribution_from_dict()`\nor `Distribution.as_list()`/`distribution_from_list()`.\n\nDistributions can be serialized to strings:\n```python\nfrom samplespace.distributions import Pareto, DiscreteUniform, UniformCategorical\n\npareto = Pareto(2.5)\nprint('Pareto as dict:', pareto.as_dict())  # {'distribution': 'pareto', 'alpha': 2.5}\nprint('Pareto as list:', pareto.as_list())  # ['pareto', 2.5]\n\ndiscrete = DiscreteUniform(3, 8)\nprint('Discrete uniform as dict:', discrete.as_dict())  # {'distribution': 'discreteuniform', 'min_val': 3, 'max_val': 8}\nprint('Discrete uniform as list:', discrete.as_list())  # ['discreteuniform', 3, 8]\n\ncat = UniformCategorical(['string', 4, {'a':'dict'}])\nprint('Uniform categorical as dict:', cat.as_dict())  # {'distribution': 'uniformcategorical', 'population': ['string', 4, {'a': 'dict'}]}\nprint('Uniform categorical as list:', cat.as_list())  # ['uniformcategorical', ['string', 4, {'a': 'dict'}]]\n``` \n\nDistributions can be specified in configuration files:\n```python\nfrom samplespace import distributions, RepeatableRandomSequence\n\ncity_config = {\n    \"building_distribution\": {\n        \"distribution\": \"weightedcategorical\",\n        \"items\": [\n            [\"house\", 0.2],\n            [\"store\", 0.4],\n            [\"tree\", 0.8],\n            [\"ground\", 5.0]\n        ]\n    }\n}\n\nrrs = RepeatableRandomSequence()\nbuilding_dist = distributions.distribution_from_dict(city_config['building_distribution'])\n\nbuildings = [[building_dist.sample(rrs) for col in range(20)] for row in range(5)]\n\nfor row in buildings:\n    for building_type in row:\n        if building_type == 'house':\n            print('H', end='')\n        elif building_type == 'store':\n            print('S', end='')\n        elif building_type == 'tree':\n            print('T', end='')\n        else:\n            print('.', end='')\n    print()\n```\n\n### Algorithms\n\n`samplespace.algorithms` implements several general-purpose sampling algorithms\nsuch as binary roulette wheel sampling and alias tables.\n\n### PyYAML Support\n\nSampleSpace provides optional support for [PyYAML](https://pypi.org/project/PyYAML/),\nwhich can be enabled via the `samplespace.pyyaml_support` submodule.\n\nRepeatable Random Sequences:\n\n```python\nimport yaml\nfrom samplespace import RepeatableRandomSequence\nimport samplespace.pyyaml_support\nsamplespace.pyyaml_support.enable_yaml_support()\n\nrrs = RepeatableRandomSequence(seed=678)\n[rrs.randrange(10) for _ in range(5)]\n\n# Serialize the sequence as YAML\nas_yaml = yaml.dump(rrs) # '!samplespace.rrs\\nhash_input: s1enBV+SSXk=\\nindex: 5\\nseed: 678\\n'\n\nrrs_from_yaml = yaml.load(as_yaml, Loader=yaml.FullLoader)\n``` \n\nDistributions:\n\n```python\nimport yaml\nfrom samplespace import distributions\nimport samplespace.pyyaml_support\nsamplespace.pyyaml_support.enable_yaml_support()\n\ngamma = distributions.Gamma(5.0, 3.0)\ngamma_as_yaml = yaml.dump(gamma) # '!samplespace.distribution\\nalpha: 5.0\\nbeta: 3.0\\ndistribution: gamma\\n'\n\ndist_from_yaml = yaml.load(gamma_as_yaml, Loader=yaml.FullLoader)\n```\n\n## Copyright and License \n\nSampleSpace was created by [Coriander V. Pines](http://corianderpines.org)\nand is available under the\n[BSD 3-Clause License](https://gitlab.com/cvpines/pysamplespace/-/blob/master/LICENSE).\n\nThe source is available on [GitLab](https://gitlab.com/cvpines/pysamplespace/).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/cvpines/pysamplespace",
    "keywords": "random,distribution,sampling,simulation,pcg",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pysamplespace",
    "package_url": "https://pypi.org/project/pysamplespace/",
    "platform": "",
    "project_url": "https://pypi.org/project/pysamplespace/",
    "project_urls": {
      "Documentation": "https://pysamplespace.readthedocs.io/en/latest/",
      "Homepage": "https://gitlab.com/cvpines/pysamplespace",
      "Repository": "https://gitlab.com/cvpines/pysamplespace"
    },
    "release_url": "https://pypi.org/project/pysamplespace/1.0.4/",
    "requires_dist": [
      "xxhash (>=1.4,<2.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "SampleSpace is a cross-platform library for describing and sampling from random distributions.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9979343,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c573a0b0e489348ff74e85d7d418b85c8bdfec840d5606d8d442c0bb225fea2d",
          "md5": "e97e694e00357bb9a8c3832bcdd2300d",
          "sha256": "a190c17d83ea2ba1cdbf6172c43779fa9ef8b0026786d84de2308a4556d97ac0"
        },
        "downloads": -1,
        "filename": "pysamplespace-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e97e694e00357bb9a8c3832bcdd2300d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 24203,
        "upload_time": "2020-05-25T03:29:10",
        "upload_time_iso_8601": "2020-05-25T03:29:10.886848Z",
        "url": "https://files.pythonhosted.org/packages/c5/73/a0b0e489348ff74e85d7d418b85c8bdfec840d5606d8d442c0bb225fea2d/pysamplespace-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ac7e9c5a956f55819a8a192dad489a00b82f1da5bd5b6a5ae6c92860048e7af",
          "md5": "5fe39a35106c6682e9519be7ad649e28",
          "sha256": "a5bc959773d7a10ac9cc51ceb2887de2fddaf42b08428dfc9a4a87cbba1b2cc2"
        },
        "downloads": -1,
        "filename": "pysamplespace-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5fe39a35106c6682e9519be7ad649e28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 25667,
        "upload_time": "2020-05-25T03:29:13",
        "upload_time_iso_8601": "2020-05-25T03:29:13.011081Z",
        "url": "https://files.pythonhosted.org/packages/4a/c7/e9c5a956f55819a8a192dad489a00b82f1da5bd5b6a5ae6c92860048e7af/pysamplespace-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0456091a249b9476ad414340b461be72c63f6bc4966fed5330895fd2421202b9",
          "md5": "a5720327805dc52f6a9fbe99162ba69b",
          "sha256": "cafe4aaf483dd2a908dc5eae704e12a6cfd50cd5f85e3395d9dfd7d7631b662c"
        },
        "downloads": -1,
        "filename": "pysamplespace-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5720327805dc52f6a9fbe99162ba69b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 24329,
        "upload_time": "2020-05-25T03:46:41",
        "upload_time_iso_8601": "2020-05-25T03:46:41.640977Z",
        "url": "https://files.pythonhosted.org/packages/04/56/091a249b9476ad414340b461be72c63f6bc4966fed5330895fd2421202b9/pysamplespace-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be1af7d75bc46a841bc6466511e605435d6ddccd2c79af578c8d9745472fff72",
          "md5": "614c7ca8b76847bad84e0e3aac241c02",
          "sha256": "9c69248c3cfaf1d053e0e0a319758a14858dfbbb8994e1e6328df66257e65f18"
        },
        "downloads": -1,
        "filename": "pysamplespace-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "614c7ca8b76847bad84e0e3aac241c02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 25914,
        "upload_time": "2020-05-25T03:46:42",
        "upload_time_iso_8601": "2020-05-25T03:46:42.890474Z",
        "url": "https://files.pythonhosted.org/packages/be/1a/f7d75bc46a841bc6466511e605435d6ddccd2c79af578c8d9745472fff72/pysamplespace-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7ca9630075501c0b4e38ea67cef3cbf2a27f71925aeb36dbab1737e60fe7ce8",
          "md5": "62509b9e39d8ee4d058ccb757b8fe027",
          "sha256": "af1d1d74e2b0618e995e01212990234ccc42532eaa4fc619dfde46306ef1b0d3"
        },
        "downloads": -1,
        "filename": "pysamplespace-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62509b9e39d8ee4d058ccb757b8fe027",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 24441,
        "upload_time": "2020-06-15T04:20:24",
        "upload_time_iso_8601": "2020-06-15T04:20:24.456430Z",
        "url": "https://files.pythonhosted.org/packages/c7/ca/9630075501c0b4e38ea67cef3cbf2a27f71925aeb36dbab1737e60fe7ce8/pysamplespace-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0431675c5a889e7ecd5aedae1d0b8adb6566b836fdb2f43837817a249488604f",
          "md5": "86028319bfab815629cfd1484236f059",
          "sha256": "25c09a16b6b7d3af49a69eb81837a08a4482a4b2839ffe19555acd7902d81ac2"
        },
        "downloads": -1,
        "filename": "pysamplespace-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "86028319bfab815629cfd1484236f059",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 26125,
        "upload_time": "2020-06-15T04:20:25",
        "upload_time_iso_8601": "2020-06-15T04:20:25.856707Z",
        "url": "https://files.pythonhosted.org/packages/04/31/675c5a889e7ecd5aedae1d0b8adb6566b836fdb2f43837817a249488604f/pysamplespace-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f543229edde798bab6ccba82d44eb902a5f1f96733efd33d1570058d44cba400",
          "md5": "47a19dc862b9a95aed36dca59b5be1d0",
          "sha256": "789050155e4253af788ca38602a376be34fe51d5fd3c504cdbc29ba592455c11"
        },
        "downloads": -1,
        "filename": "pysamplespace-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47a19dc862b9a95aed36dca59b5be1d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 24778,
        "upload_time": "2020-06-28T22:50:59",
        "upload_time_iso_8601": "2020-06-28T22:50:59.273546Z",
        "url": "https://files.pythonhosted.org/packages/f5/43/229edde798bab6ccba82d44eb902a5f1f96733efd33d1570058d44cba400/pysamplespace-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0599069acd3d35fbb89c37e88114f5ef0b51ea577e295ea90ede65b7279f302",
          "md5": "42a72ec358471489b1e71e1a45ef3272",
          "sha256": "3548f1495613d83d126c9562dbac479240229b74bb4582ccbcd2116d661171aa"
        },
        "downloads": -1,
        "filename": "pysamplespace-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "42a72ec358471489b1e71e1a45ef3272",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 26450,
        "upload_time": "2020-06-28T22:51:00",
        "upload_time_iso_8601": "2020-06-28T22:51:00.285676Z",
        "url": "https://files.pythonhosted.org/packages/d0/59/9069acd3d35fbb89c37e88114f5ef0b51ea577e295ea90ede65b7279f302/pysamplespace-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2bf90c41bb9310ac89be4a57efebefc36fa259f9aa0f8e40b838952484cbedc",
          "md5": "78572d8abd8ecf4592e9b884a5c0603e",
          "sha256": "e7721dfe469228d83b6006e37e2ccf04ce64cd9859d016653a11bf9d9022f932"
        },
        "downloads": -1,
        "filename": "pysamplespace-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78572d8abd8ecf4592e9b884a5c0603e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 24784,
        "upload_time": "2021-04-05T20:18:15",
        "upload_time_iso_8601": "2021-04-05T20:18:15.325125Z",
        "url": "https://files.pythonhosted.org/packages/c2/bf/90c41bb9310ac89be4a57efebefc36fa259f9aa0f8e40b838952484cbedc/pysamplespace-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46ece4feb3a3d4b7ad89c9738bf74a6d1b425dcfb690da8c810b36dca2f70ce2",
          "md5": "ea5063636db062911b7d0e3ed40f4c0b",
          "sha256": "2a7cd300ccffbb97020823ffb0964bdb720e9bc420c9c2d57a6e9ae9a529683f"
        },
        "downloads": -1,
        "filename": "pysamplespace-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ea5063636db062911b7d0e3ed40f4c0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 26461,
        "upload_time": "2021-04-05T20:18:16",
        "upload_time_iso_8601": "2021-04-05T20:18:16.934203Z",
        "url": "https://files.pythonhosted.org/packages/46/ec/e4feb3a3d4b7ad89c9738bf74a6d1b425dcfb690da8c810b36dca2f70ce2/pysamplespace-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2bf90c41bb9310ac89be4a57efebefc36fa259f9aa0f8e40b838952484cbedc",
        "md5": "78572d8abd8ecf4592e9b884a5c0603e",
        "sha256": "e7721dfe469228d83b6006e37e2ccf04ce64cd9859d016653a11bf9d9022f932"
      },
      "downloads": -1,
      "filename": "pysamplespace-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "78572d8abd8ecf4592e9b884a5c0603e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 24784,
      "upload_time": "2021-04-05T20:18:15",
      "upload_time_iso_8601": "2021-04-05T20:18:15.325125Z",
      "url": "https://files.pythonhosted.org/packages/c2/bf/90c41bb9310ac89be4a57efebefc36fa259f9aa0f8e40b838952484cbedc/pysamplespace-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "46ece4feb3a3d4b7ad89c9738bf74a6d1b425dcfb690da8c810b36dca2f70ce2",
        "md5": "ea5063636db062911b7d0e3ed40f4c0b",
        "sha256": "2a7cd300ccffbb97020823ffb0964bdb720e9bc420c9c2d57a6e9ae9a529683f"
      },
      "downloads": -1,
      "filename": "pysamplespace-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "ea5063636db062911b7d0e3ed40f4c0b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 26461,
      "upload_time": "2021-04-05T20:18:16",
      "upload_time_iso_8601": "2021-04-05T20:18:16.934203Z",
      "url": "https://files.pythonhosted.org/packages/46/ec/e4feb3a3d4b7ad89c9738bf74a6d1b425dcfb690da8c810b36dca2f70ce2/pysamplespace-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}