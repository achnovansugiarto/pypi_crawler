{
  "info": {
    "author": "WEN",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: AsyncIO",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# aiohttp-debugmode\nThis package helps you easily start a aiohttp develpment server in subprocess ,everytime dependencies/statics are modified ,daemon process will automatically reload server thus helps you automation your workflow. Aiohttp-debugtoolbar included.\n\n[![fury](https://img.shields.io/pypi/v/aiohttp-debugmode.svg)](https://badge.fury.io/py/aiohttp-debugmode)\n[![licence](https://img.shields.io/github/license/GoodManWEN/aiohttp-debugmode)](https://github.com/GoodManWEN/aiohttp-debugmode/blob/master/LICENSE)\n[![pyversions](https://img.shields.io/pypi/pyversions/aiohttp-debugmode.svg)](https://pypi.org/project/aiohttp-debugmode/)\n[![Publish](https://github.com/GoodManWEN/aiohttp-debugmode/workflows/Publish/badge.svg)](https://github.com/GoodManWEN/aiohttp-debugmode/actions?query=workflow%3APublish)\n[![build](https://github.com/GoodManWEN/aiohttp-debugmode/workflows/Build/badge.svg)](https://github.com/GoodManWEN/aiohttp-debugmode/actions?query=workflow%3ABuild)\n\n- Based on watchdog.\n- Works on Python3.7+\n- [aiohttp-debugtoolbar](https://github.com/aio-libs/aiohttp-debugtoolbar) included ,thus you can get a full report of traceback if exception raised.\n\n![](https://github.com/GoodManWEN/aiohttp-debugmode/blob/master/screenshots/carbon.png)\n![](https://github.com/GoodManWEN/aiohttp-debugmode/blob/master/screenshots/aiohttp_debugtoolba_sceenshot.png)\n*(\\* Screenshot from [aio-libs/aiohttp-debugtoolbar](https://github.com/aio-libs/aiohttp-debugtoolbar) \\*)*\n\n## Install\n\n    pip install aiohttp-debugmode\n\n## Usage\n\n`quick_start.py`\n\\# here's a demo script from aiohttp.doc\\\\quickstart\n```Python3\nfrom aiohttp import web\nroutes = web.RouteTableDef()\n\n@routes.get('/')\nasync def hello(request):\n    return web.Response(text=\"Hello, world\")\n\napp = web.Application()\napp.add_routes(routes)\nweb.run_app(app)\n```\n\nSimply modify severl lines like this\n```Python3\n# Add import\nfrom aiohttp_debugmode import Debugmode\n\n# Let Debugmode take over control of run_app\nDebugmode.run_app(app)\n```\n\nBy default ,`templates` & `static` floder is added to observing list of watchdog. You can manually set observe file/floder using append_observe.\n```Python3\nDebugmode.append_observe(['other/login.html' ,'assets'])\n```\n\nIf you need some kind of process when a aiohttp server starts up:\n```Python3\ndef stup():\n\t... # do something\n\nDebugmode.on_startup(stup) # accepts callable.\n```\n\n## Examples\n\n### aiohttp-debugmode with Vue\nAssume that you are usiung vue-cli and have a directory structure like this:\n```\n...\n├── Project\n│   ├── static\n│   ├── templates\n│   ├── app.py               # aiohttp app entry\n│   └── frontend             # vue frontend folder\n│       ├── dist             # webpack output directory\n│       │   ├── css\n│       │   ├── js\n│       │   └── index.html\n│       ├── node_modules\n│       │   └── ...\n│       ├── src              # vue source\n│       │   └── ...\n│       └── vue.config.js\n│   └── ...\n```\nAssume that webpack outputs built file into `/Project/frontend/dist` floder while your aiohttp app collects templates & statics from `/Project/templates` & `/Project/static` folder.\n\nHere's a sample code:\n```Python3\nfrom aiohttp import web\nfrom aiohttp_debugmode import Debugmode\nimport aiohttp_jinja2\n\n# Pretended doing some tempate rander stuff.\n# @aiohttp_jinja2.template('index.html')\nasync def hello(request):\n    return web.Response(text=\"Randered.\") \n\n# Debugtoolbar included thus you can get \n# a full report of traceback.\nasync def error(request):\n    raise Exception('Testing.')\n\napp = web.Application()\napp.router.add_route('GET', '/', hello)\napp.router.add_route('GET', '/err', error)\napp.add_routes([web.static('/', 'static')])\n\ndef initialize():\n    import shutil , os , glob\n    # You may use os.path.abspath to get absolute path in some situation.\n    if os.path.exists('frontend\\dist\\index.html'):\n        shutil.move('frontend\\dist\\index.html' , 'templates')\n        try:\n            shutil.rmtree(filepath)\n            os.mkdir(filepath)\n            for filepath in glob.glob('frontend\\dist\\*'):\n                shutil.move(filepath , 'static')\n        except Exception as e:\n            raise e\n\nDebugmode.append_observe(['frontend\\dist']) # backslashes on windows.\nDebugmode.on_startup(initialize)\n# Debugmode takes over run_app instead of web.run_app\nDebugmode.run_app(app , host = '127.0.0.1' , port = 8080)\n```\n\nThus every time you run `npm run build` ,debugmode will catch file modified event ,init file directory and restart aiohttp server with new generated html/js/css file.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GoodManWEN/aiohttp-debugmode",
    "keywords": "aiohttp,debug,aiohttp-debugmode,debugtoolbar",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiohttp-debugmode",
    "package_url": "https://pypi.org/project/aiohttp-debugmode/",
    "platform": "",
    "project_url": "https://pypi.org/project/aiohttp-debugmode/",
    "project_urls": {
      "Homepage": "https://github.com/GoodManWEN/aiohttp-debugmode"
    },
    "release_url": "https://pypi.org/project/aiohttp-debugmode/0.2.1/",
    "requires_dist": [
      "aiohttp (>=3.4.0)",
      "aiohttp-debugtoolbar (>=0.6.0)",
      "watchdog (==0.10.2)"
    ],
    "requires_python": ">=3.7",
    "summary": "Run aiohttp server in subprocess ,automatically reload while dependencies/statics modified , debugtoolbar included. - GoodManWEN/aiohttp-debugmode",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6860414,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e60e1fe4a556f723e1fb1093935ae3e9ad9d7fb7e5c15b1c92a3bd7feabb7e19",
          "md5": "04adac0220c63d0e1bd1c73c71dd4511",
          "sha256": "01c0ec103b1959e13a3aaa3c9a75599584558a1ba597d85980b6391ed1bd2c2d"
        },
        "downloads": -1,
        "filename": "aiohttp_debugmode-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04adac0220c63d0e1bd1c73c71dd4511",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9858,
        "upload_time": "2020-03-13T16:59:00",
        "upload_time_iso_8601": "2020-03-13T16:59:00.795032Z",
        "url": "https://files.pythonhosted.org/packages/e6/0e/1fe4a556f723e1fb1093935ae3e9ad9d7fb7e5c15b1c92a3bd7feabb7e19/aiohttp_debugmode-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36613145fb489783833745310473cc7d60cc7078eb165b621b787b157cc64624",
          "md5": "f2fdec82b0ea35bdc3ce7c64ee2e4fc0",
          "sha256": "5fd0686019783a9c545ea86f11620f91b01c20a3d197e7f2dbc8aa0fa052f2bd"
        },
        "downloads": -1,
        "filename": "aiohttp-debugmode-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f2fdec82b0ea35bdc3ce7c64ee2e4fc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6793,
        "upload_time": "2020-03-13T16:59:03",
        "upload_time_iso_8601": "2020-03-13T16:59:03.027920Z",
        "url": "https://files.pythonhosted.org/packages/36/61/3145fb489783833745310473cc7d60cc7078eb165b621b787b157cc64624/aiohttp-debugmode-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5f22839948f95c5d3297c3d5c7fa8abf2c27f2bfa1479b323464b7d0e06bff2",
          "md5": "c52fa3d3b8222ac369a64d39d2c21dde",
          "sha256": "628aec047bd3073ea15eda8f915fb4aa9dda074b578fb6d83887ab6c4bea7ce4"
        },
        "downloads": -1,
        "filename": "aiohttp_debugmode-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c52fa3d3b8222ac369a64d39d2c21dde",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10091,
        "upload_time": "2020-03-13T17:16:51",
        "upload_time_iso_8601": "2020-03-13T17:16:51.361558Z",
        "url": "https://files.pythonhosted.org/packages/a5/f2/2839948f95c5d3297c3d5c7fa8abf2c27f2bfa1479b323464b7d0e06bff2/aiohttp_debugmode-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fd65315cf15b584c1a47d60a82d360ebcaed831eea2fd8cd5ec243c2794a9b2",
          "md5": "e26ae29b3f1080b1da866dc7bba5b24b",
          "sha256": "65da0021067c15fd1d1bbedf90d4dc518eced32b70f75a36b88c3e90352d5878"
        },
        "downloads": -1,
        "filename": "aiohttp-debugmode-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e26ae29b3f1080b1da866dc7bba5b24b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6864,
        "upload_time": "2020-03-13T17:16:52",
        "upload_time_iso_8601": "2020-03-13T17:16:52.217043Z",
        "url": "https://files.pythonhosted.org/packages/5f/d6/5315cf15b584c1a47d60a82d360ebcaed831eea2fd8cd5ec243c2794a9b2/aiohttp-debugmode-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "264658712e7a98229ddfdc040368bb9b339d5d7e2791785e27064ef7fe9137cb",
          "md5": "de4c757d02429397118a00fd8ed7bced",
          "sha256": "b0455e1b2bee958da6a34f1b510502240be156ad4a6149e4d6bbd2537c27f487"
        },
        "downloads": -1,
        "filename": "aiohttp_debugmode-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de4c757d02429397118a00fd8ed7bced",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10372,
        "upload_time": "2020-03-22T15:20:45",
        "upload_time_iso_8601": "2020-03-22T15:20:45.556552Z",
        "url": "https://files.pythonhosted.org/packages/26/46/58712e7a98229ddfdc040368bb9b339d5d7e2791785e27064ef7fe9137cb/aiohttp_debugmode-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dc84e0fe837341409832769335d355cd3f61cc7c714f6306791455ae3eac152",
          "md5": "b0c791a8003eadaa0d13683387add9f9",
          "sha256": "d6193ca7e5b15c6f126ccafcb94278da1e8db39a3049f00f2cdf70032b764e22"
        },
        "downloads": -1,
        "filename": "aiohttp-debugmode-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b0c791a8003eadaa0d13683387add9f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7703,
        "upload_time": "2020-03-22T15:20:46",
        "upload_time_iso_8601": "2020-03-22T15:20:46.374516Z",
        "url": "https://files.pythonhosted.org/packages/6d/c8/4e0fe837341409832769335d355cd3f61cc7c714f6306791455ae3eac152/aiohttp-debugmode-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "264658712e7a98229ddfdc040368bb9b339d5d7e2791785e27064ef7fe9137cb",
        "md5": "de4c757d02429397118a00fd8ed7bced",
        "sha256": "b0455e1b2bee958da6a34f1b510502240be156ad4a6149e4d6bbd2537c27f487"
      },
      "downloads": -1,
      "filename": "aiohttp_debugmode-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "de4c757d02429397118a00fd8ed7bced",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10372,
      "upload_time": "2020-03-22T15:20:45",
      "upload_time_iso_8601": "2020-03-22T15:20:45.556552Z",
      "url": "https://files.pythonhosted.org/packages/26/46/58712e7a98229ddfdc040368bb9b339d5d7e2791785e27064ef7fe9137cb/aiohttp_debugmode-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6dc84e0fe837341409832769335d355cd3f61cc7c714f6306791455ae3eac152",
        "md5": "b0c791a8003eadaa0d13683387add9f9",
        "sha256": "d6193ca7e5b15c6f126ccafcb94278da1e8db39a3049f00f2cdf70032b764e22"
      },
      "downloads": -1,
      "filename": "aiohttp-debugmode-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b0c791a8003eadaa0d13683387add9f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7703,
      "upload_time": "2020-03-22T15:20:46",
      "upload_time_iso_8601": "2020-03-22T15:20:46.374516Z",
      "url": "https://files.pythonhosted.org/packages/6d/c8/4e0fe837341409832769335d355cd3f61cc7c714f6306791455ae3eac152/aiohttp-debugmode-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}