{
  "info": {
    "author": "Hasadna",
    "author_email": "info@hasadna.org.il",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# OpenCaptcha\n\n[![Build Status](https://img.shields.io/travis/hasadna/OpenCaptcha/master.svg)](https://travis-ci.org/hasadna/OpenCaptcha)\n[![Coveralls](http://img.shields.io/coveralls/hasadna/OpenCaptcha.svg?branch=master)](https://coveralls.io/r/hasadna/OpenCaptcha?branch=master)\n\nOpenCaptcha is a completely self hosted CAPTCHA library that allows web app \ndevelopers to generate challenges based on data specific to their site.\nThe information from those challenges is presented graphically to the user \n(as an image - typically a chart), who then needs to choose the correct answer \nout of a closed set of options, based on the information in the image.\n\nFor example, a site sharing information about the coronavirus outbreak may\ngenerate a bar chart showing the 3 countries with the most active \ncases for that day and ask the user to respond with the country that had the \nmost cases. The types of challenges available are templates that can be \nconfigured by the hosting site as described below.\n\n## Installation\nRun `pip install open-captcha`\n\n## Using OpenCaptcha on your site\nTo use OpenCaptcha, the site's backend needs to provide the following:\n- **Data tables** the templates can use to generate challenges. The data would \nusually be SELECTed from the site's DB.\n- A **configuration** for a set of pre-built challenge templates. This would \nusually come in the form of a static JSON config file. Each configuration item\ntells open-captcha which template to use and provides the configuration for it\nto generate unique challenges from the data. \n\nWhen a challenge is generated (see flow below), it consists of three parts:\n- A `Challenge` structure comprising the information shown to the user. Specifically:\n    - The question (string).\n    - A chart (PNG image) shown to the user.\n    - A list of possible answers (strings).\n- A `ServerContext` structure, which should be stored on the server and is used\nto verify the user's answer.\n- A `ChallengeID`, which is an opaque token used to connect the `Challenge` to\n its `ServerContext`. \n\nThe suggested backend flow would be:\n1. At startup, construct a `CaptchaGenerator` object, providing it with data \ntables and the configuration for the templates you want to use.\n1. Call `generator.generate_challenge()`, which randomly selects one of the templates\nand uses it to generate a triplet of `ChallengeId`, `Challenge` and `ServerContext`.\n1. The server should store the `ServerContext` on some cache service (e.g. redis),\nkeyed by the `ChallengeId`. The context should be stored with a short TTL (but long\nenough to allow legitimate users to answer the question).\n1. The `Challenge` and `ChallengeId` are then sent to the client, which presents\nthem to the user. Once the user answers, the user's answer is sent together with \nthe `ChallengeId` back to the server for verification.\n1. The server retrieves the `ServerContext` from cache using the `ChallengeId`.\nIf the context is not found (wrong token or TTL expired) this counts as a verification\nfailure.\n1. The server calls `generator.verify_response()`, passing the user's answer\nand the `ServerContext`. The method returns True iff the answer is correct and\nwas received within a specified timeout. A configurable number of typos in the \nanswer is allowed. \n\nAn example flow can be found in [test_integration.py](https://github.com/hasadna/OpenCaptcha/blob/master/tests/test_integration.py),\nwhich shows the above steps in the form of a unit test. These do not include the calling server's\nlogic: how the configuration is loaded, how the data is retrieved from the DB, how the cache and \ncommunication with the client is managed. These are left out on purpose in order to allow the\nserver developer the maximum amount of flexibility in implementing those aspects.\n\n## Extending the library by adding new challenge templates\nOpenCaptcha comes with a small number of pre-defined templates. These can be \nextended over time by the developers working on OpenCaptcha itself, but they\ncan also be extended by server developers using OpenCaptcha to add unique types\nof challenges that make sense for their site.\n\nTo add a new type of challenge, simply create a subclass of `ChallengeTemplate`\nand implement the following interface:\n1. The class attribute `config_name` should be the name of the template, which is\nhow it's referred to from the configuration.\n1. The class's `__init__()` method is free to accept any type and number of parameters. \nThese are specified in the configuration item that references that template. Typical \nparameters would be the question text, which data tables and columns to get the \ndata from and other template-specific parameters.\n1. Implement the `generate_challenge()` method. This method receives the data and\nshould return a `Challenge` object and the correct answer.\n\nSee the [code](https://github.com/hasadna/OpenCaptcha/tree/master/open_captcha) \nand [tests](https://github.com/hasadna/OpenCaptcha/tree/master/tests) for more details.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hasadna/OpenCaptcha",
    "keywords": "CAPTCHA",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "open-captcha",
    "package_url": "https://pypi.org/project/open-captcha/",
    "platform": "",
    "project_url": "https://pypi.org/project/open-captcha/",
    "project_urls": {
      "Homepage": "https://github.com/hasadna/OpenCaptcha"
    },
    "release_url": "https://pypi.org/project/open-captcha/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "CAPTCHA challenges generated from your service's data",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7094068,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e808315c133aaa900cae6fdca2206ed6661a0a35e31c08b90561815b6e7bf2ce",
          "md5": "921b5a5f523f995e51f3d4dfb95942be",
          "sha256": "c94edcf155d9fd571ef29293e876d3abf5f531d8c2ce0a22b61ad3eee0878945"
        },
        "downloads": -1,
        "filename": "open-captcha-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "921b5a5f523f995e51f3d4dfb95942be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5877,
        "upload_time": "2020-04-18T18:28:57",
        "upload_time_iso_8601": "2020-04-18T18:28:57.759437Z",
        "url": "https://files.pythonhosted.org/packages/e8/08/315c133aaa900cae6fdca2206ed6661a0a35e31c08b90561815b6e7bf2ce/open-captcha-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16e06dd9831c200ac1a6d5713d6a29ccf34b5a8feb016e5cd021435bda0242cc",
          "md5": "4592bbfd25764c45e1153b58f0d0d193",
          "sha256": "6a0a465d99c6426a3ecdaeff30bb5a7a2cbe723098909143f9e3e503940bf2fb"
        },
        "downloads": -1,
        "filename": "open-captcha-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4592bbfd25764c45e1153b58f0d0d193",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5983,
        "upload_time": "2020-04-18T19:28:33",
        "upload_time_iso_8601": "2020-04-18T19:28:33.376160Z",
        "url": "https://files.pythonhosted.org/packages/16/e0/6dd9831c200ac1a6d5713d6a29ccf34b5a8feb016e5cd021435bda0242cc/open-captcha-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b82292a985366f4e6b9f6d8fac7c2b1af8b842750b812d37eea94b3a01f5f3b",
          "md5": "99422c444f65e87640bdb10e9038f947",
          "sha256": "41b159db1dd4529750f8a77852a5d72621319caa9dd0d6d6dd52b82dedfeb627"
        },
        "downloads": -1,
        "filename": "open-captcha-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "99422c444f65e87640bdb10e9038f947",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5986,
        "upload_time": "2020-04-18T19:41:04",
        "upload_time_iso_8601": "2020-04-18T19:41:04.217427Z",
        "url": "https://files.pythonhosted.org/packages/7b/82/292a985366f4e6b9f6d8fac7c2b1af8b842750b812d37eea94b3a01f5f3b/open-captcha-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0b6443800257c5575d29e235de54974509ab06d6c8414871b3d1aa18faba3e7",
          "md5": "503e3e449874b305de7d00738df443c7",
          "sha256": "052cb864e9279518abd16ba8c6c1c184d3240b5925fe06ca4226d1f3dd2e541c"
        },
        "downloads": -1,
        "filename": "open-captcha-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "503e3e449874b305de7d00738df443c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8176,
        "upload_time": "2020-04-24T16:00:22",
        "upload_time_iso_8601": "2020-04-24T16:00:22.920849Z",
        "url": "https://files.pythonhosted.org/packages/e0/b6/443800257c5575d29e235de54974509ab06d6c8414871b3d1aa18faba3e7/open-captcha-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e0b6443800257c5575d29e235de54974509ab06d6c8414871b3d1aa18faba3e7",
        "md5": "503e3e449874b305de7d00738df443c7",
        "sha256": "052cb864e9279518abd16ba8c6c1c184d3240b5925fe06ca4226d1f3dd2e541c"
      },
      "downloads": -1,
      "filename": "open-captcha-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "503e3e449874b305de7d00738df443c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8176,
      "upload_time": "2020-04-24T16:00:22",
      "upload_time_iso_8601": "2020-04-24T16:00:22.920849Z",
      "url": "https://files.pythonhosted.org/packages/e0/b6/443800257c5575d29e235de54974509ab06d6c8414871b3d1aa18faba3e7/open-captcha-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}