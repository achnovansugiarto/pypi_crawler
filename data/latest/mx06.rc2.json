{
  "info": {
    "author": "Philippe Prados",
    "author_email": "github@prados.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# Virtual DataFrame\n\n[Full documentation](https://pprados.github.io/virtual_dataframe/)\n\n## Motivation\n\nWith Panda-like dataframe or numby-like array, do you want to create a code, and choose at the end, the framework\nto use?  Do you want to be able to choose the best framework after simply performing performance measurements?\nThis framework unifies multiple Panda-compatible or Numpy-comptaible components,\nto allow the writing of a single code, compatible with all.\n\nDo you want to use different architectures at different times of the year to be \"green\" and cheaper?\nDo you want to use a GPU only for the black-friday?\n\n## Synopsis\n\nWith some parameters and Virtual classes, it's possible to write a code, and execute this code:\n\n- With or without multicore\n- With or without cluster (multi nodes)\n- With or without GPU\n\nTo do that, we create some virtual classes, add some methods in others classes, etc.\n\nIt's difficult to use a combinaison of framework, with the same classe name, with similare semantic, etc.\nFor example, if you want to use in the same program, Dask, cudf, pandas, modin, pyspark or pyspark+rapids,\nyou must manage:\n\n- `pandas.DataFrame`, `pandas,Series`\n- `modin.pandas.DataFrame`, `modin.pandas.Series`\n- `cudf.DataFrame`, `cudf.Series`\n- `dask.DataFrame`, `dask.Series`\n- `pyspark.pandas.DataFrame`, `pyspark.pandas.Series`\n\nWith numpy, you must manage:\n- `numpy.ndarray`\n- `cupy.ndarray`\n- `dask.array`\n\n With `cudf` or `cudf`, the code must call `.to_pandas()` or `asnumpy()`. With dask, the code must call `.compute()`, can use `@delayed` or\n`dask.distributed.Client`. etc.\n\nWe propose to replace all these classes and scenarios, with a *uniform model*,\ninspired by [dask](https://www.dask.org/) (the more complex API).\nThen, it is possible to write one code, and use it in differents environnements and frameworks.\n\nThis project is essentially a back-port of *Dask+Cudf* to others frameworks.\nWe try to normalize the API of all frameworks.\nThis project will *weave* your code with the selected framework, at runtime.\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/pprados/virtual-dataframe?labpath=%2Fmain%2Fnotebooks)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pprados/mx06",
    "keywords": "dataframe",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mx06",
    "package_url": "https://pypi.org/project/mx06/",
    "platform": null,
    "project_url": "https://pypi.org/project/mx06/",
    "project_urls": {
      "Homepage": "https://github.com/pprados/mx06"
    },
    "release_url": "https://pypi.org/project/mx06/0.2.dev0/",
    "requires_dist": [
      "pandas (>=1.3.0)",
      "python-dotenv (>=0.20)",
      "GPUtil (>=1.4.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "Bridge between pandas, cudf, modin, dask, dask-modin, dask-cudf, spark or spark+rapids and between numpy, cupy and dask.array",
    "version": "0.2.dev0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15979087,
  "releases": {
    "0.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eed46c5bc21e92a5a3b61241ba78f5033414159df1cecbfc6eaf658230bd5c35",
          "md5": "99866fc7312a7b05c7fd1074a066f427",
          "sha256": "5d386b405826adfb78f2fa17dace5a57ee78cd0564a74ce8d0af2c72a6dadc88"
        },
        "downloads": -1,
        "filename": "mx06-0.1.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99866fc7312a7b05c7fd1074a066f427",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 24293,
        "upload_time": "2022-12-03T14:29:20",
        "upload_time_iso_8601": "2022-12-03T14:29:20.716224Z",
        "url": "https://files.pythonhosted.org/packages/ee/d4/6c5bc21e92a5a3b61241ba78f5033414159df1cecbfc6eaf658230bd5c35/mx06-0.1.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "082f689a49b87ff342174d951f7ec4f367ff83b971bd6776ebd6e186f890ad78",
          "md5": "e8c469e635fddc5899d1537698525a0d",
          "sha256": "3bcc58f467c49d2fbc1fa1a88892edbecc535ad0b4cfa44b62ea1a3470349a3c"
        },
        "downloads": -1,
        "filename": "mx06-0.2.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8c469e635fddc5899d1537698525a0d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 26639,
        "upload_time": "2022-12-03T14:41:00",
        "upload_time_iso_8601": "2022-12-03T14:41:00.895698Z",
        "url": "https://files.pythonhosted.org/packages/08/2f/689a49b87ff342174d951f7ec4f367ff83b971bd6776ebd6e186f890ad78/mx06-0.2.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "082f689a49b87ff342174d951f7ec4f367ff83b971bd6776ebd6e186f890ad78",
        "md5": "e8c469e635fddc5899d1537698525a0d",
        "sha256": "3bcc58f467c49d2fbc1fa1a88892edbecc535ad0b4cfa44b62ea1a3470349a3c"
      },
      "downloads": -1,
      "filename": "mx06-0.2.dev0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e8c469e635fddc5899d1537698525a0d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 26639,
      "upload_time": "2022-12-03T14:41:00",
      "upload_time_iso_8601": "2022-12-03T14:41:00.895698Z",
      "url": "https://files.pythonhosted.org/packages/08/2f/689a49b87ff342174d951f7ec4f367ff83b971bd6776ebd6e186f890ad78/mx06-0.2.dev0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}