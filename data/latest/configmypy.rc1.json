{
  "info": {
    "author": "Jean Kossaifi",
    "author_email": "jean.kossaifi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# ConfigMyPy\n\nConfigure My Python: Easy configuration of Python projects.\n\n## Quickstart\n\nJust clone the repository and install it, here in editable mode:\n\n```bash\ngit clone https://github.com/JeanKossaifi/configmypy\ncd configmypy\npython -m pip install -e .\n```\n\nThen, assuming you have a configuration file `config.yaml` in your folder, get your configuration using\n\n```python\nfrom configmypy import ConfigPipeline, YamlConfig, ArgparseConfig\n\npipe = ConfigPipeline([YamlConfig('./config.yaml'),\n                        ArgparseConfig()])\nconfig = pipe.read_conf()\n```\n\nThen just read your parameters from config:\n\n```\narg = config.arg\narg2 = config['arg2']\n...\n```\n\nThe script will read config.yaml, as well as optional command-line arguments, which will overwrite the config.\n\n## Rationale\n\nHow many times did you start having a large Python project, let's say to run some Machine Learning models, where you wanted to change quickly the parameters.\nThen you want to track them. In you write a small logger. Then you write a small yaml config file to more easily manage the quickly growing list of parameters.\nThen you realize you sometimes need to change some of these parameters on the fly. \nIn comes argparse, and you manually override an increasingly long list of paramters with a code becoming a long list of\n\n```python\nif args.parameter is not None:\n    config['parameter'] = args.parameter\n```\n\n...and there goes your sanity... Along with any hope of properly managing and tracking your experiments. \n\nTo address this frustration, I wrote this minimal package that makes this easy.\n\n## Reading from a `.yaml` config file\n\nImagine you have a `config.yaml` file that looks like this:\n\n```yaml\ndefault:\n  opt:\n    optimizer: 'adam'\n    lr: 0.1\n  data:\n    dataset: 'ns'\n    batch_size: 12\n    \ntest:\n  opt:\n    optimizer: 'SGD'\n```\n\nYou can read that using `configmypy.YamlConfig`: \n\n```yaml\nreader = YamlConfig('./config.yaml', config_name='default')\nconfig, _ = reader.read_conf()\n```\n\n## Bunch configurations\n\nAll our configurations return a Bunch, not a dict. A Bunch is simply a dictionary that exposes its parameters as attributes so you can access them, equivalently, as\n`config['param']` or `config.param`.\n\n## Configuration Pipeline\n\nThe real power of `configmypy` comes from the ConfigPipeline: you can have several steps called sequentially. \nA typical usecase would be: \n1) Read a default (.yaml) config\n2) Optionally overwrite any of those parameters using argparse (command-line arguments)\n3) If the user specified another configuration, update the parameters read so far with that new config\n\nThis would look like this with `configmypy`:\n\n```python\npipe = ConfigPipeline([YamlConfig('./config.yaml', config_name='default'),\n                        ArgparseConfig(config_file=None, config_name=None),\n                        YamlConfig()])\nconfig = pipe.read_conf()\n```\n\nThis will: \n1) first read the `default` section in `config.yaml`\n2) update any parameters with those passed by the user, including additional parameters `config_file` and `config_name` which are automatically passed to the next step\n3) If the user specified a `config_file`, that will be read by the next step and used to update the configuration.\n\nYou can check the configuration by calling `pipe.log()`:\n\n```python\n>>> pipe.log()\n###############################\n#####    CONFIGURATION    #####\n###############################\n\nSteps:\n------\n (1) YamlConfig with config_file=./config.yaml, config_name=default\n (2) ArgparseConfig with additional config={'config_file': None, 'config_name': None}\n (3) YamlConfig with config_file=config.yaml, config_name=test\n\n-------------------------------\n\nConfiguration:\n--------------\n\nopt.optimizer=SGD\nopt.lr=0.1\ndata.dataset=ns\ndata.batch_size=24\n\n###############################\n\n```\n\n## Questions or issues\nThis is very much a project in development that I wrote for myself and decided to open-source so myself and others could easily reuse it for multiple projects, while knowing it is actually tested!\n\nIf you have any questions or find any bugs, please open an issue, or better yet, a pull-request!\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/JeanKossaifi/configmypy/tarball/0.1.0",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JeanKossaifi/configmypy",
    "keywords": "",
    "license": "Modified BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "configmypy",
    "package_url": "https://pypi.org/project/configmypy/",
    "platform": null,
    "project_url": "https://pypi.org/project/configmypy/",
    "project_urls": {
      "Download": "https://github.com/JeanKossaifi/configmypy/tarball/0.1.0",
      "Homepage": "https://github.com/JeanKossaifi/configmypy"
    },
    "release_url": "https://pypi.org/project/configmypy/0.1.0/",
    "requires_dist": [
      "pytest",
      "pytest-mock",
      "ruamel.yaml"
    ],
    "requires_python": "",
    "summary": "Fast and easy configuration of Python projects.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15483384,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5e66194219be016bc48f112b13555a493550356c7243fca53d7da6c0e8cb6b0",
          "md5": "4f8a55290b8f485e609e6db3f716236b",
          "sha256": "b86eb75b0c5b40192ab6ec00985297e14cf439cd63cf697189dc2b731c9696da"
        },
        "downloads": -1,
        "filename": "configmypy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f8a55290b8f485e609e6db3f716236b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11055,
        "upload_time": "2022-10-21T06:04:48",
        "upload_time_iso_8601": "2022-10-21T06:04:48.497006Z",
        "url": "https://files.pythonhosted.org/packages/b5/e6/6194219be016bc48f112b13555a493550356c7243fca53d7da6c0e8cb6b0/configmypy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f88fdcf6972838d960e3d70c8b54abfc6b3691ced56b0b164ae0db3736d3fea",
          "md5": "9f849f7f31ec4d479a2f4ea5561cc3a0",
          "sha256": "b478f572a827b3935bce57c4c4695e78c16526406f1cd1fa3de975dc973e5271"
        },
        "downloads": -1,
        "filename": "configmypy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9f849f7f31ec4d479a2f4ea5561cc3a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9837,
        "upload_time": "2022-10-21T06:04:49",
        "upload_time_iso_8601": "2022-10-21T06:04:49.793082Z",
        "url": "https://files.pythonhosted.org/packages/2f/88/fdcf6972838d960e3d70c8b54abfc6b3691ced56b0b164ae0db3736d3fea/configmypy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5e66194219be016bc48f112b13555a493550356c7243fca53d7da6c0e8cb6b0",
        "md5": "4f8a55290b8f485e609e6db3f716236b",
        "sha256": "b86eb75b0c5b40192ab6ec00985297e14cf439cd63cf697189dc2b731c9696da"
      },
      "downloads": -1,
      "filename": "configmypy-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4f8a55290b8f485e609e6db3f716236b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11055,
      "upload_time": "2022-10-21T06:04:48",
      "upload_time_iso_8601": "2022-10-21T06:04:48.497006Z",
      "url": "https://files.pythonhosted.org/packages/b5/e6/6194219be016bc48f112b13555a493550356c7243fca53d7da6c0e8cb6b0/configmypy-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f88fdcf6972838d960e3d70c8b54abfc6b3691ced56b0b164ae0db3736d3fea",
        "md5": "9f849f7f31ec4d479a2f4ea5561cc3a0",
        "sha256": "b478f572a827b3935bce57c4c4695e78c16526406f1cd1fa3de975dc973e5271"
      },
      "downloads": -1,
      "filename": "configmypy-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9f849f7f31ec4d479a2f4ea5561cc3a0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9837,
      "upload_time": "2022-10-21T06:04:49",
      "upload_time_iso_8601": "2022-10-21T06:04:49.793082Z",
      "url": "https://files.pythonhosted.org/packages/2f/88/fdcf6972838d960e3d70c8b54abfc6b3691ced56b0b164ae0db3736d3fea/configmypy-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}