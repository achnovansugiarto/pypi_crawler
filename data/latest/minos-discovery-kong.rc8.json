{
  "info": {
    "author": "Minos Framework Devs",
    "author_email": "hey@minos.run",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<p align=\"center\">\n  <a href=\"https://minos.run\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/minos-framework/.github/main/images/logo.png\" alt=\"Minos logo\"></a>\n</p>\n\n## minos-kong\n\n[![PyPI Latest Release](https://img.shields.io/pypi/v/minos-kong.svg)](https://pypi.org/project/minos-kong/)\n[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/minos-framework/minos-python/pages%20build%20and%20deployment?label=docs)](https://minos-framework.github.io/minos-python)\n[![License](https://img.shields.io/github/license/minos-framework/minos-python.svg)](https://github.com/minos-framework/minos-python/blob/main/LICENSE)\n[![Coverage](https://codecov.io/github/minos-framework/minos-python/coverage.svg?branch=main)](https://codecov.io/gh/minos-framework/minos-python)\n[![Stack Overflow](https://img.shields.io/badge/Stack%20Overflow-Ask%20a%20question-green)](https://stackoverflow.com/questions/tagged/minos)\n\n## Summary\nPre-Alpha release, use at your own risk\nMinos Kong is a plugin that integrate minos micorservices with Kong API Gateway\n\n## Installation\n\nInstall the dependency:\n\n```shell\npip install minos-discovery-kong\n```\n\nModify `config.yml` file:\n\n```yaml\n...\ndiscovery:\n  client: minos.plugins.kong.KongDiscoveryClient\n  host: localhost\n  port: 8001\n...\n```\n\n## How to\nThe above configuration is sufficient for the microservice to subscribe on startup and unsubscribe on shutdown.\nTherefore, all you would have to do would be to make your requests against:\n\n`http://localhost:8000/your_endpoint`\n\n## Kong official documentation\n### Official docs\nYou can get read the official docs [here](https://docs.konghq.com/gateway/2.8.x/admin-api/).\n\n### Postman\n\nYou can get the official postman collection for postman [here](https://documenter.getpostman.com/view/10587735/SzS7QS2c#intro).\n\n## Konga - Administrative interface\nFor development purposes you can add open-source administrative section by using next docker service:\n```yaml\nservices:\n  ...\n  konga:\n      image: pantsel/konga\n      ports:\n          - 1337:1337\n      links:\n          - kong:kong\n      container_name: konga\n      environment:\n          - NODE_ENV=production\n```\n\n## Decorators\nDecorator `@enroute` can support next params:\n - `path` - route url path.\n - `method` - HTTP method.\n - `authenticated` (Optional) - True if route need authentication.\n - `authorized_groups` (Optional) - Groups which can access to specified route (they must exist in Kong).\n - `regex_priority` (Optional) - A number used to choose which route resolves a given request when several routes match it using regexes simultaneously. When two routes match the path and have the same regex_priority, the older one (lowest created_at) is used. Note that the priority for non-regex routes is different (longer non-regex routes are matched before shorter ones). Defaults to 0.\n\nExample:\n```python\n    @enroute.rest.command(f\"/users/{{uuid:{UUID_REGEX.pattern}}}/jwt\", \"POST\", authenticated=True, authorized_groups=[\"admin\"], regex_priority=2)\n    @enroute.broker.command(\"GetUserJWT\")\n    async def foo(self, request: Request) -> Response:\n       ...\n```\n## Route path\nIt is important to know that it is best to define routes with a regular expression when it is an id, uuid or similar. This is to avoid collisions with similar routes.\nInstead of using:\n```python\n@enroute.rest.command(\"/users/{uuid}\", \"POST\")\n```\nUse:\n```python\nimport re\nUUID_REGEX = re.compile(r\"\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}\")\n@enroute.rest.command(f\"/users/{{uuid:{UUID_REGEX.pattern}}}\", \"POST\")\n```\n\n## Authentication\n\nModify `config.yml` file. Add new middleware and modify discovery section:\n```yaml\n...\nmiddleware:\n  ...\n  - minos.plugins.kong.middleware\n\ndiscovery:\n  connector: minos.networks.DiscoveryConnector\n  client: minos.plugins.kong.KongDiscoveryClient\n  host: localhost\n  auth-type: basic-auth\n  port: 8001\n...\n```\n\nCurrently, there are 2 possible types of authentication:\n- `basic-auth`\n- `jwt`\n\nFor jwt auth type you can specify default token expiration. Example:\n```yaml\n...\nmiddleware:\n  ...\n  - minos.plugins.kong.middleware\n\ndiscovery:\n  connector: minos.networks.DiscoveryConnector\n  client: minos.plugins.kong.KongDiscoveryClient\n  host: localhost\n  auth-type: jwt\n  token-exp: 60 # seconds\n  port: 8001\n...\n```\n\n### JWT Token creation & refresh\nExample on how to create and refresh token. You need to store in database or similar the secret and key returned form kong in order to refresh existing token.\n```python\nfrom minos.common import (\n    UUID_REGEX,\n    NotProvidedException,\n    Config,\n    Inject,\n)\nfrom minos.cqrs import (\n    CommandService,\n)\nfrom minos.networks import (\n    Request,\n    Response,\n    enroute,\n)\n\nfrom ..aggregates import (\n    User,\n)\nfrom minos.plugins.kong import KongClient\n\nclass UserCommandService(CommandService):\n    \"\"\"UserCommandService class.\"\"\"\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.kong = self._get_kong_client()\n\n    @staticmethod\n    @Inject()\n    def _get_kong_client(config: Config) -> KongClient:\n        \"\"\"Get the service name.\"\"\"\n        if config is None:\n            raise NotProvidedException(\"The config object must be provided.\")\n        return KongClient.from_config(config)\n\n    @enroute.rest.command(f\"/users/{{uuid:{UUID_REGEX.pattern}}}/jwt\", \"POST\", authenticated=True,\n                          authorized_groups=[\"admin\"], regex_priority=3)\n    @enroute.broker.command(\"GetUserJWT\")\n    async def create_user_jwt(self, request: Request) -> Response:\n        params = await request.params()\n        uuid = params[\"uuid\"]\n        user = await User.get(uuid)\n\n        if user.uuid == request.user:\n            token = await self.add_jwt_to_consumer(request.headers.get(\"X-Consumer-ID\"))\n            return Response({\"token\": token})\n        else:\n            return Response(status=404)\n\n    async def add_jwt_to_consumer(self, consumer: str):\n        resp = await self.kong.add_jwt_to_consumer(consumer=consumer)\n        res = resp.json()\n        self.key = res['key']\n        self.secret = res['secret']\n        token = await self.kong.generate_jwt_token(key=self.key, secret=self.secret)\n        return token\n\n    @enroute.rest.command(f\"/users/{{uuid:{UUID_REGEX.pattern}}}/refresh-jwt\", \"POST\", authenticated=True,\n                          authorized_groups=[\"admin\"], regex_priority=3)\n    @enroute.broker.command(\"RefreshJWT\")\n    async def refresh_jwt(self, request: Request) -> Response:\n        token = await self.kong.generate_jwt_token(key=self.key, secret=self.secret)\n        return Response({\"token\": token})\n```\n\nFor the route to be authenticated with the method specified above, a parameter called `authenticated` must be passed:\n```python\nclass CategoryCommandService(CommandService):\n    @enroute.rest.command(\"/categories\", \"POST\", authenticated=True, authorized_groups=[\"super_admin\", \"admin\"])\n    @enroute.broker.command(\"CreateCategory\")\n    async def create_category(self, request: Request) -> Response:\n        try:\n            content = await request.content()\n            category = await Category.create(**content)\n            return Response(category)\n        except Exception:\n            raise ResponseException(\"An error occurred during category creation.\")\n```\n\nIf `authorized_groups` is also specified, this means that ACL will be enabled for that path and only users in the specified group will be allowed access.\n\nExample of how to create a user and add them to a group:\n\n```python\nfrom minos.common import (\n    NotProvidedException,\n    Config,\n    Inject,\n)\nfrom minos.cqrs import (\n    CommandService,\n)\nfrom minos.networks import (\n    Request,\n    Response,\n    enroute,\n)\nfrom ..aggregates import (\n    Role,\n    User,\n)\nfrom minos.plugins.kong import KongClient\n\n\nclass UserCommandService(CommandService):\n    \"\"\"UserCommandService class.\"\"\"\n\n\n    @enroute.rest.command(\"/users\", \"POST\")\n    @enroute.broker.command(\"CreateUser\")\n    async def create_user(self, request: Request) -> Response:\n        \"\"\"Create a new ``User`` instance.\n\n        :param request: The ``Request`` instance.\n        :return: A ``Response`` instance.\n        \"\"\"\n        content = await request.content()\n\n        active = True\n        if \"active\" in content:\n            active = content[\"active\"]\n\n        user = User(\n            name=content[\"name\"],\n            surname=content[\"surname\"],\n            email=content[\"email\"],\n            telephone=content[\"telephone\"],\n            role=content[\"role\"],\n            active=active,\n        )\n        await user.save()\n\n        kong = KongClient(self._get_kong_url())\n\n        consumer_raw = await kong.create_consumer(username=f\"{user.name} {user.surname}\", user=user.uuid, tags=[])\n        consumer = consumer_raw.json()\n\n        basic_auth = await kong.add_basic_auth_to_consumer(username=f\"{user.name.lower()}_{user.surname.lower()}\",\n                                                      password=content[\"password\"], consumer=consumer[\"id\"])\n\n        acl = await kong.add_acl_to_consumer(role=user.role.name.lower(), consumer=consumer[\"id\"])\n\n        return Response(user)\n\n    @staticmethod\n    @Inject()\n    def _get_kong_url(config: Config) -> str:\n        \"\"\"Get the service name.\"\"\"\n        if config is None:\n            raise NotProvidedException(\"The config object must be provided.\")\n        return f\"http://{config.get_by_key('discovery.host')}:{config.get_by_key('discovery.port')}\"\n```\n\nGenerate JWT example:\n```python\nfrom minos.common import (\n    UUID_REGEX,\n    NotProvidedException,\n    Config,\n    Inject,\n)\nfrom minos.cqrs import (\n    CommandService,\n)\nfrom minos.networks import (\n    Request,\n    Response,\n    enroute,\n)\nfrom ..aggregates import (\n    Role,\n    User,\n)\nfrom minos.plugins.kong import KongClient\n\nclass UserCommandService(CommandService):\n    \"\"\"UserCommandService class.\"\"\"\n\n    @enroute.rest.command(f\"/users/{{uuid:{UUID_REGEX.pattern}}}/jwt\", \"POST\", authenticated=True, authorized_groups=[\"admin\"])\n    @enroute.broker.command(\"GetUserJWT\")\n    async def create_user_jwt(self, request: Request) -> Response:\n        params = await request.params()\n        uuid = params[\"uuid\"]\n        user = await User.get(uuid)\n\n        if user.uuid == request.user:\n            kong = KongClient(self._get_kong_url())\n            jwt = await kong.add_jwt_to_consumer(request.headers.get(\"X-Consumer-ID\"))\n            return Response(jwt.json())\n        else:\n            return Response(status=404)\n\n    @staticmethod\n    @Inject()\n    def _get_kong_url(config: Config) -> str:\n        \"\"\"Get the service name.\"\"\"\n        if config is None:\n            raise NotProvidedException(\"The config object must be provided.\")\n        return f\"http://{config.get_by_key('discovery.host')}:{config.get_by_key('discovery.port')}\"\n```\n\nYou can get read the official docs [here](https://pantsel.github.io/konga/).\n\n\n## Documentation\n\nThe official API Reference is publicly available at the [GitHub Pages](https://minos-framework.github.io/minos-python).\n\n## Source Code\n\nThe source code of this project is hosted at the [GitHub Repository](https://github.com/minos-framework/minos-python).\n\n## Getting Help\n\nFor usage questions, the best place to go to is [StackOverflow](https://stackoverflow.com/questions/tagged/minos).\n\n## Discussion and Development\n\nMost development discussions take place over the [GitHub Issues](https://github.com/minos-framework/minos-python/issues). In addition, a [Gitter channel](https://gitter.im/minos-framework/community) is available for development-related questions.\n\n## License\n\nThis project is distributed under the [MIT](https://raw.githubusercontent.com/minos-framework/minos-python/main/LICENSE) license.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.minos.run/",
    "keywords": "clariteia,minos,microservice,saga,kong",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minos-discovery-kong",
    "package_url": "https://pypi.org/project/minos-discovery-kong/",
    "platform": null,
    "project_url": "https://pypi.org/project/minos-discovery-kong/",
    "project_urls": {
      "Homepage": "https://www.minos.run/",
      "Repository": "https://github.com/minos-framework/minos-python"
    },
    "release_url": "https://pypi.org/project/minos-discovery-kong/0.7.0/",
    "requires_dist": [
      "minos-microservice-common (>=0.7.0,<0.8.0)",
      "minos-microservice-networks (>=0.7.0,<0.8.0)",
      "httpx (>=0.22.0,<0.23.0)",
      "pytz (>=2022.1,<2023.0)",
      "PyJWT (>=2.3.0,<3.0.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "The minos-kong plugin offer an interface that permit integrate Minos Microservice with Kong API Gateway",
    "version": "0.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14021873,
  "releases": {
    "0.1.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a12da9b2cae9fc3a8eb343f8fe5444a7a4af43b38db046549cfd51c1ff0ac990",
          "md5": "932611e2c06efe635838e538d5b3e545",
          "sha256": "6c6dba04eecd809dece266f679dcc4c81214964f79214293be35bf4fbaced80d"
        },
        "downloads": -1,
        "filename": "minos_discovery_kong-0.1.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "932611e2c06efe635838e538d5b3e545",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 6556,
        "upload_time": "2022-04-02T10:21:54",
        "upload_time_iso_8601": "2022-04-02T10:21:54.118015Z",
        "url": "https://files.pythonhosted.org/packages/a1/2d/a9b2cae9fc3a8eb343f8fe5444a7a4af43b38db046549cfd51c1ff0ac990/minos_discovery_kong-0.1.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7a8a6601b988d56c874ba234b4b74a5fa35ecdbed1d79af43da1a64b183bf82",
          "md5": "e0bb29d18b9ff809153696ecb46ce76e",
          "sha256": "92bf76fa0fc99912570bbf0371cfb9b6fb047966d5440785b85fec71e7f9c7b5"
        },
        "downloads": -1,
        "filename": "minos-discovery-kong-0.1.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "e0bb29d18b9ff809153696ecb46ce76e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 5291,
        "upload_time": "2022-04-02T10:21:52",
        "upload_time_iso_8601": "2022-04-02T10:21:52.462056Z",
        "url": "https://files.pythonhosted.org/packages/f7/a8/a6601b988d56c874ba234b4b74a5fa35ecdbed1d79af43da1a64b183bf82/minos-discovery-kong-0.1.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecba8f465054298aa6a347460b50aa735ca5f200aa5ff7cfb0c8ca1132abce71",
          "md5": "5ad353ccd101c760cca4163c5455ad11",
          "sha256": "db5f52655277d171d7e894443c8cda666c8a16d9dd99de57e6c66095ac0b6487"
        },
        "downloads": -1,
        "filename": "minos_discovery_kong-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ad353ccd101c760cca4163c5455ad11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 10552,
        "upload_time": "2022-05-12T07:10:50",
        "upload_time_iso_8601": "2022-05-12T07:10:50.599658Z",
        "url": "https://files.pythonhosted.org/packages/ec/ba/8f465054298aa6a347460b50aa735ca5f200aa5ff7cfb0c8ca1132abce71/minos_discovery_kong-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31642b4c0abc065ab3827fe6de850adfe08cb61ee55f65fd283c63631dbccad9",
          "md5": "f65012c6e7df0bf7ab3c3831724314c7",
          "sha256": "91741841c811db862700ef15fa348c232d04b9870bb0cb60fcfccfcb5947abd3"
        },
        "downloads": -1,
        "filename": "minos-discovery-kong-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f65012c6e7df0bf7ab3c3831724314c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 13494,
        "upload_time": "2022-05-12T07:10:48",
        "upload_time_iso_8601": "2022-05-12T07:10:48.420454Z",
        "url": "https://files.pythonhosted.org/packages/31/64/2b4c0abc065ab3827fe6de850adfe08cb61ee55f65fd283c63631dbccad9/minos-discovery-kong-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efce1bb072a9095e4c1e08b9452569fc6513bc8be4cc31916b0e0e62770028fc",
          "md5": "37bac6c51cbedc4c0617517418339eec",
          "sha256": "2187b6739edfd5a777dab51e14af3bc3d2d7eae201b77cea79c831e5295f2395"
        },
        "downloads": -1,
        "filename": "minos_discovery_kong-0.7.0.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37bac6c51cbedc4c0617517418339eec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 10106,
        "upload_time": "2022-04-11T15:55:57",
        "upload_time_iso_8601": "2022-04-11T15:55:57.353098Z",
        "url": "https://files.pythonhosted.org/packages/ef/ce/1bb072a9095e4c1e08b9452569fc6513bc8be4cc31916b0e0e62770028fc/minos_discovery_kong-0.7.0.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c054c44ff266f3a3492e53529422eb9deeeee5d241e581bf87a5fd6f905eecf",
          "md5": "a32985d672d815b25a28c37e1ed6dcac",
          "sha256": "fd8e0b09aae2b9e5d1883670ce8ae1bec9fc1a7a9dddc6064db3840bc67c5af9"
        },
        "downloads": -1,
        "filename": "minos-discovery-kong-0.7.0.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "a32985d672d815b25a28c37e1ed6dcac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 10681,
        "upload_time": "2022-04-11T15:55:55",
        "upload_time_iso_8601": "2022-04-11T15:55:55.492289Z",
        "url": "https://files.pythonhosted.org/packages/0c/05/4c44ff266f3a3492e53529422eb9deeeee5d241e581bf87a5fd6f905eecf/minos-discovery-kong-0.7.0.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0.dev2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e27fbee3fdfeb148776873312dd01821401216b396543a0405581e00e691c311",
          "md5": "1d70fdcdd8739e27fdb6a9da4779c02c",
          "sha256": "c854445bb99dd7768084884ed0f482648ef180163adb3f2ea0cc64befd6a3857"
        },
        "downloads": -1,
        "filename": "minos_discovery_kong-0.7.0.dev2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d70fdcdd8739e27fdb6a9da4779c02c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 11825,
        "upload_time": "2022-04-21T16:59:31",
        "upload_time_iso_8601": "2022-04-21T16:59:31.963116Z",
        "url": "https://files.pythonhosted.org/packages/e2/7f/bee3fdfeb148776873312dd01821401216b396543a0405581e00e691c311/minos_discovery_kong-0.7.0.dev2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "765b570cd33c15bcc1fb12a9cacc32114e041ff3ccaa061aa146b6cdb8d8b3d7",
          "md5": "726ba106bf3fb1dddbe98752477f0857",
          "sha256": "812a545476a3564a5b1a6593f1ace575da78c2a976c1d29d179c176a74860d11"
        },
        "downloads": -1,
        "filename": "minos-discovery-kong-0.7.0.dev2.tar.gz",
        "has_sig": false,
        "md5_digest": "726ba106bf3fb1dddbe98752477f0857",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 13380,
        "upload_time": "2022-04-21T16:59:30",
        "upload_time_iso_8601": "2022-04-21T16:59:30.106617Z",
        "url": "https://files.pythonhosted.org/packages/76/5b/570cd33c15bcc1fb12a9cacc32114e041ff3ccaa061aa146b6cdb8d8b3d7/minos-discovery-kong-0.7.0.dev2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0.dev3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06434e6288dbbab7167d38b0a8ec193f3ae7cad944079cf7dcb5179943e66290",
          "md5": "9769cac823df68521586cc4921377612",
          "sha256": "b6b41828800a570fafaef5462997bb4df8cc9a90be00dd3126ffb6d0e932f3ce"
        },
        "downloads": -1,
        "filename": "minos_discovery_kong-0.7.0.dev3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9769cac823df68521586cc4921377612",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 11849,
        "upload_time": "2022-04-23T21:12:20",
        "upload_time_iso_8601": "2022-04-23T21:12:20.292939Z",
        "url": "https://files.pythonhosted.org/packages/06/43/4e6288dbbab7167d38b0a8ec193f3ae7cad944079cf7dcb5179943e66290/minos_discovery_kong-0.7.0.dev3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2ad5eb899e0192243fc5bd0e6560792826524eb9bf638f101bb35c58119b001",
          "md5": "089a9e46141f0ef633f73c3965ae6705",
          "sha256": "a992cfefc8d9669f23897fe86712806ad58409883d179e039e7774351765019e"
        },
        "downloads": -1,
        "filename": "minos-discovery-kong-0.7.0.dev3.tar.gz",
        "has_sig": false,
        "md5_digest": "089a9e46141f0ef633f73c3965ae6705",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 13407,
        "upload_time": "2022-04-23T21:12:18",
        "upload_time_iso_8601": "2022-04-23T21:12:18.111071Z",
        "url": "https://files.pythonhosted.org/packages/e2/ad/5eb899e0192243fc5bd0e6560792826524eb9bf638f101bb35c58119b001/minos-discovery-kong-0.7.0.dev3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0.dev4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a36f4220310e67fde2c7c45fd7fc5ef70256591267ae08a6e013aa5a011dd601",
          "md5": "9102cb08fe0d494647d25ac722807d66",
          "sha256": "93e83f6776367f4faa0e05431b8284151716d626a1aaf80a454e888b1dc05892"
        },
        "downloads": -1,
        "filename": "minos_discovery_kong-0.7.0.dev4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9102cb08fe0d494647d25ac722807d66",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 10602,
        "upload_time": "2022-05-03T12:37:47",
        "upload_time_iso_8601": "2022-05-03T12:37:47.267243Z",
        "url": "https://files.pythonhosted.org/packages/a3/6f/4220310e67fde2c7c45fd7fc5ef70256591267ae08a6e013aa5a011dd601/minos_discovery_kong-0.7.0.dev4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b01e3ad4571c52ec5ddf8ee3145a9607c9598f783294b678cc1c2a43fb9dfeb",
          "md5": "395363f9b76a5f2237bf3c096d5fe72c",
          "sha256": "2ac7b886df40cf11bdde7a8d3c91eebd2dd2733ea8d657fdf6de08b0ba326750"
        },
        "downloads": -1,
        "filename": "minos-discovery-kong-0.7.0.dev4.tar.gz",
        "has_sig": false,
        "md5_digest": "395363f9b76a5f2237bf3c096d5fe72c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 13411,
        "upload_time": "2022-05-03T12:37:45",
        "upload_time_iso_8601": "2022-05-03T12:37:45.792042Z",
        "url": "https://files.pythonhosted.org/packages/6b/01/e3ad4571c52ec5ddf8ee3145a9607c9598f783294b678cc1c2a43fb9dfeb/minos-discovery-kong-0.7.0.dev4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62beaf00eddb301c09792dd21c881514b016077e72bbd4b5576be15b23dfc566",
          "md5": "56b5930d40ae4f4b3b8f1ee782e230c2",
          "sha256": "29c067d95bcefcb33d75849cc1dbc2167db9c4fc791ff73408cfbed1fc1ebb6e"
        },
        "downloads": -1,
        "filename": "minos_discovery_kong-0.8.0.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "56b5930d40ae4f4b3b8f1ee782e230c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 10604,
        "upload_time": "2022-05-12T09:21:00",
        "upload_time_iso_8601": "2022-05-12T09:21:00.420000Z",
        "url": "https://files.pythonhosted.org/packages/62/be/af00eddb301c09792dd21c881514b016077e72bbd4b5576be15b23dfc566/minos_discovery_kong-0.8.0.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c752af7c8c3978f1d36506ea15284302cddb1c05079767eeb9dabfe4a0baeb9",
          "md5": "a2a81d0eeda7aa87b16cc673f1e0b3b8",
          "sha256": "6c678d70db1d301c34696643377909b0ac40c13f7a9d275449ad880ba9c4aafd"
        },
        "downloads": -1,
        "filename": "minos-discovery-kong-0.8.0.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "a2a81d0eeda7aa87b16cc673f1e0b3b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 13522,
        "upload_time": "2022-05-12T09:20:58",
        "upload_time_iso_8601": "2022-05-12T09:20:58.823674Z",
        "url": "https://files.pythonhosted.org/packages/4c/75/2af7c8c3978f1d36506ea15284302cddb1c05079767eeb9dabfe4a0baeb9/minos-discovery-kong-0.8.0.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0.dev2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e59540e7ff1f35b0be9b2deaeb4fc64bdecd9e4aec0d6a2777e21fc3db375a19",
          "md5": "09aa78067884aa848ab60ac07290ff7d",
          "sha256": "b30026805493837a97606c4faa8394b10a26308aeb00e56e1c7295530ef85deb"
        },
        "downloads": -1,
        "filename": "minos_discovery_kong-0.8.0.dev2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09aa78067884aa848ab60ac07290ff7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 10609,
        "upload_time": "2022-06-03T08:25:46",
        "upload_time_iso_8601": "2022-06-03T08:25:46.401614Z",
        "url": "https://files.pythonhosted.org/packages/e5/95/40e7ff1f35b0be9b2deaeb4fc64bdecd9e4aec0d6a2777e21fc3db375a19/minos_discovery_kong-0.8.0.dev2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90336511d8d1c88277fc4ede312cddef7795691aef65ac492ece35b8c3dae3ce",
          "md5": "c0b615b991d859d292f9e80837eab412",
          "sha256": "4dd51ecde3974e27b1ede44660b0137dc20aeeabac81bb3cb7d7710b7aa7238a"
        },
        "downloads": -1,
        "filename": "minos-discovery-kong-0.8.0.dev2.tar.gz",
        "has_sig": false,
        "md5_digest": "c0b615b991d859d292f9e80837eab412",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 13518,
        "upload_time": "2022-06-03T08:25:42",
        "upload_time_iso_8601": "2022-06-03T08:25:42.288914Z",
        "url": "https://files.pythonhosted.org/packages/90/33/6511d8d1c88277fc4ede312cddef7795691aef65ac492ece35b8c3dae3ce/minos-discovery-kong-0.8.0.dev2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ecba8f465054298aa6a347460b50aa735ca5f200aa5ff7cfb0c8ca1132abce71",
        "md5": "5ad353ccd101c760cca4163c5455ad11",
        "sha256": "db5f52655277d171d7e894443c8cda666c8a16d9dd99de57e6c66095ac0b6487"
      },
      "downloads": -1,
      "filename": "minos_discovery_kong-0.7.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5ad353ccd101c760cca4163c5455ad11",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 10552,
      "upload_time": "2022-05-12T07:10:50",
      "upload_time_iso_8601": "2022-05-12T07:10:50.599658Z",
      "url": "https://files.pythonhosted.org/packages/ec/ba/8f465054298aa6a347460b50aa735ca5f200aa5ff7cfb0c8ca1132abce71/minos_discovery_kong-0.7.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31642b4c0abc065ab3827fe6de850adfe08cb61ee55f65fd283c63631dbccad9",
        "md5": "f65012c6e7df0bf7ab3c3831724314c7",
        "sha256": "91741841c811db862700ef15fa348c232d04b9870bb0cb60fcfccfcb5947abd3"
      },
      "downloads": -1,
      "filename": "minos-discovery-kong-0.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f65012c6e7df0bf7ab3c3831724314c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 13494,
      "upload_time": "2022-05-12T07:10:48",
      "upload_time_iso_8601": "2022-05-12T07:10:48.420454Z",
      "url": "https://files.pythonhosted.org/packages/31/64/2b4c0abc065ab3827fe6de850adfe08cb61ee55f65fd283c63631dbccad9/minos-discovery-kong-0.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}