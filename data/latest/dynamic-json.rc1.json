{
  "info": {
    "author": "Liam Childs",
    "author_email": "liam.h.childs@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "[![Build Status](https://travis-ci.org/childsish/dynamic-json.svg?branch=master)](https://travis-ci.org/childsish/dynamic-json)\n\ndynamic-json\n============\n\nDynamic-json allows self-referential entries in a json file. It requires no dependencies, but lacks all the nice features of the yaml specification. If you prefer yaml then see [dynamic-yaml][dynamic-yaml].\n\nUsage\n-----\n\nThe key feature that was introduced is the ability for a string scalar to reference other parts of the configuration tree. This is done using the Python string formatting syntax. The characters '{' and '}' enclose a reference to another entry in the configuration structure. The reference takes the form key1.key2 where key1 maps to another mapping object and can be found in the root mapping, and key2 can be found in key1's mapping object. Multiple levels of nesting can be used (eg. key1.key2.key3 etc...).\n\nAn example yaml configuration:\n```json\n{\n  \"project_name\": \"hello-world\",\n  \"dirs\": {\n    \"home\": \"/home/user\",\n    \"venv\": \"{dirs.home}/venvs/{project_name}\",\n    \"data\": \"{dirs.venv}/data\",\n    \"output\": \"{dirs.data}/output-{parameters.parameter1}-{parameters.parameter2}\"\n  },\n  \"parameters\": {\n    \"parameter1\": \"a\",\n    \"parameter2\": \"b\"\n  }\n}\n```\n\nReading in a json file:\n\n```python\nimport dynamic_json\n\nwith open('/path/to/file.json') as fileobj:\n    cfg = dynamic_json.load(fileobj)\n    assert cfg.dirs.venv == '/home/user/venvs/hello-world'\n    assert cfg.dirs.output == '/home/user/venvs/hello-world/data/output-a-b'\n```\n\nAs the variables are dynamically resolved, it is also possible to combine this with `argparse`:\n\n```python\nimport dynamic_json\n\nfrom argparse import ArgumentParser\n\nwith open('/path/to/file.yaml') as fileobj:\n    cfg = dynamic_json.load(fileobj)\n    parser = ArgumentParser()\n    parser.add_argument('--parameter1')\n    parser.add_argument('--parameter2')\n    parser.parse_args('--parameter1 c --parameter2 d'.split(), namespace=cfg.parameters)\n    assert cfg.dirs.output == '/home/user/venvs/hello-world/data/output-c-d'\n```\n\nInstallation\n------------\n\nTo install, simply run:\n\n```bash\npip install dynamic-json\n```\n\nRestrictions\n------------\n\nDue to the short amount of time I was willing to spend on working upon this, there are a few restrictions that I could not overcome.\n\n* **Certain keys can only be used via `__getitem__` and not `__getattr__`.**\nBecause `dict` comes with it's own set of attributes that are always resolved first, the values for the following keys must be gotten using the item getter rather than the attribute getter (eg. config['items'] vs. config.items):\n  * append\n  * extend\n  * insert\n  * remove\n  * pop\n  * clear\n  * index\n  * count\n  * sort\n  * reverse\n  * copy \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/childsish/dynamic-json",
    "keywords": "development json configuration",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynamic-json",
    "package_url": "https://pypi.org/project/dynamic-json/",
    "platform": "",
    "project_url": "https://pypi.org/project/dynamic-json/",
    "project_urls": {
      "Homepage": "https://github.com/childsish/dynamic-json"
    },
    "release_url": "https://pypi.org/project/dynamic-json/1.0.3/",
    "requires_dist": [
      "twine ; extra == 'dev'",
      "wheel ; extra == 'dev'"
    ],
    "requires_python": ">=3.0",
    "summary": "Enables self referential json entries",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9342694,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea0b6e62f925d23d1fbc0be6f5f6a4f2603fff17ecf79d6059ad1dd30fc12847",
          "md5": "0a3ae85c9542faa01e972b4fd9fb0ce2",
          "sha256": "b3535ebddb850a71b8cceeb9b7ac2ad231cf05a463d1c6d24def483dce2a618e"
        },
        "downloads": -1,
        "filename": "dynamic_json-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a3ae85c9542faa01e972b4fd9fb0ce2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 4240,
        "upload_time": "2021-02-07T13:40:27",
        "upload_time_iso_8601": "2021-02-07T13:40:27.004392Z",
        "url": "https://files.pythonhosted.org/packages/ea/0b/6e62f925d23d1fbc0be6f5f6a4f2603fff17ecf79d6059ad1dd30fc12847/dynamic_json-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c864c4986b252687b744f2710641d10874903aa127cc577585548ce9ac1ba7a",
          "md5": "c2e8fd36e722e9b8119098a9d45d166a",
          "sha256": "c5585eb2aa91aa59663a5175b35cc5eb2e4fc0a64d257fc4df848ac0c880af44"
        },
        "downloads": -1,
        "filename": "dynamic-json-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c2e8fd36e722e9b8119098a9d45d166a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 3256,
        "upload_time": "2021-02-07T13:40:28",
        "upload_time_iso_8601": "2021-02-07T13:40:28.178808Z",
        "url": "https://files.pythonhosted.org/packages/1c/86/4c4986b252687b744f2710641d10874903aa127cc577585548ce9ac1ba7a/dynamic-json-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea0b6e62f925d23d1fbc0be6f5f6a4f2603fff17ecf79d6059ad1dd30fc12847",
        "md5": "0a3ae85c9542faa01e972b4fd9fb0ce2",
        "sha256": "b3535ebddb850a71b8cceeb9b7ac2ad231cf05a463d1c6d24def483dce2a618e"
      },
      "downloads": -1,
      "filename": "dynamic_json-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a3ae85c9542faa01e972b4fd9fb0ce2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0",
      "size": 4240,
      "upload_time": "2021-02-07T13:40:27",
      "upload_time_iso_8601": "2021-02-07T13:40:27.004392Z",
      "url": "https://files.pythonhosted.org/packages/ea/0b/6e62f925d23d1fbc0be6f5f6a4f2603fff17ecf79d6059ad1dd30fc12847/dynamic_json-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c864c4986b252687b744f2710641d10874903aa127cc577585548ce9ac1ba7a",
        "md5": "c2e8fd36e722e9b8119098a9d45d166a",
        "sha256": "c5585eb2aa91aa59663a5175b35cc5eb2e4fc0a64d257fc4df848ac0c880af44"
      },
      "downloads": -1,
      "filename": "dynamic-json-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c2e8fd36e722e9b8119098a9d45d166a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0",
      "size": 3256,
      "upload_time": "2021-02-07T13:40:28",
      "upload_time_iso_8601": "2021-02-07T13:40:28.178808Z",
      "url": "https://files.pythonhosted.org/packages/1c/86/4c4986b252687b744f2710641d10874903aa127cc577585548ce9ac1ba7a/dynamic-json-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}