{
  "info": {
    "author": "Your Name",
    "author_email": "you@example.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pydantic_sqlite\nSimple package for storing pydantic BaseModels in an in-memory SQLite database.\n\n## Installation\n\n    pip install pydantic-sqlite\n\n## Basic Example\nCreate two objects of the type TestCase and add them to the database in the table 'Test'. Later, all values in the table are printed while iteration over the Table 'Test'.\n\n``` python\nfrom pydantic_sqlite import DataBase\nfrom pydantic import BaseModel\nfrom uuid import uuid4\n\nclass TestCase(BaseModel):\n    uuid: str\n    name: str \n    age: int\n        \ntest1 = TestCase(uuid=str(uuid4()), name=\"Bob\", age=12)\ntest2 = TestCase(uuid=str(uuid4()), name=\"Alice\", age=28)\n\ndb = DataBase()\ndb.add(\"Test\", test1)\ndb.add(\"Test\", test2)\n\nfor x in db(\"Test\"):\n    assert issubclass(x.__class__, BaseModel)\n    assert isinstance(x, TestCase)\n    print(x)\n\n#>>> uuid='10d002bc-9941-4943-a46b-82b8214bf618' name='Bob' age=12\n#>>> uuid='595fd605-4684-4f78-96a5-8420bdb3fc0f' name='Alice' age=28\n\n```\n\n## Nested Example\nCreate one object of the type address and two objects of the type person. Each person has an attribute of the type address. \nWhen adding the person to the database, the database needs the foreign_table 'Adresses' to create the foreign key. This means that when iterating over the table 'Persons', a complete object \"Person\" can be created again, which has an attribute of the type 'Address'.\n\n\n```python\nfrom pydantic_sqlite import DataBase\nfrom pydantic import BaseModel\nfrom uuid import uuid4\n\nclass Address(BaseModel):\n    uuid: str\n    town: str\n    street: str\n    number: int\n        \nclass Person(BaseModel):\n    uuid: str\n    name: str \n    address: Address\n\naddress = Address(uuid=str(uuid4()), town=\"Berlin\", street=\"Bahnhofstraße\", number=67)\nperson1 = Person(uuid=str(uuid4()), name=\"Bob\", address=address)\nperson2 = Person(uuid=str(uuid4()), name=\"Alice\", address=address)\n\ndb = DataBase()\ndb.add(\"Adresses\", address)\ndb.add(\"Persons\", person1, foreign_tables={'address': 'Adresses'})\ndb.add(\"Persons\", person2, foreign_tables={'address': 'Adresses'})\n\nfor x in db(\"Adresses\"):\n    assert issubclass(x.__class__, BaseModel)\n    assert isinstance(x, Address)\n    print(x)\n\nfor y in db(\"Persons\"):\n    assert issubclass(y.__class__, BaseModel)\n    assert isinstance(y, Person)\n    print(y)\n\n#>>> uuid='7cd5410e-cfaa-481e-a201-ad04cd959719' town='Berlin' street='Bahnhofstraße' number=67\n#>>> uuid='cc1cedaf-dac5-4fc2-a11a-41c6631271a5' name='Bob' address=Address(uuid='7cd5410e-cfaa-481e-a201-ad04cd959719', town='Berlin', street='Bahnhofstraße', number=67)\n#>>> uuid='b144ed22-d8a4-46da-8a18-e34c260d7c45' name='Alice' address=Address(uuid='7cd5410e-cfaa-481e-a201-ad04cd959719', town='Berlin', street='Bahnhofstraße', number=67)\n\n```\n\n# Nested Example without foreign Table\nIf you do not want to have an additional table, you can save an object of the BaseModel type differently.\n\nIn this example, the address object is not saved as an additional table. It is stored as a string in a column of the table 'Persons'. To realise this, the class `SQConfig` is added to the Address class. This class must contain the method `convert`, which determines how the object is to be stored in SQLite. During the subsequent loading, an object of the type Address is created again from the string with the function pydantic.validator.\n\n```python\nfrom pydantic_sqlite import DataBase\nfrom pydantic import BaseModel, validator\nfrom uuid import uuid4\n\nclass Address(BaseModel):\n    town: str\n    street: str\n        \n    class SQConfig:\n        special_insert: bool = True\n\n        def convert(obj):\n            return f\"{obj.town},{obj.street}\"\n\nclass Person(BaseModel):\n    uuid: str\n    name: str \n    address: Address\n        \n    @validator('address', pre=True)\n    def validate(cls, v):\n        if isinstance(v, Address):\n            return v\n        town, street = v.split(',')\n        return Address(town=town, street=street)\n\naddress = Address(town=\"Berlin\", street=\"Bahnhofstraße 67\")\nperson1 = Person(uuid=str(uuid4()), name=\"Bob\", address=address)\nperson2 = Person(uuid=str(uuid4()), name=\"Alice\", address=address)\n\ndb = DataBase()\ndb.add(\"Persons\", person1)\ndb.add(\"Persons\", person2)\n\nfor y in db(\"Persons\"):\n    assert issubclass(y.__class__, BaseModel)\n    assert isinstance(y, Person)\n    print(y)\n\n#>>> uuid='802f50d6-b6a2-47f4-bb96-4375790daed9' name='Bob' address=Address(town='Berlin', street='Bahnhofstraße 67')\n#>>> uuid='79488c0d-44c8-4a6a-afa3-1ed0b88af4a2' name='Alice' address=Address(town='Berlin', street='Bahnhofstraße 67')\n```\n\n# DB_Handler\nThe DB_handler provides a wrapper for the DataBase. The database returned by the context manager can be used in the same way as in the previous examples. \n\nHowever, the handler has the advantage that if an exception occurs, e.g. a 'ZeroDevisionError', a database with the last values is saved as '<<dbname_crash>>.db'. If this file already exists, the file name is incremented.\n\nThis example creates two files hello.db and hello_crash.db If you run this script twice, three files are created: hello.db, hello_crash.db and hello_crash_(1).db\n```python\nfrom pydantic_sqlite import DataBase, DB_Handler\nfrom pydantic import BaseModel, validator\nfrom uuid import uuid4\n\nclass TestCase(BaseModel):\n    uuid: str\n    name: str \n    age: int\n\nwith DB_Handler(\"hello\") as db:\n    test1 = TestCase(uuid=str(uuid4()), name=\"Bob\", age=12)\n    db.add(\"Test\", test1)\n    for x in db(\"Test\"):\n        assert issubclass(x.__class__, BaseModel)\n        assert isinstance(x, TestCase)\n        print(x)\n    db.save(\"hello_world.db\")\n    \n    1/0\n\n#>>> uuid='04d6dfad-0ce5-4222-8686-22348e1f0c0b' name='Bob' age=12\n#>>> ---------------------------------------------------------------------------\n#>>> ZeroDivisionError    Traceback (most recent call last)\n#>>> ~\\AppData\\Local\\Temp/ipykernel_20124/1430346317.py in <module>\n#>>>      17     db.save(\"hello_world.db\")\n#>>>      18 \n#>>> ---> 19     1/0\n#>>> \n#>>> ZeroDivisionError: division by zero\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Phil997/pydantic-sqlite",
    "keywords": "pydantic,sqlite-utils,sqlite3",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydantic-sqlite",
    "package_url": "https://pypi.org/project/pydantic-sqlite/",
    "platform": "",
    "project_url": "https://pypi.org/project/pydantic-sqlite/",
    "project_urls": {
      "Homepage": "https://github.com/Phil997/pydantic-sqlite",
      "Repository": "https://github.com/Phil997/pydantic-sqlite"
    },
    "release_url": "https://pypi.org/project/pydantic-sqlite/0.2.1/",
    "requires_dist": [
      "pydantic (>=1.8.2,<2.0.0)",
      "sqlite-utils (>=3.19,<4.0)",
      "typing-inspect (>=0.7.1,<0.8.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Simple package for storing pydantic BaseModels in an in-memory SQLite database.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12529501,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58993d51a65e7333f30de34a35bc33bb71616d0e3f53566c516ce73ed34c5984",
          "md5": "b4e0381f53902ed811efe0d90d0c7d76",
          "sha256": "398b5ddd9cfe2551d4bd442e451cfadf23426f34335a220814b2794195c9724c"
        },
        "downloads": -1,
        "filename": "pydantic_sqlite-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4e0381f53902ed811efe0d90d0c7d76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 8260,
        "upload_time": "2021-12-20T20:31:18",
        "upload_time_iso_8601": "2021-12-20T20:31:18.890467Z",
        "url": "https://files.pythonhosted.org/packages/58/99/3d51a65e7333f30de34a35bc33bb71616d0e3f53566c516ce73ed34c5984/pydantic_sqlite-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2736bed1a89eb1873661af406e6ca2bbe8efcc040ffa6b1d85c2b41e402c3573",
          "md5": "39a4e4769c29819eb96b74edf65e31df",
          "sha256": "c102dde924e925a18e5cfa4e70bcc79a8896e56869bc7d22867eb8e8978c600e"
        },
        "downloads": -1,
        "filename": "pydantic_sqlite-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "39a4e4769c29819eb96b74edf65e31df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 7841,
        "upload_time": "2021-12-20T20:31:21",
        "upload_time_iso_8601": "2021-12-20T20:31:21.209454Z",
        "url": "https://files.pythonhosted.org/packages/27/36/bed1a89eb1873661af406e6ca2bbe8efcc040ffa6b1d85c2b41e402c3573/pydantic_sqlite-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "663b55f936f92dc9639faa709796ea5e9f2b4576c0f3fef10539810d3a394037",
          "md5": "c5c88d6d8eec48170382a8b0a99ce588",
          "sha256": "553a7efdf129682e54f108bd3f299ff3b106b046e3b953478059a6121130b558"
        },
        "downloads": -1,
        "filename": "pydantic_sqlite-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c5c88d6d8eec48170382a8b0a99ce588",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 8281,
        "upload_time": "2021-12-30T14:53:22",
        "upload_time_iso_8601": "2021-12-30T14:53:22.910545Z",
        "url": "https://files.pythonhosted.org/packages/66/3b/55f936f92dc9639faa709796ea5e9f2b4576c0f3fef10539810d3a394037/pydantic_sqlite-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb2ac67099f0eafb2f84270a16a3bdfb2f0de06d6a1705c255f8b6d5c3ab6e84",
          "md5": "643667c02425ae7d7927db6370a6b706",
          "sha256": "f59640fe37b1ea83a03c0922a571a562c4309bb7bddc9c06dec55db647f3c819"
        },
        "downloads": -1,
        "filename": "pydantic_sqlite-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "643667c02425ae7d7927db6370a6b706",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 7892,
        "upload_time": "2021-12-30T14:53:24",
        "upload_time_iso_8601": "2021-12-30T14:53:24.511307Z",
        "url": "https://files.pythonhosted.org/packages/eb/2a/c67099f0eafb2f84270a16a3bdfb2f0de06d6a1705c255f8b6d5c3ab6e84/pydantic_sqlite-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "315c457d203428987651b8f0b53d5688b948b09eccb0af927b599b3cded6448e",
          "md5": "944e1562a7c7afc45d0d9cc2f80bff64",
          "sha256": "d08ea12073cce6b32128c66c352b7fe06fd706875b7e6d887163d94096e18836"
        },
        "downloads": -1,
        "filename": "pydantic_sqlite-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "944e1562a7c7afc45d0d9cc2f80bff64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 8989,
        "upload_time": "2022-01-10T11:46:57",
        "upload_time_iso_8601": "2022-01-10T11:46:57.094455Z",
        "url": "https://files.pythonhosted.org/packages/31/5c/457d203428987651b8f0b53d5688b948b09eccb0af927b599b3cded6448e/pydantic_sqlite-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11efb62b5a42180596c05e8b4d150543d0d2d73b470e66e665d1f2e959b1525b",
          "md5": "c1a7668df3e1c905841cc82dacbb6525",
          "sha256": "f161c0793507e420e89ac092ae329b8f34a060e2a5d658c82e3048dc28f5d347"
        },
        "downloads": -1,
        "filename": "pydantic_sqlite-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c1a7668df3e1c905841cc82dacbb6525",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 8602,
        "upload_time": "2022-01-10T11:46:59",
        "upload_time_iso_8601": "2022-01-10T11:46:59.009699Z",
        "url": "https://files.pythonhosted.org/packages/11/ef/b62b5a42180596c05e8b4d150543d0d2d73b470e66e665d1f2e959b1525b/pydantic_sqlite-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a40484dc4d84859a67b201ed666bb8e837f6dacd94b6ea51bc8efaa82a04a3ac",
          "md5": "a821ac61159c86e0a0373b569f39df67",
          "sha256": "c0f9e516a369f211aeb161a57bfb60bd022cbe3844478248494210db06f1d37f"
        },
        "downloads": -1,
        "filename": "pydantic_sqlite-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a821ac61159c86e0a0373b569f39df67",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 9167,
        "upload_time": "2022-01-10T15:31:33",
        "upload_time_iso_8601": "2022-01-10T15:31:33.859837Z",
        "url": "https://files.pythonhosted.org/packages/a4/04/84dc4d84859a67b201ed666bb8e837f6dacd94b6ea51bc8efaa82a04a3ac/pydantic_sqlite-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cea42a212e3992cfa330fc16b2f1cf213ef4ca9ffae32f157b2201f55d26f2d1",
          "md5": "d7282b771be4ad954a477ad0f4aa87cf",
          "sha256": "aa42dac872d84c228372e0b902b99667384cf87d6297b43699e45d05b137c5a1"
        },
        "downloads": -1,
        "filename": "pydantic_sqlite-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d7282b771be4ad954a477ad0f4aa87cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 8812,
        "upload_time": "2022-01-10T15:31:35",
        "upload_time_iso_8601": "2022-01-10T15:31:35.745989Z",
        "url": "https://files.pythonhosted.org/packages/ce/a4/2a212e3992cfa330fc16b2f1cf213ef4ca9ffae32f157b2201f55d26f2d1/pydantic_sqlite-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a40484dc4d84859a67b201ed666bb8e837f6dacd94b6ea51bc8efaa82a04a3ac",
        "md5": "a821ac61159c86e0a0373b569f39df67",
        "sha256": "c0f9e516a369f211aeb161a57bfb60bd022cbe3844478248494210db06f1d37f"
      },
      "downloads": -1,
      "filename": "pydantic_sqlite-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a821ac61159c86e0a0373b569f39df67",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 9167,
      "upload_time": "2022-01-10T15:31:33",
      "upload_time_iso_8601": "2022-01-10T15:31:33.859837Z",
      "url": "https://files.pythonhosted.org/packages/a4/04/84dc4d84859a67b201ed666bb8e837f6dacd94b6ea51bc8efaa82a04a3ac/pydantic_sqlite-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cea42a212e3992cfa330fc16b2f1cf213ef4ca9ffae32f157b2201f55d26f2d1",
        "md5": "d7282b771be4ad954a477ad0f4aa87cf",
        "sha256": "aa42dac872d84c228372e0b902b99667384cf87d6297b43699e45d05b137c5a1"
      },
      "downloads": -1,
      "filename": "pydantic_sqlite-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d7282b771be4ad954a477ad0f4aa87cf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 8812,
      "upload_time": "2022-01-10T15:31:35",
      "upload_time_iso_8601": "2022-01-10T15:31:35.745989Z",
      "url": "https://files.pythonhosted.org/packages/ce/a4/2a212e3992cfa330fc16b2f1cf213ef4ca9ffae32f157b2201f55d26f2d1/pydantic_sqlite-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}