{
  "info": {
    "author": "FirefoxMetzger",
    "author_email": "sebastian@wallkoetter.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# PySDF (python-sdformat)\n\nPySDF is a set of python bindings for [SDFormat XML](http://sdformat.org/). The\nidea is to provide a method for working with SDF that feels as fast as (or\nfaster than) XML, but with the added convenience of syntax highlighting,\nauto-completion, validation, and some degree of verification.\n\nThe current bindings read SDF from _any_ version and will parse it into a\ngeneric representation. Modifications are not validated or verified by default,\nallowing for more flexibility, but methods for optional validation and\nverification will be added in the future.\n\n## Installation\n\n```\npip install python-sdformat\n```\n\n## Usage\n\nThe elements of the binding are grouped following the [official SDF\nspec](http://sdformat.org/spec) with a few exceptions. This means that you can\nfind the item you are looking for by following the spec's nesting, e.g., the\n`/sensor/imu/angular_velocity/x` element has the corresponding class\n`pysdf.Sensor.Imu.AngularVelocity.X` and can - inside an SDF - be accessed as\n`parsed_sensor.imu.angular_velocity.x`. The previously mentioned exceptions to\nthis are:\n\n- The bindings use `snake_case` for variable names and `CamelCase` for class names\n- If an element may occur more than once inside its parent, its corresponding attribute\n  will be a tuple its name will be plural, e.g. `world.models[idx]`.\n- The elements `Pose`, `Frame`, `Plugin`, and `Include` occur frequently across\n  several elements and promoted to the top level, i.e., you'd use `pysdf.Pose` not\n  `pysdf.Model.Pose`.\n\n## Examples\n\n**Basic Reading and Writing**\n\n```python\nfrom pysdf import SDF\n\nsample_sdf = \"\"\"<?xml version=\"1.0\" ?>\n<sdf version=\"1.6\">\n    <model name=\"empty_axis\">\n        <link name=\"link1\" />\n        <link name=\"link2\" />\n        <joint name=\"joint\" type=\"fixed\">\n        <parent>link1</parent>\n        <child>link2</child>\n        <axis/>\n        </joint>\n    </model>\n</sdf>\n\"\"\"\n\n# string round-trip\nparsed = SDF.from_xml(sample_sdf)\nsdf_string = parsed.to_xml()\n\n# file round-trip\nparsed.to_file(\"sample.sdf\")\nparsed = SDF.from_file(\"sample.sdf\")\n\n# prettify/reformat SDF to have nice indentation\nparsed = SDF.from_file(\"sample.sdf\", remove_blank_text=True)\nparsed.to_file(\"sample.sdf\", pretty_print=True)\n\n```\n\n**Building SDF manually**\n\n```python\nfrom pysdf import SDF, Link, Joint, Model\n\nreference_sdf = \"\"\"\n<sdf version=\"1.6\">\n    <model name=\"empty_axis\">\n        <link name=\"link1\" />\n        <link name=\"link2\" />\n        <joint name=\"joint\" type=\"fixed\">\n            <parent>link1</parent>\n            <child>link2</child>\n        </joint>\n    </model>\n</sdf>\n\"\"\"\n\nelement = SDF(\n    Model(\n        Link(name=\"link1\"),\n        Link(name=\"link2\"),\n        Joint(\n            Joint.Parent(text=\"link1\"),\n            Joint.Child(text=\"link2\"),\n            # attributes are set at the end\n            # because python only accepts kwargs at the end.\n            name=\"joint\",\n            type=\"fixed\",\n        ),\n        name=\"empty_axis\",\n    ),\n    version=\"1.6\",\n)\n\nelement.to_file(\"sample.sdf\", pretty_print=True)\n```\n\n**Basic Modifications**\n\n```python\nfrom pysdf import Link, State, Model, Link\n\n# Complex elements (with own children) are added on first read\nelement = Link()\nelement.to_xml()  # \"<link/>\"\nelement.inertial\nelement.to_xml()  # \"<link><inertial/></link>\"\n\n# Simple elements (basic types) are added on first write (__set__):\nelement.inertial.mass\nelement.to_xml()  # \"<link><inertial/></link>\"\nelement.inertial.mass = 5.0\nelement.to_xml() \n# \"<link><inertial><mass>5.0</mass></inertial></link>\"\n\n# default values are populated where applicable\nassert element.inertial.inertia.ixx == 1.0\n\n# Where possible types are converted automatically\nelement = State.Model()\nelement.scale  # (1.0, 1.0, 1.0), tuple\nelement.scale = \"1 2 3\"\nassert element.scale == (1.0, 2.0, 3.0)\nelement.scale = [5, 5, 5]\nassert element.scale == (5.0, 5.0, 5.0)\n\n# Inserting children works from sequences of kwargs\nelement = Model()\nelement.add(Link(name=\"test\"))\nelement.add(Link(name=\"test2\"), Link(name=\"test3\"))\nelement.to_xml() \n# '<model><link name=\"test\"/><link name=\"test2\"/><link name=\"test3\"/><pose/></model>'\n```\n\n**Full Modification Example**\n\n```python\nfrom pysdf import SDF, Link\n\nsample_sdf = \"\"\"<?xml version=\"1.0\" ?>\n<sdf version=\"1.6\">\n    <model name=\"empty_axis\">\n        <link name=\"link1\" />\n        <link name=\"link2\" />\n        <joint name=\"joint\" type=\"fixed\">\n            <parent>link1</parent>\n            <child>link2</child>\n        </joint>\n    </model>\n</sdf>\n\"\"\"\n\nparsed = SDF.from_xml(sample_sdf, remove_blank_text=True)\nmodel = parsed.model\n\nmodel.name = \"modified_model\"\nmodel.links[1].add(Link.ParticleEmitter(\n    Link.ParticleEmitter.Emitting(text=\"true\"),\n    name=\"my_emitter\",\n    type=\"box\"\n))\n\nparsed.to_file(\"sample.sdf\", pretty_print=True)\n```\n\n**Iterating and Filtering**\n\nYou can call `element.iter()` to recursively iterate over all child elements of\na subtree (breadth-first). `iter()` also accepts a `filter` kwarg which allows\nyou to only return children that have a desired path from the caller to the\nchild. The filter matches the tail of the path, path elements are separated by\nthe `/` character, and any SDF tag is a valid path element. This allows for easy\nselecting and bulk editing of specific children, e.g., use `filter=\"pose\"` to\nselect all pose elements in a SDF or `filter=\"model/pose\"` to select all pose\nelements that are direct children of a model (the model's pose).\n\n\nAppologies for the long example SDF, but I thought it would be nice to\ndemonstrate something more real-world.\n\n```python\nfrom pysdf import SDF\nimport numpy as np\n\n# taken from: \n# https://github.com/ignitionrobotics/sdformat/blob/sdf12/test/sdf/joint_nested_parent_child.sdf\nlarge_example = \"\"\"\n<sdf version=\"1.8\">\n  <model name=\"joint_nested_parent_child\">\n    <model name=\"M1\">\n      <link name=\"L1\">\n        <pose>0 0 1 0 0 0</pose>\n      </link>\n      <link name=\"L2\">\n        <pose>1 1 0 0 0 0</pose>\n      </link>\n      <frame name=\"F1\">\n        <pose>1 0 0 0 0 0</pose>\n      </frame>\n      <model name=\"M2\">\n        <pose>0 0 1 1.570796326790 0 0</pose>\n        <link name=\"L1\"/>\n      </model>\n    </model>\n\n    <link name=\"L1\">\n      <pose>0 0 10 0 1.57079632679 0</pose>\n    </link>\n\n    <frame name=\"F1\" attached_to=\"M1::L1\">\n      <pose>1 0 0 0 0 0</pose>\n    </frame>\n\n    <!-- Joint with a parent link in a nested model -->\n    <joint name=\"J1\" type=\"fixed\">\n      <pose>1 0 0 0 0 0</pose>\n      <parent>M1::L1</parent>\n      <child>L1</child>\n    </joint>\n    <!-- Joint with a sibling parent frame which is attached to a link in a nested model -->\n    <joint name=\"J2\" type=\"fixed\">\n      <pose>0 1 0 0 0 0</pose>\n      <parent>F1</parent>\n      <child>L1</child>\n    </joint>\n    <!-- Joint with a child link in a nested model -->\n    <joint name=\"J3\" type=\"fixed\">\n      <pose>0 0 1 0 0 0</pose>\n      <parent>L1</parent>\n      <child>M1::L2</child>\n    </joint>\n\n    <!-- Joint with a child frame in a nested model -->\n    <joint name=\"J4\" type=\"fixed\">\n      <pose>0 0 1 0 0 0</pose>\n      <parent>L1</parent>\n      <child>M1::F1</child>\n    </joint>\n\n    <!-- Joint with a child model in a nested model -->\n    <joint name=\"J5\" type=\"fixed\">\n      <pose>0 0 1 0 0 0</pose>\n      <parent>L1</parent>\n      <child>M1::M2</child>\n    </joint>\n\n    <!-- Joint with a nested model frame as a parent  -->\n    <joint name=\"J6\" type=\"fixed\">\n      <pose>0 0 1 0 0 0</pose>\n      <parent>M1::__model__</parent>\n      <child>L1</child>\n    </joint>\n\n    <!-- Joint with a nested model frame as a child  -->\n    <joint name=\"J7\" type=\"fixed\">\n      <pose>0 0 1 0 0 0</pose>\n      <parent>L1</parent>\n      <child>M1::__model__</child>\n    </joint>\n  </model>\n</sdf>\n\"\"\"\n\n# remove_blank_text strips whitespace to allow neat formatting\n# later on\nelement = SDF.from_xml(large_example, remove_blank_text=True)\nelement.version = \"1.9\"  # v1.9 supports pose/@degrees\n\n# convert all poses to degrees\nfor pose in element.iter(\"pose\"):\n    pose.degrees = True\n    pose_ndarray = np.fromstring(pose.text, count=6, sep=\" \")\n    rotation_rad = pose_ndarray[3:]\n    rotation_deg = rotation_rad / (2*np.pi) * 360\n    pose_ndarray[3:] = rotation_deg\n    pose.text = \" \".join(map(str, pose_ndarray))\n\n# turn on self-collision for all links in the nested model\nfor link in element.iter(\"model/model/link\"):\n    link.self_collide = True\n\n# turn self-collision off (using a different syntax)\nfor link in element.model.iter(\"link\"):\n    link.self_collide = False\n\n# offset all links by some vector\nfor pose in element.iter(\"link/pose\"):\n    pose_ndarray = np.fromstring(pose.text, count=6, sep=\" \")\n    pose_ndarray[:3] += (0, 0, 1)\n    pose.text = \" \".join(map(str, pose_ndarray))\n\nelement.to_file(\"sample.sdf\", pretty_print=True)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FirefoxMetzger/python-sdformat",
    "keywords": "",
    "license": "BSD-2-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-sdformat",
    "package_url": "https://pypi.org/project/python-sdformat/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-sdformat/",
    "project_urls": {
      "Homepage": "https://github.com/FirefoxMetzger/python-sdformat",
      "Repository": "https://github.com/FirefoxMetzger/python-sdformat"
    },
    "release_url": "https://pypi.org/project/python-sdformat/0.4.0/",
    "requires_dist": [
      "lxml (>=4.8.0,<5.0.0)",
      "numpy (>=1.0,<2.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Python Parser for SDFormat files.",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13411787,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f60e1029acae4e167fda82691ffede670bd9fe75500f4ee9e1fb30c5919b697",
          "md5": "2c96a5c2849fa93ede33271c983e1055",
          "sha256": "504b1ccaf1f3e4e43bfc82bb1e47a5a44652c72df115bc3fa388d54cd00b09a0"
        },
        "downloads": -1,
        "filename": "python_sdformat-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c96a5c2849fa93ede33271c983e1055",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 12345,
        "upload_time": "2022-03-29T20:22:40",
        "upload_time_iso_8601": "2022-03-29T20:22:40.341082Z",
        "url": "https://files.pythonhosted.org/packages/0f/60/e1029acae4e167fda82691ffede670bd9fe75500f4ee9e1fb30c5919b697/python_sdformat-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0516c53afe9063b55531506f570b9057aef46db3bdb14a555bf89c65f550df86",
          "md5": "70da817be6bb10f7407baad3dc2a5018",
          "sha256": "89b1d7c4d196ce541dbca4db84ce9b4dec5be669349bcb4b18e83c96a2a01bc0"
        },
        "downloads": -1,
        "filename": "python-sdformat-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "70da817be6bb10f7407baad3dc2a5018",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 11872,
        "upload_time": "2022-03-29T20:22:38",
        "upload_time_iso_8601": "2022-03-29T20:22:38.477709Z",
        "url": "https://files.pythonhosted.org/packages/05/16/c53afe9063b55531506f570b9057aef46db3bdb14a555bf89c65f550df86/python-sdformat-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e7de5f7251fef3937920f08628817b5c92fbbbe20a18ee16b8157bc13b35780",
          "md5": "482a81ab1cbb8cf67f431a4df29910cc",
          "sha256": "02ad111e761b9eb096bcd287d857eb632f407877cdd38e8172ed72870d27ea73"
        },
        "downloads": -1,
        "filename": "python_sdformat-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "482a81ab1cbb8cf67f431a4df29910cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 12978,
        "upload_time": "2022-03-30T07:57:46",
        "upload_time_iso_8601": "2022-03-30T07:57:46.939623Z",
        "url": "https://files.pythonhosted.org/packages/6e/7d/e5f7251fef3937920f08628817b5c92fbbbe20a18ee16b8157bc13b35780/python_sdformat-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6005c341965bca573b570d792a6a4c27179dc8acedd94347024757e916da9d45",
          "md5": "28eddd899c6c82414e62e5a89364bf36",
          "sha256": "bb4587f16c44e01b00f4fb518bc7c34d356f40b2a45d2fa7d3ab429af9b212af"
        },
        "downloads": -1,
        "filename": "python-sdformat-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "28eddd899c6c82414e62e5a89364bf36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12534,
        "upload_time": "2022-03-30T07:57:45",
        "upload_time_iso_8601": "2022-03-30T07:57:45.334420Z",
        "url": "https://files.pythonhosted.org/packages/60/05/c341965bca573b570d792a6a4c27179dc8acedd94347024757e916da9d45/python-sdformat-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4988123e1bc0d9ca3702f39024d6a93b343e0e574fbc9e5b75561d1bbb1560b0",
          "md5": "f0c498f6598495a01b3419eb65575d8b",
          "sha256": "95076108364b5426a8dc00377a25623bae43bd7f8f200c7a957854d5c918d658"
        },
        "downloads": -1,
        "filename": "python_sdformat-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0c498f6598495a01b3419eb65575d8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 19461,
        "upload_time": "2022-03-30T08:03:57",
        "upload_time_iso_8601": "2022-03-30T08:03:57.028390Z",
        "url": "https://files.pythonhosted.org/packages/49/88/123e1bc0d9ca3702f39024d6a93b343e0e574fbc9e5b75561d1bbb1560b0/python_sdformat-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "509855fd210d45b33204b79f27c8b470dcbd57e9d3f8c393cd8af4105e85f30b",
          "md5": "5cb6384a4e1acf892f8143eba868020b",
          "sha256": "9d1cd1ed2791b724f833e493b9f942216de635a27c42e3d49752c0d9b22609c6"
        },
        "downloads": -1,
        "filename": "python-sdformat-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5cb6384a4e1acf892f8143eba868020b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 18663,
        "upload_time": "2022-03-30T08:03:55",
        "upload_time_iso_8601": "2022-03-30T08:03:55.022888Z",
        "url": "https://files.pythonhosted.org/packages/50/98/55fd210d45b33204b79f27c8b470dcbd57e9d3f8c393cd8af4105e85f30b/python-sdformat-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1788414df0c74f906766c8004eec3169883e71fefe391e7aef3f6c3219ad51d",
          "md5": "f61dca5301095f392c255e3749e3cb99",
          "sha256": "56e7b4782617c2fab9e59b2c1541a37846d5826b26361a6c9d7cf9562c5bf7d2"
        },
        "downloads": -1,
        "filename": "python_sdformat-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f61dca5301095f392c255e3749e3cb99",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 19628,
        "upload_time": "2022-03-30T08:55:42",
        "upload_time_iso_8601": "2022-03-30T08:55:42.461282Z",
        "url": "https://files.pythonhosted.org/packages/e1/78/8414df0c74f906766c8004eec3169883e71fefe391e7aef3f6c3219ad51d/python_sdformat-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c226436ae5f81c7ed92e1c90099147baa6aa25a3ae1cf8345a2aa19aa0d0708",
          "md5": "96c54ce49e31549af5faffaf778022c8",
          "sha256": "7b2e193418509cdae179b4fe0f87b10e2d0446898d18829a547b23b25f78936b"
        },
        "downloads": -1,
        "filename": "python-sdformat-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "96c54ce49e31549af5faffaf778022c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 18843,
        "upload_time": "2022-03-30T08:55:40",
        "upload_time_iso_8601": "2022-03-30T08:55:40.745933Z",
        "url": "https://files.pythonhosted.org/packages/8c/22/6436ae5f81c7ed92e1c90099147baa6aa25a3ae1cf8345a2aa19aa0d0708/python-sdformat-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35679231d1575ae828a940fb73ef55e001fc674c0583c08c29e29101ce768d29",
          "md5": "df17f265ceebb5861857f091449b0fb6",
          "sha256": "94087b1ad98fe323b9067f1bc781d51bc471a2eabde3f149487c8f5c7739fd15"
        },
        "downloads": -1,
        "filename": "python_sdformat-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df17f265ceebb5861857f091449b0fb6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 19652,
        "upload_time": "2022-03-31T03:34:45",
        "upload_time_iso_8601": "2022-03-31T03:34:45.544896Z",
        "url": "https://files.pythonhosted.org/packages/35/67/9231d1575ae828a940fb73ef55e001fc674c0583c08c29e29101ce768d29/python_sdformat-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "770f46dc5ebaa383b26a6543214146d06b5459963c0dcf6e2227992177e57337",
          "md5": "1994aeffaa2117aaa530309121aec0df",
          "sha256": "3d4b405caa1fb8ed60dab7402238682ea41dccb735ab068090cc07f13e9364f4"
        },
        "downloads": -1,
        "filename": "python-sdformat-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1994aeffaa2117aaa530309121aec0df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 18871,
        "upload_time": "2022-03-31T03:34:43",
        "upload_time_iso_8601": "2022-03-31T03:34:43.565480Z",
        "url": "https://files.pythonhosted.org/packages/77/0f/46dc5ebaa383b26a6543214146d06b5459963c0dcf6e2227992177e57337/python-sdformat-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e22295b1f0544641640f772c660fe4879b17e1228fc5cac4eec76de82c4eaeb6",
          "md5": "64e2470ac983cb0992cf15d0187753d4",
          "sha256": "bbb7f4c1ccfc90932a25a7f58522c57a28c065cfd50cef307a00e10335a5f2f7"
        },
        "downloads": -1,
        "filename": "python_sdformat-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "64e2470ac983cb0992cf15d0187753d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 20228,
        "upload_time": "2022-03-31T18:05:23",
        "upload_time_iso_8601": "2022-03-31T18:05:23.610929Z",
        "url": "https://files.pythonhosted.org/packages/e2/22/95b1f0544641640f772c660fe4879b17e1228fc5cac4eec76de82c4eaeb6/python_sdformat-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82c1d4bbe706cd7210c71b653f03ff15f1b3d1b752102c7315d7b3e6c89862cb",
          "md5": "2ac076b3e1e98fa7a8c442ae909f7d6a",
          "sha256": "4bf11a41f1e865e6feebb6aae74f552a2c8c44458d7d4bd8ff55121fff15c3bb"
        },
        "downloads": -1,
        "filename": "python-sdformat-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2ac076b3e1e98fa7a8c442ae909f7d6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 19455,
        "upload_time": "2022-03-31T18:05:21",
        "upload_time_iso_8601": "2022-03-31T18:05:21.300594Z",
        "url": "https://files.pythonhosted.org/packages/82/c1/d4bbe706cd7210c71b653f03ff15f1b3d1b752102c7315d7b3e6c89862cb/python-sdformat-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ce5ae0c9206cf631d18c717ce59bff99ffbc76aaf5e485fbb802b40e824c6ef",
          "md5": "2b41d3295bbaf3529feadd2147ae4fc9",
          "sha256": "089c6a970d82990a6bce7a86fa0368f502f62cc76840bcf9094eb011ffac1bf1"
        },
        "downloads": -1,
        "filename": "python_sdformat-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b41d3295bbaf3529feadd2147ae4fc9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 21196,
        "upload_time": "2022-04-05T08:41:49",
        "upload_time_iso_8601": "2022-04-05T08:41:49.594058Z",
        "url": "https://files.pythonhosted.org/packages/6c/e5/ae0c9206cf631d18c717ce59bff99ffbc76aaf5e485fbb802b40e824c6ef/python_sdformat-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef3b9b35213bbc3d05858ab40bc91aa628ce826ddd124dd03df0212f8d9d9ad4",
          "md5": "a626b084b6482791574077230d0fca50",
          "sha256": "8cdc21ce9de0de775787b8052d21d49f2d9be91e1d011ad82081796876dea8ee"
        },
        "downloads": -1,
        "filename": "python-sdformat-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a626b084b6482791574077230d0fca50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 20326,
        "upload_time": "2022-04-05T08:41:47",
        "upload_time_iso_8601": "2022-04-05T08:41:47.822397Z",
        "url": "https://files.pythonhosted.org/packages/ef/3b/9b35213bbc3d05858ab40bc91aa628ce826ddd124dd03df0212f8d9d9ad4/python-sdformat-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6ce5ae0c9206cf631d18c717ce59bff99ffbc76aaf5e485fbb802b40e824c6ef",
        "md5": "2b41d3295bbaf3529feadd2147ae4fc9",
        "sha256": "089c6a970d82990a6bce7a86fa0368f502f62cc76840bcf9094eb011ffac1bf1"
      },
      "downloads": -1,
      "filename": "python_sdformat-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2b41d3295bbaf3529feadd2147ae4fc9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 21196,
      "upload_time": "2022-04-05T08:41:49",
      "upload_time_iso_8601": "2022-04-05T08:41:49.594058Z",
      "url": "https://files.pythonhosted.org/packages/6c/e5/ae0c9206cf631d18c717ce59bff99ffbc76aaf5e485fbb802b40e824c6ef/python_sdformat-0.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef3b9b35213bbc3d05858ab40bc91aa628ce826ddd124dd03df0212f8d9d9ad4",
        "md5": "a626b084b6482791574077230d0fca50",
        "sha256": "8cdc21ce9de0de775787b8052d21d49f2d9be91e1d011ad82081796876dea8ee"
      },
      "downloads": -1,
      "filename": "python-sdformat-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a626b084b6482791574077230d0fca50",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 20326,
      "upload_time": "2022-04-05T08:41:47",
      "upload_time_iso_8601": "2022-04-05T08:41:47.822397Z",
      "url": "https://files.pythonhosted.org/packages/ef/3b/9b35213bbc3d05858ab40bc91aa628ce826ddd124dd03df0212f8d9d9ad4/python-sdformat-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}