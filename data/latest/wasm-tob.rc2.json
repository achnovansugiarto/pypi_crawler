{
  "info": {
    "author": "",
    "author_email": "Trail of Bits <opensource@trailofbits.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Security"
    ],
    "description": "# wasm-tob\n\nPython module capable of decoding and disassembling WebAssembly modules\nand bytecode, according to the MVP specification of the WASM binary\nformat.\n\nAs there is no official text format defined yet, the text format\nimplemented doesn't correspond to any existing definition and is a\nsimple `mnemonic op1, op2, ...` format. Functions are formatted in a\nway similar to how Google Chrome does in the debug console.\n\n## ‚ùó Important\n\nThis is a fork of the original project that the author was no longer able to\nspend time on: https://github.com/athre0z/wasm. The changes made here are\nprimarily to support the\n[Manticore](https://github.com/trailofbits/manticore) project.\n\nNew issues and pull requests will be reviewed on a best-effort basis. Please\nopen an issue first if you think fixing the problem will be complex; this is so\nwe can evaluate whether a fix or feature is in scope before comitting time to\nreview. When opening an issue, please include information on how to reproduce\nwhat you are seeing. If you feel comfortable, please submit a well-crafted,\nminimal pull request that we can review.\n\n## Installation\n\n```sh\n# From PyPi\npip install wasm-tob\n\n# From GitHub\npip install git+https://github.com/trailofbits/wasm-tob.git\n```\n\n## Examples\n\nParsing a WASM module, printing the types of sections found.\n\n```python\nfrom wasm_tob import decode_module\n\nwith open('input-samples/hello/hello.wasm', 'rb') as raw:\n    raw = raw.read()\n\nmod_iter = iter(decode_module(raw))\nheader, header_data = next(mod_iter)\n\nfor cur_sec, cur_sec_data in mod_iter:\n    print(cur_sec_data.get_decoder_meta()['types']['payload'])\n```\n\nPossible output:\n\n```text\n<wasm_tob.modtypes.TypeSection object at 0x108249b90>\n<wasm_tob.modtypes.ImportSection object at 0x108249bd0>\n<wasm_tob.modtypes.FunctionSection object at 0x108249c10>\n<wasm_tob.modtypes.GlobalSection object at 0x108249cd0>\n<wasm_tob.modtypes.ExportSection object at 0x108249d10>\n<wasm_tob.modtypes.ElementSection object at 0x108249d90>\n<wasm_tob.modtypes.CodeSection object at 0x108249dd0>\n<wasm_tob.modtypes.DataSection object at 0x108249e10>\n<wasm_tob.types.BytesField object at 0x108249b10>\n```\n\nParsing specific sections (eg. GlobalSection, ElementSection, DataSection) in WASM module, printing each section's content:\n\n```python\nfrom wasm_tob import (\n    decode_module,\n    format_instruction,\n    format_lang_type,\n    format_mutability,\n    SEC_DATA,\n    SEC_ELEMENT,\n    SEC_GLOBAL,\n)\n\nwith open('input-samples/hello/hello.wasm', 'rb') as raw:\n    raw = raw.read()\n\nmod_iter = iter(decode_module(raw))\nheader, header_data = next(mod_iter)\n\nfor cur_sec, cur_sec_data in mod_iter:\n    if cur_sec_data.id == SEC_GLOBAL:\n        print(\"GlobalSection:\")\n        for idx, entry in enumerate(cur_sec_data.payload.globals):\n            print(\n                format_mutability(entry.type.mutability),\n                format_lang_type(entry.type.content_type),\n            )\n\n            for cur_insn in entry.init:\n                print(format_instruction(cur_insn))\n\n    if cur_sec_data.id == SEC_ELEMENT:\n        print(\"ElementSection:\")\n        for idx, entry in enumerate(cur_sec_data.payload.entries):\n            print(entry.index, entry.num_elem, entry.elems)\n            for cur_insn in entry.offset:\n                print(format_instruction(cur_insn))\n\n    if cur_sec_data.id == SEC_DATA:\n        print(\"DataSection:\")\n        for idx, entry in enumerate(cur_sec_data.payload.entries):\n            print(entry.index, entry.size, entry.data.tobytes())\n            for cur_insn in entry.offset:\n                print(format_instruction(cur_insn))\n```\n\nOutput:\n\n```text\nGlobalSection:\nmut i32\nget_global 0\nend\nmut i32\nget_global 1\nend\n[...]\nmut f32\nf32.const 0x0\nend\nmut f32\nf32.const 0x0\nend\nElementSection:\n0 12576 [856, 856, 856, [...], 888]\ni32.const 0\nend\nDataSection:\n0 16256 b'\\x98&\\x00\\x00\\xfe4\\x00\\x00\\x10\\x04\\x00\\x00\\x00...\\x00N10__cxxabiv121__vmi_class_type_infoE'\nget_global 8\nend\n\n```\n\nManually disassemble WASM bytecode, printing each instruction.\n\n```python\nfrom wasm_tob import (\n    decode_bytecode,\n    format_instruction,\n    INSN_ENTER_BLOCK,\n    INSN_LEAVE_BLOCK,\n)\n\nraw = bytearray([2, 127, 65, 24, 16, 28, 65, 0, 15, 11])\nindent = 0\nfor cur_insn in decode_bytecode(raw):\n    if cur_insn.op.flags & INSN_LEAVE_BLOCK:\n        indent -= 1\n    print('  ' * indent + format_instruction(cur_insn))\n    if cur_insn.op.flags & INSN_ENTER_BLOCK:\n        indent += 1\n```\n\nOutput:\n\n```text\nblock -1\n  i32.const 24\n  call 28\n  i32.const 0\n  return\nend\n```\n\n## `wasmdump` command-line tool\n\nThe module also comes with a simple command-line tool called `wasmdump`,\ndumping all module struct in tree format. Optionally, it also\ndisassembles all functions found when invoked with `--disas` (slow).\n\n## Version support\n\nThis project aims to support all Python releases that are still actively\nsupported and maintained. If you encounter issues with a particular Python\nversion, please open an issue.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "wasm,disassembler,decoder",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wasm-tob",
    "package_url": "https://pypi.org/project/wasm-tob/",
    "platform": null,
    "project_url": "https://pypi.org/project/wasm-tob/",
    "project_urls": {
      "Homepage": "https://pypi.org/project/wasm-tob/",
      "Issues": "https://github.com/trailofbits/wasm-tob/issues",
      "Source": "https://github.com/trailofbits/wasm-tob"
    },
    "release_url": "https://pypi.org/project/wasm-tob/1.0.0/",
    "requires_dist": [
      "build ; extra == \"dev\""
    ],
    "requires_python": ">=3.7",
    "summary": "WebAssembly decoder & disassembler",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16488954,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af2f1a6bae1c8170237a1f1b3fba2ec7df4f1bcb060e113eb9936ee28b79959e",
          "md5": "10067fa1ffc9aebd608f9fc6573d4a98",
          "sha256": "1223a972a94b4dd1f2c59c1a9e11d475e9a5217a2852a3f5a6cdc1e23b8596ba"
        },
        "downloads": -1,
        "filename": "wasm_tob-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10067fa1ffc9aebd608f9fc6573d4a98",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17305,
        "upload_time": "2023-01-19T15:18:40",
        "upload_time_iso_8601": "2023-01-19T15:18:40.599902Z",
        "url": "https://files.pythonhosted.org/packages/af/2f/1a6bae1c8170237a1f1b3fba2ec7df4f1bcb060e113eb9936ee28b79959e/wasm_tob-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a879bea780d3b365ca0138a573889330a29fe46096b9b87facaa0a16cee19600",
          "md5": "f571e9e787038ef1fb01ffc5f2992bee",
          "sha256": "30538ac438acc4e59e887108e76cef68b93081c0b284c21358526a3deffc2b17"
        },
        "downloads": -1,
        "filename": "wasm-tob-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f571e9e787038ef1fb01ffc5f2992bee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15658,
        "upload_time": "2023-01-19T15:18:41",
        "upload_time_iso_8601": "2023-01-19T15:18:41.978787Z",
        "url": "https://files.pythonhosted.org/packages/a8/79/bea780d3b365ca0138a573889330a29fe46096b9b87facaa0a16cee19600/wasm-tob-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79439dec73e2e2b801ce52c184bafb7a0b17f0641dfbb42f32d0bed6f46a0b20",
          "md5": "042c2cf9460db89ad9c502774a25f250",
          "sha256": "e74372df1b448a2d24e485195c393821c3ac40a262cf00aaa183ffcb1525eb77"
        },
        "downloads": -1,
        "filename": "wasm_tob-1.0.0rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "042c2cf9460db89ad9c502774a25f250",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17311,
        "upload_time": "2023-01-17T18:36:15",
        "upload_time_iso_8601": "2023-01-17T18:36:15.327092Z",
        "url": "https://files.pythonhosted.org/packages/79/43/9dec73e2e2b801ce52c184bafb7a0b17f0641dfbb42f32d0bed6f46a0b20/wasm_tob-1.0.0rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecf2874c4fc91420d7ef7d596e121cda5f45c87b1c0a45d0305123393dd986e6",
          "md5": "dfaf1d38e6a6631c5bcda6dc858dec01",
          "sha256": "c99496ef16ef97ca884fc1a2f7045fdaaa9fecc6dc0b0fdab35de87aca6f5840"
        },
        "downloads": -1,
        "filename": "wasm-tob-1.0.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "dfaf1d38e6a6631c5bcda6dc858dec01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15736,
        "upload_time": "2023-01-17T18:36:17",
        "upload_time_iso_8601": "2023-01-17T18:36:17.943462Z",
        "url": "https://files.pythonhosted.org/packages/ec/f2/874c4fc91420d7ef7d596e121cda5f45c87b1c0a45d0305123393dd986e6/wasm-tob-1.0.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af2f1a6bae1c8170237a1f1b3fba2ec7df4f1bcb060e113eb9936ee28b79959e",
        "md5": "10067fa1ffc9aebd608f9fc6573d4a98",
        "sha256": "1223a972a94b4dd1f2c59c1a9e11d475e9a5217a2852a3f5a6cdc1e23b8596ba"
      },
      "downloads": -1,
      "filename": "wasm_tob-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "10067fa1ffc9aebd608f9fc6573d4a98",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 17305,
      "upload_time": "2023-01-19T15:18:40",
      "upload_time_iso_8601": "2023-01-19T15:18:40.599902Z",
      "url": "https://files.pythonhosted.org/packages/af/2f/1a6bae1c8170237a1f1b3fba2ec7df4f1bcb060e113eb9936ee28b79959e/wasm_tob-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a879bea780d3b365ca0138a573889330a29fe46096b9b87facaa0a16cee19600",
        "md5": "f571e9e787038ef1fb01ffc5f2992bee",
        "sha256": "30538ac438acc4e59e887108e76cef68b93081c0b284c21358526a3deffc2b17"
      },
      "downloads": -1,
      "filename": "wasm-tob-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f571e9e787038ef1fb01ffc5f2992bee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 15658,
      "upload_time": "2023-01-19T15:18:41",
      "upload_time_iso_8601": "2023-01-19T15:18:41.978787Z",
      "url": "https://files.pythonhosted.org/packages/a8/79/bea780d3b365ca0138a573889330a29fe46096b9b87facaa0a16cee19600/wasm-tob-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}