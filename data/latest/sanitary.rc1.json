{
  "info": {
    "author": "",
    "author_email": "Berislav Lopac <berislav@lopac.net>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# Sanitary\n\nSanitary is a simple utility that can remove/mask sensitive information, such as PII, from any data structure. It also includes a Structlog-compatible [processor](https://www.structlog.org/en/stable/processors.html) to clean up structured log messages.\n\nIt will automatically mask sensitive information such as PII, login credentials and the like. By default, the masked data is replaced by a generic string, which can be configured to use a hashing function instead.\n\n## Installation\n\nSanitizer needs to be installed like any other Python package:\n\n```shell\n> pip install sanitary\n```\n\n## Base Usage\n\nThe first step is to instantiate a `Sanitizer` object:\n\n```python\n>>> from sanitary import Sanitizer\n>>> sanitizer = Sanitizer(keys={\"foo\", \"bar\"})\n>>> sanitizer.sanitize({\"foo\": 123, \"bar\": \"abc\", \"baz\": \"boom\"})\n{\"foo\": \"********\", \"bar\": \"********\", \"baz\": \"boom\"}\n```\n\n### Configuration\n\nThe `Sanitizer` class accepts the following arguments:\n\n* `keys`: An iterator of key names that will be searched for recursively. Any of these keys will have its value replaced by the replacement value.\n* `patterns`: An iterator of regular expression patterns that will be used to search the textual values. A value that matches any of the patterns will be entirely replaced by the message value.\n* `replacement`: Can be any of the following types of values:\n    1. A plain text, which will simply replace the sensitive value.\n    2. A callable which takes a string as its single argument and returns another string, which will replace the value.\n    3. A callable which takes a bytes object as its single argument and returns a \"hash object\"; this allows using the [`hashlib`](https://docs.python.org/3/library/hashlib.html) functions to mask the data. \n* `message`: The textual message which will replace the value that matches any of the defined patterns.\n\n\n## Data Hashing\n\nIf the `replacement` argument is a callable, the value of a corresponding sensitive key will be replaced with the return value of the callable (or its `hexdigest`). This way, the sanitized data can still be tracked (e.g. an email address will always have the same hash value) without exposing the actual value.\n\n```python\n>>> import hashlib\n>>> from sanitary import Sanitizer\n>>> sanitizer = Sanitizer(keys={\"password\", \"email\"}, replacement=hashlib.sha256)\n>>> sanitizer.sanitize({\"event\": \"clean password\", \"password\": \"blabla\", \"foo\": {\"Email\": \"test@example.com\"}})\n{\n    'event': 'clean password',\n    'password': 'ccadd99b16cd3d200c22d6db45d8b6630ef3d936767127347ec8a76ab992c2ea',\n    'foo': {'Email': '973dfe463ec85785f5f95af5ba3906eedb2d931c24e69824a89ea65dba4e813b'}\n}\n>>>\n```\n\n## Sensitive Text Values\n\nSanitizer can also clean up any text values that match specific regular expression patterns; any such value is completely replaced with a hardcoded warning message.\n\n```python\n>>> from sanitary import Sanitizer\n>>> sanitizer = Sanitizer(patterns={r\"\"\"'Authentication':\"\"\"})\n>>> sanitizer.sanitize(\"'Authentication': 1234\")\n\"#### WARNING: Message replaced due to sensitive pattern: 'Authentication':\"\n>>> sanitizer.sanitize({\"example\": \"'Authentication': 1234\"})\n{'example': \"#### WARNING: Message replaced due to sensitive pattern: 'Authentication':\"}\n>>>\n```\n\n## Structlog Processor\n\nThe special subclass, `StructlogSanitizer`, is provided to enable sanitizing the logging context managed by the [`structlog`](https://www.structlog.org) library. It needs to be instantiated and added to the list of configured [processors](https://www.structlog.org/en/stable/processors.html):\n\n```python\nimport hashlib\nimport structlog\nfrom sanitary import StructlogSanitizer\n\nstructlog.configure(\n    processors=[\n        StructlogSanitizer(keys={\"foo\", \"bar\", \"baz\"}, replacement=hashlib.sha256), \n        structlog.processors.JSONRenderer()\n    ],\n    logger_factory=structlog.stdlib.LoggerFactory(),\n)\n```\n\n*[PII]: Personally Identifiable Information\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sanitary",
    "package_url": "https://pypi.org/project/sanitary/",
    "platform": null,
    "project_url": "https://pypi.org/project/sanitary/",
    "project_urls": {
      "Issues": "https://github.com/berislavlopac/sanitary/issues",
      "Repository": "https://github.com/berislavlopac/sanitary"
    },
    "release_url": "https://pypi.org/project/sanitary/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Utility to remove or replace sensitive data from complex structures.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16202108,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c2da25d3ee93e50a5a2ffca4fb36178f8258c0d21a08c5cdfacbc9c4bbdd22e",
          "md5": "6a93f838e5bd85698e41756c6957d10c",
          "sha256": "54c1c42d9a585b208bee5abe6511e923cf9fe4e9ced6f258cffec6b5dd534a72"
        },
        "downloads": -1,
        "filename": "sanitary-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a93f838e5bd85698e41756c6957d10c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 6579,
        "upload_time": "2022-12-23T23:39:48",
        "upload_time_iso_8601": "2022-12-23T23:39:48.990430Z",
        "url": "https://files.pythonhosted.org/packages/2c/2d/a25d3ee93e50a5a2ffca4fb36178f8258c0d21a08c5cdfacbc9c4bbdd22e/sanitary-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0e39ad208eff2e5705d7d723d112982c535f3134e4d7e6fdea364502b0312cf",
          "md5": "488b08d0ba6ca7acf9a117039cd0e7d7",
          "sha256": "b617d410fcccf48e198daf1d2c34182f0e8b3f9f99023cebb33d8438fbf3a5e3"
        },
        "downloads": -1,
        "filename": "sanitary-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "488b08d0ba6ca7acf9a117039cd0e7d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9924,
        "upload_time": "2022-12-23T23:39:50",
        "upload_time_iso_8601": "2022-12-23T23:39:50.825105Z",
        "url": "https://files.pythonhosted.org/packages/c0/e3/9ad208eff2e5705d7d723d112982c535f3134e4d7e6fdea364502b0312cf/sanitary-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c2da25d3ee93e50a5a2ffca4fb36178f8258c0d21a08c5cdfacbc9c4bbdd22e",
        "md5": "6a93f838e5bd85698e41756c6957d10c",
        "sha256": "54c1c42d9a585b208bee5abe6511e923cf9fe4e9ced6f258cffec6b5dd534a72"
      },
      "downloads": -1,
      "filename": "sanitary-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6a93f838e5bd85698e41756c6957d10c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 6579,
      "upload_time": "2022-12-23T23:39:48",
      "upload_time_iso_8601": "2022-12-23T23:39:48.990430Z",
      "url": "https://files.pythonhosted.org/packages/2c/2d/a25d3ee93e50a5a2ffca4fb36178f8258c0d21a08c5cdfacbc9c4bbdd22e/sanitary-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c0e39ad208eff2e5705d7d723d112982c535f3134e4d7e6fdea364502b0312cf",
        "md5": "488b08d0ba6ca7acf9a117039cd0e7d7",
        "sha256": "b617d410fcccf48e198daf1d2c34182f0e8b3f9f99023cebb33d8438fbf3a5e3"
      },
      "downloads": -1,
      "filename": "sanitary-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "488b08d0ba6ca7acf9a117039cd0e7d7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 9924,
      "upload_time": "2022-12-23T23:39:50",
      "upload_time_iso_8601": "2022-12-23T23:39:50.825105Z",
      "url": "https://files.pythonhosted.org/packages/c0/e3/9ad208eff2e5705d7d723d112982c535f3134e4d7e6fdea364502b0312cf/sanitary-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}