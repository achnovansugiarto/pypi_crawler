{
  "info": {
    "author": "Schmaik",
    "author_email": "schmaikv3@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## OPUS greenNet python API wrapper\n#### Disclaimer: This is my first ever published libary for python so it might be messy and i would not recommend using it for things that have to work reliably. However if you want to build your own libary or help me making mine better take a look at the last section of the readme where you can find some more information about the API behind the project.\n\n## Supported Devices\n### Switch\n- [x] [OPUS BRiDGE 1 Channel](https://myopus.eu/en/products/smarthome/switch/1/opus-bridge-1-channel?number=563.010-C)\n- [x] [OPUS BRiDGE 2 Channel](https://myopus.eu/en/products/smarthome/switch/7/opus-bridge-2-channel?c=74)\n- [x] [OPUS BRiDGE Roller shutter / Venetian blind](https://myopus.eu/en/products/smarthome/switch/8/opus-bridge-roller-shutter/venetian-blind?c=74)\n- [x] [OPUS BRIDGE Universaldimmer](https://myopus.eu/en/products/smarthome/switch/352/opus-bridge-universaldimmer?c=74)\n- [ ] [OPUS BRiDGE 1 channel, 16A](https://myopus.eu/en/products/smarthome/switch/22/opus-bridge-1-channel-16a?c=74)\n- [ ] [OPUS actuator \"Professional\" round](https://myopus.eu/en/products/smarthome/switch/24/opus-actuator-professional-round?c=74)\n\n### Monetoring\n- [ ] OPUS smoke detector \n- [ ] OPUS door/window contact \n- [ ] Any Motion sensor\n- [ ] Any Water detector\n- [ ] Any Handle sensor\n- [ ] Any Temperature / Heat sensor\n\n## Usage\n### Setup:\n``` Python\n# import the libary\nimport opus_greennet\n\n# create the Auth object to authenticate with the API\n# the password can be found on a sticker on your gateway\nauth = Auth('http://IP_OF_YOUR_GATEWAY:8080', 'PASSWORD_OF_YOUR_GATEWAY')\n\n# create the OPUS object and pass the auth\nopus = OPUSAPI(auth)\n```\n\n### Print all switches to the console \n``` Python\n# get all onechannel switches\n# other types: two_channel_switches, blind_switches, dimming_switches\none_channel_switches = opus.get_one_channel_switches()\n\n# print information for every switch\nfor switch in one_channel_switches:\n  # available propertys: name, id, state, location, manufacturer, productId \n  # for two channel switches you have state_1 and state_2 instead of state\n  print(f\"{switch.name} with ID '{switch.id} is located at {switch.location} with state {switch.state}\")\n```\n\n### change the state of a device\n``` Python\n# change the state of the first switch in list using change_state\none_channel_switches[0].change_state(True)\n\n# for two channel switches you have to use change_state_1 and change_state_2 instead of change_state\n# for dimmers and blinds the state is represented in integers from 0-100 instead of bools\n```\n\n\n## Some info about the API\n\nThe REST API is exposed by the [OPUS SmartHome Gateway](https://myopus.eu/en/products/smarthome/control/10/opus-smarthome-gateway) at port 8080. There you will also find a UI where you can test and discover the API. To access the API you have to authenticate yourself.\n- Username: \"admin\"\n- Password: on a sticker on the OPUS SmartHome Gateway. (8 characters long and consists of capital letters and numbers  e.g. \"GBA7VD3G\")\n\n![Screenshot_20220107_153159](https://user-images.githubusercontent.com/47828495/148558617-0cfde238-e2c6-42c3-acdf-7ef90466e2d7.png)\nThe UI should look like this\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DerSchmaik/opus_greennnet_wrapper",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "opus-greennet",
    "package_url": "https://pypi.org/project/opus-greennet/",
    "platform": "",
    "project_url": "https://pypi.org/project/opus-greennet/",
    "project_urls": {
      "Homepage": "https://github.com/DerSchmaik/opus_greennnet_wrapper"
    },
    "release_url": "https://pypi.org/project/opus-greennet/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A package to interact with the OPUS greenNet API",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12505078,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3382f185c5c80687d2d83e427e8e82a1ed80dd56cce5db7fcb455bce029dd66",
          "md5": "07a7c1601328259a817654b2ebd65296",
          "sha256": "0b54db4261845d1bbef60abfa485b4d9cfa4b65cb34f4c2f2187c9d17b297e04"
        },
        "downloads": -1,
        "filename": "opus_greennet-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07a7c1601328259a817654b2ebd65296",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6687,
        "upload_time": "2022-01-05T20:09:05",
        "upload_time_iso_8601": "2022-01-05T20:09:05.147610Z",
        "url": "https://files.pythonhosted.org/packages/b3/38/2f185c5c80687d2d83e427e8e82a1ed80dd56cce5db7fcb455bce029dd66/opus_greennet-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2abf70dddf1baa7bd81404e0a09400f2f57d95a08b6614e0c5f439bc82cfe3af",
          "md5": "1411a309421ba5c4a3f639084ad10432",
          "sha256": "80d4e58c106f536e51f3f1e78903a3dbf7e0b9143e1905fea2a063d4a1aab53b"
        },
        "downloads": -1,
        "filename": "opus-greennet-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1411a309421ba5c4a3f639084ad10432",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3651,
        "upload_time": "2022-01-05T20:09:06",
        "upload_time_iso_8601": "2022-01-05T20:09:06.998762Z",
        "url": "https://files.pythonhosted.org/packages/2a/bf/70dddf1baa7bd81404e0a09400f2f57d95a08b6614e0c5f439bc82cfe3af/opus-greennet-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6462633f84edd28c9f8bde30b09cb89eca1e95faeafc7e293311743d5417336",
          "md5": "3d78a8db5d798400bda3ff3ef0d5a7a2",
          "sha256": "22f731af91a4616bbab11140d1baa7d1002d74c0cfde3c04e6af450fd918edc5"
        },
        "downloads": -1,
        "filename": "opus_greennet-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d78a8db5d798400bda3ff3ef0d5a7a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7894,
        "upload_time": "2022-01-07T15:24:47",
        "upload_time_iso_8601": "2022-01-07T15:24:47.759441Z",
        "url": "https://files.pythonhosted.org/packages/b6/46/2633f84edd28c9f8bde30b09cb89eca1e95faeafc7e293311743d5417336/opus_greennet-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29a6305933c35f48ae4e75c0c4499fa09fb94d08b95c5f7f5f6d6fc3349f73be",
          "md5": "2cc744ff2fa9baa11d2496bc1b06473c",
          "sha256": "7a68b4e2f2945a9b71eabedc31ca4b9fdedd06ef1b39bd5013c655578902f5c2"
        },
        "downloads": -1,
        "filename": "opus-greennet-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2cc744ff2fa9baa11d2496bc1b06473c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4891,
        "upload_time": "2022-01-07T15:24:50",
        "upload_time_iso_8601": "2022-01-07T15:24:50.267997Z",
        "url": "https://files.pythonhosted.org/packages/29/a6/305933c35f48ae4e75c0c4499fa09fb94d08b95c5f7f5f6d6fc3349f73be/opus-greennet-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b6462633f84edd28c9f8bde30b09cb89eca1e95faeafc7e293311743d5417336",
        "md5": "3d78a8db5d798400bda3ff3ef0d5a7a2",
        "sha256": "22f731af91a4616bbab11140d1baa7d1002d74c0cfde3c04e6af450fd918edc5"
      },
      "downloads": -1,
      "filename": "opus_greennet-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3d78a8db5d798400bda3ff3ef0d5a7a2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7894,
      "upload_time": "2022-01-07T15:24:47",
      "upload_time_iso_8601": "2022-01-07T15:24:47.759441Z",
      "url": "https://files.pythonhosted.org/packages/b6/46/2633f84edd28c9f8bde30b09cb89eca1e95faeafc7e293311743d5417336/opus_greennet-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29a6305933c35f48ae4e75c0c4499fa09fb94d08b95c5f7f5f6d6fc3349f73be",
        "md5": "2cc744ff2fa9baa11d2496bc1b06473c",
        "sha256": "7a68b4e2f2945a9b71eabedc31ca4b9fdedd06ef1b39bd5013c655578902f5c2"
      },
      "downloads": -1,
      "filename": "opus-greennet-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2cc744ff2fa9baa11d2496bc1b06473c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4891,
      "upload_time": "2022-01-07T15:24:50",
      "upload_time_iso_8601": "2022-01-07T15:24:50.267997Z",
      "url": "https://files.pythonhosted.org/packages/29/a6/305933c35f48ae4e75c0c4499fa09fb94d08b95c5f7f5f6d6fc3349f73be/opus-greennet-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}