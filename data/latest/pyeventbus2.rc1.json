{
  "info": {
    "author": "shenxianjie",
    "author_email": "327411586@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# 同时支持的同步和异步消息通知的eventbus，灵感来自与google guava eventbus\n\n用法：\n1.定义接收消息类型：\n```\nclass IntMessage(int):\n    pass\n\nclass DictMessage(dict):\n    pass\n```\n    \n2.定义需要接收消息的Observer类，需继承subscriber.DefaultSubscriber，\n并实现subscribe方法，subscribe方法的参数类型与自定义的消息类型保持一致\n```\nclass CConcreteObserver(DefaultSubscriber):\n\n    def subscribe(self, msg: msg.IntMessage):\n        time.sleep(2)\n        print(f\"{self.__class__.__name__}#{inspect.stack()[0][3]}: msg:{msg}\")\n```      \n \n3.根据消息类型，添加接收者\n```\nOBSERVER_REGISTRY = [\n    {\n        msg_type(msg.DictMessage()): [\n            subscriber.AConcreteObserver()\n        ]\n    },\n    {\n        msg_type(msg.IntMessage()): [\n            subscriber.BConcreteObserver(),\n            subscriber.CConcreteObserver(),\n\n        ]\n    },\n]\n```\n\n4.在需要的地方引入eventbus，根据自己的需求选择支持同步的方式（eventbus.EventBus）或异步的方式（eventbus.AsyncEventBus）\n在消息接收处，调用notify接口发送消息给对应的所有观察者\n```\nsync_event_bus = eventbus.AsyncEventBus()\nsync_event_bus.notify(msg.IntMessage(1211))\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jxs1211/pyeventbus",
    "keywords": "eventbus",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyeventbus2",
    "package_url": "https://pypi.org/project/pyeventbus2/",
    "platform": "all",
    "project_url": "https://pypi.org/project/pyeventbus2/",
    "project_urls": {
      "Homepage": "https://github.com/jxs1211/pyeventbus"
    },
    "release_url": "https://pypi.org/project/pyeventbus2/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Lightweight event bus support sync and async, inspired by google guava event bus",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8093830,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e713f4043f359bf0eb859305589103e3ac6f5fddf3a8dff7948be808de8c3f9",
          "md5": "986dbe15187a2698617692056096f32c",
          "sha256": "0461eaa5e2948e9d0ff5ccf51ed5d668a0716d7b4e809d7e92851f97e476e003"
        },
        "downloads": -1,
        "filename": "pyeventbus2-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "986dbe15187a2698617692056096f32c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6860,
        "upload_time": "2020-09-02T12:34:36",
        "upload_time_iso_8601": "2020-09-02T12:34:36.694792Z",
        "url": "https://files.pythonhosted.org/packages/8e/71/3f4043f359bf0eb859305589103e3ac6f5fddf3a8dff7948be808de8c3f9/pyeventbus2-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e713f4043f359bf0eb859305589103e3ac6f5fddf3a8dff7948be808de8c3f9",
        "md5": "986dbe15187a2698617692056096f32c",
        "sha256": "0461eaa5e2948e9d0ff5ccf51ed5d668a0716d7b4e809d7e92851f97e476e003"
      },
      "downloads": -1,
      "filename": "pyeventbus2-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "986dbe15187a2698617692056096f32c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6860,
      "upload_time": "2020-09-02T12:34:36",
      "upload_time_iso_8601": "2020-09-02T12:34:36.694792Z",
      "url": "https://files.pythonhosted.org/packages/8e/71/3f4043f359bf0eb859305589103e3ac6f5fddf3a8dff7948be808de8c3f9/pyeventbus2-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}