{
  "info": {
    "author": "Elijah Zupancic",
    "author_email": "elijah@zupancic.name",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Flask Management Endpoints\n\nFlask Management Endpoints allows for the definition of endpoints in your Flask \napplication such that Kubernetes can use them for [liveness and readiness probes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/).\nAdditionally, it provides verbose health and informational endpoints. The API\nis designed in the style of [Spring Actuator management endpoints](https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html). \n\n| Endpoint              | Method / Return Type | Description                                                                                                                     |\n| --------------------- | -------------------- | ------------------------------------------------------------------------------------------------------------------------------- |\n| `/info`               | `GET / json`         | Provides information about the application and host system.                                                                     |\n| `/health`             | `GET / json`         | Runs all health checks and outputs the status of each health check.                                                             |\n| `/health/liveness`    | `GET / json`         | Returns successfully if endpoint is running with terse output.                                                                  |\n| `/health/ping`        | `GET / json`         | Returns successfully if endpoint is running with terse output (same as liveness).                                               |\n| `/health/readiness`   | `GET / json`         | Readiness probe endpoint that can run dependent checks, but is the same as liveness by default.                                 |\n| `/version`            | `GET / plaintext`    | By default returns the contents of the environment variable `VERSION`, but can be configured to return any value via a closure. |\n\n## Configuration\n\nTo register the [Flask Blueprint](https://exploreflask.com/en/latest/blueprints.html) in your application:\n```python\nfrom flask import Flask\nfrom flask_management_endpoints import z_blueprint\n\napp = Flask(__name__)\napp.register_blueprint(z_blueprint)\n```\n\nIf you would like to mount the endpoint at a different URL prefix than the default (`/z`), then it can be\nspecified when registering the blueprint:\n```python\napp.register_blueprint(z_blueprint, url_prefix=\"/admin\")\n```\n\nNext, define the URL service health checks that you would like to register. The service dependencies can be defined\nas a fixed URL in which checks will be appended to the end. Alternatively, dependencies can be defined with simply\na hostname and an optional port, then the URL scheme and paths will be filled in by defaults.\n```python\napp.config.update(\n    Z_ENDPOINTS={        \n        \"service_dependencies\": {\n            # key is an identifier for the service name\n            # value is a base URL pointing to a Spring Actuator style health endpoint or just a hostname with\n            # an optional port.\n            'users_api': 'https://user-service:9922/admin', # readiness check: https://user-service:9922/admin/readiness\n            'widget_api': 'widget-service', # readiness check: {PREFERRED_URL_SCHEME}://widget-service/{url_prefix}/health/readiness\n        }\n    }\n)\n```\n\nIf you would like to have custom functions that will execute on the on a given check (health, readiness, version, etc), \nyou can define them as follows.\n```python\ndef db_check():\n    try:\n        engine = users_db.engine\n        result = engine.execute('SELECT 1')\n        return result.first()[0] == 1\n    except Exception as err:\n        app.logger.error(f'DB health check failed: {err}')\n        return False\n\napp.config.update(\n    Z_ENDPOINTS={\n        'check_functions': {\n            'health': {\n                'db': db_check\n            }\n        }\n    }\n```\n\n### Extension\n\nThis project can also be used via the provided Flask extension. With the extension the blueprint is registered using\nthe `ManagementEndpoints` class.\n\n```python\nfrom flask import Flask\nfrom flask_management_endpoints import ManagementEndpoints\n\napp = Flask(__name__)\nManagementEndpoints(app)\n```\n\nThe rest of the configuration is identical.\n\nThe extension has an additional option, `no_log`, that can disable logging of the HTTP requests\nhandled by your healthz endpoints, to avoid cluttering your web log files with automated requests.\nAt the moment, only the [gunicorn](https://gunicorn.org/) web server is supported.\n\n```python\nManagementEndpoints(app, no_log=True)\n```\n\n## Other Resources\n\nIf you need a less opinionated Flask health check blueprint, check out [flask-healthz](https://github.com/fedora-infra/flask-healthz). \n\n## License\n\nCopyright 2021 Elijah Zupancic\n\nThe Flask Management Endpoints project is licensed under the same license as Flask itself: [BSD 3-clause](LICENSE).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dekobon/flask-management-endpoints",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flask-management-endpoints",
    "package_url": "https://pypi.org/project/flask-management-endpoints/",
    "platform": null,
    "project_url": "https://pypi.org/project/flask-management-endpoints/",
    "project_urls": {
      "Bug Tracker": "https://github.com/dekobon/flask-management-endpoints/issues",
      "Homepage": "https://github.com/dekobon/flask-management-endpoints"
    },
    "release_url": "https://pypi.org/project/flask-management-endpoints/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A module for adding Spring Actuator style health endpoints to your Flask application",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13738233,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db6fb10f66644f4b720005f94ee965b7f0ffe03d2e0ed7607987f6b64c6aecb0",
          "md5": "2ee9bf62c565472503da6945cbec5833",
          "sha256": "ce850b09887d05c39cde9f363457737d6a96cd0a92af7c4fdf56265f33dd428f"
        },
        "downloads": -1,
        "filename": "flask_management_endpoints-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ee9bf62c565472503da6945cbec5833",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10563,
        "upload_time": "2021-11-08T22:23:29",
        "upload_time_iso_8601": "2021-11-08T22:23:29.978540Z",
        "url": "https://files.pythonhosted.org/packages/db/6f/b10f66644f4b720005f94ee965b7f0ffe03d2e0ed7607987f6b64c6aecb0/flask_management_endpoints-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abdd3bde88ba0e9e59524405a320d5b33bffa83b0834f406b99a294c86fe3fda",
          "md5": "69e0450161e10e86328191a4c07c47bd",
          "sha256": "5e9a0b001d48b75b520626130a25ad7ec4424fa9e8f3554fb87ec5ee6604b88e"
        },
        "downloads": -1,
        "filename": "flask-management-endpoints-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "69e0450161e10e86328191a4c07c47bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10526,
        "upload_time": "2021-11-08T22:23:31",
        "upload_time_iso_8601": "2021-11-08T22:23:31.311966Z",
        "url": "https://files.pythonhosted.org/packages/ab/dd/3bde88ba0e9e59524405a320d5b33bffa83b0834f406b99a294c86fe3fda/flask-management-endpoints-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6072642cedb074ac1becbcff9b2b7d2f02f50b56dffddf306fe7d6dee0cd6fcb",
          "md5": "2853db71548d72f182d509e8a500115d",
          "sha256": "cd2a30b663678c93daf42cb593cffda3e56554a82b3b77a6c00985cb921c98e6"
        },
        "downloads": -1,
        "filename": "flask_management_endpoints-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2853db71548d72f182d509e8a500115d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11716,
        "upload_time": "2022-05-06T23:23:32",
        "upload_time_iso_8601": "2022-05-06T23:23:32.059993Z",
        "url": "https://files.pythonhosted.org/packages/60/72/642cedb074ac1becbcff9b2b7d2f02f50b56dffddf306fe7d6dee0cd6fcb/flask_management_endpoints-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e1bf5e9386ee59fddbc9dcbb4e17748d9e99d101fa65e0f319eecd5ab868e6a",
          "md5": "266f2e79b96bf4ec3f8cdbfd02335d97",
          "sha256": "65e6d330c035d6413baadaa8751e4ccfd81d3673a34d5f6b47e4809825a662ce"
        },
        "downloads": -1,
        "filename": "flask-management-endpoints-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "266f2e79b96bf4ec3f8cdbfd02335d97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10600,
        "upload_time": "2022-05-06T23:23:33",
        "upload_time_iso_8601": "2022-05-06T23:23:33.611307Z",
        "url": "https://files.pythonhosted.org/packages/1e/1b/f5e9386ee59fddbc9dcbb4e17748d9e99d101fa65e0f319eecd5ab868e6a/flask-management-endpoints-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6072642cedb074ac1becbcff9b2b7d2f02f50b56dffddf306fe7d6dee0cd6fcb",
        "md5": "2853db71548d72f182d509e8a500115d",
        "sha256": "cd2a30b663678c93daf42cb593cffda3e56554a82b3b77a6c00985cb921c98e6"
      },
      "downloads": -1,
      "filename": "flask_management_endpoints-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2853db71548d72f182d509e8a500115d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11716,
      "upload_time": "2022-05-06T23:23:32",
      "upload_time_iso_8601": "2022-05-06T23:23:32.059993Z",
      "url": "https://files.pythonhosted.org/packages/60/72/642cedb074ac1becbcff9b2b7d2f02f50b56dffddf306fe7d6dee0cd6fcb/flask_management_endpoints-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e1bf5e9386ee59fddbc9dcbb4e17748d9e99d101fa65e0f319eecd5ab868e6a",
        "md5": "266f2e79b96bf4ec3f8cdbfd02335d97",
        "sha256": "65e6d330c035d6413baadaa8751e4ccfd81d3673a34d5f6b47e4809825a662ce"
      },
      "downloads": -1,
      "filename": "flask-management-endpoints-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "266f2e79b96bf4ec3f8cdbfd02335d97",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10600,
      "upload_time": "2022-05-06T23:23:33",
      "upload_time_iso_8601": "2022-05-06T23:23:33.611307Z",
      "url": "https://files.pythonhosted.org/packages/1e/1b/f5e9386ee59fddbc9dcbb4e17748d9e99d101fa65e0f319eecd5ab868e6a/flask-management-endpoints-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}