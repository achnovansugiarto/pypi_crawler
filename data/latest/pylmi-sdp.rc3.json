{
  "info": {
    "author": "Cristovao D. Sousa",
    "author_email": "crisjss@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Manufacturing",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "PyLMI-SDP\n=========\n\n*Symbolic linear matrix inequalities (LMI) and semi-definite programming (SDP) tools for Python*\n\nThis package includes a set of classes to represent and manipulate LMIs symbolically using [SymPy](http://sympy.org).\nIt also includes tools to export LMIs to [CVXOPT](http://abel.ee.ucla.edu/cvxopt/userguide/coneprog.html#semidefinite-programming) SDP input and to the [SDPA](http://sdpa.sourceforge.net/) format.\n\nDepends on [SymPy](http://sympy.org) and [NumPy](http://www.numpy.org/); and optionally on [CVXOPT](http://cvxopt.org) and on [SciPy](http://www.scipy.org) (for sparse matrices).\nSingle codebase supporting both Python 2.7 and Python 3.x.\nPyLMI-SDP is tested for various combinations of Python and sympy. See [here](https://github.com/cdsousa/PyLMI-SDP/actions/workflows/ci.yaml).\n\nPyLMI-SDP is at [GitHub](https://github.com/cdsousa/PyLMI-SDP).\n\n[![Build Status](https://github.com/cdsousa/PyLMI-SDP/actions/workflows/ci.yaml/badge.svg?branch=master)](https://github.com/cdsousa/PyLMI-SDP/actions/workflows/ci.yaml)\n[![Coverage Status](https://coveralls.io/repos/cdsousa/PyLMI-SDP/badge.png?branch=master)](https://coveralls.io/r/cdsousa/PyLMI-SDP?branch=master)\n\nLMI Definition\n--------------\n\n### Examples\n\n```Python\n>>> from sympy import symbols, Matrix\n>>> from lmi_sdp import LMI_PD, LMI_NSD\n>>> variables = symbols('x y z')\n>>> x, y, z = variables\n>>> lmi = LMI_PD(Matrix([[x+1, y+2], [y+2, z+x]]))\n>>> lmi\nMatrix([\n[x + 1, y + 2],\n[y + 2, x + z]]) > 0\n\n```\n\n```Python\n>>> from lmi_sdp import init_lmi_latex_printing\n>>> from sympy import latex\n>>> init_lmi_latex_printing()\n>>> print(latex(lmi))\n\\left[\\begin{matrix}x + 1 & y + 2\\\\y + 2 & x + z\\end{matrix}\\right] \\succ 0\n\n```\n![lmi](http://latex.codecogs.com/gif.latex?%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7Dx%2B1%26y%2B2%5C%5Cy%2B2%26x%2Bz%5Cend%7Bmatrix%7D%5Cright%5D%5Csucc0)\n\n```Python\n>>> print(latex(lmi.expanded(variables)))\n\\left[\\begin{matrix}1.0 & 0.0\\\\0.0 & 1.0\\end{matrix}\\right] x + \\left[\\begin{matrix}0.0 & 1.0\\\\1.0 & 0.0\\end{matrix}\\right] y + \\left[\\begin{matrix}0.0 & 0.0\\\\0.0 & 1.0\\end{matrix}\\right] z + \\left[\\begin{matrix}1.0 & 2.0\\\\2.0 & 0.0\\end{matrix}\\right] \\succ 0\n\n```\n![lmi.expanded(variables)](http://latex.codecogs.com/gif.latex?%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D1.0%260.0%5C%5C0.0%261.0%5Cend%7Bmatrix%7D%5Cright%5Dx%2B%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D0.0%261.0%5C%5C1.0%260.0%5Cend%7Bmatrix%7D%5Cright%5Dy%2B%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D0.0%260.0%5C%5C0.0%261.0%5Cend%7Bmatrix%7D%5Cright%5Dz%2B%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D1.0%262.0%5C%5C2.0%260.0%5Cend%7Bmatrix%7D%5Cright%5D%5Csucc0)\n\n```Python\n>>> lmi_2 = LMI_NSD( Matrix([[-x, -y], [-y, -z-x]]), Matrix([[1, 2], [2, 0]]))\n>>> lmi_2\nMatrix([\n[-x,     -y],\n[-y, -x - z]]) <= Matrix([\n[1, 2],\n[2, 0]])\n>>> lmi_2.canonical()\nMatrix([\n[x + 1, y + 2],\n[y + 2, x + z]]) >= 0\n\n```\n\n```Python\n>>> print(latex(lmi_2))\n\\left[\\begin{matrix}- x & - y\\\\- y & - x - z\\end{matrix}\\right] \\preceq \\left[\\begin{matrix}1 & 2\\\\2 & 0\\end{matrix}\\right]\n\n```\n![lmi_2](http://latex.codecogs.com/gif.latex?%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D-x%26-y%5C%5C-y%26-x-z%5Cend%7Bmatrix%7D%5Cright%5D%5Cpreceq%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D1%262%5C%5C2%260%5Cend%7Bmatrix%7D%5Cright%5D)\n\nConvertion to CVXOPT SDP\n------------------------\n\n### Example\n\n(from CVXOPT [SDP example](http://abel.ee.ucla.edu/cvxopt/userguide/coneprog.html#semidefinite-programming))\n\n```Python\n>>> from sympy import symbols, Matrix\n>>> from lmi_sdp import LMI_NSD, init_lmi_latex_printing\n>>>\n>>> init_lmi_latex_printing()\n>>>\n>>> variables = symbols('x1 x2 x3')\n>>> x1, x2, x3 = variables\n>>>\n>>> min_obj = x1 - x2 + x3\n>>>\n>>> LMI_1 = LMI_NSD(\n...     x1*Matrix([[-7, -11], [-11, 3]]) +\n...     x2*Matrix([[7, -18], [-18, 8]]) +\n...     x3*Matrix([[-2, -8], [-8, 1]]),\n...     Matrix([[33, -9], [-9, 26]]))\n>>>\n>>> LMI_2 = LMI_NSD(\n...     x1*Matrix([[-21, -11, 0], [-11, 10, 8], [0, 8, 5]]) +\n...     x2*Matrix([[0, 10, 16], [10, -10, -10], [16, -10, 3]]) +\n...     x3*Matrix([[-5, 2, -17], [2, -6, 8], [-17, 8, 6]]),\n...     Matrix([[14, 9, 40], [9, 91, 10], [40, 10, 15]]))\n>>>\n>>> min_obj\nx1 - x2 + x3\n\n```\n![min_obj](http://latex.codecogs.com/gif.latex?x_%7B1%7D-x_%7B2%7D%2Bx_%7B3%7D)\n\n```Python\n>>> LMI_1.expanded(variables)\nMatrix([\n[ -7.0, -11.0],\n[-11.0,   3.0]])*x1 + Matrix([\n[  7.0, -18.0],\n[-18.0,   8.0]])*x2 + Matrix([\n[-2.0, -8.0],\n[-8.0,  1.0]])*x3 <= Matrix([\n[33, -9],\n[-9, 26]])\n\n```\n![LMI_1.expanded(variables)](http://latex.codecogs.com/gif.latex?%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D-7.0%26-11.0%5C%5C-11.0%263.0%5Cend%7Bmatrix%7D%5Cright%5Dx_%7B1%7D%2B%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D7.0%26-18.0%5C%5C-18.0%268.0%5Cend%7Bmatrix%7D%5Cright%5Dx_%7B2%7D%2B%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D-2.0%26-8.0%5C%5C-8.0%261.0%5Cend%7Bmatrix%7D%5Cright%5Dx_%7B3%7D%5Cpreceq%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D33%26-9%5C%5C-9%2626%5Cend%7Bmatrix%7D%5Cright%5D)\n\n```Python\n>>> LMI_2.expanded(variables)\nMatrix([\n[-21.0, -11.0, 0.0],\n[-11.0,  10.0, 8.0],\n[  0.0,   8.0, 5.0]])*x1 + Matrix([\n[ 0.0,  10.0,  16.0],\n[10.0, -10.0, -10.0],\n[16.0, -10.0,   3.0]])*x2 + Matrix([\n[ -5.0,  2.0, -17.0],\n[  2.0, -6.0,   8.0],\n[-17.0,  8.0,   6.0]])*x3 <= Matrix([\n[14,  9, 40],\n[ 9, 91, 10],\n[40, 10, 15]])\n\n```\n![LMI_2.expanded(variables)](http://latex.codecogs.com/gif.latex?%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D-21.0%26-11.0%260.0%5C%5C-11.0%2610.0%268.0%5C%5C0.0%268.0%265.0%5Cend%7Bmatrix%7D%5Cright%5Dx_%7B1%7D%2B%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D0.0%2610.0%2616.0%5C%5C10.0%26-10.0%26-10.0%5C%5C16.0%26-10.0%263.0%5Cend%7Bmatrix%7D%5Cright%5Dx_%7B2%7D%2B%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D-5.0%262.0%26-17.0%5C%5C2.0%26-6.0%268.0%5C%5C-17.0%268.0%266.0%5Cend%7Bmatrix%7D%5Cright%5Dx_%7B3%7D%5Cpreceq%5Cleft%5B%5Cbegin%7Bmatrix%7D%7B%7D14%269%2640%5C%5C9%2691%2610%5C%5C40%2610%2615%5Cend%7Bmatrix%7D%5Cright%5D)\n\n```Python\n>>> from cvxopt import solvers\n>>> from lmi_sdp import to_cvxopt\n>>>\n>>> solvers.options['show_progress'] = False\n>>>\n>>> c, Gs, hs = to_cvxopt(min_obj, [LMI_1, LMI_2], variables)\n>>>\n>>> sol = solvers.sdp(c, Gs=Gs, hs=hs)\n>>> print(sol['x'])\n[-3.68e-01]\n[ 1.90e+00]\n[-8.88e-01]\n<BLANKLINE>\n\n```\n\nExport to SDPA Format\n---------------------\n\n### Example\n\n```Python\n>>> from sympy import symbols, Matrix\n>>> from lmi_sdp import LMI_PSD, to_sdpa_sparse\n>>>\n>>> variables = x1, x2 = symbols('x1 x2')\n>>>\n>>> min_obj = 10*x1 + 20*x2\n>>> lmi_1 = LMI_PSD(\n...     -Matrix([[1, 0, 0, 0], [0, 2, 0, 0], [0, 0, 3, 0], [0, 0, 0, 4]]) +\n...     Matrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]])*x1 +\n...     Matrix([[0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 5, 2], [0, 0, 2, 6]])*x2)\n>>> lmi_1\nMatrix([\n[x1 - 1,           0,        0,        0],\n[     0, x1 + x2 - 2,        0,        0],\n[     0,           0, 5*x2 - 3,     2*x2],\n[     0,           0,     2*x2, 6*x2 - 4]]) >= 0\n>>>\n>>> dat = to_sdpa_sparse(min_obj, lmi_1, variables, comment='test sparse')\n>>> print(dat)\n\"test sparse\"\n2 = ndim\n3 = nblocks\n1 1 2 = blockstruct\n10.0, 20.0 = objcoeffs\n0 1 1 1 1.0\n0 2 1 1 2.0\n0 3 1 1 3.0\n0 3 2 2 4.0\n1 1 1 1 1.0\n1 2 1 1 1.0\n2 2 1 1 1.0\n2 3 1 1 5.0\n2 3 1 2 2.0\n2 3 2 2 6.0\n<BLANKLINE>\n\n```\n\n\nAuthor\n------\n\n[Cristóvão Duarte Sousa](https://github.com/cdsousa)\n\nInstall\n-------\n\nFrom PyPi:\n\n    pip install PyLMI-SDP\n\nFrom git source:\n\n    git clone https://github.com/cdsousa/PyLMI-SDP.git\n    cd PyLMI-SDP\n    python setup.py install\n\nLicense\n-------\n\nSimplified BSD License. See [License File](LICENSE.txt)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/cdsousa/PyLMI-SDP",
    "keywords": "LMI SDP",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyLMI-SDP",
    "package_url": "https://pypi.org/project/PyLMI-SDP/",
    "platform": null,
    "project_url": "https://pypi.org/project/PyLMI-SDP/",
    "project_urls": {
      "Homepage": "http://github.com/cdsousa/PyLMI-SDP"
    },
    "release_url": "https://pypi.org/project/PyLMI-SDP/1.1.1/",
    "requires_dist": [
      "sympy",
      "packaging"
    ],
    "requires_python": "",
    "summary": "Symbolic linear matrix inequalities (LMI) and semi-definite programming (SDP) tools for Python",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17362515,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9424f73c1d0fb7fd9bb1a44cff001c043cfe50541cd1a6a5a71def2e39b445a0",
          "md5": "becedbb94e3c41cd66610be02aaf49f9",
          "sha256": "3fc7ca3a446d7eea37ed339bf1af8d2443a6b13b5e28087c0f979276e4a08791"
        },
        "downloads": -1,
        "filename": "PyLMI-SDP-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "becedbb94e3c41cd66610be02aaf49f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10570,
        "upload_time": "2013-09-17T09:16:09",
        "upload_time_iso_8601": "2013-09-17T09:16:09.093830Z",
        "url": "https://files.pythonhosted.org/packages/94/24/f73c1d0fb7fd9bb1a44cff001c043cfe50541cd1a6a5a71def2e39b445a0/PyLMI-SDP-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2f9a3e6f177792d685da31df55305af4301392f4172692725ab5acd406a3be4",
          "md5": "9f3cd25dc31730bd7aaf05dd4fc77524",
          "sha256": "c28c6459cbc6ee019a27264a0c1c9d00ed4910a4d83a0fff85708d2314939286"
        },
        "downloads": -1,
        "filename": "PyLMI_SDP-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f3cd25dc31730bd7aaf05dd4fc77524",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10346,
        "upload_time": "2022-01-03T15:26:53",
        "upload_time_iso_8601": "2022-01-03T15:26:53.397863Z",
        "url": "https://files.pythonhosted.org/packages/a2/f9/a3e6f177792d685da31df55305af4301392f4172692725ab5acd406a3be4/PyLMI_SDP-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cdf0e839a91171986ad27698855739d237639d1510dd7bd5bf8978c0a0a61c4",
          "md5": "6e36139a34adaa06fc3b3a2a36b8d460",
          "sha256": "c26728d469cd300a0970b2ae09d2c457179d49e3ca9e79756efca62e52ea3222"
        },
        "downloads": -1,
        "filename": "PyLMI-SDP-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6e36139a34adaa06fc3b3a2a36b8d460",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9420,
        "upload_time": "2022-01-03T15:26:55",
        "upload_time_iso_8601": "2022-01-03T15:26:55.097798Z",
        "url": "https://files.pythonhosted.org/packages/1c/df/0e839a91171986ad27698855739d237639d1510dd7bd5bf8978c0a0a61c4/PyLMI-SDP-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2ebfcea4c9a4bb71da0e90abef1700b08a2041bfbfd0c8001ee9e2e07bb6ce6",
          "md5": "7be62b14e186884b2fb79efb426a082c",
          "sha256": "4c2e7fec95bbfe8c94de3fdaa96159d129662312c8be527ba8e1a1ba72c34302"
        },
        "downloads": -1,
        "filename": "PyLMI_SDP-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7be62b14e186884b2fb79efb426a082c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10369,
        "upload_time": "2023-03-20T11:37:19",
        "upload_time_iso_8601": "2023-03-20T11:37:19.751693Z",
        "url": "https://files.pythonhosted.org/packages/a2/eb/fcea4c9a4bb71da0e90abef1700b08a2041bfbfd0c8001ee9e2e07bb6ce6/PyLMI_SDP-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a15fa040a63b55f9856bc5f68ecc947eef73913583f3eb3c5a07f9ae226a8b61",
          "md5": "694f353eb37793477f07c1ea352b2668",
          "sha256": "202821bbf588434919fc4e0b16b4b24f10c7edd229432ae54c40be23077b28b6"
        },
        "downloads": -1,
        "filename": "PyLMI-SDP-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "694f353eb37793477f07c1ea352b2668",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9636,
        "upload_time": "2023-03-20T11:37:21",
        "upload_time_iso_8601": "2023-03-20T11:37:21.923642Z",
        "url": "https://files.pythonhosted.org/packages/a1/5f/a040a63b55f9856bc5f68ecc947eef73913583f3eb3c5a07f9ae226a8b61/PyLMI-SDP-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2ebfcea4c9a4bb71da0e90abef1700b08a2041bfbfd0c8001ee9e2e07bb6ce6",
        "md5": "7be62b14e186884b2fb79efb426a082c",
        "sha256": "4c2e7fec95bbfe8c94de3fdaa96159d129662312c8be527ba8e1a1ba72c34302"
      },
      "downloads": -1,
      "filename": "PyLMI_SDP-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7be62b14e186884b2fb79efb426a082c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10369,
      "upload_time": "2023-03-20T11:37:19",
      "upload_time_iso_8601": "2023-03-20T11:37:19.751693Z",
      "url": "https://files.pythonhosted.org/packages/a2/eb/fcea4c9a4bb71da0e90abef1700b08a2041bfbfd0c8001ee9e2e07bb6ce6/PyLMI_SDP-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a15fa040a63b55f9856bc5f68ecc947eef73913583f3eb3c5a07f9ae226a8b61",
        "md5": "694f353eb37793477f07c1ea352b2668",
        "sha256": "202821bbf588434919fc4e0b16b4b24f10c7edd229432ae54c40be23077b28b6"
      },
      "downloads": -1,
      "filename": "PyLMI-SDP-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "694f353eb37793477f07c1ea352b2668",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9636,
      "upload_time": "2023-03-20T11:37:21",
      "upload_time_iso_8601": "2023-03-20T11:37:21.923642Z",
      "url": "https://files.pythonhosted.org/packages/a1/5f/a040a63b55f9856bc5f68ecc947eef73913583f3eb3c5a07f9ae226a8b61/PyLMI-SDP-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}