{
  "info": {
    "author": "Anime no Sekai",
    "author_email": "niichannomail@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# safeIO  \n\n>  Safely make I/O operations to files in Python even from multiple threads... and more!  \n\n# Table of Content  \n\n1. [safeIO](#safeio)\n2. [Table of Content](#table-of-content)\n3. [What is it?](#what-is-it)\n4. [Installation](#installation)\n5. [Objects](#objects)\n    - [TextFile()](#textfile)\n    - [BinaryFile()](#binaryfile)\n    - [JSONFile()](#jsonfile)\n6. [Tips](#tips)\n\n\n# What is it?\nIt's a module which lets you manage your files (most of the time, Input/Output operations) without worrying about accessing the file from two simultaneously.\n\nSome functions may help you managing your files more easily as they are intuitive and things like substractions (TextFile object - TextFile Object returns the Cosine Similarity of the two files), equality (Object == Object), iteration (for line in TextFile object), the rename/move/delete methods are made easier!.\n\n# Installation\n**From PIP**\n```sh\npip install safeIO --upgrade\n```\n\n\n# Objects\n## TextFile(filepath, encoding=\"utf-8\", blocking=True)  \n\n> A Text File object  \n\n\n### isfile  \n\n*isfile(callback=None)*  \n\n> Wether the file exists on the disk or not  \n\n### delete  \n\n*delete(callback=None)*  \n\n> Deletes the file  \n\n### rename  \n\n*rename(newName,overwrite=False,callback=None)*  \n\n> Renames the file and returns its new path  \n\n### move  \n\n*move(newPath,overwrite=False,callback=None)*  \n\n> Moves the file and returns its new path  \n\n### name  \n\n*name(callback=None)*  \n\n> Returns the file name  \n\n### fileno  \n\n*fileno(callback=None)*  \n\n> Returns the file descriptor (int) used by Python to request I/O operations from the operating system.  \n\n### read  \n\n*read(position=0,callback=None)*  \n\n> Reads the entire file and returns its content  \n\n### write  \n\n*write(data,position=0,callback=None)*  \n\n> Writes (or overwrites) to the file and returns the number of characters written  \n\n### append  \n\n*append(data,callback=None)*  \n\n> Appends to the file and returns the number of characters written  \n\n### readline  \n\n*readline(position=0,callback=None)*  \n\n> Returns the line of the current position (from the position to the linebreak)  \n\n### readlines  \n\n*readlines(position=0,callback=None)*  \n\n> Reads the whole file and returns the lines (separated by a line break)  \n\n### writelines  \n\n*writelines(data,position=0,callback=None)*  \n\n> Writes (or overwrites) the given list of lines to the file  \n\n### appendlines  \n\n*appendlines(data,callback=None)*  \n\n> Appends the given list of lines to the file  \n\n### detach  \n\n*detach(mode=\"r\",callback=None)*  \n\n> Returns the opened IO (TextIOWrapper)  \n\n>   \n\n**Warning: Make sure to close the file correctly after using the file with detach**\n\n---  \n\n## BinaryFile(filepath, blocking=True)  \n\n> A Binary File object  \n\n### isfile  \n\n*isfile(callback=None)*  \n\n> Wether the file exists on the disk or not  \n\n### delete  \n\n*delete(callback=None)*  \n\n> Deletes the file  \n\n### rename  \n\n*rename(newName,overwrite=False,callback=None)*  \n\n> Renames the file and returns its new path  \n\n### move  \n\n*move(newPath,overwrite=False,callback=None)*  \n\n> Moves the file and returns its new path  \n\n### name  \n\n*name(callback=None)*  \n\n> Returns the file name  \n\n### fileno  \n\n*fileno(callback=None)*  \n\n> Returns the file descriptor (int) used by Python to request I/O operations from the operating system.  \n\n### read  \n\n*read(position=0,callback=None)*  \n\n> Reads the entire file and returns its content  \n\n### write  \n\n*write(data,position=0,callback=None)*  \n\n> Writes (or overwrites) to the file and returns the number of bytes written  \n\n### append  \n\n*append(data,callback=None)*  \n\n> Appends to the file and returns the number of bytes written  \n\n### readline  \n\n*readline(position=0,callback=None)*  \n\n> Returns the line of the current position (from the position to the linebreak)  \n\n### readlines  \n\n*readlines(position=0,callback=None)*  \n\n> Reads the whole file and returns the lines (separated by a line break)  \n\n### writelines  \n\n*writelines(data,position=0,callback=None)*  \n\n> Writes (or overwrites) the given list of lines to the file  \n\n### appendlines  \n\n*appendlines(data,callback=None)*  \n\n> Appends the given list of lines to the file  \n\n### detach  \n\n*detach(mode=\"rb\",callback=None)*  \n\n> Returns the opened IO (TextIOWrapper)  \n\n>   \n\n> Tips: Make sure to include the \"b\" access mode in the mode\\n  \n\n**Warning: Make sure to close the file correctly after using the file with detach**\n\n---  \n\n## JSONFile(filepath, ensure_ascii=False, minify=False, indent=4, separators=(', ', ': '), encoding=\"utf-8\", blocking=True)  \n\n> A JSON File object  \n\n### isfile  \n\n*isfile(callback=None)*  \n\n> Wether the file exists on the disk or not  \n\n### delete  \n\n*delete(callback=None)*  \n\n> Deletes the file  \n\n### rename  \n\n*rename(newName,overwrite=False,callback=None)*  \n\n> Renames the file and returns its new path  \n\n### move  \n\n*move(newPath,overwrite=False,callback=None)*  \n\n> Moves the file and returns its new path  \n\n### name  \n\n*name(callback=None)*  \n\n> Returns the file name  \n\n### fileno  \n\n*fileno(callback=None)*  \n\n> Returns the file descriptor (int) used by Python to request I/O operations from the operating system.  \n\n### read  \n\n*read(position=0,callback=None)*  \n\n> Reads the entire file and returns its content  \n\n### write  \n\n*write(data,position=0,callback=None)*  \n\n> Writes (or overwrites) to the file and returns the number of characters written  \n\n### append  \n\n*append(data,callback=None)*  \n\n> Appends to the file and returns the number of characters written  \n\n### detach  \n\n*detach(mode=\"r\",callback=None)*  \n\n> Returns the opened IO (TextIOWrapper)  \n\n**Warning: Make sure to close the file correctly after using the file with detach**\n\n\n\n# Tips\n- You can temporarily make the operations blocking with the \"with\" statement like so:\n\n```python\nfrom safeIO import TextFile\n\nf = TextFile(\"example.txt\", blocking=False)\nprint(f.read()) # prints \"None\"\nwith f:\n    print(f.read()) # prints the content of example.txt\nwith f as reading_file:\n    print(reading_file.read()) # prints the content of example.txt\n```\n\n- Try to define the safeIO object at the top of your script and use the same object for all of the operations to the file with:\n\n```python\nfrom safeIO import JSONFile\ndata_file = JSONFile(\"data.json\", minify=True, blocking=False)\n\n# do a bunch of stuff\ndata_file.write({\"type\": \"new_data\"})\n\n# do more stuff\nwith data_file as data:\n    new = data.read()\nnew[\"type\"] = \"new!\"\ndata_file.write(new)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Animenosekai/safeIO/archive/v1.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Animenosekai/safeIO",
    "keywords": "file,io,thread-safe,thread,management,file-management,animenosekai,threading",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "safeIO",
    "package_url": "https://pypi.org/project/safeIO/",
    "platform": "",
    "project_url": "https://pypi.org/project/safeIO/",
    "project_urls": {
      "Download": "https://github.com/Animenosekai/safeIO/archive/v1.2.tar.gz",
      "Homepage": "https://github.com/Animenosekai/safeIO"
    },
    "release_url": "https://pypi.org/project/safeIO/1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Safely make I/O operations to files in Python even from multiple threads... and more!",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9503568,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a401d8426fd9bcdf2b6568be257c30d06f54059fb7cf4f63d41e688e01f05185",
          "md5": "f6ecba86c568d8c851e187eb341f1809",
          "sha256": "a09296c724e76cd6d92dd6c4cc9af130d24fcdcf23839801e210068b87337ebf"
        },
        "downloads": -1,
        "filename": "safeIO-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6ecba86c568d8c851e187eb341f1809",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6949,
        "upload_time": "2020-12-01T18:08:49",
        "upload_time_iso_8601": "2020-12-01T18:08:49.102506Z",
        "url": "https://files.pythonhosted.org/packages/a4/01/d8426fd9bcdf2b6568be257c30d06f54059fb7cf4f63d41e688e01f05185/safeIO-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "869e407f754bbf60e06c511274a92636acd564b4bfa78cb2a0f3cf19b6703a9a",
          "md5": "28383c916434e6f6fed8c39dbfc7ac2c",
          "sha256": "5ff6247e13b7a154650875f19ae340fd68502c62f4700ce6fd50e0a6d65ee213"
        },
        "downloads": -1,
        "filename": "safeIO-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "28383c916434e6f6fed8c39dbfc7ac2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7626,
        "upload_time": "2020-12-01T18:08:50",
        "upload_time_iso_8601": "2020-12-01T18:08:50.310815Z",
        "url": "https://files.pythonhosted.org/packages/86/9e/407f754bbf60e06c511274a92636acd564b4bfa78cb2a0f3cf19b6703a9a/safeIO-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed35e1afbb2accb21630425a1bbd7748b8344cd044f0e315a961dc92bc58c320",
          "md5": "e8b079863f9479668bd9454e9a3b3fd6",
          "sha256": "79bb2c20793373b54d7555e936d01638ce125f6cd89d7a689be3d860eb16c8be"
        },
        "downloads": -1,
        "filename": "safeIO-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8b079863f9479668bd9454e9a3b3fd6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6972,
        "upload_time": "2020-12-29T03:16:08",
        "upload_time_iso_8601": "2020-12-29T03:16:08.008321Z",
        "url": "https://files.pythonhosted.org/packages/ed/35/e1afbb2accb21630425a1bbd7748b8344cd044f0e315a961dc92bc58c320/safeIO-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5aa9db8fac5026d3135df09dead641fb5e41ebdbf27f5da63be7f9992691753f",
          "md5": "adc6d47fa01eff69ffc6eb31f1cb6628",
          "sha256": "83d106df1ce971ca0b691929fd4369e7e79436789e3070ff2e7a7deee956819d"
        },
        "downloads": -1,
        "filename": "safeIO-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "adc6d47fa01eff69ffc6eb31f1cb6628",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7625,
        "upload_time": "2020-12-29T03:16:09",
        "upload_time_iso_8601": "2020-12-29T03:16:09.451555Z",
        "url": "https://files.pythonhosted.org/packages/5a/a9/db8fac5026d3135df09dead641fb5e41ebdbf27f5da63be7f9992691753f/safeIO-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba708e414eb58fa3b64d6450d51167da5ea628f01370d22c6aac080234789f38",
          "md5": "f66611081959c791872396bb022b2e7d",
          "sha256": "0a350e25500bfb997c58ddee88ff6ddac118457ffe19f47b022f2e7266cef813"
        },
        "downloads": -1,
        "filename": "safeIO-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f66611081959c791872396bb022b2e7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6981,
        "upload_time": "2020-12-29T03:27:47",
        "upload_time_iso_8601": "2020-12-29T03:27:47.028281Z",
        "url": "https://files.pythonhosted.org/packages/ba/70/8e414eb58fa3b64d6450d51167da5ea628f01370d22c6aac080234789f38/safeIO-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d587fa97521767d6a3de79667055b774818968af551ee764268ed4d5a2dcfecf",
          "md5": "0e9cd1695eedf67c7cd172913ab44dd7",
          "sha256": "4fbe789250cf7edddddcd5d5f7ac696afc8815b0cabfa0e4d67e682b8d4c38cd"
        },
        "downloads": -1,
        "filename": "safeIO-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e9cd1695eedf67c7cd172913ab44dd7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7623,
        "upload_time": "2020-12-29T03:27:48",
        "upload_time_iso_8601": "2020-12-29T03:27:48.078185Z",
        "url": "https://files.pythonhosted.org/packages/d5/87/fa97521767d6a3de79667055b774818968af551ee764268ed4d5a2dcfecf/safeIO-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "232f00e4f435cc49f1b600807356e17ec7625f011a5ae86d8b893ab8ddb5bd98",
          "md5": "a08b29da46c990f02a5242d6c70d1dca",
          "sha256": "d480a6dab01a390ebc24c12d6b774ad00cef3db5348ad07d8bd11d272a808cd3"
        },
        "downloads": -1,
        "filename": "safeIO-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a08b29da46c990f02a5242d6c70d1dca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7983,
        "upload_time": "2021-02-23T21:12:49",
        "upload_time_iso_8601": "2021-02-23T21:12:49.569370Z",
        "url": "https://files.pythonhosted.org/packages/23/2f/00e4f435cc49f1b600807356e17ec7625f011a5ae86d8b893ab8ddb5bd98/safeIO-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "232f00e4f435cc49f1b600807356e17ec7625f011a5ae86d8b893ab8ddb5bd98",
        "md5": "a08b29da46c990f02a5242d6c70d1dca",
        "sha256": "d480a6dab01a390ebc24c12d6b774ad00cef3db5348ad07d8bd11d272a808cd3"
      },
      "downloads": -1,
      "filename": "safeIO-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a08b29da46c990f02a5242d6c70d1dca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7983,
      "upload_time": "2021-02-23T21:12:49",
      "upload_time_iso_8601": "2021-02-23T21:12:49.569370Z",
      "url": "https://files.pythonhosted.org/packages/23/2f/00e4f435cc49f1b600807356e17ec7625f011a5ae86d8b893ab8ddb5bd98/safeIO-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}