{
  "info": {
    "author": "m-yuhas",
    "author_email": "m-yuhas@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Operating System :: Microsoft :: Windows :: Windows 7",
      "Operating System :: Microsoft :: Windows :: Windows 8",
      "Operating System :: Microsoft :: Windows :: Windows 8.1",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Artistic Software",
      "Topic :: Multimedia",
      "Topic :: Multimedia :: Sound/Audio",
      "Topic :: Multimedia :: Sound/Audio :: Sound Synthesis"
    ],
    "description": "# Musical Hash\n[中文指南](https://github.com/m-yuhas/musical_hash/blob/master/doc/读我档案.md)\n\n[Documentación en español](https://github.com/m-yuhas/musical_hash/blob/master/doc/LÉAME.md)\n\n[Documentation en français](https://github.com/m-yuhas/musical_hash/blob/master/doc/LISEZ-MOI.md)\n\n## Introduction\nJust as [Random Art](https://github.com/calmh/randomart) provides a method to\nvisualize RSA keys, Musical Hash provides a method to \"visualize\" the output of\na hash function as audio. It generates a unique melody for each hash value that\ncan be exported as a wave file, a midi file, or a list of notes in ABC\nnotation.\n\n## Quick Start\n* Install the package:\n\n```\npip install musical_hash\n```\n\n* In a Python console, import the package:\n\n```python\n>>> import musical_hash\n```\n\n* Construct the musical hash object:\n\n```python\n>>> hash = musical_hash.MusicalHash(b'Hello World!', 'md5')\n```\n\n* Export the hash as a wave file in the key of A pentatonic minor:\n\n```python\n>>> hash.wave('hash.wav', key=musical_hash.A_PENTATONIC_MINOR)\n```\n\n* Or, export as a midi file:\n\n```python\n>>> hash.midi('hash.mid', key=musical_hash.A_PENTATONIC_MINOR)\n```\n\n## API Documentation\nFor the complete API documentation, [click here](https://github.com/m-yuhas/musical_hash/blob/master/doc/api_documentation.md).\n\n## Theory of Operation\nIn western classical music there are twelve semitones in an octave. The first\nnote of the subsequent octave is the first harmonic of the first note of the\nprevious octave.  Thus we will consider a single octave as the universe of all\nnotes available to \"visualize\" a sequence of bytes.  Most pieces of music are\nwritten in a specific key, which is a subset of all available notes.  Within a\nsingle octave, each key has a finite number of notes, so if we consider the\nsequence of bytes as an integer, we can find that integer's representation in a\nbase equal to the number of notes in a key.  We then assign each digit of this\nrepresentation a musical note.  This package comes with many diatonic and\npentatonic keys as constants.\n\n## Dependencies\nOnly Python version 3.5 and greater are supported.  This package should run on\nany POSIX system as well as Windows 7 and greater.\n\nThe following Pypi packages are required:\n* mido\n* numpy\n* wavio\n\n## Contributing\nSuggestions and pull requests are welcome.  If you find a bug and don't have\ntime to fix it yourself, feel free to open an issue.  Also, I am not an expert\nat Music Theory; if you find an error with the way a scale or musical term is\nnamed, please call it out so that I can learn.\n\n## Future Tasks\n- TODO: Make a hash that includes chords to decrease the tune length and\n    increase the perceived uniqueness of each hash.\n\n## See Also\nOriginally I thought I was the only one with this idea, but after I implemented\nit I found this guy's [repository](https://github.com/jmaclean/musical-hash),\nso check it out if you want to see another take on the concept.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/m-yuhas/musical_hash",
    "keywords": "",
    "license": "MIT",
    "maintainer": "m-yuhas",
    "maintainer_email": "",
    "name": "musical-hash",
    "package_url": "https://pypi.org/project/musical-hash/",
    "platform": "",
    "project_url": "https://pypi.org/project/musical-hash/",
    "project_urls": {
      "Homepage": "https://github.com/m-yuhas/musical_hash"
    },
    "release_url": "https://pypi.org/project/musical-hash/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "like random-art, but with music",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6770682,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42920cd3584598bcc053fabdd293d87e0f53006f4cadcb435349fad975acbf85",
          "md5": "cb607eb5038be185c3f0d8d6ec02d940",
          "sha256": "ab08807fd5990a405b44b473f42da73f53b5709e6a1d18fc54ee631602dc0060"
        },
        "downloads": -1,
        "filename": "musical_hash-0.1.0.zip",
        "has_sig": false,
        "md5_digest": "cb607eb5038be185c3f0d8d6ec02d940",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15722,
        "upload_time": "2020-03-08T06:24:15",
        "upload_time_iso_8601": "2020-03-08T06:24:15.233715Z",
        "url": "https://files.pythonhosted.org/packages/42/92/0cd3584598bcc053fabdd293d87e0f53006f4cadcb435349fad975acbf85/musical_hash-0.1.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1a1c7293902d4348386007c0c448a7032ef7043fe08077217a5b77485350c02",
          "md5": "00e0865115a0bc9415fa283b48cf732a",
          "sha256": "48ceda4fc9f8f69092ab09403aaa79eef8746f302b6e02a073e7918f4e94ca9c"
        },
        "downloads": -1,
        "filename": "musical_hash-0.1.1.zip",
        "has_sig": false,
        "md5_digest": "00e0865115a0bc9415fa283b48cf732a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18787,
        "upload_time": "2020-03-08T06:33:48",
        "upload_time_iso_8601": "2020-03-08T06:33:48.428992Z",
        "url": "https://files.pythonhosted.org/packages/f1/a1/c7293902d4348386007c0c448a7032ef7043fe08077217a5b77485350c02/musical_hash-0.1.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d71bbec35f4cebf0c28d1e5b43cd16f307b5c9e99f98a44b2b2f089da6e05574",
          "md5": "167506282996a0ae77d79b71318db440",
          "sha256": "0d6022e76665d80927f9273b50eef14a4759e9040955802a79b82b1b6ce93ea2"
        },
        "downloads": -1,
        "filename": "musical_hash-0.1.2.zip",
        "has_sig": false,
        "md5_digest": "167506282996a0ae77d79b71318db440",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18831,
        "upload_time": "2020-03-08T06:38:42",
        "upload_time_iso_8601": "2020-03-08T06:38:42.704729Z",
        "url": "https://files.pythonhosted.org/packages/d7/1b/bec35f4cebf0c28d1e5b43cd16f307b5c9e99f98a44b2b2f089da6e05574/musical_hash-0.1.2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86fb3c40ca04bec63f8a69a14e3dd423688909ff80ef2a1bfd895877282b0251",
          "md5": "e032e2dec3a72996facd6df4193b43b0",
          "sha256": "809d590f19b764c7664beb9d108dd1fc86402266455445a88235705d3d880cb4"
        },
        "downloads": -1,
        "filename": "musical_hash-0.1.3.zip",
        "has_sig": false,
        "md5_digest": "e032e2dec3a72996facd6df4193b43b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18563,
        "upload_time": "2020-03-08T06:48:33",
        "upload_time_iso_8601": "2020-03-08T06:48:33.699859Z",
        "url": "https://files.pythonhosted.org/packages/86/fb/3c40ca04bec63f8a69a14e3dd423688909ff80ef2a1bfd895877282b0251/musical_hash-0.1.3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86fb3c40ca04bec63f8a69a14e3dd423688909ff80ef2a1bfd895877282b0251",
        "md5": "e032e2dec3a72996facd6df4193b43b0",
        "sha256": "809d590f19b764c7664beb9d108dd1fc86402266455445a88235705d3d880cb4"
      },
      "downloads": -1,
      "filename": "musical_hash-0.1.3.zip",
      "has_sig": false,
      "md5_digest": "e032e2dec3a72996facd6df4193b43b0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18563,
      "upload_time": "2020-03-08T06:48:33",
      "upload_time_iso_8601": "2020-03-08T06:48:33.699859Z",
      "url": "https://files.pythonhosted.org/packages/86/fb/3c40ca04bec63f8a69a14e3dd423688909ff80ef2a1bfd895877282b0251/musical_hash-0.1.3.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}