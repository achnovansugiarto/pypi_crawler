{
  "info": {
    "author": "Peter Ullrich",
    "author_email": "peter.j.ullrich@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Topic :: Utilities"
    ],
    "description": "Complete Bunq API Wrapper for Python\n====================================\n\nThis project aims to have a complete Python wrapper for the `Bunq\nAPI <https://doc.bunq.com/>`__. It takes inspiration from the `.NET\nwrapper <https://github.com/Sycade/BunqApi>`__ written by the great\n`MLowijs <https://github.com/mlowijs>`__. Some functionality, especially\nin ``ApiClient``, is based on or taken from the thin `API\nwrapper <https://github.com/madeddie/python-bunq>`__ created by\n`MadEddie <https://github.com/madeddie>`__. Thanks MLowijs and MadEddie!\n\nThis project is built in **Python 3.6**\n\n|Build Status| |BCH compliance| |Test Coverage| |Updates| |Python 3|\n\nGetting started\n---------------\n\n1. First enter your `API Key <https://www.bunq.com/en/api>`__ in the\n   ``apiwrapper/config/parameters.ini`` file.\n2. Next, `create a new Virtual\n   Environment <https://python-guide-pt-br.readthedocs.io/en/latest/dev/virtualenvs/>`__\n   based on **Python 3.6**\n3. Activate your Virtual Environment and install the requirements in\n   ``requirements.txt`` with ``pip3.6 install -r requirements.txt``\n4. Open ``get_started.py``, read through the comments and follow them.\n   After doing this you will have a ready-to-go installation and can\n   start using the API!\n\nReuse Installation\n------------------\n\nIf you followed the script ``get_started.py`` mentioned above already,\nyou should have the following parameters saved somewhere:\n\n-  API Key\n-  Private Key\n-  Installation Token (not needed if you have the Session Token)\n-  Installation ID (needed to create new session tokens)\n-  Server Public Key\n-  Session Token\n\nNote: If you saved these parameters to the config file, they will be in\n``apiwrapper/config/parameters.ini``\n\nIf you have the above parameters, you can go ahead and create an\nAPIClient, which is the connector to the Bunq API.\n\nYou will have to decide which APIClient to use. At the moment, I\nincluded one that uses the config file in\n``apiwrapper/config/parameters.ini``, which is the 'normal' class\n``APIClient``. Also, on request from OGKevin, I included an APIClient,\nwhich does not load the parameters from a config file, called the\n``APIClientNonPersisting``.\n\nSo, decide on whether to use the config file or not and uncomment one of\nthe following lines:\n\nIf you want to use the parameters stored in\n``apiwrapper/config/parameters.ini``, use the following code:\n\n.. code:: python\n\n    from apiwrapper.clients.api_client_persisting import ApiClientPersisting\n\n    api_key = \"YOUR API KEY HERE\"\n    api = ApiClientPersisting(api_key)\n\nElse, if you want to use your own parameters, use the following lines\nand enter your parameters there\n\n.. code:: python\n\n    from apiwrapper.clients.api_client import ApiClient\n\n    api_key = \"YOUR API KEY HERE\"\n    private_key = \"YOUR PRIVATE KEY HERE\"\n    session_token = \"YOUR SESSION TOKEN HERE\"\n    server_public_key = \"THE SERVER PUBLIC KEY HERE\"\n\n    api = ApiClient(api_key, privkey=private_key,\n                                     session_token=session_token,\n                                     server_pubkey=server_public_key)\n\nNow, you are able to make calls to the Bunq API using the\n``EndpointsController``. I have included an example of how to get the\nUser ID from the API:\n\n.. code:: python\n\n    from apiwrapper.clients.api_client import ApiClient\n    from apiwrapper.clients.api_client_persisting import ApiClientPersisting\n    import json\n\n    api = \"MAKE SURE TO CREATE THE API CLIENT AS DESCRIBED ABOVE\"\n\n    res = api.endpoints.user.get_logged_in_user()\n    print(json.dumps(res, indent=2))\n\nHow to use this API Wrapper\n---------------------------\n\nEach endpoint of the `Bunq API <https://doc.bunq.com/>`__ has its own\n``Endpoint`` module. The existing ones are in the\n``apiwrapper/endpoints`` package. The **EndpointController** in\n``apiwrapper/endpoints/controller`` has an instance of each of these\nendpoints. Any ApiClient will have an instance of this endpoint\ncontroller called **endpoints**. After creating an ApiClient you can\nsimply make api calls with:\n\n.. code:: python\n\n    api_client.endpoints.ENDPOINT_OF_YOUR_CHOICE.CALL_OF_YOUR_CHOICE()\n\n**Endpoint functions simply return the response from the Bunq API.**\n\n[Example] Retrieve all Monetary Accounts for User\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    import json\n\n    from apiwrapper.clients.api_client_persisting import ApiClientPersisting\n\n    user_id = 1234\n\n    api = ApiClientPersisting()\n    res = api.endpoints.monetary_account.get_all_accounts_for_user(user_id)\n\n    print(json.dumps(res, indent=2))\n\nContribute\n----------\n\nIf you want to contribute, fork this repository and start implementing\none of the following points: \\* Add ``POST``, ``PUT``, and some\n``DELETE`` calls for all endpoints \\* Add Encryption/Decryption of\n``/config/parameter.ini`` file using Password \\* Have a look at the\nIssues of this repository\n\n.. |Build Status| image:: https://travis-ci.org/PJUllrich/Complete-Bunq-API-Python-Wrapper.svg?branch=master\n   :target: https://travis-ci.org/PJUllrich/Complete-Bunq-API-Python-Wrapper\n.. |BCH compliance| image:: https://bettercodehub.com/edge/badge/PJUllrich/Complete-Bunq-API-Python-Wrapper?branch=master\n   :target: https://bettercodehub.com/\n.. |Test Coverage| image:: https://coveralls.io/repos/github/PJUllrich/Complete-Bunq-API-Python-Wrapper/badge.svg?branch=master\n   :target: https://coveralls.io/github/PJUllrich/Complete-Bunq-API-Python-Wrapper?branch=master\n.. |Updates| image:: https://pyup.io/repos/github/PJUllrich/Complete-Bunq-API-Python-Wrapper/shield.svg\n   :target: https://pyup.io/repos/github/PJUllrich/Complete-Bunq-API-Python-Wrapper/\n.. |Python 3| image:: https://pyup.io/repos/github/PJUllrich/Complete-Bunq-API-Python-Wrapper/python-3-shield.svg\n   :target: https://pyup.io/repos/github/PJUllrich/Complete-Bunq-API-Python-Wrapper/\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PJUllrich/Complete-Bunq-API-Python-Wrapper",
    "keywords": "bunq api wrapper sdk",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bunq-api-sdk",
    "package_url": "https://pypi.org/project/bunq-api-sdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/bunq-api-sdk/",
    "project_urls": {
      "Homepage": "https://github.com/PJUllrich/Complete-Bunq-API-Python-Wrapper"
    },
    "release_url": "https://pypi.org/project/bunq-api-sdk/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A SDK for the Bunq API through which all HTTP requests can be made in a simple manner.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2891025,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3feee85eaa54b25a7869de7f59e0e2a720a730a9a6c0b17fb0820d307e2f7e27",
          "md5": "33694a68f3766a8324aeb476e89dd6b1",
          "sha256": "0775f3de7c95eae67b70a9bf11babefdfa898015f56752aaf573e8d0ea0ea2f0"
        },
        "downloads": -1,
        "filename": "bunq-api-sdk-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "33694a68f3766a8324aeb476e89dd6b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3978,
        "upload_time": "2017-05-22T10:30:37",
        "upload_time_iso_8601": "2017-05-22T10:30:37.493484Z",
        "url": "https://files.pythonhosted.org/packages/3f/ee/e85eaa54b25a7869de7f59e0e2a720a730a9a6c0b17fb0820d307e2f7e27/bunq-api-sdk-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ea43f6e0b24ee6fc23850c16fd3609d516cf12b7112384d1ddb4abe58c52139",
          "md5": "7b82c4dde39038ccc40343c5f88f1928",
          "sha256": "42d8682736f1af45f1997b34c90ad39160ce7e211328fdbbaca1287ba6574e6a"
        },
        "downloads": -1,
        "filename": "bunq-api-sdk-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7b82c4dde39038ccc40343c5f88f1928",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3985,
        "upload_time": "2017-05-22T13:48:27",
        "upload_time_iso_8601": "2017-05-22T13:48:27.195439Z",
        "url": "https://files.pythonhosted.org/packages/6e/a4/3f6e0b24ee6fc23850c16fd3609d516cf12b7112384d1ddb4abe58c52139/bunq-api-sdk-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a663cd28d4f33fff5a5e9aa5dc4c1d61ee40d75ef278856347ee8211b30435fe",
          "md5": "da84c010754f1be7fcbee8062a401ce6",
          "sha256": "e4a6b1594128ac3fda34d18566b4313c4d0f6db60968c9ab258bc67b096ce565"
        },
        "downloads": -1,
        "filename": "bunq-api-sdk-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "da84c010754f1be7fcbee8062a401ce6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3987,
        "upload_time": "2017-05-22T15:20:38",
        "upload_time_iso_8601": "2017-05-22T15:20:38.431022Z",
        "url": "https://files.pythonhosted.org/packages/a6/63/cd28d4f33fff5a5e9aa5dc4c1d61ee40d75ef278856347ee8211b30435fe/bunq-api-sdk-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a663cd28d4f33fff5a5e9aa5dc4c1d61ee40d75ef278856347ee8211b30435fe",
        "md5": "da84c010754f1be7fcbee8062a401ce6",
        "sha256": "e4a6b1594128ac3fda34d18566b4313c4d0f6db60968c9ab258bc67b096ce565"
      },
      "downloads": -1,
      "filename": "bunq-api-sdk-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "da84c010754f1be7fcbee8062a401ce6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3987,
      "upload_time": "2017-05-22T15:20:38",
      "upload_time_iso_8601": "2017-05-22T15:20:38.431022Z",
      "url": "https://files.pythonhosted.org/packages/a6/63/cd28d4f33fff5a5e9aa5dc4c1d61ee40d75ef278856347ee8211b30435fe/bunq-api-sdk-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}