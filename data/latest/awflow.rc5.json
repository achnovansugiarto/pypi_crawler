{
  "info": {
    "author": "Joeri Hermans, François Rozet, Arnaud Delaunoy",
    "author_email": "joeri@peinser.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Reproducible research and reusable acyclic workflows in Python. Execute code on HPC systems as if you executed them on your machine!\n\n## Motivation\n\nWould you like fully reproducible research or reusable workflows that seamlessly run on HPC clusters?\nTired of writing and managing large Slurm submission scripts? Do you have comment out large parts of your pipeline whenever its results have been generated? Hate YAML?\nDon't waste your precious time! `awflow` allows you to directly describe complex pipelines in Python, that run on your personal computer and large HPC clusters.\n\n\n```python\nimport glob\nimport numpy as np\nimport os\n\nfrom awflow import after, ensure, job, schedule\n\nn = 10000\ntasks = 10\n\n@ensure(lambda i: os.path.exists(f'pi-{i}.npy'))\n@job(cpus='4', memory='4GB', array=tasks)\ndef estimate(i: int):\n    print(f'Executing task {i + 1} / {tasks}.')\n    x = np.random.random(n)\n    y = np.random.random(n)\n    pi_estimate = (x**2 + y**2 <= 1)\n    np.save(f'pi-{i}.npy', pi_estimate)\n\n@after(estimate)\n@ensure(lambda: os.path.exists('pi.npy'))\n@job(cpus='4')\ndef merge():\n    files = glob.glob('pi-*.npy')\n    stack = np.vstack([np.load(f) for f in files])\n    pi_estimate = stack.sum() / (n * tasks) * 4\n    print('π ≅', pi_estimate)\n    np.save('pi.npy', pi_estimate)\n\nmerge.prune()  # Prune jobs whose postconditions have been satisfied\n\nschedule(merge, backend='local')  # Executes merge and its dependencies\n```\nExecuting this Python program (`python examples/pi.py --backend slurm`) on a Slurm HPC cluster will launch the following jobs.\n```\n           1803299       all    merge username PD       0:00      1 (Dependency)\n     1803298_[6-9]       all estimate username PD       0:00      1 (Resources)\n         1803298_3       all estimate username  R       0:01      1 compute-xx\n         1803298_4       all estimate username  R       0:01      1 compute-xx\n         1803298_5       all estimate username  R       0:01      1 compute-xx\n```\nThe following example shows how workflow graphs can be dynamically allocated:\n```python\nfrom awflow import after, job, schedule, terminal_nodes\n\n@job(cpus='2', memory='4GB', array=5)\ndef generate(i: int):\n    print(f'Generating data block {i}.')\n\n@after(generate)\n@job(cpus='1', memory='2GB', array=5)\ndef postprocess(i: int):\n    print(f'Postprocessing data block {i}.')\n\ndef do_experiment(parameter):\n    r\"\"\"This method allocates a `fit` and `make_plot` job\n    based on the specified parameter.\"\"\"\n\n    @after(postprocess)\n    @job(name=f'fit_{parameter}')  # By default, the name is equal to the function name\n    def fit():\n        print(f'Fit {parameter}.')\n\n    @after(fit)\n    @job(name=f'plt_{parameter}')  # Simplifies the identification of the logfile\n    def make_plot():\n        print(f'Plot {parameter}.')\n\n# Programmatically build workflow\nfor parameter in [0.1, 0.2, 0.3, 0.4, 0.5]:\n    do_experiment(parameter)\n\nleafs = terminal_nodes(generate, prune=True)  # Find terminal nodes of workflow graph\nschedule(*leafs, backend='local')\n```\n\n\nCheck the [examples](examples/) directory to explore the functionality.\n\n## Usage\n\nTODO\n\n## Available backends\n\nCurrently, `awflow.schedule` only supports a `local` and `slurm` backend.\n\n## Installation\n\nThe `awflow` package is available on [PyPi](https://pypi.org/project/awflow/), which means it is installable via `pip`.\n```console\nyou@local:~ $ pip install awflow\n```\nIf you would like the latest features, you can install it using this Git repository.\n```console\nyou@local:~ $ pip install git+https://github.com/JoeriHermans/awflow\n```\nIf you would like to run the examples as well, be sure to install the *optional* example dependencies.\n```console\nyou@local:~ $ pip install 'awflow[examples]'\n```\n\n## Roadmap and TODO\n\n- [ ] Should `schedule` return metadata of jobs and workflow?\n- [ ] Check for cyclic dependencies.\n- [ ] More examples and documentation.\n- [ ] Utilities to cleanup generated metadata and crashed jobs for the Slurm backend.\n- [ ] Can jobs submit jobs on both local and Slurm backend?\n\n## Contributing\n\nSee [`CONTRIBUTING.md`](CONTRIBUTING.md).\n\n## License\n\nAs described in the [`LICENSE`](LICENSE.txt) file.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JoeriHermans/awflow",
    "keywords": "awflow workflow workflow-engine hpc slurm hpc-tools reproducible-science",
    "license": "BSD license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "awflow",
    "package_url": "https://pypi.org/project/awflow/",
    "platform": "",
    "project_url": "https://pypi.org/project/awflow/",
    "project_urls": {
      "Documentation": "https://github.com/JoeriHermans/awflow",
      "Homepage": "https://github.com/JoeriHermans/awflow",
      "Source": "https://github.com/JoeriHermans/awflow",
      "Tracker": "https://github.com/JoeriHermans/awflow/issues"
    },
    "release_url": "https://pypi.org/project/awflow/0.1.0/",
    "requires_dist": [
      "cloudpickle",
      "build ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "sphinx ; extra == 'dev'",
      "sphinx-markdown-builder ; extra == 'dev'",
      "sphinx-autodoc-typehints ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "numpy ; extra == 'examples'"
    ],
    "requires_python": ">=3.7",
    "summary": "Reusable acyclic workflows in Python. Execute code on HPC systems as if you executed them on your laptop!",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12530117,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e36cf6eda50f3d9eca0cc962f715390f1869732cf2b2bfc36c3ff13d47930220",
          "md5": "dc3564b57aa8d47a1e25c7bdb79d1939",
          "sha256": "9a01ccba568c4b50ae6fa26906dee0d2df2861da08d8dc678e37ee1443c9b59a"
        },
        "downloads": -1,
        "filename": "awflow-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc3564b57aa8d47a1e25c7bdb79d1939",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17598,
        "upload_time": "2021-10-13T16:25:22",
        "upload_time_iso_8601": "2021-10-13T16:25:22.652968Z",
        "url": "https://files.pythonhosted.org/packages/e3/6c/f6eda50f3d9eca0cc962f715390f1869732cf2b2bfc36c3ff13d47930220/awflow-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30d27de7571e0cba3a96f3fd6eb155eee2e95eb2af06c55ea6db92356f2f9ca9",
          "md5": "3edf8b17d5b45a9041f5ca644cfc6ba3",
          "sha256": "1cd58075bbc82d5f5dc67d8a2d6667f42deae11f18310c68e3db243917063e32"
        },
        "downloads": -1,
        "filename": "awflow-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3edf8b17d5b45a9041f5ca644cfc6ba3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14112,
        "upload_time": "2021-10-13T16:25:24",
        "upload_time_iso_8601": "2021-10-13T16:25:24.292528Z",
        "url": "https://files.pythonhosted.org/packages/30/d2/7de7571e0cba3a96f3fd6eb155eee2e95eb2af06c55ea6db92356f2f9ca9/awflow-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c729930a7294e38ae332bafbdf55ca85d5c33c9be1d27e07f882e6642b50361",
          "md5": "033be0ea36065b3b90ba4635fa064a8a",
          "sha256": "e7b35bb377da32df14e0148761d696ffa7e323d2b0dd7ebd38f61c3a988bce3d"
        },
        "downloads": -1,
        "filename": "awflow-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "033be0ea36065b3b90ba4635fa064a8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18884,
        "upload_time": "2021-10-14T16:52:07",
        "upload_time_iso_8601": "2021-10-14T16:52:07.140885Z",
        "url": "https://files.pythonhosted.org/packages/8c/72/9930a7294e38ae332bafbdf55ca85d5c33c9be1d27e07f882e6642b50361/awflow-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a1200e1406bb70bffc97bdd8e3519da82902a89fe74bb26a535c87902955c55",
          "md5": "224fae2d256522fef9d564438db056df",
          "sha256": "8c65de09b8810f38c12113b1b7a2c10075e83bb49626cda4087f0ea5fd71f5b2"
        },
        "downloads": -1,
        "filename": "awflow-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "224fae2d256522fef9d564438db056df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14815,
        "upload_time": "2021-10-14T16:52:08",
        "upload_time_iso_8601": "2021-10-14T16:52:08.884907Z",
        "url": "https://files.pythonhosted.org/packages/9a/12/00e1406bb70bffc97bdd8e3519da82902a89fe74bb26a535c87902955c55/awflow-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cab98af46787f8b409dfb0cbd26b463d7583f08ecfe6fa63c1e3f96183b6e51d",
          "md5": "a68f6f67c94e24441587f9ac7e78fe24",
          "sha256": "c658cb85a62d3b0950a731514d970ab680797a159c009ad589117f2554330b89"
        },
        "downloads": -1,
        "filename": "awflow-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a68f6f67c94e24441587f9ac7e78fe24",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19121,
        "upload_time": "2021-10-15T00:22:16",
        "upload_time_iso_8601": "2021-10-15T00:22:16.899436Z",
        "url": "https://files.pythonhosted.org/packages/ca/b9/8af46787f8b409dfb0cbd26b463d7583f08ecfe6fa63c1e3f96183b6e51d/awflow-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47360db9beb5edfb909c2830964489912bb6aeab0636c84cda2736b03ab4c5fe",
          "md5": "b67507572f22782556097f4dffd92a90",
          "sha256": "71df1aade9fa0dcd9eeb93e49f6bad87776567ab4819b0ae0e3ba26d9bbbbbbc"
        },
        "downloads": -1,
        "filename": "awflow-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b67507572f22782556097f4dffd92a90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15250,
        "upload_time": "2021-10-15T00:22:20",
        "upload_time_iso_8601": "2021-10-15T00:22:20.000869Z",
        "url": "https://files.pythonhosted.org/packages/47/36/0db9beb5edfb909c2830964489912bb6aeab0636c84cda2736b03ab4c5fe/awflow-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8de3144ee1e2baefc557754e97cf31d43d46c9a64728a9b5a02a3e0a7d4e0e0e",
          "md5": "404b6c500f84643f20b35efdbbde864b",
          "sha256": "9a04d29628356b75cb3c5cac0ccbb9c712392d27bd1ef7e654eada54f072ece2"
        },
        "downloads": -1,
        "filename": "awflow-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "404b6c500f84643f20b35efdbbde864b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19386,
        "upload_time": "2021-12-19T12:39:26",
        "upload_time_iso_8601": "2021-12-19T12:39:26.828527Z",
        "url": "https://files.pythonhosted.org/packages/8d/e3/144ee1e2baefc557754e97cf31d43d46c9a64728a9b5a02a3e0a7d4e0e0e/awflow-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "648b2018c836342c99664c7d4867111a281c75da764789d8938eef5fc26a40e7",
          "md5": "77f53dde16bd77c8f14294bc16b75619",
          "sha256": "93a846172994faf2bd79b55a005d151f234d52683c532b07769f6521edbdb94f"
        },
        "downloads": -1,
        "filename": "awflow-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77f53dde16bd77c8f14294bc16b75619",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10367,
        "upload_time": "2022-01-10T16:35:18",
        "upload_time_iso_8601": "2022-01-10T16:35:18.336298Z",
        "url": "https://files.pythonhosted.org/packages/64/8b/2018c836342c99664c7d4867111a281c75da764789d8938eef5fc26a40e7/awflow-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f9071ea2752ec98d93d3b4ea92591df041f0e5f75f6e71c6ad538373fb2efcd",
          "md5": "958aa7a52141810b12ef95b55f27d709",
          "sha256": "820780cdabc4d08c0aaa53517a40af7063dc10cf6578d84fbea3da948d7cbb4c"
        },
        "downloads": -1,
        "filename": "awflow-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "958aa7a52141810b12ef95b55f27d709",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11241,
        "upload_time": "2022-01-10T16:35:20",
        "upload_time_iso_8601": "2022-01-10T16:35:20.075257Z",
        "url": "https://files.pythonhosted.org/packages/7f/90/71ea2752ec98d93d3b4ea92591df041f0e5f75f6e71c6ad538373fb2efcd/awflow-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "648b2018c836342c99664c7d4867111a281c75da764789d8938eef5fc26a40e7",
        "md5": "77f53dde16bd77c8f14294bc16b75619",
        "sha256": "93a846172994faf2bd79b55a005d151f234d52683c532b07769f6521edbdb94f"
      },
      "downloads": -1,
      "filename": "awflow-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "77f53dde16bd77c8f14294bc16b75619",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10367,
      "upload_time": "2022-01-10T16:35:18",
      "upload_time_iso_8601": "2022-01-10T16:35:18.336298Z",
      "url": "https://files.pythonhosted.org/packages/64/8b/2018c836342c99664c7d4867111a281c75da764789d8938eef5fc26a40e7/awflow-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f9071ea2752ec98d93d3b4ea92591df041f0e5f75f6e71c6ad538373fb2efcd",
        "md5": "958aa7a52141810b12ef95b55f27d709",
        "sha256": "820780cdabc4d08c0aaa53517a40af7063dc10cf6578d84fbea3da948d7cbb4c"
      },
      "downloads": -1,
      "filename": "awflow-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "958aa7a52141810b12ef95b55f27d709",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11241,
      "upload_time": "2022-01-10T16:35:20",
      "upload_time_iso_8601": "2022-01-10T16:35:20.075257Z",
      "url": "https://files.pythonhosted.org/packages/7f/90/71ea2752ec98d93d3b4ea92591df041f0e5f75f6e71c6ad538373fb2efcd/awflow-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}