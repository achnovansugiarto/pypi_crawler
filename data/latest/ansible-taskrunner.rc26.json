{
  "info": {
    "author": "Engelbert Tejeda",
    "author_email": "etejeda@tecknicos.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**  *generated with [DocToc](https://github.com/thlorenz/doctoc)*\n\n- [Overview](#overview)\n- [TL;DR](#tldr)\n- [Use case and example](#use-case-and-example)\n    - [Given](#given)\n    - [The Challenge](#the-challenge)\n    - [Investigation](#investigation)\n    - [Assessment](#assessment)\n    - [Proposed Solution](#proposed-solution)\n- [Technical Details](#technical-details)\n- [Creating a task manifest file](#creating-a-task-manifest-file)\n    - [Add the hosts block](#add-the-hosts-block)\n    - [Add the vars block](#add-the-vars-block)\n    - [Populate the vars block - defaults](#populate-the-vars-block---defaults)\n    - [Populate the vars block - define global options](#populate-the-vars-block---define-global-options)\n    - [Populate the vars block - define sub-commands](#populate-the-vars-block---define-sub-commands)\n        - [Populate the vars block - cli options - mapped variables](#populate-the-vars-block---cli-options---mapped-variables)\n    - [Populate the vars block - help/message](#populate-the-vars-block---helpmessage)\n    - [Populate the vars block - embedded shell functions](#populate-the-vars-block---embedded-shell-functions)\n        - [More about embedded shell functions](#more-about-embedded-shell-functions)\n          - [Bash example:](#bash-example)\n          - [Python example:](#python-example)\n          - [Ruby example:](#ruby-example)\n    - [Populate the vars block - dynamic inventory expression](#populate-the-vars-block---dynamic-inventory-expression)\n    - [Populate the vars block - inventory file](#populate-the-vars-block---inventory-file)\n    - [Add tasks](#add-tasks)\n- [Usage Examples](#usage-examples)\n- [Installation](#installation)\n- [More Examples](#more-examples)\n- [Appendix](#appendix)\n    - [The Options Separator](#the-options-separator)\n    - [Bastion Mode](#bastion-mode)\n    - [Special Variables](#special-variables)\n        - [ansible_playbook_command](#ansible_playbook_command)\n        - [cli_provider](#cli_provider)\n        - [__ansible_extra_options__](#__ansible_extra_options__)\n        - [__tasks_file__](#__tasks_file__)\n        - [__command__](#__command__)\n    - [Mutually Exclusive Options](#mutually-exclusive-options)\n    - [Simple Templating](#simple-templating)\n    - [Single-Executable Releases](#single-executable-releases)\n    - [Unit Testing](#unit-testing)\n- [TODO - Add more tests!](#todo---add-more-tests)\n- [License and Credits](#license-and-credits)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n\n<a name=\"top\"></a>\n<a name=\"overview\"></a>\n\n# Overview\n\n*ansible-taskrunner* is a cli app that is essentially an ansible wrapper.\n\nIt reads an ansible playbook file as its input, which serves as a _task manifest_.\n\nIf no task manifest is specified, the app will search for 'Taskfile.yaml' in the current working directory.\n\nThe inspiration for the tool comes from the gnu make command, which operates in similar fashion, i.e.\n\n- A Makefile defines available build steps\n- The make command consumes the Makefile at runtime and exposes these steps as command-line options\n\nIf you are running this tool from Windows, please read the section on [Bastion Mode](#bastion_mode)\n\n# TL;DR\n\n- Ever wanted to add custom switches to the `ansible-playbook` command? Something like this:<br /> \n`ansible-playbook -i myinventory.txt -d dbhost1 -w webhost1 -t value1 myplaybook.yaml`\n- Well, you can through the use of an ansible-playbook wrapper\n- That's where `tasks` comes in:<br />\n`tasks -s -b bar -f foo1`<br />\ntranslates to:<br />\n`ansible-playbook -i /tmp/ansible-inventory16xdkrjd.tmp.ini \\\n-e \"{'some_foo_variable':'foo1'}\" -e \"{'some_bar_variable':'bar'}\" -e \"{'playbook_targets':'local'}\" Taskfile.yaml`\n\n1. Jump down to the [usage examples](#usage-examples) to see this in action\n2. Review the [installation](#installation) instructions if you want to test-drive it\n3. Read on if you want to dig deeper into the tool\n\n<a name=\"use-case-and-example\"></a>\n\n# Use case and example\n\n<a name=\"given\"></a>\n\n## Given\n\n1. An enterprise-grade application named contoso-app\n2. Multiple teams:\n    - Development\n    - Engineering\n    - DBA\n    - Operations\n    - QA\n3. Ansible is the primary means of invoking business and operational processes across the numerous environments\n\n<a name=\"the-challenge\"></a>\n\n## The Challenge\n\nYou must ensure all teams adopt a standardized approach to running ansible workloads\n\n<a name=\"investigation\"></a>\n\n## Investigation\n\nUpon investigating the current approach, you observe the following: \n\n- Users tend to create wrapper scripts that call the ansible-playbook command\n- These scripts don't follow any naming convention, as you've noted:\n  - run.sh\n  - start.sh\n  - playbook.sh\n- These shell scripts have common attributes:\n  - Dynamically populate ansible-playbook variables via the --extra-vars option\n  - Dynamically creating ansible inventories\n  - Performing pre/post-flight tasks\n  - Providing a command-line interface\n\n<a name=\"assessment\"></a>\n\n## Assessment\n\nAdvantages to the above approach:\n- Quick-n-dirty, anyone can get started relatively quickly with writing ansible automation\n\nDisadvantages:\n- Lack of standards: \n- Leads to difficulty in collaboration and code refactoring\n- Decreased re-usability of codebase\n  - This design encourages standalone playbooks\n  - Makes it more difficult to package actions as roles\n  - Duplicate efforts across codebase\n\n<a name=\"proposed-solution\"></a>\n\n## Proposed Solution\n\nEmploy a pre-execution script that operates at a layer above the `ansible-playbook` command:\n\n- Accomplishes the same as the above, but in more uniform manner\n- Support for custom command-line parameters/flags\n- Dynamic inventory expression\n- Embedded shell functions\n\nAdvantages to this approach:\n\n- Easier to manage\n  - If you know YAML and Ansible, you can get started relatively quickly with writing ansible automation\n- Single executable (/usr/local/bin/tasks)\n\nDisadvantages:\n\n- Target ansible controller needs to have the `tasks` command installed\n\n[Back To Top](#top)\n<a name=\"technical-details\"></a>\n\n# Technical Details\n\nAs stated in the [overview](#overview), this tool functions much like the *make* command in that \nit accepts an input file that essentially extends its cli options.\n\nWe create a specially formatted ansible-playbook that serves as a task manifest file (by default, Taskfile.yaml).\n\nThis task manifest file:\n\n- Extends the `tasks` command\n- Is a valid ansible playbook (Taskfile.yaml), and can thus be launched with the `ansible-playbook` command\n- Variables available to the pre-execution phase are also available to the ansible execution phase\n\n<a name=\"creating-a-task-manifest-file\"></a>\n\n# Creating a task manifest file\n\nIn the following sections, we'll be building a sample manifest/playbook.\n\nStart by opening up your favorite text/IDE/editor and creating \na new _task manifest file_ named *Taskfile.yaml*.\n\n<a name=\"add-the-hosts-block\"></a>\n\n## Add the hosts block\n\nAdd hosts, gather_facts, etc:\n\n<details>\n  <summary>Click to Expand</summary>\n\n*Taskfile.yaml*\n\n```\n### The hosts block\n- hosts: myhosts\n  gather_facts: true\n  become: true\n```\n\n</details>\n\n<a name=\"add-the-vars-block\"></a>\n\n## Add the vars block\n\nRemember, the task runner will ultimately be calling the `ansible-playbook` command against \nthis very same file, <br />so it must be a valid ansible playbook.\n\nLet's add the 'vars' block, which allows us to populate some default values:\n\n<details>\n  <summary>Click to Expand</summary>\n\n*Taskfile.yaml*\n\n```\n### The hosts block\n- hosts: myhosts\n  gather_facts: true\n  become: true\n### The vars block\n  vars:\n```\n\n</details>\n\n<a name=\"populate-the-vars-block---defaults\"></a>\n\n## Populate the vars block - defaults\n\nLet's add some default variables to the playbook:\n\n<details>\n  <summary>Click to Expand</summary>\n\n*Taskfile.yaml*\n\n```\n### The hosts block\n- hosts: myhosts\n  gather_facts: true\n  become: true\n  ### The vars block  \n  vars:\n    var1: value1\n    var2: value2\n    var3: value3\n    var4: |-\n      This is a multi-line value\n      of type string\n    var5:\n      - listvalue1\n      - listvalue2\n      - listvalue3\n      - listvalue4\n    var6:\n      some_key:\n        some_child_key: dictvalue1\n    var7: $(echo some_value)\n    var8: 8000\n    dbhosts:\n      - dbhost1\n      - dbhost2\n      - dbhost3\n    webhosts:\n      - webhost1\n      - webhost2\n      - webhost3\n```\n</details>\n\n<br />As you can see, we've defined a number of variables holding different values.\n\nThe rules for evaluation of these are as follows:<br /><br />\n\n\n```\nVariable                                     | Ansible Evaluation      | Shell Function Evaluation\n-------------------------------------------- | ----------------------- | -----------------------\nstr_var: value1                              | String                  | String\nbool_var: True                               | Boolean                 | String\nnum_var: 3                                   | Integer                 | Integer\nmultiline_var: |                             | Multiline String        | String (heredoc)\n  This is a multi-line value                 |                         |\n  of type string                             |                         |\nlist_var:                                    | List Object             | String (heredoc)\n  - item1                                    |                         |\n  - item2                                    |                         |\ndict_var:                                    | Dictionary Object       | JSON String (heredoc)\n  key1: somevalue1                           |                         |\n  key2: somevalue2                           |                         |\nshell_var: $(grep somestring /some/file.txt) | String                  | Depends on output\n```\n\nAdditionally, arguments supplied from the command-line conform<br />\nto the type specified in the options definition, with \"string\" being the default type.\n\n[Back To Top](#top)\n\n<a name=\"populate-the-vars-block---define-global-options\"></a>\n## Populate the vars block - define global options\n\nGlobal options are available to all sub-commands.\n\nThese are defined under the `vars.globals.options` key.\n\nLet's add a simple example:\n\n<details>\n  <summary>Click to Expand</summary>\n\n*Taskfile.yaml*\n\n```\n### The hosts block\n- hosts: myhosts\n  gather_facts: true\n  become: true\n  ### The vars block  \n  vars:\n    var1: value1\n    var2: value2\n    var3: value3\n    var4: |-\n      This is a multi-line value\n      of type string\n    var5:\n      - listvalue1\n      - listvalue2\n      - listvalue3\n      - listvalue4\n    var6:\n      some_key:\n        some_child_key: dictvalue1\n    var7: $(echo some_value)\n    var8: 8000\n    dbhosts:\n      - dbhost1\n      - dbhost2\n      - dbhost3\n    webhosts:\n      - webhost1\n      - webhost2\n      - webhost3\n    globals:\n      options:\n          my_global_option:\n            help: \"This is my global option\"\n            short: -g\n            long: --global\n            var: some_global_variable\n\n```  \n</details>\n\n<a name=\"populate-the-vars-block---define-sub-commands\"></a>\n## Populate the vars block - define sub-commands\n\nNext, we define the available sub-commands and their options.\n\nLet's add a sub-command named `run` along with its command-line options:\n\n<details>\n  <summary>Click to Expand</summary>\n\n*Taskfile.yaml*\n\n```\n### The hosts block\n- hosts: myhosts\n  gather_facts: true\n  become: true\n  ### The vars block  \n  vars:\n    var1: value1\n    var2: value2\n    var3: value3\n    var4: |-\n      This is a multi-line value\n      of type string\n    var5:\n      - listvalue1\n      - listvalue2\n      - listvalue3\n      - listvalue4\n    var6:\n      some_key:\n        some_child_key: dictvalue1\n    var7: $(echo some_value)\n    var8: 8000\n    dbhosts:\n      - dbhost1\n      - dbhost2\n      - dbhost3\n    webhosts:\n      - webhost1\n      - webhost2\n      - webhost3\n    ### Global Options Block\n    globals:\n      options:\n          my_global_option:\n            help: \"This is my global option\"\n            short: -g\n            long: --global\n            var: some_global_variable    \n    ### The commands block\n    commands:\n      run:\n        options:\n          foo:\n            help: \"This is some foo option\"\n            short: -f\n            long: --foo\n            type: choice\n            var: some_foo_variable\n            required: True\n            not_required_if: \n              - some_bar_variable\n            options:\n              - foo1\n              - foo2\n          bar:\n            help: \"This is some bar option\"\n            short: -b\n            long: --bar \n            type: str\n            var: some_bar_variable\n            required: False\n            required_if: \n              - hello\n              - some_baz_variable\n          baz:\n            help: \"This is some baz option\"\n            short: -z\n            long: --baz\n            type: str\n            var: some_baz_variable\n            required: False\n            mutually_exclusive_with: \n              - some_bar_variable\n              - some_foo_variable\n          envvar:\n            help: \"The value for this argument can be derived from an Environmental Variable\"\n            short: -E\n            long: --env-var\n            type: str\n            var: env_var\n            env_var: SOME_ENVIRONMENT_VARIABLE\n            env_var_show: True\n          num:\n            help: \"This is a numeric argument\"\n            short: -n\n            long: --number\n            var: some_num_variable\n            type: int\n            required: False \n            env_var_show: True\n          targets:\n            help: \"Playbook targets\"\n            short: -t\n            long: --targets\n            type: str\n            var: playbook_targets\n            required: True\n          multiple:\n            help: |-\n              This option can be specified multiple times\n            short: -m\n            long: --multiple\n            type: str\n            var: multiple_arg\n            allow_multiple: True\n          some_switch:\n            help: |-\n              This is some boolean option, behaves like Click's switches,\n              holds the value of True if specified\n              see: https://github.com/pallets/click\n            short: -s\n            long: --some-switch\n            is_flag: true\n            var: some_switch\n            required: True\n          say_hello:\n            help: \"Invoke the 'hello' embedded shell function\"\n            short: -hello\n            long: --say-hello\n            type: str\n            var: hello\n            is_flag: True\n          say_goodbye:\n            help: \"Invoke the 'goodbye' embedded shell function\"\n            short: -goodbye\n            long: --say-goodbye\n            type: str\n            var: goodbye\n            is_flag: True\n          hidden_option:\n            help: \"This is a hidden option\"\n            short: -O\n            long: --hidden-option\n            is_hidden: True\n            type: str\n            var: hidden\n            is_flag: True            \n          verbose:\n            help: |-\n              This is a sample paramter that supports counting, as with:\n              -v, -vv, -vvv, which would evaluate to 1, 2, and 3, respectively\n            short: -v\n            allow_counting: True\n            var: verbosity \n```   \n</details>\n\n<br />\n\nAs you can see, commands are defined via YAML, and the syntax is mostly self-explanatory.\n\nCurrently, the parameters available to any given option are <br />\nconsistent with click version 8.1.x, see [API — Click Documentation (8.1.x)](https://click.palletsprojects.com/en/8.1.x/api/)\n\n**Important Notes**: \n\n- An option's _var_ key:\n    - In the case of standard options, this variable holds the value of the arguments passed to the option\n    - In the case of flags/switches, this variable is a Boolean\n    - The variable is available during the entire runtime\n- In the above example, the `-hello` and `-goodbye` options point to special mapped<br />\n  variables that themselves map to corresponding shell functions defined in the subcommand's<br />\n  functions directive. We'll discuss this more in section [embedded-shell-functions](#embedded-shell-functions).\n\n<a name=\"populate-the-vars-block---cli-options---mapped-variables\"></a>\n\n### Populate the vars block - cli options - mapped variables\n\nAs I mentioned before, the above mapped variables can be used **during runtime**.<br />\nThat is, they can be referenced in any defined shell functions, <br />\ndynamic inventory expression logic, as well as during ansible execution.\n\nConsider the `-f|-foo` from the example.\n\nWhatever argument you pass to this option becomes the value for the mapped variable `some_foo_variable`.\n\nAgain, this variable is made available to the underlying subprocess call, and thus to ansible.\n\nSo when we call the tasks command like so `tasks run -f foo1`, the value for the `some_foo_variable` becomes `foo`.\n\n<a name=\"populate-the-vars-block---helpmessage\"></a>\n\n## Populate the vars block - help/message\n\nNext, we add the help/message section:\n\n<details>\n  <summary>Click to Expand</summary>\n\n*Taskfile.yaml*\n\n```\n### The hosts block\n- hosts: myhosts\n  gather_facts: true\n  become: true\n  ### The vars block  \n  vars:\n    var1: value1\n    var2: value2\n    var3: value3\n    var4: |-\n      This is a multi-line value\n      of type string\n    var5:\n      - listvalue1\n      - listvalue2\n      - listvalue3\n      - listvalue4\n    var6:\n      some_key:\n        some_child_key: dictvalue1\n    var7: $(echo some_value)\n    var8: 8000\n    dbhosts:\n      - dbhost1\n      - dbhost2\n      - dbhost3\n    webhosts:\n      - webhost1\n      - webhost2\n      - webhost3\n    ### Global Options Block\n    globals:\n      options:\n          my_global_option:\n            help: \"This is my global option\"\n            short: -g\n            long: --global\n            var: some_global_variable \n    ### The commands block\n    commands:\n      run:\n        options:\n          foo:\n            help: \"This is some foo option\"\n            short: -f\n            long: --foo\n            type: choice\n            var: some_foo_variable\n            required: True\n            not_required_if: \n              - some_bar_variable\n            options:\n              - foo1\n              - foo2\n          bar:\n            help: \"This is some bar option\"\n            short: -b\n            long: --bar \n            type: str\n            var: some_bar_variable\n            required: False\n            required_if: \n              - hello\n              - some_baz_variable\n          baz:\n            help: \"This is some baz option\"\n            short: -z\n            long: --baz\n            type: str\n            var: some_baz_variable\n            required: False\n            mutually_exclusive_with: \n              - some_bar_variable\n              - some_foo_variable\n          envvar:\n            help: \"The value for this argument can be derived from an Environmental Variable\"\n            short: -E\n            long: --env-var\n            type: str\n            var: env_var\n            env_var: SOME_ENVIRONMENT_VARIABLE\n            env_var_show: True\n          num:\n            help: \"This is a numeric argument\"\n            short: -n\n            long: --number\n            var: some_num_variable\n            type: int\n            required: False \n            env_var_show: True\n          targets:\n            help: \"Playbook targets\"\n            short: -t\n            long: --targets\n            type: str\n            var: playbook_targets\n            required: True\n          multiple:\n            help: |-\n              This option can be specified multiple times\n            short: -m\n            long: --multiple\n            type: str\n            var: multiple_arg\n            allow_multiple: True\n          some_switch:\n            help: |-\n              This is some boolean option, behaves like Click's switches,\n              holds the value of True if specified\n              see: https://github.com/pallets/click\n            short: -s\n            long: --some-switch\n            is_flag: true\n            var: some_switch\n            required: True\n          say_hello:\n            help: \"Invoke the 'hello' embedded shell function\"\n            short: -hello\n            long: --say-hello\n            type: str\n            var: hello\n            is_flag: True\n          say_goodbye:\n            help: \"Invoke the 'goodbye' embedded shell function\"\n            short: -goodbye\n            long: --say-goodbye\n            type: str\n            var: goodbye\n            is_flag: True\n          hidden_option:\n            help: \"This is a hidden option\"\n            short: -O\n            long: --hidden-option\n            is_hidden: True\n            type: str\n            var: hidden\n            is_flag: True            \n          verbose:\n            help: |-\n              This is a sample paramter that supports counting, as with:\n              -v, -vv, -vvv, which would evaluate to 1, 2, and 3, respectively\n            short: -v\n            allow_counting: True\n            var: verbosity\n        help:\n          message: |\n            Invoke the 'run' command \n          epilog: |\n            This line will be displayed at the end of the help text message\n          examples:\n            - example1: |\n                tasks $command\n            - example2: |\n                Usage example 2\n```\n\n</details>\n\nRunning `tasks run --help` should return the list of parameters along with the help message you defined.\n\n<a name=\"populate-the-vars-block---embedded-shell-functions\"></a>\n\n## Populate the vars block - embedded shell functions\n\n<details>\n  <summary>Add embedded shell functions: </summary>\n\n*Taskfile.yaml*\n\n```\n### The hosts block\n- hosts: myhosts\n  gather_facts: true\n  become: true\n  ### The vars block  \n  vars:\n    var1: value1\n    var2: value2\n    var3: value3\n    var4: |-\n      This is a multi-line value\n      of type string\n    var5:\n      - listvalue1\n      - listvalue2\n      - listvalue3\n      - listvalue4\n    var6:\n      some_key:\n        some_child_key: dictvalue1\n    var7: $(echo some_value)\n    var8: 8000\n    dbhosts:\n      - dbhost1\n      - dbhost2\n      - dbhost3\n    webhosts:\n      - webhost1\n      - webhost2\n      - webhost3\n    ### Global Options Block\n    globals:\n      options:\n          my_global_option:\n            help: \"This is my global option\"\n            short: -g\n            long: --global\n            var: some_global_variable \n    ### The commands block\n    commands:\n      run:\n        options:\n          foo:\n            help: \"This is some foo option\"\n            short: -f\n            long: --foo\n            type: choice\n            var: some_foo_variable\n            required: True\n            not_required_if: \n              - some_bar_variable\n            options:\n              - foo1\n              - foo2\n          bar:\n            help: \"This is some bar option\"\n            short: -b\n            long: --bar \n            type: str\n            var: some_bar_variable\n            required: False\n            required_if: \n              - hello\n              - some_baz_variable\n          baz:\n            help: \"This is some baz option\"\n            short: -z\n            long: --baz\n            type: str\n            var: some_baz_variable\n            required: False\n            mutually_exclusive_with: \n              - some_bar_variable\n              - some_foo_variable\n          envvar:\n            help: \"The value for this argument can be derived from an Environmental Variable\"\n            short: -E\n            long: --env-var\n            type: str\n            var: env_var\n            env_var: SOME_ENVIRONMENT_VARIABLE\n            env_var_show: True\n          num:\n            help: \"This is a numeric argument\"\n            short: -n\n            long: --number\n            var: some_num_variable\n            type: int\n            required: False \n            env_var_show: True\n          targets:\n            help: \"Playbook targets\"\n            short: -t\n            long: --targets\n            type: str\n            var: playbook_targets\n            required: True\n          multiple:\n            help: |-\n              This option can be specified multiple times\n            short: -m\n            long: --multiple\n            type: str\n            var: multiple_arg\n            allow_multiple: True\n          some_switch:\n            help: |-\n              This is some boolean option, behaves like Click's switches,\n              holds the value of True if specified\n              see: https://github.com/pallets/click\n            short: -s\n            long: --some-switch\n            is_flag: true\n            var: some_switch\n            required: True\n          say_hello:\n            help: \"Invoke the 'hello' embedded shell function\"\n            short: -hello\n            long: --say-hello\n            type: str\n            var: hello\n            is_flag: True\n          say_goodbye:\n            help: \"Invoke the 'goodbye' embedded shell function\"\n            short: -goodbye\n            long: --say-goodbye\n            type: str\n            var: goodbye\n            is_flag: True\n          hidden_option:\n            help: \"This is a hidden option\"\n            short: -O\n            long: --hidden-option\n            is_hidden: True\n            type: str\n            var: hidden\n            is_flag: True            \n          verbose:\n            help: |-\n              This is a sample paramter that supports counting, as with:\n              -v, -vv, -vvv, which would evaluate to 1, 2, and 3, respectively\n            short: -v\n            allow_counting: True\n            var: verbosity\n        ### The help message\n        help:\n          message: |\n            Invoke the 'run' command \n          epilog: |\n            This line will be displayed at the end of the help text message\n          examples:\n            - example1: |\n                tasks $command\n            - example2: |\n                Usage example 2\n        ### Embedded shell functions\n        functions:\n          hello:\n            shell: bash\n            help: Say hello\n            source: |-\n              echo Hello! The value for var1 is $var1\n          goodbye:\n            shell: bash\n            help: Say goodbye\n            source: |-\n              echo The value for var1 is $var1. Goodbye!\n```\n\n</details>\n\n<a name=\"embedded-shell-functions\"></a>\n\nAgain, notice the two switches `-hello` and `-goodbye`, with mapped variables _hello_ and _goodbye_, respectively.\n\nThese mapped variables correspond to keys in the `functions` block with matching names.\n\nAs such, specifying either or both `-hello` and `-goodbye` in your `tasks run` invocation<br />\nwill short-circuit normal operation and execute the corresponding functions<br /> \n**in the order in which you call them**.\n\nTry it yourself by running:\n\n- `tasks run -t local -s -b bar -m one -m two -vvv -O -hello -goodbye`\n- `tasks run -t local -s -b bar -m one -m two -vvv -O -goodbye -hello`\n\nThere is also a special flag `---invoke-function` that is globally available to all subcommands.\n\nInvocation is as follows: `tasks <subcommand> ---invoke-function <function_name>`.\n\nIn our example, we would run: `tasks run -t local -s -b bar -m one -m two -vvv -O ---invoke-function hello`\n\nFor more usage examples, see the [appendix](#usage-examples).\n\n<a name=\"more-about-embedded-shell-functions\"></a>\n\n### More about embedded shell functions\n\nLet's briefly side-step into embedded shell functions.\n\nThe syntax for nesting these under the _functions_ key is as follows:\n\n```\n          name_of_function:\n            shell: bash, ruby, or python\n            help: Help Text to Display\n            hidden: false/true\n            source: |-\n              {{ code }}\n```\n\n[Back To Top](#top)\n<a name=\"bash-example\"></a>\n\n#### Bash example:\n\n```\n          hello:\n            shell: bash\n            help: Hello World in Bash\n            hidden: false\n            source: |-\n              echo 'Hello World!'\n```\n\n<a name=\"python-example\"></a>\n\n#### Python example:\n\n```\n          hello:\n            shell: python\n            help: Hello World in Python\n            hidden: false\n            source: |-\n              print('Hello World!')\n```\n\n<a name=\"ruby-example\"></a>\n\n#### Ruby example:\n\n```\n          hello:\n            shell: ruby\n            help: Hello World in Ruby\n            hidden: false\n            source: |-\n              puts 'Hello World!'\n```\n\n[Back To Top](#top)\n<a name=\"populate-the-vars-block---dynamic-inventory-expression\"></a>\n\n## Populate the vars block - dynamic inventory expression\n\nA useful feature of this tool is the ability to define your ansible<br />\ninventory as a dynamic expression in the Taskfile itself.\n\nTo do so, we populate the with the _inventory_expression_ key.\n\nWhen the inventory is defined in this manner, the logic is as follows:\n\n- The inventory expression is evaluated\n- An ephemeral inventory file is created with the<br />\n  contents of this file being the output, or result, of that expression\n- The fully qualified path to the ephemeral inventory file is specified as the<br />\n  argument to the `ansible-playbook` inventory parameter `-i`\n\nLet's define our inventory expression:\n\n<details>\n  <summary>Click to Expand</summary>\n\n*Taskfile.yaml*\n\n```\n### The hosts block\n- hosts: myhosts\n  gather_facts: true\n  become: true\n  ### The vars block  \n  vars:\n    var1: value1\n    var2: value2\n    var3: value3\n    var4: |-\n      This is a multi-line value\n      of type string\n    var5:\n      - listvalue1\n      - listvalue2\n      - listvalue3\n      - listvalue4\n    var6:\n      some_key:\n        some_child_key: dictvalue1\n    var7: $(echo some_value)\n    var8: 8000\n    dbhosts:\n      - dbhost1\n      - dbhost2\n      - dbhost3\n    webhosts:\n      - webhost1\n      - webhost2\n      - webhost3\n    ### Global Options Block\n    globals:\n      options:\n          my_global_option:\n            help: \"This is my global option\"\n            short: -g\n            long: --global\n            var: some_global_variable \n    ### The commands block\n    commands:\n      run:\n        options:\n          foo:\n            help: \"This is some foo option\"\n            short: -f\n            long: --foo\n            type: choice\n            var: some_foo_variable\n            required: True\n            not_required_if: \n              - some_bar_variable\n            options:\n              - foo1\n              - foo2\n          bar:\n            help: \"This is some bar option\"\n            short: -b\n            long: --bar \n            type: str\n            var: some_bar_variable\n            required: False\n            required_if: \n              - hello\n              - some_baz_variable\n          baz:\n            help: \"This is some baz option\"\n            short: -z\n            long: --baz\n            type: str\n            var: some_baz_variable\n            required: False\n            mutually_exclusive_with: \n              - some_bar_variable\n              - some_foo_variable\n          envvar:\n            help: \"The value for this argument can be derived from an Environmental Variable\"\n            short: -E\n            long: --env-var\n            type: str\n            var: env_var\n            env_var: SOME_ENVIRONMENT_VARIABLE\n            env_var_show: True\n          num:\n            help: \"This is a numeric argument\"\n            short: -n\n            long: --number\n            var: some_num_variable\n            type: int\n            required: False \n            env_var_show: True\n          targets:\n            help: \"Playbook targets\"\n            short: -t\n            long: --targets\n            type: str\n            var: playbook_targets\n            required: True\n          multiple:\n            help: |-\n              This option can be specified multiple times\n            short: -m\n            long: --multiple\n            type: str\n            var: multiple_arg\n            allow_multiple: True\n          some_switch:\n            help: |-\n              This is some boolean option, behaves like Click's switches,\n              holds the value of True if specified\n              see: https://github.com/pallets/click\n            short: -s\n            long: --some-switch\n            is_flag: true\n            var: some_switch\n            required: True\n          say_hello:\n            help: \"Invoke the 'hello' embedded shell function\"\n            short: -hello\n            long: --say-hello\n            type: str\n            var: hello\n            is_flag: True\n          say_goodbye:\n            help: \"Invoke the 'goodbye' embedded shell function\"\n            short: -goodbye\n            long: --say-goodbye\n            type: str\n            var: goodbye\n            is_flag: True\n          hidden_option:\n            help: \"This is a hidden option\"\n            short: -O\n            long: --hidden-option\n            is_hidden: True\n            type: str\n            var: hidden\n            is_flag: True            \n          verbose:\n            help: |-\n              This is a sample paramter that supports counting, as with:\n              -v, -vv, -vvv, which would evaluate to 1, 2, and 3, respectively\n            short: -v\n            allow_counting: True\n            var: verbosity\n        ### The help message\n        help:\n          message: |\n            Invoke the 'run' command \n          epilog: |\n            This line will be displayed at the end of the help text message\n          examples:\n            - example1: |\n                tasks $command\n            - example2: |\n                Usage example 2\n        ### Embedded shell functions\n        functions:\n          hello:\n            shell: bash\n            help: Say hello\n            source: |-\n              echo Hello! The value for var1 is $var1\n          goodbye:\n            shell: bash\n            help: Say goodbye\n            source: |-\n              echo The value for var1 is $var1. Goodbye!\n    ### The inventory expression              \n    inventory_expression: |\n      [local]\n      localhost ansible_connection=local\n      [web_hosts]\n      $(echo -e \"${webhosts}\" | tr ',' '\\n')\n      [db_hosts]\n      $(echo -e \"${dbhosts}\" | tr ',' '\\n')\n      [myhosts:children]\n      web_hosts\n      db_hosts\n```\n\n</details>\n\nAs you can see, the inventory expression is dynamic, as<br />\nit gets evaluated based on the output of inline shell commands.\n\nLet's focus on the variable _$webhosts_.\n\nAs per the logic described [above](#populate-the-vars-block---defaults), the variable $webhosts is a heredoc with a value of:\n\n```\nwebhosts='\nwebhost1\nwebhost2\nwebhost3\n'\n```\n\nAs such, the _web_hosts_ group in the inventory expression ...\n```\n      [web_hosts]\n      $(echo -e \"${webhosts}\" | tr ',' '\\n')\n```\n\n... will evaluate to:\n\n```\n[web_hosts]\nwebhost1\nwebhost2\nwebhost3\n```\n\nAlso, notice how the inline shell command transforms commas into newline characters by way of the transform (`tr`) command.\n\nThis makes it so that if we were to have defined the _webhosts_ variable<br />\nin the Tasksfile as `webhosts: webhost1,webhost2,webhost3`, it would have had the same outcome<br />\nas defining it as a list object in the _vars_ block.\n\n<a name=\"populate-the-vars-block---inventory-file\"></a>\n\n## Populate the vars block - inventory file\n\nWe can specify an inventory file instead of an inventory expression with the _inventory_file_ key.\n\n<details>\n  <summary>Click to Expand</summary>\n\n*Taskfile.yaml*\n\n```\n### The hosts block\n- hosts: myhosts\n  gather_facts: true\n  become: true\n  ### The vars block  \n  vars:\n    var1: value1\n    var2: value2\n    var3: value3\n    var4: |-\n      This is a multi-line value\n      of type string\n    var5:\n      - listvalue1\n      - listvalue2\n      - listvalue3\n      - listvalue4\n    var6:\n      some_key:\n        some_child_key: dictvalue1\n    var7: $(echo some_value)\n    var8: 8000\n    dbhosts:\n      - dbhost1\n      - dbhost2\n      - dbhost3\n    webhosts:\n      - webhost1\n      - webhost2\n      - webhost3\n    ### Global Options Block\n    globals:\n      options:\n          my_global_option:\n            help: \"This is my global option\"\n            short: -g\n            long: --global\n            var: some_global_variable \n    ### The commands block\n    commands:\n      run:\n        options:\n          foo:\n            help: \"This is some foo option\"\n            short: -f\n            long: --foo\n            type: choice\n            var: some_foo_variable\n            required: True\n            not_required_if: \n              - some_bar_variable\n            options:\n              - foo1\n              - foo2\n          bar:\n            help: \"This is some bar option\"\n            short: -b\n            long: --bar \n            type: str\n            var: some_bar_variable\n            required: False\n            required_if: \n              - hello\n              - some_baz_variable\n          baz:\n            help: \"This is some baz option\"\n            short: -z\n            long: --baz\n            type: str\n            var: some_baz_variable\n            required: False\n            mutually_exclusive_with: \n              - some_bar_variable\n              - some_foo_variable\n          envvar:\n            help: \"The value for this argument can be derived from an Environmental Variable\"\n            short: -E\n            long: --env-var\n            type: str\n            var: env_var\n            env_var: SOME_ENVIRONMENT_VARIABLE\n            env_var_show: True\n          num:\n            help: \"This is a numeric argument\"\n            short: -n\n            long: --number\n            var: some_num_variable\n            type: int\n            required: False \n            env_var_show: True\n          targets:\n            help: \"Playbook targets\"\n            short: -t\n            long: --targets\n            type: str\n            var: playbook_targets\n            required: True\n          multiple:\n            help: |-\n              This option can be specified multiple times\n            short: -m\n            long: --multiple\n            type: str\n            var: multiple_arg\n            allow_multiple: True\n          some_switch:\n            help: |-\n              This is some boolean option, behaves like Click's switches,\n              holds the value of True if specified\n              see: https://github.com/pallets/click\n            short: -s\n            long: --some-switch\n            is_flag: true\n            var: some_switch\n            required: True\n          say_hello:\n            help: \"Invoke the 'hello' embedded shell function\"\n            short: -hello\n            long: --say-hello\n            type: str\n            var: hello\n            is_flag: True\n          say_goodbye:\n            help: \"Invoke the 'goodbye' embedded shell function\"\n            short: -goodbye\n            long: --say-goodbye\n            type: str\n            var: goodbye\n            is_flag: True\n          hidden_option:\n            help: \"This is a hidden option\"\n            short: -O\n            long: --hidden-option\n            is_hidden: True\n            type: str\n            var: hidden\n            is_flag: True            \n          verbose:\n            help: |-\n              This is a sample paramter that supports counting, as with:\n              -v, -vv, -vvv, which would evaluate to 1, 2, and 3, respectively\n            short: -v\n            allow_counting: True\n            var: verbosity\n        ### The help message\n        help:\n          message: |\n            Invoke the 'run' command \n          epilog: |\n            This line will be displayed at the end of the help text message\n          examples:\n            - example1: |\n                tasks $command\n            - example2: |\n                Usage example 2\n        ### Embedded shell functions\n        functions:\n          hello:\n            shell: bash\n            help: Say hello\n            source: |-\n              echo Hello! The value for var1 is $var1\n          goodbye:\n            shell: bash\n            help: Say goodbye\n            source: |-\n              echo The value for var1 is $var1. Goodbye!\n    ### Inventory file\n    inventory_file: '/some/path/some/inventory.yaml'\n```\n\n</details>\n\n**Notes of Importance**:\n\n- The value you provide to the _inventory_file_ key supports templating\n    - That is, any of the variables available runtime variables can be used, for example:\n        - `inventory_file: '/some/path/some/inventory_$foo_variable.yaml'`\n        - `inventory_file: '/some/path/some/inventory_$var1.yaml'`\n- You should not be specifying both an _inventory_file_ and an _inventory_expression_, as you get unexpected results.\n\n[Back To Top](#top)\n<a name=\"add-tasks\"></a>\n\n## Add tasks\n\nFinally, let's add some proper ansible tasks!\n\n<details>\n  <summary>Click to Expand</summary>\n\n*Taskfile.yaml*\n\n```\n### The hosts block\n- hosts: myhosts\n  gather_facts: true\n  become: true\n  ### The vars block  \n  vars:\n    var1: value1\n    var2: value2\n    var3: value3\n    var4: |-\n      This is a multi-line value\n      of type string\n    var5:\n      - listvalue1\n      - listvalue2\n      - listvalue3\n      - listvalue4\n    var6:\n      some_key:\n        some_child_key: dictvalue1\n    var7: $(echo some_value)\n    var8: 8000\n    dbhosts:\n      - dbhost1\n      - dbhost2\n      - dbhost3\n    webhosts:\n      - webhost1\n      - webhost2\n      - webhost3\n    ### Global Options Block\n    globals:\n      options:\n          my_global_option:\n            help: \"This is my global option\"\n            short: -g\n            long: --global\n            var: some_global_variable \n    ### The commands block\n    commands:\n      run:\n        options:\n          foo:\n            help: \"This is some foo option\"\n            short: -f\n            long: --foo\n            type: choice\n            var: some_foo_variable\n            required: True\n            not_required_if: \n              - some_bar_variable\n            options:\n              - foo1\n              - foo2\n          bar:\n            help: \"This is some bar option\"\n            short: -b\n            long: --bar \n            type: str\n            var: some_bar_variable\n            required: False\n            required_if: \n              - hello\n              - some_baz_variable\n          baz:\n            help: \"This is some baz option\"\n            short: -z\n            long: --baz\n            type: str\n            var: some_baz_variable\n            required: False\n            mutually_exclusive_with: \n              - some_bar_variable\n              - some_foo_variable\n          envvar:\n            help: \"The value for this argument can be derived from an Environmental Variable\"\n            short: -E\n            long: --env-var\n            type: str\n            var: env_var\n            env_var: SOME_ENVIRONMENT_VARIABLE\n            env_var_show: True\n          num:\n            help: \"This is a numeric argument\"\n            short: -n\n            long: --number\n            var: some_num_variable\n            type: int\n            required: False \n            env_var_show: True\n          targets:\n            help: \"Playbook targets\"\n            short: -t\n            long: --targets\n            type: str\n            var: playbook_targets\n            required: True\n          multiple:\n            help: |-\n              This option can be specified multiple times\n            short: -m\n            long: --multiple\n            type: str\n            var: multiple_arg\n            allow_multiple: True\n          some_switch:\n            help: |-\n              This is some boolean option, behaves like Click's switches,\n              holds the value of True if specified\n              see: https://github.com/pallets/click\n            short: -s\n            long: --some-switch\n            is_flag: true\n            var: some_switch\n            required: True\n          say_hello:\n            help: \"Invoke the 'hello' embedded shell function\"\n            short: -hello\n            long: --say-hello\n            type: str\n            var: hello\n            is_flag: True\n          say_goodbye:\n            help: \"Invoke the 'goodbye' embedded shell function\"\n            short: -goodbye\n            long: --say-goodbye\n            type: str\n            var: goodbye\n            is_flag: True\n          hidden_option:\n            help: \"This is a hidden option\"\n            short: -O\n            long: --hidden-option\n            is_hidden: True\n            type: str\n            var: hidden\n            is_flag: True            \n          verbose:\n            help: |-\n              This is a sample paramter that supports counting, as with:\n              -v, -vv, -vvv, which would evaluate to 1, 2, and 3, respectively\n            short: -v\n            allow_counting: True\n            var: verbosity\n        ### The help message\n        help:\n          message: |\n            Invoke the 'run' command \n          epilog: |\n            This line will be displayed at the end of the help text message\n          examples:\n            - example1: |\n                tasks $command\n            - example2: |\n                Usage example 2\n        ### Embedded shell functions\n        functions:\n          hello:\n            shell: bash\n            help: Say hello\n            source: |-\n              echo Hello! The value for var1 is $var1\n          goodbye:\n            shell: bash\n            help: Say goodbye\n            source: |-\n              echo The value for var1 is $var1. Goodbye!\n    ### The inventory expression\n    inventory_expression: |\n      [local]\n      localhost ansible_connection=local\n      [web_hosts]\n      $(echo -e \"${webhosts}\" | tr ',' '\\n')\n      [db_hosts]\n      $(echo -e \"${dbhosts}\" | tr ',' '\\n')\n      [myhosts:children]\n      web_hosts\n      db_hosts            \n  tasks:\n    - name: Show Variables\n      debug:\n        msg: |-\n          {{ hostvars[inventory_hostname] | to_nice_json }}\n```\n\n</details>\n\n<br />\nThe task above will display all available host variables.\n\n<a name=\"usage-examples\"></a>\n\n# Usage Examples\n\nQuick usage examples:\n\n* Display help for main command<br />\n  `tasks --help`\n* Display help for the *run* subcommand<br />\n  `tasks run --help`\n* Initialize your workspace<br />\n  `tasks init`<br />\n* Run the Taskfile.yaml playbook, passing in additional options to the underlying subprocess<br />\n  `tasks run -t local -s -b bar -m one -m two`</br>\n* Don't do anything, just echo the underlying shell command<br />\n  `tasks run -t local -s -b bar -m one -m two -O ---echo`<br />\n  Result should be similar to:<br />\n  `ansible-playbook -i /var/folders/5f/4g4xnnv958q52108qxd2rj_r0000gn/T/ansible-inventorytlmz2hpz.tmp.ini \\\n  -e \"{'var1':'${var1}'}\" ... Taskfile.yaml`\n* Run the embedded function `hello`<br />\n  `tasks run -t local -s -b bar -m one -m two -hello`\n* Run the embedded functions `hello` and `goodbye`<br />\n  `run -t local -s -b bar -m one -m two -hello -goodbye`\n\n[Back To Top](#top)\n<a name=\"installation\"></a>\n\n# Installation\n\nAnsible-taskrunner consists of the `tasks` command.\n\nIt can be installed in a few ways:\n\n1. pip install ansible-taskrunner\n2. pip install git+https://github.com/berttejeda/ansible-taskrunner.git\n3. Obtaining a [release](#single-executable-releases) (these lag behind the pip distributions)\n\nNote: You'll need to pre-install a python distribution for the Windows MSI release.\nNot yet sure if I am doing something wrong or if that's by design.\nI lean toward the former :|\n\n<a name=\"more-examples\"></a>\n\n## More Examples\n\nReview the [examples](examples) directory for more hands-on usage samples.\n\n<a name=\"appendix\"></a>\n\n# Appendix\n\n\n<a name=\"the-options-separator\"></a>\n## The Options Separator\n\nWhen you pass the `---` options separator to any subcommand, anything\nafter the separator is passed directly to the ansible subprocess.\n\n<a name=\"bastion-mode\"></a>\n## Bastion Mode\n\nIf you're launching the `tasks` command from a Windows host, this tool will automatically execute in _Bastion Mode_\n\nUnder Bastion Mode, the `tasks` command will:\n- Execute the `ansible-playbook` subprocess via a _bastion host_, i.e. a remote machine that _should have_ `ansible` installed\n- This is done via ssh using the [paramiko](http://www.paramiko.org/) module\n\nRunning in Bastion Mode requires a configuration file containing the ssh connection settings.\n\nTo initialize this configuration file, you can simply run `tasks init`.\n\nFor full usage options, enter in `tasks init --help`.\n\nOnce you've initialized the configuration file, you should see *sftp-config.json* in your workspace.\n\nThis configuration file is fashioned after the [sftp](https://packagecontrol.io/packages/SFTP)<br />\nplugin for [Sublime Text](https://www.sublimetext.com/) and is thus compatible.\n\n<a name=\"special-variables\"></a>\n\n## Special Variables\n\n<a name=\"ansible_playbook_command\"></a>\n\n### ansible_playbook_command\n\nIf you define the playbook variable *ansible_playbook_command*, this will override the underlying ansible-playbook command invocation.\n\nAs an example, suppose I define this variable in the above *Taskfile.yaml*, as follows:\n\n```\n- hosts: myhosts\n  gather_facts: true\n  become: true\n  vars:\n    ansible_playbook_command: 'python ${HOME}/ansible_2.7.8/ansible-playbook'\n    var1: value1\n    var2: value2\n    var3: value3\n    # ...\n```\nUpon invoking the `tasks` command with the `---echo` flag:\n\n- The temporary inventory would be revealed as:<br />\n\n```\ninventory_is_ephemeral=True\nif [[ \"$inventory_is_ephemeral\" == \"True\" ]];then\necho -e \"\"\"${inventory_expression}\"\"\"| while read line;do\n eval \"echo -e ${line}\" >> \"/var/folders/some/path/ansible-inventoryo4fw4ttc.tmp.ini\";\ndone\nfi;\n```\n\n\\*_The above inventory file path will differ, of course_\n\n- And the underlying shell command would be revealed as:<br />\n\n```\npython ${HOME}/ansible_2.7.8/ansible-playbook \\\n-i /var/folders/some/path/ansible-inventoryo4fw4ttc.tmp.ini \\\n-e \"{'var1':'${var1}'}\" \\\n-e \"{'var2':'${var2}'}\" \\\n-e \"{'var3':'${var3}'}\" \\\n... Taskfile.yaml\n```\n\n[Back To Top](#top)\n<a name=\"environment_vars\"></a>\n\n### environment_vars\n\nBy defining the playbook dictionary variable *environment_vars*,<br />\nthe following occurs:\n\n- For each dictionary `key: value` pair:\n    - A corresponding `export` statement is defined in the underlying shell expression\n\n\nAs an example, suppose I define this variable in the above *Taskfile.yaml*, as follows:\n\n```\n- hosts: myhosts\n  gather_facts: true\n  become: true\n  vars:\n    ansible_playbook_command: 'python ${HOME}/ansible_2.7.8/ansible-playbook'\n    var1: value1\n    var2: value2\n    var3: value3\n    some_path: /some/path\n    environment_vars:\n      MY_ENV_VAR1: \"${some_path}/${var1}\"    \n      MY_ENV_VAR2: \"${some_path}/${var2}\"    \n    # ...\n```\n\nUpon invoking the `tasks` command with the `---echo` flag:\n\n- The underlying shell expression would be revealed as:<br />\n\n```\nvar1=\"value1\"\nvar2=\"value2\"\nexport MY_ENV_VAR1=\"${some_path}/${var1}\"\nexport MY_ENV_VAR2=\"${some_path}/${var2}\"\n```\n\nThese export statements are always placed **after**<br />\nall variables declarations in the underlying shell expresison.\n\n<a name=\"cli_provider\"></a>\n\n### cli_provider\n\nYou can override the underlying command-line provider in two ways:\n\n- Via the tasks config file (see [examples](#examples))\n- By defining the variable *cli_provider* in the specified Taskfile\n\nAs an example, suppose I define this variable in the above *Taskfile.yaml*, as follows:\n\n```\n- hosts: myhosts\n  gather_facts: true\n  become: true\n  vars:\n    cli_provider: bash\n    # ...\n```\n\nUpon invoking the `tasks` command, you will note that the app no longer operates in an **ansible-playbook** mode, but rather as yaml-abstracted bash-script.\n\nThere are three cli-providers built in to the tasks command:\n\n- ansible\n- bash\n- vagrant\n\n<a name=\"__ansible_extra_options\"></a>\n\n### __ansible_extra_options__\n\nApart from utilizing the `---` options separator, you can specify additional options to pass to the underlying `ansible-playbook` subprocess by setting an appropriate value for the **\\_\\_ansible_extra_options\\_\\_** Environmental variable.\n\n<a name=\"__tasks_file__\"></a>\n\n### __tasks_file__\n\nThe **\\_\\_tasks_file\\_\\_** variable points to the current Taskfile.\n\nIt is available to the underlying subprocess shell.\n\n### __command__\n\nThe **\\_\\_command\\_\\_** variable points to the name of the invoked subcommand.\n\nIt is available to the underlying subprocess shell.\n\n[Back To Top](#top)\n<a name=\"advanced-options\"></a>\n\n## Mutually Exclusive Options\n\nThis tool supports the following advanced options:\n\n  - Mutually Exclusive, see [Mutually exclusive option groups in python Click - Stack Overflow](https://stackoverflow.com/questions/37310718/mutually-exclusive-option-groups-in-python-click).\n  - Mutually Inclusive\n  - Conditionally required\n\nSuppose you want a set of options such that:\n- You want to accept one option but only if another, related option has not been specified\n\nYou can accomplish this by defining your option with the following parameters:\n\n```\n  - required: False\n  - mutually_exclusive_with: \n    - some_bar_variable\n    - some_foo_variable\n```\n\nIn the above configuration, calling this option along with options<br /> \n`-f|-foo` and `-b|-bar` will trigger an illegal usage error, since you've<br />\nmarked the option as mutually exclusive with either of these two options.\n\nFeel free to review the [Taskfile.yaml](Taskfile.yaml), as you'll find an example of:\n\n- mutually exclusive\n- mutually inclusive\n- conditionally required\n\n<a name=\"simple-templating\"></a>\n\n## Simple Templating\n\nAs of version 1.1.5, simple templating is available to the following objects:\n\n- Help messages\n- Examples\n- Options\n- Options values\n\nWhat this means is that we expose a limited set of internal variables to the above.\n\nAs an example:\n\n```\n        help:\n          message: |\n            Invoke the 'run' command \n          epilog: |\n            This line will be displayed at the end of the help text message\n          examples:\n            - example1: |\n                tasks -f $tf_path --foo foo --bar bar\n            - example2: |\n                tasks -f $tf_path --foo foo --baz baz\n```            \n\nIn the above strings, `$tf_path` will expand to the internal variable tf_path,\nwhich holds the relative path to the current tasks file.\n\nBelow is a list of available variables for your convenience:\n\n\n```\nVariable        | Description\n-------------   | -------------\nexe_path        | The absolute path to the tasks executable\ncli_args        | The current command-line invocation\ncli_args_short  | The current command-line invocation, minus the executable\nsys_platform    | The OS Platform as detected by Python\ntf_path         | The relative path to the specified Taskfile\n```\n\nAdditionally, all **currently set environmental variables** are also available for templating.\n\n[Back To Top](#top)\n<a name=\"single-executable-releases\"></a>\n\n## Single-Executable Releases\n\nThis script also ships as a zipapp executable (similar to a windows .exe).\n\nHead over to the [releases page](https://github.com/berttejeda/ansible-taskrunner/releases) for release downloads.\n\nYou can also build your own single-executable zipapp, as follows:\n\n1. Make sure you have the [make-zipapp](https://github.com/berttejeda/make-zipapp) executable in your path\n1. Invoking build tasks\n  - Build zipapp: `python ansible_taskrunner/cli.py -f Makefile.yaml run ---make zipapp`\n\nRead More on zipapps: [zipapp — Manage executable Python zip archives — Python 3.7.4rc2 documentation](https://docs.python.org/3/library/zipapp.html)\n\n<a name=\"unit-testing\"></a>\n\n## Unit Testing\n\nTo run all tests, simply call the test script, as with:\n\n`python tests/test_ansible_taskrunner.py`\n\n# TODO - Add more tests!\n\n[Back To Top](#top)\n<a name=\"license-and-credits\"></a>\n\n# License and Credits\n\nThis project adopts the the MIT distribution License.\n\n[Releases](https://github.com/berttejeda/ansible-taskrunner/releases) come bundled with the following opensource python packages:\n\n- [click](https://github.com/pallets/click), licensed under BSD-3-Clause\n- [pyYaml](https://github.com/yaml/pyyaml), licensed under MIT\n\nLastly, this package was created with Cookiecutter and the `audreyr/cookiecutter-pypackage` project template.\n\n- Cookiecutter: https://github.com/audreyr/cookiecutter\n- audreyr/cookiecutter-pypackage: https://github.com/audreyr/cookiecutter-pypackage\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/berttejeda/ansible-taskrunner.git",
    "keywords": "ansible,playbook,wrapper,bash,python,click,task-runner,subprocess,yaml,cli,options",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ansible-taskrunner",
    "package_url": "https://pypi.org/project/ansible-taskrunner/",
    "platform": null,
    "project_url": "https://pypi.org/project/ansible-taskrunner/",
    "project_urls": {
      "Homepage": "https://github.com/berttejeda/ansible-taskrunner.git"
    },
    "release_url": "https://pypi.org/project/ansible-taskrunner/2.7.0/",
    "requires_dist": [
      "bertdotconfig (<4.4.0,>=4.3.0)",
      "click (<9.0.0,>=8.1.3)",
      "colorama (==0.4.3)",
      "coloredlogs (<16.0.0,>=15.0.0)",
      "getversion (==1.0.2)",
      "PyYAML (<7.0,>=6.0)",
      "paramiko (==2.10.1) ; sys_platform == \"win32\" or sys_platform == \"cygwin\"",
      "pytest ; extra == 'tests'",
      "pytest-cov ; extra == 'tests'",
      "coveralls ; extra == 'tests'",
      "flake8 ; extra == 'tests'",
      "mypy ; extra == 'tests'"
    ],
    "requires_python": ">=2.7",
    "summary": "Ansible Task Runner",
    "version": "2.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17433153,
  "releases": {
    "0.0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2de584f9d6507877047940f726258250d3626843e8d7b7cea9b8835542d1884",
          "md5": "683eaa3638e548cad95475a2f19f5dd7",
          "sha256": "90b749cc6eb10682e7d1491a1523ebaf0d23e99d4618351df403b12629e315cb"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-0.0.18-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "683eaa3638e548cad95475a2f19f5dd7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 2.7",
        "size": 26917,
        "upload_time": "2019-07-23T21:58:03",
        "upload_time_iso_8601": "2019-07-23T21:58:03.638215Z",
        "url": "https://files.pythonhosted.org/packages/e2/de/584f9d6507877047940f726258250d3626843e8d7b7cea9b8835542d1884/ansible_taskrunner-0.0.18-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "684d3419101992cd1c8a6f9ee0cdc9e0e108634bff16ba194547e94c4da39c3f",
          "md5": "166148f0832bd5ef9aa93ffea62a975b",
          "sha256": "5a8cbee39cf6fe32bca0208fb072df2e02f6e594369c143065ed2b5a9c6ce0d3"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-0.0.18.tar.gz",
        "has_sig": false,
        "md5_digest": "166148f0832bd5ef9aa93ffea62a975b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 2.7",
        "size": 30997,
        "upload_time": "2019-07-23T21:58:06",
        "upload_time_iso_8601": "2019-07-23T21:58:06.736568Z",
        "url": "https://files.pythonhosted.org/packages/68/4d/3419101992cd1c8a6f9ee0cdc9e0e108634bff16ba194547e94c4da39c3f/ansible_taskrunner-0.0.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a883ad198f9789e215de1d8f303ab67833c1c9d6ffd908d62253fdc5e060095",
          "md5": "9ec9d774cd248cc3c1672fa238974773",
          "sha256": "6907820a486c2bdbe106314abfbd10acc126f2ca1d9eb1beef1b9e6761b5a397"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ec9d774cd248cc3c1672fa238974773",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 2.7",
        "size": 28080,
        "upload_time": "2019-08-02T22:31:23",
        "upload_time_iso_8601": "2019-08-02T22:31:23.871396Z",
        "url": "https://files.pythonhosted.org/packages/5a/88/3ad198f9789e215de1d8f303ab67833c1c9d6ffd908d62253fdc5e060095/ansible_taskrunner-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "642bdc56b21219ed07cdc384305d8b8e23c8514b6f8f5983ba8f8a84a2cecccb",
          "md5": "c01fbfd18a3223827f243e052d93eb15",
          "sha256": "445003cc214bc0e1a898224627f7f3eb39e41ecc2cf7f86bcb54d02cd8ed06e1"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c01fbfd18a3223827f243e052d93eb15",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 2.7",
        "size": 36756,
        "upload_time": "2019-08-02T22:31:25",
        "upload_time_iso_8601": "2019-08-02T22:31:25.183954Z",
        "url": "https://files.pythonhosted.org/packages/64/2b/dc56b21219ed07cdc384305d8b8e23c8514b6f8f5983ba8f8a84a2cecccb/ansible_taskrunner-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47182393c9bf0d0c22a5ef4ea46194bc34235f2dbbb97bc83d81d089a448a5f0",
          "md5": "6f8b2778c3bd51c5f6f69b703ce6698b",
          "sha256": "519ef88ea5d34b1329c68fcb63cd44d37425ff5a0fe2c87c4d8d77eda79d7cef"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f8b2778c3bd51c5f6f69b703ce6698b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 2.7",
        "size": 28808,
        "upload_time": "2019-09-16T13:14:33",
        "upload_time_iso_8601": "2019-09-16T13:14:33.367805Z",
        "url": "https://files.pythonhosted.org/packages/47/18/2393c9bf0d0c22a5ef4ea46194bc34235f2dbbb97bc83d81d089a448a5f0/ansible_taskrunner-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04ba015038c104b9d99f4bcf7385c4a1faf50756d35028e8bc6717b9830b0462",
          "md5": "8330818f04957d2ee3037de9d3a5cb56",
          "sha256": "868f42e41647be158e395a3ba30f70fe34f5b6b5fc13aca3894db345d2c4af33"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8330818f04957d2ee3037de9d3a5cb56",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 2.7",
        "size": 42994,
        "upload_time": "2019-09-27T21:34:54",
        "upload_time_iso_8601": "2019-09-27T21:34:54.230930Z",
        "url": "https://files.pythonhosted.org/packages/04/ba/015038c104b9d99f4bcf7385c4a1faf50756d35028e8bc6717b9830b0462/ansible_taskrunner-1.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f03a086b4a642e8131b37477291f24e90c6f37718e4768f79ef5b5821d64bae",
          "md5": "f5c3e5b177937ba14dc82652580e9cf8",
          "sha256": "52e1ade7611e4f4ad185bcf3501d3f8ec0888da39a6515d740c4fa845543728a"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "f5c3e5b177937ba14dc82652580e9cf8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 2.7",
        "size": 56203,
        "upload_time": "2019-09-27T21:34:56",
        "upload_time_iso_8601": "2019-09-27T21:34:56.140309Z",
        "url": "https://files.pythonhosted.org/packages/9f/03/a086b4a642e8131b37477291f24e90c6f37718e4768f79ef5b5821d64bae/ansible_taskrunner-1.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fb1b9396e6850a5a8c1f5211bef8ad645546d2f1bad0f27dc4392994400ff2a",
          "md5": "1e0f799b5a014fcdf7e96108d9601fa8",
          "sha256": "40fa38e8aa80642a08159c35170f05778465aef326a8ec77a312574a731cedb1"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.2.10-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e0f799b5a014fcdf7e96108d9601fa8",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.7",
        "size": 48128,
        "upload_time": "2019-10-11T18:41:47",
        "upload_time_iso_8601": "2019-10-11T18:41:47.146779Z",
        "url": "https://files.pythonhosted.org/packages/9f/b1/b9396e6850a5a8c1f5211bef8ad645546d2f1bad0f27dc4392994400ff2a/ansible_taskrunner-1.2.10-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6564e79bbaaf1121236693c427a327f4dfa54a13118ecfaa862b74ef9d57f101",
          "md5": "be06bb80ef739a4b5935afcd596e3c8d",
          "sha256": "67417dbd78006057eaa2b37ce20862b0481bf0e3e7b8111a57cb083836df56b8"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.2.10.tar.gz",
        "has_sig": false,
        "md5_digest": "be06bb80ef739a4b5935afcd596e3c8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 63872,
        "upload_time": "2019-10-11T18:41:49",
        "upload_time_iso_8601": "2019-10-11T18:41:49.170783Z",
        "url": "https://files.pythonhosted.org/packages/65/64/e79bbaaf1121236693c427a327f4dfa54a13118ecfaa862b74ef9d57f101/ansible_taskrunner-1.2.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b8e026e29f8d3be84e254555d211aea758731972abe8a6d74021f180c0e675d",
          "md5": "50aac9d0b8447c473a3ab95f1e5f7303",
          "sha256": "f20128fe4c6005aea6e744bf0275b1a40388407ee50a8016678e451124405c54"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.2.8-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "50aac9d0b8447c473a3ab95f1e5f7303",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.7",
        "size": 48129,
        "upload_time": "2019-10-11T17:26:30",
        "upload_time_iso_8601": "2019-10-11T17:26:30.338055Z",
        "url": "https://files.pythonhosted.org/packages/1b/8e/026e29f8d3be84e254555d211aea758731972abe8a6d74021f180c0e675d/ansible_taskrunner-1.2.8-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d212dd4b5f818e57f0b012063cf410ae9678af7b3ed800e2faa01ab15845f43",
          "md5": "f0a456683767837843ffbf494febfbda",
          "sha256": "42763f175902a97be6eae67ff787ba6925a49b38ae48ab49e3867ce6ab63e509"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.2.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0a456683767837843ffbf494febfbda",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 48087,
        "upload_time": "2019-10-11T17:26:32",
        "upload_time_iso_8601": "2019-10-11T17:26:32.013404Z",
        "url": "https://files.pythonhosted.org/packages/6d/21/2dd4b5f818e57f0b012063cf410ae9678af7b3ed800e2faa01ab15845f43/ansible_taskrunner-1.2.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30e036cac0894d65797a7fb7c6ca168a0876ee30de95e88e9400b2a74146b814",
          "md5": "7b8dc134cbd92496123b6556360a4637",
          "sha256": "7e8a13faeae0297373a3538fdb70ccbec54adcb242c619a5a704b5e6dcbdd488"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "7b8dc134cbd92496123b6556360a4637",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 63665,
        "upload_time": "2019-10-11T17:26:33",
        "upload_time_iso_8601": "2019-10-11T17:26:33.826783Z",
        "url": "https://files.pythonhosted.org/packages/30/e0/36cac0894d65797a7fb7c6ca168a0876ee30de95e88e9400b2a74146b814/ansible_taskrunner-1.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a10bd3ed1ced30fa3a5f9b89d7b198e667e10da3044e00294a9eb36a7583361f",
          "md5": "08f861779be75bf7ca385594e6747100",
          "sha256": "554bd63edff91572d5c9c6172174f2380f0d4394c3e23ff342ccc542798d6b29"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.2.9-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "08f861779be75bf7ca385594e6747100",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.7",
        "size": 48131,
        "upload_time": "2019-10-11T17:51:10",
        "upload_time_iso_8601": "2019-10-11T17:51:10.526670Z",
        "url": "https://files.pythonhosted.org/packages/a1/0b/d3ed1ced30fa3a5f9b89d7b198e667e10da3044e00294a9eb36a7583361f/ansible_taskrunner-1.2.9-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb9c0df2fb344afac54a4a17bc1433d35e653b9f8fd09fcc43dbd8bc6d0d6ef7",
          "md5": "16b421fb3b9923283ce8eafc5de0095b",
          "sha256": "4a6e98e1c54f69be5c9535772d483dda0f32c06f9fe635535210ee713b08fbfd"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "16b421fb3b9923283ce8eafc5de0095b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 63843,
        "upload_time": "2019-10-11T17:51:13",
        "upload_time_iso_8601": "2019-10-11T17:51:13.730407Z",
        "url": "https://files.pythonhosted.org/packages/eb/9c/0df2fb344afac54a4a17bc1433d35e653b9f8fd09fcc43dbd8bc6d0d6ef7/ansible_taskrunner-1.2.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e8f663b6a1e491371aa0cbde122d767c6e6b83a375516b8509373a8b831da19",
          "md5": "3ff78b62be69e60bdb828fb037c20ff9",
          "sha256": "17718baa1461cde90ac15c77e41a35355930b5e589780d6151fc386ea4bad198"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.3.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ff78b62be69e60bdb828fb037c20ff9",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.7",
        "size": 48718,
        "upload_time": "2019-10-16T16:23:40",
        "upload_time_iso_8601": "2019-10-16T16:23:40.634777Z",
        "url": "https://files.pythonhosted.org/packages/8e/8f/663b6a1e491371aa0cbde122d767c6e6b83a375516b8509373a8b831da19/ansible_taskrunner-1.3.0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6892b3212f4e82a3095485caa804f1e1595a9bddddda525a72169dc04877b7bd",
          "md5": "bc109381f27537978f131215f30f457e",
          "sha256": "e3901408a05ac2c8d9d491b596f9230f842fb186037a9d5b07f571d5e083df90"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bc109381f27537978f131215f30f457e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 64392,
        "upload_time": "2019-10-16T16:23:43",
        "upload_time_iso_8601": "2019-10-16T16:23:43.204781Z",
        "url": "https://files.pythonhosted.org/packages/68/92/b3212f4e82a3095485caa804f1e1595a9bddddda525a72169dc04877b7bd/ansible_taskrunner-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1ebba9a615adbfe5ca2b42b033536acf5a2e1d742a617d5251bd2da97795bc8",
          "md5": "7ad936653094ce22389ad1e8552daa82",
          "sha256": "000fbd33e68d8b002fc4fc5178fb610de90ffac4e304c8e8dcb970a80e8be8e8"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.3.4-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ad936653094ce22389ad1e8552daa82",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.7",
        "size": 50715,
        "upload_time": "2019-11-04T15:49:17",
        "upload_time_iso_8601": "2019-11-04T15:49:17.347307Z",
        "url": "https://files.pythonhosted.org/packages/e1/eb/ba9a615adbfe5ca2b42b033536acf5a2e1d742a617d5251bd2da97795bc8/ansible_taskrunner-1.3.4-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e66b6d3490bd02822bbc9d1f46053d1c76c6382a468495408b87e61405389aac",
          "md5": "a1fe363146759be29acdefb2292cc155",
          "sha256": "01599ffa292a4a0a796e5b4e575f3b96497519c5860776a78817b1cf0bf2be69"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a1fe363146759be29acdefb2292cc155",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 68634,
        "upload_time": "2019-11-04T15:49:19",
        "upload_time_iso_8601": "2019-11-04T15:49:19.019419Z",
        "url": "https://files.pythonhosted.org/packages/e6/6b/6d3490bd02822bbc9d1f46053d1c76c6382a468495408b87e61405389aac/ansible_taskrunner-1.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6bc3259eb4e54ae4d9bdb04a699860d3a8dbcd6d10a6fd3fcf9a464bf3ba37e",
          "md5": "7e5cb894786f0adbd7ab8b92603c1289",
          "sha256": "a98b47fc8703653f66ca34152a92329a8c746deda0551293d1fbedfdfb803577"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.3.6-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e5cb894786f0adbd7ab8b92603c1289",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.7",
        "size": 50925,
        "upload_time": "2019-11-12T02:43:27",
        "upload_time_iso_8601": "2019-11-12T02:43:27.045411Z",
        "url": "https://files.pythonhosted.org/packages/a6/bc/3259eb4e54ae4d9bdb04a699860d3a8dbcd6d10a6fd3fcf9a464bf3ba37e/ansible_taskrunner-1.3.6-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "524e2e8f5219ce7ed45b942fa4f25298e5237ec76ef4cdb5222c7b5ceba6247e",
          "md5": "ac841533f7054980e2798da25b3e3853",
          "sha256": "864b056e936337fd11cc2bc90c40ce2a66a9d0f0b2ae3dc8fd7d561b0c224996"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.3.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ac841533f7054980e2798da25b3e3853",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 69037,
        "upload_time": "2019-11-12T02:43:29",
        "upload_time_iso_8601": "2019-11-12T02:43:29.974252Z",
        "url": "https://files.pythonhosted.org/packages/52/4e/2e8f5219ce7ed45b942fa4f25298e5237ec76ef4cdb5222c7b5ceba6247e/ansible_taskrunner-1.3.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a7f9a2de6ee4e9392d60935fa93c52e937f5f71ed0ba357026aa924c4ceeb28",
          "md5": "3ad03d305376149e235fabe235a1e59f",
          "sha256": "d2111a1af5acda0d73ea46de7e5c27278f7349f259d9c70f1bf8d0883cd41870"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.3.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ad03d305376149e235fabe235a1e59f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 52292,
        "upload_time": "2020-01-13T19:40:36",
        "upload_time_iso_8601": "2020-01-13T19:40:36.200601Z",
        "url": "https://files.pythonhosted.org/packages/1a/7f/9a2de6ee4e9392d60935fa93c52e937f5f71ed0ba357026aa924c4ceeb28/ansible_taskrunner-1.3.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f8773684b10dcb36792c6a0c2ae48cf3d2af1de014a4e34e6b89b6f67078a31",
          "md5": "3827de5b2ea44b1bf121167bcb3857a8",
          "sha256": "982ea552f4674dcf583c5eb8076364b2b042979182595e1fbe84b187bdd1a7a3"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.3.9.tar.gz",
        "has_sig": false,
        "md5_digest": "3827de5b2ea44b1bf121167bcb3857a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 72630,
        "upload_time": "2020-01-13T19:40:37",
        "upload_time_iso_8601": "2020-01-13T19:40:37.739322Z",
        "url": "https://files.pythonhosted.org/packages/2f/87/73684b10dcb36792c6a0c2ae48cf3d2af1de014a4e34e6b89b6f67078a31/ansible_taskrunner-1.3.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c811b3c294fdc9b68bf50229d6c54881a999dab094e003faaf1e7d0ef3b4c2ba",
          "md5": "62cade35966339751a93a82b62319b68",
          "sha256": "f00d0b9da1e5d228f7eba18cdf86865b857f72300fae349e61275a03bcc73c38"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62cade35966339751a93a82b62319b68",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 52583,
        "upload_time": "2020-02-12T14:05:45",
        "upload_time_iso_8601": "2020-02-12T14:05:45.070603Z",
        "url": "https://files.pythonhosted.org/packages/c8/11/b3c294fdc9b68bf50229d6c54881a999dab094e003faaf1e7d0ef3b4c2ba/ansible_taskrunner-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae3756f2000c4e5c0483ecd1cff4704a3ead45c7bd7d478a7d6e17623229e691",
          "md5": "f108d08b454bac7888ec9c9210a5fc8a",
          "sha256": "cb38960186fd90817847413f881aa454a7ca9ad633820acd085a7b23da2b01a9"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f108d08b454bac7888ec9c9210a5fc8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 70444,
        "upload_time": "2020-02-12T14:05:47",
        "upload_time_iso_8601": "2020-02-12T14:05:47.378957Z",
        "url": "https://files.pythonhosted.org/packages/ae/37/56f2000c4e5c0483ecd1cff4704a3ead45c7bd7d478a7d6e17623229e691/ansible_taskrunner-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02c8ea04fd92822a3a915cb8d354b2c74c43f3782324035592c8fe50fcd18e2c",
          "md5": "431dddd6dc936de7889aa8a8786f921f",
          "sha256": "987ce87ae25c0885eaf93a49a01d63e5d743a980d35b885601a73b5d1cf0854d"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "431dddd6dc936de7889aa8a8786f921f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 54928,
        "upload_time": "2022-09-14T03:25:21",
        "upload_time_iso_8601": "2022-09-14T03:25:21.128684Z",
        "url": "https://files.pythonhosted.org/packages/02/c8/ea04fd92822a3a915cb8d354b2c74c43f3782324035592c8fe50fcd18e2c/ansible_taskrunner-1.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "828a35d148a8e07f4d4025b5496136465db7a4b92afe39ac9c3f7aea217260e8",
          "md5": "0220ecbeac47ef34e2c0b9cdcfe85a0c",
          "sha256": "141fca3abef7a4afb1e80f764c6f9fb7c43d8a724eadc0db2e05934d7da92dc2"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0220ecbeac47ef34e2c0b9cdcfe85a0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 88299,
        "upload_time": "2022-09-14T03:25:22",
        "upload_time_iso_8601": "2022-09-14T03:25:22.874671Z",
        "url": "https://files.pythonhosted.org/packages/82/8a/35d148a8e07f4d4025b5496136465db7a4b92afe39ac9c3f7aea217260e8/ansible_taskrunner-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6eb881b25073b45f1caf422b49ed69268c1bf5329ac9593fe72d4fe918e28a8",
          "md5": "ec8ab7dc47a9ee6c68e5571be6d558d4",
          "sha256": "eb724a41d026d40a3f70963a5ce657671a7e80a6d62894cfa71b8ed30440b097"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec8ab7dc47a9ee6c68e5571be6d558d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 57411,
        "upload_time": "2023-03-07T02:35:10",
        "upload_time_iso_8601": "2023-03-07T02:35:10.187141Z",
        "url": "https://files.pythonhosted.org/packages/e6/eb/881b25073b45f1caf422b49ed69268c1bf5329ac9593fe72d4fe918e28a8/ansible_taskrunner-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "024cbcc96d288eaf76ed812303f00f96e23cba85a677804f2c3497764618a7d1",
          "md5": "bf0d5f4907790963fc4332f0d5ba51a8",
          "sha256": "fd5a54eab8d8eed32d9770776e77a908e50929e7cb2bef32b2fef9acdc9179e5"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bf0d5f4907790963fc4332f0d5ba51a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 91138,
        "upload_time": "2023-03-07T02:35:11",
        "upload_time_iso_8601": "2023-03-07T02:35:11.865113Z",
        "url": "https://files.pythonhosted.org/packages/02/4c/bcc96d288eaf76ed812303f00f96e23cba85a677804f2c3497764618a7d1/ansible_taskrunner-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "669d713a42add4e4816de1e6fed93030e43b186587f3ce552a9a3b18e74aef72",
          "md5": "9d3e3c20bceaa69463347542df5896af",
          "sha256": "09b1eabc58df75df92e42a11d16917cd36eff5a5a9506d4b7161c827bf0c9b51"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d3e3c20bceaa69463347542df5896af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 57564,
        "upload_time": "2023-03-07T05:34:41",
        "upload_time_iso_8601": "2023-03-07T05:34:41.230297Z",
        "url": "https://files.pythonhosted.org/packages/66/9d/713a42add4e4816de1e6fed93030e43b186587f3ce552a9a3b18e74aef72/ansible_taskrunner-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20e12af357f52b4165f15db96fe64505948a922e0ed936c0165902941d02c48f",
          "md5": "785d29c4cb283ab91e89624adf2e1a85",
          "sha256": "221ea0d3ac1d31c117c6d1b52b93254913cf96463c5c9ccbad23a1d1f790bec9"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "785d29c4cb283ab91e89624adf2e1a85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 91581,
        "upload_time": "2023-03-07T05:34:43",
        "upload_time_iso_8601": "2023-03-07T05:34:43.292333Z",
        "url": "https://files.pythonhosted.org/packages/20/e1/2af357f52b4165f15db96fe64505948a922e0ed936c0165902941d02c48f/ansible_taskrunner-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf17fdd93d3397978a47a1129e7d328233dc70c27129aa2ee41c1f583eb8a2c9",
          "md5": "90185d0f37efbe4bd66afb6bce16805c",
          "sha256": "66139910766ba2d35f4096f3bc6a3654525cdc9c57fb03cbb91848330862ee10"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90185d0f37efbe4bd66afb6bce16805c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 57604,
        "upload_time": "2023-03-07T16:14:12",
        "upload_time_iso_8601": "2023-03-07T16:14:12.692067Z",
        "url": "https://files.pythonhosted.org/packages/bf/17/fdd93d3397978a47a1129e7d328233dc70c27129aa2ee41c1f583eb8a2c9/ansible_taskrunner-2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71971571278e2b214264062b2b4d591c39f6b37e7e9caef1c664e5cdb47cd169",
          "md5": "0265b72d7216a8d397bcfaad0c34cf08",
          "sha256": "fd180458416c46dbe1d9b595ef15bf46ecc04e09e54e53ae3221b799c3805021"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0265b72d7216a8d397bcfaad0c34cf08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 57640,
        "upload_time": "2023-03-07T16:32:14",
        "upload_time_iso_8601": "2023-03-07T16:32:14.592235Z",
        "url": "https://files.pythonhosted.org/packages/71/97/1571278e2b214264062b2b4d591c39f6b37e7e9caef1c664e5cdb47cd169/ansible_taskrunner-2.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e28cc2ae30278cba105ec85a3c2a0b45855952eee21fe6417122a6b47661a7c",
          "md5": "f748bde1ef899cb2e0221fb2840fc1d7",
          "sha256": "d4f1e5b7e80492d5198e44713359257c68acf982d1ddd79b8b825dff39762dd7"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f748bde1ef899cb2e0221fb2840fc1d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 91666,
        "upload_time": "2023-03-07T16:32:16",
        "upload_time_iso_8601": "2023-03-07T16:32:16.420100Z",
        "url": "https://files.pythonhosted.org/packages/7e/28/cc2ae30278cba105ec85a3c2a0b45855952eee21fe6417122a6b47661a7c/ansible_taskrunner-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dbabd2ab7fe453789604aa0ed3791c46d2a2ef809de5e408ece26da6b13ca41",
          "md5": "e4f4120f1ac57d4e8eb6bc06d4b6cd6e",
          "sha256": "6b0ef78d05bd1a281f9f1649de9108b8160548feb2cd9923fa5c9091c73cf534"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4f4120f1ac57d4e8eb6bc06d4b6cd6e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 57788,
        "upload_time": "2023-03-08T18:05:21",
        "upload_time_iso_8601": "2023-03-08T18:05:21.672579Z",
        "url": "https://files.pythonhosted.org/packages/1d/ba/bd2ab7fe453789604aa0ed3791c46d2a2ef809de5e408ece26da6b13ca41/ansible_taskrunner-2.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cb61e6a6892008d11cfd07a5e499b31679b9311818fd184f29eafb9353224a4",
          "md5": "8da728fa675a32b7cf0014b60ee016f8",
          "sha256": "6c6c5b6cdd5fa7d19703746260a21ce04a22fc1d013464ee8fbb982a502b568a"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8da728fa675a32b7cf0014b60ee016f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 94247,
        "upload_time": "2023-03-08T18:05:23",
        "upload_time_iso_8601": "2023-03-08T18:05:23.413414Z",
        "url": "https://files.pythonhosted.org/packages/9c/b6/1e6a6892008d11cfd07a5e499b31679b9311818fd184f29eafb9353224a4/ansible_taskrunner-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91f89be41226fdc6251fa20437af24538108391a53c42f826873fec0966a3c87",
          "md5": "1d5800152a34d957b7dfed8474fbfb3c",
          "sha256": "681d7ca20deef84739c1b8750f5728702b8a33849e5307705d4dcc7c36ce907f"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d5800152a34d957b7dfed8474fbfb3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 56818,
        "upload_time": "2023-03-08T21:00:37",
        "upload_time_iso_8601": "2023-03-08T21:00:37.628480Z",
        "url": "https://files.pythonhosted.org/packages/91/f8/9be41226fdc6251fa20437af24538108391a53c42f826873fec0966a3c87/ansible_taskrunner-2.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38bbdd884b140e66f65074990c84ff184b7656740eff3b63a1c7c1d190f6421e",
          "md5": "fd4a64b879cb1ea98b14d20b90055631",
          "sha256": "331523d33c7c04e9fc2e3d0d18b6c2c6fe7421360b9827a23f8d4baced02fb7b"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fd4a64b879cb1ea98b14d20b90055631",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 93608,
        "upload_time": "2023-03-08T21:00:38",
        "upload_time_iso_8601": "2023-03-08T21:00:38.845280Z",
        "url": "https://files.pythonhosted.org/packages/38/bb/dd884b140e66f65074990c84ff184b7656740eff3b63a1c7c1d190f6421e/ansible_taskrunner-2.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e51bc754d4e1a2f1785cec0859c19c02595e08e9dfa268aa513ee458a4529bb0",
          "md5": "bcfee5459ea923b6d225d585e94a632d",
          "sha256": "b9b06a097125f7f29a80eb499baab3d3a92c4a0bd76abee599ba653b132b3ec0"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bcfee5459ea923b6d225d585e94a632d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 56880,
        "upload_time": "2023-03-08T21:38:35",
        "upload_time_iso_8601": "2023-03-08T21:38:35.397682Z",
        "url": "https://files.pythonhosted.org/packages/e5/1b/c754d4e1a2f1785cec0859c19c02595e08e9dfa268aa513ee458a4529bb0/ansible_taskrunner-2.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6e83272fc371bcc4081da3152ff39f17d40ee7b007995824c648c466f9672d5",
          "md5": "ddf8a5d217374ca8978c2fb6c865df87",
          "sha256": "f2aad756bcaf43669195a7f4399c4d7b8219915b6b0b6c26a241c4792b51a466"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ddf8a5d217374ca8978c2fb6c865df87",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 93795,
        "upload_time": "2023-03-08T21:38:37",
        "upload_time_iso_8601": "2023-03-08T21:38:37.164898Z",
        "url": "https://files.pythonhosted.org/packages/b6/e8/3272fc371bcc4081da3152ff39f17d40ee7b007995824c648c466f9672d5/ansible_taskrunner-2.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02358c64da42b28f013e96b72b4b33e495a09505e5c4147e0b18c01cf27f3e1d",
          "md5": "0f28d97bdc7b1ffd7b7ad023f8e45e76",
          "sha256": "1cabc1a1cc0f028d861aab417e85b8060451f4feb0ec729257333ca2e5a8d33c"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f28d97bdc7b1ffd7b7ad023f8e45e76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 56968,
        "upload_time": "2023-03-09T01:17:15",
        "upload_time_iso_8601": "2023-03-09T01:17:15.610472Z",
        "url": "https://files.pythonhosted.org/packages/02/35/8c64da42b28f013e96b72b4b33e495a09505e5c4147e0b18c01cf27f3e1d/ansible_taskrunner-2.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7377b63774637263e663c5f862495fe7a22f67886e5c57c630e145e42d8903e",
          "md5": "47e64cf9479e881eed1f490d8d6e7713",
          "sha256": "a32c09a044681dc45e8eac7b501ecfc7a19b58db1686299496488c107631bbf2"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "47e64cf9479e881eed1f490d8d6e7713",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 94061,
        "upload_time": "2023-03-09T01:17:17",
        "upload_time_iso_8601": "2023-03-09T01:17:17.391977Z",
        "url": "https://files.pythonhosted.org/packages/e7/37/7b63774637263e663c5f862495fe7a22f67886e5c57c630e145e42d8903e/ansible_taskrunner-2.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bc68e296a3becc7e8bd8059ee8e59535627fc53b786de585812a0535744c5c8",
          "md5": "e1df73cd9a6b4aa03db8ba41321efa18",
          "sha256": "88d8ac9623698f7a668939f1bf3bde29409bcb97743e3af064a1bcb78b37d44d"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1df73cd9a6b4aa03db8ba41321efa18",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 57289,
        "upload_time": "2023-03-09T08:42:29",
        "upload_time_iso_8601": "2023-03-09T08:42:29.362668Z",
        "url": "https://files.pythonhosted.org/packages/5b/c6/8e296a3becc7e8bd8059ee8e59535627fc53b786de585812a0535744c5c8/ansible_taskrunner-2.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c24cc32d69bb7aa39684208a1bc898558a9bdc076d8c5a229c87e3362c66db6",
          "md5": "88474f18e310e642b408bc600833f57b",
          "sha256": "3ddd84e0232b8adb2d3d4244abc61b91e8855424b79b8c462eb9c3c3616bdb37"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "88474f18e310e642b408bc600833f57b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 94887,
        "upload_time": "2023-03-09T08:42:31",
        "upload_time_iso_8601": "2023-03-09T08:42:31.162516Z",
        "url": "https://files.pythonhosted.org/packages/5c/24/cc32d69bb7aa39684208a1bc898558a9bdc076d8c5a229c87e3362c66db6/ansible_taskrunner-2.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "307fbbb3911f36ccc16696eb81da754e8b68d854a00203fae1de00cfa4eeb93e",
          "md5": "3cd37822fac7d82e7ed049e46fa8ccbd",
          "sha256": "7a956ab436d4fa5e24b5329b5860c28f63629df141ace3c61573598949875e87"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3cd37822fac7d82e7ed049e46fa8ccbd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 57289,
        "upload_time": "2023-03-10T21:31:36",
        "upload_time_iso_8601": "2023-03-10T21:31:36.626912Z",
        "url": "https://files.pythonhosted.org/packages/30/7f/bbb3911f36ccc16696eb81da754e8b68d854a00203fae1de00cfa4eeb93e/ansible_taskrunner-2.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef8e130221752509f6ae283fafdbec8d46761cdfd0bf5b0dc50e80eec1acdd1f",
          "md5": "04cbad24132a24e88d514ce89e9ad7b8",
          "sha256": "78d0b6367f13cab33ef1f097ad9df8dd53070203445a8e6b342b33b26d037f78"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "04cbad24132a24e88d514ce89e9ad7b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 94938,
        "upload_time": "2023-03-10T21:31:38",
        "upload_time_iso_8601": "2023-03-10T21:31:38.678627Z",
        "url": "https://files.pythonhosted.org/packages/ef/8e/130221752509f6ae283fafdbec8d46761cdfd0bf5b0dc50e80eec1acdd1f/ansible_taskrunner-2.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5a75a38441807944ad84c5f36e4c414d0d902b423106ea620e681bbd970dfd7",
          "md5": "11d0a16cf66247ca23ab663e640cb2fb",
          "sha256": "529644a69ea19d097ea1d5a96872edaf17dcd248e3c826a6a47e90623e4fb6f6"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.5.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11d0a16cf66247ca23ab663e640cb2fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 57306,
        "upload_time": "2023-03-13T18:35:18",
        "upload_time_iso_8601": "2023-03-13T18:35:18.653944Z",
        "url": "https://files.pythonhosted.org/packages/a5/a7/5a38441807944ad84c5f36e4c414d0d902b423106ea620e681bbd970dfd7/ansible_taskrunner-2.5.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e45e217d95b3332138e2dff67bfdf9c65709623461e706c83b1813c58844d413",
          "md5": "51eeaac5203979f9dec06e4fdcc66fff",
          "sha256": "4a50cacce820c367240cb81ed70d5b1efe2298bea85972ada8d511bf3fcb296e"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "51eeaac5203979f9dec06e4fdcc66fff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 95266,
        "upload_time": "2023-03-13T18:35:19",
        "upload_time_iso_8601": "2023-03-13T18:35:19.975148Z",
        "url": "https://files.pythonhosted.org/packages/e4/5e/217d95b3332138e2dff67bfdf9c65709623461e706c83b1813c58844d413/ansible_taskrunner-2.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb24985972ea087d79ad1e9c59f9f8d12326f93841714da18aa5f9f21bf5dc23",
          "md5": "76c38c35dcbab836b228397067516dda",
          "sha256": "7594a7c1925b567e5ac950cc16f995e43ebcd43c224b7ff175ade891f345b19a"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76c38c35dcbab836b228397067516dda",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 57438,
        "upload_time": "2023-03-16T19:51:14",
        "upload_time_iso_8601": "2023-03-16T19:51:14.832441Z",
        "url": "https://files.pythonhosted.org/packages/fb/24/985972ea087d79ad1e9c59f9f8d12326f93841714da18aa5f9f21bf5dc23/ansible_taskrunner-2.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4917a56197d8ad67abb596bb5b740f678fe52c216d3e6ba3cd112964c9f8424d",
          "md5": "5e75f2a693589599248e1cc30a1c6140",
          "sha256": "347ea994ce98501cb82850bf9f4e0688c168f5e3b9b6ffdca97cc440700a3d75"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5e75f2a693589599248e1cc30a1c6140",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 95702,
        "upload_time": "2023-03-16T19:51:16",
        "upload_time_iso_8601": "2023-03-16T19:51:16.815349Z",
        "url": "https://files.pythonhosted.org/packages/49/17/a56197d8ad67abb596bb5b740f678fe52c216d3e6ba3cd112964c9f8424d/ansible_taskrunner-2.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2218d0a706562f9637e087fba21144bcb835c65567f09ef7267f780a6f5092ac",
          "md5": "481e2fa812956c927022efa40b0f1645",
          "sha256": "365730fb832b9f4ffa8ecfdda5efeb1c26764de666ecd3c0e5216e770b65909c"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "481e2fa812956c927022efa40b0f1645",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 57526,
        "upload_time": "2023-03-24T15:58:08",
        "upload_time_iso_8601": "2023-03-24T15:58:08.896658Z",
        "url": "https://files.pythonhosted.org/packages/22/18/d0a706562f9637e087fba21144bcb835c65567f09ef7267f780a6f5092ac/ansible_taskrunner-2.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05f117dade968164c5d75c7d67f0f24a787f53ad4c9ca97fc9b6d65b2a988682",
          "md5": "155b059dfeaaf967bf65cb083b3011ee",
          "sha256": "be87002730f8271f680470a52e491c725820af834520004cef7e192768336128"
        },
        "downloads": -1,
        "filename": "ansible_taskrunner-2.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "155b059dfeaaf967bf65cb083b3011ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 95841,
        "upload_time": "2023-03-24T15:58:10",
        "upload_time_iso_8601": "2023-03-24T15:58:10.390753Z",
        "url": "https://files.pythonhosted.org/packages/05/f1/17dade968164c5d75c7d67f0f24a787f53ad4c9ca97fc9b6d65b2a988682/ansible_taskrunner-2.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2218d0a706562f9637e087fba21144bcb835c65567f09ef7267f780a6f5092ac",
        "md5": "481e2fa812956c927022efa40b0f1645",
        "sha256": "365730fb832b9f4ffa8ecfdda5efeb1c26764de666ecd3c0e5216e770b65909c"
      },
      "downloads": -1,
      "filename": "ansible_taskrunner-2.7.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "481e2fa812956c927022efa40b0f1645",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 57526,
      "upload_time": "2023-03-24T15:58:08",
      "upload_time_iso_8601": "2023-03-24T15:58:08.896658Z",
      "url": "https://files.pythonhosted.org/packages/22/18/d0a706562f9637e087fba21144bcb835c65567f09ef7267f780a6f5092ac/ansible_taskrunner-2.7.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05f117dade968164c5d75c7d67f0f24a787f53ad4c9ca97fc9b6d65b2a988682",
        "md5": "155b059dfeaaf967bf65cb083b3011ee",
        "sha256": "be87002730f8271f680470a52e491c725820af834520004cef7e192768336128"
      },
      "downloads": -1,
      "filename": "ansible_taskrunner-2.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "155b059dfeaaf967bf65cb083b3011ee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 95841,
      "upload_time": "2023-03-24T15:58:10",
      "upload_time_iso_8601": "2023-03-24T15:58:10.390753Z",
      "url": "https://files.pythonhosted.org/packages/05/f1/17dade968164c5d75c7d67f0f24a787f53ad4c9ca97fc9b6d65b2a988682/ansible_taskrunner-2.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}