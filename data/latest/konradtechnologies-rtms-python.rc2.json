{
  "info": {
    "author": "Konrad Technologies",
    "author_email": "info@konrad-technologies.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# rtms-python\nPython communication library for the KT-RTMS software.  You must have the KT-RTMS installed on a system with the \nRemote Control plug-in activated.  Please contact Konrad Technologies for assistance.\n\n## Installing rtms-python\nrtms-python can be installed using pip:\n\n`pip install konradtechnologies-rtms-python`\n\n## Examples\nExample Python scripts can be found in the examples/ folder.\n\n## Using rtms-python\nThe rtms-python package provides an overall class for communication to KT-RTMS, `RtmsClient`\n\n    # Instantiate the RTMS client object (does not connect yet)\n    rtms_client = RtmsClient(ip_address)\n\n    # Connect to the instrument\n    rtms_client.connect()\n    ...\n    # Perform functions\n    ...\n    # Disconnect from the instrument\n    rtms_client.disconnect()\n\n### Static Radar Targets\nStatic radar targets can be defined using the `RadarTarget` class and sent to the instrument.\n\n    # Create two radar targets\n    target_list = [RadarTarget(distance=35, rcs=15, velocity=0, azimuth=0, elevation=0),\n                   RadarTarget(distance=100, rcs=30, velocity=0, azimuth=0, elevation=0)]\n\n    # Send the targets to RTMS\n    rtms_client.set_radar_targets(target_list)\n\n### Dynamic Radar Targets\nDynamic radar targets can be defined using the `DynamicRadarTarget` class and executed by the Python script.\nIn this configuration, Python sends a new set of targets to the instrument every 100 msec.  This can achieve psuedo-\ndynamic linear targets.\n\n    # Create two dynamic targets\n    # The first target will move out from 20 m to 80 m at 10 m/sec, then back to 40 m at 20 m/sec.\n    moving_target_1 = [DynamicRadarTarget(start_x=0, start_y=20, end_x=0, end_y=80, rcs=30, velocity=10),\n                       DynamicRadarTarget(start_x=0, start_y=80, end_x=0, end_y=40, rcs=30, velocity=20)]\n\n    # The second target will move from 100 m to 120 m at 5 m/sec.\n    moving_target_2 = [DynamicRadarTarget(start_x=0, start_y=100, end_x=0, end_y=120, rcs=30, velocity=5)]\n\n    # Send the targets to RTMS\n    rtms_client.set_dynamic_range_targets([moving_target_1, moving_target_2])\n\nNote that since this script is executed by Python (and not by the KT-RTMS software), it may expirience\njitter and latency, especially if other applications are running simultaneously.\n\n### Taking RF Measurements\nIf the KT-RTMS RF Measurements plug-in is activated on the system, one can take RF measurements.  This is typically\ndone in three steps: measurement configuration, initiating the measurement, and fetching results.\n\nTo configure the instrument for an RF measurement, there are typically a few parameters one should set:\n* Measurement duration\n* RF trigger parametesr\n* Specific measurement parameters\n* Enabling which specific measurements to take\n\nAs an example, this code sets the instrument up for a 1 msec acquisiton, measuring EIRP, occupied bandwidth, linearity,\nand phase noise of the signal:\n\n    # Set an acquisition time of 1 msec\n    rtms_client.set_measurement_duration(1E-3)\n\n    # Set up a rising edge trigger at 20 dBm\n    rtms_client.configure_trigger(enabled=True, level=20, edge=RtmsTriggerEdge.RISING)\n\n    # Configure the OBW and phase noise measurements\n    rtms_client.configure_measurement_obw_percent(percent=99)\n    rtms_client.configure_measurement_phasenoise(offset_frequencies=[10E3, 100E3, 1E6, 10E6])\n\n    # Set all measurements active\n    rtms_client.set_active_measurements(eirp=True, obw=True, linearity=True, phasenoise=True)\n\nThen, once all the measurement configuration has been defined, one can initiate the measurement:\n\n    # Initiate the measurement and block until complete and results are ready\n    rtms_client.initiate_measurement(wait_until_complete=True)\n\nFinally, the measurement results can be fetched.  Each measurement result is returned as a dictionary of measurements.\n\n    # Fetch results\n    eirp_results = rtms_client.get_measurement_results_eirp()\n    print(eirp_results)\n\n    obw_results = rtms_client.get_measurement_results_obw()\n    print(obw_results)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/konradtechnologies/rtms-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "konradtechnologies-rtms-python",
    "package_url": "https://pypi.org/project/konradtechnologies-rtms-python/",
    "platform": "",
    "project_url": "https://pypi.org/project/konradtechnologies-rtms-python/",
    "project_urls": {
      "Homepage": "https://github.com/konradtechnologies/rtms-python"
    },
    "release_url": "https://pypi.org/project/konradtechnologies-rtms-python/0.2.0/",
    "requires_dist": [
      "packaging",
      "numpy"
    ],
    "requires_python": ">=3.6",
    "summary": "A communication library for interfacing with the KT-RTMS software.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12391223,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0402427107c875b86c38b75fbed93636f59f5f586096be7d84f49d476456797",
          "md5": "1c94e0f15388be058bcb1f19183d958e",
          "sha256": "00e0a8cf9261ef339ba49b841f275bab48c115ec6a3fd8740485242d5eb24101"
        },
        "downloads": -1,
        "filename": "konradtechnologies_rtms_python-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c94e0f15388be058bcb1f19183d958e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16305,
        "upload_time": "2021-10-11T17:43:39",
        "upload_time_iso_8601": "2021-10-11T17:43:39.766243Z",
        "url": "https://files.pythonhosted.org/packages/a0/40/2427107c875b86c38b75fbed93636f59f5f586096be7d84f49d476456797/konradtechnologies_rtms_python-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01ec65bcae8fd8bbdf0fb3b0649b88e1236ebddd0207b8cbdb2199737d3214c9",
          "md5": "24fd04aae6b22ff8e18cad35dac9f6d0",
          "sha256": "3604b585fa727e2510b64bf04d2c8358658335ead1c9570dd153a79d58ded120"
        },
        "downloads": -1,
        "filename": "konradtechnologies-rtms-python-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "24fd04aae6b22ff8e18cad35dac9f6d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14662,
        "upload_time": "2021-10-11T17:43:42",
        "upload_time_iso_8601": "2021-10-11T17:43:42.800266Z",
        "url": "https://files.pythonhosted.org/packages/01/ec/65bcae8fd8bbdf0fb3b0649b88e1236ebddd0207b8cbdb2199737d3214c9/konradtechnologies-rtms-python-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d2c2b33a3e719d7b497633e2021b0213137474f38f5e7ddbb6fa084f0275982",
          "md5": "3b2024bc804746102d90e0211df2cdf3",
          "sha256": "fa90ebf2c2853cd11fd9bacc6830edc7b78911529f33a569334bc7da96ea774c"
        },
        "downloads": -1,
        "filename": "konradtechnologies_rtms_python-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b2024bc804746102d90e0211df2cdf3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16430,
        "upload_time": "2021-12-23T16:01:22",
        "upload_time_iso_8601": "2021-12-23T16:01:22.208710Z",
        "url": "https://files.pythonhosted.org/packages/5d/2c/2b33a3e719d7b497633e2021b0213137474f38f5e7ddbb6fa084f0275982/konradtechnologies_rtms_python-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c44032aed413c4060a455919e23fe86a150ae4f512af3515799148649dfc44e5",
          "md5": "8acc3c7205584fc6b4fe8f9ce4616c54",
          "sha256": "828f82d367d26e92c6999148a07fa405c7debac859c4cc0375136eff97ebee26"
        },
        "downloads": -1,
        "filename": "konradtechnologies-rtms-python-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8acc3c7205584fc6b4fe8f9ce4616c54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14764,
        "upload_time": "2021-12-23T16:01:24",
        "upload_time_iso_8601": "2021-12-23T16:01:24.426892Z",
        "url": "https://files.pythonhosted.org/packages/c4/40/32aed413c4060a455919e23fe86a150ae4f512af3515799148649dfc44e5/konradtechnologies-rtms-python-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d2c2b33a3e719d7b497633e2021b0213137474f38f5e7ddbb6fa084f0275982",
        "md5": "3b2024bc804746102d90e0211df2cdf3",
        "sha256": "fa90ebf2c2853cd11fd9bacc6830edc7b78911529f33a569334bc7da96ea774c"
      },
      "downloads": -1,
      "filename": "konradtechnologies_rtms_python-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3b2024bc804746102d90e0211df2cdf3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 16430,
      "upload_time": "2021-12-23T16:01:22",
      "upload_time_iso_8601": "2021-12-23T16:01:22.208710Z",
      "url": "https://files.pythonhosted.org/packages/5d/2c/2b33a3e719d7b497633e2021b0213137474f38f5e7ddbb6fa084f0275982/konradtechnologies_rtms_python-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c44032aed413c4060a455919e23fe86a150ae4f512af3515799148649dfc44e5",
        "md5": "8acc3c7205584fc6b4fe8f9ce4616c54",
        "sha256": "828f82d367d26e92c6999148a07fa405c7debac859c4cc0375136eff97ebee26"
      },
      "downloads": -1,
      "filename": "konradtechnologies-rtms-python-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8acc3c7205584fc6b4fe8f9ce4616c54",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14764,
      "upload_time": "2021-12-23T16:01:24",
      "upload_time_iso_8601": "2021-12-23T16:01:24.426892Z",
      "url": "https://files.pythonhosted.org/packages/c4/40/32aed413c4060a455919e23fe86a150ae4f512af3515799148649dfc44e5/konradtechnologies-rtms-python-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}