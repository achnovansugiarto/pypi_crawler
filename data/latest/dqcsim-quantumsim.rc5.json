{
  "info": {
    "author": "Jeroen van Straten",
    "author_email": "j.vanstraten-1@tudelft.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# DQCsim backend wrapper for QuantumSim\n\n[![PyPi](https://badgen.net/pypi/v/dqcsim-quantumsim)](https://pypi.org/project/dqcsim-quantumsim/)\n\nSee also: [DQCsim](https://github.com/mbrobbel/dqcsim) and\n[QuantumSim](https://gitlab.com/quantumsim/quantumsim).\n\nThis repository contains some glue code to connect DQCsim to QuantumSim 0.2.0.\n\n## Status\n\nRoughly the following things are supported, but not tested for correctness or\nreviewed by someone who knows what they're doing quantum-mechanics-wise:\n\n - Qubit amplitude damping and phase damping can be modelled and configured\n   using t1/t2 times in DQCsim cycles on a per-qubit basis.\n - Measurements support collapsing the state randomly (default), selecting the\n   most probable outcome, or collapsing to a predetermined state. The\n   probability is reported either way.\n - All one- and two-qubit gates should be supported.\n\nNot supported/limitations:\n\n - Modelling of gate-based errors.\n - Multi-qubit gates with more than two qubits (the QuantumSim API calls for\n   this are missing).\n - Measurement gates affecting multiple qubits still collapse the state one at\n   a time; it is currently not possible to get the full probability matrix for\n   collapsing multiple states at once, and the `probable` measurement method\n   also operates on a per-qubit basis.\n\n## Install\n\nYou can install using `pip` using `pip install dqcsim-quantumsim` or\nequivalent. If you're installing with `--user`, make sure that the path Python\ninstalls the executables into is in your system path, otherwise DQCsim will not\nbe able to find the plugin. A simple way to see where the files are installed\nis to run `pip uninstall dqcsim-quantumsim`; it shows which files it's about to\ndelete before querying for confirmation.\n\n## Building/installing from source\n\n - \"Build\" the wheel file locally (necessary because of the executable shell\n   script needed for DQCsim to recognize the plugin):\n   `python3 setup.py bdist_wheel`\n\n - Install the wheel file you just built:\n   `pip install target/python/dist/*` (or equivalent)\n\nIt should be safe to release the generated wheel to PyPI. Before doing so, make\nsure to increment the version number in both `setup.py` and\n`dqcsim_quantumsim/backend.py`.\n\n## Usage\n\nOnce the plugin is installed, you can use it by selecting the `quantumsim`\nbackend in a DQCsim command.\n\nThe t1/t2 times of the qubits can be configured using an init arb (setting the\ndefault for all qubits) or using an arb when allocating the qubit. The\ninterface/operation pair is `quantumsim.error`. The arb should have a JSON\nobject attached to it of the form `{\"t1\": <float>, \"t2\": <float>}`.\n\nTo control the way superposition is collapsed when a qubit is measured, attach\na JSON object of the form `{\"method\": ...}` to it, where method may be one of\nthe following:\n\n - `\"random\"`: collapse the state randomly based on the probabilities in the\n   state vector.\n - `\"probable\"`: collapse to the most probable outcome.\n - an integer: the integer is decoded to binary representation, with the first\n   qubit in the measurement operation mapping to the least significant bit. The\n   state is always collapsed to this outcome.\n - a list: controls the method on a per-qubit basis when multiple qubits are\n   measured at once. The list must be the same length as the number of qubits.\n   It may be one of the string methods, the integer 0, or the integer 1.\n\nIf the probability for collapsing to a predetermined state is 0, the simulation\ncrashes. The probability for the selected measurement outcome is stored along\nwith the measurement result through a JSON object in the ArbData of the form\n`{\"probability\": <float>}` and through the first binary string of the ArbData\nas a C double.\n\n## License\n\nLicense is GPL, since QuantumSim's license is GPL.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/QE-Lab/dqcsim-quantumsim",
    "keywords": "dqcsim quantumsim",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dqcsim-quantumsim",
    "package_url": "https://pypi.org/project/dqcsim-quantumsim/",
    "platform": "",
    "project_url": "https://pypi.org/project/dqcsim-quantumsim/",
    "project_urls": {
      "Homepage": "https://github.com/QE-Lab/dqcsim-quantumsim"
    },
    "release_url": "https://pypi.org/project/dqcsim-quantumsim/0.0.5/",
    "requires_dist": [
      "dqcsim (>=0.2.0)",
      "quantumsim (==0.2)"
    ],
    "requires_python": "",
    "summary": "DQCsim backend for QuantumSim.",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7241391,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "673e48701033a6cab06e832374f2e522128180c929a915fb93709934781d29b4",
          "md5": "1f03425485be626642efaa8c7ba4568c",
          "sha256": "6dd94edb288d912a9956d59c32ed00dced8b984fa07ce3267b1000f1615fd4f5"
        },
        "downloads": -1,
        "filename": "dqcsim_quantumsim-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f03425485be626642efaa8c7ba4568c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17489,
        "upload_time": "2019-05-25T18:25:36",
        "upload_time_iso_8601": "2019-05-25T18:25:36.748094Z",
        "url": "https://files.pythonhosted.org/packages/67/3e/48701033a6cab06e832374f2e522128180c929a915fb93709934781d29b4/dqcsim_quantumsim-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "599618fa03cbc11fcb9d373f03d146afda7512f325fc190375080bff6bb4eed1",
          "md5": "ef87e63ab6d4625f8c52ea4a9b73881f",
          "sha256": "5b6364247314bae9a45435d1ac25d54350de487f7f1e1a355712205e55eed04c"
        },
        "downloads": -1,
        "filename": "dqcsim_quantumsim-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef87e63ab6d4625f8c52ea4a9b73881f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17666,
        "upload_time": "2020-01-20T10:57:04",
        "upload_time_iso_8601": "2020-01-20T10:57:04.599675Z",
        "url": "https://files.pythonhosted.org/packages/59/96/18fa03cbc11fcb9d373f03d146afda7512f325fc190375080bff6bb4eed1/dqcsim_quantumsim-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed964964b68242c09b00d992422f243fc1d2aea10155b84e1385152846ee92d2",
          "md5": "6df4343c9789fefca43e13c4a549d4d0",
          "sha256": "d6d4b9eac9fe9f8a36b46ac5067ed87b37fe8971e5e76915b43c49902f327867"
        },
        "downloads": -1,
        "filename": "dqcsim_quantumsim-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6df4343c9789fefca43e13c4a549d4d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6283,
        "upload_time": "2020-01-20T16:35:29",
        "upload_time_iso_8601": "2020-01-20T16:35:29.916878Z",
        "url": "https://files.pythonhosted.org/packages/ed/96/4964b68242c09b00d992422f243fc1d2aea10155b84e1385152846ee92d2/dqcsim_quantumsim-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8342ced418be0b7c4bac04154ce9e3953fd9c8ffb93ef6eb6827b54ec0d4ffb",
          "md5": "b61acfb0e1e1862f0949402465228095",
          "sha256": "643ecf639607987fdd1c6fddcb136483729bd8a7582c461c1772967f5063ed1d"
        },
        "downloads": -1,
        "filename": "dqcsim_quantumsim-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b61acfb0e1e1862f0949402465228095",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20129,
        "upload_time": "2020-01-30T10:00:48",
        "upload_time_iso_8601": "2020-01-30T10:00:48.996716Z",
        "url": "https://files.pythonhosted.org/packages/a8/34/2ced418be0b7c4bac04154ce9e3953fd9c8ffb93ef6eb6827b54ec0d4ffb/dqcsim_quantumsim-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1edfe07dc2905cb7575f26a5ef8b2b291fbb8af976b0436c32b7c24b5c11b810",
          "md5": "02b66f334278815ab2f4b50cfda2237b",
          "sha256": "4d844f864a8a1ce4b7bfaae88914f633579db912711cdcb9401284b135c0ff6d"
        },
        "downloads": -1,
        "filename": "dqcsim_quantumsim-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "02b66f334278815ab2f4b50cfda2237b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21455,
        "upload_time": "2020-05-14T15:32:49",
        "upload_time_iso_8601": "2020-05-14T15:32:49.741963Z",
        "url": "https://files.pythonhosted.org/packages/1e/df/e07dc2905cb7575f26a5ef8b2b291fbb8af976b0436c32b7c24b5c11b810/dqcsim_quantumsim-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1edfe07dc2905cb7575f26a5ef8b2b291fbb8af976b0436c32b7c24b5c11b810",
        "md5": "02b66f334278815ab2f4b50cfda2237b",
        "sha256": "4d844f864a8a1ce4b7bfaae88914f633579db912711cdcb9401284b135c0ff6d"
      },
      "downloads": -1,
      "filename": "dqcsim_quantumsim-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "02b66f334278815ab2f4b50cfda2237b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 21455,
      "upload_time": "2020-05-14T15:32:49",
      "upload_time_iso_8601": "2020-05-14T15:32:49.741963Z",
      "url": "https://files.pythonhosted.org/packages/1e/df/e07dc2905cb7575f26a5ef8b2b291fbb8af976b0436c32b7c24b5c11b810/dqcsim_quantumsim-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}