{
  "info": {
    "author": "Aziz Kaplan",
    "author_email": "AzizKpln@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# RBAPG\n\n# ![](module_image/RBAPG.png)\n\n->RBAPG is the abbreviation of \"Rule Based Attack Password Generator\".\n\n->This module is a wordlist generator module.\n\n->You can generate randomly password(like crunch tool in kali linux) or you can generate a personalized password list.\n\n\n# MODULE USAGE\n\n* INSTALL The Module\n\n> pip3 install RBAPG\n\n* Call The Module\n\n> import RBAPG\n\n> RBAPG=RBAPG.RuleBasedAttackPasswordGenerator()\n\n* Set the length of password\n\n> RBAPG.setLengthOfGeneratedPassword(min2-max5)\n\n* Set the wordlist content\n> RBAPG.wordlist=\"name surname year etc.\"\n\n* Generate the wordlist:\n> RBAPG.generate_wordlist()\n\n--------------------------------------------------------------------------------------------\n# OPTIONAL STEPS:\n\n* Aziz's combination algorithm. It's based on changing some certain indexes of password in the wordlist.\n\n> RBAPG.CombineCozily()\n\n* Tries the every combination of each password in the wordlist.\n* Note:Not recommended for a huge content of wordlist.\n> RBAPG.CombineTheWords()\n\n# Example Usage\n```\nimport RBAPG\n\nRBAPG=RBAPG.RuleBasedAttackPasswordGenerator() #Set the class in a variable.\n\nRBAPG.setLengthOfGeneratedPassword(4)           #Set the length of generated password(if you say 4,\n                                                #this means the length of password can be a maximum of 4 strings long.)\n                                                #Note:this function takes min 2 max 5 int value\n\nRBAPG.setWordlistName(\"Aziz.txt\")               #set a name for wordlist. If you leave it blank, default name will be wordlist.txt\n\nRBAPG.wordlist=\"Aziz Kaplan 2001\"               #set a content for wordlist. If you leave it blank, default content will be 'You haven't specified a wordlist'\n\n#RBAPG.CombineCozily()                          #This function is optional. You don't have to write it in your codes but if you do,\n                                                #it'll generate the password with combining a certain algoritgm.\n\n#RBAPG.CombineTheWords()                        #This function is optional, tries the every combination of each word in the wordlist.\n                                                #This function is not recommended for a huge content of wordlist.\n                                                #Because it tries the every combination of passwords which wordlist contains.\n\nRBAPG.generate_wordlist()                       #Generate the wordlist\n```\n\n# Example Script:\n> https://github.com/AzizKpln/RBAPG-WORDLIST_GENERATOR",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AzizKpln/RBAPG",
    "keywords": "",
    "license": "GPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "RBAPG",
    "package_url": "https://pypi.org/project/RBAPG/",
    "platform": "",
    "project_url": "https://pypi.org/project/RBAPG/",
    "project_urls": {
      "Homepage": "https://github.com/AzizKpln/RBAPG"
    },
    "release_url": "https://pypi.org/project/RBAPG/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "READ THE README.MD FILE PLEASE",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10059781,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65927c10ec7babbae6deff69532870b1b911bfff7efe213b6e678ae2b3d54f30",
          "md5": "9f1e620babaac8d520eb2637245e27d5",
          "sha256": "152e2a69491789ae4da6ada48078948da7f318a941505478e865eb17df8d44ff"
        },
        "downloads": -1,
        "filename": "RBAPG-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9f1e620babaac8d520eb2637245e27d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4203,
        "upload_time": "2021-04-14T07:57:21",
        "upload_time_iso_8601": "2021-04-14T07:57:21.573984Z",
        "url": "https://files.pythonhosted.org/packages/65/92/7c10ec7babbae6deff69532870b1b911bfff7efe213b6e678ae2b3d54f30/RBAPG-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "65927c10ec7babbae6deff69532870b1b911bfff7efe213b6e678ae2b3d54f30",
        "md5": "9f1e620babaac8d520eb2637245e27d5",
        "sha256": "152e2a69491789ae4da6ada48078948da7f318a941505478e865eb17df8d44ff"
      },
      "downloads": -1,
      "filename": "RBAPG-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9f1e620babaac8d520eb2637245e27d5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4203,
      "upload_time": "2021-04-14T07:57:21",
      "upload_time_iso_8601": "2021-04-14T07:57:21.573984Z",
      "url": "https://files.pythonhosted.org/packages/65/92/7c10ec7babbae6deff69532870b1b911bfff7efe213b6e678ae2b3d54f30/RBAPG-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}