{
  "info": {
    "author": "wangxup",
    "author_email": "wang_xup@163.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# 将tree.export_graphviz构建决策树代码转换为标准sql\n## 1. 工具简介\n通常我们会采用`sklearn`框架`tree`模块进行决策树相关的挖掘分析，并使用`tree.export_graphviz`将决策树过程导出为`graphviz.dot`文件\n再配合外部程序`graphviz`进行画图。  \n但在有些时候，我们会根据决策树图形来抽取关键路径，将其翻译成标准`sql`，部署在数据库当中，持续化产生价值。  \n目前`sklearn`暂未提供此功能，故我们开发此插件来进行完善。\n\n## 2. 安装环境、依赖\n- 安装方法:支持在线安装或离线安装\n    - [download](https://pypi.org/project/graphviz-sql/)  \n> pip install graphviz_sql\n- 内部依赖\n\t- sklearn\n- 外部依赖\n\t- [Graphviz](https://graphviz.gitlab.io/download/):找到适合自己版本下载即可\n\n\n\n## 3. 一个简单的示例\n#### 将`tree.export_graphviz`输出结果转换为标准`sql` \n\n**`tree.export_graphviz`参数说明**  \n为了能够准确的输出决策树规则，方法`tree.export_graphviz`当中一下参数必须设置成以下形式。其余参数使用默认的即可。\n- `feature_names`：特征名称，顺序必须和训练样本的数据一致  \n- `class_names`：类别名称，输入的时候，必须要排序。如将原来的['1', '0']设置为['0', '1']，注意：数据类型必须为`str`型的。  \n- `filled`：填充，必须为`True`  \n- `node_ids`：节点id，必须为`True`  \n- `rounded`：画的图形边缘是否美化，必须为`True`  \n- `special_characters`：必须为`True`\n\n=========================\n### eg:\n```python\nimport pandas as pd\nimport numpy as np\nfrom sklearn import tree\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.datasets import load_iris\niris = load_iris()\nclf = tree.DecisionTreeClassifier()\n\nfeature_names = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width']\ndata = pd.DataFrame(iris.data, columns=feature_names)\ndata['target'] = iris.target\nX_train, X_test, y_train, y_test = train_test_split(\n                   data[feature_names], data['target'], test_size=0.33, random_state=42)\nclf = clf.fit(data[feature_names], data['target'])\n# tree_rule_2.txt为输出文件的路径\ntree.export_graphviz(model,out_file='tree_rule.dot',\n                            feature_names=feture_selected_res,\n                            class_names=['0', '1'],\n                            filled=True,\n                            node_ids=True,\n                            rounded=True,\n                            special_characters=True)\n\n\n# 调用插件  \nfrom graphviz_sql.extract import to_sql \n\n# tree_rule.txt: 通过决策树生成的用于graphviz画图的文件路径\n# tree_rule_2.sql: 转换后的sql文件路径 \nto_sql('tree_rule.dot', 'tree_rule_2.sql')\n```\n# 4. 代码原理\n通过一种反向搜索的方法遍历决策树结果，将结果转换成标准sql\n# 5. 常见问题说明\n- 乱码\n\t- 此问题可百度一下，网上有具体的处理办法，\n\t- 其它问题请及时反馈\n    \n## 6. 加入进来\n强大的工具需要你我共同完善，期待技术大佬的加入。\n\n- email:\n> wang_xup@163.com  \n> 857956556@qq.com",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/WangxuP/graphviz_sql",
    "keywords": "None",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "graphviz-sql",
    "package_url": "https://pypi.org/project/graphviz-sql/",
    "platform": "any",
    "project_url": "https://pypi.org/project/graphviz-sql/",
    "project_urls": {
      "Homepage": "https://github.com/WangxuP/graphviz_sql"
    },
    "release_url": "https://pypi.org/project/graphviz-sql/0.1.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "将tree.export_graphviz构建决策树代码转换为标准sql",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6354175,
  "releases": {
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ea497f5cf1064206efe8e7fa0cfb766581de87282b44f186a5fc8a46cbb75d3",
          "md5": "2d6fcca40792e2ce222c9f92f4a24af7",
          "sha256": "2ed5a525cecb2e81f46a4a75492ee8cdb6113ff6309133cc39809388179774e3"
        },
        "downloads": -1,
        "filename": "graphviz_sql-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "2d6fcca40792e2ce222c9f92f4a24af7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5245,
        "upload_time": "2019-12-24T07:57:16",
        "upload_time_iso_8601": "2019-12-24T07:57:16.644698Z",
        "url": "https://files.pythonhosted.org/packages/2e/a4/97f5cf1064206efe8e7fa0cfb766581de87282b44f186a5fc8a46cbb75d3/graphviz_sql-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ea497f5cf1064206efe8e7fa0cfb766581de87282b44f186a5fc8a46cbb75d3",
        "md5": "2d6fcca40792e2ce222c9f92f4a24af7",
        "sha256": "2ed5a525cecb2e81f46a4a75492ee8cdb6113ff6309133cc39809388179774e3"
      },
      "downloads": -1,
      "filename": "graphviz_sql-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "2d6fcca40792e2ce222c9f92f4a24af7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5245,
      "upload_time": "2019-12-24T07:57:16",
      "upload_time_iso_8601": "2019-12-24T07:57:16.644698Z",
      "url": "https://files.pythonhosted.org/packages/2e/a4/97f5cf1064206efe8e7fa0cfb766581de87282b44f186a5fc8a46cbb75d3/graphviz_sql-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}