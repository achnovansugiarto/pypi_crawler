{
  "info": {
    "author": "Jonathan R. Madsen",
    "author_email": "jrmadsen@lbl.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: GPU",
      "Environment :: GPU :: NVIDIA CUDA",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: BSD",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: C++",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# pykokkos-base\n\n> Additional Documentation can be found in [Wiki](https://github.com/kokkos/pykokkos-base/wiki)\n\n## Overview\n\nThis package contains the minimal set of bindings for [Kokkos](https://github.com/kokkos/kokkos)\ninteroperability with Python:\n\n- Free-standing function bindings\n    - `Kokkos::initialize(...)`\n    - `Kokkos::finalize()`\n    - `Kokkos::is_initialized()`\n    - `Kokkos::deep_copy(...)`\n    - `Kokkos::create_mirror(...)`\n    - `Kokkos::create_mirror_view(...)`\n    - `Kokkos::Tools::profileLibraryLoaded()`\n    - `Kokkos::Tools::pushRegion(...)`\n    - `Kokkos::Tools::popRegion()`\n    - `Kokkos::Tools::createProfileSection(...)`\n    - `Kokkos::Tools::destroyProfileSection(...)`\n    - `Kokkos::Tools::startSection(...)`\n    - `Kokkos::Tools::stopSection(...)`\n    - `Kokkos::Tools::markEvent(...)`\n    - `Kokkos::Tools::declareMetadata(...)`\n    - `Kokkos::Tools::Experimental::set_<...>_callback(...)`\n- Data structures\n    - `Kokkos::View<...>`\n    - `Kokkos::DynRankView<...>`\n    - `Kokkos_Profiling_KokkosPDeviceInfo`\n    - `Kokkos_Profiling_SpaceHandle`\n\nBy importing this package in Python, you can pass the supported Kokkos Views and DynRankViews\nfrom C++ to Python and vice-versa. Furthermore, in Python, these bindings provide interoperability\nwith numpy and cupy arrays:\n\n```python\nimport kokkos\nimport numpy as np\n\nview = kokkos.array([2, 2], dtype=kokkos.double, space=kokkos.CudaUVMSpace,\n                    layout=kokkos.LayoutRight, trait=kokkos.RandomAccess,\n                    dynamic=False)\n\narr = np.array(view, copy=False)\n```\n\n## Writing Kokkos in Python\n\nIn order to write native Kokkos in Python, see [pykokkos](https://github.com/kokkos/pykokkos).\n\n## Installation\n\nYou can install this package via CMake or Python's `setup.py`. The important cmake options are:\n\n- `ENABLE_VIEW_RANKS` (integer)\n- `ENABLE_LAYOUTS` (bool)\n- `ENABLE_MEMORY_TRAITS` (bool)\n- `ENABLE_INTERNAL_KOKKOS` (bool)\n\nBy default, CMake will enable the layouts and memory traits options if the Kokkos installation was not\nbuilt with CUDA support.\nIf Kokkos was built with CUDA support, `ENABLE_MEMORY_TRAITS` will be disabled by default due to unreasonable\ncompilation times (> 1 hour).\nThe `ENABLE_VIEW_RANKS` option (defaults to a value of 4) is the max number of ranks for\n`Kokkos::View<...>` that can be returned to Python. For example, value of 4 means that\nviews of data type `T*`, `T**`, `T***`, and `T****` can be returned to python but\n`T*****` and higher cannot. Increasing this value up to 7 can dramatically increase the length\nof time required to compile the bindings.\n\n### Kokkos Installation\n\nIf the `ENABLE_INTERNAL_KOKKOS` option is not specified the first time CMake is run, CMake will try to\nfind an existing Kokkos installation. If no existing installation is found, it will build and install\nKokkos from a submodule. When Kokkos is added as a submodule, you can configure the submodule\nas you would normally configure Kokkos. However, due to some general awkwardness configuring cmake\nfrom `setup.py` (especially via `pip install`), CMake tries to \"automatically\" configure\nreasonable default CMake settings for the Kokkos submodule.\n\nHere are the steps when Kokkos is added as a submodule:\n\n- Does `external/kokkos/CMakeLists.txt` exists?\n    - **YES**: assumes the submodule is already checked out\n        - > _If compute node does not have internet access, checkout submodule before installing!_\n    - **NO**: does `.gitmodules` exist?\n        - **YES**: `git submodule update --init external/kokkos`\n        - **NO**: `git clone -b master https://github.com/kokkos/kokkos.git external/kokkos`\n- Set `BUILD_SHARED_LIBS=ON`\n- Set `Kokkos_ENABLE_SERIAL=ON`\n- `find_package(OpenMP)`\n    - Was OpenMP found?\n        - **YES**: set `Kokkos_ENABLE_OPENMP=ON`\n        - **NO**: `find_package(Threads)`\n            - Was Threads found?\n                - **YES**: set `Kokkos_ENABLE_THREADS=ON` (if not Windows)\n- `find_package(CUDA)`\n    - Was CUDA found?\n        - **YES**: set:\n            - `Kokkos_ENABLE_CUDA=ON`\n            - `Kokkos_ENABLE_CUDA_UVM=ON`\n            - `Kokkos_ENABLE_CUDA_LAMBDA=ON`\n\n### Configuring Options via CMake\n\n```console\ncmake -DENABLE_LAYOUTS=ON -DENABLE_MEMORY_TRAITS=OFF /path/to/source\n```\n\n### Configuring Options via `setup.py`\n\nThere are three ways to configure the options:\n\n1. Via the Python argparse options `--enable-<option>` and `--disable-<option>`\n2. Setting the `PYKOKKOS_BASE_SETUP_ARGS` environment variable to the CMake options\n3. Passing in the CMake options after a `--`\n\nAll three lines below are equivalent:\n\n```console\npython setup.py install --enable-layouts --disable-memory-traits\nPYKOKKOS_BASE_SETUP_ARGS=\"-DENABLE_LAYOUTS=ON -DENABLE_MEMORY_TRAITS=OFF\" python setup.py install\npython setup.py install -- -DENABLE_LAYOUTS=ON -DENABLE_MEMORY_TRAITS=OFF\n```\n\n### Configuring Options via `pip`\n\nPip does not handle build options well. Thus, it is recommended to use the `PYKOKKOS_BASE_SETUP_ARGS`\nenvironment variable noted above. However, using the `--install-option` for pip is possible but\neach \"space\" must have it's own `--install-option`, e.g. all of the following are equivalent:\nAll three lines below are equivalent:\n\n```console\npip install pykokkos-base --install-option=--enable-layouts --install-option=--disable-memory-traits\npip install pykokkos-base --install-option=-- --install-option=-DENABLE_LAYOUTS=ON --install-option=-DENABLE_MEMORY_TRAITS=OFF\npip install pykokkos-base --install-option={--enable-layouts,--disable-memory-traits}\npip install pykokkos-base --install-option={--,-DENABLE_LAYOUTS=ON,-DENABLE_MEMORY_TRAITS=OFF}\n```\n\n> `pip install pykokkos-base` will build against the latest release in the PyPi repository.\n> In order to pip install from this repository, use `pip install --user -e .`\n\n## Differences vs. Kokkos C++\n\n### Deep Copy and Host Mirror\n\nIf you are not familiar with `Kokkos::deep_copy(...)`, `Kokkos::create_mirror(...)`, `Kokkos::create_mirror_view(...)`, read this\n[Kokkos Wiki entry](https://github.com/kokkos/kokkos/wiki/View#643-deep-copy-and-hostmirror).\n\nWhen Kokkos views are allocated on a non-host memory space, this data is not directly accessible in Python. Any\nattempt to read or modify the data will result in a fatal error. In C++, Kokkos developers usually\nperform two distinct operations: create a mirror or mirror-view and then execute a deep-copy, e.g.:\n\n```cpp\n// assume MemorySpace is Kokkos::Cuda or similar\nKokkos::View<int*, MemorySpace> a (\"a\", 10);\n\n// Allocate a view in HostSpace with the layout and padding of a\nauto b = create_mirror(a);\n// This is always a memcopy\nKokkos::deep_copy (b, a);\n\n// This may not allocate a new view if a is in host space\nauto c = Kokkos::create_mirror_view(a);\n// This is a no-op if MemorySpace is HostSpace\nKokkos::deep_copy (c, a)\n```\n\nThe python equivalent is available via standalone functions:\n\n```python\n# assume MemorySpace is kokkos.CudaSpace or similar\na = kokkos.array(\"a\", shape=[10], space=MemorySpace)\n\n# Allocate a view in HostSpace with the layout and padding of a\nb = kokkos.create_mirror(a)\n# copy memory\nkokkos.deep_copy(b, a)\n\n# This may not allocate a new view if a is in host space\nc = kokkos.create_mirror_view(a)\n# This is a no-op if MemorySpace is HostSpace\nkokkos.deep_copy(c, a)\n```\n\nHowever, this makes it cumbersome to print data in python:\n\n```python\n# assume MemorySpace is kokkos.CudaSpace or similar\na = kokkos.array(\"a\", shape=[10], space=MemorySpace)\n\ndef print_data(inp):\n    v = kokkos.create_mirror_view(inp)\n    kokkos.deep_copy(v, inp)\n    for i in range(v.shape[0]):\n        print(f\"v({i}) = {v[i]}\")\n\nprint_data(a)\n```\n\nThus, the _member functions_ `create_mirror()` and `create_mirror_view()` accept a boolean\n`copy` argument which **defaults to True**, e.g.:\n\n```python\na = kokkos.array(\"a\", shape=[10], space=MemorySpace)\n\n# this:\nb = a.create_mirror()\n\n# is implicitly:\nb = a.create_mirror(copy=True)\n```\n\nThus, our `print_data` function above does not need handle mirror creation because\nwe can replace `print_data(a)` with `print_data(a.create_mirror())` or `print_data(a.create_mirror_view())`:\n\n```python\n# assume MemorySpace is kokkos.CudaSpace or similar\na = kokkos.array(\"a\", shape=[10], space=MemorySpace)\n\ndef print_data(v):\n    for i in range(v.shape[0]):\n        print(f\"v({i}) = {v[i]}\")\n\nprint_data(a.create_mirror_view())\n```\n\nIn fact, the free-standing `kokkos.create_mirror(...)` and `kokkoos.create_mirror_view(...)` simply use this member function\nand default the `copy` argument to `False`:\n\n```python\ndef create_mirror(src, copy=False):\n    \"\"\"Performs Kokkos::create_mirror\"\"\"\n    return src.create_mirror(copy)\n\n\ndef create_mirror_view(src, copy=False):\n    \"\"\"Performs Kokkos::create_mirror_view\"\"\"\n    return src.create_mirror_view(copy)\n```\n\n## Example\n\n### Overview\n\nThis example is designed to emulate a work-flow where the user has code using Kokkos in C++ and writes python bindings to those functions. A python script is used as the `\"main\"`:\n\n- `ex-numpy.py` imports the kokkos bindings\n- Calls a routine in the \"users\" python bindings to a C++ function which returns a `Kokkos::View`\n- This view is then converted to a numpy array in python and printed via the numpy capabilities.\n\n### Files\n\n- [ex-generate.cpp](https://github.com/kokkos/kokkos-python/blob/main/examples/ex-generate.cpp)\n  - This is the python bindings to the user code\n- [user.cpp](https://github.com/kokkos/kokkos-python/blob/main/examples/user.cpp)\n  - This is the implementation of the user's code which returns a `Kokkos::View<double**, Kokkos::HostSpace>`\n- [ex-numpy.py](https://github.com/kokkos/kokkos-python/blob/main/examples/ex-numpy.py)\n  - This is the \"main\"\n\n#### ex-numpy.py\n\n```python\n#!/usr/bin/env python\n\nimport argparse\nimport numpy as np\n\n#\n# The python bindings for generate_view are in ex-generate.cpp\n# The declaration and definition of generate_view are in user.hpp and user.cpp\n# The generate_view function will return a Kokkos::View and will be converted\n# to a numpy array\nfrom ex_generate import generate_view, modify_view\n\n#\n# Importing this module is necessary to call kokkos init/finalize and\n# import the python bindings to Kokkos::View which generate_view will\n# return\n#\nimport kokkos\n\n\ndef print_data(label, name, data):\n    # write the type info\n    print(\n        \"{:12} : {} (ndim={}, shape={})\".format(\n            label, type(data).__name__, data.ndim, data.shape\n        )\n    )\n\n    # print the data\n    if data.ndim == 1:\n        for i in range(data.shape[0]):\n            print(\"{:8}({}) = {}\".format(name, i, data[i]))\n    elif data.ndim == 2:\n        for i in range(data.shape[0]):\n            print(\n                \"{:8}({}) = [{}]\".format(\n                    name,\n                    i,\n                    \" \".join(\"{}\".format(data[i, j]) for j in range(data.shape[1])),\n                )\n            )\n    else:\n        raise ValueError(\"only 2 dimensions are supported\")\n\n\ndef user_bindings(args):\n    # get the kokkos view\n    view = generate_view(args.ndim)\n    print_data(\"Kokkos View\", \"view\", view.create_mirror_view())\n\n    # modify view (verify that casting works)\n    modify_view(view)\n    print_data(\"Modify View\", \"view\", view.create_mirror_view())\n\n    # wrap the buffer protocal as numpy array without copying the data\n    arr = np.array(view.create_mirror_view(), copy=False)\n    print_data(\"Numpy Array\", \"arr\", arr)\n\n\ndef to_numpy(args):\n    # get the kokkos view\n    view = kokkos.array(\n        \"python_allocated_view\",\n        [args.ndim],\n        dtype=kokkos.double,\n        space=kokkos.DefaultHostMemorySpace,\n    )\n\n    for i in range(view.shape[0]):\n        view[i] = i * (i % 2)\n    print_data(\"Kokkos View\", \"view\", view)\n\n    # wrap the buffer protocal as numpy array without copying the data\n    arr = np.array(view, copy=False)\n    print_data(\"Numpy Array\", \"arr\", arr)\n\n\ndef from_numpy(args):\n    arr = np.ones([args.ndim, args.ndim], dtype=np.int32)\n    for i in range(args.ndim):\n        arr[i, i] = 0\n\n    print_data(\"Numpy Array\", \"arr\", arr)\n\n    view = kokkos.array(arr, dtype=kokkos.int32, dynamic=True)\n    print_data(\"Kokkos View\", \"view\", view)\n\n\nif __name__ == \"__main__\":\n    try:\n        kokkos.initialize()\n        parser = argparse.ArgumentParser()\n        parser.add_argument(\"-n\", \"--ndim\", default=10, help=\"X dimension\", type=int)\n        args, argv = parser.parse_known_args()\n        print(\"Executing to numpy...\")\n        to_numpy(args)\n        print(\"Executing from numpy...\")\n        from_numpy(args)\n        print(\"Executing user bindings...\")\n        user_bindings(args)\n        kokkos.finalize()\n    except Exception as e:\n        import sys\n        import traceback\n\n        print(f\"{e}\")\n        exc_type, exc_value, exc_traceback = sys.exc_info()\n        traceback.print_exception(exc_type, exc_value, exc_traceback)\n        sys.exit(1)\n```\n\n### Build and Run\n\n```console\nmkdir build\ncd build\ncmake -DENABLE_EXAMPLES=ON ..\nmake\npython ./ex-numpy.py\n```\n\n### Expected Output\n\n```console\n[user-bindings]> Generating View... Done.\n[user-bindings]> Modifying View... Done.\nExecuting to numpy...\nKokkos View  : KokkosView_float64_HostSpace_LayoutRight_1 (ndim=1, shape=[10])\nview    (0) = 0.0\nview    (1) = 1.0\nview    (2) = 0.0\nview    (3) = 3.0\nview    (4) = 0.0\nview    (5) = 5.0\nview    (6) = 0.0\nview    (7) = 7.0\nview    (8) = 0.0\nview    (9) = 9.0\nNumpy Array  : ndarray (ndim=1, shape=(10,))\narr     (0) = 0.0\narr     (1) = 1.0\narr     (2) = 0.0\narr     (3) = 3.0\narr     (4) = 0.0\narr     (5) = 5.0\narr     (6) = 0.0\narr     (7) = 7.0\narr     (8) = 0.0\narr     (9) = 9.0\nExecuting from numpy...\nNumpy Array  : ndarray (ndim=2, shape=(10, 10))\narr     (0) = [0 1 1 1 1 1 1 1 1 1]\narr     (1) = [1 0 1 1 1 1 1 1 1 1]\narr     (2) = [1 1 0 1 1 1 1 1 1 1]\narr     (3) = [1 1 1 0 1 1 1 1 1 1]\narr     (4) = [1 1 1 1 0 1 1 1 1 1]\narr     (5) = [1 1 1 1 1 0 1 1 1 1]\narr     (6) = [1 1 1 1 1 1 0 1 1 1]\narr     (7) = [1 1 1 1 1 1 1 0 1 1]\narr     (8) = [1 1 1 1 1 1 1 1 0 1]\narr     (9) = [1 1 1 1 1 1 1 1 1 0]\nKokkos View  : KokkosDynRankView_int32_HostSpace_LayoutRight (ndim=2, shape=[10, 10, 1, 1, 1, 1, 1])\nview    (0) = [0 1 1 1 1 1 1 1 1 1]\nview    (1) = [1 0 1 1 1 1 1 1 1 1]\nview    (2) = [1 1 0 1 1 1 1 1 1 1]\nview    (3) = [1 1 1 0 1 1 1 1 1 1]\nview    (4) = [1 1 1 1 0 1 1 1 1 1]\nview    (5) = [1 1 1 1 1 0 1 1 1 1]\nview    (6) = [1 1 1 1 1 1 0 1 1 1]\nview    (7) = [1 1 1 1 1 1 1 0 1 1]\nview    (8) = [1 1 1 1 1 1 1 1 0 1]\nview    (9) = [1 1 1 1 1 1 1 1 1 0]\nExecuting user bindings...\nKokkos View  : KokkosView_float64_HostSpace_LayoutRight_2 (ndim=2, shape=[10, 2])\nview    (0) = [-1.0 1.0]\nview    (1) = [-2.0 2.0]\nview    (2) = [-3.0 3.0]\nview    (3) = [-4.0 4.0]\nview    (4) = [-5.0 5.0]\nview    (5) = [-6.0 6.0]\nview    (6) = [-7.0 7.0]\nview    (7) = [-8.0 8.0]\nview    (8) = [-9.0 9.0]\nview    (9) = [-10.0 10.0]\nModify View  : KokkosView_float64_HostSpace_LayoutRight_2 (ndim=2, shape=[10, 2])\nview    (0) = [-2.0 2.0]\nview    (1) = [-4.0 4.0]\nview    (2) = [-6.0 6.0]\nview    (3) = [-8.0 8.0]\nview    (4) = [-10.0 10.0]\nview    (5) = [-12.0 12.0]\nview    (6) = [-14.0 14.0]\nview    (7) = [-16.0 16.0]\nview    (8) = [-18.0 18.0]\nview    (9) = [-20.0 20.0]\nNumpy Array  : ndarray (ndim=2, shape=(10, 2))\narr     (0) = [-2.0 2.0]\narr     (1) = [-4.0 4.0]\narr     (2) = [-6.0 6.0]\narr     (3) = [-8.0 8.0]\narr     (4) = [-10.0 10.0]\narr     (5) = [-12.0 12.0]\narr     (6) = [-14.0 14.0]\narr     (7) = [-16.0 16.0]\narr     (8) = [-18.0 18.0]\narr     (9) = [-20.0 20.0]\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "http://github.com/kokkos/kokkos-python.git",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/kokkos/kokkos-python",
    "keywords": "kokkos,parallelism,performance,performance portability,gpu,cuda,hip,rocm,hpx,openmp,openmptarget,sycl,serial",
    "license": "BSD 3-Clause License",
    "maintainer": "Jonathan R. Madsen",
    "maintainer_email": "jrmadsen@lbl.gov",
    "name": "pykokkos-base",
    "package_url": "https://pypi.org/project/pykokkos-base/",
    "platform": null,
    "project_url": "https://pypi.org/project/pykokkos-base/",
    "project_urls": {
      "Download": "http://github.com/kokkos/kokkos-python.git",
      "Homepage": "http://github.com/kokkos/kokkos-python",
      "kokkos": "https://github.com/kokkos/kokkos"
    },
    "release_url": "https://pypi.org/project/pykokkos-base/0.0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python bindings to Kokkos Views for data interop",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13656303,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db28be9bbf55f8e1ea4f762ab8a3dbdb57b85804d43ddc11fe427311660e1a03",
          "md5": "76d45e0e8fb49d9b0b6efbc9bff0e7c0",
          "sha256": "43c5e6a85a241b76ea2ef28e2abfc39490f7d348b9c98c1963f7e9948ab88b6b"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "76d45e0e8fb49d9b0b6efbc9bff0e7c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 606960,
        "upload_time": "2021-05-12T07:53:41",
        "upload_time_iso_8601": "2021-05-12T07:53:41.322795Z",
        "url": "https://files.pythonhosted.org/packages/db/28/be9bbf55f8e1ea4f762ab8a3dbdb57b85804d43ddc11fe427311660e1a03/pykokkos-base-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e91b6fb7ba78b02cb5d00010b52f7a0abf0cad6444b4053077b0aea6de9b4e71",
          "md5": "8eac58a5a47fc1bf21dfd653789dacd0",
          "sha256": "489251b5d4674f5eede24288242c2d061299a76439aa6c4653ea416821169581"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.2.tar.gz",
        "has_sig": true,
        "md5_digest": "8eac58a5a47fc1bf21dfd653789dacd0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 601525,
        "upload_time": "2021-05-12T08:38:40",
        "upload_time_iso_8601": "2021-05-12T08:38:40.707199Z",
        "url": "https://files.pythonhosted.org/packages/e9/1b/6fb7ba78b02cb5d00010b52f7a0abf0cad6444b4053077b0aea6de9b4e71/pykokkos-base-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fda440465d21199e4affbeaff7cd43ad62a30d9133fe165ac7ef830b3c9a58a",
          "md5": "71e4ad77096821e8d5b4847d6c8a731f",
          "sha256": "eccdfd2a06ea1a4b96768d050e3316b66b8025488e493b34b1da636744b5bcc9"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.2rc0.tar.gz",
        "has_sig": true,
        "md5_digest": "71e4ad77096821e8d5b4847d6c8a731f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 600629,
        "upload_time": "2021-05-12T08:05:21",
        "upload_time_iso_8601": "2021-05-12T08:05:21.287875Z",
        "url": "https://files.pythonhosted.org/packages/8f/da/440465d21199e4affbeaff7cd43ad62a30d9133fe165ac7ef830b3c9a58a/pykokkos-base-0.0.2rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef4718cf8abf1f7d9a2ba4ef73c86a75db994837be0ea0d2189227299d776bcc",
          "md5": "1aa3deb575333af019bb75768882a029",
          "sha256": "082d8c05cd4493fd45359170cde076431c88fced6ba4c6d737cb4cdfda4c81fe"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.3.tar.gz",
        "has_sig": true,
        "md5_digest": "1aa3deb575333af019bb75768882a029",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 601518,
        "upload_time": "2021-05-12T08:42:19",
        "upload_time_iso_8601": "2021-05-12T08:42:19.867014Z",
        "url": "https://files.pythonhosted.org/packages/ef/47/18cf8abf1f7d9a2ba4ef73c86a75db994837be0ea0d2189227299d776bcc/pykokkos-base-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "223779ab31748ed14191ed63d747f672003bdab0e298f3fd6d26b96278422fbb",
          "md5": "46ae26210925b068c2c7324ae8b4f486",
          "sha256": "068bb1e416f44011e51adf1d82e9f3aab299bc9757f5b244b37c095f0a383429"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.4.tar.gz",
        "has_sig": true,
        "md5_digest": "46ae26210925b068c2c7324ae8b4f486",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 602793,
        "upload_time": "2021-05-13T08:21:30",
        "upload_time_iso_8601": "2021-05-13T08:21:30.503790Z",
        "url": "https://files.pythonhosted.org/packages/22/37/79ab31748ed14191ed63d747f672003bdab0e298f3fd6d26b96278422fbb/pykokkos-base-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c0dbc2bbb5449c1d5ceed7f6ccbd61b03e873e738c2d6dca257e1cbb6092e0c",
          "md5": "a764fa744e1894c3ece32390fad06013",
          "sha256": "c2c8870398cff10193383bb0733b1b6a2b67c4ef33241ba8de795299136a22da"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.5.tar.gz",
        "has_sig": true,
        "md5_digest": "a764fa744e1894c3ece32390fad06013",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2734530,
        "upload_time": "2021-06-01T08:53:17",
        "upload_time_iso_8601": "2021-06-01T08:53:17.138696Z",
        "url": "https://files.pythonhosted.org/packages/8c/0d/bc2bbb5449c1d5ceed7f6ccbd61b03e873e738c2d6dca257e1cbb6092e0c/pykokkos-base-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f723500de28f369e95072beb1a1cc6dbb640bc92020196f1b8cb257b8670d616",
          "md5": "052375dfeedb84914b5062fc5e128cbd",
          "sha256": "57eda1ad53879e30800a33e2774a860b3101f477963b1a90510b787ec393326a"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.6.tar.gz",
        "has_sig": true,
        "md5_digest": "052375dfeedb84914b5062fc5e128cbd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2816634,
        "upload_time": "2021-06-09T18:24:21",
        "upload_time_iso_8601": "2021-06-09T18:24:21.310775Z",
        "url": "https://files.pythonhosted.org/packages/f7/23/500de28f369e95072beb1a1cc6dbb640bc92020196f1b8cb257b8670d616/pykokkos-base-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d2ee3e6035ba1b7358033ad15e07ed0d49ba1b1298fdfa9ea8814a8ccc39df8",
          "md5": "800ba1eb946872de698d7bf379878c3c",
          "sha256": "6339daced1e81a2748f381847d8717cd77d824407da3c263b9491b5630c642b0"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.7.tar.gz",
        "has_sig": true,
        "md5_digest": "800ba1eb946872de698d7bf379878c3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3461001,
        "upload_time": "2022-04-28T18:34:01",
        "upload_time_iso_8601": "2022-04-28T18:34:01.197761Z",
        "url": "https://files.pythonhosted.org/packages/1d/2e/e3e6035ba1b7358033ad15e07ed0d49ba1b1298fdfa9ea8814a8ccc39df8/pykokkos-base-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0546d94266d82a29bc41e0c02f1ef0d4b610c1fff8854ef5af22abd0357a4b2",
          "md5": "e43eb5f2a0aff317fc396f989cc75d92",
          "sha256": "fad56bbc1e57f866137acc85b7d70a332d52612dea38ee346ade90f6ec5b6b3f"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.7rc0.tar.gz",
        "has_sig": true,
        "md5_digest": "e43eb5f2a0aff317fc396f989cc75d92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 64350,
        "upload_time": "2022-04-27T19:08:24",
        "upload_time_iso_8601": "2022-04-27T19:08:24.603826Z",
        "url": "https://files.pythonhosted.org/packages/d0/54/6d94266d82a29bc41e0c02f1ef0d4b610c1fff8854ef5af22abd0357a4b2/pykokkos-base-0.0.7rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eab87292bef0865e06ec5758132e14992468ea2d8a8d6a4bc8f717d44e21bea2",
          "md5": "ba2268af178503980cb1ff81a78dc3bc",
          "sha256": "4f83beb2c812a129bbe4af70f0b6cb5a61b4f5d909f7553184624c5e9272f1a0"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.7rc1.tar.gz",
        "has_sig": true,
        "md5_digest": "ba2268af178503980cb1ff81a78dc3bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 64383,
        "upload_time": "2022-04-27T19:18:19",
        "upload_time_iso_8601": "2022-04-27T19:18:19.069154Z",
        "url": "https://files.pythonhosted.org/packages/ea/b8/7292bef0865e06ec5758132e14992468ea2d8a8d6a4bc8f717d44e21bea2/pykokkos-base-0.0.7rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d8411fec972d0a28252522ca12e156407ab592f39431abf365d1439b0f96f01",
          "md5": "ce5ada8c17cb3626ead34eae6f1a72d8",
          "sha256": "82c4389b630485cea161b13f2d746785dcc3c1283e488ffe97da7bba163efd36"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.7rc2.tar.gz",
        "has_sig": true,
        "md5_digest": "ce5ada8c17cb3626ead34eae6f1a72d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2879003,
        "upload_time": "2022-04-27T19:22:15",
        "upload_time_iso_8601": "2022-04-27T19:22:15.380548Z",
        "url": "https://files.pythonhosted.org/packages/3d/84/11fec972d0a28252522ca12e156407ab592f39431abf365d1439b0f96f01/pykokkos-base-0.0.7rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37394c566dca30cf7545e0a21d1d90dd748013cb78653ed8f26be05d31ba18c5",
          "md5": "b910b66e36bdd018b6c29caa2471e418",
          "sha256": "8e98c2b85267b828e29c731cb457cb6bbc2d7a7429629bfba3ebb14101c823b9"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.7rc3.tar.gz",
        "has_sig": true,
        "md5_digest": "b910b66e36bdd018b6c29caa2471e418",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2879189,
        "upload_time": "2022-04-27T21:12:38",
        "upload_time_iso_8601": "2022-04-27T21:12:38.246836Z",
        "url": "https://files.pythonhosted.org/packages/37/39/4c566dca30cf7545e0a21d1d90dd748013cb78653ed8f26be05d31ba18c5/pykokkos-base-0.0.7rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7rc4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67ee092164ecc65b855c1a5889b44a87aedbf34e072d741c5f017e335e3f34f2",
          "md5": "1c96333ca529b1fe5f6ce6b74f687215",
          "sha256": "436b659ac923437da402f35e059c72af056427dbfdef672b220112666e6dfc2c"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.7rc4.tar.gz",
        "has_sig": true,
        "md5_digest": "1c96333ca529b1fe5f6ce6b74f687215",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2879130,
        "upload_time": "2022-04-27T21:16:05",
        "upload_time_iso_8601": "2022-04-27T21:16:05.176688Z",
        "url": "https://files.pythonhosted.org/packages/67/ee/092164ecc65b855c1a5889b44a87aedbf34e072d741c5f017e335e3f34f2/pykokkos-base-0.0.7rc4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7rc5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d640ac3d8302b618ffd1522213a38f972371c253720eb1cee8a529d50d61f9a5",
          "md5": "625253b7669bfd14aff507d76252429d",
          "sha256": "d67d9ac3ae660319ca7e45e8f91573a44ac336be093a0da08ab708d002dfa378"
        },
        "downloads": -1,
        "filename": "pykokkos-base-0.0.7rc5.tar.gz",
        "has_sig": true,
        "md5_digest": "625253b7669bfd14aff507d76252429d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2879291,
        "upload_time": "2022-04-27T21:44:02",
        "upload_time_iso_8601": "2022-04-27T21:44:02.160130Z",
        "url": "https://files.pythonhosted.org/packages/d6/40/ac3d8302b618ffd1522213a38f972371c253720eb1cee8a529d50d61f9a5/pykokkos-base-0.0.7rc5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d2ee3e6035ba1b7358033ad15e07ed0d49ba1b1298fdfa9ea8814a8ccc39df8",
        "md5": "800ba1eb946872de698d7bf379878c3c",
        "sha256": "6339daced1e81a2748f381847d8717cd77d824407da3c263b9491b5630c642b0"
      },
      "downloads": -1,
      "filename": "pykokkos-base-0.0.7.tar.gz",
      "has_sig": true,
      "md5_digest": "800ba1eb946872de698d7bf379878c3c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3461001,
      "upload_time": "2022-04-28T18:34:01",
      "upload_time_iso_8601": "2022-04-28T18:34:01.197761Z",
      "url": "https://files.pythonhosted.org/packages/1d/2e/e3e6035ba1b7358033ad15e07ed0d49ba1b1298fdfa9ea8814a8ccc39df8/pykokkos-base-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}