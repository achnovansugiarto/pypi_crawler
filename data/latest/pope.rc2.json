{
  "info": {
    "author": "Arya Farahi",
    "author_email": "arya.farahi@austin.utexas.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Astronomy",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "![GitHub](https://img.shields.io/github/license/afarahi/PoPE)\n![PyPI](https://img.shields.io/pypi/v/tatter)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/tatter)\n<a href=\"http://ascl.net/2007.006\"><img src=\"https://img.shields.io/badge/ascl-2007.006-blue.svg?colorB=262255\" alt=\"ascl:2007.006\" /></a>\n\n\n<p align=\"center\">\n  <img src=\"logo.png\" width=\"300\" title=\"logo\">\n</p>\n\n\n# Introduction\n\nThe spatial distribution and internal structure of astronomical systems contain vast amount of information about the\n underlying physics that governs the formation, evolution, and fate of these systems. While astronomical data collected\n by large-, medium-, and small-size surveys are becoming more abundant, precise and accurate modeling is becoming more\n challenging. The scale and complexity of these multi-wavelength surveys are exceeding the capabilities of traditional\n data analysis models, hence the need for novel inference models. \n\nOne of the key challenges of modeling the empirical data is how to account for the measurement errors of varying \nmagnitudes. The low signal-to-noise ratio (SNR) regime hinders the ability to infer the spatial structure of a \npopulation from abundant but noisy measurements, diluting the spatial signals. Typical measurements with SNR below \nthe detection limit are often discarded or stacked to boost the signal above the detection limit. Binning and stacking \ncan introduce selection bias, information loss, and smearing out the signal component. While stacking amplifies the \nSNR of the population average properties, it suppresses intrinsic scatter of the population under study. \nIn practice, performing a statistical inference on large astronomical datasets has become a bottleneck of traditional \npopulation- and likelihood-based approaches.\n\n\nTo address some of the above challenges, we developed Population Profile Estimator (`PoPE`), a population-based, \nBayesian inference model to analyze a class of problems that are concerned with the spatial distribution or internal \nspatial structure of a sample of astronomical systems. Our method uses the conditional statistics of spatial \nprofile of multiple observables assuming the individual observations are measured with errors of varying magnitude. \nAssuming the conditional statistics of our observables can be described with a multivariate normal distribution, \nthe model reduces to the conditional average profile and conditional covariance between all observables. \nThe method consists of two steps: (1) reconstructing the average profile using non-parametric regression with Gaussian \nProcesses and (2) estimating the the property profiles covariance given a set of independent variable. Our \npopulation-based method is computationally efficient and capable of inferring average profiles of a population from \nnoisy measurements, without stacking and binning nor parameterizing the shape of the average profile. This code is an \nimplementation of Population Profile Estimator (`PoPE`) method that performs a regression analysis described in \nFarahi, Nagai & Cheng (2020). \n\nIf you use PoPE or derivates based on it, please cite the following paper ([Farahi et al. 2020](https://arxiv.org/abs/2006.16408)) \nwhich introduced the tool.\n\n## Dependencies\n\n`numpy`, `scipy`,  `matplotlib`, `pandas`, `sklearn`, `pymc3`, `KLLR`.\n\n## References\n\n[1]. A. Farahi, D. Nagai, Y. Cheng, \"PoPE: A population-based approach to model spatial structure of astronomical \nsystems\", AJ 161 30 (2021). [arXiv link](https://arxiv.org/abs/2006.16408). [Journal link](https://iopscience.iop.org/article/10.3847/1538-3881/abc630/pdf).\n\n## Installation\n\nRun the following to install:\n\n    pip install pope\n\n## Quickstart\n\nTo start using `PoPE`, simply use `from PoPE import estimate_mean_property_profile` to\naccess the primary functions and class. The exact requirements for the inputs are\nlisted in the docstring of the estimate_mean_property_profile() class further below.\nAn example for using `PoPE` looks like this:\n\n        from PoPE import estimate_mean_property_profile                                       \n\n        # load data and add measurement noise\n        # Xs, Ys1, Ys2, Ys1err, Ys2err = load_data()\n\n        # compute the average profile\n        mp, gp, model = estimate_mean_property_profile(Xs, Ys1, Ys2, Ys1err, Ys2err,\n                                                       Xu_shapes=[15, 7], kernel_scales=[2.0, 2.0])                                 \n\n\nSee examples \"./examples/simulated_example.py\" and \"./examples/TNG_example.py\" for more information. To replicate \nplots presented in the paper, you can run `python3 TNG_profile_example.py` and `python3 fake_simulated_example.py` \n\n## Contact\n\nIf you have any questions or want to modify the code for your own purpose, please do not hesitate to \nemail arya.farahi@austin.utexas.edu for help.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/afarahi/PoPE",
    "keywords": "linear,regression,astronomy,astrophysics,parameter estimation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PoPE",
    "package_url": "https://pypi.org/project/PoPE/",
    "platform": "",
    "project_url": "https://pypi.org/project/PoPE/",
    "project_urls": {
      "Homepage": "https://github.com/afarahi/PoPE"
    },
    "release_url": "https://pypi.org/project/PoPE/1.0.3/",
    "requires_dist": [
      "numpy",
      "scipy",
      "matplotlib",
      "pandas",
      "sklearn",
      "theano",
      "pymc3"
    ],
    "requires_python": "",
    "summary": "Population Profile Estimator.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12893746,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65e04c2c93cf9a3303208b56966cf6a7b31c8f48e20d1ae54a4102437f620ad6",
          "md5": "af91b056bcb7c1c19264b1a014673105",
          "sha256": "44974a931ece7ccab84cd92c15001f399bd8f1413de6a18635c19fbc69727998"
        },
        "downloads": -1,
        "filename": "PoPE-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af91b056bcb7c1c19264b1a014673105",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16490,
        "upload_time": "2022-02-15T03:48:41",
        "upload_time_iso_8601": "2022-02-15T03:48:41.902889Z",
        "url": "https://files.pythonhosted.org/packages/65/e0/4c2c93cf9a3303208b56966cf6a7b31c8f48e20d1ae54a4102437f620ad6/PoPE-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "096b2d082d5f3aaa5138b4e8c7305ae2a05d235ebaeee13a90bcd6c5ada5a7e6",
          "md5": "5fca10fa47f73b08637eeb65b4b2b701",
          "sha256": "e3bec913a77f5dbc0063c41ece7e6feb514b7119e5858f7bea5697fde4141b5f"
        },
        "downloads": -1,
        "filename": "PoPE-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5fca10fa47f73b08637eeb65b4b2b701",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13415,
        "upload_time": "2022-02-15T03:48:43",
        "upload_time_iso_8601": "2022-02-15T03:48:43.384664Z",
        "url": "https://files.pythonhosted.org/packages/09/6b/2d082d5f3aaa5138b4e8c7305ae2a05d235ebaeee13a90bcd6c5ada5a7e6/PoPE-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cad0679e015bfd339a977f2875bce3881802d3f67eac58d7b2233d8b3b9310a6",
          "md5": "ea8fdd457db9943fb48a494e17ab9e61",
          "sha256": "e9d47f5e071edaeb9774d6624aaca44969e106bd4f69df583f99ba89226791be"
        },
        "downloads": -1,
        "filename": "PoPE-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea8fdd457db9943fb48a494e17ab9e61",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16484,
        "upload_time": "2022-02-15T03:54:34",
        "upload_time_iso_8601": "2022-02-15T03:54:34.675343Z",
        "url": "https://files.pythonhosted.org/packages/ca/d0/679e015bfd339a977f2875bce3881802d3f67eac58d7b2233d8b3b9310a6/PoPE-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c7c0aab6d87aface6dc9c9f67e046e9db65896bfd02cc08a15cf4bf92ced1a4",
          "md5": "465ed3541da1469ccf468c41f34ab8a8",
          "sha256": "58b1b470ecd4e938a695d051e0460521db617cdad63a98765ddbc2cc1d3b1c3b"
        },
        "downloads": -1,
        "filename": "PoPE-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "465ed3541da1469ccf468c41f34ab8a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13412,
        "upload_time": "2022-02-15T03:54:36",
        "upload_time_iso_8601": "2022-02-15T03:54:36.145981Z",
        "url": "https://files.pythonhosted.org/packages/4c/7c/0aab6d87aface6dc9c9f67e046e9db65896bfd02cc08a15cf4bf92ced1a4/PoPE-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cad0679e015bfd339a977f2875bce3881802d3f67eac58d7b2233d8b3b9310a6",
        "md5": "ea8fdd457db9943fb48a494e17ab9e61",
        "sha256": "e9d47f5e071edaeb9774d6624aaca44969e106bd4f69df583f99ba89226791be"
      },
      "downloads": -1,
      "filename": "PoPE-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ea8fdd457db9943fb48a494e17ab9e61",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16484,
      "upload_time": "2022-02-15T03:54:34",
      "upload_time_iso_8601": "2022-02-15T03:54:34.675343Z",
      "url": "https://files.pythonhosted.org/packages/ca/d0/679e015bfd339a977f2875bce3881802d3f67eac58d7b2233d8b3b9310a6/PoPE-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4c7c0aab6d87aface6dc9c9f67e046e9db65896bfd02cc08a15cf4bf92ced1a4",
        "md5": "465ed3541da1469ccf468c41f34ab8a8",
        "sha256": "58b1b470ecd4e938a695d051e0460521db617cdad63a98765ddbc2cc1d3b1c3b"
      },
      "downloads": -1,
      "filename": "PoPE-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "465ed3541da1469ccf468c41f34ab8a8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13412,
      "upload_time": "2022-02-15T03:54:36",
      "upload_time_iso_8601": "2022-02-15T03:54:36.145981Z",
      "url": "https://files.pythonhosted.org/packages/4c/7c/0aab6d87aface6dc9c9f67e046e9db65896bfd02cc08a15cf4bf92ced1a4/PoPE-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}