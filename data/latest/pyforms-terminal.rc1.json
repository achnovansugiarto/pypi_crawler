{
  "info": {
    "author": "Ricardo Ribeiro",
    "author_email": "ricardojvr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Human Machine Interfaces",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "![Important](https://img.shields.io/badge/Important-Note-red.svg \"Screen\")  \nIf you find this project useful, please, do not forget to ![star it](https://raw.githubusercontent.com/UmSenhorQualquer/pyforms/v1.0.beta/docs/imgs/start.png?raw=true \"Screen\") it.\n\n\n# Pyforms Terminal\n\nPyforms **Terminal** is a software layer, part of the Pyforms main library. This layer implements the execution of a Pyforms application in the terminal.\n\n![Diagram](https://raw.githubusercontent.com/UmSenhorQualquer/pyforms-terminal/v4/docs/source/_static/imgs/pyforms-layers-terminal.png \"Screen\")\n\n\n\n# Pyforms\n\n<!-- Posicione esta tag onde você deseja que o widget apareça. -->\n<div class=\"g-follow\" data-annotation=\"bubble\" data-height=\"24\" data-rel=\"publisher\"></div>\n\nPyforms is a Python 3 cross-enviroment framework that aims the boost the development productivity. The library provides an API in Python to develop applications that can be executed in Windows GUI mode, Web mode, or in Terminal mode.\n\n[More @ ![Diagram](https://raw.githubusercontent.com/UmSenhorQualquer/pyforms-terminal/v4/docs/source/_static/imgs/rtd.png)](https://pyforms.readthedocs.io)\n\n\n\n## Advantages\n* With a minimal API, interfaces are easily defined using a short Python code.\n* Avoid the constant switching between the GUI designers and the Python IDE.\n* It is designed to allow the coding of advanced functionalities with a minimal effort.\n* The code is organized in modules and prepared to be reused by other applications.\n* It makes the applications maintenance easier.\n* Turn the prototyping much easier and fast.\n* Due to its simplicity it has a low learning curve.\n\n\n## Examples of applications developed in Pyforms Terminal\n* [D-Track](https://github.com/UmSenhorQualquer/d-track)\n\n\n## Installation\n\nCheck the documentation at [pyforms.readthedocs.org](http://pyforms.readthedocs.org) and [pyforms-terminal.readthedocs.org](http://pyforms-terminal.readthedocs.org)\n\n## Rationale behind the framework\n\nThe development of this library started with the necessity of allowing users with low programming skills to edit parameters from my python scripts.\nThe idea was to transform scripts which had already been developed into GUI applications with a low effort and in a short time.\n\nFor example in my computer vision applications in the majority of the times there were variables that had to be set manually in the scripts for each video, to adjust the thresholds, blobs sizes, and other parameters to the environment light conditions... To test each set of parameters the script had to be executed.\nWith GUI applications, users would be able to set the parameters using a GUI interface and visualize the results instantly without the need of restarting the script. That was the idea.\n\nAfter looking into the several python options for GUI interfaces, PyQt was the one that seemed the best tool for a fast development with the QtDesigner, but after a while developing in Qt, switching between the designer and the python IDE was becoming too costly in terms of time because the interfaces were constantly evolving.\n\nBeing a Django developer, I did get inspiration on it for this framework. In the [Django](https://www.djangoproject.com/) Models we just need to define the type of variables and their disposition in the form (in ModelAdmin) to generate a HTML form for data edition.\nFor the GUIs that I wanted to build in my python scripts, I would like to have the same simplicity, so I could focus on the algorithms and not on GUIs developing.\n\n\nThe result was the simplicity you can see in the example below:\n\n```python\nfrom pyforms.basewidget import BaseWidget\nfrom pyforms.controls   import ControlFile\nfrom pyforms.controls   import ControlText\nfrom pyforms.controls   import ControlSlider\nfrom pyforms.controls   import ControlPlayer\nfrom pyforms.controls   import ControlButton\n\nclass ComputerVisionAlgorithm(BaseWidget):\n\n    def __init__(self, *args, **kwargs):\n        super().__init__('Computer vision algorithm example')\n\n        #Definition of the forms fields\n        self._videofile  = ControlFile('Video')\n        self._outputfile = ControlText('Results output file')\n        self._threshold  = ControlSlider('Threshold', default=114, minimum=0, maximum=255)\n        self._blobsize   = ControlSlider('Minimum blob size', default=110, minimum=100, maximum=2000)\n        self._player     = ControlPlayer('Player')\n        self._runbutton  = ControlButton('Run')\n\n        #Define the function that will be called when a file is selected\n        self._videofile.changed_event     = self.__videoFileSelectionEvent\n        #Define the event that will be called when the run button is processed\n        self._runbutton.value       = self.__runEvent\n        #Define the event called before showing the image in the player\n        self._player.process_frame_event    = self.__process_frame\n\n        #Define the organization of the Form Controls\n        self._formset = [\n            ('_videofile', '_outputfile'),\n            '_threshold',\n            ('_blobsize', '_runbutton'),\n            '_player'\n        ]\n\n\n    def __videoFileSelectionEvent(self):\n        \"\"\"\n        When the videofile is selected instanciate the video in the player\n        \"\"\"\n        self._player.value = self._videofile.value\n\n    def __process_frame(self, frame):\n        \"\"\"\n        Do some processing to the frame and return the result frame\n        \"\"\"\n        return frame\n\n    def __runEvent(self):\n        \"\"\"\n        After setting the best parameters run the full algorithm\n        \"\"\"\n        pass\n\n\nif __name__ == '__main__':\n\n    from pyforms import start_app\n    start_app(ComputerVisionAlgorithm)\n```\n\nResult of runnning the application in the terminal:\n\n```bash\n\n$> python test.py terminal_mode --help\n```\n\n\n![ScreenShot](https://raw.githubusercontent.com/UmSenhorQualquer/pyforms-terminal/v4/docs/source/_static/imgs/terminal-example-computervisionalgorithm.png \"Screen\")\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/UmSenhorQualquer/pyforms-terminal",
    "keywords": "terminal development pyforms",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyForms-Terminal",
    "package_url": "https://pypi.org/project/PyForms-Terminal/",
    "platform": "",
    "project_url": "https://pypi.org/project/PyForms-Terminal/",
    "project_urls": {
      "Homepage": "https://github.com/UmSenhorQualquer/pyforms-terminal"
    },
    "release_url": "https://pypi.org/project/PyForms-Terminal/4.0.10/",
    "requires_dist": [
      "requests",
      "idna",
      "simplejson",
      "opencv-python (==3.4.5.20)",
      "numpy",
      "confapp",
      "urllib3",
      "Pillow"
    ],
    "requires_python": ">=3",
    "summary": "Pyforms terminal is a software layer, part of the Pyforms main library. This layer implements the execution of a Pyforms application in the terminal.",
    "version": "4.0.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5507968,
  "releases": {
    "4.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f1e09d0785eb3eae83ade5917975e464b246bcdc89bd968dff74bef6d12d11b",
          "md5": "7e439c6c64ab6a65333d384c9a440bc6",
          "sha256": "eae4a524a0fc385829a427ef9884002023a01e7f3f6342043c21a99a35444a8c"
        },
        "downloads": -1,
        "filename": "PyForms_Terminal-4.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e439c6c64ab6a65333d384c9a440bc6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 27295,
        "upload_time": "2019-07-09T16:11:14",
        "upload_time_iso_8601": "2019-07-09T16:11:14.630098Z",
        "url": "https://files.pythonhosted.org/packages/0f/1e/09d0785eb3eae83ade5917975e464b246bcdc89bd968dff74bef6d12d11b/PyForms_Terminal-4.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5984294f67879d1d6b1b01f4c16c9ba9324fbe5a67186a88c933ac6bc1fb5624",
          "md5": "db2cc23a4dd9b45ce3b4af3c6e215020",
          "sha256": "50fd0e44b70f5b0b6ca8224fbdf91db236dc874a135202dc3513ab4ed9ba6aa6"
        },
        "downloads": -1,
        "filename": "PyForms-Terminal-4.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "db2cc23a4dd9b45ce3b4af3c6e215020",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 15805,
        "upload_time": "2019-07-09T16:11:19",
        "upload_time_iso_8601": "2019-07-09T16:11:19.998574Z",
        "url": "https://files.pythonhosted.org/packages/59/84/294f67879d1d6b1b01f4c16c9ba9324fbe5a67186a88c933ac6bc1fb5624/PyForms-Terminal-4.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f1e09d0785eb3eae83ade5917975e464b246bcdc89bd968dff74bef6d12d11b",
        "md5": "7e439c6c64ab6a65333d384c9a440bc6",
        "sha256": "eae4a524a0fc385829a427ef9884002023a01e7f3f6342043c21a99a35444a8c"
      },
      "downloads": -1,
      "filename": "PyForms_Terminal-4.0.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7e439c6c64ab6a65333d384c9a440bc6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 27295,
      "upload_time": "2019-07-09T16:11:14",
      "upload_time_iso_8601": "2019-07-09T16:11:14.630098Z",
      "url": "https://files.pythonhosted.org/packages/0f/1e/09d0785eb3eae83ade5917975e464b246bcdc89bd968dff74bef6d12d11b/PyForms_Terminal-4.0.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5984294f67879d1d6b1b01f4c16c9ba9324fbe5a67186a88c933ac6bc1fb5624",
        "md5": "db2cc23a4dd9b45ce3b4af3c6e215020",
        "sha256": "50fd0e44b70f5b0b6ca8224fbdf91db236dc874a135202dc3513ab4ed9ba6aa6"
      },
      "downloads": -1,
      "filename": "PyForms-Terminal-4.0.10.tar.gz",
      "has_sig": false,
      "md5_digest": "db2cc23a4dd9b45ce3b4af3c6e215020",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 15805,
      "upload_time": "2019-07-09T16:11:19",
      "upload_time_iso_8601": "2019-07-09T16:11:19.998574Z",
      "url": "https://files.pythonhosted.org/packages/59/84/294f67879d1d6b1b01f4c16c9ba9324fbe5a67186a88c933ac6bc1fb5624/PyForms-Terminal-4.0.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}