{
  "info": {
    "author": "tys203831",
    "author_email": "tys203831@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "# mailchimp_auto\n\n## Welcome to chronosâ€™s documentation!\n`mailchimp_auto` is a command line application to automate the email creation process on MailChimp based on the google spreadsheet input. What it does is using Jinja2 template engine to loop over dummy values (e.g., website url, image url, string) on html template in order to create the html template to be uploaded to MailChimp server.\n\n(Note: This project is highly customized for personal use, but it's okay for reference.)\n\n## Introduction\nThis package uses 2 major packages:\n* mailchimp-marketing to automate creating campaign on Mailchimp\n* jinja2 for managing tags inserted into the HTML email template to loop over and replace the data elements\n\n----\n## Motivation\nAs a newbie hobbyist in Python, I found it very troublesome to drag and drop the editor in MailChimp in a weekly basis just to change some certain contents in the template that wastes me 30 minutes per change, thus I need a way to automate that campaign creation.\n\n----\n## Getting Started\n\n* `pip install mailchimp_auto`\n\n---\n## Configuration\n### Account Configuration\nBefore you start using this cli tool, you should setup Mailchimp API, Mailchimp server prefix, Google Service account's json file through the command line `mailchimp_auto config` or `python -m mailchimp_auto config`.\n\nAnd after the command has been run, the interface below will appear:\n\n```\nCurrent Mailchimp remote:\nAccount Username        Server Prefix\n=================       =============\nTYONGSHENG               us1\n\ne) Edit existing account\nn) New account\nd) Delete account\nq) quit\ne/n/d/q > e\n```\n\nYou are required to create (n), edit(e) the config variables such as mailchimp username, mailchimp API, and fill in the Google Service Account Credentials JSON path that you have downloaded. \n\n```\nSelect account.\nChoose a number from below, or type in an existing value.\n1 >  TYONGSHENG\nAccount > 1\n\nMailchimp API\nEnter a string value. Press Enter for the default (2exxxxxxxxxxxxxxxxxxxxxxxx-us1): 2exxxxxxxxxxxxxxxxxxxxxxxx-us1\n\nService_account_file.\nGoogle Service Account Credentials JSON file path.\nEnter a string value. Press Enter for the default (C:\\Users\\tys\\Documents\\mailchimp-auto\\.config\\service_account_file\\TYONGSHENG.json): C:\\Users\\tys\\Documents\\mailchimp-auto\\.config\\service_account_file\\TYONGSHENG.json\n```\n\nFor how to open a Google service account and download its JSON key, follow Step 1 to Step 5 [here](https://owaisqureshi.medium.com/access-google-sheets-api-in-python-using-service-account-3a0c6d89d5fc). \n\n\nFeel free to delete (d) any entry you don't need anymore!\n\n### Template Configuration\nType the command line `mailchimp_auto config-template` or `python -m mailchimp_auto config-template` to upload and save the HTML email template (in form of Jinja tags) to this program and also setup spreadsheet (using spreadsheet url) to get the data you want to parse or loop into the HTML email template. \n\n```\nCurrent template(s):\nTemplate                        Spreadsheet Id\n========                        ===============\nmy_weekly_newsletter             1h31GQRfBqUpMmPCXI013J1-Y-kinfgifN6Pa3dx3hB0\n\n\ne) Edit existing template\nn) New template\nd) Delete template\nq) quit\ne/n/d/q > e\n```\n\nBut, before continue to enter any input into it, please prepare the few things below:\n\n(i) Create an google spreadsheet with two pages, \"Campaign Info\" and \"Campaign Content\". You can refer to the sample spreadsheet [here](https://docs.google.com/spreadsheets/d/1h31GQRfBqUpMmPCXI013J1-Y-kinfgifN6Pa3dx3hB0/edit?usp=sharing), whereby the data there are to be scraped through this program to be processed into the HTML email template to replace the dummy variables I have placed using Jinja2 library module. \n\n(ii) Then, create an Jinja2 email template (`master.htm`) inside a folder. \n\nHere are some simple Jinja template tags in order to create the Jinja2 email template (can skip this if you already know) or see [here](https://jinja.palletsprojects.com/en/3.1.x/templates/) if you want to know more: \n* {{ ... }} for Expressions to print to the template output\n* {% ... %} for Statements\n\nSo, for example, referring to the [spreadsheet](https://docs.google.com/spreadsheets/d/1h31GQRfBqUpMmPCXI013J1-Y-kinfgifN6Pa3dx3hB0/edit?usp=sharing), if you want to parse the `community_insights` table variable int, below is the sample Jinja2 template tags:\n\n```html\n{% for key in community_insights.heading %}\n    <p>Any html content you want to loop can put it here</p>\n    <p>And here is the dynamic variable here: {{ community_insights.heading[key] }}</p>\n{% endfor %}\n```\n![Gspread Data](images/spreadsheet_sample.png)\n\nFor the template folder structure, you can refer here, whereby `master.htm` is the COMPULSORY file to have when generating html email output (refer to [sample template folder](sample_template) ): \n```\ntemplate\n\\---<your template name>\n    |   master.htm\n```\nTips: For me, I export the HTML email template from the MailChimp and then edit the HTML file through replacing the Jinja2 template tags onto some variables which I wish to loop the data into them.\n\n(iii) Continue back to the command line `mailchimp_auto config-template` and then do follow the following series of instructions: \n\nBelow are the commands when I want to edit (e) some config of my template. It does the same when you want to create (n) a new template source. \n```\nCurrent template(s):\nTemplate                        Spreadsheet Id\n========                        ===============\nmy_weekly_newsletter             1h31GQRfBqUpMmPCXI013J1-Y-kinfgifN6Pa3dx3hB0\n\ne) Edit existing template\nn) New template\nd) Delete template\nq) quit\ne/n/d/q > e\n\nSelect template.\nChoose a number from below, or type in an existing value.\n1 >  my_weekly_newsletter\nTemplate > 1\n\nTemplate folder.\nThe file path of the HTML email template folder.\nEnter a string value. Press Enter for the default (C:\\Users\\tys\\Documents\\mailchimp-auto\\template\\my_weekly_newsletter): C:\\Users\\tys\\Documents\\Project\\mailchimp_creation_project\\mailchimp-auto\\sample_template\n\nSpreadsheet url.\nThe Google spreadsheet url that you want to parse it to the Jinja2 HTML email template: .\nEnter a string value. Press Enter for the default (https://docs.google.com/spreadsheets/d/1h31GQRfBqUpMmPCXI013J1-Y-kinfgifN6Pa3dx3hB0/edit#gid=1758545491): https://docs.google.com/spreadsheets/d/1h31GQRfBqUpMmPCXI013J1-Y-kinfgifN6Pa3dx3hB0/edit#gid=1758545491\n\nWorksheet Title of Campaign Info.\nThe worksheet title of campaign info: .\nEnter a series of cell ranges, separated by symbol (,). Press Enter for the default (Campaign Info): *Campaign Info*\n\nCampaign Info.\nThe Campaign info that you want to parse it to the Jinja2 HTML email template: .\nEnter a series of cell ranges, separated by symbol (,). Press Enter for the default (A1:B8): *A1:B8*\n\nWorksheet Title of Campaign Content.\nThe worksheet title of campaign content: .\nEnter a series of cell ranges, separated by symbol (,). Press Enter for the default (Campaign Content): Campaign Content\n\nCampaign Content.\nThe Campaign Content that you want to pass it to the Jinja2 HTML email template: .\nEnter a series of cell ranges, separated by symbol (,). Press Enter for the default (A3:B5,A7:G20,A22:C31,A33:D41,A43:G48): A3:B5,A7:G20,A22:C31,A33:D41,A43:G48\n```\n\n\n## Running the program to automate the campaign creation\nEnter the command line `mailchimp_auto create --user <mailchimp_account_username> --template <your_template>` and then it will scrape data from Google Spreadsheet you assigned to and inserted them into the HTML email template to loop over and replace the data elements. \n\nIf you don't want to upload your processed HTML email template to mailchimp server first, add the command `--preview` behind the previous command line, e.g.,   `mailchimp_auto create --user <mailchimp_account_username> --template <your_template> --preview`.\n\nIt's all done. Hope you are successful with that. If got any problem, kindly contact me. By the way, this is my first time creating a python library (or cli tool) to automate my task. I know some python syntax works not the best for the program (e.g., too much repetitive code, etc). But, I hope I could learn more through creating and maintaining this program.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mailchimp-auto",
    "package_url": "https://pypi.org/project/mailchimp-auto/",
    "platform": null,
    "project_url": "https://pypi.org/project/mailchimp-auto/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/mailchimp-auto/0.1.0/",
    "requires_dist": [
      "typer[all] (>=0.6.1,<0.7.0)",
      "mailchimp-marketing (>=3.0.75,<4.0.0)",
      "Jinja2 (>=3.1.2,<4.0.0)",
      "pandas (>=1.4.3,<2.0.0)",
      "gspread (>=5.4.0,<6.0.0)"
    ],
    "requires_python": ">=3.9.12,<4.0.0",
    "summary": "",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14591570,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5571c0b1b35ff6983dfd5113addd5412e6bb5990852d750deb9a34c4487d0337",
          "md5": "063de0ade806e3d870e5db2a6b2a3907",
          "sha256": "9e5dbfc7a246fac8c63b87c1896415272c31c0b1e7a1e2101394efd865baba91"
        },
        "downloads": -1,
        "filename": "mailchimp_auto-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "063de0ade806e3d870e5db2a6b2a3907",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9.12,<4.0.0",
        "size": 17344,
        "upload_time": "2022-07-29T15:45:36",
        "upload_time_iso_8601": "2022-07-29T15:45:36.947649Z",
        "url": "https://files.pythonhosted.org/packages/55/71/c0b1b35ff6983dfd5113addd5412e6bb5990852d750deb9a34c4487d0337/mailchimp_auto-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea4f30228947cbb6dd7986d4c4f9ddba83dc40591f3e09f2ed146c547b18a05e",
          "md5": "d5ccda2f7c602cac9c38466767f3cd1e",
          "sha256": "905dc47ad3757e55006f654cb23a709bb691893d233de33d981f6821d7a07d56"
        },
        "downloads": -1,
        "filename": "mailchimp_auto-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d5ccda2f7c602cac9c38466767f3cd1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9.12,<4.0.0",
        "size": 28969,
        "upload_time": "2022-07-29T15:45:44",
        "upload_time_iso_8601": "2022-07-29T15:45:44.147791Z",
        "url": "https://files.pythonhosted.org/packages/ea/4f/30228947cbb6dd7986d4c4f9ddba83dc40591f3e09f2ed146c547b18a05e/mailchimp_auto-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5571c0b1b35ff6983dfd5113addd5412e6bb5990852d750deb9a34c4487d0337",
        "md5": "063de0ade806e3d870e5db2a6b2a3907",
        "sha256": "9e5dbfc7a246fac8c63b87c1896415272c31c0b1e7a1e2101394efd865baba91"
      },
      "downloads": -1,
      "filename": "mailchimp_auto-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "063de0ade806e3d870e5db2a6b2a3907",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9.12,<4.0.0",
      "size": 17344,
      "upload_time": "2022-07-29T15:45:36",
      "upload_time_iso_8601": "2022-07-29T15:45:36.947649Z",
      "url": "https://files.pythonhosted.org/packages/55/71/c0b1b35ff6983dfd5113addd5412e6bb5990852d750deb9a34c4487d0337/mailchimp_auto-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea4f30228947cbb6dd7986d4c4f9ddba83dc40591f3e09f2ed146c547b18a05e",
        "md5": "d5ccda2f7c602cac9c38466767f3cd1e",
        "sha256": "905dc47ad3757e55006f654cb23a709bb691893d233de33d981f6821d7a07d56"
      },
      "downloads": -1,
      "filename": "mailchimp_auto-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d5ccda2f7c602cac9c38466767f3cd1e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9.12,<4.0.0",
      "size": 28969,
      "upload_time": "2022-07-29T15:45:44",
      "upload_time_iso_8601": "2022-07-29T15:45:44.147791Z",
      "url": "https://files.pythonhosted.org/packages/ea/4f/30228947cbb6dd7986d4c4f9ddba83dc40591f3e09f2ed146c547b18a05e/mailchimp_auto-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}