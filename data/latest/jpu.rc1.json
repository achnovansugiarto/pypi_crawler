{
  "info": {
    "author": "Dan Foreman-Mackey",
    "author_email": "foreman.mackey@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# JAX + Units\n\n**Built with [JAX](https://jax.readthedocs.io) and\n[Pint](https://pint.readthedocs.io)!**\n\nThis module provides and interface between [JAX](https://jax.readthedocs.io) and\n[Pint](https://pint.readthedocs.io) to allow JAX to support operations with\nunits. The propagation of units happens at trace time, so jitted functions\nshould see no runtime cost. This library is experimental so expect some sharp\nedges.\n\nFor example:\n\n```python\n>>> import jax\n>>> import jax.numpy as jnp\n>>> import jpu\n>>>\n>>> u = jpu.UnitRegistry()\n>>>\n>>> @jax.jit\n... def add_two_lengths(a, b):\n...     return a + b\n...\n>>> add_two_lengths(3 * u.m, jnp.array([4.5, 1.2, 3.9]) * u.cm)\n<Quantity([3.045 3.012 3.039], 'meter')>\n\n```\n\n## Installation\n\nTo install, use `pip`:\n\n```bash\npython -m pip install jpu\n```\n\nThe only dependencies are `jax` and `pint`, and these will also be installed, if\nnot already in your environment. Take a look at [the JAX docs for more\ninformation about installing JAX on different\nsystems](https://github.com/google/jax#installation).\n\n## Usage\n\nHere is a slightly more complete example:\n\n```python\n>>> import jax\n>>> import numpy as np\n>>> from jpu import UnitRegistry, numpy as jnpu\n>>>\n>>> u = UnitRegistry()\n>>>\n>>> @jax.jit\n... def projectile_motion(v_init, theta, time, g=u.standard_gravity):\n...     \"\"\"Compute the motion of a projectile with support for units\"\"\"\n...     x = v_init * time * jnpu.cos(theta)\n...     y = v_init * time * jnpu.sin(theta) - 0.5 * g * jnpu.square(time)\n...     return x.to(u.m), y.to(u.m)\n...\n>>> x, y = projectile_motion(\n...     5.0 * u.km / u.h, 60 * u.deg, np.linspace(0, 1, 50) * u.s\n... )\n>>> x[:3]\n<Quantity([0.         0.01417234 0.02834467], 'meter')>\n\n```\n\n## Technical details & limitations\n\nThe most significant limitation of this library is the fact that users must use\n`jpu.numpy` functions when interacting with \"quantities\" with units instead of\nthe `jax.numpy` interface. This is because JAX does not (yet?) provide a general\ninterface for dispatching of ufuncs on custom array classes. I have played\naround with the undocumented `__jax_array__` interface, but it's not really\nflexible enough, and it isn't currently compatible with Pytree objects.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dfm/jax_astropy_units",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Dan Foreman-Mackey",
    "maintainer_email": "foreman.mackey@gmail.com",
    "name": "jpu",
    "package_url": "https://pypi.org/project/jpu/",
    "platform": null,
    "project_url": "https://pypi.org/project/jpu/",
    "project_urls": {
      "Homepage": "https://github.com/dfm/jax_astropy_units"
    },
    "release_url": "https://pypi.org/project/jpu/0.0.1rc1/",
    "requires_dist": [
      "jax",
      "jaxlib",
      "pint",
      "pytest (>=3.6) ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "A JAX + AstroPy units mashup.",
    "version": "0.0.1rc1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13983341,
  "releases": {
    "0.0.1rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b74f1cd5f022a2c82c2f0623fbbb19b7058c6a13e1f81a55dc4888e3f7b602f",
          "md5": "8bde1eb74a5c41f7c22177f0853e5193",
          "sha256": "d67324a05077fc0b082b2deeca255ffbb04d957254b806c9a406785064acfbd1"
        },
        "downloads": -1,
        "filename": "jpu-0.0.1rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8bde1eb74a5c41f7c22177f0853e5193",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8175,
        "upload_time": "2022-05-31T00:05:35",
        "upload_time_iso_8601": "2022-05-31T00:05:35.866078Z",
        "url": "https://files.pythonhosted.org/packages/2b/74/f1cd5f022a2c82c2f0623fbbb19b7058c6a13e1f81a55dc4888e3f7b602f/jpu-0.0.1rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aef84c17a93a165ebbd6afd1e033378dbe4f43ece88560f48687e200e6c76f97",
          "md5": "4407f3ca27a2a434dd0bf5deaf5eb4a9",
          "sha256": "26ddda223df8e3727e8d4ac4ae2a129707add1fec2ce683cde93c67a9143b994"
        },
        "downloads": -1,
        "filename": "jpu-0.0.1rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "4407f3ca27a2a434dd0bf5deaf5eb4a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14050,
        "upload_time": "2022-05-31T00:05:37",
        "upload_time_iso_8601": "2022-05-31T00:05:37.624886Z",
        "url": "https://files.pythonhosted.org/packages/ae/f8/4c17a93a165ebbd6afd1e033378dbe4f43ece88560f48687e200e6c76f97/jpu-0.0.1rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b74f1cd5f022a2c82c2f0623fbbb19b7058c6a13e1f81a55dc4888e3f7b602f",
        "md5": "8bde1eb74a5c41f7c22177f0853e5193",
        "sha256": "d67324a05077fc0b082b2deeca255ffbb04d957254b806c9a406785064acfbd1"
      },
      "downloads": -1,
      "filename": "jpu-0.0.1rc1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8bde1eb74a5c41f7c22177f0853e5193",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8175,
      "upload_time": "2022-05-31T00:05:35",
      "upload_time_iso_8601": "2022-05-31T00:05:35.866078Z",
      "url": "https://files.pythonhosted.org/packages/2b/74/f1cd5f022a2c82c2f0623fbbb19b7058c6a13e1f81a55dc4888e3f7b602f/jpu-0.0.1rc1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aef84c17a93a165ebbd6afd1e033378dbe4f43ece88560f48687e200e6c76f97",
        "md5": "4407f3ca27a2a434dd0bf5deaf5eb4a9",
        "sha256": "26ddda223df8e3727e8d4ac4ae2a129707add1fec2ce683cde93c67a9143b994"
      },
      "downloads": -1,
      "filename": "jpu-0.0.1rc1.tar.gz",
      "has_sig": false,
      "md5_digest": "4407f3ca27a2a434dd0bf5deaf5eb4a9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14050,
      "upload_time": "2022-05-31T00:05:37",
      "upload_time_iso_8601": "2022-05-31T00:05:37.624886Z",
      "url": "https://files.pythonhosted.org/packages/ae/f8/4c17a93a165ebbd6afd1e033378dbe4f43ece88560f48687e200e6c76f97/jpu-0.0.1rc1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}