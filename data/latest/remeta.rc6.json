{
  "info": {
    "author": "Matthias Guggenmos",
    "author_email": "mg.corresponding@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Go directly to:\n- [**Installation**](https://github.com/m-guggenmos/remeta/blob/master/INSTALL.md)\n- [**Basic Usage**](https://github.com/m-guggenmos/remeta/blob/master/demo/basic_usage.ipynb)\n- [**Common use cases**](https://github.com/m-guggenmos/remeta/blob/master/demo/common_use_cases.ipynb)\n- [**Exotic use cases**](https://github.com/m-guggenmos/remeta/blob/master/demo/exotic_use_cases.ipynb)\n\n# ReMeta Toolbox\n\nThe ReMeta toolbox allows researchers to estimate latent type 1 and type 2 parameters based on data of cognitive or perceptual decision-making tasks with two response categories. \n\n\n### Minimal example\nThree types of data are required to fit a model:\n- `stimuli`: list/array of signed stimulus intensity values, where the sign codes the stimulus category and the absolute value codes the intensity. The stimuli should be normalized to [-1; 1], although there is a setting (`normalize_stimuli_by_max`) to auto-normalize stimuli.\n- `choices`: list/array of choices coded as 0 (or alternatively -1) for the negative stimuli category and 1 for the positive stimulus category.\n- `confidence`: list/array of confidence ratings. Confidence ratings must be normalized to [0; 1]. Discrete confidence ratings must be normalized accordingly (e.g., if confidence ratings are 1-4, subtract 1 and divide by 3).\n\nA minimal example would be the following:\n```python\n# Minimal example\nimport remeta\nstimuli, choices, confidence = remeta.load_dataset('simple')  # load example dataset\nrem = remeta.ReMeta()\nrem.fit(stimuli, choices, confidence)\n```\nOutput:\n```\nLoading dataset 'simple' which was generated as follows:\n..Generative model:\n    Metatacognitive noise type: noisy_report\n    Metatacognitive noise distribution: truncated_norm\n    Link function: probability_correct\n..Generative parameters:\n    noise_sens: 0.7\n    bias_sens: 0.2\n    noise_meta: 0.1\n    evidence_bias_mult_meta: 1.2\n..Characteristics:\n    No. subjects: 1\n    No. samples: 1000\n    Type 1 performance: 78.5%\n    Avg. confidence: 0.668\n    M-Ratio: 0.921\n    \n+++ Sensory level +++\nInitial guess (neg. LL: 1902.65)\n    [guess] noise_sens: 0.1\n    [guess] bias_sens: 0\nPerforming local optimization\n    [final] noise_sens: 0.745 (true: 0.7)\n    [final] bias_sens: 0.24 (true: 0.2)\nFinal neg. LL: 461.45\nNeg. LL using true params: 462.64\nTotal fitting time: 0.15 secs\n\n+++ Metacognitive level +++\nInitial guess (neg. LL: 1938.81)\n    [guess] noise_meta: 0.2\n    [guess] evidence_bias_mult_meta: 1\nGrid search activated (grid size = 60)\n    [grid] noise_meta: 0.15\n    [grid] evidence_bias_mult_meta: 1.4\nGrid neg. LL: 1879.3\nGrid runtime: 2.43 secs\nPerforming local optimization\n    [final] noise_meta: 0.102 (true: 0.1)\n    [final] evidence_bias_mult_meta: 1.21 (true: 1.2)\nFinal neg. LL: 1872.24\nNeg. LL using true params: 1872.27\nTotal fitting time: 3.4 secs\n```\n\nSince the dataset is based on simulation, we know the true parameters (in brackets above) of the underlying generative model, which are indeed quite close to the fitted parameters.\n\nWe can access the fitted parameters by invoking the `summary()` method on the `ReMeta` instance:\n\n```python\n# Access fitted parameters\nresult = rem.summary()\nfor k, v in result.model.params.items():\n    print(f'{k}: {v:.3f}')\n```\n\nOuput:\n```\nnoise_sens: 0.745\nbias_sens: 0.240\nnoise_meta: 0.102\nevidence_bias_mult_meta: 1.213\n```\n\nBy default, the model fits parameters for type 1 noise (`noise_sens`) and a type 1 bias (`bias_sens`), as well as metacognitive 'type 2' noise (`noise_meta`) and a metacognitive bias (`evidence_bias_mult_meta`). Moreover, by default the model assumes that metacognitive noise occurs at the stage of the confidence report (setting `meta_noise_type='noisy_report'`), that observers aim at reporting probability correct with their confidence ratings (setting `meta_link_function='probability_correct'`) and that metacognitive noise can be described by a truncated normal distribution (setting `meta_noise_dist='truncated_norm'`).\n\nAll settings can be changed via the `Configuration` object which is optionally passed to the `ReMeta` instance. For example:\n\n```python\ncfg = remeta.Configuration()\ncfg.meta_noise_type = 'noisy_readout'\nrem = remeta.ReMeta(cfg)\n...\n```\n\n### Supported parameters\n\n_Type 1 parameters_:\n- `noise_sens`: type 1 noise\n- `bias_sens`: type 1 bias towards one of the two stimulus categories\n- `thresh_sens`: a (sensory) threshold, building on the assumption that a certain minimal stimulus intensity is required to elicit behavior; use only if there are stimulus intensities close to threshold\n- `noise_transform_sens`: parameter to specify stimulus-dependent type 1 noise (e.g. multiplicative noise)\n- `warping`: a nonlinear transducer parameter, allowing for nonlinear transformations of stimulus intensities-\n\n_Type 2 (metacognitive) parameters:_\n- `noise_meta`: metacognitive noise\n- `evidence_bias_mult_meta`: multiplicative metacognitive bias applying at the level of evidence\n- `evidence_bias_add_meta`: additive metacognitive bias applying at the level of evidence\n- `confidence_bias_mult_meta`: multiplicative metacognitive bias applying at the level of confidence\n- `confidence_bias_add_meta`: additive metacognitive bias applying at the level of confidence\n- `noise_transform_meta`: (experimental) parameter to specify decision-value-dependent type 2 noise (e.g. multiplicative noise)\n- `criterion{i}_meta`: i-th confidence criterion (in case of a criterion-based link function)\n- `level{i}_meta`: i-th confidence level (in case of a criterion-based link function, confidence levels correspond to the confidence at the respective criteria)\n\nIn addition, each parameter can be fitted in \"duplex mode\", such that separate values are fitted depending on the stimulus category (for type 1 parameters) or depending on the sign of the type 1 decision values (for type 2 parameters).\n\nA more detailed guide to use the toolbox is provided in the following Jupyter notebook: [**Basic Usage**](https://github.com/m-guggenmos/remeta/blob/master/demo/basic_usage.ipynb)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "Matthias Guggenmos",
    "maintainer_email": "mg.corresponding@gmail.com",
    "name": "remeta",
    "package_url": "https://pypi.org/project/remeta/",
    "platform": null,
    "project_url": "https://pypi.org/project/remeta/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/remeta/0.1.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Reverse engineering of Metacognition toolbox",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15116292,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "205196bda358f4183a0077f3abb43f60e6c26b2df2d5503d7987924c17fa427e",
          "md5": "c9bba23cc74ff7e9837471bdda6361f6",
          "sha256": "fa0a77e7a1af4ae015cb1a0f8a2e1d798565ef05ddb6672370d993b6ad2891ea"
        },
        "downloads": -1,
        "filename": "remeta-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c9bba23cc74ff7e9837471bdda6361f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 208897,
        "upload_time": "2022-06-09T09:19:59",
        "upload_time_iso_8601": "2022-06-09T09:19:59.084811Z",
        "url": "https://files.pythonhosted.org/packages/20/51/96bda358f4183a0077f3abb43f60e6c26b2df2d5503d7987924c17fa427e/remeta-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1b896d2c286f604d54f9eb03f6a63574d8855a1ffcfd0214f0be16a617870d0",
          "md5": "c726d8a07ebcd88ab7d865e956702834",
          "sha256": "e1526d1034a8152c01196b5f6371a332879e7ad67fe9a9b2086b58a84a58c9ce"
        },
        "downloads": -1,
        "filename": "remeta-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c726d8a07ebcd88ab7d865e956702834",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 208912,
        "upload_time": "2022-06-10T13:40:12",
        "upload_time_iso_8601": "2022-06-10T13:40:12.965743Z",
        "url": "https://files.pythonhosted.org/packages/c1/b8/96d2c286f604d54f9eb03f6a63574d8855a1ffcfd0214f0be16a617870d0/remeta-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37e0d2be820ed31edaf0d3c40dab41e5f128ac6e740c8c47f7aaf395af874fcf",
          "md5": "92757cad901220e7961125a4176faf9a",
          "sha256": "8e9bc695cece07f0faa442fd428745d411f13a665616dfded240370abc5c70b0"
        },
        "downloads": -1,
        "filename": "remeta-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "92757cad901220e7961125a4176faf9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 208983,
        "upload_time": "2022-06-23T06:10:36",
        "upload_time_iso_8601": "2022-06-23T06:10:36.564889Z",
        "url": "https://files.pythonhosted.org/packages/37/e0/d2be820ed31edaf0d3c40dab41e5f128ac6e740c8c47f7aaf395af874fcf/remeta-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38c9c221c954fc476214f32d7e19ad08a6ae4e58b3df0e65d28319273691c69f",
          "md5": "b7ae19bcc6fea43b3987195bfb12b974",
          "sha256": "d21533ce8059a01125d9cf9cab3f4848ee04693ff2bbc8d7ba5389f9bc89123c"
        },
        "downloads": -1,
        "filename": "remeta-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b7ae19bcc6fea43b3987195bfb12b974",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 208995,
        "upload_time": "2022-06-23T06:19:11",
        "upload_time_iso_8601": "2022-06-23T06:19:11.465995Z",
        "url": "https://files.pythonhosted.org/packages/38/c9/c221c954fc476214f32d7e19ad08a6ae4e58b3df0e65d28319273691c69f/remeta-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b17dbdd82f0fb52513be6cc801699de9adaebae2f9ff130edf34b25b9975d14",
          "md5": "de8a3f1f5d6f0dc375969cb28678da88",
          "sha256": "2ba3836b5882c164578a942299faabb2b40ed47a0f9ba043594fb365f3a01d00"
        },
        "downloads": -1,
        "filename": "remeta-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "de8a3f1f5d6f0dc375969cb28678da88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 208832,
        "upload_time": "2022-06-23T19:56:22",
        "upload_time_iso_8601": "2022-06-23T19:56:22.266651Z",
        "url": "https://files.pythonhosted.org/packages/6b/17/dbdd82f0fb52513be6cc801699de9adaebae2f9ff130edf34b25b9975d14/remeta-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2eaa5cc38cf3cfb03ff589fe07cb8135d1c8bc1ebefc3ec9dc927f9e64fe513",
          "md5": "48193c1ec0d5d64568500342a47be9e9",
          "sha256": "3b5dbb6d59f791919d3d6fe2dd076ab38e518fc3c3a24205e9ded3bd18d0068b"
        },
        "downloads": -1,
        "filename": "remeta-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "48193c1ec0d5d64568500342a47be9e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 208187,
        "upload_time": "2022-09-16T10:44:06",
        "upload_time_iso_8601": "2022-09-16T10:44:06.359684Z",
        "url": "https://files.pythonhosted.org/packages/a2/ea/a5cc38cf3cfb03ff589fe07cb8135d1c8bc1ebefc3ec9dc927f9e64fe513/remeta-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2eaa5cc38cf3cfb03ff589fe07cb8135d1c8bc1ebefc3ec9dc927f9e64fe513",
        "md5": "48193c1ec0d5d64568500342a47be9e9",
        "sha256": "3b5dbb6d59f791919d3d6fe2dd076ab38e518fc3c3a24205e9ded3bd18d0068b"
      },
      "downloads": -1,
      "filename": "remeta-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "48193c1ec0d5d64568500342a47be9e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 208187,
      "upload_time": "2022-09-16T10:44:06",
      "upload_time_iso_8601": "2022-09-16T10:44:06.359684Z",
      "url": "https://files.pythonhosted.org/packages/a2/ea/a5cc38cf3cfb03ff589fe07cb8135d1c8bc1ebefc3ec9dc927f9e64fe513/remeta-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}