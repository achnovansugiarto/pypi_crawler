{
  "info": {
    "author": "Alex Freund",
    "author_email": "alexjfreund@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# The Curvature Method\n[![Code Quality](https://www.code-inspector.com/project/16124/status/svg)](https://frontend.code-inspector.com/public/project/16124/curve_method/dashboard)\n[![Build Status](https://travis-ci.org/alexjfreund/curve_method.svg?branch=main)](https://travis-ci.org/alexjfreund/curve_method)\n[![codecov](https://codecov.io/gh/alexjfreund/curve_method/branch/main/graph/badge.svg)](https://codecov.io/gh/alexjfreund/curve_method)\n[![PyPI version](https://badge.fury.io/py/curve-method.svg)](https://badge.fury.io/py/curve-method)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nA quantitative approach to select the optimal number of clusters in a dataset.\n\n## Table of contents\n* [Introduction](#introduction)\n* [Installation](#installation)\n* [Examples](#examples)\n* [Dependencies](#dependencies)\n* [References](#references)\n* [License](#license)\n\n## Introduction\n\nClustering is a major area in Unsupervised Machine Learning. In many\nclustering algorithms, the number of desired clusters is given as a\nparameter. Selecting a dataset's true cluster number _k_ can be \nchallenging, as model accuracy increases with additional clusters, yet \ntoo high of a _k_ value leads to overfitting, and a less meaningful model. \nBecause the value of _k_ has a dramatic impact on clustering results, \nit is important to select it carefully.\n\nThe most common method of selecting a true cluster number is known as\nthe \"Elbow Method\", which involves manually selecting a point along an\nevaluation graph that appears to contain the sharpest corner. There are\nseveral problems with this approach, as it is empirical and requires direct\nintervention. Additionally, the axes of the evaluation graph tend to lie on \nsignificantly different scales, which makes it difficult to recognize the \noptimal _k_ value visually. In contrast, the Curvature Method is a recent \napproach that quantitatively finds the optimal _k_ value [[1]](#1). This \napproach can be used in a broad range of clustering applications, further \ndecoupling the learning process from human intervention.\n\n## Installation\nThis project can be installed using pip:\n```\npip install curve-method\n```\n\n## Examples\nFirst, obtain a dataset as a 2D NumPy array. In these examples, we use the \n`make_blobs()` generator from Scikit-Learn to simulate a real dataset.\n```python\nfrom sklearn.datasets import make_blobs\n\nX, _ = make_blobs(n_samples=10000, n_features=4, centers=5)\n```\n\n### Evaluation\nTo view the curvature index for each _k_ value up to a specified maximum, \nuse the `curve_scores()` function.\n```python\nfrom curve_method import curve_scores\n\ncurve_scores(X, k_max=10)\n```\n\nOr, to obtain the _k_ value with maximum curvature, use the `true_k()` \nfunction.\n```python\nfrom curve_method import true_k\n\ntrue_k(X, k_max=10)\n```\n\n### Plotting\nTo view the evaluation graph from the Curvature Method, use the \n`scatter()` function. If desired, points can be connected on the graph by \nsetting `line=True`.\n```python\nfrom curve_method import scatter\n\nscatter(X, k_max=12, line=False)\n```\n\nAs an alternative, use the polyfit() function to generate an evaluation \ngraph with a polynomial approximation. The degree of the polynomial _n_ \ncan be specified by setting `deg=n`.\n```python\nfrom curve_method import polyfit\n\npolyfit(X, k_max=12, deg=3)\n```\n\n## Dependencies\n* NumPy\n* Matplotlib\n* Scikit-learn\n\n## References\n<a name=\"1\"></a>\n[1] Zhang, Y., Ma≈Ñdziuk, J., Quek, C.H. and Goh, B.W., 2017.\nCurvature-based method for determining the number of clusters.\nInformation Sciences, 415, pp.414-428.\n\n## License\nThis project is licensed under the terms of the MIT License.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/alexjfreund/curve_method/archive/v0.2.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alexjfreund/curve_method",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "curve-method",
    "package_url": "https://pypi.org/project/curve-method/",
    "platform": "",
    "project_url": "https://pypi.org/project/curve-method/",
    "project_urls": {
      "Download": "https://github.com/alexjfreund/curve_method/archive/v0.2.2.tar.gz",
      "Homepage": "https://github.com/alexjfreund/curve_method"
    },
    "release_url": "https://pypi.org/project/curve-method/0.2.2/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "scikit-learn"
    ],
    "requires_python": "",
    "summary": "A quantitative approach to select the optimal number of clusters in a dataset.",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8644031,
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70a6497ffeba191cdbc90ad4505fcdf833be89bbbe3c164624f17db5871647a3",
          "md5": "b7ec6ead0ea4a75358b066efbcba627a",
          "sha256": "c95485030e07ccb5d12ac863268d9ccc6ba6a159af0aa5fbe1ee01e9a34db491"
        },
        "downloads": -1,
        "filename": "curve_method-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7ec6ead0ea4a75358b066efbcba627a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12320,
        "upload_time": "2020-11-12T18:17:41",
        "upload_time_iso_8601": "2020-11-12T18:17:41.416003Z",
        "url": "https://files.pythonhosted.org/packages/70/a6/497ffeba191cdbc90ad4505fcdf833be89bbbe3c164624f17db5871647a3/curve_method-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e287849adc22c15048a641103a57899716d461b63261a1016195476bd34ba54f",
          "md5": "97a0c8e5c48676dc8ae7ca80e2df2305",
          "sha256": "8f9904cbb2d29937aa0a555c768ea4727f50190f81df77e40524a18c97098d7f"
        },
        "downloads": -1,
        "filename": "curve_method-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "97a0c8e5c48676dc8ae7ca80e2df2305",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10726,
        "upload_time": "2020-11-12T18:17:42",
        "upload_time_iso_8601": "2020-11-12T18:17:42.531407Z",
        "url": "https://files.pythonhosted.org/packages/e2/87/849adc22c15048a641103a57899716d461b63261a1016195476bd34ba54f/curve_method-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70a6497ffeba191cdbc90ad4505fcdf833be89bbbe3c164624f17db5871647a3",
        "md5": "b7ec6ead0ea4a75358b066efbcba627a",
        "sha256": "c95485030e07ccb5d12ac863268d9ccc6ba6a159af0aa5fbe1ee01e9a34db491"
      },
      "downloads": -1,
      "filename": "curve_method-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b7ec6ead0ea4a75358b066efbcba627a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12320,
      "upload_time": "2020-11-12T18:17:41",
      "upload_time_iso_8601": "2020-11-12T18:17:41.416003Z",
      "url": "https://files.pythonhosted.org/packages/70/a6/497ffeba191cdbc90ad4505fcdf833be89bbbe3c164624f17db5871647a3/curve_method-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e287849adc22c15048a641103a57899716d461b63261a1016195476bd34ba54f",
        "md5": "97a0c8e5c48676dc8ae7ca80e2df2305",
        "sha256": "8f9904cbb2d29937aa0a555c768ea4727f50190f81df77e40524a18c97098d7f"
      },
      "downloads": -1,
      "filename": "curve_method-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "97a0c8e5c48676dc8ae7ca80e2df2305",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10726,
      "upload_time": "2020-11-12T18:17:42",
      "upload_time_iso_8601": "2020-11-12T18:17:42.531407Z",
      "url": "https://files.pythonhosted.org/packages/e2/87/849adc22c15048a641103a57899716d461b63261a1016195476bd34ba54f/curve_method-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}