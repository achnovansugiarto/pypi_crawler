{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![lint](https://github.com/hackenbergstefan/pyroxene/actions/workflows/lint.yml/badge.svg)](https://github.com/hackenbergstefan/pyroxene/actions/workflows/lint.yml)\n[![test](https://github.com/hackenbergstefan/pyroxene/actions/workflows/test.yml/badge.svg)](https://github.com/hackenbergstefan/pyroxene/actions/workflows/test.yml)\n\n# Pyroxene\n\n## Introduction\n\nTesting libraries on embedded devices requires always \"some code around\" to establish a communication between host and embedded device.\nThis ist often called \"MiniOS\" or \"TestOS\".\nUsually every team of develops such a small operating system independently.\n\nIn the end you have a bunch of embedded applications with only one purpose:\nFunctional verification of a library.\n\nWhat would happens if we could unify all these approaches?\nThinking about what is needed for such a unified test application we realize that we need only 3 \"commands\" the embedded device must support:\n\n1. Read data from memory locations.\n2. Write data to memory locations.\n3. Call functions with parameters and return the result.\n\nEverything else can be done on a host system!\n\n## Overview and example\n\n```mermaid\nflowchart LR\n    subgraph Device\n        direction TB\n        pyroxene --> A(Embedded\\nlibrary)\n    end\n    subgraph Host\n        direction TB\n        Testcode --> device_proxy\n        elfbackend --> device_proxy\n        device_proxy --> device_commands\n        B(Elffile) --> C(pyelftoos)\n        C <--> elfbackend\n    end\n    device_commands <--> pyroxene\n```\n\n### Example\n\nLet's consider the following example:\nA C library (for embedded devices) implements the following function:\n\n```C\nunsigned int addition(unsigned int arg1, unsigned int arg2)\n{\n    return arg1 + arg2;\n}\n```\n\nA tester familiar with Python unittest wants to write the following test code:\n\n```python\nclass TestLibrary(unittest.TestCase):\n    def test_addition(self)\n        response = lib.addition(39, 3)\n        self.assertEqual(response, 42)\n```\n\nPyroxene makes this possible!\n\n- `lib` is a [pyroxene.device_proxy.LibProxy](./pyroxene/device_proxy) object.\n- `LibProxy` \"knows\" everything about the library by examining the elf-binary.\n  So it is able to resolve the address of the exported function `addition`.\n  (`lib.addition` is an object of type `pyroxene.device_proxy.FuncProxy`)\n- Calling that function instructs the `FuncProxy` to convert all arguments to a list of integers (see #Scope).\n- These list is marshaled in `device_commands` and sent to the (embedded) target device.\n- The answer get's un-marshaled and returned to the caller.\n\n## Scope\n\n- Pyroxene focuses on libraries written in C.\n- Pyroxene needs debug information in the compiled elf-file.\n- Pyroxene supports reading macros currently only using `fromelf`.\n- Pyroxene makes assumptions about the calling convention of the target architecture:\n  All arguments which are passed to functions must be compatible to `unsigned long`.\n  E.g. A `uint8_t`-value must be passed same as it would be a `uint32_t`.\n  For ARM Thumb-2 and x86_64 this holds true.\n  In a nutshell: _Everything is `ulong`!_\n\n## Pyroxene Commands\n\nThere are three device commands:\n\n- `memory_read`: </br>\n  `0x01 [uint16] | cmdlen [uint16] | addr [ulong] | length [ulong]` </br>\n  Returns: `response [length]`\n- `memory_write`: </br>\n  `0x02 [uint16] | cmdlen [uint16] | addr [ulong] | data [datalength]` </br>\n  Returns: Nothing.\n- `call`: </br>\n  `0x03 [uint16] | cmdlen [uint16] | addr [ulong] | retlength [ulong] | number_of_args [ulong] | arg1 [ulong] | ... | argn[ulong]` </br>\n  Returns: `response [retlength]`.\n\n## Limitations (as of now)\n\n- Pyroxene does not support floating point data types.\n- Pyroxene does not support target architectures where the size of the address space does not equal the size of `unsigned long`.\n- Pyroxene does not implement error handling on protocol level.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyroxene",
    "package_url": "https://pypi.org/project/pyroxene/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyroxene/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pyroxene/1.0/",
    "requires_dist": [
      "cffi",
      "pcpp",
      "pycparser",
      "pyelftools",
      "pygdbmi",
      "pyserial",
      "setuptools",
      "flake8 ; extra == 'dev'",
      "black ; extra == 'dev'",
      "hypothesis ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Pyroxene is a Python test interface: Execute tests on remote device using minmal shim and ELF debug data",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15154789,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1069407a069a77223446de881972f0a846a86f3ab70bb9c48ab233503b84beca",
          "md5": "8ab27d4eafaeddd00665b45fa43670ea",
          "sha256": "770fd5a41ab6b438f2111d95e36f46bd2e60ec3922b945d5d522dc478f4f8167"
        },
        "downloads": -1,
        "filename": "pyroxene-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ab27d4eafaeddd00665b45fa43670ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28633,
        "upload_time": "2022-09-20T13:31:38",
        "upload_time_iso_8601": "2022-09-20T13:31:38.994584Z",
        "url": "https://files.pythonhosted.org/packages/10/69/407a069a77223446de881972f0a846a86f3ab70bb9c48ab233503b84beca/pyroxene-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9de82fc21c9ffb27c67d9bb224952d14ab45c6db3ae5d16cadf69e4177d68b84",
          "md5": "a9976ed9ce78b21e9da94124617b8f47",
          "sha256": "c3089d37b005c65c5a56ac7e27003759639210ed0551360a3d9be0edf1f4f0c8"
        },
        "downloads": -1,
        "filename": "pyroxene-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a9976ed9ce78b21e9da94124617b8f47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25556,
        "upload_time": "2022-09-20T13:31:40",
        "upload_time_iso_8601": "2022-09-20T13:31:40.695876Z",
        "url": "https://files.pythonhosted.org/packages/9d/e8/2fc21c9ffb27c67d9bb224952d14ab45c6db3ae5d16cadf69e4177d68b84/pyroxene-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1069407a069a77223446de881972f0a846a86f3ab70bb9c48ab233503b84beca",
        "md5": "8ab27d4eafaeddd00665b45fa43670ea",
        "sha256": "770fd5a41ab6b438f2111d95e36f46bd2e60ec3922b945d5d522dc478f4f8167"
      },
      "downloads": -1,
      "filename": "pyroxene-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8ab27d4eafaeddd00665b45fa43670ea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28633,
      "upload_time": "2022-09-20T13:31:38",
      "upload_time_iso_8601": "2022-09-20T13:31:38.994584Z",
      "url": "https://files.pythonhosted.org/packages/10/69/407a069a77223446de881972f0a846a86f3ab70bb9c48ab233503b84beca/pyroxene-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9de82fc21c9ffb27c67d9bb224952d14ab45c6db3ae5d16cadf69e4177d68b84",
        "md5": "a9976ed9ce78b21e9da94124617b8f47",
        "sha256": "c3089d37b005c65c5a56ac7e27003759639210ed0551360a3d9be0edf1f4f0c8"
      },
      "downloads": -1,
      "filename": "pyroxene-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a9976ed9ce78b21e9da94124617b8f47",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25556,
      "upload_time": "2022-09-20T13:31:40",
      "upload_time_iso_8601": "2022-09-20T13:31:40.695876Z",
      "url": "https://files.pythonhosted.org/packages/9d/e8/2fc21c9ffb27c67d9bb224952d14ab45c6db3ae5d16cadf69e4177d68b84/pyroxene-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}