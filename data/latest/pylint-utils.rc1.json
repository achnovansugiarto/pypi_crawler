{
  "info": {
    "author": "Jack De Winter",
    "author_email": "jack.de.winter@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# PyLint Utilities (pylint_utils)\n\n|   |   |\n|---|---|\n|Project|[![Version](https://img.shields.io/pypi/v/pylint_utils.svg)](https://pypi.org/project/pylint_utils)  [![Python Versions](https://img.shields.io/pypi/pyversions/pylint_utils.svg)](https://pypi.org/project/pylint_utils)  ![platforms](https://img.shields.io/badge/platform-windows%20%7C%20macos%20%7C%20linux-lightgrey)  [![License](https://img.shields.io/github/license/jackdewinter/pylint_utils.svg)](https://github.com/jackdewinter/pylint_utils/blob/master/LICENSE.txt)  [![GitHub top language](https://img.shields.io/github/languages/top/jackdewinter/pylint_utils)](https://github.com/jackdewinter/pylint_utils)|\n|Quality|[![GitHub Workflow Status (event)](https://img.shields.io/github/workflow/status/jackdewinter/pylint_utils/Main)](https://github.com/jackdewinter/pylint_utils/actions/workflows/main.yml)  [![Issues](https://img.shields.io/github/issues/jackdewinter/pylint_utils.svg)](https://github.com/jackdewinter/pylint_utils/issues)  [![codecov](https://codecov.io/gh/jackdewinter/pymarkdown/branch/main/graph/badge.svg?token=PD5TKS8NQQ)](https://codecov.io/gh/jackdewinter/pylint_utils)  [![Sourcery](https://img.shields.io/badge/Sourcery-enabled-brightgreen)](https://sourcery.ai)  ![snyk](https://img.shields.io/snyk/vulnerabilities/github/jackdewinter/pylint_utils) |\n|  |![GitHub Pipenv locked dependency version (branch)](https://img.shields.io/github/pipenv/locked/dependency-version/jackdewinter/pylint_utils/black/master)  ![GitHub Pipenv locked dependency version (branch)](https://img.shields.io/github/pipenv/locked/dependency-version/jackdewinter/pylint_utils/flake8/master)  ![GitHub Pipenv locked dependency version (branch)](https://img.shields.io/github/pipenv/locked/dependency-version/jackdewinter/pylint_utils/pylint/master)  ![GitHub Pipenv locked dependency version (branch)](https://img.shields.io/github/pipenv/locked/dependency-version/jackdewinter/pylint_utils/mypy/master)  ![GitHub Pipenv locked dependency version (branch)](https://img.shields.io/github/pipenv/locked/dependency-version/jackdewinter/pylint_utils/pyroma/master)  ![GitHub Pipenv locked dependency version (branch)](https://img.shields.io/github/pipenv/locked/dependency-version/jackdewinter/pylint_utils/pre-commit/master)|\n|Community|[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://github.com/jackdewinter/pylint_utils/graphs/commit-activity) [![Stars](https://img.shields.io/github/stars/jackdewinter/pylint_utils.svg)](https://github.com/jackdewinter/pylint_utils/stargazers)  [![Forks](https://img.shields.io/github/forks/jackdewinter/pylint_utils.svg)](https://github.com/jackdewinter/pylint_utils/network/members)  [![Contributors](https://img.shields.io/github/contributors/jackdewinter/pylint_utils.svg)](https://github.com/jackdewinter/pylint_utils/graphs/contributors)  [![Downloads](https://img.shields.io/pypi/dm/pylint_utils.svg)](https://pypistats.org/packages/pylint_utils)|\n|Maintainers|[![LinkedIn](https://img.shields.io/badge/-LinkedIn-black.svg?logo=linkedin&colorB=555)](https://www.linkedin.com/in/jackdewinter/)|\n\n## TL;DR\n\nFrom my point of view, quality is not an absolute 0% or 100%.  For me, quality\nis a series of qualitative measurements that occur in the range between those two\nabsolutes.  Given that viewpoint, I believe it logically follows that any qualitative\nmeasurements that \"quality percentage\" have (for the most part) similar ranges for\ntheir values. Part of those quality measurements for Python projects are the number\nof suppressions used to suppress PyLint warnings.  Therefore, it follows that it\nis important to curate, track, and measure PyLint suppressions to contribute to\nthat qualitative measurement.\n\nTherefore, this package provides a few utilities that:\n\n- verify that PyLint suppression enables and disables are balanced, existing\n  in pairs\n- create a report on the suppressions used in a given set of files\n- looks for PyLint suppression that are no longer used\n\nThe intent of these utilities is to properly manage any PyLint suppressions used\nwithin a project, enabling other applications to use the summary information to\ncreate a useful quality measurement from that report.\n\n## Getting Started\n\nIn basic mode, this package serves to check whether any PyLint suppressions present\nin the scanned code follow good suppression practices.  Specifically, those good\npractices are:\n\n- with few exceptions*, any warning that is suppressed using `disabled` is turned\n  back on again using `enabled`\n- a warning that is already disabled cannot be disabled again\n- a warning that is already enabled cannot be enabled again\n\nAs the asterisk notes, there are exceptions.  The only current exception is\na file scoped  `disable=too-many-lines` suppression.  This suppression is typically\nadded at the start of a Python file, and must not be matched with an `enabled`\nsuppression to have the desired effect.  Therefore, there is special handling in\nplace to not check for a matching `enabled` suppression in that one case.\n\nChecking whether a set of Python files adheres to these practices is simple.\nFor example, to check this project's `pylint_utils` module from the root of the\nproject, invoke:\n\n```sh\npylint_utils --verbose pylint_utils\n```\n\nWhile the `--verbose` flag is not required, it will help to show the files that\nare being scanned as the scanner is working through files.  If the files are following\nbest practices, the utility will output a set of lines like this:\n\n```text\nScanning file: pylint_utils/main.py\n  File contains 0 scan errors.\n```\n\nfor each file that is scanned.  While the `pylint_utils/main.py` module itself is\nkept clean, if there were any violations of the best practices, a line similar to\none of the following lines would be output:\n\n```text\npylint_utils/main.py(13): Pylint error 'too-many-arguments' was disabled, but not re-enabled.\npylint_utils/main.py(12): Pylint error 'too-many-arguments' was already disabled.\npylint_utils/main.py(10): Pylint error 'too-many-arguments' was not disabled, so enable is ignored.\n```\n\n## Advanced Features\n\nBefore describing these other features, it is important to note that the check to\nensure that suppression are following good practices always happen.  However, once\nthose checks have completed, either one of the actions in the following sections\nmay performed after those checks.\n\n### Reporting\n\nTo aid in coming up with a quality metric based on the number of PyLint suppressions\nin a given set of files, a report can be generated of the used supressions.  This\nreporting is initiated using the `--report` or `-r` command line argument, followed\nby the name of the file to write the report to.  An example of such a command line\nwould be:\n\n```sh\npylint_utils --report report-dir project-dir\n```\n\nThe resultant report is in the JSON format, and looks something like this mocked\nup report file:\n\n```json\n{\n    \"disables-by-file\": {\n        \"pymarkdown/__init__.py\": {},\n        \"pymarkdown/__main__.py\": {},\n        \"pymarkdown/main.py\": {\n            \"broad-except\": 2\n        },\n        \"pymarkdown/version.py\": {}\n    },\n    \"disables-by-name\": {\n        \"broad-except\": 2,\n    }\n}\n```\n\nIn the report file, there are two sections: the `disables-by-name` section and the\n`disables-by-file` section.  As its name suggests, the `disables-by-name` section\nprovides an accounting of the suppressed warnings based on the name of the warning.\nTo provide more indepth information, the `disables-by-file` section provides an\naccouting of those same warnings, but breaking down those warnings by the files\nin which they were found in.\n\n### Finding Unused Suppressions\n\nAs software project usually evolve, there is a need to check to see if a suppression\nthat was once needed still requires suppression.  This often happens when one or\nmore modules or functions are refactored, breaking them up into small pieces.\nWhat may have been one function with `too-many-branches` can now become two functions,\neach with a healthy number of branches.\n\nTo scan for unused suppressions, either of the `--scan` argument or the `-s` argument\nis used as a flag to turn the scanning on.\nIn cases where a configuration file is used with PyLint to modify the behavior of\nPyLint, that configuration file needs to be passed to PyLint_Utils to ensure that\nthe scanner and PyLint will use the same configuration.  To do that, simply\nadd `--config {file}` to the command line, where `{file}` is the name of the\nconfiguration file.  As an example, in the PyLint_Utils package itself, the\nconfiguration for PyLint is in the `setup.cfg` file.  Therefore, `--config setup.cfg`\nis added to the command line.\n\nThat is where the fun begins.\nTo properly determine if suppressions in each file are still\nrequired, each file must properly scan with PyLint before the unused suppression\ncheck can continue.  That \"feature\" is part of the design of this package, used\nto keep the complexity at manageable levels.  To that end, if any unsuppressed\nwarnings are found, then text similar to the following will appear:\n\n```text\nVerifying {file} scans cleanly without modifications.\n  Baseline PyLint scan found unsuppressed warnings: missing-function-docstring, missing-module-docstring, too-many-arguments, trailing-newlines\n  Fix all errors before scanning again.\n```\n\nwhere `{file}` is the name of the file.\n\nWhen the files have been fixed to include no unsuppressed warnings, the pacakge\nwill then proceed to look at each file to determine if any warnings are no longer\nneeded.  To achieve parity with PyLint's handling of warnings, PyLint itself is\nused as the final arbiter of whether any warnings is still required.  The tradeoff\nis that it takes time to spin up PyLint, ask it to scan a file, and to then wait\nfor it to close properly.\n\nHowever, when that process finishes for each file, one of two outcomes is possible.\nIn the positive case, if no unused suppressions are found the following test will\nappear:\n\n```text\nNo unused PyLint suppressions found.\n```\n\nOtherwise, some form of the following text will appear:\n\n```text\n1 unused PyLint suppressions found.\n{file}:6: Unused suppression: too-many-branches\n```\n\nwith the number of unused suppression listed, followed by the file and line number\nfor each unused suppression, and which suppression is no longer needed.\n\n## Future Goals\n\nThe 0.5.0 releases are to get this project on the board.\nOnce that is done, going to give this project time to mature and get battle tested.\n\n## When Did Things Change?\n\nThe changelog for this project is maintained [at this location](/changelog.md).\n\n## Still Have Questions?\n\nIf you still have questions, please consult our [Frequently Asked Questions](/docs/faq.md) document.\n\n## Contact Information\n\nIf you would like to report an issue with the tool or the documentation, please file an issue [using GitHub](https://github.com/jackdewinter/pylint_utils/issues).\n\nIf you would like to us to implement a feature that you believe is important, please file an issue [using GitHub](https://github.com/jackdewinter/pylint_utils/issues) that includes what you want to add, why you want to add it, and why it is important.\nPlease note that the issue will usually be the start of a conversation and be ready for more questions.\n\nIf you would like to contribute to the project in a more substantial manner, please contact me at `jack.de.winter` at `outlook.com`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jackdewinter/pylint_utils",
    "keywords": "",
    "license": "",
    "maintainer": "Jack De Winter",
    "maintainer_email": "jack.de.winter@outlook.com",
    "name": "pylint-utils",
    "package_url": "https://pypi.org/project/pylint-utils/",
    "platform": null,
    "project_url": "https://pypi.org/project/pylint-utils/",
    "project_urls": {
      "Change Log": "https://github.com/jackdewinter/pylint_utils/blob/master/changelog.md",
      "Homepage": "https://github.com/jackdewinter/pylint_utils"
    },
    "release_url": "https://pypi.org/project/pylint-utils/0.5.0/",
    "requires_dist": null,
    "requires_python": ">=3.8.0",
    "summary": "Various tools used to examine pylint suppressions and catalog them.",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13563758,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20e8ad4d2493a45531a23fdbe0ca6fa330272e1ed43a818f594836f39cbb448c",
          "md5": "318dfa77821d8eecf81e55ecfc872de5",
          "sha256": "6bed97505c5bfd2f9163a27c1a9046838716f1fb5bb59a7ce40e6d86c186cfe1"
        },
        "downloads": -1,
        "filename": "pylint_utils-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "318dfa77821d8eecf81e55ecfc872de5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0",
        "size": 16542,
        "upload_time": "2022-04-20T03:15:58",
        "upload_time_iso_8601": "2022-04-20T03:15:58.104439Z",
        "url": "https://files.pythonhosted.org/packages/20/e8/ad4d2493a45531a23fdbe0ca6fa330272e1ed43a818f594836f39cbb448c/pylint_utils-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cac42259cfbc3e96d43de89a14240a457812d34b6116fbd401afdd40f80cac3",
          "md5": "a3d50b1a77fba4790d6761a5b17c6bc9",
          "sha256": "11e5176da7d86d478a9b020f71ebe2a9863934d39bec8256771ec6db75639471"
        },
        "downloads": -1,
        "filename": "pylint_utils-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a3d50b1a77fba4790d6761a5b17c6bc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0",
        "size": 23936,
        "upload_time": "2022-04-20T03:15:59",
        "upload_time_iso_8601": "2022-04-20T03:15:59.454456Z",
        "url": "https://files.pythonhosted.org/packages/1c/ac/42259cfbc3e96d43de89a14240a457812d34b6116fbd401afdd40f80cac3/pylint_utils-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "20e8ad4d2493a45531a23fdbe0ca6fa330272e1ed43a818f594836f39cbb448c",
        "md5": "318dfa77821d8eecf81e55ecfc872de5",
        "sha256": "6bed97505c5bfd2f9163a27c1a9046838716f1fb5bb59a7ce40e6d86c186cfe1"
      },
      "downloads": -1,
      "filename": "pylint_utils-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "318dfa77821d8eecf81e55ecfc872de5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.0",
      "size": 16542,
      "upload_time": "2022-04-20T03:15:58",
      "upload_time_iso_8601": "2022-04-20T03:15:58.104439Z",
      "url": "https://files.pythonhosted.org/packages/20/e8/ad4d2493a45531a23fdbe0ca6fa330272e1ed43a818f594836f39cbb448c/pylint_utils-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1cac42259cfbc3e96d43de89a14240a457812d34b6116fbd401afdd40f80cac3",
        "md5": "a3d50b1a77fba4790d6761a5b17c6bc9",
        "sha256": "11e5176da7d86d478a9b020f71ebe2a9863934d39bec8256771ec6db75639471"
      },
      "downloads": -1,
      "filename": "pylint_utils-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a3d50b1a77fba4790d6761a5b17c6bc9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.0",
      "size": 23936,
      "upload_time": "2022-04-20T03:15:59",
      "upload_time_iso_8601": "2022-04-20T03:15:59.454456Z",
      "url": "https://files.pythonhosted.org/packages/1c/ac/42259cfbc3e96d43de89a14240a457812d34b6116fbd401afdd40f80cac3/pylint_utils-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}