{
  "info": {
    "author": "Artur Tamborski",
    "author_email": "tamborskiartur@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<!-- markdownlint-disable no-inline-html first-line-h1 -->\n\n<div align=\"center\">\n  <h1>notion-py</h1>\n  <h4>(Fork of) Unofficial Python 3 client for Notion.so API v3.</h4>\n\n  [Documentation][documentation-url]\n  | [Package on PyPI][package-url]\n  <br>\n  <br>\n  ![check formatting][check-formatting-url]\n  ![run unit tests][run-unit-tests-url]  \n  ![upload-python-package][upload-python-package-url]\n  ![run-smoke-tests][run-smoke-tests-url]\n  ![documentation-status][documentation-status-url]  \n  ![code-style][code-style-url]\n  ![license][license-url]\n  ![code-size][code-size-url]\n  ![downloads-rate][downloads-rate-url]\n</div>\n<br>\n\n\n\n\n---\n\n> **_NOTE:_**  This is a fork of the \n[original repository](https://github.com/jamalex/notion-py)\ncreated by [Jamie Alexandre](https://github.com/jamalex).\n\nYou can try out this package - it's called \n[notion-py](https://pypi.org/project/notion-py/)\non PyPI. The original package created by Jamie is  still online\nunder the name [notion](https://pypi.org/project/notion/) on PyPI,\nso please watch out for any confusion.\n\nimports are still working as before, the `-py` in \nname is there only to differentiate between these two.\n\n---\n\nThese libraries as of now are _not_ fully compatible.  \n(I'm working on sending PRs to the upstream)\n\nList of major differences:\n- imports were changed, especially for blocks and collections.  \n  General rule is:\n  - `notion.block.py       ->  notion.block.*.py`\n  - `notion.collection.py  ->  notion.block.collection.*.py`\n- some block names were changed to align them with notion.so  \n  One of such examples is `TodoBlock -> ToDoBlock` (because it's type is `to_do`)\n- some function definitions also changed  \n  I did that to simplify the API and make it more uniform.\n\n<br>\n<br>\n\n\n\n## Features\n- **Automatic conversion between Notion blocks and Python objects**  \n  we covered pretty much every block type there is!\n\n- **Callback system for responding to changes in Notion**  \n  useful for triggering actions, updating another block, etc.\n\n- **Object-oriented interface**  \n  seamless mapping of API response parameters to Python classes/attributes.\n\n- **Local cache of data in a unified data store**  \n  note: this is disabled by default; add `enable_caching=True` when initializing `NotionClient` to change it.\n\n- **Real-time reactive two-way data binding**  \n  fancy way of saying that changing Python object will update the Notion UI, and vice-versa.\n\n---\n\n![data binding example][data-binding-url]  \n<sup>*(Example of the two-way data binding in action)*</sup>\n<br>\n\n\n[Read more about Notion and the original notion-py package on Jamie's blog][introduction-url].\n\n\n## Usage\n\n### Quickstart\n\n\n> **_NOTE:_** The latest version of **notion-py** requires Python 3.6 or greater.\n\n\n`pip install notion-py`\n\n```Python\nfrom notion.client import NotionClient\n\n# Obtain the `token_v2` value by inspecting your browser \n# cookies on a logged-in (non-guest) session on Notion.so\nclient = NotionClient(token_v2=\"123123...\")\n\n# Replace this URL with the URL of the page you want to edit\npage = client.get_block(\"https://www.notion.so/myorg/Test-c0d20a71c0944985ae96e661ccc99821\")\n\nprint(\"The old title is:\", page.title)\n\n# You can use Markdown! We convert on-the-fly \n# to Notion's internal formatted text data structure.\npage.title = \"The title has now changed, and has *live-updated* in the browser!\"\n```\n\n## Getting the token_v2\n\n1. Open [notion.so](https://notion.so) in your browser and log in.\n2. Open up developer console ([quick tutorial the most common browsers][dev-tools-url]).\n3. Find a list of cookies (Firefox: `Storage` -> `Cookies`, Chrome: `Application` -> `Cookies`).\n4. Find the one named `token_v2` and copy its value (lengthy, 160ish characters hex string).\n5. Save it somewhere safe and use it with notion-py!\n\n> **_NOTE:_** Keep the token in secure place and out of your repository!  \n> This token when leaked can let anyone do anything on your notion account!\n\n\n## Updating records\n\nWe keep a local cache of all data that passes through.  \nWhen you reference an attribute on a `Record` (basically\nany `Block`) we first look to that cache to retrieve the value.\nIf it doesn't find it, it retrieves it from the server.\nYou can also manually refresh the data for a `Record`\nby calling the `refresh()` method on it.\n\nBy default (unless we instantiate `NotionClient` \nwith `monitor=False`), we also subscribe to long-polling \nupdates for any instantiated `Record`, so the local cache \ndata for these `Records` should be automatically \nlive-updated shortly after any data changes on the server.  \nThe long-polling happens in a background daemon thread.\n\n\n## Concepts and notes\n\n- **The tables we currently support are `block`, `space`,\n  `collection`, `collection_view`, and `notion_user`.**\n\n- **We map tables in the Notion database into Python classes**  \n  by subclassing `Record`, with each instance of a class\n  representing a particular record. Some fields from the\n  records (like `title` in the example above) have been\n  mapped to model properties, allowing for easy,\n  instantaneous read/write of the record.\n  Other fields can be read with the `get` method,\n  and written with the `set` method, but then you'll \n  need to make sure to match the internal structures exactly.\n\n- **Data for all tables are stored in a central RecordStore**  \n  with the `Record` instances not storing state internally,\n  but always referring to the data in the \n  central `RecordStore`.\n  Many API operations return updating versions of a large \n  number of associated records, which we use to update \n  the store, so the data in `Record` instances may sometimes \n  update without being explicitly requested.\n  You can also call the `refresh()` method on a `Record` \n  to trigger an update, or pass `force_update=True` to \n  methods like `get()`.\n\n- **The API doesn't have strong validation of most data**  \n  so be careful to maintain the structures Notion is expecting.\n  You can view the full internal structure of a record by \n  calling `myrecord.get()` with no arguments.\n\n- **When you call `client.get_block()`, you can pass in \n  block ID, or the URL of a block**  \n  Note that pages themselves are just `blocks`, as are all \n  the chunks of content on the page. You can get the URL \n  for a block within a page by clicking \"Copy Link\" in the \n  context menu for the block, and pass that URL \n  into `get_block()` as well.\n\n\n\n## Working on a Pull Request\n\nYou'll need `git` and `python3` with `venv` module.  \n\n\nBest way to start is to clone the repo and prepare the `.env` file.\nThis step is optional but nice to have to create healthy python venv.\n\n```bash\ngit https://github.com/arturtamborski/notion-py\n\ncd notion-py\n\ncp .env.example .env\nvim .env\n```\n\nYou should modify the variables as following:\n```bash\n# see above for info on how to get it\nNOTION_TOKEN_V2=\"insert your token_v2 here\"\n\n# used in smoke tests\nNOTION_PAGE_URL=\"insert URL from some notion page here\"\n\n# set it to any level from python logging library\nNOTION_LOG_LEVEL=\"DEBUG\" \n\n# the location for cache, defaults to current directory\nNOTION_DATA_DIR=\".notion-py\"\n```\n\nAnd then load that file (which will also create local venv):\n```bash\nsource .env\n```\n\nOn top of that there's a handy toolbox provided to you via `Makefile`.\nEverything related to the development of the project relies heavily on\nthe interface it provides.\n\nYou can display all commands by running\n```bash\nmake help\n```\n\nWhich should print a nice list of commands avaiable to you.\nThese are compatible with the Github Actions (CI system),\nin fact the actions are using Makefile directly for formatting\nand other steps so everything that Github might show you\nunder your Pull Request can be reproduced locally via Makefile.\n\n\nAlso, there's one very handy shortcut that I'm using all the\ntime when testing the library with smoke tests.\n\nThis command will run a single test unit that you point at\nby passing an argument to `make try-smoke-test` like so:\n\n```bash\nmake try-smoke-test smoke_tests/test_workflow.py::test_workflow_1\n```\n\nThat's super handy when you run some smoke tests and see the failed output:\n```\n============================= short test summary info =============================\nERROR smoke_tests/block/test_basic.py::test_block - KeyboardInterrupt\n!!!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!!\n!!!!!!!!!!!!!!!!!!!! _pytest.outcomes.Exit: Quitting debugger !!!!!!!!!!!!!!!!!!!!!\n================================ 1 error in 32.90s ================================\nmake: *** [Makefile:84: try-smoke-test] Error 2\n```\n\nNotice that `ERROR smoke_tests/...test_basic.py::test_block` - just copy it over\nas a command argument and run it again - you'll run this and only this one test!\n\n```bash\nmake try-smoke-test smoke_tests/block/test_basic.py::test_block\n```\n\n\n\n\n## Examples\n\n<details>\n<summary><em>Click here to show or hide</em></summary>  \n\n\n### Example: Traversing the block tree\n\n```Python\nfor child in page.children:\n    print(child.title)\n\nprint(f\"Parent of {page.id} is {page.parent.id}\")\n```\n\n\n### Example: Adding a new node\n\n```Python\nfrom notion.block.basic import ToDoBlock\n\ntodo = page.children.add_new(ToDoBlock, title=\"Something to get done\")\ntodo.checked = True\n```\n\n\n### Example: Deleting nodes\n\n```Python\n# soft-delete\npage.remove()\n\n# hard-delete\npage.remove(permanently=True)\n```\n\n\n### Example: Create an embedded content type (iframe, video, etc)\n\n```Python\nfrom notion.block.upload import VideoBlock\n\nvideo = page.children.add_new(VideoBlock, width=200)\n\n# sets \"property.source\" to the URL\n# and \"format.display_source\" to the embedly-converted URL\nvideo.set_source_url(\"https://www.youtube.com/watch?v=oHg5SJYRHA0\")\n```\n\n\n### Example: Create a new embedded collection view block\n\n```Python\nfrom notion.block.collection.basic import CollectionViewBlock\n\ncollection = client.get_collection(\"<some collection ID>\") # get an existing collection\ncvb = page.children.add_new(CollectionViewBlock, collection=collection)\nview = cvb.views.add_new(view_type=\"table\")\n\n# Before the view can be browsed in Notion, \n# the filters and format options on the view should be set as desired.\n# \n# for example:\n#   view.set(\"query\", ...)\n#   view.set(\"format.board_groups\", ...)\n#   view.set(\"format.board_properties\", ...)\n```\n\n\n### Example: Moving blocks around\n\n```Python\n# move my block to after the video\nmy_block.move_to(video, \"after\")\n\n# move my block to the end of otherblock's children\nmy_block.move_to(otherblock, \"last-child\")\n\n# Note: you can also use \"before\" and \"first-child\" :)\n```\n\n\n### Example: Subscribing to updates\n\n> **_NOTE:_** Notion -> Python automatic updating is \n> currently broken and hence disabled by default.  \n> call `my_block.refresh()` to update, in the meantime,\n> while monitoring is being fixed.\n\nWe can \"watch\" a `Record` so that we get a callback whenever \nit changes. Combined with the live-updating of records based \non long-polling, this allows for a \"reactive\" design, where \nactions in our local application can be triggered in response \nto interactions with the Notion interface.\n\n```Python\n# define a callback (all arguments are optional, just include the ones you care about)\ndef my_callback(record, difference):\n    print(\"The record's title is now:\", record.title)\n    print(\"Here's what was changed:\\n\", difference)\n\n# move my block to after the video\nmy_block.add_callback(my_callback)\n```\n\n\n### Example: Working with databases, aka \"collections\" (tables, boards, etc)\n\nHere's how things fit together:\n- Main container block: `CollectionViewBlock` (inline) / `CollectionViewPageBlock` (full-page)\n    - `Collection` (holds the schema, and is parent to the database rows themselves)\n        - `CollectionBlock`\n        - `CollectionBlock`\n        - ... (more database records)\n    - `CollectionView` (holds filters/sort/etc about each specific view)\n\nFor convenience, we automatically map the database\n\"columns\" (aka properties), based on the schema defined\nin the `Collection`, into getter/setter attributes \non the `CollectionBlock` instances.\n\nThe attribute name is a \"slugified\" version of the name of \nthe column. So if you have a column named \"Estimated value\", \nyou can read and write it via `myrowblock.estimated_value`.\n\nSome basic validation may be conducted, and it will be \nconverted into the appropriate internal format.\n\nFor columns of type \"Person\", we expect a `NotionUser` instance, \nor a list of them, and for a \"Relation\" we expect a singular/list \nof instances of a subclass of `Block`.\n\n```Python\n# Access a database using the URL of the database page or the inline block\ncv = client.get_collection_view(\"https://www.notion.so/myorg/b9076...8b832?v=8de...8e1\")\n\n# List all the records with \"Bob\" in them\nfor row in cv.collection.get_rows(search=\"Bob\"):\n    print(\"We estimate the value of '{}' at {}\".format(row.name, row.estimated_value))\n\n# Add a new record\nrow = cv.collection.add_row()\nrow.name = \"Just some data\"\nrow.is_confirmed = True\nrow.estimated_value = 399\nrow.files = [\"https://www.birdlife.org/sites/default/files/styles/1600/public/slide.jpg\"]\nrow.person = client.current_user\nrow.tags = [\"A\", \"C\"]\nrow.where_to = \"https://learningequality.org\"\n\n# Run a filtered/sorted query using a view's default parameters\nresult = cv.default_query().execute()\nfor row in result:\n    print(row)\n\n# Run an \"aggregation\" query\naggregations = [{\n    \"property\": \"estimated_value\",\n    \"aggregator\": \"sum\",\n    \"id\": \"total_value\",\n}]\nresult = cv.build_query(aggregate=aggregations).execute()\nprint(\"Total estimated value:\", result.get_aggregate(\"total_value\"))\n\n# Run a \"filtered\" query (inspect network tab in browser for examples, on queryCollection calls)\nfilters = {\n    \"filters\": [{\n        \"filter\": {\n            \"value\": {\n                \"type\": \"exact\",\n                \"value\": {\"table\": \"notion_user\", \"id\": client.current_user.id}\n            },\n            \"operator\": \"person_contains\"\n        },\n        \"property\": \"assigned_to\"\n    }],\n    \"operator\": \"and\"\n}\nresult = cv.build_query(filter=filters).execute()\nprint(\"Things assigned to me:\", result)\n\n# Run a \"sorted\" query\nsorters = [{\n    \"direction\": \"descending\",\n    \"property\": \"estimated_value\",\n}]\nresult = cv.build_query(sort=sorters).execute()\nprint(\"Sorted results, showing most valuable first:\", result)\n```\n\n> **_NOTE:_**: You can combine `filter`, `aggregate`, and `sort`.\n> See more examples of queries by setting up complex views in Notion,\n> and then inspecting `cv.get(\"query\")`.\n\n\n### Example: Lock/Unlock A Page\n\n```python\nfrom notion.client import NotionClient\n\nclient = NotionClient(token_v2=\"123123...\")\n\n# Replace this URL with the URL of the page you want to edit\npage = client.get_block(\"https://www.notion.so/myorg/Test-c0d20a71c0944985ae96e661ccc99821\")\n\n# change_lock is a method accessible to every Block/Page in notion.\n# Pass True to lock a page and False to unlock it. \npage.change_lock(True)\npage.change_lock(False)\n```\n\n\n</details>\n<br>\n\n\n[documentation-url]: https://notion-py.readthedocs.io\n[package-url]: https://pypi.org/project/notion-py/\n[check-formatting-url]: https://github.com/arturtamborski/notion-py/workflows/Check%20Code%20Formatting/badge.svg\n[run-unit-tests-url]: https://github.com/arturtamborski/notion-py/workflows/Run%20Unit%20Tests/badge.svg\n[upload-python-package-url]: https://github.com/arturtamborski/notion-py/workflows/Upload%20Python%20Package/badge.svg\n[run-smoke-tests-url]: https://github.com/arturtamborski/notion-py/workflows/Run%20Smoke%20Tests/badge.svg\n[code-style-url]: https://img.shields.io/badge/code%20style-black-000000\n[documentation-status-url]: https://readthedocs.org/projects/notion-py/badge/?version=latest\n[license-url]: https://img.shields.io/github/license/arturtamborski/notion-py\n[code-size-url]: https://img.shields.io/github/languages/code-size/arturtamborski/notion-py\n[downloads-rate-url]: https://img.shields.io/pypi/dm/notion-py.svg\n\n[introduction-url]: https://medium.com/@jamiealexandre/introducing-notion-py-an-unofficial-python-api-wrapper-for-notion-so-603700f92369\n[data-binding-url]: https://raw.githubusercontent.com/jamalex/notion-py/master/ezgif-3-a935fdcb7415.gif\n[dev-tools-url]: https://support.airtable.com/hc/en-us/articles/232313848-How-to-open-the-developer-console\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/arturtamborski/notion-py",
    "keywords": "python3,notion,api-client",
    "license": "",
    "maintainer": "Artur Tamborski",
    "maintainer_email": "tamborskiartur@gmail.com",
    "name": "notion-py",
    "package_url": "https://pypi.org/project/notion-py/",
    "platform": "",
    "project_url": "https://pypi.org/project/notion-py/",
    "project_urls": {
      "Homepage": "https://github.com/arturtamborski/notion-py"
    },
    "release_url": "https://pypi.org/project/notion-py/0.0.10/",
    "requires_dist": [
      "requests (==2.24.0)",
      "commonmark (==0.9.1)",
      "tzlocal (==2.1)",
      "python-slugify (==4.0.1)",
      "dictdiffer (==0.8.1)",
      "mistletoe (==0.7.2)",
      "dominate (==2.5.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "(Fork of) Unofficial Python API client for Notion.so",
    "version": "0.0.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11092076,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1d048722d55335634d265e8c722f4b7344a1033f4252efdf34c07af216414d5",
          "md5": "c63b45395f0f4003c66fcb34700064fe",
          "sha256": "22b14fc9bd59c77b6751a6469224c0eeb12daef3d5034b061ff2e8a5c2252b23"
        },
        "downloads": -1,
        "filename": "notion_py-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c63b45395f0f4003c66fcb34700064fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46701,
        "upload_time": "2020-07-01T19:00:17",
        "upload_time_iso_8601": "2020-07-01T19:00:17.797319Z",
        "url": "https://files.pythonhosted.org/packages/b1/d0/48722d55335634d265e8c722f4b7344a1033f4252efdf34c07af216414d5/notion_py-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "719940a4c458b6fb6b43e3fab36be2ec57629ea9362a9f7655ce23839c5d56ac",
          "md5": "851fcdc8d051ebe87bccd84e73671eb4",
          "sha256": "7080387b6f42479db68747ceade34a967bc2308622642c2504847cd20edb7082"
        },
        "downloads": -1,
        "filename": "notion-py-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "851fcdc8d051ebe87bccd84e73671eb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 47324,
        "upload_time": "2020-07-01T19:00:20",
        "upload_time_iso_8601": "2020-07-01T19:00:20.464821Z",
        "url": "https://files.pythonhosted.org/packages/71/99/40a4c458b6fb6b43e3fab36be2ec57629ea9362a9f7655ce23839c5d56ac/notion-py-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b65855dd38803e1e8484f24bb175cc460ed66569c941183cdbb1109bc0a46e6d",
          "md5": "8950749f97b48a4e62a8160d43b90d4f",
          "sha256": "3599d6368628b076a8799f93758158efc648bec70fb050a0bcfd757376131982"
        },
        "downloads": -1,
        "filename": "notion_py-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8950749f97b48a4e62a8160d43b90d4f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 59580,
        "upload_time": "2021-08-04T17:29:01",
        "upload_time_iso_8601": "2021-08-04T17:29:01.421724Z",
        "url": "https://files.pythonhosted.org/packages/b6/58/55dd38803e1e8484f24bb175cc460ed66569c941183cdbb1109bc0a46e6d/notion_py-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6898a3d08e9f7eca1f0340ba1c364589e201b9f2a8b31973e0d20dd65ff11d1b",
          "md5": "da54cd515a91afba5d5f7e0087acf8d6",
          "sha256": "de53f896f86205f010fef6824e91a4de10dc351719252d18efe83fb87472a75f"
        },
        "downloads": -1,
        "filename": "notion-py-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "da54cd515a91afba5d5f7e0087acf8d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 57937,
        "upload_time": "2021-08-04T17:29:02",
        "upload_time_iso_8601": "2021-08-04T17:29:02.570024Z",
        "url": "https://files.pythonhosted.org/packages/68/98/a3d08e9f7eca1f0340ba1c364589e201b9f2a8b31973e0d20dd65ff11d1b/notion-py-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44ac0686c571f515fe8948adcf7fdbc1d15163415df39aad0951e6dac9d4b03a",
          "md5": "6cd4a708b73911b1b7d7227b3640d36b",
          "sha256": "d6e4e4f4e716784f1770d6f5a698f823cdc7397cf521bb3c3f568ab50c5b4c26"
        },
        "downloads": -1,
        "filename": "notion_py-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6cd4a708b73911b1b7d7227b3640d36b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 64578,
        "upload_time": "2020-09-02T15:48:17",
        "upload_time_iso_8601": "2020-09-02T15:48:17.383286Z",
        "url": "https://files.pythonhosted.org/packages/44/ac/0686c571f515fe8948adcf7fdbc1d15163415df39aad0951e6dac9d4b03a/notion_py-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b77c9e6208b829aa4601e08e14b2701c5443ed47df86c796315c4ad475cf336",
          "md5": "a64e03a6aedef021c13e8dc4dc44d7cd",
          "sha256": "41bde471358e2b02eb188fb5240eb2c54cfef219a9198c0da68a235f8a31900f"
        },
        "downloads": -1,
        "filename": "notion-py-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a64e03a6aedef021c13e8dc4dc44d7cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 58245,
        "upload_time": "2020-09-02T15:48:18",
        "upload_time_iso_8601": "2020-09-02T15:48:18.490347Z",
        "url": "https://files.pythonhosted.org/packages/7b/77/c9e6208b829aa4601e08e14b2701c5443ed47df86c796315c4ad475cf336/notion-py-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d20277083d5aa7036146c4e09b800d05e08c638d76c98a0b98dd05c78bd113c",
          "md5": "8b733e0dd280c884b26b4f951bdca1c7",
          "sha256": "67ce1c5af3dd392447faa2b0f8d5de6c4226fd57edb852860f7177c683a77b5d"
        },
        "downloads": -1,
        "filename": "notion_py-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b733e0dd280c884b26b4f951bdca1c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 56471,
        "upload_time": "2020-09-02T20:26:07",
        "upload_time_iso_8601": "2020-09-02T20:26:07.743164Z",
        "url": "https://files.pythonhosted.org/packages/5d/20/277083d5aa7036146c4e09b800d05e08c638d76c98a0b98dd05c78bd113c/notion_py-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70e97c326d537d5b41fd845f5d499cc5542737a92c9505d8a474ba9e51244e40",
          "md5": "3bc576d87140ed41f60e79ef12bef5b1",
          "sha256": "4f7da886b8105c39e17725cdea570ad16bf3e6ffc033cbf5797e21644c8aff72"
        },
        "downloads": -1,
        "filename": "notion-py-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3bc576d87140ed41f60e79ef12bef5b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 53090,
        "upload_time": "2020-09-02T20:26:09",
        "upload_time_iso_8601": "2020-09-02T20:26:09.486686Z",
        "url": "https://files.pythonhosted.org/packages/70/e9/7c326d537d5b41fd845f5d499cc5542737a92c9505d8a474ba9e51244e40/notion-py-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23520bf72668bf3dc9282a28a5a07c303f1cb943098be8b28a6e6ac162e51c1f",
          "md5": "0f3016b465a309920bc1379781063ba4",
          "sha256": "8419e87c7caf25efc0a6d76967be3d6b4f0afdb5137bc0a1bf443208f60b32f0"
        },
        "downloads": -1,
        "filename": "notion_py-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f3016b465a309920bc1379781063ba4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 57323,
        "upload_time": "2020-09-12T14:46:39",
        "upload_time_iso_8601": "2020-09-12T14:46:39.590997Z",
        "url": "https://files.pythonhosted.org/packages/23/52/0bf72668bf3dc9282a28a5a07c303f1cb943098be8b28a6e6ac162e51c1f/notion_py-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b7ddb5b6153ce795dbfa62a8efd6a457c478a362d92a2ad7c955e2ee4749ed7",
          "md5": "2a19d156ab003813faa91ae5cae680db",
          "sha256": "278b71699decb4632d41e6af44b4ca36c9042bc0ae1c1c2af9e0a89679d3f841"
        },
        "downloads": -1,
        "filename": "notion-py-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2a19d156ab003813faa91ae5cae680db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 54661,
        "upload_time": "2020-09-12T14:46:40",
        "upload_time_iso_8601": "2020-09-12T14:46:40.714762Z",
        "url": "https://files.pythonhosted.org/packages/7b/7d/db5b6153ce795dbfa62a8efd6a457c478a362d92a2ad7c955e2ee4749ed7/notion-py-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbb3d83b56e56ea6bd6f890ab2772d04c884d8fea7dba9ad6cc43e2df51c6933",
          "md5": "caf28e072732b6e15b0b62cf8645ee89",
          "sha256": "aeca37c37081aa6074ea4adc0e98dbb759e734bf18e0914f00ba6ad923288330"
        },
        "downloads": -1,
        "filename": "notion_py-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "caf28e072732b6e15b0b62cf8645ee89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 57836,
        "upload_time": "2020-09-24T10:37:04",
        "upload_time_iso_8601": "2020-09-24T10:37:04.106554Z",
        "url": "https://files.pythonhosted.org/packages/bb/b3/d83b56e56ea6bd6f890ab2772d04c884d8fea7dba9ad6cc43e2df51c6933/notion_py-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a8dc1ebcfee1181c26c1370c04cc54cdfbd22406def5028a0573b17c01885e4",
          "md5": "0de51d57ef86e984c8f4854d55184627",
          "sha256": "715a47670c3b0b628046e3c994bf2cd7a12513b3aa8980d9ab2f36235862a237"
        },
        "downloads": -1,
        "filename": "notion-py-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0de51d57ef86e984c8f4854d55184627",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 55372,
        "upload_time": "2020-09-24T10:37:05",
        "upload_time_iso_8601": "2020-09-24T10:37:05.368173Z",
        "url": "https://files.pythonhosted.org/packages/6a/8d/c1ebcfee1181c26c1370c04cc54cdfbd22406def5028a0573b17c01885e4/notion-py-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6a2d70c473277449a7c3c115e53d741dd3ea575fc58fa6de4a3eb35fbad7ced",
          "md5": "8fb5e6da6031fe3be87e2a97a44fcb5b",
          "sha256": "24db56be891b6f528009ae029d5d9c657d8f36ea49c78614e431e60e78402302"
        },
        "downloads": -1,
        "filename": "notion_py-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fb5e6da6031fe3be87e2a97a44fcb5b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 58408,
        "upload_time": "2020-10-10T16:07:01",
        "upload_time_iso_8601": "2020-10-10T16:07:01.627940Z",
        "url": "https://files.pythonhosted.org/packages/b6/a2/d70c473277449a7c3c115e53d741dd3ea575fc58fa6de4a3eb35fbad7ced/notion_py-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e307f99306bc9e655d576fdf8366b48dad3c6d0b03d75ca9b5f047be45db0bd",
          "md5": "5b9a0a39bc947a18f65a081221404fdd",
          "sha256": "a87ccce944e5fba7d395be825ef0bf3cad6259f71df5a4953bf63ba75c90c30f"
        },
        "downloads": -1,
        "filename": "notion-py-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "5b9a0a39bc947a18f65a081221404fdd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 57143,
        "upload_time": "2020-10-10T16:07:03",
        "upload_time_iso_8601": "2020-10-10T16:07:03.034900Z",
        "url": "https://files.pythonhosted.org/packages/0e/30/7f99306bc9e655d576fdf8366b48dad3c6d0b03d75ca9b5f047be45db0bd/notion-py-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa8b91fdd287191960c8f8462b9822bd7b225ae063869547352b9249b6bceca8",
          "md5": "83dd92ad380029fbec67c6a24b299654",
          "sha256": "6500237bf6c77f1ee58dd854169d782d8396914e0b0481b9fdb1a41938baf951"
        },
        "downloads": -1,
        "filename": "notion_py-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83dd92ad380029fbec67c6a24b299654",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 59518,
        "upload_time": "2021-02-04T18:33:28",
        "upload_time_iso_8601": "2021-02-04T18:33:28.416774Z",
        "url": "https://files.pythonhosted.org/packages/aa/8b/91fdd287191960c8f8462b9822bd7b225ae063869547352b9249b6bceca8/notion_py-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b551b22535722edd8b5584b929216e983e9a764142e76eef38fd95a9c0ef1071",
          "md5": "05f96aa1a62394998845df24a7c174ac",
          "sha256": "98a4258cf61b21cb89ff872e25408ae36cc90b6632d167ee5d75e489f9dd446d"
        },
        "downloads": -1,
        "filename": "notion-py-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "05f96aa1a62394998845df24a7c174ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 58168,
        "upload_time": "2021-02-04T18:33:29",
        "upload_time_iso_8601": "2021-02-04T18:33:29.883381Z",
        "url": "https://files.pythonhosted.org/packages/b5/51/b22535722edd8b5584b929216e983e9a764142e76eef38fd95a9c0ef1071/notion-py-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad7681eb9872f08ed790b04af0547678cfafabf44e51515a2ccb8d63ab9b48c1",
          "md5": "e2160135cd43cf554354f52c604de574",
          "sha256": "6ef88673c8c6a2d14bf9e80fc46197c6e7b6f5f2776c1567093304b6b87efd4c"
        },
        "downloads": -1,
        "filename": "notion_py-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2160135cd43cf554354f52c604de574",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 59591,
        "upload_time": "2021-02-06T12:31:56",
        "upload_time_iso_8601": "2021-02-06T12:31:56.930021Z",
        "url": "https://files.pythonhosted.org/packages/ad/76/81eb9872f08ed790b04af0547678cfafabf44e51515a2ccb8d63ab9b48c1/notion_py-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45488d8db0b8225bcd9ce904322cfe8182c7513a2c8dc8f762147bd5ae418544",
          "md5": "0aca9306a5dfccf1c37d677b1cf59cb6",
          "sha256": "b70e5931fee0cd7c639c6c90dbf570e62e7526fa97a8766a05467cd89165cfbf"
        },
        "downloads": -1,
        "filename": "notion-py-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "0aca9306a5dfccf1c37d677b1cf59cb6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 57970,
        "upload_time": "2021-02-06T12:31:58",
        "upload_time_iso_8601": "2021-02-06T12:31:58.259672Z",
        "url": "https://files.pythonhosted.org/packages/45/48/8d8db0b8225bcd9ce904322cfe8182c7513a2c8dc8f762147bd5ae418544/notion-py-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b0ee5046c8d67c488805a92b86e56dc70abe993de583d33926d9182d7767c4c",
          "md5": "7823e9c35ca13e9e5139c440b16087f8",
          "sha256": "03dfe28d952af25dae9d61089109212bb33b826526967f0942fff76ed5be1717"
        },
        "downloads": -1,
        "filename": "notion_py-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7823e9c35ca13e9e5139c440b16087f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 59542,
        "upload_time": "2021-02-17T14:22:47",
        "upload_time_iso_8601": "2021-02-17T14:22:47.441826Z",
        "url": "https://files.pythonhosted.org/packages/8b/0e/e5046c8d67c488805a92b86e56dc70abe993de583d33926d9182d7767c4c/notion_py-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbce5b4582c0a895a0354fb0ed49f80db8b251f2d39af9e4897d8277aa90cd8d",
          "md5": "108dc0393d58db8f581a127bcdc05b0d",
          "sha256": "1b5fee418da22befa28bb2fabafaee5322db059c8d9f4cebdd850527760d7206"
        },
        "downloads": -1,
        "filename": "notion-py-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "108dc0393d58db8f581a127bcdc05b0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 57911,
        "upload_time": "2021-02-17T14:22:48",
        "upload_time_iso_8601": "2021-02-17T14:22:48.381264Z",
        "url": "https://files.pythonhosted.org/packages/cb/ce/5b4582c0a895a0354fb0ed49f80db8b251f2d39af9e4897d8277aa90cd8d/notion-py-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b65855dd38803e1e8484f24bb175cc460ed66569c941183cdbb1109bc0a46e6d",
        "md5": "8950749f97b48a4e62a8160d43b90d4f",
        "sha256": "3599d6368628b076a8799f93758158efc648bec70fb050a0bcfd757376131982"
      },
      "downloads": -1,
      "filename": "notion_py-0.0.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8950749f97b48a4e62a8160d43b90d4f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 59580,
      "upload_time": "2021-08-04T17:29:01",
      "upload_time_iso_8601": "2021-08-04T17:29:01.421724Z",
      "url": "https://files.pythonhosted.org/packages/b6/58/55dd38803e1e8484f24bb175cc460ed66569c941183cdbb1109bc0a46e6d/notion_py-0.0.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6898a3d08e9f7eca1f0340ba1c364589e201b9f2a8b31973e0d20dd65ff11d1b",
        "md5": "da54cd515a91afba5d5f7e0087acf8d6",
        "sha256": "de53f896f86205f010fef6824e91a4de10dc351719252d18efe83fb87472a75f"
      },
      "downloads": -1,
      "filename": "notion-py-0.0.10.tar.gz",
      "has_sig": false,
      "md5_digest": "da54cd515a91afba5d5f7e0087acf8d6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 57937,
      "upload_time": "2021-08-04T17:29:02",
      "upload_time_iso_8601": "2021-08-04T17:29:02.570024Z",
      "url": "https://files.pythonhosted.org/packages/68/98/a3d08e9f7eca1f0340ba1c364589e201b9f2a8b31973e0d20dd65ff11d1b/notion-py-0.0.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}