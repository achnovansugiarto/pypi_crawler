{
  "info": {
    "author": "Frank S. Hestvik",
    "author_email": "tristesse@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# clss\n\n**C**ommand-**l**ine **S**pread**s**heets.\n\n```\nclss -s SPREADSHEET_ID -w WORKSHEET [-r RANGE] [-f FORMAT] (append | dump | upload)\n```\n\nSmall utility for interacting with Google spreadsheets, appending rows\nor syncing data back and forth between local ASCII/CSV/JSON files.\n\n## Usage: timesheets\n\nThe motivating use case was keeping timesheets for projects. After\nlooking at several web-based solutions which were either way too heavy\nor noisy (as in bells and whistles) for this use-case, I got the idea\nof simply using shared spreadsheets via Google Sheets.\n\nLet's say we were keeping timesheets for projects in a Google\nspreadsheet like so:\n\n| Date       | User    | Project  | Hours | Description                                   | Comment                    |\n| ----:      | :----   | -------: | ----: | :-----------                                  | :-------                   |\n| 2021-03-01 | franksh | 1002     | 5.0   | Stared out of the window                      |                            |\n| 2021-03-02 | franksh | 1001     | 3.5   | Invested in pyramid schemes                   |                            |\n| 2021-03-02 | franksh | 4001     | 4.0   | Went outside to stare into the window         |                            |\n| 2021-03-03 | franksh | 7777     | 9.0   | Resolved the Langlands program in one sitting | Margin too short for proof |\n\nConfiguring `clss` to target this worksheet by making a `~/.config/clss/sheet.json` or `.sheet.json` file:\n\n```json\n{\n  \"spreadsheet_id\": \"1d6Jn6lgj7wRX_HF3pOqj-hm6VMC4A5CvrRnJYuCIk30\",\n  \"worksheet\": \"Upload\",\n  \"format\": \"ascii\"\n}\n```\n\nThe same file could also be created with the command `clss -s\n1d6Jn6lgj7wRX_HF3pOqj-hm6VMC4A5CvrRnJYuCIk30 -w Upload -f ascii args\nsave`. Leaving out a `range` parameter (which works like a normal\nspreadsheet range like \"B2:F800\") means the entire worksheet named\n`Upload` will be used.\n\nAnd the workflow would be something like this:\n\n``` bash\n\n$ clss dump\nDate       | User    | Project | Hours | Description                                   | Comment                   \n2021-03-01 | franksh |    1002 |     5 | Stared out of the window                      |                           \n2021-03-02 | franksh |    1001 |   3.5 | Invested in pyramid schemes                   |                           \n2021-03-02 | franksh |    1002 |     4 | Went outside to stare into the window         |                           \n2021-03-03 | franksh |    7777 |     9 | Resolved the Langlands program in one sitting | Margin too short for proof\n$ clss append `date +%Y-%m-%d` \"$USER\" 2001 2.5 \"Wrote README and documentation\"\n$ clss dump\nDate       | User    | Project | Hours | Description                                   | Comment                   \n2021-03-01 | franksh |    1002 |     5 | Stared out of the window                      |                           \n2021-03-02 | franksh |    1001 |   3.5 | Invested in pyramid schemes                   |                           \n2021-03-02 | franksh |    1002 |     4 | Went outside to stare into the window         |                           \n2021-03-03 | franksh |    7777 |     9 | Resolved the Langlands program in one sitting | Margin too short for proof\n2021-03-14 | franksh |    2001 |   2.5 | Wrote README and documentation                |                           \n\n\n```\n\nAlternatively the file could be kept offline in a `.txt`, `.csv`, or `.json` and then regularly synced up to the worksheet with `clss upload timesheet.csv`.\n\n\n\n## Install and Setup\n\n### Requirements\n\nMake sure you have `python 3.7+` installed with its `pip` package\ninstaller:\n\n    $ pip --version\n\tpip 20.0.2 from /usr/lib/python3/dist-packages/pip (python 3.8)\n\n(Note: `python` and `pip` might be called `python3` and `pip3` on\nlegacy-oriented distros such as Ubuntu.) If you don't have `pip`\ninstalled as a separate command, note that `pip [args...]` is\nequivalent to running `python -m pip [args...]`:\n\n    $ python39 -m pip --version\n    pip 21.0.1 from /home/franksh/envs/py39/lib/python3.9/site-packages/pip (python 3.9)\n\n### Install\n\n    $ pip install clss\n\n(If not using a virtual environments, it's recommended to add the\n`--user` flag to install to `~/.local` instead: `pip install --user\nclss`)\n\nNow `clss` should work:\n\n\t$ clss\n\tUsage: clss [OPTIONS] COMMAND [ARGS]...\n\n\t  Command-Line SpreadSheet utility.\n\n\t  Modifies Google spreadheets from command-line via Sheets API.\n\n\tOptions:\n\t  --version                      Show the version and exit.\n\t  -v, --verbose                  Increase verbosity level. Use '-vv' to also\n                                     show debug messages.\n    ...\n\n### Setup\n\nConfigure `clss` use a fixed spreadsheet document and worksheet for\nfuture invocations:\n\n``` bash\n$ clss -s SPREADSHEET_ID -w WORKSHEET [-r RANGE] [-f FORMAT] args save\n```\n\nTo allow the utility to interact with your Google spreadsheets it\nneeds Google API credentials (which allows it to request login tokens\nwith certain permissions from a Google user). There's several ways of\nmaking these credentials, but the absolute easiest way is to click the\n`[Enable the Google Sheets API]` button on the [API quickstart\npage](https://developers.google.com/sheets/api/quickstart/python).\n(Everything else on this page is irrelevant.)\n\nNow run a command like `clss -C CREDENTIALS_FILE dump` and it should\nopen a browser window asking you to verify the app's login with your\nGoogle account. (Google will complain it's unsafe and attempt to hide\nthe button under `[Advanced]` and `[Go to Quickstart (unsafe)]`, but\nthere's not much to be done about that.) The login will be cached and\nrefreshed in the future so this step only happens once.\n\n(See also `clss help` and `clss help credentials` for further walls of\ntext essentially giving the same information.)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/franksh/clss/",
    "keywords": "google-api,spreadsheets,sheets,google,api",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "clss",
    "package_url": "https://pypi.org/project/clss/",
    "platform": "",
    "project_url": "https://pypi.org/project/clss/",
    "project_urls": {
      "Homepage": "https://gitlab.com/franksh/clss/"
    },
    "release_url": "https://pypi.org/project/clss/0.2.0/",
    "requires_dist": [
      "google-api-python-client (==2.*)",
      "google-auth-httplib2 (==0.1.*)",
      "google-auth-oauthlib (==0.4.*)",
      "click"
    ],
    "requires_python": ">=3.7",
    "summary": "Command-line utility for syncing with Google Sheets",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9766972,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c9305e2af8889602ae06cf1f506df2545406c5bfcf3cc240f08c73743c72906",
          "md5": "18ee03e6bfab70a1316a275f1509b711",
          "sha256": "daedcd37b24a23d38176c61bc60ddb5c55500b4fe68626ac28a0e5b5755b7637"
        },
        "downloads": -1,
        "filename": "clss-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18ee03e6bfab70a1316a275f1509b711",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14604,
        "upload_time": "2021-03-14T16:58:23",
        "upload_time_iso_8601": "2021-03-14T16:58:23.359534Z",
        "url": "https://files.pythonhosted.org/packages/5c/93/05e2af8889602ae06cf1f506df2545406c5bfcf3cc240f08c73743c72906/clss-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21e38cd9ada0c5d82c3342048160eee71b514ce74bfc0ece3d5f3225f9206f4e",
          "md5": "4e76d5882c9aada7af741056f1c40133",
          "sha256": "17c89a08e6892d90b2ff7eab16666ab7d4346ba77b331fc4e8acc28de0c36284"
        },
        "downloads": -1,
        "filename": "clss-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4e76d5882c9aada7af741056f1c40133",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15300,
        "upload_time": "2021-03-14T16:58:24",
        "upload_time_iso_8601": "2021-03-14T16:58:24.800381Z",
        "url": "https://files.pythonhosted.org/packages/21/e3/8cd9ada0c5d82c3342048160eee71b514ce74bfc0ece3d5f3225f9206f4e/clss-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c9305e2af8889602ae06cf1f506df2545406c5bfcf3cc240f08c73743c72906",
        "md5": "18ee03e6bfab70a1316a275f1509b711",
        "sha256": "daedcd37b24a23d38176c61bc60ddb5c55500b4fe68626ac28a0e5b5755b7637"
      },
      "downloads": -1,
      "filename": "clss-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "18ee03e6bfab70a1316a275f1509b711",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 14604,
      "upload_time": "2021-03-14T16:58:23",
      "upload_time_iso_8601": "2021-03-14T16:58:23.359534Z",
      "url": "https://files.pythonhosted.org/packages/5c/93/05e2af8889602ae06cf1f506df2545406c5bfcf3cc240f08c73743c72906/clss-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21e38cd9ada0c5d82c3342048160eee71b514ce74bfc0ece3d5f3225f9206f4e",
        "md5": "4e76d5882c9aada7af741056f1c40133",
        "sha256": "17c89a08e6892d90b2ff7eab16666ab7d4346ba77b331fc4e8acc28de0c36284"
      },
      "downloads": -1,
      "filename": "clss-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4e76d5882c9aada7af741056f1c40133",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 15300,
      "upload_time": "2021-03-14T16:58:24",
      "upload_time_iso_8601": "2021-03-14T16:58:24.800381Z",
      "url": "https://files.pythonhosted.org/packages/21/e3/8cd9ada0c5d82c3342048160eee71b514ce74bfc0ece3d5f3225f9206f4e/clss-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}