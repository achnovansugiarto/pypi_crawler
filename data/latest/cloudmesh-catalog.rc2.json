{
  "info": {
    "author": "Gregor von Laszewski",
    "author_email": "laszewski@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Cloudmesh Catalog\n\nCloudmesh catalog can be used to store information about a service, software\ncomponent, or project. The information included in it can be\ncategorized so that a comparision is possible.  The catalog is\nimplemented as REST service so it can be integrated in other projects\nand searched programatically.\n\nThe catalog depends on the cloudmesh command shell which allows eay\nintegration of new commands line environment.  It projects a sample\nInterface for the catalog from the commandline\n\nWe also can create static web pages from the catalog while using the export \nfeature and integrating the pages in for example hugo.\n\nWe are currently exploring hugo docsy as it provides\nan easy way to generate hirarchical web pages, but also leverages \nhugos tags and categories. Other export formats include markdown and \nbibtex.\n\n## Instalation for developers\n\n1. If you do not have yet create an ssh key and upload it to the\n   github repository.\n\n   ```ssh-keygen```\n\n   Upload the `~/.ssh/id_rsa.pub` key to github\n\n2. Download cloudmesh with its source repositories\n\n   Make sure you ave python 3.10.2\n\n   On Mac or Linux do\n\n   ```bash\n   $ python3.10 -m venv ~/ENV3\n   $ source ~/ENV3/bin/activate\n   ```\n\n   On Windows \n\n   ```bash\n   $ py --version # make sure its 3.10.2\n   $ py -m venv ~/ENV3\n   $ source ~/ENV3/bin/activate\n   ```\n\n   After that the instalation is the same on all operating systems.\n\n   ```bash\n   $ mkdir cm\n   $ cd cm\n   \n   $ pip install cloudmesh-installer\n   $ cloudmesh-installer -ssh install catalog\n   $ cms help\n   ```\n   \n   This will download all source code for the cloudmesh shell\n   and compile from source.\n\n3. Now you are all ready to do programming and enhancing\n   cloudmesh-catalog If you have any issues, contact\n   laszewski@gmail.com\n\n## Manual page\n\nA manual pasge shoudl be implemented in\n`cloudmesh-catalog/catalog/command/catalog.py` This manual page can\nbe displayed with the following command:\n\n```bash\n$ cms help catalog help\n```\n\nTo just see the usage type in \n\n```bash\n$ cms catalog\n```\n\n\n## Managing the Service\n\nTODO: The integration of data into the service is not yet completed.\n\nTODO: service management on Windows is not yet completed.\n\nOn Linux and macOS we can already experiment with an early prototype \nthat allows us starting, sopping, and getting the status of the service. \nThis service has nnot yet been integrated with a database.\n\n\n## BUG\n\nTODO: The adat is not yet integrated and we like to use \ncloudmesh/yamldb for it.\n\n## Adding catalog and registry data\n\nTODO: To add catalog and registry data for new services, one must create new\n.yaml files in the appropriate folders: 'data/catalog/my_example.yaml'\nand 'data/registry/my_example.yaml'. Each file must follow yaml\nformatting similar to the following example.\n\nExample file: Amazon Comprehend (Catalog), amazon_comprehend.yaml\n\n```\n---\nid: amazon_comprehend:\nname: Amazon Comprehend\ntitle: Amazon Comprehend\nauthor: Amazon\nslug: amazon-comprehend\npublic: true\ndescription: |\n Comprehend is Amazon's solution for cloud-based NLP.\n It is available with an AWS account. To use,\n it requires use of either the AWS Command Line\n Interface or an AWS SDK for Python, Java, or .NET.\n Notable features include functionality for giving\n batches of documents to be processed as well as\n submission of multiple jobs in a list. The DetectEntities\n function also allows use of a custom-trained\n model, but many other functions do not.\nversion: unknown\nlicense: unknown\nmicroservice: no\nprotocol: AWS API\nowner: Amazon Web Services\nmodified: 9/29/2021\ncreated: 11/29/2017\ndocumentation: https://docs.aws.amazon.com/comprehend/index.html\nsource: unknown\nspecification: unknown\ntags: [\"nlp\", \"nlp service\", \"machine learning\", \"cloud service\", \"nlp api\",\n     \"deep learning\", \"natural language processing\", \"artificial intelligence\"]\ncategories: [\"NLP\"]\nadditional_metadata: unknown\nendpoint: unknown\nsla: https://aws.amazon.com/machine-learning/language/sla/\nauthors: The AWS team can be contacted through support ticket at https://aws.amazon.com/contact-us/\ndata: |\n User data is stored on Amazon servers under the associated AWS account and is protected under the AWS\n shared responsibility model as detailed here https://aws.amazon.com/compliance/shared-responsibility-model/\n```\n\n## Using the Catalog and Registry classes\n\nWritten in catalog.py and registry.py are classes capable of reading and storing the data written in the .yaml files. Both use the same interface.\nHere is an example of the Catalog class in action:\n\n```\n# initialize the catalog using data found in the given directory\ncatalog = Catalog('data/catalog/')\n# query the catalog for Amazon Comprehend data, save result to amazon_catalog_data\namazon_catalog_data = cat.query({'name': 'Amazon Comprehend'})\n# add a new data file to the catalog\ncatalog.add('new_example/azure_language.yaml')\n# save entire catalog to a pickle file\ncatalog.to_pickle('catalog.pkl')\n# load from pickle file\ncatalog.from_pickle('catalog.pkl')\n# print catalog data\nprint(catalog.data)\n```\n\n## Using the yaml to markdown conversion script\n\nThe catalog command includes several prototype export formats \nthat takes all files recursively in a directory or an explicit file and converts it to the specified output \n\nThis includes \n\n```bash\ncms catalog export bibtex --souce=SOURCE\ncms catalog export hugo --souce=SOURCE\ncms catalog export md --souce=SOURCE\n```\n\nThe commands will create next to the yal file entreies for bibtex, \nhugo markdown, and markdown.\n\nThe templates are just suggestions and we may improve them based on our\nfindings.\n\n## Checking entries\n\nIt is very important that any entry be checked for minimal yaml complience.\nHence we implemented a command \n\n```bash\ncms catalog check --souce=SOURCE\n```\n\nwhich will check all file sin the specified directory. THIs check will ignore line legth limits if the line contains an http or https refernce. \nWe also check the data format for YYYY-MM-DD.\n\nWe know that it may be problematic to distingush automatically between YYYY-MM-DD and YYYY-DD-MM.\nHence we encourage you to be careful when adding entries.\n\n\n## Developer Video Tutorials\n\nWe are providing a number of developer video tutorials that help undesrtanding how we develop code and leverage the \ncloudmesh-cmd5 shell features:\n\n* [Cloudmesh Catalog. Who to improve the check feature](https://www.youtube.com/watch?v=OkuYxky2TFo)\n* [Cloudmesh Catalog. Overview of the converter](https://www.youtube.com/watch?v=4bKvA3RhWaU)\n* [Cloudmesh Catalog. How to use the integration with hugo](https://www.youtube.com/watch?v=LfC5JDddwLI)\n* [Cloudmesh Catalog. Managing the server with start, stop, info, status](https://www.youtube.com/watch?v=qr8Yf5qAmV8)\n* [Cloudmesh Catalog. Running the Server on a Mac on port 8001](https://www.youtube.com/watch?v=T2im0MeDDKE)\n* [Github Tips and Project management](https://www.youtube.com/watch?v=Jce1kYOkd04)\n* [Overview Cloudmesh NIST project](https://www.youtube.com/watch?v=BCIE44MDgwE)\n\nOther videos are available at\n\n* <https://www.youtube.com/c/GregorvonLaszewski/videos>\n\n\n---\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cloudmesh/cloudmesh-catalog",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cloudmesh-catalog",
    "package_url": "https://pypi.org/project/cloudmesh-catalog/",
    "platform": null,
    "project_url": "https://pypi.org/project/cloudmesh-catalog/",
    "project_urls": {
      "Homepage": "https://github.com/cloudmesh/cloudmesh-catalog"
    },
    "release_url": "https://pypi.org/project/cloudmesh-catalog/4.3.4/",
    "requires_dist": [
      "cloudmesh-cmd5",
      "cloudmesh-sys",
      "cloudmesh-inventory",
      "cloudmesh-configuration",
      "pyyaml",
      "yamldb",
      "fastapi",
      "uvicorn",
      "yamllint"
    ],
    "requires_python": "",
    "summary": "A command called catalog and foo for the cloudmesh shell",
    "version": "4.3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13163306,
  "releases": {
    "4.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1da412ff1cdea78ca9bc74a35ff1d2fede9eda86a9a1fd2b4a632116454660ce",
          "md5": "ef27f8be72bcd1a2737f88ab84ad1eb8",
          "sha256": "a2294e777e7fa4a4d509a1198b4a1c00a8f15b10c97a9f5c25a7d37a9467c011"
        },
        "downloads": -1,
        "filename": "cloudmesh_catalog-4.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef27f8be72bcd1a2737f88ab84ad1eb8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 19450,
        "upload_time": "2022-03-13T14:37:59",
        "upload_time_iso_8601": "2022-03-13T14:37:59.257014Z",
        "url": "https://files.pythonhosted.org/packages/1d/a4/12ff1cdea78ca9bc74a35ff1d2fede9eda86a9a1fd2b4a632116454660ce/cloudmesh_catalog-4.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "196f26492e0a34dc4c152968c0b50971673a3c0520adad1b5cda6b486f0b99dd",
          "md5": "a824887d9a47fc39b36965ddb7a1a2af",
          "sha256": "34871500eecb9b377044424b421b4fd5127537caed18db7e30d28bdab67b9108"
        },
        "downloads": -1,
        "filename": "cloudmesh-catalog-4.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a824887d9a47fc39b36965ddb7a1a2af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20894,
        "upload_time": "2022-03-13T14:38:01",
        "upload_time_iso_8601": "2022-03-13T14:38:01.273581Z",
        "url": "https://files.pythonhosted.org/packages/19/6f/26492e0a34dc4c152968c0b50971673a3c0520adad1b5cda6b486f0b99dd/cloudmesh-catalog-4.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdca28c0a3dd7421597ec6a71d4c87143154c4bdc86901c6d16f990320d0ece1",
          "md5": "a17974a6d72da3d371dd870afc0f7fcb",
          "sha256": "73db302b613f6b298e285ad5272c27b1641de9d7e6e461eb7c1754fb669ef44e"
        },
        "downloads": -1,
        "filename": "cloudmesh_catalog-4.3.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a17974a6d72da3d371dd870afc0f7fcb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 19509,
        "upload_time": "2022-03-13T16:49:46",
        "upload_time_iso_8601": "2022-03-13T16:49:46.888366Z",
        "url": "https://files.pythonhosted.org/packages/fd/ca/28c0a3dd7421597ec6a71d4c87143154c4bdc86901c6d16f990320d0ece1/cloudmesh_catalog-4.3.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80bc4d49aea2a6fcda902b5c5e4f1c2f85465261d4ba4eb57f0ad9d621b6a79b",
          "md5": "90d4fa200c1112479caeee07635b66d8",
          "sha256": "1404797f65f7d97d5167267c7112c60e6d0b25d857909bb5093a68164fa4ab75"
        },
        "downloads": -1,
        "filename": "cloudmesh-catalog-4.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "90d4fa200c1112479caeee07635b66d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20975,
        "upload_time": "2022-03-13T16:49:49",
        "upload_time_iso_8601": "2022-03-13T16:49:49.120902Z",
        "url": "https://files.pythonhosted.org/packages/80/bc/4d49aea2a6fcda902b5c5e4f1c2f85465261d4ba4eb57f0ad9d621b6a79b/cloudmesh-catalog-4.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fdca28c0a3dd7421597ec6a71d4c87143154c4bdc86901c6d16f990320d0ece1",
        "md5": "a17974a6d72da3d371dd870afc0f7fcb",
        "sha256": "73db302b613f6b298e285ad5272c27b1641de9d7e6e461eb7c1754fb669ef44e"
      },
      "downloads": -1,
      "filename": "cloudmesh_catalog-4.3.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a17974a6d72da3d371dd870afc0f7fcb",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 19509,
      "upload_time": "2022-03-13T16:49:46",
      "upload_time_iso_8601": "2022-03-13T16:49:46.888366Z",
      "url": "https://files.pythonhosted.org/packages/fd/ca/28c0a3dd7421597ec6a71d4c87143154c4bdc86901c6d16f990320d0ece1/cloudmesh_catalog-4.3.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80bc4d49aea2a6fcda902b5c5e4f1c2f85465261d4ba4eb57f0ad9d621b6a79b",
        "md5": "90d4fa200c1112479caeee07635b66d8",
        "sha256": "1404797f65f7d97d5167267c7112c60e6d0b25d857909bb5093a68164fa4ab75"
      },
      "downloads": -1,
      "filename": "cloudmesh-catalog-4.3.4.tar.gz",
      "has_sig": false,
      "md5_digest": "90d4fa200c1112479caeee07635b66d8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20975,
      "upload_time": "2022-03-13T16:49:49",
      "upload_time_iso_8601": "2022-03-13T16:49:49.120902Z",
      "url": "https://files.pythonhosted.org/packages/80/bc/4d49aea2a6fcda902b5c5e4f1c2f85465261d4ba4eb57f0ad9d621b6a79b/cloudmesh-catalog-4.3.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}