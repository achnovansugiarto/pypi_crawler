{
  "info": {
    "author": "Chris (Someguy123) @ Privex",
    "author_email": "chris@privex.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Privex Content Security Policy Generator (CSP Gen)\n\n[![Build Status](https://travis-ci.com/Privex/cspgen.svg?branch=master)](https://travis-ci.com/Privex/cspgen) \n[![Codecov](https://img.shields.io/codecov/c/github/Privex/cspgen)](https://codecov.io/gh/Privex/cspgen)  \n[![PyPi Version](https://img.shields.io/pypi/v/privex-cspgen.svg)](https://pypi.org/project/privex-cspgen/)\n![License Button](https://img.shields.io/pypi/l/privex-cspgen) \n![PyPI - Downloads](https://img.shields.io/pypi/dm/privex-cspgen)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/privex-cspgen) \n![GitHub last commit](https://img.shields.io/github/last-commit/Privex/cspgen)\n\nA Python tool for generating Content Security Policies without constantly repeating yourself.\n\n```\n+===================================================+\n|                 Â© 2021 Privex Inc.                |\n|               https://www.privex.io               |\n+===================================================+\n|                                                   |\n|   CSPGen - Python Content Sec Policy Generator    |\n|   License: X11/MIT                                |\n|                                                   |\n|        Core Developer(s):                         |\n|                                                   |\n|          (+)  Chris (@someguy123) [Privex]        |\n|          (+)  Kale (@kryogenic) [Privex]          |\n|                                                   |\n+===================================================+\n\nCSPGen - A Python tool for generating Content Security Policies without constantly repeating yourself.\nCopyright (c) 2021    Privex Inc. ( https://www.privex.io )\n\n```\n\n## Quickstart\n\n```sh\n# Install/Upgrade CSPGen using python3 pip as root\nsudo -H python3 -m pip install -U privex-cspgen\n# Or if you don't have root access / don't trust installing as root, you can install\n# as a normal user, as long as $HOME/.local/bin is in your $PATH\npython3 -m pip install --user -U privex-cspgen \n# Use the 'rehash' command to rescan PATH for new executables, for tab completion to work reliable\nrehash\n\n# Use --example to create an INI file using our example.ini template, which you can\n# then adjust to your own CSP needs\ncsp-gen --example > my_csp.ini\n# Open up my_csp.ini in your favourite editor, and adjust to your specific needs (e.g. nano)\nnano my_csp.ini\n# Parse my_csp.ini into browser Content-Security-Policy header format, outputting the result to my_header.txt\ncsp-gen my_csp.ini | tee -a my_header.txt\n# NOTE: If something is wrong with the binary, you can run cspgen via the Python module instead\npython3 -m privex.cspgen my_csp.ini | tee -a my_header.txt\n# If you have some sort-of INI auto-generation, or simply want to do some pre-processing of your INI with unix tools,\n# then you can simply pipe an INI config into csp-gen\ncat my_csp.ini | csp-gen | tee -a my_header.txt\n\n# If you wanted to make the CSP header more readable - assuming the web server you're gonna use it on allows newlines,\n# you can use --section-sep to separate each CSP section (img-src, media-src etc.) with a newline\ncsp-gen --section-sep \"\\n\" my_csp.ini\n```\n\n## Docker Quickstart\n\n**Our DockerHub image:** `privex/cspgen`\n\nOur image is based on `python:3.9-alpine` to ensure the smallest image size, since CSPGen doesn't require any special\nlibraries that would require a full debian-based image.\n\n```sh\n# Alias the docker run command to 'cspgen' for convenience\nalias cspgen=\"docker run --rm -i privex/cspgen\"\n# Generate an example .ini file\ncspgen --example > my_csp.ini\n# Adjust the INI file to your CSP needs\nnano my_csp.ini\n# Once your INI file is ready to be converted, pipe it in via STDIN\n# (docker cannot access your files unless you mount a volume onto /data)\ncspgen < my_csp.ini\n# If you wanted to make the CSP header more readable - assuming the web server you're gonna use it on allows newlines,\n# you can use --section-sep to separate each CSP section (img-src, media-src etc.) with a newline\ncspgen --section-sep \"\\n\" < my_csp.ini\n```\n\n## Install\n\n### From pip3\n\nCSPGen can easily be installed from PyPi, using the standard `pip3` package manager.\n\n```sh\n# Install/Upgrade CSPGen using pip3 as root\nsudo -H pip3 install -U privex-cspgen\n# Or if you don't have root access / don't trust installing as root, you can install\n# as a normal user, as long as $HOME/.local/bin is in your $PATH\npip3 install --user -U privex-cspgen \n# If you have problems using pip3, then use python3 / python3.x to call the pip module\npython3.7 -m pip install --user -U privex-cspgen\n```\n\n### From repo source code\n\n```sh\n# Install pipenv if you don't already have it installed.\n# Ideally install it using whatever the latest version of python is - on your system\npython3.8 -m pip install -U pipenv\n\ngit clone https://github.com/Privex/cspgen.git\ncd cspgen\n# Create a virtualenv + install required deps + development deps\npipenv install --dev\n# Activate the virtualenv (use 'exit' to deactivate a pipenv virtualenv)\npipenv shell\n# Use run.py to run the CLI from the repo directly\n./run.py --example > my_csp.ini\n./run.py my_csp.ini\n```\n\n### From Docker (DockerHub)\n\n```sh\n###\n# You can run privex/cspgen directly, and docker should auto download it from Docker Hub.\n# Use the image just like you would the normal csp-gen EXE\n###\ndocker run --rm -i privex/cspgen --example > my_csp.ini\ndocker run --rm -i privex/cspgen < my_csp.ini\n###\n# You can use 'docker pull' to manually download, or update the cspgen image\n###\ndocker pull privex/cspgen\n###\n# You can re-tag our image to an easier to type image name\n###\ndocker tag privex/cspgen cspgen\ndocker run --rm -i cspgen < my_csp.ini\n```\n\n\n### From Docker (building image from repo Dockerfile)\n\n```sh\ngit clone https://github.com/Privex/cspgen.git\ncd cspgen\ndocker build -t cspgen .\ndocker run --rm -i cspgen < my_csp.ini\n```\n\n\n## Usage\n\n### Example INI File\n\nOnce you've installed CSPGen, you can begin creating CSP template files, in INI format in any folder you like.\n\nHere is a basic example INI template, which covers most of the basics:\n\n```ini\n[groups]\n# First we define cdn, onions, and i2p\ncdn = https://cdn.privex.io cdn.privex.i2p files.privex.i2p files.privex.io https://www.privex.io\nonions = privex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion privexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion\ni2p = privex.i2p www.privex.i2p pay.privex.i2p\n# Now we can add our main websites, PLUS the onions, and i2p variables\nwebsites = https://www.privex.io https://pay.privex.io https://privex.io {{onions}} {{i2p}}\n# While defaultsrc will contain 'self' + websites + cdn\ndefaultsrc = 'self' {{websites}} {{cdn}}\n\nimages = https://i.imgur.com https://ipfs.io https://cloudflare-ipfs.com\nvideo = https://youtube.com https://vimeo.com\nmedia = {{video}} {{images}}\n\n[default-src]\n# For default-src, we can simply set zones to use the defaultsrc var\nzones = {{defaultsrc}}\n# Enable unsafe-inline and disable unsafe-eval for default-src\nunsafe-inline = true\nunsafe-eval = false\n\n[img-src]\nzones = {{defaultsrc}} {{images}} {{trustpilot}}\n\n[media-src]\nzones = {{defaultsrc}} {{media}}\n\n[flags]\n# Special header 'flags'. We can set the independent CSP flag 'upgrade-insecure-requests' here.\nflags = upgrade-insecure-requests\n```\n\n### Loading INI files\n\nAssuming we saved this file as `my_csp.ini`, it could be loaded in two different ways:\n\n#### As command line arguments\n\nYou can pass one or more filenames as positional CLI arguments to `csp-gen`. For now we'll just pass one:\n\n```sh\ncsp-gen my_csp.ini\n# NOTE: If something is wrong with the binary, you can run cspgen via the Python module instead\npython3 -m privex.cspgen my_csp.ini\n```\n\n#### Piped via STDIN\n\nIn compliance with UNIX standards, the tool can also accept a config via STDIN, and will output the generated\nCSP config via STDOUT. Any logging (if logging is even enabled by setting env `LOG_LEVEL=DEBUG`) is sent to STDERR\nby default, to prevent getting mixed with the config printed via standard output.\n\n```sh\ncat my_csp.ini | csp-gen | tee -a output.txt\n```\n\nYou can also set the filename to `-`, as you would with `gzip`, `tar`, and other UNIX/Linux programs, to force\nreading from STDIN:\n\n```sh\ncat my_csp.ini | csp-gen - | tee -a output.txt\n```\n\n### Customising Output Format\n\nCurrently there are just two customisation options available:\n\n - `--section-sep` - The separator used between each \"section\" like default-src, img-src, media-src etc.\n\n   Defaults to `' '` (one space)\n - `--file-sep` - The separator used between each INI file's outputted config. This only matters if you're passing\n   more than one INI config file to `csp-gen` at a time.\n\n   Defaults to: `'\\n\\n'` (two newline characters.)\n\nNote that you don't need to pass literal newline/carriage return/tab characters, as the script will automatically\nconvert `\\n` `\\r` and `\\t` in text format, into their real single character versions.\n\nExample:\n\n```sh\ncsp-gen --section-sep \"\\t\" --file-sep \"\\n\\n--NEXT--\\n\\n\\t\" my_csp.ini example.ini\n```\n\nThis would result in the output (line breaks were added to the output after copying, to make it more readable):\n\n```\ndefault-src: 'self' https://www.privex.io https://pay.privex.io https://privex.io \nprivex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion \nprivexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion privex.i2p www.privex.i2p pay.privex.i2p https://cdn.privex.io \ncdn.privex.i2p files.privex.i2p files.privex.io 'unsafe-inline'; img-src: 'self' https://www.privex.io https://pay.privex.io \nhttps://privex.io privex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion \nprivexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion privex.i2p www.privex.i2p pay.privex.i2p https://cdn.privex.io \ncdn.privex.i2p files.privex.i2p files.privex.io https://i.imgur.com https://ipfs.io \nhttps://cloudflare-ipfs.com;   media-src: 'self' https://www.privex.io https://pay.privex.io https://privex.io \nprivex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion \nprivexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion privex.i2p www.privex.i2p pay.privex.i2p https://cdn.privex.io \ncdn.privex.i2p files.privex.i2p files.privex.io https://youtube.com https://vimeo.com https://i.imgur.com \nhttps://ipfs.io https://cloudflare-ipfs.com;   upgrade-insecure-requests;\n\n--NEXT--\n\n    default-src: 'self' https://www.privex.io https://pay.privex.io https://privex.io \nprivex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion \nprivexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion privex.i2p www.privex.i2p pay.privex.i2p https://cdn.\nprivex.io cdn.privex.i2p files.privex.i2p files.privex.io 'unsafe-inline'; style-src: 'self' https://www.privex.io \nhttps://pay.privex.io https://privex.io privex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion \nprivexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion privex.i2p www.privex.i2p pay.privex.i2p https://cdn.\nprivex.io cdn.privex.i2p files.privex.i2p files.privex.io https://widget.trustpilot.com https://trustpilot.com \nhttps://fonts.gstatic.com https://fonts.googleapis.com 'unsafe-inline';     script-src: 'self' https://www.privex.io \nhttps://pay.privex.io https://privex.io privex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion  \nprivexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion privex.i2p www.privex.i2p pay.privex.i2p \nhttps://cdn.privex.io cdn.privex.i2p files.privex.i2p files.privex.io https://widget.trustpilot.com  \nhttps://trustpilot.com 'unsafe-inline';   font-src: 'self' https://www.privex.io https://pay.privex.io  \nhttps://privex.io privex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion \nprivexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion privex.i2p www.privex.i2p pay.privex.i2p \nhttps://cdn.privex.io cdn.privex.i2p files.privex.i2p files.privex.io https://widget.trustpilot.com \nhttps://trustpilot.com https://fonts.gstatic.com https://fonts.googleapis.com;      img-src: 'self' \nhttps://www.privex.io https://pay.privex.io https://privex.io \nprivex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion \nprivexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion privex.i2p www.privex.i2p \npay.privex.i2p https://cdn.privex.io cdn.privex.i2p files.privex.i2p files.privex.io \nhttps://i.imgur.com https://ipfs.io https://cloudflare-ipfs.com https://widget.trustpilot.com \nhttps://trustpilot.com;      media-src: 'self' https://www.privex.io https://pay.privex.io \nhttps://privex.io privex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion \nprivexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion privex.i2p www.privex.i2p pay.privex.i2p \nhttps://cdn.privex.io cdn.privex.i2p files.privex.i2p files.privex.io https://youtube.com https://vimeo.com \nhttps://i.imgur.com https://ipfs.io https://cloudflare-ipfs.com;   object-src: 'self' https://www.privex.io \nhttps://pay.privex.io https://privex.io privex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion \nprivexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion privex.i2p www.privex.i2p pay.privex.i2p \nhttps://cdn.privex.io cdn.privex.i2p files.privex.i2p files.privex.io https://youtube.com https://vimeo.com \nhttps://i.imgur.com https://ipfs.io https://cloudflare-ipfs.com;  form-action: 'self' https://www.privex.io \nhttps://pay.privex.io https://privex.io privex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion \nprivexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion privex.i2p www.privex.i2p pay.privex.i2p \nhttps://cdn.privex.io cdn.privex.i2p files.privex.i2p files.privex.io https://hived.privex.io;       \nconnect-src: 'self' https://www.privex.io https://pay.privex.io https://privex.io \nprivex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion \nprivexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion privex.i2p www.privex.i2p pay.privex.i2p \nhttps://cdn.privex.io cdn.privex.i2p files.privex.i2p files.privex.io \nhttps://hived.privex.io;       upgrade-insecure-requests;\n\n```\n\n### Compiling the repo into a self-contained PYZ (ZIP) executable file\n\n#### Requirements + Compiling\n\nOnce finished, you'll have a fully self-contained Python application at `dist/csp-gen.pyz`, which \ncan be executed on any Linux/Unix/macOS system as a normal executable, and the user only needs Python 3\ninstalled, no need for pip3 install, since all dependencies are packaged inside of the .PYZ file.\n\nRequired to compile:\n\n- A Linux / UNIX(-like) operating system. Should work on:\n   - Linux Distros: Ubuntu 18.04+, Debian 10+ (Buster or newer), Fedora (30+), CentOS (6+), RHEL, Oracle, probably most others\n   - BSD Distros: FreeBSD, OpenBSD, NetBSD, and most others\n   - macOS: Probably any version in the past 10 years. I'd recommend no older than Mavericks (10.9).\n- The Linux/UNIX `zip` CLI application (`apt install -y zip`, `dnf install -y zip`, `brew install zip`)\n- The `bash` shell, to execute the compile.sh script. May not be compatible with `bash` versions prior to 4.0\n- Python 3.6+ (maybe 3.7+) and `pip3` (the `pip` python3 module)\n\n```sh\ngit clone https://github.com/Privex/cspgen.git\ncd cspgen\n./compile.sh\n```\n\nYou should now have a fully self-contained Python application at `dist/csp-gen.pyz` :)\n\n#### Using the PYZ file\n\nThe easiest way to use the PYZ file is to simply copy it into `/usr/local/bin/csp-gen`, like so:\n\n```sh\n# By using 'install', it will ensure 'csp-gen' has the correct perms to be read and ran by all users.\nsudo install dist/csp-gen.pyz /usr/local/bin/csp-gen\n```\n\nNow you should be able to run `csp-gen` like normal. The benefit of the PYZ, is that you can distribute\nthe PYZ like a static binary, it contains all dependencies required for the application to run - inside of the\nsingular file. \n\nIt doesn't require the user to `pipenv install`, setup virtualenvs, or anything like that. They\nsimply just need to make sure Python 3.6 or newer is installed.\n\n```sh\nuser@host $ csp-gen -V\n\n    Content Security Policy (CSP) Generator\n\n        Version: v0.5.0\n        Github:  https://github.com/Privex/cspgen\n        License: X11 / MIT\n\n        (C) 2021 Privex Inc. ( https://www.privex.io )\n\n\n```\n\n## License\n\nCSPGen is released under the X11 / MIT License.\n\nPlease see the file `LICENSE.txt` or `LICENSE` for full license text.\n\n# Thanks for reading!\n\n**If this project has helped you, consider [grabbing a VPS or Dedicated Server from Privex](https://www.privex.io) -**\n**prices start at as little as $0.99/mo USD (we take cryptocurrency!)**\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Privex/cspgen",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "privex-cspgen",
    "package_url": "https://pypi.org/project/privex-cspgen/",
    "platform": "",
    "project_url": "https://pypi.org/project/privex-cspgen/",
    "project_urls": {
      "Homepage": "https://github.com/Privex/cspgen"
    },
    "release_url": "https://pypi.org/project/privex-cspgen/0.5.0/",
    "requires_dist": [
      "privex-helpers (>=3.2.0)",
      "privex-loghelper (>1.0.0)",
      "rich",
      "colorama"
    ],
    "requires_python": "",
    "summary": "A Python tool for generating Content Security Policies without constantly repeating yourself",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9120682,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1601cf31ebd64658fee2872512d051117ce2cb8a6d496a89dffe7c130d90792",
          "md5": "2a469cd22dc59f812fd0eb9dad672a7d",
          "sha256": "81db2bcd2237c4f1e409878a7cf96287756a8782c62ac173fc2721475626570a"
        },
        "downloads": -1,
        "filename": "privex_cspgen-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a469cd22dc59f812fd0eb9dad672a7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25304,
        "upload_time": "2021-01-13T03:39:29",
        "upload_time_iso_8601": "2021-01-13T03:39:29.455273Z",
        "url": "https://files.pythonhosted.org/packages/f1/60/1cf31ebd64658fee2872512d051117ce2cb8a6d496a89dffe7c130d90792/privex_cspgen-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b6506be175b20c2d2c3173ff4c5ee176c01bcc312f554647e103f0163793f21",
          "md5": "77b30e641b77fd66ab1157b2a5a43f46",
          "sha256": "4968954b0751f2a252d81fe922d6d6e6121a03ed1d0101b69fd7094ad71beb90"
        },
        "downloads": -1,
        "filename": "privex_cspgen-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "77b30e641b77fd66ab1157b2a5a43f46",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20627,
        "upload_time": "2021-01-13T03:39:31",
        "upload_time_iso_8601": "2021-01-13T03:39:31.282499Z",
        "url": "https://files.pythonhosted.org/packages/7b/65/06be175b20c2d2c3173ff4c5ee176c01bcc312f554647e103f0163793f21/privex_cspgen-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f1601cf31ebd64658fee2872512d051117ce2cb8a6d496a89dffe7c130d90792",
        "md5": "2a469cd22dc59f812fd0eb9dad672a7d",
        "sha256": "81db2bcd2237c4f1e409878a7cf96287756a8782c62ac173fc2721475626570a"
      },
      "downloads": -1,
      "filename": "privex_cspgen-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2a469cd22dc59f812fd0eb9dad672a7d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 25304,
      "upload_time": "2021-01-13T03:39:29",
      "upload_time_iso_8601": "2021-01-13T03:39:29.455273Z",
      "url": "https://files.pythonhosted.org/packages/f1/60/1cf31ebd64658fee2872512d051117ce2cb8a6d496a89dffe7c130d90792/privex_cspgen-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b6506be175b20c2d2c3173ff4c5ee176c01bcc312f554647e103f0163793f21",
        "md5": "77b30e641b77fd66ab1157b2a5a43f46",
        "sha256": "4968954b0751f2a252d81fe922d6d6e6121a03ed1d0101b69fd7094ad71beb90"
      },
      "downloads": -1,
      "filename": "privex_cspgen-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "77b30e641b77fd66ab1157b2a5a43f46",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20627,
      "upload_time": "2021-01-13T03:39:31",
      "upload_time_iso_8601": "2021-01-13T03:39:31.282499Z",
      "url": "https://files.pythonhosted.org/packages/7b/65/06be175b20c2d2c3173ff4c5ee176c01bcc312f554647e103f0163793f21/privex_cspgen-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}