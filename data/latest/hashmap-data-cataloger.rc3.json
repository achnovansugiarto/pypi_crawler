{
  "info": {
    "author": "Hashmap, an NTT DATA Company",
    "author_email": "accelerators@hashmapinc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<!---\nCopyright Â© 2020 Hashmap, Inc\n\nLicensed under the Apache License, Version 2.0 the \\(\"License\"\\);\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n--->\n\n# Hashmap Data Cataloger\n\nTable of Contents\n\n- [About](#about)\n- [Using Hashmap Data Cataloger (hdc)](#Using-hashmap-data-cataloger)\n    - [Setup](#Setup)\n    - [Running from CLI](#Running-from-CLI)\n    - [Using as API](#Using-as-API)\n- [Future Roadmap](#Future-Roadmap)\n- [Notes to developers](#Notes-to-developers)\n\n## About\n\nThe Hashmap Data Cataloger utility that can be used to catalog(read) data assets such as Databases, Schemas, and Tables\nfrom a given source system and map(write) them into a given destination system.\n\n## Using Hashmap Data Cataloger\n\nhashmap-data-cataloger (hdc) is can be invoked from the command line interface (next section) or as a library of APIs.\n\n### Setup\n\n#### Package Installation\n\nThis tool is available on PyPi and can be installed as:\n\n```bash\npip install hashmap-data-cataloger\n```\n\nThis will install the hashmap-data-cataloger and all of its dependencies. This is a pypi package and can be installed as\n\n#### Connection configuration file setup\n\nThe hdc tool is a configuration driven application that depends on 3 types of configurations encoded\nas [YAML](https://yaml.org/).\n\n##### Application Configuration\n\nThe hdc tool uses this YAML file to define the supported sources, destinations, and corresponding mappers in order to\nself-configure itself to enable the  'map' or 'catalog' functions. The layout of this file looks\nlike [this](resources/hdc.yml).\n\nThe default version comes with pre-configured sources, destinations, and mappers that can be used as is, while\ninvoking '_hdc_' from CLI or through an API call (see examples below). The user would only need to update the connection\nprofile for each source/destination individually under the section 'connection_profiles'. The profile names being\nupdated should match the one of the profile names in the profile.yml file.\n\nYou can override the default version file from CLI by using the '-c' option followed by the path of the custom YAML\nfile. However, it must conform to the format linked above.\n\nTo create a default YAML configuration file do the following:\n\n1. Using any text editor create a file like [this](resources/hdc.yml) and save as 'app_config.yml'\n2. Create a hidden directory in the User's root with the name '.hdc'\n3. Move the 'app_config.yml' into the hidden directory created above.\n\n##### Connection Profile Configuration\n\nThe hdc tool uses this YAML file to configure/provide the necessary connection details for source and destination\ndatabases. The elements required in the YAML file and their layout looks like [this](resources/profile.yml). Presently,\nthe connections are secured via user credentials.\n\nYou __cannot__ override this file from CLI and therefore will need to be made available beforehand as follows:\n\n1. Using any text editor create a file like [this](resources/profile.yml) and save as 'profile.yml'\n2. Create a hidden directory in the User's root with the name '.hdc'\n3. Move the 'profile.yml' into the hidden directory created above.\n\n##### Log Settings Configuration\n\nThe hdc tool uses this YAML file to configure the log settings (Python's logging). The elements required in the YAML\nfile and their layout looks like [this](resources/log_settings.yml).\n\nYou can override this file from CLI using the '-l' option followed by the path of the custom YAML file. However, it must\nconform to the format linked above.\n\nTo create a default YAML configuration file do the following:\n\n1. Using any text editor create a file like [this](resources/log_settings.yml) and save as 'log_settings.yml'\n2. Create a hidden directory in the User's root with the name '.hdc'\n3. Move the 'log_settings.yml' into the hidden directory created above.\n\n### Running from CLI\n\nOnce the package is installed along-with its dependencies, invoke it from the command line as:\n\n> ```bash\n>usage: hdc [-h] -r {catalog,map} -s SOURCE [-d DESTINATION] [-c APP_CONFIG] [-l LOG_SETTINGS] \n>\n>optional arguments:\n>  -h, --help            show this help message and exit\n>  -r {catalog,map}, --run {catalog,map}\n>                        One of 'catalog' or 'map'\n>  -s SOURCE, --source SOURCE\n>                        Name of any one of sources configured in hdc.yml\n>  -d DESTINATION, --destination DESTINATION\n>                        Name of any one of destinations configured in hdc.yml\n>  -c APP_CONFIG, --app_config APP_CONFIG\n>                        Path to application config (YAML) file if other than default\n>  -l LOG_SETTINGS, --log_settings LOG_SETTINGS\n>                        Path to log settings (YAML) file if other than default\n>```\n> ```\n> For example:\n>   python3 -m hdc -r catalog -s oracle  \n>   python3 -m hdc -r map -s oracle -d snowflake         \n>   python3 -m hdc -r map -s netezza -d snowflake\n>```\n\n### Using as API\n\nOther applications could import hdc as a library and make use of the cataloging or mapping functions as explained below.\n\n> 1. __AssetMapper.__ - Provides a method '_map_assets()_' to kickoff the crawling, mapping, and writing of data assets from a given source system to a target system based on the connection profile parameters for each.\n     > An AssetMapper object can be created in the following manner:\n>```\n>    asset_mapper = AssetMapper(source = '', destination = '')\n>    result: bool = asset_mapper.map_assets()\n>```\n>    '_source_' a str name of any one of the sources configured in the default app_config.yml.\n>\n>    '_destination_' a str name of any one of the destinations configured in the default app_config.yml\n\n> 2. __Cataloger__ - Provides a method '_obtain_catalog()_' to kickoff a crawler process against a given source system and pull the data asset information according to the connection profile parameters.\n     >\n     >    A Cataloger object can be created in the following manner:\n>```\n>    cataloger = Cataloger(source = '' )\n>    result: pandas.DataFrame = cataloger.obtain_catalog()\n>```\n>    '_source_' a str name of any one of the sources configured in the default app_config.yml.\n>\n\n## Future Roadmap\n\n### Selective crawling\n\nAt present the _hdc_ tool crawls through the entire hierarchy of a given database (all schemas, all tables under all\nschemas). This can be fine tuned to allow to crawl through only selected schemas under a given database.\n\n### Using external Key Store\n\n#### For enhanced user authentication\n\nAllow configuration of external Key Stores for storing user authentication details required while connecting with source\nor destination systems. The application shall be able to interact with the external KS based on the configuration\nprovided.\n\nThis is to provide a stronger security option instead of directly configuring the user credentials in the profile.yml\nfile.\n\n## Notes to developers\n\n### OOP Design\n\n[UML Class Diagram](https://lucid.app/lucidchart/invitations/accept/357e8f4a-b943-4fbe-a488-57d75342a17b)\n\n### Extending capability\n\n#### Adding new crawler\n\nTBD\n\n#### Adding new mapper\n\nTBD\n\n#### Adding new creator\n\nTBD",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/hashmapinc/oss/hashmap_data_cataloger",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hashmap-data-cataloger",
    "package_url": "https://pypi.org/project/hashmap-data-cataloger/",
    "platform": "",
    "project_url": "https://pypi.org/project/hashmap-data-cataloger/",
    "project_urls": {
      "Homepage": "https://gitlab.com/hashmapinc/oss/hashmap_data_cataloger"
    },
    "release_url": "https://pypi.org/project/hashmap-data-cataloger/0.3.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Early version of library - do not use",
    "version": "0.3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10011607,
  "releases": {
    "0.1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "598adfb719d6e8074afb4dfb0802a3fbda8a08181aab08ae2c56c6df7fd08b59",
          "md5": "545885ed25eb6584965c9178026b6486",
          "sha256": "2e11d1f79d606886e1c4cb89ea94b31b73347b4cf9b16f5e86a925cd3f6af696"
        },
        "downloads": -1,
        "filename": "hashmap_data_cataloger-0.1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "545885ed25eb6584965c9178026b6486",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10229,
        "upload_time": "2021-01-25T15:28:25",
        "upload_time_iso_8601": "2021-01-25T15:28:25.780747Z",
        "url": "https://files.pythonhosted.org/packages/59/8a/dfb719d6e8074afb4dfb0802a3fbda8a08181aab08ae2c56c6df7fd08b59/hashmap_data_cataloger-0.1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49ea54d9e31a3e2bb1612d6f1765be21ad465748a112aea28cdd8f3500cc3f3a",
          "md5": "183d1cfdd47c8e1562ddf837b2c0b083",
          "sha256": "30d9cb6455a84b27a54134073255d3756be542faef52f3420c3648328814cd9b"
        },
        "downloads": -1,
        "filename": "hashmap-data-cataloger-0.2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "183d1cfdd47c8e1562ddf837b2c0b083",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21377,
        "upload_time": "2021-03-29T17:34:06",
        "upload_time_iso_8601": "2021-03-29T17:34:06.163399Z",
        "url": "https://files.pythonhosted.org/packages/49/ea/54d9e31a3e2bb1612d6f1765be21ad465748a112aea28cdd8f3500cc3f3a/hashmap-data-cataloger-0.2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdbad399ba655bc119c1187b41a960b20325289ee00193a55352606d1c5bff9d",
          "md5": "351c4211eb92ec0c13f9975613f9cffd",
          "sha256": "c79f90e6612366b27538851de5a30a787e8da54f1a3df2980238ee5aea383e27"
        },
        "downloads": -1,
        "filename": "hashmap-data-cataloger-0.3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "351c4211eb92ec0c13f9975613f9cffd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22848,
        "upload_time": "2021-04-08T19:40:29",
        "upload_time_iso_8601": "2021-04-08T19:40:29.432800Z",
        "url": "https://files.pythonhosted.org/packages/bd/ba/d399ba655bc119c1187b41a960b20325289ee00193a55352606d1c5bff9d/hashmap-data-cataloger-0.3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bdbad399ba655bc119c1187b41a960b20325289ee00193a55352606d1c5bff9d",
        "md5": "351c4211eb92ec0c13f9975613f9cffd",
        "sha256": "c79f90e6612366b27538851de5a30a787e8da54f1a3df2980238ee5aea383e27"
      },
      "downloads": -1,
      "filename": "hashmap-data-cataloger-0.3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "351c4211eb92ec0c13f9975613f9cffd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 22848,
      "upload_time": "2021-04-08T19:40:29",
      "upload_time_iso_8601": "2021-04-08T19:40:29.432800Z",
      "url": "https://files.pythonhosted.org/packages/bd/ba/d399ba655bc119c1187b41a960b20325289ee00193a55352606d1c5bff9d/hashmap-data-cataloger-0.3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}