{
  "info": {
    "author": "rgutierrez-cotech",
    "author_email": "gutierrez@carnegiehub.org",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "============================\nDjango Cloud Tasks\n============================\n* Forked from https://github.com/GeorgeLubaretsi/django-cloud-tasks\n\nIntegrate `Google Cloud Tasks <https://goo.gl/Ya0AZd>`_ with Django.\n\nPackage provides easy to use decorator to create task handlers.\n\nApp looks for tasks in ``cloud_tasks.py`` files in your installed applications and auto-registers them.\n\nPackage is in early alpha and it does not have any real security at the moment. You need to authorize requests coming\nto your instances yourself.\n\nPrerequisites\n=============\n\n- Django 1.8+\n- Python 3.4, 3.5, 3.6\n\nDependencies\n============\n\n- `google-api-python-client <https://pypi.python.org/pypi/google-api-python-client/>`_\n\nDocumentation\n=============\n\nTODO\n\nInstallation\n============\n\n(1) Install latest version from Github (PyPy package will be available as soon as stable version is released):\n\n    .. code-block:: sh\n\n        pip install -e git+git@github.com:rgutierrez-cotech/django-cloud-tasks.git#egg=django_cloud_tasks\n\n\n(2) Add ``django_cloud_tasks`` to ``INSTALLED_APPS``:\n\n    .. code-block:: python\n\n        INSTALLED_APPS = (\n            # ...\n            'django_cloud_tasks',\n            # ...\n        )\n\n\n(3) Optionally, set up Google Cloud credentials in your settings.py for use with Django Cloud Tasks. If you are using a service account, make sure the account has the \"Cloud Tasks Admin\" permission.\n\n    .. code-block:: python\n\n        # install these if they are not already installed\n        import google.auth\n        from google.oauth2 import service_account\n\n        # ...\n\n        # To use application default credentials:\n        google_cloud_credentials, project = google.auth.default()\n\n        # To use a service account JSON file:\n        google_cloud_credentials = service_account.Credentials.from_service_account_file(\n                '/path/to/key.json')\n\n\n(4) Add configuration to your settings\n\n    .. code-block:: python\n\n        DJANGO_CLOUD_TASKS={\n            'project_location_name': 'projects/{project_name}/locations/us-central1',\n            'task_handler_root_url': '/_tasks/',\n        },\n\n        # This setting allows you to debug your cloud tasks by running actual task handler function locally\n        # instead of sending them to the task queue. Default: False\n        DJANGO_CLOUD_TASKS_EXECUTE_LOCALLY = False\n\n        # If False, running `.execute()` on remote task will simply log the task data instead of adding it to\n        # the queue. Useful for debugging. Default: True\n        DJANGO_CLOUD_TASKS_BLOCK_REMOTE_TASKS = False\n\n        # Optional argument. Specify a google.auth.credentials.Credentials object to use with the API \n        # Discovery service. Can be application default credentials or credentials generated from a \n        # service account JSON file. Default: None\n        DJANGO_CLOUD_TASKS_CREDENTIALS = None # or google_cloud_credentials if you defined this above\n\n\n(5) Add cloud task views to your urls.py (must resolve to the same url as ``task_handler_root_url``)\n\n    .. code-block:: python\n\n        # urls.py\n        # ...\n        from django.urls import path, include\n        from django_cloud_tasks import urls as dct_urls\n\n        urlpatterns = [\n            # ...\n            path('_tasks/', include(dct_urls)),\n        ]\n\n\n\nQuick start\n===========\n\nSimply import the task decorator and define the task inside ``cloud_tasks.py`` in your app.\nFirst parameter should always be ``request`` which is populated after task is executed by Cloud Task service.\n\nYou can get actual request coming from Cloud Task service by accessing ``request.request`` in your task body and\nadditional attributes such as: ``request.task_id```, ```request.request_headers```\n\n.. code-block:: python\n\n    # cloud_tasks.py\n    # ...\n    from django_cloud_tasks.decorators import task\n\n    @task(queue='default')\n    def example_task(request, p1, p2):\n        print(p1, p2)\n        print(request.task_id)\n\n\nPushing the task to the queue:\n\n.. code-block:: python\n\n    from my_app.cloud_tasks import example_task\n\n    example_task(p1='1', p2='2').execute()\n\n\nPushing remote task to the queue (when task handler is defined elsewhere):\n\n.. code-block:: python\n\n    from django_cloud_tasks import remote_task\n    from django_cloud_tasks import batch_execute\n\n    example_task = remote_task(queue='my-queue', handler='remote_app.cloud_tasks.example_task'):\n    payload_1 = example_task(payload={'p1': 1, 'p2': '2'})\n    payload_2 = example_task(payload={'p1': 2, 'p2': '3'})\n\n    # Execute in batch:\n    batch_execute([payload_1, payload_2])\n\n    # Or one by one:\n    payload_1.execute()\n    payload_2.execute()\n\n\nYou can also send tasks in batch if latency is an issue and you have to send many small tasks to the queue\n(limited to 1000 at a time):\n\n.. code-block:: python\n\n    from my_app.cloud_tasks import example_task\n    from django_cloud_tasks import batch_execute\n\n    tasks = []\n    for i in range(0, 420):\n        task = example_task(p1=i, p2=i)\n        tasks.append(task)\n\n    batch_execute(tasks)\n\n\n\nIt is also possible to run an actual function using ``run`` method of ``CloudTaskWrapper`` object instance that is returned after task is called (this can be useful for debugging):\n\n.. code-block:: python\n\n    task = example_task(p1=i, p2=i)\n    task.run()",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/rgutierrez-cotech/django-cloud-tasks/archive/0.0.4a.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rgutierrez-cotech/django-cloud-tasks",
    "keywords": "django cloudtasks cloud tasks",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-cloud-tasks-withcredentials",
    "package_url": "https://pypi.org/project/django-cloud-tasks-withcredentials/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-cloud-tasks-withcredentials/",
    "project_urls": {
      "Download": "https://github.com/rgutierrez-cotech/django-cloud-tasks/archive/0.0.4a.tar.gz",
      "Homepage": "https://github.com/rgutierrez-cotech/django-cloud-tasks"
    },
    "release_url": "https://pypi.org/project/django-cloud-tasks-withcredentials/0.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Google Cloud Tasks integration for Django. Forked from https://github.com/GeorgeLubaretsi/django-cloud-tasks",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6633681,
  "releases": {
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84ae15b64a822cc2cb2c8a7e2c323c34aed60240a0a9647392786f4ab6708358",
          "md5": "d337d40c2e09f146a335e53e9cf3fd7e",
          "sha256": "9e2b3e78cfd0b4f5cce46e698de82b6e9c1264a2d56e4cd4eaa907df8954b2af"
        },
        "downloads": -1,
        "filename": "django-cloud-tasks-withcredentials-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d337d40c2e09f146a335e53e9cf3fd7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10889,
        "upload_time": "2020-02-14T21:23:27",
        "upload_time_iso_8601": "2020-02-14T21:23:27.741277Z",
        "url": "https://files.pythonhosted.org/packages/84/ae/15b64a822cc2cb2c8a7e2c323c34aed60240a0a9647392786f4ab6708358/django-cloud-tasks-withcredentials-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "84ae15b64a822cc2cb2c8a7e2c323c34aed60240a0a9647392786f4ab6708358",
        "md5": "d337d40c2e09f146a335e53e9cf3fd7e",
        "sha256": "9e2b3e78cfd0b4f5cce46e698de82b6e9c1264a2d56e4cd4eaa907df8954b2af"
      },
      "downloads": -1,
      "filename": "django-cloud-tasks-withcredentials-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "d337d40c2e09f146a335e53e9cf3fd7e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10889,
      "upload_time": "2020-02-14T21:23:27",
      "upload_time_iso_8601": "2020-02-14T21:23:27.741277Z",
      "url": "https://files.pythonhosted.org/packages/84/ae/15b64a822cc2cb2c8a7e2c323c34aed60240a0a9647392786f4ab6708358/django-cloud-tasks-withcredentials-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}