{
  "info": {
    "author": "Petr Dlouh√Ω",
    "author_email": "petr.dlouhy@email.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "=============================\nrank\n=============================\n\n.. image:: https://badge.fury.io/py/django-rank-query.svg\n    :target: https://badge.fury.io/py/django-rank-query\n\n.. image:: https://travis-ci.org/petrdlouhy/django-rank-query.svg?branch=master\n    :target: https://travis-ci.org/petrdlouhy/django-rank-query\n\n.. image:: https://codecov.io/gh/petrdlouhy/django-rank-query/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/petrdlouhy/django-rank-query\n\nEnable SQL Window functions for use in Django queries. Add rank to your query.\n\nDjango in curren't version (1.10) doesn't support [window functions](https://www.postgresql.org/docs/9.3/static/functions-window.html) as seen in PostgreSQL.\nThis implemets `rank`, `dense_rank` and adds shortcut for `upper_rank`, which retrieves upper value for rank (rank of last element in the window).\nThe implementation is currently working only on PostgreSQL.\n\nNote: The support for window functions is being already solved in [issue #26608](https://code.djangoproject.com/ticket/26608).\n\nQuickstart\n----------\n\nInstall rank::\n\n    pip install django-rank-query\n\nUsage\n-----\n\n\nU can annotate users by rank (sequenc number in alphabet) of their\nlast name the like this::\n\n    from rank import DenseRank, UpperRank, Rank\n    users = User.objects.all()\n    users = user.annotate(lower_rank=Rank('last_name'))\n    users = user.annotate(upper_rank=UpperRank('last_name'))\n    users = user.annotate(dense_rank=DenseRank('last_name'))\n\nThen you have user query annotated with various ranks. You can retrieve them for example by `values` function::\n\n   user_ranks = users.values('last_name', 'lower_rank', 'upper_rank')\n\nNote: PostgreSQL doesn't support combining `rank` functions with `GROUP_BY` or in `WHERE` clause. So you cannot use them in aggregation queries.\n\nRank is counted in the current `select` query, so filtering will change rank of given elements, so you can't have sequence number in whole table filtered by ie. his name.\nThis can be solved by using subqueries in SQL, but Django doesn't support them as far as I know.\n\n\nRunning Tests\n-------------\n\nDoes the code actually work?\n\n::\n\n    source <YOURVIRTUALENV>/bin/activate\n    (myenv) $ pip install tox\n    (myenv) $ tox\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.1.0 (2017-01-20)\n++++++++++++++++++\n\n* First release on PyPI.\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/petrdlouhy/django-rank-query",
    "keywords": "django-rank-query",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-rank-query",
    "package_url": "https://pypi.org/project/django-rank-query/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-rank-query/",
    "project_urls": {
      "Homepage": "https://github.com/petrdlouhy/django-rank-query"
    },
    "release_url": "https://pypi.org/project/django-rank-query/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Enable SQL Window functions for use in Django queries. Add rank to your query.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2587818,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "036da0af2e03979daa744d018f23931a59a9d3fd3b1696ce86c33955c1f45489",
          "md5": "89841c1f488523b8ac9d5d98610051a6",
          "sha256": "6eef9d1c4048977494cc89be241d4c36a53a485ef00d4aedf2c974d0c70f941f"
        },
        "downloads": -1,
        "filename": "django-rank-query-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "89841c1f488523b8ac9d5d98610051a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16516,
        "upload_time": "2017-01-20T15:31:14",
        "upload_time_iso_8601": "2017-01-20T15:31:14.815297Z",
        "url": "https://files.pythonhosted.org/packages/03/6d/a0af2e03979daa744d018f23931a59a9d3fd3b1696ce86c33955c1f45489/django-rank-query-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "036da0af2e03979daa744d018f23931a59a9d3fd3b1696ce86c33955c1f45489",
        "md5": "89841c1f488523b8ac9d5d98610051a6",
        "sha256": "6eef9d1c4048977494cc89be241d4c36a53a485ef00d4aedf2c974d0c70f941f"
      },
      "downloads": -1,
      "filename": "django-rank-query-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "89841c1f488523b8ac9d5d98610051a6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16516,
      "upload_time": "2017-01-20T15:31:14",
      "upload_time_iso_8601": "2017-01-20T15:31:14.815297Z",
      "url": "https://files.pythonhosted.org/packages/03/6d/a0af2e03979daa744d018f23931a59a9d3fd3b1696ce86c33955c1f45489/django-rank-query-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}