{
  "info": {
    "author": "Henry Robbins",
    "author_email": "hw.robbins@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# <img alt=\"vinal\" src=\"docs/branding/vinal_color.png\" height=\"90\">\n\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/vinal.svg)](https://pypi.python.org/pypi/vinal/)\n[![Documentation Status](https://readthedocs.org/projects/vinal/badge/?version=latest)](https://vinal.readthedocs.io/en/latest/?badge=latest)\n\nvinal is a Python package for visualizing graph/network algorithms. Currently, the following algorithms are implemented:\n\n- [Shortest path problem](https://en.wikipedia.org/wiki/Shortest_path_problem)\n    - [Dijkstra's algorithm](https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm)\n- [Minimum Spanning Tree (MST)](https://en.wikipedia.org/wiki/Minimum_spanning_tree)\n    - [Prim's Algorithm](https://en.wikipedia.org/wiki/Prim%27s_algorithm)\n    - [Kruskal's Algorithm](https://en.wikipedia.org/wiki/Kruskal%27s_algorithm)\n    - [Reverse Kruskal's Algorithm](https://en.wikipedia.org/wiki/Reverse-delete_algorithm)\n- [Travelling Salesman Problem (TSP)](https://en.wikipedia.org/wiki/Travelling_salesman_problem)\n    - Random neighbor\n    - [Nearest neighbor](https://en.wikipedia.org/wiki/Nearest_neighbour_algorithm)\n    - Nearest insertion\n    - Furthest insertion\n    - [2-OPT](https://en.wikipedia.org/wiki/2-opt)\n\n[NetworkX](https://networkx.org/) graphs can be constructed from a single ```.csv``` file of node locations. Alternatively, one can specify edges of the graph by providing an additional ```.csv``` file of edges. The package relies on [bokeh](https://docs.bokeh.org/en/latest/index.html) to generate standalone HTML files which can be viewed in a Jupyter Notebook inline or in a web browser.\n\n## Examples\n\n![dijkstras](images/dijkstras.png?raw=true)\n![prims](images/prims.png?raw=true)\n![us_tour](images/us_tour.png?raw=true)\n\n## Installation\n\nThe quickest way to get started is with a pip install.\n\n```bash\npip install vinal\n```\n\n## Usage\n\nFirst, import the ```vinal``` package (commonly renamed to ```vl```).\n\n```python\nimport vinal as vl\n\n# Calling output_notebook() makes show() display plot in a Jupyter Notebook.\n# Without it, a new tab with the plot will be opened.\nfrom bokeh.io import output_notebook, show\noutput_notebook()  # only include if you want plot inline\n```\n\nAll of the algorithm and plotting functions take a NetworkX graph as input. The```build``` module provides a way of constructing NetworkX graphs from ```.csv``` files. The standard ```nodes.csv``` and ```edges.csv``` files have the following form:\n\n| nodes.csv | x | y |\n| --------- | - | - |\n| 0         | 0 | 0 |\n| 1         | 1 | 5 |\n| 2         | 7 | 6 |\n| 3         | 8 | 6 |\n| 4         | 4 | 6 |\n\n| edges.csv | u | v |\n| --------- | - | - |\n| 0         | 0 | 1 |\n| 1         | 1 | 2 |\n| 2         | 4 | 3 |\n| 3         | 3 | 1 |\n| 4         | 2 | 4 |\n\nUse pandas to import these ```.csv``` files as dataframes.\n\n```python\nimport pandas as pd\nnodes = pd.read_csv('nodes.csv', index_col=0)\nedges = pd.read_csv('edges.csv', index_col=0)\n```\n\nWe can now use ```vl.create_network()``` to create a NetworkX graph.\n\n```python\nG = vl.create_network(nodes, edges)\n```\n\nIf an edges dataframe is not provided, the graph is assumed to be complete (every pair of nodes is connected) and the weights of each edge are determined by the euclidean distance between the pair of nodes.\n\n```python\nG = vl.create_network(nodes)\n```\n\nHere, we give a summary of the various graph algorithms one can run.\n\n```python\n# ----- Shortest path problem -----\n# Returns: List of edges in the shortest path tree\n\n# s: index of source vertex\ntree = vl.dijkstras(G, s=0)\n\n\n# ----- Minimum Spanning Tree (MST) -----\n# Returns: List of edges in the shortest path tree\n\n# i: index of initial vertex\nmst = vl.prims(G, i=0)\nmst = vl.kruskals(G)\nmst = vl.reverse_kruskals(G)\n\n# returns the cost of the minimum spanning tree\nvl.spanning_tree_cost(G, mst)\n\n\n# ----- Traveling Salesman Problem (TSP) -----\n# Returns: List of node indices in the order they are visited\n\n# i: index of initial vertex\ntour = vl.random_neighbor(G, i=0)\ntour = vl.nearest_neighbor(G, i=0)\n# intial_tour: initial 2-node tour\ntour = vl.nearest_insertion(G, intial_tour=[0,1,0])\ntour = vl.furthest_insertion(G, intial_tour=[0,4,0])\n# tour: initial tour to improve\ntour = vl.two_opt(G, tour=tour)\n\n# returns the cost of the tour\nvl.tour_cost(G, tour)\n```\n\nThere are four types of plots that vinal can generate:\n\n- Static solution plots\n- Non-iteractive algorithm visualization plots\n- Interactive create plots\n- Interactive algorithm plots\n\nAfter genrating a solution via one of the algorithms, a static plot of the solution can be shown. In the following example, a tour is found using nearest insertion and then plotted.\n\n```python\ntour = vl.nearest_insertion(G, initial_tour=[0,1,0])\nshow(vl.tour_plot(G, tour))\n```\n\n![nearest_insertion_plot_tour](images/nearest_insertion_tour_plot.png?raw=true)\n\nIf one wishes to see each iteration of the algorithm, a plot with a ```Previous``` and ```Next``` button can be generated. In most cases, the cost of the solution in each iteration is shown and the text \"done.\" will appear on the final iteration. In the following example, a tour is found using random neighbor and then a plot is returned showing each iteration of the 2-OPT tour improvement heuristic.\n\n```python\ntour = vl.random neighbor(G)\nshow(vl.tsp_heuristic_plot(G, algorithm='2-OPT', tour=tour))\n```\n\n![2-opt](images/2-opt.png?raw=true)\n\nTours and spanning trees can also be constructed in a point-and-click fashion. When creating a tour, click the next node you wish to visit. When creating a spanning tree, click each edge you want in the tree.\n\n```python\nshow(vl.create_spanning_tree_plot(G))\nshow(vl.create_tour_plot(G))\n```\n\n![build_tour](images/build_tour.png?raw=true)\n\nLastly, an interactive version of Dijkstra's algorithm and the MST algorithms can be plotted. For Dijkstra's algorithm, the user is asked to select the next node from the frontier set to explore. For the MST algorithms, the user is asked to select the next edge to be added/removed from the tree. In all cases, a helpful error message will appear when the user selects incorreclty.\n\n```python\nshow(vl.assisted_mst_algorithm_plot(G, algorithm='kruskals'))\n```\n\n![kruskals_assisted](images/kruskals_assisted.png?raw=true)\n\n## License\n\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /></a><br />\n This work is licensed under a\n [Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License](LICENSE)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/henryrobbins/tmp.git",
    "keywords": "",
    "license": "Creative Commons Attribution-NonCommercial-ShareAlike 4.0. https://creativecommons.org/licenses/by-nc-sa/4.0/",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vinal",
    "package_url": "https://pypi.org/project/vinal/",
    "platform": null,
    "project_url": "https://pypi.org/project/vinal/",
    "project_urls": {
      "Homepage": "https://github.com/henryrobbins/tmp.git"
    },
    "release_url": "https://pypi.org/project/vinal/0.0.4/",
    "requires_dist": [
      "numpy (>=1.19)",
      "pandas (>=1.2)",
      "networkx (>=3)",
      "bokeh (>=3)",
      "typing (>=3.7)"
    ],
    "requires_python": ">=3.8",
    "summary": "A Python package for visualizing graph algorithms.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16781918,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8729986b1afd2ff36f1079a6aa4a626e900c14a62ab9273cc7f779e1814aebf5",
          "md5": "9f0307c90ca05a19bed7e9876dd35624",
          "sha256": "e098d7784d9b10db98b6ffd5fe526c51e39f2143901771b7b8503e2510424529"
        },
        "downloads": -1,
        "filename": "vinal-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f0307c90ca05a19bed7e9876dd35624",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 18036,
        "upload_time": "2021-02-04T16:56:36",
        "upload_time_iso_8601": "2021-02-04T16:56:36.859899Z",
        "url": "https://files.pythonhosted.org/packages/87/29/986b1afd2ff36f1079a6aa4a626e900c14a62ab9273cc7f779e1814aebf5/vinal-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de80b7c1d5083291c70f8e9bbf50d3549ff52e19d545d8ca5e8aed036add243e",
          "md5": "9d153bc808e579fbdf7a914c31d21fa1",
          "sha256": "9ace66327c09a8a868cd0f8c62b0733a6bbf6d0e0797ec7c7ef084d01f830069"
        },
        "downloads": -1,
        "filename": "vinal-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9d153bc808e579fbdf7a914c31d21fa1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 15829,
        "upload_time": "2021-02-04T16:56:38",
        "upload_time_iso_8601": "2021-02-04T16:56:38.265554Z",
        "url": "https://files.pythonhosted.org/packages/de/80/b7c1d5083291c70f8e9bbf50d3549ff52e19d545d8ca5e8aed036add243e/vinal-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae8a202a535b54df9f3c8d7bb6f36c6a49ea074a2ce93434f6c4c624a3f03710",
          "md5": "026825442feb433ce0e73e6fbed15f8b",
          "sha256": "e4f333a8c6f9e0bb0b8f8673ed79daeb78569fe1f0ad0c96820ce26adca4a727"
        },
        "downloads": -1,
        "filename": "vinal-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "026825442feb433ce0e73e6fbed15f8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 22664,
        "upload_time": "2021-06-08T18:48:36",
        "upload_time_iso_8601": "2021-06-08T18:48:36.689201Z",
        "url": "https://files.pythonhosted.org/packages/ae/8a/202a535b54df9f3c8d7bb6f36c6a49ea074a2ce93434f6c4c624a3f03710/vinal-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1823fd0cd32b0473da9fe328b5335702a82b817d0897507840ac740592daa17c",
          "md5": "704f733bebc1ceb83f6786b5c691e5c0",
          "sha256": "0b66e39a053148f064fe419ff23c165c56857825260104760a0700eaeddc5216"
        },
        "downloads": -1,
        "filename": "vinal-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "704f733bebc1ceb83f6786b5c691e5c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 19882,
        "upload_time": "2021-06-08T18:48:37",
        "upload_time_iso_8601": "2021-06-08T18:48:37.857184Z",
        "url": "https://files.pythonhosted.org/packages/18/23/fd0cd32b0473da9fe328b5335702a82b817d0897507840ac740592daa17c/vinal-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ed4e569b54894ddebcb090e98230f416b2fa41aee9cb27abc09a415c4501baf",
          "md5": "6e37fd2393a1a9b0586246281f0ef486",
          "sha256": "db061676d2d7b62fab8f3341bb133938bf705d2afc4e758d71a56ffda015168b"
        },
        "downloads": -1,
        "filename": "vinal-0.0.2rc0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e37fd2393a1a9b0586246281f0ef486",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 22701,
        "upload_time": "2021-06-08T04:50:30",
        "upload_time_iso_8601": "2021-06-08T04:50:30.685891Z",
        "url": "https://files.pythonhosted.org/packages/6e/d4/e569b54894ddebcb090e98230f416b2fa41aee9cb27abc09a415c4501baf/vinal-0.0.2rc0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37ede8028865254b9429d712b862a1640405e3d6e213b547573aa7181fbcbcf9",
          "md5": "78bd3135de04cd2da353b890224d99f7",
          "sha256": "b8da92b3952b525227de541f7e853368ff56cf3d908c7bee2907fabc9cdb2364"
        },
        "downloads": -1,
        "filename": "vinal-0.0.2rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "78bd3135de04cd2da353b890224d99f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 19885,
        "upload_time": "2021-06-08T04:50:32",
        "upload_time_iso_8601": "2021-06-08T04:50:32.324633Z",
        "url": "https://files.pythonhosted.org/packages/37/ed/e8028865254b9429d712b862a1640405e3d6e213b547573aa7181fbcbcf9/vinal-0.0.2rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0617835478d367d629de77435ff22f89d6b0f9039e936f5c6175f53b77f92c1c",
          "md5": "4b3eb0aa3a20bb08efb6ba753e26a2f4",
          "sha256": "9ec99cd201053b956b03d49d11bbb29caac1ccea11c673a567fc348ff51268fb"
        },
        "downloads": -1,
        "filename": "vinal-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b3eb0aa3a20bb08efb6ba753e26a2f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 22670,
        "upload_time": "2022-07-26T22:32:59",
        "upload_time_iso_8601": "2022-07-26T22:32:59.133842Z",
        "url": "https://files.pythonhosted.org/packages/06/17/835478d367d629de77435ff22f89d6b0f9039e936f5c6175f53b77f92c1c/vinal-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec13283d81a2c15d1f1805f22757d310108bc5b015aa740caadd9b4db157ea73",
          "md5": "e2bad931525fc319d214fbbf442ecc93",
          "sha256": "ea8540792e79601641a1c48adf91dd95722ebdf05c6eeda59e621b6b1f3eec3b"
        },
        "downloads": -1,
        "filename": "vinal-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e2bad931525fc319d214fbbf442ecc93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 22562,
        "upload_time": "2022-07-26T22:33:01",
        "upload_time_iso_8601": "2022-07-26T22:33:01.325354Z",
        "url": "https://files.pythonhosted.org/packages/ec/13/283d81a2c15d1f1805f22757d310108bc5b015aa740caadd9b4db157ea73/vinal-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b459c9b0082768bfe0d0adf5646676590764348109b76d6022b93db5bd4f5950",
          "md5": "d1657463c2cd6f5b93a4ab41f9f4d6e8",
          "sha256": "2a209a2319048f467ccb0902f665f5df49f0cde6a6fdae2bcf162322e69a6884"
        },
        "downloads": -1,
        "filename": "vinal-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1657463c2cd6f5b93a4ab41f9f4d6e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 28561,
        "upload_time": "2023-02-10T02:22:12",
        "upload_time_iso_8601": "2023-02-10T02:22:12.048232Z",
        "url": "https://files.pythonhosted.org/packages/b4/59/c9b0082768bfe0d0adf5646676590764348109b76d6022b93db5bd4f5950/vinal-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ece2c3594c4bcb0df0e5d2243dd4ae377e04a76fe299d6f67f0b22941b9cd1f",
          "md5": "845e1ea2b45e26ff3e6e70bc1c8a147d",
          "sha256": "dda60d8a83a9d7a7a1a621b6bbc8e32f2faa7bfa4e4934842de1ef7e5d49dcb0"
        },
        "downloads": -1,
        "filename": "vinal-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "845e1ea2b45e26ff3e6e70bc1c8a147d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 28578,
        "upload_time": "2023-02-10T02:22:14",
        "upload_time_iso_8601": "2023-02-10T02:22:14.173872Z",
        "url": "https://files.pythonhosted.org/packages/1e/ce/2c3594c4bcb0df0e5d2243dd4ae377e04a76fe299d6f67f0b22941b9cd1f/vinal-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b459c9b0082768bfe0d0adf5646676590764348109b76d6022b93db5bd4f5950",
        "md5": "d1657463c2cd6f5b93a4ab41f9f4d6e8",
        "sha256": "2a209a2319048f467ccb0902f665f5df49f0cde6a6fdae2bcf162322e69a6884"
      },
      "downloads": -1,
      "filename": "vinal-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d1657463c2cd6f5b93a4ab41f9f4d6e8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 28561,
      "upload_time": "2023-02-10T02:22:12",
      "upload_time_iso_8601": "2023-02-10T02:22:12.048232Z",
      "url": "https://files.pythonhosted.org/packages/b4/59/c9b0082768bfe0d0adf5646676590764348109b76d6022b93db5bd4f5950/vinal-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ece2c3594c4bcb0df0e5d2243dd4ae377e04a76fe299d6f67f0b22941b9cd1f",
        "md5": "845e1ea2b45e26ff3e6e70bc1c8a147d",
        "sha256": "dda60d8a83a9d7a7a1a621b6bbc8e32f2faa7bfa4e4934842de1ef7e5d49dcb0"
      },
      "downloads": -1,
      "filename": "vinal-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "845e1ea2b45e26ff3e6e70bc1c8a147d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 28578,
      "upload_time": "2023-02-10T02:22:14",
      "upload_time_iso_8601": "2023-02-10T02:22:14.173872Z",
      "url": "https://files.pythonhosted.org/packages/1e/ce/2c3594c4bcb0df0e5d2243dd4ae377e04a76fe299d6f67f0b22941b9cd1f/vinal-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}