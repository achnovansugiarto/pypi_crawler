{
  "info": {
    "author": "Samarth Agrawal",
    "author_email": "samarth.agrawal.86@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "## Fast-ML is a Python package with numerous inbuilt functionalities to make the life of a data scientist much easier\nfast_ml follow Scikit-learn type functionality with fit() and transform() methods to first learn the transforming parameters from training dataset and then transforms the training/validation/test dataset\n\n**Important Note :** You learn the parameter by applying fit() method ONLY on train method and then apply transform on train/valid/test dataset. Be it Missing Value Imputation, Outliers, Feature Engineering for Numerical/Categorical ... Parameters are learned from the training dataset on which the model trains. \n\n\n### Installing\n```python\npip install fast_ml\n```\n\n## Table of Contents:\n1. **Utilities**\n2. **Exploratory Data Analysis (EDA)**\n3. **Missing Data Analysis**\n4. **Missing Data Imputation**\n5. **Outlier Treatment**\n6. **Feature Engineering**\n7. **Feature Selection**\n8. **Model Development**\n9. **Model Evaluation**\n\n\n## Glossary\n> * df : Dataframe, refers to dataset used for analysis\n> * variable : str, refers to a single variable. As required in the function it has to be passed ex 'V1'\n> * variables : list type, refers to list of variables. Must be passed as list ex ['V1', 'V2]. Even a single variable has to be passed in list format. ex ['V1']\n> * target : str, refers to target variable \n> * model : str, ML problem type. use 'classification' or 'clf' for classification problems and 'regression' or 'reg' for regression problems\n> * method : str, refers to various techniques available for Missing Value Imputation, Feature Engieering... as available in each module\n\n## 1. Utilities\n\n```python\nfrom fast_ml.utilities import reduce_memory_usage, display_all\n\n# reduces the memory usage of the dataset by optimizing for the datatype used for storing the data\ntrain = reduce_memory_usage(train, convert_to_category=False)\n```\n1. **reduce_memory_usage**(*df, convert_to_category = False*)\n    * This function reduces the memory used by dataframe\n2. **display_all**(*df*)\n    * Use this function to show all rows and all columns of dataframe. By default pandas only show top and bottom 20 rows, columns\n\n## 2. Exploratory Data Analysis (EDA)\n\n```python\nfrom fast_ml import eda\n```\n\n### 2.1) Overview\n```python\nfrom fast_ml import eda\n\ntrain = pd.read_csv('train.csv')\n\n# One of the most useful dataframe summary view\nsummary_df = eda.df_info(train)\ndisplay_all(summary_df)\n```\n1. **eda.df_info**(*df*)\n    * Returns a dataframe with useful summary - variables, datatype, number of unique values, sample of unique values, missing count, missing percent\n2. **eda.df_cardinality_info**(*df, raw_data = True*)\n    * Returns a dataframe with useful summary - variables, datatype, number of unique values, sample of unique values, missing count, missing percent\n3. **eda.df_missing_info**(*df, raw_data = True*)\n    * Returns a dataframe with useful summary - variables, datatype, number of unique values, sample of unique values, missing count, missing percent   \n\n### 2.2) Numerical Variables\n```python\nfrom fast_ml import eda\n\ntrain = pd.read_csv('train.csv')\n\n#one line of command to get commonly used plots for all the variables provided to the function\neda.numerical_plots_with_target(train, num_vars, target, model ='clf')\n```\n1. **eda.numerical_describe**(*df, variables=None, method='10p'*)\n    * Dataframe with variouls count, mean, std and spread statistics for all the variables passed in input\n2. **eda.numerical_variable_detail**(*df, variable, model = None, target=None, threshold = 20*)\n    * Various summary statistics, spread statistics, outlier, missing values, transformation diagnostic... a detailed analysis for a single variable provided as input\n3. **eda.numerical_plots**(*df, variables, normality_check = False*)\n    * Uni-variate plots - Variable Distribution of all the numerical variables provided as input with target. Can also get the Q-Q plot for assessing the normality\n4. **eda.numerical_plots_with_target**(*df, variables, target, model*)\n    * Bi-variate plots - Scatter plot of all the numerical variables provided as input with target.\n5. **eda.numerical_check_outliers**(*df, variables=None, tol=1.5, print_vars = False*)\n6. **eda.numerical_bins_with_target**(*df, variables, target, model='clf', create_buckets = True, method='5p', custom_buckets=None*)\n    * Useful for deciding the suitable binning for numerical variable. Displays 2 graphs 'overall event rate' & 'within category event rate'\n\n### 2.3) Categorical Variables\n```python\nfrom fast_ml import eda\n\ntrain = pd.read_csv('train.csv')\n\n#one line of command to get commonly used plots for all the variables provided to the function\neda.categorical_plots_with_target(train, cat_vars, target, add_missing=True, rare_tol=5)\n```\n1. **eda.categorical_variable_detail**(*df, variable, model = None, target=None,  rare_tol=5*)\n    * Various summary statistics, missing values, distributions ... a detailed analysis for a single variable provided as input\n2. **eda.categorical_plots**(*df, variables, add_missing = True, add_rare = False, rare_tol=5*)\n    * Uni-variate plots - distribution of all the categorical provided as input\n3. **eda.categorical_plots_with_target**(*df, variables, target, model='clf', add_missing = True,  rare_tol1 = 5, rare_tol2 = 10*)\n    * Bi-variate plots - distribution of all the categorical provided as input with target\n4. **eda.categorical_plots_with_rare_and_target**(*df, variables, target, model='clf', add_missing=True, rare_tol1=5, rare_tol2=10*)\n    * Bi-variate plots - distribution of all the categorical provided as input with target with 2 inputs as rare threshold. Useful for deciding the rare bucketing\n5. **eda.categorical_plots_for_miss_and_freq**(*df, variables, target, model = 'reg'*)\n    * Uni-variate plots - distribution of all the categorical provided as input with target with 2 inputs as rare threshold. Useful for deciding the rare bucketing\n\n## 3. Missing Data Analysis\n\n```python\nfrom fast_ml.missing_data_analysis import MissingDataAnalysis\n```\n### 2.1) Class MissingDataAnalysis \n1. explore_numerical_imputation (variable)\n2. explore_categorical_imputation (variable)\n\n\n## 4. Missing Data Imputation\n\n```python\nfrom fast_ml.missing_data_imputation import MissingDataImputer_Numerical, MissingDataImputer_Categorical\n```\n### 4.1) class MissingDataImputer_Numerical \n\n```python\nfrom fast_ml.missing_data_imputation import MissingDataImputer_Numerical\n\ntrain = pd.read_csv('train.csv')\n\nnum_imputer = MissingDataImputer_Numerical(df, method = 'median')\n\n#Scikit-learn type fit() transform() functionality\n# Use fit() only on the train dataset\nnum_imputer.fit(train, num_vars)\n\n# Use transform() on train/test dataset\ntrain = num_imputer.transform(train)\ntest = num_imputer.transform(test)\n```\n* Methods:\n  - 'mean'\n  - 'median'\n  - 'mode'\n  - 'custom_value'\n  - 'random'\n1. **fit**(*df, num_vars*)\n2. **transform**(*df*)\n\n### 4.2) class MissingDataImputer_Categorical\n```python\nfrom fast_ml.missing_data_imputation import MissingDataImputer_Categorical\n\ntrain = pd.read_csv('train.csv')\n\ncat_imputer = MissingDataImputer_Categorical(df, method = 'frequent')\n\n#Scikit-learn type fit() transform() functionality\n# Use fit() only on the train dataset\ncat_imputer.fit(train, cat_vars)\n\n# Use transform() on train/test dataset\ntrain = cat_imputer.transform(train)\ntest = cat_imputer.transform(test)\n```\n* Methods:\n  - 'frequent' or 'mode'\n  - 'custom_value'\n  - 'random'\n1. **fit**(*df, cat_vars*)\n2. **transform**(*df*)\n\n## 5. Outlier Treatment\n\n```python\nfrom fast_ml.outlier_treatment import OutlierTreatment\n```\n### 5.1) class OutlierTreatment \n* Methods:\n  - 'iqr' or 'IQR'\n  - 'gaussian'\n1. **fit**(*df, num_vars*)\n2. **transform**(*df*)\n\n## 6. Feature Engineering\n```python\nfrom fast_ml.feature_engineering import FeatureEngineering_Numerical, FeatureEngineering_Categorical, FeatureEngineering_DateTime\n```\n### 6.1) class FeatureEngineering_Numerical \n```python\nfrom fast_ml.feature_engineering import FeatureEngineering_Categorical\n\nnum_binner = FeatureEngineering_Numerical(method = '10p', adaptive = True)\n\n#Scikit-learn type fit() transform() functionality\n# Use fit() only on the train dataset\nnum_binner.fit(train, num_vars)\n\n# Use transform() on train/test dataset\ntrain = num_binner.transform(train)\ntest = num_binner.transform(test)\n```\n* Methods:\n  - '5p'  : [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100]\n  - '10p' : [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n  - '20p' : [0, 20, 40, 60, 80, 100]\n  - '25p' : [0, 25, 50, 75, 100]\n  - '95p' : [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 95, 100]\n  - '98p' : [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 95, 98, 100]\n  - 'custom' : Custom Buckets\n1. **fit**(*df, num_vars*)\n2. **transform**(*df*)\n\n### 6.2) class FeatureEngineering_Categorical(*model=None, method='label', drop_last=False*):\n```python\nfrom fast_ml.feature_engineering import FeatureEngineering_Categorical\n\nrare_encoder_5 = FeatureEngineering_Categorical(method = 'rare')\n\n#Scikit-learn type fit() transform() functionality\n# Use fit() only on the train dataset\nrare_encoder_5.fit(train, cat_vars, rare_tol=5)\n\n# Use transform() on train/test dataset\ntrain = rare_encoder_5.transform(train)\ntest = rare_encoder_5.transform(test)\n```\n* Methods:\n  - 'rare_encoding' or 'rare'\n  - 'label' or 'integer'\n  - 'count'\n  - 'freq'\n  - 'ordered_label'\n  - 'target_ordered'\n  - 'target_mean'\n  - 'target_prob_ratio'\n  - 'target_woe'\n1. **fit**(*df, cat_vars, target=None, rare_tol=5*)\n2. **transform**(*df*)\n\n### 6.3) class FeatureEngineering_DateTime (drop_orig=True)\n```python\nfrom fast_ml.feature_engineering import FeatureEngineering_DateTime\n\ndt_encoder = FeatureEngineering_DateTime()\n\n#Scikit-learn type fit() transform() functionality\n# Use fit() only on the train dataset\ndt_encoder.fit(train, datetime_vars, prefix = 'default')\n\n# Use transform() on train/test dataset\ntrain = dt_encoder.transform(train)\ntest = dt_encoder.transform(test)\n```\n1. **fit**(*df, datetime_variables, prefix = 'default'*)\n2. **transform**(*df*)\n\n## 7. Feature Selection\n```python\nfrom fast_ml.feature_selection import get_constant_features\n\nconstant_features = get_constant_features(df, threshold=0.99, dropna=False)\n# constant_features is a dataframe\ndisplay_all(constant_features)\n\n# to get list of constant features\nconstant_feats = (constant_features['Var'].to_list()\nprint(constant_feats)\n```\n1. get_constant_features(df, threshold=0.99, dropna=False)\n2. get_duplicate_features(df)\n3. get_correlated_pairs(df, threshold=0.9)\n4. recursive_feature_elimination(model, X_train, y_train, X_valid, y_valid, X_test, y_test)\n5. variables_clustering (df, variables, method)\n\n\n## 8. Model Development\n```python\nfrom fast_ml.model_development import train_valid_test_split\n\nX_train, y_train, X_valid, y_valid, X_test, y_test = train_valid_test_split(df, target = target, \n                                                                            train_size=0.8, valid_size=0.1, test_size=0.1)\n\n# Get the shape of all the datasets\nprint(X_train.shape), print(y_train.shape)\nprint(X_valid.shape), print(y_valid.shape)\nprint(X_test.shape), print(y_test.shape)\n```\n1. train_valid_test_split(df, target, train_size=0.8, valid_size=0.1, test_size=0.1, method='random', sort_by_col = None, random_state=None)\n2. all_classifiers(X_train, y_train, X_valid, y_valid, X_test=None, y_test=None, threshold_by = 'ROC AUC' ,verbose = True)\n\n\n## 9. Model Evaluation\n```python\nfrom fast_ml.model_evaluation import threshold_evaluation\n\nthreshold_df = threshold_evaluation(y_true, y_prob, start=0, end=1, step_size=0.1)\n\ndisplay_all(threshold_df)\n```\n1. model_save (model, model_name)\n2. model_load (model_name)\n3. plot_confidence_interval_for_data (model, X)\n4. plot_confidence_interval_for_variable (model, X, y, variable)\n5. threshold_evaluation(y_true, y_prob, start=0, end=1, step_size=0.1)\n6. metrics_evaluation(y_true, y_pred_prob=None, y_pred=None, threshold=None, df_type='train')\n\n\n---\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/samarth-agrawal-86/fast_ml",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fast-ml",
    "package_url": "https://pypi.org/project/fast-ml/",
    "platform": "",
    "project_url": "https://pypi.org/project/fast-ml/",
    "project_urls": {
      "Homepage": "https://github.com/samarth-agrawal-86/fast_ml"
    },
    "release_url": "https://pypi.org/project/fast-ml/3.68/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Package by the Data-Scientists for the Data Scientists ; with Scikit-learn type fit() transform() functionality",
    "version": "3.68",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10877188,
  "releases": {
    "1.97": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "867253f30710c10a5d4b41ecb73e68c39f0bda177d6ea232b8e1d2500a8c91cd",
          "md5": "0c50c0e960c861016ef171c52c5bc6a4",
          "sha256": "752b2462cc21c0ea862dc878c1edaa6b36540a03bb6ecb6d8671ea020a995a30"
        },
        "downloads": -1,
        "filename": "fast_ml-1.97-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c50c0e960c861016ef171c52c5bc6a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7459,
        "upload_time": "2020-07-12T13:40:15",
        "upload_time_iso_8601": "2020-07-12T13:40:15.514470Z",
        "url": "https://files.pythonhosted.org/packages/86/72/53f30710c10a5d4b41ecb73e68c39f0bda177d6ea232b8e1d2500a8c91cd/fast_ml-1.97-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "648757e1e9a31a931568ce083ecd86ccb8c1dbd9aebc41ef35041bed39ed0025",
          "md5": "bdc973dca8bba3158ca855810f3d1bea",
          "sha256": "fb19c55e8fcab9a7b701214a9e11e40dd5d373ccfc01a7e9c02c79b2269fadec"
        },
        "downloads": -1,
        "filename": "fast_ml-1.97.tar.gz",
        "has_sig": false,
        "md5_digest": "bdc973dca8bba3158ca855810f3d1bea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5654,
        "upload_time": "2020-07-12T13:40:16",
        "upload_time_iso_8601": "2020-07-12T13:40:16.949111Z",
        "url": "https://files.pythonhosted.org/packages/64/87/57e1e9a31a931568ce083ecd86ccb8c1dbd9aebc41ef35041bed39ed0025/fast_ml-1.97.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.69": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "077846fe222b91741891d8b2f90dcceadb0ddaa8ecd780b905953d1b3927863d",
          "md5": "6f3b40f7353a3a3c3852f46bfea560c8",
          "sha256": "e8fe235434216700243fa260e89d4b0c408686ad3ab76e57e88265eeb4c8e8cd"
        },
        "downloads": -1,
        "filename": "fast_ml-2.69-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f3b40f7353a3a3c3852f46bfea560c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16239,
        "upload_time": "2020-07-31T15:22:01",
        "upload_time_iso_8601": "2020-07-31T15:22:01.434160Z",
        "url": "https://files.pythonhosted.org/packages/07/78/46fe222b91741891d8b2f90dcceadb0ddaa8ecd780b905953d1b3927863d/fast_ml-2.69-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a67b7ce66367eef378e5939d60345c371a3d2d9e36accae6fec5ce2a29253a3e",
          "md5": "bca8395c71044ce264480bc248befe0a",
          "sha256": "203dcc0b15d0ce689a7ccc13cfd4cf1f99b1a656d0314cd2b296e330f18513c5"
        },
        "downloads": -1,
        "filename": "fast_ml-2.69.tar.gz",
        "has_sig": false,
        "md5_digest": "bca8395c71044ce264480bc248befe0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12265,
        "upload_time": "2020-07-31T15:22:03",
        "upload_time_iso_8601": "2020-07-31T15:22:03.107299Z",
        "url": "https://files.pythonhosted.org/packages/a6/7b/7ce66367eef378e5939d60345c371a3d2d9e36accae6fec5ce2a29253a3e/fast_ml-2.69.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12eb7d85fa1aa2db3b9932f07dfc0207099cf18e1c0ae3190d5386e2e61dff95",
          "md5": "cdaeab56e88170362b5db90db97f7f9b",
          "sha256": "d729846971079809c4336145db0a045f66253273c7ac407966e5416f32fe24fb"
        },
        "downloads": -1,
        "filename": "fast_ml-3.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cdaeab56e88170362b5db90db97f7f9b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25653,
        "upload_time": "2020-08-22T00:14:21",
        "upload_time_iso_8601": "2020-08-22T00:14:21.833071Z",
        "url": "https://files.pythonhosted.org/packages/12/eb/7d85fa1aa2db3b9932f07dfc0207099cf18e1c0ae3190d5386e2e61dff95/fast_ml-3.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7df49552b2ef009dc980a57f94d6ee86db967313dffc430d7579618d4a785cb",
          "md5": "a0d29ee1d06167f836937c5542c18969",
          "sha256": "e64b729ad04aaf839346388aa623984af61f6fc1de39de21e6e9b57e326eb6d5"
        },
        "downloads": -1,
        "filename": "fast_ml-3.12.tar.gz",
        "has_sig": false,
        "md5_digest": "a0d29ee1d06167f836937c5542c18969",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23635,
        "upload_time": "2020-08-22T00:14:23",
        "upload_time_iso_8601": "2020-08-22T00:14:23.938884Z",
        "url": "https://files.pythonhosted.org/packages/f7/df/49552b2ef009dc980a57f94d6ee86db967313dffc430d7579618d4a785cb/fast_ml-3.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.39": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a64c99ffb4f92ff6e1e3996ee5bdce601ab2d5f42251f7dba92b03d94763fd20",
          "md5": "71a5c40e8ed404fbdcf566556878c17b",
          "sha256": "88df26a0c1df643f05e50a53b9019b505cf7ae906ea3cc19f740172eabd1d13b"
        },
        "downloads": -1,
        "filename": "fast_ml-3.39-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71a5c40e8ed404fbdcf566556878c17b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31569,
        "upload_time": "2021-02-27T09:21:41",
        "upload_time_iso_8601": "2021-02-27T09:21:41.859103Z",
        "url": "https://files.pythonhosted.org/packages/a6/4c/99ffb4f92ff6e1e3996ee5bdce601ab2d5f42251f7dba92b03d94763fd20/fast_ml-3.39-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b30d2aaa7a772abb3acf99c32c2dbe1b6833aacb4069f823d11681d075e41d61",
          "md5": "28c380a239d377727567805c4e6e49cb",
          "sha256": "1acb114df321059bcc66d46af559f47f615387fb242e4873de088afdca90b495"
        },
        "downloads": -1,
        "filename": "fast_ml-3.39.tar.gz",
        "has_sig": false,
        "md5_digest": "28c380a239d377727567805c4e6e49cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29093,
        "upload_time": "2021-02-27T09:21:43",
        "upload_time_iso_8601": "2021-02-27T09:21:43.623053Z",
        "url": "https://files.pythonhosted.org/packages/b3/0d/2aaa7a772abb3acf99c32c2dbe1b6833aacb4069f823d11681d075e41d61/fast_ml-3.39.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.48": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd1ef8aa5adc6eec301d4b9bbee4353e59e2071fad8decf97606bd281c140b22",
          "md5": "2f1120aa511b7398ae7c7f1c71012d4a",
          "sha256": "faa84149b5fba949478703988b93da10993e79e7b744eb059a2da7a32bd6f267"
        },
        "downloads": -1,
        "filename": "fast_ml-3.48-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f1120aa511b7398ae7c7f1c71012d4a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 38686,
        "upload_time": "2021-03-30T11:20:59",
        "upload_time_iso_8601": "2021-03-30T11:20:59.931339Z",
        "url": "https://files.pythonhosted.org/packages/dd/1e/f8aa5adc6eec301d4b9bbee4353e59e2071fad8decf97606bd281c140b22/fast_ml-3.48-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "131fc533a573d254d4e6f58f47e114b32c1c4a569ccf54e600356bc67a4e27f3",
          "md5": "6741adb4bff9e0e0f2bf93d527ab702f",
          "sha256": "dfc80d1658dc7bd5d01c668a6a14a0c04ba0e8ff512ad9c4164ac1d27fe9f066"
        },
        "downloads": -1,
        "filename": "fast_ml-3.48.tar.gz",
        "has_sig": false,
        "md5_digest": "6741adb4bff9e0e0f2bf93d527ab702f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35698,
        "upload_time": "2021-03-30T11:21:02",
        "upload_time_iso_8601": "2021-03-30T11:21:02.214791Z",
        "url": "https://files.pythonhosted.org/packages/13/1f/c533a573d254d4e6f58f47e114b32c1c4a569ccf54e600356bc67a4e27f3/fast_ml-3.48.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.51": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a9c88bf80ee7fed512fb19b1105004c2bf3e7339e21e4833d8893b3b1058a11",
          "md5": "0d8e95c3e8697a01c16d19ff24971a00",
          "sha256": "82af41b0a4de3768c8c29c5100d682cfbfa5fb1cc534218fb9d73a75a46ee7a6"
        },
        "downloads": -1,
        "filename": "fast_ml-3.51-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d8e95c3e8697a01c16d19ff24971a00",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 39289,
        "upload_time": "2021-04-28T22:36:55",
        "upload_time_iso_8601": "2021-04-28T22:36:55.042820Z",
        "url": "https://files.pythonhosted.org/packages/9a/9c/88bf80ee7fed512fb19b1105004c2bf3e7339e21e4833d8893b3b1058a11/fast_ml-3.51-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b57f4160607e2eab6a47e27767d49c64a8df3f7794e27c51e4e87e921ad6412",
          "md5": "052e8a57f19f7f96ff77b0a1198553db",
          "sha256": "9aca50f2e549e428ad0324387690bacba1c7a48fc29dbc2cc7a01b61aa123d0e"
        },
        "downloads": -1,
        "filename": "fast_ml-3.51.tar.gz",
        "has_sig": false,
        "md5_digest": "052e8a57f19f7f96ff77b0a1198553db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36314,
        "upload_time": "2021-04-28T22:36:56",
        "upload_time_iso_8601": "2021-04-28T22:36:56.520506Z",
        "url": "https://files.pythonhosted.org/packages/0b/57/f4160607e2eab6a47e27767d49c64a8df3f7794e27c51e4e87e921ad6412/fast_ml-3.51.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.66": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83656c955a0d393c79443a558c33c2e29732adb40c1f5d0553fa5962c0104535",
          "md5": "6a27946762d853484b7cb66de8f92787",
          "sha256": "cfe6f46177dfec777a5a4bd0d32e619da66ef2e0cd48eb22fa767a9187bdbfa2"
        },
        "downloads": -1,
        "filename": "fast_ml-3.66-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a27946762d853484b7cb66de8f92787",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41078,
        "upload_time": "2021-05-24T00:03:46",
        "upload_time_iso_8601": "2021-05-24T00:03:46.719943Z",
        "url": "https://files.pythonhosted.org/packages/83/65/6c955a0d393c79443a558c33c2e29732adb40c1f5d0553fa5962c0104535/fast_ml-3.66-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b3470526ac4ae8305d242eeec8d9325d8bfc6c93e6477918c4b4aceb6d08597",
          "md5": "13a9a54bbf6ef8dbc8c0e90ff21a9cb3",
          "sha256": "65af73916b11fe43f68f3ab4c12989ed01add9c68fb884db913cf90681296bd4"
        },
        "downloads": -1,
        "filename": "fast_ml-3.66.tar.gz",
        "has_sig": false,
        "md5_digest": "13a9a54bbf6ef8dbc8c0e90ff21a9cb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37910,
        "upload_time": "2021-05-24T00:03:48",
        "upload_time_iso_8601": "2021-05-24T00:03:48.660866Z",
        "url": "https://files.pythonhosted.org/packages/6b/34/70526ac4ae8305d242eeec8d9325d8bfc6c93e6477918c4b4aceb6d08597/fast_ml-3.66.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.67": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "319c65f41b5790175c5eff824405c5e7ca4fbc62105306da6673021d7abf6dcd",
          "md5": "1d82f32bf3b8ea4053cfeb699e79f99d",
          "sha256": "e66291a4d2323a31bbe8e21fb62b3ae5b54e3253a1f4f7e6e08056558426987d"
        },
        "downloads": -1,
        "filename": "fast_ml-3.67-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d82f32bf3b8ea4053cfeb699e79f99d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42016,
        "upload_time": "2021-07-05T08:07:08",
        "upload_time_iso_8601": "2021-07-05T08:07:08.101249Z",
        "url": "https://files.pythonhosted.org/packages/31/9c/65f41b5790175c5eff824405c5e7ca4fbc62105306da6673021d7abf6dcd/fast_ml-3.67-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8dbf366eb0004fa55f78693a7edeff7ffb461f8b1da19722296691e0d27bdd4b",
          "md5": "3d39f2ab35a2c71dd654e372428a9105",
          "sha256": "0c61a31830ccb5f88d4833b43843f5e5f03424e7ed99c7aec300029f09a54e4b"
        },
        "downloads": -1,
        "filename": "fast_ml-3.67.tar.gz",
        "has_sig": false,
        "md5_digest": "3d39f2ab35a2c71dd654e372428a9105",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39484,
        "upload_time": "2021-07-05T08:07:10",
        "upload_time_iso_8601": "2021-07-05T08:07:10.017198Z",
        "url": "https://files.pythonhosted.org/packages/8d/bf/366eb0004fa55f78693a7edeff7ffb461f8b1da19722296691e0d27bdd4b/fast_ml-3.67.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.68": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fc1ff0d486b163cc98a0ed85be0bb1e50ad72a286befe78f90dc36572228a44",
          "md5": "9d998e4b43d4ded1c83f25110510adcc",
          "sha256": "e262e5fa4faef9ebb25bd96206cf2eea5cfbae943c441bb7ecddb0e7b4972e99"
        },
        "downloads": -1,
        "filename": "fast_ml-3.68-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d998e4b43d4ded1c83f25110510adcc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42067,
        "upload_time": "2021-07-11T07:54:06",
        "upload_time_iso_8601": "2021-07-11T07:54:06.934889Z",
        "url": "https://files.pythonhosted.org/packages/2f/c1/ff0d486b163cc98a0ed85be0bb1e50ad72a286befe78f90dc36572228a44/fast_ml-3.68-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f63620b43f164f371780a0f3571604acd3e8f4758e71b069018e74d60c38ba1f",
          "md5": "4a1bc840713b6e165e4c4902e4aa65e5",
          "sha256": "8f7c31d9b1b0921dbc76151fc6b429ad3c2dcb17ad4120589cf2b39fa597babc"
        },
        "downloads": -1,
        "filename": "fast_ml-3.68.tar.gz",
        "has_sig": false,
        "md5_digest": "4a1bc840713b6e165e4c4902e4aa65e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39539,
        "upload_time": "2021-07-11T07:54:08",
        "upload_time_iso_8601": "2021-07-11T07:54:08.683121Z",
        "url": "https://files.pythonhosted.org/packages/f6/36/20b43f164f371780a0f3571604acd3e8f4758e71b069018e74d60c38ba1f/fast_ml-3.68.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2fc1ff0d486b163cc98a0ed85be0bb1e50ad72a286befe78f90dc36572228a44",
        "md5": "9d998e4b43d4ded1c83f25110510adcc",
        "sha256": "e262e5fa4faef9ebb25bd96206cf2eea5cfbae943c441bb7ecddb0e7b4972e99"
      },
      "downloads": -1,
      "filename": "fast_ml-3.68-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9d998e4b43d4ded1c83f25110510adcc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 42067,
      "upload_time": "2021-07-11T07:54:06",
      "upload_time_iso_8601": "2021-07-11T07:54:06.934889Z",
      "url": "https://files.pythonhosted.org/packages/2f/c1/ff0d486b163cc98a0ed85be0bb1e50ad72a286befe78f90dc36572228a44/fast_ml-3.68-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f63620b43f164f371780a0f3571604acd3e8f4758e71b069018e74d60c38ba1f",
        "md5": "4a1bc840713b6e165e4c4902e4aa65e5",
        "sha256": "8f7c31d9b1b0921dbc76151fc6b429ad3c2dcb17ad4120589cf2b39fa597babc"
      },
      "downloads": -1,
      "filename": "fast_ml-3.68.tar.gz",
      "has_sig": false,
      "md5_digest": "4a1bc840713b6e165e4c4902e4aa65e5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 39539,
      "upload_time": "2021-07-11T07:54:08",
      "upload_time_iso_8601": "2021-07-11T07:54:08.683121Z",
      "url": "https://files.pythonhosted.org/packages/f6/36/20b43f164f371780a0f3571604acd3e8f4758e71b069018e74d60c38ba1f/fast_ml-3.68.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}