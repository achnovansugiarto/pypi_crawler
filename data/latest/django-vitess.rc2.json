{
  "info": {
    "author": "Babis Kaidos",
    "author_email": "ckaidos@intracom-telecom.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Database"
    ],
    "description": "# django-vitess\n\nDjango-vitess repository is a direct copy from\nthe [Django support](https://github.com/vitessio/vitess/tree/main/support/django)\nfiles of Vitess.io. This repo exists as a packaging source for\nthe [pypi package](https://pypi.org/project/django-vitess/). The people of\nVitess promised a long time ago to extract this driver as a separate project and\npublish it on pypi, but I decided to do it myself as I needed this package.\n\n**If someone from Vitess.io wants to publish this officially, please let me know\nand I will release the project from pypi**\n\n## Usage\n\n**The following guide is written by Alkin Tezuysal and published\nat [Vitess.io blog](https://vitess.io/blog/2020-11-30-how-to-deploy-django/). I\nmodified some paths and package names, otherwise it is repost here verbatim.**\n\nDjango is a popular framework for Python application developers. It includes\npackages which make tasks like authorization and content administration easier.\nDjango supports a number of databases including MySQL which makes it possible to\nrun a Django application over Vitess without having to change the application\ncode. Let’s take a look at how to combine the strengths of these two open source\nframeworks.\n\nWe built this example using Vitess operator. You can see the details of the\nimplementation in the blog post Vitess Operator for Kubernetes.\n\n### Prerequisites\n\n* Python environment locally (3.X)\n* Kubernetes access (minikube, GKE)\n* Support for Django ORM\n  via [Vitess](https://github.com/vitessio/vitess/blob/d234083743d1cc9757ef673bf89be1a4a299b0b0/support/django/README.md)\n\nFor this example, we’re using GKE with an existing Kubernetes cluster. You can\nalso do this via minikube locally.\n\nThe Django example we are using is the\n[weather app](https://github.com/askdba/vitess_frameworks/tree/main/django/my_weather_app)\n. We first launch the vitess operator using the\nprovided [configuration](https://github.com/askdba/vitess_frameworks/blob/main/django/operator/operator.yaml)\n.\n\nThe following section includes these steps:\n\n* Creating a Vitess Operator pod\n* Building Vitess Cluster Components (1x primary tablet, 1x replica tablet, 3x\n  etcd pods, 1x vtgate, 1x vtctld, 1x vitessbackup)\n* Create the ‘weatherapp’ database schema and users.\n\n```\n$ kubectl apply -f operator.yaml\ncustomresourcedefinition.apiextensions.k8s.io/etcdlockservers.planetscale.com created\ncustomresourcedefinition.apiextensions.k8s.io/vitessbackups.planetscale.com created\ncustomresourcedefinition.apiextensions.k8s.io/vitessbackupstorages.planetscale.com created\ncustomresourcedefinition.apiextensions.k8s.io/vitesscells.planetscale.com created\ncustomresourcedefinition.apiextensions.k8s.io/vitessclusters.planetscale.com created\ncustomresourcedefinition.apiextensions.k8s.io/vitesskeyspaces.planetscale.com created\ncustomresourcedefinition.apiextensions.k8s.io/vitessshards.planetscale.com created\nserviceaccount/vitess-operator created\nrole.rbac.authorization.k8s.io/vitess-operator created\nrolebinding.rbac.authorization.k8s.io/vitess-operator created\npriorityclass.scheduling.k8s.io/vitess created\npriorityclass.scheduling.k8s.io/vitess-operator-control-plane created\ndeployment.apps/vitess-operator created\n\n$ kubectl get pods\nNAME                               READY   STATUS    RESTARTS   AGE\nvitess-operator-7f9c9d58f6-q5zlf   1/1     Running   0          20s\n```\n\nInitialize this cluster with a sample database called ‘weatherapp’ and\nuser/password to access it will be embedded in the\nconfiguration [file](https://github.com/askdba/vitess_frameworks/blob/main/django/operator/101_initial_cluster.yaml.django)\n. We are basically creating a database which is analogous to a keyspace in\nVitess.\n\n```\n$ kubectl apply -f 101_initial_cluster.yaml.django\n$ kubectl get pods\nNAME                                                 READY   STATUS      RESTARTS   AGE\nexample-90089e05-vitessbackupstorage-subcontroller   1/1     Running     0          94s\nexample-etcd-faf13de3-1                              1/1     Running     0          94s\nexample-etcd-faf13de3-2                              1/1     Running     0          94s\nexample-etcd-faf13de3-3                              1/1     Running     0          94s\nexample-vttablet-zone1-1542279354-edf1c7bf           2/3     Running     1          94s\nexample-vttablet-zone1-3763665199-476cbd65           2/3     Running     2          94s\nexample-weatherapp-x-x-vtbackup-init-75efaeeb        0/1     Completed   0          74s\nexample-zone1-vtctld-1d4dcad0-67bfd56b8b-4dr9s       1/1     Running     2          94s\nexample-zone1-vtgate-bc6cde92-59b88bc8d8-6wz86       1/1     Running     2          94s\nvitess-operator-7f9c9d58f6-q5zlf                     1/1     Running     0          4m30s\n```\n\nAs you can see this brings up a fully functional managed Vitess cluster with an\nunsharded keyspace consisting of one “Primary (Master)” and one “Replica”.\n\n### Step 1 - Set portforwards:\n\n```\n$ cat pf.sh ; ./pf.sh &\n#!/bin/sh\n\nkubectl port-forward --address localhost \"$(kubectl get service --selector=\"planetscale.com/component=vtctld\" -o name | head -n1)\" 15000 15999 &\nprocess_id1=$!\nkubectl port-forward --address localhost \"$(kubectl get service --selector=\"planetscale.com/component=vtgate,!planetscale.com/cell\" -o name | head -n1)\" 15306:3306 &\nprocess_id2=$!\nsleep 2\necho \"You may point your browser to http://localhost:15000, use the following aliases as shortcuts:\"\necho 'alias vtctlclient=\"vtctlclient -server=localhost:15999 -logtostderr\"'\necho 'alias mysql=\"mysql -h 127.0.0.1 -P 15306 -u user\"'\necho \"Hit Ctrl-C to stop the port forwards\"\nwait $process_id1\nwait $process_id2\n```\n\nCheck Tablets:\n\n```\n$ vtctlclient ListAllTablets\nHandling connection for 15999\nzone1-1542279354 weatherapp - replica 10.100.1.75:15000 10.100.1.75:3306 [] <null>\nzone1-3763665199 weatherapp - master 10.100.3.57:15000 10.100.3.57:3306 [] 2020-10-16T09:06:59Z\n```\n\n### Step 2 - Verify database:\n\n```\n$ alias mysql=\"mysql -h 127.0.0.1 -P 15306 -u djangouser -p\"\n$ mysql\nmysql: [Warning] Using a password on the command line interface can be insecure.\nHandling connection for 15306\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 1\nServer version: 5.7.9-Vitess MySQL Community Server (GPL)\n\nCopyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> show databases;\n+------------+\n| Databases  |\n+------------+\n| weatherapp |\n+------------+\n1 row in set (0.16 sec)\n```\n\n### Step 3 - Setup application environment\n\nNow that we have set up the Vitess cluster with a MySQL backend, we can proceed\nto building the Django application. We will build a Django project using the\ndjango-admin command.\n\n```\n$ mkdir my_weather_app\n$ cd my_weather_app\n$ python3 -m venv env\n$ . env/bin/activate\n(env) askdba:my_weather_app askdba$\n$ pip install django django-vitess\n$ django-admin startproject weatherapp\n$ cd weatherapp/\n$ ls -la\ntotal 8\ndrwxr-xr-x  4 askdba  staff  128 Oct 16 12:19 .\ndrwxr-xr-x  4 askdba  staff  128 Oct 16 12:18 ..\n-rwxr-xr-x  1 askdba  staff  666 Oct 16 12:18 manage.py\ndrwxr-xr-x  7 askdba  staff  224 Oct 16 12:18 weatherapp\n```\n\nEdit configuration file and update following section.\n\n```\n$ vi weatherapp/settings.py\nimport os\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'vitess',\n        'OPTIONS': {\n            'read_default_file': '/usr/local/mysql/my.cnf',\n        },\n    }\n}\n\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\n\n...\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = ['127.0.0.1']\n\n# Application definition\n...\n```\n\nThe contents of mysql configuration:\n\n```\n$ vi /usr/local/mysql/my.cnf [link to sample my.cnf]\n[client]\ndatabase = weatherapp\nuser = djangouser\npassword = ********\nport = 15306\nhost = 127.0.0.1\ndefault-character-set = utf8mb4\n```\n\n### Step 4 - Install MySQL Client Connector\n\n```\n$ pip install mysqlclient\nCollecting mysqlclient\n  Using cached mysqlclient-2.0.1.tar.gz (87 kB)\nUsing legacy 'setup.py install' for mysqlclient, since package 'wheel' is not installed.\nInstalling collected packages: mysqlclient\n    Running setup.py install for mysqlclient ... done\nSuccessfully installed mysqlclient-2.0.1\n```\n\n### Step 5 - Build Django Framework over Vitess cluster\n\nAt this stage, we’re ready to run the migrations to create initial Django\nmetadata.\n\n```\n$ python manage.py migrate\nOperations to perform:\n  Apply all migrations: admin, auth, contenttypes, sessions\nRunning migrations:\n  Applying contenttypes.0001_initial... OK\n  Applying auth.0001_initial... OK\n  Applying admin.0001_initial... OK\n  Applying admin.0002_logentry_remove_auto_add... OK\n  Applying admin.0003_logentry_add_action_flag_choices... OK\n  Applying contenttypes.0002_remove_content_type_name... OK\n  Applying auth.0002_alter_permission_name_max_length... OK\n  Applying auth.0003_alter_user_email_max_length... OK\n  Applying auth.0004_alter_user_username_opts... OK\n  Applying auth.0005_alter_user_last_login_null... OK\n  Applying auth.0006_require_contenttypes_0002... OK\n  Applying auth.0007_alter_validators_add_error_messages... OK\n  Applying auth.0008_alter_user_username_max_length... OK\n  Applying auth.0009_alter_user_last_name_max_length... OK\n  Applying auth.0010_alter_group_name_max_length... OK\n  Applying auth.0011_update_proxy_permissions... OK\n  Applying auth.0012_alter_user_first_name_max_length... OK\n  Applying sessions.0001_initial... OK\n```\n\n### Step 6 - Create an admin user\n\nCreate an administrative user to access the Django Admin interface.\n\n```\n$ python manage.py createsuperuser\nUsername (leave blank to use 'askdba'): askdba\nEmail address: alkin@planetscale.com\nPassword:\nPassword (again):\nThe password is too similar to the email address.\nThis password is too short. It must contain at least 8 characters.\nBypass password validation and create user anyway? [y/N]: y\nSuperuser created successfully.\n(env) askdba:weatherapp askdba$\n```\n\n### Step 7 - Start Django daemon.\n\n```\n$ python manage.py runserver 127.0.0.1:8000\nWatching for file changes with StatReloader\nPerforming system checks...\n\nSystem check identified no issues (0 silenced).\nOctober 16, 2020 - 09:37:02\nDjango version 3.1.2, using settings 'weatherapp.settings'\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\n```\n\n### Step 8 - Go to Django Admin page\n\nPoint your browser to http://127.0.0.1:8000/admin\n\nYou may continue to build the application from this point by following\nthis [example](https://www.digitalocean.com/community/tutorials/how-to-build-a-weather-app-in-django)\n.\n\n### Conclusion\n\nVitess is a very powerful sharding framework that comes with a built-in control\nplane that allows backend developers to adapt their applications easily.\nCombining powerful application frameworks such as Django allows developers to\ncreate scalable applications out of the box with the power of open source\ntooling.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BabisK/django-vitess",
    "keywords": "",
    "license": "Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-vitess",
    "package_url": "https://pypi.org/project/django-vitess/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-vitess/",
    "project_urls": {
      "Homepage": "https://github.com/BabisK/django-vitess"
    },
    "release_url": "https://pypi.org/project/django-vitess/0.0.2/",
    "requires_dist": [
      "Django (>=2.2)"
    ],
    "requires_python": "",
    "summary": "Custom database driver for Vitess.io",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10850538,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c54fece7e0d57c6eb1573b049c47fdcce5a04f73eea2e985002db0fca938106",
          "md5": "07e5027e3384aab03a56bd3f80fbee9a",
          "sha256": "1b952af6aaa73a5b8ad02b3f3eabdccf6432b2cb5e97db6b5e7e73fe3ac70f48"
        },
        "downloads": -1,
        "filename": "django_vitess-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07e5027e3384aab03a56bd3f80fbee9a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6265,
        "upload_time": "2021-07-07T22:34:38",
        "upload_time_iso_8601": "2021-07-07T22:34:38.428227Z",
        "url": "https://files.pythonhosted.org/packages/6c/54/fece7e0d57c6eb1573b049c47fdcce5a04f73eea2e985002db0fca938106/django_vitess-0.0.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f953dce65ddf545fd44d2d411af22d678fc3dcc0773f87aad160d3ab423826cf",
          "md5": "bd05bff95fd30c4aae0d33d2eb393275",
          "sha256": "4dcfa77b1cf128b6f8ec0b985abceb3c0360a9df78171aef0f9e1a1be6113309"
        },
        "downloads": -1,
        "filename": "django-vitess-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bd05bff95fd30c4aae0d33d2eb393275",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5693,
        "upload_time": "2021-07-07T22:34:40",
        "upload_time_iso_8601": "2021-07-07T22:34:40.377668Z",
        "url": "https://files.pythonhosted.org/packages/f9/53/dce65ddf545fd44d2d411af22d678fc3dcc0773f87aad160d3ab423826cf/django-vitess-0.0.1.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "669e15c4564ba2cb7474d2515e9d4445e61fb50c8cc5d741c19348e206035d4d",
          "md5": "cfb9275d94efb868a3c4d629c0c97f4e",
          "sha256": "bf6d3e2648090577c4b86749ada639d19ffba4301c3d4903557967c7c2bf441d"
        },
        "downloads": -1,
        "filename": "django_vitess-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cfb9275d94efb868a3c4d629c0c97f4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10555,
        "upload_time": "2021-07-07T23:05:29",
        "upload_time_iso_8601": "2021-07-07T23:05:29.954582Z",
        "url": "https://files.pythonhosted.org/packages/66/9e/15c4564ba2cb7474d2515e9d4445e61fb50c8cc5d741c19348e206035d4d/django_vitess-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "592d837581102fd1403028275b951f0e69a4bc069279acd0d4350df3bf0a3c00",
          "md5": "2d1699c8a68cb745dc883480ac658d0b",
          "sha256": "2a0eabf70b2a0238f8af0ec8d3095930bb7625360dfde99156a4b75f2b60c423"
        },
        "downloads": -1,
        "filename": "django-vitess-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2d1699c8a68cb745dc883480ac658d0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10095,
        "upload_time": "2021-07-07T23:05:31",
        "upload_time_iso_8601": "2021-07-07T23:05:31.241083Z",
        "url": "https://files.pythonhosted.org/packages/59/2d/837581102fd1403028275b951f0e69a4bc069279acd0d4350df3bf0a3c00/django-vitess-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "669e15c4564ba2cb7474d2515e9d4445e61fb50c8cc5d741c19348e206035d4d",
        "md5": "cfb9275d94efb868a3c4d629c0c97f4e",
        "sha256": "bf6d3e2648090577c4b86749ada639d19ffba4301c3d4903557967c7c2bf441d"
      },
      "downloads": -1,
      "filename": "django_vitess-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cfb9275d94efb868a3c4d629c0c97f4e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10555,
      "upload_time": "2021-07-07T23:05:29",
      "upload_time_iso_8601": "2021-07-07T23:05:29.954582Z",
      "url": "https://files.pythonhosted.org/packages/66/9e/15c4564ba2cb7474d2515e9d4445e61fb50c8cc5d741c19348e206035d4d/django_vitess-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "592d837581102fd1403028275b951f0e69a4bc069279acd0d4350df3bf0a3c00",
        "md5": "2d1699c8a68cb745dc883480ac658d0b",
        "sha256": "2a0eabf70b2a0238f8af0ec8d3095930bb7625360dfde99156a4b75f2b60c423"
      },
      "downloads": -1,
      "filename": "django-vitess-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2d1699c8a68cb745dc883480ac658d0b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10095,
      "upload_time": "2021-07-07T23:05:31",
      "upload_time_iso_8601": "2021-07-07T23:05:31.241083Z",
      "url": "https://files.pythonhosted.org/packages/59/2d/837581102fd1403028275b951f0e69a4bc069279acd0d4350df3bf0a3c00/django-vitess-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}