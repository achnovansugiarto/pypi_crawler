{
  "info": {
    "author": "Joshua Olson",
    "author_email": "joshua+github@solarmist.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Before You Start\n\nApple-peeler was written using python 3.9 (but it should be trivial to support earlier versions of python 3.5+).\n\n# Installation\n\n    pip install apple-peeler\n\n# Dependencies\n\n[BeautifulSoup 4](https://beautiful-soup-4.readthedocs.io/en/latest/), [lxml](https://lxml.de), and [click](https://click.palletsprojects.com/en/8.0.x/)\n\n# Usage\n\nApple likes to move around the dictionaries location from macOS version to macOS version. So if the dictionaries are no longer at the path below you can tell `apple-peeler` where to look by exporting `DICT_BASE` in your environment or using the `--base` option below.\n\n    export DICT_BASE=\"/System/Library/AssetsV2/com_apple_MobileAsset_DictionaryServices_dictionaryOSX/\"\n\nAfter that, useage is straightforward.\n\n    Usage: apple-peeler [OPTIONS]\n\n    Extract XML from Apple Dictionary files.\n\n    Options:\n    --base DIRECTORY                The root directory of the OS X dictionaries.\n                                    (Default: /System/Library/AssetsV2/com_apple\n                                    _MobileAsset_DictionaryServices_dictionaryOS\n                                    X/) [Env var DICT_BASE]\n    --out DIRECTORY                 The path to place extracted XML files.\n    -d, --dictionary [\n        all|Arabic - English|Danish|Duden Dictionary Data Set I|Dutch|\n        Dutch - English|French|French - English|French - German|German - English|\n        Hebrew|Hindi|Hindi - English|Indonesian - English|Italian|\n        Italian - English|Korean|Korean - English|New Oxford American Dictionary|\n        Norwegian|Oxford American Writer's Thesaurus|\n        Oxford Dictionary of English|Oxford Thesaurus of English|\n        Polish - English|Portuguese|Portuguese - English|Russian|\n        Russian - English|Sanseido Super Daijirin|\n        Sanseido The WISDOM English-Japanese Japanese-English Dictionary|\n        Simplified Chinese - English|Simplified Chinese - Japanese|Spanish|\n        Spanish - English|Swedish|Thai|Thai - English|\n        The Standard Dictionary of Contemporary Chinese|Traditional Chinese|\n        Traditional Chinese - English|Turkish|Vietnamese - English]\n                                    The dictionary to extract or 'all'.\n                                    (Default: all) [Accepts multiple]\n    --format-xml / --no-format-xml  Format the XML files using BeautifulSoup.\n                                    (Default: False)\n    --debug                         Output debug information to STDERR.\n                                    (Default: False)\n    --help                          Show this message and exit.\n\n## Introduction\n\nI need a ton of dictionary data for prototyping my learning a language tool, [Parsnip](https://solarmist.net/), and licensing 40 dictionaries seems too expensive for a bootstrapper working on an MVP (I look forward to the day this is no longer true).\n\nParsnip uses Natural Language Processing and Dictionaries to decouple the word <-> sentence tug-of-war that's existed as long as flashcards have been used for language learning. I.e., should I make a word (concept) or a sentence (example) flashcard?\n\nI care about what words I know for tracking purposes, but I want those words in context when I'm practicing. So the learning system breaks down sentences into lemmas (or dictionary form of a word) and a database of example sentences that the words appear in. This resolves the conceptual tug-of-war for flashcards.\n\nBut by removing reference data from the flashcards themselves, I need to integrate reference material directly into Parsnip's UI. [JMDict](https://www.edrdg.org/wiki/index.php/JMdict-EDICT_Dictionary_Project) is a great open source project for this, but that only covers a single language. So, I've been keeping my eyes open for people working on extracting the data from Apple's bundled dictionaries.\n\nThis has been a community effort that's spanned several years. My contribution is to collect the results, clear up some details about the file format, and package it into a general command-line tool.\n\n## References\n\nThis is inspired by\n[Reverse-Engineering Apple Dictionary](https://fmentzer.github.io/posts/2020/dictionary/).\nAnd the discussion on Hacker News\n[Hacker News: Reverse-Engineering Apple Dictionary (2020)](https://news.ycombinator.com/item?id=28505406). Special thanks to tim-- and enragedcacti who introduced me to `binwalk`. And dunham who mentioned the random bytes looking like `int`s of payload sizes.\n\nAdditionally, I've found these posts informative:\n\n- https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/DictionaryServicesProgGuide/prepare/prepare.html#//apple_ref/doc/uid/TP40006152-CH3-SW7\n- https://jadedtuna.github.io/apple-dictionary/\n- https://josephg.com/blog/reverse-engineering-apple-dictionaries/\n- https://josephg.com/blog/apple-dictionaries-part-2/\n- https://gist.github.com/josephg/5e134adf70760ee7e49d\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/solarmist/apple-peeler",
    "keywords": "osx,dictionary,xml",
    "license": "MIT",
    "maintainer": "Joshua Olson",
    "maintainer_email": "joshua+github@solarmist.net",
    "name": "apple-peeler",
    "package_url": "https://pypi.org/project/apple-peeler/",
    "platform": "",
    "project_url": "https://pypi.org/project/apple-peeler/",
    "project_urls": {
      "Homepage": "https://github.com/solarmist/apple-peeler"
    },
    "release_url": "https://pypi.org/project/apple-peeler/0.1.1/",
    "requires_dist": [
      "beautifulsoup4 (>=4.10.0,<5.0.0)",
      "click (>=8.0.1,<9.0.0)",
      "lxml (>=4.6.3,<5.0.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Extract XML from the OS X dictionaries.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11483351,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d852300e7c5c783adc7097c85c5a11e35f27ed0c0bc6ea30dd2db737621f12a1",
          "md5": "ef3bcc728bca94e52a77641e914dd4b7",
          "sha256": "ff707a7787d14790761956be91337d132b0b224276093716c26de24874fe6d7a"
        },
        "downloads": -1,
        "filename": "apple_peeler-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef3bcc728bca94e52a77641e914dd4b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 5907,
        "upload_time": "2021-09-17T21:02:19",
        "upload_time_iso_8601": "2021-09-17T21:02:19.534260Z",
        "url": "https://files.pythonhosted.org/packages/d8/52/300e7c5c783adc7097c85c5a11e35f27ed0c0bc6ea30dd2db737621f12a1/apple_peeler-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f21eecdced7f849af0fbfb5207662cb830d4b2a4840b4844cc11d7a677ef09e1",
          "md5": "14cf55deca9bf6a337788c70ba870cfa",
          "sha256": "9bbbb0d7d04236101f5a9b9e359b670fe836377c7c1f0ba181fe0ad7914c9b82"
        },
        "downloads": -1,
        "filename": "apple_peeler-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "14cf55deca9bf6a337788c70ba870cfa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 5535,
        "upload_time": "2021-09-17T21:02:21",
        "upload_time_iso_8601": "2021-09-17T21:02:21.647077Z",
        "url": "https://files.pythonhosted.org/packages/f2/1e/ecdced7f849af0fbfb5207662cb830d4b2a4840b4844cc11d7a677ef09e1/apple_peeler-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94f31e74ef885626871c4c2b44aed6a22ab34d8b156a9e54a4630aa2bbd0f5fb",
          "md5": "bb941591679472a25896b69bc4f65e6c",
          "sha256": "0036d2af06b957a94b50a63bd37941448fef0a71709216de4e6e9d91bf4ce74e"
        },
        "downloads": -1,
        "filename": "apple_peeler-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb941591679472a25896b69bc4f65e6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 7874,
        "upload_time": "2021-09-17T22:51:33",
        "upload_time_iso_8601": "2021-09-17T22:51:33.874143Z",
        "url": "https://files.pythonhosted.org/packages/94/f3/1e74ef885626871c4c2b44aed6a22ab34d8b156a9e54a4630aa2bbd0f5fb/apple_peeler-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d90af5fb3eb7bc77efe07da0a6fc12eb17fa63ec3447fe8a00f123590f314e5d",
          "md5": "435bd4643ac8e75657fdea8b066c65dd",
          "sha256": "1a00fbf840797177d871936255c0bcc38f657e80a92408ada988665b1ae4b197"
        },
        "downloads": -1,
        "filename": "apple_peeler-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "435bd4643ac8e75657fdea8b066c65dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 7761,
        "upload_time": "2021-09-17T22:51:35",
        "upload_time_iso_8601": "2021-09-17T22:51:35.674778Z",
        "url": "https://files.pythonhosted.org/packages/d9/0a/f5fb3eb7bc77efe07da0a6fc12eb17fa63ec3447fe8a00f123590f314e5d/apple_peeler-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94f31e74ef885626871c4c2b44aed6a22ab34d8b156a9e54a4630aa2bbd0f5fb",
        "md5": "bb941591679472a25896b69bc4f65e6c",
        "sha256": "0036d2af06b957a94b50a63bd37941448fef0a71709216de4e6e9d91bf4ce74e"
      },
      "downloads": -1,
      "filename": "apple_peeler-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bb941591679472a25896b69bc4f65e6c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 7874,
      "upload_time": "2021-09-17T22:51:33",
      "upload_time_iso_8601": "2021-09-17T22:51:33.874143Z",
      "url": "https://files.pythonhosted.org/packages/94/f3/1e74ef885626871c4c2b44aed6a22ab34d8b156a9e54a4630aa2bbd0f5fb/apple_peeler-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d90af5fb3eb7bc77efe07da0a6fc12eb17fa63ec3447fe8a00f123590f314e5d",
        "md5": "435bd4643ac8e75657fdea8b066c65dd",
        "sha256": "1a00fbf840797177d871936255c0bcc38f657e80a92408ada988665b1ae4b197"
      },
      "downloads": -1,
      "filename": "apple_peeler-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "435bd4643ac8e75657fdea8b066c65dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 7761,
      "upload_time": "2021-09-17T22:51:35",
      "upload_time_iso_8601": "2021-09-17T22:51:35.674778Z",
      "url": "https://files.pythonhosted.org/packages/d9/0a/f5fb3eb7bc77efe07da0a6fc12eb17fa63ec3447fe8a00f123590f314e5d/apple_peeler-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}