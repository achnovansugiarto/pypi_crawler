{
  "info": {
    "author": "Mark J. Mandel,Emanuel Burgos,Camille Scott,Loren Velasquez,Benjamin K. Johnson",
    "author_email": "mandel01@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "[![Build Status](https://travis-ci.com/mjmlab/pyinseq.svg?branch=master)](https://app.travis-ci.com/github/mjmlab/pyinseq)\n![Python 3.7](https://img.shields.io/badge/python-3.7-blue.svg)\n![Python 3.8](https://img.shields.io/badge/python-3.8-blue.svg)\n\n![logo](https://github.com/mjmlab/pyinseq/raw/master/img/pyinseq-logo-small.png)\n\nLightweight python package to map transposon insertion sequencing (INSeq) data in\nbacteria.\n\n\n## Quick start <!-- omit in TOC -->\n\nThis section is meant for users who know their way around terminal and `conda`. To use `pyinseq`, \ncreate a virtual environment with `python` 3.7 and install `pyinseq` using `conda`.\n\n```bash\n$ conda install -n base -c conda-forge mamba\n$ conda create -n pyinseq-py37 python=3.7\n$ conda activate pyinseq-py37\n(pyinseq-py37) $ conda install -c bioconda bowtie\n(pyinseq-py37) $ pip install pyinseq\n```\n\nVerify your installation with `--test`\n\n```bash\n(pyinseq-py37) $ pyinseq --test\n```\n\nNow you can run `pyinseq`!\n\n```bash\n(pyinseq-py37) $ pyinseq -i <input file> -s <sample file> -g <genbank file> -e <experiment name>\n```\n\n## Table of contents <!-- omit in TOC -->\n\n- [Overview of Command Line Operation](#overview-of-command-line-operation)\n- [Output description](#output-description)\n- [Notes on output](#notes-on-output)\n- [Background](#background)\n- [User guide](#user-guide)\n  - [Input files description](#input-files-description)\n  - [General Usage](#general-usage)\n  - [Specialized tasks](#specialized-tasks)\n- [Installation](#installation)\n  - [Requirements](#requirements)\n  - [Installation in a conda environment (recommended)](#installation-in-a-conda-environment-recommended)\n  - [Testing](#testing)\n- [FAQ](#faq)\n  - [Why do I get errors in processing the GenBank file?](#why-do-i-get-errors-in-processing-the-genbank-file)\n  - [How do I uninstall pyinseq?](#how-do-i-uninstall-pyinseq)\n  - [How can I notify of an issue with `pyinseq`](#how-can-i-notify-of-an-issue-with-pyinseq)\n- [License](#license)\n\n\n## Overview of Command Line Operation\n\nBasic operation and a short description of the files are listed here. Below are detailed descriptions and links to example input files.\n\n```bash\n$ pyinseq -i <input file> -s <sample file> -g <genbank file> -e <experiment name>\n```\n\n`-i` / `--input`\n\n- Illumina reads file in FASTQ or gzipped-FASTQ format.\n\n`-s` / `--samples`\n\n- Sample list where each line is the `sample_name` \\<tab\\> `barcode (4bp)`.\n\n\n`-g` / `--genome`\n\n- Concatenated GenBank File for all contigs for the genome.\n\n`-e` / `--experiment`\n\n- All results files will be created in a subfolder with this name.\n\n#### Snakemake\n\n`--get_default_config`\n\n- Creates a default configuration file for running `pyinseq`\n\n`--config_format`\n\n- File format for configuration file (`yaml` or `json`)\n\n`-c`/ `--config`\n\n- Configuration file for running a `pyinseq` workflow. Every other argument will be ignored.\n\n`--test`\n\n- Runs pytest on installed `pyinseq` software.\n\n#### Optional arguments\n\n`--gff`\n\n- Generate genome output file in **gff3** format.\n\n`-d` / `--disruption`\n\n- Five-prime fraction of gene (`0.0` - `1.0`) that must be disrupted for the hit to be counted in the summary_gene_table. Often insertions at the 3' end of a gene do not disrupt function so it may be of interest to run the pipeline with a disruption value of `0.8` or `0.9`. [default: 0.9]\n  \n`--min_count`\n\n- Minimum number of reads per insertion site. [default: 3]\n\n`--max_ratio`\n\n- Maximum ratio of left:right or right:left reads per insertion site. [default: 10]\n\n`--barcode_length`\n\n- Length of barcode index that is expected in samples. [default: 4]\n\n`--transposon_seq`\n\n- DNA sequence of transposon that flanks reads. [default: 'ACAGGTTG']\n\n`-t` / `--threads`\n\n- Number of cores to use for execution [default: the CPU count of the computer]\n\n`--snakemake_params`\n\n- Additional parameters that will get passed to `snakemake`.\n\n\n## Output description\n\n| File | Description |\n| --- | --- |\n| `<experiment name>-config.yml` | Configuration file with run parameters |\n| `results/summary_gene_table.txt` | summary for entire experiment (values in counts-per-million, cpm) |\n| `results/<sample>_sites.txt` (for each sample) | Counts of each insertion in each sample |\n| `results/<sample>_genes.txt` (for each sample) | Counts of each insertion mapped to genes |\n| `results/<sample>_bowtie.txt` (for each sample) | Bowtie mapping results |\n| `results/<sample>_trimmed.fastq` (for each sample) | Demultiplexed fastq reads trimmed for the chromosome sequence only |\n| `results/log.txt` | text printed to console |\n| `results/samples_info_yml` | basics stats for each sample | \n| `results/genome_lookup/genome.fna` | genome fasta nucleotide file |\n| `results/genome_lookup/genome.ftt` | genome feature table | \n| bowtie indexes | index files created from genome by bowtie | \n| `results/raw_data/<sample>.fastq` (for each sample) | demultiplexed files for each sample/barcode |\n| `results/raw_data/_other.fastq` | demultiplexed files for unrecognized barcodes |\n\n\n## Notes on output\n\n**T50**\n* The minimum number of transposon insertion sites in the sample that account for at least 50% of the samples's reads. Used as a crude measure to detect bottlenecks, when comparing output T50 to the library input T50, or when comparing biological or technical replicates.\n\n**samples_info.yml**\n* Contains basic information of each sample in the experiment. \n\n**log.txt**\n* Log file from pyinseq, including the messages from the `snakemake` execution. This includes the order of steps taken during the pyinseq execution.\n\n**`<experiment name>`-config.yaml**\n* Configuration file with run parameters.\n\n## Background\n\n`pyinseq` was inspired by the software published by [Goodman et al. (2011)](http://www.ncbi.nlm.nih.gov/pubmed/22094732). There are a number of differences, some of which are noted here. Most are fairly superficial in that they are intended to increase automation and reproducibility but do not materially affect the results. One exception is the first point, which does affect the resulting output.\n\n1. As was conducted in [Brooks et al. (2014)](http://www.ncbi.nlm.nih.gov/pubmed/25404340) transposon site data are normalized across all replicons (chromosomes/plasmids/contigs) for calculation of a counts-per-million (cpm) per sample.\n\n1. The user's file of reads is demultiplexed into separate .fastq files for each barcoded read.\n\n1. The user provides a GenBank file, and `pyinseq` generates a fasta nucleotide file (.fna) and gene feature table (.ftt) that are formatted and named properly for `bowtie`.\n\n1. The gene feature table (.ftt) is comparable to the protein feature table (.ptt) but it also includes RNA genes.\n\n1. If `pyinseq` is installed from `conda`, then `bowtie` is installed from `conda` as a dependency.\n\n1. At the end of the analysis, results are aggregated into a tab-delimited table and sample info is summarized.\n\n1. `pyinseq` is written primarily in Python and uses `snakemake` as the workflow manager. You probably figured that out already.\n\n\n## User guide\n\n### Input files description\n\n**Illumina sequencing reads [`-i`]** for the experiment. File can be uncompressed (.fastq or .fq) or gzip-compressed (.fastq.gz or .fq.gz).\n\n[Example input file](https://github.com/mjmlab/pyinseq/blob/master/pyinseq/tests/data/input/example01.fastq)\n\n```txt\n@DGL9ZZQ1:720:C6YD0ACXX:2:1101:1246:2185 1:N:0:\nGAAGCGACACCGACGACGGTAACAGGTTGGATGATAAGTCCCCGGTCTTCG\n+\nCCCFFFDDHHHHHCGHHHIJDHIIJJFHHJIJJJJIJJDHIJJHIAGIJJJ\n...\n```\n\n**Sample file [`-s`]** describing the sample names and barcodes. Sample names should be restricted to letters, numbers, dash (-), and underscore (_), with a tab between the sample and the barcode in each row of a text file. It is recommended that the file be prepared in a text editor to ensure that additional hidden characters are not introduced. [BBEdit](http://www.barebones.com/products/bbedit/) is one option for Mac.\n\n> Microsoft Excel can export tab-delimited files (.tsv), but do not use Microsoft Word for this purpose.\n\n[Example sample file](https://github.com/mjmlab/pyinseq/blob/master/pyinseq/tests/data/input/example01.txt)\n\n```txt\nE001_01 GAAG\nE001_02 CTTT\n```\n\n**GenBank file [`-g`]** listing the features and DNA sequence for the organism. If the organism has multiple chromosomes/contigs in the sequence the file they should be concatenated into a single file. Ensure that the double slash `//` at the end of the file remains to separate each contig.\n\n> Files from NCBI GenBank often work where the corresponding files from NCBI RefSeq do not. Feel free to contact us with any questions here.\n\n[Example GenBank file](https://github.com/mjmlab/pyinseq/blob/master/pyinseq/tests/data/input/ES114v2.gb)\n\n```txt\nLOCUS       CP000020             2897536 bp    DNA     circular BCT 02-APR-2008\nDEFINITION  Vibrio fischeri ES114 chromosome I, complete sequence.\nACCESSION   CP000020\nVERSION     CP000020.2  GI:171902228\nKEYWORDS    .\nSOURCE      Vibrio fischeri ES114\n...\nFEATURES             Location/Qualifiers\n     source          1..2897536\n                     /organism=\"Vibrio fischeri ES114\"\n                     /mol_type=\"genomic DNA\"\n                     /strain=\"ES114\"\n                     /db_xref=\"taxon:312309\"\n                     /chromosome=\"I\"\n     gene            complement(313..747)\n                     /gene=\"mioC\"\n                     /locus_tag=\"VF_0001\"\n                     /old_locus_tag=\"VF0001\"\n     CDS             complement(313..747)\n                     /dnas_title=\"FMN-binding protein MioC\"\n                     /gene=\"mioC\"\n                     /locus_tag=\"VF_0001\"\n                     /old_locus_tag=\"VF0001\"\n                     /codon_start=1\n                     /transl_table=11\n                     /product=\"FMN-binding protein MioC\"\n                     /protein_id=\"AAW84496.1\"\n                     /db_xref=\"GI:59478709\"\n                     /translation=\"MKKVSIITGSTLGGAEYVGDHLADLLEEMDFSTDIHNQPNLDDI\n                     DIDSLWLLVVSTHGAGDYPDNIKPFIQQLESVTQPLSSVEFAVVAIGDSSYDTFCAAG\n                     KSLQNTLKEHGAIEKYPLLEIDVTQNSIPEEPAELWLKQHIC\"\n...\nORIGIN\n        1 aagatcactt aatatatata agatctttta aagagatctt ttattagatc tattatatag\n       61 atcgtcgatc tctgtggata agtgataaat gatcaatagg atcatatact ttagatggat\n      121 ccaaagttgt tatctttctt tgatcttcga tcggacagct tgaggacaaa agagttagtt\n      181 atccacaagg ggggagggcg ttagatctta ttcaatggat aactataact tgatcactgg\n      241 atctttctat agttatccac atagtaggta tcatctattt aataactttt atagatcgga\n      301 caacactttt tattaacaaa tgtgttgttt tagccacaat tctgctggtt cttcagggat\n      361 actattttga gttacatcta tctctaatag agggtacttt tcgatagcgc catgctcttt\n      421 taaggtattt tgaagtgatt ttcctgctgc gcagaaagtg tcataacttg aatcaccgat\n      481 agcaacaaca gcaaattcaa cgctcgataa tggctgagtc acgctttcta actgttgaat\n      541 aaatggttta atgttgtcag ggtaatcacc agcaccgtga gttgatacaa cgagtaacca\n      601 taagctatca atatcaatat catctaaatt tggttgatta tgaatatcgg tggaaaaatc\n      661 catttcttct aataaatcag caagatggtc accaacatac tcagcaccac ctagagtgct\n      721 tcctgtaata atagatactt ttttcatgaa tttatcctat aaaaatataa aaaatgggcc\n      781 tacataggcc cattattaat cttattaata ttggttttat ttaccaatac agaatgaagt\n...\n//\nLOCUS       CP000021             1330333 bp    DNA     circular BCT 02-APR-2008\nDEFINITION  Vibrio fischeri ES114 chromosome II, complete sequence.\n...\n```\n\n### General Usage\n\nPyinseq uses [snakemake](https://snakemake.readthedocs.io/en/stable/) to execute the following workflow: \n\n`pyinseq`\n\n- Demultiplex a file of FASTQ reads.\n- Write separate trimmed versions of the files (no barcodes, no transposon sequence).\n- Map the trimmed reads to the genome.\n- Quantify insertions per site and per ORF in the genome.\n- Output summary gene table and report files describing the dataset.\n\nThe benefit of using `snakemake` is that it allows for parallel execution if more than one `thread` is provided.\nThe modularity of `snakemake` enables future feature implementation.  \n\n#### Run Parameters (Config File)\n\n`pyinseq` writes a configuration file (`<experiment name>-config.yaml`) into the working directory, which holds the parameters for the run. \nFor the example command below, the `pyinseq-config.yaml` file will store the parameters used for this run.\n\n```bash\n$ pyinseq -i reads.fastq -s samples.txt -g genome.gbk -e pyinseq --threads 4\n```\n\n[Example Config File](https://github.com/mjmlab/pyinseq/blob/master/pyinseq/tests/data/input/pyinseq-config.yaml)\n\n```bash\n$ cat demo-run-config.yaml\nsnakemake_params: []\nbarcode_length: 4\ncommand: pyinseq\nconfig: false\nconfig_format: yaml\ndisruption: 0.9\nexperiment: demo-run\ngenome: genome.gbk\nget_default_config: false\ngff3: false\ninput: reads.fastq.gz\nmax_ratio: 10\nmin_count: 3\nsamples: samples.txt\nthreads: 4\ntransposon_seq: ACAGGTTG\n```\n\nIf you installed **conda** in your terminal, you can use the option `--use-conda` which will install bowtie during the executuion of the workflow. \n\n```bash\n$ pyinseq -i reads.fastq -s samples.txt -g genome.gbk -e demo-run --threads 4 --snakemake_params --use-conda \n```\n\nYou can also get a default configuration file by using `--get_default_config` and modify it using a text-editor.\n\n```bash\n$ pyinseq --get_default_config\n$ ls\ndefault-config-pyinseq.yaml\n```\n\n> Make sure that all file paths in the configuration are correct\n\n\n### Specialized tasks\n\nThese commands are useful when combining samples from multiple Illumina runs in a single `pyinseq` analysis. \nBoth commands will also create a configuration file specific to each subcommand.\n\n`pyinseq demultiplex`\n\n- Demultiplex a file of Illumina reads.\n- Writes separate trimmed versions of the files (no barcode, no transposon sequence) unless the optional `--notrim` flag is added.\n\n```bash\n$ pyinseq demultiplex -i <input file> -s <sample file> -e <experiment name>\n```\n\n`pyinseq genomeprep`\n\n- Prepare the fasta nucleotide (.fna) and feature table (.ftt) files from a GenBank file.\n- Is a good quick test to run on new GenBank files.\n- Generates bowtie indexes unless the `--noindex` flag is added.\n- Optionally create GFF3 file with the `-gff` flag (for use in other programs).\n\n```bash\n$ pyinseq genomeprep -g <genbank file> -e <experiment name>\n```\n\n> Similar to `pyinseq` main usage, you can run these commands using a configuration \n> file and pass additional `snakemake` options.\n\n\n\n## Installation\n\n### Requirements\n\n`pyinseq` was written and tested using a MacOS (or Linux-based) operating system.\n\n- MacOS or Linux-based operating systems.\n- [Python 3.7](https://www.python.org/downloads/release/python-3713/)\n- [bowtie](http://bowtie-bio.sourceforge.net/index.shtml) (v1.0.0)\n- [snakemake](https://snakemake.readthedocs.io/en/stable/getting_started/installation.html)\n\n> `pyinseq` has not being tested on Windows operating systems, but as of Windows 10 \n> there is support for terminals with *Ubuntu*\n\n> Also note that `pyinseq` uses `bowtie`; **not bowtie2**, which is a different software.\n\n### Installation in a conda environment (recommended)\n\nConda is a command-line package manager that can create virtual environments with \nall the necessary dependencies to run `pyinseq`. You can acquire conda by installing \n[Anaconda](https://docs.anaconda.com/anaconda/install/) and all the packages it \nbrings, or by installing its lightweight version called \n[miniconda](https://docs.conda.io/projects/continuumio-conda/en/latest/user-guide/install/macos.html). \nWe recommend **miniconda** since it installs a minimal number packages, \nand is actually all you need to run `pyinseq`\n\nOnce conda is installed, you can verify it by running:\n\n```bash\n$ conda --help\n```\n\n#### Installing mamba\n\n`mamba` is now required for `snakemake`. Install it system-wide with this command. The subsequent steps are shown using `conda` since that is more common for the\nscientific audience, but can largely be accomplished in `mamba` if the user desires.\n\n```\nconda install -n base -c conda-forge mamba\n```\n\n#### Creating a virtual environment\n\nA virtual environment is an isolated computational space where you can install dependencies and software without affecting the base operating system's configuration. \nWe can use `conda` to create a virtual environment with python 3.7\n\n```bash\n$ conda create -n pyinseq-py37 python=3.7\n```\n\nTo activate your environment:\n\n```bash\n$ conda activate pyinseq-py37\n```\n\nYou should see the name of your environment surrounded by parentheses in your terminal prompt.\n\n```bash\n(pyinseq-py37) $ \n```\n#### Install `bowtie`:\n\n```bash\n(pyinseq-py37) $ conda install -c bioconda bowtie\n```\n#### Install `pyinseq`:\n\nInstall the stable version:\n\n```bash\n(pyinseq-py37) $ pip install pyinseq\n```\n\nOr, install the most recent version from GitHub:\n\n```\n(pyinseq-py37) $ pip install git+https://github.com/mjmlab/pyinseq\n```\n\n\nVerify your installation with `--test`\n\n```bash\n(pyinseq-py37) $ pyinseq --test\n\n\nVerify that pyinseq installed correctly by running:\n\n```bash\n(pyinseq-py37) $ pyinseq --help\n2021-05-26 13:10 - INFO - pyinseq - Process command line arguments\nusage: pyinseq [-h] [--get_default_config] [--config_format CONFIG_FORMAT]\n               [-c CONFIG] [-t THREADS] [--snakemake_params ...] [-v]\n               [-i INPUT] [-s SAMPLES] [-e EXPERIMENT] [-g GENOME]\n               [-d DISRUPTION] [--min_count MIN_COUNT] [--max_ratio MAX_RATIO]\n               [--barcode_length BARCODE_LENGTH]\n               [--transposon_seq TRANSPOSON_SEQ] [--gff3]\n               {demultiplex,genomeprep} ...\n...\n```\n Now you are ready to run `pyinseq`!\n\n### Testing\n\nYou can test your installation of `pyinseq` by using the option `--test`.\n\n```bash\n(pyinseq-py37) $ pyinseq --test\n```\n\nIf all tests pass then you are good to go!\n\n## FAQ\n\n### Why do I get errors in processing the GenBank file?\n\nEnsure that the file is in GenBank and not RefSeq format.\n\n### How do I uninstall pyinseq?\n\nYou can do this two ways: \n* uninstalling pyinseq from the virtual environment\n\n```pip uninstall pyinseq```\n\n* or completely remove the conda virtual environment.\n\n``` conda env remove -n pyinseq-py37```\n\nNote: will need to `conda deactivate` first to leave the environment.\n\n### How can I notify of an issue with `pyinseq`\n\nPlease use the [GitHub Issues](https://github.com/mjmlab/pyinseq/issues).\n\n## [License](LICENSE.md)\n\nPyinseq is an open-source software licensed under BSD-3.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mjmlab/pyinseq",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyinseq",
    "package_url": "https://pypi.org/project/pyinseq/",
    "platform": "MacOS",
    "project_url": "https://pypi.org/project/pyinseq/",
    "project_urls": {
      "Documentation": "https://github.com/mjmlab/pyinseq/blob/master/README.md",
      "Homepage": "https://github.com/mjmlab/pyinseq"
    },
    "release_url": "https://pypi.org/project/pyinseq/0.3.2/",
    "requires_dist": [
      "black (>=18.9b0)",
      "matplotlib (>=1.5.0)",
      "seaborn (>=0.6.0)",
      "numpy (>=1.10.0)",
      "pandas (>=0.18.1)",
      "pre-commit (>=1.12.0)",
      "pytest (>=2.8.1)",
      "pytest-cov (>=2.4.0)",
      "codecov (>=2.0.5)",
      "PyYAML (>=3.11)",
      "screed (>=0.9)",
      "snakemake (>=5.31.1)",
      "tqdm (>=4.61.2)"
    ],
    "requires_python": "!=3.9.*,>=3.7.*",
    "summary": "Analysis of transposon insertion sequencing (INSeq) data in Python",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13915001,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "194b5c2913ecee7b792d5863d5cd8f484314f92ecc02a7a429023e99c5356397",
          "md5": "ed4d4a2d5c33b4ad07e140f9c6bf91f0",
          "sha256": "a1f8cdec0d28eafc441915dd8698d44161edb9dbe4229e658c2f2b9db9305118"
        },
        "downloads": -1,
        "filename": "pyinseq-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ed4d4a2d5c33b4ad07e140f9c6bf91f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47888704,
        "upload_time": "2016-12-14T05:23:25",
        "upload_time_iso_8601": "2016-12-14T05:23:25.111433Z",
        "url": "https://files.pythonhosted.org/packages/19/4b/5c2913ecee7b792d5863d5cd8f484314f92ecc02a7a429023e99c5356397/pyinseq-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "651ed90f6648dfdf012bef8c28d8ae223787280ff336965ffedd1d3b46e705bc",
          "md5": "ab8250b5661cde9389dc63423a227a1e",
          "sha256": "d93d1534da55a0ad89ea2c9becbb8db5bd5df767273eab395a334a62cb3ca9d2"
        },
        "downloads": -1,
        "filename": "pyinseq-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ab8250b5661cde9389dc63423a227a1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47888892,
        "upload_time": "2016-12-14T05:57:25",
        "upload_time_iso_8601": "2016-12-14T05:57:25.258760Z",
        "url": "https://files.pythonhosted.org/packages/65/1e/d90f6648dfdf012bef8c28d8ae223787280ff336965ffedd1d3b46e705bc/pyinseq-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97ac67a8f633f983598cc441ff5f89cd236d2a708416fc494b6646ca08b771ab",
          "md5": "fbc8b05c6b3d1d8bd56eedca2e9b59ae",
          "sha256": "ef438880849ac104e953309630d5f03432c755579a76cca414e0de8cf1e4bd5d"
        },
        "downloads": -1,
        "filename": "pyinseq-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fbc8b05c6b3d1d8bd56eedca2e9b59ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47891275,
        "upload_time": "2017-07-17T03:24:15",
        "upload_time_iso_8601": "2017-07-17T03:24:15.343752Z",
        "url": "https://files.pythonhosted.org/packages/97/ac/67a8f633f983598cc441ff5f89cd236d2a708416fc494b6646ca08b771ab/pyinseq-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f90b4a44adae9e1b048b755f6fa0ae1e9bdf5c3e53d816600a7219422413d455",
          "md5": "048efde886d6a02b1ee6a4e2b21be69a",
          "sha256": "73e992f399a2c81e891b12d50029e6017c862eef3973fb0448c94b9c7bf54e36"
        },
        "downloads": -1,
        "filename": "pyinseq-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "048efde886d6a02b1ee6a4e2b21be69a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "!=3.8.*,>=3.6.*",
        "size": 41977,
        "upload_time": "2021-07-13T18:28:42",
        "upload_time_iso_8601": "2021-07-13T18:28:42.987447Z",
        "url": "https://files.pythonhosted.org/packages/f9/0b/4a44adae9e1b048b755f6fa0ae1e9bdf5c3e53d816600a7219422413d455/pyinseq-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d617e53e34ea9c779880632c59401c0f52b378b172ce1e65b57f3b2f406caa1",
          "md5": "7c94314056c6509f7380dd1d7b3d66bc",
          "sha256": "e40884917c2d63d36a2a69bcf74bbbcb5b0513eb1b74706179f9ac98cdb802e7"
        },
        "downloads": -1,
        "filename": "pyinseq-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7c94314056c6509f7380dd1d7b3d66bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "!=3.8.*,>=3.6.*",
        "size": 60894,
        "upload_time": "2021-07-13T18:28:44",
        "upload_time_iso_8601": "2021-07-13T18:28:44.390872Z",
        "url": "https://files.pythonhosted.org/packages/3d/61/7e53e34ea9c779880632c59401c0f52b378b172ce1e65b57f3b2f406caa1/pyinseq-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ff6251c7e6dcca547298eb8fb8c1654cdb379e688e93c0fec064956d9b624b9",
          "md5": "4c29aa1638c77d62cc5362ccc45e80f8",
          "sha256": "a25bd87acf1ad571438617e1c0e7c47e71385592b8f0ca0fd105a11ef7f0f69c"
        },
        "downloads": -1,
        "filename": "pyinseq-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c29aa1638c77d62cc5362ccc45e80f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "!=3.8.*,>=3.6.*",
        "size": 41772,
        "upload_time": "2021-07-14T20:07:05",
        "upload_time_iso_8601": "2021-07-14T20:07:05.234785Z",
        "url": "https://files.pythonhosted.org/packages/1f/f6/251c7e6dcca547298eb8fb8c1654cdb379e688e93c0fec064956d9b624b9/pyinseq-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39fa0199a9fe0e0ba1e445d4b7238f27c5533a7279f239f249156e397e12e6dd",
          "md5": "fbb841355d71f01d1ef815d292797a94",
          "sha256": "8de9718a3559a6c5ec8280febdc6f3ffa83dda71e556d16d09d4e30e7632aa0f"
        },
        "downloads": -1,
        "filename": "pyinseq-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fbb841355d71f01d1ef815d292797a94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "!=3.8.*,>=3.6.*",
        "size": 41422,
        "upload_time": "2021-07-14T20:07:06",
        "upload_time_iso_8601": "2021-07-14T20:07:06.798906Z",
        "url": "https://files.pythonhosted.org/packages/39/fa/0199a9fe0e0ba1e445d4b7238f27c5533a7279f239f249156e397e12e6dd/pyinseq-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "262fa5dc8099103281daa1955903b843328fa0ce3bb7e10115f0dc71bc64b4d0",
          "md5": "7b19117b5cef628365985a07828abc3c",
          "sha256": "a17f52eadc7700bf71b68eb804ef6270bc6f9ac3e98d7d12f6c554c16edffe7d"
        },
        "downloads": -1,
        "filename": "pyinseq-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b19117b5cef628365985a07828abc3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "!=3.9.*,>=3.7.*",
        "size": 37522138,
        "upload_time": "2022-05-24T00:34:32",
        "upload_time_iso_8601": "2022-05-24T00:34:32.507132Z",
        "url": "https://files.pythonhosted.org/packages/26/2f/a5dc8099103281daa1955903b843328fa0ce3bb7e10115f0dc71bc64b4d0/pyinseq-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a78f779d521bdbf12ec2a26d68baff550c7f7eb4447c662448d0145b46e92fab",
          "md5": "3dc157ea5436b61a9a550ac6272ee78f",
          "sha256": "081f7d9aa81518949eb80c0f5fd9ed485b45b2a8ca4f755ba2414d84a81d6b43"
        },
        "downloads": -1,
        "filename": "pyinseq-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3dc157ea5436b61a9a550ac6272ee78f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "!=3.9.*,>=3.7.*",
        "size": 37247293,
        "upload_time": "2022-05-24T00:35:33",
        "upload_time_iso_8601": "2022-05-24T00:35:33.282015Z",
        "url": "https://files.pythonhosted.org/packages/a7/8f/779d521bdbf12ec2a26d68baff550c7f7eb4447c662448d0145b46e92fab/pyinseq-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "262fa5dc8099103281daa1955903b843328fa0ce3bb7e10115f0dc71bc64b4d0",
        "md5": "7b19117b5cef628365985a07828abc3c",
        "sha256": "a17f52eadc7700bf71b68eb804ef6270bc6f9ac3e98d7d12f6c554c16edffe7d"
      },
      "downloads": -1,
      "filename": "pyinseq-0.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7b19117b5cef628365985a07828abc3c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "!=3.9.*,>=3.7.*",
      "size": 37522138,
      "upload_time": "2022-05-24T00:34:32",
      "upload_time_iso_8601": "2022-05-24T00:34:32.507132Z",
      "url": "https://files.pythonhosted.org/packages/26/2f/a5dc8099103281daa1955903b843328fa0ce3bb7e10115f0dc71bc64b4d0/pyinseq-0.3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a78f779d521bdbf12ec2a26d68baff550c7f7eb4447c662448d0145b46e92fab",
        "md5": "3dc157ea5436b61a9a550ac6272ee78f",
        "sha256": "081f7d9aa81518949eb80c0f5fd9ed485b45b2a8ca4f755ba2414d84a81d6b43"
      },
      "downloads": -1,
      "filename": "pyinseq-0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3dc157ea5436b61a9a550ac6272ee78f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "!=3.9.*,>=3.7.*",
      "size": 37247293,
      "upload_time": "2022-05-24T00:35:33",
      "upload_time_iso_8601": "2022-05-24T00:35:33.282015Z",
      "url": "https://files.pythonhosted.org/packages/a7/8f/779d521bdbf12ec2a26d68baff550c7f7eb4447c662448d0145b46e92fab/pyinseq-0.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}