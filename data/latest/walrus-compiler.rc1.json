{
  "info": {
    "author": "Jarry Shaw",
    "author_email": "jarryshaw@icloud.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development",
      "Topic :: Utilities"
    ],
    "description": "# walrus\n\n[![PyPI - Downloads](https://pepy.tech/badge/python-walrus)](https://pepy.tech/count/python-walrus)\n[![PyPI - Version](https://img.shields.io/pypi/v/python-walrus.svg)](https://pypi.org/project/python-walrus)\n[![PyPI - Format](https://img.shields.io/pypi/format/python-walrus.svg)](https://pypi.org/project/python-walrus)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/python-walrus.svg)](https://pypi.org/project/python-walrus)\n\n[![Travis CI - Status](https://img.shields.io/travis/JarryShaw/walrus.svg)](https://travis-ci.org/JarryShaw/walrus)\n[![Codecov - Coverage](https://codecov.io/gh/JarryShaw/walrus/branch/master/graph/badge.svg)](https://codecov.io/gh/JarryShaw/walrus)\n![License](https://img.shields.io/github/license/jarryshaw/walrus.svg)\n[![LICENSE](https://img.shields.io/badge/license-Anti%20996-blue.svg)](https://github.com/996icu/996.ICU/blob/master/LICENSE)\n\n > Write *assignment expressions* in Python 3.8 flavour, and let `walrus` worry about back-port issues :beer:\n\n&emsp; Since [PEP 572](https://www.python.org/dev/peps/pep-0572/), Python introduced *assignment expressions*\nsyntax in version __3.8__. For those who wish to use *assignment expressions* in their code, `walrus` provides an\nintelligent, yet imperfect, solution of a **backport compiler** by replacing *assignment expressions* syntax with\nold-fashioned assignment-then-conditional syntax, which guarantees you to always write *assignment expressions* in\nPython 3.8 flavour then compile for compatibility later.\n\n**NB**: `walrus` currently can only support *assignment expressions* used in `if` statements.\n\n## Installation\n\n> Note that `walrus` only supports Python versions __since 3.3__ 🐍\n\n&emsp; For macOS users, `walrus` is now available through [Homebrew](https://brew.sh):\n\n```sh\nbrew tap jarryshaw/tap\nbrew install walrus\n# or simply, a one-liner\nbrew install jarryshaw/tap/walrus\n```\n\n&emsp; Simply run the following to install the current version from PyPI:\n\n```sh\npip install python-walrus\n```\n\n&emsp; Or install the latest version from the git repository:\n\n```sh\ngit clone https://github.com/JarryShaw/walrus.git\ncd walrus\npip install -e .\n# and to update at any time\ngit pull\n```\n\n## Basic Usage\n\n### CLI\n\n&emsp; It is fairly straightforward to use `walrus`:\n\n > context in `${...}` changes dynamically according to runtime environment\n\n```man\nusage: walrus [options] <python source files and folders...>\n\nBack-port compiler for Python 3.8 assignment expressions.\n\npositional arguments:\n  SOURCE                python source files and folders to be converted (${CWD})\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -V, --version         show program's version number and exit\n  -q, --quiet           run in quiet mode\n\narchive options:\n  duplicate original files in case there's any issue\n\n  -n, --no-archive      do not archive original files\n  -p PATH, --archive-path PATH\n                        path to archive original files (${CWD}/archive)\n\nconvert options:\n  compatibility configuration for none-unicode files\n\n  -c CODING, --encoding CODING\n                        encoding to open source files (${LOCALE_ENCODING})\n  -v VERSION, --python VERSION\n                        convert against Python version (${LATEST_VERSION})\n  -s SEP, --linesep SEP\n                        line separator to process source files (${OS_LINESEP})\n  -nl, --no-linting     do not lint converted codes\n```\n\n&emsp; `walrus` will read then convert all *assignment expressions* syntax in every Python\nfile under this path. In case there might be some problems with the conversion, `walrus` will\nduplicate all original files it is to modify into `archive` directory ahead of the process,\nif `-n` not set.\n\n&emsp; Besides, to keep consistency of API to users, `walrus` ships with a *decorator* for\nsuch functions to check assignment expressions at runtime, if `-nl` not set.\n\n## Developer Reference\n\n### Environments\n\n`walrus` currently supports three environment arguments:\n\n- `WALRUS_QUIET` -- run in quiet mode (same as `--quiet` option in CLI)\n- `WALRUS_VERSION` -- convert against Python version (same as `--python` option in CLI)\n- `WALRUS_ENCODING` -- encoding to open source files (same as `--encoding` option in CLI)\n- `WALRUS_LINESEP` -- line separator to process source files (same as `--linesep` option in CLI)\n- `WALRUS_LINTING` -- lint converted codes (same as `--linting` option in CLI)\n\n### APIs\n\n#### `walrus` -- wrapper works for conversion\n\n```python\nwalrus(filename)\n```\n\nArgs:\n\n- `filename` -- `str`, file to be converted\n\nEnvs:\n\n- `WALRUS_QUIET` -- run in quiet mode (same as `--quiet` option in CLI)\n- `WALRUS_ENCODING` -- encoding to open source files (same as `--encoding` option in CLI)\n- `WALRUS_VERSION`-- convert against Python version (same as `--python` option in CLI)\n- `WALRUS_LINESEP` -- line separator to process source files (same as `--linesep` option in CLI)\n- `WALRUS_LINTING` -- lint converted codes (same as `--linting` option in CLI)\n\nRaises:\n\n- `ConvertError `-- when `parso.ParserSyntaxError` raised\n\n#### `convert` -- the main conversion process\n\n```python\nconvert(string, source='<unknown>')\n```\n\nArgs:\n\n- `string` -- `str`, context to be converted\n- `source` -- `str`, source of the context\n\nEnvs:\n\n- `WALRUS_VERSION`-- convert against Python version (same as `--python` option in CLI)\n- `WALRUS_LINESEP` -- line separator to process source files (same as `--linesep` option in CLI)\n- `WALRUS_LINTING` -- lint converted codes (same as `--linting` option in CLI)\n\nReturns:\n\n- `str` -- converted string\n\nRaises:\n\n- `ConvertError `-- when `parso.ParserSyntaxError` raised\n\n#### `ConvertError` -- `walrus` internal exception\n\n```python\nclass ConvertError(SyntaxError):\n    pass\n```\n\n## Test\n\n&emsp; See [`test.py`](https://github.com/JarryShaw/walrus/blob/master/scripts/test.py).\n\n## Contribution\n\n&emsp; Contributions are very welcome, especially fixing bugs and providing test cases.\nNote that code must remain valid and reasonable.\n\n## See Also\n\n- [`babel`](https://github.com/jarryshaw/babel)\n- [`f2format`](https://github.com/jarryshaw/f2format)\n- [`poseur`](https://github.com/jarryshaw/poseur)\n- [`vermin`](https://github.com/netromdk/vermin)\n\n\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JarryShaw/walrus",
    "keywords": "walrus operator,assignment expression,back-port compiler",
    "license": "Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "walrus-compiler",
    "package_url": "https://pypi.org/project/walrus-compiler/",
    "platform": "",
    "project_url": "https://pypi.org/project/walrus-compiler/",
    "project_urls": {
      "Homepage": "https://github.com/JarryShaw/walrus"
    },
    "release_url": "https://pypi.org/project/walrus-compiler/0.0.0.dev0/",
    "requires_dist": [
      "parso (~=0.5.0)",
      "tbtrim (>=0.2.1)"
    ],
    "requires_python": ">=3.3",
    "summary": "Back-port compiler for Python 3.8 assignment expressions.",
    "version": "0.0.0.dev0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6167101,
  "releases": {
    "0.0.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4be60f64f9ead3d69d22d67bec6dee64b8199c695c6d9b2c5eae5f606ce94d7",
          "md5": "3704844309c8a1e857ecdae70134e629",
          "sha256": "aad92467264caa9b556b0b6d46cc88ec4d46656813e47ad714d7742983a8d226"
        },
        "downloads": -1,
        "filename": "walrus_compiler-0.0.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3704844309c8a1e857ecdae70134e629",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.3",
        "size": 11910,
        "upload_time": "2019-11-20T06:34:48",
        "upload_time_iso_8601": "2019-11-20T06:34:48.079549Z",
        "url": "https://files.pythonhosted.org/packages/b4/be/60f64f9ead3d69d22d67bec6dee64b8199c695c6d9b2c5eae5f606ce94d7/walrus_compiler-0.0.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa38c59306920d3b9e4104f30228f1206a4cb7ad3b5c187d62dc602905d54c40",
          "md5": "336e632f54e013fc93be868249d3c9e3",
          "sha256": "4c0f7d417f12244b6954ac19aa6bc0d8b8b522906e5d546f9f6455b5e53c8d26"
        },
        "downloads": -1,
        "filename": "walrus-compiler-0.0.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "336e632f54e013fc93be868249d3c9e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 16926,
        "upload_time": "2019-11-20T06:34:50",
        "upload_time_iso_8601": "2019-11-20T06:34:50.498919Z",
        "url": "https://files.pythonhosted.org/packages/aa/38/c59306920d3b9e4104f30228f1206a4cb7ad3b5c187d62dc602905d54c40/walrus-compiler-0.0.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b4be60f64f9ead3d69d22d67bec6dee64b8199c695c6d9b2c5eae5f606ce94d7",
        "md5": "3704844309c8a1e857ecdae70134e629",
        "sha256": "aad92467264caa9b556b0b6d46cc88ec4d46656813e47ad714d7742983a8d226"
      },
      "downloads": -1,
      "filename": "walrus_compiler-0.0.0.dev0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3704844309c8a1e857ecdae70134e629",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.3",
      "size": 11910,
      "upload_time": "2019-11-20T06:34:48",
      "upload_time_iso_8601": "2019-11-20T06:34:48.079549Z",
      "url": "https://files.pythonhosted.org/packages/b4/be/60f64f9ead3d69d22d67bec6dee64b8199c695c6d9b2c5eae5f606ce94d7/walrus_compiler-0.0.0.dev0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa38c59306920d3b9e4104f30228f1206a4cb7ad3b5c187d62dc602905d54c40",
        "md5": "336e632f54e013fc93be868249d3c9e3",
        "sha256": "4c0f7d417f12244b6954ac19aa6bc0d8b8b522906e5d546f9f6455b5e53c8d26"
      },
      "downloads": -1,
      "filename": "walrus-compiler-0.0.0.dev0.tar.gz",
      "has_sig": false,
      "md5_digest": "336e632f54e013fc93be868249d3c9e3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.3",
      "size": 16926,
      "upload_time": "2019-11-20T06:34:50",
      "upload_time_iso_8601": "2019-11-20T06:34:50.498919Z",
      "url": "https://files.pythonhosted.org/packages/aa/38/c59306920d3b9e4104f30228f1206a4cb7ad3b5c187d62dc602905d54c40/walrus-compiler-0.0.0.dev0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}