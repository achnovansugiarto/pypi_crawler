{
  "info": {
    "author": "Creu Blanca, Odoo Community Association (OCA)",
    "author_email": "support@odoo-community.org",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Odoo",
      "Framework :: Odoo :: 15.0",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Programming Language :: Python"
    ],
    "description": "=========\nIoT Input\n=========\n\n.. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fiot-lightgray.png?logo=github\n    :target: https://github.com/OCA/iot/tree/15.0/iot_input_oca\n    :alt: OCA/iot\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/iot-15-0/iot-15-0-iot_input_oca\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runbot-Try%20me-875A7B.png\n    :target: https://runbot.odoo-community.org/runbot/269/15.0\n    :alt: Try me on Runbot\n\n|badge1| |badge2| |badge3| |badge4| |badge5| \n\nThis addon allows to use a device in order to input data to odoo automatically.\n\nIt opens a URL that a device can use to connect (with a password) that can only\nexecute an specific action.\n\nInputs are useful when a device wants to communicate to odoo for a single\nand simple action.\nThis way, the device does not need to be configured with a odoo user and\npassword, it is handled by odoo devices.\n\nExamples:\n\n* Sending the temperature every three minutes.\n* Sending the RFID that the device has received in order to perform some action\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nUsage\n=====\n\nThere are two endpoints you can use:\nEndpoint 1: /iot/<serial>/action\n\nTakes `application/x-www-form-urlencoded` parameters:\npassphase, value (where value is a JSON object)\n\n1. Create a Device on `IoT > Config Devices`\n2. Access the Inputs section of the device\n3. Create an input. You must define a serial, passphrase, function and model\n\nThe function that the system will call must be of the following kind::\n\n    @api.model\n        def call_function(self, key):\n        return {}\n\nWhere `key` is the input string send by the device and the result must be a dictionary\nthat will be responded to the device as a JSON.\n\nEndpoint 2: /iot/<device_identification>/multi_input\nIt can be used to send values with multiple data in one POST request such as:\n- Values for inputs of the same device with different address (multi input)\n- Values for inputs of the same device with same address, different values (multi event)\n- Mix of the above (multi input, multi event)\n\nTakes `application/x-www-form-urlencoded` parameters:\npassphase, values (a JSON array of JSON objects)\n\nIt is called using device_identification and passing two POST parameters: device passphrase and\na JSON string containing an array of values for input\n- The value for the `address` key can be a string or a numeric (to conserve bytes in memory\nrestricted devices when creating the JSON object) and is converted to string when parsing.\n- The value for the `value` key can either be string, number or boolean according to\nJSON specs.\nYou can see an example of a valid JSON input object in the examples folder, using a few\ncombinations.\n\nIt requires the function that the system will call must be of the following kind::\n\n    @api.model\n        def call_function(self, key):\n        'do something\n        if err:\n            return {'status': 'error', 'message': 'The error message you want to send to the device'}\n        return {'status': 'ok', 'message': 'Optional success message'}\n\nWhere `key` is a dict send by the device having at least value for keys: 'address', 'value'\n\nThe function must always return a JSON with status and message. If value contains a value\nwith 'uuid' as key, it is returned along with the object for the IoT device to identify\nsuccess/failure per record.\n\nIt has full error reporting and the return value is a JSON array of dicts containing at\nleast status and message. Error message respose is at some points generic, though\nextended logging is done in Odoo server logs.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/iot/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us smashing it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/iot/issues/new?body=module:%20iot_input_oca%0Aversion:%2015.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n~~~~~~~\n\n* Creu Blanca\n\nContributors\n~~~~~~~~~~~~\n\n* Enric Tobella <etobella@creublanca.es>\n* Dimitrios Tanis <dtanis@tanisfood.gr>\n\nMaintainers\n~~~~~~~~~~~\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\n.. |maintainer-etobella| image:: https://github.com/etobella.png?size=40px\n    :target: https://github.com/etobella\n    :alt: etobella\n\nCurrent `maintainer <https://odoo-community.org/page/maintainer-role>`__:\n\n|maintainer-etobella| \n\nThis module is part of the `OCA/iot <https://github.com/OCA/iot/tree/15.0/iot_input_oca>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/OCA/iot",
    "keywords": "",
    "license": "AGPL-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "odoo-addon-iot-input-oca",
    "package_url": "https://pypi.org/project/odoo-addon-iot-input-oca/",
    "platform": null,
    "project_url": "https://pypi.org/project/odoo-addon-iot-input-oca/",
    "project_urls": {
      "Homepage": "https://github.com/OCA/iot"
    },
    "release_url": "https://pypi.org/project/odoo-addon-iot-input-oca/15.0.1.0.0.8/",
    "requires_dist": [
      "odoo-addon-iot-oca (<15.1dev,>=15.0dev)",
      "odoo (<15.1dev,>=15.0a)"
    ],
    "requires_python": ">=3.8",
    "summary": "IoT Input module",
    "version": "15.0.1.0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17521355,
  "releases": {
    "15.0.1.0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a19df1c4e7c5f2dbfd54f1a6faf30e5dd32914f9d2c16ce1fadb2ae2ce7030c3",
          "md5": "e5cc931f221085cd64e23175c1e7f1e7",
          "sha256": "77eb370d23d0b2f05dfd342f5dba4780c9b5a740a04521bd35462595f2582226"
        },
        "downloads": -1,
        "filename": "odoo_addon_iot_input_oca-15.0.1.0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5cc931f221085cd64e23175c1e7f1e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 32941,
        "upload_time": "2022-05-12T08:00:06",
        "upload_time_iso_8601": "2022-05-12T08:00:06.579965Z",
        "url": "https://files.pythonhosted.org/packages/a1/9d/f1c4e7c5f2dbfd54f1a6faf30e5dd32914f9d2c16ce1fadb2ae2ce7030c3/odoo_addon_iot_input_oca-15.0.1.0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "15.0.1.0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76631d001f422f622a10c3a5d2386ccf506630cd0ceffca5378524a346c708ac",
          "md5": "f77f94eec1155f3649b54304ac0492c9",
          "sha256": "b9d82dc135824402d073b2ced0c4570287d70c12242f7cbbf8bb7d44a562e489"
        },
        "downloads": -1,
        "filename": "odoo_addon_iot_input_oca-15.0.1.0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f77f94eec1155f3649b54304ac0492c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 34495,
        "upload_time": "2022-06-04T03:17:42",
        "upload_time_iso_8601": "2022-06-04T03:17:42.988641Z",
        "url": "https://files.pythonhosted.org/packages/76/63/1d001f422f622a10c3a5d2386ccf506630cd0ceffca5378524a346c708ac/odoo_addon_iot_input_oca-15.0.1.0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "15.0.1.0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dacf7efe4171511b41b6444028def5f7933ec0e227463baa67999ba1eda622b4",
          "md5": "0000521989c6d4404d7337b205658eb7",
          "sha256": "7afb8061ec260a5b1daa38f9ee72901894a3ba761d480c0128af1ac7db0e496b"
        },
        "downloads": -1,
        "filename": "odoo_addon_iot_input_oca-15.0.1.0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0000521989c6d4404d7337b205658eb7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 36042,
        "upload_time": "2023-03-24T04:56:59",
        "upload_time_iso_8601": "2023-03-24T04:56:59.166236Z",
        "url": "https://files.pythonhosted.org/packages/da/cf/7efe4171511b41b6444028def5f7933ec0e227463baa67999ba1eda622b4/odoo_addon_iot_input_oca-15.0.1.0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "15.0.1.0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c45911e2f47364e4d57bf8bb44638ce6c0e0b485dcd06ea3dee9415eeae146f2",
          "md5": "d74ed98813e8a20bea8cd88746d957a3",
          "sha256": "6a78473035c5b5ca37960bbb7f0e33e4fdf28ee7ff749830d261b9927b42b94b"
        },
        "downloads": -1,
        "filename": "odoo_addon_iot_input_oca-15.0.1.0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d74ed98813e8a20bea8cd88746d957a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 36040,
        "upload_time": "2023-03-31T04:32:50",
        "upload_time_iso_8601": "2023-03-31T04:32:50.376693Z",
        "url": "https://files.pythonhosted.org/packages/c4/59/11e2f47364e4d57bf8bb44638ce6c0e0b485dcd06ea3dee9415eeae146f2/odoo_addon_iot_input_oca-15.0.1.0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c45911e2f47364e4d57bf8bb44638ce6c0e0b485dcd06ea3dee9415eeae146f2",
        "md5": "d74ed98813e8a20bea8cd88746d957a3",
        "sha256": "6a78473035c5b5ca37960bbb7f0e33e4fdf28ee7ff749830d261b9927b42b94b"
      },
      "downloads": -1,
      "filename": "odoo_addon_iot_input_oca-15.0.1.0.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d74ed98813e8a20bea8cd88746d957a3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 36040,
      "upload_time": "2023-03-31T04:32:50",
      "upload_time_iso_8601": "2023-03-31T04:32:50.376693Z",
      "url": "https://files.pythonhosted.org/packages/c4/59/11e2f47364e4d57bf8bb44638ce6c0e0b485dcd06ea3dee9415eeae146f2/odoo_addon_iot_input_oca-15.0.1.0.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}