{
  "info": {
    "author": "vojtech",
    "author_email": "petru.vojtech@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Other/Proprietary License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "# Dataloaders for Django and Strawberry\nA set of tools for using dataloaders with [Django](https://github.com/django/django) \nand [Strawberry](https://github.com/strawberry-graphql/strawberry) without unnecessary boilerplate.\n\n## Installation\n\n```bash\npip install strawberry-django-dataloaders\n```\n\n\n# Usage & examples\nThis package provides 3 levels of generating dataloaders, each offering higher level of abstraction\nthan the previous one.\n\n### View\nIn the `graphql/` endpoint where you wish to use dataloaders, use (or subclass) `DataloaderAsyncGraphQLView`.\nThis is necessary because created dataloaders are stored to the request context. This ensures that:\n\n- fresh dataloader instances are created for each request\n- a dataloader persists for the duration of the request\n\nwhich are both important properties for loaded values caching.\n\n```python\nfrom django.urls import path\n\nfrom strawberry_django_dataloaders.views import DataloaderAsyncGraphQLView\n\nurlpatterns = [\n    path('graphql/', DataloaderAsyncGraphQLView.as_view(schema=...)),\n]\n```\n\n### Models definition\nDefinition of models used in the examples.\n```python\nfrom django.db import models\n\nclass Fruit(models.Model):\n    plant = models.OneToOneField(\"FruitPlant\", ...)\n    color = models.ForeignKey(\"Color\", ...)\n    varieties = models.ManyToManyField(\"FruitVariety\", ..., related_name=\"fruits\")\n\nclass FruitEater(models.Model):\n    favourite_fruit = models.ForeignKey(\"Fruit\", ..., related_name=\"eaters\")\n```\n### Level 1: Simple dataloader\nOn the first level, we're defining and using different dataloader for each relationship.\n#### One-to-one and Many-to-one relationship\n1. Define the dataloaders\n```python\nfrom strawberry_django_dataloaders import dataloaders\n\nclass ColorPKDataLoader(dataloaders.BasicPKDataLoader):\n    model = models.Color\n\n\nclass FruitPlantPKDataLoader(dataloaders.BasicPKDataLoader):\n    model = models.FruitPlant\n```\n2. Use them when defining the Strawberry type\n```python\n@strawberry_django.type(models.Fruit)\nclass FruitType:\n    id: strawberry.auto\n    \n    ### ↓ HERE ↓ ###\n    @strawberry.field\n    async def color(self: \"models.Fruit\", info: \"Info\") -> ColorType | None:\n        return await dataloaders.ColorPKDataLoader(context=info.context).load(self.color_id)\n\n    @strawberry.field\n    async def plant(self: \"models.Fruit\", info: \"Info\") -> FruitPlantType | None:\n        return await dataloaders.FruitPlantPKDataLoader(context=info.context).load(self.plant_id)\n```\n\n#### One-to-many relationship\n1. Define the dataloader\n```python\nfrom strawberry_django_dataloaders import dataloaders\n\nclass FruitEatersReverseFKDataLoader(dataloaders.BasicReverseFKDataLoader):\n    model = models.FruitEater\n    reverse_path = \"favourite_fruit_id\"   # <-- is the \"reverse\" FK field from FruitEater to Fruit model\n```\n2. Use it when defining the Strawberry type\n```python\n@strawberry_django.type(models.Fruit)\nclass FruitType:\n    id: strawberry.auto\n    \n    ### ↓ HERE ↓ ###\n    @strawberry.field\n    async def eaters(self: \"models.Fruit\", info: \"Info\") -> list[FruitEaterType]:\n        return await dataloaders.FruitEatersReverseFKDataLoader(context=info.context).load(self.pk)\n```\n\n### Level 2: Dataloader factories\nWhen using the dataloader factories, we no longer need to define a dataloader for each relation.\n```python\nfrom strawberry_django_dataloaders import factories\n\n\n@strawberry_django.type(models.Fruit)\nclass FruitTypeDataLoaderFactories:\n    id: strawberry.auto\n    \n    ### ↓ ONE-TO-ONE AND MANY-TO-ONE DATALOADERS ↓ ###\n    @strawberry.field\n    async def color(self: \"models.Fruit\", info: \"Info\") -> ColorType | None:\n        loader = factories.PKDataLoaderFactory.get_loader_class(\"tests.Color\")\n        return await loader(context=info.context).load(self.color_id)\n\n    @strawberry.field\n    async def plant(self: \"models.Fruit\", info: \"Info\") -> FruitPlantType | None:\n        loader = factories.PKDataLoaderFactory.get_loader_class(\"tests.FruitPlant\")\n        return await loader(context=info.context).load(self.plant_id)\n    \n    ### ↓ ONE-TO-MANY DATALOADER ↓ ###\n    @strawberry.field\n    async def eaters(self: \"models.Fruit\", info: \"Info\") -> list[FruitEaterType]:\n        loader = factories.ReverseFKDataLoaderFactory.get_loader_class(\n            \"tests.FruitEater\",\n            reverse_path=\"favourite_fruit_id\",\n        )\n        return await loader(context=info.context).load(self.color_id)\n```\n\n### Level 3: Auto dataloader field\nA field used in a similar fashion as native Django strawberry field, but it has auto-defined correct dataloader handler\nbased on the field relationship.\n```python\nfrom strawberry_django_dataloaders import fields \n\n@strawberry_django.type(models.Fruit)\nclass FruitTypeAutoDataLoaderFields:\n    id: strawberry.auto\n    color: ColorType = fields.auto_dataloader_field()\n    plant: FruitPlantType = fields.auto_dataloader_field()\n    varieties: list[FruitVarietyType] = fields.auto_dataloader_field()\n    eaters: list[FruitEaterType] = fields.auto_dataloader_field()\n```\n\n## Contributing\nPull requests for any improvements are welcome.\n\n[Poetry](https://github.com/sdispater/poetry) is used to manage dependencies.\nTo get started follow these steps:\n\n```shell\ngit clone https://github.com/VojtechPetru/strawberry-django-dataloaders\ncd strawberry-django-dataloaders\npoetry install\npoetry run pytest\n```\n\n### Pre commit\n\nWe have a configuration for\n[pre-commit](https://github.com/pre-commit/pre-commit), to add the hook run the\nfollowing command:\n\n```shell\npre-commit install\n```\n\n## Links\n- Inspired and builds on top of a great article at: https://alexcleduc.com/posts/graphql-dataloader-composition/\n- Repository: https://github.com/VojtechPetru/strawberry-django-dataloaders\n- Issue tracker: https://github.com/VojtechPetru/strawberry-django-dataloaders/issues. \nIn case of sensitive bugs (e.g. security vulnerabilities) please contact me at _petru.vojtech@gmail.com_ directly.\n\n## Known issues/shortcomings\n- `Many-to-many` relation is currently not supported.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/VojtechPetru/strawberry-django-dataloaders",
    "keywords": "strawberry,django,graphql,dataloader",
    "license": "LICENSE.md",
    "maintainer": "",
    "maintainer_email": "",
    "name": "strawberry-django-dataloaders",
    "package_url": "https://pypi.org/project/strawberry-django-dataloaders/",
    "platform": null,
    "project_url": "https://pypi.org/project/strawberry-django-dataloaders/",
    "project_urls": {
      "Homepage": "https://github.com/VojtechPetru/strawberry-django-dataloaders",
      "Repository": "https://github.com/VojtechPetru/strawberry-django-dataloaders"
    },
    "release_url": "https://pypi.org/project/strawberry-django-dataloaders/0.1.3/",
    "requires_dist": [
      "Django (>=3.2)",
      "strawberry-graphql-django (>=0.4,<0.5)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "A set of tools for using dataloaders with Django and Strawberry GraphQL.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14750744,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1aad9ff235abb9fd57f4059dbb6479395bebc13d75ae2ca182bdbadc7f7fe773",
          "md5": "d94a5b49b6ae58e3747ed906eeca2401",
          "sha256": "96b58f6d9971a7003a796b07b896df615bb29bb308b50eea1adef9feccd89615"
        },
        "downloads": -1,
        "filename": "strawberry_django_dataloaders-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d94a5b49b6ae58e3747ed906eeca2401",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 7539,
        "upload_time": "2022-08-13T13:07:41",
        "upload_time_iso_8601": "2022-08-13T13:07:41.013787Z",
        "url": "https://files.pythonhosted.org/packages/1a/ad/9ff235abb9fd57f4059dbb6479395bebc13d75ae2ca182bdbadc7f7fe773/strawberry_django_dataloaders-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb5c7cba0999246aaf6c9c22a86073f04f4660291a5ea5f46b9a59cbb328b59d",
          "md5": "5605732f3c74d4299069e147f841ff7a",
          "sha256": "ead87aef1d50054d781063a02cfb63b48c991e2ec0ddbbda5ee2fd282660e562"
        },
        "downloads": -1,
        "filename": "strawberry-django-dataloaders-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5605732f3c74d4299069e147f841ff7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 4846,
        "upload_time": "2022-08-13T13:07:37",
        "upload_time_iso_8601": "2022-08-13T13:07:37.684386Z",
        "url": "https://files.pythonhosted.org/packages/fb/5c/7cba0999246aaf6c9c22a86073f04f4660291a5ea5f46b9a59cbb328b59d/strawberry-django-dataloaders-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dab6b69d81eae5e230bca830b4235156a8b75f68be54386e53c3a754381ee37",
          "md5": "a606492d8a7fb9f8537bea252442d879",
          "sha256": "bc4a693749b81535f5dc33453b56813fb6bdfcb5dc5260ee919806a1fdc959bd"
        },
        "downloads": -1,
        "filename": "strawberry_django_dataloaders-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a606492d8a7fb9f8537bea252442d879",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 10060,
        "upload_time": "2022-08-13T13:46:09",
        "upload_time_iso_8601": "2022-08-13T13:46:09.165624Z",
        "url": "https://files.pythonhosted.org/packages/6d/ab/6b69d81eae5e230bca830b4235156a8b75f68be54386e53c3a754381ee37/strawberry_django_dataloaders-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "076445bd5e6bb19bf82e0ea006c0afe2ee252134292dc507655325022c62156b",
          "md5": "a3040b43931148c3a3429161bfa339ea",
          "sha256": "fa38311ef6004685f3966fcff7c02f6300e97dedcb6beeecc726b82dc31c533e"
        },
        "downloads": -1,
        "filename": "strawberry-django-dataloaders-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a3040b43931148c3a3429161bfa339ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 8742,
        "upload_time": "2022-08-13T13:46:06",
        "upload_time_iso_8601": "2022-08-13T13:46:06.922112Z",
        "url": "https://files.pythonhosted.org/packages/07/64/45bd5e6bb19bf82e0ea006c0afe2ee252134292dc507655325022c62156b/strawberry-django-dataloaders-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38a521cf8cc5e94db82e5b4f9c179885d983bfc33407a1d85f45daa6fa075fa8",
          "md5": "e75b0de7dd89289d6c8effda59975d6a",
          "sha256": "97168321fd429d31d1634fd0ab4c8e43b687dcdee6255ce4dcdf82bfdcced865"
        },
        "downloads": -1,
        "filename": "strawberry_django_dataloaders-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e75b0de7dd89289d6c8effda59975d6a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 10104,
        "upload_time": "2022-08-13T13:52:41",
        "upload_time_iso_8601": "2022-08-13T13:52:41.694455Z",
        "url": "https://files.pythonhosted.org/packages/38/a5/21cf8cc5e94db82e5b4f9c179885d983bfc33407a1d85f45daa6fa075fa8/strawberry_django_dataloaders-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40a85453999c051e95990cd5e70eee4a4162c6fc9ea902b94941feada8d30d16",
          "md5": "ddf42a2ccccf53d3c6ab8ad79d4d8f3f",
          "sha256": "045c3a37fb1992ea0c433556da68657a7c709df3db1353dfb3ad19a233f63aa0"
        },
        "downloads": -1,
        "filename": "strawberry-django-dataloaders-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ddf42a2ccccf53d3c6ab8ad79d4d8f3f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 8835,
        "upload_time": "2022-08-13T13:52:39",
        "upload_time_iso_8601": "2022-08-13T13:52:39.832981Z",
        "url": "https://files.pythonhosted.org/packages/40/a8/5453999c051e95990cd5e70eee4a4162c6fc9ea902b94941feada8d30d16/strawberry-django-dataloaders-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cef13222fc93d6d99d42860bbc60849cbbafa67b5122edd510ac343c5b29caa",
          "md5": "16374ad02dbc1657a20249d867440bf8",
          "sha256": "1a719c640b37c7f19e277c1fc3fb6fec33d1fcfef9b78638f827711acf9d53ec"
        },
        "downloads": -1,
        "filename": "strawberry_django_dataloaders-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16374ad02dbc1657a20249d867440bf8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 10333,
        "upload_time": "2022-08-13T17:27:19",
        "upload_time_iso_8601": "2022-08-13T17:27:19.379613Z",
        "url": "https://files.pythonhosted.org/packages/3c/ef/13222fc93d6d99d42860bbc60849cbbafa67b5122edd510ac343c5b29caa/strawberry_django_dataloaders-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81df14ec7555728bb68fa272d2dba3c49b95f435d3d0bc0dbaf492d160caa449",
          "md5": "17e014684784c73ea0b33c41ff963500",
          "sha256": "8fe2e1f994d0c52fe3adde91c9a502b13b3bfac376891b2c63c66efe0af022d3"
        },
        "downloads": -1,
        "filename": "strawberry-django-dataloaders-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "17e014684784c73ea0b33c41ff963500",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 9282,
        "upload_time": "2022-08-13T17:27:17",
        "upload_time_iso_8601": "2022-08-13T17:27:17.792235Z",
        "url": "https://files.pythonhosted.org/packages/81/df/14ec7555728bb68fa272d2dba3c49b95f435d3d0bc0dbaf492d160caa449/strawberry-django-dataloaders-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3cef13222fc93d6d99d42860bbc60849cbbafa67b5122edd510ac343c5b29caa",
        "md5": "16374ad02dbc1657a20249d867440bf8",
        "sha256": "1a719c640b37c7f19e277c1fc3fb6fec33d1fcfef9b78638f827711acf9d53ec"
      },
      "downloads": -1,
      "filename": "strawberry_django_dataloaders-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "16374ad02dbc1657a20249d867440bf8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 10333,
      "upload_time": "2022-08-13T17:27:19",
      "upload_time_iso_8601": "2022-08-13T17:27:19.379613Z",
      "url": "https://files.pythonhosted.org/packages/3c/ef/13222fc93d6d99d42860bbc60849cbbafa67b5122edd510ac343c5b29caa/strawberry_django_dataloaders-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "81df14ec7555728bb68fa272d2dba3c49b95f435d3d0bc0dbaf492d160caa449",
        "md5": "17e014684784c73ea0b33c41ff963500",
        "sha256": "8fe2e1f994d0c52fe3adde91c9a502b13b3bfac376891b2c63c66efe0af022d3"
      },
      "downloads": -1,
      "filename": "strawberry-django-dataloaders-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "17e014684784c73ea0b33c41ff963500",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 9282,
      "upload_time": "2022-08-13T17:27:17",
      "upload_time_iso_8601": "2022-08-13T17:27:17.792235Z",
      "url": "https://files.pythonhosted.org/packages/81/df/14ec7555728bb68fa272d2dba3c49b95f435d3d0bc0dbaf492d160caa449/strawberry-django-dataloaders-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}