{
  "info": {
    "author": "",
    "author_email": "HivertMoZara <worldmozara@163.com>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# permtab\n\nA simple permission rule parsing library.\n\n## Installation\n\nInstall permtab via `pip`:\n\n```console\npip install permtab\n```\n\n## Format\n\nPermtab uses a syntax similar to crontab, although it is actually a reversed version. Actually, the `shlex` is used for parsing.\n\n```bash\n# *.permtab\n<rulename> <filter...>\n```\n\nHere `filter` has the same meaning with `rule` and `condition`.\n\n> NOTE: Leading a rule to `True` only needs one filter that returns `True`.\n\nHere is an example:\n\n```bash\nmyrule1     owner_1234  operator_8525   operator_8390\nmyrule2     text_hello  text_world      \"text_hello world!\"\n*           user_any\n# The tab rule with name '*' is considered a base rule.\n# If not defined, the default rule will pass everything to other rules.\n```\n\n## Rule factory\n\nRule factory is a function which exports a checker function.\n\nThis is a generic definition:\n\n```python\nimport permtab\n\ndef factory(*args, **kwargs):\n    def _checker(*args, **kwargs):\n        return CONDITION\n    return _checker\n\npermtab.register_rulefactory(REGEX_FOR_THE_FACTORY, factory)\n```\n\nExactly, the parameters for rule factory and checker depend on their use.\n\nThe parameters for rule factory is decided by groups in provided regex.\nAll groups that matched are unpacked to positional arguments, and all named\ngroups that matched are unpacked to keyword arguments.\n\nCheckers' parameters are decided by where the checker called.\n\n> NOTE: Parameters provided by named groups are all in common groups.\n>\n> NOTE: Dependency injection will not work by default, so you must patch some\n> functions to export new functions that support dependency injection if\n> needed.\n\n## Loading and using permtab\n\nThis step is quite easy:\n\n```python\nimport permtab\n\npermtab.load(\"/path/to/your.permtab\")  # load \"/path/to/your.permtab\"\n\nrule = permtab.find_rule(\"your_rule_name\")  # get rule function, then use it\n\ndef f():\n    if rule(...):\n        ...  # run if the condition is satisfied\n    else:\n        ...  # otherwise\n```\n\n## Editing a permtab\n\nEditing uses a `+` and `-` marker on a rule to control changes.\n\nHere is an example:\n\n```python\nimport permtab\n\nparsed = permtab.parse(\"test.permtab\")\n# DO NOT parse and edit the SAME FILE at the same time\n# Otherwise your data may be lost\n\nwith open(\"test.permtab\", \"w\") as f:\n    f.writelines(\n        permtab.edit(\n            parsed,\n            {\n                \"myrule1\": (\"-t_aeiou\", \"-t_hello world!\"),\n                # add a `-` to remove an existing rule\n                \"myrule2\": (\"+t_hellp\",),\n                # add a `+` to add a new rule\n                \"myrule3\": (\"+t_foo\", \"+t_bar\", \"-t_foo\")\n                # `+` and `-` operation can take effect at the same time\n                # duplicate changes will be evaluated\n            }\n        )\n    )\n\npermtab.reset_rule()  # remove rules previously loaded\npermtab.load(\"test.permtab\")  # reload new permtab\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "permtab",
    "package_url": "https://pypi.org/project/permtab/",
    "platform": null,
    "project_url": "https://pypi.org/project/permtab/",
    "project_urls": {
      "Homepage": "https://github.com/NCBM/permtab",
      "Repository": "https://github.com/NCBM/permtab"
    },
    "release_url": "https://pypi.org/project/permtab/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "A simple permission rule parsing library.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17272898,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2170064ad37e7bd48e197e3e65e20efd554a6ed2d9358b1b8acf6fd4ee864b1c",
          "md5": "390d953b6f46453dc522a634e561de7f",
          "sha256": "970f0ccd8e18359877e3f49299ef9dc0e6c9d9a0e804533fe8c2f4be84dcca8a"
        },
        "downloads": -1,
        "filename": "permtab-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "390d953b6f46453dc522a634e561de7f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 5911,
        "upload_time": "2023-03-13T15:21:16",
        "upload_time_iso_8601": "2023-03-13T15:21:16.786040Z",
        "url": "https://files.pythonhosted.org/packages/21/70/064ad37e7bd48e197e3e65e20efd554a6ed2d9358b1b8acf6fd4ee864b1c/permtab-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "635149c7bbc495ed60066e653d6ccb68ea76f38c4c00c6b3e2df57ec755c2503",
          "md5": "bcb99bd280152806934ad8588324a68f",
          "sha256": "e65b62f2cf97b58ac47162df1d167307eb67487d2ed135d7fc4cbabc1c751f76"
        },
        "downloads": -1,
        "filename": "permtab-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bcb99bd280152806934ad8588324a68f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 4908,
        "upload_time": "2023-03-13T15:21:18",
        "upload_time_iso_8601": "2023-03-13T15:21:18.059625Z",
        "url": "https://files.pythonhosted.org/packages/63/51/49c7bbc495ed60066e653d6ccb68ea76f38c4c00c6b3e2df57ec755c2503/permtab-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2170064ad37e7bd48e197e3e65e20efd554a6ed2d9358b1b8acf6fd4ee864b1c",
        "md5": "390d953b6f46453dc522a634e561de7f",
        "sha256": "970f0ccd8e18359877e3f49299ef9dc0e6c9d9a0e804533fe8c2f4be84dcca8a"
      },
      "downloads": -1,
      "filename": "permtab-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "390d953b6f46453dc522a634e561de7f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 5911,
      "upload_time": "2023-03-13T15:21:16",
      "upload_time_iso_8601": "2023-03-13T15:21:16.786040Z",
      "url": "https://files.pythonhosted.org/packages/21/70/064ad37e7bd48e197e3e65e20efd554a6ed2d9358b1b8acf6fd4ee864b1c/permtab-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "635149c7bbc495ed60066e653d6ccb68ea76f38c4c00c6b3e2df57ec755c2503",
        "md5": "bcb99bd280152806934ad8588324a68f",
        "sha256": "e65b62f2cf97b58ac47162df1d167307eb67487d2ed135d7fc4cbabc1c751f76"
      },
      "downloads": -1,
      "filename": "permtab-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bcb99bd280152806934ad8588324a68f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 4908,
      "upload_time": "2023-03-13T15:21:18",
      "upload_time_iso_8601": "2023-03-13T15:21:18.059625Z",
      "url": "https://files.pythonhosted.org/packages/63/51/49c7bbc495ed60066e653d6ccb68ea76f38c4c00c6b3e2df57ec755c2503/permtab-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}