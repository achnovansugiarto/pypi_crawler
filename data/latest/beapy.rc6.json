{
  "info": {
    "author": "hotzsauce",
    "author_email": "githotz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# BEApy\n\nA pandas-based python package for programatically requesting data from the U.S. Bureau of Economic Analysis (BEA).\n\n## Installation\n\n`BEApy` is registered on PyPI, so just use pip to install:\n```console\npip install beapy\n```\nor\n```console\npython3 -m pip install beapy\n```\n\n## Requesting Economic Data\n\nThe BEA organizes its data into the following datasets:\n- National Income & Product Accounts (NIPA)\n- National Income Underlying Detail (NIUnderlyingDetail)\n- Multinational Enterprises (MNE)\n- Standard Fixed Assets (FixedAssets)\n- International Transaction Accounts (ITA)\n- International Investment Position (IIP)\n- Input-Output Data (InputOutput)\n- International Services Trade (IntlServTrade)\n- GDP by Industry (GDPByIndustry)\n- Regional Economic Data (Regional)\n- Underlying GDP by Industry (UnderlyingGDPByIndustry)\n\nThe terms in parantheses above are the labels to use when accessing the corresponding dataset using `BEApy`. \n\n#### Dataset Data\n\nWe first initialize an instance of the `beapy.BEA` class, providing it with your personal BEA API key (request a free key [here](https://apps.bea.gov/API/signup/index.cfm)). Then provide the dataset name, table name, and data frequency:\n\n```python\n>>> import beapy\n\n>>> bea = beapy.BEA(key=your_personal_api_key)\n>>> res = bea.data('nipa', tablename='t10101', frequency='a') # DataResponse\n```\nThis would return a `DataResponse` object that stores the annual data of table 't10101' in its `.data` property, and the associated metadata in `.metadata`, both of which are `pandas` DataFrames. (See below for how to assign more intuitive, human-readable, names to the tables). The `bea.data()` method's keywords necessary to construct a valid API call vary from dataset to dataset; the full list for each one can be retrieved using the`bea.parameter_list(dataset)` method.\n\nThis second example retrieves monthly underlying data for 2015 & 2016:\n```python\n>>> res = bea.data('underlying', tablename='u70205s', frequency='m', year=['2015', '2016'])\n>>> res.data\n\n        ALLO03     AUTO35     AUTO40  ...    UPR02    UPR03    UPR05\n2015M01  45.83  3726400.0  3542200.0  ...  28471.0  26743.0  24139.0\n2015M02  46.03  3619700.0  3481400.0  ...  28797.0  26946.0  24214.0\n2015M03  45.77  3924700.0  3740500.0  ...  29038.0  26982.0  24199.0\n  ...     ...      ...        ...     ...    ...      ...      ...\n2016M10  45.63  3382600.0  3173400.0  ...  29132.0  27052.0  24529.0\n2016M11  44.85  3450200.0  3126100.0  ...  28635.0  26812.0  24411.0\n2016M12  45.47  3447900.0  3216700.0  ...  28492.0  26897.0  24466.0\n[24 rows x 44 columns]\n```\nNote the index is not formatted as a `pandas` DatetimeIndex, as might be expected. This is because the BEA API can return data of multiple frequencies within the same request, formatting the periods as `yyyy`, `yyyyQq`, and `yyyyMmm` for annual, quarterly, and monthly data, respectively. Casting these to Datetimes would mean, for example, '2000', '2000Q1', and '2000M01' would be indistinguishable. A `pandas` PeriodIndex would not be able to hold the Periods of differing frequencies.\n\n\n#### Dataset Metadata\n\nEach `DataResponse` object also stores the metadata for the requested table. Using the same response as in the last example, we access the metadata using the `.metadata` attribute:\n```python\n>>> res.metadata\n\n       TableName SeriesCode  ...  CL_UNIT                        Notes\nindex                        ...\nNSAT     U70205S       NSAT  ...    Level  Table 7.2.5S. Auto and T...\nNSAD     U70205S       NSAD  ...    Level  Table 7.2.5S. Auto and T...\nNSAF     U70205S       NSAF  ...    Level  Table 7.2.5S. Auto and T...\n ...       ...         ...   ...     ...              ...\nUPR03    U70205S      UPR03  ...    Level  Table 7.2.5S. Auto and T...\nUPR05    U70205S      UPR05  ...    Level  Table 7.2.5S. Auto and T...\nCPA43    U70205S      CPA43  ...    Level  Table 7.2.5S. Auto and T...\n```\nThe information stored in this DataFrame varies from dataset to dataset. For this request, the metadata fields are\n```python\n>>> res.metadata.columns\n\nIndex(['TableName', 'SeriesCode', 'LineNumber', 'LineDescription',\n       'METRIC_NAME', 'CL_UNIT', 'Notes'],\n      dtype='object')\n```\nA lot of the meta information relates to how the dataset is organized and displayed in the BEA tables. In this example, 'LineNumber'; in other examples, 'RowNumber', 'ColumnNumber', and the like. Other common ones are 'CL_UNIT' (level, percent change, etc.);  'METRIC_NAME' (Fisher Index, ratio, current dollars); and 'Notes', which are the footnotes of the BEA table.\n\n\n#### Identifying Series\n\nThe BEA doesn't seem to have a consistent term to identify series in a dataset table. The NIPA & NIUnderlyingDetail datasets use the term 'SeriesCode' to uniquely label a series in the data and metadata tables, whereas the IIP dataset uses 'TimeSeriesID'. The entries in these fields are used in the `.metadata` index labels, and the `.data` column labels.\n\nThe MNE dataset has a 'SeriesID' field, but it doesn't refer to a single variable in a table. Instead, the 'RowCode' & 'ColumnCode' are additionally needed to locate an individual series. In this case, the entries are concatenated together and separated by underscores to form the column/index labels. For example, a series in the MNE dataset with `SeriesID = 5`, `RowCode = 202`, and `ColumnCode = 5400` will be uniquely identified in the metadata index and data columns by withthe label `5_202_5400`.\n\nThe fields that are used to label series in a dataset are stored in the `.series_identifiers` property:\n```python\n>>> res = bea.data('mne', ...)\n>>> res.series_identifiers\n['SeriesID', 'RowCode', 'ColumnCode']\n```\n\n\n## Requesting Metadata\n\nBEA stores information about the datasets themselves as well, providing four different methods, which return three different subclasses of the `BEAResponse` class. \n\n#### Dataset List\nThe first metadata method simply retrieves the dataset names, along with short descriptions. The `.dataset_list()` method of `beapy.BEA` returns a `DatasetListResponse` object, with a dictionary of those names and descriptions:\n```python\n>>> import beapy\n\n>>> bea = beapy.BEA(key=your_personal_api_key)\n>>> res = bea.dataset_list()\n>>> for name, descr in res.datasets.items():\n>>>     print(name, ': ', desc)\n\n    'NIPA' :  'Standard NIPA tables'\n    'NIUnderlyingDetail' :  'Standard NI underlying detail tables'\n    'MNE' :  'Multinational Enterprises'\n    ...\n```\n\n#### Parameter List\nThe second method returns a `ParameterListResponse` object, with a dictionary of names and summaries of the parameters that can define an API call. Those parameters differ between datasets though, so some care must be taken.\n```python\n>>> res = bea.parameter_list('regional')\n>>> for name, desc in res.parameters.items():\n>>>     print(name, ': ', desc)\n\n'GeoFips' :  {'ParameterDataType': 'string', 'ParameterDescription': ...}\n'LineCode' :  {'ParameterIsRequiredFlag': '1', 'MultipleAcceptedFlag': '0', ...}\n'TableName' :  {'ParameterDescription': 'Regional income or product table', ...}\n'Year' :  {'ParameterDataType': 'string', ...}\n```\n\n#### Parameter Values\nThe third method returns the permissible values of a parameter:\n```python\n>>> res = bea.parameter_values('intlservtrade', parameter='tradedirection')\n>>> for k, v in res.parameters.items():\n>>>     print(k, ': ', v)\n\n'Balance' :  'Balance'\n'Exports' :  'Exports'\n'Imports' :  'Imports'\n'SupplementalIns' :  'Supplemental detail on insurance transactions'\n```\n\n#### Filtered Parameter Values\nThe final metadata method retrieves the permissible values of a parameter (called the *target parameter*) based on the other provided parameters, which are provided as keyword arguments. For example,\n```python\n>>> res = bea.filtered_parameter_values('regional', target='linecode', tablename='sainc1')\n>>> for k, v in res.parameters.items():\n>>>     print(k, ': ', v)\n\n'1' :  '[SAINC1] Personal income'\n'2' :  '[SAINC1] Population'\n'3' :  '[SAINC1] Per capita personal income'\n```\n\nMultiple parameters can be filtered on at the same time; just provide them as additional keyword arguments.\n```python\nres = bea.filtered_parameter_values('regional', target='year', tablename='cainc5n', geofips='01001')\n```\nThis returns a list of the valid years in the Regional table 'cainc5n' with geographic code '01001'.\n\n\n## Saving your API Key\n\nThe `beapy.BEA` class can be initialized with or without the BEA-provided key (go [here](https://apps.bea.gov/API/signup/index.cfm) to request your free API key). If the code isn't provided upon initialization, it is assumed your key has been saved with the built-in `beapy.save_key()` method.\n\nBefore you initialize the `BEA` class for the first time, use this method to record your key:\n```python\n>>> import beapy\n\n>>> beapy.save_key('YOUR_PERSONAL_API_KEY_FROM_BEA')\n>>> bea = beapy.BEA()\n```\n\nThe stored API key is automatically overwritten by further calls of the `beapy.save_key()` method.\n\n\n## Custom Table Names\n\nThe table names of the 'NIPA', 'NIUnderlyingDetail', and 'FixedAssets' datasets are not particularly informative or nice to look at. The `beapy` module provides methods that can be used to define custom table names that will be stored for future use.\n\nUse `beapy.define_table_name()` to create a custom reference:\n```python\n>>> res = bea.data('underlying', tablename='auto_output', year='2016') # raises a BEAAPIError\n>>> beapy.define_table_name(custom='auto_output', table_name='u70205s', dataset='underlying')\n>>> res = bea.data('underlying', tablename='auto_output', year='2016') # no Error; data in table 'u70205s' is returned\n```\n\nA similar method is provided to define other names for the datasets\n```python\nbeapy.define_dataset_name(custom: str, dataset_name: str)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.github.com/hotzsauce/bea-dev",
    "keywords": "economics,bea,bureau of economic analysis,nipa",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "beapy",
    "package_url": "https://pypi.org/project/beapy/",
    "platform": "",
    "project_url": "https://pypi.org/project/beapy/",
    "project_urls": {
      "Homepage": "https://www.github.com/hotzsauce/bea-dev"
    },
    "release_url": "https://pypi.org/project/beapy/0.2.4/",
    "requires_dist": [
      "numpy",
      "pandas",
      "requests"
    ],
    "requires_python": "",
    "summary": "A pandas-based python package for requesting data from the U.S. Bureau of Economic Analysis",
    "version": "0.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10308581,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b73fc706ccd443aed43a2a0c0348f2f2275bab1be877def80ffdcbdbc3db6cc3",
          "md5": "0e7a7f833f53067d02c02b4be9df7719",
          "sha256": "6f1ec701eb83b56cc566bae94097bcbf80bca8eb8f309aaa4d6b50d88a5f12f5"
        },
        "downloads": -1,
        "filename": "beapy-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e7a7f833f53067d02c02b4be9df7719",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21505,
        "upload_time": "2021-04-16T20:18:10",
        "upload_time_iso_8601": "2021-04-16T20:18:10.514043Z",
        "url": "https://files.pythonhosted.org/packages/b7/3f/c706ccd443aed43a2a0c0348f2f2275bab1be877def80ffdcbdbc3db6cc3/beapy-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4ad3c10cd8bc3ffcd09bbdbda5647c518aa91ef6425f7d7cdcfef60ba51d132",
          "md5": "6b9424ec66f088edb48657c06a7b2efa",
          "sha256": "b4af8096bb93bdb7821983561c6c2de3c977e813ce467bef9f27b6cb3cd8fa3f"
        },
        "downloads": -1,
        "filename": "beapy-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6b9424ec66f088edb48657c06a7b2efa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24017,
        "upload_time": "2021-04-16T20:18:12",
        "upload_time_iso_8601": "2021-04-16T20:18:12.159298Z",
        "url": "https://files.pythonhosted.org/packages/d4/ad/3c10cd8bc3ffcd09bbdbda5647c518aa91ef6425f7d7cdcfef60ba51d132/beapy-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b2a078cd1659506c537a676d864cb8c9e3edcaa25568508835b9ca9390f5737",
          "md5": "10b421604247a3078010cecdbdc84530",
          "sha256": "25c6c616bc9417ab4a6b2a9ec13e231e109bf3096181186c74d909b30a9cc3f2"
        },
        "downloads": -1,
        "filename": "beapy-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10b421604247a3078010cecdbdc84530",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21618,
        "upload_time": "2021-04-29T16:12:02",
        "upload_time_iso_8601": "2021-04-29T16:12:02.622635Z",
        "url": "https://files.pythonhosted.org/packages/7b/2a/078cd1659506c537a676d864cb8c9e3edcaa25568508835b9ca9390f5737/beapy-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a826be7fe8cc4c5132274f2699753e292eaacca4bd42b587d91d9c538071e61a",
          "md5": "88720aa5806e44339f8c270da6dce7bc",
          "sha256": "89323c2a68b3060d5209c845ea242de11425f936d59d2ca4d82fa5ebdd56b292"
        },
        "downloads": -1,
        "filename": "beapy-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "88720aa5806e44339f8c270da6dce7bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24212,
        "upload_time": "2021-04-29T16:12:04",
        "upload_time_iso_8601": "2021-04-29T16:12:04.566782Z",
        "url": "https://files.pythonhosted.org/packages/a8/26/be7fe8cc4c5132274f2699753e292eaacca4bd42b587d91d9c538071e61a/beapy-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a58ed72019367c75b3385f487cc218110c7838c75231d895766ce12f42a68423",
          "md5": "d93f6c105d55be85f19418ab7c16778d",
          "sha256": "c954fb5b20b9d986d50ec578f5f052f2a6edd7908fc4476b0fe51db6d40bd875"
        },
        "downloads": -1,
        "filename": "beapy-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d93f6c105d55be85f19418ab7c16778d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21686,
        "upload_time": "2021-05-09T14:44:45",
        "upload_time_iso_8601": "2021-05-09T14:44:45.220432Z",
        "url": "https://files.pythonhosted.org/packages/a5/8e/d72019367c75b3385f487cc218110c7838c75231d895766ce12f42a68423/beapy-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a75a85181b0a93d1e8264191af7dc5bf2a777bd619cbd2ede2f1bf586ddf8988",
          "md5": "bad01528fcc93fc44f1d33acbbc58276",
          "sha256": "4d149bbe3881029bf1ed5bc069bff576a03a49b74e622ec4ec917ddf0d23f7c5"
        },
        "downloads": -1,
        "filename": "beapy-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bad01528fcc93fc44f1d33acbbc58276",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24282,
        "upload_time": "2021-05-09T14:44:47",
        "upload_time_iso_8601": "2021-05-09T14:44:47.011131Z",
        "url": "https://files.pythonhosted.org/packages/a7/5a/85181b0a93d1e8264191af7dc5bf2a777bd619cbd2ede2f1bf586ddf8988/beapy-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d47e7d5004dfda2b1cd760988749dd7370b7e77be228405dfc4e146b736700b",
          "md5": "895ac7aa2286551a4b4db6f8c49e32df",
          "sha256": "1a03544f626d50d44a780d2daacf6040ec2cfba3cdb9125d7a0aea178b1f1a1e"
        },
        "downloads": -1,
        "filename": "beapy-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "895ac7aa2286551a4b4db6f8c49e32df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22778,
        "upload_time": "2021-05-09T19:42:54",
        "upload_time_iso_8601": "2021-05-09T19:42:54.679171Z",
        "url": "https://files.pythonhosted.org/packages/7d/47/e7d5004dfda2b1cd760988749dd7370b7e77be228405dfc4e146b736700b/beapy-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3163faa358544c0f20e996a5f1711d2c1a1b596bda2db1e496f6e440c6187857",
          "md5": "81d1b5dc0c93ac83da35e0668944888c",
          "sha256": "cdf5efcfa57c7a52d9b697208d6243c18bae7d93eb1ab5863725719cef736bba"
        },
        "downloads": -1,
        "filename": "beapy-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "81d1b5dc0c93ac83da35e0668944888c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25169,
        "upload_time": "2021-05-09T19:42:56",
        "upload_time_iso_8601": "2021-05-09T19:42:56.161049Z",
        "url": "https://files.pythonhosted.org/packages/31/63/faa358544c0f20e996a5f1711d2c1a1b596bda2db1e496f6e440c6187857/beapy-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac8109dbf0f30e53a425e74abb76d25a577f5d3376ed80dc1b64f98b700e97d8",
          "md5": "4bd85c1e0568e14817f8905dccd74da1",
          "sha256": "e958fd611a4246c83424342df3af86ada7704ac43572ef9e5367bcd23b7a0ced"
        },
        "downloads": -1,
        "filename": "beapy-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4bd85c1e0568e14817f8905dccd74da1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22574,
        "upload_time": "2021-05-10T13:50:55",
        "upload_time_iso_8601": "2021-05-10T13:50:55.423981Z",
        "url": "https://files.pythonhosted.org/packages/ac/81/09dbf0f30e53a425e74abb76d25a577f5d3376ed80dc1b64f98b700e97d8/beapy-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2f7882a776013906cac0cb27713f8be081cc3cd3dde6b1aa705b30202843e6a",
          "md5": "b16f8bbfa923d9ce1130d849325a88a3",
          "sha256": "2834ab9bd10f1501f65c800970fdd18cf6f8d9ab6e55dbacbe5c269ae0bbe0c8"
        },
        "downloads": -1,
        "filename": "beapy-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b16f8bbfa923d9ce1130d849325a88a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22575,
        "upload_time": "2021-05-10T13:55:15",
        "upload_time_iso_8601": "2021-05-10T13:55:15.560741Z",
        "url": "https://files.pythonhosted.org/packages/a2/f7/882a776013906cac0cb27713f8be081cc3cd3dde6b1aa705b30202843e6a/beapy-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "564b9822c2962fea024f28f8c4ef1c50aea93cecec351119f9110439391525eb",
          "md5": "b407a53fa46ffad0578e3d024fdbc2f0",
          "sha256": "ff1f815c7c8a8ac5ddb068204480ae9f6f538b1791b0b3482ff02b05f9b38383"
        },
        "downloads": -1,
        "filename": "beapy-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b407a53fa46ffad0578e3d024fdbc2f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24954,
        "upload_time": "2021-05-10T13:55:16",
        "upload_time_iso_8601": "2021-05-10T13:55:16.726454Z",
        "url": "https://files.pythonhosted.org/packages/56/4b/9822c2962fea024f28f8c4ef1c50aea93cecec351119f9110439391525eb/beapy-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2f7882a776013906cac0cb27713f8be081cc3cd3dde6b1aa705b30202843e6a",
        "md5": "b16f8bbfa923d9ce1130d849325a88a3",
        "sha256": "2834ab9bd10f1501f65c800970fdd18cf6f8d9ab6e55dbacbe5c269ae0bbe0c8"
      },
      "downloads": -1,
      "filename": "beapy-0.2.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b16f8bbfa923d9ce1130d849325a88a3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22575,
      "upload_time": "2021-05-10T13:55:15",
      "upload_time_iso_8601": "2021-05-10T13:55:15.560741Z",
      "url": "https://files.pythonhosted.org/packages/a2/f7/882a776013906cac0cb27713f8be081cc3cd3dde6b1aa705b30202843e6a/beapy-0.2.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "564b9822c2962fea024f28f8c4ef1c50aea93cecec351119f9110439391525eb",
        "md5": "b407a53fa46ffad0578e3d024fdbc2f0",
        "sha256": "ff1f815c7c8a8ac5ddb068204480ae9f6f538b1791b0b3482ff02b05f9b38383"
      },
      "downloads": -1,
      "filename": "beapy-0.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "b407a53fa46ffad0578e3d024fdbc2f0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24954,
      "upload_time": "2021-05-10T13:55:16",
      "upload_time_iso_8601": "2021-05-10T13:55:16.726454Z",
      "url": "https://files.pythonhosted.org/packages/56/4b/9822c2962fea024f28f8c4ef1c50aea93cecec351119f9110439391525eb/beapy-0.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}