{
  "info": {
    "author": "Haju Schulz",
    "author_email": "Haju Schulz <haju.schulz@online.de>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Pargen - A Tool for Flashable Parameter Container Creation\n\nPargen is an embedded development tool for generating parameters values that\ncan be stored in flash memory and maintained independently from the application.\nIt allows to alter/update parameter values without recompilations.\n\n![License](https://img.shields.io/badge/License-BSD%203--Clause-green)\n[![Python package](https://github.com/nhjschulz/flashcontainer/actions/workflows/push.yaml/badge.svg?branch=master)](https://github.com/nhjschulz/flashcontainer/actions/workflows/push.yaml)\n\n## Concept and Features\n\n![Concept](http://www.plantuml.com/plantuml/proxy?cache=no&src=https://raw.githubusercontent.com/nhjschulz/flashcontainer/master/overview.plantuml)\n\n* Read input from a schema validated XML file\n* Generate C-Source stubs for embedding into the application source amd testing environments\n* Generate Intel Hex files for flashing with a programmer\n* Generate GNU linker include file for mapping the parameter to absolute addresses\n\n## Installation\n\nThe package is available on Pypi and can be installed using\n\n    pip install flashcontainer\n\nA python 3.8 or higher version is required.\n\nThe parameter generator tool can then by called on cmdline using\n\n    $ pargen -h\n    usage: pargen [-h] [--ihex] [--csrc] [--gld] [--a2l] [--pyhexdump] [--destdir directory] [--filename basename] [--static] [--modify name=value] [--version] file\n    \n    pargen 0.4.0: A tool for generating flashable parameter container.\n    \n    positional arguments:\n      file                  name of the XML parameter definition file\n    \n    optional arguments:\n      -h, --help            show this help message and exit\n      --ihex                generate intelhex file\n      --csrc                generate c/c++ header and source files\n      --gld                 generate GNU linker include file for parameter symbol generation\n      --a2l                 generate A2L parameter description file\n      --pyhexdump           generate pyHexDump print configuration file\n      --destdir directory, -o directory\n                            specify output directory for generated files\n      --filename basename, -f basename\n                            set basename for generated files\n      --static, -s          create static comment output without dynamic elements like date and time\n      --modify name=value, -m name=value\n                            modify parameter value using name=value notation\n      --version             show program's version number and exit\n    \n    Copyright (c) 2022-2023 Haju Schulz <haju.schulz@online.de>. Visit https://github.com/nhjschulz/flashcontainer for full documentation and examples.\n\n The Pargen \n[Developing](https://github.com/nhjschulz/flashcontainer/blob/master/Developing.md/)\npage on Github explains how to use unreleased development builds\nor how to setup a development environment for Pargen.\n\n## XML Definitions File\n\nThe flash container configuration for Pargen is a XML\ndefinition file with the format explained below.\n\n### TL;DR\n\nThe [examples](https://github.com/nhjschulz/flashcontainer/tree/master/examples)\nfolder shows how to configure Pargen for various use cases.\nMost of it is likely self explanatory. Read the examples.md\nfiles inside the examples folder to learn more about them. To\nunderstand Pargen's XML capabilities in depth, read on.\n\n### XML Configuration File Anatomy\n\nThe XML follows an XSD-schema defined in \n[pargen_1.0.xsd](https://github.com/nhjschulz/flashcontainer/blob/master/src/flashcontainer/pargen_1.0.xsd).\nIt is highly recommended to use an XML editor with schema validation\nsupport to avoid or detect validations already while editing.\nVisual Studio Code is a perfect choice, given the \n\"XML Language Support\" extension from Red Hat is installed.\nThis extensions brings validation and \"IntelliSense\" to editing XML files.\n\nThe file defines the following data element hierarchy. The \"...\" lines mean\nthat the preceding element may appear multiple times:\n\n      <pd:Container>\n        <pd:blocks>\n          <pd:block>\n            <pd:parameter> or <pd:crc>\n            ...\n          </pd:block>\n          ...\n        <pd:blocks>\n        ...\n      </pd:Container>\n\n### XML Root Element\n\nThe XML file uses XSD schema validation and a namespace. This requires the\nfollowing (static) XML element to be used as the root XML element at the\nbeginning of the file:\n\n    ?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <pd:pargen xmlns:pd=\"http://nhjschulz.github.io/1.0/pargen\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://nhjschulz.github.io/1.0/pargen http://nhjschulz.github.io/xsd/pargen_1.0.xsd\" >\n\n### Container Element\n\nThe top level configuration element is the **container**. A container\nmaps its parameter blocks to absolute addresses by the **at** attribute. Address attributes inside block elements are offsets to the\n**at** attribute value.\n\n#### Container Element Attributes\n\n|Attribute  |Description              |optional|default|\n|-----------|-------------------------|--------|-------|\n| name      | The container name.     |   No   |       |\n| at        | Absolute address of the container.|No||\n\n#### Container Child Elements\n\n|Element  |Description              | Multiplicity |\n|---------|-------------------------|--------------|\n| blocks  | Parent Element for blocks|  1          |\n\n#### Example Container Element\n\n    <pd:container name=\"UCBRange\" at=\"0xAF400000\">\n      <pd:blocks>\n      ....\n      </pd:blocks>\n    </pd:container>\n\n### Block Element\n\nA block element defines a contiguous memory area inside a container.\nBlocks contain an optional header and parameters at unique offsets\ninside the block memory range. Gaps between parameters are filled\nwith the byte value specified using the 'fill' attribute.\nA container may have 1 to many block children inside a blocks element.\n\n#### Block Attributes\n\n|Attribute  |Description              |optional|default|\n|-----------|-------------------------|--------|-------|\n| name      | The block name.         |   No   |       |\n| offset    | Memory start offset inside container. Value may be \".\" to use the next free offset inside the container.|No||\n| length    | Number of bytes covered by this block|No|\n| align     | block alignment to the next 1,2,4,8 bytes boundary|Yes|1|\n| fill      | byte value used to fill gaps.|Yes| 0x00 |\n| endianness| LE or BE: Little or or big endian byte order |Yes|LE|\n\n#### Block Child Elements\n\n|Element  |Description              | Multiplicity |\n|---------|-------------------------|--------------|\n| comment | Optional comment text for this block| 0..1|\n| header  | Optional header with id, version and length information | 0..1  |\n| data    | Parent element for block parameter| 1 |\n\n#### Block Header Element\n\nPargen blocks may contain a header at the beginning of the\nblock memory area. This optional header contains block identification,\nversion and length information. The header supports parameter validation\nto verify correctness and compatibility with the using application during\nruntime. The \n[safety example](https://github.com/nhjschulz/flashcontainer/tree/master/examples/safety/)\nin the examples folder shows how to use the header in combination with a\nCRC for this purpose.\n\nThe header data is a 16 byte long data structure with the following\nlayout:\n\n    struct sruct_pargen_header_type\n    {\n        uint16_t id;        /* from id header attribute */\n        uint16_t major;     /* from major header attribute */\n        uint16_t minor;     /* from minor header attribute */\n        uint16_t dataver;   /* from version header attribute */\n        uint32_t reserved;  /* reserved = 0x00000000 */\n        uint32_t length;    /* from length block attribute */\n    };\n\nApplication can freely decide how to use the id, major, minor and dataver\nheader fields. The proposed usage is as follows:\n\n* id - A unique id to identify the blocks purpose. (Example: 1:CAN Bus settings, 2 :Motor parameters, ...)\n* Major.Minor - A version pair defining the layout of the block\n* dataver - The version or build number of the parameter set\n\nThe header data is internally handled as a parameter. Space for any\nfurther parameter starts at offset 16 (0x10) if the header is used.\n\n#### Example Block Element\n\n    <pd:block offset=\"0x0000\" name=\"UCB_BMHD0\" length=\"0x1F4\" fill=\"0x00\" endianness=\"LE\">\n        <pd:header id=\"0x0A\" major=\"1\" minor=\"0\" version=\"1\"></pd:header>\n        <pd:comment>Aurix Bootmode Headers</pd:comment>\n        <pd:data>\n          ....\n        </pd:data>\n    </pd:block>\n\n### Parameter Element\n\nA parameter element defines a single parameter inside a block. Blocks may\nhave one to many parameter elements.\n\n#### Parameter Element Attributes\n\n|Attribute  |Description              |optional|default|\n|-----------|-------------------------|--------|-------|\n| offset    | Memory start offset inside block. Value may be \".\" to use the next free offset inside the block.|No||\n| name      | The parameter name.         |   No   |       |\n| type      |Parameter type, one of [u]int{bits} with bits one of 8,16,32,64 or float32,float64 or utf8|No|\n| align     | Parameter offset alignment to the next 1,2,4,8 bytes boundary|Yes|1|\n\n\n#### Parameter Child Elements\n\n|Element  |Description              | Multiplicity |\n|---------|-------------------------|--------------|\n| comment | Optional comment text for this parameter| 0..1|\n| value   | The parameter value     | 1  |\n\n#### Parameter Element Example\n\n    <pd:param offset=\"0x004\" name=\"STAD\" type=\"uint32\">\n      <pd:comment>Application entry point address</pd:comment>\n      <pd:value>0x80028000</pd:value>\n\n#### Parameter Value Element\n\nThe value element of a parameter holds the parameter value inside\nits text element using a JSON style syntax. The following subset of\nJSON definitions are supported:\n\n|Value type                        | Examples    |\n|----------------------------------|--------------|\n| Integer values in decimal or hexadecimal | 1, -2, 0xABCDEF |\n| Floating point variables  | 3.141, 1E-005 |\n| Strings in double quotes  | \"Hello world!\" |\n| One-dimensional arrays    | [1, 2, 3, 4, 5, 6] |\n\n### Crc Element\n\nThe crc element defines an integer parameter. The difference to a\nnormal integer parameter is the automatic value calculation using a\ncrc algorithm. Instead of a parameter value child element, memory\nand config elements are used to define crc calculation parameters.\n\n#### Crc Element Attributes\n\n|Attribute  |Description              |optional|default|\n|-----------|-------------------------|--------|-------|\n| offset    | Memory start offset inside block. Value may be \".\" to use the next free offset inside the block|No||\n| name      | The crc parameter name.   |   No   |       |\n| type      | Parameter type, one of uint{bits} with bits one of 8,16,32,64|No|\n| align     | Parameter offset alignment to the next 1,2,4,8 bytes boundary|Yes|1|\n\n#### Crc Child Elements\n\n|Element  |Description              | Multiplicity |\n|---------|-------------------------|--------------|\n| comment | Optional comment text for this parameter| 0..1|\n| memory   | The crc memory range and access method| 1  |\n| config   | The optional crc computation parameter| 0..1|\n\n#### Crc Memory Element\n\nThe memory element defines the memory range used to calculate\nthe crc and the access method to this memory range if\nbyte swapping is needed. The bytes at the range boundaries are\nincluded into the crc calculation.\n\nAttribute  |Description              |optional|default |\n|-----------|-------------------------|--------|-------|\n| from    | Start address for crc calculation  |No|    |\n| to      | End address for crc calculation. The value may be \".\" to represent an address right before the crc offset.|No|    |\n| access  | Bit width in case of swapping (8,16,32,64)|yes|8|\n| swap    | Enable bytes swapping using access size|Yes|false|\n\n#### Crc Config Element\n\nThe config element defines the crc calculation parameters to\nenable arbitrary crc methods. The values for common used crc methods\ncan be taken from this\n[crc catalog page](https://reveng.sourceforge.io/crc-catalogue/all.htm).\nThe default values select the IEEE802.3 crc calculation also known as\nCRC-32. Note that the bit size of the crc is not part of these parameters,\nbut derived from the type attribute of the crc element.\n\n|Attribute  |Description              |optional|default |\n|-----------|-------------------------|--------|-------|\n| polynomial| polynomial coefficients   |yes|0x04C11DB7|\n| init      | Start value, usual 0 or -1|yes|0xFFFFFFFF|\n| rev_in  | Process bytes MSB(false) or LSB(true) first.|yes|true|\n| rev_out   | Enable reflection of final crc result|Yes|true|\n| final_xor | Perform final XOR of the crc|yes|true|\n\n#### Crc Element Example\n\n    <pd:crc offset=\"0x008\" name=\"CRCBMHD\" type=\"uint32\">\n      <pd:memory from=\"0x0000\" to=\"0x0007\" access=\"32\" swap=\"true\"/>\n      <pd:config polynomial=\"0x04C11DB7\" init=\"0xFFFFFFFF\" rev_in=\"true\" rev_out=\"true\" final_xor=\"true\" ></pd:config>\n    </pd:crc>\n\n## Issues, Ideas And Bugs\n\nIf you have further ideas or you found some bugs, great! Create an\n[issue](https://github.com/nhjschulz/flashcontainer/issues)\nor if you are able and willing to fix it by yourself, clone\nthe repository and create a pull request.\n\n## Used Non Standard Python Libraries\n\nThe project uses the following non standard python libraries:\n|Library  |Purpose |License |                   \n|---------|--------|--------|\n|[lxml](https://pypi.org/project/lxml/)| XML parsing and validation|BSD-3-Clause|\n|[intelhex](https://pypi.org/project/intelhex/)|intel hex file generation|BSD|\n|[json5](https://pypi.org/project/json5/)|JSON read and write (with hexadecimal number support)|Apache|\n|[toml](https://pypi.org/project/toml/)|Accessing toml file content|MIT|\n\n## License\n\nThe whole source code is published under the\n[BSD 3-Clause License](https://opensource.org/licenses/BSD-3-Clause/).\nConsider also the different licenses of used third party libraries too!\n\n## Contribution\n\nWe welcome contribution, but unless you explicitly state otherwise:\nAny contribution intentionally submitted for inclusion in the work by you,\nshall be licensed as above, without any additional terms or conditions.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flashcontainer",
    "package_url": "https://pypi.org/project/flashcontainer/",
    "platform": null,
    "project_url": "https://pypi.org/project/flashcontainer/",
    "project_urls": {
      "repository": "https://github.com/nhjschulz/flashcontainer"
    },
    "release_url": "https://pypi.org/project/flashcontainer/0.4.0/",
    "requires_dist": [
      "crc (>=3.0)",
      "intelhex (>=2.3.0)",
      "json5 (>=0.9.10)",
      "lxml (>=4.9.2)",
      "toml (>=0.10.2)",
      "pytest (>5.0.0) ; extra == 'test'",
      "pytest-cov[all] ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "A tooling for flashable parameter data container generation",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17447599,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "878433cf87f49e49a3b4b5576991332ef04b6579a029a9200cd66b621311834d",
          "md5": "dea1ba4ab3eeb9dd24fb90b45e7218bf",
          "sha256": "c253f48dab7c437287e6be7d1483c6894bcff3822cbb249ea74f50c8310ef626"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dea1ba4ab3eeb9dd24fb90b45e7218bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21971,
        "upload_time": "2022-12-16T20:04:43",
        "upload_time_iso_8601": "2022-12-16T20:04:43.330035Z",
        "url": "https://files.pythonhosted.org/packages/87/84/33cf87f49e49a3b4b5576991332ef04b6579a029a9200cd66b621311834d/flashcontainer-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a5b4f85ec54a552f8386362f49f37c6d35ea30a43c69fd5ed37bb0623d2ae30",
          "md5": "ee55dfa00bd08a9e847c52bd4a81796d",
          "sha256": "06a30c7e1349bcd656a2ed210b9c19e9203232aec7ea35ea39df6a3e907bcd18"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ee55dfa00bd08a9e847c52bd4a81796d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14622,
        "upload_time": "2022-12-16T20:04:45",
        "upload_time_iso_8601": "2022-12-16T20:04:45.559054Z",
        "url": "https://files.pythonhosted.org/packages/2a/5b/4f85ec54a552f8386362f49f37c6d35ea30a43c69fd5ed37bb0623d2ae30/flashcontainer-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c48b14c37f4e9637922af2a39e5ccfe9f6c15a943b21b8f0d3d7aa1d9f1cc83f",
          "md5": "e56ce90b57b772c4f5c26cad8a1ca708",
          "sha256": "bfcf5924383e878d0272fdaa7d99719ac0fbf927329b8d9133806bd287f88150"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e56ce90b57b772c4f5c26cad8a1ca708",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 36054,
        "upload_time": "2022-12-27T16:20:44",
        "upload_time_iso_8601": "2022-12-27T16:20:44.888500Z",
        "url": "https://files.pythonhosted.org/packages/c4/8b/14c37f4e9637922af2a39e5ccfe9f6c15a943b21b8f0d3d7aa1d9f1cc83f/flashcontainer-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef00b8800d9cf48defe791be3a3181430adfbe0c70bb03132c0776f5d4a2af10",
          "md5": "76a473995c2eb3a77613043bdf9f555c",
          "sha256": "bae73e8d3e2960490ca86e0074bca81b332fdfa60291255b498b7e5ee0c986e7"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "76a473995c2eb3a77613043bdf9f555c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 75767,
        "upload_time": "2022-12-27T16:20:46",
        "upload_time_iso_8601": "2022-12-27T16:20:46.636882Z",
        "url": "https://files.pythonhosted.org/packages/ef/00/b8800d9cf48defe791be3a3181430adfbe0c70bb03132c0776f5d4a2af10/flashcontainer-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d13b6d19d6fb1762501ba5b02b6431ff54c72f05b6f29925fdf057bf7f686ea",
          "md5": "04b4634252f421c34c03e308ec29908f",
          "sha256": "1b864604fd7a1377c09a0d1eddcd715ea9b80796dccbcb8c9cf7eddf2f419f2b"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04b4634252f421c34c03e308ec29908f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 36526,
        "upload_time": "2023-01-03T14:19:02",
        "upload_time_iso_8601": "2023-01-03T14:19:02.021295Z",
        "url": "https://files.pythonhosted.org/packages/4d/13/b6d19d6fb1762501ba5b02b6431ff54c72f05b6f29925fdf057bf7f686ea/flashcontainer-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca95c9f1435d24c1baa92000636f4dad38c019c2a6f7904431b47ae2b27fecf3",
          "md5": "8f552c92dfef0ed258ba6630225ed028",
          "sha256": "d66f034529063c61ea62777e4ebb0f65a109d0c5b681e126b1a2d9aee339e1c2"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8f552c92dfef0ed258ba6630225ed028",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 112615,
        "upload_time": "2023-01-03T14:19:05",
        "upload_time_iso_8601": "2023-01-03T14:19:05.523538Z",
        "url": "https://files.pythonhosted.org/packages/ca/95/c9f1435d24c1baa92000636f4dad38c019c2a6f7904431b47ae2b27fecf3/flashcontainer-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd24e6b529c21f1b908ef7285202d8019a0b79d2029ba872280b2f48d9f0ffbc",
          "md5": "259a2beeccda6c526ea1b56ab23a0e96",
          "sha256": "2b2181d7c1eef490b32db266c15bce78cc4c2b24be690902c1c46edcf83c0b09"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "259a2beeccda6c526ea1b56ab23a0e96",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 36950,
        "upload_time": "2023-01-09T09:30:36",
        "upload_time_iso_8601": "2023-01-09T09:30:36.861231Z",
        "url": "https://files.pythonhosted.org/packages/cd/24/e6b529c21f1b908ef7285202d8019a0b79d2029ba872280b2f48d9f0ffbc/flashcontainer-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45c1401cb0306a8c9e4de874a996a9e9ff65eb26c9db1024e8bd79891a60322d",
          "md5": "1429a944f0a8402ead2d96fb786df8d8",
          "sha256": "d01dd5375d5c989c74a551ba004fb0f38adea7d4b7ac3da7ea699a3ff58ed9b9"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1429a944f0a8402ead2d96fb786df8d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 112881,
        "upload_time": "2023-01-09T09:30:43",
        "upload_time_iso_8601": "2023-01-09T09:30:43.824319Z",
        "url": "https://files.pythonhosted.org/packages/45/c1/401cb0306a8c9e4de874a996a9e9ff65eb26c9db1024e8bd79891a60322d/flashcontainer-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93a556aee5210517303759eef6642df91c2bf6d67f022195e8f8b93d80c46f44",
          "md5": "4f6f346d8ce6c1ad76bd77fa344986ef",
          "sha256": "d4dea64c2126ca96f23c33598a32a73aa1f5733aa806733962c86fb0de88bbd0"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f6f346d8ce6c1ad76bd77fa344986ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 36924,
        "upload_time": "2023-01-10T15:48:30",
        "upload_time_iso_8601": "2023-01-10T15:48:30.287192Z",
        "url": "https://files.pythonhosted.org/packages/93/a5/56aee5210517303759eef6642df91c2bf6d67f022195e8f8b93d80c46f44/flashcontainer-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "975c64b0dc0cbd223449962ee7563258ae3a8091e5ac1e06a0a99a7e4e002246",
          "md5": "1724d6ddd7ad0460e80d55b3bd7a88b2",
          "sha256": "ad79bf592433a0b039651f1803dbd7815ae5c72cf3e23ba457f13803f8e337f0"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1724d6ddd7ad0460e80d55b3bd7a88b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 112967,
        "upload_time": "2023-01-10T15:48:32",
        "upload_time_iso_8601": "2023-01-10T15:48:32.071519Z",
        "url": "https://files.pythonhosted.org/packages/97/5c/64b0dc0cbd223449962ee7563258ae3a8091e5ac1e06a0a99a7e4e002246/flashcontainer-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d1d5733d2efddfee0fe9cf7a95dd0b3e73acdcee59c05be7d58f7f85d85d0da",
          "md5": "20a0c933c153cd854779c077216ae27b",
          "sha256": "93a4fe6a17ea7be166704d4f8d10324dbe33bbc3c66a319d1a57a9ebd69a8f78"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "20a0c933c153cd854779c077216ae27b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 39778,
        "upload_time": "2023-03-20T07:48:15",
        "upload_time_iso_8601": "2023-03-20T07:48:15.575490Z",
        "url": "https://files.pythonhosted.org/packages/2d/1d/5733d2efddfee0fe9cf7a95dd0b3e73acdcee59c05be7d58f7f85d85d0da/flashcontainer-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4e3f3bd21af409138cbbb12f721d9481e585f4339ca5cafd74bd2fe77e7b405",
          "md5": "074ac2f581de5e98862a9a0f33fccf8a",
          "sha256": "c0554e1f6756898f9c9cc73735a341c5cbdeb64f5d36e1e8fdd146ba1dec3b7e"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "074ac2f581de5e98862a9a0f33fccf8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 114937,
        "upload_time": "2023-03-20T07:48:18",
        "upload_time_iso_8601": "2023-03-20T07:48:18.236088Z",
        "url": "https://files.pythonhosted.org/packages/a4/e3/f3bd21af409138cbbb12f721d9481e585f4339ca5cafd74bd2fe77e7b405/flashcontainer-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0e16ab3e7c730b6b1a813640aa5816728f8248cf29658c45ee70efaf3dff085",
          "md5": "d2f2eac8a82d342696c6e2cbfba20bce",
          "sha256": "0f3259659929194f89fe1b83bec1f07971ce611a1434f916512199be96c8fd97"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2f2eac8a82d342696c6e2cbfba20bce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 40580,
        "upload_time": "2023-03-26T07:06:11",
        "upload_time_iso_8601": "2023-03-26T07:06:11.095413Z",
        "url": "https://files.pythonhosted.org/packages/e0/e1/6ab3e7c730b6b1a813640aa5816728f8248cf29658c45ee70efaf3dff085/flashcontainer-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e95329930e35a4750460b3f71817753268d2224e1b1bff5e26fd313304f148e",
          "md5": "96d9f64876638e6597b9c613ff462374",
          "sha256": "01193c7860922db9c41e01029be852c92ef3f997b4fcf204584b6321c71a18be"
        },
        "downloads": -1,
        "filename": "flashcontainer-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "96d9f64876638e6597b9c613ff462374",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 115528,
        "upload_time": "2023-03-26T07:06:13",
        "upload_time_iso_8601": "2023-03-26T07:06:13.662434Z",
        "url": "https://files.pythonhosted.org/packages/2e/95/329930e35a4750460b3f71817753268d2224e1b1bff5e26fd313304f148e/flashcontainer-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e0e16ab3e7c730b6b1a813640aa5816728f8248cf29658c45ee70efaf3dff085",
        "md5": "d2f2eac8a82d342696c6e2cbfba20bce",
        "sha256": "0f3259659929194f89fe1b83bec1f07971ce611a1434f916512199be96c8fd97"
      },
      "downloads": -1,
      "filename": "flashcontainer-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d2f2eac8a82d342696c6e2cbfba20bce",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 40580,
      "upload_time": "2023-03-26T07:06:11",
      "upload_time_iso_8601": "2023-03-26T07:06:11.095413Z",
      "url": "https://files.pythonhosted.org/packages/e0/e1/6ab3e7c730b6b1a813640aa5816728f8248cf29658c45ee70efaf3dff085/flashcontainer-0.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e95329930e35a4750460b3f71817753268d2224e1b1bff5e26fd313304f148e",
        "md5": "96d9f64876638e6597b9c613ff462374",
        "sha256": "01193c7860922db9c41e01029be852c92ef3f997b4fcf204584b6321c71a18be"
      },
      "downloads": -1,
      "filename": "flashcontainer-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "96d9f64876638e6597b9c613ff462374",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 115528,
      "upload_time": "2023-03-26T07:06:13",
      "upload_time_iso_8601": "2023-03-26T07:06:13.662434Z",
      "url": "https://files.pythonhosted.org/packages/2e/95/329930e35a4750460b3f71817753268d2224e1b1bff5e26fd313304f148e/flashcontainer-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}