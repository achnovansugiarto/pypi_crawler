{
  "info": {
    "author": "CodeChecker Team (Ericsson)",
    "author_email": "csordasmarton92@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Operating System :: MacOS",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1 align=\"center\">\n  <br>\n  <img src=\"https://github.com/Ericsson/codechecker/raw/master/docs/logo/logo_blue.png\" alt=\"CodeChecker\" width=\"200\">\n  <br>\n  CodeChecker\n  <br>\n</h1>\n\n<p align=\"center\">\n  <a href=\"https://github.com/Ericsson/codechecker/actions\">\n    <img src=\"https://github.com/Ericsson/codechecker/workflows/codechecker-tests/badge.svg\"\n         alt=\"Github Action\">\n  </a>\n  <a href=\"https://gitter.im/codecheckerHQ/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link\">\n    <img src=\"https://badges.gitter.im/codecheckerHQ/Lobby.svg\"\n         alt=\"Gitter\">\n  </a>\n  <a href=\"https://codechecker.readthedocs.io/en/latest/?badge=latest\">\n    <img src=\"https://readthedocs.org/projects/codechecker/badge/?version=latest\"\n         alt=\"Documentation Status\">\n  </a>\n</p>\n\n**CodeChecker** is a static analysis infrastructure built on the [LLVM/Clang\nStatic Analyzer](http://clang-analyzer.llvm.org) toolchain, replacing\n[`scan-build`](http://clang-analyzer.llvm.org/scan-build.html) in a Linux or\nmacOS (OS X) development environment.\n\n![Web interface showing list of analysed projects and bugs](images/demo.gif)\n\n**:bulb: Check out our [DEMO](https://codechecker-demo.eastus.cloudapp.azure.com) showing some analysis results of open-source projects!**\n\n# Main features\n## Command line C/C++ Analysis\n  * Executes [_Clang-Tidy_](http://clang.llvm.org/extra/clang-tidy/), [_Clang Static Analyzer_](http://clang-analyzer.llvm.org/) with Cross-Translation Unit analysis, Statistical Analysis (when checkers are available), and [_Cppcheck_](https://cppcheck.sourceforge.io/).\n  * Creates the JSON compilation database by wiretapping any build process (e.g., `CodeChecker log -b \"make\"`).\n  * Automatically analyzes GCC cross-compiled projects: detecting GCC or Clang compiler configuration and forming the corresponding clang analyzer invocations.\n  * Incremental analysis: Only the changed files and its dependencies need to be reanalyzed.\n  * False positive suppression with a possibility to add review comments.\n  * Result visualization in command line or in static HTML.\n\n## Web-based report storage\n  * **You can store & visualize thousands of analysis reports** of many analyzers like\n    Clang Static Analyzer (C/C++), Clang Tidy (C/C++), Facebook Infer (C/C++, Java), Clang Sanitizers (C/C++), Spotbugs (Java), Pylint (Python), Eslint (Javascript) ...  \n    For a complete list see [Supported Analyzers](supported_code_analyzers.md)\n  * **Web application** for viewing discovered code defects with a streamlined,\n    easy experience (with PostgreSQL, or SQLite backend).\n  * **Gerrit and GitLab integration** Shows analysis results as [GitLab](gitlab_integration.md) or [Gerrit](jenkins_gerrit_integration.md) reviews.\n  * **Filterable** (defect checker name, severity, source paths, ...) and\n    **comparable** (calculates difference between two analyses of the project,\n    showing which bugs have been fixed and which are newly introduced) result\n    viewing.\n  * **Diff mode:** This shows the list of bugs that have been introduced since your last analyzer\n    execution.\n  * Results can be shared with fellow developers, the **comments** and\n    **review** system helps communication of code defects.\n  * Easily implementable [Thrift](http://thrift.apache.org)-based\n    server-client communication used for storing and querying of discovered\n    defects.\n  * Support for multiple bug visualization frontends, such as the web\n    application, a [command-line tool](usage.md) and an\n    [Eclipse plugin](http://github.com/Ericsson/CodeCheckerEclipsePlugin).\n\n## Command line features\n`CodeChecker` command has many subcommands which can be used for example to\nlog and analyze your projects, print the results or start a web server. For\nfull list see the following table or check the help message of this command\n(`CodeChecker --help`):\n\n| `CodeChecker` subcommand | Description                                                                                   |\n|--------------------------|-----------------------------------------------------------------------------------------------|\n| `analyze`                | Execute the supported code analyzers for the files recorded in a JSON Compilation Database.   |\n| `analyzer-version`       | Print the version of CodeChecker analyzer package that is being used.                         |\n| `analyzers`              | List supported and available analyzers.                                                       |\n| `check`                  | Perform analysis on a project and print results to standard output.                           |\n| `checkers`               | List the checkers available for code analysis.                                                |\n| `cmd`                    | View analysis results on a running server from the command line.                              |\n| `fixit`                  | Apply automatic fixes based on the suggestions of the analyzers.                              |\n| `log`                    | Run a build command, collect the executed compilation commands and store them in a JSON file. |\n| `parse`                  | Print analysis summary and results in a human-readable format.                                |\n| `server`                 | Start and manage the CodeChecker Web server.                                                  |\n| `store`                  | Save analysis results to a database.                                                          |\n| `version`                | Print the version of CodeChecker package that is being used.                                  |\n| `web-version`            | Print the version of CodeChecker server package that is being used.                           |\n\n\n`CodeChecker cmd` subcommand also has many other subcommands which can be used\nto get data (products, runs, results, statistics) from a running CodeChecker\nserver. For full list see the following table or check the help message of this\nsubcommand (`CodeChecker cmd --help`):\n\n| `CodeChecker cmd` subcommand | Description                                                                                       |\n|------------------------------|---------------------------------------------------------------------------------------------------|\n| `runs`                       | List the available analysis runs.                                                                 |\n| `history`                    | Show run history of multiple runs.                                                                |\n| `results`                    | List analysis result (finding) summary for a given run.                                           |\n| `diff`                       | Compare two analysis runs and show the difference.                                                |\n| `sum`                        | Show statistics of checkers.                                                                      |\n| `token`                      | Access subcommands related to configuring personal access tokens managed by a CodeChecker server. |\n| `del`                        | Delete analysis runs.                                                                             |\n| `update`                     | Update an analysis run.                                                                           |\n| `suppress`                   | Manage and import suppressions of reports on a CodeChecker server.                                |\n| `products`                   | Access subcommands related to configuring the products managed by a CodeChecker server.           |\n| `components`                 | Access subcommands related to configuring the source components managed by a CodeChecker server.  |\n| `login`                      | Authenticate into CodeChecker servers that require privileges.                                    |\n| `export`                     | Export comments and review statuses from CodeChecker.                                             |\n| `import`                     | Import comments and review statuses into CodeChecker.                                             |\n\n\n# Usage flow\n![Usage diagram](images/usage_flow.png)\n\n- *Step 1*: `CodeChecker log` runs the given build command and records the\nexecuted compilation steps. These steps are written to an output file\n(Compilation Database) in a JSON format.\n- *Step 2*: `CodeChecker analyze` uses the previously created JSON Compilation\nDatabase to perform an analysis on the project, outputting analysis results in\na machine-readable (plist) format.\n- *Step 3*: In this step, you can do multiple things:\n    - Parse and pretty-print the summary and results from analysis result files\n    (`CodeChecker parse`).\n    - Store the results to a running CodeChecker server (`CodeChecker store`).\n    - Compare two analysis results/runs to show the results that differ between\n    the two (`CodeChecker cmd diff`).\n    - etc.\n\nFor more information how to use CodeChecker see our [user guide](usage.md).\n\n# User documentation\n\n* [Getting started (How-To with examples)](usage.md)\n\n## C/C++ Analysis\n* [Analyzer User guide](analyzer/user_guide.md)\n* [Avoiding or suppressing false positives](analyzer/false_positives.md)\n* [Checker and Static Analyzer configuration](analyzer/checker_and_analyzer_configuration.md)\n* [GCC incompatibilities](analyzer/gcc_incompatibilities.md)\n* [Suppressing false positives](analyzer/user_guide.md#source-code-comments)\n\n## Web based report management\n* [Webserver User Guide](web/user_guide.md)\n* [WEB GUI User Guide](/web/server/vue-cli/src/assets/userguide/userguide.md)\n* [Command line and WEB UI Feature overview](feature_comparison.md)\n* Security configuration \n  * [Configuring Authentication](web/authentication.md)\n  * [Configuring Authorization](web/permissions.md)\n* Deployment\n  * [Deploy server using docker](web/docker.md#deployment)\n* Server Configuration\n  * [Configuring Server Logging](logging.md)\n  * [Setting up multiple CodeChecker repositories in one server](web/products.md)\n* Continuous Integration (CI)\n  * [CodeChecker as a GitHub Action](http://github.com/marketplace/actions/codechecker-static-analysis)\n  * [Setting up CI gating with Gerrit and Jenkins](jenkins_gerrit_integration.md)\n* Database Configuration\n  * [PostgreSQL database backend setup guide](web/postgresql_setup.md)\n  * [CodeChecker server and database schema upgrade guide](web/db_schema_guide.md)\n\n### Storage of reports from analyzer tools\nCodeChecker can be used as a generic tool for visualizing analyzer results.\n\nThe following tools are supported:\n\n| Language       | Analyzer                                                                     |\n|----------------|------------------------------------------------------------------------------|\n| **C/C++**      | [Clang Static Analyzer](https://clang-analyzer.llvm.org/)                    |\n|                | [Clang Tidy](https://clang.llvm.org/extra/clang-tidy/)                       |\n|                | [Clang Sanitizers](supported_code_analyzers.md#clang-sanitizers)             |\n|                | [Cppcheck](/docs/tools/report-converter.md#cppcheck)                         |\n|                | [Facebook Infer](/docs/tools/report-converter.md#facebook-infer)             |\n|                | [Coccinelle](/docs/tools/report-converter.md#coccinelle)                     |\n|                | [Smatch](/docs/tools/report-converter.md#smatch)                             |\n|                | [Kernel-Doc](/docs/tools/report-converter.md#kernel-doc)                     |\n|                | [Sparse](/docs/tools/report-converter.md#sparse)                             |\n|                | [cpplint](/docs/tools/report-converter.md#cpplint)                           |\n| **C#**         | [Roslynator.DotNet.Cli](/docs/tools/report-converter.md#roslynatordotnetcli) |\n| **Java**       | [SpotBugs](/docs/tools/report-converter.md#spotbugs)                         |\n|                | [Facebook Infer](/docs/tools/report-converter.md#fbinfer)                    |\n| **Python**     | [Pylint](/docs/tools/report-converter.md#pylint)                             |\n|                | [Pyflakes](/docs/tools/report-converter.md#pyflakes)                         |\n| **JavaScript** | [ESLint](/docs/tools/report-converter.md#eslint)                             |\n| **TypeScript** | [TSLint](/docs/tools/report-converter.md#tslint)                             |\n| **Go**         | [Golint](/docs/tools/report-converter.md#golint)                             |\n| **Markdown**   | [Markdownlint](/docs/tools/report-converter.md#markdownlint)                 |\n|                | [Sphinx](/docs/tools/report-converter.md#sphinx)                             |\n\n\nFor details see \n[supported code analyzers](supported_code_analyzers.md) documentation and the \n[Report Converter Tool](/docs/tools/report-converter.md).\n\n## Common Tools\nUseful tools that can also be used outside CodeChecker.\n\n* [Build Logger (to generate JSON Compilation Database from your builds)](/analyzer/tools/build-logger/README.md)\n* [Plist to HTML converter (to generate HTML files from the given plist files)](/docs/tools/report-converter.md#plist-to-html-tool)\n* [Report Converter Tool (to convert analysis results from other analyzers to the codechecker report directory format))](/docs/tools/report-converter.md)\n* [Translation Unit Collector (to collect source files of a translation unit or to get source files which depend on the given header files)](/docs/tools/tu_collector.md)\n* [Report Hash generator (to generate unique hash identifiers for reports)](/docs/tools/report-converter.md#report-hash-generation-module)\n\n## Helper Scripts\n* [Helper Scripts for daily analysis](script_daily.md)\n\n# Install guide\n\n## Install CodeChecker via `pip`\nCodeChecker is available on the [pypi](https://pypi.org/project/codechecker/)\nand can be installed with the following command:\n```sh\npip3 install codechecker\n```\n\n**Note:** this package can be installed on `Linux`, `OSX` and `Windows`\nsystems where `pip3` command is available. On `OSX`, `intercept-build` must be\ninstalled for logging (`CodeChecker log`). On `Windows`, logging is not\navailable.\n\n## Installing CodeChecker via the `snap` package manager\nCodeChecker is available on the [Snap Store](https://snapcraft.io/codechecker)\nand can be installed with the following command:\n```sh\nsudo snap install codechecker --classic\n```\n\n**Note:** Unfortunately, the snap package supports only lower-case command names.\nFor this reason, you need to use `codechecker` command instead of `CodeChecker`\neverywhere. For a full list of available commands in the _codechecker_ snap\npackage, run `snap info codechecker`.\n\n## Linux\n\nFor a detailed dependency list, and for instructions on how to install newer\nClang and Clang-Tidy versions, please see [Requirements](deps.md).\nThe following commands are used to bootstrap CodeChecker on Ubuntu 20.04 LTS:\n\n```sh\n# Install mandatory dependencies for a development and analysis environment.\n# NOTE: clang or clang-tidy can be any sufficiently fresh version, and need not\n#       come from package manager!\n#       In case of Cppcheck, the minimal supported version is 1.80.\nsudo apt-get install clang clang-tidy cppcheck build-essential curl gcc-multilib \\\n      git python3-dev python3-venv\n\n# Install nodejs dependency for web. In case of Debian/Ubuntu you can use the\n# following commands. For more information see the official docs:\n# https://nodejs.org/en/download/package-manager/\ncurl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -\nsudo apt-get install -y nodejs\n\n# Check out CodeChecker source code.\ngit clone https://github.com/Ericsson/CodeChecker.git --depth 1 ~/codechecker\ncd ~/codechecker\n\n# Create a Python virtualenv and set it as your environment.\n# NOTE: if you want to develop CodeChecker, use the `venv_dev` target instead\n# of `venv`.\nmake venv\nsource $PWD/venv/bin/activate\n\n# [Optional] If you want to use external authentication methods (LDAP / PAM)\n# follow the instructions in\n# docs/web/authentication.md#external-authentication-methods\n\n# Build and install a CodeChecker package.\nmake package\n\n# For ease of access, add the build directory to PATH.\nexport PATH=\"$PWD/build/CodeChecker/bin:$PATH\"\n\ncd ..\n```\n\n**Notes**:\n- By default, `make package` will build ldlogger shared objects for\n`32bit` and `64bit` too. If you would like to build and package `64 bit only`\nshared objects and ldlogger binary you can set `BUILD_LOGGER_64_BIT_ONLY`\nenvironment variable to `YES` before the package build:\n`BUILD_LOGGER_64_BIT_ONLY=YES make package`.\n- By default, the `make package` will build the UI code if it's not built yet\nor the UI code is changed. If you wouldn't like to build the UI code you can\nset the `BUILD_UI_DIST` environment variable to `NO` before the package build:\n`BUILD_UI_DIST=NO make package`.\n- Use `make standalone_package` instead of `make package` to avoid\nhaving to manually activate the environment before running CodeChecker.\n\n### Upgrading environment after system or Python upgrade\n\nIf you have upgraded your system's Python to a newer version (e.g., from\n`2.7.6` to `2.7.12` &ndash; this is the case when upgrading Ubuntu from\n14.04.2 LTS to 16.04.1 LTS), the installed environment will not work\nout-of-the-box. To fix this issue, run the following command to upgrade your\n`checker_env` too:\n\n```sh\ncd ~/codechecker/venv\npython3 -m venv .\n```\n\n## Mac OS X\nFor installation instructions for Mac OS X see [Mac OS X Installation Guide](install_macosx.md) documentation.\n\n## Docker\nTo run the CodeChecker server in Docker see the [Docker](web/docker.md) documentation.\nYou can find the CodeChecker web-server container at the [Docker Hub](https://hub.docker.com/r/codechecker/codechecker-web).\n\n<img src=\"https://raw.githubusercontent.com/Ericsson/codechecker/master/docs/images/docker.jpg\" width=\"100\">\n\n## Visual Studio Code plugin\n<img src=\"https://raw.githubusercontent.com/Ericsson/codechecker/master/docs/images/vscode.png\" width=\"100\">\n\nYou can install and use CodeChecker VSCode extension from the\n[Visual Studio Marketplace](http://marketplace.visualstudio.com/items?itemName=codechecker.vscode-codechecker)\nor from [Open VSX](http://open-vsx.org/extension/codechecker/codechecker).\n\nMain features:\n- Run CodeChecker analysis from the editor and see the results automatically.\n- Re-analyze the current file when saved.\n- Commands and build tasks for running CodeChecker as part of a build system.\n- Browse through the found reports and show the reproduction steps directly in the code.\n- Navigate between the reproduction steps.\n\n![VSCode plugin](images/vscode.gif)\n\nFor more information how to install and use this plugin see the\n[repository](https://github.com/Ericsson/codecheckervsCodePlugin/) of this\nextension.\n\n## GitHub Actions CI\n\n![CodeChecker executed in GitHub Actions](images/github-actions.png)\n\nCodeChecker can be executed via a reusable GitHub action for your project!\nYou need only specify the build command, as if you would run the analysis\nlocally.\n\nFor more information, check out the\n[CodeChecker Static Analysis](http://github.com/marketplace/actions/codechecker-static-analysis)\naction on the GitHub Actions Marketplace.\n\n# Analyze your first project\n\n## Setting up the environment in your Terminal\n\nThese steps must always be taken in a new command prompt you wish to execute\nanalysis in.\n\n```sh\nsource ~/codechecker/venv/bin/activate\n\n# Path of CodeChecker package\n# NOTE: SKIP this line if you want to always specify CodeChecker's full path.\nexport PATH=~/codechecker/build/CodeChecker/bin:$PATH\n\n# Path of the built LLVM/Clang\n# NOTE: SKIP this line if clang is available in your PATH as an installed Linux package.\nexport PATH=~/<user path>/build/bin:$PATH\n```\n## Execute analysis\n\nAnalyze your project with the `check` command:\n\n    CodeChecker check -b \"cd ~/your-project && make clean && make\" -o ./results\n\n`check` will print an overview of the issues found in your project by the\nanalyzers. The reports will be stored in the `./results` directory in `plist` \nXML format.\n\n## Export the reports as static HTML files\nYou can visualize the results as static HTML by executing\n\n`CodeChecker parse -e html ./results -o ./reports_html`\n\nAn index page will be generated with a list of all repors in \n`./reports_html/index.html` \n\n\n## Optionally store the results in Web server & view the results\n\nIf you have hundreds of results, you may want to store them on the web\nserver with a database backend.\n\nStart a CodeChecker web and storage server in another terminal or as a\nbackground process. By default, it will listen on `localhost:8001`.\n\nThe SQLite database containing the reports will be placed in your workspace\ndirectory (`~/.codechecker` by default), which can be provided via the `-w`\nflag.\n\n    CodeChecker server\n\nStore your analysis reports onto the server to be able to use the Web Viewer.\n\n    CodeChecker store ./results -n my-project\n\nOpen the [CodeChecker Web Viewer](http://localhost:8001) in your browser, and\nyou should be greeted with a web application showing you the analysis results.\n\n# Important environmental limitations\n\n## Python 2 and older Python 3 releases\n\nCodeChecker has been ported completely to Python **3**.\n**No Python 2 support is planned.**\nYou will need at least Python version **`3.6`**.\nOld virtual environments that were created with a Python 2 interpreter need to\nbe removed.\n\n### Upgrading environment after system or Python upgrade\n\nIf you have upgraded your system's Python to a newer version (e.g., from\n`2.7` to `3.8` &ndash; this is the case when upgrading Ubuntu from 14.04 LTS\nto 20.04 LTS), the installed environment will not work out-of-the-box. To fix\nthis issue, run the following command to upgrade your `checker_env` too:\n\n```sh\ncd ~/codechecker/venv\npython3 -m venv .\n```\n\n\n## Older Clang versions\n\nClang `3.6` or earlier releases are **NOT** supported due to CodeChecker\nrelying on features not available in those releases.\n\nIf you have Clang `3.7` installed you might see the following warning message:\n\n> Hash value wasn't found in the plist file.\n\nUse Clang `>= 3.8` or SVN trunk `r251011` / Git commit\n[`efec163`](http://github.com/llvm/llvm-project)  &mdash; otherwise,\nCodeChecker generates a simple hash based on the filename and the line content.\nThis method is applied for Clang-Tidy results too, because Clang-Tidy does not\nsupport bug identifier hash generation currently.\n\n\n## Developer documentations\n* [Architecture](architecture.md)\n* [Package layout](package_layout.md)\n* [Dependencies](deps.md)\n* [Thrift interface](web/api/README.md)\n* [Package and integration tests](tests.md)\n* [Checker documentation mapping file](web/checker_docs.md)\n\n## Conference papers, presentations\n* An overview about the CodeChecker infrastructure was given at [PLDI 2020](http://pldi20.sigplan.org).<br />\n  **Márton, Gábor and Krupp, Dániel**:<br />\n  [_Tool Talk: CodeChecker_](http://youtube.com/watch?v=bVqrhaoxHlc)\n* A high-level overview about the infrastructure is available amongst the\n  [2015 Euro LLVM Conference](http://llvm.org/devmtg/2015-04) presentations.<br/>\n  **Krupp, Dániel and Orbán, György and Horváth, Gábor and Babati, Bence**:<br/>\n  [_Industrial Experiences with the Clang Static Analysis Toolset_](http://llvm.org/devmtg/2015-04/slides/Clang_static_analysis_toolset_final.pdf)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Ericsson/CodeChecker",
    "keywords": "codechecker,plist",
    "license": "Apache-2.0 WITH LLVM-exception",
    "maintainer": "",
    "maintainer_email": "",
    "name": "codechecker",
    "package_url": "https://pypi.org/project/codechecker/",
    "platform": null,
    "project_url": "https://pypi.org/project/codechecker/",
    "project_urls": {
      "Homepage": "https://github.com/Ericsson/CodeChecker"
    },
    "release_url": "https://pypi.org/project/codechecker/6.21.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "CodeChecker is an analyzer tooling, defect database and viewer extension",
    "version": "6.21.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17432349,
  "releases": {
    "6.16.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c43627949aa9106b6249a1a8d34b0ec7808ac063d586b814bec67b38fb799ca",
          "md5": "8a3b9e87fcb469ed8ae93f80b8f96392",
          "sha256": "23ee74b03bdc74a9b63ea9456e01cd4b497a05bf1f12d9a951e7c7ec99ec00f3"
        },
        "downloads": -1,
        "filename": "codechecker-6.16.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8a3b9e87fcb469ed8ae93f80b8f96392",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 409071,
        "upload_time": "2021-06-04T11:14:30",
        "upload_time_iso_8601": "2021-06-04T11:14:30.958070Z",
        "url": "https://files.pythonhosted.org/packages/7c/43/627949aa9106b6249a1a8d34b0ec7808ac063d586b814bec67b38fb799ca/codechecker-6.16.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.16.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64e07a0fd1d5df1b2ad56841bc004fcf65e072c0c8a9009964c607d420beaa72",
          "md5": "89adce46d97cf106d5700b7587be333a",
          "sha256": "dd62feeadc9c776d9df350acf78dccbfd5247dec565d6467200dae951471d665"
        },
        "downloads": -1,
        "filename": "codechecker-6.16.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "89adce46d97cf106d5700b7587be333a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6542989,
        "upload_time": "2021-05-05T12:30:15",
        "upload_time_iso_8601": "2021-05-05T12:30:15.150783Z",
        "url": "https://files.pythonhosted.org/packages/64/e0/7a0fd1d5df1b2ad56841bc004fcf65e072c0c8a9009964c607d420beaa72/codechecker-6.16.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.17.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae0bd99ba8c639f2a99014a222b01415a62085caf17bdf347a8d744d6bd68f12",
          "md5": "edd6a862af82a573f924ef14b40dd4db",
          "sha256": "1affc5fc6b21749050e36530868583c672852a448fd07bc7a221eb1d7d05b663"
        },
        "downloads": -1,
        "filename": "codechecker-6.17.0.tar.gz",
        "has_sig": false,
        "md5_digest": "edd6a862af82a573f924ef14b40dd4db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 505397,
        "upload_time": "2021-09-10T14:11:40",
        "upload_time_iso_8601": "2021-09-10T14:11:40.141854Z",
        "url": "https://files.pythonhosted.org/packages/ae/0b/d99ba8c639f2a99014a222b01415a62085caf17bdf347a8d744d6bd68f12/codechecker-6.17.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.18.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3608ce93cd2f7e0f6c939b35055a46964b8b1570b4cde90ccfeca190d896176",
          "md5": "6e251c4e0510b5b6fd02956cedf27f5c",
          "sha256": "b49d9e10b6d53fd95b28db353c19f69e907188d45b6aeff8a5940fee35509534"
        },
        "downloads": -1,
        "filename": "codechecker-6.18.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6e251c4e0510b5b6fd02956cedf27f5c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7005139,
        "upload_time": "2021-11-12T13:15:03",
        "upload_time_iso_8601": "2021-11-12T13:15:03.003906Z",
        "url": "https://files.pythonhosted.org/packages/f3/60/8ce93cd2f7e0f6c939b35055a46964b8b1570b4cde90ccfeca190d896176/codechecker-6.18.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.18.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a59565cf122f3d415ab6b4f85a006238ec0679fb7fc0eb6f0d43b83816b425da",
          "md5": "1445bcc924aecaf94fe21e628646dce4",
          "sha256": "eecfcc64bb3211804a4177953d5f85f19ec3dd0b5f4aa49dcf6b276aef2e788d"
        },
        "downloads": -1,
        "filename": "codechecker-6.18.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1445bcc924aecaf94fe21e628646dce4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7079617,
        "upload_time": "2021-12-10T10:43:34",
        "upload_time_iso_8601": "2021-12-10T10:43:34.651744Z",
        "url": "https://files.pythonhosted.org/packages/a5/95/65cf122f3d415ab6b4f85a006238ec0679fb7fc0eb6f0d43b83816b425da/codechecker-6.18.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.18.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ca4f511dd272718d6a9d38a3d3c4e729d6b27802b6bcd3d61cb316fa93b048a",
          "md5": "8c3a11fc936582abbddff498bc2e312f",
          "sha256": "c793a1951f58baf0ba414e41f6458af6292f6428c699e84b8b71da161d834f0b"
        },
        "downloads": -1,
        "filename": "codechecker-6.18.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8c3a11fc936582abbddff498bc2e312f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7073877,
        "upload_time": "2022-01-14T11:17:43",
        "upload_time_iso_8601": "2022-01-14T11:17:43.077465Z",
        "url": "https://files.pythonhosted.org/packages/4c/a4/f511dd272718d6a9d38a3d3c4e729d6b27802b6bcd3d61cb316fa93b048a/codechecker-6.18.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.19.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a463ef495fe020c40f3ef9a4c7d00dfe2af31588c4eeba4f934842c748a6d813",
          "md5": "d32fc6f6260ef7ddd4b0952a9a965904",
          "sha256": "5644e9d57537785c6d10504219d9531e74b30fec8326a57661e50315a051ae2f"
        },
        "downloads": -1,
        "filename": "codechecker-6.19.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d32fc6f6260ef7ddd4b0952a9a965904",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7249162,
        "upload_time": "2022-03-11T09:56:33",
        "upload_time_iso_8601": "2022-03-11T09:56:33.639341Z",
        "url": "https://files.pythonhosted.org/packages/a4/63/ef495fe020c40f3ef9a4c7d00dfe2af31588c4eeba4f934842c748a6d813/codechecker-6.19.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.19.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6e7f2e943488d799a7f7daaba4811996a096f18e0e0287ca70f55b4beca0f61",
          "md5": "6a3c5b93fda4ff4f2235348dff4886ee",
          "sha256": "0df7fe1b5e6f0680d6eaebd1baac33100bed875ef2cb0d31195a833fd2427174"
        },
        "downloads": -1,
        "filename": "codechecker-6.19.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6a3c5b93fda4ff4f2235348dff4886ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7249074,
        "upload_time": "2022-03-18T16:14:52",
        "upload_time_iso_8601": "2022-03-18T16:14:52.964966Z",
        "url": "https://files.pythonhosted.org/packages/c6/e7/f2e943488d799a7f7daaba4811996a096f18e0e0287ca70f55b4beca0f61/codechecker-6.19.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.20.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5b601d7fa5a3a84332d0fa66760d024284cceec833f99d621b1fab00043e4e4",
          "md5": "5132d865686a2e0b164e433eeec531e8",
          "sha256": "da7244124bb63bc57fda3ede4254dc7e3a11711dfc7e59575f8482fab450f95a"
        },
        "downloads": -1,
        "filename": "codechecker-6.20.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5132d865686a2e0b164e433eeec531e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7318490,
        "upload_time": "2022-09-16T12:40:18",
        "upload_time_iso_8601": "2022-09-16T12:40:18.519452Z",
        "url": "https://files.pythonhosted.org/packages/c5/b6/01d7fa5a3a84332d0fa66760d024284cceec833f99d621b1fab00043e4e4/codechecker-6.20.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.20.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a61f3bf939e30d3ab187eeec2c0f8aea70c88f0dd7133c70606d9cc8836cc8bc",
          "md5": "1e66cc13b5d2f4471789b36ce6f6f25c",
          "sha256": "9781fdd49c47f8f00a78152ff0648a409290a6f296a6d1620677c853fba598aa"
        },
        "downloads": -1,
        "filename": "codechecker-6.20.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "1e66cc13b5d2f4471789b36ce6f6f25c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7317662,
        "upload_time": "2022-08-23T11:18:06",
        "upload_time_iso_8601": "2022-08-23T11:18:06.169991Z",
        "url": "https://files.pythonhosted.org/packages/a6/1f/3bf939e30d3ab187eeec2c0f8aea70c88f0dd7133c70606d9cc8836cc8bc/codechecker-6.20.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.21.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d798613853ee2096a8c25a9a005ec21ee7a0c473b40bb187b4268bcbcfbab0ab",
          "md5": "094e49a9ed7bac80508e18f5a9457f81",
          "sha256": "57c347f72673a9870ce4205fb489963bac024cd63660e6565b86b983331a4975"
        },
        "downloads": -1,
        "filename": "codechecker-6.21.0.tar.gz",
        "has_sig": false,
        "md5_digest": "094e49a9ed7bac80508e18f5a9457f81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7329497,
        "upload_time": "2022-11-09T15:54:24",
        "upload_time_iso_8601": "2022-11-09T15:54:24.854178Z",
        "url": "https://files.pythonhosted.org/packages/d7/98/613853ee2096a8c25a9a005ec21ee7a0c473b40bb187b4268bcbcfbab0ab/codechecker-6.21.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.21.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dbc528da6a5ea8178a335817715d542b96f653ddcc24f344218769cc51b023d",
          "md5": "c462d18394b37c2c42ad6aeb173dc712",
          "sha256": "0a6cc97777b4232c0c58289bcbe486e5e502ab49583859b4b9ffcb521752e81d"
        },
        "downloads": -1,
        "filename": "codechecker-6.21.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "c462d18394b37c2c42ad6aeb173dc712",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7330234,
        "upload_time": "2022-10-27T09:53:21",
        "upload_time_iso_8601": "2022-10-27T09:53:21.532953Z",
        "url": "https://files.pythonhosted.org/packages/0d/bc/528da6a5ea8178a335817715d542b96f653ddcc24f344218769cc51b023d/codechecker-6.21.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.22.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0d89f86e9ff7fcce9455097a7738ba8002d8e3a4e9b480f5697946ba3f7674c",
          "md5": "f1a263c77a6fdb5e1ab22eeb939a7f95",
          "sha256": "8c3d2bf5681d94f305cf50ad4680290a9aff1cc39061794fbabd8bd0883a1fe3"
        },
        "downloads": -1,
        "filename": "codechecker-6.22.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "f1a263c77a6fdb5e1ab22eeb939a7f95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 7348969,
        "upload_time": "2023-03-24T14:58:49",
        "upload_time_iso_8601": "2023-03-24T14:58:49.239576Z",
        "url": "https://files.pythonhosted.org/packages/a0/d8/9f86e9ff7fcce9455097a7738ba8002d8e3a4e9b480f5697946ba3f7674c/codechecker-6.22.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d798613853ee2096a8c25a9a005ec21ee7a0c473b40bb187b4268bcbcfbab0ab",
        "md5": "094e49a9ed7bac80508e18f5a9457f81",
        "sha256": "57c347f72673a9870ce4205fb489963bac024cd63660e6565b86b983331a4975"
      },
      "downloads": -1,
      "filename": "codechecker-6.21.0.tar.gz",
      "has_sig": false,
      "md5_digest": "094e49a9ed7bac80508e18f5a9457f81",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7329497,
      "upload_time": "2022-11-09T15:54:24",
      "upload_time_iso_8601": "2022-11-09T15:54:24.854178Z",
      "url": "https://files.pythonhosted.org/packages/d7/98/613853ee2096a8c25a9a005ec21ee7a0c473b40bb187b4268bcbcfbab0ab/codechecker-6.21.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}