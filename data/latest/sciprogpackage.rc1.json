{
  "info": {
    "author": "Javier Aguirre",
    "author_email": "javiregistros71@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "In order to install the package pip install it with in a python terminal.\n\n\n\nIn order to import the library simply on the top of the file import it as follows:\n\n\n\n```\n\nfrom SciProgPackage.ScientificProgramming import SciProg as sp\n\n```\n\n\n\nIn order to run the different functions:\n\n\n\n```\n\nsp.NAMEOFTHEFUNCTION(attributes)\n\n```\n\n\n\nAs an example:\n\n\n\n```\n\ndat = np.arange(1,11)\n\ndiscrete_dat, cutoff = sp.atributeDiscretizeEF(dat, 3)\n\n```\n\n---------------------------------------------------------------------------------\n\n\n\nFinally in order to run all the possible tests here is a code to test it:\n\n\n\n```\n\n# -*- coding: utf-8 -*-\n\nimport random\n\nimport numpy as np\n\nfrom sklearn.metrics import roc_auc_score\n\nfrom sklearn.metrics import roc_curve\n\nimport matplotlib.pyplot as plt\n\nimport collections\n\nimport math\n\nimport scipy \n\nfrom numpy import genfromtxt\n\nimport pandas as pd\n\n\n\nfrom SciProgPackage.ScientificProgramming import SciProg as sp\n\n\n\n\n\n\n\n##TESTS\n\n#TEST\n\nprint(\"TEST1\")\n\nprint(\" \")\n\nprint(\"atributeDiscretizeEF\")\n\nprint(\"data:\")\n\ndat = np.arange(1,11)\n\nprint(dat)\n\nprint(\"RESULT:-------------------\")\n\ndiscrete_dat, cutoff = sp.atributeDiscretizeEF(dat, 3)\n\nprint(\"discrete_dat: \", discrete_dat)\n\nprint(\"cutoff: \", cutoff)\n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n\n\n\n\nprint(\"TEST2\")\n\nprint(\" \")\n\n#TEST\n\nprint(\"datasetDiscretizeEF\")\n\nprint(\"data:\")\n\ndata=np.random.randint(10,size=(10,10))\n\nprint(data)\n\nprint(\"RESULT:-------------------\")\n\nprint(sp.datasetDiscretizeEF(data,5))\n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n\n\nprint(\"TEST3\")\n\nprint(\" \")\n\n#TEST\n\nprint(\"atributeDiscretizeEW\")\n\nprint(\"data:\")\n\ndat = np.arange(1,11)\n\nprint(dat)\n\ndiscrete_dat, cutoff = sp.atributeDiscretizeEW(dat, 3)\n\nprint(\"RESULT:-------------------\")\n\nprint(\"discrete_dat: \", discrete_dat)\n\nprint(\"cutoff: \", cutoff)\n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n\n\nprint(\"TEST4\")\n\nprint(\" \")\n\n#TEST\n\ndata=np.random.rand(10,10)\n\nprint(\"datasetDiscretizeEW\")\n\nprint(\"dat: \",data)\n\nprint(\"RESULT:-------------------\")\n\nprint(sp.datasetDiscretizeEW(data,5))\n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n\n\nprint(\"TEST5\") \n\nprint(\" \")\n\nprint(\"variance\")\n\n#TEST\n\nprint(\"data\")\n\nnumberCol=np.random.rand(10)\n\nprint(numberCol)\n\nprint(\"RESULT:-------------------\")\n\nprint(sp.variance(numberCol))\n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n \n\nprint(\"TEST6\")\n\nprint(\" \")\n\nprint(\"auc\")\n\nprint(\"data\")\n\n#TEST\n\nnumberCol=np.random.rand(10)\n\nnumberCol\n\nboolCol=np.random.randint(0,2,size=10)\n\nboolCol\n\nprint(numberCol)\n\nprint(boolCol)\n\nresult=sp.auc(numberCol,boolCol)\n\nprint(\"RESULT:-------------------\")\n\nprint(result)\n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n \n\nprint(\"TEST7\")\n\nprint(\" \")\n\nprint(\"datasetEntropy\")\n\n #TEST\n\nnumberCol=np.random.rand(10)\n\nboolCol=np.random.randint(0,2,size=10)\n\ndata=np.column_stack((numberCol,boolCol))\n\nprint(\"data\")\n\nprint(data)\n\nprint(\"RESULT:-------------------\")\n\nval=sp.datasetEntropy(data)\n\nprint(val) \n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n\n\nprint(\"TEST8\")\n\nprint(\" \")\n\nprint(\"variableNormalization\")\n\nprint(\"data:\")\n\nprint(np.array([1,2,3,4,5,5,65,4,3]))\n\n #TEST\n\nprint(\"RESULT:-------------------\")\n\ndata=sp.variableNormalization(np.array([1,2,3,4,5,5,65,4,3]))\n\nprint(data) \n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n\n\n\n\nprint(\"TEST9\")\n\nprint(\" \")\n\nprint(\"variableEstandarization\")\n\nprint(\"data:\")\n\nprint(np.array([1,2,3,4,5,5,65,4,3]))\n\n #TEST\n\nprint(\"RESULT:-------------------\")\n\ndata=sp.variableEstandarization(np.array([1,2,3,4,5,5,65,4,3]))\n\nprint(data)\n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n\n\nprint(\"TEST10\")\n\nprint(\" \")\n\nprint(\"datasetNormalization\")\n\n#TEST\n\ndata=np.random.rand(10,10)\n\na=np.array([1,2,3,4,5,5,65,4,3])\n\nb=np.array([3,2,6,4,99,5,25,42,1])\n\ndata=np.column_stack((a,b))\n\nprint(\"data:\")\n\nprint(data)\n\nprint(\"RESULT:-------------------\")\n\nnorm=sp.datasetNormalization(data.astype(float))\n\nprint(norm) \n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n\n\nprint(\"TEST11\")\n\nprint(\" \")\n\nprint(\"datasetEstandarization\")\n\n #TEST\n\ndata=np.random.rand(10,10)\n\na=np.array([1,2,3,4,5,5,65,4,3])\n\nb=np.array([3,2,6,4,99,5,25,42,1])\n\ndata=np.column_stack((a,b))\n\nprint(\"data:\")\n\nprint(data)\n\nprint(\"RESULT:-------------------\")\n\nnorm=sp.datasetEstandarization(data.astype(float))\n\nprint(norm) \n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n\n\nprint(\"TEST12\")\n\nprint(\" \")\n\nprint(\"filterDataset\")\n\n #TEST\n\ndata=np.random.rand(10,10)\n\na=np.array([1,2,3,4,5,5,65,4,3])\n\nb=np.array([1,2,3,4,5,56,65,4,3])\n\nc=np.array([3,2,6,4,99,5,25,42,1])\n\ndata=np.column_stack((a,b,c))\n\nprint(\"data:\")\n\nprint(data)\n\nprint(\"RESULT:-------------------\")\n\nval=sp.filterDataset(np.array(data.astype(float)),10000,\"variance\")\n\nprint(val)\n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n\n\nprint(\"TEST13\")\n\nprint(\" \")\n\nprint(\"atributesCorrelation\")\n\n #TEST\n\ndata=np.random.rand(10,10)\n\na=np.array([1,2,3,4,5,5,65,4,3])\n\nb=np.array([3,2,6,4,99,5,25,42,1])\n\nb=np.array([3,4,4,4,9,5,25,42,1])\n\ndata=np.column_stack((a,b,c))\n\nprint(\"data:\")\n\nprint(data)\n\nprint(\"RESULT:-------------------\")\n\nnorm=sp.atributesCorrelation(data.astype(float))\n\nprint(norm) \n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n\n\nprint(\"TEST14\")\n\nprint(\" \")\n\nprint(\"plotAUC\")\n\n #TEST\n\nnumberCol=np.random.rand(10)\n\nboolCol=np.random.randint(0,2,size=10)\n\nprint(\"data:\")\n\nprint(numberCol)\n\nprint(\"data:\")\n\nprint(boolCol)\n\nprint(\"RESULT:-------------------\")\n\nresult=sp.plotAUC(numberCol,boolCol)\n\nprint(result)\n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n\n\nprint(\"TEST15\") \n\nprint(\" \")\n\nprint(\"plotMutualInformation\")\n\ndata=np.random.rand(10,2)\n\nprint(\"data:\")\n\nprint(data)\n\nprint(\"RESULT:-------------------\")\n\nprint(sp.plotMutualInformation(data))\n\nprint(\"--------------------------\")\n\nprint(\" \")\n\n\n\nprint(\"TEST16\")\n\nprint(\" \")\n\nprint(\"datasetRead\")\n\nprint(\"RESULT:-------------------\")\n\ndata=sp.datasetRead('/content/myData.csv') \n\nprint(data)\n\nprint(\"--------------------------\")\n\n\n\n\n\nprint(\"TEST17\")\n\nprint(\" \")\n\nprint(\"writeDatasetCSV\")\n\ndata=np.random.rand(10,2)\n\nprint(\"data:\")\n\nprint(data)\n\nprint(\"RESULT:-------------------\")\n\nprint(sp.writeDatasetCSV(data,'newData.csv'))\n\nprint(\"--------------------------\")\n\n\n\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SciProgPackage",
    "package_url": "https://pypi.org/project/SciProgPackage/",
    "platform": null,
    "project_url": "https://pypi.org/project/SciProgPackage/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/SciProgPackage/1.2.0/",
    "requires_dist": [
      "numpy",
      "scikit-learn",
      "matplotlib",
      "pandas"
    ],
    "requires_python": "",
    "summary": "Demo library",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13674969,
  "releases": {
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06a353f521101d79f99423d22c1d262f96e0a09079ef399e2ded64306e468065",
          "md5": "04ea98abd0df2ac9f604d408de77d7c9",
          "sha256": "faab1b418e7ffea8369ceff7a986d14529948fe4bd853488471f7b4f92cfc83f"
        },
        "downloads": -1,
        "filename": "SciProgPackage-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04ea98abd0df2ac9f604d408de77d7c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5161,
        "upload_time": "2022-04-30T15:03:00",
        "upload_time_iso_8601": "2022-04-30T15:03:00.341981Z",
        "url": "https://files.pythonhosted.org/packages/06/a3/53f521101d79f99423d22c1d262f96e0a09079ef399e2ded64306e468065/SciProgPackage-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26e48aaef0f0ae99bea04ae8eca06abfc6d8852305730c683b26d7feebdc5be2",
          "md5": "4dabbc849d3f0be65a54ab196c8b78ea",
          "sha256": "507c965e755a9eaa5fbb8ade0655bbce194ce4914a6f31a38d986f4a198e74e3"
        },
        "downloads": -1,
        "filename": "SciProgPackage-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4dabbc849d3f0be65a54ab196c8b78ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6019,
        "upload_time": "2022-04-30T15:03:02",
        "upload_time_iso_8601": "2022-04-30T15:03:02.173681Z",
        "url": "https://files.pythonhosted.org/packages/26/e4/8aaef0f0ae99bea04ae8eca06abfc6d8852305730c683b26d7feebdc5be2/SciProgPackage-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06a353f521101d79f99423d22c1d262f96e0a09079ef399e2ded64306e468065",
        "md5": "04ea98abd0df2ac9f604d408de77d7c9",
        "sha256": "faab1b418e7ffea8369ceff7a986d14529948fe4bd853488471f7b4f92cfc83f"
      },
      "downloads": -1,
      "filename": "SciProgPackage-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "04ea98abd0df2ac9f604d408de77d7c9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5161,
      "upload_time": "2022-04-30T15:03:00",
      "upload_time_iso_8601": "2022-04-30T15:03:00.341981Z",
      "url": "https://files.pythonhosted.org/packages/06/a3/53f521101d79f99423d22c1d262f96e0a09079ef399e2ded64306e468065/SciProgPackage-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26e48aaef0f0ae99bea04ae8eca06abfc6d8852305730c683b26d7feebdc5be2",
        "md5": "4dabbc849d3f0be65a54ab196c8b78ea",
        "sha256": "507c965e755a9eaa5fbb8ade0655bbce194ce4914a6f31a38d986f4a198e74e3"
      },
      "downloads": -1,
      "filename": "SciProgPackage-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4dabbc849d3f0be65a54ab196c8b78ea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6019,
      "upload_time": "2022-04-30T15:03:02",
      "upload_time_iso_8601": "2022-04-30T15:03:02.173681Z",
      "url": "https://files.pythonhosted.org/packages/26/e4/8aaef0f0ae99bea04ae8eca06abfc6d8852305730c683b26d7feebdc5be2/SciProgPackage-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}