{
  "info": {
    "author": "Bibin  Varghese",
    "author_email": "bibinvargheset@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "`Precise_scheduler <https://schedule.readthedocs.io/>`__\n=========================================================\n\n\nPython job scheduling for humans. Run Python functions (or any other callable) periodically using a friendly syntax.\n\n- A simple to use API for scheduling jobs, made for humans.\n- In-process scheduler for periodic jobs. No extra processes needed!\n- Very lightweight and no external dependencies.\n- Excellent test coverage.\n\nUsage\n-----\n\n.. code-block:: bash\n\n    $ pip install precise-scheduler\n\n.. code-block:: python\n\n\n    import datetime\n    import precise_scheduler\n    import time\n    import pause\n\n    scheduler = precise_scheduler.Scheduler(schedule_base=\"last_schedule\")\n    #scheduler = precise_scheduler.Scheduler(schedule_base=\"last_run_start\")\n    #scheduler = precise_scheduler.Scheduler()\n\n\n    def greet(name):\n        print(\"Hello\", name, datetime.datetime.now())\n        time.sleep(1)\n\n\n    scheduler.every(2).seconds.do(greet, name=\"Alice\")\n    scheduler.every(4).seconds.do(greet, name=\"Bob\")\n\n    from precise_scheduler import every, repeat\n\n\n    @repeat(scheduler.every(5).seconds, \"World\")\n    @repeat(scheduler.every().day, \"Mars\")\n    def hello(planet):\n        print(\"Hello\", planet, datetime.datetime.now())\n        time.sleep(0.5)\n\n\n    while True:\n        pause.until(scheduler.get_next_run())\n        scheduler.run_pending()\n\n    # Hello Alice 2023-03-02 12:24:31.000249\n    # Hello Alice 2023-03-02 12:24:33.000094\n    # Hello Bob 2023-03-02 12:24:34.001463\n    # Hello World 2023-03-02 12:24:35.003073\n    # Hello Alice 2023-03-02 12:24:35.503961\n    # Hello Alice 2023-03-02 12:24:37.000157\n    # Hello Bob 2023-03-02 12:24:38.001703\n    # Hello Alice 2023-03-02 12:24:39.003366\n    # Hello World 2023-03-02 12:24:40.004778\n    # Hello Alice 2023-03-02 12:24:41.000172\n\nComparison with schedule\n_________________________\n\nThis test will show how the old module (schedule ) drifts from the schedule on each execution and the new version is accurate to the schedule.\n\nThe small microseconds shown in time is the time it takes to execute the print statement,\ncall of function and slight difference of time.sleep(0.001) , which is common for both implementations\n\n.. code-block:: bash\n\n    $ pip install precise-scheduler\n    $ pip install schedule\n\n.. code-block:: python\n\n\n        import datetime\n        import precise_scheduler\n        import time\n        import schedule\n\n        scheduler = precise_scheduler.Scheduler(schedule_base=\"last_schedule\")\n        schedule_old = schedule.Scheduler()\n\n\n        def greet(name):\n            print(\"Hello\", name, datetime.datetime.now())\n            time.sleep(1)\n\n\n        scheduler.every(3).seconds.do(greet, name=\"precise_scheduler\")\n        schedule_old.every(3).seconds.do(greet, name=\"schedule\")\n\n        while True:\n\n            time.sleep(0.001)\n            scheduler.run_pending()\n            schedule_old.run_pending()\n\n\n\n    # Hello precise_scheduler 2023-03-08 11:16:42.000479\n    # Hello schedule 2023-03-08 11:16:43.001039\n    # Hello precise_scheduler 2023-03-08 11:16:45.000918\n    # Hello schedule 2023-03-08 11:16:47.002968\n    # Hello precise_scheduler 2023-03-08 11:16:48.004551\n    # Hello precise_scheduler 2023-03-08 11:16:51.000129\n    # Hello schedule 2023-03-08 11:16:52.001413\n\nBackground\n----------\n\nThis package is a slight improvement of https://github.com/dbader/schedule\n\nThe changes are\n\n- Previously the calculation of next schedule was based on end of execution. Now you can also select based on start of last execution start or based on schedule (will be same unless you have a on demand execution).\n\n- All schedules will be truncated to 0 microseconds.\n\n- The code is updated to newer Pep requirements\n\nThe  reason for starting this package is the above updates are really needed and the package has not being updated for long and is under MIT licence.\n\nFor now the documentation remains the same only difference is mentioned below in code example and you can check out examples folder for python files\n\n\nDocumentation\n-------------\n\nprecise_scheduler's documentation lives at `precise_scheduler.readthedocs.io <https://precise_scheduler.readthedocs.io/>`_.\n\n\nMeta\n----\n\nBibin Varghese - `@bibinvargheset <https://twitter.com/bibinvargheset>`_ - bibinvargheset@gmail.com\n\nThis package is a based on https://github.com/dbader/schedule\n\nInspired by `Adam Wiggins' <https://github.com/adamwiggins>`_ article `\"Rethinking Cron\" <https://adam.herokuapp.com/past/2010/4/13/rethinking_cron/>`_ and the `clockwork <https://github.com/Rykian/clockwork>`_ Ruby module.\n\nDistributed under the MIT license. See `LICENSE.txt <https://github.com/bibinvargheset/precise_scheduler/LICENSE.txt>`_ for more information.\n\nhttps://github.com/bibinvargheset/precise_scheduler\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bibinvargheset/precise_scheduler",
    "keywords": "precise_scheduler,periodic,jobs,scheduling,clockwork,cron,precise_scheduler,job scheduling",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "precise-scheduler",
    "package_url": "https://pypi.org/project/precise-scheduler/",
    "platform": null,
    "project_url": "https://pypi.org/project/precise-scheduler/",
    "project_urls": {
      "Homepage": "https://github.com/bibinvargheset/precise_scheduler"
    },
    "release_url": "https://pypi.org/project/precise-scheduler/2.0.1b0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Job scheduling for humans.",
    "version": "2.0.1b0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17203115,
  "releases": {
    "2.0.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d428c310ca84fe8d2381d2f55bdfc6f1684c2a24c7259230eff065f5656c1b71",
          "md5": "8201a4701120a1b18d896fb7a4099fa7",
          "sha256": "05306441ea671a9e51a28c170cb2be9b506f65d3df92ce02e77cb2ae44781419"
        },
        "downloads": -1,
        "filename": "precise_scheduler-2.0.0b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8201a4701120a1b18d896fb7a4099fa7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19601,
        "upload_time": "2023-03-07T16:31:34",
        "upload_time_iso_8601": "2023-03-07T16:31:34.324321Z",
        "url": "https://files.pythonhosted.org/packages/d4/28/c310ca84fe8d2381d2f55bdfc6f1684c2a24c7259230eff065f5656c1b71/precise_scheduler-2.0.0b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c7a5baf9cff72be18a1378916bbeb9a471425ecc069680e8d0bcfee83f207ba",
          "md5": "dd6287f4761e64626bb7f62cb1bee5c1",
          "sha256": "26e766413fe954c68aa23f96f8e336a5db95fda35b280446eb6b5a146a5fdaa9"
        },
        "downloads": -1,
        "filename": "precise_scheduler-2.0.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "dd6287f4761e64626bb7f62cb1bee5c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20849,
        "upload_time": "2023-03-07T16:31:36",
        "upload_time_iso_8601": "2023-03-07T16:31:36.965591Z",
        "url": "https://files.pythonhosted.org/packages/7c/7a/5baf9cff72be18a1378916bbeb9a471425ecc069680e8d0bcfee83f207ba/precise_scheduler-2.0.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "452fa75eb34357e9ae435d465ed20ea55461d0fe9e7918368a38a9f9f9cdf70e",
          "md5": "a6407f56f8b3396aaa7529e0bec3ce62",
          "sha256": "8bf4ad553329446cbd61cb69faddf04459107292838008fbf41b11e40f46610a"
        },
        "downloads": -1,
        "filename": "precise_scheduler-2.0.1b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6407f56f8b3396aaa7529e0bec3ce62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19926,
        "upload_time": "2023-03-08T06:23:25",
        "upload_time_iso_8601": "2023-03-08T06:23:25.863858Z",
        "url": "https://files.pythonhosted.org/packages/45/2f/a75eb34357e9ae435d465ed20ea55461d0fe9e7918368a38a9f9f9cdf70e/precise_scheduler-2.0.1b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3716c8f88eff5045e0a1e6688a97c3988d960d6e393aa0596465e243b6274cef",
          "md5": "3c9811daa66f86d44d3d2d69ab96b6c4",
          "sha256": "8a0a629bcd45e9b29303073d76010a12bc71fd8f1cef922467722769a95be8d5"
        },
        "downloads": -1,
        "filename": "precise_scheduler-2.0.1b0.tar.gz",
        "has_sig": false,
        "md5_digest": "3c9811daa66f86d44d3d2d69ab96b6c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21479,
        "upload_time": "2023-03-08T06:23:28",
        "upload_time_iso_8601": "2023-03-08T06:23:28.533926Z",
        "url": "https://files.pythonhosted.org/packages/37/16/c8f88eff5045e0a1e6688a97c3988d960d6e393aa0596465e243b6274cef/precise_scheduler-2.0.1b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "452fa75eb34357e9ae435d465ed20ea55461d0fe9e7918368a38a9f9f9cdf70e",
        "md5": "a6407f56f8b3396aaa7529e0bec3ce62",
        "sha256": "8bf4ad553329446cbd61cb69faddf04459107292838008fbf41b11e40f46610a"
      },
      "downloads": -1,
      "filename": "precise_scheduler-2.0.1b0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a6407f56f8b3396aaa7529e0bec3ce62",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19926,
      "upload_time": "2023-03-08T06:23:25",
      "upload_time_iso_8601": "2023-03-08T06:23:25.863858Z",
      "url": "https://files.pythonhosted.org/packages/45/2f/a75eb34357e9ae435d465ed20ea55461d0fe9e7918368a38a9f9f9cdf70e/precise_scheduler-2.0.1b0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3716c8f88eff5045e0a1e6688a97c3988d960d6e393aa0596465e243b6274cef",
        "md5": "3c9811daa66f86d44d3d2d69ab96b6c4",
        "sha256": "8a0a629bcd45e9b29303073d76010a12bc71fd8f1cef922467722769a95be8d5"
      },
      "downloads": -1,
      "filename": "precise_scheduler-2.0.1b0.tar.gz",
      "has_sig": false,
      "md5_digest": "3c9811daa66f86d44d3d2d69ab96b6c4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 21479,
      "upload_time": "2023-03-08T06:23:28",
      "upload_time_iso_8601": "2023-03-08T06:23:28.533926Z",
      "url": "https://files.pythonhosted.org/packages/37/16/c8f88eff5045e0a1e6688a97c3988d960d6e393aa0596465e243b6274cef/precise_scheduler-2.0.1b0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}