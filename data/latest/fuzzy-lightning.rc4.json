{
  "info": {
    "author": "Tom Matthews",
    "author_email": "tomukmatthews@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# fuzzy-lightning\n\nFuzzy lightning is a fast and customizable package for finding the closest matches in a list of target strings (documents) using fuzzy string matching. It is particularly effective for short string matching against large document sets, and includes the fastest implementation of the Damerau-Levenshtein and longest common substring algorithms in its class.\n\n## Introduction\nFuzzy lightning works by:\n1. Converts strings to embedding vectors using an sklearn TF-IDF vectorizer on character n-grams.\n2. Generates a shortlist of match candidates from the top N nearest neighbours (using cosine similarity).\n3. This list of candidates is then pruned to select the best match using the longest common substring to length ratio.\n\n### Quick Start\n\n#### Installation\n\n`pip install fuzzy-lightning`\n\nFinding the closest matches in a list of documents for a list of input strings:\n\n```\nfrom fuzzy_lightning import FuzzyMatch\n\ndocuments = [\"SMARTEST ENERGY\", \"SMARTPIG\"]\nfuzzy_matcher = FuzzyMatch(documents=documents)\nstrings = ['SMARTPIGGIE', 'THE SMARTEST ENERGY']\nmatches = fuzzy_matcher.get_document_matches(strings=strings)\nprint(matches)\n>>> [\n    DocumentMatch(match='SMARTPIG', confidence=1.0),\n    DocumentMatch(match='SMARTEST ENERGY', confidence=1.0)\n]\n```\n\nThe output is a list of DocumentMatch objects, each with a match attribute that contains the closest matching document and a confidence attribute that represents the confidence of the match (a value between 0 and 1):\n\nIf you want to find the closest match for a single string, you can use the get_lookup_match method:\n\n```\nmatch = fuzzy_matcher.get_document_match('SMARTPIGGIE')\nprint(match)\n>>> DocumentMatch(match='SMARTPIG', confidence=1.0)\n```\n\n### Configuration\n\nThe FuzzyMatch class has a number of configurable parameters that you can set using the `FuzzyMatchConfig` class. \n\n- **n_gram_range** (Tuple[int, int]): Range of lengths of n-grams to use with the TF-IDF vectorizer. For example,\n    n_gram_range = (2, 3) will use bi-grams and tri-grams.\n- **min_document_freq** (int, optional): Minimum number of documents a term must appear in to be considered.\n    Defaults to 1.\n- **tfidf_similarity_threshold** (float, optional): Minimum cosine similarity to a viable candidate for LCS.\n    Defaults to 0.1.\n- **n_top_candidates** (int, optional): Maximum number of candidates to return that exceed the\n    similarity_threshold. Defaults to 40.\n- **lcs_min_characters** (int): Minimum length of the string to qualify for matching to the target strings.\n- **lcs_min_length_ratio** (float): Minimum ratio of string length to target string length for an string <> target\n    string match to qualify.\n- **lcs_similarity_threshold** (float, optional): Minimum LCS match ratio to accept classification.\nuse_threads** (bool): Whether to use threads to parallelise the work to find the n_top_candidates for each\n    string.\n- **n_threads** (int): Number of threads to use when finding the n_top_candidates. Increasing the number of threads\n    reduces the run time, but there becomes a trade off in production where there may be 'thread congestion'.\n- **string_preprocessor** (Optional[Callable[[str], str]]): A callable that takes in a string and returns a processed\n    string. This can be used to perform any preprocessing steps on the input strings before they are compared.\n\nFor example, to change the range of n-grams used by the TF-IDF vectorizer, and to add some string preprocessing prior\nto the fuzzy matching you can do the following:\n\n```\nfrom fuzzy_lightning import FuzzyMatch, FuzzyMatchConfig\n\ndef preprocessor(string: str) -> str:\n    return string.lower().replace(\" \", \"\")\n\nconfig = FuzzyMatchConfig(n_gram_range=(1, 2), string_preprocessor=preprocessor)\nfuzzy_matcher = FuzzyMatch(documents=['abc', 'def'], config=config)\n```\n\n## Longest Common Substring\n\nFinds the longest substring that is common to two strings. It is used to calculate the confidence of the fuzzy match.\n\n```\nfrom fuzzy_lightning import lcs\nlcs.longest_common_substring_length('beersteinbeer', 'stein')\n>>> 5\n```\n\nIn terms of latency, a single longest common substring length call is < 0.5Î¼s\n\n```\nfrom fuzzy_lightning import lcs\nfrom timeit import timeit\n\nn_iter = 1000000\ntimeit(\"lcs.longest_common_substring_length('beersteinbeer', 'stein')\", globals=globals(), number=n_iter)/n_iter\n\n>>> 3.182171669322997e-07\n```\n\n\n\n## Edit Distance Algorithms\n\n### Damerau-Levenshtein\n\nThe Damerau-Levenshtein algorithm is a string edit distance algorithm calculates the minimum number of operations (insertions, deletions, substitutions, and transpositions) required to transform one string into another. Basically Levenshtein but also\nallow for transpositions.\n\n```\nfrom fuzzy_lightning import edit_distance as ed\ndist = ed.damerau_levenshtein('my nam is spetl wrrong', 'my name is spelt wrong')\nprint(dist)\n>>> 3\n```\n\n## Appendix\n\n### Why is this super fast?\n\n1. C++\n2. Dynamic Programming\n3. Cache locality benefits of using a 1D array to mimic the behaviour of a 2D array\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tomukmatthews/fuzzy-lightning",
    "keywords": "Fuzzy,String,Lookup,Search,Match,Similarity",
    "license": "",
    "maintainer": "Tom Matthews",
    "maintainer_email": "tomukmatthews@gmail.com",
    "name": "fuzzy-lightning",
    "package_url": "https://pypi.org/project/fuzzy-lightning/",
    "platform": null,
    "project_url": "https://pypi.org/project/fuzzy-lightning/",
    "project_urls": {
      "Homepage": "https://github.com/tomukmatthews/fuzzy-lightning"
    },
    "release_url": "https://pypi.org/project/fuzzy-lightning/0.1.6/",
    "requires_dist": null,
    "requires_python": ">=3.8.1,<4.0.0",
    "summary": "Perform fast fuzzy string lookups.",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16507996,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "213b853e90e77a73bfc5a8803e28a53754fdef206e12a66ec793dde85dc29e02",
          "md5": "ea60bf5d8a2b050cc3cb2be291323a67",
          "sha256": "086b71ee19fe1da47dc4d0a92560851d85264f2ae24c6d82ce4e1acb80c4be95"
        },
        "downloads": -1,
        "filename": "fuzzy_lightning-0.1.3-cp39-cp39-macosx_13_0_arm64.whl",
        "has_sig": false,
        "md5_digest": "ea60bf5d8a2b050cc3cb2be291323a67",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 114276,
        "upload_time": "2023-01-02T01:02:20",
        "upload_time_iso_8601": "2023-01-02T01:02:20.467553Z",
        "url": "https://files.pythonhosted.org/packages/21/3b/853e90e77a73bfc5a8803e28a53754fdef206e12a66ec793dde85dc29e02/fuzzy_lightning-0.1.3-cp39-cp39-macosx_13_0_arm64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95f31caef9533e3fb31c9c84dc2f3ca2801f98b2a2e99d1b6690c6d47fa374af",
          "md5": "89839ad9d3677fb5bd75ccf274de2779",
          "sha256": "73736560a87cfac4a188c4954ca6911808b01b9071c853a48ef8716d9dbb641f"
        },
        "downloads": -1,
        "filename": "fuzzy-lightning-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "89839ad9d3677fb5bd75ccf274de2779",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 10997,
        "upload_time": "2023-01-02T01:02:22",
        "upload_time_iso_8601": "2023-01-02T01:02:22.684418Z",
        "url": "https://files.pythonhosted.org/packages/95/f3/1caef9533e3fb31c9c84dc2f3ca2801f98b2a2e99d1b6690c6d47fa374af/fuzzy-lightning-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7a10f4ffe267c9d8a6e47ff7d5d54d2e06404f1e676b42a459583d2cc9d5df3",
          "md5": "5bf84562fb8dfe8b928d799493ea3fa8",
          "sha256": "4760dc574a3fc0fe53ccd51d5f4cd6bf7535f1cc02c6a498a83f3a120882d1e7"
        },
        "downloads": -1,
        "filename": "fuzzy_lightning-0.1.4-cp39-cp39-macosx_13_0_arm64.whl",
        "has_sig": false,
        "md5_digest": "5bf84562fb8dfe8b928d799493ea3fa8",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 115955,
        "upload_time": "2023-01-02T01:07:13",
        "upload_time_iso_8601": "2023-01-02T01:07:13.099170Z",
        "url": "https://files.pythonhosted.org/packages/a7/a1/0f4ffe267c9d8a6e47ff7d5d54d2e06404f1e676b42a459583d2cc9d5df3/fuzzy_lightning-0.1.4-cp39-cp39-macosx_13_0_arm64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d624a91e463fc3d0bc79535c791b5a96a15c6cf3b9c477167808c0f463e2846b",
          "md5": "746143cb45f7c60239880d3dfd65b5b9",
          "sha256": "751ca0ce6185c4e382301b2cfb1b4a70d058cd19046a87a8320d153d069adfd2"
        },
        "downloads": -1,
        "filename": "fuzzy-lightning-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "746143cb45f7c60239880d3dfd65b5b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 11961,
        "upload_time": "2023-01-02T01:07:14",
        "upload_time_iso_8601": "2023-01-02T01:07:14.725059Z",
        "url": "https://files.pythonhosted.org/packages/d6/24/a91e463fc3d0bc79535c791b5a96a15c6cf3b9c477167808c0f463e2846b/fuzzy-lightning-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f476d74600501966dd8ea1bf10590b70350465d03ee2c4fd1514a8083d65b92",
          "md5": "f0de2c188b80449533e573513e9fbfbf",
          "sha256": "09016134d83f2523607eb2cebdfd1fe5121135e13d39ed9dfed62c70b857e548"
        },
        "downloads": -1,
        "filename": "fuzzy_lightning-0.1.5-cp39-cp39-macosx_13_0_arm64.whl",
        "has_sig": false,
        "md5_digest": "f0de2c188b80449533e573513e9fbfbf",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 116231,
        "upload_time": "2023-01-02T01:20:19",
        "upload_time_iso_8601": "2023-01-02T01:20:19.253004Z",
        "url": "https://files.pythonhosted.org/packages/2f/47/6d74600501966dd8ea1bf10590b70350465d03ee2c4fd1514a8083d65b92/fuzzy_lightning-0.1.5-cp39-cp39-macosx_13_0_arm64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "918b1164b648c01c0c5e1cf95bae7a22a9d567312551c0b3919bd9fa31358539",
          "md5": "a6d2edcc3929fc2b4540d8569e08fef9",
          "sha256": "ebb35ab4fad7c123cb4af832c131df52b71ecf70f3419861309462da8a683a0f"
        },
        "downloads": -1,
        "filename": "fuzzy-lightning-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a6d2edcc3929fc2b4540d8569e08fef9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 12434,
        "upload_time": "2023-01-02T01:20:22",
        "upload_time_iso_8601": "2023-01-02T01:20:22.008058Z",
        "url": "https://files.pythonhosted.org/packages/91/8b/1164b648c01c0c5e1cf95bae7a22a9d567312551c0b3919bd9fa31358539/fuzzy-lightning-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d39ef3f78ec51ac2ac963f72434c472dad562556a04cfb77c271ae5f5a0bc2a3",
          "md5": "241a89e2674ced3a857bd069dd2f66a5",
          "sha256": "7179d0f98c93f6367caba48f80f7daf1df157a63ca1d3827ed2cf91bdab56866"
        },
        "downloads": -1,
        "filename": "fuzzy-lightning-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "241a89e2674ced3a857bd069dd2f66a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 12850,
        "upload_time": "2023-01-21T00:53:53",
        "upload_time_iso_8601": "2023-01-21T00:53:53.732305Z",
        "url": "https://files.pythonhosted.org/packages/d3/9e/f3f78ec51ac2ac963f72434c472dad562556a04cfb77c271ae5f5a0bc2a3/fuzzy-lightning-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d39ef3f78ec51ac2ac963f72434c472dad562556a04cfb77c271ae5f5a0bc2a3",
        "md5": "241a89e2674ced3a857bd069dd2f66a5",
        "sha256": "7179d0f98c93f6367caba48f80f7daf1df157a63ca1d3827ed2cf91bdab56866"
      },
      "downloads": -1,
      "filename": "fuzzy-lightning-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "241a89e2674ced3a857bd069dd2f66a5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.1,<4.0.0",
      "size": 12850,
      "upload_time": "2023-01-21T00:53:53",
      "upload_time_iso_8601": "2023-01-21T00:53:53.732305Z",
      "url": "https://files.pythonhosted.org/packages/d3/9e/f3f78ec51ac2ac963f72434c472dad562556a04cfb77c271ae5f5a0bc2a3/fuzzy-lightning-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}