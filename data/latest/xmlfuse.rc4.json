{
  "info": {
    "author": "Mike Kroutikov",
    "author_email": "mkroutikov@innodata.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# xmlfuse\n[![Build Status](https://travis-ci.org/innodatalabs/xmlfuse.svg?branch=master)](https://travis-ci.org/innodatalabs/xmlfuse)\n[![PyPI version](https://badge.fury.io/py/xmlfuse.svg)](https://badge.fury.io/py/xmlfuse)\n\nGiven two XML documents having the same text, fuses the markup together to create the output XML document.\n\n## Installation\n\n```\npip install xmlfuse\n```\n\n### Building and testing:\nIf you prefer to build from sources, follow these steps:\n\n```\nmake venv\nmake\n```\n\n## API\n```python\nimport lxml.etree as et\nfrom xmlfuse.fuse import fuse\n\nxml1 = et.fromstring('<span>Hello, <i>world!</i></span>')\nxml2 = et.fromstring('<span><b>Hello</b>, world!</span>')\n\nxml = fuze(xml1, xml2)\nassert et.tostring(xml) == b'<span><b>Hello</b>, <i>world!</i></span>'\n```\n\n# Input documents must have exactly the same text\nError is raised if text differs. Whitespace does matter!\n\nExample:\n```python\nxml1 = et.fromstring('<span>Hello</span>')\nxml2 = et.fromstring('<span>Good bye</span>')\n\nxml = fuze(xml1, xml2)\n# expect RuntimeError raised\n```\n\n# Conflicting markup\nConflicting markup. Sometimes it is not possible to merge two markups, because tags intersect. In such a case one has a choice:\n\n  a. Raise an exception and let caller handle the problem\n  b. Resolve by segmenting one of the markups\n\nWe treat first document as **master**, and second as **slave**. Master markup is never segmented. If there is a\nconflict between master and slave markups (and if `auto_segment` flag is `True`), `fuse()` will segment slave to make markup consistent.\n\nExample:\n```python\nxml1 = et.fromstring('<span>Hel<i>lo, world!</i></span>')\nxml2 = et.fromstring('<span><b>Hello</b>, world!</span>')\n\nxml = fuze(xml1, xml2)\nassert et.tostring(xml) == b'<span><b>Hel<i>lo</i></b></i>, <i>world!</i></span>'\n```\n\nSet `auto_segment` flag to `False` to prevent segmentation. Error will be raised instead, if conflict detected.\n\n# Ambiguities\nWhen master ans slave markups wrap the same text, there is a nesting ambuguity - which tag should be inner?\n\nWe resolve this by consistently trying to put **slave** markup inside the **master**. This behavior can be changed\nby setting the flag `prefer_slave_inner` to false.\n\nExample:\n```python\nxml1 = et.fromstring('<span><i>Hello</i>, world!</span>')\nxml2 = et.fromstring('<span><b>Hello</b>, world!</span>')\n\nxml = fuze(xml1, xml2, prefer_slave_inner=True)\nassert et.tostring(xml) == b'<span><b><i>Hello</i></b>, world!</span>'\n\nxml = fuze(xml1, xml2, prefer_slave_inner=False)\nassert et.tostring(xml) == b'<span><i><b>Hello</b></i>, world!</span>'\n```\n\n# Slave top-level tag is dropped\nNote that top-level tag from slave is not merged. It is just dropped. If you want it to be merged into the output,\nset `strip_slave_top_tag=False`.\n\n# fuse() signature\n\n```python\nfuse(xml1, xml2, *, prefer_slave_inner=True, auto_segment=True, strip_slave_top_tag=True)\n```\nWhere:\n* `xml1` is the master XML document (LXML Element object, see http://lxml.de)\n* `xml2` is the slave XML document\n* `prefer_slave_inner` controls ambigiuty resolution\n* `auto_segment` allows slave smarkup segmentation in case of conflicting markup\n* `strip_slave_top_tag` allows `fuse` to ignore top-level tag from the slave XML\n\nReturns fused XML document\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/innodatalabs/xmlfuse",
    "keywords": "lxml xml merge fuse",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xmlfuse",
    "package_url": "https://pypi.org/project/xmlfuse/",
    "platform": "",
    "project_url": "https://pypi.org/project/xmlfuse/",
    "project_urls": {
      "Homepage": "https://github.com/innodatalabs/xmlfuse"
    },
    "release_url": "https://pypi.org/project/xmlfuse/0.0.4/",
    "requires_dist": [
      "lxml",
      "lxmlx"
    ],
    "requires_python": "",
    "summary": "Fuses two XML markups together",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6089330,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "faf6f4020b0b1df88ae5a20d076f3aac9721ec488b641a935cf4d56d418c227d",
          "md5": "46ebb74eac80714ab7b870ba0864e1a6",
          "sha256": "2c15ef9a10b664b3a05b18db13fe62faee422d400aa8b2cbe54b534388422b9f"
        },
        "downloads": -1,
        "filename": "xmlfuse-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46ebb74eac80714ab7b870ba0864e1a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5687,
        "upload_time": "2019-11-06T19:09:39",
        "upload_time_iso_8601": "2019-11-06T19:09:39.827394Z",
        "url": "https://files.pythonhosted.org/packages/fa/f6/f4020b0b1df88ae5a20d076f3aac9721ec488b641a935cf4d56d418c227d/xmlfuse-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d1eb09499150ef09d165147f5134e40723cb1098abf059d42746eee3ca0e544",
          "md5": "a170821dbb1a88f5e5169d1fa544269c",
          "sha256": "4ff0ab2cee9183bac9c6cd5267beeef05d761faf5d4debd4095d0bbdd01a62bb"
        },
        "downloads": -1,
        "filename": "xmlfuse-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a170821dbb1a88f5e5169d1fa544269c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6099,
        "upload_time": "2019-11-06T19:17:59",
        "upload_time_iso_8601": "2019-11-06T19:17:59.255784Z",
        "url": "https://files.pythonhosted.org/packages/0d/1e/b09499150ef09d165147f5134e40723cb1098abf059d42746eee3ca0e544/xmlfuse-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76d1ab8e0a47623863aba0fb8ebd1fd15b73cb2bef3ee3c631bc448ce6b8c6db",
          "md5": "afbb7f606c35f0e75b479c954094c8dc",
          "sha256": "5a289ba9cf5a0021f9757db69732134c3820a3f1e05232da06f6d63c7ebe0dfa"
        },
        "downloads": -1,
        "filename": "xmlfuse-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afbb7f606c35f0e75b479c954094c8dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6378,
        "upload_time": "2019-11-06T19:58:27",
        "upload_time_iso_8601": "2019-11-06T19:58:27.852153Z",
        "url": "https://files.pythonhosted.org/packages/76/d1/ab8e0a47623863aba0fb8ebd1fd15b73cb2bef3ee3c631bc448ce6b8c6db/xmlfuse-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2df88d884463df9d2e4af0feb35519f37c70d3c76c85cecdae1d0b46a8fcbfc",
          "md5": "9805a8b64f027e2cd0868f174226cd2a",
          "sha256": "554542f604b251b35b759b86ededb4a1139b81d51c0f3096de8bece218edaefb"
        },
        "downloads": -1,
        "filename": "xmlfuse-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9805a8b64f027e2cd0868f174226cd2a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6378,
        "upload_time": "2019-11-06T20:00:04",
        "upload_time_iso_8601": "2019-11-06T20:00:04.661951Z",
        "url": "https://files.pythonhosted.org/packages/b2/df/88d884463df9d2e4af0feb35519f37c70d3c76c85cecdae1d0b46a8fcbfc/xmlfuse-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b2df88d884463df9d2e4af0feb35519f37c70d3c76c85cecdae1d0b46a8fcbfc",
        "md5": "9805a8b64f027e2cd0868f174226cd2a",
        "sha256": "554542f604b251b35b759b86ededb4a1139b81d51c0f3096de8bece218edaefb"
      },
      "downloads": -1,
      "filename": "xmlfuse-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9805a8b64f027e2cd0868f174226cd2a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6378,
      "upload_time": "2019-11-06T20:00:04",
      "upload_time_iso_8601": "2019-11-06T20:00:04.661951Z",
      "url": "https://files.pythonhosted.org/packages/b2/df/88d884463df9d2e4af0feb35519f37c70d3c76c85cecdae1d0b46a8fcbfc/xmlfuse-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}