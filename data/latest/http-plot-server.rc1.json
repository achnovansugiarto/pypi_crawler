{
  "info": {
    "author": "qbee.io",
    "author_email": "pypi@qbee.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Customer Service",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: JavaScript",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Text Processing :: Markup :: HTML"
    ],
    "description": "# plot_server\nA lightweight http plot server written in python to visualize data locally. Storing only a fixed number of data points (100 per default) per measurement to keep the resources low.\n\nEmpty plot                 |  Selectable data\n:-------------------------:|:-------------------------:\n![](https://raw.githubusercontent.com/qbee-io/plot_server/main/img/empty_plot.png)  | ![](https://raw.githubusercontent.com/qbee-io/plot_server/main/img/two_plots.png)\n\n## Quickstart\nInstall the package via pip\n```\npip3 install http-plot-server\n```\n\nAdapt the settings in param.cfg to your needs and run\n\n```\nplot_server --cfg=param.cfg\n```\nor run the module as\n```\npython3 -m plot_server --cfg=param.cfg\n```\nand open your browser with the specified port, per default:\n```\nhttp://localhost:8080\n```\n\nYou can also leave out the cfg flag and default values will be used.\n\n## Command line options\n* `--host`: specifies the host (default: 0.0.0.0), can be `localhost` to avoid access from outside\n* `--port`: specifies the port the server runs on (default: 8080)\n* `--max-points`: specifies the maximum number of data points the plot server stores per measurement (default: 100)\n* `--cfg`: specifies the path to a config file containing the above command line arguments (see `misc/param.cfg`)\n\n## How to feed data to the plot_server\nYou can add data points to the plot_server by a simple http POST request including the json payload\n\n``` json\n{\n    \"tag\": \"Measurement Name\",\n    \"value\": 1234,\n    \"unit\": \"W\",\n    \"ts\": 1649859909\n}\n```\n\nWhere `unit` and `ts` are optional. If `ts` is not provided, then the time is used at which the post request is made. If `unit` is not provided, then the plot_server simply displays \"Value\" on the y-axis.\n\nAn example program feeding the plot_server is included in this repository and named `misc/data_injector.py`.\n\nA short python snippet would look like this\n``` python\nimport requests\ndata = {\n    \"tag\": \"Measurement Name\",\n    \"value\": 1234,\n    \"unit\": \"W\",\n    \"ts\": 1649859909\n}\nurl = \"http://localhost:8080\"\nrequests.post(url,json=data)\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/qbee-io/plot_server",
    "keywords": "plot server,visualization,plotly,http,measurements",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "http-plot-server",
    "package_url": "https://pypi.org/project/http-plot-server/",
    "platform": null,
    "project_url": "https://pypi.org/project/http-plot-server/",
    "project_urls": {
      "Homepage": "https://github.com/qbee-io/plot_server",
      "Source": "https://github.com/qbee-io/plot_server",
      "qbee Docs": "https://qbee.io/docs/",
      "qbee Homepage": "https://qbee.io/"
    },
    "release_url": "https://pypi.org/project/http-plot-server/0.1/",
    "requires_dist": [
      "python-dateutil"
    ],
    "requires_python": ">=3.5, <4",
    "summary": "A simple and lightweight http server to visualize measurements",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13513784,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a2f15ae1f54c885f2db664daeac3107476e649555eddbcb07aa20f9a9a5d5f8",
          "md5": "5fae661f9e0e936179db3b2e27a36248",
          "sha256": "e78ce45cf14a584c2cf607b5e39653bbee174c666d8cf7b48413df841dc74d36"
        },
        "downloads": -1,
        "filename": "http_plot_server-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5fae661f9e0e936179db3b2e27a36248",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <4",
        "size": 10315,
        "upload_time": "2022-04-14T12:23:54",
        "upload_time_iso_8601": "2022-04-14T12:23:54.048513Z",
        "url": "https://files.pythonhosted.org/packages/1a/2f/15ae1f54c885f2db664daeac3107476e649555eddbcb07aa20f9a9a5d5f8/http_plot_server-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2259e460075702f704fe60aa85c90e3cc0ad1a281321e1924bf6a478d7f0b2f",
          "md5": "50221bb59f5fb4e22ee0e718e1e9021a",
          "sha256": "99575d584145dd1576505b6e7ebc83c9fe348d748c891eb530548d9d7c702594"
        },
        "downloads": -1,
        "filename": "http-plot-server-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "50221bb59f5fb4e22ee0e718e1e9021a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 9310,
        "upload_time": "2022-04-14T12:23:55",
        "upload_time_iso_8601": "2022-04-14T12:23:55.707992Z",
        "url": "https://files.pythonhosted.org/packages/d2/25/9e460075702f704fe60aa85c90e3cc0ad1a281321e1924bf6a478d7f0b2f/http-plot-server-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a2f15ae1f54c885f2db664daeac3107476e649555eddbcb07aa20f9a9a5d5f8",
        "md5": "5fae661f9e0e936179db3b2e27a36248",
        "sha256": "e78ce45cf14a584c2cf607b5e39653bbee174c666d8cf7b48413df841dc74d36"
      },
      "downloads": -1,
      "filename": "http_plot_server-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5fae661f9e0e936179db3b2e27a36248",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5, <4",
      "size": 10315,
      "upload_time": "2022-04-14T12:23:54",
      "upload_time_iso_8601": "2022-04-14T12:23:54.048513Z",
      "url": "https://files.pythonhosted.org/packages/1a/2f/15ae1f54c885f2db664daeac3107476e649555eddbcb07aa20f9a9a5d5f8/http_plot_server-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2259e460075702f704fe60aa85c90e3cc0ad1a281321e1924bf6a478d7f0b2f",
        "md5": "50221bb59f5fb4e22ee0e718e1e9021a",
        "sha256": "99575d584145dd1576505b6e7ebc83c9fe348d748c891eb530548d9d7c702594"
      },
      "downloads": -1,
      "filename": "http-plot-server-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "50221bb59f5fb4e22ee0e718e1e9021a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5, <4",
      "size": 9310,
      "upload_time": "2022-04-14T12:23:55",
      "upload_time_iso_8601": "2022-04-14T12:23:55.707992Z",
      "url": "https://files.pythonhosted.org/packages/d2/25/9e460075702f704fe60aa85c90e3cc0ad1a281321e1924bf6a478d7f0b2f/http-plot-server-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}