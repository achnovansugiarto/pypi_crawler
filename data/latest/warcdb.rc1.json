{
  "info": {
    "author": "Florents Tselai",
    "author_email": "florents@tselai.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# WarcDB: Web crawl data as SQLite databases.\n\n`WarcDB` is a an `SQLite`-based file format that makes web crawl data easier to share and query.\n\n## Usage\n\n```shell\npip install warcdb\n```\n\n```shell\n\n# Load the `archive.warcdb` file with data.\nwarcdb import archive.warcdb ./tests/google.warc ./tests/frontpages.warc.gz \"https://tselai.com/data/google.warc\"\n\nwarcdb enable-fts ./archive.warcdb response payload\n\n# Saarch for records that mention \"stocks\" in their response body\nwarcdb search ./archive.warcdb response \"stocks\" -c \"WARC-Record-ID\"\n```\nAs you can see you can use any mix of local/remote and raw/compressed archives.\n\nFor example to get a part of the [Common Crawl January 2022 Crawl Archive ](https://data.commoncrawl.org/crawl-data/CC-MAIN-2022-05/index.html) in a streaming fashion:\n\n```shell\nwarcdb import archive.warcdb \"https://data.commoncrawl.org/crawl-data/CC-MAIN-2022-05/segments/1642320306346.64/warc/CC-MAIN-20220128212503-20220129002503-00719.warc.gz\n```\n\n## How It Works\n\nIndividual `.warc` files are read and parsed and their data is inserted into an SQLite database with the relational schema seen below.\n\n## Schema\n\nHere's the relational schema of the `.warcdb` file.\n\n\n![WarcDB Schema](schema.png)\n\n\n## Motivation\n\nFrom the `WARC` [formal specification](https://iipc.github.io/warc-specifications/specifications/warc-format/warc-1.1/):\n\n> The WARC (Web ARChive) file format offers a convention for concatenating multiple resource records (data objects),\n> each consisting of a set of simple text headers and an arbitrary data block into one long file.\n\nMany organizations such as Commoncrawl, WebRecorder, Archive.org and libraries around the world, use the `warc` format\nto archive and store web data.\n\nThe full datasets of these services range in the few pebibytes(PiB),\nmaking them impractical to query using non-distributed systems.\n\nThis project aims to make **subsets** such data easier to access and query using SQL.\n\nCurrently, this is implemented on top of SQLite and is a wrapper around the\nexcellent [SQLite-Utils](https://sqlite-utils.datasette.io/en/stable/) utility.\n\n`\"wrapper\"` means that all\nexisting `sqlite-utils` [CLI commands](https://sqlite-utils.datasette.io/en/stable/cli-reference.html)\ncan be called as expected like\n\n```shell\nsqlite-utils <command> archive.warcdb`\n```\nor\n```shell\nwarcdb <command> example.warcdb\n```\n\n## Examples\n\n### Populate with `wget`\n\n```shell\nwget --warc-file tselai \"https://tselai.com\"\n\nwarcdb import archive.warcdb tselai.warc.gz\n```\n\n### Get all response headers\n\n```shell\nsqlite3 archive.warcdb <<SQL\nselect  json_extract(h.value, '$.header') as header, \n        json_extract(h.value, '$.value') as value\nfrom response,\n     json_each(http_headers) h\nSQL\n```\n\n### Get Cookie Headers for requests and responses\n```shell\nsqlite3 archive.warcdb <<SQL\nselect json_extract(h.value, '$.header') as header, json_extract(h.value, '$.value') as value\nfrom response,\n     json_each(http_headers) h\nwhere json_extract(h.value, '$.header') like '%Cookie%'\nunion\nselect json_extract(h.value, '$.header') as header, json_extract(h.value, '$.value') as value\nfrom request,\n     json_each(http_headers) h\nwhere json_extract(h.value, '$.header') like '%Cookie%'\nSQL\n```\n\n\nResources on WARC\n----------------\n\n* [The stack: An introduction to the WARC file](https://archive-it.org/blog/post/the-stack-warc-file/)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Florents-Tselai/warcdb",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "warcdb",
    "package_url": "https://pypi.org/project/warcdb/",
    "platform": null,
    "project_url": "https://pypi.org/project/warcdb/",
    "project_urls": {
      "CI": "https://github.com/Florents-Tselai/warcdb/actions",
      "Homepage": "https://github.com/Florents-Tselai/warcdb",
      "Issues": "https://github.com/Florents-Tselai/warcdb/issues",
      "Source code": "https://github.com/Florents-Tselai/warcdb"
    },
    "release_url": "https://pypi.org/project/warcdb/0.1.0/",
    "requires_dist": [
      "sqlite-utils (==3.26.1)",
      "warcio (==1.7.4)",
      "click (==8.1.3)",
      "more-itertools",
      "tqdm",
      "pytest ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "WarcDB: Web crawl data as SQLite databases",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14177526,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35e77832df6d3cd73bb5a123567602b3120c510a23ff5aa2dc04b454a4693b66",
          "md5": "f4c23bb36f2121320c3ec287c00adf6a",
          "sha256": "50c0bdd7ea4f37212c79e2d69c2ff57dc8502108440504d42bbfaeb527d190b0"
        },
        "downloads": -1,
        "filename": "warcdb-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4c23bb36f2121320c3ec287c00adf6a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9323,
        "upload_time": "2022-06-19T13:24:10",
        "upload_time_iso_8601": "2022-06-19T13:24:10.930154Z",
        "url": "https://files.pythonhosted.org/packages/35/e7/7832df6d3cd73bb5a123567602b3120c510a23ff5aa2dc04b454a4693b66/warcdb-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05cb5682463fbdd3552620e1340f8a3c3b8b6f31cdb1bb906d6f41d55832eb3f",
          "md5": "a08d533a438e09bce911b9c978dcb0b0",
          "sha256": "7e19fd245cca732a288afa63335ab517f748e6d7a7ca608c44dbc4b18798649f"
        },
        "downloads": -1,
        "filename": "warcdb-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a08d533a438e09bce911b9c978dcb0b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 180452,
        "upload_time": "2022-06-19T13:24:13",
        "upload_time_iso_8601": "2022-06-19T13:24:13.361032Z",
        "url": "https://files.pythonhosted.org/packages/05/cb/5682463fbdd3552620e1340f8a3c3b8b6f31cdb1bb906d6f41d55832eb3f/warcdb-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35e77832df6d3cd73bb5a123567602b3120c510a23ff5aa2dc04b454a4693b66",
        "md5": "f4c23bb36f2121320c3ec287c00adf6a",
        "sha256": "50c0bdd7ea4f37212c79e2d69c2ff57dc8502108440504d42bbfaeb527d190b0"
      },
      "downloads": -1,
      "filename": "warcdb-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f4c23bb36f2121320c3ec287c00adf6a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9323,
      "upload_time": "2022-06-19T13:24:10",
      "upload_time_iso_8601": "2022-06-19T13:24:10.930154Z",
      "url": "https://files.pythonhosted.org/packages/35/e7/7832df6d3cd73bb5a123567602b3120c510a23ff5aa2dc04b454a4693b66/warcdb-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05cb5682463fbdd3552620e1340f8a3c3b8b6f31cdb1bb906d6f41d55832eb3f",
        "md5": "a08d533a438e09bce911b9c978dcb0b0",
        "sha256": "7e19fd245cca732a288afa63335ab517f748e6d7a7ca608c44dbc4b18798649f"
      },
      "downloads": -1,
      "filename": "warcdb-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a08d533a438e09bce911b9c978dcb0b0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 180452,
      "upload_time": "2022-06-19T13:24:13",
      "upload_time_iso_8601": "2022-06-19T13:24:13.361032Z",
      "url": "https://files.pythonhosted.org/packages/05/cb/5682463fbdd3552620e1340f8a3c3b8b6f31cdb1bb906d6f41d55832eb3f/warcdb-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}