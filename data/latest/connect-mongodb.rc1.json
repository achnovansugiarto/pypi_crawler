{
  "info": {
    "author": "Karan Jani",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyPi-connect_mongodb\n\nConnect python with MongoDB\n\n\n### Installation\nRun below commandto install whole package\n\n```pip install connect_mongodb```\n\n\n### Prerequisite\npymongo must be installed\nTo install pymongo, run below command\n\n```pip install pymongo```\n\n\n### Import\n```from connect_mongodb import Mongodb```\n\n\n### Connect to Mongodb\n```con=Mongodb()``` \n```con.connection(connection_url, database_name=None)```  \n        connection function establishes a connection with mongo server \n\n        Parameters:\n\n        ->connection_url: connection url with password\n        database_name(optional): name of the database\n        \n    \n### Create Database\n```con.create_database(database_name)```   \n        create_database function helps to create a new database \n\n        Parameters:\n\n        ->database_name: name of the database\n        \n        \n### Check existing Database\n```con.available_database()```    \n        available_database function returns list of all the existing database \n        \n\n### Create Collection\n```con.create_collection(collection_name)```    \n        create_collection function is used to create a new collection    \n         \n        Parameters:   \n\n        ->collection_name: name of the collection\n     \n\n### Record Insertion\n```con.insert(collection_name, record)```  \n        insert function is used to insert value in the table  \n\n        Parameters:  \n\n        ->collection_name: name of the collection\n        ->record: data to be inserted\n            -to insert one record datatype should be dictionary\n            -to insert many record datatype should be list\n        \n\n### Finding Records\n```con.find(collection_name)```   \n        find function is used find all the records in a collection  \n\n        Parameters:  \n\n        ->collection_name: name of the collection\n        \n        \n### Updating a Record \n```con.update(self, collection_name, present_record, new_record))```   \n        update function is used to alter/update the record  \n\n        Parameters:  \n\n        ->collection_name: collection name\n        ->present_record: existing record\n            -datatype as dict\n        ->new_record: new record\n            -datatype as dict\n        \n    \n### Delete\n```con.delete(collection_name,query)```  \n        delete function is used to delete record from collection  \n\n        Parameters:  \n\n        ->collection_name: name of the collection\n        ->query: any condition in that particular record\n            -datatype as dictionary\n        \n\n### Drop a Connection\n```con.drop_collection(self, collection_name)```    \n        drop_collection function is used to drop the collection  \n\n        Parameters:  \n\n        ->collection_name: name of the collection\n        \n        \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/KaranJani/PyPi-connect_mongodb",
    "keywords": "mongodb,python,connect mongodb with python,connect to mongodb",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "connect-mongodb",
    "package_url": "https://pypi.org/project/connect-mongodb/",
    "platform": "",
    "project_url": "https://pypi.org/project/connect-mongodb/",
    "project_urls": {
      "Homepage": "https://github.com/KaranJani/PyPi-connect_mongodb"
    },
    "release_url": "https://pypi.org/project/connect-mongodb/0.0.1/",
    "requires_dist": [
      "pymongo",
      "pymongo[srv]"
    ],
    "requires_python": ">=3.6",
    "summary": "Connect mongoDb with python",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11866966,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51e1fac8197a20ac5e75a20ab83e53b2681e0462e9a0862a659f27387dac1f4c",
          "md5": "4e636d0b43afb70c699a796fd078ec37",
          "sha256": "62d944e7e556e570d88f4da6c5ff93662bbc9734a4e2ada905ed2bae5ff2987a"
        },
        "downloads": -1,
        "filename": "connect_mongodb-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e636d0b43afb70c699a796fd078ec37",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3915,
        "upload_time": "2021-10-29T09:19:20",
        "upload_time_iso_8601": "2021-10-29T09:19:20.370393Z",
        "url": "https://files.pythonhosted.org/packages/51/e1/fac8197a20ac5e75a20ab83e53b2681e0462e9a0862a659f27387dac1f4c/connect_mongodb-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51e1fac8197a20ac5e75a20ab83e53b2681e0462e9a0862a659f27387dac1f4c",
        "md5": "4e636d0b43afb70c699a796fd078ec37",
        "sha256": "62d944e7e556e570d88f4da6c5ff93662bbc9734a4e2ada905ed2bae5ff2987a"
      },
      "downloads": -1,
      "filename": "connect_mongodb-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4e636d0b43afb70c699a796fd078ec37",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3915,
      "upload_time": "2021-10-29T09:19:20",
      "upload_time_iso_8601": "2021-10-29T09:19:20.370393Z",
      "url": "https://files.pythonhosted.org/packages/51/e1/fac8197a20ac5e75a20ab83e53b2681e0462e9a0862a659f27387dac1f4c/connect_mongodb-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}