{
  "info": {
    "author": "Thiago S C Pereira",
    "author_email": "strovsk@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# TagTree\n\n![TagTree](https://raw.githubusercontent.com/Strovsk/pytagtree/main/Assets/Logo.png)\n\nTagTree is a useful package that provides you to write and generate markup files using Python with a Component like structure. You can generate entire markup files like xml or html from automatic tasks.\nThe package source code is available on [this github repo](https://github.com/Strovsk/pytagtree)\n\n# Install\n    pip install TagTree\n\n# Get-started\nYou can build complex markup files using simple commands, just push the children to father and you'll get a dom tree.\n\n1. Import the Tag Class\n    ```python\n    from TagTree import Tag\n    ```\n2. Create a father tag\n    ```python\n    father = Tag(\n        tagName = 'fatherTagName',\n        id = 'fatherTagId',\n        params= [\n            ('fatherParam', 'value'),\n            'isolatedParam'\n        ],\n        maxLenLine = 200, # 200 characteres\n        indentation = 2, # indendation size in spaces\n    )\n    ```\n3. Create a child tag\n    ```python\n    child = Tag(\n        tagName = 'childTagName',\n        id = 'childTagId',\n        params= [\n            ('childParam', 'paramValue'),\n        ],\n        maxLenLine = 200, # 200 characteres until break lines to format\n        indentation = 2, # indendation size in spaces\n    )\n    ```\n4. Append the children to father:\n    ```python\n    father.push(child)\n    # print the result\n    print(father.genContent())\n    ```\n\nIf you print the command, you'll see the result:\n```html\n<fatherTagName id=\"fatherTagId\" fatherParam=\"value\" isolated>\n  <childTagName id=\"childTagId\" tagParam=\"paramValue\" />\n</fatherTagName>\n```\n\n## A basic example of an html file\n```python\nfrom tagTree import Tag, Document\n\nlineLen = 50\nindentSize = 2\n\ndocumentIndentation = 2\ndocumentMaxLen = 90\n\n# Create a doctype tag\ndoctype = Tag('!DOCTYPE', 'doctypeId', ['html'], documentMaxLen, documentIndentation, '', True, True)\n\n#  Create a html tag\nhtmlTag = Tag('html', 'htmlId', [('lang', 'pt-br')], documentMaxLen, documentIndentation, '', True, True)\n\n#  Create a head for our html document\nhead = Tag('head', 'headId', [], documentMaxLen, documentIndentation, '', True, True)\n\n#  Create a script for our html document\nscriptTag = Tag('script', 'scriptId', [('src', './js/myscript.js')], documentMaxLen, documentIndentation, '', False, False)\n\n# Insert the script into head tag\nhead.push(scriptTag)\n\n#  Create a body for our html document\nbody = Tag('body', 'bodyId', [], documentMaxLen, documentIndentation, '', True, True)\n\n# Insert the body and head tags inside html\nhtmlTag.push(head)\nhtmlTag.push(body)\n\n#  Create an title for our html page\nh1 = Tag('h1', 'hId', [], documentMaxLen, documentIndentation, 'This is page created from TagTree', True, True)\n\n#  Create a short description for our html page\np = Tag('p', 'pId', [], documentMaxLen, documentIndentation, 'This is a pargraph', True, True)\n\n# Create a button tag\nbutton = Tag(\n    tagName = 'button',\n    id = 'mainTagId',\n    params= [\n        ('buttonParam', 'paramValue'),\n        ('anotherButtonParam', 'anotherParamValue'),\n        'disabled'\n    ],\n    maxLenLine = documentMaxLen, # 200 characteres\n    indentation = documentIndentation, # indendation size in spaces\n    innerText = 'click me'\n)\n\n# Insert the h1, p and button tags into body\nbody.push(h1)\nbody.push(p)\nbody.push(button)\n\nprint(doctype.genContent())\nprint(htmlTag.genContent())\n```\nThe Output will be a formatted string:\n```html\n<!DOCTYPE html>\n<html lang=\"pt-br\">\n  <head>\n    <script id=\"scriptId\" src=\"./js/myscript.js\" />\n  </head>\n  <body>\n    <h1>This is page created from TagTree</h1>\n    <p>This is a pargraph</p>\n    <button\n      id=\"mainTagId\"\n      buttonParam=\"paramValue\"\n      anotherButtonParam=\"anotherParamValue\"\n      disabled\n    >\n      click me\n    </button>\n  </body>\n</html>\n```\n\n# Usage\n\n## The default Tag\nBy default, all tags need an id and it'll appears in final content, but you can hide it at final result. All tags are also self-closed.\n\n```python\nfrom tagTree import Tag\n\nmyTag = Tag(\n    tagName = 'button',\n    id = 'mainTagId',\n    params = [\n        ('buttonParam', 'paramValue'),\n        ('anotherButtonParam', 'anotherParamValue'),\n        'disabled'\n    ],\n    maxLenLine = 200, # 200 characteres\n    indentation = 2, # indendation size in spaces\n)\n\nprint(myTag.genContent())\n```\n\nThe output will looks like:\n\n    <button id=\"mainTagId\" buttonParam=\"paramValue\" anotherButtonParam=\"anotherParamValue\" disabled />\n\nTo understand the basic params used in the first example:\n- `tagName`: the name of tag.\n- `id`: the tag id.\n- `params`: a list of tag params that can be passed like a tuple/list `(param, value)` or only string `'param'`.\n- `maxLenLine`: the max size of generated tag string. If the size is greater than max value, the tag will be replaced to fill right size.\n\nThere are more tag props, you can see then [tag props section](#tagParams)\n\n# Inserting tags\n\nThe tags have a parent-child system. So, you can push or pop childrens from parent tag. See the example:\n```python\nfrom tagTree import Tag\n\nparentTag = Tag(\n    tagName = 'div',\n    id = 'parentId',\n    params = [('class', 'buttonContainerDiv')],\n    maxLenLine = 200, # 200 characteres\n    indentation = 2, # indendation size in spaces\n)\n\nchildTag = Tag(\n    tagName = 'button',\n    id = 'childId',\n    params = [\n        ('onClick', 'foo();'),\n        ('type', 'button'),\n        'disabled'\n    ],\n    innerText = 'Click me',\n    maxLenLine = 200, # 200 characteres\n    indentation = 2, # indendation size in spaces\n)\n\nparentTag.push(childTag)\n\nprint(parentTag.genContent())\n```\nThe Output:\n```html\n<div id=\"parentId\" class=\"buttonContainerDiv\">\n  <button id=\"childId\" onClick=\"foo();\" type=\"button\" disabled>Click me</button>\n</div>\n```\n\n<h1 id=\"tagParams\">Tag props</h1>\n\n- `tagName`:\n    - description\n        - The tag name\n    - default: None\n    - type: string\n    - example\n        - `'button'`, `'MxCell'`\n- `id`:\n    - description\n        - The tag Id\n    - default: None\n    - type: string\n    - example\n        - `'myTagId'`\n- `params`:\n    - description\n        - A list with all tag parameters that can be tuples/lists with `(param, value)` model or simple string `param`\n    - default: None\n    - type: list\n    - example\n        - `[('type', 'button'), 'disabled', ('onClick', 'foo();')]`\n- `maxLenLine`:\n    - description\n        - The max length of generated line\n    - default: None\n    - type: int\n- `indentation`:\n    - description\n        - The size of indentation in spaces\n    - default: 2\n    - type: int\n- `innerText`:\n    - description\n        - The inner text value of tag\n    - default: ''\n    - type: string\n- `noSlashAtEnd`:\n    - description\n        - If true, show '>' at end of self-closed tags instead '/>'\n    - default: False\n    - type: bool\n- `hideId`:\n    - description\n        - If true, remove the id from tag params at final result\n    - default: False\n    - type: bool\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Strovsk/pytagtree",
    "keywords": "tag,tree,dom,generator,html,markup,xml,tags,xhtml,xcell,drawio",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "TagTree",
    "package_url": "https://pypi.org/project/TagTree/",
    "platform": null,
    "project_url": "https://pypi.org/project/TagTree/",
    "project_urls": {
      "Bug Reports": "https://github.com/Strovsk/pytagtree/issues",
      "Funding": "https://donate.pypi.org",
      "Homepage": "https://github.com/Strovsk/pytagtree",
      "Say Thanks!": "http://saythanks.io/to/example",
      "Source": "https://github.com/Strovsk/pytagtree"
    },
    "release_url": "https://pypi.org/project/TagTree/1.0.22/",
    "requires_dist": [
      "peppercorn"
    ],
    "requires_python": ">=3.7, <4",
    "summary": "A Tag Dom Generator module",
    "version": "1.0.22",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14262587,
  "releases": {
    "1.0.22": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a52126d0e04abafcd32374ff8bc5bc16eff857025a55bf4cdb81ef62762e53d",
          "md5": "02bb49b1c52ed9105ad7d11234b18b61",
          "sha256": "e082506cd463f93562e41ab19ad2c1a79076c4045217cb46814a90a1cc875d4e"
        },
        "downloads": -1,
        "filename": "TagTree-1.0.22-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "02bb49b1c52ed9105ad7d11234b18b61",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 7496,
        "upload_time": "2022-06-27T15:19:55",
        "upload_time_iso_8601": "2022-06-27T15:19:55.517285Z",
        "url": "https://files.pythonhosted.org/packages/1a/52/126d0e04abafcd32374ff8bc5bc16eff857025a55bf4cdb81ef62762e53d/TagTree-1.0.22-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ee31903e221fd6f328ec677397ec99fe95bb0faf70f4c0840faec070a3495b4",
          "md5": "2d9c575333eeee5b5ca2760512a7fc1a",
          "sha256": "8a7fdbb04c9f26fcff3790227bf8b39757fb26a21d1f4e974aa22f443af9ffa8"
        },
        "downloads": -1,
        "filename": "TagTree-1.0.22.tar.gz",
        "has_sig": false,
        "md5_digest": "2d9c575333eeee5b5ca2760512a7fc1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 11214,
        "upload_time": "2022-06-27T15:20:09",
        "upload_time_iso_8601": "2022-06-27T15:20:09.215903Z",
        "url": "https://files.pythonhosted.org/packages/0e/e3/1903e221fd6f328ec677397ec99fe95bb0faf70f4c0840faec070a3495b4/TagTree-1.0.22.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7a08f7a4da8429cf28bc99c440f026f1fab05ce184118eef9d8fcd44bb539d8",
          "md5": "e0c5168a31e7783c9452b2239a8dd065",
          "sha256": "3ea32cb481378c20a28d42f493aa7ebeb6e3bea947cdb6fa1b7c811172356ece"
        },
        "downloads": -1,
        "filename": "TagTree-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0c5168a31e7783c9452b2239a8dd065",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 7481,
        "upload_time": "2022-06-27T17:13:37",
        "upload_time_iso_8601": "2022-06-27T17:13:37.215146Z",
        "url": "https://files.pythonhosted.org/packages/b7/a0/8f7a4da8429cf28bc99c440f026f1fab05ce184118eef9d8fcd44bb539d8/TagTree-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f45e0b83e959a962b3383e582833ef51149f8f5f5da94b2da7d1753735371291",
          "md5": "b6cf9f116725817a434980860ad5bd5e",
          "sha256": "8aa0121f1e1f2e763fa8a6784eda6575e4be76b45978c380f6eb2cbff6002646"
        },
        "downloads": -1,
        "filename": "TagTree-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b6cf9f116725817a434980860ad5bd5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 11230,
        "upload_time": "2022-06-27T17:13:41",
        "upload_time_iso_8601": "2022-06-27T17:13:41.492893Z",
        "url": "https://files.pythonhosted.org/packages/f4/5e/0b83e959a962b3383e582833ef51149f8f5f5da94b2da7d1753735371291/TagTree-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a52126d0e04abafcd32374ff8bc5bc16eff857025a55bf4cdb81ef62762e53d",
        "md5": "02bb49b1c52ed9105ad7d11234b18b61",
        "sha256": "e082506cd463f93562e41ab19ad2c1a79076c4045217cb46814a90a1cc875d4e"
      },
      "downloads": -1,
      "filename": "TagTree-1.0.22-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "02bb49b1c52ed9105ad7d11234b18b61",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 7496,
      "upload_time": "2022-06-27T15:19:55",
      "upload_time_iso_8601": "2022-06-27T15:19:55.517285Z",
      "url": "https://files.pythonhosted.org/packages/1a/52/126d0e04abafcd32374ff8bc5bc16eff857025a55bf4cdb81ef62762e53d/TagTree-1.0.22-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ee31903e221fd6f328ec677397ec99fe95bb0faf70f4c0840faec070a3495b4",
        "md5": "2d9c575333eeee5b5ca2760512a7fc1a",
        "sha256": "8a7fdbb04c9f26fcff3790227bf8b39757fb26a21d1f4e974aa22f443af9ffa8"
      },
      "downloads": -1,
      "filename": "TagTree-1.0.22.tar.gz",
      "has_sig": false,
      "md5_digest": "2d9c575333eeee5b5ca2760512a7fc1a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 11214,
      "upload_time": "2022-06-27T15:20:09",
      "upload_time_iso_8601": "2022-06-27T15:20:09.215903Z",
      "url": "https://files.pythonhosted.org/packages/0e/e3/1903e221fd6f328ec677397ec99fe95bb0faf70f4c0840faec070a3495b4/TagTree-1.0.22.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}