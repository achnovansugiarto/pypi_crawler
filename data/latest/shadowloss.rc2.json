{
  "info": {
    "author": "Niels Serup",
    "author_email": "ns@metanohi.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: DFSG approved",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Games/Entertainment :: Arcade",
      "Topic :: Games/Entertainment :: Side-Scrolling/Arcade Games"
    ],
    "description": "==========\nshadowloss\n==========\n\nYou have no shadow, your limbs are all sticks, and your movements look\nfunny. You have been transformed into a stickman.\n\nYou have the ability to run very fast --- **extremely** fast. You can\nrun so fast that you are in a constant risk of hurting yourself. If\nyou don't slow down, you're going to run straight into a wall and die.\n\nBut how to slow down, you ask?\n\nWhen you were a stickboy you had trouble learning the alphabet. To\nthis day your stickfriends still tease you. However, you have just\nrealized that letters are everywhere, and that whenever you pass a\nletter while running, you just have to press that letter on your inner\nkeyboard. This will both make you learn the alphabet and slow down\n(because you have to concentrate about the letter).\n\nThere is a catch: if you press a letter on your inner keyboard when\nyou're not passing it on your running path, your mind gets chaotic,\nwhich makes you run even faster. You are forced to concentrate so that\nyou can come to a complete stop before you reach the wall.\n\nLater on, when you have realized the power of the alphabet, you must\nlearn to accept how numbers behave as well. The thing is, passing\nthrough numbers make you go faster for a while. For example, if you\ncross the number 3, your speed will be greater for 3 seconds, after\nwhich it will decrease. The reason why you react this way is because\nyou *like* numbers. You simply don't have to concentrate to understand\nthem --- and because of that, you speed up, but only until you realize\nthat you should slow down. The higher the number, the longer it takes\nfor you to realize that. If you feel like it, you can always destroy\nnumbers with your laser beam, but sometimes it may be beneficial to\nspeed up temporarily.\n\n\nLicense\n=======\n\nshadowloss is free software under the terms of the GNU General Public\nLicense version 3 (or any later version). The author of shadowloss is\nNiels Serup, contactable at ns@metanohi.org. This is version 0.1.0 of\nthe program.\n\nThe libraries used by shadowloss are GPL-compatible.\n\nAll data (music, sounds, etc.) is available under free licenses. See\nthe details in the file LICENSING.txt.\n\nInstalling\n==========\n\nWay #1\n------\nJust run this (requires that you have python-setuptools installed)::\n\n  $ sudo easy_install shadowloss\n\nWay #2\n------\nGet the newest version of shadowloss at\nhttp://metanohi.org/projects/shadowloss/ or at\nhttp://pypi.python.org/pypi/shadowloss\n\nExtract the downloaded file and run this in a terminal::\n\n  # python setup.py install\n\nDependencies\n============\n\nPython 2.5+ is probably a requirement.\n\nshadowloss depends on cairo and cairo's Python bindings for generating\nimages. To install it, do one of these things:\n\n* For DEB-based distros (Debian etc.): type ``apt-get install python-cairo``\n* For RPM-based distros (Fedora etc.): type ``yum install pycairo``\n* For other distros: do something similar or get it at\n  http://cairographics.org/download/\n\nshadowloss depends on PyGame 1.8.1+ (perhaps earlier versions are also\nsupported) for showing generated images. To install it, do one of\nthese things:\n\n* For DEB-based distros (Debian etc.): type ``apt-get install python-pygame``\n* For RPM-based distros (Fedora etc.): type ``yum install pygame``\n* For other distros: do something similar or get it at\n  http://pygame.org/download.shtml\n\nshadowloss depends on qvikconfig for parsing config files.\n\n + Web address: http://pypi.python.org/pypi/qvikconfig/\n + License: GPLv3+\n + Installing: ``easy_install qvikconfig``\n + Author: Niels Serup\n\nNote that ``qvikconfig`` is included with shadowloss, so you don't really\nhave to install it.\n\nOptional extras\n---------------\nIf present, shadowloss will also use these Python modules:\n\n``termcolor``\n + Web address: http://pypi.python.org/pypi/termcolor/\n + License: GPLv3+\n + Installing: ``$ sudo easy_install termcolor``\n + Author: Konstantin Lepa <konstantin lepa at gmail com>\n\nNote that ``termcolor`` is included with shadowloss, so you don't\nreally have to install it.\n \n``setproctitle``\n + Web address: http://pypi.python.org/pypi/setproctitle/\n + License: New BSD License\n + Installing: ``$ sudo easy_install setproctitle``\n + Author: Daniele Varrazzo <daniele varrazzo at gmail com>\n\n\nUsing\n=====\n\nSimply running ``shadowloss`` will start the game with its default\noptions. Running ``shadowloss --help`` will show a list of available\ncommand-line options. These options can also be specified in config\nfiles, but they cannot be changed in-game (that would clutter the\ninterface). Config files use a ``property = value`` syntax\n(e.g. ``fullscreen = true`` or ``size = 640x480``) separated by\nnewlines.\n\nControls\n--------\n\n::\n\n  <letter>: letter\n  <SPACE>:  when playing:           laser beam\n  <SPACE>:  when level is finished: next level\n  <RIGHT>:  when level is finished: next level\n  <LEFT>:   when level is finished: previous level\n  r:        when level is finished: restart level\n  ESCAPE:   quit program\n\n\nCreating levels\n===============\n\nshadowloss levels are simple config files. They consist of global and\nlocal options. **Global options:**\n\n* ``start speed`` (what speed to start at, default 1.0)\n* ``stop speed`` (what speed to stop at, default 0.0)\n* ``start position`` (where to start, default 0.0)\n* ``length`` (length of level, default 500)\n* ``speed increase`` (when pressing a wrong letter, default 0.5)\n* ``speed increase per second`` (default 0.0)\n* ``stickfigure`` (what stickfigure to use, currently only 'zorna' and\n  'bob', default 'zorna')\n* ``font height``\n* ``letter height`` (default 75, overrides 'font height')\n* ``number height`` (default 40, overrides 'font height')\n* ``default temporary speed increase`` (during number penalties)\n* ``default speed decrease`` (when pressing a correct letter)\n* ``default object duration`` (the duration of a subobject, default 0.5)\n* ``default letter duration`` (overrides 'default object duration')\n* ``default number duration`` (overrides 'default object duration')\n* ``default object destruction duration`` (the time it takes for a laser\n  beam to destroy the object, default 0.3)\n* ``default letter destruction duration`` (overrides 'default object\n  duration')\n* ``default number destruction duration`` (overrides 'default object\n  duration')\n* ``letters``\n* ``numbers``\n\nExcept for ``letters`` and ``numbers``, all of these options need only\nsimple numbers assigned to them. ``letters`` and ``numbers`` are\nlists, and they offer support for local options. **Syntax:**\n\n::\n\n  letters|numbers = <position>:<letter1>(opt1=val1;opt2=val2;...):\\\n  <letter2>:...[opt3=val3;opt4=val4]\n\nOptions enclosed in ``()`` are local options, while those in ``[]``\nare global (object-wise). **Local options:**\n\n* ``letters``\n\n  + ``dec`` (overrides ``default speed decrease``)\n  + ``dur`` (overrides ``default letter duration``)\n  + ``ddur`` (overrides ``default letter destruction duration``)\n\n* ``numbers``\n\n  + ``inc`` (overrides ``default temporary speed increase``)\n  + ``dur`` (overrides ``default number duration``)\n  + ``ddur`` (overrides ``default number destruction duration``)\n\n**Example:**\n\n::\n\n  letters = 230:A(dec=0.3;dur=1;ddur=0.1):Q:R[dur=0.5]\n  \n\nDeveloping\n==========\n\nshadowloss is written in Python and uses Git for branches. To get the\nlatest branch, get it from gitorious.org like this::\n\n  $ git clone git://gitorious.org/shadowloss/shadowloss.git\n\n\nThis document\n=============\nCopyright (C) 2010  Niels Serup\n\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout any warranty.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://metanohi.org/projects/shadowloss/",
    "keywords": null,
    "license": "GPLv3+",
    "maintainer": null,
    "maintainer_email": null,
    "name": "shadowloss",
    "package_url": "https://pypi.org/project/shadowloss/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/shadowloss/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://metanohi.org/projects/shadowloss/"
    },
    "release_url": "https://pypi.org/project/shadowloss/0.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A stickman-oriented game against time",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 799477,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfd8c4f548515aa3920f94e7ea963461faef10361b94bf70709f77ac57538d46",
          "md5": "c665ad02c81fbcfd537d02aefa7679fa",
          "sha256": "4970b69e4e98a7436076c01ce983b32fd52885347d43191543213e63c5bb3ec5"
        },
        "downloads": -1,
        "filename": "shadowloss-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c665ad02c81fbcfd537d02aefa7679fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37642,
        "upload_time": "2010-11-17T18:32:27",
        "upload_time_iso_8601": "2010-11-17T18:32:27.593283Z",
        "url": "https://files.pythonhosted.org/packages/cf/d8/c4f548515aa3920f94e7ea963461faef10361b94bf70709f77ac57538d46/shadowloss-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "148b6ca5e358c8aebdd64ab955ef1c4d074aa4340ca9682a7a56e549e905f341",
          "md5": "5f0ff710c6fa155b64556791c2253751",
          "sha256": "74e24cea060718af5bfdaf61efce313292a892632b01b8c677ebf4e26e4f6da6"
        },
        "downloads": -1,
        "filename": "shadowloss-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f0ff710c6fa155b64556791c2253751",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9175144,
        "upload_time": "2011-01-01T15:17:54",
        "upload_time_iso_8601": "2011-01-01T15:17:54.831490Z",
        "url": "https://files.pythonhosted.org/packages/14/8b/6ca5e358c8aebdd64ab955ef1c4d074aa4340ca9682a7a56e549e905f341/shadowloss-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "148b6ca5e358c8aebdd64ab955ef1c4d074aa4340ca9682a7a56e549e905f341",
        "md5": "5f0ff710c6fa155b64556791c2253751",
        "sha256": "74e24cea060718af5bfdaf61efce313292a892632b01b8c677ebf4e26e4f6da6"
      },
      "downloads": -1,
      "filename": "shadowloss-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5f0ff710c6fa155b64556791c2253751",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9175144,
      "upload_time": "2011-01-01T15:17:54",
      "upload_time_iso_8601": "2011-01-01T15:17:54.831490Z",
      "url": "https://files.pythonhosted.org/packages/14/8b/6ca5e358c8aebdd64ab955ef1c4d074aa4340ca9682a7a56e549e905f341/shadowloss-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}