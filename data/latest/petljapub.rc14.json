{
  "info": {
    "author": "Filip Maric, Petlja",
    "author_email": "filip.maric@petlja.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PetljaPub - систем за дигиталне публикације из програмирања\n\nСистем *PetljaPub* служи за креирање збирки задатака, уџбеника и\nдругих едукативних материјала за учење програмирања. Решења задатака\nсе могу писати на различитим програмским језицима и омогућено је\nњихово превођење, покретање и аутоматско тестирање пре укључивања у\nпубликацију (збирку или уџбеник). Публикације се граде укључивањем\nпојединих задатака, њихових одабраних решења, као и пропратних\nтекстова (најчешће прегледа теорије). Збирке је могуће креирати у\nформату PDF (спремне за штампу) путем коришћења система LaTeX и у\nформату HTML (спремне за објављивање на вебу).\n\nПоставке задатака и објашњења решења пише се у формату\nMarkDown. Одабир задатака и текстова који ће бити укључени у збирку\nврши се кроз датотеку у формату YAML.\n\n## Инсталација и конфигурација (`configure`)\n\nСистем је имплементиран у језику Python и доступан је преко PyPI\n(https://pypi.org/project/petljapub/). За коришћење система неохподно\nје да је на рачунару инсталиран Python, у верзији бар 3.7. На\nрачунарима на којима је инсталиран Python, систем PetljaPub се може\nинсталирати из командне линије командом:\n\n~~~\npip install petljapub\n~~~\n\nДа би систем било могуће користити потребно је да је из командне\nлиније доступан преводилац за C++ (било GNU преводилац `g++`, било\nMicrosoft-ов преводилац `cl`), који подржава стандард C++ 14. Пожељно\nје да уз C++ буде доступан и неки преводилац за C# (било Microsoft-ов\nпреводилац `csc` или `dotnet`, било Mono преводилац `mono` или `mcs`)\nи преводилац за C (на пример, GNU преводилац `gcc`). За припрему\nштампаних верзија збирке потребно је и да је инсталиран и из командне\nлиније доступан систем Pandoc (https://pandoc.org/), а пожељно је да\nје инсталиран и систем `LaTeX` да би се аутоматски могла произвести и\nPDF верзија документа.\n\nНакон инсталације система PetljaPub потребно је конфигурисати га\nкомандом `petljapub configure`. Након успешне конфигурације добија се\nпорука следећег типа.\n\n~~~\nINFO: ---------- checking python --------------------\nINFO: Found python3 3.8.10\nINFO: ---------- checking C++ compilers -------------\nINFO: Found g++ 8.4.0\nINFO: ---------- checking C compilers ---------------\nINFO: Found gcc 8.4.0\nINFO: ---------- checking C# compilers --------------\nINFO: Found mono 6.8.0.123\nINFO: ---------- checking pandoc --------------------\nINFO: Found pandoc 2.11.0.4\nINFO: ---------- checking LaTeX --------------------\nINFO: Found LaTeX 3.14159265\nINFO: Found LaTeX Make 4.67\nINFO: ---------- Final report  ----------------------\nINFO: Configuration writen in /home/user/.config/petljapub/conf.json\n~~~\n\nАко неки компилатор није пронађен, систем ће пријавити упозорење, али\nће моћи да се користи његова функционалност која се не односи на тај\nкомпилатор. Ако из командне линије није доступан компилатор за C++\nсистем ће пријавити фаталну грешку приликом конфигурације и неће моћи\nда се користи док се не инсталира и не подеси компилатор за C++ и\nсистем поново не конфигурише (командом `petljapub configure`).\n\nЈош једна опција коју је пожељно конфигурисати је подразумевани језик\nкоји ће бити коришћен у датотекама које садрже описе задатака и\nрешења.  Конфигурација језика врши се командом `petljapub\nset-language`. На пример, командом\n\n~~~\npetljapub set-language sr-Cyrl\n~~~\n\nпоставља се српски језик са ћириличким писмом. Тренутно су подржани:\n\n  - енглески језик (`en`) који је подразумеван и користи се док се\n    систем не конфигурише другачије,\n  - српски језик, ћириличко писмо (`sr-Cyrl`),\n  - српски језик, латиничко писмо (`sr-Latn`).\n  \nНакон конфигурације, систем се покреће и користи из командне линије,\nкомандом `petljapub` којој се наводе одговарајући параметри. Команде\nза рад са појединачним задатком се по правилу позивају из\nдиректоријума тог задатка, док се команде за рад са целом збирком\n(колекцијом задатака) по правилу позивају из кореног директоријума\nзбирке.\n\n## Команде за рад са појединачним задатком\n\nСваки задатак мора бити смештен у директоријуму чији је назив почиње\nса две цифре из којих иде размак, црта или подвлака (нпр. коректни\nназиви су `01 zadatak`, `34_zadatak` или `58-zadatak`).\n\n### Креирање задатка (`new`)\n\nНакон креирања директоријума задатка, рад на новом задатку се започиње\nпозиционирањем унутар тог директоријума и издавањем команде `petljapub\nnew`. Њоме се креирају \"клице\" свих датотека, које је даље потребно\nмодификовати. Опис појединачних датотека дат је у [наставку](#formati)\nовог документа. Клице се генеришу у складу са подешеним језиком\n(видети команду `petljapub set-language`).\n\n### Превођење програма (`compile`)\n\nПревођење програма врши се командом `petljapub compile <lang>` или\nскраћено `petljapub c <lang>`. У склопу команде је потребно задати и\nознаку програмског језика `<lang>` (то су најчешће `cpp` за C++, `cs`\nза C#, `py` за `Python` или `c` за C), а опционо је могуће задати и\nредни број решења које се преводи (опцијом `--sol <n>`, скраћено `-s\n<n>`, где је `<n>` редни број решења). На пример.\n\n  - `petljapub compile cpp` или `petljapub c cpp` преводе основно\n     решење у језику `cpp` (решење `{zadatak_id}.cpp`).\n     \n  - `petljapub c cs -s 1` преводи прво алтернативно решење у језику\n     C# (решење `{zadatak_id}-ex1.cs`).\n\n  - `petljapub c c -s 3` преводи треће алтернативно решење у језику C\n    (решење `{zadatak_id}-ex3.c`).\n\n### Покретање програма (`run`)\n\nПокретање програма врши се командом `petljapub run <lang>` или\nскраћено `petljapub r <lang>`, при чему `<lang>` представља ознаку\nпрограмског језика. Ако програм није преведен пре покретања,\nаутоматски се врши његово превођење. Ако се не подеси другачије,\nпокренути програм ради интерактивно тј. чита податке са стандардног\nулаза и исписује их на стандардни излаз. У склопу команде је потребно\nзадати и ознаку програмског језика, а опционо је могуће задати и редни\nброј решења које се покреће (опцијом `--sol <n>`, скраћено `-s\n<n>`). На пример:\n\n  - `petljapub run cpp` или `petljapub r cpp` покреће основно решење у\n     језику `cpp` (решење `{zadatak_id}.cpp`).\n     \n  - `petljapub r cs -s 1` покреће прво алтернативно решење у језику C#\n     (решење `{zadatak_id}-ex1.cs`).\n\n  - `petljapub r c -s 3` покреће треће алтернативно решење у језику C\n    (решење `{zadatak_id}-ex3.c`).\n\nПрограм може бити покренут и тако да се улаз чита из неког од тест\nпримера, при чему се излаз приказује на стандардном\nизлазу. Тест-примери морају бити генерисани пре покретања програма\n(командом `petljapub tests-gen`). Покретање програма на појединачним\nтест-примерима врши се следећим параметрима команде `run`:\n\n  - `--testcase <n>`, скраћено `-t <n>` или `--generated <n>`,\n    скраћено `-g <n>`, при чему је `<n>` редни број тест-примера\n    проузрокује да се програм изврши на задатом генерисаном\n    тест-примеру.\n    \n  - `--example <n>`, скраћено `-e <n>`, при чему је `<n>` редни број\n    тест-примера проузрокује да се програм изврши на задатом\n    примеру који је издвојен из поставке задатка.\n    \n  - `-crafted <n>`, скраћено `-c <n>`, при чему је `<n>` редни број\n    тест-примера проузрокује да се програм изврши на задатом примеру\n    који је задат помоћу ручно креиране улазне датотеке.\n\nНа пример, `petljapub r cpp -s 2 -e 1` извршава друго решење у језику\nC++ (задато датотеком `{zadatak_id}-ex2.cpp`) читајући улаз из првог\nтест-примера задатог у поставци задатка.\n\n\n### Генерисање тест-примера (`tests-gen`, `tests-zip`)\n\nТест-примери се генеришу командом `petljapub tests-gen` или скраћено\n`petljapub tg`.\n\nПостоје три могуће врсте тест-примера:\n\n   - тест-примери из текста задатка (очекивани улаз и излаз за сваки\n     такав пример је описан у датотеци `{zadatak_id}-st.md`),\n     \n   - програмски генерисани тест-примери (генерисани C++ програмом\n     датим у датотеци `{zadatak_id}-tgen.cpp`),\n     \n   - ручно направљени тест-примери (дати кроз колекцију `*.in` и\n     евентуално `*.out` датотека у неком директоријуму)\n     \nКомандом `tests-gen` се врши издвајање тест-примера из текста задатка,\nа затим и превођење и покретање генератора тест-примера. Очекивани\nрезултат за сваки тест-пример се генерише коришћењем званичног решења\nу језику C++ (ако није преведено, оно се аутоматски преводи пре\nгенерисања тест-примера). Ако генератор тест-примера (датотека\n`{zadatak_id}-tgen.cpp`) не постоји или је функција `gen_tests` празна,\nгенерисање тест-примера се прескаче.\n\nАко се наведе параметар `--crafted-dir <dir>`, скраћено `-c <dir>`,\nгде је `<dir>` путања неког директоријума, тада се све `*.in` датотеке\nиз тог директоријума (најчешће ручно креиране) додатно уврштавају у\nколекцију званичних тест-примера. Ако уз неку `*.in` датотеку постоји\nи одговарајућа `*.out` датотека она се сматра очекиваним резултатом за\nтај улаз, а ако таква датотека не постоји, тада се очекивани резултат\nаутоматски генерише коришћењем званичног решења у језику C++ (ако није\nпреведено, оно се аутоматски преводи пре генерисања тест-примера).\n\nСви тест-примери се смештају у директоријум `_build/testcases`.\n\nКомандом `petljapub tests-zip`, скраћено `petljapub tz` се сви\nтест-примери генеришу изнова и пакују се у архиву `testcases.zip` која\nсе смешта у директоријум `_build`. Ако се наведе параметар\n`--crafted-dir <dir>`, скраћено `-c <dir>` у архиву се укључују и\nтест-примери смештени у наведеном директоријуму `<dir>`.\n\n### Тестирање програма (`test`, `test-all`)\n\nТестирање програма подразумева његово извршавање на тест-примерима, у\nоквиру задатог временског ограничења и поређење резултата са\nочекиваним.\n\nТестирање појединачних решења врши се командом `petljapub test <lang>`\nили скраћено `petljapub t <lang>`. У склопу команде је потребно задати\nи ознаку програмског језика `<lang>`, а опционо је могуће задати и\nредни број решења које се покреће (коришћењем параметра `--sol <n>`,\nскраћено `-s <n>`). На пример:\n\n  - `petljapub test cpp` или `petljapub t cpp` тестира основно решење\n     у језику `cpp` (решење `{zadatak_id}.cpp`).\n     \n  - `petljapub t cs -s 1` тестира прво алтернативно решење у језику C#\n     (решење `{zadatak_id}-ex1.cs`).\n\n  - `petljapub t c -s 3` тестира треће алтернативно решење у језику C\n    (решење `{zadatak_id}-ex3.c`).\n\nРешење се тестира на свим тест-примерима и приказује се извештај за\nсваку појединачу групу тест-примера (оних задатих у тексту задатка,\nоних који су аутоматски генерисани и оних који су ручно припремљени,\nако такви постоје).\n\nДодатне опције које се могу навести су:\n\n   - `--timeout <sec>`, скраћено `-t <sec>` -- допуштено време\n     извршавања програма у секундама (подразумевана вредност је један\n     секунд)\n   \n   - `--verbosity <level>`, скраћено `-v <level>` -- ниво детаљности\n     порука. Опција `-v 4` приказује списак свих тест примера током\n     тестирања, док се опцијом `-v 5` приказују и очекивани и добијени\n     излаз на свим тест-примерима на којима се они разликују.\n     \n   - `--outputs`, скраћено `-o` -- ако је ова опција наведена, чувају\n     се излази програма који се тестира.\n\nМогуће је покренути и тестирање појединачних тест-примера. Томе служе\nследећи додатни параметри:\n\n  - `--testcase <n>`, скраћено `-t <n>` или `--generated <n>`,\n    скраћено `-g <n>`, при чему је `<n>` редни број тест-примера\n    проузрокује да се програм тестира на задатом генерисаном\n    тест-примеру.\n    \n  - `--example <n>`, скраћено `-e <n>`, при чему је `<n>` редни број\n    тест-примера проузрокује да се програм тестира на задатом примеру\n    који је издвојен из поставке задатка.\n    \n  - `-crafted <n>`, скраћено `-c <n>`, при чему је `<n>` редни број\n    тест-примера проузрокује да се програм тестира на задатом примеру\n    који је задат помоћу ручно креиране улазне датотеке.\n\nНа пример, `petljapub t cpp -s 2 -e 1` тестира друго решење у језику\nC++ (задато датотеком `{zadatak_id}-ex2.cpp`) на првом тест-примеру\nзадатом у поставци задатка.\n\nКомандом `petljapub test-all` покреће се тестирање свих решења\nзадатка.  Да би се неко решење тестирало, мора бити наведено у\nзаглављу формулације задатка (на почетку датотеке\n`{zadatak_id}-st.md`, у делу `solutions`).\n\n### Упоређивач (`checker`)\n\nЗа поређење добијеног и очекиваног излаза се користи одговарајући\nупоређивач (*checker*). Ако другачије није наведено користи се\nподразумевани упоређивач који је имплемтиран у језику Python, уграђен\nу систем. Ако у директоријуму у који је инсталиран систем PetljaPub\nпостоји програм под називом `DefaultChecker.exe`, он ће се користити\nза проверу свих задатака. Могуће је да постоји и упоређивач који је\nспецифичан за конкретан задатак. Он се имплементира кроз C++ програм\n`{zadatak_id}-check.cpp`. Аргументи командне линије овако имплементираног\nупоређивача су следећи:\n\n  - први аргумент `argv[1]` је датотека са излазом који се проверава\n  \n  - други аргумент `argv[2]` је датотека са очекиваним излазом\n  \n  - трећи аргумент `argv[3]` је датотека са улазним подацима\n\nАко је решење коректно упоређивач завршава рад са повратним кодом 0. У\nсупротном повратни код мора да буе различит од 0.\n\nАко постоји, упоређивач специфичан за задатак се аутоматски преводи\nпре тестирања решења. Превођење упоређивача се може покренути и\nексплицитно, командом `petljapub compile-checker`.\n\n### Мерење времена извршавања (`runtime`)\n\nКомандом `petljapub runtime` приказују се времена извршавања на свим\nгенерисаним тест-примерима. Команда може да прими и следеће параметре:\n\n  - `--timeout <sec>`, скраћено `-t <sec>` -- временско ограничење за\n    извршавање решења задатка у секундама (подразумевано ограничење је\n    једна секунда).\n  \n  - `--repeat <k>`, скраћено `-r <k>` -- ради боље прецизности времена\n    се одређују тако што се сваки програм покрене неколико пута и\n    израчуна се средишње време. Параметром `<k>` се контролише број\n    покретања сваког решења задатка (подразумевана вредност је 3).\n  \n  - `--plot`, скраћено `-p` -- времена се приказују у виду стубичастог\n    графикона.\n  \nПодразумевано се приказују времена извршавања свих решења у свим\nпрограмским језицима. Параметрима `--sol <n>`, скраћено `-s <n>` и\n`--lang <lang>`, скраћено `-l <lang>` могуће је ограничити приказ само\nна неко решење и/или неке програмске језике.\n\n### HTML преглед (`html-preview`)\n\nКомандом `petljapub html-preview` гради се веб-страница која садржи\nпоставку задатка, описе свих решења и њихове програмске\nкодове. Генерисана страница се чува у директоријуму `_build` под\nназивом `{zadatak_id}.html`.\n\n  - `--css <css-file>`, скраћено `-c <css-file>` - путања до CSS\n    датотеке `<css-file>` која ће се укључити у сваки HTML\n    (подразумевано се користи стил `pandoc.css`, који се дистрибуира\n    уз PetljaPub).\n        \n  - `--header <md-file>`, скраћено `-h <md-file>` - путања до датотеке\n    са заглављем које ће се укључити на почетак MarkDown датотеке, пре\n    њеног превођења у HTML (нпр. `header.md`, која садржи LaTeX макрое\n    коришћене у задацима, која се дистрибуира уз PetljaPub)\n\n*Напомена*: за функционалност генерисања HTML-а потребно је да је\nинсталиран Pandoc и да је систем PetljaPub конфигурисан након тога --\nнакон што се инсталира Pandoc, конфигурисање система PetljaPub је\nмогуће поново покренути командом `petljapub configure`.\n\n## Команде за рад са публикацијама (збиркама, уџбеницима, ...)\n\nПоред команди за рад са појединачним задацима, систем PetljaPub нуди и\nкоманде за рад са збиркама које представљају колекције текстова\n(прегледа теорије) и задатака. Свака збирка је одређена датотеком у\nформату YAML (опис формата ове датотеке дат је у [наставку](#formati)\nовог овог упуства).\n\n### Генерисање LaTeX збирке (`yaml-tex`)\n\nКомандом `petljapub yaml-tex <yaml> <dst>` генерише се збирка у формату LaTeX.\nОбавезни параметри команде су:\n\n  - `<yaml>` - путања до YAML датотеке у којој је дата спецификација\n    збирке.\n        \n  - `<dst>` - путања резултујуће датотеке (која може имати екстензију\n    `.md`, `.tex` или `.pdf`)\n      \nНајважнији опциони параметри су:\n\n  - `--tasks-dir <dir>`, скраћено `-t <dir>` -- путања до кореног\n    директоријума `<dir>` у ком су смештени сви задаци (ако се не\n    наведе, подразумева се директоријум у који је смештена задата\n    `yaml` датотека).\n\n  - `--pub-dir <dir>`, скраћено `-p <dir>` -- путања до кореног\n    директоријума у ком су смештени сви пропратни текстови, најчешће\n    прегледи теорије (ако се не наведе, подразумева се директоријум у\n    који је смештена `yaml` датотека).\n\n  - `--header <md-file>`, скраћено `-h <md-file>` -- путања до\n    датотеке са заглављем које ће се укључити на почетак обједињене\n    MarkDown датотеке, пре њеног превођења у LaTeX (подразумевано се\n    укључује датотека `header.md`, која садржи LaTeX макрое коришћене\n    у задацима и која се испоручује у склопу система PetljaPub)\n\n  - `--tex-template <tex-file>`, скраћено `-е <tex-file>` -- шаблон\n    LaTeX датотеке који ће се користити за збирку (подразумевано се\n    користи датотека `default.latex` која се испоручује у склопу\n    система PetljaPub)\n\n  - `--lat`, скраћено `-l` -- ако је наведена ова опција, цела збирка\n    се аутоматски преводи у латиницу\n    \n  - `--babel`, скраћено `-b` -- кроз ову опцију се наводи језик који\n    се користи за интернационализацију (у LaTeX-у се користе пакети\n    `babel` или `polyglossia`), ако је различит од\n    енглеског. Вредности за српски језику су `sr-Cyrl` или `sr-Latn`.\n    Осим у командној линији, језик се може спецификовати у YAML опису\n    публикације.\n        \nТипичан пример коришћења ове команде је:\n\n~~~\npetljapub yaml-tex \"_zadaci/02 Zbirka_2/zbirka.yml\" \"_pdf/zbirka.tex\" -t \"_zadaci/\"\n~~~\n\n### Генерисање HTML збирке (`yaml-html`)\n\nКомандом `petljapub yaml-html <yaml> <dst>` генерише се збирка у формату HTML.\nОбавезни параметри ове команде су:\n\n  - `<yaml>` -- путања до YAML датотеке у којој је дата спецификација\n    збирке.\n        \n  - `<dst>` -- назив директоријума или зип архиве у коју ће бити\n    смештен резултат.\n\nНајважнији опциони параметри су:\n\n  - `--tasks-dir <dir>`, скраћено `-t <dir>` -- путања до кореног\n    директоријума `<dir>` у ком су смештени сви задаци (ако се не\n    наведе, подразумева се директоријум у који је смештена `yaml`\n    датотека).\n\n  - `--pub-dir <dir>`, скраћено `-p <dir>` -- путања до кореног\n    директоријума у ком су смештени сви пропратни текстови, најчешће\n    прегледи теорије (ако се не наведе, подразумева се директоријум у\n    који је смештена наведена `yaml` датотека).\n\n  - `--css <css-file>`, скраћено `-c <css-file>` -- путања до CSS\n    датотеке која ће се укључити у сваки HTML (нпр. може се навести\n    `pandoc.css` чиме се користи CSS датотека која је испоручена уз\n    систем PetljaPub)\n      \n  - `--header <md-file>`, скраћено `-h <md-file>` -- путања до\n    датотеке са заглављем које ће се укључити на почетак обједињене\n    MarkDown датотеке, пре њеног превођења у LaTeX (подразумевано се\n    укључује датотека `header.md`, која садржи LaTeX макрое коришћене\n    у задацима и која се испоручује у склопу система PetljaPub)\n\n  - `--lat`, скраћено `-l` -- ако је наведена ова опција, цела збирка\n    се аутоматски преводи у латиницу\n\n  - `--babel`, скраћено `-b` -- кроз ову опцију се наводи језик који\n    се користи за интернационализацију (у LaTeX-у се користе пакети\n    `babel` или `polyglossia`), ако је различит од\n    енглеског. Вредности за српски језику су `sr-Cyrl` или `sr-Lat`.\n    Осим у командној линији, језик се може спецификовати у YAML опису\n    публикације.\n\nТипичан пример коришћења ове команде је:\n\n~~~\npetljapub yaml-html \"_zadaci/02 Zbirka_2/zbirka.yml\" \"_html/zbirka\" -c \"pandoc.css\" -t \"_zadaci/\"\n~~~\n\n### Тестирање целе збирке (`yaml-test`)\n\nКомандом `petljapub yaml-test <yaml>`, којој је аргумент `<yaml>`\nпутатања до спецификације збирке у формату YAML, покреће се тестирање\nсвих решења задатака наведених у задатој YAML датотеци. Извештај о\nтестирању сваког задатка се бележи унутар `_build` директоријума тог\nзадатка. У наредним покретањима тестирања тестирају се само задаци\nкоји су измењени од претходног тестирања.\n\n### Статистике о збирци (`yaml-stats`)\n\nКомандом `petljapub yaml-stats <yaml>` приказују се основне статистике\nо самој збирци и репозиториујуму са задацима. За сваки задатак се\nприказује списак решења укључених у збирку, укупан број укључених\nзадатака и решења, као и списак задатака који се налазе у\nрепозиторијуму задатака, али нису укључени у збирку.\n\n# Формати датотека за опис задатака и збирки задатака<a id=\"formati\"></a>\n\nУ овом документу се описују улазни формати датотека којима се описују\nделови збирки задатака. Обрадом ових датотека коришћењем система\nPetljaPub могуће је креирати збирке у формату PDF (спремну за штампу)\nи формату HTML (спремну за објављивање на вебу).\n\nСви задаци се задају тако да је могуће њихово аутоматско тестирање. То\nподразумева да се задаци решавају писањем програма са\nкомандно-линијским интерфејсом (конзолних апликација), да су у самој\nформулацији задатка прецизно описани формат улазних и излазних\nподатака, као и да је сваки задатак праћен тест-примерима који се\nкористе за тестирање (задатак обично садржи програм који аутоматски\nгенерише тест-примере). Задаци обавезно садрже једно или више решења и\nто најчешће у неколико програмских језика.\n\nПојединачни задаци се могу груписати у збирке. Поред задатака, збирке\nмогу да садрже и теоријске уводе, као и било какав други текстуални\nсадржај наведен у засебним датотекама. Садржај збирке се одређује\nспецификацијом у формату YAML у којој се наводе датотеке које садрже\nтекстуалне елементе збирке (најчешће теоријске уводе) као и задаци\nкоји се укључују у збирку. Сваки задатак може бити укључен и у\nнеколико збирки. Исти задатак у збирку може бити укључен и више пута\n(обично се приликом сваког укључивања задатка у збирку бирају решења\nкоја ће бити приказана, па се исти задатак користи да у различитим\nпоглављима збирке илуструје различите технике решавања истог\nпроблема). \n\n## Описи појединачних задатака\n\nЗадаци се описују у формату MarkDown, док се метаподаци о задатку\nзадају у формату YAML. Сваки задатак обавезно садржи наредне датотеке,\nсве смештене у исти директоријум, које се аутоматски генеришу позивом\nкоманде `petljapub new`:\n\n  - `{zadatak_id}-st.md` - овај документ садржи прецизно описану поставку\n     задатка, описану у формату MarkDown. Спецификација садржи\n     прецизан текст задатка, опис улазних података и опис излазних\n     податка.\n  - `{zadatak_id}-sol.md` - овај документ садржи прецизан опис решења\n    задатка, такође у формату MarkDown.\n  - `{zadatak_id}.cpp` - основно решење задатка у језику C++.\n  - `{zadatak_id}.cs` - основно решење задатка у језику C#.\n  - `{zadatak_id}.py` - основно решење задатка у језику Python 3.\n  - `{zadatak_id}-tgen.cpp` - генератор тест примера написан у\n    програмском језику C++ (уз помоћ библиотеке `tgen.hpp`, која је\n    део инсталације система PetljaPub и може се снимити у текући\n    директоријум наредбом `petljapub tgen-hpp`). Тест примери треба да\n    буду што репрезентативнији и да покрију све карактеристичне\n    случајеве у програму.\n\nСваки задатак може да садржи и додатна, алтернативна решења\nзадатака. Они имају суфикс `-ex1`, `-ex2`, ... На пример:\n\n  - `{zadatak_id}-ex1.cpp` - прво алтернативно решење задатка у језику C++.\n  - `{zadatak_id}-ex1.cs` - прво алтернативно решење задатка у језику C#.\n  - `{zadatak_id}-ex1.py` -  прво алтернативно решење задатка у језику Python 3.\n\nПри том `{zadatak_id}` представља јединствени идентификатор задатка\n(сви задаци унутар целокупног репозиторијума свих задатака из којег се\nгенеришу збирке морају имати различит јединствен\nидентификатор). Пожељно је да он буде написан малим словима, уз\nкоришћење подвлаке за раздвајање речи (али то није неопходно).\n\n### Опис метаподатака о задатку и решењима\n\nМетаподаци о задатку се уписују на почетак описа задатка у датотеци\n`{zadatak_id}-st.md`, у формату YAML. Почетно YAML заглавље је од\nпратећег Markdown описа раздвојено линијом која садржи текст `---`.\n\n~~~\ntitle: Факторијели од 1 до n\ntimelimit: 0.074 # u sekundama\nmemlimit: 64 # u MB\nowner: filipmaric # vlasnik je onaj ko radi na zadatku\norigin:  # izvor odakle je zadatak preuzet (može ostati prazno)\ntags: [] # dodatne oznake zadatka\nstatus: KOMPLETAN\nstatus-date: 2022-08-14\n~~~\n\nОсновне ознаке су:\n\n  - `title` - назив задатка;\n  - `timelimit` - временско ограничење у секундама - попуњава се\n    аутоматски, приликом калибрације збирке коришћењем пратеће\n    софтверске инфраструктуре;\n  - `memlimit` - меморијско ограничење у мегабајтима - попуњава се\n    аутоматски, приликом калибрације збирке коришћењем пратеће\n    софтверске инфраструктуре;\n  - `owner` - власник тј. аутор задатка;\n  - `origin` - извор одакле је задатак преузет (на пример, такмичење,\n    нека друга збирка, неки грејдер, испит). Може остати празно, ако\n    аутор не осећа потребу да наведе извор.\n  - `tags` - додатне ознаке које се могу користити за претрагу\n    задатака.\n    \nНакон овога, потребно је навести списак свих решења задатка. На пример:\n\n~~~\nsolutions:\n   - name: ex0\n     desc: \"Инкрементално израчунавање на основу рекурентне везе\"\n     lang: [py, cpp, cs]\n     tags: []\n   - name: ex1\n     desc: \"Функција за израчунавање факторијела\"\n     lang: [py, cpp, cs]\n     tags: []\n~~~\n\nСвако решење описано је следећим атрибутима:\n\n  - `name` - ознака решења (`ex0` за главно решење, а `ex1`, `ex2`\n    итд. за алтернативна);\n  - `desc` - информативни опис решења;\n  - `lang` - листа програмских језика у којима је то решење\n    имплементирано;\n  - `tags` - додатне ознаке решења (могу се користити за претрагу\n    задатка).\n\n\n### Опис поставке задатка\n\nПоставка задатка се описује у наредном формату (командом `petljapub new` генерише се\n`-st.md` датотека која садржи \"клицу\" задатка са оваквим садржајем):\n\n```md\nТекст задатка.\n\n## Улаз \n\nОпис формата улазних података.\n\n## Излаз\n\nОпис формата очекиваних излазних података.\n\n## Пример\n\n### Улаз\n\n~~~\nprimer ulaznih podataka\n~~~\n\n### Излаз\n\n~~~\nprimer izlaznih podataka\n~~~\n\n### Објашњење\n\nОбјашњење примера\n```\n\nОбјашњење примера не мора бити наведено. Опис задатка може може\nсадржати и већи број примера улаза и излаза. \n\nПоднаслови морају да буду на језику који се користи приликом превођења\nу PDF или HTML формат (тај језик се наводи било у YAML опису\nпубликације, било у командној линији, приликом превођења).\n\n\n### Опис решења задатака\n\nРешења задатака су одређена програмским кодом у разним програмским\nјезицима (датотекама `.cpp`, `.cs`, `.py`) и садржајем датотеке\n`{zadatak_id}-sol.md` описаним у формату Markdown. Та датотека садржи\nописе свих решења задатака (и главног и евентуалних алтернативних\nрешења `ex1`, `ex2` итд.). Унутар Markdown описа и унутар програмског\nкода решења задатка специјалним \"магичним коментарима\" врше се додатна\nсемантичка обележавања садржаја. Коментари личе на коментаре у језику\nHTML, али се уместо две цртице користе три.\n\nОписи сваког појединачног решења задатка задају се између коментара\nследећег облика:\n\n~~~md\n<!--- sol:ex0 --->\n...\n<!--- sol:end --->\n~~~\n\nГлавно решење је обележено са `ex0` (иако датотеке са кодовима решења\nне садрже ту ознаку).\n\nДелови описа решења карактериснични за одређени програмски језик\nобележавају се коментарима следећег облика:\n\n~~~md\n<!--- lang:cpp --->\n...\n<!--- lang:end --->\n~~~\n\nОвим је обележен део описа специфичан за језик C++. Ознаке језика се\nпоклапају са коришћеним екстензијама датотека са програмским кодом\nрешења (`cpp`, `cs`, `py`, `c`, ...). Могуће је означити и делове\nописа заједничке за неколико програмских језика. На пример,\n\n~~~md\n<!--- lang:c,cpp,cs --->\n...\n<!--- lang:end --->\n~~~\n\nНеки делови описа означавају се посебним семантичким ознакама, што\nомогућава да се прикажу на неки истакнути начин (у неком уоквиреном\n\"боксу\" тј. \"диву\"). За то се користи ознака `div`. На пример,\nнаредним ознакама се означава део решења у ком се приказује пример\nизвршавања програма.\n\n~~~md\n<!--- div:example --->\n...\n<!--- div:end --->\n~~~\n\nМогуће је употребљавати ознаке са наредног списка (али уводити и нове\nознаке, при чему је за њих потребно у CSS или LaTeX документима\nописати како се визуелно форматирају). На пример,\n\n  - `example` - пример извршавања програма\n  - `note` - споредна општа напомена\n  - `formal` - формалан садржај (најчешће доказ коректности алгоритма)\n  - `complexity` - анализа сложености израчунавања\n\nРади уштеде простора у збирку могу бити укључени само делови\nпрограмског кода решења, што се описује магичним коментарима у\nизворном коду. Коментари су једнолинијски. Линије изворног кода могу\nбити приказане или сакривене. Подразумевано су линије приказане.\nКоментаром `-*- hide -*-` прелази се у режим сакривања линија, а\nкоментаром `-*- show -*-` у режим приказивања линија. Коментар `-*-\nellipsis -*-` такође преводи у режим сакривања линија (као и `-*- hide\n-*-`), једино што се на излазу приказују три тачке. На пример, ако се\nпрограм обележи на следећи начин\n\n~~~cpp\n// -*- hide -*-\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\n// pretvara ugao dat u stepenima(s) i minutima (m) u\n// ugao samo u minutima\nint uMinute(int s, int m) {\n  return s * 60  + m;\n}\n\nint main() {\n// -*- show -*-\n  // ucitavamo uglove u stepenima i minutima\n  int ugao1_s, ugao1_m, ugao2_s, ugao2_m, ugao3_s, ugao3_m;\n// -*- ellipsis -*-\n  cin >> ugao1_s >> ugao1_m;\n  cin >> ugao2_s >> ugao2_m;\n  cin >> ugao3_s >> ugao3_m;\n\n// -*- show -*-\n  // pretvaramo ih u uglove date samo u minutima\n  int ugao1 = uMinute(ugao1_s, ugao1_m);\n  int ugao2 = uMinute(ugao2_s, ugao2_m);\n  int ugao3 = uMinute(ugao3_s, ugao3_m);\n// -*- hide -*-\n}\n~~~\n  \nу збирци ће бити приказано\n\n~~~cpp\n  // ucitavamo uglove u stepenima i minutima\n  int ugao1_s, ugao1_m, ugao2_s, ugao2_m, ugao3_s, ugao3_m;\n  ...\n\n  // pretvaramo ih u uglove date samo u minutima\n  int ugao1 = uMinute(ugao1_s, ugao1_m);\n  int ugao2 = uMinute(ugao2_s, ugao2_m);\n  int ugao3 = uMinute(ugao3_s, ugao3_m);\n~~~\n\n### Реферисање задатака\n\nУ поставкама и решењима задатака (датотекама `{zadatak_id}-st.md` и\n`{zadatak_id}-sol.md`) могуће је реферисати се на друге задатке. За\nреферисање се користи формат референци дефинисан формату MarkDown, при\nчему је уместо линка довољно навести само јединствени идентификатор\nзадатка, док опис може остати празан. На пример\n\n~~~md\nОва техника је описана у задатку [](trening).\n~~~\n\nПриликом обраде збирке линкови се попуњавају одговарајућим путањама, а\nза текст везе се узима назив реферисаног задатка (прочитан из\nметаподатка `title` наведеног у датотеци `{zadatak_id}-st.md`).\n\nПрепоручује се да се линк експлицитно обележи, да би се изоставио\nуколико у збирку није укључен задатак на који се рефереше.\n\n~~~md\n<!--- span:link --->\nОва техника је описана у задатку [](trening).\n<!--- span:end --->\n~~~\n\n### Уметање слика\n\nУ поставке и решења задатака (датотеке `{zadatak_id}-st.md` и\n`{zadatak_id}-sol.md`) могуће је укључити и слике. Слика мора бити\nсачувана у директоријум задатка, а укључује се коришћењем MarkDown\nописа следећег облика.\n\n~~~md\n![Судоку](sudoku.png){width=\"200px\"}\n~~~\n\nНа овом месту се укључује слика `sudoku.png`, назив слике је `Судоку`,\nдок је резултујућа ширина слике (у генерисаним PDF или HTML\nдокументима) 200 пиксела.\n\nЗа нумерисање и реферисање слика користи се Pandoc филтер\n[fignos](https://github.com/tomduck/pandoc-fignos/blob/master/README.md).\nНа пример, слика која има наслов на који се реферише се може унети на\nследећи начин.\n\n~~~md\n![Судоку](sudoku.png){#fig:sudoku width=\"200px\"}\n~~~\n\nРеференца на слику се затим добија помоћу `@fig:sudoku` било где\nунутар Markdown описа странице на којој се слика налази.\n\n\n## Распоред задатка у структури директоријума\n\nСваки задатак смештен је у засебан директоријум, чије је име облика\n`00 {zadatak_id}`. Име директоријума мора почети бројем записаним\nпомоћу две цифре. Бројеви служе за једноставнији преглед директоријума\nунутар датотечког система и ни на који начин не утичу на редослед\nзадатака у збирци.\n\nДиректоријуми са задацима могу бити на произвољан начин организовани\nунутар хијерархије поддиректоријума једно централног директоријума\n(зовемо га *репозиторијум задатака*), али је битно да се директоријуми\nса задацима не садрже поддиректоријуме (осим, помоћних, аутоматски\nгенерисаних, попут директоријума `_build` који садржи извршиве кодове\nи тест-примере ). На пример, организација задатака унутар\nрепозиторијума може бити следећа:\n\n~~~\n.\n└── zadaci\n    ├── 01 aritmetika\n    │   ├── 01 cena\n    │   └── 02 obim\n    └── 02 iteracija\n        ├── 01 zbir_brojeva\n        └── 02 faktorijel\n~~~\n\n## Опис збирке\n\nЗбирка представља колекцију задатака, која је обично допуњена\nпропратним текстом организованим у облику класичне збирке задатака (по\nглавама и поглављима). Целокупни садржај збирке добија се спајањем\nсадржаја већег броја датотека које садрже текст описан у формату\nMarkdown. Неке од тих датотека су део део задатака (формулације и\nописи решења, као и изворни кодови решења), а неке се пишу посебно и\nпредстављају додатни изворни кôд збирке. У збирку се могу укључити и\nизворни кодови решења задатака (или њихови делови).\n\nСпецификација датотека од којих се добија садржај збирке наводи се у\nформату YAML, у посебној датотеци. \"Клица\" такве датотеке се може\nдобити наредбом\n\n~~~\npetljapub new-yaml <naziv>\n~~~\n\n### Метаподаци\n\nНа почетку YAML спецификације наводе се одређени метаподаци. На пример,\n\n~~~\ntitle: Збирка задатака - основни ниво\nauthors: Фондација Петља\nthumb: logo.png\nshort-description: >\n   Збирка обухвата почетне нивое учења програмирања и припреме\n   за такмичарско програмирање.\nfull-description: index.md\nlanguages: [cpp]\n~~~\n\nМетаподаци се спецификују навођењем следећих атрибута:\n\n  - `title` - одређује наслов збирке;\n  - `authors` - одређује списак аутора;\n  - `thumb` - одређује датотеку са сличицом која илуструје\n    збирку. Путања до датотеке је релативна у односу на директоријум у\n    ком се налази YAML спецификација.\n  - `short-description` - кратак текстуални опис збирке;\n  - `full-description` - дужи текстуални опис збирке. Уместо самог\n    текста могуће је навести и путању до датотеке у формату MarkDown\n    која садржи тај опис. Путања до датотеке је релативна у односу на\n    директоријум у ком се налази YAML спецификација.\n  - `languages` - програмски језик или списак програмских језика који\n    се користе за приказ решења у збирци.\n\n### Садржај збирке\n\nДатотеке које садрже делове садржаја збирке могу бити организоване\nунутар хијерархије директоријума смештене унутар једног кореног\nдиректоријума који садржи саму YAML спецификацију збирке (ту\nхијерархију директоријума називамо *репозиторијум збирке*). То може,\nали не мора бити идентична хијерархија као она у којој се налазе\nзадаци (подсетимо се, они су смештени унутар директоријума који\nназивамо репозиторијум задатака). Називи директоријума унутар\nрепозиторијума збирке могу бити нумерисани, ради једноставније\nпрегледа унутар датотечког система, међутим, то није\nобавезно. Редослед укључивања садржаја у збирку одређен је искључиво\nредоследом навођења унутар YAML спецификације и не зависи од\nевентуалне нумерације директоријума унутар репозиторијума збирке.\n\nПодела садржаја збирке на главе и поглавља одређена је искључиво\nознакама наслова унутар MarkDown датотека и никако не зависи од\nхијерархије директоријума у којима су те датотеке смештене.\n\nСадржај збирке описује се YAML спецификацијом, у склопу атрибута\n`content`.\n\n~~~\ncontent:\n  - .predgovor.md\n  - 01 aritmetika:\n     - 01 formule:\n        - trening:\n           print: full\n        - ocene:\n           print: full\n           solution: [ex0, ex1]\n           code: [ex1]\n  - 02 iteracija:\n     - 01 petlje:\n        - brojevi_od_a_do_b:\n           print: statement\n        - while.md\n        - ocene:\n           print: full\n           solution: [ex2]\n           code: [ex2]\n~~~\n\nХијерархијска организација унутар YAML спецификације одговара\nструктури директоријума унутар репозиторијума збирке. Приликом обраде\nспецификације, за сваки наведени директоријум проверава се да ли\nсадржи датотеку `index.md` и ако садржи, она се укључује у садржај\nзбирке. \n\nПоред индексних датотека наведених директоријума, у збирку је могуће\nукључити и друге `*.md` датотеке (као, на пример, `predgovor.md` или\n`while.md` у претходној спецификацији). Оне се морају налазити у\nрепозиторијуму збирке, а путања до њих одређена је хијерархијом\nдиректоријума наведених у YAML спецификацији (на пример,\n`predgovor.md` налази се у кореном директоријуму, док ће путања до\nдатотеке `while.md` бити `02 iteracija/01 petlje/while.md`). \n\nАко назив `*.md` датотеке почиње карактером `.`, тада се то поглавље\nненумерише (ово се обично користи за предговор, додатак и слично).\n\nУ збирку је могуће укључити и задатке, тако што се у YAML\nспецификацији наведе њихов јединствени идентификатор, уз додатни опис\nелемената задатка који се на том месту укључују у збирку. Подсетимо\nсе, изворни кôд задатака (поставки и решења) се проналази у\nрепозиторијуму задатака, који је потпуно независна хијерархија\nдиректоријума од репозиторијума збирке. Није забрањено да се те две\nхијерархије поклапају, тј. да задаци буду распоређени у истој\nхијерархији директоријума у којој је распоређен текстуални садржај\nзбирке и која се наводи и у склопу YAML спецификације, али то не мора\nбити случај. Раздвајањем репозиторијума задатака од репозиторијума\nзбирке, омогућава се да се исти задатак два пута укључи у исту збирку\n(у различитим поглављима се приказују различита решења), као и да се\nнад истим репозиторијумум задатака изгради више различито\nорганизованих збирки.\n\nЗадатак (или део задатка) може бити уметнут и у неко поглавље збирке\n(било индексну датотеку `index.md` унутар неког директоријума, било\nнеку другу Markdown датотеку наведену у YAML опису), коришћењем\nдирективе `task`. На пример, на месту наредног коментара у некој\nMarkdown датотеци наводи се целокупан текст и решење задатка чији је\nидентификатор `sudoku`.\n\n~~~\n<!---task\nid: sudoku\nprint: full\n--->\n~~~\n\nНаредним коментаром се постиже уметање само програмског кода основног\nрешења, без стављања додатног наслова задатка.\n\n~~~\n<!---task\nid: sudoku\nprint: code\nsolutions: [ex0]\nno-title: True\n--->\n~~~\n\nПретходна спецификација подразумева овакву организацију и садржај\nдиректоријума унутар репозиторијума збирке.\n\n~~~\n.\n├── zbirka.yml\n├── logo.png\n├── index.md\n├── 01 aritmetika\n│   ├── index.md\n│   └── 01 formule\n│       └── index.md\n└── 02 iteracija\n    ├── index.md\n    └── 01 petlje\n        ├── index.md\n        └── while.md\n~~~\n\nZbirka ће бити добијена спајањем следећих датотека:\n\n~~~\npredgovor.md\n01 aritmetika/index.md\n01 aritmetika/01 formule/index.md\n[zadatak trening, kompletan]\n[zadatak ocene, opis rešenja ex0 i ex1, kod rešenja ex1]\n02 iteracija/index.md\n02 iteracija/01 petlje/index.md\n[zadatak brojevi_od_a_do_b, samo postavka]\n02 iteracija/01 petlje/while.md\n[zadatak ocene, opis i kod rešenja ex2]\n~~~\n\nЗадаци `trening`, `ocene` и `brojevi_od_a_do_b` налазе се у\nрепозиторијуму задатака. Ако се не планира креирање више збирки над\nистим овим задацима, најприродније решење је да се репозиторијум\nзадатака и репозиторијум збирке преклпају.\n\n~~~\n.\n├── zbirka.yml\n├── logo.png\n├── index.md\n├── 01 aritmetika\n│   ├── index.md\n│   └── 01 formule\n│       ├── index.md\n│       ├── 01 trening\n│       └── 02 ocene\n└── 02 iteracija\n    ├── index.md\n    └── 01 petlje\n        ├── index.md\n        ├── while.md\n        └── 01 brojevi_od_a_do_b\n~~~\n\nПриметимо да се задатак `ocene` може укључити и у поглавље о петљама,\nиако је у хијерархији директоријума смештен само у поглавље о\nаритметици. То је могуће захваљујући томе што се задаци у\nрепозиторијуму задатака проналазе на основу њиховог јединственог\nидентификатора, а не на основу путање одређене положајем унутар YAML\nспецификације.\n\n### Параметри укључивања задатака\n\nПриликом укључивања задатка у збирку потребно је спецификовати делове\nзадатка који се на том месту укључују.\n\n  - Атрибут `print` одређује да ли се укључује само само поставка\n    задатка (вредност `statement`), или и поставка и решење (вредност\n    `full`).\n  - Атрибут `solutions` одређује која ће се решења задатка\n    укључити. Изостављањем вредности овог атрибута приказују се сва\n    доступна решења.\n  - Атрибут `code` одређује који програмски кôд ће бити\n    укључен. Изостављањем овог атрибута приказују се програмски кодови\n    за сва решења која су одређена атрибутом `solutions` (ако неко\n    решење није укључено навођењем или изостављањем атрибута\n    `solutions`, програмски кôд тог решења неће бити штампан иако се\n    експлицитно наведе атрибутом `code`).\n  - Атрибут `no-io` одређује да се из текста задатка изостави прецизан\n    опис улаза и излаза и тест-примери.\n  - Атрибут `no-title` одређује да се изостави назив задатка (што највише\n    има смисла када се задатак умеће у неко поглавље збирке тј. Markdown\n    датотеку помоћу магичног коментара `task`).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pypa/petljapub",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "petljapub",
    "package_url": "https://pypi.org/project/petljapub/",
    "platform": null,
    "project_url": "https://pypi.org/project/petljapub/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pypa/petljapub/issues",
      "Homepage": "https://github.com/pypa/petljapub"
    },
    "release_url": "https://pypi.org/project/petljapub/2.0.0/",
    "requires_dist": [
      "invoke",
      "pyyaml",
      "pypandoc",
      "pandoc-xnos",
      "pandoc-fignos",
      "appdirs",
      "matplotlib (>=3.4)"
    ],
    "requires_python": ">=3.7",
    "summary": "Petlja publishing system",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16663810,
  "releases": {
    "1.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74e2e312c648bd30d10075f35237dbdcfcfa7c7c0ac5d629a1503907b54b5fb3",
          "md5": "73f65a4f1d54b908b729518a0a8719d6",
          "sha256": "3aaf36f9eb7be8d0aee67a4c8254b5b447e889a4adc3f077a3fd4b4ed9881c1a"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73f65a4f1d54b908b729518a0a8719d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 71877,
        "upload_time": "2021-11-02T20:15:00",
        "upload_time_iso_8601": "2021-11-02T20:15:00.669969Z",
        "url": "https://files.pythonhosted.org/packages/74/e2/e312c648bd30d10075f35237dbdcfcfa7c7c0ac5d629a1503907b54b5fb3/petljapub-1.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "305fbdf706011cc6c5c7d70205226631f80e96917b9b5bd5bf8f331bc780ce7f",
          "md5": "5076d9869e4453332f7036ab358d47b0",
          "sha256": "9fd0b93e13741123f667de7edb56cbe29c6c91758563fd2f11a02a004689424a"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "5076d9869e4453332f7036ab358d47b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 59399,
        "upload_time": "2021-11-02T20:15:02",
        "upload_time_iso_8601": "2021-11-02T20:15:02.290229Z",
        "url": "https://files.pythonhosted.org/packages/30/5f/bdf706011cc6c5c7d70205226631f80e96917b9b5bd5bf8f331bc780ce7f/petljapub-1.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "128877500b92821ffa7f537c0c8b31521558301dedf69ba9bdecac4339994904",
          "md5": "b1694b982cf739860548a1347b105e4e",
          "sha256": "b0aaa6f4900b76856d17c7c2543a29981a223544afca9713f463e8b55ba992b6"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1694b982cf739860548a1347b105e4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 72461,
        "upload_time": "2021-11-17T21:51:18",
        "upload_time_iso_8601": "2021-11-17T21:51:18.632311Z",
        "url": "https://files.pythonhosted.org/packages/12/88/77500b92821ffa7f537c0c8b31521558301dedf69ba9bdecac4339994904/petljapub-1.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6cdd3ead5903f4b60aefc08a0a1004fc2d856eea7232c192b11f5f99f9d9aee",
          "md5": "0e8a32980c12853f9fee7c2664f21a4c",
          "sha256": "893bab5ba43219711c35cd766308f81b0378ff3435cf8809104753899c5ef095"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "0e8a32980c12853f9fee7c2664f21a4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 59863,
        "upload_time": "2021-11-17T21:51:20",
        "upload_time_iso_8601": "2021-11-17T21:51:20.357472Z",
        "url": "https://files.pythonhosted.org/packages/c6/cd/d3ead5903f4b60aefc08a0a1004fc2d856eea7232c192b11f5f99f9d9aee/petljapub-1.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1994f0179e68d82731aa576b6de5ec44ed3f0afd6872759400996df851cf8413",
          "md5": "873f30867941da6a15a5b83627d204ee",
          "sha256": "3e4caf3d7f6963187085ff8743d2dd71e9feed0b79a5f3bfb93f55c852d74924"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "873f30867941da6a15a5b83627d204ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 72869,
        "upload_time": "2022-02-28T17:53:52",
        "upload_time_iso_8601": "2022-02-28T17:53:52.296451Z",
        "url": "https://files.pythonhosted.org/packages/19/94/f0179e68d82731aa576b6de5ec44ed3f0afd6872759400996df851cf8413/petljapub-1.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "909705d5213a43744b1dd86e98cdde42ad13b5000b571f4f74585f7f360f63ca",
          "md5": "7ad80e0272ff6cb1664d54db779fa767",
          "sha256": "8889d114f7372e7fcc70f80cd75ada59e13620634dd92cb61b1c4aeb52661765"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "7ad80e0272ff6cb1664d54db779fa767",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 60011,
        "upload_time": "2022-02-28T17:53:54",
        "upload_time_iso_8601": "2022-02-28T17:53:54.031765Z",
        "url": "https://files.pythonhosted.org/packages/90/97/05d5213a43744b1dd86e98cdde42ad13b5000b571f4f74585f7f360f63ca/petljapub-1.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b286e44e1dcee8c17d6c99f5ee6d2d71e0599ca29409724e2da8e9702981747",
          "md5": "5dad892f4785477549007551484a9017",
          "sha256": "81210b54ce6abdd843ad014914847118732bd74d30268a14757afd507bec921a"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5dad892f4785477549007551484a9017",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 86920,
        "upload_time": "2022-03-13T13:07:56",
        "upload_time_iso_8601": "2022-03-13T13:07:56.125307Z",
        "url": "https://files.pythonhosted.org/packages/3b/28/6e44e1dcee8c17d6c99f5ee6d2d71e0599ca29409724e2da8e9702981747/petljapub-1.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa080ff3180567518aa4b5a98914aa92423dfd4cb192eb0b74dabf9621f32a81",
          "md5": "4bc89c6b4d0bfa83fc138795b574d32d",
          "sha256": "577033a9b91998d9f49a85f5dc0481cdf4658d8969e2cc74d7503382fdfaae6a"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "4bc89c6b4d0bfa83fc138795b574d32d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 99660,
        "upload_time": "2022-03-13T13:07:58",
        "upload_time_iso_8601": "2022-03-13T13:07:58.059593Z",
        "url": "https://files.pythonhosted.org/packages/aa/08/0ff3180567518aa4b5a98914aa92423dfd4cb192eb0b74dabf9621f32a81/petljapub-1.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10ef5a109ced0307b503c6b3911dcef7943031552cca808163d76fe1d923732c",
          "md5": "03949ae75fe835b84ee53ecf3ff34459",
          "sha256": "f2d97b26dc174626614bdd9221c4f67b20db56062cbc90685d57a3fedbd31c32"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "03949ae75fe835b84ee53ecf3ff34459",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 90035,
        "upload_time": "2022-03-28T10:17:19",
        "upload_time_iso_8601": "2022-03-28T10:17:19.497812Z",
        "url": "https://files.pythonhosted.org/packages/10/ef/5a109ced0307b503c6b3911dcef7943031552cca808163d76fe1d923732c/petljapub-1.0.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bf05478751fe463acb3c2e01476cbff7e2435aff12fc41c3fd91dfe31d24685",
          "md5": "f3fde4c656ed58c641bc0754c6908396",
          "sha256": "f07dc644556c5f0c4bb4f0bae7bfe0fc7b0e7fa0370cfc6c21ab4f8ef68672dd"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "f3fde4c656ed58c641bc0754c6908396",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 103868,
        "upload_time": "2022-03-28T10:17:21",
        "upload_time_iso_8601": "2022-03-28T10:17:21.619497Z",
        "url": "https://files.pythonhosted.org/packages/4b/f0/5478751fe463acb3c2e01476cbff7e2435aff12fc41c3fd91dfe31d24685/petljapub-1.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3acde7178e5932c17636e42172ff391afa4d6253ad3d95e1e2d401e1fdaa1ce9",
          "md5": "83db74a5ddb80918edf6da0cf0e2a7bd",
          "sha256": "7b2d172317cb1c71aff8de8e57df0eb14788f585d8f2fcc3ea4e432c5ba00180"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83db74a5ddb80918edf6da0cf0e2a7bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 90175,
        "upload_time": "2022-04-05T12:03:19",
        "upload_time_iso_8601": "2022-04-05T12:03:19.799783Z",
        "url": "https://files.pythonhosted.org/packages/3a/cd/e7178e5932c17636e42172ff391afa4d6253ad3d95e1e2d401e1fdaa1ce9/petljapub-1.0.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2a60bddd66fad52f3b5ab85aeee6b30ed3e21b28c91e048ad15df061d898fe5",
          "md5": "f800e9857a554922e7caecd8f58d4ef2",
          "sha256": "97c22606632b8c600d3c469134f9e7cb07e50fa2b49e06902997fd44582b56eb"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "f800e9857a554922e7caecd8f58d4ef2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 103918,
        "upload_time": "2022-04-05T12:03:21",
        "upload_time_iso_8601": "2022-04-05T12:03:21.974114Z",
        "url": "https://files.pythonhosted.org/packages/c2/a6/0bddd66fad52f3b5ab85aeee6b30ed3e21b28c91e048ad15df061d898fe5/petljapub-1.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0d73f8f09fb82fba7e6c6fbf39195ec57eb974ab627daab4e17d248bbca8d23",
          "md5": "79eb4470f38bfdceab275c3c647d4b0e",
          "sha256": "770e1aaefb8117814ed28ffbc9276b33f1cc5096620b58bdc4fb20a298f600d8"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.16-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79eb4470f38bfdceab275c3c647d4b0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 91388,
        "upload_time": "2022-05-16T16:33:05",
        "upload_time_iso_8601": "2022-05-16T16:33:05.795030Z",
        "url": "https://files.pythonhosted.org/packages/c0/d7/3f8f09fb82fba7e6c6fbf39195ec57eb974ab627daab4e17d248bbca8d23/petljapub-1.0.16-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "600de0d3a74c952bc80f34a10ef4e10cc0fc832de83a58b1fd5941b00bafd706",
          "md5": "053db5f816a029d4aee99588de06a4f0",
          "sha256": "8836521807da16197de5d3e8a4733ddd33125e6cc2694f5fbd1be34ccaf20316"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "053db5f816a029d4aee99588de06a4f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 104975,
        "upload_time": "2022-05-16T16:33:07",
        "upload_time_iso_8601": "2022-05-16T16:33:07.766221Z",
        "url": "https://files.pythonhosted.org/packages/60/0d/e0d3a74c952bc80f34a10ef4e10cc0fc832de83a58b1fd5941b00bafd706/petljapub-1.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d2f9e90f2412472c60c7194f176bf6abebc27a85d5ed02e97f23dbaddcf53ac",
          "md5": "8e822ca97b413578ddfc5bf2b9ef2a63",
          "sha256": "184bcf5de816016083f33ff62ea6c6cdf3c4c8dc68b73e0985fccc86210ff9fe"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e822ca97b413578ddfc5bf2b9ef2a63",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 91460,
        "upload_time": "2022-10-22T10:05:23",
        "upload_time_iso_8601": "2022-10-22T10:05:23.513752Z",
        "url": "https://files.pythonhosted.org/packages/0d/2f/9e90f2412472c60c7194f176bf6abebc27a85d5ed02e97f23dbaddcf53ac/petljapub-1.0.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "224ead6c8acd7af0b5cbc154d4aeb7b5c03b169bb2d58f25261011a63c86a82f",
          "md5": "fc30b114ef2de96f91bfc92d36d58899",
          "sha256": "081b01bfe03e104f32d6c5255c356b4e08760923a7846282a72700866ed3e5a0"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "fc30b114ef2de96f91bfc92d36d58899",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 105037,
        "upload_time": "2022-10-22T10:05:25",
        "upload_time_iso_8601": "2022-10-22T10:05:25.755459Z",
        "url": "https://files.pythonhosted.org/packages/22/4e/ad6c8acd7af0b5cbc154d4aeb7b5c03b169bb2d58f25261011a63c86a82f/petljapub-1.0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "303e39b20b682e7191046351a47171719f17730784b7d8b9421ee27585a7e9b0",
          "md5": "0efe4e760e2dfa1081efbafe7383ce05",
          "sha256": "59d60185ce97a2ae0641b8363fb86f529bbd9fc88c9c57789bf711a76cf3fbb1"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0efe4e760e2dfa1081efbafe7383ce05",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69585,
        "upload_time": "2021-09-18T11:00:38",
        "upload_time_iso_8601": "2021-09-18T11:00:38.715236Z",
        "url": "https://files.pythonhosted.org/packages/30/3e/39b20b682e7191046351a47171719f17730784b7d8b9421ee27585a7e9b0/petljapub-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdfd3d71e6cdd66218e86a3b3cfa3f7e9943ccc203af5d5d059cb6647a3e8f18",
          "md5": "acde616e7f42db1620d3bbd5ec36dca8",
          "sha256": "447d5d248459c399e52577c8e19a00f771767ee4e1cf90009f45d689adeb2875"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "acde616e7f42db1620d3bbd5ec36dca8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 57190,
        "upload_time": "2021-09-18T11:00:40",
        "upload_time_iso_8601": "2021-09-18T11:00:40.165904Z",
        "url": "https://files.pythonhosted.org/packages/bd/fd/3d71e6cdd66218e86a3b3cfa3f7e9943ccc203af5d5d059cb6647a3e8f18/petljapub-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b6f647c0d3bfaec64070940b925fc0b5725b965d651f4280d0200c4981595fe",
          "md5": "be03df47c9ed9c19c93c51955407f59f",
          "sha256": "f46f6b52509ec060dedc913d87926a2f97b3a4ec0b5cd60b4cb8007983512551"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be03df47c9ed9c19c93c51955407f59f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 70766,
        "upload_time": "2021-09-22T09:07:12",
        "upload_time_iso_8601": "2021-09-22T09:07:12.728055Z",
        "url": "https://files.pythonhosted.org/packages/4b/6f/647c0d3bfaec64070940b925fc0b5725b965d651f4280d0200c4981595fe/petljapub-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f568bf6decd47958ba3936599827f6124ac6dc9e4bc35f7f11141c76b8aba1a",
          "md5": "523db47b69fff5908e0b4a885abc6303",
          "sha256": "da93046a3942142d985d45b5ba27bf1e520156a95fe4a78256d46fccf1f99b5b"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "523db47b69fff5908e0b4a885abc6303",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 57817,
        "upload_time": "2021-09-22T09:07:13",
        "upload_time_iso_8601": "2021-09-22T09:07:13.854432Z",
        "url": "https://files.pythonhosted.org/packages/0f/56/8bf6decd47958ba3936599827f6124ac6dc9e4bc35f7f11141c76b8aba1a/petljapub-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad248e388d39566564c6c36212d2bbd2bac564a4c8c11bc7187ca6c26c6429ae",
          "md5": "ff61a9640400e32df63f2e242f51a3fb",
          "sha256": "996845515b8eeffa4d72554cba80de881f387fbceca5f795e558131038cfaa0b"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff61a9640400e32df63f2e242f51a3fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 71062,
        "upload_time": "2021-09-22T21:38:41",
        "upload_time_iso_8601": "2021-09-22T21:38:41.243067Z",
        "url": "https://files.pythonhosted.org/packages/ad/24/8e388d39566564c6c36212d2bbd2bac564a4c8c11bc7187ca6c26c6429ae/petljapub-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "497af304fd7513d98a88cdc830750f75ad3397f762794ccbd976f64d63c1d78b",
          "md5": "0d0fd039068b1909fe2d30d37162987c",
          "sha256": "6444c2f438bc35c544f7d72426c1d39b984a3c9290cc7c1598c9305ad9406199"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0d0fd039068b1909fe2d30d37162987c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 58736,
        "upload_time": "2021-09-22T21:37:57",
        "upload_time_iso_8601": "2021-09-22T21:37:57.845930Z",
        "url": "https://files.pythonhosted.org/packages/49/7a/f304fd7513d98a88cdc830750f75ad3397f762794ccbd976f64d63c1d78b/petljapub-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3427bedd9fe99dacac68e1de6c9be21e60df3f8bc7f0f39c1db268291d0fe1f3",
          "md5": "5c6eee2092a9a6a5f1c244777b5bb8c8",
          "sha256": "18078958700467f8cadbd9172712f2b05dd2f6ea34662c295e2e30e0c6576ef0"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c6eee2092a9a6a5f1c244777b5bb8c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 71636,
        "upload_time": "2021-11-01T17:14:25",
        "upload_time_iso_8601": "2021-11-01T17:14:25.582725Z",
        "url": "https://files.pythonhosted.org/packages/34/27/bedd9fe99dacac68e1de6c9be21e60df3f8bc7f0f39c1db268291d0fe1f3/petljapub-1.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccfbf36effe84ab3a3a6b8e820b89d08ba9cd6e9bc3f9556fe33404782b3e1c5",
          "md5": "3ba4aeee8109ac6ad8d665497045f449",
          "sha256": "bcd278d2c87e3f0d8a00210155f1aa7638c69e95864502b1695063cdbd387feb"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "3ba4aeee8109ac6ad8d665497045f449",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 59241,
        "upload_time": "2021-11-01T17:14:29",
        "upload_time_iso_8601": "2021-11-01T17:14:29.620896Z",
        "url": "https://files.pythonhosted.org/packages/cc/fb/f36effe84ab3a3a6b8e820b89d08ba9cd6e9bc3f9556fe33404782b3e1c5/petljapub-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16bea777aa9d4445d0be3a32d93cee35fba590383ac02785c7a3091ad20c425e",
          "md5": "22fb5184f8b4a73c0325ae6470ca6aa8",
          "sha256": "92c9d4ad3f1292c16dfbcbbc3dacf8a3a24ee39c4211eeae5044a2a273881d70"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22fb5184f8b4a73c0325ae6470ca6aa8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 71868,
        "upload_time": "2021-11-01T18:51:24",
        "upload_time_iso_8601": "2021-11-01T18:51:24.614566Z",
        "url": "https://files.pythonhosted.org/packages/16/be/a777aa9d4445d0be3a32d93cee35fba590383ac02785c7a3091ad20c425e/petljapub-1.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5afc8ca573d02e64b9fd97f89fb7799e6d9659f7df32907689a807c5fcdf669d",
          "md5": "c354d83b93b307365e2fa6823d78fdc9",
          "sha256": "9c61a14e01e7b953a2d874ee1f4aa2a3cf4c846f022c94f7df633677bec7b0e6"
        },
        "downloads": -1,
        "filename": "petljapub-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "c354d83b93b307365e2fa6823d78fdc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 59415,
        "upload_time": "2021-11-01T18:51:25",
        "upload_time_iso_8601": "2021-11-01T18:51:25.824172Z",
        "url": "https://files.pythonhosted.org/packages/5a/fc/8ca573d02e64b9fd97f89fb7799e6d9659f7df32907689a807c5fcdf669d/petljapub-1.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f65911717003e28432d56f77233e6523281c17317fec67c3595f97afb138a5a",
          "md5": "3571ddf34faf2cb6593ed1ecc7416dcc",
          "sha256": "9d1f1aff28cb9188f469ebfd30b3ac931bc2fca5f15810ece4f509ca89ae8b15"
        },
        "downloads": -1,
        "filename": "petljapub-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3571ddf34faf2cb6593ed1ecc7416dcc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 100149,
        "upload_time": "2023-02-02T09:55:38",
        "upload_time_iso_8601": "2023-02-02T09:55:38.996873Z",
        "url": "https://files.pythonhosted.org/packages/6f/65/911717003e28432d56f77233e6523281c17317fec67c3595f97afb138a5a/petljapub-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d477b5bf0ff8ec722414681d70cb4b6097a2eef434ea38c351f4587d3889e249",
          "md5": "c9cf78879cda9fb7aaac0407679e55cf",
          "sha256": "5d7ee7d5cb9a19a5c86f7c61b11c26108d17afdf2adf6b82d05074a3772d1b25"
        },
        "downloads": -1,
        "filename": "petljapub-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c9cf78879cda9fb7aaac0407679e55cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 114678,
        "upload_time": "2023-02-02T09:55:41",
        "upload_time_iso_8601": "2023-02-02T09:55:41.213791Z",
        "url": "https://files.pythonhosted.org/packages/d4/77/b5bf0ff8ec722414681d70cb4b6097a2eef434ea38c351f4587d3889e249/petljapub-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f65911717003e28432d56f77233e6523281c17317fec67c3595f97afb138a5a",
        "md5": "3571ddf34faf2cb6593ed1ecc7416dcc",
        "sha256": "9d1f1aff28cb9188f469ebfd30b3ac931bc2fca5f15810ece4f509ca89ae8b15"
      },
      "downloads": -1,
      "filename": "petljapub-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3571ddf34faf2cb6593ed1ecc7416dcc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 100149,
      "upload_time": "2023-02-02T09:55:38",
      "upload_time_iso_8601": "2023-02-02T09:55:38.996873Z",
      "url": "https://files.pythonhosted.org/packages/6f/65/911717003e28432d56f77233e6523281c17317fec67c3595f97afb138a5a/petljapub-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d477b5bf0ff8ec722414681d70cb4b6097a2eef434ea38c351f4587d3889e249",
        "md5": "c9cf78879cda9fb7aaac0407679e55cf",
        "sha256": "5d7ee7d5cb9a19a5c86f7c61b11c26108d17afdf2adf6b82d05074a3772d1b25"
      },
      "downloads": -1,
      "filename": "petljapub-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c9cf78879cda9fb7aaac0407679e55cf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 114678,
      "upload_time": "2023-02-02T09:55:41",
      "upload_time_iso_8601": "2023-02-02T09:55:41.213791Z",
      "url": "https://files.pythonhosted.org/packages/d4/77/b5bf0ff8ec722414681d70cb4b6097a2eef434ea38c351f4587d3889e249/petljapub-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}