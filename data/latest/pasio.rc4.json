{
  "info": {
    "author": "Andrey Lando, Ilya Vorontsov",
    "author_email": "dronte.l@gmail.com, vorontsov.i.e@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# PASIO\n\nPasio is a tool for denosing DNA coverage profiles coming from high-throughput sequencing data.\nExample of experiments pasio works well on is ChIP-seq, DNAse-seq, ATAC-seq.\n\nIt takes a .bed file of counts (integer values, normalization is not supported). And produces\ntsv file with genome splited into segments which coverage can be treated as equal.\n\nPasio runs on both Python 2 and 3 (Python 2 interpreter runs a bit faster).\nThe only dependencies are numpy and scipy.\n\nDefaults are reasonable for fast yet almost precise computation, so usually it is enough to run:\n\n```\npasio input.bedgraph\n```\n\nPASIO can read and write to gzipped files (filename should have `.gz` extension).\n\n## Installation\nPASIO works with Python 2.7.1+ and Python 3.4+. The tool is available on PyPA, so you can install it using pip:\n\n```\n  python -m pip install pasio\n```\n\n\nNote that pip install wrapper to run pasio without specifying python. One can use one of two options to run it:\n\n```\npasio <options>...\npython -m pasio <options>...\n```\n\nThe latter option can be useful if you want to run it using a certain python version.\n\n## Underlying math\n\nPASIO is a program to segment chromatin accessibility profile. It accepts a bedgraph file\nwith coverage of position by DNase cuts (e.g. by 5'-ends of DNase-seq)\nand splits each contig/chromosome into segments with different accessibilites in an optimal way.\n\nMethod is based on two assumptions:\n* cuts are introduced by Poisson process `P(λ)` with `λ` depending on segment\n* `λ` are distributed as `λ ~ Г(α, β) = β^α * λ^{α - 1} * exp(-βλ) / Г(α)`\n\n`α` and `β` are the only parameters of segmentation.\n\nThen we can derive (logarithmic) marginal likelyhood `logML` to be optimized.\n`logML` for a single segment `S` of length `L` with coverages `(S_1, S_2, ...S_L)` and total coverage `C = \\sum_i(S_i)` will be:\n`logML(S,α,β) = α*log(β) − log(Γ(α)) + log(Γ(C + α)) − (C + α) * log(L + β) − \\sum_i log (S_i!)`\n\nHere `α*log(β) − log(Γ(α))` can be treated as a penalty for segment creation (and is approximately proportional to `α*log(β/α))`.\nTotal `logML(α,β)` is a sum of logarithmic marginal likelihoods for all segments: `logML(α,β) = \\sum_S logML(S,α,β)`.\nGiven a chromosome coverage profile, term `\\sum_S {\\sum_i log (S_i!)}` doesn't depend on segmentation.\nValue `\\sum_S {log(Γ(C + α)) − (C + α) * log(L + β)}` is refered as a `self score` of a segment.\nWe optimize only segmentation-dependent part of `logML` which is termed just `score`.\nThis score is a sum of self score of a segment and a penalty for segment creation.\n\n## Program design\n\n`split_bedgraph` loads bedgraph file chromosome by chromosome, splits them into segments and writes into output tsv file.\nCoverage counts are stored internally with 1-nt resolution.\n\nSplitting is proceeded in two steps: (a) reduce a list of candidate split points (sometimes this step is omitted),\n(b) choose splits from a list of candidates and calculate score of segmentation.\nThe first step is performed with one of so called *reducers*. The second step is performed\nwith one of *splitters* (each splitter also implements a reducer interface but not vice versa).\n\nSplitters and reducers:\n* The most basic splitter is `SquareSplitter` which implements dynamic programming algorithm\n   with `O(N^2)` complexity where `N` is a number of split candidates. Other splitters/reducers perform\n   some heuristical optimisations on top of `SquareSplitter`\n* `SlidingWindowReducer` tries to segment not an entire contig (chromosome) but shorter parts of contig.\n   So they scan a sequence with a sliding window and remove split candidates which are unlikely.\n   Each window is processed using some base splitter (typically `SquareSplitter`).\n   Candidates from different windows are then aggregated.\n* `RoundReducer` perform the same procedure and repeat it for several rounds or until list of split candidates converges.\n* `NotZeroReducer` discards (all) splits if all points of an interval under consideration are zeros.\n* `NotConstantReducer` discards splits between same-valued points.\n* `ReducerCombiner` accept a list of reducers to be sequentially applied. The last reducer can also be a splitter.\nIn that case combiner allows for splitting and scoring a segmentation. To transform any reducer into splitter one can combine\nthat reducer with `NopSplitter` - so that split candidates obtained by reducer will be treated as\nfinal splitting and NopSplitter make it possible to calculate its score.\n\nSplits denote segment boundaries to the left of position. Adjacent splits `a` and `b` form semi-closed interval `[a, b)`\nE.g. for coverage counts `[99,99,99, 1,1,1]` splits should be `[0, 3, 6]`.\nSo that we have two segments: `[0, 3)` and `[3, 6)`.\n\nSplits and split candidates are stored as numpy arrays and always include both inner split points and segment boundaries, i.e. point just before config start and right after the contig end.\n\nOne can also treat splits as positions between-elements (like in python slices)\n```\ncounts:            |  99   99   99  |   1    1     1  |\nsplits candidates: 0     1    2     3     4     5     6\nsplits:            0                3                 6\n```\nSplitters invoke `LogMarginalLikelyhoodComputer` which can compute `logML` for a splitting (and for each segment).\n`LogMarginalLikelyhoodComputer` store cumulative sums of coverage counts at split candidates\nand also distances between candidates. It allows one to efficiently compute `logML` and doesn't need\nto recalculate total segment coverages each time.\n\nIn order to efficiently compute `log(x)` and `log(Г(x))` we precompute values for some first million of integer numbers `x`.\nComputation efficiency restricts us to integer values of `α` and `β`. Segment lengths are naturally integer,\ncoverage counts (and total segment counts) are also integer because they represent numbers of cuts.\n`LogComputer` and `LogGammaComputer` store precomputed values and know how to calculate these values efficiently.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/autosome-ru/pasio",
    "keywords": "bioinformatics NGS coverage segmentation denoise",
    "license": "Pasio is licensed under WTFPL, but if you prefer more standard licenses, feel free to treat it as MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pasio",
    "package_url": "https://pypi.org/project/pasio/",
    "platform": "",
    "project_url": "https://pypi.org/project/pasio/",
    "project_urls": {
      "Homepage": "https://github.com/autosome-ru/pasio"
    },
    "release_url": "https://pypi.org/project/pasio/1.1.2/",
    "requires_dist": [
      "numpy (>=1.8.0)",
      "scipy (>=0.12.0)",
      "future (>=0.4.0)",
      "pytest ; extra == 'dev'",
      "pytest-benchmark ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "tox ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "setuptools-scm ; extra == 'dev'"
    ],
    "requires_python": ">=2.7.1, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
    "summary": "Pasio is a tool for segmentation and denosing DNA coverage profiles coming from high-throughput sequencing data.",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6275082,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2f603c31dd4f89e2b2aa6697c4c1dfd0fd97012bb504fcb4b278b0c4e93dfac",
          "md5": "6818a588c306c8fa2ad9a1976182e829",
          "sha256": "8850356eca9066deb8882e4071e6d68a0115636be8b7e40f90279a8ff3c167e3"
        },
        "downloads": -1,
        "filename": "pasio-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6818a588c306c8fa2ad9a1976182e829",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7.1, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "size": 20005,
        "upload_time": "2019-11-29T17:50:26",
        "upload_time_iso_8601": "2019-11-29T17:50:26.083207Z",
        "url": "https://files.pythonhosted.org/packages/f2/f6/03c31dd4f89e2b2aa6697c4c1dfd0fd97012bb504fcb4b278b0c4e93dfac/pasio-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "773f08b60d35b68e2dea37e88b2534645255e86ce1211b10713931a841c57de9",
          "md5": "45d9d5846096506e900d0fafdbfd5f5a",
          "sha256": "5ff172b6884c778281bd7b4ff06ef862fff8a51e44b7b377d2ca7f0d4a3c688a"
        },
        "downloads": -1,
        "filename": "pasio-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "45d9d5846096506e900d0fafdbfd5f5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7.1, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "size": 22120,
        "upload_time": "2019-11-29T17:50:28",
        "upload_time_iso_8601": "2019-11-29T17:50:28.460070Z",
        "url": "https://files.pythonhosted.org/packages/77/3f/08b60d35b68e2dea37e88b2534645255e86ce1211b10713931a841c57de9/pasio-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe4d77b7fdd52d5c158c0229ac6ac6b73e7af1c63b964b3d4f796e19f05bd1df",
          "md5": "e775f78a97061861fc7b9b5fc5b05ef1",
          "sha256": "f4381772376d6befc965a13e56f6792605c09c351798b1b1bc7776aa83d69508"
        },
        "downloads": -1,
        "filename": "pasio-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e775f78a97061861fc7b9b5fc5b05ef1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7.1, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "size": 21409,
        "upload_time": "2019-12-10T18:19:30",
        "upload_time_iso_8601": "2019-12-10T18:19:30.085014Z",
        "url": "https://files.pythonhosted.org/packages/fe/4d/77b7fdd52d5c158c0229ac6ac6b73e7af1c63b964b3d4f796e19f05bd1df/pasio-1.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccfe264f98056e79097154075019525c253ae779edf14c76a78517bb616bb921",
          "md5": "797ce5c4152cd9bcfd4bd5f855e664ce",
          "sha256": "8a087e55f01a032a47f7692d31ab970087f09f1fd1ff1ecc6ef3aaf52a4b384c"
        },
        "downloads": -1,
        "filename": "pasio-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "797ce5c4152cd9bcfd4bd5f855e664ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7.1, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "size": 25251,
        "upload_time": "2019-12-10T18:19:31",
        "upload_time_iso_8601": "2019-12-10T18:19:31.807240Z",
        "url": "https://files.pythonhosted.org/packages/cc/fe/264f98056e79097154075019525c253ae779edf14c76a78517bb616bb921/pasio-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d6c0f96451ce7b0909115d208ea15aacfd201669da3c60756994b744e7165c7",
          "md5": "d608bbb9970797b9413cd9e531612486",
          "sha256": "c269ec9f7fc328255e7184114d6d83241fa667a3bb16eb902365bd80fb02ad87"
        },
        "downloads": -1,
        "filename": "pasio-1.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d608bbb9970797b9413cd9e531612486",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7.1, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "size": 21486,
        "upload_time": "2019-12-10T19:41:11",
        "upload_time_iso_8601": "2019-12-10T19:41:11.524369Z",
        "url": "https://files.pythonhosted.org/packages/2d/6c/0f96451ce7b0909115d208ea15aacfd201669da3c60756994b744e7165c7/pasio-1.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2d210120b9fff5fbdc2f67154717c8058fc2a4bb822367851d9f55c95ae09be",
          "md5": "2f80192e70f87f9da44d04ddc91543cc",
          "sha256": "5993053e255389a438128ffc1bb123228abd5a0154c45df85edc96eee92cf06e"
        },
        "downloads": -1,
        "filename": "pasio-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2f80192e70f87f9da44d04ddc91543cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7.1, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "size": 26709,
        "upload_time": "2019-12-10T19:41:13",
        "upload_time_iso_8601": "2019-12-10T19:41:13.353133Z",
        "url": "https://files.pythonhosted.org/packages/f2/d2/10120b9fff5fbdc2f67154717c8058fc2a4bb822367851d9f55c95ae09be/pasio-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dde5df77d6eb02126226ef8bfd19be08c22cd199f0debc1e729e32ad4a9a719",
          "md5": "5bc2e9f815c64f6f55f08eccc826ef5d",
          "sha256": "8448f9fde3f0b458c3a57ea05a96713b0908a496e7362eb3d68a20f2b5320c09"
        },
        "downloads": -1,
        "filename": "pasio-1.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bc2e9f815c64f6f55f08eccc826ef5d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7.1, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "size": 21505,
        "upload_time": "2019-12-10T21:52:57",
        "upload_time_iso_8601": "2019-12-10T21:52:57.043725Z",
        "url": "https://files.pythonhosted.org/packages/5d/de/5df77d6eb02126226ef8bfd19be08c22cd199f0debc1e729e32ad4a9a719/pasio-1.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c457efcb7f87875ade77b4f513feebb6775da0c34cb292e3bcde0a9f6a97ed49",
          "md5": "5625561b8b3c6a4ad7957baf05c9c588",
          "sha256": "432a012bae92d2844f5582b0bd4ebca7d5f448f5b6c9513fd2d39956601595e9"
        },
        "downloads": -1,
        "filename": "pasio-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5625561b8b3c6a4ad7957baf05c9c588",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7.1, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "size": 26754,
        "upload_time": "2019-12-10T21:52:58",
        "upload_time_iso_8601": "2019-12-10T21:52:58.717317Z",
        "url": "https://files.pythonhosted.org/packages/c4/57/efcb7f87875ade77b4f513feebb6775da0c34cb292e3bcde0a9f6a97ed49/pasio-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5dde5df77d6eb02126226ef8bfd19be08c22cd199f0debc1e729e32ad4a9a719",
        "md5": "5bc2e9f815c64f6f55f08eccc826ef5d",
        "sha256": "8448f9fde3f0b458c3a57ea05a96713b0908a496e7362eb3d68a20f2b5320c09"
      },
      "downloads": -1,
      "filename": "pasio-1.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5bc2e9f815c64f6f55f08eccc826ef5d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=2.7.1, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
      "size": 21505,
      "upload_time": "2019-12-10T21:52:57",
      "upload_time_iso_8601": "2019-12-10T21:52:57.043725Z",
      "url": "https://files.pythonhosted.org/packages/5d/de/5df77d6eb02126226ef8bfd19be08c22cd199f0debc1e729e32ad4a9a719/pasio-1.1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c457efcb7f87875ade77b4f513feebb6775da0c34cb292e3bcde0a9f6a97ed49",
        "md5": "5625561b8b3c6a4ad7957baf05c9c588",
        "sha256": "432a012bae92d2844f5582b0bd4ebca7d5f448f5b6c9513fd2d39956601595e9"
      },
      "downloads": -1,
      "filename": "pasio-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5625561b8b3c6a4ad7957baf05c9c588",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7.1, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
      "size": 26754,
      "upload_time": "2019-12-10T21:52:58",
      "upload_time_iso_8601": "2019-12-10T21:52:58.717317Z",
      "url": "https://files.pythonhosted.org/packages/c4/57/efcb7f87875ade77b4f513feebb6775da0c34cb292e3bcde0a9f6a97ed49/pasio-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}