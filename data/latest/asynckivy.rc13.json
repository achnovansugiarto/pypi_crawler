{
  "info": {
    "author": "Nattōsai Mitō",
    "author_email": "flow4re2c@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# AsyncKivy\n\n[Youtube](https://www.youtube.com/playlist?list=PLNdhqAjzeEGjTpmvNck4Uykps8s9LmRTJ)  \n[日本語doc](https://github.com/gottadiveintopython/asynckivy/blob/main/README_jp.md)  \n\n`asynckivy` is an async library that saves you from ugly callback-based code,\nlike most of async libraries do.\nLet's say you want to do:\n\n1. `print('A')`\n1. wait for 1sec\n1. `print('B')`\n1. wait for a button to be pressed\n1. `print('C')`\n\nin that order.\nYour code would look like this:\n\n```python\nfrom kivy.clock import Clock\n\ndef what_you_want_to_do(button):\n    print('A')\n\n    def one_sec_later(__):\n        print('B')\n        button.bind(on_press=on_button_press)\n    Clock.schedule_once(one_sec_later, 1)\n\n    def on_button_press(button):\n        button.unbind(on_press=on_button_press)\n        print('C')\n```\n\nIt's barely readable and not easy to understand.\nIf you use `asynckivy`, the code above will become:\n\n```python\nimport asynckivy as ak\n\nasync def what_you_want_to_do(button):\n    print('A')\n    await ak.sleep(1)\n    print('B')\n    await ak.event(button, 'on_press')\n    print('C')\n```\n\n## Installation\n\nIf you use this module, it's recommended to pin the minor version, because if\nit changed, it means some *important* breaking changes occurred.\n\n```text\npoetry add asynckivy@~0.5\npip install \"asynckivy>=0.5,<0.6\"\n```\n\n## Usage\n\n```python\nimport asynckivy as ak\n\nasync def some_task(button):\n    # wait for 1sec\n    dt = await ak.sleep(1)\n    print(f'{dt} seconds have passed')\n\n    # wait until a button is pressed\n    await ak.event(button, 'on_press')\n\n    # wait until 'button.x' changes\n    __, x = await ak.event(button, 'x')\n    print(f'button.x is now {x}')\n\n    # wait until 'button.x' becomes greater than 100\n    if button.x <= 100:\n        __, x = await ak.event(button, 'x', filter=lambda __, x: x>100)\n        print(f'button.x is now {x}')\n\n    # wait until EITHER a button is pressed OR 5sec passes.\n    # i.e. wait at most 5 seconds for a button to be pressed\n    tasks = await ak.or_(\n        ak.event(button, 'on_press'),\n        ak.sleep(5),\n    )\n    print(\"The button was pressed\" if tasks[0].done else \"Timeout\")\n\n    # wait until a button is pressed AND 5sec passes.\n    tasks = await ak.and_(\n        ak.event(button, 'on_press'),\n        ak.sleep(5),\n    )\n\n    # nest as you want.\n    # wait for a button to be pressed AND (5sec OR 'other_async_func' to complete)\n    tasks = await ak.and_(\n        ak.event(button, 'on_press'),\n        ak.or_(\n            ak.sleep(5),\n            other_async_func(),\n        ),\n    )\n    child_tasks = tasks[1].result\n    print(\"5sec passed\" if child_tasks[0].done else \"other_async_func has completed\")\n\nak.start(some_task(some_button))\n```\n\n### animation\n\n```python\nimport asynckivy as ak\n\nasync def some_task(widget):\n    # start an animation and wait for the completion.\n    # keyword-arguments are the same as kivy.animation.Animation's.\n    await ak.animate(widget, width=200, t='in_out_quad', d=.5)\n\n    # interpolate between the values 0 and 200 in an async-manner.\n    # keyword-arguments are the same as kivy.animation.Animation's.\n    async for v in ak.interpolate(0, 200, s=.2, d=2, t='linear'):\n        print(v)\n        # await ak.sleep(1)  # Do not await anything during this iteration\n\n    # change the text of Label with fade-transition\n    label = Label(...)\n    async with ak.fade_transition(label):\n        label.text = 'new text'\n\n    # If you want more low-level control over animations, use the vanim module.\n    # Read the module doc for details.\n    from asynckivy import vanim\n    async for dt in vanim.delta_time():\n        ...\n```\n\n### touch handling\n\nYou can easily handle `on_touch_xxx` events via `asynckivy.rest_of_touch_moves()`.\n\n```python\nimport asynckivy as ak\n\nclass Painter(RelativeLayout):\n    def on_touch_down(self, touch):\n        if self.collide_point(*touch.opos):\n            ak.start(self.draw_rect(touch))\n            return True\n    \n    async def draw_rect(self, touch):\n        from kivy.graphics import Line, Color, Rectangle\n        from kivy.utils import get_random_color\n        with self.canvas:\n            Color(*get_random_color())\n            line = Line(width=2)\n        ox, oy = self.to_local(*touch.opos)\n        async for __ in ak.rest_of_touch_moves(self, touch):\n            # This part is iterated everytime 'on_touch_move' is fired.\n            x, y = self.to_local(*touch.pos)\n            min_x, max_x = (x, ox) if x < ox else (ox, x)\n            min_y, max_y = (y, oy) if y < oy else (oy, y)\n            line.rectangle = (min_x, min_y, max_x - min_x, max_y - min_y, )\n            # await ak.sleep(1)  # Do not await anything during this iteration\n        else:\n            print(\"'on_touch_up' was fired\")\n```\n\n### threading\n\n`asynckivy` does not have any I/O primitives like Trio and asyncio do,\nthus threads are the only way to perform them without blocking the main-thread:\n\n```python\nfrom concurrent.futures import ThreadPoolExecuter\nimport asynckivy as ak\n\nexecuter = ThreadPoolExecuter()\n\n\ndef thread_blocking_operation():\n    '''This function is called from outside the main-thread, so you are not allowed to touch gui components here.'''\n\n\nasync def some_task():\n    # create a new thread, run a function inside it, then\n    # wait for the completion of that thread\n    r = await ak.run_in_thread(thread_blocking_operation)\n    print(\"return value:\", r)\n\n    # run a function inside a ThreadPoolExecuter, and wait for the completion\n    # (ProcessPoolExecuter is not supported)\n    r = await ak.run_in_executer(thread_blocking_operation, executer)\n    print(\"return value:\", r)\n```\n\nExceptions(not BaseExceptions) are propagated to the caller\nso you can catch them like you do in synchronous code:\n\n```python\nimport requests\nimport asynckivy as ak\n\nasync def some_task(label):\n    try:\n        response = await ak.run_in_thread(lambda: requests.get('htt...', timeout=10))\n    except requests.Timeout:\n        label.text = \"TIMEOUT!\"\n    else:\n        label.text = \"RECEIVED: \" + response.text\n```\n\n### synchronizing and communicating between tasks\n\nThere is a [trio.Event](https://trio.readthedocs.io/en/stable/reference-core.html#trio.Event) equivalent.\n\n```python\nimport asynckivy as ak\n\nasync def task_A(e):\n    print('A1')\n    await e.wait()\n    print('A2')\nasync def task_B(e):\n    print('B1')\n    await e.wait()\n    print('B2')\n\ne = ak.Event()\nak.start(task_A(e))\n# A1\nak.start(task_B(e))\n# B1\ne.set()\n# A2\n# B2\n```\n\nUnlike Trio's and asyncio's, when you call ``Event.set()``,\nthe tasks waiting for it to happen will *immediately* be resumed.\nAs a result, ``e.set()`` will return *after* ``A2`` and ``B2`` are printed.\n\nAnd there is an [asyncio.Queue](https://docs.python.org/3/library/asyncio-queue.html) equivalent.\n\n```python\nfrom kivy.app import App\nimport asynckivy as ak\nfrom asynckivy.queue import Queue\n\nasync def producer(q, items):\n    for i in items:\n        await q.put(i)\n    q.close()\n\nasync def consumer(q):\n    assert ''.join([item async for item in q]) == 'ABCD'  # Queue is async-iterable\n\nasync def consumer2(q):\n    '''The ``consumer()`` above can be written in more primitive way like this'''\n    items = []\n    try:\n        while True:\n            items.append(await q.get())\n    except ak.EndOfResource:\n        assert ''.join(items) == 'ABCD'\n\n\nq = Queue()\nak.start(producer(q, 'ABCD'))\nak.start(consumer(q))\nApp().run()  # Queue relies on Clock so you need to run the event-loop\n```\n\n### dealing with cancellations\n\n``asynckivy.start()`` returns a ``Task``,\nwhich can be used to cancel the execution.\n\n```python\ntask = asynckivy.start(async_func())\n...\ntask.cancel()\n```\n\nWhen `.cancel()` is called, `GeneratorExit` will occur inside the task,\nwhich means you can prepare for cancellations as follows:\n\n```python\nasync def async_func():\n    try:\n        ...\n    except GeneratorExit:\n        print('cancelled')\n        raise  # You must re-raise !!\n    finally:\n        print('cleanup resources here')\n```\n\nYou are not allowed to `await` inside `except-GeneratorExit-clause` and `finally-clause` if you want the task to be cancellable\nbecause cancellations always must be done immediately.\n\n```python\nasync def async_func():\n    try:\n        await something  # <-- ALLOWED\n    except Exception:\n        await something  # <-- ALLOWED\n    except GeneratorExit:\n        await something  # <-- NOT ALLOWED\n        raise\n    finally:\n        await something  # <-- NOT ALLOWED\n```\n\nYou are allowed to `await` inside `finally-clause` if the task will never get cancelled.\n\n```python\nasync def async_func():  # Assuming this never gets cancelled\n    try:\n        await something  # <-- ALLOWED\n    except Exception:\n        await something  # <-- ALLOWED\n    finally:\n        await something  # <-- ALLOWED\n```\n\nAs long as you follow the above rules, you can cancel tasks as you wish.\nBut note that if there are lots of explicit calls to `Task.cancel()` in your code,\n**it's a sign of your code being not well-structured**.\nYou can usually avoid it by using `asynckivy.and_()` and `asynckivy.or_()`.  \n\n### misc\n\n```python\nimport asynckivy as ak\n\n# schedule an awaitable/Task to start after the next frame\nak.start_soon(awaitable_or_task)\n```\n\n## Notes\n\n### Places you cannot await\n\nI already mentioned about this but I'll say again.\n**You cannot await while iterating `rest_of_touch_moves()` or `interpolate()`.**\n\n```python\nimport asynckivy as ak\n\nasync def async_fn():\n    async for v in ak.interpolate(...):\n        await something  # <-- NOT ALLOWED\n\n    async for __ in ak.rest_of_touch_moves(...):\n        await something  # <-- NOT ALLOWED\n```\n\n### asynckivy cannot be used with asyncio or trio\n\n`asyncio` and `trio` do some hacky stuff, `sys.set_asyncgen_hooks()` and `sys.get_asyncgen_hooks`,\nwhich likely hinders asynckivy-flavored async generators.\nYou can see its details [here](https://peps.python.org/pep-0525/#finalization).\nI don't know how to make it work.\nMaybe if [PEP355](https://peps.python.org/pep-0533/) is accepted,\nit might work.\n\n### Structured Concurrency\n\n(This section is incomplete, and will be filled some day.)\n\n`asynckivy.and_()` and `asynckivy.or_()` follow the concept of [structured concurrency][njs_sc].\n\n```python\nimport asynckivy as ak\n\nasync def root():\n    await ak.or_(child1(), child2())\n\nasync def child1():\n    ...\n\nasync def child2():\n    await ak.and_(ground_child1(), ground_child2())\n\nasync def ground_child1():\n    ...\n\nasync def ground_child2():\n    ...\n```\n\n```mermaid\nflowchart TB\nroot --> C1(child 1) & C2(child 2)\nC2 --> GC1(ground child 1) & GC2(ground child 2)\n```\n\n\n## Tested on\n\n- CPython 3.7 + Kivy 2.1.0\n- CPython 3.8 + Kivy 2.1.0\n- CPython 3.9 + Kivy 2.1.0\n- CPython 3.10 + Kivy 2.1.0\n\n## Why this even exists\n\nKivy supports two legit async libraries, [asyncio][asyncio] and [Trio][trio], from version 2.0.0 so developing another one seems [reinventing the wheel][reinventing].\nActually, I started this one just for learning how async/await works so it *was* initially \"reinventing the wheel\".\n\nBut after playing with Trio and Kivy for a while, I noticed that Trio is not suitable for the situation where fast reactions are required e.g. touch events.\nThe same is true of asyncio.\nYou can confirm it by running `investigation/why_xxx_is_not_suitable_for_handling_touch_events.py`, and masshing a mouse button.\nYou'll see sometimes `up` is not paired with `down`.\nYou'll see the coordinates aren't relative to the `RelativeLayout` even though the `target` belongs to it.\n\nThe cause of those problems is that `trio.Event.set()` and `asyncio.Event.set()` don't *immediately* resume the tasks waiting for the `Event` to be set. They just schedule the tasks to resume.\nSame thing can be said to `nursery.start_soon()` and `asyncio.create_task()`.\n\nTrio and asyncio are async **I/O** libraries after all. They probably don't have to immediately resumes/starts tasks, which I think necessary for Kivy's touch handling.\n(If a touch is not handled immediately, its coordinate's origin may change, its `pos` might be updated and the previous value will be lost.)\nTheir core design might not be suitable for GUI in the first place.\nThat's why I'm still developing this `asynckivy` library to this day.\n\n[asyncio]:https://docs.python.org/3/library/asyncio.html\n[trio]:https://trio.readthedocs.io/en/stable/\n[reinventing]:https://en.wikipedia.org/wiki/Reinventing_the_wheel\n[njs_sc]:https://vorpus.org/blog/notes-on-structured-concurrency-or-go-statement-considered-harmful/\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gottadiveintopython/asynckivy",
    "keywords": "async,kivy",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asynckivy",
    "package_url": "https://pypi.org/project/asynckivy/",
    "platform": null,
    "project_url": "https://pypi.org/project/asynckivy/",
    "project_urls": {
      "Homepage": "https://github.com/gottadiveintopython/asynckivy",
      "Repository": "https://github.com/gottadiveintopython/asynckivy"
    },
    "release_url": "https://pypi.org/project/asynckivy/0.5.4/",
    "requires_dist": [
      "asyncgui (>=0.5,<0.6)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Async library for Kivy",
    "version": "0.5.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15185577,
  "releases": {
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "132210860053819b674fab86ed96a2fddcebdfbcd2ec70e207f3e5b35bf3f7be",
          "md5": "f450d4c9e02d4f0210cec36f6d62ab8b",
          "sha256": "d290e91b3cfc5257fa652cbdabbe18b12c180206b8b69e27b1e1d65c68a10aca"
        },
        "downloads": -1,
        "filename": "asynckivy-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f450d4c9e02d4f0210cec36f6d62ab8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 9945,
        "upload_time": "2020-06-06T12:20:51",
        "upload_time_iso_8601": "2020-06-06T12:20:51.328225Z",
        "url": "https://files.pythonhosted.org/packages/13/22/10860053819b674fab86ed96a2fddcebdfbcd2ec70e207f3e5b35bf3f7be/asynckivy-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57efaa0513eecdceb86d400d3765de808ec2e3fb3444e7649f30beebb39223d2",
          "md5": "cab8e6d8e9579f310dfcf02dc2ab0a57",
          "sha256": "0761831c17efac3d6733d2b21dd99650059e34e2bfb4e838ec2bcb9a68899cb4"
        },
        "downloads": -1,
        "filename": "asynckivy-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cab8e6d8e9579f310dfcf02dc2ab0a57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 8711,
        "upload_time": "2020-06-06T12:20:53",
        "upload_time_iso_8601": "2020-06-06T12:20:53.772451Z",
        "url": "https://files.pythonhosted.org/packages/57/ef/aa0513eecdceb86d400d3765de808ec2e3fb3444e7649f30beebb39223d2/asynckivy-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55adfdec1b48add595fc4e7d40c64ef2ae090f0335d48e1cf5c02f7637538fa1",
          "md5": "d89121a00cb62990840d166b011fb97a",
          "sha256": "a4f69108407e4492489a68adb943159ff7cebb51698508e43adc6a34280231cd"
        },
        "downloads": -1,
        "filename": "asynckivy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d89121a00cb62990840d166b011fb97a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 10122,
        "upload_time": "2020-07-25T07:58:52",
        "upload_time_iso_8601": "2020-07-25T07:58:52.717926Z",
        "url": "https://files.pythonhosted.org/packages/55/ad/fdec1b48add595fc4e7d40c64ef2ae090f0335d48e1cf5c02f7637538fa1/asynckivy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac8e09837c770226110b24748ebd3271470fbd3e0734ce6e4d7d40ff2e40752b",
          "md5": "d00c36087ff298d0d3ee45d5c6b7b150",
          "sha256": "2c905cebdf2b928f0d56a9a5a271f32e35cd8e95b54f16ba345b6f848ec269e4"
        },
        "downloads": -1,
        "filename": "asynckivy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d00c36087ff298d0d3ee45d5c6b7b150",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 8932,
        "upload_time": "2020-07-25T07:58:54",
        "upload_time_iso_8601": "2020-07-25T07:58:54.218777Z",
        "url": "https://files.pythonhosted.org/packages/ac/8e/09837c770226110b24748ebd3271470fbd3e0734ce6e4d7d40ff2e40752b/asynckivy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab75e260077bcc9d647117d81c30e322fa5208b5d412331f1db8bc4668d014cb",
          "md5": "9db4253c037a77ca343f978707dec0ee",
          "sha256": "6a92445a0729301b4d2de7365f8987ccdf09cf5d1ecd031b381b6f74ce0460a2"
        },
        "downloads": -1,
        "filename": "asynckivy-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9db4253c037a77ca343f978707dec0ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 10122,
        "upload_time": "2020-07-26T00:16:07",
        "upload_time_iso_8601": "2020-07-26T00:16:07.365665Z",
        "url": "https://files.pythonhosted.org/packages/ab/75/e260077bcc9d647117d81c30e322fa5208b5d412331f1db8bc4668d014cb/asynckivy-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41a9ddd0966dbb8a91d99ea8a9c6a741e996dc77f555b7a2bf5fd2191ff5a976",
          "md5": "7d95493992f0d357023025bf0af69b75",
          "sha256": "e020679c6805b033e4e53f6feb2d94753a0178fe6e337de3b114c870261d838f"
        },
        "downloads": -1,
        "filename": "asynckivy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7d95493992f0d357023025bf0af69b75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 8943,
        "upload_time": "2020-07-26T00:16:08",
        "upload_time_iso_8601": "2020-07-26T00:16:08.947841Z",
        "url": "https://files.pythonhosted.org/packages/41/a9/ddd0966dbb8a91d99ea8a9c6a741e996dc77f555b7a2bf5fd2191ff5a976/asynckivy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "539a85ea438b8b5bbb65d48e06ce69b9ff72030b2945e87ea0db45320b2294cb",
          "md5": "f7ebccbc8f9a50506d5bfbc1fd4cc63e",
          "sha256": "8a9a68d608ac33ef78d732b055f8af51d327cc1b41d654a4f8185e78067739ae"
        },
        "downloads": -1,
        "filename": "asynckivy-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7ebccbc8f9a50506d5bfbc1fd4cc63e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 12764,
        "upload_time": "2020-10-10T05:00:33",
        "upload_time_iso_8601": "2020-10-10T05:00:33.396617Z",
        "url": "https://files.pythonhosted.org/packages/53/9a/85ea438b8b5bbb65d48e06ce69b9ff72030b2945e87ea0db45320b2294cb/asynckivy-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01fe811aa4a349c898251bc1a5ce9818e119753c55f63dccdd49c5cff01de9fe",
          "md5": "f443a21f26c725e09778412a4170f947",
          "sha256": "865125ae3fce2d86fe2851d862b5d862726402830d236fc980b88e6932ec2429"
        },
        "downloads": -1,
        "filename": "asynckivy-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f443a21f26c725e09778412a4170f947",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 11334,
        "upload_time": "2020-10-10T05:00:35",
        "upload_time_iso_8601": "2020-10-10T05:00:35.055605Z",
        "url": "https://files.pythonhosted.org/packages/01/fe/811aa4a349c898251bc1a5ce9818e119753c55f63dccdd49c5cff01de9fe/asynckivy-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "986ddbedebe7ddd70f7e65e77572759044183bf7cda995193645339af695a49b",
          "md5": "e0391b0ce884e7c10601e558ead3c7da",
          "sha256": "71f76b77d06e36eff2e501f43609e6d6e321ee132bb496a2714410b11fa9a9ef"
        },
        "downloads": -1,
        "filename": "asynckivy-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0391b0ce884e7c10601e558ead3c7da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 11848,
        "upload_time": "2021-01-07T04:28:00",
        "upload_time_iso_8601": "2021-01-07T04:28:00.416053Z",
        "url": "https://files.pythonhosted.org/packages/98/6d/dbedebe7ddd70f7e65e77572759044183bf7cda995193645339af695a49b/asynckivy-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75e00e8214df4d949782c5f6a9b5f2b451286b4ad2b054a68a902b161558261d",
          "md5": "5daed221cc22a1da464d17c6cdef9a52",
          "sha256": "1805f2d5638c4cc7ff055deaebe320c716b94e33364a3afb600634abccb82828"
        },
        "downloads": -1,
        "filename": "asynckivy-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5daed221cc22a1da464d17c6cdef9a52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 11720,
        "upload_time": "2021-01-07T04:28:02",
        "upload_time_iso_8601": "2021-01-07T04:28:02.000366Z",
        "url": "https://files.pythonhosted.org/packages/75/e0/0e8214df4d949782c5f6a9b5f2b451286b4ad2b054a68a902b161558261d/asynckivy-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cd93151f1f99fe701e80353488c09adb25c91622029753fab7c9e562b6d0fcb",
          "md5": "fbe3a544c68de1e9d678372d61d06662",
          "sha256": "50a1e76f6d3fbdb98bf714c011cfc0d0bef3df3e840449d3adac8d5189274dba"
        },
        "downloads": -1,
        "filename": "asynckivy-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbe3a544c68de1e9d678372d61d06662",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 12677,
        "upload_time": "2021-01-23T04:36:12",
        "upload_time_iso_8601": "2021-01-23T04:36:12.885214Z",
        "url": "https://files.pythonhosted.org/packages/6c/d9/3151f1f99fe701e80353488c09adb25c91622029753fab7c9e562b6d0fcb/asynckivy-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "090bf07b1073645f2c4d3a741554a84d70db31431f2ba521554558abe1679a94",
          "md5": "117484840bb0f6be5fc79486d348f435",
          "sha256": "8fcc405ea9ff3983b864f7f1e3306c37d6d09c7ce298058011d42da6c95e0976"
        },
        "downloads": -1,
        "filename": "asynckivy-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "117484840bb0f6be5fc79486d348f435",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 12176,
        "upload_time": "2021-01-23T04:36:14",
        "upload_time_iso_8601": "2021-01-23T04:36:14.304509Z",
        "url": "https://files.pythonhosted.org/packages/09/0b/f07b1073645f2c4d3a741554a84d70db31431f2ba521554558abe1679a94/asynckivy-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97f58b834aa206e8db2517e6fb74234e25a0208b793c4c0dc9b49e66fc4aa54d",
          "md5": "9cbceacc4cfcf4633d2c2e91e4692472",
          "sha256": "a783bed0fab1bc23b65dad9c6b75fdf4a5aa52f360b367875ba03804a730fd72"
        },
        "downloads": -1,
        "filename": "asynckivy-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9cbceacc4cfcf4633d2c2e91e4692472",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 12768,
        "upload_time": "2021-01-26T04:49:31",
        "upload_time_iso_8601": "2021-01-26T04:49:31.656729Z",
        "url": "https://files.pythonhosted.org/packages/97/f5/8b834aa206e8db2517e6fb74234e25a0208b793c4c0dc9b49e66fc4aa54d/asynckivy-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58027a39314b248c6a24803b8d07055e2303c00815a632789b9f56574ce5e1bc",
          "md5": "595a1c126c0e2299a07c7c5a0d60a079",
          "sha256": "c3d26591020dd0cbfbec3db70958116d88364f8fa3f2865b8a5c4ed1813108f4"
        },
        "downloads": -1,
        "filename": "asynckivy-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "595a1c126c0e2299a07c7c5a0d60a079",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 12226,
        "upload_time": "2021-01-26T04:49:33",
        "upload_time_iso_8601": "2021-01-26T04:49:33.328942Z",
        "url": "https://files.pythonhosted.org/packages/58/02/7a39314b248c6a24803b8d07055e2303c00815a632789b9f56574ce5e1bc/asynckivy-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6adbe612f813f9a4a452827531f6899ce84d16d330613fcff9fc6b3c80b4cf90",
          "md5": "ff6dcbfc1be796b4c9e99f9d73b61842",
          "sha256": "5b6ba040f061f6de514e84478e04c2dd44493c003db024680d10a861448f4100"
        },
        "downloads": -1,
        "filename": "asynckivy-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff6dcbfc1be796b4c9e99f9d73b61842",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 12501,
        "upload_time": "2021-05-08T13:47:40",
        "upload_time_iso_8601": "2021-05-08T13:47:40.407507Z",
        "url": "https://files.pythonhosted.org/packages/6a/db/e612f813f9a4a452827531f6899ce84d16d330613fcff9fc6b3c80b4cf90/asynckivy-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11c76a13e2e6e58a4eaaa8affc164ae0b16ec269e887d3311acb7ab2e33bb185",
          "md5": "f9e6a628199b93969b424e4807f4c059",
          "sha256": "d9e43339fa5637f9cbf143f7a7e92771faa8f73d5b1142f63214493be7077761"
        },
        "downloads": -1,
        "filename": "asynckivy-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f9e6a628199b93969b424e4807f4c059",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 13324,
        "upload_time": "2021-05-08T13:47:42",
        "upload_time_iso_8601": "2021-05-08T13:47:42.455741Z",
        "url": "https://files.pythonhosted.org/packages/11/c7/6a13e2e6e58a4eaaa8affc164ae0b16ec269e887d3311acb7ab2e33bb185/asynckivy-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3b510fc0c2d7027ef27a03279cea26cb579d861130daa763507755541b1d1d0",
          "md5": "2522f4be8ca55dffc28c18714e337761",
          "sha256": "2c0ef5fd90b71a476b0d2d38c1f8840b3d390cfe1aa817ea9d454c1498209285"
        },
        "downloads": -1,
        "filename": "asynckivy-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2522f4be8ca55dffc28c18714e337761",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 12507,
        "upload_time": "2021-05-17T17:47:15",
        "upload_time_iso_8601": "2021-05-17T17:47:15.715833Z",
        "url": "https://files.pythonhosted.org/packages/a3/b5/10fc0c2d7027ef27a03279cea26cb579d861130daa763507755541b1d1d0/asynckivy-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8accd7838e861e3185c608b3f1af7f07f9008fa7d5e8ae73e94637db9d133fc2",
          "md5": "c26228825e47bbc135ac2e3d4698c457",
          "sha256": "efebe0c29ff2a6cfccceace1495e9a85fa7f86369dd59b956118a67c9682c975"
        },
        "downloads": -1,
        "filename": "asynckivy-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c26228825e47bbc135ac2e3d4698c457",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 13301,
        "upload_time": "2021-05-17T17:47:18",
        "upload_time_iso_8601": "2021-05-17T17:47:18.260717Z",
        "url": "https://files.pythonhosted.org/packages/8a/cc/d7838e861e3185c608b3f1af7f07f9008fa7d5e8ae73e94637db9d133fc2/asynckivy-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bb86ac6fff2e6f65fc5835042d369db7fb3d71af8a6c55df4acdaa3cb0ad8d7",
          "md5": "072d118e9b2dfe1de6452ff24cc357c0",
          "sha256": "c20895ce1e901b0602a8873096a5bda4d74b11d31dd7f8dab41a5def0a0989e8"
        },
        "downloads": -1,
        "filename": "asynckivy-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "072d118e9b2dfe1de6452ff24cc357c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 12750,
        "upload_time": "2021-08-28T05:20:38",
        "upload_time_iso_8601": "2021-08-28T05:20:38.922677Z",
        "url": "https://files.pythonhosted.org/packages/2b/b8/6ac6fff2e6f65fc5835042d369db7fb3d71af8a6c55df4acdaa3cb0ad8d7/asynckivy-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6f84881d460ad94d709158b276fc7b190bfcf2783fd79e2cc41b2b4752af8d2",
          "md5": "da08536720d5276450386368a9a8a1fd",
          "sha256": "141cd41682fb8891fac5c59f77c5c3729293ebc4dcf29f2b5383f83d4997236b"
        },
        "downloads": -1,
        "filename": "asynckivy-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "da08536720d5276450386368a9a8a1fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 13762,
        "upload_time": "2021-08-28T05:20:40",
        "upload_time_iso_8601": "2021-08-28T05:20:40.595969Z",
        "url": "https://files.pythonhosted.org/packages/e6/f8/4881d460ad94d709158b276fc7b190bfcf2783fd79e2cc41b2b4752af8d2/asynckivy-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36dde98d83cdc814f5d452474e4472f7cb195720de6c8812f059cc51b1f25b7c",
          "md5": "abd6553f14f7d4207de2bae0305ed857",
          "sha256": "c09b2096bf91446ced0ab086778edcca95f89982da82721ab80c9b3e1ceafd88"
        },
        "downloads": -1,
        "filename": "asynckivy-0.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "abd6553f14f7d4207de2bae0305ed857",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 18220,
        "upload_time": "2022-03-13T16:50:00",
        "upload_time_iso_8601": "2022-03-13T16:50:00.111675Z",
        "url": "https://files.pythonhosted.org/packages/36/dd/e98d83cdc814f5d452474e4472f7cb195720de6c8812f059cc51b1f25b7c/asynckivy-0.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54f132ec86e666fa57dfb73fa9115059e20b5a88b36efa2e7261ce01b2aa6bf0",
          "md5": "d830d45aceaebb8d47624b5fbbeef795",
          "sha256": "d1b22dc1dbd21f4f2929b812d0ceab1e305851b5819deb960f73588f20db7247"
        },
        "downloads": -1,
        "filename": "asynckivy-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d830d45aceaebb8d47624b5fbbeef795",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 19336,
        "upload_time": "2022-03-13T16:50:01",
        "upload_time_iso_8601": "2022-03-13T16:50:01.684890Z",
        "url": "https://files.pythonhosted.org/packages/54/f1/32ec86e666fa57dfb73fa9115059e20b5a88b36efa2e7261ce01b2aa6bf0/asynckivy-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c8e44ad60afd6c4541c681623e2a0677a7bf09a8d7bdaab42e91eef0e138b17",
          "md5": "88d67bc2be3f5872985033a2e635b640",
          "sha256": "6b10d650274bd487b9c0b28b08b80a26b9e5737ab9220065e9c9f8546c9f0dba"
        },
        "downloads": -1,
        "filename": "asynckivy-0.5.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "88d67bc2be3f5872985033a2e635b640",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 22927,
        "upload_time": "2022-08-20T01:58:41",
        "upload_time_iso_8601": "2022-08-20T01:58:41.566055Z",
        "url": "https://files.pythonhosted.org/packages/6c/8e/44ad60afd6c4541c681623e2a0677a7bf09a8d7bdaab42e91eef0e138b17/asynckivy-0.5.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b17d7d2a4a6dea030bc218e7793cadeeb160aefef74a8de60f092097c14e5fb",
          "md5": "5c367b08b970a2b6a407a972bef2ef91",
          "sha256": "55e9d3784867fe0b2929015d7c1a7bb9b7f48929db83e4c6d09f9b599dfa5a17"
        },
        "downloads": -1,
        "filename": "asynckivy-0.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5c367b08b970a2b6a407a972bef2ef91",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 23633,
        "upload_time": "2022-08-20T01:58:43",
        "upload_time_iso_8601": "2022-08-20T01:58:43.630826Z",
        "url": "https://files.pythonhosted.org/packages/1b/17/d7d2a4a6dea030bc218e7793cadeeb160aefef74a8de60f092097c14e5fb/asynckivy-0.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eee382375aa6e7f9486aa5cfd28ef7445369da020f9d93099abc6c6530ec64d6",
          "md5": "3cd0ba1d27da7224bffa08f9e79850f3",
          "sha256": "a75d6b39b8e53d954be7dcf94a429fc5ef82a6ede194ed0a8625aa7ad331055f"
        },
        "downloads": -1,
        "filename": "asynckivy-0.6.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3cd0ba1d27da7224bffa08f9e79850f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 21632,
        "upload_time": "2022-09-23T01:38:17",
        "upload_time_iso_8601": "2022-09-23T01:38:17.487714Z",
        "url": "https://files.pythonhosted.org/packages/ee/e3/82375aa6e7f9486aa5cfd28ef7445369da020f9d93099abc6c6530ec64d6/asynckivy-0.6.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95ebd3f1d802b4752ec366d395ff978b37607772dadb5db67458b6bdc73f8814",
          "md5": "7d432a83a1636dddfea2291f12ed9013",
          "sha256": "e3765b1bab1c6462012d96089cd6507533872df21c0bb56c4b52ac24ac2096a0"
        },
        "downloads": -1,
        "filename": "asynckivy-0.6.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "7d432a83a1636dddfea2291f12ed9013",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 22825,
        "upload_time": "2022-09-23T01:38:20",
        "upload_time_iso_8601": "2022-09-23T01:38:20.420983Z",
        "url": "https://files.pythonhosted.org/packages/95/eb/d3f1d802b4752ec366d395ff978b37607772dadb5db67458b6bdc73f8814/asynckivy-0.6.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c8e44ad60afd6c4541c681623e2a0677a7bf09a8d7bdaab42e91eef0e138b17",
        "md5": "88d67bc2be3f5872985033a2e635b640",
        "sha256": "6b10d650274bd487b9c0b28b08b80a26b9e5737ab9220065e9c9f8546c9f0dba"
      },
      "downloads": -1,
      "filename": "asynckivy-0.5.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "88d67bc2be3f5872985033a2e635b640",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 22927,
      "upload_time": "2022-08-20T01:58:41",
      "upload_time_iso_8601": "2022-08-20T01:58:41.566055Z",
      "url": "https://files.pythonhosted.org/packages/6c/8e/44ad60afd6c4541c681623e2a0677a7bf09a8d7bdaab42e91eef0e138b17/asynckivy-0.5.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b17d7d2a4a6dea030bc218e7793cadeeb160aefef74a8de60f092097c14e5fb",
        "md5": "5c367b08b970a2b6a407a972bef2ef91",
        "sha256": "55e9d3784867fe0b2929015d7c1a7bb9b7f48929db83e4c6d09f9b599dfa5a17"
      },
      "downloads": -1,
      "filename": "asynckivy-0.5.4.tar.gz",
      "has_sig": false,
      "md5_digest": "5c367b08b970a2b6a407a972bef2ef91",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 23633,
      "upload_time": "2022-08-20T01:58:43",
      "upload_time_iso_8601": "2022-08-20T01:58:43.630826Z",
      "url": "https://files.pythonhosted.org/packages/1b/17/d7d2a4a6dea030bc218e7793cadeeb160aefef74a8de60f092097c14e5fb/asynckivy-0.5.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}