{
  "info": {
    "author": "Antonio Suárez Jiménez",
    "author_email": "pherkad13@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.0",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "EasyEntry\r\n=========\r\n\r\nOverview\r\n--------\r\n\r\n**EasyEntry** enter data into a program and easily check if they are valid.\r\n\r\nUses dictionaries to define the properties of the data:\r\n\r\n- *type*: str, int, float, date, time, email, passwd and menu.\r\n- *default*: sets a default by pressing the return key\r\n- *options*: defines a list of allowed values: ['a', 'b',...]\r\n- *minmax*: sets minimum and maximum limits for a value: [0, 100]\r\n- *required*: defines the obligation or not to introduce a value: True or False\r\n- and others (See the property list).\r\n\r\nExample::\r\n\r\n    import easyentry as ee\r\n\r\n    ee.global_required = True\r\n\r\n    person = {}\r\n    person['name'] = {'type':'str'}\r\n    person['city'] = {'type':'str', 'default':'Seville'}\r\n    person['age']  = {'type':'int', 'minmax': [0,100]}\r\n    person['height']  = {'type':'float'}\r\n    person['bicycle']  = {'type':'str', 'options': ['y','n']}\r\n    person['datetrip'] = {'type':'date', 'default': 'now'}\r\n    person['email'] = {'type':'email', 'required': False}\r\n\r\n    name = ee.entry('What is your name?', (person, 'name'))\r\n    city = ee.entry('What city you live?', (person, 'city'))\r\n    age = ee.entry('How old are you?', (person, 'age'))\r\n    height = ee.entry('Height?', (person, 'height'))\r\n    bicycle = ee.entry('Do you have a bicycle?', (person, 'bicycle'))\r\n    datetrip = ee.entry('Date of trip?', (person, 'datetrip'))\r\n    email = ee.entry('Your email address', (person, 'email'))\r\n\r\nCreates a options menu\r\n----------------------\r\n\r\nTo build a menu::\r\n\r\n    person['info'] = {'type':'menu', 'title':'Select an option', 'options':['phone','mail','none'], 'rindex':True}\r\n    info = ee.entry('To receive information by...', (person, 'info'))\r\n\r\nOptions:\r\n\r\n- *rindex*: With True returns the number of the selected option\r\n- *sorted*: sort the list of options (True/False)\r\n\r\nOutput::\r\n\r\n    To receive information by...\r\n    (1) phone\r\n    (2) mail\r\n    (3) none\r\n    Select an option [3]:\r\n\r\nPassword\r\n--------\r\n\r\nEnter a password::\r\n\r\n    person['passwd'] = {'type':'passwd'}\r\n\r\n    passwd = ee.entry('Enter password', (person, 'passwd'))\r\n    repeat = ee.entry('Repeat password', (person, 'passwd'))\r\n\r\n    if passwd == repeat:\r\n        print(passwd)\r\n\r\nProperty list\r\n-------------\r\n\r\nProperties of the data types available:\r\n\r\n- *str*: required, options or minmax and default\r\n- *int*: required, options or minmax and default\r\n- *float*: required, options or minmax and default\r\n- *date*: required, options or mixmax and default:date or now\r\n- *time*: required, options or mixmax and default:time or now\r\n- *password*: required\r\n- *email*: required\r\n- *menu*: required, title, options, default, sorted and rindex\r\n\r\nConstants\r\n---------\r\n\r\nThe constants are used to set the values that define the general behavior of EasyEntry::\r\n\r\n    # Message to be displayed when data is not valid:\r\n    # - You can type the message in your language\r\n    # - If the value is omitted, the default is the current (in English)\r\n\r\n    ee.error_message = 'Invalid input, please try again'\r\n\r\n    # Set format 'date' and 'time':\r\n    # - Date format: '%Y-%m-%d' -> YYYY-MM-DD (default)\r\n    # - Hour format: '%H:%M:%S' -> HH:MM:SS   (default)\r\n\r\n    ee.date_format = '%d-%m-%Y'\r\n    ee.time_format = '%H:%M'\r\n\r\n    # Set the type of numerical data (int and float):\r\n    # - True and value = '' : var int   -> return 0\r\n    #                         var float -> return 0.0\r\n    # - False (default) and value = '': return ''\r\n\r\n    ee.strict_return = False\r\n\r\n    # Establish whether it is mandatory to enter a valid value or\r\n    # an empty entry (press return) is allowed\r\n    # - True  -> You must enter a valid value in all fields\r\n    # - False -> The field can be empty (default)\r\n    # The value of the 'required' property of a field overrides\r\n    # the global value\r\n\r\n    ee.global_required = True",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.python.org/pypi/easyentry",
    "keywords": "easyentry data check entry validation input",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easyentry",
    "package_url": "https://pypi.org/project/easyentry/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/easyentry/",
    "project_urls": {
      "Homepage": "https://pypi.python.org/pypi/easyentry"
    },
    "release_url": "https://pypi.org/project/easyentry/0.0.9/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Easy data entry and validation.",
    "version": "0.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1731317,
  "releases": {
    "0.0.8": [],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44c1e90b9a7b70f7918b95e0137f4686fb5804420e27c0c2ebdc995766c86a4a",
          "md5": "1803a9f60d41b6c733eaab9df683df04",
          "sha256": "239aaaa0b6f68b200bf5398ff9234175d9c533873c94f2195a5977fd6ff9d137"
        },
        "downloads": -1,
        "filename": "easyentry-0.0.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1803a9f60d41b6c733eaab9df683df04",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9465,
        "upload_time": "2015-09-10T14:53:00",
        "upload_time_iso_8601": "2015-09-10T14:53:00.800572Z",
        "url": "https://files.pythonhosted.org/packages/44/c1/e90b9a7b70f7918b95e0137f4686fb5804420e27c0c2ebdc995766c86a4a/easyentry-0.0.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea3b97276f0628100aa27569c30bd09c1fec0785a5713e151aa2b45fc5647f99",
          "md5": "2c34b52b446b60c2217bdcc77b67caa5",
          "sha256": "39d08b8ad490a6a750661d0a39b4bef88c85313ae97640db3ce3fef579fb284d"
        },
        "downloads": -1,
        "filename": "easyentry-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "2c34b52b446b60c2217bdcc77b67caa5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19551,
        "upload_time": "2015-09-10T14:53:08",
        "upload_time_iso_8601": "2015-09-10T14:53:08.349808Z",
        "url": "https://files.pythonhosted.org/packages/ea/3b/97276f0628100aa27569c30bd09c1fec0785a5713e151aa2b45fc5647f99/easyentry-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44c1e90b9a7b70f7918b95e0137f4686fb5804420e27c0c2ebdc995766c86a4a",
        "md5": "1803a9f60d41b6c733eaab9df683df04",
        "sha256": "239aaaa0b6f68b200bf5398ff9234175d9c533873c94f2195a5977fd6ff9d137"
      },
      "downloads": -1,
      "filename": "easyentry-0.0.9-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1803a9f60d41b6c733eaab9df683df04",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 9465,
      "upload_time": "2015-09-10T14:53:00",
      "upload_time_iso_8601": "2015-09-10T14:53:00.800572Z",
      "url": "https://files.pythonhosted.org/packages/44/c1/e90b9a7b70f7918b95e0137f4686fb5804420e27c0c2ebdc995766c86a4a/easyentry-0.0.9-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea3b97276f0628100aa27569c30bd09c1fec0785a5713e151aa2b45fc5647f99",
        "md5": "2c34b52b446b60c2217bdcc77b67caa5",
        "sha256": "39d08b8ad490a6a750661d0a39b4bef88c85313ae97640db3ce3fef579fb284d"
      },
      "downloads": -1,
      "filename": "easyentry-0.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "2c34b52b446b60c2217bdcc77b67caa5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19551,
      "upload_time": "2015-09-10T14:53:08",
      "upload_time_iso_8601": "2015-09-10T14:53:08.349808Z",
      "url": "https://files.pythonhosted.org/packages/ea/3b/97276f0628100aa27569c30bd09c1fec0785a5713e151aa2b45fc5647f99/easyentry-0.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}