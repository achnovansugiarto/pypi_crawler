{
  "info": {
    "author": "limjcst",
    "author_email": "limjcst@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# CIRCA\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Actions](https://github.com/NetManAIOps/CIRCA/actions/workflows/actions.yml/badge.svg)](https://github.com/NetManAIOps/CIRCA/actions/workflows/actions.yml)\n\nThis project contains the code of baselines and simulation data generation for the KDD '22 paper, [Causal Inference-Based Root Cause Analysis for Online Service Systems with Intervention Recognition](https://doi.org/10.1145/3534678.3539041).\nExperiment results can be found in [figshare](https://doi.org/10.6084/m9.figshare.19085855), where the code is corresponding to the commit 1522ddd7efd16db55e9f351fd70324501ce9134e.\n\n## Usage\n\nThis repository contains a [Dockerfile](Dockerfile) to describe the necessary steps to setup the environment.\nTo install this project as a package with `pip`, R package [pcalg](build/requirements.R) has to be installed manually.\n\n### Simulation Data Generation\n\n```bash\npython -m circa.experiment generate\n```\n\n### Simulation Study\n\n```bash\n# Explore parameter combinations\npython -m circa.experiment --max-workers 16 --model-params params-sim-tune.json tune\n# Explore all the datasets with pre-defined parameters\npython -m circa.experiment --model-params params-sim-run.json run\n# Robustness evaluation\npython -m circa.experiment robustness\n```\n\nExecute `Rscript img/draw.sim.R` to produce summaries under `img/output`.\n- `params-sim-run.json` is created according to `img/output/best-sim-tuning.tex`\n- To create parameter template, execute the following command\n```bash\npython -m circa.experiment params > default.json\n```\n\n### Toolbox\n\nCIRCA is designed as a toolbox with a set of interfaces.\n\n#### Basic\n\nEach root cause analysis algorithm is separated into two steps, namely *graph construction* and *scoring*.\n\nThe graph construction step should implement `circa.graph.GraphFactory`.\n`GraphFactory.create` takes data for analysis (an instance of `circa.model.case.CaseData`) and timestamp (`float`) when the algorithm is triggered.\nThe output is a graph (an instance of `circa.model.graph.Graph`) for the fault under analysis.\n\nThe scoring step contains a sequence of scorers (instances of `circa.alg.base.Scorer`).\n`Scorer.score` of each scorer needs the following information:\n\n- The graph produced in the graph construction step,\n- data for analysis (an instance of `circa.model.case.CaseData`),\n- timestamp (`float`) when the algorithm is triggered, and\n- (optional) output of the previous scorer.\n\n`Scorer.score` will generate a mapping from a node in the input graph to its score (`circa.alg.base.Score`).\nThe design of the scorer sequence enables reusing scorers, i.e., two algorithms can share one scorer as a common step.\nNote that a scorer may drop some nodes in the input graph, performing as a filter.\n\n`circa.alg.common` provides some common utilizations.\nFor example, `circa.alg.common.Model` combines a graph factory and a sequence of scorers as a whole with optional names.\n`Model.analyze` will forward data and timestamp for them and produce an ordered sequence of scores.\n`circa.alg.common.evaluate` will further evaluate a model with a set of cases (instances of `circa.model.case.Case`, each of which combines data and the corresponding answers).\n\n```python\n\"\"\"\nAn example showing the basic usage of CIRCA\n\"\"\"\nfrom collections import defaultdict\nfrom typing import Dict\nfrom typing import Sequence\nfrom typing import Tuple\n\nimport networkx as nx\nfrom sklearn.linear_model import LinearRegression\n\nfrom circa.alg.ci import RHTScorer\nfrom circa.alg.ci.anm import ANMRegressor\nfrom circa.alg.common import Model\nfrom circa.graph.common import StaticGraphFactory\nfrom circa.model.case import CaseData\nfrom circa.model.data_loader import MemoryDataLoader\nfrom circa.model.graph import MemoryGraph\nfrom circa.model.graph import Node\n\n\nlatency = Node(\"DB\", \"Latency\")\ntraffic = Node(\"DB\", \"Traffic\")\nsaturation = Node(\"DB\", \"Saturation\")\n# circa.model.graph.MemoryGraph is derived from circa.model.graph.Graph\ngraph = MemoryGraph(\n    nx.DiGraph(\n        {\n            traffic: [latency, saturation],\n            saturation: [latency],\n        }\n    )\n)\n\n# 1. Assemble an algorithm\n# circa.graph.common.StaticGraphFactory is derived from circa.graph.GraphFactory\ngraph_factory = StaticGraphFactory(graph)\nscorers = [\n    # circa.alg.ci.RHTScorer is derived from circa.alg.common.DecomposableScorer,\n    # which is further derived from circa.alg.base.Scorer\n    RHTScorer(regressor=ANMRegressor(regressor=LinearRegression())),\n]\nmodel = Model(graph_factory=graph_factory, scorers=scorers)\n\n# 2. Prepare data\nmock_data = {\n    latency: (10, 12, 11, 9, 100, 90),\n    traffic: (100, 110, 90, 105, 200, 150),\n    saturation: (5, 4, 5, 6, 90, 85),\n}\nmock_data_with_time: Dict[str, Dict[str, Sequence[Tuple[float, float]]]] = defaultdict(\n    dict\n)\nfor node, values in mock_data.items():\n    mock_data_with_time[node.entity][node.metric] = [\n        (index * 60, value) for index, value in enumerate(values)\n    ]\ndata = CaseData(\n    # circa.model.data_loader.MemoryDataLoader is derived from\n    # circa.model.data_loader.DataLoader, which manages data with configurations\n    data_loader=MemoryDataLoader(mock_data_with_time),\n    sli=latency,\n    detect_time=240,\n    lookup_window=4,\n    detect_window=2,\n)\n\n# 3. Conduct root cause analysis one minute after a fault is detected\nprint(model.analyze(data=data, current=data.detect_time + 60))\n```\n\n#### Advanced\n\n`circa.experiment` supports comparison among models and parameter exploration, as mentioned for the simulation study.\nTo conduct experiments with your own dataset, start from the following code named `example.py`.\nExecute `python -m example -s run-new --output-dir output/test --report-dir report/test` and find the report in `report/test/report.csv`.\nFind more command line parameters with `python -m example -h`.\n\n```python\n\"\"\"\nAn example showing the advanced usage of CIRCA\n\"\"\"\nimport argparse\nimport logging\nimport os\nfrom typing import List\n\nfrom circa.experiment import comparison\nfrom circa.experiment.comparison.models import get_models\nfrom circa.experiment.__main__ import get_parser\nfrom circa.graph.structural import StructuralGraph\nfrom circa.model.case import Case\nfrom circa.utils import silence_third_party\n\n\nBASE_DIR = os.path.abspath(os.path.dirname(__file__))\n\n\ndef run(args: argparse.Namespace):\n    \"\"\"\n    Evaluate multiple models\n    \"\"\"\n    data_dir: str = args.data_dir\n    report_dir: str = args.report_dir\n    os.makedirs(report_dir, exist_ok=True)\n\n    logger = logging.getLogger(__package__)\n\n    logger.info(\"Loading from %s\", data_dir)\n    # TODO: Prepare your data with answers here\n    cases: List[Case] = []\n\n    models, graph_factories = get_models(\n        # TODO: Configure your own structural graph here\n        # structural_graph_params=dict(\n        #     structural_graph=StructuralGraph(filename=\"tests/alg/sgraph/index.yml\"),\n        # ),\n        params=args.model_params,\n        seed=args.seed,\n        cuda=args.cuda,\n        max_workers=1,\n    )\n\n    logger.info(\"Start running on %s with #models=%d\", data_dir, len(models))\n    comparison.run(\n        models=models,\n        cases=cases,\n        graph_factories=graph_factories,\n        output_dir=args.output_dir,\n        report_filename=os.path.join(report_dir, \"report.csv\"),\n        max_workers=1 if args.cuda else args.max_workers,\n    )\n\n\ndef wrap_parsers(subparsers: argparse._SubParsersAction):\n    \"\"\"\n    Add argparser for your own experiments\n    \"\"\"\n    parser_params = dict(formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n\n    parser = argparse.ArgumentParser(add_help=False, **parser_params)\n    parser.add_argument(\n        \"--data-dir\",\n        type=str,\n        default=os.path.join(BASE_DIR, \"data\"),\n        help=\"Data directory\",\n    )\n\n    parser_run: argparse.ArgumentParser = subparsers.add_parser(\n        \"run-new\",\n        parents=[parser],\n        help=\"Explore all combinations of model parameters\",\n        **parser_params,\n    )\n    parser_run.add_argument(\n        \"--output-dir\", type=str, default=\"output\", help=\"Output directory\"\n    )\n    parser_run.add_argument(\n        \"--report-dir\", type=str, default=\"report\", help=\"Report directory\"\n    )\n    parser_run.set_defaults(func=run)\n\n\ndef _main():\n    parser, subparsers = get_parser()\n    wrap_parsers(subparsers)\n    parameters = parser.parse_args()\n\n    if parameters.S:\n        logging.basicConfig(level=logging.ERROR)\n    elif parameters.V:\n        logging.basicConfig(level=logging.DEBUG)\n    else:\n        logging.basicConfig(level=logging.INFO)\n    if not parameters.V:\n        silence_third_party()\n\n    if \"func\" in parameters:\n        parameters.func(parameters)\n    else:\n        parser.print_usage()\n\n\nif __name__ == \"__main__\":\n    _main()\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NetManAIOps/CIRCA",
    "keywords": "",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "circa-clue",
    "package_url": "https://pypi.org/project/circa-clue/",
    "platform": null,
    "project_url": "https://pypi.org/project/circa-clue/",
    "project_urls": {
      "Homepage": "https://github.com/NetManAIOps/CIRCA"
    },
    "release_url": "https://pypi.org/project/circa-clue/0.1.1/",
    "requires_dist": [
      "ads-evt",
      "bayesian-changepoint-detection",
      "dataclasses",
      "networkx",
      "numpy",
      "pandas",
      "pingouin",
      "pytorch-lightning",
      "PyYAML",
      "rpy2",
      "scipy",
      "scikit-learn",
      "tigramite",
      "torch"
    ],
    "requires_python": "",
    "summary": "Causal Inference-based Root Cause Analysis",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15191193,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2e5fd6d28356aabd1f56900379faefa9ca8649e4bc474b1a5c477b1ce4a1d46",
          "md5": "02cbfae4a5304824ac6f449ddb411368",
          "sha256": "09d8817e68b3a53394734b64caec6f71b0f261c5e82ecb63bfc62a110262ad04"
        },
        "downloads": -1,
        "filename": "circa_clue-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "02cbfae4a5304824ac6f449ddb411368",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 55705,
        "upload_time": "2022-06-01T10:36:24",
        "upload_time_iso_8601": "2022-06-01T10:36:24.790861Z",
        "url": "https://files.pythonhosted.org/packages/a2/e5/fd6d28356aabd1f56900379faefa9ca8649e4bc474b1a5c477b1ce4a1d46/circa_clue-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "549f0262e4b07bfbe21e20992d0cc39e006302a4d336673d34dce557935d3f85",
          "md5": "b04e5743363d14b7030f91a2dece0bf8",
          "sha256": "243305584a3b63fffabb1333f4bf0b2e91b3b2f6fffbdd99631e3a7603fb8acb"
        },
        "downloads": -1,
        "filename": "circa-clue-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b04e5743363d14b7030f91a2dece0bf8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43708,
        "upload_time": "2022-06-01T10:36:26",
        "upload_time_iso_8601": "2022-06-01T10:36:26.740279Z",
        "url": "https://files.pythonhosted.org/packages/54/9f/0262e4b07bfbe21e20992d0cc39e006302a4d336673d34dce557935d3f85/circa-clue-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "152867f71c67dbba313a219bef0185ea9d8268b454808783b0c52c378be30e14",
          "md5": "6798ab6d0f80f219ba55ea18028aef37",
          "sha256": "54fa7489ede679587592cb56e7598937060d7c5da5b074402ccf06fa2eccf0dc"
        },
        "downloads": -1,
        "filename": "circa_clue-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6798ab6d0f80f219ba55ea18028aef37",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 59172,
        "upload_time": "2022-07-28T16:36:10",
        "upload_time_iso_8601": "2022-07-28T16:36:10.185905Z",
        "url": "https://files.pythonhosted.org/packages/15/28/67f71c67dbba313a219bef0185ea9d8268b454808783b0c52c378be30e14/circa_clue-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a04e71cf9d72b8515503d57dc31d137d91a0a97b08861e266b31653faf6cdfca",
          "md5": "33ea9402834f5abf83a939c3b9052206",
          "sha256": "92f9900bcda36f1fcbb77d530b6fd1f991726e80204b23d30cf59bf671b21e58"
        },
        "downloads": -1,
        "filename": "circa-clue-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "33ea9402834f5abf83a939c3b9052206",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49271,
        "upload_time": "2022-07-28T16:36:20",
        "upload_time_iso_8601": "2022-07-28T16:36:20.680515Z",
        "url": "https://files.pythonhosted.org/packages/a0/4e/71cf9d72b8515503d57dc31d137d91a0a97b08861e266b31653faf6cdfca/circa-clue-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33a56b866a82d3838737a0ef89104e0afc24130966e0ab53465d694d98269cff",
          "md5": "b52e5ff0836ac30085e91febee87219f",
          "sha256": "9a89a8fdeda6095869fefcde918f16a3a9aa0bc7b6a4a9961a734a8f55551398"
        },
        "downloads": -1,
        "filename": "circa_clue-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b52e5ff0836ac30085e91febee87219f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 59809,
        "upload_time": "2022-09-23T05:21:18",
        "upload_time_iso_8601": "2022-09-23T05:21:18.273427Z",
        "url": "https://files.pythonhosted.org/packages/33/a5/6b866a82d3838737a0ef89104e0afc24130966e0ab53465d694d98269cff/circa_clue-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8f14c8276b8c69339d5e10362fc949512304dfd3facb79168190a4868c22f38",
          "md5": "6d1af80631f98563f2e3fc77c49d94f0",
          "sha256": "98ebc4e62bb8b518480bd8920e0dec01c9ddd4bea71bdddc787cd01eac4f726b"
        },
        "downloads": -1,
        "filename": "circa-clue-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6d1af80631f98563f2e3fc77c49d94f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49804,
        "upload_time": "2022-09-23T05:21:21",
        "upload_time_iso_8601": "2022-09-23T05:21:21.379305Z",
        "url": "https://files.pythonhosted.org/packages/b8/f1/4c8276b8c69339d5e10362fc949512304dfd3facb79168190a4868c22f38/circa-clue-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bae4638866ca38893647d528d571f5edbc96fa90ffed07fefd55fed45b8e9a5",
          "md5": "8183c615b6840141e5cbafe3121f21fb",
          "sha256": "626d4144dce2b7dcba09615afaa96ee11a8d7854c46ed29823ad91aa30fc8f6e"
        },
        "downloads": -1,
        "filename": "circa_clue-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8183c615b6840141e5cbafe3121f21fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 59866,
        "upload_time": "2022-09-23T14:08:08",
        "upload_time_iso_8601": "2022-09-23T14:08:08.323754Z",
        "url": "https://files.pythonhosted.org/packages/1b/ae/4638866ca38893647d528d571f5edbc96fa90ffed07fefd55fed45b8e9a5/circa_clue-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f50236c2144868c08de83536d7fec0c518edde21fbcec45a565cfff1ac21e7b",
          "md5": "805fb63369d243374cd70b5af88fc8e3",
          "sha256": "9b623323f26235fca70f0c8c281c15f30a5d9f940eea0aaf3d8d37c186f6e311"
        },
        "downloads": -1,
        "filename": "circa-clue-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "805fb63369d243374cd70b5af88fc8e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49899,
        "upload_time": "2022-09-23T14:08:13",
        "upload_time_iso_8601": "2022-09-23T14:08:13.473078Z",
        "url": "https://files.pythonhosted.org/packages/4f/50/236c2144868c08de83536d7fec0c518edde21fbcec45a565cfff1ac21e7b/circa-clue-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1bae4638866ca38893647d528d571f5edbc96fa90ffed07fefd55fed45b8e9a5",
        "md5": "8183c615b6840141e5cbafe3121f21fb",
        "sha256": "626d4144dce2b7dcba09615afaa96ee11a8d7854c46ed29823ad91aa30fc8f6e"
      },
      "downloads": -1,
      "filename": "circa_clue-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8183c615b6840141e5cbafe3121f21fb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 59866,
      "upload_time": "2022-09-23T14:08:08",
      "upload_time_iso_8601": "2022-09-23T14:08:08.323754Z",
      "url": "https://files.pythonhosted.org/packages/1b/ae/4638866ca38893647d528d571f5edbc96fa90ffed07fefd55fed45b8e9a5/circa_clue-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4f50236c2144868c08de83536d7fec0c518edde21fbcec45a565cfff1ac21e7b",
        "md5": "805fb63369d243374cd70b5af88fc8e3",
        "sha256": "9b623323f26235fca70f0c8c281c15f30a5d9f940eea0aaf3d8d37c186f6e311"
      },
      "downloads": -1,
      "filename": "circa-clue-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "805fb63369d243374cd70b5af88fc8e3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 49899,
      "upload_time": "2022-09-23T14:08:13",
      "upload_time_iso_8601": "2022-09-23T14:08:13.473078Z",
      "url": "https://files.pythonhosted.org/packages/4f/50/236c2144868c08de83536d7fec0c518edde21fbcec45a565cfff1ac21e7b/circa-clue-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}