{
  "info": {
    "author": "Vlad Emelianov",
    "author_email": "vlad.emelianov.nz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Typing :: Typed"
    ],
    "description": "<a id=\"mypy-boto3-internetmonitor\"></a>\n\n# mypy-boto3-internetmonitor\n\n[![PyPI - mypy-boto3-internetmonitor](https://img.shields.io/pypi/v/mypy-boto3-internetmonitor.svg?color=blue)](https://pypi.org/project/mypy-boto3-internetmonitor)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-internetmonitor.svg?color=blue)](https://pypi.org/project/mypy-boto3-internetmonitor)\n[![Docs](https://img.shields.io/readthedocs/boto3-stubs.svg?color=blue)](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_internetmonitor/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/mypy-boto3-internetmonitor?color=blue)](https://pypistats.org/packages/mypy-boto3-internetmonitor)\n\n![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)\n\nType annotations for\n[boto3.CloudWatchInternetMonitor 1.26.104](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/internetmonitor.html#CloudWatchInternetMonitor)\nservice compatible with [VSCode](https://code.visualstudio.com/),\n[PyCharm](https://www.jetbrains.com/pycharm/),\n[Emacs](https://www.gnu.org/software/emacs/),\n[Sublime Text](https://www.sublimetext.com/),\n[mypy](https://github.com/python/mypy),\n[pyright](https://github.com/microsoft/pyright) and other tools.\n\nGenerated by\n[mypy-boto3-builder 7.14.5](https://github.com/youtype/mypy_boto3_builder).\n\nMore information can be found on\n[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in\n[mypy-boto3-internetmonitor docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_internetmonitor/).\n\nSee how it helps to find and fix potential bugs:\n\n![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)\n\n- [mypy-boto3-internetmonitor](#mypy-boto3-internetmonitor)\n  - [How to install](#how-to-install)\n    - [VSCode extension](#vscode-extension)\n    - [From PyPI with pip](#from-pypi-with-pip)\n  - [How to uninstall](#how-to-uninstall)\n  - [Usage](#usage)\n    - [VSCode](#vscode)\n    - [PyCharm](#pycharm)\n    - [Emacs](#emacs)\n    - [Sublime Text](#sublime-text)\n    - [Other IDEs](#other-ides)\n    - [mypy](#mypy)\n    - [pyright](#pyright)\n  - [Explicit type annotations](#explicit-type-annotations)\n    - [Client annotations](#client-annotations)\n    - [Paginators annotations](#paginators-annotations)\n    - [Literals](#literals)\n    - [Typed dictionaries](#typed-dictionaries)\n  - [How it works](#how-it-works)\n  - [What's new](#what's-new)\n    - [Implemented features](#implemented-features)\n    - [Latest changes](#latest-changes)\n  - [Versioning](#versioning)\n  - [Thank you](#thank-you)\n  - [Documentation](#documentation)\n  - [Support and contributing](#support-and-contributing)\n\n<a id=\"how-to-install\"></a>\n\n## How to install\n\n<a id=\"vscode-extension\"></a>\n\n### VSCode extension\n\nAdd\n[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)\nextension to your VSCode and run `AWS boto3: Quick Start` command.\n\nClick `Modify` and select `boto3 common` and `CloudWatchInternetMonitor`.\n\n<a id=\"from-pypi-with-pip\"></a>\n\n### From PyPI with pip\n\nInstall `boto3-stubs` for `CloudWatchInternetMonitor` service.\n\n```bash\n# install with boto3 type annotations\npython -m pip install 'boto3-stubs[internetmonitor]'\n\n\n# Lite version does not provide session.client/resource overloads\n# it is more RAM-friendly, but requires explicit type annotations\npython -m pip install 'boto3-stubs-lite[internetmonitor]'\n\n\n# standalone installation\npython -m pip install mypy-boto3-internetmonitor\n```\n\n<a id=\"how-to-uninstall\"></a>\n\n## How to uninstall\n\n```bash\npython -m pip uninstall -y mypy-boto3-internetmonitor\n```\n\n<a id=\"usage\"></a>\n\n## Usage\n\n<a id=\"vscode\"></a>\n\n### VSCode\n\n- Install\n  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)\n- Install\n  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)\n- Set `Pylance` as your Python Language Server\n- Install `boto3-stubs[internetmonitor]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[internetmonitor]'\n```\n\nBoth type checking and code completion should now work. No explicit type\nannotations required, write your `boto3` code as usual.\n\n<a id=\"pycharm\"></a>\n\n### PyCharm\n\nInstall `boto3-stubs-lite[internetmonitor]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs-lite[internetmonitor]'`\n```\n\nBoth type checking and code completion should now work. Explicit type\nannotations **are required**.\n\nUse `boto3-stubs` package instead for implicit type discovery.\n\n<a id=\"emacs\"></a>\n\n### Emacs\n\n- Install `boto3-stubs` with services you use in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[internetmonitor]'\n```\n\n- Install [use-package](https://github.com/jwiegley/use-package),\n  [lsp](https://github.com/emacs-lsp/lsp-mode/),\n  [company](https://github.com/company-mode/company-mode) and\n  [flycheck](https://github.com/flycheck/flycheck) packages\n- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package\n\n```elisp\n(use-package lsp-pyright\n  :ensure t\n  :hook (python-mode . (lambda ()\n                          (require 'lsp-pyright)\n                          (lsp)))  ; or lsp-deferred\n  :init (when (executable-find \"python3\")\n          (setq lsp-pyright-python-executable-cmd \"python3\"))\n  )\n```\n\n- Make sure emacs uses the environment where you have installed `boto3-stubs`\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"sublime-text\"></a>\n\n### Sublime Text\n\n- Install `boto3-stubs[internetmonitor]` with services you use in your\n  environment:\n\n```bash\npython -m pip install 'boto3-stubs[internetmonitor]'\n```\n\n- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) package\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"other-ides\"></a>\n\n### Other IDEs\n\nNot tested, but as long as your IDE supports `mypy` or `pyright`, everything\nshould work.\n\n<a id=\"mypy\"></a>\n\n### mypy\n\n- Install `mypy`: `python -m pip install mypy`\n- Install `boto3-stubs[internetmonitor]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[internetmonitor]'`\n```\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"pyright\"></a>\n\n### pyright\n\n- Install `pyright`: `npm i -g pyright`\n- Install `boto3-stubs[internetmonitor]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[internetmonitor]'\n```\n\nOptionally, you can install `boto3-stubs` to `typings` folder.\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"explicit-type-annotations\"></a>\n\n## Explicit type annotations\n\n<a id=\"client-annotations\"></a>\n\n### Client annotations\n\n`CloudWatchInternetMonitorClient` provides annotations for\n`boto3.client(\"internetmonitor\")`.\n\n```python\nfrom boto3.session import Session\n\nfrom mypy_boto3_internetmonitor import CloudWatchInternetMonitorClient\n\nclient: CloudWatchInternetMonitorClient = Session().client(\"internetmonitor\")\n\n# now client usage is checked by mypy and IDE should provide code completion\n```\n\n<a id=\"paginators-annotations\"></a>\n\n### Paginators annotations\n\n`mypy_boto3_internetmonitor.paginator` module contains type annotations for all\npaginators.\n\n```python\nfrom boto3.session import Session\n\nfrom mypy_boto3_internetmonitor import CloudWatchInternetMonitorClient\nfrom mypy_boto3_internetmonitor.paginator import ListHealthEventsPaginator, ListMonitorsPaginator\n\nclient: CloudWatchInternetMonitorClient = Session().client(\"internetmonitor\")\n\n# Explicit type annotations are optional here\n# Types should be correctly discovered by mypy and IDEs\nlist_health_events_paginator: ListHealthEventsPaginator = client.get_paginator(\"list_health_events\")\nlist_monitors_paginator: ListMonitorsPaginator = client.get_paginator(\"list_monitors\")\n```\n\n<a id=\"literals\"></a>\n\n### Literals\n\n`mypy_boto3_internetmonitor.literals` module contains literals extracted from\nshapes that can be used in user code for type checking.\n\n```python\nfrom mypy_boto3_internetmonitor.literals import (\n    HealthEventImpactTypeType,\n    HealthEventStatusType,\n    ListHealthEventsPaginatorName,\n    ListMonitorsPaginatorName,\n    LogDeliveryStatusType,\n    MonitorConfigStateType,\n    MonitorProcessingStatusCodeType,\n    TriangulationEventTypeType,\n    CloudWatchInternetMonitorServiceName,\n    ServiceName,\n    ResourceServiceName,\n    PaginatorName,\n    RegionName,\n)\n\n\ndef check_value(value: HealthEventImpactTypeType) -> bool:\n    ...\n```\n\n<a id=\"typed-dictionaries\"></a>\n\n### Typed dictionaries\n\n`mypy_boto3_internetmonitor.type_defs` module contains structures and shapes\nassembled to typed dictionaries for additional type checking.\n\n```python\nfrom mypy_boto3_internetmonitor.type_defs import (\n    AvailabilityMeasurementTypeDef,\n    ResponseMetadataTypeDef,\n    DeleteMonitorInputRequestTypeDef,\n    GetHealthEventInputRequestTypeDef,\n    GetMonitorInputRequestTypeDef,\n    S3ConfigTypeDef,\n    PaginatorConfigTypeDef,\n    ListHealthEventsInputRequestTypeDef,\n    ListMonitorsInputRequestTypeDef,\n    MonitorTypeDef,\n    ListTagsForResourceInputRequestTypeDef,\n    NetworkTypeDef,\n    RoundTripTimeTypeDef,\n    TagResourceInputRequestTypeDef,\n    UntagResourceInputRequestTypeDef,\n    CreateMonitorOutputTypeDef,\n    ListTagsForResourceOutputTypeDef,\n    UpdateMonitorOutputTypeDef,\n    InternetMeasurementsLogDeliveryTypeDef,\n    ListHealthEventsInputListHealthEventsPaginateTypeDef,\n    ListMonitorsInputListMonitorsPaginateTypeDef,\n    ListMonitorsOutputTypeDef,\n    NetworkImpairmentTypeDef,\n    PerformanceMeasurementTypeDef,\n    CreateMonitorInputRequestTypeDef,\n    GetMonitorOutputTypeDef,\n    UpdateMonitorInputRequestTypeDef,\n    InternetHealthTypeDef,\n    ImpactedLocationTypeDef,\n    GetHealthEventOutputTypeDef,\n    HealthEventTypeDef,\n    ListHealthEventsOutputTypeDef,\n)\n\n\ndef get_structure() -> AvailabilityMeasurementTypeDef:\n    return {...}\n```\n\n<a id=\"how-it-works\"></a>\n\n## How it works\n\nFully automated\n[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefully\ngenerates type annotations for each service, patiently waiting for `boto3`\nupdates. It delivers drop-in type annotations for you and makes sure that:\n\n- All available `boto3` services are covered.\n- Each public class and method of every `boto3` service gets valid type\n  annotations extracted from `botocore` schemas.\n- Type annotations include up-to-date documentation.\n- Link to documentation is provided for every method.\n- Code is processed by [black](https://github.com/psf/black) and\n  [isort](https://github.com/PyCQA/isort) for readability.\n\n<a id=\"what's-new\"></a>\n\n## What's new\n\n<a id=\"implemented-features\"></a>\n\n### Implemented features\n\n- Fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`\n  libraries\n- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`\n  compatibility\n- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type\n  annotations for each service\n- Generated `TypeDefs` for each service\n- Generated `Literals` for each service\n- Auto discovery of types for `boto3.client` and `boto3.resource` calls\n- Auto discovery of types for `session.client` and `session.resource` calls\n- Auto discovery of types for `client.get_waiter` and `client.get_paginator`\n  calls\n- Auto discovery of types for `ServiceResource` and `Resource` collections\n- Auto discovery of types for `aiobotocore.Session.create_client` calls\n\n<a id=\"latest-changes\"></a>\n\n### Latest changes\n\nBuilder changelog can be found in\n[Releases](https://github.com/youtype/mypy_boto3_builder/releases).\n\n<a id=\"versioning\"></a>\n\n## Versioning\n\n`mypy-boto3-internetmonitor` version is the same as related `boto3` version and\nfollows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.\n\n<a id=\"thank-you\"></a>\n\n## Thank you\n\n- [Allie Fitter](https://github.com/alliefitter) for\n  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),\n  this package is based on top of his work\n- [black](https://github.com/psf/black) developers for an awesome formatting\n  tool\n- [Timothy Edmund Crosley](https://github.com/timothycrosley) for\n  [isort](https://github.com/PyCQA/isort) and how flexible it is\n- [mypy](https://github.com/python/mypy) developers for doing all dirty work\n  for us\n- [pyright](https://github.com/microsoft/pyright) team for the new era of typed\n  Python\n\n<a id=\"documentation\"></a>\n\n## Documentation\n\nAll services type annotations can be found in\n[boto3 docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_internetmonitor/)\n\n<a id=\"support-and-contributing\"></a>\n\n## Support and contributing\n\nThis package is auto-generated. Please reports any bugs or request new features\nin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)\nrepository.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/youtype/mypy_boto3_builder",
    "keywords": "boto3 internetmonitor type-annotations boto3-stubs mypy typeshed autocomplete",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mypy-boto3-internetmonitor",
    "package_url": "https://pypi.org/project/mypy-boto3-internetmonitor/",
    "platform": null,
    "project_url": "https://pypi.org/project/mypy-boto3-internetmonitor/",
    "project_urls": {
      "Documentation": "https://youtype.github.io/boto3_stubs_docs/mypy_boto3_internetmonitor/",
      "Homepage": "https://github.com/youtype/mypy_boto3_builder",
      "Source": "https://github.com/youtype/mypy_boto3_builder",
      "Tracker": "https://github.com/youtype/mypy_boto3_builder/issues"
    },
    "release_url": "https://pypi.org/project/mypy-boto3-internetmonitor/1.26.104/",
    "requires_dist": [
      "typing-extensions (>=4.1.0) ; python_version < \"3.9\""
    ],
    "requires_python": ">=3.7",
    "summary": "Type annotations for boto3.CloudWatchInternetMonitor 1.26.104 service generated with mypy-boto3-builder 7.14.5",
    "version": "1.26.104",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17532113,
  "releases": {
    "1.26.104": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "256cae4a0d15be009c19cc20ecc81db2eccb550d9bdbdf9a76ed80eb65d1006b",
          "md5": "94a427deaf0e6d1f51d270c66ba6a34c",
          "sha256": "465111940a06445ae1dacd2fa1e404e258f5fae0ea74e10ae13489a85c2c5b47"
        },
        "downloads": -1,
        "filename": "mypy_boto3_internetmonitor-1.26.104-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94a427deaf0e6d1f51d270c66ba6a34c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23820,
        "upload_time": "2023-03-31T19:33:16",
        "upload_time_iso_8601": "2023-03-31T19:33:16.450872Z",
        "url": "https://files.pythonhosted.org/packages/25/6c/ae4a0d15be009c19cc20ecc81db2eccb550d9bdbdf9a76ed80eb65d1006b/mypy_boto3_internetmonitor-1.26.104-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbd1528f035ea7cae0890923c165c7d7334365bed9aa0ac57d4f0f9be8f65f33",
          "md5": "60cae3c6d63c83069a586111c269f6fd",
          "sha256": "680f4c9401c943bcd2692f9490667bbd206c0d92431c178b94dc0f3a3bbbab9e"
        },
        "downloads": -1,
        "filename": "mypy-boto3-internetmonitor-1.26.104.tar.gz",
        "has_sig": false,
        "md5_digest": "60cae3c6d63c83069a586111c269f6fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17175,
        "upload_time": "2023-03-31T19:33:22",
        "upload_time_iso_8601": "2023-03-31T19:33:22.685394Z",
        "url": "https://files.pythonhosted.org/packages/fb/d1/528f035ea7cae0890923c165c7d7334365bed9aa0ac57d4f0f9be8f65f33/mypy-boto3-internetmonitor-1.26.104.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.26.80": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "076d39d7e57efc18e3b14e7b33e8de8585a1f6490dbd803b49308006f3edcf8a",
          "md5": "133b4fb4a33b6ce3345962566276f2b2",
          "sha256": "87d816358a32e96e3a535be7449b46e6b5237761613d9a7f204203f99641e4a5"
        },
        "downloads": -1,
        "filename": "mypy_boto3_internetmonitor-1.26.80-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "133b4fb4a33b6ce3345962566276f2b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23355,
        "upload_time": "2023-02-27T20:35:32",
        "upload_time_iso_8601": "2023-02-27T20:35:32.385829Z",
        "url": "https://files.pythonhosted.org/packages/07/6d/39d7e57efc18e3b14e7b33e8de8585a1f6490dbd803b49308006f3edcf8a/mypy_boto3_internetmonitor-1.26.80-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea550de1cbaee08313ba6687136a4cdeecfc099dcff29d4310d97be1763e69d4",
          "md5": "fa31119b42a2cc6543c2013dcc63938e",
          "sha256": "38efde1b50961478d45c453535339bbb90fa16403ec8aa4afe90bcb789660ecd"
        },
        "downloads": -1,
        "filename": "mypy-boto3-internetmonitor-1.26.80.tar.gz",
        "has_sig": false,
        "md5_digest": "fa31119b42a2cc6543c2013dcc63938e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17008,
        "upload_time": "2023-02-27T20:35:41",
        "upload_time_iso_8601": "2023-02-27T20:35:41.113319Z",
        "url": "https://files.pythonhosted.org/packages/ea/55/0de1cbaee08313ba6687136a4cdeecfc099dcff29d4310d97be1763e69d4/mypy-boto3-internetmonitor-1.26.80.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "256cae4a0d15be009c19cc20ecc81db2eccb550d9bdbdf9a76ed80eb65d1006b",
        "md5": "94a427deaf0e6d1f51d270c66ba6a34c",
        "sha256": "465111940a06445ae1dacd2fa1e404e258f5fae0ea74e10ae13489a85c2c5b47"
      },
      "downloads": -1,
      "filename": "mypy_boto3_internetmonitor-1.26.104-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "94a427deaf0e6d1f51d270c66ba6a34c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 23820,
      "upload_time": "2023-03-31T19:33:16",
      "upload_time_iso_8601": "2023-03-31T19:33:16.450872Z",
      "url": "https://files.pythonhosted.org/packages/25/6c/ae4a0d15be009c19cc20ecc81db2eccb550d9bdbdf9a76ed80eb65d1006b/mypy_boto3_internetmonitor-1.26.104-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fbd1528f035ea7cae0890923c165c7d7334365bed9aa0ac57d4f0f9be8f65f33",
        "md5": "60cae3c6d63c83069a586111c269f6fd",
        "sha256": "680f4c9401c943bcd2692f9490667bbd206c0d92431c178b94dc0f3a3bbbab9e"
      },
      "downloads": -1,
      "filename": "mypy-boto3-internetmonitor-1.26.104.tar.gz",
      "has_sig": false,
      "md5_digest": "60cae3c6d63c83069a586111c269f6fd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 17175,
      "upload_time": "2023-03-31T19:33:22",
      "upload_time_iso_8601": "2023-03-31T19:33:22.685394Z",
      "url": "https://files.pythonhosted.org/packages/fb/d1/528f035ea7cae0890923c165c7d7334365bed9aa0ac57d4f0f9be8f65f33/mypy-boto3-internetmonitor-1.26.104.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}