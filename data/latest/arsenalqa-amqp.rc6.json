{
  "info": {
    "author": "Wargaming.net QA group",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Testing"
    ],
    "description": "Quick start\n=====================================\n\nArsenalQA is a framework that helps to abstract QA functional tests from  developers realisation in ORM style.\n\nModel your data - Models help you to change and test your data faster.\n\nMake you transports abstract - it helps you to add them on the fly.\n\nMake relations between models by transports or other models - it helps your colleagues to understand your code easily.\n\n**Why not django, graphql, etc?**\n\nBecause all of this instruments are created for developers. Developers code works in the middle of project logic,\nbetween two endpoints: users and database(for example), and are adapted for using strong interaction protocols,\nwhereas QA need more flexible and comfortable behavior.\n\n\n**Instalation:**\n```\n$ pip install arsenalqa[http]\n```\n\nLets make our first example with Post model:\n\n``` python\nfrom arsenalqa.fields import Field\nfrom arsenalqa.models import Model\nfrom arsenalqa.transports.managers import TransportManager\nfrom arsenalqa.transports.http import Http\n\n\nclass Post(Model):\n\n    http: Http = TransportManager(Http, url='https://jsonplaceholder.typicode.com/posts/{id}')\n\n    id = Field()\n    user_id = Field(name='userId')\n    title = Field()\n    body = Field()\n```\n\nOur entity was created.\n\nNow you can:\n\n``` python\nprint(Post.http.get())  # get list of posts models\n\nmy_model = Post()  # new instance of my model\nmy_model.id = 1\nresponse_model = my_model.http.get()  # get single instance from web\nprint(response_model)  # model from web\nprint(response_model.id == my_model.id)\n\n# Lets fill new instance of our model and post it to the web\nnew_model = Post()\nnew_model.title = 'My new title'\nnew_model.body = 'My new Post body'\n\nnew_created_model = new_model.http.post(expected_status=201)  # Send via http POST method\nprint(new_created_model)  # Response wrapped in new model. Has filled field id.\nprint(new_model == new_created_model)  # False because, response model contains only id field.\n\n# Lets get list of posts from web, and filter it by user\nprint(Post.http.get().filter_by_attrs(user_id=1))\n\n# Lets get list of posts from web, and filter single unique model by id\nfirst_post = Post.http.get().unique_by_attrs(id=1)\nprint(first_post)\n\n# Lets request again from response model, and get title attribute from response model\nprint(first_post.http.get().title)\n```\nCongrats! Now you can start learning this framework. **More [docs](https://github.com/wgnet/arsenalqa/blob/main/docs/INDEX.md) page!**\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wgnet/arsenalqa",
    "keywords": "TESTING,MICROSERVICES",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "arsenalqa-amqp",
    "package_url": "https://pypi.org/project/arsenalqa-amqp/",
    "platform": "",
    "project_url": "https://pypi.org/project/arsenalqa-amqp/",
    "project_urls": {
      "Homepage": "https://github.com/wgnet/arsenalqa"
    },
    "release_url": "https://pypi.org/project/arsenalqa-amqp/2020.0.6/",
    "requires_dist": [
      "kombu (==4.6.6)",
      "waiter (==1.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "Extra for ArsenalQA package",
    "version": "2020.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8702172,
  "releases": {
    "2020.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2270c7db490752bc8551f04db5f53cc760f10cc9dba114f778c46d443c09a26c",
          "md5": "c6f6f990c112130c17682e86fdbf72a6",
          "sha256": "04f553d212b297aed878a156458b9141c1ba28fd9b99cdac13ac0c5a26c35f0c"
        },
        "downloads": -1,
        "filename": "arsenalqa_amqp-2020.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6f6f990c112130c17682e86fdbf72a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18015,
        "upload_time": "2020-11-04T20:10:58",
        "upload_time_iso_8601": "2020-11-04T20:10:58.173040Z",
        "url": "https://files.pythonhosted.org/packages/22/70/c7db490752bc8551f04db5f53cc760f10cc9dba114f778c46d443c09a26c/arsenalqa_amqp-2020.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "814474676e71f61003068c51e9ec9fb0303236d391d4e19faa0be3d9111d8480",
          "md5": "01714905671afbc97145c7013aa7b9fa",
          "sha256": "d6099535cd733b2b42bc41b0a7e83bcde9fb445245308bf8b35cd62dbe7535d0"
        },
        "downloads": -1,
        "filename": "arsenalqa_amqp-2020.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01714905671afbc97145c7013aa7b9fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19041,
        "upload_time": "2020-11-04T20:58:12",
        "upload_time_iso_8601": "2020-11-04T20:58:12.327683Z",
        "url": "https://files.pythonhosted.org/packages/81/44/74676e71f61003068c51e9ec9fb0303236d391d4e19faa0be3d9111d8480/arsenalqa_amqp-2020.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "577e81664ff7510a03b21587b6cfad7efdabe454c08c6427342ff184f578b13b",
          "md5": "b3bf1d8fcf137299f29ed206694744e9",
          "sha256": "c848058fa3a1fb3133eb03a4b32029f7c7a4492d1e9ece81523d135d51883ad4"
        },
        "downloads": -1,
        "filename": "arsenalqa_amqp-2020.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3bf1d8fcf137299f29ed206694744e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19126,
        "upload_time": "2020-11-05T15:48:26",
        "upload_time_iso_8601": "2020-11-05T15:48:26.359423Z",
        "url": "https://files.pythonhosted.org/packages/57/7e/81664ff7510a03b21587b6cfad7efdabe454c08c6427342ff184f578b13b/arsenalqa_amqp-2020.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70397a653e9ec280ce79533a4552386f8747186c6bd0c04fde586de9601580a2",
          "md5": "c8d4846bb7e20434c5a2e308caf33fba",
          "sha256": "42df12b0f29ccf9de301b00ef0f09159ddcf31233fbc79fe3463128bdcc0d8fa"
        },
        "downloads": -1,
        "filename": "arsenalqa_amqp-2020.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8d4846bb7e20434c5a2e308caf33fba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19163,
        "upload_time": "2020-11-05T16:12:51",
        "upload_time_iso_8601": "2020-11-05T16:12:51.422967Z",
        "url": "https://files.pythonhosted.org/packages/70/39/7a653e9ec280ce79533a4552386f8747186c6bd0c04fde586de9601580a2/arsenalqa_amqp-2020.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7cee4604c6e74a3e091af7cdbb1203d0c1c0412bf216b97b8afe428df28ade6",
          "md5": "8107e04e62fa44386f6a1594c4972f93",
          "sha256": "4f584c34310a249ad784b10bc471a24b843c8ceb457dcb511f30c69118c7f906"
        },
        "downloads": -1,
        "filename": "arsenalqa_amqp-2020.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8107e04e62fa44386f6a1594c4972f93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19185,
        "upload_time": "2020-11-05T19:21:08",
        "upload_time_iso_8601": "2020-11-05T19:21:08.564802Z",
        "url": "https://files.pythonhosted.org/packages/b7/ce/e4604c6e74a3e091af7cdbb1203d0c1c0412bf216b97b8afe428df28ade6/arsenalqa_amqp-2020.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c14c99949e5c7de8100a004e23e0380d9b55aea78313064cb1e64088cc0c673",
          "md5": "2702a352a7112b34c70a030fcef79d06",
          "sha256": "abc9a6372025605c1cd28cb1f92cc21c8b5215f5de7067cf0043e9dc7a3f2456"
        },
        "downloads": -1,
        "filename": "arsenalqa_amqp-2020.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2702a352a7112b34c70a030fcef79d06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19242,
        "upload_time": "2020-11-19T18:44:28",
        "upload_time_iso_8601": "2020-11-19T18:44:28.949914Z",
        "url": "https://files.pythonhosted.org/packages/6c/14/c99949e5c7de8100a004e23e0380d9b55aea78313064cb1e64088cc0c673/arsenalqa_amqp-2020.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c14c99949e5c7de8100a004e23e0380d9b55aea78313064cb1e64088cc0c673",
        "md5": "2702a352a7112b34c70a030fcef79d06",
        "sha256": "abc9a6372025605c1cd28cb1f92cc21c8b5215f5de7067cf0043e9dc7a3f2456"
      },
      "downloads": -1,
      "filename": "arsenalqa_amqp-2020.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2702a352a7112b34c70a030fcef79d06",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 19242,
      "upload_time": "2020-11-19T18:44:28",
      "upload_time_iso_8601": "2020-11-19T18:44:28.949914Z",
      "url": "https://files.pythonhosted.org/packages/6c/14/c99949e5c7de8100a004e23e0380d9b55aea78313064cb1e64088cc0c673/arsenalqa_amqp-2020.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}