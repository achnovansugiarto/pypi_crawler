{
  "info": {
    "author": "Patryk DÄ…browski",
    "author_email": "tibiasportex@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## What is it?\nPackage that contains mixins with built-in limit offset and cursor pagination. Destined to build an\nAPI. Easy to use.\n\nIntegrated with\n1. SqlAlchemy\n2. Pymongo\n3. Motor - asyncio\n\n### List of available mixins:\n\n1. APIListMixin\n2. APIDetailMixin\n3. APIUpdateMixin\n4. APICreateMixin\n5. APIDestroyMixin\n\n### List of available pagination strategies:\n\n1. PaginationLimitOffset / AsyncPaginationLimitOffset - default\n2. PaginationCursor / AsyncPaginationCursor\n\n### Built on:\n\n1. fastapi==0.79.0\n2. pytest==7.1.2\n3. pytest-asyncio==0.19.0\n4. SQLAlchemy==1.4.39\n5. aiosqlite==0.17.0 # testing purpose\n6. pymongo==4.2.0\n7. motor==3.0.0\n8. mongomock==4.1.2 # testing purpose\n9. mongomock-motor==0.0.12 # testing purpose\n\n\n### Base usage:\n\n#### Motor List view:\n\n```python\n# views.py\nfrom fastapi_views.ext.motor.mixins import APIListMixin \n\n\nclass FooListView(APIListMixin):\n    model = 'foo'  # collection name\n\n\n# urls.py\nfrom fastapi import (APIRouter, Depends)\n\nfoo_router = APIRouter(\n    prefix='/foo',\n    tags=['Foo']\n)\n\n\n@foo_router.get('/all', response_model=list[SomePydanticModel])\nasync def get_foo(\n        db: AsyncIOMotorDatabase = Depends(get_motor_db),  # required\n):\n    documents = []\n    cur = FooListView().get_all(db)  # cursor is returned, default limit 100, skip 0\n    async for document in cur:\n        document.pop('_id')  # if you want to return _id you have to work around it by yourself\n        documents.append(document)\n    return documents\n```\n\nYou can also override mixin attrs to make it a bit shorter\n\n```python\n# urls.py\nfrom fastapi import (APIRouter, Depends)\nfrom fastapi_views import utils\nfrom fastapi_views.views.mixins import BaseAPIListMixin\n\nfoo_router = APIRouter(\n    prefix='/foo',\n    tags=['Foo']\n)\n\n\n@foo_router.get('/all', response_model=list[SomePydanticModel])\nasync def get_foo(\n        db: AsyncIOMotorDatabase = Depends(get_motor_db)\n):\n    cur = FooListView(attrs={'model': 'foo'}).get_all(db)\n    ...\n```\n\n\n#### Motor list view using pagination:\n\n```python\n# views.py\nfrom fastapi_views.ext.motor.mixins import APIListMixin \n\n\nclass FooListView(APIListMixin):\n    model = 'foo'\n    paginate_by = 15\n\n\n# urls.py\nfrom fastapi import (APIRouter, Depends)\nfrom fastapi_views.pagination.schema import LimitOffsetPage\n\nfoo_router = APIRouter(\n    prefix='/foo',\n    tags=['Foo']\n)\n\n\n@foo_router.get('/all', response_model=LimitOffsetPage.include(SomePydanticModel))\nasync def get_foo(request: Request, db: Database = Depends(get_motor_db)):\n    return await FooListView().get_all_with_pagination(db, request)\n\nresult_schema_example = {\n  \"count\": 0,\n  \"total\": 0,\n  \"total_pages\": 0,\n  \"page_limit\": 0,\n  \"next_page\": \"string\",\n  \"previous_page\": \"string\",\n  \"last_page\": \"string\",\n  \"results\": [\n    {\n      \"name\": \"string\",\n      \"age\": 0\n    }\n  ]\n}\n```\n\n#### List view cursor pagination example:\n\n```python\n# views.py\nfrom fastapi_views.ext.motor.mixins import APIListMixin\nfrom fastapi_views.ext.motor.pagination.core import AsyncPaginationCursor\nfrom sqlalchemy import select, and_\nfrom sqlalchemy.orm import joinedload, Load\nfrom sqlalchemy.sql import Select\n\n\nclass FooListView(APIListMixin):\n    model = 'foo'\n    paginate_by = 10\n    pagination_strategy = AsyncPaginationCursor\n    \n    # Motor example\n    def get_statement(self):\n        \"\"\"As default returns {}.\"\"\"\n        return {'name': 'John', 'age': {'$gt': 20}}\n\n    def get_pagination_kwargs(self):\n        \"\"\"\n        As default returns {\n            'model': self.model,\n            'ordering': ['id'],\n            'cursor_prefixes': ['next__', 'prev__']\n        }\n        \"\"\"\n        kw = super().get_pagination_kwargs()\n        kw['ordering'] = ['-created']\n        return kw\n\n    # SQLAlchemy example\n    def get_statement(self) -> Select:\n        \"\"\"As default returns select(self.model).\"\"\"\n\n        statement = select(self.model).options(\n            Load(self.model).load_only(self.model.title, self.model.published),\n        ).options(\n            joinedload(self.model.fk_related, innerjoin=True).\n            load_only(Fk_related_model.username, Fk_related_model.email)\n        ).where(and_(self.model.id > 0, self.model.id < 100))\n\n        return statement\n\n# urls.py\nfrom fastapi import (APIRouter, Depends)\nfrom fastapi_views.pagination.schema import CursorPage\n\nfoo_router = APIRouter(\n    prefix='/foo',\n    tags=['Foo']\n)\n\n\n@foo_router.get('/all', response_model=CursorPage.include(SomePydanticModel))\nasync def get_foo(request: Request, db: Database = Depends(get_motor_db)):\n    return await FooListView().get_all_with_pagination(db, request)\n\nresult_schema_example = {\n  \"count\": 0,\n  \"page_limit\": 0,\n  \"first_page\": \"string\",\n  \"next_page\": \"string\",\n  \"previous_page\": \"string\",\n  \"results\": [\n    {\n      \"name\": \"string\",\n      \"age\": 0\n    }\n  ]\n}\n```\n#### Detail/Update/Delete view:\n\nDefault ***field_name*** for detail/update/delete view is set to ***id / _id***. To override do as below\n\n```python\n# views.py\nclass FooDetailUpdateDeleteView(RealtedMixin):\n    ...\n    pk_field = 'field_name'\n```\n\n### Some examples of sqlAlchemy usage\n\n#### List view:\n\n```python\n# views.py\nfrom fastapi_views.ext.sql_alchemy.mixins import APIListMixin\n\n\nclass FooListView(APIListMixin):\n    model = Foo\n\n\n# urls.py\nfrom fastapi import (APIRouter, Depends)\nfrom fastapi_views import utils\n\nfoo_router = APIRouter(\n    prefix='/foo',\n    tags=['Foo']\n)\n\n\n@foo_router.get('/all', response_model=list[SomePydanticModel])\nasync def get_foo(\n        session: Session = Depends(db_session),\n):\n    return utils.scalars(FooListView().get_all(session=session, limit=50))\n```\n\n#### Detail view:\n\n```python\n# views.py\nfrom fastapi_views.ext.sql_alchemy.mixins import APIDetailMixin\n\n\nclass FooDetailView(APIDetailMixin):\n    model = Foo\n    \n    def get_statement(self) -> Select:\n        statement = select(Foo).options(\n            Load(Foo).load_only(Foo.title, Foo.published),\n        ).options(\n            joinedload(Foo.user, innerjoin=True).\n            load_only(FooFK.username, FooFK.email)\n        ).where(getattr(Foo, self.pk_field) == self.kwargs['pk'])\n    \n        return statement\n\n    def get_detail(self, *args, **kwargs):\n        return super().get_detail(session=self.kwargs['db'])\n\n\n# urls.py\nfrom fastapi import (APIRouter, Depends)\n\nfoo_router = APIRouter(\n    prefix='/foo',\n    tags=['Foo']\n)\n\n\n@foo_router.get('/{pk}')\nasync def get_foo(pk: int, db = Depends(db_session.get_session)):\n    return FooDetailView(pk=pk, db=db).get_detail()\n```\n\n#### Update view:\n\n```python\n# views.py\nfrom fastapi_views.ext.sql_alchemy.mixins import APIUpdateMixin\n\n\nclass FooUpdateView(APIUpdateMixin):\n    model = Foo\n\n\n# urls.py\nfrom fastapi import (APIRouter, Depends)\n\nfoo_router = APIRouter(\n    prefix='/foo',\n    tags=['Foo']\n)\n\n\n@foo_router.get('/{pk}')\nasync def get_foo(pk: int, session: Session = Depends(db_session)):\n    return FooUpdateView().update_one(field_value=pk, session=session, data={})\n```\n\n#### Delete view:\n\n```python\n# views.py\nfrom fastapi_views.ext.sql_alchemy.mixins import APIDestroyMixin\n\n\nclass FooDeleteView(APIDestroyMixin):\n    model = Foo\n\n\n# urls.py\nfrom fastapi import (APIRouter, Depends)\n\nfoo_router = APIRouter(\n    prefix='/foo',\n    tags=['Foo']\n)\n\n\n@foo_router.get('/{slug}')\nasync def get_foo(slug: str, session: Session = Depends(db_session)):\n    return FooDeleteView().delete(session=session, field_value=slug)\n```\n\nDownload on https://pypi.org/project/fastapi-view-mixins/\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,paginator,pagination,views",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastapi-view-mixins",
    "package_url": "https://pypi.org/project/fastapi-view-mixins/",
    "platform": null,
    "project_url": "https://pypi.org/project/fastapi-view-mixins/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/fastapi-view-mixins/0.1.1/",
    "requires_dist": [
      "fastapi",
      "sqlalchemy",
      "pymongo",
      "motor"
    ],
    "requires_python": "",
    "summary": "Fastapi view mixins",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15224997,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fa2ecac77f7f293d3b4123e13c6a69ee06ef223c2553402b66024b52310f0ef",
          "md5": "792b07f31a77638247c6522395116512",
          "sha256": "77a722872a6bd4614efe56d9542542422ce014d59fab54dbd1711855b78585cf"
        },
        "downloads": -1,
        "filename": "fastapi_view_mixins-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "792b07f31a77638247c6522395116512",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 74231,
        "upload_time": "2022-08-03T07:14:59",
        "upload_time_iso_8601": "2022-08-03T07:14:59.219892Z",
        "url": "https://files.pythonhosted.org/packages/6f/a2/ecac77f7f293d3b4123e13c6a69ee06ef223c2553402b66024b52310f0ef/fastapi_view_mixins-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b27449069a8106a6fd6ed91db7383c61a1e935ca82e9cd40972ad7732b0b1491",
          "md5": "34e6fb9e391178dacd7c101dc0d077c5",
          "sha256": "d8525988e91870d77873274ed191fbbf530af9dd06813b463aebfe7698afb2c8"
        },
        "downloads": -1,
        "filename": "fastapi-view-mixins-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "34e6fb9e391178dacd7c101dc0d077c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58619,
        "upload_time": "2022-08-03T07:15:03",
        "upload_time_iso_8601": "2022-08-03T07:15:03.109041Z",
        "url": "https://files.pythonhosted.org/packages/b2/74/49069a8106a6fd6ed91db7383c61a1e935ca82e9cd40972ad7732b0b1491/fastapi-view-mixins-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f38d9d2015221945c22612f390ea0bb8439b6bb8602cca0ce937cd26bbbd483c",
          "md5": "061ed32deb07b71d86c42ce3173634ad",
          "sha256": "3f57d4edd60fdbd0f277df2840237f3247eaef9c26575a34cb11d365c86cb38f"
        },
        "downloads": -1,
        "filename": "fastapi_view_mixins-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "061ed32deb07b71d86c42ce3173634ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 74215,
        "upload_time": "2022-08-03T07:34:34",
        "upload_time_iso_8601": "2022-08-03T07:34:34.475276Z",
        "url": "https://files.pythonhosted.org/packages/f3/8d/9d2015221945c22612f390ea0bb8439b6bb8602cca0ce937cd26bbbd483c/fastapi_view_mixins-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc754a7cf408ac74740efb25814398dae6217b144420ae5dca1d659731baedfe",
          "md5": "83020ea7f041b8a9915d7fc9d563a657",
          "sha256": "bb6afb276d1df218bf8eabbe76a49a01782a6d9006f58c78ab2232699e8e299e"
        },
        "downloads": -1,
        "filename": "fastapi-view-mixins-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "83020ea7f041b8a9915d7fc9d563a657",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58607,
        "upload_time": "2022-08-03T07:34:37",
        "upload_time_iso_8601": "2022-08-03T07:34:37.338422Z",
        "url": "https://files.pythonhosted.org/packages/dc/75/4a7cf408ac74740efb25814398dae6217b144420ae5dca1d659731baedfe/fastapi-view-mixins-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d5dbbcfefbe61e7642cdf529e4e486c9ae6b45b67254c5a3442c23e82b6f386",
          "md5": "52d0a1e7e9698e7e006f1677ec08d50e",
          "sha256": "f4cc8b3049d5a8c5c519e6839a72475c8891b5b265a447307e548950660b374e"
        },
        "downloads": -1,
        "filename": "fastapi_view_mixins-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52d0a1e7e9698e7e006f1677ec08d50e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 105787,
        "upload_time": "2022-09-27T07:05:06",
        "upload_time_iso_8601": "2022-09-27T07:05:06.839637Z",
        "url": "https://files.pythonhosted.org/packages/4d/5d/bbcfefbe61e7642cdf529e4e486c9ae6b45b67254c5a3442c23e82b6f386/fastapi_view_mixins-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5c27bf4bd8106f7c304b4c7a6eedd5d6b9fdc4ab6db280cb9302853f25d790e",
          "md5": "837f9db8ea5a9c6d1e1b4d6d74a98e86",
          "sha256": "34b2e87a01917ea29b460a8ee7b66ad2c7c7ab3ea06d137168edbd9859f57652"
        },
        "downloads": -1,
        "filename": "fastapi-view-mixins-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "837f9db8ea5a9c6d1e1b4d6d74a98e86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 61254,
        "upload_time": "2022-09-27T07:05:09",
        "upload_time_iso_8601": "2022-09-27T07:05:09.431702Z",
        "url": "https://files.pythonhosted.org/packages/e5/c2/7bf4bd8106f7c304b4c7a6eedd5d6b9fdc4ab6db280cb9302853f25d790e/fastapi-view-mixins-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b4087d717171ec6eaa6400c197ed99b5bac9b1cc6aeb4482a817387d26a5a2a",
          "md5": "4892d67e0384f6507e9225efb6f0adf6",
          "sha256": "930b7ad09f50bcfd3591ef541f59b32ca8bb04b7ec7992c499fba468f111df29"
        },
        "downloads": -1,
        "filename": "fastapi_view_mixins-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4892d67e0384f6507e9225efb6f0adf6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 83024,
        "upload_time": "2022-09-27T08:53:43",
        "upload_time_iso_8601": "2022-09-27T08:53:43.574458Z",
        "url": "https://files.pythonhosted.org/packages/2b/40/87d717171ec6eaa6400c197ed99b5bac9b1cc6aeb4482a817387d26a5a2a/fastapi_view_mixins-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82f3f652b0b56cff4fe8f54c6780e57e2f11b61b87d0bff08cf80fa65604cd8e",
          "md5": "019e89c9b809f2e5d7b66d55a239c0e9",
          "sha256": "9177992a5d68032ea5f205ec9cc550befc83058d74c958f5b24b7d98db02d299"
        },
        "downloads": -1,
        "filename": "fastapi-view-mixins-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "019e89c9b809f2e5d7b66d55a239c0e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 61260,
        "upload_time": "2022-09-27T08:53:45",
        "upload_time_iso_8601": "2022-09-27T08:53:45.996171Z",
        "url": "https://files.pythonhosted.org/packages/82/f3/f652b0b56cff4fe8f54c6780e57e2f11b61b87d0bff08cf80fa65604cd8e/fastapi-view-mixins-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b4087d717171ec6eaa6400c197ed99b5bac9b1cc6aeb4482a817387d26a5a2a",
        "md5": "4892d67e0384f6507e9225efb6f0adf6",
        "sha256": "930b7ad09f50bcfd3591ef541f59b32ca8bb04b7ec7992c499fba468f111df29"
      },
      "downloads": -1,
      "filename": "fastapi_view_mixins-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4892d67e0384f6507e9225efb6f0adf6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 83024,
      "upload_time": "2022-09-27T08:53:43",
      "upload_time_iso_8601": "2022-09-27T08:53:43.574458Z",
      "url": "https://files.pythonhosted.org/packages/2b/40/87d717171ec6eaa6400c197ed99b5bac9b1cc6aeb4482a817387d26a5a2a/fastapi_view_mixins-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82f3f652b0b56cff4fe8f54c6780e57e2f11b61b87d0bff08cf80fa65604cd8e",
        "md5": "019e89c9b809f2e5d7b66d55a239c0e9",
        "sha256": "9177992a5d68032ea5f205ec9cc550befc83058d74c958f5b24b7d98db02d299"
      },
      "downloads": -1,
      "filename": "fastapi-view-mixins-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "019e89c9b809f2e5d7b66d55a239c0e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 61260,
      "upload_time": "2022-09-27T08:53:45",
      "upload_time_iso_8601": "2022-09-27T08:53:45.996171Z",
      "url": "https://files.pythonhosted.org/packages/82/f3/f652b0b56cff4fe8f54c6780e57e2f11b61b87d0bff08cf80fa65604cd8e/fastapi-view-mixins-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}