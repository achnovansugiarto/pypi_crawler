{
  "info": {
    "author": "Gerhard Tan",
    "author_email": "gwohau.tan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Topic :: System :: Installation/Setup"
    ],
    "description": "# Easy Deployment\n\nEasy deployment tool for Python application. There are mainly two parts:\n\n- Create a virtual environment (Optional).\n- Install your application as a service.\n\nDeploy your application with one command!\n\n## Install\n\nIt's recommended that you install this package in the **Global Python Environment**.\n\n```\npip install ezd\n```\n\nOn Windows, be careful if you want to uninstall this package. Make sure all services created with this tool are removed.\n\n## Usage\n\n### Config file\n\nRun `ezd init` to create a config file named `deploy.json`.\n\n```json\n{\n  \"env\": {\n    \"name\": \"venv\"\n  },\n  \"service\": {\n    \"name\": \"\",\n    \"cmd\": [],\n    \"display\": \"\",\n    \"description\": \"\"\n  }\n}\n```\n\nA list of full parameters:\n\n| Parameter           | Type         | Description                                                                  | Windows            | Linux              |\n|---------------------|--------------|------------------------------------------------------------------------------|--------------------|--------------------|\n| env.name            | string       | The name of virtual environment.                                             | :heavy_check_mark: | :heavy_check_mark: |\n| env.lookup          | string       | Offline package lookup directory used by pip.                                | :heavy_check_mark: | :heavy_check_mark: |\n| env.local           | string       | A directory contains local package file.                                     | :heavy_check_mark: | :heavy_check_mark: |\n| env.requirement     | bool         | Whether to install dependencies in `requirements.txt`. Default is `true`.    | :heavy_check_mark: | :heavy_check_mark: |\n| service.name        | string       | The name of service.                                                         | :heavy_check_mark: | :heavy_check_mark: |\n| service.cmd         | list[string] | The command line to be executed.                                             | :heavy_check_mark: | :heavy_check_mark: |\n| service.display     | string       | Display name of service.                                                     | :heavy_check_mark: | :x:                |\n| service.description | string       | Description of service.                                                      | :heavy_check_mark: | :heavy_check_mark: |\n| service.start       | string       | Start type of service (demand/auto/boot/disabled/system). Default is `auto`. | :heavy_check_mark: | :heavy_check_mark: |\n| service.restart     | int          | Restart delay (seconds) when service failed. Default is `30`.                | :heavy_check_mark: | :heavy_check_mark: |\n| service.deps        | list[string] | Dependencies of service.                                                     | :heavy_check_mark: | :heavy_check_mark: |\n| service.interactive | bool         | Run service in interactive mode. Default is `false`.                         | :heavy_check_mark: | :x:                |\n| service.user        | string       | Run service with given user.                                                 | :heavy_check_mark: | :heavy_check_mark: |\n| service.password    | string       | Password of the user.                                                        | :heavy_check_mark: | :x:                |\n| service.delayed     | bool         | Delayed start of service.                                                    | :heavy_check_mark: | :x:                |\n\n### Commands\n\nRun `ezd -h` to see all commands.\n\n```\nusage: ezd [-h] command\n\nEasy Deployment Tool\n\npositional arguments:\n  command     Command <init|deploy|install|uninstall|start|stop>\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\n\nAvailable commands:\n\n| Command   | Description                                                   |\n|-----------|---------------------------------------------------------------|\n| init      | Create an example config file `deploy.json`.                  |\n| deploy    | Create virtual environment and install dependencies.          |\n| install   | Install a service (Automatically run `deploy` command first). |\n| uninstall | Remove service (Automatically run `stop` command first).      |\n| start     | Start service.                                                |\n| stop      | Stop service.                                                 |\n\n### Update config\n\n#### Upgrade or install packages\n\nIf you need to upgrade or install packages, just edit the `requirements.txt` file and follow the steps below:\n\n1. Stop the service\n\n    ```shell\n    ezd stop\n    ```\n\n2. Deploy new packages\n\n    ```shell\n    ezd deploy\n    ```\n\n3. Start the service\n\n    ```shell\n    ezd start\n    ```\n\n#### Update service\n\nIf you update the service settings of the config file, you must `uninstall` the old service first.\n\n1. Uninstall the service\n\n    ```shell\n    ezd uninstall\n    ```\n\n2. Install service\n\n    ```shell\n    ezd install\n    ```\n\n3. Start the service\n\n    ```shell\n    ezd start\n    ```\n\n## Examples\n\n### Jupyter notebook\n\nCreate a new `nb` directory and start working in it.\n\n```shell\ncd nb\necho notebook > requirements.txt\nezd init\n```\n\nThe `deploy.json` file looks like this:\n\n```json\n{\n  \"env\": {\n    \"name\": \"venv\"\n  },\n  \"service\": {\n    \"name\": \"notebook\",\n    \"cmd\": [\"jupyter-notebook.exe\"],\n    \"display\": \"Jupyter Notebook\",\n    \"description\": \"Jupyter Notebook Service\"\n  }\n}\n```\n\nWe are ready to deploy now.\n\n```shell\nezd install\nezd start\n```\n\nYou can now visit http://localhost:8888/ to confirm jupyter notebook is running.\n\n### Ping test\n\nCreate a new `pingtest` directory and start working in it.\n\n```shell\ncd pingtest\nezd init\n```\n\nFor non-python project, we can omit virtual environment since we don't need it. The `deploy.json` file looks like this:\n\n```json\n{\n  \"service\": {\n    \"name\": \"pingtest\",\n    \"cmd\": [\"ping\", \"-t\", \"1.1.1.1\"],\n    \"display\": \"Ping it\",\n    \"description\": \"A ping test service\"\n  }\n}\n```\n\nDeploy now!\n\n```shell\nezd install\nezd start\n```\n\nLet's confirm ping is running:\n\n```shell\n$ tasklist | findstr PING\nPING.EXE                     19564 Services                   0      4,540 K\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/koho/ezd",
    "keywords": "deploy,service,python-script,cli",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ezd",
    "package_url": "https://pypi.org/project/ezd/",
    "platform": "any",
    "project_url": "https://pypi.org/project/ezd/",
    "project_urls": {
      "Bug Tracker": "https://github.com/koho/ezd/issues",
      "Homepage": "https://github.com/koho/ezd"
    },
    "release_url": "https://pypi.org/project/ezd/0.2.0/",
    "requires_dist": [
      "pywin32 ; sys_platform == \"win32\""
    ],
    "requires_python": ">=3.5",
    "summary": "Easy Deployment Tool",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15280947,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93274cf45812a656184ea593f3d5889207a99dde2bddefed8e91de4529c0376d",
          "md5": "bf157cb9596e69e2ce8823d33080a17f",
          "sha256": "d0c366747caa7027c63dd080a0de06da4d412abd5d90e0e33651bf5cc470dfb6"
        },
        "downloads": -1,
        "filename": "ezd-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf157cb9596e69e2ce8823d33080a17f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8050,
        "upload_time": "2022-10-01T13:14:08",
        "upload_time_iso_8601": "2022-10-01T13:14:08.368294Z",
        "url": "https://files.pythonhosted.org/packages/93/27/4cf45812a656184ea593f3d5889207a99dde2bddefed8e91de4529c0376d/ezd-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b00ebeed6f3165933c514904a441e6f7848d2bf30af20e6902225e8805b54881",
          "md5": "659e1ee3d530d522c4307b59677b345b",
          "sha256": "05b974b551eba4bd687aa24c786fec24329f64cc6099393be15127c43f1b6893"
        },
        "downloads": -1,
        "filename": "ezd-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "659e1ee3d530d522c4307b59677b345b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8141,
        "upload_time": "2022-10-01T14:32:31",
        "upload_time_iso_8601": "2022-10-01T14:32:31.692325Z",
        "url": "https://files.pythonhosted.org/packages/b0/0e/beed6f3165933c514904a441e6f7848d2bf30af20e6902225e8805b54881/ezd-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13d8a3b3c49b551e4ddb2e413351a103e1ce4324ce0b02966c09657808435c31",
          "md5": "2bf57190a89e66bb08f197aff06a0523",
          "sha256": "a8c3f859b23463d80db4e34ee506d973e3ec0322f2a4eb8eee8ef7cfb9fb1bf2"
        },
        "downloads": -1,
        "filename": "ezd-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2bf57190a89e66bb08f197aff06a0523",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8551,
        "upload_time": "2022-10-02T11:41:00",
        "upload_time_iso_8601": "2022-10-02T11:41:00.527182Z",
        "url": "https://files.pythonhosted.org/packages/13/d8/a3b3c49b551e4ddb2e413351a103e1ce4324ce0b02966c09657808435c31/ezd-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "13d8a3b3c49b551e4ddb2e413351a103e1ce4324ce0b02966c09657808435c31",
        "md5": "2bf57190a89e66bb08f197aff06a0523",
        "sha256": "a8c3f859b23463d80db4e34ee506d973e3ec0322f2a4eb8eee8ef7cfb9fb1bf2"
      },
      "downloads": -1,
      "filename": "ezd-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2bf57190a89e66bb08f197aff06a0523",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 8551,
      "upload_time": "2022-10-02T11:41:00",
      "upload_time_iso_8601": "2022-10-02T11:41:00.527182Z",
      "url": "https://files.pythonhosted.org/packages/13/d8/a3b3c49b551e4ddb2e413351a103e1ce4324ce0b02966c09657808435c31/ezd-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}