{
  "info": {
    "author": "Dilan Perera",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Sammon Mapping\r\n[![PR's Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat)](http://makeapullrequest.com)  [![PyPi Version](https://img.shields.io/pypi/v/yt2mp3.svg)](https://pypi.python.org/pypi/yt2mp3/) [![Python Versions](https://img.shields.io/pypi/pyversions/yt2mp3.svg)](https://pypi.python.org/pypi/yt2mp3/) [![Version](https://badge.fury.io/gh/tterb%2FHyde.svg)](https://badge.fury.io/gh/tterb%2FHyde) [![GitHub Release](https://img.shields.io/github/release/tterb/PlayMusic.svg?style=flat)]() \r\n\r\n\r\nSammon mapping is a nonlinear dimensionality reduction technique that is used to represent high-dimensional data in a lower dimensional space while preserving the pairwise distances between data points as much as possible. The technique was introduced by John W. Sammon Jr. in 1969.\r\n\r\nThe Sammon Mapping algorithm tries to minimize a stress function that quantifies the difference between the pairwise distances in the original high-dimensional space and the pairwise distances in the lower dimensional space. The algorithm iteratively adjusts the positions of the data points in the lower dimensional space until the stress function is minimized.\r\n\r\n# Python Library Implementation\r\nThe sammon function in this library provides an implementation of the Sammon Mapping algorithm. The function takes the following parameters:\r\n\r\n# Function Documentation\r\n#### The sammon function implements the Sammon Mapping algorithm in Python. The function takes the following parameters:\r\n\r\n`x`: array-like, shape (n_samples, n_features)\r\nThe input data.\r\n\r\n`n`: int, optional (default: 2)\r\nThe dimensionality of the output space. The default is 2.\r\n\r\n`display`: int, optional (default: 0)\r\nWhether to display the iteration information or not. The default is 0.\r\n\r\n`inputdist`: str, optional (default: 'raw')\r\nThe type of distance metric used in the input space. \r\n\r\nPossible values are:\r\n- 'raw': Euclidean distance\r\n- 'pcorr': Pearson correlation distance\r\n- 'spear': Spearman correlation distance\r\n\r\n`maxhalves`: int, optional (default: 20)\r\nThe maximum number of times the step halving procedure can be applied. The default is 20.\r\n\r\n`maxiter`: int, optional (default: 500)\r\nThe maximum number of iterations. The default is 500.\r\n\r\n`tolfun`: float, optional (default: 1e-9)\r\nThe tolerance for the change in the stress function. The default is 1e-9.\r\n\r\n`init`: str, optional (default: 'pca')\r\nThe type of initialization used for the output space. \r\n\r\nPossible values are:\r\n- 'pca': Principal component analysis initialization\r\n- 'random': Random initialization\r\n\r\n\r\n#### The function returns:\r\n\r\n`y`: array-like, shape (n_samples, n_components)\r\nThe transformed output data.\r\n\r\n`stress`: float\r\nThe final value of the stress function.\r\n\r\n# Reference\r\nThis implementation is based on the algorithm described in the following paper:\r\n\r\nSammon, J. W. (1969). **A nonlinear mapping for data structure analysis.** IEEE Transactions on Computers, C-18(5), 401-409. doi: *10.1109/T-C.1969.222678*\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sammon-mapping",
    "package_url": "https://pypi.org/project/sammon-mapping/",
    "platform": null,
    "project_url": "https://pypi.org/project/sammon-mapping/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/sammon-mapping/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16951260,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf2c2641408d105d6819a4ed87d9b9dc88cd798cf8383499402849a9735a5c0e",
          "md5": "e0e35369768ed2b88180886f2a809e10",
          "sha256": "cbe13f54131a0d988be17cc2edd85db5644ea56b7dc32be144522dd1c24f2eb2"
        },
        "downloads": -1,
        "filename": "sammon_mapping-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0e35369768ed2b88180886f2a809e10",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3590,
        "upload_time": "2023-02-20T22:11:46",
        "upload_time_iso_8601": "2023-02-20T22:11:46.637817Z",
        "url": "https://files.pythonhosted.org/packages/cf/2c/2641408d105d6819a4ed87d9b9dc88cd798cf8383499402849a9735a5c0e/sammon_mapping-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37eee25c4a3fd310071a9a456bab4a812c626064244593acaa1107b42ecec49c",
          "md5": "53c09ff0be1f1880bddbbc5f404f9ed5",
          "sha256": "83aba703287b12b8db64bab2094c1a5e7589fdd968c2f4c0309b54fdab3b7802"
        },
        "downloads": -1,
        "filename": "sammon-mapping-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "53c09ff0be1f1880bddbbc5f404f9ed5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3214,
        "upload_time": "2023-02-20T21:54:57",
        "upload_time_iso_8601": "2023-02-20T21:54:57.693223Z",
        "url": "https://files.pythonhosted.org/packages/37/ee/e25c4a3fd310071a9a456bab4a812c626064244593acaa1107b42ecec49c/sammon-mapping-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05149815f3e7644f27c73e21816f97e770125c67893888e3d0185025d52c83c0",
          "md5": "dbc58d23e607163de00fb5c80737d8af",
          "sha256": "b32fe214e601ee2fb9af074f27f472d0ffc76010440a423f81edf63cefea12bd"
        },
        "downloads": -1,
        "filename": "sammon-mapping-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dbc58d23e607163de00fb5c80737d8af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3440,
        "upload_time": "2023-02-20T22:17:06",
        "upload_time_iso_8601": "2023-02-20T22:17:06.534328Z",
        "url": "https://files.pythonhosted.org/packages/05/14/9815f3e7644f27c73e21816f97e770125c67893888e3d0185025d52c83c0/sammon-mapping-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05149815f3e7644f27c73e21816f97e770125c67893888e3d0185025d52c83c0",
        "md5": "dbc58d23e607163de00fb5c80737d8af",
        "sha256": "b32fe214e601ee2fb9af074f27f472d0ffc76010440a423f81edf63cefea12bd"
      },
      "downloads": -1,
      "filename": "sammon-mapping-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "dbc58d23e607163de00fb5c80737d8af",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3440,
      "upload_time": "2023-02-20T22:17:06",
      "upload_time_iso_8601": "2023-02-20T22:17:06.534328Z",
      "url": "https://files.pythonhosted.org/packages/05/14/9815f3e7644f27c73e21816f97e770125c67893888e3d0185025d52c83c0/sammon-mapping-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}