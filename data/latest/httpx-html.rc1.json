{
  "info": {
    "author": "Kenneth Reitz",
    "author_email": "me@kennethreitz.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Typing :: Typed"
    ],
    "description": "httpx-html: Web Scraping for Humans\n===================================\n\nThis library intends to make scraping the web as simple and intuitive as\npossible.\n\nWhen using this library you automatically get:\n\n- **Full JavaScript support**!\n- *CSS Selectors* (a.k.a jQuery-style, thanks to PyQuery).\n- *XPath Selectors*, for the faint of heart.\n- Mocked user-agent (like a real web browser).\n- Automatic following of redirects.\n- Connection–pooling and cookie persistence.\n- The httpx experience you know and love, with magical parsing abilities.\n- **Async Support**\n\n.. Other nice features include:\n\n    - Markdown export of pages and elements.\n\n\nTutorial & Usage\n================\n\nMake a GET request to 'python.org', using httpx:\n\n.. code-block:: pycon\n\n    >>> from httpx_html import HTMLSession\n    >>> session = HTMLSession()\n    >>> r = session.get('https://python.org/')\n\nTry async and get some sites at the same time:\n\n.. code-block:: pycon\n\n    >>> from httpx_html import AsyncHTMLSession\n    >>> asession = AsyncHTMLSession()\n    >>> async def get_pythonorg():\n    ...     r = await asession.get('https://python.org/')\n    ...     return r\n    ...\n    >>> async def get_reddit():\n    ...    r = await asession.get('https://reddit.com/')\n    ...    return r\n    ...\n    >>> async def get_google():\n    ...    r = await asession.get('https://google.com/')\n    ...    return r\n    ...\n    >>> results = asession.run(get_pythonorg, get_reddit, get_google)\n    >>> results # check the requests all returned a 200 (success) code\n    [<Response [200]>, <Response [200]>, <Response [200]>]\n    >>> # Each item in the results list is a response object and can be interacted with as such\n    >>> for result in results:\n    ...     print(result.html.url)\n    ...\n    https://www.python.org/\n    https://www.google.com/\n    https://www.reddit.com/\n\nNote that the order of the objects in the results list represents the order they were returned in, not the order that the coroutines are passed to the ``run`` method, which is shown in the example by the order being different.\n\nGrab a list of all links on the page, as–is (anchors excluded):\n\n.. code-block:: pycon\n\n    >>> r.html.links\n    {'//docs.python.org/3/tutorial/', '/about/apps/', 'https://github.com/python/pythondotorg/issues', '/accounts/login/', '/dev/peps/', '/about/legal/', '//docs.python.org/3/tutorial/introduction.html#lists', '/download/alternatives', 'http://feedproxy.google.com/~r/PythonInsider/~3/kihd2DW98YY/python-370a4-is-available-for-testing.html', '/download/other/', '/downloads/windows/', 'https://mail.python.org/mailman/listinfo/python-dev', '/doc/av', 'https://devguide.python.org/', '/about/success/#engineering', 'https://wiki.python.org/moin/PythonEventsCalendar#Submitting_an_Event', 'https://www.openstack.org', '/about/gettingstarted/', 'http://feedproxy.google.com/~r/PythonInsider/~3/AMoBel8b8Mc/python-3.html', '/success-stories/industrial-light-magic-runs-python/', 'http://docs.python.org/3/tutorial/introduction.html#using-python-as-a-calculator', '/', 'http://pyfound.blogspot.com/', '/events/python-events/past/', '/downloads/release/python-2714/', 'https://wiki.python.org/moin/PythonBooks', 'http://plus.google.com/+Python', 'https://wiki.python.org/moin/', 'https://status.python.org/', '/community/workshops/', '/community/lists/', 'http://buildbot.net/', '/community/awards', 'http://twitter.com/ThePSF', 'https://docs.python.org/3/license.html', '/psf/donations/', 'http://wiki.python.org/moin/Languages', '/dev/', '/events/python-user-group/', 'https://wiki.qt.io/PySide', '/community/sigs/', 'https://wiki.gnome.org/Projects/PyGObject', 'http://www.ansible.com', 'http://www.saltstack.com', 'http://planetpython.org/', '/events/python-events', '/about/help/', '/events/python-user-group/past/', '/about/success/', '/psf-landing/', '/about/apps', '/about/', 'http://www.wxpython.org/', '/events/python-user-group/665/', 'https://www.python.org/psf/codeofconduct/', '/dev/peps/peps.rss', '/downloads/source/', '/psf/sponsorship/sponsors/', 'http://bottlepy.org', 'http://roundup.sourceforge.net/', 'http://pandas.pydata.org/', 'http://brochure.getpython.info/', 'https://bugs.python.org/', '/community/merchandise/', 'http://tornadoweb.org', '/events/python-user-group/650/', 'http://flask.pocoo.org/', '/downloads/release/python-364/', '/events/python-user-group/660/', '/events/python-user-group/638/', '/psf/', '/doc/', 'http://blog.python.org', '/events/python-events/604/', '/about/success/#government', 'http://python.org/dev/peps/', 'https://docs.python.org', 'http://feedproxy.google.com/~r/PythonInsider/~3/zVC80sq9s00/python-364-is-now-available.html', '/users/membership/', '/about/success/#arts', 'https://wiki.python.org/moin/Python2orPython3', '/downloads/', '/jobs/', 'http://trac.edgewall.org/', 'http://feedproxy.google.com/~r/PythonInsider/~3/wh73_1A-N7Q/python-355rc1-and-python-348rc1-are-now.html', '/privacy/', 'https://pypi.python.org/', 'http://www.riverbankcomputing.co.uk/software/pyqt/intro', 'http://www.scipy.org', '/community/forums/', '/about/success/#scientific', '/about/success/#software-development', '/shell/', '/accounts/signup/', 'http://www.facebook.com/pythonlang?fref=ts', '/community/', 'https://kivy.org/', '/about/quotes/', 'http://www.web2py.com/', '/community/logos/', '/community/diversity/', '/events/calendars/', 'https://wiki.python.org/moin/BeginnersGuide', '/success-stories/', '/doc/essays/', '/dev/core-mentorship/', 'http://ipython.org', '/events/', '//docs.python.org/3/tutorial/controlflow.html', '/about/success/#education', '/blogs/', '/community/irc/', 'http://pycon.blogspot.com/', '//jobs.python.org', 'http://www.pylonsproject.org/', 'http://www.djangoproject.com/', '/downloads/mac-osx/', '/about/success/#business', 'http://feedproxy.google.com/~r/PythonInsider/~3/x_c9D0S-4C4/python-370b1-is-now-available-for.html', 'http://wiki.python.org/moin/TkInter', 'https://docs.python.org/faq/', '//docs.python.org/3/tutorial/controlflow.html#defining-functions'}\n\nGrab a list of all links on the page, in absolute form (anchors excluded):\n\n.. code-block:: pycon\n\n    >>> r.html.absolute_links\n    {'https://github.com/python/pythondotorg/issues', 'https://docs.python.org/3/tutorial/', 'https://www.python.org/about/success/', 'http://feedproxy.google.com/~r/PythonInsider/~3/kihd2DW98YY/python-370a4-is-available-for-testing.html', 'https://www.python.org/dev/peps/', 'https://mail.python.org/mailman/listinfo/python-dev', 'https://www.python.org/doc/', 'https://www.python.org/', 'https://www.python.org/about/', 'https://www.python.org/events/python-events/past/', 'https://devguide.python.org/', 'https://wiki.python.org/moin/PythonEventsCalendar#Submitting_an_Event', 'https://www.openstack.org', 'http://feedproxy.google.com/~r/PythonInsider/~3/AMoBel8b8Mc/python-3.html', 'https://docs.python.org/3/tutorial/introduction.html#lists', 'http://docs.python.org/3/tutorial/introduction.html#using-python-as-a-calculator', 'http://pyfound.blogspot.com/', 'https://wiki.python.org/moin/PythonBooks', 'http://plus.google.com/+Python', 'https://wiki.python.org/moin/', 'https://www.python.org/events/python-events', 'https://status.python.org/', 'https://www.python.org/about/apps', 'https://www.python.org/downloads/release/python-2714/', 'https://www.python.org/psf/donations/', 'http://buildbot.net/', 'http://twitter.com/ThePSF', 'https://docs.python.org/3/license.html', 'http://wiki.python.org/moin/Languages', 'https://docs.python.org/faq/', 'https://jobs.python.org', 'https://www.python.org/about/success/#software-development', 'https://www.python.org/about/success/#education', 'https://www.python.org/community/logos/', 'https://www.python.org/doc/av', 'https://wiki.qt.io/PySide', 'https://www.python.org/events/python-user-group/660/', 'https://wiki.gnome.org/Projects/PyGObject', 'http://www.ansible.com', 'http://www.saltstack.com', 'https://www.python.org/dev/peps/peps.rss', 'http://planetpython.org/', 'https://www.python.org/events/python-user-group/past/', 'https://docs.python.org/3/tutorial/controlflow.html#defining-functions', 'https://www.python.org/community/diversity/', 'https://docs.python.org/3/tutorial/controlflow.html', 'https://www.python.org/community/awards', 'https://www.python.org/events/python-user-group/638/', 'https://www.python.org/about/legal/', 'https://www.python.org/dev/', 'https://www.python.org/download/alternatives', 'https://www.python.org/downloads/', 'https://www.python.org/community/lists/', 'http://www.wxpython.org/', 'https://www.python.org/about/success/#government', 'https://www.python.org/psf/', 'https://www.python.org/psf/codeofconduct/', 'http://bottlepy.org', 'http://roundup.sourceforge.net/', 'http://pandas.pydata.org/', 'http://brochure.getpython.info/', 'https://www.python.org/downloads/source/', 'https://bugs.python.org/', 'https://www.python.org/downloads/mac-osx/', 'https://www.python.org/about/help/', 'http://tornadoweb.org', 'http://flask.pocoo.org/', 'https://www.python.org/users/membership/', 'http://blog.python.org', 'https://www.python.org/privacy/', 'https://www.python.org/about/gettingstarted/', 'http://python.org/dev/peps/', 'https://www.python.org/about/apps/', 'https://docs.python.org', 'https://www.python.org/success-stories/', 'https://www.python.org/community/forums/', 'http://feedproxy.google.com/~r/PythonInsider/~3/zVC80sq9s00/python-364-is-now-available.html', 'https://www.python.org/community/merchandise/', 'https://www.python.org/about/success/#arts', 'https://wiki.python.org/moin/Python2orPython3', 'http://trac.edgewall.org/', 'http://feedproxy.google.com/~r/PythonInsider/~3/wh73_1A-N7Q/python-355rc1-and-python-348rc1-are-now.html', 'https://pypi.python.org/', 'https://www.python.org/events/python-user-group/650/', 'http://www.riverbankcomputing.co.uk/software/pyqt/intro', 'https://www.python.org/about/quotes/', 'https://www.python.org/downloads/windows/', 'https://www.python.org/events/calendars/', 'http://www.scipy.org', 'https://www.python.org/community/workshops/', 'https://www.python.org/blogs/', 'https://www.python.org/accounts/signup/', 'https://www.python.org/events/', 'https://kivy.org/', 'http://www.facebook.com/pythonlang?fref=ts', 'http://www.web2py.com/', 'https://www.python.org/psf/sponsorship/sponsors/', 'https://www.python.org/community/', 'https://www.python.org/download/other/', 'https://www.python.org/psf-landing/', 'https://www.python.org/events/python-user-group/665/', 'https://wiki.python.org/moin/BeginnersGuide', 'https://www.python.org/accounts/login/', 'https://www.python.org/downloads/release/python-364/', 'https://www.python.org/dev/core-mentorship/', 'https://www.python.org/about/success/#business', 'https://www.python.org/community/sigs/', 'https://www.python.org/events/python-user-group/', 'http://ipython.org', 'https://www.python.org/shell/', 'https://www.python.org/community/irc/', 'https://www.python.org/about/success/#engineering', 'http://www.pylonsproject.org/', 'http://pycon.blogspot.com/', 'https://www.python.org/about/success/#scientific', 'https://www.python.org/doc/essays/', 'http://www.djangoproject.com/', 'https://www.python.org/success-stories/industrial-light-magic-runs-python/', 'http://feedproxy.google.com/~r/PythonInsider/~3/x_c9D0S-4C4/python-370b1-is-now-available-for.html', 'http://wiki.python.org/moin/TkInter', 'https://www.python.org/jobs/', 'https://www.python.org/events/python-events/604/'}\n\nSelect an element with a CSS Selector:\n\n.. code-block:: pycon\n\n    >>> about = r.html.find('#about', first=True)\n\nGrab an element's text contents:\n\n.. code-block:: pycon\n\n    >>> print(about.text)\n    About\n    Applications\n    Quotes\n    Getting Started\n    Help\n    Python Brochure\n\nIntrospect an Element's attributes:\n\n.. code-block:: pycon\n\n    >>> about.attrs\n    {'id': 'about', 'class': ('tier-1', 'element-1'), 'aria-haspopup': 'true'}\n\nRender out an Element's HTML:\n\n.. code-block:: pycon\n\n    >>> about.html\n    '<li aria-haspopup=\"true\" class=\"tier-1 element-1 \" id=\"about\">\\n<a class=\"\" href=\"/about/\" title=\"\">About</a>\\n<ul aria-hidden=\"true\" class=\"subnav menu\" role=\"menu\">\\n<li class=\"tier-2 element-1\" role=\"treeitem\"><a href=\"/about/apps/\" title=\"\">Applications</a></li>\\n<li class=\"tier-2 element-2\" role=\"treeitem\"><a href=\"/about/quotes/\" title=\"\">Quotes</a></li>\\n<li class=\"tier-2 element-3\" role=\"treeitem\"><a href=\"/about/gettingstarted/\" title=\"\">Getting Started</a></li>\\n<li class=\"tier-2 element-4\" role=\"treeitem\"><a href=\"/about/help/\" title=\"\">Help</a></li>\\n<li class=\"tier-2 element-5\" role=\"treeitem\"><a href=\"http://brochure.getpython.info/\" title=\"\">Python Brochure</a></li>\\n</ul>\\n</li>'\n\n\n\nSelect Elements within Elements:\n\n.. code-block:: pycon\n\n    >>> about.find('a')\n    [<Element 'a' href='/about/' title='' class=''>, <Element 'a' href='/about/apps/' title=''>, <Element 'a' href='/about/quotes/' title=''>, <Element 'a' href='/about/gettingstarted/' title=''>, <Element 'a' href='/about/help/' title=''>, <Element 'a' href='http://brochure.getpython.info/' title=''>]\n\nSearch for links within an element:\n\n.. code-block:: pycon\n\n    >>> about.absolute_links\n    {'http://brochure.getpython.info/', 'https://www.python.org/about/gettingstarted/', 'https://www.python.org/about/', 'https://www.python.org/about/quotes/', 'https://www.python.org/about/help/', 'https://www.python.org/about/apps/'}\n\n\nSearch for text on the page:\n\n.. code-block:: pycon\n\n    >>> r.html.search('Python is a {} language')[0]\n    programming\n\nMore complex CSS Selector example (copied from Chrome dev tools):\n\n.. code-block:: pycon\n\n    >>> r = session.get('https://github.com/')\n    >>> sel = 'body > div.application-main > div.jumbotron.jumbotron-codelines > div > div > div.col-md-7.text-center.text-md-left > p'\n    >>> print(r.html.find(sel, first=True).text)\n    GitHub is a development platform inspired by the way you work. From open source to business, you can host and review code, manage projects, and build software alongside millions of other developers.\n\nXPath is also supported:\n\n.. code-block:: pycon\n\n   >>> r.html.xpath('/html/body/div[1]/a')\n   [<Element 'a' class=('px-2', 'py-4', 'show-on-focus', 'js-skip-to-content') href='#start-of-content' tabindex='1'>]\n\n\nJavaScript Support\n==================\n\nLet's grab some text that's rendered by JavaScript. Until 2020, the Python 2.7 countdown clock (https://pythonclock.org) will serve as a good test page:\n\n.. code-block:: pycon\n\n    >>> r = session.get('https://pythonclock.org')\n\nLet's try and see the dynamically rendered code (The countdown clock). To do that quickly at first, we'll search between the last text we see before it ('Python 2.7 will retire in...') and the first text we see after it ('Enable Guido Mode').\n\n.. code-block:: pycon\n\n\t>>> r.html.search('Python 2.7 will retire in...{}Enable Guido Mode')[0]\n\t'</h1>\\n        </div>\\n        <div class=\"python-27-clock\"></div>\\n        <div class=\"center\">\\n            <div class=\"guido-button-block\">\\n                <button class=\"js-guido-mode guido-button\">'\n\nNotice the clock is missing. The ``render()`` method takes the response and renders the dynamic content just like a web browser would.\n\n.. code-block:: pycon\n\n    >>> r.html.render()\n    >>> r.html.search('Python 2.7 will retire in...{}Enable Guido Mode')[0]\n    '</h1>\\n        </div>\\n        <div class=\"python-27-clock is-countdown\"><span class=\"countdown-row countdown-show6\"><span class=\"countdown-section\"><span class=\"countdown-amount\">1</span><span class=\"countdown-period\">Year</span></span><span class=\"countdown-section\"><span class=\"countdown-amount\">2</span><span class=\"countdown-period\">Months</span></span><span class=\"countdown-section\"><span class=\"countdown-amount\">28</span><span class=\"countdown-period\">Days</span></span><span class=\"countdown-section\"><span class=\"countdown-amount\">16</span><span class=\"countdown-period\">Hours</span></span><span class=\"countdown-section\"><span class=\"countdown-amount\">52</span><span class=\"countdown-period\">Minutes</span></span><span class=\"countdown-section\"><span class=\"countdown-amount\">46</span><span class=\"countdown-period\">Seconds</span></span></span></div>\\n        <div class=\"center\">\\n            <div class=\"guido-button-block\">\\n                <button class=\"js-guido-mode guido-button\">'\n\nLet's clean it up a bit. This step is not needed, it just makes it a bit easier to visualize the returned html to see what we need to target to extract our required information.\n\n.. code-block:: pycon\n\n\t>>> from pprint import pprint\n\t>>> pprint(r.html.search('Python 2.7 will retire in...{}Enable')[0])\n\t('</h1>\\n'\n '        </div>\\n'\n '        <div class=\"python-27-clock is-countdown\"><span class=\"countdown-row '\n 'countdown-show6\"><span class=\"countdown-section\"><span '\n 'class=\"countdown-amount\">1</span><span '\n 'class=\"countdown-period\">Year</span></span><span '\n 'class=\"countdown-section\"><span class=\"countdown-amount\">2</span><span '\n 'class=\"countdown-period\">Months</span></span><span '\n 'class=\"countdown-section\"><span class=\"countdown-amount\">28</span><span '\n 'class=\"countdown-period\">Days</span></span><span '\n 'class=\"countdown-section\"><span class=\"countdown-amount\">16</span><span '\n 'class=\"countdown-period\">Hours</span></span><span '\n 'class=\"countdown-section\"><span class=\"countdown-amount\">52</span><span '\n 'class=\"countdown-period\">Minutes</span></span><span '\n 'class=\"countdown-section\"><span class=\"countdown-amount\">46</span><span '\n 'class=\"countdown-period\">Seconds</span></span></span></div>\\n'\n '        <div class=\"center\">\\n'\n '            <div class=\"guido-button-block\">\\n'\n '                <button class=\"js-guido-mode guido-button\">')\n\nThe rendered html has all the same methods and attributes as above. Let's extract just the data that we want out of the clock into something easy to use elsewhere and introspect like a dictionary.\n\n.. code-block:: pycon\n\n\t>>> periods = [element.text for element in r.html.find('.countdown-period')]\n\t>>> amounts = [element.text for element in r.html.find('.countdown-amount')]\n\t>>> countdown_data = dict(zip(periods, amounts))\n\t>>> countdown_data\n\t{'Year': '1', 'Months': '2', 'Days': '5', 'Hours': '23', 'Minutes': '34', 'Seconds': '37'}\n\nOr you can do this async also:\n\n.. code-block:: pycon\n\n    >>> async def get_pyclock():\n    ...     r = await asession.get('https://pythonclock.org/')\n    ...     await r.html.arender()\n    ...     return r\n    ...\n    >>> results = asession.run(get_pyclock, get_pyclock, get_pyclock)\n\nThe rest of the code operates the same way as the synchronous version except that\n``results`` is a list containing multiple response objects however the same basic\nprocesses can be applied as above to extract the data you want.\n\nNote, the first time you ever run the ``render()`` method, it will download\nChromium into your home directory (e.g. ``~/.pyppeteer/``). This only happens\nonce.\n\nUsing without httpx\n===================\n\nYou can also use this library without httpx:\n\n.. code-block:: pycon\n\n    >>> from httpx_html import HTML\n    >>> doc = \"\"\"<a href='https://httpbin.org'>\"\"\"\n    >>> html = HTML(html=doc)\n    >>> html.links\n    {'https://httpbin.org'}\n\n\nInstallation\n============\n\n.. code-block:: shell\n\n    $ pip install httpx-html\n\nOnly **Python 3.6 and above** is supported.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nuno-andre/httpx-html",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Nuno André",
    "maintainer_email": "mail@nunoand.re",
    "name": "httpx-html",
    "package_url": "https://pypi.org/project/httpx-html/",
    "platform": "any",
    "project_url": "https://pypi.org/project/httpx-html/",
    "project_urls": {
      "Bug Tracker": "https://github.com/nuno-andre/httpx-html/issues",
      "Homepage": "https://github.com/nuno-andre/httpx-html",
      "Source": "https://github.com/nuno-andre/httpx-html"
    },
    "release_url": "https://pypi.org/project/httpx-html/0.11.0.dev0/",
    "requires_dist": [
      "httpx",
      "pyquery",
      "fake-useragent",
      "parse",
      "beautifulsoup4",
      "w3lib",
      "pyppeteer (>=0.0.14)",
      "mypy ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "sphinx ; extra == 'docs'",
      "pytest ; extra == 'tests'",
      "pytest-asyncio ; extra == 'tests'",
      "requests-file ; extra == 'tests'"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Web Scraping for Humans.",
    "version": "0.11.0.dev0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11576123,
  "releases": {
    "0.11.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18034d76bc836c70e3d3a6e4b2a73d7cb5c3dad1eaf5da1f8e543a9c46dddbf2",
          "md5": "1ccc76683aa35cde6fafa570dc3e1e6a",
          "sha256": "581e7ef98a889654aaaf5e59bf7f2feb06a8e2437eadcbc17d4f6703abdef470"
        },
        "downloads": -1,
        "filename": "httpx_html-0.11.0.dev0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ccc76683aa35cde6fafa570dc3e1e6a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 15548,
        "upload_time": "2021-09-28T21:51:50",
        "upload_time_iso_8601": "2021-09-28T21:51:50.966322Z",
        "url": "https://files.pythonhosted.org/packages/18/03/4d76bc836c70e3d3a6e4b2a73d7cb5c3dad1eaf5da1f8e543a9c46dddbf2/httpx_html-0.11.0.dev0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da4c0e6827d1418628529e61ff2b0253408c348172dd29db57abc24019be9f38",
          "md5": "c46477c8d37444cc6715d8a639d63bb2",
          "sha256": "125898d0213177c32344cc6ba9f74476893dbe97eabc6b6b0e992b28f9cb99ea"
        },
        "downloads": -1,
        "filename": "httpx_html-0.11.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c46477c8d37444cc6715d8a639d63bb2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 15543,
        "upload_time": "2021-09-28T21:43:52",
        "upload_time_iso_8601": "2021-09-28T21:43:52.409538Z",
        "url": "https://files.pythonhosted.org/packages/da/4c/0e6827d1418628529e61ff2b0253408c348172dd29db57abc24019be9f38/httpx_html-0.11.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7951f6a0fd126ed1617d047d253d16116fe4e270783612b9cce26dc0f88c31c",
          "md5": "0483ebadeedefbb12910d64227f5da00",
          "sha256": "0cc2bf42ef3ddb2f315d8425d483ff5c92450ca1e3da5887c85ac4b81db0d50d"
        },
        "downloads": -1,
        "filename": "httpx-html-0.11.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "0483ebadeedefbb12910d64227f5da00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 18664,
        "upload_time": "2021-09-28T21:43:54",
        "upload_time_iso_8601": "2021-09-28T21:43:54.664885Z",
        "url": "https://files.pythonhosted.org/packages/f7/95/1f6a0fd126ed1617d047d253d16116fe4e270783612b9cce26dc0f88c31c/httpx-html-0.11.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18034d76bc836c70e3d3a6e4b2a73d7cb5c3dad1eaf5da1f8e543a9c46dddbf2",
        "md5": "1ccc76683aa35cde6fafa570dc3e1e6a",
        "sha256": "581e7ef98a889654aaaf5e59bf7f2feb06a8e2437eadcbc17d4f6703abdef470"
      },
      "downloads": -1,
      "filename": "httpx_html-0.11.0.dev0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1ccc76683aa35cde6fafa570dc3e1e6a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6.0",
      "size": 15548,
      "upload_time": "2021-09-28T21:51:50",
      "upload_time_iso_8601": "2021-09-28T21:51:50.966322Z",
      "url": "https://files.pythonhosted.org/packages/18/03/4d76bc836c70e3d3a6e4b2a73d7cb5c3dad1eaf5da1f8e543a9c46dddbf2/httpx_html-0.11.0.dev0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da4c0e6827d1418628529e61ff2b0253408c348172dd29db57abc24019be9f38",
        "md5": "c46477c8d37444cc6715d8a639d63bb2",
        "sha256": "125898d0213177c32344cc6ba9f74476893dbe97eabc6b6b0e992b28f9cb99ea"
      },
      "downloads": -1,
      "filename": "httpx_html-0.11.0.dev0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c46477c8d37444cc6715d8a639d63bb2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 15543,
      "upload_time": "2021-09-28T21:43:52",
      "upload_time_iso_8601": "2021-09-28T21:43:52.409538Z",
      "url": "https://files.pythonhosted.org/packages/da/4c/0e6827d1418628529e61ff2b0253408c348172dd29db57abc24019be9f38/httpx_html-0.11.0.dev0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7951f6a0fd126ed1617d047d253d16116fe4e270783612b9cce26dc0f88c31c",
        "md5": "0483ebadeedefbb12910d64227f5da00",
        "sha256": "0cc2bf42ef3ddb2f315d8425d483ff5c92450ca1e3da5887c85ac4b81db0d50d"
      },
      "downloads": -1,
      "filename": "httpx-html-0.11.0.dev0.tar.gz",
      "has_sig": false,
      "md5_digest": "0483ebadeedefbb12910d64227f5da00",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 18664,
      "upload_time": "2021-09-28T21:43:54",
      "upload_time_iso_8601": "2021-09-28T21:43:54.664885Z",
      "url": "https://files.pythonhosted.org/packages/f7/95/1f6a0fd126ed1617d047d253d16116fe4e270783612b9cce26dc0f88c31c/httpx-html-0.11.0.dev0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}