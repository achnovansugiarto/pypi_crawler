{
  "info": {
    "author": "iceiceice",
    "author_email": "597952291@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "#### WeChatWorkTool\nWechatworktool is a Django app,which is used to facilitate the internal application development of enterprise wechat and call enterprise wechat interface faster\n#### Quick start\nInstall `pip install django-wechatwork-tool`\n1. Add \"WeChatWorkTool\" to your INSTALLED_APPS setting like this:\n    ```python \n    # setting.py\n    INSTALLED_APPS = [\n        ...\n        'WeChatWorkTool',\n        ...\n    ]\n    ```\n2. Run python manage.py migrate to create the AccessToken models.\n3. Start the development server and visit http://127.0.0.1:8000/admin/ to create a AccessToken (need WeChatWork's corpid and an app secret of WeChatWork)\n4. Call where needed:\n    ```python\n    ...\n    from WeChatWorkTool import tool\n    ...\n    app=tool.CorpApp('sap')\n    print(app.app_info())\n    # Details of WeChatWork internal applications\n    print(app.get_user('FS0397'))\n    # Get employee details through employee ID\n    ```\n5. Application verification and callback example\n    ```python\n    import json\n    from django.http import HttpResponse\n    from django.views.decorators.csrf import csrf_exempt\n\n    from WeChatWorkTool import tool\n\n\n    @csrf_exempt\n    def call_back(request):\n        \"\"\"WeChatWork messqge callback Simple Example\"\"\"\n        if request.method == 'GET':\n            # Authentication  url\n            data = request.GET.dict()\n            return HttpResponse(tool.call_back_verify(data, 'sap'))\n\n        if request.method == 'POST':\n            url_data = request.GET.dict()\n            cb = tool.CorpApp('sap').call_back_data(url_data, request.body)\n            return HttpResponse(json.dumps(cb), content_type=\"application/json\")\n    ```\n\n#### WeChatWorkTool\nCorpApp: WeChatWorks custom application\n```python\ndef app_info(self):\n    \"\"\"\n    get this app info\n    :return: App Info\n    \"\"\"\n\ndef get_userid_by_code(self, code):\n    \"\"\"get userid by code锛孖t's just for webpage authorization link\n\n    :param code: in webpage authorization link\n    :return:UserId\n    \"\"\"\n\ndef get_user(self, userid):\n    \"\"\"get user info\n\n    :param userid: WeChatWork user's id\n    :return: a dict that user info\n    \"\"\"\n\ndef get_user_tag_list(self):\n    \"\"\"get user tag list\n\n    :return: user tag list\n    \"\"\"\n\ndef get_department_user_simplelist(self, department_id, fetch_child=False):\n    \"\"\"get user simplelist by department id\n\n    :param department_id:\n    :param fetch_child:\n    :return\n        For success example:\n            {\n                \"errcode\" : 0,\n                \"errmsg\" : \"ok\",\n                \"invaliduser\" :\"\",\n                \"invalidparty\" : \"\",\n                \"invalidtag\": \"\"\n            }\n\n        For error example:\n            {\n                \"errcode\" : 0,\n                \"errmsg\" : \"ok\",\n                \"invaliduser\" : [userid1,userid2],\n                \"invalidparty\" : [partyid1,partyid2],\n                \"invalidtag\": [tagid1,tagid2]\n            }\n    \"\"\"\n\ndef get_department_user_list(self, department_id, fetch_child=False):\n    \"\"\"get user list by department id\n\n    :param department_id:\n    :param fetch_child:\n    :return:\n    \"\"\"\n\ndef get_department(self, id):\n    \"\"\"get department info list\n\n    :param id: WeChatWork department's id\n    :return:\n    \"\"\"\n\ndef SendMsg(self, msgobj, touser: list = [], toparty: list = [], totag: list = [],\n            safe=0, enable_id_trans=0,\n            enable_duplicate_check=0,\n            duplicate_check_interval=1800):\n    \"\"\"\n\n    :param touser:\n    :param toparty:\n    :param totag:\n    :param msgobj:\n    :param safe:\n    :param enable_id_trans:\n    :param enable_duplicate_check:\n    :param duplicate_check_interval:\n    :return:\n    \"\"\"\n```\n#### Massage object\nThe message type corresponds to the message type of WeChatWork\n1. TextMessageObject\n2. MediaMessageObject\n3. TextCardMessageObject \n4. NewsMessageObject\n5. MarkDownMessageObject\n6. TaskCardBtnTemplate\n7. TaskCardMessageObject\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zxj17815/wechatwork-tool",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-wechatwork-tool",
    "package_url": "https://pypi.org/project/django-wechatwork-tool/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-wechatwork-tool/",
    "project_urls": {
      "Homepage": "https://github.com/zxj17815/wechatwork-tool"
    },
    "release_url": "https://pypi.org/project/django-wechatwork-tool/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Wechatworktool is a Django app",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8509364,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2c92f83d22a56f84039693304505fd3b04736642fdb4ad659360e3fc94c2e2d",
          "md5": "63c940f9dd196de16a5b31e2c690d68f",
          "sha256": "4c6c3bdd03b318872e6fbbaae1d3d4e8ec691a506c7cf2954a370eee89bb44c2"
        },
        "downloads": -1,
        "filename": "django_wechatwork_tool-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63c940f9dd196de16a5b31e2c690d68f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14887,
        "upload_time": "2020-10-27T05:23:11",
        "upload_time_iso_8601": "2020-10-27T05:23:11.119328Z",
        "url": "https://files.pythonhosted.org/packages/b2/c9/2f83d22a56f84039693304505fd3b04736642fdb4ad659360e3fc94c2e2d/django_wechatwork_tool-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "208cb0c59004ac622d386e949f883a55fde7e01f7d5c0259e57eb144a4dbe0dd",
          "md5": "ba48f23524002e6ddd0e8ba622441937",
          "sha256": "385c0ba9e3324ecd65984ffe68c2c44c7631ebecd1a1e28d3e5a45ceb0228e69"
        },
        "downloads": -1,
        "filename": "django-wechatwork-tool-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ba48f23524002e6ddd0e8ba622441937",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11371,
        "upload_time": "2020-10-27T05:23:12",
        "upload_time_iso_8601": "2020-10-27T05:23:12.747491Z",
        "url": "https://files.pythonhosted.org/packages/20/8c/b0c59004ac622d386e949f883a55fde7e01f7d5c0259e57eb144a4dbe0dd/django-wechatwork-tool-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b2c92f83d22a56f84039693304505fd3b04736642fdb4ad659360e3fc94c2e2d",
        "md5": "63c940f9dd196de16a5b31e2c690d68f",
        "sha256": "4c6c3bdd03b318872e6fbbaae1d3d4e8ec691a506c7cf2954a370eee89bb44c2"
      },
      "downloads": -1,
      "filename": "django_wechatwork_tool-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "63c940f9dd196de16a5b31e2c690d68f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 14887,
      "upload_time": "2020-10-27T05:23:11",
      "upload_time_iso_8601": "2020-10-27T05:23:11.119328Z",
      "url": "https://files.pythonhosted.org/packages/b2/c9/2f83d22a56f84039693304505fd3b04736642fdb4ad659360e3fc94c2e2d/django_wechatwork_tool-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "208cb0c59004ac622d386e949f883a55fde7e01f7d5c0259e57eb144a4dbe0dd",
        "md5": "ba48f23524002e6ddd0e8ba622441937",
        "sha256": "385c0ba9e3324ecd65984ffe68c2c44c7631ebecd1a1e28d3e5a45ceb0228e69"
      },
      "downloads": -1,
      "filename": "django-wechatwork-tool-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ba48f23524002e6ddd0e8ba622441937",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11371,
      "upload_time": "2020-10-27T05:23:12",
      "upload_time_iso_8601": "2020-10-27T05:23:12.747491Z",
      "url": "https://files.pythonhosted.org/packages/20/8c/b0c59004ac622d386e949f883a55fde7e01f7d5c0259e57eb144a4dbe0dd/django-wechatwork-tool-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}