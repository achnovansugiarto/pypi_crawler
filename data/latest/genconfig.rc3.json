{
  "info": {
    "author": "Ling",
    "author_email": "lingjie@u.nus.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# GenConfig\n\n[![package](https://github.com/lingjie00/genconfig/actions/workflows/project-actions.yml/badge.svg)](https://github.com/lingjie00/genconfig/actions/workflows/project-actions.yml)\n\nManage config using folder structure, currently support Json and Yaml.\n\n\n<!-- vim-markdown-toc GFM -->\n\n* [Installation](#installation)\n* [Example usage](#example-usage)\n* [Project overview](#project-overview)\n* [Usage](#usage)\n    * [Parameters](#parameters)\n\n<!-- vim-markdown-toc -->\n\n# Installation\n\n```bash\npip install genconfig\n```\n\n# Example usage\n\n1. Arrange the config files into folders, sub-folders, and files.\n\n    ```\n    sample-config/config-mix/\n    ├── basic.yml\n    ├── function\n    │   ├── function1.json\n    │   └── function2.yml\n    ├── param.yml\n    └── pipeline.json\n\n    1 directory, 5 files\n    ```\n\n2. Run the `genconfig`\n\n    ```bash\n    genconfig sample-config/config-mix -o config.json\n    ```\n\n3. Retrieve a single merged config\n\n    ```\n    {\n        \"name\": \"config-01\",\n        \"training\": true,\n        \"parameters\": {\n            \"num_nodes\": 200,\n            \"num_samples\": 100,\n            \"max_time\": 40\n        },\n        \"function\": {\n            \"function1\": {\n                \"name\": \"transform\",\n                \"param\": \"col1\"\n            },\n            \"function2\": {\n                \"name\": \"load\",\n                \"param\": \"col\"\n            }\n        },\n        \"pipeline\": [\n            {\n                \"name\": \"extraction\",\n                \"function\": \"etl.extraction\"\n            },\n            {\n                \"name\": \"training\",\n                \"function\": \"model.training\"\n            },\n            {\n                \"name\": \"evaluation\",\n                \"function\": \"model.evaluation\"\n            },\n            {\n                \"name\": \"deployment\",\n                \"function\": \"cloud.deploy\"\n            }\n        ]\n    }\n    ```\n\n# Project overview\n\nThe dream of a mature project is to cover most of the essential functions, and\nthe interactions users would require is to modify the configuration files\nbased on specific needs. For example, a user running model training for a new\nregion A does not need to write any new codes, instead simply modifying the\nconfiguration files.\n\nHowever, as the project grows, so does the configuration file. There are various\nsettings region A would require but not all of them need constant updates.\nTherefore, having a programmatic way to update the configuration files and to\ndisplay them in an easy-to-understand format is crucial.\n\nI propose to present the configuration files in a folder structure. The root\nfolder represents the first level keys in the configs, and the subfolders\nrepresent nested keys.\n\nFurthermore, we should allow both json and yaml config files. Json is easy to\ncreate while yaml allows comments and variables creation. Both Json and yaml\nhave their advantages.\n\nThe API documentation is available at\n[https://lingjie00.github.io/genconfig/](https://lingjie00.github.io/genconfig/)\n\nThe GitHub repo is at [https://github.com/lingjie00/genconfig](https://github.com/lingjie00/genconfig)\n\n# Usage\n\n1. Convert a folder structure into a single json config file\n    ```bash\n    genconfig --path=folder_path --output=\"config.json\"\n    ```\n\n## Parameters\n\n- ignored\n    - User can choose to ignore some keys and not expand into sub-folders\n    ```bash\n    # supports regex matching\n    genconfig config_path -o config.json --ignore \"config1.json\" \"config2.yaml\" \"debug.*json\"\n    ```\n- keep\n    - Different from ignored, instead read only files with matching file name\n    ```bash\n    # supports regex matching\n    genconfig config_path -o config.json --keep \"only_this_config.yaml\"\n    ```\n- verbose\n    - the level of logging to display\n    ```bash\n    # refer to python logging for acceptable levels\n    genconfig config_path -o config.json --verbose \"DEBUG\"\n    ```\n- append\n    - useful for manual replace/update values\n    ```bash\n    # input has to be in json format\n    genconfig config_path -o config.json --append \"{'name': 'updated_name'}\"\n    ```\n- read\n    - Useful when there is a mixture of config file types but only want to read\n      a specific file type\n    ```bash\n    genconfig config_path -o config.json --read \"json\"\n    ```\n- folder\n    - useful to ignore folder names as key, then user can arrange config files\n      in any subfolders without worrying about nested keys\n    ```bash\n    genconfig config_path -o config.json --folder False\n    ```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lingjie00/genconfig",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "genconfig",
    "package_url": "https://pypi.org/project/genconfig/",
    "platform": null,
    "project_url": "https://pypi.org/project/genconfig/",
    "project_urls": {
      "Bug Tracker": "https://github.com/lingjie00/genconfig/issues",
      "Homepage": "https://github.com/lingjie00/genconfig"
    },
    "release_url": "https://pypi.org/project/genconfig/1.4.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Manage Json and Yaml config using folder structure",
    "version": "1.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15752054,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "986a8192629af876d087ef1e91473b1f0e665a0342376cd8039caab857afeb7d",
          "md5": "65d4e10345bea1d9accfac623ae7641f",
          "sha256": "dd7db462b5b7d62c4a2d39a182848945b9b802f7c14f1fd6b02c46d3417037ab"
        },
        "downloads": -1,
        "filename": "genconfig-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "65d4e10345bea1d9accfac623ae7641f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20038,
        "upload_time": "2022-10-23T06:53:42",
        "upload_time_iso_8601": "2022-10-23T06:53:42.528893Z",
        "url": "https://files.pythonhosted.org/packages/98/6a/8192629af876d087ef1e91473b1f0e665a0342376cd8039caab857afeb7d/genconfig-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b530f478289e809ed3d25a15022141dbaff583f5c7411ac48c38bcc71df942c",
          "md5": "f2227b529143471841670b2db547dcbe",
          "sha256": "209c4a1efc8f85f27e53dc747761f67ba47e30bad0ccf16b745ccc4886bb2bae"
        },
        "downloads": -1,
        "filename": "genconfig-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f2227b529143471841670b2db547dcbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20050,
        "upload_time": "2022-10-23T07:40:07",
        "upload_time_iso_8601": "2022-10-23T07:40:07.271382Z",
        "url": "https://files.pythonhosted.org/packages/0b/53/0f478289e809ed3d25a15022141dbaff583f5c7411ac48c38bcc71df942c/genconfig-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f069b33135c0449095203110a8bd28015ef1e392d0a3263bc85594fffb10f369",
          "md5": "07b633c2819461fc59d0a81a8a7631db",
          "sha256": "482a83c35579b2f59e6276124000ba1e096077bc6580e8848c8a6739a19e2b71"
        },
        "downloads": -1,
        "filename": "genconfig-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "07b633c2819461fc59d0a81a8a7631db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20230,
        "upload_time": "2022-11-13T16:31:16",
        "upload_time_iso_8601": "2022-11-13T16:31:16.687510Z",
        "url": "https://files.pythonhosted.org/packages/f0/69/b33135c0449095203110a8bd28015ef1e392d0a3263bc85594fffb10f369/genconfig-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f069b33135c0449095203110a8bd28015ef1e392d0a3263bc85594fffb10f369",
        "md5": "07b633c2819461fc59d0a81a8a7631db",
        "sha256": "482a83c35579b2f59e6276124000ba1e096077bc6580e8848c8a6739a19e2b71"
      },
      "downloads": -1,
      "filename": "genconfig-1.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "07b633c2819461fc59d0a81a8a7631db",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 20230,
      "upload_time": "2022-11-13T16:31:16",
      "upload_time_iso_8601": "2022-11-13T16:31:16.687510Z",
      "url": "https://files.pythonhosted.org/packages/f0/69/b33135c0449095203110a8bd28015ef1e392d0a3263bc85594fffb10f369/genconfig-1.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}