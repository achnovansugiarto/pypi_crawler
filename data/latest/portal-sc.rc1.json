{
  "info": {
    "author": "Jia Zhao",
    "author_email": "jzhaoaz@connect.ust.hk",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Portal\n[![DOI](https://zenodo.org/badge/423325112.svg)](https://zenodo.org/badge/latestdoi/423325112)\n\n*Adversarial domain translation networks for integrating large-scale atlas-level single-cell datasets*\n\nAn efficient, accurate and flexible method for single-cell data integration.\n\nCheck out our manuscript in Nature Computational Science:\n+ [Nature Computational Science website](https://www.nature.com/articles/s43588-022-00251-y)\n+ [Read fulltext link](https://rdcu.be/cOCbU)\n+ [Preprint in bioRxiv](https://www.biorxiv.org/content/10.1101/2021.11.16.468892v2)\n\n## Reproducibility\nWe provide [source codes](https://github.com/jiazhao97/Portal-reproducibility) for reproducing the experiments of the paper \"Adversarial domain translation networks for fast and accurate integration of large-scale atlas-level single-cell datasets\".\n\n+ [Integration of mouse spleen datasets](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Reproduce-Spleen.html) (we reproduce the result of performance metrics in this notebook as an example). [Benchmarking](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Benchmarking-Spleen.html).  \n+ [Integration of mouse marrow datasets](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Reproduce-Marrow.html).\n+ [Integration of mouse bladder datasets](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Reproduce-Bladder.html).\n+ [Integration of mouse brain cerebellum datasets](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Reproduce-MouseBrain-CB.html).\n+ [Integration of mouse brain hippocampus datasets](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Reproduce-MouseBrain-HC.html).\n+ [Integration of mouse brain thalamus datasets](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Reproduce-MouseBrain-TH.html).\n+ [Integration of human PBMC datasets](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Reproduce-sensitivity.html) (sensitivity analysis).\n+ [Integration of entire mouse cell atlases from the Tablula Muris project](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Reproduce-TabulaMuris-full.html).\n+ [Integration of mouse brain scRNA-seq and snRNA-seq datasets](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Reproduce-MouseBrain-CellNuclei.html).\n+ [Integration of human PBMC scRNA-seq and human brain snRNA-seq datasets](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Reproduce-BloodCell-BrainNuclei.html).\n+ [Integration of scRNA-seq and scATAC-seq datasets](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Reproduce-PBMC-ATACseq.html).\n+ [Integration of developmental trajectories](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Reproduce-trajectory.html).\n+ [Integration of spermatogenesis differentiation process across multiple species](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Reproduce-Spermatogenesis.html). Gene lists from Ensembl Biomart (we only use genes that are assigned with the type \"ortholog_one2one\" in the lists): [orthologues (human vs mouse)](https://github.com/jiazhao97/Portal-reproducibility/raw/main/orthologues_human_mouse.txt), [orthologues (human vs macaque)](https://github.com/jiazhao97/Portal-reproducibility/raw/main/orthologues_human_macaque.txt).\n\n## Installation\nTo run Portal, please follow the installation instruction:\n```bash\ngit clone https://github.com/YangLabHKUST/Portal.git\ncd Portal\nconda env update --f environment.yml\nconda activate portal\n```\nNormally the installation time is less than 5 minutes.\n\n## Quick Start\n### Basic Usage\nStarting with raw count matrices formatted as AnnData objects, Portal uses a standard pipline adopted by Seurat and Scanpy to preprocess data, followed by PCA for dimensionality reduction. After preprocessing, Portal can be trained via `model.train()`.\n```python\nimport portal\nimport scanpy as sc\n\n# read AnnData\nadata_1 = sc.read_h5ad(\"adata_1.h5ad\")\nadata_2 = sc.read_h5ad(\"adata_2.h5ad\")\n\nmodel = portal.model.Model()\nmodel.preprocess(adata_1, adata_2) # perform preprocess and PCA\nmodel.train() # train the model\nmodel.eval() # get integrated latent representation of cells\n```\nThe evaluating procedure `model.eval()` saves the integrated latent representation of cells in `model.latent`, which can be used for downstream integrative analysis.\n\n#### Parameters in `portal.model.Model()`:\n* `lambdacos`: Coefficient of the regularizer for preserving cosine similarity across domains. *Default*: `20.0`.\n* `training_steps`: Number of steps for training. *Default*: `2000`. Use `training_steps=1000` for datasets with sample size < 20,000.\n* `npcs`: Dimensionality of the embeddings in each domain (number of PCs). *Default*: `30`.\n* `n_latent`: Dimensionality of the shared latent space. *Default*: `20`.\n* `batch_size`: Batch size for training. *Default*: `500`.\n* `seed`: Random seed. *Default*: `1234`.\n\nThe default setting of the parameter `lambdacos` works in general. We also enable tuning of this parameter to achieve a better performance, see [**Tuning `lambdacos` (optional)**](#tuning-lambdacos-optional). For the integration task where the cosine similarity is not a reliable cross-domain correspondance (such as cross-species integration), we recommend to use a lower value such as `lambdacos=10.0`.\n\n### Memory-efficient Version\nTo deal with large single-cell datasets, we also developed a memory-efficient version by reading mini-batches from the disk:\n```python\nmodel = portal.model.Model()\nmodel.preprocess_memory_efficient(adata_A_path=\"adata_1.h5ad\", adata_B_path=\"adata_2.h5ad\")\nmodel.train_memory_efficient()\nmodel.eval_memory_efficient()\n```\n\n### Integrating Multiple Datasets\nPortal integrates multiple datasets incrementally. Given `adata_list = [adata_1, ..., adata_n]` is a list of AnnData objects, they can be integrated by running the following commands: \n```python\nlowdim_list = portal.utils.preprocess_datasets(adata_list)\nintegrated_data = portal.utils.integrate_datasets(lowdim_list)\n```\n\n### Tuning `lambdacos` (optional)\nAn optional choice is to tune the parameter `lambdacos` in the range [15.0, 50.0]. Users can run the following command to search for an optimal parameter that yields the best integration result in terms of the mixing metric:\n```python\nlowdim_list = portal.utils.preprocess_datasets(adata_list)\nintegrated_data = portal.utils.integrate_datasets(lowdim_list, search_cos=True)\n```\n\n### Recovering expression matrices\nPortal can provide harmonized expression matrices (in scaled level or log-normalized level):\n```python\nlowdim_list, hvg, mean, std, pca = portal.utils.preprocess_recover_expression(adata_list)\nexpression_scaled, expression_log_normalized = portal.utils.integrate_recover_expression(lowdim_list, mean, std, pca)\n```\n\n### Demos\nWe provide demos for users to get a quick start: [Demo 1](https://jiazhao97.github.io/Portal_demo1/), [Demo 2](https://htmlpreview.github.io/?https://github.com/jiazhao97/Portal-reproducibility/blob/main/Portal_recover_expression.html).\n\n## Development\nThis package is developed by Jia Zhao (jzhaoaz@connect.ust.hk) and Gefei Wang (gwangas@connect.ust.hk). \n\n## Citation\nJia Zhao, Gefei Wang, Jingsi Ming, Zhixiang Lin, Yang Wang, The Tabula Microcebus Consortium, Angela Ruohao Wu, Can Yang. Adversarial domain translation networks for integrating large-scale atlas-level single-cell datasets. Nature Computational Science 2, 317â€“330 (2022).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/YangLabHKUST/Portal",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "portal-sc",
    "package_url": "https://pypi.org/project/portal-sc/",
    "platform": null,
    "project_url": "https://pypi.org/project/portal-sc/",
    "project_urls": {
      "Homepage": "https://github.com/YangLabHKUST/Portal"
    },
    "release_url": "https://pypi.org/project/portal-sc/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "An efficient, accurate and flexible method for single-cell data integration.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14292924,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e198fb39e65fa57881afbfcba3c8899b9853f77884c54aab7705085ee746c2ea",
          "md5": "9b5a615fca76843534e9600ed29ef6ed",
          "sha256": "7e6e3dcc73a52a6366088d229c44d28af2c33a145d5ffe2be3c7fbedbb29a36a"
        },
        "downloads": -1,
        "filename": "portal-sc-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9b5a615fca76843534e9600ed29ef6ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17256,
        "upload_time": "2022-06-30T07:22:16",
        "upload_time_iso_8601": "2022-06-30T07:22:16.449010Z",
        "url": "https://files.pythonhosted.org/packages/e1/98/fb39e65fa57881afbfcba3c8899b9853f77884c54aab7705085ee746c2ea/portal-sc-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e198fb39e65fa57881afbfcba3c8899b9853f77884c54aab7705085ee746c2ea",
        "md5": "9b5a615fca76843534e9600ed29ef6ed",
        "sha256": "7e6e3dcc73a52a6366088d229c44d28af2c33a145d5ffe2be3c7fbedbb29a36a"
      },
      "downloads": -1,
      "filename": "portal-sc-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9b5a615fca76843534e9600ed29ef6ed",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 17256,
      "upload_time": "2022-06-30T07:22:16",
      "upload_time_iso_8601": "2022-06-30T07:22:16.449010Z",
      "url": "https://files.pythonhosted.org/packages/e1/98/fb39e65fa57881afbfcba3c8899b9853f77884c54aab7705085ee746c2ea/portal-sc-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}