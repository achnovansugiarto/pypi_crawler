{
  "info": {
    "author": "",
    "author_email": "James <IdiosApps@users.noreply.github.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# jenkinsdiagrams\n\nThis script converts a folder of Jenkins files into a visual representation.\n\nWhilst there are [Jenkins plugins to view pipeline graphs](https://plugins.jenkins.io/pipeline-graph-view/), you have to\nenter a pipeline first.\nIf you have many pipelines and don't know the top-level/entrypoint pipelines, you might like this tool.\nVisualise in the terminal, as textual diagrams, or render with your IDE/GitHub/Docusaurus etc.\n\n# Inputs\n\nSpecify a path to your project.\n`Jenkinsfile.*` and any files ending with `.jenkinsfile` will be scanned\n\n# Options\n\nWith `.jenkinsfile`s, the file isn't enough to state whether they are used as a top-level pipeline in Jenkins (vs being\ncalled by a higher-level pipeline).\n\nTo create a more accurate visual representation of your pipelines, add this line to the top of your Jenkins files which\nare called directly from the Jenkins UI:\n\n```groovy\n// jenkins2diagram:toplevel\n```\n\n# Supported outputs\n\nHere's a few options - I'm considering:\n\n- Mermaid diagram\n    - Renders in GitHub .md previews\n    - Renders in Docusaurus (a static website tool)\n- ~Ascii art~\n    - Renders anywhere\n- ~Image files~\n\nI'll focus on mermaid first.\nI think the app will return text to stdout, which can be piped `>` by the user into a file if they wish.\n\n# Developing a POC (1/2)\n\nThis app is quite domain / keyword specific, so for this POC I aim to:\n\n- [x] Get the basic file reading, pipeline mappings, etc. correct with simplified syntax:\n\n```\n# Jenkinsfile \n// jenkins2diagram:toplevel\nbuild job: 'a'\nbuild job: 'b'\n\n// a.jenkinsfile\n\n// b.jenkinsfile\nbuild job: 'c'\n\n// c.jenkinsfile\n```\n\nShould produce:\n\n```mermaid\ngraph TD\n    Z[Jenkinsfile]\n    Z[Jenkinsfile] --> A[a]\n    Z[Jenkinsfile] --> B[b]\n    B[b] --> C[c]\n```\n\n## Notes on GraphViz DOT and Mermaid\n\nNote: To kickstart generating the tree, I used [anytree](https://github.com/c0fec0de/anytree).\nIt can export to a Python dictionary, JSON, or \"Dot\" format.\nThe DOT language is a grammar for [Graphviz](https://graphviz.org/doc/info/lang.html).\n\n- IntelliJ\n    - recognised Mermaid in my code block, offered to install the plugin, and rendered correctly. Mermaid plays\n      nice with GitHub and Docusaurus, as is already mentioned\n    - making graph.dot let the IDE suggest a plugin install. A sample graph renders nicely, and copy to clipboard/save\n      to file work great\n- GitHub markdown rendering\n    - [Including graphviz graphs is a little indirect](https://github.com/TLmaK0/gravizo) (some html tags and custom\n      marks seem to be necessary)\n        -\n      Apparently [Graphviz is in C, and Mermaid is written in JS](https://forum.graphviz.org/t/github-adding-support-for-mermaid-diagrams/998)\n        - and mermaid is a little prettier\n- Docusaurus\n    - I only see documentation on Mermaid support - nothing for Graphviz\n- Converting Graphviz DOT to Mermaid\n    - Kroki: A server that renders a bunch of different textual diagrams to images\n\nOverall, I should probably aim to add a Mermaid exporter to `anytree`. There's no issues/PRs for it so far.\n`anytree`'s `dotexporter.py` is ~ 400 lines, but more than half of it is examples.\nI'll try a basic version in this POC first.\n\nThe mermaid tree generation is working nicely.\nSeeing that anytree can import/export trees as Python dictionaries helped me see I can move to a minimal dependency\nversion, hopefully without too much challenge. That can happen later.\nI will try to raise a basic PR for a Mermaid exporter now.\nhttps://github.com/c0fec0de/anytree/pull/215 is the basic PR, with nice diagrams in the description!\n\n# Developing a POC (2/3)\n\n- [x] Change to support more proper syntax\n    - It seems about right for now\n- [x] Be more flexible with matches (`build(job: '...',...)` vs `build job:'...'`, etc.))\n    - Writing some unit tests for this\n\n# Developing a POC (3/3)\n\n## Create a CLI\n\nAs a user, I would like to:\n\n- (Option) `--path PATH` to scan.\n    - Default: current directory.\n    - Example: `jenkisdiagram --path ~/IdeaProjects/monorepo`.\n- (Option) `--folders NAME` to scan, in addition to root.\n    - Default: all folders.\n        - If it's too slow for large repositories, can change default to scan only root and `pipelines`.\n    - Example: `jenkinsdiagram --folders infra/jenkins/pipelines-old --folders infra/jenkins/pipelines-new`\n\n[Typer](https://typer.tiangolo.com/) is awesome\n\nCalling the app with `--help` will list the (all optional) arguments:\n\n```shell\npython .\\main.py --help\n```\n\nOptional args, exceptions, etc. are all nicely formatted.\n\nArg parsing is done and the CLI feels nice. I want to publish to homebrew before \n\n# Pushing to HomeBrew\n\n[Packaging a Python CLI tool for Homebrew](https://til.simonwillison.net/homebrew/packaging-python-cli-for-homebrew)\n\n`pip install -r requirements.txt`\n\nPyPi publish first, then brew!\nhttps://medium.com/@joel.barmettler/how-to-upload-your-python-package-to-pypi-65edc5fe9c56\nhttps://www.jetbrains.com/help/pycharm/creating-and-running-setup-py.html\n\npython setup.py sdist\ntwine upload dist/*\nOkay, that has published https://pypi.org/project/jenkinsdiagram/1.0.0/\n\nit's just a .tar.gz of the repo :think:\nCan't seem to make it run (as an app) from terminalm, ah well let's jump to trying homebrew\n\nNow we can try the homebrew stuff\nSimon Willison's guide is good\nhttps://github.com/IdiosApps/homebrew-jenkinsdiagram install instructions\nInstall wanted GitHub login for some reason. Fresh PAT wasn't working, but `gh auth login` revalidate did the trick \n\n`brew list` shows jenkinsdiagram\nbut the command doesn't work, and neither does just `jenkinsdiagram`\ninstall logs noted:\n`/opt/homebrew/Cellar/jenkinsdiagram/1.0.0/libexec/bin/pip`\n\ncompare with\nbrew tap simonw/datasette\nbrew install simonw/datasette/datasette\n\n/opt/homebrew/Cellar/jenkinsdiagram/1.0.0 has no `bin`\n/opt/homebrew/Cellar/datasette/0.64.1 has a `bin`\n\n```\n> /opt/homebrew/Cellar/datasette/0.64.1/bin/datasette --version\ndatasette, version 0.64.1\n```\n\nProbably in the distribution side of things, but let's compare the homebrew repos:\nhttps://github.com/IdiosApps/homebrew-jenkinsdiagram/blob/main/Formula/jenkinsdiagram.rb\nhttps://github.com/simonw/homebrew-datasette/blob/main/Formula/datasette.rb\nNothing crazy different\n\nLet's compare one file we made to make a dist;\nhttps://github.com/simonw/datasette/blob/main/setup.py\nhttps://github.com/IdiosApps/jenkinsdiagram/blob/pypi-homebrew/setup.py\n\nThis looks interesting:\n```\n    entry_points=\"\"\"\n        [console_scripts]\n        datasette=datasette.cli:cli\n    \"\"\",\n```\n\nThis looks like a reasonable thing to attempt!\n\nUpdate setup.py with entry_point + version bump\nsdist\npush\npip install \npoet -f\nbump brew repo url + hash\n...\nnow we have `/opt/homebrew/Cellar/jenkinsdiagram/1.0.1/bin`!\nRunning it gives:\n```\n  File \"/opt/homebrew/Cellar/jenkinsdiagram/1.0.1/libexec/lib/python3.10/site-packages/jenkinsdiagram/main.py\", line 8, in <module>\n    import app\nModuleNotFoundError: No module named 'app'\n```\nSo we're getting closer, but still a bit more investigation to go.\n\nneed to declare imports in init?\n\nmay need a nice __.main__.py wrapping of the cli? https://github.com/simonw/datasette/pull/556. It seems fair:\n```\n➜ python -m datasette --version\npython -m datasette, version 0.64.1\n➜ datasette --version\ndatasette, version 0.64.1\n```\n\nHmm, last couple commits had no impact - still get the same error, but at least I know I can get it in PyPi (earlier than brew)\n`python -m jenkinsdiagram --version`\n```\n  File \"......./jenkinsdiagram/jenkinsdiagram/cli.py\", line 8, in <module>\n    import app\nModuleNotFoundError: No module named 'app'\n```\n\nTest PyPi - we can push to an alternate repo to prevent cluttering the real PyPi project with bad dists\nhttps://packaging.python.org/en/latest/guides/using-testpypi/\n`twine upload --repository testpypi dist/*`\n`python3 -m pip install --index-url https://test.pypi.org/simple/ your-package`\n\nhttps://packaging.python.org/en/latest/tutorials/packaging-projects/\n\n\n# Other nice things\n\n- [x] CLI could output to SVG\n    - https://github.com/mermaid-js/mermaid-cli\n      - png and pdf work fine; svg needs some manual config setup (noted in CLI)\n      - user installs with `npm i -g`\n      - and it's an official repo from the mermaid team\n    - ~~https://github.com/superj80820/mermaid-js-converter~~\n      - sends out diagram to a URL",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jenkinsdiagram",
    "package_url": "https://pypi.org/project/jenkinsdiagram/",
    "platform": null,
    "project_url": "https://pypi.org/project/jenkinsdiagram/",
    "project_urls": {
      "Bug Tracker": "https://github.com/IdiosApps/jenkinsdiagram/issues",
      "Homepage": "https://github.com/IdiosApps/jenkinsdiagram"
    },
    "release_url": "https://pypi.org/project/jenkinsdiagram/1.0.3/",
    "requires_dist": [
      "anytree==2.8.0",
      "click==8.1.3",
      "colorama==0.4.6",
      "commonmark==0.9.1",
      "pygments==2.14.0",
      "rich==12.6.0",
      "shellingham==1.5.0.post1",
      "six==1.16.0",
      "typer==0.7.0"
    ],
    "requires_python": ">=3.11",
    "summary": "Generate mermaid diagrams from Jenkins pipelines",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16752553,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1deabf1ef39855d4645dad3207a110b419dc7e500747f54442e4736c037513e3",
          "md5": "b35681b97cadfd08f4a2b57b724a1cd2",
          "sha256": "eaf72bf983246d000fe2f239115c55ce1cbdea76f96b2247aa9acfa6debcbb36"
        },
        "downloads": -1,
        "filename": "jenkinsdiagram-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b35681b97cadfd08f4a2b57b724a1cd2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7090,
        "upload_time": "2023-02-06T22:08:41",
        "upload_time_iso_8601": "2023-02-06T22:08:41.248213Z",
        "url": "https://files.pythonhosted.org/packages/1d/ea/bf1ef39855d4645dad3207a110b419dc7e500747f54442e4736c037513e3/jenkinsdiagram-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "210d616c4906209c1533a6c33f956b2bfbf62bee1b314defeefb402efbba95fa",
          "md5": "1701357ea4e50b49626734f83fef804b",
          "sha256": "3e715d46c2d67951a5954a6236d07ef87dd53dd8fd33e7a4ae9b5f039a5130ed"
        },
        "downloads": -1,
        "filename": "jenkinsdiagram-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1701357ea4e50b49626734f83fef804b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7817,
        "upload_time": "2023-02-06T23:22:49",
        "upload_time_iso_8601": "2023-02-06T23:22:49.151737Z",
        "url": "https://files.pythonhosted.org/packages/21/0d/616c4906209c1533a6c33f956b2bfbf62bee1b314defeefb402efbba95fa/jenkinsdiagram-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f65193d8810ef3ae0def1d0c73bd7d5e0af0956e140cc8f1366bd52bd447963",
          "md5": "403df63a06f1ee7e749c4f54b40bc3ae",
          "sha256": "07c2f8e8cebb7ed2b4bdf5e67a77baf223dd4af9d3139cefef39a0f1a4144901"
        },
        "downloads": -1,
        "filename": "jenkinsdiagram-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "403df63a06f1ee7e749c4f54b40bc3ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8136,
        "upload_time": "2023-02-08T00:26:10",
        "upload_time_iso_8601": "2023-02-08T00:26:10.923716Z",
        "url": "https://files.pythonhosted.org/packages/5f/65/193d8810ef3ae0def1d0c73bd7d5e0af0956e140cc8f1366bd52bd447963/jenkinsdiagram-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ed3105db77326591d23c6827f188ce546946dea1956966b97749e48e6cc721f",
          "md5": "c2ff3288973436f88c88de5ee06786e9",
          "sha256": "82341a987910de20134be3d8519260b341f7d240944d73589938e480177c1712"
        },
        "downloads": -1,
        "filename": "jenkinsdiagram-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2ff3288973436f88c88de5ee06786e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.11",
        "size": 5107802,
        "upload_time": "2023-02-08T18:06:21",
        "upload_time_iso_8601": "2023-02-08T18:06:21.198718Z",
        "url": "https://files.pythonhosted.org/packages/3e/d3/105db77326591d23c6827f188ce546946dea1956966b97749e48e6cc721f/jenkinsdiagram-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "818870dd9886c5ae6a018736c83e9ef7ad025ad3e4654d12ec588d77be803892",
          "md5": "87d7b9ff46053e1ebe0ef9031b137b86",
          "sha256": "72953ac1ae67403604692cc87481e79f360a80ad7ddae88e6e056d8dd61e9a91"
        },
        "downloads": -1,
        "filename": "jenkinsdiagram-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "87d7b9ff46053e1ebe0ef9031b137b86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.11",
        "size": 5780488,
        "upload_time": "2023-02-08T18:06:25",
        "upload_time_iso_8601": "2023-02-08T18:06:25.105916Z",
        "url": "https://files.pythonhosted.org/packages/81/88/70dd9886c5ae6a018736c83e9ef7ad025ad3e4654d12ec588d77be803892/jenkinsdiagram-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ed3105db77326591d23c6827f188ce546946dea1956966b97749e48e6cc721f",
        "md5": "c2ff3288973436f88c88de5ee06786e9",
        "sha256": "82341a987910de20134be3d8519260b341f7d240944d73589938e480177c1712"
      },
      "downloads": -1,
      "filename": "jenkinsdiagram-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c2ff3288973436f88c88de5ee06786e9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.11",
      "size": 5107802,
      "upload_time": "2023-02-08T18:06:21",
      "upload_time_iso_8601": "2023-02-08T18:06:21.198718Z",
      "url": "https://files.pythonhosted.org/packages/3e/d3/105db77326591d23c6827f188ce546946dea1956966b97749e48e6cc721f/jenkinsdiagram-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "818870dd9886c5ae6a018736c83e9ef7ad025ad3e4654d12ec588d77be803892",
        "md5": "87d7b9ff46053e1ebe0ef9031b137b86",
        "sha256": "72953ac1ae67403604692cc87481e79f360a80ad7ddae88e6e056d8dd61e9a91"
      },
      "downloads": -1,
      "filename": "jenkinsdiagram-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "87d7b9ff46053e1ebe0ef9031b137b86",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.11",
      "size": 5780488,
      "upload_time": "2023-02-08T18:06:25",
      "upload_time_iso_8601": "2023-02-08T18:06:25.105916Z",
      "url": "https://files.pythonhosted.org/packages/81/88/70dd9886c5ae6a018736c83e9ef7ad025ad3e4654d12ec588d77be803892/jenkinsdiagram-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}