{
  "info": {
    "author": "Martino Mensio",
    "author_email": "martino.mensio@open.ac.uk",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![Tests](https://github.com/MartinoMensio/spacy-universal-sentence-encoder/actions/workflows/tests.yml/badge.svg)](https://github.com/MartinoMensio/spacy-universal-sentence-encoder/actions/workflows/tests.yml)\n[![Downloads](https://static.pepy.tech/badge/spacy-universal-sentence-encoder)](https://pepy.tech/project/spacy-universal-sentence-encoder)\n[![Current Release Version](https://img.shields.io/github/release/MartinoMensio/spacy-universal-sentence-encoder.svg?&logo=github)](https://github.com/MartinoMensio/spacy-universal-sentence-encoder/releases)\n[![pypi Version](https://img.shields.io/pypi/v/spacy-universal-sentence-encoder.svg?&logo=pypi&logoColor=white)](https://pypi.org/project/spacy-universal-sentence-encoder/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n# Spacy - Universal Sentence Encoder\n\nMake use of Google's Universal Sentence Encoder directly within SpaCy.\nThis library lets you embed [Docs](https://spacy.io/api/doc), [Spans](https://spacy.io/api/span) and [Tokens](https://spacy.io/api/token) from the [Universal Sentence Encoder family available on TensorFlow Hub](https://tfhub.dev/google/collections/universal-sentence-encoder/1).\n\nFor using sentence-BERT in spaCy, see https://github.com/MartinoMensio/spacy-sentence-bert\n\n## Motivation\nThere are many different reasons to not always use BERT. For example to have embeddings that are tuned specifically for another task (e.g. sentence similarity). See this very useful blog article:\nhttps://blog.floydhub.com/when-the-best-nlp-model-is-not-the-best-choice/\n\nThe Universal Sentence Encoder is trained on different tasks which are more suited to identifying sentence similarity. [Google AI blog](https://ai.googleblog.com/2018/05/advances-in-semantic-textual-similarity.html) [paper](https://arxiv.org/abs/1803.11175)\n\nThis library uses the [`user_hooks` of spaCy](https://spacy.io/usage/processing-pipelines#custom-components-user-hooks) to use an external model for the vectors, in this case a simple wrapper to the models available on TensorFlow Hub.\n\n## Install\n\nYou can install this library from:\n- github: `pip install git+https://github.com/MartinoMensio/spacy-universal-sentence-encoder.git`\n- pyPI: `pip install spacy-universal-sentence-encoder`\n\nCompatibility:\n- python:\n  - 3.6: compatible but not actively tested\n  - 3.7/3.8/3.9/3.10: compatible and actively tested\n  - 3.11 compatible but relies on rc version of [tensorflow-text](https://pypi.org/project/tensorflow-text/) for multilingual models\n- tensorflow>=2.4.0,<3.0.0\n- spacy>=3.0.0,<4.0.0 (SpaCy v3 API changed a lot from v2)\n\nTo use the multilingual version of the models, you need to install the extra named `multi` with the command: `pip install spacy-universal-sentence-encoder[multi]`. This installs the dependency `tensorflow-text` that is required to run the multilingual models. Note that `tensorflow-text` is currently in RC version for python3.11.\n\nIn alternative, you can install the following standalone pre-packaged models with pip. Each model can be installed independently:\n\n| model name | source | pip package |\n|------------|--------|---|\n| en_use_md  | https://tfhub.dev/google/universal-sentence-encoder | `pip install https://github.com/MartinoMensio/spacy-universal-sentence-encoder/releases/download/v0.4.6/en_use_md-0.4.6.tar.gz#en_use_md-0.4.6` |\n| en_use_lg  | https://tfhub.dev/google/universal-sentence-encoder-large | `pip install https://github.com/MartinoMensio/spacy-universal-sentence-encoder/releases/download/v0.4.6/en_use_lg-0.4.6.tar.gz#en_use_lg-0.4.6` |\n| xx_use_md  | https://tfhub.dev/google/universal-sentence-encoder-multilingual | `pip install https://github.com/MartinoMensio/spacy-universal-sentence-encoder/releases/download/v0.4.6/xx_use_md-0.4.6.tar.gz#xx_use_md-0.4.6` |\n| xx_use_lg  | https://tfhub.dev/google/universal-sentence-encoder-multilingual-large | `pip install https://github.com/MartinoMensio/spacy-universal-sentence-encoder/releases/download/v0.4.6/xx_use_lg-0.4.6.tar.gz#xx_use_lg-0.4.6` |\n\nIn addition, also [CMLM models](https://openreview.net/pdf?id=WDVD4lUCTzU) are now available:\n\n| model name | source | pip package |\n|------------|--------|---|\n| en_use_cmlm_md  | https://tfhub.dev/google/universal-sentence-encoder-cmlm/en-base | `pip install https://github.com/MartinoMensio/spacy-universal-sentence-encoder/releases/download/v0.4.6/en_use_cmlm_md-0.4.6.tar.gz#en_use_cmlm_md-0.4.6` |\n| en_use_cmlm_lg  | https://tfhub.dev/google/universal-sentence-encoder-cmlm/en-large | `pip install https://github.com/MartinoMensio/spacy-universal-sentence-encoder/releases/download/v0.4.6/en_use_cmlm_lg-0.4.6.tar.gz#en_use_cmlm_lg-0.4.6` |\n| xx_use_cmlm  | https://tfhub.dev/google/universal-sentence-encoder-cmlm/multilingual-base | `pip install https://github.com/MartinoMensio/spacy-universal-sentence-encoder/releases/download/v0.4.6/xx_use_cmlm-0.4.6.tar.gz#xx_use_cmlm-0.4.6` |\n| xx_use_cmlm_br  | https://tfhub.dev/google/universal-sentence-encoder-cmlm/multilingual-base-br | `pip install https://github.com/MartinoMensio/spacy-universal-sentence-encoder/releases/download/v0.4.6/xx_use_cmlm_br-0.4.6.tar.gz#xx_use_cmlm_br-0.4.6` |\n\n## Usage\n\n### Loading the model\n\nIf you installed the model standalone packages (see table above) you can use the usual spacy API to load this model:\n\n```python\nimport spacy\nnlp = spacy.load('en_use_md')\n```\n\nOtherwise you need to load the model in the following way:\n\n```python\nimport spacy_universal_sentence_encoder\nnlp = spacy_universal_sentence_encoder.load_model('xx_use_lg')\n```\n\nThe third option is to load the model on your existing spaCy pipeline:\n\n```python\nimport spacy\n# this is your nlp object that can be any spaCy model\nnlp = spacy.load('en_core_web_sm')\n\n# add the pipeline stage (will be mapped to the most adequate model from the table above, en_use_md)\nnlp.add_pipe('universal_sentence_encoder')\n```\n\nIn all of the three options, the first time that you load a certain Universal Sentence Encoder model, it will be downloaded from TF Hub (see section below to use an already downloaded model, or to change the location of the model files).\n\nThe last option (using `nlp.add_pipe`) can be customised with the following configurations:\n\n- `use_model_url`: allows to use a specific TFHub URL\n- `preprocessor_url`: for TFHub models that need specific preprocessing with another TFHub model (e.g., see documentation of [CMLM models](https://tfhub.dev/google/universal-sentence-encoder-cmlm/en-base))\n- `model_name`: to load a specific model instead of mapping the current (language, size) to one of the options in the table above\n- `enable_cache`: default `True`, enables an internal cache to avoid embedding the same text (doc/span/token) twice. It makes the computation faster (when enough duplicates are embedded) but has a memory footprint because all the embeddings extracted are kept in the cache\n- `debug`: default `False` shows debugging information.\n\nTo use the configurations, when adding the pipe stage pass a dict as additional argument, for example:\n\n```python\nnlp.add_pipe('universal_sentence_encoder', config={'enable_cache': False})\n```\n\n### Use the embeddings\n\nAfter adding to the pipeline, you can use the embedding models by using the various properties and methods of Docs, Spans and Tokens:\n\n```python\n# load as before\nimport spacy\nnlp = spacy.load('en_core_web_lg')\nnlp.add_pipe('universal_sentence_encoder')\n\n# get two documents\ndoc_1 = nlp('Hi there, how are you?')\ndoc_2 = nlp('Hello there, how are you doing today?')\n# Inspect the shape of the Doc, Span and Token vectors\nprint(doc_1.vector.shape) # the full document representation\nprint(doc_1[3], doc_1[3].vector.shape) # the word \"how\"\nprint(doc_1[3:6], doc_1[3:6].vector.shape) # the span \"how are you\"\n\n# or use the similarity method that is based on the vectors, on Doc, Span or Token\nprint(doc_1.similarity(doc_2[0:7]))\n```\n\n## Common issues\n\nHere you can find the most common issues with possible solutions.\n\n### Using a pre-downloaded model\n\nIf you want to use a model that you have already downloaded from TensorFlow Hub, belonging to the [Universal Sentence Encoder family](https://tfhub.dev/google/collections/universal-sentence-encoder/1), you can use it by doing the following:\n\n- locate the full path of the folder where you have downloaded and extracted the model. Let's suppose the location is `$HOME/tfhub_models`\n- rename the folder of the extracted model (the one directly containing the folders `variables` and the file `saved_model.pb`) to the sha1 hash of the TFHub model [source](https://medium.com/@xianbao.qian/how-to-run-tf-hub-locally-without-internet-connection-4506b850a915). The mapping URL / sha1 values is the following:\n  - [`en_use_md`](https://tfhub.dev/google/universal-sentence-encoder/4): `063d866c06683311b44b4992fd46003be952409c`\n  - [`en_use_lg`](https://tfhub.dev/google/universal-sentence-encoder-large/5): `c9fe785512ca4a1b179831acb18a0c6bfba603dd`\n  - [`xx_use_md`](https://tfhub.dev/google/universal-sentence-encoder-multilingual/3): `26c892ffbc8d7b032f5a95f316e2841ed4f1608c`\n  - [`xx_use_lg`](https://tfhub.dev/google/universal-sentence-encoder-multilingual-large/3): `97e68b633b7cf018904eb965602b92c9f3ad14c9`\n- set the environment variable `TFHUB_CACHE_DIR` to the location containing the renamed folder, for example `$HOME/tfhub_models` (set it before trying to download the model: `export TFHUB_CACHE_DIR=$HOME/tfhub_models`)\n- Now load your model and it should see that it was already downloaded\n\n### Serialisation\n\nTo serialise and deserialise nlp objects, SpaCy does not restore `user_hooks` after deserialisation, so a call to `from_bytes` will result in not using the TensorFlow vectors, so the similarities won't be good. For this reason the suggested solution is:\n\n- serialise with `bytes = doc.to_bytes()` normally\n- deserialise with `spacy_universal_sentence_encoder.doc_from_bytes(nlp, bytes)` which will also restore the user hooks\n\n### Multiprocessing\n\nThis library, relying on TensorFlow, is not fork-safe. This means that if you are using this library inside multiple processes (e.g. with a `multiprocessing.pool.Pool`), your processes will deadlock.\nThe solutions are:\n- use a thread-based environment (e.g. `multiprocessing.pool.ThreadPool`)\n- only use this library inside the created processes (first create the processes and then import and use the library)\n\n### `Using `nlp.pipe` with multiple processes\n\nSpacy does not restore user hooks (`UserWarning: [W109]`) therefore if you use `nlp.pipe` with multiple processes, you won't be able to use the `.vector` on `doc`, `span` and `token`. I am developing a workaround.\n<!-- Use `._.vector` instead. -->\n\n\n\n\n## Utils\n\nTo build and upload\n```bash\n# change version\nVERSION=0.4.6\n# change version references everywhere\n# update locally installed package\npip install -r requirements.txt\n# build the standalone models (8)\n./build_models.sh\n# build the archive at dist/spacy_universal_sentence_encoder-${VERSION}.tar.gz\npython setup.py sdist\n# upload to pypi\ntwine upload dist/spacy_universal_sentence_encoder-${VERSION}.tar.gz\n# upload language packages to github\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MartinoMensio/spacy-universal-sentence-encoder",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spacy-universal-sentence-encoder",
    "package_url": "https://pypi.org/project/spacy-universal-sentence-encoder/",
    "platform": null,
    "project_url": "https://pypi.org/project/spacy-universal-sentence-encoder/",
    "project_urls": {
      "Homepage": "https://github.com/MartinoMensio/spacy-universal-sentence-encoder"
    },
    "release_url": "https://pypi.org/project/spacy-universal-sentence-encoder/0.4.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "SpaCy models for using Universal Sentence Encoder from TensorFlow Hub",
    "version": "0.4.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17415232,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4430d09ac9e264aa601720a493720ce391355716179556d4dee3cb99ab57a4d7",
          "md5": "5968b7e012c6233089024119eab280fd",
          "sha256": "c84a939b9bd4f5d2e339dc945cf2ae7cbc7cb6f027c7e5c93e245cf0c98e86de"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5968b7e012c6233089024119eab280fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11000,
        "upload_time": "2020-05-29T11:03:26",
        "upload_time_iso_8601": "2020-05-29T11:03:26.817700Z",
        "url": "https://files.pythonhosted.org/packages/44/30/d09ac9e264aa601720a493720ce391355716179556d4dee3cb99ab57a4d7/spacy_universal_sentence_encoder-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f4732cba196e13b06f4e613dbb318443113bc9b2cc5ad01c50539c4c5c9a9a9",
          "md5": "9b8ae7494c0b6a362fdf07e1ed3b4568",
          "sha256": "7543f32525d09af475f0b94bef575b69bf25785af5c608361b82e51f68274677"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9b8ae7494c0b6a362fdf07e1ed3b4568",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7629,
        "upload_time": "2020-05-29T11:03:29",
        "upload_time_iso_8601": "2020-05-29T11:03:29.553988Z",
        "url": "https://files.pythonhosted.org/packages/2f/47/32cba196e13b06f4e613dbb318443113bc9b2cc5ad01c50539c4c5c9a9a9/spacy_universal_sentence_encoder-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4325df5176459c850270aec8910e5d71f857863a71943bff7f8bf581cc82047a",
          "md5": "f83ef2c2e0aefd3d0258a1b1e7546877",
          "sha256": "2127158e5c4e6c771b86aeb3a732ae1a5973108fe9cf86eb12e24a2f82379086"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f83ef2c2e0aefd3d0258a1b1e7546877",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6245,
        "upload_time": "2020-07-25T14:51:15",
        "upload_time_iso_8601": "2020-07-25T14:51:15.431347Z",
        "url": "https://files.pythonhosted.org/packages/43/25/df5176459c850270aec8910e5d71f857863a71943bff7f8bf581cc82047a/spacy_universal_sentence_encoder-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13c693c9faa22eec66842767b43be8c72be44c0c1c420326d2ec4014db3d4f38",
          "md5": "c2f56f0fdec96f6358bdffc889c61b13",
          "sha256": "8929c3319bdc059b7af9ef47cd9588e4b750d962d773be98437114fa9c7b08a7"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c2f56f0fdec96f6358bdffc889c61b13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6245,
        "upload_time": "2020-08-08T10:46:03",
        "upload_time_iso_8601": "2020-08-08T10:46:03.149424Z",
        "url": "https://files.pythonhosted.org/packages/13/c6/93c9faa22eec66842767b43be8c72be44c0c1c420326d2ec4014db3d4f38/spacy_universal_sentence_encoder-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f36dbebb4194523299553d656c432e2696aafaa1c378381f79979e08672a1be",
          "md5": "b47eabd01dfe4c21fa7d485ae672bf53",
          "sha256": "13f4bb1693768fa6a8649e3ca16baab33c2798d3e50621f7c8d814620daa61aa"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b47eabd01dfe4c21fa7d485ae672bf53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9611,
        "upload_time": "2020-09-05T14:06:32",
        "upload_time_iso_8601": "2020-09-05T14:06:32.435333Z",
        "url": "https://files.pythonhosted.org/packages/2f/36/dbebb4194523299553d656c432e2696aafaa1c378381f79979e08672a1be/spacy_universal_sentence_encoder-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "049e48da087a9f1c0016f7cbdfc0fff217954e78929e82b68f7fed4a9eec6239",
          "md5": "dd8ba53c7072a4137d7fcc7179bbed29",
          "sha256": "685b2de7fdf74c08afd1adf9209d3edb805c72ccc594675c605afb5c02cf9568"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "dd8ba53c7072a4137d7fcc7179bbed29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10285,
        "upload_time": "2020-11-16T09:21:22",
        "upload_time_iso_8601": "2020-11-16T09:21:22.794404Z",
        "url": "https://files.pythonhosted.org/packages/04/9e/48da087a9f1c0016f7cbdfc0fff217954e78929e82b68f7fed4a9eec6239/spacy_universal_sentence_encoder-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b4edbed7e2b59e1b253d7799cc81516a9cb875a0c224f2183d051d1e8d94522",
          "md5": "16edb41f7b942bd523d5946087a29998",
          "sha256": "fc7d2dc7397a97d3af092b8ceeee0ae64dbd8775c58b3ea73d56b7535b1ce10c"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "16edb41f7b942bd523d5946087a29998",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10940,
        "upload_time": "2020-11-16T10:36:28",
        "upload_time_iso_8601": "2020-11-16T10:36:28.554212Z",
        "url": "https://files.pythonhosted.org/packages/9b/4e/dbed7e2b59e1b253d7799cc81516a9cb875a0c224f2183d051d1e8d94522/spacy_universal_sentence_encoder-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a530199f79f5e8666d15634cce83eaa28e18e38840d89afabc93fd41e61b16a",
          "md5": "7cc055c17f49fa68815a5875767ddc87",
          "sha256": "f3bfa2c8b70d98e16c050ce3d615f75943c07f801018c5d31074e6119777c688"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7cc055c17f49fa68815a5875767ddc87",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12177,
        "upload_time": "2021-03-06T17:11:57",
        "upload_time_iso_8601": "2021-03-06T17:11:57.860691Z",
        "url": "https://files.pythonhosted.org/packages/1a/53/0199f79f5e8666d15634cce83eaa28e18e38840d89afabc93fd41e61b16a/spacy_universal_sentence_encoder-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2307a6e554cf93b410380c1f234079876334586474eb9cb9e75663516c371ed7",
          "md5": "ea0e5a5379bb7384dfd256ff6b886c42",
          "sha256": "7006ee3d4d87b53a48d6903958716ba48ec9ad67b341c2f43d40daf72f5abb7e"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ea0e5a5379bb7384dfd256ff6b886c42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12191,
        "upload_time": "2021-03-30T13:54:51",
        "upload_time_iso_8601": "2021-03-30T13:54:51.885322Z",
        "url": "https://files.pythonhosted.org/packages/23/07/a6e554cf93b410380c1f234079876334586474eb9cb9e75663516c371ed7/spacy_universal_sentence_encoder-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b705229687205bd30253322881c59d294fc922d4c4c371ab540de8a7d873af7",
          "md5": "b8aa1d6cc76f91df4be28c314c1a42a1",
          "sha256": "2071d0ef262255ab17bc2f8b225fa2278b6eff470054e6aae443ca63af27c21d"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b8aa1d6cc76f91df4be28c314c1a42a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12251,
        "upload_time": "2021-03-30T14:37:14",
        "upload_time_iso_8601": "2021-03-30T14:37:14.163314Z",
        "url": "https://files.pythonhosted.org/packages/6b/70/5229687205bd30253322881c59d294fc922d4c4c371ab540de8a7d873af7/spacy_universal_sentence_encoder-0.4.2.tar.gz",
        "yanked": true,
        "yanked_reason": "problem when using USE on top of a model with existing vocab"
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ff2b99ed3001395a488962bdfd129cf5592821b3115414ecc73196eb8efd8fc",
          "md5": "dea3a80b16adcd28f5811bbad4f551bb",
          "sha256": "d0f299eb7a6aaf2b7227d2fb33f0bdfeac1442867c5c0f5cf275902b17cf026d"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "dea3a80b16adcd28f5811bbad4f551bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13440,
        "upload_time": "2021-04-26T18:02:50",
        "upload_time_iso_8601": "2021-04-26T18:02:50.310902Z",
        "url": "https://files.pythonhosted.org/packages/6f/f2/b99ed3001395a488962bdfd129cf5592821b3115414ecc73196eb8efd8fc/spacy_universal_sentence_encoder-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7ee719947fc896edecc3207e2ef99075667c7d035b76600cddf972d90c21311",
          "md5": "e3c76c9265ecaf1076c990ac866c6739",
          "sha256": "44e32bddb74a759e868770ff95051c8ca0302331f6760d04a91168487b6da765"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e3c76c9265ecaf1076c990ac866c6739",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13973,
        "upload_time": "2022-07-11T15:32:09",
        "upload_time_iso_8601": "2022-07-11T15:32:09.485386Z",
        "url": "https://files.pythonhosted.org/packages/f7/ee/719947fc896edecc3207e2ef99075667c7d035b76600cddf972d90c21311/spacy_universal_sentence_encoder-0.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2278c68f584802419abb108086fd864ca544eb63334303ab4542d12bdeb11d1",
          "md5": "87f5361a1758cabd7621164210bb60b9",
          "sha256": "b39d04948e38090e6b2dc7abd3c21116c55203fc25c53dd58ca737636a211c94"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "87f5361a1758cabd7621164210bb60b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13971,
        "upload_time": "2022-07-11T16:08:35",
        "upload_time_iso_8601": "2022-07-11T16:08:35.717915Z",
        "url": "https://files.pythonhosted.org/packages/a2/27/8c68f584802419abb108086fd864ca544eb63334303ab4542d12bdeb11d1/spacy_universal_sentence_encoder-0.4.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b119eee30bbe6110ac63939df08ba3007f4a8244a086dafb645bacb826a6a9f",
          "md5": "a6eb3d3732d210cdb307095633bdaea8",
          "sha256": "822404c1d7c8b82ceb2385803efc11a8b3d2a08467c2083d6102a4555c82e1e2"
        },
        "downloads": -1,
        "filename": "spacy_universal_sentence_encoder-0.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a6eb3d3732d210cdb307095633bdaea8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15306,
        "upload_time": "2023-03-23T12:49:15",
        "upload_time_iso_8601": "2023-03-23T12:49:15.329547Z",
        "url": "https://files.pythonhosted.org/packages/5b/11/9eee30bbe6110ac63939df08ba3007f4a8244a086dafb645bacb826a6a9f/spacy_universal_sentence_encoder-0.4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b119eee30bbe6110ac63939df08ba3007f4a8244a086dafb645bacb826a6a9f",
        "md5": "a6eb3d3732d210cdb307095633bdaea8",
        "sha256": "822404c1d7c8b82ceb2385803efc11a8b3d2a08467c2083d6102a4555c82e1e2"
      },
      "downloads": -1,
      "filename": "spacy_universal_sentence_encoder-0.4.6.tar.gz",
      "has_sig": false,
      "md5_digest": "a6eb3d3732d210cdb307095633bdaea8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15306,
      "upload_time": "2023-03-23T12:49:15",
      "upload_time_iso_8601": "2023-03-23T12:49:15.329547Z",
      "url": "https://files.pythonhosted.org/packages/5b/11/9eee30bbe6110ac63939df08ba3007f4a8244a086dafb645bacb826a6a9f/spacy_universal_sentence_encoder-0.4.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}