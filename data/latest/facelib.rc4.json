{
  "info": {
    "author": "Kutay YILDIZ",
    "author_email": "kkutayyildiz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# facelib\n\nFace recognition python library(tensorflow, opencv).\n\n## Usage (console)\n\ntry `facelib --help` to discover more\n\n### Train\n\n```bash\nfoo@bar:~$ python3 -m facelib train train_images/ lotr\nCurrent pipeline: ssd_int8_cpu, mobilenetv2_fp32_cpu, densenet_fp32_cpu\nClassifier named `lotr` succesfully trained and saved.\n```\n\n* Folder structure:  \ntrain_images/  \n├───elijah_wood/  \n├───├──0.jpg  \n├───├──1.jpg  \n├───liv_tyler/  \n├───├──0.jpg  \n├───├──1.jpg  \n...  \n\n| Image Name                      | Image                                                                                                                               |\n| ------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| train_images/ian_mckellen/0.jpg | <img src=https://github.com/kutayyildiz/facelib/raw/master/facelib/_demo/lotr/train_images/ian_mckellen/0.jpg width=200 height=100> |\n| train_images/seanastin/0.jpg    | ![seanastin](https://github.com/kutayyildiz/facelib/raw/master/facelib/_demo/lotr/train_images/sean_astin/0.jpg)                    |\n\n### Predict\n\n```bash\nfoo@bar:~$ python3 -m facelib predict test_images/ -clf lotr -c -p\nCurrent pipeline: ssd_int8_cpu, mobilenetv2_fp32_cpu, densenet_fp32_cpu\n1.jpg\n├───10 faces detected\n├───['billy_boyd', 'sean_astin', 'viggo_mortensen', 'elijah_wood', 'liv_tyler', 'dominic_monaghan', 'sean_bean', 'ian_mckellen', 'peter_jackson', 'orlando_bloom']\n2.jpg\n├───5 faces detected\n├───['dominic_monaghan', 'billy_boyd', 'elijah_wood', 'sean_astin', 'peter_jackson']\n3.jpg\n├───6 faces detected\n├───['orlando_bloom', 'dominic_monaghan', 'john_rhys_davies', 'sean_astin', 'elijah_wood', 'billy_boyd']\n0.jpeg\n├───5 faces detected\n├───['dominic_monaghan', 'orlando_bloom', 'elijah_wood', 'liv_tyler', 'billy_boyd']\n```\n\n* Folder structure:  \ntest_images/  \n├──0.jpeg  \n├──1.jpg  \n├──2.jpg  \n├──3.jpg  \n\n* Generated folders/files:  \ntest_images_facelib_cropped/  \n├───elijah_wood/  \n├───├──2_2.jpg  \n├───├──3_1.jpg  \n├───├──4_3.jpg  \n├───liv_tyler/  \n├───├──3_0.jpg  \n├───├──4_1.jpg  \n...\n\n| Image Name                                      | Image                                                                                                                               |\n| ----------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| test_images_facelib_cropped/billy_boyd/0_1.jpg  | ![billyboyd](https://github.com/kutayyildiz/facelib/raw/master/facelib/_demo/lotr/test_images_facelib_cropped/billy_boyd/0_1.jpg)   |\n| test_images_facelib_cropped/liv_tyler/4_1.jpg   | ![livtyler](https://github.com/kutayyildiz/facelib/raw/master/facelib/_demo/lotr/test_images_facelib_cropped/liv_tyler/4_1.jpg)     |\n| test_images_facelib_cropped/elijah_wood/3_1.jpg | ![elijahwood](https://github.com/kutayyildiz/facelib/raw/master/facelib/_demo/lotr/test_images_facelib_cropped/elijah_wood/3_1.jpg) |\n| test_images_facelib_plotted/1.jpg               | ![1](https://github.com/kutayyildiz/facelib/raw/master/facelib/_demo/lotr/test_images_facelib_plotted/1.jpg)                        |\n\n## Usage (python)\n\n```python\nfrom facelib import facerec\nimport cv2\n# You can use face_detector, landmark_detector or feature_extractor individually using .predict method. e.g.(bboxes = facedetector.predict(img))\nface_detector = facerec.SSDFaceDetector()\nlandmark_detector = facerec.LandmarkDetector()\nfeature_extractor = facerec.FeatureExtractor()\n\npipeline = facerec.Pipeline(face_detector, landmark_detector, feature_extractor)\npath_img = './path_to_some_image.jpg'\nimg = cv2.imread(path_img)\nimg = img[...,::-1] # cv2 returns bgr format but every method inside this package takes rgb format\nbboxes, landmarks, features = pipeline.predict(img)\n# Note that values returned (bboxes and landmarks) are in fraction.[0,1]\n```\n\n## Installation\n\n### Pip installation\n\n```bash\npip3 install facelib\n```\n\n### TFLite runtime installation\n\nTo use facelib.facerec package use the following bash command to install tflite-runtime pip package.\n\n```bash\npython3 -m facelib --install-tflite\n```\n\nor you can install from [tensorflow.org](https://www.tensorflow.org/lite/guide/python)\n\n### Dev package\n\nTensorflow is required for facelib.dev package. If you wish you can download facelib with tensorflow using the following command.\n\n```bash\npip3 install facelib[dev]\n```\n\n## Info\n\n### Dataset\n\nFeature extraction models are trained using insightfaces [MS1M-Arcface.](https://github.com/deepinsight/insightface/wiki/Dataset-Zoo)  \nLandmark Detection models are trained using [VggFace2.](http://www.robots.ox.ac.uk/~vgg/data/vgg_face2/)\n\n## Contents\n\n### Image Augmentation\n\n- [x] Random augmentation for landmark detection\n\n### Layers\n\n- [x] DisturbLabel\n\n### Face Alignment\n\n- [x] Insightface\n- [x] GoldenRatio\n- [x] Custom Implementations\n\n### TFRecords\n\n- [ ] Widerface to TFRecords converter\n- [ ] VggFace2 to TFRecords converter\n- [ ] COFW to TFRecords converter\n\n### Loss Functions\n\n#### Feature Extraction\n\n- [x] ArcFace\n- [x] CombinedMargin\n- [x] SphereFace(A-Softmax)\n- [ ] Center\n- [x] CosFace\n\n#### Landmark Detection\n\n- [x] EuclideanDistance(with different norms)\n\n### Pretrained Models\n\n#### Face Detection\n\n- [x] SSD\n- [ ] MTCNN\n\n#### Face Feature Extraction\n\n- [x] MobileFaceNet\n- [x] SqueezeNet\n- [x] MobileNet\n- [x] MobileNetV2\n- [x] DenseNet\n- [x] NasNetMobile\n\n#### Scripts\n\n- [ ] Feature extraction model training\n- [ ] Landmark detection model training\n- [ ] Chokepoint test on pipeline\n\n#### Facial Landmark Detection\n\n- [ ] SqueezeNet\n- [x] MobileNet\n- [x] MobileNetV2\n- [ ] DenseNet\n\n## References\n\n|                              |                                                                                                                                                                                                                                            |\n| ---------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| WiderFace                    | Yang, Shuo, Ping Luo, Chen Change Loy, and Xiaoou Tang. “WIDER FACE: A Face Detection Benchmark.” ArXiv:1511.06523 [Cs], November 20, 2015. <https://arxiv.org/abs/1511.06523>                                                             |\n| ArcFace                      | Deng, Jiankang, Jia Guo, Niannan Xue, and Stefanos Zafeiriou. “ArcFace: Additive Angular Margin Loss for Deep Face Recognition.” ArXiv:1801.07698 [Cs], January 23, 2018. <https://arxiv.org/abs/1801.07698>                               |\n| MobileFaceNet                | Chen, Sheng, Yang Liu, Xiang Gao, and Zhen Han. “MobileFaceNets: Efficient CNNs for Accurate Real-Time Face Verification on Mobile Devices.” CoRR abs/1804.07573 (2018). <http://arxiv.org/abs/1804.07573>                                 |\n| VggFace2                     | Cao, Qiong, Li Shen, Weidi Xie, Omkar M. Parkhi, and Andrew Zisserman. “VGGFace2: A Dataset for Recognising Faces across Pose and Age.” ArXiv:1710.08092 [Cs], October 23, 2017. <http://arxiv.org/abs/1710.08092>                         |\n| DenseNet                     | G. Huang, Z. Liu, L. van der Maaten, and K. Q. Weinberger, “Densely Connected Convolutional Networks,” arXiv:1608.06993 [cs], Jan. 2018. <http://arxiv.org/abs/1608.06993>                                                                 |\n| GoldenRatio (face alignment) | M. Hassaballah, K. Murakami, and S. Ido, “Face detection evaluation: a new approach based on the golden ratio,” SIViP, vol. 7, no. 2, pp. 307–316, Mar. 2013. <http://link.springer.com/10.1007/s11760-011-0239-3>                         |\n| SqueezeNet                   | F. N. Iandola, S. Han, M. W. Moskewicz, K. Ashraf, W. J. Dally, and K. Keutzer, “SqueezeNet: AlexNet-level accuracy with 50x fewer parameters and <0.5MB model size,” arXiv:1602.07360 [cs], Feb. 2016.  <http://arxiv.org/abs/1602.07360> |\n| MobileNet                    | A. G. Howard et al., “MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications,” arXiv:1704.04861 [cs], Apr. 2017. <http://arxiv.org/abs/1704.04861>                                                             |\n| MobileNetV2                  | M. Sandler, A. Howard, M. Zhu, A. Zhmoginov, and L.-C. Chen, “MobileNetV2: Inverted Residuals and Linear Bottlenecks,” arXiv:1801.04381 [cs], Jan. 2018. <http://arxiv.org/abs/1801.04381>                                                 |\n| CosFace                      | H. Wang et al., “CosFace: Large Margin Cosine Loss for Deep Face Recognition,” arXiv:1801.09414 [cs], Jan. 2018. <http://arxiv.org/abs/1801.09414>                                                                                         |\n| SphereFace                   | W. Liu, Y. Wen, Z. Yu, M. Li, B. Raj, and L. Song, “SphereFace: Deep Hypersphere Embedding for Face Recognition,” arXiv:1704.08063 [cs], Apr. 2017. <http://arxiv.org/abs/1704.08063>                                                      |\n| Bottleneck Layer             | K. He, X. Zhang, S. Ren, and J. Sun, “Deep Residual Learning for Image Recognition,” arXiv:1512.03385 [cs], Dec. 2015. <http://arxiv.org/abs/1512.03385>                                                                                   |\n| MS-Celeb-1M                  | Y. Guo, L. Zhang, Y. Hu, X. He, and J. Gao, “MS-Celeb-1M: A Dataset and Benchmark for Large-Scale Face Recognition,” arXiv:1607.08221 [cs], Jul. 2016. <http://arxiv.org/abs/1607.08221>                                                   |\n| DisturbLabel                 | arXiv:1605.00055 [cs.CV]                                                                                                                                                                                                                   |\n| Single Shot Detector         | [1]W. Liu et al., “SSD: Single Shot MultiBox Detector,” arXiv:1512.02325 [cs], Dec. 2016. <https://arxiv.org/abs/1512.02325>                                                                                                               |\n\n## Links\n\n|                        |                                                                                                           |\n| ---------------------- | --------------------------------------------------------------------------------------------------------- |\n| Insightface            | <https://github.com/deepinsight/insightface>                                                              |\n| Tensorflow             | <https://github.com/tensorflow/tensorflow>                                                                |\n| Tensorflow-Addons      | <https://github.com/tensorflow/addons>                                                                    |\n| Insightface-DatasetZoo | <https://github.com/deepinsight/insightface/wiki/Dataset-Zoo>                                             |\n| Tensorflow-ModelZoo    | <https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md> |\n| Cascade Data           | <https://github.com/opencv/opencv/tree/master/data>                                                       |\n| TFLite Python          | <https://www.tensorflow.org/lite/guide/python>                                                            |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kutayyildiz/facelib",
    "keywords": "face,recognition,detection,tensorflow,lite,keras,loss,layer,edgetpu",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "facelib",
    "package_url": "https://pypi.org/project/facelib/",
    "platform": "",
    "project_url": "https://pypi.org/project/facelib/",
    "project_urls": {
      "Homepage": "https://github.com/kutayyildiz/facelib",
      "Source": "https://github.com/kutayyildiz/facelib"
    },
    "release_url": "https://pypi.org/project/facelib/1.2.1/",
    "requires_dist": [
      "joblib",
      "opencv-python",
      "numpy",
      "scikit-image",
      "scikit-learn",
      "tensorflow ; extra == 'dev'"
    ],
    "requires_python": ">=3.5, <3.8",
    "summary": "Face Recognition (train/test/deploy)(tensorflow/tflite/keras/edgetpu)",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6872626,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38bfeb72fb64cdd03d2d748aaabfcd4f7343e66115278dc9057b192c6ed6acc8",
          "md5": "e57df02b86d71a5788c7a5be0e65a4c3",
          "sha256": "aa0991953677244e622e1cf38d438c1390058caac1a31f9fd665ea9d19619646"
        },
        "downloads": -1,
        "filename": "facelib-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e57df02b86d71a5788c7a5be0e65a4c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.8",
        "size": 42241656,
        "upload_time": "2020-03-16T14:14:59",
        "upload_time_iso_8601": "2020-03-16T14:14:59.472111Z",
        "url": "https://files.pythonhosted.org/packages/38/bf/eb72fb64cdd03d2d748aaabfcd4f7343e66115278dc9057b192c6ed6acc8/facelib-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "114c8d574e838a1041fcc8b4cdcd4743c4a202e79b756eb52d263eab62adf467",
          "md5": "f978e23c5804a2098acd07fb2d3ce363",
          "sha256": "91536b0e224e00842b0922754c8fe6d446e6ea84ae467641bfcdd54af8062757"
        },
        "downloads": -1,
        "filename": "facelib-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f978e23c5804a2098acd07fb2d3ce363",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <3.8",
        "size": 42184058,
        "upload_time": "2020-03-16T14:16:14",
        "upload_time_iso_8601": "2020-03-16T14:16:14.708408Z",
        "url": "https://files.pythonhosted.org/packages/11/4c/8d574e838a1041fcc8b4cdcd4743c4a202e79b756eb52d263eab62adf467/facelib-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9a08168643280de7759374f95a968d3ee1f191f7ba89fb238d64c50aa2ca107",
          "md5": "b61576688bb9f3f27e2c73230cf907e5",
          "sha256": "3aa7cc0e50d3d41a110d29441e00ba620854c93f6864bf892423380ba83cf222"
        },
        "downloads": -1,
        "filename": "facelib-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b61576688bb9f3f27e2c73230cf907e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.8",
        "size": 29614,
        "upload_time": "2020-03-24T12:00:10",
        "upload_time_iso_8601": "2020-03-24T12:00:10.776853Z",
        "url": "https://files.pythonhosted.org/packages/d9/a0/8168643280de7759374f95a968d3ee1f191f7ba89fb238d64c50aa2ca107/facelib-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d4b09599856329ae838e57329b3208078daa64e529db7e8c5afd914d1130da5",
          "md5": "0a1a07a3fc35a9f85ed45a506da23899",
          "sha256": "d5b2ac11fddd8454097e8df5ba0f4c6327668d0e8f30681d4c6d6cee437718ea"
        },
        "downloads": -1,
        "filename": "facelib-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0a1a07a3fc35a9f85ed45a506da23899",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <3.8",
        "size": 22093,
        "upload_time": "2020-03-24T12:00:12",
        "upload_time_iso_8601": "2020-03-24T12:00:12.456910Z",
        "url": "https://files.pythonhosted.org/packages/5d/4b/09599856329ae838e57329b3208078daa64e529db7e8c5afd914d1130da5/facelib-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a339f21d16d2ece4269389bf570bde15c52a9424ecc5b7445aba8141bdce3db",
          "md5": "fef6a10d1af275fe7e32b3903fdedaac",
          "sha256": "9f5317a1ed294b69932b39a6d91f4415a9e8da50a252bad19e29cad3460ccc73"
        },
        "downloads": -1,
        "filename": "facelib-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fef6a10d1af275fe7e32b3903fdedaac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.8",
        "size": 29588,
        "upload_time": "2020-03-24T12:11:35",
        "upload_time_iso_8601": "2020-03-24T12:11:35.230047Z",
        "url": "https://files.pythonhosted.org/packages/8a/33/9f21d16d2ece4269389bf570bde15c52a9424ecc5b7445aba8141bdce3db/facelib-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07d86b2d301cb6c4a21026ee6ff0fbdc819fcc1e9baa630ef2a74d8b614afcce",
          "md5": "fa2682683490f60553f925c5de215138",
          "sha256": "a3c85fd5b053bc84656e610d8cb763fdc3cc770eb3811d6d5aeee92676753a05"
        },
        "downloads": -1,
        "filename": "facelib-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa2682683490f60553f925c5de215138",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.8",
        "size": 29631,
        "upload_time": "2020-03-24T12:22:16",
        "upload_time_iso_8601": "2020-03-24T12:22:16.726451Z",
        "url": "https://files.pythonhosted.org/packages/07/d8/6b2d301cb6c4a21026ee6ff0fbdc819fcc1e9baa630ef2a74d8b614afcce/facelib-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c223cea6cf7ae5196070a4540a14f2c01ad2ce69d6c0544ba68754cf6f6ac195",
          "md5": "3ca68ef808c36da63de927cdc82d3557",
          "sha256": "7265f8db27b09b17fdeceffa17ef5cf5dc03924c11fe18451afbc0a77623dd25"
        },
        "downloads": -1,
        "filename": "facelib-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3ca68ef808c36da63de927cdc82d3557",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <3.8",
        "size": 22095,
        "upload_time": "2020-03-24T12:22:18",
        "upload_time_iso_8601": "2020-03-24T12:22:18.024788Z",
        "url": "https://files.pythonhosted.org/packages/c2/23/cea6cf7ae5196070a4540a14f2c01ad2ce69d6c0544ba68754cf6f6ac195/facelib-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07d86b2d301cb6c4a21026ee6ff0fbdc819fcc1e9baa630ef2a74d8b614afcce",
        "md5": "fa2682683490f60553f925c5de215138",
        "sha256": "a3c85fd5b053bc84656e610d8cb763fdc3cc770eb3811d6d5aeee92676753a05"
      },
      "downloads": -1,
      "filename": "facelib-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fa2682683490f60553f925c5de215138",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5, <3.8",
      "size": 29631,
      "upload_time": "2020-03-24T12:22:16",
      "upload_time_iso_8601": "2020-03-24T12:22:16.726451Z",
      "url": "https://files.pythonhosted.org/packages/07/d8/6b2d301cb6c4a21026ee6ff0fbdc819fcc1e9baa630ef2a74d8b614afcce/facelib-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c223cea6cf7ae5196070a4540a14f2c01ad2ce69d6c0544ba68754cf6f6ac195",
        "md5": "3ca68ef808c36da63de927cdc82d3557",
        "sha256": "7265f8db27b09b17fdeceffa17ef5cf5dc03924c11fe18451afbc0a77623dd25"
      },
      "downloads": -1,
      "filename": "facelib-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3ca68ef808c36da63de927cdc82d3557",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5, <3.8",
      "size": 22095,
      "upload_time": "2020-03-24T12:22:18",
      "upload_time_iso_8601": "2020-03-24T12:22:18.024788Z",
      "url": "https://files.pythonhosted.org/packages/c2/23/cea6cf7ae5196070a4540a14f2c01ad2ce69d6c0544ba68754cf6f6ac195/facelib-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}