{
  "info": {
    "author": "Jaedson Silva",
    "author_email": "imunknowuser@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "PySeqTest ⚡️\n================\n\nO PySeqTest foi criado pensando em testes em sequência, executando os\ntestes um a um. Esse tipo de teste é útil quando testamos algo que\nenvolve arquivos, banco de dados, conexões a rede, etc. O objetivo do\n``pyseqtest`` é ser simples, com verificações de valores boleanos,\ncomparações e exceções.\n\nExemplo de uso\n--------------\n\nVamos começar a utilizar o PySeqTest! Neste primeiro exemplo, faremos o\nteste de uma simples calculadora. Veja o código:\n\n.. code:: python\n\n   import pyseqtest\n\n\n   class TestCalculator(pyseqtest.SeqTest):\n       def __init__(self):\n           super().__init__()\n\n       def test_sum(self):\n           condition = (10 + 5) == 15\n           self.is_true(condition)\n\n       def test_multiplication(self):\n           condition = (2 * 5) == 4\n           self.is_false(condition)\n\n       def test_division(self):\n           # error demonstration\n           condition = (10 / 2) == 90\n           self.is_true(condition, msg_error='Oh, the result is wrong')\n\n\n   if __name__ == '__main__':\n       TestCalculator().run()\n\nNo código acima, utilizamos os os seguintes métodos do ``pyseqtest``:\n\n1. ``is_true``: Verifica se o valor é verdadeiro;\n2. ``is_false``: Verifica se o valor é falso.\n\nEm todos os métodos que verificam o resultado, podemos especificar,\nopcionalmente, uma mensagem de erro caso o resultado não seja o\nesperado.\n\nApós executar o teste, o resultado será:\n\n::\n\n   PySeqTest\n   =========\n   3 testes presentes.\n\n   0:00:00.000018: test_sum\n   0:00:00.000009: test_multiplication\n   ==============================\n   [ ERROR ] test_division: Oh, the result is wrong\n\nTodos os métodos para afirmação de teste\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n1. ``is_true``: Verifica se o valor é verdadeiro;\n2. ``is_false``: Verifica se o valor é falso;\n3. ``is_none``: Verifica se o valor None;\n4. ``check_any_value``: Verifica se o valor de entrada e igual ao valor\n   esperado.\n\nUtilizando ``check_any_value``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nO ``check_any_value`` é utilizado para verificar dois valores: o valor\nde entrada, e o valor de saída esperado. Veja um exemplo:\n\n.. code:: python\n\n   import pyseqtest\n\n\n   class TestCalculator(pyseqtest.SeqTest):\n       def __init__(self):\n           super().__init__()\n\n       def test_sum(self):\n       # em vez de:\n       condition = (10 + 5) == 10\n       self.is_true(condition)\n\n       # podemos fazer assim:\n       self.check_any_value(15, 10)\n\n       # o primeiro parâmetro é o valor\n       # de entrada, o segundo, é valor\n       # de saída esperado.\n\nNeste exemplo, um erro seria retornado, já que 15 não é igual a 10.",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GNU GPL v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PySeqTest",
    "package_url": "https://pypi.org/project/PySeqTest/",
    "platform": null,
    "project_url": "https://pypi.org/project/PySeqTest/",
    "project_urls": {
      "Código fonte": "https://github.com/jaedsonpys/pyseqtest"
    },
    "release_url": "https://pypi.org/project/PySeqTest/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Testes unitários em sequência",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13286466,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "479648a92db9d8d9a61bde80f87ec6dcb5b7767440f5c0f879fb9543b5f98abd",
          "md5": "9b9d7a276ff34cb376885940d3027371",
          "sha256": "d8782fac84c094f8f8ff3e37f678ebe713394c57f106bbb032721a44d962dd4c"
        },
        "downloads": -1,
        "filename": "PySeqTest-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9b9d7a276ff34cb376885940d3027371",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3459,
        "upload_time": "2022-02-13T17:41:36",
        "upload_time_iso_8601": "2022-02-13T17:41:36.829086Z",
        "url": "https://files.pythonhosted.org/packages/47/96/48a92db9d8d9a61bde80f87ec6dcb5b7767440f5c0f879fb9543b5f98abd/PySeqTest-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f245ce19d3704c2dc3d8b3b6db2be8251413393c6f706461e56d7708a5407f3",
          "md5": "a5f407f9f55448483b346a34bee21f0a",
          "sha256": "afc4df8b624c5d057513fbe4dc4059d05c8f4cf393a219bdf5f61084d79af463"
        },
        "downloads": -1,
        "filename": "PySeqTest-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a5f407f9f55448483b346a34bee21f0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3455,
        "upload_time": "2022-02-13T18:13:30",
        "upload_time_iso_8601": "2022-02-13T18:13:30.991060Z",
        "url": "https://files.pythonhosted.org/packages/1f/24/5ce19d3704c2dc3d8b3b6db2be8251413393c6f706461e56d7708a5407f3/PySeqTest-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb94c828c34dfadef56b9feccab535c6250a3e286772463350f08090cfd41b66",
          "md5": "129fa31ea4e7d7063d0983bd50be414d",
          "sha256": "0e8507f18f31407893a880d3ec83c4de31e6c043b7b3847d2382b828f0ea8a21"
        },
        "downloads": -1,
        "filename": "PySeqTest-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "129fa31ea4e7d7063d0983bd50be414d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3441,
        "upload_time": "2022-03-24T19:56:50",
        "upload_time_iso_8601": "2022-03-24T19:56:50.665052Z",
        "url": "https://files.pythonhosted.org/packages/bb/94/c828c34dfadef56b9feccab535c6250a3e286772463350f08090cfd41b66/PySeqTest-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb94c828c34dfadef56b9feccab535c6250a3e286772463350f08090cfd41b66",
        "md5": "129fa31ea4e7d7063d0983bd50be414d",
        "sha256": "0e8507f18f31407893a880d3ec83c4de31e6c043b7b3847d2382b828f0ea8a21"
      },
      "downloads": -1,
      "filename": "PySeqTest-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "129fa31ea4e7d7063d0983bd50be414d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3441,
      "upload_time": "2022-03-24T19:56:50",
      "upload_time_iso_8601": "2022-03-24T19:56:50.665052Z",
      "url": "https://files.pythonhosted.org/packages/bb/94/c828c34dfadef56b9feccab535c6250a3e286772463350f08090cfd41b66/PySeqTest-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}