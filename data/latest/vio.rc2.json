{
  "info": {
    "author": "Meaning",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Typing :: Typed"
    ],
    "description": "# VIO API Wrapper\n\n## Simple to install \nsimply do\n`pip install vio`\n\n## Documentation\n\nClick [here](https://viopy.rtfd.io) to read the documentation\n\n## Examples\n\n### Getting the Current Market\n\n#### Code\n```python\nfrom vio import Vio\n\n# Initialize the Vio object with your API key.\nv = Vio(\"KEY\")\n\n# Get the current market.\ncurrent_market = v.current()\n\n# Print the current market for Korrelite\nprint(current_market[\"Korrelite\"])\n```\n\n#### Output\n\n```\n+Korrelite---+-------------+------------+------------+------------+------+\n|            | Sell Volume | Sell Price | Buy Volume | Buy Price  |      |\n+------------+-------------+------------+------------+------------+------+\n|            | 363006      | 4.45       | 1595761    | 3.7        |      |\n+------------+-------------+------------+------------+------------+------+\n| 162066609  | 6452        | 4.65       | 120400875  | 14058      | 3.5  |       \n| 650846808  | 12968       | 4.7        | 108285033  | 999958     | 3.5  |       \n| 173250721  | 32501       | 4.75       | 428485469  | 16000      | 3.5  |       \n| 3363298512 | 7645        | 4.95       | 2700713836 | 86155      | 3.45 |       \n| 2239255818 | 6583        | 6.9        | 650846808  | 102106     | 3.35 |       \n|            |             |            | 1248486511 | 180661     | 3.2  |       \n+------------+-------------+------------+------------+------------+------+ \n```\n\n### Getting the History of an Item\n\n#### Code\n\n```python\nfrom vio import Vio\n\n# Initialize the Vio object with your API key.\nv = Vio(\"KEY\")\n\n# Get the history of Korrelite.\nkorrelite_history = v.item_history(\"Korrelite\")\n\n# Create a list of Buy Prices\nsell_prices = [i.summary.buy_price for i in korrelite_history]\n\n# Print the average buy price.\nprint(sum(sell_prices)/len(sell_prices))\n```\n\n#### Output\n\n```\n3.518448940269686\n```\n\n### Example of Discord Market Bot using VioWrapper\n\n#### Code\n```python\nimport discord\nfrom discord import app_commands\nfrom discord.ext import commands\n\nfrom datetime import datetime\n\nfrom vio import AsyncVio\n\nintents = discord.Intents.default()\nintents.members = True\nintents.presences = True\n\nclass TestBot(commands.Bot):\n    def __init__(self, v) -> None:\n        super().__init__(\n            command_prefix=\"!\",\n            application_id=10000000000001, # Replace with your Application ID\n            intents=intents,\n            case_insensitive=True,\n            )\n        self.vio = v\n\n    async def on_ready(self) -> None:\n        print(\"Bot is ready.\")\n        await self.vio.listen() # Start listening for market data\n\n    async def setup_hook(self) -> None:\n        await self.tree.sync()\n\nv = AsyncVio(\"Vio KEY\") # Replace with your VIO Api Key\nclient = TestBot(v)\n\ndef number_format(num):\n    magnitude = 0\n    while abs(num) >= 1000:\n        magnitude += 1\n        num /= 1000.0\n    # add more suffixes if you need them\n    return '%.2f%s' % (num, ['', 'K', 'M', 'G', 'T', 'P'][magnitude])\n\ndef market_to_embed(market: MarketInstance):\n    embed = discord.Embed(\n        title=f\"{market.item} Market\",\n        description=f\"Scanned at: {discord.utils.format_dt(datetime.fromtimestamp(market.scan_info.unix), style='R')}\",\n    )\n    embed.add_field(name=\"Best Sell Price\", value=str(market.summary.sell_price), inline=True)\n    embed.add_field(name=\"Best Buy Price\", value=str(market.summary.buy_price), inline=True)\n    embed.add_field(name=\"Market Volume\", value=f'{number_format(market.summary.sell_volume)}/{number_format(market.summary.buy_volume)}', inline=True)\n    embed.add_field(name=\"Sell Orders\", value=\"\\n\".join(f\"{order.volume:,.0f} @ {order.price:,.2f} from {order.id}\" for order in market.listings.sell), inline=False)\n    embed.add_field(name=\"Buy Orders\", value=\"\\n\".join(f\"{order.volume:,.0f} @ {order.price:,.2f} from {order.id}\" for order in market.listings.buy))\n    return embed\n\n@client.vio.event\nasync def on_market_update(market: MarketInstance):\n    channel = await client.fetch_channel(TEST_CHANNEL) # Replace with your channel ID\n\n    # Process ItemInstance to an embed\n    embed = market_to_embed(market[\"Korrelite\"])\n\n    # Send the embed to the channel\n    await channel.send(embed=embed)\n\n@client.tree.command()\nasync def market(interaction: discord.Interaction, item: str):\n    \"\"\"Market Item Search\n    Get the Current Market Listings of a Specific Item\n    \"\"\"\n\n    # Get the current Market\n    current_market = await v.current()\n\n    # Get the item requested from the market\n    market = current_market[item]\n\n    # Process the ItemMarket instance into an embed\n    embed = market_to_embed(market)\n\n    # Send the embed to the user\n    await interaction.response.send_message(embed=embed)\n\n@market.autocomplete(\"item\")\nasync def market_autocomplete(interaction: discord.Interaction, current: str):\n    itemlist = [\n            app_commands.Choice(name=i, value=i)\n            for i in [\"Korrelite\", \"Reknite\", \"Axnit\", \"RedNarcor\", \"Narcor\", \"Water\", \"Vexnium\"] if i.lower().startswith(current.lower())\n        ]\n    return itemlist\n\n\nclient.run(\"BOT_TOKEN\") # Replace with your Bot Token\n```\n\n#### Output\n\n![Example of Command Being Run](https://i.imgur.com/YgXflIN.png)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://viopy.rtfd.io",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Vio",
    "package_url": "https://pypi.org/project/Vio/",
    "platform": null,
    "project_url": "https://pypi.org/project/Vio/",
    "project_urls": {
      "Homepage": "https://viopy.rtfd.io"
    },
    "release_url": "https://pypi.org/project/Vio/0.0.12/",
    "requires_dist": [
      "websockets (==10.3)",
      "httpx (==0.22.0)",
      "terminaltables (==3.1.10)"
    ],
    "requires_python": "",
    "summary": "A Wrapper for the Vio API",
    "version": "0.0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14121907,
  "releases": {
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50538dd0697c9be6836c85f9c4a20d04e2cd0dd7aec6a23e37f865302d50fb61",
          "md5": "de4536b1530eed2ab127c3f1f001fe3b",
          "sha256": "5ad5f8455a57a05695374f6daf0df2a9fc0e402fdbaff9eaf237f9c977cc9f49"
        },
        "downloads": -1,
        "filename": "Vio-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de4536b1530eed2ab127c3f1f001fe3b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7891,
        "upload_time": "2022-06-14T00:12:52",
        "upload_time_iso_8601": "2022-06-14T00:12:52.401427Z",
        "url": "https://files.pythonhosted.org/packages/50/53/8dd0697c9be6836c85f9c4a20d04e2cd0dd7aec6a23e37f865302d50fb61/Vio-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e4cf4a390d7738f6b6f7ee88115e50b8868734c993998fe62ce1c28bbfd4cff",
          "md5": "2f7c110a54ac0dbae6e06ee355cd0a49",
          "sha256": "c24e2e0fe55317c102ba9f3b1baebf68ba10818eb1dda3033f1091d2f2dd457f"
        },
        "downloads": -1,
        "filename": "Vio-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "2f7c110a54ac0dbae6e06ee355cd0a49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7694,
        "upload_time": "2022-06-14T00:12:54",
        "upload_time_iso_8601": "2022-06-14T00:12:54.068171Z",
        "url": "https://files.pythonhosted.org/packages/1e/4c/f4a390d7738f6b6f7ee88115e50b8868734c993998fe62ce1c28bbfd4cff/Vio-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f81b178d07923c12c23b8634e6adf8e3f334f58628bc5d518101b0d8ac4a0db",
          "md5": "df36afbfc55fac320f5aac2aa15e2b58",
          "sha256": "8772a77daeb41beafc642296ede7856eab5889789e258912d3d135fd3344fa3a"
        },
        "downloads": -1,
        "filename": "Vio-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df36afbfc55fac320f5aac2aa15e2b58",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7892,
        "upload_time": "2022-06-14T00:14:42",
        "upload_time_iso_8601": "2022-06-14T00:14:42.432432Z",
        "url": "https://files.pythonhosted.org/packages/7f/81/b178d07923c12c23b8634e6adf8e3f334f58628bc5d518101b0d8ac4a0db/Vio-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6caeaeb22a661c0e8e429a30feda316e1b225e0c2ac0890bf86462bf76d4c3aa",
          "md5": "9ece452cb82d66e07cbc09b88746e967",
          "sha256": "aceb6d7559ad3f2545ed44d8e292c1ce344bc1f909a0132f899b820e2ad30cec"
        },
        "downloads": -1,
        "filename": "Vio-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "9ece452cb82d66e07cbc09b88746e967",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7684,
        "upload_time": "2022-06-14T00:14:44",
        "upload_time_iso_8601": "2022-06-14T00:14:44.357876Z",
        "url": "https://files.pythonhosted.org/packages/6c/ae/aeb22a661c0e8e429a30feda316e1b225e0c2ac0890bf86462bf76d4c3aa/Vio-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f81b178d07923c12c23b8634e6adf8e3f334f58628bc5d518101b0d8ac4a0db",
        "md5": "df36afbfc55fac320f5aac2aa15e2b58",
        "sha256": "8772a77daeb41beafc642296ede7856eab5889789e258912d3d135fd3344fa3a"
      },
      "downloads": -1,
      "filename": "Vio-0.0.12-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "df36afbfc55fac320f5aac2aa15e2b58",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7892,
      "upload_time": "2022-06-14T00:14:42",
      "upload_time_iso_8601": "2022-06-14T00:14:42.432432Z",
      "url": "https://files.pythonhosted.org/packages/7f/81/b178d07923c12c23b8634e6adf8e3f334f58628bc5d518101b0d8ac4a0db/Vio-0.0.12-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6caeaeb22a661c0e8e429a30feda316e1b225e0c2ac0890bf86462bf76d4c3aa",
        "md5": "9ece452cb82d66e07cbc09b88746e967",
        "sha256": "aceb6d7559ad3f2545ed44d8e292c1ce344bc1f909a0132f899b820e2ad30cec"
      },
      "downloads": -1,
      "filename": "Vio-0.0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "9ece452cb82d66e07cbc09b88746e967",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7684,
      "upload_time": "2022-06-14T00:14:44",
      "upload_time_iso_8601": "2022-06-14T00:14:44.357876Z",
      "url": "https://files.pythonhosted.org/packages/6c/ae/aeb22a661c0e8e429a30feda316e1b225e0c2ac0890bf86462bf76d4c3aa/Vio-0.0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}