{
  "info": {
    "author": "Keyywind",
    "author_email": "kevinwater127@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Programming Language :: Python :: 3"
    ],
    "description": "# KeyIO Package Documentation\n***\n##### This library provides various functions to control and manage IO events\n\n##### As of version 0.0.1, there are three modules in this package.\n\n1. **keyutils** - _used to manage keyboard IO events_\n2. **mouseutils** - _used to manage mouse IO events_\n3. **windowutils** - _used to manage window IO events_\n\n##### To install this package, type in command prompt:\n    pip install keyio\n***\n## [1] Controlling and Monitoring Keyboard Events\n\n#### (1-A) Simulating Key Pressing\n\n###### press_key(self, target_key : int) -> KeyUtils\n\n    #example 1\n    from keyio.keyutils import KeyUtils\n    key_utils  = KeyUtils()\n    target_key = KeyUtils.Key.KEY_ESC\n    key_utils.press_key(target_key)\n\n#### (1-B) Simulating Key Releasing\n\n###### release_key(self, target_key : int) -> KeyUtils\n\n    #example 2\n    from keyio.keyutils import KeyUtils\n    key_utils  = KeyUtils()\n    target_key = KeyUtils.Key.KEY_ESC\n    key_utils.release_key(target_key)\n\n#### (1-C-1) KeyCode List\n\n###### KeyUtils.KeyCode\n\n|KeyCode|Value|Description|\n|---|---|---|\n|CHAR_0|48|0|\n|CHAR_1|49|1|\n|CHAR_2|50|2|\n|CHAR_3|51|3|\n|CHAR_4|52|4|\n|CHAR_5|53|5|\n|CHAR_6|54|6|\n|CHAR_7|55|7|\n|CHAR_8|56|8|\n|CHAR_9|57|9|\n|CHAR_A|65|A|\n|CHAR_B|66|B|\n|CHAR_C|67|C|\n|CHAR_D|68|D|\n|CHAR_E|69|E|\n|CHAR_F|70|F|\n|CHAR_G|71|G|\n|CHAR_H|72|H|\n|CHAR_I|73|I|\n|CHAR_J|74|J|\n|CHAR_K|75|K|\n|CHAR_L|76|L|\n|CHAR_M|77|M|\n|CHAR_N|78|N|\n|CHAR_O|79|O|\n|CHAR_P|80|P|\n|CHAR_Q|81|Q|\n|CHAR_R|82|R|\n|CHAR_S|83|S|\n|CHAR_T|84|T|\n|CHAR_U|85|U|\n|CHAR_V|86|V|\n|CHAR_W|87|W|\n|CHAR_X|88|X|\n|CHAR_Y|89|Y|\n|CHAR_Z|90|Z|\n\n#### (1-C-2) Key List\n\n###### KeyUtils.Key\n\n|Key|Value|Description|\n|---|---|---|\n|KEY_BACKSPACE|0x08|~|\n|KEY_TAB|0x09|~|\n|KEY_CLEAR|0x0C|~|\n|KEY_ENTER|0x0D|~|\n|KEY_SHIFT|0x10|~|\n|KEY_CTRL|0x11|~|\n|KEY_ALT|0x12|~|\n|KEY_PAUSE|0x13|~|\n|KEY_CAPS_LOCK|0x14|~|\n|KEY_ESC|0x1B|~|\n|KEY_SPACE|0x20|~|\n|KEY_PAGE_UP|0x21|~|\n|KEY_PAGE_DOWN|0x22|~|\n|KEY_END|0x23|~|\n|KEY_HOME|0x24|~|\n|KEY_LEFT_ARROW|0x25|~|\n|KEY_UP_ARROW|0x26|~|\n|KEY_RIGHT_ARROW|0x27|~|\n|KEY_DOWN_ARROW|0x28|~|\n|KEY_SELECT|0x29|~|\n|KEY_PRINT|0x2A|~|\n|KEY_EXECUTE|0x2B|~|\n|KEY_SNAPSHOT|0x2C|~|\n|KEY_INSERT|0x2D|~|\n|KEY_DELETE|0x2E|~|\n|KEY_HELP|0x2F|~|\n|KEY_LEFT_WINDOW|0x5B|~|\n|KEY_RIGHT_WINDOW|0x5C|~|\n|KEY_APPLICATION|0x5D|~|\n|KEY_SLEEP|0x5F|~|\n|KEY_NUMPAD_0|0x60|~|\n|KEY_NUMPAD_1|0x61|~|\n|KEY_NUMPAD_2|0x62|~|\n|KEY_NUMPAD_3|0x63|~|\n|KEY_NUMPAD_4|0x64|~|\n|KEY_NUMPAD_5|0x65|~|\n|KEY_NUMPAD_6|0x66|~|\n|KEY_NUMPAD_7|0x67|~|\n|KEY_NUMPAD_8|0x68|~|\n|KEY_NUMPAD_9|0x69|~|\n|KEY_MULTIPLY|0x6A|~|\n|KEY_ADD|0x6B|~|\n|KEY_SEPARATOR|0x6C|~|\n|KEY_SUBTRACT|0x6D|~|\n|KEY_DECIMAL|0x6E|~|\n|KEY_DIVIDE|0x6F|~|\n|KEY_F1|0x70|~|\n|KEY_F2|0x71|~|\n|KEY_F3|0x72|~|\n|KEY_F4|0x73|~|\n|KEY_F5|0x74|~|\n|KEY_F6|0x75|~|\n|KEY_F7|0x76|~|\n|KEY_F8|0x77|~|\n|KEY_F9|0x78|~|\n|KEY_F10|0x79|~|\n|KEY_F11|0x7A|~|\n|KEY_F12|0x7B|~|\n|KEY_F13|0x7C|~|\n|KEY_F14|0x7D|~|\n|KEY_F15|0x7E|~|\n|KEY_F16|0x7F|~|\n|KEY_F17|0x80|~|\n|KEY_F18|0x81|~|\n|KEY_F19|0x82|~|\n|KEY_F20|0x83|~|\n|KEY_F21|0x84|~|\n|KEY_F22|0x85|~|\n|KEY_F23|0x86|~|\n|KEY_F24|0x87|~|\n|KEY_NUMLOCK|0x90|~|\n|KEY_SCROLL|0x91|~|\n|KEY_LEFT_SHIFT|0xA0|~|\n|KEY_RIGHT_SHIFT|0xA1|~|\n|KEY_LEFT_CTRL|0xA2|~|\n|KEY_RIGHT_CTRL|0xA3|~|\n|KEY_LEFT_ALT|0xA4|~|\n|KEY_RIGHT_ALT|0xA5|~|\n|KEY_OEM_1|0xBA|~|\n|KEY_OEM_PLUS|0xBB|~|\n|KEY_OEM_COMMA|0xBC|~|\n|KEY_OEM_MINUS|0xBD|~|\n|KEY_OEM_PERIOD|0xBE|~|\n|KEY_OEM_2|0xBF|~|\n|KEY_OEM_3|0xC0|~|\n|KEY_OEM_4|0xDB|~|\n|KEY_OEM_5|0xDC|~|\n|KEY_OEM_6|0xDD|~|\n|KEY_OEM_7|0xDE|~|\n|KEY_OEM_8|0xDF|~|\n|KEY_OEM_102|0xE2|~|\n\n#### (1-D) Monitoring Key Events  \n\n###### Example\n\n    #example 3\n    from keyio.keyutils import KeyUtils\n    key_utils    = KeyUtils()\n    key_1        = KeyUtils.Key.KEY_ESC\n    key_2        = KeyUtils.Key.KEY_SPACE\n    keep_running = True\n    @key_utils.monitor([ key_1, key_2 ])\n    def monitor_exit(key_code : int, key_pressed : bool) -> None:\n        global keep_running\n        keep_running = False\n    @key_utils.monitor(\"abcdefg092\")\n    def monitor_char(key_code : int, key_pressed : bool) -> None:\n        print(chr(key_code), end = ' ')\n        if (key_pressed):\n            print(\"pressed\")\n        else:\n            print(\"released\")\n    key_utils.initialize_monitors()\n    key_utils.start_thread()\n    while (keep_running):\n        pass\n    key_utils.stop_thread()\n\n***\n## [2] Controlling and Monitoring Mouse Events\n\n#### (2-A) Simulating Mouse Pressing\n\n###### press_button(self, mouse_button : int) -> MouseUtils\n\n    #example 4\n    from keyio.mouseutils import MouseUtils\n    mouse_utils  = MouseUtils()\n    mouse_button = MouseUtils.LEFT_BUTTON\n    mouse_utils.press_button(mouse_button)\n\n#### (2-B) Simulating Mouse Releasing\n\n###### release_button(self, mouse_button : int) -> MouseUtils\n\n    #example 5\n    from keyio.mouseutils import MouseUtils\n    mouse_utils  = MouseUtils()\n    mouse_button = MouseUtils.MIDDLE_BUTTON\n    mouse_utils.release_button(mouse_button)\n\n#### (2-C) Simulating Scroll\n\n###### scroll(self, dy : int) -> MouseUtils\n\n    #example 6\n    from keyio.mouseutils import MouseUtils\n    mouse_utils  = MouseUtils()\n    dy           = -10\n    mouse_utils.scroll(dy)\n\n#### (2-D) Obtaining Cursor Coordinates\n\n###### get_mouse_coord(self) -> Tuple[ int, int ]\n\n    #example 7\n    from keyio.mouseutils import MouseUtils\n    mouse_utils = MouseUtils()\n    (x, y)      = mouse_utils.get_mouse_coord()\n    print(\"({},{})\".format(x, y))\n\n#### (2-E) Setting Cursor Coordinates\n\n###### set_mouse_coord(self, x : int, y : int) -> MouseUtils\n\n    #example 8\n    from keyio.mouseutils import MouseUtils\n    mouse_utils = MouseUtils()\n    (x, y)      = (127, 89)\n    mouse_utils.set_mouse_coord(x, y)\n\n#### (2-F) Mouse Event List\n\n###### MouseUtils\n\n|Button/Event|Value|Description|\n|---|---|---|\n|LEFT_BUTTON|0|0|\n|MIDDLE_BUTTON|1|1|\n|RIGHT_BUTTON|2|2|\n|MOUSE_MOVE|3|3|\n\n#### (2-G) Monitoring Mouse Events  \n\n###### Example\n\n    #example 9\n    from typing import Tuple\n    from keyio.mouseutils import MouseUtils\n    mouse_utils  = MouseUtils()\n    button_1     = MouseUtils.LEFT_BUTTON\n    button_2     = MouseUtils.RIGHT_BUTTON\n    button_3     = MouseUtils.MIDDLE_BUTTON\n    keep_running = True\n    @mouse_utils.monitor([ button_1, button_2, button_3 ])\n    def monitor_exit(mouse_button : int, button_pressed : bool) -> None:\n        global keep_running\n        keep_running = False\n    @mouse_utils.monitor(MouseUtils.MOUSE_MOVE)\n    def monitor_char(mouse_button : int, mouse_coord : Tuple[ int, int ]) -> None:\n        print(\"({},{})\".format(*mouse_coord))\n    mouse_utils.initialize_monitors()\n    mouse_utils.start_thread()\n    while (keep_running):\n        pass\n    mouse_utils.stop_thread()\n\n## [3] Controlling and Observing Window Events\n\n#### (3-A) Obtain Bounding Box of Selected Window\n\n###### get_foreground_window(self) -> Tuple[ int, int, int, int ]\n\n    #example 10\n    from keyio.windowutils import WindowUtils\n    window_utils = WindowUtils()\n    (sx, sy, ex, ey) = window_utils.get_foreground_window()\n    print(\"Window: ({},{},{},{})\".format(sx, sy, ex, ey))\n\n#### (3-B) Set Bounding Box of Selected Window\n\n###### set_foreground_window(self, sx : int, sy : int, dx : int = -1, dy : int = -1, flag : int = 0x0040) -> WindowUtils\n\n    #example 11\n    from keyio.windowutils import WindowUtils\n    window_utils = WindowUtils()\n    window_utils.set_foreground_window(0, 0, 800, 625)\n\n#### (3-C) Set Position of Selected Window\n\n###### move_foreground_window(self, sx : int, sy : int, flag : int = 0x0040) -> WindowUtils\n\n    #example 12\n    from keyio.windowutils import WindowUtils\n    window_utils = WindowUtils()\n    window_utils.move_foreground_window(0, 0)\n\n#### (3-D) Flag List\n\n###### WindowUtils.WindowFlags\n\n|WindowFlags|Value|Description|\n|---|---|---|\n|SWP_DRAWFRAME|0x0020|~|\n|SWP_FRAMECHANGED|0x0020|~|\n|SWP_HIDEWINDOW|0x0080|~|\n|SWP_NOACTIVATE|0x0010|~|\n|SWP_NOCOPYBITS|0x0100|~|\n|SWP_NOMOVE|0x0002|~|\n|SWP_NOSIZE|0x0001|~|\n|SWP_NOREDRAW|0x0008|~|\n|SWP_NOZORDER|0x0004|~|\n|SWP_SHOWWINDOW|0x0040|~|\n|SWP_NOOWNERZORDER|0x0200|~|\n|SWP_NOREPOSITION|0x0200|~|\n|SWP_NOSENDCHANGING|0x0400|~|\n|SWP_DEFERERASE|0x2000|~|\n|SWP_ASYNCWINDOWPOS|0x4000|~|\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/keyywind/keyio",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "keyio",
    "package_url": "https://pypi.org/project/keyio/",
    "platform": null,
    "project_url": "https://pypi.org/project/keyio/",
    "project_urls": {
      "Bug Tracker": "https://github.com/keyywind/keyio/issues",
      "Homepage": "https://github.com/keyywind/keyio"
    },
    "release_url": "https://pypi.org/project/keyio/1.0.0/",
    "requires_dist": [
      "markdown"
    ],
    "requires_python": ">=3.7",
    "summary": "A simple package to manage basic IO operations for mouse, keyboard and windows.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15266324,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d07f1dc4e5a688cea906ffbc545901d744eb63e0aa462d5c68a6faaca04e675",
          "md5": "7219cc9a722921a783bbffc09997b7f8",
          "sha256": "2f994a3c45e14bf8905aff2b6af869cd5ea3918517ecbb42027b9d2de871e8af"
        },
        "downloads": -1,
        "filename": "keyio-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7219cc9a722921a783bbffc09997b7f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 2174,
        "upload_time": "2022-08-23T14:36:04",
        "upload_time_iso_8601": "2022-08-23T14:36:04.405042Z",
        "url": "https://files.pythonhosted.org/packages/3d/07/f1dc4e5a688cea906ffbc545901d744eb63e0aa462d5c68a6faaca04e675/keyio-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bddec8151ff37b6f55aeb87a853c4a160bcb0dd7e0475b527b7c7485054ee6d",
          "md5": "6281658cfb388ce6dd74071b25170e60",
          "sha256": "47ee0ccb9dd50358f55fc8eaf4828c13fbd2dac345cf7f354525abb7b2dbbfc5"
        },
        "downloads": -1,
        "filename": "keyio-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6281658cfb388ce6dd74071b25170e60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2235,
        "upload_time": "2022-08-23T14:36:06",
        "upload_time_iso_8601": "2022-08-23T14:36:06.091419Z",
        "url": "https://files.pythonhosted.org/packages/2b/dd/ec8151ff37b6f55aeb87a853c4a160bcb0dd7e0475b527b7c7485054ee6d/keyio-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c4758cfb32186c9d9279dc3f52cd1339431126e7dcd620a7f89c252199e9a78",
          "md5": "aa81b5d91468866881ed4fccde862969",
          "sha256": "e7262e2f0ffc9a64e1d4f5b5a3ea4910b3865d2ece5cb587840db12050d84f39"
        },
        "downloads": -1,
        "filename": "keyio-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa81b5d91468866881ed4fccde862969",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 1669094,
        "upload_time": "2022-09-30T10:33:15",
        "upload_time_iso_8601": "2022-09-30T10:33:15.988672Z",
        "url": "https://files.pythonhosted.org/packages/3c/47/58cfb32186c9d9279dc3f52cd1339431126e7dcd620a7f89c252199e9a78/keyio-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c4758cfb32186c9d9279dc3f52cd1339431126e7dcd620a7f89c252199e9a78",
        "md5": "aa81b5d91468866881ed4fccde862969",
        "sha256": "e7262e2f0ffc9a64e1d4f5b5a3ea4910b3865d2ece5cb587840db12050d84f39"
      },
      "downloads": -1,
      "filename": "keyio-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aa81b5d91468866881ed4fccde862969",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 1669094,
      "upload_time": "2022-09-30T10:33:15",
      "upload_time_iso_8601": "2022-09-30T10:33:15.988672Z",
      "url": "https://files.pythonhosted.org/packages/3c/47/58cfb32186c9d9279dc3f52cd1339431126e7dcd620a7f89c252199e9a78/keyio-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}