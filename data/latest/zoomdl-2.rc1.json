{
  "info": {
    "author": "Olivier Cloux",
    "author_email": "zoomdl@cloux.dev",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ZoomDL\n\n## Support\nLike this project? Consider supporting me, for more awesome updates\n\n<a class=\"bmc-button\" target=\"_blank\" href=\"https://www.buymeacoffee.com/Battleman\"><img src=\"https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg\" alt=\"Buy me a coffee\"><span style=\"margin-left:15px;font-size:28px !important;\">Buy me a coffee</span></a>\n\n## ANNOUNCEMENT LOOKING FOR TESTERS\nMore and more, I face the challenge of testing. I code on my own Debian machine, and use a Windows 10 VM to compile the executable. But testing has become more and more a challenge, especially for new features.\n\nIf you are anyhow interested in helping (there are various ways to!), go to the dedicated issue (#32), and comment there. The concept is still very young for me, sorry that.\n\n- [ZoomDL](#zoomdl)\n  - [Support](#support)\n  - [ANNOUNCEMENT LOOKING FOR TESTERS](#announcement-looking-for-testers)\n  - [Goal](#goal)\n  - [Availability](#availability)\n  - [Installation](#installation)\n    - [Linux/OSX](#linuxosx)\n    - [Windows](#windows)\n  - [Usage](#usage)\n    - [Cookies / SSO / Captcha / Login](#cookies--sso--captcha--login)\n    - [About syntax](#about-syntax)\n    - [About quotes [IMPORTANT]](#about-quotes-important)\n    - [Validity of urls](#validity-of-urls)\n  - [Building from sources](#building-from-sources)\n    - [Linux](#linux)\n    - [Windows](#windows-1)\n  - [Requirements](#requirements)\n  - [Acknowledgements](#acknowledgements)\n\n## Goal\nConferences, meetings and presentations held on Zoom are often recorded and stored in the cloud, for a finite amount of time. The host can chose to make them available to download, but it is not mandatory.\n\nNonetheless, I believe if you can view it, you can download it. This script makes it easy to download any video stored on the Zoom Cloud. You just need to provide a valid zoom record URL, and optionally a filename, and it will download the file.\n\n## Availability\nThe script was developed and tested under GNU/Linux (precisely, Debian 10). Thus, it should work for about any GNU/Linux distro out there, with common settings. You basically only need Python3 in your path.\n\n*New from 2020.06.09* There now exists an executable file `zoomdl.exe` for Windows. It was kinda tested under Windows 10. Because I never coded under Windows, I have very few tests, mostly empirical ones. Expect bugs! If you encounter a Windows-specific error, don't expect much support. If the error is related to the general logic of the program, report it and I'll do my best to fix it.\n\n## Installation\n### Linux/OSX\nYou need to have a valid Python3 installation. Except from that, just download the script `zoomdl` (not `zoomdl.exe`) and run it like a normal binary. If you wish to make it available system-wide, you can copy it to `/usr/local/bin/` (or anywhere else available in your PATH). Then you can simply use it wherever you want.\n\nThe following two commands make that easy. In a terminal, run:\n```bash\nsudo wget https://github.com/Battleman/zoomdl/releases/latest/download/zoomdl -O /usr/bin/zoomdl\nsudo chmod +x /usr/bin/zoomdl\n```\nYou will be prompted to enter your password (your computer password, not zoom). It's likely that you won't see anything as you type it, don't worry, it [is normal](https://askubuntu.com/questions/112069/nothing-shows-up-in-the-terminal-when-i-type-my-password) ([even for OSX](https://osxdaily.com/2015/02/04/terminal-wont-show-password-when-typed/))\n\nOnce you have done that, you can use your terminal and type the commands normally.\n\n### Windows\n**This is still in beta**\nGrab the dedicated binary `zoomdl.exe`, and launch it using your command line. If you don't know how, visit [this wikihow](https://www.wikihow.com/Run-an-EXE-File-From-Command-Prompt). You may encounter warning from your anti-virus, you can ignore them (I'm not evil, pinky-promise). You probably don't need a Python3 installation, it *should* be contained within the executable.\n\nIf there is a domain in your url, make sure to include it, it's crucial.\n## Usage\n`zoomdl [-h] -u/--url 'url' [-f/--fname 'filename'] [-p/--password 'password'] [-c/--count-clips count] [-d/--filename-add-date] [--user-agent 'custom_user_agent]`\n* `-u/--url` is mandatory, it represents the URL of the video\n* `-f/--fname` is optional, it is the name of the resulting file _without extension_. If nothing is provided, the default name given by Zoom will be used. Extension (`.mp4`, `.mkv`,... is automatic)\n* `-p/--password` is too optional. Set it when your video has a password.\n* `-c/--count-clips`: Sometimes, one URL can contain multiple clips. This tunes the number of clips that will be downloaded. Recordings with multiple clips seem to be quite rare, but do exist. The parameter `count` works as follow:\n  * 0 means: download all of them (starting from the current clip)\n  * 1 means: download only the first/given clip\n  * \\> 1 means: download until you reach this number of clip (or the end)\n* `-d/--filename-add-date` will append the date of the recording to the filename. **without effect if `-f` is specified**\n* `--user-agent` (no shorthand notation): lets you specify a custom User-Agent (only do that if you know what you're doing and why)\n* `--cookies` (no shorthand notation): specify the path to a cookie jar file. \n\n### Cookies / SSO / Captcha / Login\nSome videos are protected with more than a password. You require an SSO, or to solve a captcha. The `cookies` option allows you to perform all the steps in a browser, and then use the cookies to access the video. This functionality is similar to Youtube-dl's same option.\n\n**Howto:**\n1. (Only once, the first time) In your favourite browser (works for Firefox-based or Chrome-based), install a cookies-export extension. Cookies must some in the _Netscape format_. There are multiple extensions out there, chose your favourite. For example [Firefox](https://addons.mozilla.org/en-US/firefox/addon/cookies-txt/), [Other Firefox](https://addons.mozilla.org/en-US/firefox/addon/export-cookies-txt/), [Chrome](https://chrome.google.com/webstore/detail/get-cookiestxt/bgaddhkoddajcdgocldbbfleckgcbcid), [Other Chrome](https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg)\n2. With the same browser, visit the video you want to download; pass all required verifications (SSO, captcha, login,...), until you are able to view the video\n3. Using the aformentioned extension, export your cookies. You need the cookies for the domain (`.zoom.us`), so export at least \"cookies for this site\", or \"cookies for this domain\", or whatever it's called.\n4. Save generated file somewhere (for example, `Downloads/cookies.txt`)\n5. When calling ZoomDL, use the option `--cookies path/to/the/cookies.txt`\n\nIf you want to download several videos who use the same login (like SSO), you only need to export the cookies once\n\n### About syntax\nI see a lot of people who don't understand what the above means. Here is a short explanation:\n* This is a _command_, with multiple possible _parameters_.\n* Parameters usually have a short version (with one dash, like `-u`) and an equivalent long version (with two dashes, like `--url`); the short and long version are shown separated by a `/`; you must only use one of them.\n* The parameters between square brackets are optional (like `-f`, that allows you to input a custom filename). The others (for the moment, only `-u`) are mandatory.\n* The order of parameters don't matter\n* the `-h` parameter only displays a short help and commands explanation\n\nFor example, those are all valid commands (ofc by replacing the URLs):\n```\nzoomdl -u 'https://my_url' -f \"recording_from_monday\"\nzoomdl --url 'https://my_url'\nzoomdl -p '$28fn2f8' --filename-add-date --filename \"recording_from_tuesday\" -u 'https://my_url' --user-agent \"Windows 10 wonderful User-Agent\" -v 3\n```\n### About quotes [IMPORTANT]\nThe quotes are not mandatory, but if your filename/url/password/... contains reserved characters (`\\`, `&`, `$`,`%`...), quotes are the way to go.\n\nUnder Linux/OSX, it is strongly advised to use *single quotes*, because `\"4$g3.2\"` will replace `$g3` by nothing, while `'4$g3.2'` will leave the string as-is.\n\nUnder Windows, I *think* you must use double quotes everywhere. Don't quote me on that.\n\n### Validity of urls\nThere are 3 type of valid urls.\n* Those starting with _https://zoom.us/rec/play/..._\n* Or, with a domain, _https://X.zoom.us/rec/play/..._ where _X_ is a domain, something like _us02web_, _epfl_,... or similar.\n* Finally, governemantal urls: _https://X.zoomgov.com/rec/play/..._ (same as above; X may be empty)\n\n## Building from sources\nIf you wish to build from sources, here is a quick howto. First, you need to clone the repository and enter it with a terminal. Then:\n### Linux\nRun the command `./devscript.sh compile`. It basically installs all the dependencies with pip in a temporary directory, then zips it.\n\n### Windows\n* Install [pyinstaller](https://www.pyinstaller.org/) (usually `pip install -U pyinstaller`) \n* Run the command `wincompile.bat`. It calls just calls `pyinstaller` and cleans the generated folders and files, leaving only the exe file. \n\n## Requirements\nAll dependencies are bundled within the executable. This allows to make a standalone execution without need for external libraries.\n\nIf you wish to build it yourself, see `requirements.txt`. The most important requirement is [requests](https://github.com/psf/requests). Please see [acknowledgements](#acknowledgements) for a note on that.\n\n## Acknowledgements\nThe folder executable contains [requests](https://github.com/psf/requests) (and its dependencies), an awesome wrapper for HTTP(s) calls. Please check them out!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/battleman/zoomdl",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zoomdl-2",
    "package_url": "https://pypi.org/project/zoomdl-2/",
    "platform": "",
    "project_url": "https://pypi.org/project/zoomdl-2/",
    "project_urls": {
      "Bug Tracker": "https://github.com/battleman/zoomdl/issues",
      "Homepage": "https://github.com/battleman/zoomdl"
    },
    "release_url": "https://pypi.org/project/zoomdl-2/1970.1.1/",
    "requires_dist": [
      "requests",
      "demjson",
      "tqdm"
    ],
    "requires_python": ">=3.6",
    "summary": "Download Zoom recorded meetings easily",
    "version": "1970.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10722753,
  "releases": {
    "1970.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdf7f4aefb15d18915311e15249020cb138b84bb3a8c9192aef698b4137ecc07",
          "md5": "0695f2e8eaca5c67845a9663ff9ba45a",
          "sha256": "824d269ec2c2d5a6e0654a0a66ab0af47a5c11f72ba414e7a5bd9ac6498d1b65"
        },
        "downloads": -1,
        "filename": "zoomdl_2-1970.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0695f2e8eaca5c67845a9663ff9ba45a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25755,
        "upload_time": "2021-06-23T16:21:04",
        "upload_time_iso_8601": "2021-06-23T16:21:04.799789Z",
        "url": "https://files.pythonhosted.org/packages/cd/f7/f4aefb15d18915311e15249020cb138b84bb3a8c9192aef698b4137ecc07/zoomdl_2-1970.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c1e724849469e7559f7eecb6a8d59f460b3effb78ccb0f73048689974dd5487",
          "md5": "15159b15919d49fe99b263d02c3d5fd0",
          "sha256": "e5aad265b78a2ab9bcfbfb93b4712dc8c150b8d6ee018848644db9f167108117"
        },
        "downloads": -1,
        "filename": "zoomdl_2-1970.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "15159b15919d49fe99b263d02c3d5fd0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28607,
        "upload_time": "2021-06-23T16:21:06",
        "upload_time_iso_8601": "2021-06-23T16:21:06.628731Z",
        "url": "https://files.pythonhosted.org/packages/3c/1e/724849469e7559f7eecb6a8d59f460b3effb78ccb0f73048689974dd5487/zoomdl_2-1970.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cdf7f4aefb15d18915311e15249020cb138b84bb3a8c9192aef698b4137ecc07",
        "md5": "0695f2e8eaca5c67845a9663ff9ba45a",
        "sha256": "824d269ec2c2d5a6e0654a0a66ab0af47a5c11f72ba414e7a5bd9ac6498d1b65"
      },
      "downloads": -1,
      "filename": "zoomdl_2-1970.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0695f2e8eaca5c67845a9663ff9ba45a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 25755,
      "upload_time": "2021-06-23T16:21:04",
      "upload_time_iso_8601": "2021-06-23T16:21:04.799789Z",
      "url": "https://files.pythonhosted.org/packages/cd/f7/f4aefb15d18915311e15249020cb138b84bb3a8c9192aef698b4137ecc07/zoomdl_2-1970.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c1e724849469e7559f7eecb6a8d59f460b3effb78ccb0f73048689974dd5487",
        "md5": "15159b15919d49fe99b263d02c3d5fd0",
        "sha256": "e5aad265b78a2ab9bcfbfb93b4712dc8c150b8d6ee018848644db9f167108117"
      },
      "downloads": -1,
      "filename": "zoomdl_2-1970.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "15159b15919d49fe99b263d02c3d5fd0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 28607,
      "upload_time": "2021-06-23T16:21:06",
      "upload_time_iso_8601": "2021-06-23T16:21:06.628731Z",
      "url": "https://files.pythonhosted.org/packages/3c/1e/724849469e7559f7eecb6a8d59f460b3effb78ccb0f73048689974dd5487/zoomdl_2-1970.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}