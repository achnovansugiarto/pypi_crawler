{
  "info": {
    "author": "Pablo Recio Quijano",
    "author_email": "pablo@zocolab.es",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)"
    ],
    "description": ".. contents::\n\n=========\nDjango QR\n=========\n\nInformation\n===========\n\nDjango QR is a simple Django application that provides some templatetags\nthat allows to include automatically QR codes on the Django site.\n\nInstallation\n============\n\nOnce is installed from PyPI, you just need to add it to your settings as\n'qrcode':\n\n::\n\n  INSTALLED_APPS = (..., 'qrcode', ...)\n\nUsage\n=====\n\nIts usage is very simple. You just need to use the templatetag as follows:\n\n::\n\n  {% load qr_tags %}\n\n  ...\n\n  {% qr_from_text \"text\" \"size\" %}\n  or\n  {% qr_from_mail \"mail_address\" \"size\" %}\n\n\nWhere:\n\n * Size is not mandatory, and defines the dimensions of the QR code as following: 's' (120x120 pixels), 'm' (230x230 pixels), 'l' (350x350) or an integer with the size that you want to give to the QR-code (like 40, 80 or 500). Any other option will be ignored and will use 'm' as default.\n * qr_from_mail tag just add a simple \"mailto:\" at the beggining, because some qr scanners can detect that as an email address in order to send it an email.\n\nQR-code for contact information\n-------------------------------\n\nThere's also a templatetag to render a QR-code that allows to store\nsome contact information, such as name, phone number, email address or\nour company name.\n\nIts usage is similiar to the basics:\n\n::\n\n   {% qr_from contact contact \"size\" %}\n\nWhere:\n\n * Size is the same as previosly\n * contact should be a Python dictionary (or any other hash structure) that could contain the following elements:\n\n  * *name* - Complete name\n  * *phone_number*\n  * *email*\n  * *url* - some url address, your blog or personal webpage\n  * *company*\n\nFor instance, you could create a contact dictionary like the following:\n\n::\n\n    contact = {\n        'name': 'Pablo Recio',\n        'phone_number': '00000000',\n        'email': 'foo@example.com',\n        'url': 'http://www.zocolab.es',\n        'company': 'Zocolab',\n    }\n\n\nQR-code of Django object URL\n----------------------------\n\nAnother templatetag can be used to render a QR-code that links to a Django object URL. As\nthe previous templatetags, the usage is very simple:\n\n::\n   {% qr_from_object object \"size\" %}\n\nWhere:\n\n * Size is the same as previosly\n * Object it's an instance of a Django model, that must implements the 'get_absolute_url' method in order to get the object's address.\n\nChange service for QR generating\n--------------------------------\n\nBy default, django-qr uses Google Chart for generating the QR-code. But this can be changed with a new template. The default\ntemplate *qrcode/qr_tag.html* contains the following:\n\n::\n\n<img src=\"http://chart.apis.google.com/chart?cht=qr&chs={{ size }}x{{ size }}&chl={{ text }}\" />\n\nBut if you want to use some other service, like *qrserver*, you just need to add a new template in your templates dirs with\nthe following code:\n\n::\n\n<img src=\"http://api.qrserver.com/v1/create-qr-code/?size={{ size }}x{{ size }}&data={{ text }}\" />\n\nThe idea is that your *qrcode/qr_tag.html* contains an img tag and the call to the service that you want, mantaining the\nvariables *size* and *data*.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zocolab/django-qrcode",
    "keywords": "django qr code qrcode",
    "license": "LGPL 3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-qrcode",
    "package_url": "https://pypi.org/project/django-qrcode/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-qrcode/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/zocolab/django-qrcode"
    },
    "release_url": "https://pypi.org/project/django-qrcode/0.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django application that provides simple templatetags to generate QR-codes",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 790389,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b5e0ac06756ca2a003f9a608951559672f386ec27ba093e934d3d1936494022",
          "md5": "7405450cf2d283913e034b6665db5b97",
          "sha256": "99eb721d52c4e693c71065e8f7dfaeba509c69b26257754d60ca0da89500959d"
        },
        "downloads": -1,
        "filename": "django-qrcode-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7405450cf2d283913e034b6665db5b97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2966,
        "upload_time": "2011-08-18T11:20:37",
        "upload_time_iso_8601": "2011-08-18T11:20:37.212349Z",
        "url": "https://files.pythonhosted.org/packages/4b/5e/0ac06756ca2a003f9a608951559672f386ec27ba093e934d3d1936494022/django-qrcode-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31df009f1ecd8012b4e282a792dd4d0ebec781d78aa703cf1ebbc5d776643f6f",
          "md5": "6d6524265428ee4d75347629cf4fc37f",
          "sha256": "3beee68d36157afbb1dbb41458bc4c9fe624eb30126e1564a148d3d8efc2f806"
        },
        "downloads": -1,
        "filename": "django-qrcode-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6d6524265428ee4d75347629cf4fc37f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3549,
        "upload_time": "2011-09-07T16:44:07",
        "upload_time_iso_8601": "2011-09-07T16:44:07.964317Z",
        "url": "https://files.pythonhosted.org/packages/31/df/009f1ecd8012b4e282a792dd4d0ebec781d78aa703cf1ebbc5d776643f6f/django-qrcode-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c0ff2608d09ab9c908348f66c77d8c584c9e39523c4580d3c2b735656cc4d15",
          "md5": "f91839bea6a5110927de2b0407b49be0",
          "sha256": "22e97bbd235af46d9f015b248e6a761a5f5354741fdf06da55091fbc3777bbf1"
        },
        "downloads": -1,
        "filename": "django-qrcode-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f91839bea6a5110927de2b0407b49be0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3955,
        "upload_time": "2011-09-12T10:33:06",
        "upload_time_iso_8601": "2011-09-12T10:33:06.104274Z",
        "url": "https://files.pythonhosted.org/packages/1c/0f/f2608d09ab9c908348f66c77d8c584c9e39523c4580d3c2b735656cc4d15/django-qrcode-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b2f4263fba93ae6a46776d6a8359ff1e192f38dffcc6f2925d29463375254fa",
          "md5": "ce398a6b424100421b0970280f826176",
          "sha256": "88598af03087859c30b83ecd345dd3e988d739f13543e0bef9274eda18d55e0c"
        },
        "downloads": -1,
        "filename": "django-qrcode-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ce398a6b424100421b0970280f826176",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4188,
        "upload_time": "2011-12-13T10:03:08",
        "upload_time_iso_8601": "2011-12-13T10:03:08.524498Z",
        "url": "https://files.pythonhosted.org/packages/8b/2f/4263fba93ae6a46776d6a8359ff1e192f38dffcc6f2925d29463375254fa/django-qrcode-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b2f4263fba93ae6a46776d6a8359ff1e192f38dffcc6f2925d29463375254fa",
        "md5": "ce398a6b424100421b0970280f826176",
        "sha256": "88598af03087859c30b83ecd345dd3e988d739f13543e0bef9274eda18d55e0c"
      },
      "downloads": -1,
      "filename": "django-qrcode-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ce398a6b424100421b0970280f826176",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4188,
      "upload_time": "2011-12-13T10:03:08",
      "upload_time_iso_8601": "2011-12-13T10:03:08.524498Z",
      "url": "https://files.pythonhosted.org/packages/8b/2f/4263fba93ae6a46776d6a8359ff1e192f38dffcc6f2925d29463375254fa/django-qrcode-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}