{
  "info": {
    "author": "Ivan E. Cao-Berg",
    "author_email": "icaoberg@alumni.cmu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "# halcon\n![Status](https://github.com/icaoberg/falcon/actions/workflows/main.yml/badge.svg)\n[![GitHub issues](https://img.shields.io/github/issues/icaoberg/falcon.svg)](https://github.com/icaoberg/falcon/issues)\n[![GitHub forks](https://img.shields.io/github/forks/icaoberg/falcon.svg)](https://github.com/icaoberg/falcon/network)\n[![GitHub stars](https://img.shields.io/github/stars/icaoberg/falcon.svg)](https://github.com/icaoberg/falcon/stargazers)\n[![PyPI version](https://badge.fury.io/py/halcon.svg)](https://badge.fury.io/py/halcon)\n[![GitHub license](https://img.shields.io/badge/license-GPLv3-blue.svg)](https://raw.githubusercontent.com/icaoberg/falcon/master/LICENSE)\n[![Coverage Status](https://coveralls.io/repos/github/icaoberg/falcon/badge.svg?branch=master)](https://coveralls.io/github/icaoberg/falcon?branch=master)\n\n`halcon` is a python implementation of the Feedback Adaptive Loop for Content-Based Retrieval (FALCON) algorithm as described in\n\n* Leejay Wu, Christos Faloutsos, Katia P. Sycara, and Terry R. Payne. 2000. [FALCON: Feedback Adaptive Loop for Content-Based Retrieval](http://www.cs.cmu.edu/~christos/PUBLICATIONS/vldb2k-falcon.pdf). In Proceedings of the 26th International Conference on Very Large Data Bases (VLDB '00), Amr El Abbadi, Michael L. Brodie, Sharma Chakravarthy, Umeshwar Dayal, Nabil Kamel, Gunter Schlageter, and Kyu-Young Whang (Eds.). Morgan Kaufmann Publishers Inc., San Francisco, CA, USA, 297-306.\n\nFALCON is, as described in the article abstract, \"a novel method that is designed to handle disjunctive queries within metric spaces. The user provides weights for positive examples; our system 'learns' the implied concept and returns similar objects.\"\n\n\n## Pre-Requisites\n- [numpy](http://www.numpy.org/)\n- [scipy](http://www.scipy.org/)\n- [mpmath](http://mpmath.org/)\n\n## Installation\n\nTo install `halcon` run\n\n```\npip3 install --user halcon\n```\n\n## Usage\nThere is only one method that you need to know about\n\n```\nhalcon.search.query(good_set, candidates, alpha=-5,\n        metric='euclidean', normalization='zscore', debug=False)\n```\n\nHere is a brief description of each of the input arguments\n\n* ```good_set``` and ```candidates``` are two lists of lists where each member of both lists has the same shape.\n\n  ```\n  record = [ <identifier>, <initial_score>, <feature_vector>]\n  ```\n\n  For example in ```wine.py```, I download a CSV file where the first ```feature_vector``` looks like this\n\n  ```\n  1,14.23,1.71,2.43,15.6,127,2.8,3.06,.28,2.29,5.64,1.04,3.92,1065\n  ```\n\n  and then I modify it like this\n\n  ```\n  good_set = []\n  identifier = 'wine00'\n  initial_score = 1\n  feature_vector = [1,14.23,1.71,2.43,15.6,127,2.8,3.06,.28,2.29,5.64,1.04,3.92,1065]\n  good_set.append([identifier, initial_score, feature_vector])\n  ```\n\n  For more information about the definition of the initial score, please refer to the article. In all my examples I use a initial score of 1, that is, all images have the same weight. The identifier should be unique (though not enforced), so you can tell images apart. This package assumes every object is represented by a [feature](http://en.wikipedia.org/wiki/Feature_(machine_learning)) vector. Feature calculation and feature selection is beyond the scope of this package. There are many feature calculation/machine learning packages out there that you might find useful, like \n  \n    * [OpenCV](http://opencv.org/)\n    * [mahotas](https://pypi.python.org/pypi/mahotas)\n\n* ```alpha```. For more information about alpha, please refer to the article. The recommended value by the paper is -5, which is the default value used in this package.\n\n* ```metric```. In the research article, a measure of distance ```d``` is used to calculate the distance between two feature vectors. The default value is ```euclidean``` (Euclidean distance) and other supported metrics are 1) ```cityblock``` (Manhattan distance) and 2) ```hamming``` (Hamming distance).\n\n* ```normalization```. Feature normalization option. Default is ```zscore```. Alternative option is ```standard```.\n\n* ```debug```. If debug flag is on, then it should print more information about the calculation as they happen.\n\n## Examples\n### iris.py\n\n```\n$ python examples/iris.py\nThis example uses the iris dataset from\nMachine Learning Repository\nCenter for Machine Learning and Intelligent Systems\nhttp://archive.ics.uci.edu/ml/datasets/Iris\nI will use the first feature vector as my query image\n[[0, 1, array([ 5.1,  3.5,  1.4,  0.2,  1. ])]]\nAnd I will use the rest of the feature vectors to find the most similar images\nNow notice that feature vector with iid1 has the same values iid0\n[1, 1, array([ 5.1,  3.5,  1.4,  0.2,  1. ])]\nSo I expect that if FALCON is working correctly, then iid1 should be the top hit!\nElapsed time: 0.0221660137177 seconds\n\n  Ranking    Identifier  Class                  Score\n---------  ------------  ---------------  -----------\n        0             1  Iris-setosa      0\n        1            28  Iris-setosa      1.27788e-43\n        2             5  Iris-setosa      2.40121e-40\n        3            29  Iris-setosa      2.40121e-40\n        4            40  Iris-setosa      5.83391e-40\n        5             8  Iris-setosa      7.04398e-39\n        6            18  Iris-setosa      1.1259e-35\n        7            41  Iris-setosa      1.51906e-34\n        8            50  Iris-versicolor  6.99696e-34\n        9            37  Iris-setosa      1.09221e-32\n       10            12  Iris-setosa      1.22203e-32\n       11            49  Iris-setosa      2.05046e-32\n       12            11  Iris-setosa      4.25801e-31\n       13            21  Iris-setosa      6.55842e-31\n       14            47  Iris-setosa      5.54098e-29\n       15            36  Iris-setosa      7.93943e-29\n       16             7  Iris-setosa      2.16985e-28\n       17            20  Iris-setosa      4.23544e-28\n       18            25  Iris-setosa      1.67453e-27\n       19             3  Iris-setosa      2.40919e-27\nDo the top results in the list above belong to the same class as the query image?\nIf so, then SCORE! It seems to work.\n```\n\n### wine.py\n\n```\n$ python examples/wine.py\nThis example uses the wine dataset from\nMachine Learning Repository\nCenter for Machine Learning and Intelligent Systems\nhttp://archive.ics.uci.edu/ml/datasets/Wine\nI will use the first three feature vectors as my query wine set\nAnd I will use the rest of the feature vectors to find the most similar images\nElapsed time: 0.0280928611755 seconds\n\n  Ranking  Identifier          Score\n---------  ------------  -----------\n        0  wine1         0\n        1  wine2         0\n        2  wine3         0\n        3  wine21        2.77663e-05\n        4  wine30        0.000629879\n        5  wine23        0.00252617\n        6  wine49        0.00318536\n        7  wine57        0.00456123\n        8  wine36        0.0152067\n        9  wine39        0.0197516\n       10  wine58        0.0243848\n       11  wine9         0.024467\n       12  wine55        0.045762\n       13  wine24        0.046893\n       14  wine7         0.113906\n       15  wine45        0.188355\n       16  wine27        0.201802\n       17  wine41        0.206469\n       18  wine31        0.288536\n       19  wine56        0.291853\n```\n\n## Bugs and Questions\nTo submit bugs about the source code visit\n\n* https://github.com/icaoberg/falcon\n\nTo submit bugs about the documentation visit\n\n* https://github.com/icaoberg/falcon-docs\n\nFor any other inquiries visit those links as well.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "halcon",
    "package_url": "https://pypi.org/project/halcon/",
    "platform": null,
    "project_url": "https://pypi.org/project/halcon/",
    "project_urls": {
      "Bug Tracker": "https://github.com/icaoberg/falcon",
      "Documentation": "https://github.com/icaoberg/falcon-docs",
      "Source Code": "https://github.com/icaoberg/falcon"
    },
    "release_url": "https://pypi.org/project/halcon/1.0.0/",
    "requires_dist": [
      "numpy",
      "scipy",
      "mpmath"
    ],
    "requires_python": ">=3.6",
    "summary": "Python implementation of FALCON: Feedback Adaptive Loop for Content-Based Retrieval",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14732295,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12ce53ea08687962621e56d2ebdaa0a7b59ecdf8b76562069cb3146f8a4bc9a8",
          "md5": "d360b148b694c072f907e3029e27cd49",
          "sha256": "0c8bf2d525ce6d0d3117fdad51ac7bb1fe6fd8fe29cf962100007d8ec05b04d6"
        },
        "downloads": -1,
        "filename": "halcon-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d360b148b694c072f907e3029e27cd49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34039,
        "upload_time": "2014-04-08T05:00:25",
        "upload_time_iso_8601": "2014-04-08T05:00:25.096370Z",
        "url": "https://files.pythonhosted.org/packages/12/ce/53ea08687962621e56d2ebdaa0a7b59ecdf8b76562069cb3146f8a4bc9a8/halcon-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [],
    "0.0.21": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ce6dcb44a03a6ca69e8c9010790d6215f57b8f8982ed3e75a9696a5f75a0e22",
          "md5": "1bf4776efcacf329cfc8aa1bb797b55e",
          "sha256": "466f12f35eea1eaec988f3d7832fe0a339fc696352f0283241a839b7f840982d"
        },
        "downloads": -1,
        "filename": "halcon-0.0.21.tar.gz",
        "has_sig": false,
        "md5_digest": "1bf4776efcacf329cfc8aa1bb797b55e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27150,
        "upload_time": "2016-03-27T21:08:27",
        "upload_time_iso_8601": "2016-03-27T21:08:27.191506Z",
        "url": "https://files.pythonhosted.org/packages/3c/e6/dcb44a03a6ca69e8c9010790d6215f57b8f8982ed3e75a9696a5f75a0e22/halcon-0.0.21.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "956710bac27282a199c8e791fa9456108cbb38e67a893b6a805fffbfe3aecac8",
          "md5": "ac06027408bb0b9b4738174958506d7d",
          "sha256": "dff1b972784a7a25274ce09b00d40980dd92c4c184f1e5bec40af1b190ff8cf2"
        },
        "downloads": -1,
        "filename": "halcon-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac06027408bb0b9b4738174958506d7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19756,
        "upload_time": "2022-08-11T18:37:47",
        "upload_time_iso_8601": "2022-08-11T18:37:47.611776Z",
        "url": "https://files.pythonhosted.org/packages/95/67/10bac27282a199c8e791fa9456108cbb38e67a893b6a805fffbfe3aecac8/halcon-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9326c146b7a3f2f75da4e4ee362a262b6384c1f1892b833cb287f80fbcb99546",
          "md5": "de14bd78162fd2a4a1931f874528bca9",
          "sha256": "d554a9948b3d1023091c0f8397c76f3ea0d68034286ed3b2dc2079537e15344a"
        },
        "downloads": -1,
        "filename": "halcon-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "de14bd78162fd2a4a1931f874528bca9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19784,
        "upload_time": "2022-08-11T18:37:49",
        "upload_time_iso_8601": "2022-08-11T18:37:49.235109Z",
        "url": "https://files.pythonhosted.org/packages/93/26/c146b7a3f2f75da4e4ee362a262b6384c1f1892b833cb287f80fbcb99546/halcon-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "956710bac27282a199c8e791fa9456108cbb38e67a893b6a805fffbfe3aecac8",
        "md5": "ac06027408bb0b9b4738174958506d7d",
        "sha256": "dff1b972784a7a25274ce09b00d40980dd92c4c184f1e5bec40af1b190ff8cf2"
      },
      "downloads": -1,
      "filename": "halcon-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ac06027408bb0b9b4738174958506d7d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19756,
      "upload_time": "2022-08-11T18:37:47",
      "upload_time_iso_8601": "2022-08-11T18:37:47.611776Z",
      "url": "https://files.pythonhosted.org/packages/95/67/10bac27282a199c8e791fa9456108cbb38e67a893b6a805fffbfe3aecac8/halcon-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9326c146b7a3f2f75da4e4ee362a262b6384c1f1892b833cb287f80fbcb99546",
        "md5": "de14bd78162fd2a4a1931f874528bca9",
        "sha256": "d554a9948b3d1023091c0f8397c76f3ea0d68034286ed3b2dc2079537e15344a"
      },
      "downloads": -1,
      "filename": "halcon-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "de14bd78162fd2a4a1931f874528bca9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19784,
      "upload_time": "2022-08-11T18:37:49",
      "upload_time_iso_8601": "2022-08-11T18:37:49.235109Z",
      "url": "https://files.pythonhosted.org/packages/93/26/c146b7a3f2f75da4e4ee362a262b6384c1f1892b833cb287f80fbcb99546/halcon-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}