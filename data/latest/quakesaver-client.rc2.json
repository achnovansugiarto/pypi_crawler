{
  "info": {
    "author": "QuakeSaver",
    "author_email": "info@quakesaver.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# QuakeSaver Client\n\n[![PyPI](https://img.shields.io/pypi/v/quakesaver-client)](https://pypi.org/project/quakesaver-client)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/quakesaver-client)\n[![Test](https://github.com/QuakeSaver/quakesaver-client/actions/workflows/test.yml/badge.svg)](https://github.com/QuakeSaver/quakesaver-client/actions/workflows/test.yml)\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n\nThis is the client for the [QuakeSaver](https://quakesaver.net/) Sensor services.\n\nYou can find the documentation [here](https://quakesaver.github.io/quakesaver-client/).\n\n## Getting Started\n\n### Setting up the client\n\n`EMAIL` and `PASSWORD` correspond to the credentials you use to log in at [https://network.quakesaver.net](https://network.quakesaver.net).\n\n```python\nfrom quakesaver_client import QSClient\n\nEMAIL = \"user@yourorganisation.net\"\nPASSWORD = \"!verstrongpassword1\"\n\nclient = QSClient(email=EMAIL, password=PASSWORD)\n```\n\n### Full example script\n\nAuthenticate against the quakesaver server and download raw, as well as processed data.\n\nPlease note, that for security reasons each login session is only valid for 15 minutes. Thus, the client is not designed for long-term connections but for repeated queries.\n\n```python\n\"\"\"Example script for quakesaver_client usage.\"\"\"\n\nimport sys\nfrom datetime import datetime, timedelta\nfrom pprint import pp\n\nimport obspy\nfrom obspy import Stream\n\nfrom quakesaver_client import QSClient\nfrom quakesaver_client.models.data_product_query import DataProductQuery\nfrom quakesaver_client.models.measurement import MeasurementQuery\n\nEMAIL = \"user@yourorganisation.net\"\nPASSWORD = \"!verstrongpassword1\"\nDATA_PATH = \"./data\"\n\nclient = QSClient(email=EMAIL, password=PASSWORD)\n\n# Get a list of all available sensor IDs:\nsensor_ids = client.get_sensor_ids()\npp(sensor_ids)\n\nif len(sensor_ids) == 0:\n    print(\"No sensors available\")\n    sys.exit()\n\n# For demonstration, we use the first sensor in the list\nsensor_uid_to_get = sensor_ids[0]\n\n# Get the sensor from the client\nsensor = client.get_sensor(sensor_uid_to_get)\npp(sensor.dict())\n\n# Queries such as waveforms, station metadata and measurements (data products calculated\n# on the sensor)\n# require that you select a time window. We use that last 5 hours of data\nend_time = datetime.utcnow()\nstart_time = end_time - timedelta(hours=5)\n\n# Query various Measurements. In this case we calculate a rolling `mean` over 10 minutes\n# time windows.\n# Other `aggregators` are:\n#  * None (default)\n#  * max\n#  * min\nquery = MeasurementQuery(\n    start_time=start_time,\n    end_time=end_time,\n    interval=timedelta(minutes=10),\n    aggregator=\"mean\",\n)\nresult = sensor.get_jma_intensity(query)\nprint(result)\nresult = sensor.get_peak_ground_acceleration(query)\nprint(result)\nresult = sensor.get_spectral_intensity(query)\nprint(result)\nresult = sensor.get_rms_offset(query)\nprint(result)\n\n# Query various Data Products. You can only get 100 results at once, which is why there\n# are limit and skip values. You can get data products from a specific time frame, by\n# specifying start and end times.\nend_time = datetime.utcnow()\nstart_time = end_time - timedelta(hours=5)\nquery = DataProductQuery(\n    start_time=start_time,\n    end_time=end_time,\n    limit=100,\n    skip=0,\n)\nresult = sensor.get_event_records(query)\nprint(result)\nresult = sensor.get_hv_spectra(query)\nprint(result)\nresult = sensor.get_noise_autocorrelations(query)\nprint(result)\n\n# Download station meta data as StationXML and store them in a local directory.\nfile_path = sensor.get_stationxml(\n    starttime=start_time,\n    endtime=end_time,\n    level=\"response\",\n    location_to_store=DATA_PATH,\n)\nwith open(file_path, \"r\") as file:\n    print(file.read())\n\n# Download raw full waveforms from the sensor. Note that you can only query what is in\n# the sensor's ringbuffer (usually the last ~ 48 hours).\nfile_path = sensor.get_waveform_data(\n    start_time=start_time, end_time=end_time, location_to_store=DATA_PATH\n)\n\n# Read the file into obspy for further processing...\nstream: Stream = obspy.read(file_path)\nfor trace in stream.traces:\n    print(trace.stats)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://quakesaver.net/",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quakesaver-client",
    "package_url": "https://pypi.org/project/quakesaver-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/quakesaver-client/",
    "project_urls": {
      "Documentation": "https://quakesaver.github.io/quakesaver-client/",
      "Homepage": "https://quakesaver.net/",
      "Repository": "https://github.com/QuakeSaver/quakesaver-client"
    },
    "release_url": "https://pypi.org/project/quakesaver-client/1.1.0/",
    "requires_dist": [
      "pydantic (>=1.10.5,<1.11.0)",
      "requests (>=2.28.2,<2.29.0)"
    ],
    "requires_python": ">=3.9,<3.12",
    "summary": "Client library for interacting with the QuakeSaver sensor fleet.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17239156,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3378ab822eb7299acc4fa1727c52cc73841c721599b380a17fa142ac5915323",
          "md5": "6a35b8617b1a8159fdf9ec6817ef918b",
          "sha256": "602e0532d9f44e8f7fd3dc42717f0e83257bc8ff5c10344df626f5b82ae2c0bc"
        },
        "downloads": -1,
        "filename": "quakesaver_client-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a35b8617b1a8159fdf9ec6817ef918b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<3.12",
        "size": 21624,
        "upload_time": "2023-03-07T15:58:55",
        "upload_time_iso_8601": "2023-03-07T15:58:55.321001Z",
        "url": "https://files.pythonhosted.org/packages/c3/37/8ab822eb7299acc4fa1727c52cc73841c721599b380a17fa142ac5915323/quakesaver_client-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60ef5773319bf089190bdcf837fd026ea20a98daf6f0e03aa7bb146a5466a167",
          "md5": "c26e124081b81dfbb864c286dbf65afc",
          "sha256": "772cd675d0114551a10d06679a1cb258779aefe67c7cd50e7c77077898209a43"
        },
        "downloads": -1,
        "filename": "quakesaver_client-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c26e124081b81dfbb864c286dbf65afc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<3.12",
        "size": 18289,
        "upload_time": "2023-03-07T15:58:57",
        "upload_time_iso_8601": "2023-03-07T15:58:57.034016Z",
        "url": "https://files.pythonhosted.org/packages/60/ef/5773319bf089190bdcf837fd026ea20a98daf6f0e03aa7bb146a5466a167/quakesaver_client-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce220cc82acd722b4f0aa4747a8fbd4dcb510223db93369f751108239b31547f",
          "md5": "a774024a76217b48c933701a198f8d47",
          "sha256": "dbeecbc695ca28bf5ec11208871b6fde2feac0df03c896c131d00dbd80a993e7"
        },
        "downloads": -1,
        "filename": "quakesaver_client-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a774024a76217b48c933701a198f8d47",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<3.12",
        "size": 23170,
        "upload_time": "2023-03-10T12:49:29",
        "upload_time_iso_8601": "2023-03-10T12:49:29.455068Z",
        "url": "https://files.pythonhosted.org/packages/ce/22/0cc82acd722b4f0aa4747a8fbd4dcb510223db93369f751108239b31547f/quakesaver_client-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a445d4969eb82edc23310176e5a66c988ede98587ea679f06eef6222159d1d64",
          "md5": "5aeaff6fd5c3fb63de71a726b1add852",
          "sha256": "1512c2e9b75c28c9778ba9aa942a65bf36ad57d659959307c29f57555174fc9c"
        },
        "downloads": -1,
        "filename": "quakesaver_client-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5aeaff6fd5c3fb63de71a726b1add852",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<3.12",
        "size": 21238,
        "upload_time": "2023-03-10T12:49:31",
        "upload_time_iso_8601": "2023-03-10T12:49:31.048845Z",
        "url": "https://files.pythonhosted.org/packages/a4/45/d4969eb82edc23310176e5a66c988ede98587ea679f06eef6222159d1d64/quakesaver_client-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce220cc82acd722b4f0aa4747a8fbd4dcb510223db93369f751108239b31547f",
        "md5": "a774024a76217b48c933701a198f8d47",
        "sha256": "dbeecbc695ca28bf5ec11208871b6fde2feac0df03c896c131d00dbd80a993e7"
      },
      "downloads": -1,
      "filename": "quakesaver_client-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a774024a76217b48c933701a198f8d47",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<3.12",
      "size": 23170,
      "upload_time": "2023-03-10T12:49:29",
      "upload_time_iso_8601": "2023-03-10T12:49:29.455068Z",
      "url": "https://files.pythonhosted.org/packages/ce/22/0cc82acd722b4f0aa4747a8fbd4dcb510223db93369f751108239b31547f/quakesaver_client-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a445d4969eb82edc23310176e5a66c988ede98587ea679f06eef6222159d1d64",
        "md5": "5aeaff6fd5c3fb63de71a726b1add852",
        "sha256": "1512c2e9b75c28c9778ba9aa942a65bf36ad57d659959307c29f57555174fc9c"
      },
      "downloads": -1,
      "filename": "quakesaver_client-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5aeaff6fd5c3fb63de71a726b1add852",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<3.12",
      "size": 21238,
      "upload_time": "2023-03-10T12:49:31",
      "upload_time_iso_8601": "2023-03-10T12:49:31.048845Z",
      "url": "https://files.pythonhosted.org/packages/a4/45/d4969eb82edc23310176e5a66c988ede98587ea679f06eef6222159d1d64/quakesaver_client-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}