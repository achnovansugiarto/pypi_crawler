{
  "info": {
    "author": "Mfon Eti-mfon",
    "author_email": "mfon@etimfon.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.1",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Django Classy Start\n\nA command line utility for starting Django projects and apps in a most classy manner.\n\n\n## Synopsis\n\n* Install `django-classy-start` with `pip` (in your virtual environment).\n\n  ```\n  $ pip install django-classy-start\n  ```\n\n* Start a project\n\n  ```\n  $ classy-start project <project-name> .\n  ```\n\n  This initializes a project named `project-name` in the current working directory. In addition to the regular Django stuff, project is initialized with:\n    + an `accounts` app containing a custom auth user model\n    + a `.env` file with default project secrets\n    + and more\n\n  All of these are reflected in your settings file, so you don't have to bother yourself with wiring them up.\n\n* Start your apps this way\n\n  ```\n  $ classy-start app <app-name>\n  ```\n\n  Your settings file isn't touched for this operation, though.\n\n\n## Why?\n\n### Mostly About the Auth User Model\n\n[The Django docs on auth (customizing)](https://docs.djangoproject.com/en/3.1/topics/auth/customizing/#using-a-custom-user-model-when-starting-a-project) recommends setting up a custom user model for every new project as it's usually a real pain to change the auth user model after the database tables have been created.\n\nAnd while it's easy **in theory** for everyone to remember to set up their auth user model first thing after starting a project with `django-admin`, it doesn't always pan out that way in practice.\n\n`django-classy-start` handles all of that neatly with `classy-start`.\n\n\n### And Then There are Secrets\n\nYour `Django` project's `SECRET_KEY` setting is to be kept secret in production. And things like `DEBUG` and `ALLOWED_HOSTS` have different values in different environments.\n\nAnd it's usually not always immediately clear to n00b1es how to keep these concerns separate in their projects.\n\n`django-classy-start` addresses this problem for everyone by reading environment variables from a project-wide `.env` file.\n\n\n### That's NOT All Folks!\n\nAnd this may be my _oh, so, slight_ anal retentiveness speaking, but...\n\n* Apps started by `django-admin` contain some files which have nothing but a line of import (and a line of comment). The imports are unused and linters balk at such things.\n\n* String literals in project and app files are delimited with single quotes. Black, the PSF-blessed Python formatter __dictates__ that double quotes be used.\n\n* `django-classy-start` encourages the good habit of housing test files in a tests directory.\n\n\n## But Really, Why?\n\nOkay, you got me. I just wanted something relatively non-trivial to do so I can learn more about Django and improve my unit testing game.\n\nAnd I found that thing in building this.\n\n\n## Status\n\nv0.0.1 (Beta) released on PyPI\n\n\n## FAQs\n\n__Q1__: Yo, @mfonism, I'm really happy for you, I'mma let you finish, but do you know you just wrote the [frugly](https://www.urbandictionary.com/define.php?term=frugly)-est django-cookiecutter ever?\n\n__A1__: Dude, did you read the [But Really, Why?](#but-really-why) section?\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mfonism/django-classy-start",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-classy-start",
    "package_url": "https://pypi.org/project/django-classy-start/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-classy-start/",
    "project_urls": {
      "Homepage": "https://github.com/mfonism/django-classy-start"
    },
    "release_url": "https://pypi.org/project/django-classy-start/0.0.2/",
    "requires_dist": [
      "Django (>=3.1)",
      "python-dotenv (>=0.14.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "A command line utility for starting Django projects and apps in a most classy manner",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9435703,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af172923259eaa81ba32a00653b3fc3a4508888de393192ae60ba0dfa5d8e3a0",
          "md5": "fab5545cbd3ba3ff16115be769fafcb4",
          "sha256": "213ace04d37b12c9771d2d4db1e2172075619f0edd79611091e791a637ae6994"
        },
        "downloads": -1,
        "filename": "django-classy-start-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fab5545cbd3ba3ff16115be769fafcb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9822,
        "upload_time": "2020-08-27T02:18:35",
        "upload_time_iso_8601": "2020-08-27T02:18:35.305092Z",
        "url": "https://files.pythonhosted.org/packages/af/17/2923259eaa81ba32a00653b3fc3a4508888de393192ae60ba0dfa5d8e3a0/django-classy-start-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05d4304a81b40f1bf275f0b31a91f38e10131704edac3ff836e849d2396a1473",
          "md5": "a5ec28e32b2380c2adbead8c6dc56e29",
          "sha256": "52131ef66bb152724b84a3ada6a45ee5cc9132b4cf3565ac0b07ee4cacfe40ba"
        },
        "downloads": -1,
        "filename": "django_classy_start-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5ec28e32b2380c2adbead8c6dc56e29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13534,
        "upload_time": "2021-02-16T17:56:14",
        "upload_time_iso_8601": "2021-02-16T17:56:14.585261Z",
        "url": "https://files.pythonhosted.org/packages/05/d4/304a81b40f1bf275f0b31a91f38e10131704edac3ff836e849d2396a1473/django_classy_start-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05d4304a81b40f1bf275f0b31a91f38e10131704edac3ff836e849d2396a1473",
        "md5": "a5ec28e32b2380c2adbead8c6dc56e29",
        "sha256": "52131ef66bb152724b84a3ada6a45ee5cc9132b4cf3565ac0b07ee4cacfe40ba"
      },
      "downloads": -1,
      "filename": "django_classy_start-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a5ec28e32b2380c2adbead8c6dc56e29",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13534,
      "upload_time": "2021-02-16T17:56:14",
      "upload_time_iso_8601": "2021-02-16T17:56:14.585261Z",
      "url": "https://files.pythonhosted.org/packages/05/d4/304a81b40f1bf275f0b31a91f38e10131704edac3ff836e849d2396a1473/django_classy_start-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}