{
  "info": {
    "author": "Byeonghoon Yoo",
    "author_email": "bh322yoo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: No Input/Output (Daemon)",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: System",
      "Topic :: System :: Monitoring",
      "Typing :: Typed"
    ],
    "description": "# loopmon - Lightweight Event Loop monitoring\n\n\n[![Codecov](https://img.shields.io/codecov/c/gh/isac322/loopmon?style=flat-square&logo=codecov)](https://app.codecov.io/gh/isac322/loopmon)\n[![Dependabot Status](https://flat.badgen.net/github/dependabot/isac322/loopmon?icon=github)](https://github.com/isac322/loopmon/network/dependencies)\n[![PyPI](https://img.shields.io/pypi/v/loopmon?label=pypi&logo=pypi&style=flat-square)](https://pypi.org/project/loopmon/)\n[![PyPI - Wheel](https://img.shields.io/pypi/wheel/loopmon?style=flat-square&logo=pypi)](https://pypi.org/project/loopmon/)\n[![Python Version](https://img.shields.io/pypi/pyversions/loopmon.svg?style=flat-square&logo=python)](https://pypi.org/project/loopmon/)\n[![GitHub last commit (branch)](https://img.shields.io/github/last-commit/isac322/loopmon/master?logo=github&style=flat-square)](https://github.com/isac322/loopmon/commits/master)\n[![GitHub Workflow Status (branch)](https://img.shields.io/github/workflow/status/isac322/loopmon/CI/master?logo=github&style=flat-square)](https://github.com/isac322/loopmon/actions)\n[![Code Style](https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square)](https://github.com/psf/black)\n\nloopmon is a lightweight library that can detect throttling of event loops.\nFor example, you can detect long-running coroutine or whether the blocking function is invoked inside the event loop.\n\n\n## Usage\n\n```python\nimport asyncio\nimport time\nfrom datetime import datetime\nimport loopmon\n\nasync def print_collected_data(lag: float, tasks: int, data_at: datetime) -> None:\n    print(f'event loop lag: {lag:.3f}, running tasks: {tasks}, at {data_at}')\n\nasync def main() -> None:\n    loopmon.create(interval=0.5, callbacks=[print_collected_data])\n    # Simple I/O bound coroutine does not occur event loop lag\n    await asyncio.sleep(0.2)\n    # Blocking function call\n    time.sleep(1)\n\nif __name__ == '__main__':\n    asyncio.run(main())\n```\n\nwill prints:\n\n```\nevent loop lag: 0.000, running tasks: 2, at 2022-02-24 13:29:05.367330+00:00\nevent loop lag: 1.001, running tasks: 1, at 2022-02-24 13:29:06.468622+00:00\n```\n\nYou can check other [examples](https://github.com/isac322/loopmon/tree/master/examples).\n\nI recommend you to add `loopmon.create(...)` on beginning of async function if you are not familiar with handling loop itself.\nBut you can also control creation, installation or staring of monitor via `EventLoopMonitor.start()` or `EventLoopMonitor.install_to_loop()`.\n\n## Features\n\n- Detects event loop lag\n  - Detects event loop running on other thread. [example](https://github.com/isac322/loopmon/blob/master/examples/06_monitoring_another_thread.py)\n- Collect how many tasks are running in the event loop\n- Customize monitoring start and end points\n- Customize monitoring interval\n- Customize collected metrics through callbacks\n- 100% type annotated\n- Zero dependency (except `typing-extentions`)\n\n\n## How it works\n\nEvent loop is single threaded and based on Cooperative Scheduling.\nSo if there is a task that does not yield to another tasks, any tasks on the loop can not be executed.\nAnd starvation also happens when there are too many tasks that a event loop can not handle.\n\nCurrently `loopmon.SleepEventLoopMonitor` is one and only monitor implementation.\nIt periodically sleeps with remembering time just before sleep, and compares the time after awake.\nThe starvation happen if the difference bigger than its sleeping interval.\n\n\n#### pseudo code of `SleepEventLoopMonitor`\n\n```python\nwhile True:\n    before = loop.time()\n    await asyncio.sleep(interval)\n    lag = loop.time() - before - interval\n    tasks = len(asyncio.all_tasks(loop))\n    data_at = datetime.now(timezone.utc)\n    for c in callbacks:\n        loop.create_task(c(lag, tasks, data_at))\n```\n\n## Integration examples\n\n### Prometheus\n\n\n```python\nfrom datetime import datetime\nfrom functools import partial\nimport loopmon\nfrom prometheus_client import Gauge\n\nasync def collect_lag(gauge: Gauge, lag: float, _: int, __: datetime) -> None:\n    gauge.set(lag)\n\nasync def main(gauge: Gauge) -> None:\n    loopmon.create(interval=0.5, callbacks=[partial(collect_lag, gauge)])\n    ...\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/isac322/loopmon",
    "keywords": "asyncio,monitoring,eventloop,lag,delay",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "loopmon",
    "package_url": "https://pypi.org/project/loopmon/",
    "platform": "",
    "project_url": "https://pypi.org/project/loopmon/",
    "project_urls": {
      "Homepage": "https://github.com/isac322/loopmon",
      "Repository": "https://github.com/isac322/loopmon"
    },
    "release_url": "https://pypi.org/project/loopmon/1.0.0/",
    "requires_dist": [
      "typing-extensions (>=3.8)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Lightewight monitor library for asyncio.EventLoop",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12997630,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "529f643004d53d0cba2ea9f884938a3e4133523222bde86f96482a3d55eaa732",
          "md5": "481adac7c1a10b2e1eb52684919a474b",
          "sha256": "a9ba300107409f94715f615b27e6fbe5cc609941ccf6c2654fedfe49f0493c13"
        },
        "downloads": -1,
        "filename": "loopmon-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "481adac7c1a10b2e1eb52684919a474b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 7187,
        "upload_time": "2022-02-24T15:45:37",
        "upload_time_iso_8601": "2022-02-24T15:45:37.773627Z",
        "url": "https://files.pythonhosted.org/packages/52/9f/643004d53d0cba2ea9f884938a3e4133523222bde86f96482a3d55eaa732/loopmon-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9541274913f010ad2989fd066aa9851e45bf2e8dfb79a5b9e302fd179335e63f",
          "md5": "dcdebb1e66e9da7be66566c52fd6f641",
          "sha256": "10bfd192cb385b459b1ca7fd11cf9a87671e4341df844cb6925ff4647a6d090a"
        },
        "downloads": -1,
        "filename": "loopmon-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dcdebb1e66e9da7be66566c52fd6f641",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 7574,
        "upload_time": "2022-02-24T15:45:39",
        "upload_time_iso_8601": "2022-02-24T15:45:39.606113Z",
        "url": "https://files.pythonhosted.org/packages/95/41/274913f010ad2989fd066aa9851e45bf2e8dfb79a5b9e302fd179335e63f/loopmon-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "529f643004d53d0cba2ea9f884938a3e4133523222bde86f96482a3d55eaa732",
        "md5": "481adac7c1a10b2e1eb52684919a474b",
        "sha256": "a9ba300107409f94715f615b27e6fbe5cc609941ccf6c2654fedfe49f0493c13"
      },
      "downloads": -1,
      "filename": "loopmon-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "481adac7c1a10b2e1eb52684919a474b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 7187,
      "upload_time": "2022-02-24T15:45:37",
      "upload_time_iso_8601": "2022-02-24T15:45:37.773627Z",
      "url": "https://files.pythonhosted.org/packages/52/9f/643004d53d0cba2ea9f884938a3e4133523222bde86f96482a3d55eaa732/loopmon-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9541274913f010ad2989fd066aa9851e45bf2e8dfb79a5b9e302fd179335e63f",
        "md5": "dcdebb1e66e9da7be66566c52fd6f641",
        "sha256": "10bfd192cb385b459b1ca7fd11cf9a87671e4341df844cb6925ff4647a6d090a"
      },
      "downloads": -1,
      "filename": "loopmon-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dcdebb1e66e9da7be66566c52fd6f641",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 7574,
      "upload_time": "2022-02-24T15:45:39",
      "upload_time_iso_8601": "2022-02-24T15:45:39.606113Z",
      "url": "https://files.pythonhosted.org/packages/95/41/274913f010ad2989fd066aa9851e45bf2e8dfb79a5b9e302fd179335e63f/loopmon-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}