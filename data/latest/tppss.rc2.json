{
  "info": {
    "author": "Guilhem Vellut",
    "author_email": "g@vellut.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: GIS",
      "Topic :: Utilities"
    ],
    "description": "# TPPSS (TopopoSunsun)\n\nTPPSS computes sunrise / sunset times taking into account local topography provided by the user as a DEM (it can also simply compute an horizon based on the DEM). It provides a library and a command line script to compute sunrise / sunset for a location for a single day or a whole year.\n\n# Install\n\nThe tool requires Python 3.7+.\n\n## Library\n\n### Linux\n\nTo install just the library, on Linux, launch:\n\n```console\npip install tppss\n```\n\n### Windows and macOS\n\nUnfortunately, for those platforms , the `rasterIO` library is not available in binary form on PyPI like on Linux. It is recommanded to use Conda to first create an environment then install TPPSS with:\n\n```console\nconda install -c conda-forge rasterio\npip install tppss\n```\n\nThe second command will pick up the `rasterIO` installed by Conda.\n\n## CLI\n\nThe `cli` extra includes a command-line script, also named `tppss`, whose functionality is described below. It has a few additional dependencies.\n\n### Linux\n\nLaunch:\n\n```console\npip install tppss[cli]\n```\n\n### Windows and macOS\n\nLaunch:\n\n```console\nconda install -c conda-forge rasterio\npip install tppss[cli]\n```\n\n# Library documentation\n\nThe library documentation is available [here](http://example.com). (*not yet*)\n\n# CLI instructions\n\nThe `tppss` tool has 2 subcommands:\n\n- `day`\n- `year` \n\n## Day\n\nThe `day` subcommand prints to the console the sunrise and sunset times for the chosen day.\n\n```console\n~$ tppss day --help\nUsage: tppss day [OPTIONS]\n\n  Compute sunset / sunrise time for a single day\n\nOptions:\n  -p, -position LATLON       Latitude and Longitude of the location to\n                             consider (eg 45.2315,5.8389)  [required]\n\n  -m, --dem FILE             DEM in TIFF format and Geographic CRS (eg WGS4)\n                             [required]\n\n  -j, --day DATE             Date to consider (in YYYY-MM-DD format)\n                             [required]\n\n  -t, --timezone TEXT        Timezone for the result [Default: Timezone of the\n                             local machine]\n\n  --distance INTEGER         Distance from the position to consider when\n                             computing the horizon (in KM)  [default: 25]\n\n  --angle-precision INTEGER  Precision of horizon angles (for each degree)\n                             [default: 1]\n\n  --time-precision INTEGER   Precision of times (for each hour)  [default: 60]\n  --help                     Show this message and exit.\n```\n\n\n### Example\n\n```\ntppss day -m \"C:\\Users\\gvellut\\Documents\\projects\\sunlight\\rge74_wgs84_cubic.tif\" -j\n2021-11-01 -p \"46.179317,6.234106\"\n```\n\nIt outputs:\n\n```\nTimezone set to local: 'Romance Daylight Time'\nCompute horizon...\nCompute sunrise / sunset...\nSunrise: 2021-11-01 07:47:00+01:00 / Sunset: 2021-11-01 16:21:00+01:00\n```\n\nThe first line is a warning indicating which timezone was selected, since none was indicated on the command-line. 'Romance Daylight Time' is the name of the local timezone on my Windows computer.\n\nIn case there is no sunset or sunrise (maybe in a location surrounded by high mountains or above the arctic circle), the last line is either: `Light all day!` or `Night all day!`.\n\n## Year\n\nThe `year` subcommand outputs to a CSV file the sunrise and sunset times for each day of the chosen year.\n\n```console\n~$ tppss year --help\nUsage: tppss year [OPTIONS]\n\n  Compute sunset / sunrise time for a whole year\n\nOptions:\n  -p, -position LATLON       Latitude and Longitude of the location to\n                             consider (eg 45.2315,5.8389)  [required]\n\n  -m, --dem FILE             DEM in TIFF format and Geographic CRS (eg WGS4)\n                             [required]\n\n  -y, --year YEAR            Year to take into account  [required]\n  -t, --timezone TEXT        Timezone for the result [Default: Timezone of the\n                             local machine]\n\n  -o, --csv FILE             CSV to export  [required]\n  --distance INTEGER         Distance from the position to consider when\n                             computing the horizon (in KM)  [default: 25]\n\n  --angle-precision INTEGER  Precision of horizon angles (for each degree)\n                             [default: 1]\n\n  --time-precision INTEGER   Precision of times (for each hour)  [default: 60]\n  --help                     Show this message and exit.\n```\n\n### Example\n\n```\ntppss year -m \"C:\\Users\\gvellut\\Documents\\projects\\sunlight\\rge74_wgs84_cubic.tif\" -y\n2021 -p \"46.179317,6.234106\" -t Europe/Paris -o ss2021.csv\n```\n\nIt outputs to the console:\n\n```\nCompute horizon...\nCompute sunrise / sunset for year 2021...\nWriting results to C:\\Users\\gvellut\\Documents\\projects\\github\\calcsoleil\\ss2021.csv...\n```\n\nThe CSV is as follows:\n\n```\nDAY,SUNRISE,SUNSET\n2021-01-01,08:48+0100,13:59+0100\n2021-01-02,08:47+0100,13:59+0100\n2021-01-03,08:47+0100,14:01+0100\n2021-01-04,08:46+0100,14:04+0100\n2021-01-05,08:46+0100,14:04+0100\n2021-01-06,08:44+0100,14:05+0100\n....\n```\n\nThe times for sunset and sunrise also indicate the offset from UTC (which can change in the year with DST).\n\nIf there is no sunset or sunrise, the second and third columns have value `NA`.\n\n## Some notes\n\nThe Latitude and Longitude must be in the same CRS as the DEM.\n\nThe DEM (Digital Elevation Model) raster must contain heights above the ellipsoid. If the DEM contains instead the altitude above the geoid (for example, EGM96 if SRTM is used), it should first be transformed into heights. However, since only differences of altitudes are considered, it shouldn't matter much depending on the specific purpose (I use this tool for planning photography outings and I am fine with the precision I get). If needed, the ellipsoidal heights can also be computed using GDAL (`gdalwarp`: See the example at the bottom of [this page](https://gdal.org/programs/gdalwarp.html)).\n\nThe value for the timezone option is something like `Europe/Paris` or `MST`. If not present, it is taken from the local machine. If the timezone has DST, the change is reflected in the times computed for surises and sunsets.\n\nThe `--distance` option indicates how far away from the position should heights be extracted from the DEM when computing the horizon.\n\n# Acknowledgements\n\nThe horizon computation is based on this Matlab code (adapted for Python + Numpy):\n\nBenjamin Pillot (2021). DEM-based topography horizon model \n(https://www.mathworks.com/matlabcentral/fileexchange/59421-dem-based-topography-horizon-model),\nMATLAB Central File Exchange. Retrieved October 19, 2021. \n\n\nThe sun position computation is adapted from this code:\n\nJohn Clark Craig. Python Sun Position for Solar Energy and Research\n(https://levelup.gitconnected.com/python-sun-position-for-solar-energy-and-research-7a4ead801777)\n\n\n# TODO \n\n- Example that draws horizon + sun course through the sky\n- Support projected CRS (use vertical compensation see https://www.usna.edu/Users/oceano/pguth/md_help/html/demb30q0.htm)\n- Generate doc\n- Sample: Document how the input DEM is obtained from the RGE \n- Optional Rasterio dependency for CLI ; separate CLI dependencies from the library\n- Conda package\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gvellut/tppss",
    "keywords": "sunrise dem horizon",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tppss",
    "package_url": "https://pypi.org/project/tppss/",
    "platform": "",
    "project_url": "https://pypi.org/project/tppss/",
    "project_urls": {
      "Bug Reports": "https://github.com/gvellut/tppss/issues",
      "Homepage": "https://github.com/gvellut/tppss",
      "Source": "https://github.com/gvellut/tppss"
    },
    "release_url": "https://pypi.org/project/tppss/0.2/",
    "requires_dist": [
      "numpy (==1.*)",
      "python-dateutil (==2.*)",
      "pyproj (==3.*)",
      "rasterio (==1.*)",
      "click (==7.*) ; extra == 'cli'",
      "colorama ; extra == 'cli'",
      "black ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "wheel ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Compute sunrise / sunset times taking into account local topography",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12363373,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f75a5c8750eb4ad3a64ea73b769880d24dfd84ebec2990060309bc5853ba2f29",
          "md5": "fdc31b559786f09f8011a02fb17b2719",
          "sha256": "0d931faaa866e3d3afda3e4eea20b62914cd6adaa9a972623f9c8c64a1770670"
        },
        "downloads": -1,
        "filename": "tppss-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fdc31b559786f09f8011a02fb17b2719",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13667,
        "upload_time": "2021-12-20T17:39:53",
        "upload_time_iso_8601": "2021-12-20T17:39:53.485740Z",
        "url": "https://files.pythonhosted.org/packages/f7/5a/5c8750eb4ad3a64ea73b769880d24dfd84ebec2990060309bc5853ba2f29/tppss-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5efd4f09531bfe6a414b83d384d606f6f4e9996549ca7b9b34864d25bd2fe02d",
          "md5": "6e0e9db1566ceeacfc05d917a8ae73fc",
          "sha256": "40f5f21324a4cab91a48edbad776064f67590422662a1ce069ab52cf4d2eb9c8"
        },
        "downloads": -1,
        "filename": "tppss-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6e0e9db1566ceeacfc05d917a8ae73fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15190,
        "upload_time": "2021-12-20T17:39:55",
        "upload_time_iso_8601": "2021-12-20T17:39:55.567540Z",
        "url": "https://files.pythonhosted.org/packages/5e/fd/4f09531bfe6a414b83d384d606f6f4e9996549ca7b9b34864d25bd2fe02d/tppss-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fa9a0429c1398fcc9472d50e5ab1f863f8d714c53c7da1aa90f17662c3518c5",
          "md5": "c40396cb02c5235b603ae34ee961e016",
          "sha256": "aa4c656db22cc58944248ed571eb3b095b8cd69508b66e2a3ab1d958ac76021a"
        },
        "downloads": -1,
        "filename": "tppss-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c40396cb02c5235b603ae34ee961e016",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13621,
        "upload_time": "2021-12-20T17:47:39",
        "upload_time_iso_8601": "2021-12-20T17:47:39.016400Z",
        "url": "https://files.pythonhosted.org/packages/3f/a9/a0429c1398fcc9472d50e5ab1f863f8d714c53c7da1aa90f17662c3518c5/tppss-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63a56a85ffcf9d7d3fe934ad5f77a7451740b3ec60f71053ef16f1a65ccb4fb8",
          "md5": "c482d5f6e3a535bcc89d59e52f67625d",
          "sha256": "ab01a5672a3420acf9193cd3f32d51fe1f94141d28ccada7e3f5fd9a69069e93"
        },
        "downloads": -1,
        "filename": "tppss-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c482d5f6e3a535bcc89d59e52f67625d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14654,
        "upload_time": "2021-12-20T17:47:40",
        "upload_time_iso_8601": "2021-12-20T17:47:40.183551Z",
        "url": "https://files.pythonhosted.org/packages/63/a5/6a85ffcf9d7d3fe934ad5f77a7451740b3ec60f71053ef16f1a65ccb4fb8/tppss-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3fa9a0429c1398fcc9472d50e5ab1f863f8d714c53c7da1aa90f17662c3518c5",
        "md5": "c40396cb02c5235b603ae34ee961e016",
        "sha256": "aa4c656db22cc58944248ed571eb3b095b8cd69508b66e2a3ab1d958ac76021a"
      },
      "downloads": -1,
      "filename": "tppss-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c40396cb02c5235b603ae34ee961e016",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13621,
      "upload_time": "2021-12-20T17:47:39",
      "upload_time_iso_8601": "2021-12-20T17:47:39.016400Z",
      "url": "https://files.pythonhosted.org/packages/3f/a9/a0429c1398fcc9472d50e5ab1f863f8d714c53c7da1aa90f17662c3518c5/tppss-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "63a56a85ffcf9d7d3fe934ad5f77a7451740b3ec60f71053ef16f1a65ccb4fb8",
        "md5": "c482d5f6e3a535bcc89d59e52f67625d",
        "sha256": "ab01a5672a3420acf9193cd3f32d51fe1f94141d28ccada7e3f5fd9a69069e93"
      },
      "downloads": -1,
      "filename": "tppss-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c482d5f6e3a535bcc89d59e52f67625d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14654,
      "upload_time": "2021-12-20T17:47:40",
      "upload_time_iso_8601": "2021-12-20T17:47:40.183551Z",
      "url": "https://files.pythonhosted.org/packages/63/a5/6a85ffcf9d7d3fe934ad5f77a7451740b3ec60f71053ef16f1a65ccb4fb8/tppss-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}