{
  "info": {
    "author": "Erik Soma",
    "author_email": "stillusingirc@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![License: MIT](https://img.shields.io/badge/license-MIT-brightgreen?style=for-the-badge)](https://opensource.org/licenses/MIT)\n[![Python 3.6 and Up](https://img.shields.io/badge/python->=3.6-blue?style=for-the-badge)](https://python.org)\n[![Tests Status](https://img.shields.io/github/workflow/status/esoma/repromancy/Tests/master?style=for-the-badge&label=test)](https://github.com/esoma/repromancy/actions?query=workflow%3ATest)\n\n#  :mage: repromancy :zombie:\n**repromancy** utilizes dark magic to make better reprs, especially when\ndynamically creating **classes** and **functions**.\n\n## What?\nIn certain circumstances Python can give ugly reprs. For example, if we had a\npackage *spam* that had a submodule *ham* that defined the *Ham* class. The\nrepr is:\n```python\n<class 'spam.ham.Ham'>\n```\nAll good, but let's say we actually import *Ham* directly in the *spam*\npackage, such that it is accessible as *spam.Ham*. In fact, this is the\ninterface we advertise to users, but when they do reprs on their *Hams* they\nget this extra *ham* module that they don't really care about! What we would\nlike to see is:\n```python\n<class 'spam.Ham'>\n```\nSince that is how we define our public API, the underlying modules aren't\nreally relevant.\n\n**repromancy** fixes this, and more. *at a price...*\n\n## How?\n**repromancy.cast** is used to perform the dark magic required to fix your\nreprs. For a module, it's as simple as adding the following to the *bottom*\nof your module:\n```python\nif __debug__:\n    import repromancy\n    repromancy.cast(repromancy.CallingModule)\n    del repromancy\n```\n\nThis will perform repromancy on everything within current module namespace.\nNote that cast is recursive, it will follow everything it can, but will only\nmodify things in the same package as what was **cast** on.\n\n**repromancy.cast** can be used on most python objects (not builtins).\n\n## Dynamic Classes and Functions\nLet's say we have a **function** called *factory*, that returns a newly\ncreated **class** (or it could be another **function**, but we'll use a\n**class** in this example):\n```python\n>>> def factory():\n...     class Class:\n...         pass\n...     return Class\n...\n>>> factory()\n<class '__main__.factory.<locals>.Class'>\n```\n\nThe default repr is not terribly useful, especially because all **classes*\ngenerated by the factory will have the same repr unless explicitly defined\nby the factory function itself. Let's say that in our module we call this\nfactory multiple times and give the results local names, then\n**cast repromancy** on the module:\n```python\n>>> ClassA = factory()\n>>> ClassB = factory()\n>>> import repromancy\n>>> repromancy.cast(repromancy.CallingModule)\n>>> ClassA\n<class '__main__.ClassA'>\n>>> ClassB\n<class '__main__.ClassB'>\n```\n**repromancy** makes the reprs more clear.\n\n## :goat: Dark magic? :biohazard:\n**repromancy**, as its name implies, make use of some questionable methods to\nget the results it does. Specifically, it monkey patches some cpython builtin\ntypes, altering their \\_\\_repr\\_\\_ methods. This is a **global** change to\nthe python interpreter which affects all modules and subinterpreters. As such,\nit is recommended to only perform repromancy when \\_\\_debug\\_\\_ is defined.\n\nThe specific changes are as follows:\n* Instances of **type** will not display their __package__ in their repr if the\n  fully qualified name starts with '<' (another repr)\n* **functions** include the module in which they were defined in their repr, this is\n  to be consistent with **object** and **type** reprs\n* **methods** show the repr for their **function**, rather than just the name",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/esoma/repromancy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "repromancy",
    "package_url": "https://pypi.org/project/repromancy/",
    "platform": "",
    "project_url": "https://pypi.org/project/repromancy/",
    "project_urls": {
      "Homepage": "https://github.com/esoma/repromancy"
    },
    "release_url": "https://pypi.org/project/repromancy/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Utilize dark magic to unify reprs.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7601368,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "feb11e705604a183477d456a640917c6f995a7409949f011c08b3af0228fea42",
          "md5": "106f79056e8a9c5f130532c3dd00d39f",
          "sha256": "8e8fdebc3060e45d449b8280b67f928eb559e60f18e4836041dc5a77fcf14795"
        },
        "downloads": -1,
        "filename": "repromancy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "106f79056e8a9c5f130532c3dd00d39f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12620,
        "upload_time": "2020-07-01T00:23:57",
        "upload_time_iso_8601": "2020-07-01T00:23:57.487742Z",
        "url": "https://files.pythonhosted.org/packages/fe/b1/1e705604a183477d456a640917c6f995a7409949f011c08b3af0228fea42/repromancy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "feb11e705604a183477d456a640917c6f995a7409949f011c08b3af0228fea42",
        "md5": "106f79056e8a9c5f130532c3dd00d39f",
        "sha256": "8e8fdebc3060e45d449b8280b67f928eb559e60f18e4836041dc5a77fcf14795"
      },
      "downloads": -1,
      "filename": "repromancy-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "106f79056e8a9c5f130532c3dd00d39f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12620,
      "upload_time": "2020-07-01T00:23:57",
      "upload_time_iso_8601": "2020-07-01T00:23:57.487742Z",
      "url": "https://files.pythonhosted.org/packages/fe/b1/1e705604a183477d456a640917c6f995a7409949f011c08b3af0228fea42/repromancy-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}