{
  "info": {
    "author": "Mikhail Korobov",
    "author_email": "kmike84@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Russian",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "================\ndjango-assist-ru\n================\n\ndjango-assist-ru - это приложение для интеграции платежной системы ASSIST в\nпроекты на Django.\n\nДо использования следует ознакомиться с официальной документацией\nASSIST (http://assist.ru/files/manual_new.pdf). Приложение реализует\nпротокол взаимодействия, описанный в этом документе.\n\nУстановка\n=========\n\nКак обычно::\n\n    $ pip install django-assist-ru\n\nили ::\n\n    $ easy_install django-assist-ru\n\nили ::\n\n    $ hg clone http://bitbucket.org/kmike/django-assist-ru/\n    $ cd django-assist-ru\n    $ python setup.py install\n\n\nПотом следует добавить 'assist' в INSTALLED_APPS и выполнить ::\n\n    $ python manage.py syncdb\n\nЕсли используется South, то вместо syncdb нужно сделать ::\n\n    $ python manage.py migrate\n\n\nНастройка\n=========\n\nВ settings.py нужно указать следующие настройки:\n\n* ASSIST_SHOP_IDP - идентификатор магазина (число)\n* ASSIST_LOGIN - логин\n* ASSIST_PASSWORD - пароль\n\nНеобязательные параметары:\n\n* ASSIST_TEST_MODE - включен ли тестовый режим. По умолчанию False (т.е. включен боевой режим).\n* ASSIST_SERVER - адрес \"боевого\" сервера Assist. По умолчанию - https://secure.assist.ru\n\n\nИспользование\n=============\n\nФорму для приема платежей следует показывать на странице, у которой кодировка\n1251. Для тех, кто использует кодировку utf-8, в django-assist-ru есть\nдекоратор cp1251, который перекодирует страницу в 1251, исправляет\nhttp-заголовки и меняет meta-теги на нужные ::\n\n    from assist.decorators import cp1251\n\n    @cp1251\n    @login_required\n    def go_to_assist(request)\n        ...\n\n\nФормы для приема платежей\n-------------------------\n\nДля того, чтобы упростить конструирование html-форм для отправки пользователей в\nASSIST, в django-assist-ru есть 2 формы: AssistMode1Form и AssistMode2Form\n(для 2х режимов работы ASSIST). Эти формы нужны не для валидации данных, а для\nупрощения вывода информации в шаблонах.\n\nПример::\n\n    # views.py\n\n    from django.shortcuts import get_object_or_404\n    from django.views.generic.simple import direct_to_template\n    from django.contrib.auth.decorators import login_required\n\n    from assist.decorators import cp1251\n    from assist.forms import AssistMode2Form\n\n    @cp1251\n    @login_required\n    def go_to_assist(request, order_id)\n        order = get_object_or_404(Order, pk = order_id)\n        form = AssistMode2Form(initial={\n                   'Order_IDP': order.id,\n                   'Subtotal_P': order.total,\n                   'Comment': order.name,\n                   'LastName': request.user.last_name,\n                   'FirstName': request.user.first_name,\n                   'Email': request.user.email,\n                   'Phone': request.user.get_profile().phone,\n               })\n        return direct_to_template(request, 'go_to_assist.html', {'form': form})\n\nЗа полным перечнем допустимых в initial полей можно обратиться к документации\nASSIST или к исходникам, названия полей совпадают.\n\ndjango-assist-ru не включает в себя модели \"Покупка\", т.к. эта модель будет\nотличаться от сайта к сайту. Задача разработчика - сформировать и передать\nпараметры Order_IDP (номер заказа) и Subtotal_P (сумма заказа) в форму.\nОстальные поля являются необязательными.\n\nСоответствующий шаблон::\n\n    {% extends 'base.html' %}\n\n    {% block content %}\n        <form action=\"{{ form.target }}\" method=\"POST\">\n            <p>{{ form.as_p }}</p>\n            <p><input type=\"submit\" name='SUBMIT' value=\"Купить\"></p>\n        </form>\n    {% endblock %}\n\nФорма выведется в виде набора скрытых input-тегов.\n\nУ форм AssistMode1Form и AssistMode2Form есть атрибут target, содержащий URL,\nпо которому форму следует отправлять. В тестовом режиме это будет тестовый URL,\nв боевом - боевой.\n\n\nПолучение результатов платежей\n------------------------------\n\n::\n\n    from assist.models import AssistAuthResult\n    AssistAuthResult.objects.update_auth_report()\n\nМетод получает результаты авторизации через запрос к серверу ASSIST и\nсоздает/обновляет по ним записи в БД (по одной записи AssistAuthResult на\nкаждый BillNumber).\n\nПо правилам ASSIST, не стоит выполнять эту операцию чаще, чем 1 раз в 10 минут.\n\nНе следует выполнять эту операцию при возврате пользователя со\nстраницы оплаты, лучше делать это по расписанию.\n\n\nПолучение актуального статуса платежа по заказу\n-----------------------------------------------\n\nРезультат последней транзакции не обязательно является актуальным статусом\nплатежа в Assist, и учет только последней транзакции по заказу может\nпривести к тому, что некоторые платежи потеряются.\n\nТранзакция со статусом 'in process' создается при каждом переходе\nпользователя на страницу оплаты Assist. Поэтому можно создать сразу\nнесколько сессий оплаты \"in process\" и оплатить более раннюю.\nВ итоге последним (как по дате, так и по номеру) окажется результат со\nстатусом \"in process\" вместо \"оплачено\". Затем этот \"in process\" перейдет\nв \"ничего не вышло\" по таймауту, и мы будем иметь неоплаченный заказ,\nхотя на самом деле заказ был оплачен.\n\nЧтобы избежать проблем в этой ситуации, применен следующий подход:\n\n* Если есть какая-то транзакция с позитивным результатом (например,\n  'Authorized'), то транзакции с соответствующим негативным результатом\n  (для 'Authorized' это 'Not authorized') игнорируются.\n* Статус \"in process\" не учитывается совсем. Для действий, инициируемых\n  пользователем, этот статус означает только то, что человек зашел на\n  страницу ASSIST. Для действий, инициируемых программно, статус 'in process'\n  не гарантирует ни уникальности, ни последовательности выполнения операции.\n  Вместо проверки, было ли начато выполнение операции, можно выполнять\n  повторное инициирование операции, это безопасно для операций съема средств:\n  в худшем случае просто получим ошибку от ASSIST.\n\nВ django-assist-ru есть метод менеджера модели, реализующий описанный подход::\n\n    from assist.models import AssistAuthResult\n    order_id = 145\n    bill = AssistAuthResult.objects.actual_for_order(order_id)\n\nДвустадийный режим работы\n-------------------------\n\nПри двустадийном механизме работы разделены процессы авторизации кредитной\nкарты и совершения финансовой транзакции.\n\nДля того, чтобы активировать двустадийный режим, следует передать параметр\nDelay=1 при создании формы::\n\n    @cp1251\n    @login_required\n    def go_to_assist(request, order_id)\n        order = get_object_or_404(Order, pk = order_id)\n        form = AssistMode1Form(initial={\n                   'Order_IDP': order.id,\n                   'Subtotal_P': order.total,\n                   'Delay': 1\n               })\n        return direct_to_template(request, 'go_to_assist.html', {'form': form})\n\nДеньги будут не списываться со счета, а блокироваться. Списание денег со счета\nинициируется отдельно (в течение 14 дней с момента блокировки) с помощью метода\ncharge::\n\n    bill = AssistAuthResult.objects.get(id=123)\n    bill.charge()\n\nРазблокировать деньги, не дожидаясь 14 дней, можно с помощью метода\nrefund::\n\n    bill = AssistAuthResult.objects.get(id=123)\n    bill.refund()\n\nВозврат средств за оплаченный заказ осуществляется этой же командой.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "http://bitbucket.org/kmike/django-assist-ru/get/tip.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://bitbucket.org/kmike/django-assist-ru/",
    "keywords": null,
    "license": "MIT license",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-assist-ru",
    "package_url": "https://pypi.org/project/django-assist-ru/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-assist-ru/",
    "project_urls": {
      "Download": "http://bitbucket.org/kmike/django-assist-ru/get/tip.zip",
      "Homepage": "http://bitbucket.org/kmike/django-assist-ru/"
    },
    "release_url": "https://pypi.org/project/django-assist-ru/0.6.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Приложение для интеграции платежной системы ASSIST в проекты на Django.",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 654356,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35dcd6522dcc692b1cea8a2e42b4e02eba7f87dddd8f25fb48ff7cf9d57863bc",
          "md5": "9628126a86dfb8cb14cb592e75351819",
          "sha256": "902f8af8d1ab65d998ee7d3e577333d8dee8e330ada7f58dfe5bc6d7b99db62f"
        },
        "downloads": -1,
        "filename": "django-assist-ru-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9628126a86dfb8cb14cb592e75351819",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11863,
        "upload_time": "2010-02-19T23:54:54",
        "upload_time_iso_8601": "2010-02-19T23:54:54.797926Z",
        "url": "https://files.pythonhosted.org/packages/35/dc/d6522dcc692b1cea8a2e42b4e02eba7f87dddd8f25fb48ff7cf9d57863bc/django-assist-ru-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1d1f4872e038ee204261ec922e016747455e19027d1d23253790b32a349d99a",
          "md5": "84420dcc747a10638e89085ad4a387ee",
          "sha256": "515c2c563fcb1e3e81beb0045f9aa97e6f6fb1f5f94223bd3c60347f7aea1e07"
        },
        "downloads": -1,
        "filename": "django-assist-ru-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "84420dcc747a10638e89085ad4a387ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13382,
        "upload_time": "2010-02-20T21:29:57",
        "upload_time_iso_8601": "2010-02-20T21:29:57.577280Z",
        "url": "https://files.pythonhosted.org/packages/c1/d1/f4872e038ee204261ec922e016747455e19027d1d23253790b32a349d99a/django-assist-ru-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6607a4542c662d13ce6c465dc42b31047a093e189d9be74f71c98fabb194f29f",
          "md5": "60f80e7c60ef69b8c2f73769f6e45d12",
          "sha256": "126a3ec4ddc4835b24cce00891fe340ba50809fd15cb559ce795af824448342e"
        },
        "downloads": -1,
        "filename": "django-assist-ru-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "60f80e7c60ef69b8c2f73769f6e45d12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14791,
        "upload_time": "2010-06-12T17:32:24",
        "upload_time_iso_8601": "2010-06-12T17:32:24.006937Z",
        "url": "https://files.pythonhosted.org/packages/66/07/a4542c662d13ce6c465dc42b31047a093e189d9be74f71c98fabb194f29f/django-assist-ru-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1284e5d1962b53c96192c64f7bcaf1b944f09c37302a332971672f1d512647e1",
          "md5": "ce9f5699dede46b2cc74d3edf496adc1",
          "sha256": "a6d6f3ce6f8e058e73193cacd5e4a8288c4e6a4430a04ee01ae903eb4b8bb744"
        },
        "downloads": -1,
        "filename": "django-assist-ru-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ce9f5699dede46b2cc74d3edf496adc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14821,
        "upload_time": "2010-07-21T23:16:42",
        "upload_time_iso_8601": "2010-07-21T23:16:42.574610Z",
        "url": "https://files.pythonhosted.org/packages/12/84/e5d1962b53c96192c64f7bcaf1b944f09c37302a332971672f1d512647e1/django-assist-ru-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "510413666e6fdebf980a661a1472f955df19409013d8452a585ce7e47a2bea76",
          "md5": "9d91d8236e36df86f1eb5ffb018ec33e",
          "sha256": "cd63e9495ac607cd3f6c78f4f3bbfb9a5569912b9f4f5e8de456ec3d91e11891"
        },
        "downloads": -1,
        "filename": "django-assist-ru-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9d91d8236e36df86f1eb5ffb018ec33e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14858,
        "upload_time": "2010-07-23T19:22:09",
        "upload_time_iso_8601": "2010-07-23T19:22:09.998074Z",
        "url": "https://files.pythonhosted.org/packages/51/04/13666e6fdebf980a661a1472f955df19409013d8452a585ce7e47a2bea76/django-assist-ru-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "510413666e6fdebf980a661a1472f955df19409013d8452a585ce7e47a2bea76",
        "md5": "9d91d8236e36df86f1eb5ffb018ec33e",
        "sha256": "cd63e9495ac607cd3f6c78f4f3bbfb9a5569912b9f4f5e8de456ec3d91e11891"
      },
      "downloads": -1,
      "filename": "django-assist-ru-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9d91d8236e36df86f1eb5ffb018ec33e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14858,
      "upload_time": "2010-07-23T19:22:09",
      "upload_time_iso_8601": "2010-07-23T19:22:09.998074Z",
      "url": "https://files.pythonhosted.org/packages/51/04/13666e6fdebf980a661a1472f955df19409013d8452a585ce7e47a2bea76/django-assist-ru-0.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}