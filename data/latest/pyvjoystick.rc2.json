{
  "info": {
    "author": "fsadannn",
    "author_email": "fsadannn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development",
      "Topic :: System :: Hardware :: Universal Serial Bus (USB) :: Human Interface Device (HID)"
    ],
    "description": "# pyvjoystick\n\npyvjoystick is a set of python binding for different virtual devices. Currently [vJoy](https://sourceforge.net/projects/vjoystick/) and [ViGEm](https://github.com/ViGEm) are supported.\n\n<a href='https://sourceforge.net/projects/vjoystick/'>vJoy</a>(on github from <a href='https://github.com/jshafer817/vJoy'>jshafer817</a> and <a href='https://github.com/njz3/vJoy/'>njz3</a>). The implementation of vjoy bindings are inspired on <a href=\"https://github.com/tidzo/pyvjoy\">pyvjoy</a>'s package.\n\n\n<a href='https://github.com/ViGEm'>ViGEm</a> bindings are inspired on <a href=\"https://github.com/yannbouteiller/vgamepad\">vgamepad</a>'s package.\n\n## Requirements\n\nTo be able to use vJoy device install vJoy from <a href='https://sourceforge.net/projects/vjoystick/'>sourceforge</a> or <a href='https://github.com/njz3/vJoy/'>github</a>. It is recommended to also install the vJoy Monitor and Configure vJoy programs. These should be an option during installation.\n\nTo be able to use ViGem device install [release](https://github.com/ViGEm/ViGEmBus). This package ships with a ViGemClient binaries.\n\n\n### Installation\n\nSimple! This package is installable by pip\n\n`pip install pyvjoystick`\n\n\n## Usage\n\n### vJoy example\n\nWith this library you can easily set Axis and Button values on any vJoy device. Low-level bindings are provided in `pyvjoy._sdk`.\n\n```python\nfrom pyvjoystick import vjoy\n\n# Pythonic API, item-at-a-time\nj = vjoy.VJoyDevice(1)\n\n# turn button number 15 on\nj.set_button(15, 1)\n\n# Notice the args are (buttonID,state) whereas vJoy's native API is the other way around.\n\n\n# turn button 15 off again\nj.set_button(15, 0)\n\n# Set X axis to fully left\nj.set_axis(vjoy.HID_USAGE.X, 0x1)\n\n# Set X axis to fully right\nj.set_axis(vjoy.HID_USAGE.X, 0x8000)\n\n# Also implemented:\n\nj.reset()\nj.reset_buttons()\nj.reset_povs()\n\n\n# The 'efficient' method as described in vJoy's docs - set multiple values at once\n\nprint(j._data)\n# >> > <pyvjoystick.vjoy._sdk._JOYSTICK_POSITION_V2 at 0x.... >\n\n\nj._data.lButtons = 19  # buttons number 1,2 and 5 (1+2+16)\nj._data.wAxisX = 0x2000\nj._data.wAxisY = 0x7500\n\n# send data to vJoy device\nj.update()\n\n\n# Lower-level API just wraps the functions in the DLL as thinly as possible, with some attempt to raise exceptions instead of return codes.\n```\n\n### XBox360 gamepad\n\nThe following python script creates a virtual XBox360 gamepad:\n\n```python\nfrom pyvjoystick import vigem as vg\n\ngamepad = vg.VX360Gamepad()\n```\n\nAs soon as the ```VX360Gamepad``` object is created, the virtual gamepad is connected to your system via the ViGEmBus driver, and will remain connected until the object is destroyed.\n\nButtons can be pressed and released through ```press_button``` and ```release_button```:\n\n```python\ngamepad.press_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_A)  # press the A button\ngamepad.press_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_DPAD_LEFT)  # press the left hat button\n\ngamepad.update()  # send the updated state to the computer\n\n# (...) A and left hat are pressed...\n\ngamepad.release_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_A)  # release the A button\n\ngamepad.update()  # send the updated state to the computer\n\n# (...) left hat is still pressed...\n```\n\nAll available buttons are defined in ```XUSB_BUTTON```\n\nTo control the triggers (1 axis each) and the joysticks (2 axis each), two options are provided by the API.\n\nIt is possible to input raw integer values directly:\n```python\ngamepad.left_trigger(value=100)  # value between 0 and 255\ngamepad.right_trigger(value=255)  # value between 0 and 255\ngamepad.left_joystick(x_value=-10000, y_value=0)  # values between -32768 and 32767\ngamepad.right_joystick(x_value=-32768, y_value=15000)  # values between -32768 and 32767\n\ngamepad.update()\n```\n\nOr to input float values:\n```python\ngamepad.left_trigger_float(value_float=0.5)  # value between 0.0 and 1.0\ngamepad.right_trigger_float(value_float=1.0)  # value between 0.0 and 1.0\ngamepad.left_joystick_float(x_value_float=-0.5, y_value_float=0.0)  # values between -1.0 and 1.0\ngamepad.right_joystick_float(x_value_float=-1.0, y_value_float=0.8)  # values between -1.0 and 1.0\n\ngamepad.update()\n```\n\nReset to default state:\n```python\ngamepad.reset()\n\ngamepad.update()\n```\n\n### DualShock4 gamepad\n\nUsing a virtual DS4 gamepad is similar to X360:\n```python\nfrom pyvjoystick import vigem as vg\n\ngamepad = vg.VDS4Gamepad()\n```\n\nPress and release buttons:\n```python\ngamepad.press_button(button=vg.DS4_BUTTONS.DS4_BUTTON_TRIANGLE)\ngamepad.update()\n\n# (...)\n\ngamepad.release_button(button=vg.DS4_BUTTONS.DS4_BUTTON_TRIANGLE)\ngamepad.update()\n```\n\nAvailable buttons are defined in ```DS4_BUTTONS```\n\nPress and release special buttons:\n```python\ngamepad.press_special_button(special_button=vg.DS4_SPECIAL_BUTTONS.DS4_SPECIAL_BUTTON_PS)\ngamepad.update()\n\n# (...)\n\ngamepad.release_special_button(special_button=vg.DS4_SPECIAL_BUTTONS.DS4_SPECIAL_BUTTON_PS)\ngamepad.update()\n```\n\nSpecial buttons are defined in ```DS4_SPECIAL_BUTTONS```\n\nTriggers and joysticks (integer values):\n```python\ngamepad.left_trigger(value=100)  # value between 0 and 255\ngamepad.right_trigger(value=255)  # value between 0 and 255\ngamepad.left_joystick(x_value=0, y_value=128)  # value between 0 and 255\ngamepad.right_joystick(x_value=0, y_value=255)  # value between 0 and 255\n\ngamepad.update()\n```\n\nTriggers and joysticks (float values):\n```python\ngamepad.left_trigger_float(value_float=0.5)  # value between 0.0 and 1.0\ngamepad.right_trigger_float(value_float=1.0)  # value between 0.0 and 1.0\ngamepad.left_joystick_float(x_value_float=-0.5, y_value_float=0.0)  # values between -1.0 and 1.0\ngamepad.right_joystick_float(x_value_float=-1.0, y_value_float=0.8)  # values between -1.0 and 1.0\n\ngamepad.update()\n```\n\n* **Note:** The Y axis on joysticks is inverted for consistency with the X360 API.\n\nDirectional pad (hat):\n```python\ngamepad.directional_pad(direction=vg.DS4_DPAD_DIRECTIONS.DS4_BUTTON_DPAD_NORTHWEST)\ngamepad.update()\n```\n\nDirections for the directional pad are defined in ```DS4_DPAD_DIRECTIONS```\n\nReset to default state:\n```python\ngamepad.reset()\n\ngamepad.update()\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fsadannn/pyvjoystick",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyvjoystick",
    "package_url": "https://pypi.org/project/pyvjoystick/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyvjoystick/",
    "project_urls": {
      "Homepage": "https://github.com/fsadannn/pyvjoystick",
      "Repository": "https://github.com/fsadannn/pyvjoystick"
    },
    "release_url": "https://pypi.org/project/pyvjoystick/1.1.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.8,<4",
    "summary": "Python bindings for vJoy",
    "version": "1.1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14026067,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00c46c7ff3507eba5092537b1701f46d04997209699606a8ba4080f9480a4b81",
          "md5": "f3e2595bed55ec2e88ca4d4eb0d04e02",
          "sha256": "253ba4112766504b9d7e88f288c0040ce0b65d08bdb15982223b16d4d9d5b0f5"
        },
        "downloads": -1,
        "filename": "pyvjoystick-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3e2595bed55ec2e88ca4d4eb0d04e02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4",
        "size": 8844,
        "upload_time": "2022-05-31T13:30:20",
        "upload_time_iso_8601": "2022-05-31T13:30:20.500892Z",
        "url": "https://files.pythonhosted.org/packages/00/c4/6c7ff3507eba5092537b1701f46d04997209699606a8ba4080f9480a4b81/pyvjoystick-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f3f4cdf493551d97bd8a1dd7da514e6f0092d5892174eb6eb5fada9e85b6523",
          "md5": "8ae9c0c89d1eac456cc3564c06064c57",
          "sha256": "665794156006f40609a746f760d0b4b04187404ac3e38c090f27741798abf29e"
        },
        "downloads": -1,
        "filename": "pyvjoystick-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8ae9c0c89d1eac456cc3564c06064c57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4",
        "size": 7849,
        "upload_time": "2022-05-31T13:30:24",
        "upload_time_iso_8601": "2022-05-31T13:30:24.535522Z",
        "url": "https://files.pythonhosted.org/packages/0f/3f/4cdf493551d97bd8a1dd7da514e6f0092d5892174eb6eb5fada9e85b6523/pyvjoystick-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcc08d36e60a1ee2b3e41f44da6168e9a745f51c467b15ac2b5cb31e6ead4cd5",
          "md5": "b5ddbdac3b7d827d558e7afefe375701",
          "sha256": "e18182278db9d4283867663fb469b3b6ddaf431479d70f7a894cc2c733588543"
        },
        "downloads": -1,
        "filename": "pyvjoystick-1.1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5ddbdac3b7d827d558e7afefe375701",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4",
        "size": 139398,
        "upload_time": "2022-06-03T16:54:39",
        "upload_time_iso_8601": "2022-06-03T16:54:39.759124Z",
        "url": "https://files.pythonhosted.org/packages/bc/c0/8d36e60a1ee2b3e41f44da6168e9a745f51c467b15ac2b5cb31e6ead4cd5/pyvjoystick-1.1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "586dd2fef2ba4437655fd05bd028f7b5ec6fe1debfba219f5b91bafa43d4171c",
          "md5": "8bf57fd7396fa88d9227ba2402d3e5d9",
          "sha256": "dad7bb9273cf4fb16efe01d153fa42e0696a8533bdeb40424a5d7b8f17fdacb9"
        },
        "downloads": -1,
        "filename": "pyvjoystick-1.1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8bf57fd7396fa88d9227ba2402d3e5d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4",
        "size": 135494,
        "upload_time": "2022-06-03T16:54:56",
        "upload_time_iso_8601": "2022-06-03T16:54:56.023453Z",
        "url": "https://files.pythonhosted.org/packages/58/6d/d2fef2ba4437655fd05bd028f7b5ec6fe1debfba219f5b91bafa43d4171c/pyvjoystick-1.1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcc08d36e60a1ee2b3e41f44da6168e9a745f51c467b15ac2b5cb31e6ead4cd5",
        "md5": "b5ddbdac3b7d827d558e7afefe375701",
        "sha256": "e18182278db9d4283867663fb469b3b6ddaf431479d70f7a894cc2c733588543"
      },
      "downloads": -1,
      "filename": "pyvjoystick-1.1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b5ddbdac3b7d827d558e7afefe375701",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4",
      "size": 139398,
      "upload_time": "2022-06-03T16:54:39",
      "upload_time_iso_8601": "2022-06-03T16:54:39.759124Z",
      "url": "https://files.pythonhosted.org/packages/bc/c0/8d36e60a1ee2b3e41f44da6168e9a745f51c467b15ac2b5cb31e6ead4cd5/pyvjoystick-1.1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "586dd2fef2ba4437655fd05bd028f7b5ec6fe1debfba219f5b91bafa43d4171c",
        "md5": "8bf57fd7396fa88d9227ba2402d3e5d9",
        "sha256": "dad7bb9273cf4fb16efe01d153fa42e0696a8533bdeb40424a5d7b8f17fdacb9"
      },
      "downloads": -1,
      "filename": "pyvjoystick-1.1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8bf57fd7396fa88d9227ba2402d3e5d9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4",
      "size": 135494,
      "upload_time": "2022-06-03T16:54:56",
      "upload_time_iso_8601": "2022-06-03T16:54:56.023453Z",
      "url": "https://files.pythonhosted.org/packages/58/6d/d2fef2ba4437655fd05bd028f7b5ec6fe1debfba219f5b91bafa43d4171c/pyvjoystick-1.1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}