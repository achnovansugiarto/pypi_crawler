{
  "info": {
    "author": "Edward Li",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n# Wormhole: Realtime Streaming Engine\nWormhole is a simple and hackable realtime video streaming engine for prototypes and projects alike! Stream amera feeds, video files, or machine learning output from anything like a Raspberry Pi to a fully fledged development environment!\n\n\n![wormhole_screenshot_spring](https://user-images.githubusercontent.com/20020059/184041754-5ee78d89-6796-49b8-87b7-13792c301d83.jpg)\n\n> ## Try Out A Live Demo Here: https://demo.wormhole.hydranet.dev/\n\n## Features:\n- Multithreaded Flask & SocketIO backend\n- Camera and Video File Streaming!\n- Fast and scalable Motion JPEG and PNG streaming\n- Dynamic protocol negotiation between Wormhole servers and clients\n- Dynamic video modification through callbacks and views\n\n## What is Wormhole?\nWormhole is not meant to overtake established battle-tested libraries such as WebRTC or alike. Instead, Wholehole aims to be an extremely simple-to-use library wherever you need to share video (Pre-recorded or live from a camera) between two or more servers. The original design goal was so that Wormhole could be utilized during fast-paced development environments such as hackathons and other competitions, yet flexible and modular enough to be a one-stop-shop for your next AI video processing project, webcam streaming project, or simple video sharing project. From a Raspberry Pi camera server to annotated output from a Machine Learning pipeline, Wormhole can fit all your needs!\n\n## Installing Wormhole\nTo get started with Wormhole, you can just clone the project by running `git clone git@github.com:RadioactiveHydra/Wormhole.git` to your local machine.\nOnce downloaded, run `pip install -r wormhole/requirements.txt` to install all the required dependencies.\n> NOTE: It is recommended that you install Wormhole in a virtual env! More instructions can be found [here](https://www.freecodecamp.org/news/how-to-setup-virtual-environments-in-python/)\n\n## Getting Started with Wormhole\n> NOTE: This is still WIP! API may change and/or be removed in future releases.  \n\nTo start streaming from your camera, all you need to write is:\n```py\nfrom wormhole import Wormhole\nserver = Wormhole()\nserver.stream(0)\nserver.join()\n```\n\n**Thats It!** Wormhole then handles setting up the server, launching the camera, and streaming the video frames!\nTo stream from a video file instead, you can write the following:\n```py\nfrom wormhole import Wormhole\nserver = Wormhole()\nserver.stream(\"path/to/video.mp4\")\nserver.join()\n```\n\nAs easy as that! To view the video stream in another python project, you can just run:\n```py\nfrom wormhole import Wormhole\nvideo = Wormhole().view(\"your.ip.address.here\")\n```\n\nAgain, **thats it!** Wormhole then handles setting up the client, negotiating the best streaming protocol to use, and viewing the video stream! To render the video to your screen, you can then run:\n```py\nfrom wormhole.utils import render_video\nrender_video(video)\n```\nThe video stream is also available online if you go to `http://localhost:5000/wormhole/stream/default/mjpeg` in your browser.\n\nOf course, you may want to do more than what Wormhole offers by default. For that, you can check out some examples in the `examples` folder or in the [Official Wormhole Example Server](https://github.com/EdwardJXLi/WormholeExampleServer)\n\n## Why develop Wormhole?\nAfter rewriting the same video streaming codebase for the 5th hackathon/project in a row ([Ref.1](https://github.com/CrowdEye/crowdeye-ai-engine/blob/bbb1591cbc121babef8de973ba7210fe358683ba/ai.py#L57)) ([Ref.2](https://github.com/MaskPass-BellCSclub/ai-server/blob/1d9acdc36677fa433a0f3db2c2d297fe023c0d70/main.py#L199)) ([Reg.3](https://github.com/Hive-HQ/Hive-HQ-backend/blob/27f88a2a74da9465f8fc1ceb89fd0344d696a8cc/main.py#L526)) (& More!), I thought it was time to sit down and write a universal streaming library for all my needs. Shopping around online did not yield any projects that fit my requirements, so I decided to build my own. Wormhole is designed so that it can not only be deployed in ~~minutes~~ **seconds**, but it is also flexible enough to do everything I need in a fully-fledged data streaming library. \n\n## Contributing to Wormhole\nWormhole's source code follows all **PEP8** guidelines (except E501 for long lines). Also, most function arguments are **typed** so that the API is coherent and easy-to-use. Finally, Wormhole aims to keep compatibility for **Python versions 3.8 and beyond**. To contribute to Wormhole, you can either fork the project on GitHub or submit a pull request. If you have any questions or suggestions, feel free to join the discord server here: [https://discord.gg/9QF2bPc](https://discord.gg/9QF2bPc).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RadioactiveHydra/Wormhole/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wormhole-streaming",
    "package_url": "https://pypi.org/project/wormhole-streaming/",
    "platform": null,
    "project_url": "https://pypi.org/project/wormhole-streaming/",
    "project_urls": {
      "Bug Reports": "https://github.com/RadioactiveHydra/Wormhole/issues",
      "Demo": "https://demo.wormhole.hydranet.dev/",
      "Discord": "https://discord.gg/9QF2bPc",
      "Homepage": "https://github.com/RadioactiveHydra/Wormhole/",
      "Source Code": "https://github.com/RadioactiveHydra/Wormhole"
    },
    "release_url": "https://pypi.org/project/wormhole-streaming/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Simple and Hackable Realtime Video Streaming Engine",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15859981,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eae4f448fdae3f660e0383df1787f21bdbec429a86f8d37a96c0f53913686a40",
          "md5": "e4b081f7741b6ce233943d848bc6bc9b",
          "sha256": "90c82850734dd632b0a243a269162ac0ffe7bfa1fab47982d3bb59776c8474e6"
        },
        "downloads": -1,
        "filename": "wormhole-streaming-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e4b081f7741b6ce233943d848bc6bc9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 227677,
        "upload_time": "2022-11-22T21:53:51",
        "upload_time_iso_8601": "2022-11-22T21:53:51.160454Z",
        "url": "https://files.pythonhosted.org/packages/ea/e4/f448fdae3f660e0383df1787f21bdbec429a86f8d37a96c0f53913686a40/wormhole-streaming-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c5b65edf4e4d970781e2266b16ffe6431ec4c066da468b821f3e0ca6756ff3c",
          "md5": "47c6784690d3bfec445fa416870a67d0",
          "sha256": "525bdeaa99eb951a6888537160f3544b0433a95621c3339f118a6696067baaf3"
        },
        "downloads": -1,
        "filename": "wormhole-streaming-0.0.1.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "47c6784690d3bfec445fa416870a67d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 227761,
        "upload_time": "2022-11-22T22:01:17",
        "upload_time_iso_8601": "2022-11-22T22:01:17.510887Z",
        "url": "https://files.pythonhosted.org/packages/1c/5b/65edf4e4d970781e2266b16ffe6431ec4c066da468b821f3e0ca6756ff3c/wormhole-streaming-0.0.1.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "436f5f607d7e5c25c9387e668be3b722f4bee5057bf7ffe4671588d21e35697d",
          "md5": "84c3f8a0e0fc7923f513a0013b3a97b0",
          "sha256": "928b7be2e833431b1692a758ae300a978abd5ea2b631954ea832fcb29ceb1eee"
        },
        "downloads": -1,
        "filename": "wormhole-streaming-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "84c3f8a0e0fc7923f513a0013b3a97b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 227808,
        "upload_time": "2022-11-22T22:23:09",
        "upload_time_iso_8601": "2022-11-22T22:23:09.883256Z",
        "url": "https://files.pythonhosted.org/packages/43/6f/5f607d7e5c25c9387e668be3b722f4bee5057bf7ffe4671588d21e35697d/wormhole-streaming-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "436f5f607d7e5c25c9387e668be3b722f4bee5057bf7ffe4671588d21e35697d",
        "md5": "84c3f8a0e0fc7923f513a0013b3a97b0",
        "sha256": "928b7be2e833431b1692a758ae300a978abd5ea2b631954ea832fcb29ceb1eee"
      },
      "downloads": -1,
      "filename": "wormhole-streaming-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "84c3f8a0e0fc7923f513a0013b3a97b0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 227808,
      "upload_time": "2022-11-22T22:23:09",
      "upload_time_iso_8601": "2022-11-22T22:23:09.883256Z",
      "url": "https://files.pythonhosted.org/packages/43/6f/5f607d7e5c25c9387e668be3b722f4bee5057bf7ffe4671588d21e35697d/wormhole-streaming-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}