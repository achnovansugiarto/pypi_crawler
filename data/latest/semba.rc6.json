{
  "info": {
    "author": "Georgy Meshcheryakov",
    "author_email": "metsheryakov_ga@spbstu.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# semba\n\n**semba** is a Python package for bayesian and (soon) probabalistic structural equation modelling (SEM). The project is powered by the other SEM software [**semopy**](https://semopy.com) and probabalistic programming framework [**Numpyro**](https://num.pyro.ai). One can think of  **semba** as a bayesian offspring of **semopy**, and indeed, there is little difference between and the two in terms of usability.\n\n## What semba has to offer?\n\n**semba** is a very young package that, at the time of me writing this readme, is days old, and many features are still planned, yet at the moment its selling points are:\n\n - Impose arbitrary priors on model parameters;\n - Efficient parameter estimation by means of Markov Chain Monte Carlo (MCMC) methods;\n - *Almost* complete mimicria of **semopy** models and methods: no need to learn two different packages.\n\n## What will semba offer in the foreseeable future?\n\n - Not *almost*, but a complete mimicria;\n - Bayesian treatment of the Gaussian Process SEM proposed [here](https://arxiv.org/abs/2106.01140) under the notion of `ModelGeneralizedEffects` that can be used to model complex phenomena such as spatial, temporal data or even both;\n - Probabalistic approach to SEM that lets user to impose arbitrary distribution assumptions on variables and to introduce complex nonlinearity.\n\n## Where to start?\n\nThe best place to start is to get familar with **semopy** first at [its website](https://semopy.com) as there is no difference in core syntax.\n\nThen, one can proceed to installing **semba** via pip:\n\n```\npip install semba\n```\n\nSee that using **semba** is no different from using **semopy**:\n```\nfrom semopy.examples import political_democracy as ex\nimport semba\n\ndesc, data = ex.get_model(), ex.get_data()\nmodel = semba.Model(desc)\nmodel.fit(data)\nins = model.inspect()\nprint(ins.head())\n```\nThat produces an output:\n```\n       lval op   rval   Estimate       5.0%      95.0%        std      n_eff      r_hat\n_b12  dem60  ~  ind60       1.32       0.72       1.86       0.35   1,098.38       1.00\n_b13  dem65  ~  ind60       0.52       0.14       0.89       0.23   1,119.16       1.00\n_b14  dem65  ~  dem60       0.90       0.71       1.07       0.11     479.93       1.00\n_b1      x1  ~  ind60       1.00          -          -          -          -          -\n_b2      x2  ~  ind60       2.17       1.94       2.39       0.14   1,028.65       1.00\n```\n\n## Imposing custom priors\nAfter you learn about the [model syntax](https://semopy.com/syntax.html), you can impose priors onto model parameters by means of `PRIOR` operation, for example:\n```\ny ~ a1 * x1 + a2 * x2 + a3 * x3\n\nPRIOR(Normal, loc=1, scale=0.1) a1 a2 a3\n```\nThis will impose a normal prior on regression coefficients `a1, a2, a3` with a center at 1 and standard deviation 0.1.\n`PRIOR` operation overrides default priors. In `semba`, the default priors for regression coefficients are normal with a scale 0.5,  covariances are normal and the default priors for variance parameters is half-normal, all centered at starting values.  Default priors can be overriden by using operations `PRIOR_LOADING`, `PRIOR_VARIANCE`, `PRIOR_COVARIANCE`, `PRIOR_VARIANCE_LATENT` and `PRIOR_COVARIANCE_LATENT`. The latter two are used for (co)variances of latent factors -- covariances are standard normal and variances are half-normal with a center at 1.0 (this is likely a subject to change in a future version to accomodate for a scenarios where variances are far-off from the regular range 0-10).\n\nIn `PRIORx` operations, any distribution can be supplied, as long as it is supported by **Numpyro** (see [documentation](http://num.pyro.ai/en/stable/distributions.html) for a list of available distribution).\n\n## MCMC settings\n\nNumber of samples, burn-in (or warmup) iterations and number of chains can be supplied to the `fit` method via arguments `num_samples`, `num_warmup` and `num_chains` respectively. By default, `num_samples` is set to a number of parameters in a model times 30, and a number of warmup iterations is 1/5th of that. `num_chains` is set to 1 by default. \n\n**semba** relies on **Numpyro** MCMC kernels, and any **Numpyro** MCMC kernel is easily available to a user: one should pass a name of the kernel to the `solver` argument of the method `fit`. The default one is NUTS.\n\n## More information\n**semba** has its own little website at [bayes.semopy.com](https://bayes.semopy.com).\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bayes.semopy.com",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "semba",
    "package_url": "https://pypi.org/project/semba/",
    "platform": "",
    "project_url": "https://pypi.org/project/semba/",
    "project_urls": {
      "Homepage": "https://bayes.semopy.com"
    },
    "release_url": "https://pypi.org/project/semba/0.91/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Bayesian  Structural Equation Modeling",
    "version": "0.91",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11001517,
  "releases": {
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c355c9ceb19a6c2826340a56e79321a87c386fad03acfcffe0470eb67ab96067",
          "md5": "c100d2c28a9cd3a169b530a7dddc29d6",
          "sha256": "a8a66d210547472353917704c13e8086446156462647ac1584e8f2f1b79fd2bf"
        },
        "downloads": -1,
        "filename": "semba-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c100d2c28a9cd3a169b530a7dddc29d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8409,
        "upload_time": "2021-06-23T20:04:36",
        "upload_time_iso_8601": "2021-06-23T20:04:36.383198Z",
        "url": "https://files.pythonhosted.org/packages/c3/55/c9ceb19a6c2826340a56e79321a87c386fad03acfcffe0470eb67ab96067/semba-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "651c467aa94e5d6a2fb0acef602459c3edf5e7401a4903bc7de3c87cd1df2a5f",
          "md5": "45eeeda7508fbfb91b67f28b0c610f5f",
          "sha256": "c707e4e3a9a548bf7dcffb0c171725af095b4c3bb6b4461095d13f8add31b145"
        },
        "downloads": -1,
        "filename": "semba-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "45eeeda7508fbfb91b67f28b0c610f5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8433,
        "upload_time": "2021-06-23T21:18:08",
        "upload_time_iso_8601": "2021-06-23T21:18:08.290152Z",
        "url": "https://files.pythonhosted.org/packages/65/1c/467aa94e5d6a2fb0acef602459c3edf5e7401a4903bc7de3c87cd1df2a5f/semba-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce03903be85f5a7db2c540cd8cf5ce66290741c861fbc45cbfca35c30816a3db",
          "md5": "de2a02c7f9a46766128754cb63835ed6",
          "sha256": "9d10531a9d986d3d535b5cf349f59373f0c3b62d9604a626f8c8a5044643348f"
        },
        "downloads": -1,
        "filename": "semba-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "de2a02c7f9a46766128754cb63835ed6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13668,
        "upload_time": "2021-06-24T14:05:49",
        "upload_time_iso_8601": "2021-06-24T14:05:49.201615Z",
        "url": "https://files.pythonhosted.org/packages/ce/03/903be85f5a7db2c540cd8cf5ce66290741c861fbc45cbfca35c30816a3db/semba-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "701638eba27d3b9dd92ebe6916f897647fe861c09671a93c7651b2174a3f40e4",
          "md5": "bb5d9019e5238fa3787ff13f2fe152bf",
          "sha256": "8c769716805c805b660118f9ef470bd8f6343441e49aeb2799f98e66b1932406"
        },
        "downloads": -1,
        "filename": "semba-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "bb5d9019e5238fa3787ff13f2fe152bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13955,
        "upload_time": "2021-06-25T10:55:50",
        "upload_time_iso_8601": "2021-06-25T10:55:50.147782Z",
        "url": "https://files.pythonhosted.org/packages/70/16/38eba27d3b9dd92ebe6916f897647fe861c09671a93c7651b2174a3f40e4/semba-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e943867b6580041141413de599156d8cfd86b24d4860b82ae567c708a2dcf4f",
          "md5": "62b52e9b3603e257cca55abf811cc416",
          "sha256": "6f025646c1243aea4a3dbe2184085889c6f762f4d7c4e52410eef9cd8e746580"
        },
        "downloads": -1,
        "filename": "semba-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "62b52e9b3603e257cca55abf811cc416",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13952,
        "upload_time": "2021-07-01T14:22:51",
        "upload_time_iso_8601": "2021-07-01T14:22:51.529920Z",
        "url": "https://files.pythonhosted.org/packages/1e/94/3867b6580041141413de599156d8cfd86b24d4860b82ae567c708a2dcf4f/semba-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.91": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8f103563520701628717e639fbd82b01f8f484e144ace5546b849e9a0ac9bba",
          "md5": "46c3effcb443e8f644721c358c0cbbcb",
          "sha256": "d52c8b83710892999dde7f609a9fe4dc44dd95ed9c61c3cccd407774c761ed37"
        },
        "downloads": -1,
        "filename": "semba-0.91.tar.gz",
        "has_sig": false,
        "md5_digest": "46c3effcb443e8f644721c358c0cbbcb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13937,
        "upload_time": "2021-07-26T00:55:26",
        "upload_time_iso_8601": "2021-07-26T00:55:26.873231Z",
        "url": "https://files.pythonhosted.org/packages/f8/f1/03563520701628717e639fbd82b01f8f484e144ace5546b849e9a0ac9bba/semba-0.91.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f8f103563520701628717e639fbd82b01f8f484e144ace5546b849e9a0ac9bba",
        "md5": "46c3effcb443e8f644721c358c0cbbcb",
        "sha256": "d52c8b83710892999dde7f609a9fe4dc44dd95ed9c61c3cccd407774c761ed37"
      },
      "downloads": -1,
      "filename": "semba-0.91.tar.gz",
      "has_sig": false,
      "md5_digest": "46c3effcb443e8f644721c358c0cbbcb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13937,
      "upload_time": "2021-07-26T00:55:26",
      "upload_time_iso_8601": "2021-07-26T00:55:26.873231Z",
      "url": "https://files.pythonhosted.org/packages/f8/f1/03563520701628717e639fbd82b01f8f484e144ace5546b849e9a0ac9bba/semba-0.91.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}