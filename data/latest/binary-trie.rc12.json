{
  "info": {
    "author": "Guillaume Michel",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Binary Trie\n\nPython binary trie implementation, helping with XOR distances.\n\nAuthor: [Guillaume Michel](https://github.com/guillaumemichel)\n\n## Purpose\n\n[IPFS](https://ipfs.network) and [libp2p](https://libp2p.io/) are built upon the Kademlia DHT, which uses the XOR distance as a distance metric between keys. As explained in this [blogpost](https://metaquestions.me/2014/08/01/shortest-distance-between-two-points-is-not-always-a-straight-line/), the XOR distance is tricky to understand and represent. This distance metric is odd for it is non linear.\nFor instance, $2 \\oplus 3 = 1$ but $3 \\oplus 4 = 7$. Ordering $N_8$ by XOR distance to 2 gives the following result: $[2,3,0,1,6,7,4,5]$\n\nOne popular representation for XOR distance is the Binary Trie. A binary brie is a simple [Trie](https://en.wikipedia.org/wiki/Trie) with keyspace $\\lbrace0,1\\rbrace^n$ with $n$ being the size of the keyspace. The perfect visual representation of the XOR distance would be a N-dimensional binary trie. The example below displays a binary trie containing the keys $[2,3,4,6,7,9,11,13]$.\n\n![Alt text](./resources/trie.svg)\n\nEach node in the Trie can be associated with some metadata for convenience.\n\n## Usage\n\n### Install\n\n```bash\npip install binary-trie\n```\n\n### Import\n\n```python\nfrom binary_trie import Trie, bytes_to_bitstring, bitstring_to_bytes, int_to_bitstring, bitstring_to_int\n```\n\n### Creating an empty trie\n```python\ntrie = Trie()\n```\n### Adding keys\nThe `add(key)` method takes a bitstring as input. The bitstring can either be provided directly, or be computer from an `int` or `bytes` using the `int_to_bitstring()` and `bytes_to_bitstring()` functions. Note that the `l` parameter represent the bit length of the binary representation. It is important that all keys share the same bit length. The bit length can be omitted in `bytes_to_bistring()` when working with bit lengths multiple of 8.\n```python\ntrie.add(\"0010\")\ntrie.add(4*\"0\")\ntrie.add(int_to_bitstring(3, l=4))\ntrie.add(bytes_to_bitstring(b'\\x0e', l=4))\n```\nThe add function returns `True` on success, and `False` if the key was already in the trie (not inserted).\n\n### Finding keys\nThe `find(key)` method returns `True` if the provided key is in the Trie, `False` otherwise.\n```python\ntrie.contains(\"0010\") # True\ntrie.contains(\"0100\") # False\n```\n\n### Key depth\nThe `depth(key)` method returns the depth of the provided key, if it is in the Trie and `-1` otherwise. The depth of a trie node is defined as the number of its direct ancestors, up to the root of the trie.\n```python\ntrie.depth(\"0\")    # 1\ntrie.depth(\"0010\") # 3\ntrie.depth(\"0111\") # 4\ntrie.depth(\"1101\") # 2\ntrie.depth(\"11\")   # -1\n```\n\n### Finding the closest keys to a target\nThe `n_closest_keys(key, n)` method returns the `n` closest keys to the provided key in the trie, according to the XOR distance. The keys are sorted according to the distance to the target key. Note that only leaves of the trie will be returned, not intermediary nodes.\n```python\ntrie.n_closest_keys(\"0001\", 1) # [\"0000\"]\ntrie.n_closest_keys(\"0010\", 3) # [\"0010\", \"0011\", \"0000\"]\n```\n\n### Prefix matching\n\nThe `prefix_match_keys(prefix)` will return the list of keys of all leaves of the Trie matching the provided `prefix`.\n\n```python\ntrie.prefix_match_keys(\"00\")   # [\"0000\", \"0010\", \"0011\"]\ntrie.prefix_match_keys(\"1111\") # []\n```\n\n### Attaching metadata to Trie nodes\n\nIt is possible to attach an `object` as metadata to a trie leaf node.\n\n```python\nclass MyObj(object):\n    def __init__(self, key, name):\n        self.key = key\n        self.name = name\n\ntrie = Trie(MyObj)\n\nobj = MyObj(int_to_bitstring(10, 4), \"Node 10\")\ntrie.add(obj.key, obj)\n\ntrie.find(obj.key).name        # \"Node 10\"\ntrie.n_closest(obj.key, 1)     # [obj]\ntrie.prefix_match(obj.key[:2]) # [obj]\n```\nNote that the `find(key)` method is similar to the `contains(key)` method, but returns the associated `metadata` if any, instead of returning a `bool`.\nThe `n_closest(key, n)` method is similar to the `n_closest_keys(key, n)` method, but returns the list of `metadata` associated with the closest keys, instead of the list of keys.\n\n\n### Predicates\n\nIt is possible to assign some boolean variables to `metadata` objects, and make use of them using predicate in `n_closest()`, `n_closest_keys()`, `prefix_match()` and `prefix_match_keys()` methods to filter the results.\n\n```python\nclass MyObj(object):\n    def __init__(self, key, name, some_bool):\n        self.key = key\n        self.name = name\n        self.some_bool = some_bool\n\ntrie = Trie(MyObj)\n\nnodeIDs = [0, 1, 2] # [\"0000\", \"0001\", \"0010\"]\nfor i in nodeIDs:\n    obj = MyObj(int_to_bitstring(i, 4), \"Node \"+str(i), i % 2 == 0)\n    trie.add(obj.key, obj)\n\ntrie.n_closest_keys(\"0001\", 2, predicate=lambda n: n.some_bool) # [\"0000\", \"0010\"] \ntrie.prefix_match_keys(\"000\", predicate=lambda n: n.some_bool)  # [\"0000\"]\n\n# Note that the key \"0001\" matched both requests, but wasn't taken into\n# consideration as it doesn't satisfy the predicate\n```\n\n\n### Helpers\n\nThere are 4 helpers functions to facilitate the use of this implementation with keys being not only `bitstring`, but also `bytes` or `int`. These helper functions help translate `bytes` and `int` to `bitstring` and reciprocally.\n```python\ndef bytes_to_bitstring(data: bytes, l: int=8*len(data)) -> bytes:\n    ...\nbytes_to_bitstring(b'\\xff\\x00') # \"1111111100000000\"\nbytes_to_bitstring(b'\\xf3',l=4) # \"0011\"\n\ndef bitstring_to_bytes(bs: str) -> bytes:\n    ...\nbitstring_to_bytes(\"1111111100000000\") # b'\\xff\\x00'\nbitstring_to_bytes(\"0011\")             # b'\\x03'\n\ndef int_to_bitstring(i, l: int) -> bytes:\n    ...\nint_to_bitstring(6, 4)  # \"0110\"\nint_to_bitstring(6, 16) # \"0000000000000110\"\n\ndef bitstring_to_int(bs: str) -> int:\n    ...\nbitstring_to_int(\"0110\")             # 6\nbitstring_to_int(\"0000000000000110\") # 6\n```\n\n### Encoding\n\nThe following functions help uniquely encode a specific binary prefix, that are bistrings of arbitrary size. The bitstrings can be encoded in `int` or in [`unsigned varint`](https://github.com/multiformats/unsigned-varint). The mapping goes as follow:\n```\nbitstring       code        varint\n\"\"          ->  0       ->  00000000 (0x00)\n\"0\"         ->  1       ->  00000001 (0x01)\n\"1\"         ->  2       ->  00000010 (0x02)\n\"00\"        ->  3       ->  00000011 (0x03)\n...\n\"0000000\"   ->  127     ->  01111111 (0x7f)\n\"0000001\"   ->  128     ->  10000000 00000001 (0x8001)\n...\n```\n\n```python\ndef encode_bitstring(bitstring: str) -> int:\n    ...\nencode_bitstring(\"1\")       # 2\nencode_bitstring(\"010\")     # 9\nencode_bitstring(\"0000001\") # 128\n\ndef decode_bitstring(code: int) -> str:\n    ...\ndecode_bitstring(2)   # \"1\"\ndecode_bitstring(9)   # \"010\"\ndecode_bitstring(128) # \"0000001\"\n\ndef bitstring_to_varint(bitstring: str) -> bytes:\n    ...\nbitstring_to_varint(\"1\")       # b'\\x02'\nbitstring_to_varint(\"010\")     # b'\\x09'\nbitstring_to_varint(\"0000001\") # b'\\x80\\x01'\n\ndef varint_to_bitstring(varint_bytes: bytes) -> str:\n    ...\nvarint_to_bitstring(b'\\x02')     # \"1\"\nvarint_to_bitstring(b'\\x09')     # \"010\"\nvarint_to_bitstring(b'\\x80\\x01') # \"0000001\"\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/guillaumemichel/py-binary-trie",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "binary-trie",
    "package_url": "https://pypi.org/project/binary-trie/",
    "platform": null,
    "project_url": "https://pypi.org/project/binary-trie/",
    "project_urls": {
      "Bug Tracker": "https://github.com/guillaumemichel/py-binary-trie/issues",
      "Homepage": "https://github.com/guillaumemichel/py-binary-trie"
    },
    "release_url": "https://pypi.org/project/binary-trie/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A simple binary trie implementation",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17171423,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17bc9d4cd7bcf6ccdcaefc5887b8bb45dc26e5e514e75c92203850aa6ad19176",
          "md5": "d4416a5ec289ebcbef44e72681b95206",
          "sha256": "043b135923f57415320f72f16552f70d67d576bb9a88d91bad696d4b48013f2e"
        },
        "downloads": -1,
        "filename": "binary_trie-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4416a5ec289ebcbef44e72681b95206",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7269,
        "upload_time": "2022-05-25T12:01:56",
        "upload_time_iso_8601": "2022-05-25T12:01:56.076737Z",
        "url": "https://files.pythonhosted.org/packages/17/bc/9d4cd7bcf6ccdcaefc5887b8bb45dc26e5e514e75c92203850aa6ad19176/binary_trie-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d67827adcae3ebfcd584da08dad38a3d40223f5b7ef076d5f0bcf2ed26e74943",
          "md5": "27356beabd8789fb65ae6b2ce8f49418",
          "sha256": "fe77b6ec25cc4f64f03305255da09c46eb36b1e90eeb115033b4a116e5dd7c3b"
        },
        "downloads": -1,
        "filename": "binary-trie-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "27356beabd8789fb65ae6b2ce8f49418",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6648,
        "upload_time": "2022-05-25T12:01:57",
        "upload_time_iso_8601": "2022-05-25T12:01:57.735343Z",
        "url": "https://files.pythonhosted.org/packages/d6/78/27adcae3ebfcd584da08dad38a3d40223f5b7ef076d5f0bcf2ed26e74943/binary-trie-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e44d23e7b949f0c014496131bbb8b914b0d59da99286028107d381d427d87c43",
          "md5": "58056d39632e260974c60a405ee04fab",
          "sha256": "45ee682ad469f315a47d9aa6a337552a843d97269accc230620c7ce6aabd7edf"
        },
        "downloads": -1,
        "filename": "binary_trie-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58056d39632e260974c60a405ee04fab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7134,
        "upload_time": "2022-05-30T07:06:15",
        "upload_time_iso_8601": "2022-05-30T07:06:15.668712Z",
        "url": "https://files.pythonhosted.org/packages/e4/4d/23e7b949f0c014496131bbb8b914b0d59da99286028107d381d427d87c43/binary_trie-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca7531f47b93b9381638d41be9c9ca9c31df4bf66ce9bcceb252a67016a61797",
          "md5": "86ac148ab25af4fd9dbd76f338c47934",
          "sha256": "23dc7fcc11c5c1261151396db3a97af6fc403d59c829c9aa81647f526d25ba0a"
        },
        "downloads": -1,
        "filename": "binary-trie-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "86ac148ab25af4fd9dbd76f338c47934",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6601,
        "upload_time": "2022-05-30T07:06:17",
        "upload_time_iso_8601": "2022-05-30T07:06:17.081520Z",
        "url": "https://files.pythonhosted.org/packages/ca/75/31f47b93b9381638d41be9c9ca9c31df4bf66ce9bcceb252a67016a61797/binary-trie-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2077eade7c90f908e76e5e3b257070c8162c44162ed78964b88b4bdf232d620f",
          "md5": "48a2e5317430d2df6f395917a7051b27",
          "sha256": "7499fd5fe2ed8e5082be66059cc1b40b544fb4d189a157e0e2084043ae793baf"
        },
        "downloads": -1,
        "filename": "binary_trie-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "48a2e5317430d2df6f395917a7051b27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7144,
        "upload_time": "2022-05-31T06:46:20",
        "upload_time_iso_8601": "2022-05-31T06:46:20.752581Z",
        "url": "https://files.pythonhosted.org/packages/20/77/eade7c90f908e76e5e3b257070c8162c44162ed78964b88b4bdf232d620f/binary_trie-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "259b549049bf368b7a32a79d40fa815124ee050e01fdaa7769a477f8b016f372",
          "md5": "28c7466803a4fa0a9be53325cd8627c9",
          "sha256": "2c21312dcb1afb49fd7e0307425bd6d17544314f67a81c2d976a9de02eed8f71"
        },
        "downloads": -1,
        "filename": "binary-trie-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "28c7466803a4fa0a9be53325cd8627c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6608,
        "upload_time": "2022-05-31T06:46:22",
        "upload_time_iso_8601": "2022-05-31T06:46:22.176353Z",
        "url": "https://files.pythonhosted.org/packages/25/9b/549049bf368b7a32a79d40fa815124ee050e01fdaa7769a477f8b016f372/binary-trie-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ccf1a7ec69810beef6fd86084b3430d1746e7fab121cf97ce02be8e63446d96",
          "md5": "cd099b9b29e5888491a701a0b642b6aa",
          "sha256": "2ae015485e067f3bc3f47529218d5ebdc96b693b150f24bfd306abb368138492"
        },
        "downloads": -1,
        "filename": "binary_trie-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd099b9b29e5888491a701a0b642b6aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8680,
        "upload_time": "2022-05-31T12:39:38",
        "upload_time_iso_8601": "2022-05-31T12:39:38.740363Z",
        "url": "https://files.pythonhosted.org/packages/6c/cf/1a7ec69810beef6fd86084b3430d1746e7fab121cf97ce02be8e63446d96/binary_trie-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5d53f9577d64ff057da89f6a94d9e6339ebb9315c4d894d2f1b3005fe4f836c",
          "md5": "ce55a15ebbba8a207bc0e4115baa2dde",
          "sha256": "e89179951ada23f47020354b6d77eeb949bc474113385bb6dde8f4c37cfd6732"
        },
        "downloads": -1,
        "filename": "binary-trie-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ce55a15ebbba8a207bc0e4115baa2dde",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8071,
        "upload_time": "2022-05-31T12:39:40",
        "upload_time_iso_8601": "2022-05-31T12:39:40.321650Z",
        "url": "https://files.pythonhosted.org/packages/c5/d5/3f9577d64ff057da89f6a94d9e6339ebb9315c4d894d2f1b3005fe4f836c/binary-trie-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19176d4acea551f27ad8dd0d0d288234d82f4242935911dd9f205f821b3d3bef",
          "md5": "1e949f195e1da3b7523a708a549820ba",
          "sha256": "2143a7e71bfa9e96e4f83578dd812b2d09c3dfe6c5314bfb4e638f7be6a1c839"
        },
        "downloads": -1,
        "filename": "binary_trie-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e949f195e1da3b7523a708a549820ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8919,
        "upload_time": "2022-06-08T15:37:32",
        "upload_time_iso_8601": "2022-06-08T15:37:32.386933Z",
        "url": "https://files.pythonhosted.org/packages/19/17/6d4acea551f27ad8dd0d0d288234d82f4242935911dd9f205f821b3d3bef/binary_trie-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df69d36c63df43c4ebac635a8ec1815952d17cde836063e9eea1fd2d1d5e481b",
          "md5": "4114f0dba46e7930cd78a870d03c04a0",
          "sha256": "eba596fc75c20a5ce7b708437fae23bf4cb4ac8706896432d6588bd4dc1a7e8c"
        },
        "downloads": -1,
        "filename": "binary-trie-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4114f0dba46e7930cd78a870d03c04a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8224,
        "upload_time": "2022-06-08T15:37:33",
        "upload_time_iso_8601": "2022-06-08T15:37:33.708546Z",
        "url": "https://files.pythonhosted.org/packages/df/69/d36c63df43c4ebac635a8ec1815952d17cde836063e9eea1fd2d1d5e481b/binary-trie-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c8e48fd9e6388d33d4df7dccb04f57b0f2031e37289152fa4de5e217066ef65",
          "md5": "91713599eb56e2c75c5bac09fa00a2ea",
          "sha256": "47a370fd1568f45e0028566677f91dc6d02dec1ee2ebbbf71d178c4b9d1aff5b"
        },
        "downloads": -1,
        "filename": "binary_trie-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91713599eb56e2c75c5bac09fa00a2ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8996,
        "upload_time": "2022-06-10T12:28:22",
        "upload_time_iso_8601": "2022-06-10T12:28:22.314310Z",
        "url": "https://files.pythonhosted.org/packages/4c/8e/48fd9e6388d33d4df7dccb04f57b0f2031e37289152fa4de5e217066ef65/binary_trie-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d81e67705bb820f666efe4576e4fb1874fd19af5508744199bffb5288ea31432",
          "md5": "a7830a8f21701c0b5879bd8db9bb34a1",
          "sha256": "c0f0ec549fc4604410c3b14275de273ca7ef6bf94c782da62764b07005337f23"
        },
        "downloads": -1,
        "filename": "binary-trie-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a7830a8f21701c0b5879bd8db9bb34a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8296,
        "upload_time": "2022-06-10T12:28:24",
        "upload_time_iso_8601": "2022-06-10T12:28:24.699672Z",
        "url": "https://files.pythonhosted.org/packages/d8/1e/67705bb820f666efe4576e4fb1874fd19af5508744199bffb5288ea31432/binary-trie-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f4d28dd1eaa644614cdddec297ff3c1e3f31a48af9e760e5cc96fee00d4d654",
          "md5": "40c630022549260ba02e32228f8e5228",
          "sha256": "e1e69fcfde8061ef3f56308efcce4b87289a08c2410b843e5cdb58e2f508252c"
        },
        "downloads": -1,
        "filename": "binary_trie-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40c630022549260ba02e32228f8e5228",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9009,
        "upload_time": "2022-06-10T15:27:19",
        "upload_time_iso_8601": "2022-06-10T15:27:19.643136Z",
        "url": "https://files.pythonhosted.org/packages/5f/4d/28dd1eaa644614cdddec297ff3c1e3f31a48af9e760e5cc96fee00d4d654/binary_trie-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db2266f7e49128dda74e9beed21fb2e92ba331d7e2c57bb84b4064ef0c78dfda",
          "md5": "a8dddb93498a530ee9dbdb0369b61a41",
          "sha256": "f7b5b476a97c6f127bfaea8afc7fbabfa72f399770c81500021bb221eb85a508"
        },
        "downloads": -1,
        "filename": "binary-trie-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a8dddb93498a530ee9dbdb0369b61a41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8310,
        "upload_time": "2022-06-10T15:27:21",
        "upload_time_iso_8601": "2022-06-10T15:27:21.114119Z",
        "url": "https://files.pythonhosted.org/packages/db/22/66f7e49128dda74e9beed21fb2e92ba331d7e2c57bb84b4064ef0c78dfda/binary-trie-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4392a5cdc06908beffdbfd414576ab75848ba5e6d9ffa99611c76c546eacd0d4",
          "md5": "b4af59b249a906b4a651b0266f2b50e4",
          "sha256": "8a1b4a1a9f74ac368ac6509132f7a0d52b0ea6405e79e8e63565e059e3f2ad98"
        },
        "downloads": -1,
        "filename": "binary_trie-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4af59b249a906b4a651b0266f2b50e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9986,
        "upload_time": "2022-07-22T08:45:37",
        "upload_time_iso_8601": "2022-07-22T08:45:37.091488Z",
        "url": "https://files.pythonhosted.org/packages/43/92/a5cdc06908beffdbfd414576ab75848ba5e6d9ffa99611c76c546eacd0d4/binary_trie-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0800266cae39bcc1499eca08073fc70deeeffcd576f352b34555c50b2f9535e3",
          "md5": "528fd2ebbe80defe63ae79724e6d1dfa",
          "sha256": "fa28fbb5bb90895ea9d50838662a05619b6b104e7f0dd8c963cbde313502fd30"
        },
        "downloads": -1,
        "filename": "binary-trie-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "528fd2ebbe80defe63ae79724e6d1dfa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9437,
        "upload_time": "2022-07-22T08:45:38",
        "upload_time_iso_8601": "2022-07-22T08:45:38.577457Z",
        "url": "https://files.pythonhosted.org/packages/08/00/266cae39bcc1499eca08073fc70deeeffcd576f352b34555c50b2f9535e3/binary-trie-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0b2d27e4bc49abd1514d0d3a1dbebc9e6d024b04c2bf4fea59ccb14dd1f393f",
          "md5": "e6250f2fa005f08e8f23c0aab0a06f02",
          "sha256": "16e76645a81ef451188f4327cf569045e000e21c3d519aabe8c7a36324f857e0"
        },
        "downloads": -1,
        "filename": "binary_trie-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6250f2fa005f08e8f23c0aab0a06f02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10202,
        "upload_time": "2022-11-21T09:34:07",
        "upload_time_iso_8601": "2022-11-21T09:34:07.640214Z",
        "url": "https://files.pythonhosted.org/packages/c0/b2/d27e4bc49abd1514d0d3a1dbebc9e6d024b04c2bf4fea59ccb14dd1f393f/binary_trie-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "718fa29fc75002770407bb5afd7ee1ce62da4af0256a3ab3b49dfa037609cec5",
          "md5": "04e679ef36b130d3c8c6b03064d78923",
          "sha256": "e3677451fb3b6c82bbba707252872d5be84ec4bac1c27ef62f73e7f7c3007394"
        },
        "downloads": -1,
        "filename": "binary-trie-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "04e679ef36b130d3c8c6b03064d78923",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9657,
        "upload_time": "2022-11-21T09:34:09",
        "upload_time_iso_8601": "2022-11-21T09:34:09.665563Z",
        "url": "https://files.pythonhosted.org/packages/71/8f/a29fc75002770407bb5afd7ee1ce62da4af0256a3ab3b49dfa037609cec5/binary-trie-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e3ba74c2cada906083edc74c355e9dcb65c2b1c81b6fa7eefff70cfc1d9e4f0",
          "md5": "a048c42cbbf5dcc4959f303d6f54f484",
          "sha256": "38d7857b1b18372221a3595f01add66d3623ad7e0142fc3a9661c6f77e8ddf9f"
        },
        "downloads": -1,
        "filename": "binary_trie-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a048c42cbbf5dcc4959f303d6f54f484",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11125,
        "upload_time": "2023-03-01T16:12:36",
        "upload_time_iso_8601": "2023-03-01T16:12:36.051860Z",
        "url": "https://files.pythonhosted.org/packages/4e/3b/a74c2cada906083edc74c355e9dcb65c2b1c81b6fa7eefff70cfc1d9e4f0/binary_trie-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2def4e881c6d241e8af5d5986c2004b0dfab39c3000f8d34726898870e3a589f",
          "md5": "5a7d5127bd88bbb4840dac669a345ae4",
          "sha256": "87849d7b9dc515ad3116eff5c9ab61e23beefb0b09a8080794902531b58d9e32"
        },
        "downloads": -1,
        "filename": "binary-trie-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5a7d5127bd88bbb4840dac669a345ae4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12633,
        "upload_time": "2023-03-01T16:12:37",
        "upload_time_iso_8601": "2023-03-01T16:12:37.964910Z",
        "url": "https://files.pythonhosted.org/packages/2d/ef/4e881c6d241e8af5d5986c2004b0dfab39c3000f8d34726898870e3a589f/binary-trie-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ae75fc1d5f540a2406b47ee319ff5ccf79b88882099ea635fa90f17fd615807",
          "md5": "4765df013934e88ea70fe5355ea94701",
          "sha256": "ab1433f78c6752a0128cd6f0799de2035a75a3befda0c1683cdd7d969fe2a2da"
        },
        "downloads": -1,
        "filename": "binary_trie-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4765df013934e88ea70fe5355ea94701",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11106,
        "upload_time": "2023-03-06T08:10:01",
        "upload_time_iso_8601": "2023-03-06T08:10:01.474436Z",
        "url": "https://files.pythonhosted.org/packages/5a/e7/5fc1d5f540a2406b47ee319ff5ccf79b88882099ea635fa90f17fd615807/binary_trie-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73164071c7d9eec787ec8145f7d4ab578f3b427e61771ec3ce9890357e4fe1d5",
          "md5": "ba8456fd70506295fd1debf690372571",
          "sha256": "ea94663dfbf381cd51b7e3c997b6bf1346860006ecfd0c71e5dd562a8368e8ed"
        },
        "downloads": -1,
        "filename": "binary-trie-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba8456fd70506295fd1debf690372571",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12602,
        "upload_time": "2023-03-06T08:10:02",
        "upload_time_iso_8601": "2023-03-06T08:10:02.875772Z",
        "url": "https://files.pythonhosted.org/packages/73/16/4071c7d9eec787ec8145f7d4ab578f3b427e61771ec3ce9890357e4fe1d5/binary-trie-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94dee7fda97c71360619b51b2ab816bcc91f3b0db34f6ba5541dea0e61ebd705",
          "md5": "f6961eaa9eedb7d0df934c38af24297b",
          "sha256": "d830c70768df90f8f736cccb0b639f3aa33ee9ed3c978c1d1b2d650509c2c339"
        },
        "downloads": -1,
        "filename": "binary_trie-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6961eaa9eedb7d0df934c38af24297b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11120,
        "upload_time": "2023-03-06T08:14:00",
        "upload_time_iso_8601": "2023-03-06T08:14:00.402898Z",
        "url": "https://files.pythonhosted.org/packages/94/de/e7fda97c71360619b51b2ab816bcc91f3b0db34f6ba5541dea0e61ebd705/binary_trie-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edac19d933c0d7a80f36dca9685330746c122870ffce28fae6f087488d37a4bb",
          "md5": "63e27f18052d743db394131e73849733",
          "sha256": "d3866c58bf111a240b0cd7c1bdc69bd3d03b0238010af3c56e3400ae274f803a"
        },
        "downloads": -1,
        "filename": "binary-trie-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "63e27f18052d743db394131e73849733",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12613,
        "upload_time": "2023-03-06T08:14:02",
        "upload_time_iso_8601": "2023-03-06T08:14:02.315789Z",
        "url": "https://files.pythonhosted.org/packages/ed/ac/19d933c0d7a80f36dca9685330746c122870ffce28fae6f087488d37a4bb/binary-trie-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94dee7fda97c71360619b51b2ab816bcc91f3b0db34f6ba5541dea0e61ebd705",
        "md5": "f6961eaa9eedb7d0df934c38af24297b",
        "sha256": "d830c70768df90f8f736cccb0b639f3aa33ee9ed3c978c1d1b2d650509c2c339"
      },
      "downloads": -1,
      "filename": "binary_trie-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f6961eaa9eedb7d0df934c38af24297b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11120,
      "upload_time": "2023-03-06T08:14:00",
      "upload_time_iso_8601": "2023-03-06T08:14:00.402898Z",
      "url": "https://files.pythonhosted.org/packages/94/de/e7fda97c71360619b51b2ab816bcc91f3b0db34f6ba5541dea0e61ebd705/binary_trie-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "edac19d933c0d7a80f36dca9685330746c122870ffce28fae6f087488d37a4bb",
        "md5": "63e27f18052d743db394131e73849733",
        "sha256": "d3866c58bf111a240b0cd7c1bdc69bd3d03b0238010af3c56e3400ae274f803a"
      },
      "downloads": -1,
      "filename": "binary-trie-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "63e27f18052d743db394131e73849733",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12613,
      "upload_time": "2023-03-06T08:14:02",
      "upload_time_iso_8601": "2023-03-06T08:14:02.315789Z",
      "url": "https://files.pythonhosted.org/packages/ed/ac/19d933c0d7a80f36dca9685330746c122870ffce28fae6f087488d37a4bb/binary-trie-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}