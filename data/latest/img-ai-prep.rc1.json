{
  "info": {
    "author": "ikmckenz",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# img_ai_prep\nMore intelligently crop photos for ingestion to ML models. \nSupports two major workflows that will be useful to produce higher quality images:\n\n### resize_center_crop\n1. Resize the image with the shortest side matching the desired end size\n2. Crop only the longer side to achieve final square image, preserving maximum content towards the center\n\n### face_center_crop\n1. Resize the image with the shortest side matching the desired end size\n2. Crop towards detected faces in the image, preserving maximum human content\n\nIn addition to these enhanced cropping modes, the code also supports cropping towards faces without resizing, \ncenter cropping without resizing, \nand exposes the underlying `crop` and `resize` functions for use in your own workflows.\n\nThere is also support for easily passing custom models for face detection, and passing custom parameters to the models. \nPassing the model by argument also improves performance if you are working in a loop, \nas it does not need to read the model from disk every time if passed by argument.\n\n## Usage\n| Original Image                                                                           | noresize_center_crop                                               | resize_center_crop                                                         | face_center_crop                                                                     | noresize_face_center                                                   |\n|------------------------------------------------------------------------------------------|--------------------------------------------------------------------|----------------------------------------------------------------------------|--------------------------------------------------------------------------------------|------------------------------------------------------------------------|\n| ![ original](/examples/example_photos/original/hugo_leonardo_de_souza_lopez_pixabay.jpg) | ![ center crop](/examples/example_photos/processed/naive_crop.jpg) | ![ resize crop](/examples/example_photos/processed/resize_center_crop.jpg) | ![ resize face crop](/examples/example_photos/processed/resize_face_center_crop.jpg) | ![ face crop](/examples/example_photos/processed/face_center_crop.jpg) |\n\nSimply install with pip and get to processing your images!\n```bash\npip install img_ai_prep\n```\n\n```python\nfrom PIL import Image\n\nfrom img_ai_prep import img_ai_prep\n\nim = Image.open(\"input.jpg\")\nnewimg = img_ai_prep(im,\n                     final_size=1024,\n                     crop_mode=\"resize_center_crop\")\nprint(newimg.size)\nnewimg.save(\"output.jpg\")\n```\n\nAdvanced example script passing a custom model and parameters:\n```python\nimport cv2\nfrom PIL import Image\n\nfrom img_ai_prep import img_ai_prep\n\nif __name__ == \"__main__\":\n    im = Image.open(\"my_img.jpg\")\n\n    model = cv2.CascadeClassifier(cv2.data.haarcascades +\n                                  \"haarcascade_frontalface_alt.xml\")\n    newimg = img_ai_prep(im,\n                         final_size=1024,\n                         crop_mode=\"face_center_crop\",\n                         model=model,\n                         min_neighbors=50,\n                         min_size=(100,100))\n    print(newimg.size)\n    newimg.save(\"my_output.jpg\")\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ikmckenz/img_ai_prep",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "img-ai-prep",
    "package_url": "https://pypi.org/project/img-ai-prep/",
    "platform": null,
    "project_url": "https://pypi.org/project/img-ai-prep/",
    "project_urls": {
      "Homepage": "https://github.com/ikmckenz/img_ai_prep"
    },
    "release_url": "https://pypi.org/project/img-ai-prep/0.0.1/",
    "requires_dist": [
      "Pillow (>=9.3.0)",
      "numpy (>=1.23.4)",
      "opencv-python (>=4.6.0.66)"
    ],
    "requires_python": "",
    "summary": "Prepare images for AI model ingestion",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15660565,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed10d1a1d42987a33976ed4f64c6aecdfe04e5b3064d38a824e3203ace380247",
          "md5": "afb68c25554e3c238977c1ee8f046478",
          "sha256": "e16bb42d6157e017c12c09f7c5e8136851927b1c883722f3d639463384f721bb"
        },
        "downloads": -1,
        "filename": "img_ai_prep-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afb68c25554e3c238977c1ee8f046478",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5101,
        "upload_time": "2022-11-04T22:18:18",
        "upload_time_iso_8601": "2022-11-04T22:18:18.468526Z",
        "url": "https://files.pythonhosted.org/packages/ed/10/d1a1d42987a33976ed4f64c6aecdfe04e5b3064d38a824e3203ace380247/img_ai_prep-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1cb2441fb8c1e3df9b3240f1758f6142b5a47845d1ab568bd3e9edd36e266db",
          "md5": "b05c47b77a1451ddb33bfccac622b3cd",
          "sha256": "d3f5e9748e2df04120bacc2c584cc0ccbd8a00597d54cefdb5a58e0ee0152e6f"
        },
        "downloads": -1,
        "filename": "img_ai_prep-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b05c47b77a1451ddb33bfccac622b3cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4112,
        "upload_time": "2022-11-04T22:18:19",
        "upload_time_iso_8601": "2022-11-04T22:18:19.641266Z",
        "url": "https://files.pythonhosted.org/packages/b1/cb/2441fb8c1e3df9b3240f1758f6142b5a47845d1ab568bd3e9edd36e266db/img_ai_prep-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed10d1a1d42987a33976ed4f64c6aecdfe04e5b3064d38a824e3203ace380247",
        "md5": "afb68c25554e3c238977c1ee8f046478",
        "sha256": "e16bb42d6157e017c12c09f7c5e8136851927b1c883722f3d639463384f721bb"
      },
      "downloads": -1,
      "filename": "img_ai_prep-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "afb68c25554e3c238977c1ee8f046478",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5101,
      "upload_time": "2022-11-04T22:18:18",
      "upload_time_iso_8601": "2022-11-04T22:18:18.468526Z",
      "url": "https://files.pythonhosted.org/packages/ed/10/d1a1d42987a33976ed4f64c6aecdfe04e5b3064d38a824e3203ace380247/img_ai_prep-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b1cb2441fb8c1e3df9b3240f1758f6142b5a47845d1ab568bd3e9edd36e266db",
        "md5": "b05c47b77a1451ddb33bfccac622b3cd",
        "sha256": "d3f5e9748e2df04120bacc2c584cc0ccbd8a00597d54cefdb5a58e0ee0152e6f"
      },
      "downloads": -1,
      "filename": "img_ai_prep-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b05c47b77a1451ddb33bfccac622b3cd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4112,
      "upload_time": "2022-11-04T22:18:19",
      "upload_time_iso_8601": "2022-11-04T22:18:19.641266Z",
      "url": "https://files.pythonhosted.org/packages/b1/cb/2441fb8c1e3df9b3240f1758f6142b5a47845d1ab568bd3e9edd36e266db/img_ai_prep-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}