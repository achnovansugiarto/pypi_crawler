{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Free for non-commercial use",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Satisfactory Data Analysis\n\n\nThis repository is a Jupyter Notebook managed repository. It contains information for \nplanning within the game Satisfactory. It has a related project, which has been detailed below.\n\n## Running\n\n```shell\ngit clone https://github.com/supratikchatterjee16/satsifactory-notebook.git satisfactory-notebook\ncd satisfactory-notebook\njupyter-lab\n```\n\n## Project\n\n### Statement\n\nUsing the information about the game available to us, create a program that is able to create symmetrical architectures,\npacking the machines within itself.\n\nBy doing so, we can design efficient manufacturing plants, with low regards for the manufacturing requirements, and pay more attention to architecture within the game, to achieve beautiful designs such as the ones we see below :\n\n1. https://www.youtube.com/watch?v=QQeO1RyHrsA\n2. https://www.youtube.com/watch?v=djcqGe02tdc&t=40s\n3. https://www.youtube.com/watch?v=98ujAFCWGoQ\n\n### Design\n\nWe do not need to work on feature extraction, as we intend to solve a problem statement, rather than make a 'product' or 'service'.\n\nThe functional design is as such : \n\n![Functional Design](./concepts/functional_overview.png)\n\n#### Data\n\nThe data is sourced and stored as raw non-normalized data first.\nIt takes the form of : \n\n![ERD - Transactional](./concepts/raw_data.png)\n\nAfter normalization, it takes the form of : \n\n![ERD - Normalized](./concepts/normalized_data.png)\n\n#### \n\n\n## Parts of the project\n\n### Completed\n\n1. Gathering data regarding mines and resources on the map\n2. Normalization of the data map data\n3. Visualization of nodes on map\n4. K-Means clustering for logistical evaluation on single node\n5. Extension of K-Means clustering for multiple resources\n6. Recipe data gathering\n7. Data normalized from satisfactory-calculator(outdated)\n8. Normalized data downloaded from wiki(updated and current)\n9. Recipe extraction for any item\n10. Getting building count and energy for the recipe tree\n\n### Remaining\n\n1. By-product handling\n2. Energy cost for generating the energy itself.\n3. Packing for industry\n4. Logistical planning\n5. Super structure planning\n\n## Credits\n\nThe Satisfactory team and their community manager\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "satisfactory,game,analysis,jupyter,supply-chain",
    "license": "DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE Version 2, December 2004  Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>  Everyone is permitted to copy and distribute verbatim or modified copies of this license document, and changing it is allowed as long as the name is changed.  DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION  0. You just DO WHAT THE FUCK YOU WANT TO. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "satisfactory-planner",
    "package_url": "https://pypi.org/project/satisfactory-planner/",
    "platform": null,
    "project_url": "https://pypi.org/project/satisfactory-planner/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/satisfactory-planner/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Analyze data, find all recipes and more in the game of Satisfactory",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13820578,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01fa9ba655ccaf42078ad6f11251eaaca1d2bb83b5296509a66247408a71fae6",
          "md5": "91e3efbaf0481331a2b2a59db626cc67",
          "sha256": "1d8e5841fb9b9f3aac490e863d9443b5cc260e1d6e85060248f1715ffa4a4998"
        },
        "downloads": -1,
        "filename": "satisfactory_planner-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "91e3efbaf0481331a2b2a59db626cc67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33914,
        "upload_time": "2022-05-15T09:01:36",
        "upload_time_iso_8601": "2022-05-15T09:01:36.370349Z",
        "url": "https://files.pythonhosted.org/packages/01/fa/9ba655ccaf42078ad6f11251eaaca1d2bb83b5296509a66247408a71fae6/satisfactory_planner-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "01fa9ba655ccaf42078ad6f11251eaaca1d2bb83b5296509a66247408a71fae6",
        "md5": "91e3efbaf0481331a2b2a59db626cc67",
        "sha256": "1d8e5841fb9b9f3aac490e863d9443b5cc260e1d6e85060248f1715ffa4a4998"
      },
      "downloads": -1,
      "filename": "satisfactory_planner-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "91e3efbaf0481331a2b2a59db626cc67",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 33914,
      "upload_time": "2022-05-15T09:01:36",
      "upload_time_iso_8601": "2022-05-15T09:01:36.370349Z",
      "url": "https://files.pythonhosted.org/packages/01/fa/9ba655ccaf42078ad6f11251eaaca1d2bb83b5296509a66247408a71fae6/satisfactory_planner-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}