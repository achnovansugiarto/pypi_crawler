{
  "info": {
    "author": "",
    "author_email": "Saber Hayati <SaberHayati@outlook.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Database"
    ],
    "description": "# ðŸ’¡ **About**\n\nThis is a dynamic connection pool for [mysqlclient](https://github.com/PyMySQL/mysqlclient) connector and size of it grows as it requires. Extra connections will be terminated automatically if they're no longer needed.\n\nThe connection pool won't check the connectivity state of the connections before passing them to the user because in any time is still possible for the connection to drop in middle of the query. The user itself should watch for the disconnections.\n\nThe connection pool is thread-safe and can be shared on multithreaded context as long as the indivisual connection object not shared between the threads. However individual pool instances are required for different processes.\n\n# ðŸ”Œ **Installation**\n\n```bash\npip install mysqlclient-pool\n```\n\n# ðŸ“‹ **How to Use**\n\nInstantiating the connection pool. The pool also can be instantiated as a context manager using `with` statement.\n\n```python\nfrom mysqlclient_pool import ConnectionPool\nfrom MySQLdb._exceptions import OperationalError, ProgrammingError\n\n\ntry:\n    pool = ConnectionPool(\n        {\n            \"unix_socket\": \"/var/run/mysqld/mysqld.sock\",\n            \"host\": \"localhost\",\n            \"port\": 3306,\n            \"user\": \"root\",\n            \"password\": \"...\",\n            \"database\": \"mysql\"\n        },\n        size=20,\n        timeout=10\n    )\nexcept TimeoutError:\n    # Couldn't connect to the database server.\n    # MySQL server service can be restarted in here if it's down.\n    pass\n```\n\nAcquiring a `cursor` object from the pool. `fetch()` method commits or rollbacks the changes by default.\n\n```python\n\ntry:\n    with pool.fetch() as cursor:\n        cursor.execute(\"SELECT DATABASE()\")\n        print(cursor.fetchone())\nexcept (OperationalError, ProgrammingError):\n    # Handling MySQL errors\n    pass\nexcept pool.OverflowError:\n    # The pool can't provide a connection anymore\n    # because maximum permitted number of simultaneous\n    # connections is exceeded.\n    # `max_connections` variable of MySQL server configuration\n    # can be tweaked to change the behaviour.\n    pass\nexcept pool.DrainedError:\n    # The pool can't provide a connection anymore\n    # because it can't access the database server.\n    pass\n```\n\n`connection` object also can be accessed if needed. But any changes to connection should be reverted when returning the connection back to the pool.\n\n```python\nwith pool.fetch() as cursor:\n    try:\n      cursor.connection.autocommit(True)\n      cursor.execute(\"INSERT INTO ...\")\n      cursor.execute(\"UPDATE ...\")\n      cursor.execute(\"DELETE FROM ...\")\n    finally:\n      cursor.connection.autocommit(False)\n```\n\nClosing the pool when it's not needed anymore.\n\n```python\npool.close()\n```\n\n# ðŸ”§ **API**\n\n- _class_ **`mysqlclient_pool.ConnectionPool`**\n\n  - _method_ **`__init__(config: dict, size: int = 10, timeout: int = 5, fillup: bool = True) -> None`**\n\n    - _parameter_ **`config`**:  \n      The keyword paramaters for creating the connection object.\n\n    - _parameter_ **`size`**:  \n      The minimum number of the connections in the pool.\n\n    - _parameter_ **`timeout`**:  \n      The time in seconds to wait for initiating the connection pool if the database server is unavailable.\n\n    - _parameter_ **`fillup`**:  \n      If `True` provided, fills up the connection pool up to the `size` parameter. Otherwise the connection pool is initially empty.\n\n    - _exception_ **`TimeoutError`**:  \n      When unable to fill up the connection pool due to inability to connect to the database server.\n\n  - _method_ **`close() -> None`**  \n    Closes the connection pool and disconnects all the connections.\n\n  - _method_ **`fetch(auto_manage: bool = True, cursor_type: MySQLdb.cursors.Cursor | MySQLdb.cursors.DictCursor = MySQLdb.cursors.Cursor) -> collections.abc.Generator[MySQLdb.cursors.Cursor | MySQLdb.cursors.DictCursor, None, None]`**  \n    Returns a cursor object from a dedicated connection.\n\n    This is a context manager which pulls a connection from the pool and generates a cursor object from it and returns it to the user and at the end, if the connection hasn't disconnected in the way, closes the cursor and returns the connection back to the pool.\n\n    - _parameter_ **`auto_manage`**:  \n      If `True` provided, if no unhandled exception raised in the enclosed block, commits the current transaction upon completion of the block or rollbacks the transaction on an unhandled exception.\n\n    - _parameter_ **`cursor_type`**:  \n      Type of the cursor.\n\n    - _exception_ **`RuntimeError`**:  \n      When called after closing the connection pool.\n\n    - _exception_ **`ConnectionPool.DrainedError`**:  \n      When there's no connection available in the pool and unable to initiate new connections due to inability to connect to the database server.\n\n    - _exception_ **`ConnectionPool.OverflowError`**:  \n      When unable to initiate new connections due to maximum permitted number of simultaneous connections is exceeded.\n\n  - _property_ **`capacity: int`**  \n    The amount of idle connections present in the connection pool.\n\n  - _property_ **`closed: bool`**  \n    The state of the connection pool.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "mysqlclient,MySQLdb,database,connection pool",
    "license": "MIT License Copyright (c) 2022 Soberia Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mysqlclient-pool",
    "package_url": "https://pypi.org/project/mysqlclient-pool/",
    "platform": null,
    "project_url": "https://pypi.org/project/mysqlclient-pool/",
    "project_urls": {
      "homepage": "https://github.com/Soberia/mysqlclient-pool"
    },
    "release_url": "https://pypi.org/project/mysqlclient-pool/0.1.1/",
    "requires_dist": [
      "mysqlclient",
      "build ; extra == 'dev'",
      "black ; extra == 'dev'"
    ],
    "requires_python": ">=3.9",
    "summary": "MySQL database dynamic connection pool for 'mysqlclient' connector",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14743682,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17d93672a7d98c21910c4da78b8c9dd990798fb779539a2b86a6c009b9be3ab1",
          "md5": "7f8c393c8bc80ad7e5098fc86a68fb8a",
          "sha256": "e21e52be304344eb941e70f0015875d0c40ed89468e4acb402dc3c3ae23655ce"
        },
        "downloads": -1,
        "filename": "mysqlclient_pool-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f8c393c8bc80ad7e5098fc86a68fb8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7930,
        "upload_time": "2022-08-10T03:03:56",
        "upload_time_iso_8601": "2022-08-10T03:03:56.477838Z",
        "url": "https://files.pythonhosted.org/packages/17/d9/3672a7d98c21910c4da78b8c9dd990798fb779539a2b86a6c009b9be3ab1/mysqlclient_pool-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3439c0f4aad20b8d927c5bd1702815733edbdfa503632daed06711f5eb75229",
          "md5": "0ccdabb9601bcd3d532b22959e28fdd8",
          "sha256": "fdff7e95c3c3c8efd356f2d5071f343ea424a09a5fb3cc5e6314d923dfcbe01c"
        },
        "downloads": -1,
        "filename": "mysqlclient-pool-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ccdabb9601bcd3d532b22959e28fdd8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 6367,
        "upload_time": "2022-08-10T03:03:59",
        "upload_time_iso_8601": "2022-08-10T03:03:59.140341Z",
        "url": "https://files.pythonhosted.org/packages/f3/43/9c0f4aad20b8d927c5bd1702815733edbdfa503632daed06711f5eb75229/mysqlclient-pool-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce88449de46b6a2ae6fed4e5a6663c33c8ae02f6eede5c5c94e89597c850ae6d",
          "md5": "8bd07a3239918084521469f0d48b383a",
          "sha256": "850fb8793b13fda6424106862dc272b82dd8807db2a721d47af697b42bdaf7e8"
        },
        "downloads": -1,
        "filename": "mysqlclient_pool-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8bd07a3239918084521469f0d48b383a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 8130,
        "upload_time": "2022-08-12T19:50:50",
        "upload_time_iso_8601": "2022-08-12T19:50:50.775266Z",
        "url": "https://files.pythonhosted.org/packages/ce/88/449de46b6a2ae6fed4e5a6663c33c8ae02f6eede5c5c94e89597c850ae6d/mysqlclient_pool-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d1c5801268d02ce10d8a60e721f9ceae255a10e3675c7ffcc405897650186dd",
          "md5": "988c257b4ed430b81837fdbba0fb379e",
          "sha256": "51492cbbf29e4cce1cb3927880d9038ff90efe13121222530694ccac9775617b"
        },
        "downloads": -1,
        "filename": "mysqlclient-pool-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "988c257b4ed430b81837fdbba0fb379e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 6520,
        "upload_time": "2022-08-12T19:50:52",
        "upload_time_iso_8601": "2022-08-12T19:50:52.338879Z",
        "url": "https://files.pythonhosted.org/packages/7d/1c/5801268d02ce10d8a60e721f9ceae255a10e3675c7ffcc405897650186dd/mysqlclient-pool-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce88449de46b6a2ae6fed4e5a6663c33c8ae02f6eede5c5c94e89597c850ae6d",
        "md5": "8bd07a3239918084521469f0d48b383a",
        "sha256": "850fb8793b13fda6424106862dc272b82dd8807db2a721d47af697b42bdaf7e8"
      },
      "downloads": -1,
      "filename": "mysqlclient_pool-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8bd07a3239918084521469f0d48b383a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 8130,
      "upload_time": "2022-08-12T19:50:50",
      "upload_time_iso_8601": "2022-08-12T19:50:50.775266Z",
      "url": "https://files.pythonhosted.org/packages/ce/88/449de46b6a2ae6fed4e5a6663c33c8ae02f6eede5c5c94e89597c850ae6d/mysqlclient_pool-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d1c5801268d02ce10d8a60e721f9ceae255a10e3675c7ffcc405897650186dd",
        "md5": "988c257b4ed430b81837fdbba0fb379e",
        "sha256": "51492cbbf29e4cce1cb3927880d9038ff90efe13121222530694ccac9775617b"
      },
      "downloads": -1,
      "filename": "mysqlclient-pool-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "988c257b4ed430b81837fdbba0fb379e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 6520,
      "upload_time": "2022-08-12T19:50:52",
      "upload_time_iso_8601": "2022-08-12T19:50:52.338879Z",
      "url": "https://files.pythonhosted.org/packages/7d/1c/5801268d02ce10d8a60e721f9ceae255a10e3675c7ffcc405897650186dd/mysqlclient-pool-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}