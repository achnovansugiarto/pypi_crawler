{
  "info": {
    "author": "Matthew Fan",
    "author_email": "mfan@umd.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# CLI-cake\n\nEasily pass CLI args into functions. Turn your functions into scripts.\n\nCLI-cake takes this:\n```python\nimport sys\ndef echo(*args, capitalize = False):\n    if capitalize:\n        args = [a.upper() for a in args]\n    print(' '.join(args))\n\ncaps = False\nfor arg in args:\n    if arg == '--capitalize':\n        caps = True\necho(sys.argv[1:], caps)\n```\nand turns it into this\n```python\nimport cake\n\n@cake.runnable\ndef echo(*args, capitalize = False):\n    if capitalize:\n        args = [a.upper() for a in args]\n    print(' '.join(args))\n\necho.runCLI()\n```\n```bash\n$ python echo.py hello world --capitalize\nHELLO WORLD\n```\n\n## Why\n\nI realized that when I'm building quick, simple scripts for internal use, I resort to one of two approaches:\n\n1) I just hardcode the values into my script, and just change the values each time I use it\n2) I build out some type of custom CLI or gui interface for the script\n\nBoth of these approaches have downsides- with the first approach, you end up spending more time between runs editing code, and end up with the bad practice of directly editing your source code for non-permanent changes. With the second approach, you end up spending extra time up front writing code, and it can make concise scripts more messy by adding in this extra code.\n\nclicake is a bunch of convenience methods that solve these problems, making it super quick and easy to transform your functions into fully-featured CLI-callable scripts.\n## Installing\n\n## Getting Started\nclicake is really easy to use! Try creating the file 'echo.py' and add the following code:\n```python\nimport cake\n\n@cake.runnable\ndef echo(*args, capitalize = False):\n    if capitalize:\n        args = [a.upper() for a in args]\n    print(' '.join(args))\n\nif __name__ == '__main__':\n    echo()\n```\nOR\n```python\nimport cake\n\ndef echo(*args, capitalize = False):\n    if capitalize:\n        args = [a.upper() for a in args]\n    print(' '.join(args))\n\nif __name__ == '__main__':\n    cake.run(echo)\n```\nAnd in your terminal\n```bash\n$ python echo.py hello world --capitalize\nHELLO WORLD\n```\n\n## Documentation\n\n### Decorators\n ```python\n def runnable(callback, args, print_output):\n     pass\n ```\n\n### Methods\n ```python\n def run(callback):\n     pass\n ```\n### Objects\n```python\nclass Cake():\n    def runnable(callback, args, print_output):\n        pass\n    def run(callback):\n        pass\n````\n## Examples\nA simple example:\n```python\nimport cake\n\n@cake.runnable\ndef echo(*args, capitalize = False):\n    if capitalize:\n        args = [a.upper() for a in args]\n    print(' '.join(args))\n\necho.runCLI()\n```\n```bash\n$ python echo.py hello world --capitalize\nHELLO WORLD\n```\n\n### Multiple Methods\nUsing the Cake() object allows you to build runners that can handle multiple functions from the command line. The 'first' argument the script recieves (argv[1]) is interpreted as the name of the function, which can be set explicitly through the `name` parameter, or defaults to the method name.\n\nTake the following code as `example.py`:\n```python\nimport cake\n\ncli = cake.Cake()\n\n@cli.runnable\ndef echo(*args):\n    return (' '.join([str(a) for a in args]))\n\n@cli.runnable(name=\"add\")\ndef sum(*args):\n    _sum = 0\n    for arg in args:\n        _sum += arg\n    return _sum\n\ncli.run()\n```\n```bash\n$ python example.py echo hello world\nhello world\n\n$ python example.py add 1 2 3 4 5\n15\n```\n\nDefining a method as runnable also doesn't modify the `__call__` method for the decorated function, the only change with the wrapped function is it adds a callable `runCLI` attribute to the function that can be used to tell the program to parse the CLI args and execute the function based on those args. This lets us use @runnable decorated functions without having to modify dependent code\n```python\nimport cake\n\ncli = cake.Cake()\n\n@cli.runnable\ndef sum(*args):\n    _sum = 0\n    for arg in args:\n        _sum += arg\n    return _sum\n\n@cli.runnable\ndef doublesum(*args):\n    return sum(*args) * 2 # sum function can be called like normal!\n\ncli.run()\n```\n```bash\n$ python example.py sum 1 2 3 4 5\n15\n\n$ python example.py doublesum 1 2 3 4 5\n30\n```\n## Testing\nFrom root, you can run the tests with\n```bash\npython -m cake.tests\n```\n\n## Build / Deploy\nInstall build dependencies locally:\n```\npip install --user --upgrade twine setuptools wheel\n```\nBuild source and distribution files:\n```\npython setup.py sdist bdist_wheel\n```\nupload to PyPi with Twine:\n```\npython -m twine upload dist/*\n```\nYou'll be prompted to use `__token__` as the username, and you'll need to use an API token from PyPi as the password.\n\n## Planned Features (todo)\n- Add support for specifying explicit types, and code hydration for passing in lambdas\n- Add support for input() based text interfaces in addition to just CLI args? (This is already decently well supported by just running the python interactively and importing the desired functions... will evaluate to see if there's actually a need here)\n- Add option to wrap errors with 'pretty' printed output\n- Add option to specify printed output stream\n- Add more extensive testing / unit tests\n- improved documentation\n ## Advanced Topics\n ### pyinstaller\n I'd recommend using `pyinstaller` if you want to generate standalone executable script builds in addition to cli-cake. Read more on there site [here]().\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mattjfan/cli-cake",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cli-cake",
    "package_url": "https://pypi.org/project/cli-cake/",
    "platform": "",
    "project_url": "https://pypi.org/project/cli-cake/",
    "project_urls": {
      "Homepage": "https://github.com/mattjfan/cli-cake"
    },
    "release_url": "https://pypi.org/project/cli-cake/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Turn your python functions into CLI-friendly scripts.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7283794,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f7883464539cc60def889c94203708bc55aabd1bb1f3c3de7f5dc449fd05d3e",
          "md5": "899942aee691b0ab3e20d4b6b34f2469",
          "sha256": "d908b0749801cf09efb7044019a36725a368e62610f01d604a2b735f5a65b268"
        },
        "downloads": -1,
        "filename": "cli_cake-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "899942aee691b0ab3e20d4b6b34f2469",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4301,
        "upload_time": "2020-05-19T02:22:04",
        "upload_time_iso_8601": "2020-05-19T02:22:04.268199Z",
        "url": "https://files.pythonhosted.org/packages/7f/78/83464539cc60def889c94203708bc55aabd1bb1f3c3de7f5dc449fd05d3e/cli_cake-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57ada54fb76c138e773548c6b4a26fa1d5ce86d71af58f74e5e399cfa74b6432",
          "md5": "1fc881053c90bcd93a7af5ec47023c99",
          "sha256": "c0fe94326a395acce1376f01e4eeb677a055667dc36765d3d5457dc05964ac3b"
        },
        "downloads": -1,
        "filename": "cli-cake-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1fc881053c90bcd93a7af5ec47023c99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3857,
        "upload_time": "2020-05-19T02:22:06",
        "upload_time_iso_8601": "2020-05-19T02:22:06.393865Z",
        "url": "https://files.pythonhosted.org/packages/57/ad/a54fb76c138e773548c6b4a26fa1d5ce86d71af58f74e5e399cfa74b6432/cli-cake-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f477c5099c9653c5724bdf0b75b0d6c5a507c5afa25a81256ce15a0512ac2d9",
          "md5": "d8b5818bb2b06e6ef7073b6a15562c57",
          "sha256": "f3d94bca3a09eeb2310fa3c03f1368c588f3db5ec7ed33b57698c844dee5ee81"
        },
        "downloads": -1,
        "filename": "cli_cake-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d8b5818bb2b06e6ef7073b6a15562c57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4331,
        "upload_time": "2020-05-19T02:42:30",
        "upload_time_iso_8601": "2020-05-19T02:42:30.756900Z",
        "url": "https://files.pythonhosted.org/packages/8f/47/7c5099c9653c5724bdf0b75b0d6c5a507c5afa25a81256ce15a0512ac2d9/cli_cake-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04b7d1c8a85797d00e91cc4dd5e9723aa241b1367502571b8167770e53b0f56f",
          "md5": "1f0346a23ec1a457f3a9c1edb9c1d0bf",
          "sha256": "fbe80e1600d98e430172fe01f2a4d3082acb770882f0955a829d8dc505f55a2d"
        },
        "downloads": -1,
        "filename": "cli-cake-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1f0346a23ec1a457f3a9c1edb9c1d0bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3951,
        "upload_time": "2020-05-19T02:42:31",
        "upload_time_iso_8601": "2020-05-19T02:42:31.939829Z",
        "url": "https://files.pythonhosted.org/packages/04/b7/d1c8a85797d00e91cc4dd5e9723aa241b1367502571b8167770e53b0f56f/cli-cake-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "508f1ca11438a54ef596c0618c77a14d0e066c33acf13ab3dab4b39d7f0cdba6",
          "md5": "b51cebcc8ba3f616f0cd90a6a0f57d1e",
          "sha256": "f85c47a62b11de7fb5e2013b7de3afe269c0d75edee168ca8b300f3308de96d3"
        },
        "downloads": -1,
        "filename": "cli_cake-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b51cebcc8ba3f616f0cd90a6a0f57d1e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5732,
        "upload_time": "2020-05-20T06:28:26",
        "upload_time_iso_8601": "2020-05-20T06:28:26.952439Z",
        "url": "https://files.pythonhosted.org/packages/50/8f/1ca11438a54ef596c0618c77a14d0e066c33acf13ab3dab4b39d7f0cdba6/cli_cake-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0187517a36ea838a5e169b12af11166f1dfddb6db312e1c633c4f0d39e73f7e",
          "md5": "903a4f5592fa1c184b6f910f12a37193",
          "sha256": "3bab9120278a84273d5cbb9c2b06a6aecc6548f626367822e0f3e20ec4bc984a"
        },
        "downloads": -1,
        "filename": "cli-cake-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "903a4f5592fa1c184b6f910f12a37193",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4927,
        "upload_time": "2020-05-20T06:28:27",
        "upload_time_iso_8601": "2020-05-20T06:28:27.948667Z",
        "url": "https://files.pythonhosted.org/packages/c0/18/7517a36ea838a5e169b12af11166f1dfddb6db312e1c633c4f0d39e73f7e/cli-cake-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "508f1ca11438a54ef596c0618c77a14d0e066c33acf13ab3dab4b39d7f0cdba6",
        "md5": "b51cebcc8ba3f616f0cd90a6a0f57d1e",
        "sha256": "f85c47a62b11de7fb5e2013b7de3afe269c0d75edee168ca8b300f3308de96d3"
      },
      "downloads": -1,
      "filename": "cli_cake-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b51cebcc8ba3f616f0cd90a6a0f57d1e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5732,
      "upload_time": "2020-05-20T06:28:26",
      "upload_time_iso_8601": "2020-05-20T06:28:26.952439Z",
      "url": "https://files.pythonhosted.org/packages/50/8f/1ca11438a54ef596c0618c77a14d0e066c33acf13ab3dab4b39d7f0cdba6/cli_cake-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c0187517a36ea838a5e169b12af11166f1dfddb6db312e1c633c4f0d39e73f7e",
        "md5": "903a4f5592fa1c184b6f910f12a37193",
        "sha256": "3bab9120278a84273d5cbb9c2b06a6aecc6548f626367822e0f3e20ec4bc984a"
      },
      "downloads": -1,
      "filename": "cli-cake-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "903a4f5592fa1c184b6f910f12a37193",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4927,
      "upload_time": "2020-05-20T06:28:27",
      "upload_time_iso_8601": "2020-05-20T06:28:27.948667Z",
      "url": "https://files.pythonhosted.org/packages/c0/18/7517a36ea838a5e169b12af11166f1dfddb6db312e1c633c4f0d39e73f7e/cli-cake-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}