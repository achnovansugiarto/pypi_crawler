{
  "info": {
    "author": "Zeph Ng",
    "author_email": "zephngdev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# AdventOfCodeInputReader\r\n\r\n# <p align=\"center\">AdventOfCodeInputReader</p>\r\n\r\n<p align=\"center\">A python package to get the input for Advent Of Code challenges as a list</p>\r\n\r\n## Contents\r\n\r\n  * [Getting started](#getting-started)\r\n  * [Using AdventOfCodeInputReader](#using-adventofcodeinputreader)\r\n  * [Methods](#methods)\r\n    * [get_input()](#get_input)\r\n    * [get_input_by_day()](#get_input_by_day)\r\n    * [get_input_by_year_and_day()](#get_input_by_year_and_day)\r\n      \r\n## Getting Started\r\n\r\n* Installation using pip (Python Package Index):\r\n\r\n```\r\n$ pip install AdventOfCodeInputReader\r\n```\r\n\r\n## Using AdventOfCodeInputReader\r\n\r\n### Import and Initialise\r\n\r\nThe AdventOfCode class (defined in __init__.py) has one mandatory parameter (`session_id`) and two optional parameters (`year` and `day`). To get `session_id`, you need to log into Advent of Code and retreieve the session id from your browser cookies. Your session id is required as the challenge input is different for each user.\r\n\r\n```python\r\nfrom AdventOfCodeInputReader import AdventOfCodeInputReader\r\n\r\n# Initialize with only session_id\r\nreader = AdventOfCodeInputReader(\"your_session_id\")\r\n\r\n# Initialize with session_id and year only\r\nreader = AdventOfCodeInputReader(\"your_session_id\",2021)\r\n\r\n# Initialize with session_id and year and day\r\nreader = AdventOfCodeInputReader(\"your_session_id\",2021,1)\r\n\r\n```\r\n\r\n## Methods\r\n\r\nThe AdventOfCode class has three methods: `get_input()`, `get_input_by_day()`, `get_input_by_year_and_day()`. All three methods will return a list of strings, with each line of the input as an element in the list.\r\n\r\n### get_input()\r\n\r\nThe `get_input(day=None, year=None)` method has two optional parameters, `day` and `year`. If you have specified the values for `day` and `year` at initalization, you can use this method without any arguments. If you have included values for `day` and `year` at initization but included `day` and `year` arguments for `get_input()`, the method will override and use the arguments provided in `get_input()` for this specific run only. It will not update the class value.\r\n\r\n```python\r\n# Using get_input() with year and day specified at initalization\r\nreader = AdventOfCodeInputReader(\"your_session_id\",2021,1)\r\ninput = reader.get_input()\r\n\r\n# Using get_input() with only year specified at initalization\r\nreader = AdventOfCodeInputReader(\"your_session_id\",2021)\r\ninput = reader.get_input(day=1)\r\n\r\n# Using get_input() without year and day specified at initalization\r\nreader = AdventOfCodeInputReader(\"your_session_id\")\r\ninput = reader.get_input(day=1,year=2021)\r\n\r\n```\r\n\r\nThis method returns a list of strings, with each line of the input as an element in the list.\r\n\r\nIf the input from Advent of Code looks like:\r\n```\r\nline 1\r\nline 2\r\nline 3\r\n```\r\nThe method will return:\r\n```\r\n[\"line 1\", \"line 2\", \"line 3\"]\r\n```\r\n\r\n### get_input_by_day()\r\n\r\nThe `get_input_by_day(day)` method requires the `year` to be declared at initialization. If you have included value for `day` at initization but included `day` argument for `get_input_by_day()`, the method will override and use the argument provided in `get_input_by_day()` for this specific run only. It will not update the class value.\r\n\r\n```python\r\nreader = AdventOfCodeInputReader(\"your_session_id\",2021)\r\ninput = reader.get_input_by_day(1)\r\n\r\n```\r\n\r\nThis method returns a list of strings, with each line of the input as an element in the list.\r\n\r\nIf the input from Advent of Code looks like:\r\n```\r\nline 1\r\nline 2\r\nline 3\r\n```\r\nThe method will return:\r\n```\r\n[\"line 1\", \"line 2\", \"line 3\"]\r\n```\r\n\r\n### get_input_by_year_and_day()\r\n\r\nThe `get_input_by_year_and_day(year, day)` method requires the `year` and `day` arguments to be specified when using the method. If you have included value for `year` or `day` at initization, the `year` and `day` arguments provided will be used instead of the values specified at initalization for this specific run only. It will not update the class value.\r\n\r\n```python\r\nreader = AdventOfCodeInputReader(\"your_session_id\")\r\ninput = reader.get_input_by_year_and_day(year=2021,day=1)\r\n\r\n```\r\n\r\nThis method returns a list of strings, with each line of the input as an element in the list.\r\n\r\nIf the input from Advent of Code looks like:\r\n```\r\nline 1\r\nline 2\r\nline 3\r\n```\r\nThe method will return:\r\n```\r\n[\"line 1\", \"line 2\", \"line 3\"]\r\n```\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/zeph1997/AdventOfCodeInputReader/archive/refs/tags/v0.0.3.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zeph1997/AdventOfCodeInputReader",
    "keywords": "reader,advent,of,code,api",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "AdventOfCodeInputReader",
    "package_url": "https://pypi.org/project/AdventOfCodeInputReader/",
    "platform": "",
    "project_url": "https://pypi.org/project/AdventOfCodeInputReader/",
    "project_urls": {
      "Download": "https://github.com/zeph1997/AdventOfCodeInputReader/archive/refs/tags/v0.0.3.tar.gz",
      "Homepage": "https://github.com/zeph1997/AdventOfCodeInputReader"
    },
    "release_url": "https://pypi.org/project/AdventOfCodeInputReader/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Package to retrieve input for Advent Of Code",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12199683,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "044c17311b3da84ce7a4c035b803d589fb8475b148716ffda7fcc5fbeafcc59e",
          "md5": "e431a7eec46510bd0ad0a5f1f4280f42",
          "sha256": "24011d3cd5d0abad9af6b845aff2860b27ad63afa7029e934a286567be171e3b"
        },
        "downloads": -1,
        "filename": "AdventOfCodeInputReader-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e431a7eec46510bd0ad0a5f1f4280f42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1829,
        "upload_time": "2021-12-03T09:41:44",
        "upload_time_iso_8601": "2021-12-03T09:41:44.117362Z",
        "url": "https://files.pythonhosted.org/packages/04/4c/17311b3da84ce7a4c035b803d589fb8475b148716ffda7fcc5fbeafcc59e/AdventOfCodeInputReader-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e4fc75c5d80207e66cfebc6a0debc158d2624a3a5f0a42ca4af2e104e70005a",
          "md5": "e5b59ab9203c7a40d4a82dddfd0f0733",
          "sha256": "a9f19b79e74b6837383c19ed491ecbb991d06119537f94c29e20b0c39eda87a0"
        },
        "downloads": -1,
        "filename": "AdventOfCodeInputReader-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e5b59ab9203c7a40d4a82dddfd0f0733",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4047,
        "upload_time": "2021-12-03T09:59:12",
        "upload_time_iso_8601": "2021-12-03T09:59:12.098464Z",
        "url": "https://files.pythonhosted.org/packages/5e/4f/c75c5d80207e66cfebc6a0debc158d2624a3a5f0a42ca4af2e104e70005a/AdventOfCodeInputReader-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5e4fc75c5d80207e66cfebc6a0debc158d2624a3a5f0a42ca4af2e104e70005a",
        "md5": "e5b59ab9203c7a40d4a82dddfd0f0733",
        "sha256": "a9f19b79e74b6837383c19ed491ecbb991d06119537f94c29e20b0c39eda87a0"
      },
      "downloads": -1,
      "filename": "AdventOfCodeInputReader-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e5b59ab9203c7a40d4a82dddfd0f0733",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4047,
      "upload_time": "2021-12-03T09:59:12",
      "upload_time_iso_8601": "2021-12-03T09:59:12.098464Z",
      "url": "https://files.pythonhosted.org/packages/5e/4f/c75c5d80207e66cfebc6a0debc158d2624a3a5f0a42ca4af2e104e70005a/AdventOfCodeInputReader-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}