{
  "info": {
    "author": "",
    "author_email": "Fareck Allony <fareck.allony.mail@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Pypeliner\n\n`pypeliner` is a simple python framework for building data processing pipelines.\n\nyou can check out the documentation [here](https://simple-pypeliner.readthedocs.io/en/latest/).\n\nand checkout some examples [here](https://github.com/allonios/pypeliner/tree/master/examples).\n\n## Installation\nit can be simply installing using `pip`:\n\n```shell\npip install simple-pypeliner\n```\n\n## Getting Started\n\nLet's say we want to build a pipeline for processing textual data coming from a file.\nwe will need 3 main components to achieve this using pypeliner.\n\n### Reader\nfirst we will need a reader for reading the file, and it can be defined like the following:\n\n```python\nfrom pypeliner.readers.base import BaseReader\n\nclass FileReader(BaseReader):\n    def __init__(self, file_path: str) -> None:\n        self.file_path = file_path\n\n    def read(self) -> str:\n        with open(self.file_path, \"r\") as file_handler:\n            return file_handler.read()\n```\n\ninheriting from `BaseReader` makes sure that the `read` method is implemented to be used later within the [Reader](#reader).\nthe code basically is reading a file and returning its content as a string.\n\n### Processors\nnext we will define our processing logic, lets say we want to make all letters in the text file lower case, then remove\nstop words i.g: but, and, or, etc after that remove numbers.\n\nto achieve that we will write a processor for each one of these tasks.\n\neach processor should define its own `process` method. a processor will receive the `state` it needs to process from the [Runner](#runner).\n\nif `input_state` is passed the that processor will use the `input_state` instead of the state passed by the runner,\nthis is achieved using the `super` call for `process` method and passing `input_state` there.\nit is recommended to always call `super` for the `process` method as a best practice.\n\n`PROCESSOR_NAME` is a verbose name for a processor.\n\n#### 1- Lower Case Processor\n```python\nclass LowerCaseProcessor(BaseProcessor):\n    PROCESSOR_NAME = \"Lower Case Processor\"\n\n    def process(self, input_state: Any = None) -> Any:\n        self.state = super().process(input_state)\n        return self.state.lower()\n```\n\n#### 2- Remove Stop Words Processor\n```python\nclass RemoveStopWordsProcessor(BaseProcessor):\n    PROCESSOR_NAME = \"Remove Stop Words Processor\"\n\n    def process(self, input_state: Any = None) -> Any:\n        self.state = super().process(input_state)\n        stop_words = [\n            \"the\", \"to\", \"and\", \"a\",\n            \"in\", \"it\", \"is\", \"am,\n            \"I\", \"that\", \"had\", \"on\",\n            \"for\", \"be\", \"were\", \"was\",\n            \"of\", \"or\", \"it\", \"an\",\n        ]\n        self.state = super().process(input_state)\n\n        for stop_word in stop_words:\n            self.state = re.sub(rf\"\\W+{stop_word}\\W+\", \" \", self.state)\n            self.state = re.sub(rf\"\\W+{stop_word.title()}\\W+\", \" \", self.state)\n\n        return self.state\n```\n\n### 3- Remove Numbers Processor\n\n```python\nclass RemoveNumbersProcessor(BaseProcessor):\n    PROCESSOR_NAME = \"Remove Numbers Processor\"\n\n    def process(self, input_state: Any = None) -> Any:\n        self.state = super().process(input_state)\n        return re.sub(r\"\\d+\", \"\", self.state)\n```\n\n### Runner\n\nthe runner is the place where everything comes together, it will use the [Reader](#reader) to load the file\nand define the running loop for the [Processor](#processors)\n\nwe'll be using the built in `BaseRunner`\n\n```python\nfrom runners.base import BaseRunner\n\nrunner = BaseRunner(\n    processors=[\n        LowerCaseProcessor(),\n        RemoveStopWordsProcessor(),\n        RemoveNumbersProcessor(),\n    ],\n    reader=FileReader(\n        file_path=\"test.txt\"\n    ),\n    verbose=True,\n    run_timers=True\n)\n\nprint(runner.run())\n```\n\n\n`processors` parameter will set the processors of the pipeline and also its order.\n\n`reader` parameter will set the reader of the pipeline to be the file reader we defined earlier.\n\n`verbose` parameter will print the current processor that is running.\n\n`run_timers` parameter will print the time consumed by each processor to run.\n\nfor more information visit the documentation at [pypeliner](https://pypeliner.readthedocs.io/en/latest/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "simple-pypeliner",
    "package_url": "https://pypi.org/project/simple-pypeliner/",
    "platform": null,
    "project_url": "https://pypi.org/project/simple-pypeliner/",
    "project_urls": {
      "Bug Tracker": "https://github.com/allonios/pypeliner/issues",
      "Documentation": "https://simple-pypeliner.readthedocs.io/en/latest/",
      "Homepage": "https://github.com/allonios/pypeliner"
    },
    "release_url": "https://pypi.org/project/simple-pypeliner/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A simple python framework for building data processing pipelines",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16638511,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6154f00384863a2bad602d9116f42f2bed05844923e8fca55af2dd57042f040",
          "md5": "0e4c72fb647d1a84496a724ea8040ce6",
          "sha256": "7824aa18dd5c851e27f8549264133211a983bfbe10b492d060b2f0b5835b46f4"
        },
        "downloads": -1,
        "filename": "simple_pypeliner-0.0.1-1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e4c72fb647d1a84496a724ea8040ce6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10969,
        "upload_time": "2023-01-31T18:51:29",
        "upload_time_iso_8601": "2023-01-31T18:51:29.490476Z",
        "url": "https://files.pythonhosted.org/packages/a6/15/4f00384863a2bad602d9116f42f2bed05844923e8fca55af2dd57042f040/simple_pypeliner-0.0.1-1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c94e3de296790ccfcf1b6e6d43e5d0e414ff11bac7195ce3a4ea9b8d0a31c94b",
          "md5": "e1c9c4903a69165d8f5680c41592ec02",
          "sha256": "9be8fc04c1b3409dc9885186f0a7dfe9999d6a08d54f0085d0012ff892a3b2fc"
        },
        "downloads": -1,
        "filename": "simple_pypeliner-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1c9c4903a69165d8f5680c41592ec02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10967,
        "upload_time": "2023-01-31T18:22:55",
        "upload_time_iso_8601": "2023-01-31T18:22:55.989367Z",
        "url": "https://files.pythonhosted.org/packages/c9/4e/3de296790ccfcf1b6e6d43e5d0e414ff11bac7195ce3a4ea9b8d0a31c94b/simple_pypeliner-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "408bd37ef75b70d16bee43bd748cd4daaed2208f58dd794009ba53b817cc4552",
          "md5": "c58a645134cbd066f2549e068eba45d3",
          "sha256": "edcdf3b26a372cc5c8a2d15c3f8963e4429c57365dfa87566750b2266b0ffb8b"
        },
        "downloads": -1,
        "filename": "simple-pypeliner-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c58a645134cbd066f2549e068eba45d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9292,
        "upload_time": "2023-01-31T18:22:57",
        "upload_time_iso_8601": "2023-01-31T18:22:57.998357Z",
        "url": "https://files.pythonhosted.org/packages/40/8b/d37ef75b70d16bee43bd748cd4daaed2208f58dd794009ba53b817cc4552/simple-pypeliner-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b4cadb410e56f03e7866d7290926e4c2bc0cbda1507cd63f2114b0a85b2bc34",
          "md5": "7308d1ca8974291d2c8efa77facb6feb",
          "sha256": "26a96b125b8d338f14df21c0a171273f3429fadfc6fd2053fd968ab5d9db7ef0"
        },
        "downloads": -1,
        "filename": "simple_pypeliner-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7308d1ca8974291d2c8efa77facb6feb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10970,
        "upload_time": "2023-01-31T18:55:56",
        "upload_time_iso_8601": "2023-01-31T18:55:56.033824Z",
        "url": "https://files.pythonhosted.org/packages/2b/4c/adb410e56f03e7866d7290926e4c2bc0cbda1507cd63f2114b0a85b2bc34/simple_pypeliner-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "044d35e80fa4f523f4e9fd39660a0879421290b7a85a5a8364d990f1f2a8b195",
          "md5": "b4072eeaff63ea9d1695fad5af82a5a9",
          "sha256": "1b0e649087107ccd0ff58bf7ff7671907b7d5a7afdcd52cf2863d9e3d96cd1ff"
        },
        "downloads": -1,
        "filename": "simple-pypeliner-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b4072eeaff63ea9d1695fad5af82a5a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9351,
        "upload_time": "2023-01-31T18:55:58",
        "upload_time_iso_8601": "2023-01-31T18:55:58.395264Z",
        "url": "https://files.pythonhosted.org/packages/04/4d/35e80fa4f523f4e9fd39660a0879421290b7a85a5a8364d990f1f2a8b195/simple-pypeliner-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b4cadb410e56f03e7866d7290926e4c2bc0cbda1507cd63f2114b0a85b2bc34",
        "md5": "7308d1ca8974291d2c8efa77facb6feb",
        "sha256": "26a96b125b8d338f14df21c0a171273f3429fadfc6fd2053fd968ab5d9db7ef0"
      },
      "downloads": -1,
      "filename": "simple_pypeliner-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7308d1ca8974291d2c8efa77facb6feb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10970,
      "upload_time": "2023-01-31T18:55:56",
      "upload_time_iso_8601": "2023-01-31T18:55:56.033824Z",
      "url": "https://files.pythonhosted.org/packages/2b/4c/adb410e56f03e7866d7290926e4c2bc0cbda1507cd63f2114b0a85b2bc34/simple_pypeliner-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "044d35e80fa4f523f4e9fd39660a0879421290b7a85a5a8364d990f1f2a8b195",
        "md5": "b4072eeaff63ea9d1695fad5af82a5a9",
        "sha256": "1b0e649087107ccd0ff58bf7ff7671907b7d5a7afdcd52cf2863d9e3d96cd1ff"
      },
      "downloads": -1,
      "filename": "simple-pypeliner-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b4072eeaff63ea9d1695fad5af82a5a9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9351,
      "upload_time": "2023-01-31T18:55:58",
      "upload_time_iso_8601": "2023-01-31T18:55:58.395264Z",
      "url": "https://files.pythonhosted.org/packages/04/4d/35e80fa4f523f4e9fd39660a0879421290b7a85a5a8364d990f1f2a8b195/simple-pypeliner-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}