{
  "info": {
    "author": "Sekgobela Kevin",
    "author_email": "kevinnoko23@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Security",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# webrute\nWebrute is python bruteforce library for http requests built on top of\n[broote](https://github.com/sekgobela-kevin/broote).  It can be used \nfor bruteforce activities involving making https requests including \nchecking status code for request with certain data passed.\n\nRequests are performed using [httpx](https://www.python-httpx.org/) which\nsupport [asyncio](https://docs.python.org/3/library/asyncio.html).\n\n> See [broote](https://github.com/sekgobela-kevin/broote) for more.\n### Install\nThis is enough to install 'webrute' in your command-line application.\n```bash\npip install webrute\n```\n\n### Usage\nData for bruteforce need to be prepared first before getting started.\n```python\nimport webrute\n\npasswords_field = webrute.field(\"password\", lambda: range(10))\nusernames_field = webrute.field(\"username\", [\"Ben\", \"Jackson\", \"Marry\"])\n\ntable = webrute.table()\ntable.add_field(passwords_field)\ntable.add_primary_field(usernames_field)\n```\n\n**Target** in 'broote' defines anything that can be used to interact with\nsystem to be bruteforced. Here in webrute, _str_ target will be considered url or but _dict_ can be provided with information defining target.\n\n_dict_ as target will have to contain keywords arguments for request \nincluding 'url', 'method', etc. Record can also provide arguments for \nrequest just like target does.\n\nHere is how target and record as _dict_ can be used to create arguments\nto be used in request.\n```python\n# target_dict contain basic information for making request.\ntarget_dict = {\"url\": \"https://example.com/login\", \"method\": \"POST\"}\n# record_dict provides extra information.\n# record_dict was created from table record as seen.\nrecord_dict = {\"data\": {\"username\": \"Marry\", \"password\": 10}}\n\n# Keyword arguments of request are created from merge of the two.\n# record_dict has priority over target if common keys exists.\nrequest_kwargs = {\n    \"url\": \"https://example.com/\", \"method\": \"POST\",  \"data\": {\n        \"username\": \"Marry\", \"password\": 10}\n}\n```\n> `record_dict` will have to be created manually from _table record_.\n\nIts best to have target hold only information that wont change and let record\nhold information that may change like 'username' and 'password'.   \n\nSession can also be provided as _dict_ with arguments pass when creating session.\n\n\n> Basics of [broote](https://github.com/sekgobela-kevin/broote) are \nrequired to continue.\n\n\nWebrute already provides connector which is used for making request at \ntarget but being able to define connector can be fun.\n```python\nimport webrute\n\ndef connector(target, record, session=None):\n    # Creates new record containing 'data' field.\n    # Record gets tranformed before being passed to connector.\n    new_record = webrute.record()\n    new_record.add_item(\"data\", dict(record))\n    # webrute.connector() performs request and return response.\n    return webrute.connector(target, new_record, session)\n```\n> Session is set by default which is shared by all requests.  \n\nConnector is now combined with `success()`, `failute()` and `target()` \nfunctions.\n```python\nimport webrute\n\ndef connector(target, record, session=None):\n    # Creates new record containing 'data' field.\n    new_record = webrute.record()\n    new_record.add_item(\"data\", dict(record))\n    # webrute.connector() performs request and return response.\n    return webrute.connector(target, new_record, session)\n\ndef success(response):\n    return b\"logged in as \" in response.read()\n\ndef failure(response):\n    return b\"Username and password does not match\" in response.read()\n\ndef target_reached(response):\n    # This is current implementation of defaut target reached.\n    # return webrute.target_reached(response)\n    return response.is_success\n```\n\n> Target reached by default is True when status code is between 2XX.\n\nCreating request can take some time if not executed in parallel or \nconcurrently. Using `webrute.thread_runner` runner is best choice as it uses\nthreads for performing bruteforce.\n```python\n# Code for table is at top.\n# ... ... ... ... ... ... .\n\n# Code for success(), failure() and connector() at top.\n# ... ... ... ... ... ... ... ... ... ... ... ... ... .\n\n# Creates target dict containing url and method of request.\ntarget = {\"url\": \"https://example.com/login\", \"method\": \"POST\"}\n\n# target_reached and connect arguments are optional.\n# Atleast one between success and failure needs to be provided.\nrunner = webrute.create_thread_runner(\n    target, \n    table, \n    connector=connector, \n    success=success, \n    failure=failure\n)\n\n# Starts requests using connector()\nrunner.start()\nrunner.get_success_records() # [{'username': 'Marry', 'password': 8}]\n```\n\n`webrute.create_async_runner` creates runner using asyncio which may be \nfaster than threads.\n```python\n# Code for table is at top.\n# ... ... ... ... ... ... .\n\nasync def connector(target, record, session=None):\n    # Creates new record containing 'data' field.\n    new_record = webrute.record()\n    new_record.add_item(\"data\", dict(record))\n    # webrute.connector() performs request and return response.\n    return await webrute.async_connector(target, new_record, session)\n\nasync def success(response):\n    return b\"logged in as \" in response.read()\n\nasync def failure(response):\n    return b\"Username and password does not match\" in response.read()\n\n\n# Creates target dict containing url and method of request.\ntarget = {\"url\": \"https://example.com/login\", \"method\": \"POST\"}\n\n# Creates runner executing using asyncio\nrunner = webrute.create_async_runner(\n    target, \n    table, \n    connector=connector,\n    success=success, \n    failure=failure\n)\n```\n> [https://example.com/login](https://example.com/login) is not guaranteed\nto exist or return responses as used above.\n\nConnector in most cases can be avoided by using separate function for\ntransforming record. `record_transformer` argument can be passed which\nis function for transforming record.\n\n```python\ndef transformer(record):\n    # Returns new record containing 'data' key.\n    new_record = webrute.record()\n    new_record.add_item(\"data\", dict(record))\n    return new_record\n\n# Realise that 'connect' argument is not provided.\nrunner = webrute.create_thread_runner(\n    target, \n    table,\n    success=success, \n    failure=failure,\n    record_transformer=transformer\n)\n```\n\n> More features are available through 'broote' library.\n\n\n### License\nWebrute is released as open-source under conditions of \n[GPL-3.0](https://github.com/sekgobela-kevin/webrute/blob/main/LICENSE)\nlicense.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sekgobela-kevin/webrute",
    "keywords": "login,website,html-form,secutity,hacking,bruteforce",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "webrute",
    "package_url": "https://pypi.org/project/webrute/",
    "platform": null,
    "project_url": "https://pypi.org/project/webrute/",
    "project_urls": {
      "Bug Tracker": "https://github.com/sekgobela-kevin/webrute/issues",
      "Homepage": "https://github.com/sekgobela-kevin/webrute"
    },
    "release_url": "https://pypi.org/project/webrute/0.2.1/",
    "requires_dist": [
      "broote (<0.7.0,>=0.6.0)",
      "httpx"
    ],
    "requires_python": ">=3.6",
    "summary": "Python bruteforce library for http requests",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15598933,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73437e8976c0ff8df57c0140c4b2e1656fbf346cd7756fa2b9cc88ca20cb4fb7",
          "md5": "9ca5bf4c416825049245103176491559",
          "sha256": "48cd5d083d52dab54173e146674f307b04bee1b9754c97e9184b5c0997167ed8"
        },
        "downloads": -1,
        "filename": "webrute-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ca5bf4c416825049245103176491559",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22455,
        "upload_time": "2022-10-16T07:02:30",
        "upload_time_iso_8601": "2022-10-16T07:02:30.485806Z",
        "url": "https://files.pythonhosted.org/packages/73/43/7e8976c0ff8df57c0140c4b2e1656fbf346cd7756fa2b9cc88ca20cb4fb7/webrute-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0939ba118566c535a696e67ada023dc74724f9eebd9dad735bc00fa81c0e15dc",
          "md5": "84f4e1bb459134bf111820ed31d70e59",
          "sha256": "b49869096c5a0a21b8e06769eb12b3dbc2fcae31e4f3de9354eeabd95df86eef"
        },
        "downloads": -1,
        "filename": "webrute-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "84f4e1bb459134bf111820ed31d70e59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23213,
        "upload_time": "2022-10-16T07:02:32",
        "upload_time_iso_8601": "2022-10-16T07:02:32.942251Z",
        "url": "https://files.pythonhosted.org/packages/09/39/ba118566c535a696e67ada023dc74724f9eebd9dad735bc00fa81c0e15dc/webrute-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9af22f7ec6bf962d56e754e7637ef098b2f3b9e8f743b0dcd0c4cf81a390a86a",
          "md5": "3819a8cbb3eccfc8b1e20b415c3bb43f",
          "sha256": "aac91b5bdde9ddfbaf45eb802e054b9abc5e4a932990ac113f21c33a5ff3ed99"
        },
        "downloads": -1,
        "filename": "webrute-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3819a8cbb3eccfc8b1e20b415c3bb43f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22456,
        "upload_time": "2022-10-20T16:59:53",
        "upload_time_iso_8601": "2022-10-20T16:59:53.377878Z",
        "url": "https://files.pythonhosted.org/packages/9a/f2/2f7ec6bf962d56e754e7637ef098b2f3b9e8f743b0dcd0c4cf81a390a86a/webrute-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "404897b67d3d81c2c820e69611f6f36aa4fb8659f6516b9b5a8a186a283d07ed",
          "md5": "03a2aaebb0b215ee3f24ef5e5e494ca3",
          "sha256": "4725286833d9b5457136c4bac9607c5e541dc90b0be09a83cf9924cd1e1606a7"
        },
        "downloads": -1,
        "filename": "webrute-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "03a2aaebb0b215ee3f24ef5e5e494ca3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23210,
        "upload_time": "2022-10-20T16:59:55",
        "upload_time_iso_8601": "2022-10-20T16:59:55.585931Z",
        "url": "https://files.pythonhosted.org/packages/40/48/97b67d3d81c2c820e69611f6f36aa4fb8659f6516b9b5a8a186a283d07ed/webrute-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd641655ba0ff9002ee2acf3f22dea8ff8194cf3b1dbcc626129e68d51304d67",
          "md5": "1caa146b18763e045150f91e11fba1aa",
          "sha256": "2377bab1c0b59f241fa63ea6f3b4eb3e03835128f4ed7c56e0c6ddefa2bcaa9d"
        },
        "downloads": -1,
        "filename": "webrute-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1caa146b18763e045150f91e11fba1aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22752,
        "upload_time": "2022-10-24T19:28:03",
        "upload_time_iso_8601": "2022-10-24T19:28:03.572238Z",
        "url": "https://files.pythonhosted.org/packages/fd/64/1655ba0ff9002ee2acf3f22dea8ff8194cf3b1dbcc626129e68d51304d67/webrute-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "881ced6a7814e95a8a86a81e3168f125207cf834558a7322391171cf318b7c55",
          "md5": "76f65de9201b4b37e346488b3306a60f",
          "sha256": "9cecac3eb943bc079333a25ddb940274b6ab79e6dcf436a9495309a1a2ee1efa"
        },
        "downloads": -1,
        "filename": "webrute-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76f65de9201b4b37e346488b3306a60f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23596,
        "upload_time": "2022-10-31T10:57:59",
        "upload_time_iso_8601": "2022-10-31T10:57:59.434866Z",
        "url": "https://files.pythonhosted.org/packages/88/1c/ed6a7814e95a8a86a81e3168f125207cf834558a7322391171cf318b7c55/webrute-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55418398ad177522371b24af1ca54d174d239e258ebbb3f40ef338298487ded5",
          "md5": "4de387f3fe4e6f28eab094d4c21e677c",
          "sha256": "f11e8767b9d642a8efed81f9fe5d6401ed285f38a39710eadb92c0149a335604"
        },
        "downloads": -1,
        "filename": "webrute-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4de387f3fe4e6f28eab094d4c21e677c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29409,
        "upload_time": "2022-10-31T10:58:01",
        "upload_time_iso_8601": "2022-10-31T10:58:01.569560Z",
        "url": "https://files.pythonhosted.org/packages/55/41/8398ad177522371b24af1ca54d174d239e258ebbb3f40ef338298487ded5/webrute-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27e510174e01451c801b63fcf94a498e51653080ab8e47e0711044b845688b3e",
          "md5": "069f72a98509c26624c860a761e1e1e3",
          "sha256": "6e57344b63be1ea0beb1fd7bd09c6709c3428052115203100a1dd3f2b5e9d927"
        },
        "downloads": -1,
        "filename": "webrute-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "069f72a98509c26624c860a761e1e1e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23783,
        "upload_time": "2022-10-31T16:18:54",
        "upload_time_iso_8601": "2022-10-31T16:18:54.460707Z",
        "url": "https://files.pythonhosted.org/packages/27/e5/10174e01451c801b63fcf94a498e51653080ab8e47e0711044b845688b3e/webrute-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4b7dc934a35889bb9de5741d1808ecac0654d63bdfa91719c540ad7b83a44d9",
          "md5": "d5462848e292d47289bd1b8b782efe96",
          "sha256": "1b8332281e199658f5b797b3261bbe49923fdb12986274bcd5a0c60c24d9839d"
        },
        "downloads": -1,
        "filename": "webrute-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d5462848e292d47289bd1b8b782efe96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29624,
        "upload_time": "2022-10-31T16:18:56",
        "upload_time_iso_8601": "2022-10-31T16:18:56.579015Z",
        "url": "https://files.pythonhosted.org/packages/e4/b7/dc934a35889bb9de5741d1808ecac0654d63bdfa91719c540ad7b83a44d9/webrute-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27e510174e01451c801b63fcf94a498e51653080ab8e47e0711044b845688b3e",
        "md5": "069f72a98509c26624c860a761e1e1e3",
        "sha256": "6e57344b63be1ea0beb1fd7bd09c6709c3428052115203100a1dd3f2b5e9d927"
      },
      "downloads": -1,
      "filename": "webrute-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "069f72a98509c26624c860a761e1e1e3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 23783,
      "upload_time": "2022-10-31T16:18:54",
      "upload_time_iso_8601": "2022-10-31T16:18:54.460707Z",
      "url": "https://files.pythonhosted.org/packages/27/e5/10174e01451c801b63fcf94a498e51653080ab8e47e0711044b845688b3e/webrute-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4b7dc934a35889bb9de5741d1808ecac0654d63bdfa91719c540ad7b83a44d9",
        "md5": "d5462848e292d47289bd1b8b782efe96",
        "sha256": "1b8332281e199658f5b797b3261bbe49923fdb12986274bcd5a0c60c24d9839d"
      },
      "downloads": -1,
      "filename": "webrute-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d5462848e292d47289bd1b8b782efe96",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 29624,
      "upload_time": "2022-10-31T16:18:56",
      "upload_time_iso_8601": "2022-10-31T16:18:56.579015Z",
      "url": "https://files.pythonhosted.org/packages/e4/b7/dc934a35889bb9de5741d1808ecac0654d63bdfa91719c540ad7b83a44d9/webrute-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}