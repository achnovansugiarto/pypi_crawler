{
  "info": {
    "author": "Luca Cappelletti",
    "author_email": "cappelletti.luca94@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "hpo_downloader\n===========================================================================================================\n|travis| |sonar_quality| |sonar_maintainability| |codacy|\n|code_climate_maintainability| |pip| |downloads|\n\nPython package to download `HPO annotations <https://hpo.jax.org/app/download/annotation>`__\nand mapping to `Uniprot ID and AC <https://www.uniprot.org/>`__\nand `CAFA4 IDs <https://www.biofunctionprediction.org/cafa/>`__.\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install hpo_downloader\n\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometime get\nslightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nPipeline\n----------------------------------------------\nThe package pipeline is illustrated in the following image:\n\n|pipeline|\n\n\nPreprocessing\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nFor the **pre-processing** you have to retrieve the\n`uniprot mapping files by asking directly to the Uniprot team\n<https://www.uniprot.org/contact>`__\nsince each mapping is aroung 17GB.\nLet's save each file in a directory within this repository called\n:code:`\"mapping/{month}/idmapping.dat.gz\"`.\n\n**Cache for the pre-processing results is available**\n**within the python package,**\n**so there is no need to retrieve the original**\n**files unless you need to fully reproduce the pipeline.**\n\nFor each release, we have to retrieve the :code:`\"GeneID\"`\nand the human uniprot_IDs, and we can do so using\n`zgrep <http://manpages.ubuntu.com/manpages/trusty/man1/zgrep.1.html>`__.\n\n.. code:: bash\n\n    zgrep \"GeneID\" mapping/{month}/idmapping.dat.gz > gene_id.tsv\n    zgrep \"HUMAN\" mapping/{month}/idmapping.dat.gz > human_id.tsv\n\nNow we have to map in a non-bijective way uniprot IDs\nto GeneIDs on the uniprot ACs.\nWe can use the package method :code:`non_unique_mapping`.\n\n.. code:: python\n\n    from hpo_downloader.utils import non_unique_mapping\n    import pandas as pd\n\n    gene_id = pd.read_csv(\n        f\"mapping/{month}/gene_id.tsv\",\n        sep=\"\\t\",\n        header=None,\n        usecols=[0, 2]\n    )\n    gene_id.columns = [\"uniprot_ac\", \"gene_id\"]\n    human_id = pd.read_csv(\n        f\"mapping/{month}/human_ids.tsv\",\n        sep=\"\\t\",\n        header=None,\n        usecols=[0, 2]\n    )\n    human_id.columns = [\"uniprot_ac\", \"uniprot_id\"]\n    non_unique_mapping(gene_id, human_id, \"uniprot_ac\").to_csv(\n        f\"hpo_downloader/uniprot/data/{month}.tsv.gz\",\n        sep=\"\\t\",\n        index=False\n    )\n\nPackage usage examples\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nTo generate the complete mapping (optionally filtering only\nfor Uniprot IDs within CAFA4) proceed as follows:\n\n.. code:: python\n\n    from hpo_downloader import mapping\n\n    my_mapping = mapping(\n        month=\"november\"\n    )\n\n    my_mapping_cafa_only = mapping(\n        month=\"november\",\n        cafa_only=True\n    )\n\nThe obtained `pandas DataFrames <https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html>`__\nlook as follows:\n\n**HPO mappings:**\n`October <https://github.com/LucaCappelletti94/hpo_downloader/raw/master/complete_mapping/october.tsv>`__,\n`November <https://github.com/LucaCappelletti94/hpo_downloader/raw/master/complete_mapping/november.tsv>`__,\n`December <https://github.com/LucaCappelletti94/hpo_downloader/raw/master/complete_mapping/december.tsv>`__\n\n+-----------+------------+--------------+--------------+\n|   gene_id | hpo_id     | uniprot_ac   | uniprot_id   |\n+===========+============+==============+==============+\n|      8192 | HP:0004322 | Q16740       | CLPP_HUMAN   |\n+-----------+------------+--------------+--------------+\n|      8192 | HP:0001250 | Q16740       | CLPP_HUMAN   |\n+-----------+------------+--------------+--------------+\n|      8192 | HP:0000786 | Q16740       | CLPP_HUMAN   |\n+-----------+------------+--------------+--------------+\n|      8192 | HP:0000007 | Q16740       | CLPP_HUMAN   |\n+-----------+------------+--------------+--------------+\n|      8192 | HP:0000252 | Q16740       | CLPP_HUMAN   |\n+-----------+------------+--------------+--------------+\n\n**HPO mappings (CAFA4 only):**\n`October (CAFA only) <https://github.com/LucaCappelletti94/hpo_downloader/raw/master/complete_mapping/october_cafa_only.tsv.tsv>`__,\n`November (CAFA only) <https://github.com/LucaCappelletti94/hpo_downloader/raw/master/complete_mapping/november_cafa_only.tsv.tsv>`__,\n`December (CAFA only) <https://github.com/LucaCappelletti94/hpo_downloader/raw/master/complete_mapping/december_cafa_only.tsv.tsv>`__\n\n+--------------+--------------+-----------+------------+--------------+\n| cafa4_id     | uniprot_id   |   gene_id | hpo_id     | uniprot_ac   |\n+==============+==============+===========+============+==============+\n| T96060000002 | 1433E_HUMAN  |      7531 | HP:0000960 | P62258       |\n+--------------+--------------+-----------+------------+--------------+\n| T96060000002 | 1433E_HUMAN  |      7531 | HP:0001539 | P62258       |\n+--------------+--------------+-----------+------------+--------------+\n| T96060000002 | 1433E_HUMAN  |      7531 | HP:0002119 | P62258       |\n+--------------+--------------+-----------+------------+--------------+\n| T96060000002 | 1433E_HUMAN  |      7531 | HP:0002120 | P62258       |\n+--------------+--------------+-----------+------------+--------------+\n| T96060000002 | 1433E_HUMAN  |      7531 | HP:0000463 | P62258       |\n+--------------+--------------+-----------+------------+--------------+\n\n\nAuthor notes\n====================================\n\nHPO missing GeneID mappings\n------------------------------------\nAround 54 to 55 GeneID to Uniprot IDs mapping are currently missing in Uniprot.\nI have already signaled this to the Uniprot team\nand will update the package accordingly,\nif anything is to be made about these.\n\n+----------+-----------------------------+--------------------------------+----------------------------+-------------------------------+\n| Month    |   HPO unique missed samples | HPO unique missed percentage   |   HPO total missed samples | HPO total missed percentage   |\n+==========+=============================+================================+============================+===============================+\n| October  |                          54 | 1.26%                          |                       3076 | 1.86%                         |\n+----------+-----------------------------+--------------------------------+----------------------------+-------------------------------+\n| November |                          55 | 1.28%                          |                       3162 | 1.91%                         |\n+----------+-----------------------------+--------------------------------+----------------------------+-------------------------------+\n| December |                          55 | 1.28%                          |                       3162 | 1.91%                         |\n+----------+-----------------------------+--------------------------------+----------------------------+-------------------------------+\n\nHPO phenotype ID to CAFA4 Uniprot_IDs missed mappings \n------------------------------------------------------------\nA considerable percentage (around 80%) of the HUMAN uniprot IDs used in CAFA4\nare not mappable to the HPO phenotype IDs.\n\n+----------+-------------------------------+----------------------------------+------------------------------+---------------------------------+\n| Month    |   CAFA4 unique missed samples | CAFA4 unique missed percentage   |   CAFA4 total missed samples | CAFA4 total missed percentage   |\n+==========+===============================+==================================+==============================+=================================+\n| October  |                         16182 | 79.21%                           |                        16182 | 79.21%                          |\n+----------+-------------------------------+----------------------------------+------------------------------+---------------------------------+\n| November |                         16184 | 79.22%                           |                        16184 | 79.22%                          |\n+----------+-------------------------------+----------------------------------+------------------------------+---------------------------------+\n| December |                         16187 | 79.23%                           |                        16187 | 79.23%                          |\n+----------+-------------------------------+----------------------------------+------------------------------+---------------------------------+\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/hpo_downloader.png\n   :target: https://travis-ci.org/LucaCappelletti94/hpo_downloader\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_hpo_downloader&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_hpo_downloader\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_hpo_downloader&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_hpo_downloader\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_hpo_downloader&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_hpo_downloader\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/hpo_downloader/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/hpo_downloader?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/hpo-downloader.svg\n    :target: https://badge.fury.io/py/hpo-downloader\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/hpo-downloader\n    :target: https://pepy.tech/badge/hpo-downloader\n    :alt: Pypi total project downloads \n\n.. |codacy|  image:: https://api.codacy.com/project/badge/Grade/26d152932db342a09ac6b009889255c9\n    :target: https://www.codacy.com/manual/LucaCappelletti94/hpo_downloader?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/hpo_downloader&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |pipeline|  image:: https://github.com/LucaCappelletti94/hpo_downloader/blob/master/HPO%20downloader.png?raw=true\n    :alt: Pipeline\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/0cac3687d5c9520e561a/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/hpo_downloader/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/0cac3687d5c9520e561a/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/hpo_downloader/test_coverage\n    :alt: Code Climate Coverate",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LucaCappelletti94/hpo_downloader",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hpo-downloader",
    "package_url": "https://pypi.org/project/hpo-downloader/",
    "platform": "",
    "project_url": "https://pypi.org/project/hpo-downloader/",
    "project_urls": {
      "Homepage": "https://github.com/LucaCappelletti94/hpo_downloader"
    },
    "release_url": "https://pypi.org/project/hpo-downloader/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python package to download HPO annotations and mapping to Uniprot ID and AC and CAFA4 IDs.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6478537,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60f2c6dd56aea28ca01c76d6d88a47491803d233c44a9689421aff88e82358d8",
          "md5": "5bb5e627176bf4b53fac28498815e465",
          "sha256": "50c0ca1b07bdfc8a246a0f88de93fd82c5ff011471e17bf4fde0ada846d680cc"
        },
        "downloads": -1,
        "filename": "hpo_downloader-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5bb5e627176bf4b53fac28498815e465",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4786,
        "upload_time": "2020-01-13T16:15:09",
        "upload_time_iso_8601": "2020-01-13T16:15:09.126284Z",
        "url": "https://files.pythonhosted.org/packages/60/f2/c6dd56aea28ca01c76d6d88a47491803d233c44a9689421aff88e82358d8/hpo_downloader-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1a59fb19ac1701b818494da04d76bc00253b529d936d9c1f195165423f8ea04",
          "md5": "db7df2977ff3009a5b1611e8385d01ee",
          "sha256": "e337f577cc32928fc735f951bafe2846cd80dcedf0d530f79f50c88c3b7ff9d3"
        },
        "downloads": -1,
        "filename": "hpo_downloader-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "db7df2977ff3009a5b1611e8385d01ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6820,
        "upload_time": "2020-01-14T09:48:56",
        "upload_time_iso_8601": "2020-01-14T09:48:56.608199Z",
        "url": "https://files.pythonhosted.org/packages/b1/a5/9fb19ac1701b818494da04d76bc00253b529d936d9c1f195165423f8ea04/hpo_downloader-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e5bcc559525f2b85526904261f9c93b3b2b656f02d532b8a47bdc40540a835f",
          "md5": "e307d728c7995cf2471cd9ad77b36d27",
          "sha256": "d7abdaab2609d734752410d93b7e53051f51b0681aae1566823c2170c59471ec"
        },
        "downloads": -1,
        "filename": "hpo_downloader-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e307d728c7995cf2471cd9ad77b36d27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8111,
        "upload_time": "2020-01-18T15:36:35",
        "upload_time_iso_8601": "2020-01-18T15:36:35.402598Z",
        "url": "https://files.pythonhosted.org/packages/0e/5b/cc559525f2b85526904261f9c93b3b2b656f02d532b8a47bdc40540a835f/hpo_downloader-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e5bcc559525f2b85526904261f9c93b3b2b656f02d532b8a47bdc40540a835f",
        "md5": "e307d728c7995cf2471cd9ad77b36d27",
        "sha256": "d7abdaab2609d734752410d93b7e53051f51b0681aae1566823c2170c59471ec"
      },
      "downloads": -1,
      "filename": "hpo_downloader-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e307d728c7995cf2471cd9ad77b36d27",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8111,
      "upload_time": "2020-01-18T15:36:35",
      "upload_time_iso_8601": "2020-01-18T15:36:35.402598Z",
      "url": "https://files.pythonhosted.org/packages/0e/5b/cc559525f2b85526904261f9c93b3b2b656f02d532b8a47bdc40540a835f/hpo_downloader-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}