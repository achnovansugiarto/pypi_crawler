{
  "info": {
    "author": "Christian Pehle, Jens E. Pedersen",
    "author_email": "christian.pehle@gmail.com, jens@jepedersen.dk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<p align=\"center\">\r\n<img src=\"https://raw.githubusercontent.com/norse/norse/master/logo.png\">\r\n</p>\r\n\r\nA [deep learning](https://en.wikipedia.org/wiki/Deep_learning) library for [spiking neural networks](https://en.wikipedia.org/wiki/Spiking_neural_network).\r\n\r\n<p align=\"center\">\r\n    <a href=\"https://github.com/norse/norse/actions\">\r\n        <img src=\"https://github.com/norse/norse/workflows/Python%20package/badge.svg\" alt=\"Test status\"></a>\r\n    <a href=\"https://pypi.org/project/norse/\" alt=\"PyPi\">\r\n        <img src=\"https://img.shields.io/pypi/v/norse\" />\r\n    </a>\r\n    <a href=\"https://anaconda.org/norse\" alt=\"Conda\">\r\n        <img src=\"https://img.shields.io/conda/v/norse/norse\" />\r\n    </a>\r\n    <a href=\"https://github.com/norse/norse/pulse\" alt=\"Activity\">\r\n        <img src=\"https://img.shields.io/github/last-commit/norse/norse\" />\r\n    </a>\r\n    <a href=\"https://discord.gg/7fGN359\">\r\n        <img src=\"https://img.shields.io/discord/723215296399147089\"\r\n            alt=\"chat on Discord\"></a>\r\n    <a href=\"https://www.codacy.com/gh/norse/norse?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=norse/norse&amp;utm_campaign=Badge_Grade\"><img src=\"https://app.codacy.com/project/badge/Grade/a9ab846fc6114afda4320badcb8a69c2\"/></a>\r\n    <a href=\"https://codecov.io/gh/norse/norse\"><img src=\"https://codecov.io/gh/norse/norse/branch/master/graph/badge.svg\" /></a>\r\n    <a href=\"https://doi.org/10.5281/zenodo.4422025\"><img src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.4422025.svg\" alt=\"DOI\"></a>\r\n</p>\r\n\r\nNorse aims to exploit the advantages of bio-inspired neural components, which are sparse and event-driven - a fundamental difference from artificial neural networks.\r\nNorse expands [PyTorch](https://pytorch.org/) with primitives for bio-inspired neural components, \r\nbringing you two advantages: a modern and proven infrastructure based on PyTorch and deep learning-compatible spiking neural network components.\r\n\r\n**Documentation**: [norse.github.io/norse/](https://norse.github.io/norse/)\r\n\r\n## 1. Getting started\r\n\r\nThe fastest way to try Norse is via the [jupyter notebooks on Google collab](https://github.com/norse/notebooks/tree/master/).\r\n\r\nAlternatively, [you can install Norse locally](#installation) and run one of the [included tasks](https://norse.github.io/norse/tasks.html) such as [MNIST](https://en.wikipedia.org/wiki/MNIST_database):\r\n```bash\r\npython -m norse.task.mnist\r\n```\r\n\r\n## 2. Using Norse\r\n\r\nNorse presents plug-and-play components for deep learning with spiking neural networks.\r\nHere, we describe how to install Norse and start to apply it in your own work.\r\n[Read more in our documentation](https://norse.github.io/norse/working.html).\r\n\r\n### 2.1. Installation\r\n<a name=\"installation\"></a>\r\n\r\nWe assume you are using **Python version 3.7+** and have **installed PyTorch version 1.9 or higher**. \r\n[Read more about the prerequisites in our documentation](https://norse.github.io/norse/installing.html).\r\n\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Method</th><th>Instructions</th><th>Prerequisites</th>\r\n</tr>\r\n</thead>\r\n\r\n<tr>\r\n<td>From PyPi</td><td><div class=\"highlight highlight-source-shell\"><pre>\r\npip install norse\r\n</pre></div></td><td><a href=\"https://pypi.org/\" title=\"PyPi\">Pip</a></td>\r\n</tr>\r\n<tr>\r\n<td>From source</td><td><div class=\"highlight highlight-source-shell\"><pre>\r\npip install -qU git+https://github.com/norse/norse\r\n</pre></div></td><td><a href=\"https://pypi.org/\" title=\"PyPi\">Pip</a>, <a href=\"https://pytorch.org/get-started/locally/\" title=\"PyTorch\">PyTorch</a></td>\r\n</tr>\r\n<tr>\r\n<td>With Docker</td><td><div class=\"highlight highlight-source-shell\"><pre>\r\ndocker pull quay.io/norse/norse\r\n</pre></div></td><td><a href=\"https://www.docker.com/get-started\" title=\"Docker\">Docker</a></td>\r\n</tr>\r\n<tr>\r\n<td>From Conda</td><td> <div class=\"highlight highlight-source-shell\"><pre>\r\nconda install -c norse norse\r\n</pre></div></td><td><a href=\"https://docs.anaconda.com/anaconda/install/\" title=\"Anaconda\">Anaconda</a> or <a href=\"https://docs.conda.io/en/latest/miniconda.html\" title=\"Miniconda\">Miniconda</a></td>\r\n</tr>\r\n</table>\r\n\r\nFor troubleshooting, please refer to our [installation guide](https://norse.github.io/norse/pages/installing.html#installation-troubleshooting), [create an issue on GitHub](https://github.com/norse/norse/issues) or [write us on Discord](https://discord.gg/7fGN359).\r\n\r\n### 2.2. Running examples\r\n\r\nNorse is bundled with a number of example tasks, serving as short, self contained, correct examples ([SSCCE](http://www.sscce.org/)).\r\nThey can be run by invoking the `norse` module from the base directory.\r\nMore information and tasks are available [in our documentation](https://norse.github.io/norse/tasks.html) and in your console by typing: `python -m norse.task.<task> --help`, where `<task>` is one of the task names.\r\n\r\n- To train an MNIST classification network, invoke\r\n    ```bash\r\n    python -m norse.task.mnist\r\n    ```\r\n- To train a CIFAR classification network, invoke\r\n    ```bash\r\n    python -m norse.task.cifar10\r\n    ```\r\n- To train the cartpole balancing task with Policy gradient, invoke\r\n    ```bash\r\n    python -m norse.task.cartpole\r\n    ```\r\n\r\nNorse is compatible with [PyTorch Lightning](https://pytorch-lightning.readthedocs.io/en/stable/),\r\nas demonstrated in the [PyTorch Lightning MNIST task variant](https://github.com/norse/norse/blob/master/norse/task/mnist_pl.py) (requires PyTorch lightning):\r\n\r\n```bash\r\npython -m norse.task.mnist_pl --gpus=4\r\n```\r\n\r\n### 2.3. Example: Spiking convolutional classifier \r\n\r\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/norse/notebooks/blob/master/mnist_classifiers.ipynb)\r\n\r\nThis classifier is a taken from our [tutorial on training a spiking MNIST classifier](https://github.com/norse/notebooks#level-intermediate) and achieves >99% accuracy.\r\n\r\n```python\r\nimport torch, torch.nn as nn\r\nfrom norse.torch import LICell             # Leaky integrator\r\nfrom norse.torch import LIFCell            # Leaky integrate-and-fire\r\nfrom norse.torch import SequentialState    # Stateful sequential layers\r\n\r\nmodel = SequentialState(\r\n    nn.Conv2d(1, 20, 5, 1),      # Convolve from 1 -> 20 channels\r\n    LIFCell(),                   # Spiking activation layer\r\n    nn.MaxPool2d(2, 2),\r\n    nn.Conv2d(20, 50, 5, 1),     # Convolve from 20 -> 50 channels\r\n    LIFCell(),\r\n    nn.MaxPool2d(2, 2),\r\n    nn.Flatten(),                # Flatten to 800 units\r\n    nn.Linear(800, 10),\r\n    LICell(),                    # Non-spiking integrator layer\r\n)\r\n\r\ndata = torch.randn(8, 1, 28, 28) # 8 batches, 1 channel, 28x28 pixels\r\noutput, state = model(data)      # Provides a tuple (tensor (8, 10), neuron state)\r\n```\r\n\r\n### 2.4. Example: Long short-term spiking neural networks\r\nThe long short-term spiking neural networks from the paper by [G. Bellec, D. Salaj, A. Subramoney, R. Legenstein, and W. Maass (2018)](https://arxiv.org/abs/1803.09574) is another interesting way to apply norse: \r\n```python\r\nimport torch\r\nfrom norse.torch import LSNNRecurrent\r\n# Recurrent LSNN network with 2 input neurons and 10 output neurons\r\nlayer = LSNNRecurrent(2, 10)\r\n# Generate data: 20 timesteps with 8 datapoints per batch for 2 neurons\r\ndata  = torch.zeros(20, 8, 2)\r\n# Tuple of (output spikes of shape (20, 8, 2), layer state)\r\noutput, new_state = layer(data)\r\n```\r\n\r\n## 3. Why Norse?\r\n\r\nNorse was created for two reasons: to 1) apply findings from decades of research in practical settings\r\nand to 2) accelerate our own research within bio-inspired learning.\r\n\r\nWe are passionate about Norse: we strive to follow best practices and promise to maintain this library for the\r\nsimple reason that we depend on it ourselves.\r\nWe have implemented a number of neuron models, synapse dynamics, encoding and decoding algorithms, \r\ndataset integrations, tasks, and examples.\r\nCombined with the PyTorch infrastructure and our high coding standards, we have found Norse to be an excellent tool for modelling *scaleable* experiments and [Norse is actively being used in research](https://norse.github.io/norse/papers.html).\r\n\r\nFinally, we are working to keep Norse as performant as possible. \r\nPreliminary benchmarks suggest that Norse [achieves excellent performance on small networks of up to ~5000 neurons per layer](https://github.com/norse/norse/tree/master/norse/benchmark). \r\nAided by the preexisting investment in scalable training and inference with PyTorch, Norse scales from a single laptop to several nodes on an HPC cluster with little effort.\r\nAs illustrated by our [PyTorch Lightning example task](https://norse.github.io/norse/tasks.html#mnist-in-pytorch-lightning).\r\n\r\n\r\n[Read more about Norse in our documentation](https://norse.github.io/norse/about.html).\r\n\r\n## 4. Similar work\r\nThe list of projects below serves to illustrate the state of the art, while explaining our own incentives to create and use norse.\r\n\r\n* [BindsNET](https://github.com/BindsNET/bindsnet) also builds on PyTorch and is explicitly targeted at machine learning tasks. It implements a Network abstraction with the typical 'node' and 'connection' notions common in spiking neural network simulators like nest.\r\n* [cuSNN](https://github.com/tudelft/cuSNN) is a C++ GPU-accelerated simulator for large-scale networks. The library focuses on CUDA and includes spike-time dependent plasicity (STDP) learning rules.\r\n* [decolle](https://github.com/nmi-lab/decolle-public) implements an online learning algorithm described in the paper [\"Synaptic Plasticity Dynamics for Deep Continuous Local Learning (DECOLLE)\"](https://arxiv.org/abs/1811.10766) by J. Kaiser, M. Mostafa and E. Neftci.\r\n* [GeNN](http://genn-team.github.io/genn/) compiles SNN network models to NVIDIA CUDA to achieve high-performing SNN model simulations.\r\n* [Long short-term memory Spiking Neural Networks (LSNN)](https://github.com/IGITUGraz/LSNN-official) is a tool from the University of Graaz for modelling LSNN cells in [Tensorflow](https://www.tensorflow.org/). The library focuses on a single neuron and gradient model.\r\n* [Nengo](https://www.nengo.ai/nengo-dl/introduction.html) is a neuron simulator, and Nengo-DL is a deep learning network simulator that optimised spike-based neural networks based on an approximation method suggested by [Hunsberger and Eliasmith (2016)](https://arxiv.org/abs/1611.05141).\r\n* [Nengo PyTorch](https://github.com/nengo/pytorch-spiking) a thin wrapper for PyTorch that adds a single voltage-only spiking model. The approach is independent from the Nengo framework.\r\n* [Neuron Simulation Toolkit (NEST)](https://nest-simulator.org) constructs and evaluates highly detailed simulations of spiking neural networks. This is useful in a medical/biological sense but maps poorly to large datasets and deep learning.\r\n* [PyNN](http://neuralensemble.org/docs/PyNN/) is a Python interface that allows you to define and simulate spiking neural network models on different backends (both software simulators and neuromorphic hardware). It does not currently provide mechanisms for optimisation or arbitrary synaptic plasticity.\r\n* [PySNN](https://github.com/BasBuller/PySNN/) is a PyTorch extension similar to Norse. Its approach to model building is slightly different than Norse in that the neurons are stateful.\r\n* [Rockpool](https://gitlab.com/aiCTX/rockpool) is a Python package developed by SynSense for training, simulating and deploying spiking neural networks. It offers both JAX and PyTorch primitives.\r\n* [Sinabs](https://gitlab.com/synsense/sinabs) is a PyTorch extension by [SynSense](https://www.synsense-neuromorphic.com/). It mainly focuses on convolutions and translation to neuromorphic hardware.\r\n* [SlayerPyTorch](https://github.com/bamsumit/slayerPytorch) is a **S**pike **LAY**er **E**rror **R**eassignment library, that focuses on solutions for the temporal credit problem of spiking neurons and a probabilistic approach to backpropagation errors. It includes support for the [Loihi chip](https://en.wikichip.org/wiki/intel/loihi).\r\n* [SNN toolbox](https://snntoolbox.readthedocs.io/en/latest/guide/intro.html) <q>automates the conversion of pre-trained analog to spiking neural networks</q>. The tool is solely for already trained networks and omits the (possibly platform specific) training.\r\n* [snnTorch](https://snntorch.readthedocs.io/en/latest/) is a simulator built on PyTorch, featuring several [introduction tutorials](https://snntorch.readthedocs.io/en/latest/tutorials/index.html) on deep learning with SNNs.\r\n* [SpikingJelly](https://github.com/fangwei123456/spikingjelly) is another PyTorch-based spiking neural network simulator. SpikingJelly uses stateful neurons. [Example of training a network on MNIST](https://spikingjelly.readthedocs.io/zh_CN/latest/clock_driven_en/3_fc_mnist.html).\r\n* [SpyTorch](https://github.com/fzenke/spytorch) presents a set of tutorials for training SNNs with the surrogate gradient approach SuperSpike by [F. Zenke, and S. Ganguli (2017)](https://arxiv.org/abs/1705.11146). Norse [implements the SuperSpike surrogate gradient function](https://github.com/norse/norse/blob/master/norse/torch/functional/superspike.py), but allows for other surrogate gradients and training approaches.\r\n* [s2net](https://github.com/romainzimmer/s2net) is based on the implementation presented in [SpyTorch](https://github.com/fzenke/spytorch), but implements convolutional layers as well. It also contains a demonstration how to use those primitives to train a model on the [Google Speech Commands dataset](https://arxiv.org/abs/1804.03209).\r\n\r\n\r\n## 5. Contributing\r\n\r\nContributions are warmly encouraged and always welcome. However, we also have high expectations around the code base so if you wish to contribute, please refer to our [contribution guidelines](contributing.md).\r\n\r\n## 6. Credits\r\n\r\nNorse is created by\r\n* [Christian Pehle](https://www.kip.uni-heidelberg.de/people/10110) (@GitHub [cpehle](https://github.com/cpehle/)), PostDoc at University of Heidelberg, Germany.\r\n* [Jens E. Pedersen](https://www.kth.se/profile/jeped) (@GitHub [jegp](https://github.com/jegp/)), doctoral student at KTH Royal Institute of Technology, Sweden.\r\n\r\nMore information about Norse can be found [in our documentation](https://norse.github.io/norse/about.html). The research has received funding from the EC Horizon 2020 Framework Programme under Grant Agreements 785907 and 945539 (HBP) and by the Deutsche Forschungsgemeinschaft (DFG, German Research Fundation) under Germany's Excellence Strategy EXC 2181/1 - 390900948 (the Heidelberg STRUCTURES Excellence Cluster).\r\n\r\n## 7. Citation\r\n\r\nIf you use Norse in your work, please cite it as follows:\r\n\r\n```BibTex\r\n@software{norse2021,\r\n  author       = {Pehle, Christian and\r\n                  Pedersen, Jens Egholm},\r\n  title        = {{Norse -  A deep learning library for spiking \r\n                   neural networks}},\r\n  month        = jan,\r\n  year         = 2021,\r\n  note         = {Documentation: https://norse.ai/docs/},\r\n  publisher    = {Zenodo},\r\n  version      = {0.0.7},\r\n  doi          = {10.5281/zenodo.4422025},\r\n  url          = {https://doi.org/10.5281/zenodo.4422025}\r\n}\r\n```\r\n\r\nNorse is actively applied and cited in the literature. We are keeping track of the papers cited by Norse [in our documentation](https://norse.github.io/norse/papers.html).\r\n\r\n## 8. License\r\n\r\nLGPLv3. See [LICENSE](LICENSE) for license details.\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/norse/norse",
    "keywords": "machine learning spiking neural networks",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "norse",
    "package_url": "https://pypi.org/project/norse/",
    "platform": null,
    "project_url": "https://pypi.org/project/norse/",
    "project_urls": {
      "Homepage": "http://github.com/norse/norse"
    },
    "release_url": "https://pypi.org/project/norse/1.0.0/",
    "requires_dist": [
      "numpy",
      "torch (>=1.9.0)",
      "torchvision (>=0.10.0)"
    ],
    "requires_python": "",
    "summary": "A library for deep learning with spiking neural networks",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16494434,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37dcf03c8e823d93791d1bcae4d82f987d540ec8d8737f351f2ef4999d1ab6d1",
          "md5": "fe9bcb8b0d62c92a87039382cb81c1ed",
          "sha256": "a67b0b35d4a188d884b715cefc156192fe0cfcb2ab834761b8dacddf38c2ea06"
        },
        "downloads": -1,
        "filename": "norse-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe9bcb8b0d62c92a87039382cb81c1ed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44942,
        "upload_time": "2019-11-20T16:08:15",
        "upload_time_iso_8601": "2019-11-20T16:08:15.717797Z",
        "url": "https://files.pythonhosted.org/packages/37/dc/f03c8e823d93791d1bcae4d82f987d540ec8d8737f351f2ef4999d1ab6d1/norse-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09257523711e2318647d0880d41a54a46e81c108090640ba547f29a6df40075a",
          "md5": "7b1c2d4f66f2f030c5bd02b594093ca4",
          "sha256": "98b17d8a0caad81268c6e3b98f6ec1938f50fd1ce3c52f6d21c5d0d8582cdaaa"
        },
        "downloads": -1,
        "filename": "norse-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7b1c2d4f66f2f030c5bd02b594093ca4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21404,
        "upload_time": "2019-11-20T16:08:18",
        "upload_time_iso_8601": "2019-11-20T16:08:18.254806Z",
        "url": "https://files.pythonhosted.org/packages/09/25/7523711e2318647d0880d41a54a46e81c108090640ba547f29a6df40075a/norse-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3715ec15a34565f2059241d3fbaebbf90501aa269fafa132f9623629eb7bcf0c",
          "md5": "c6c3e8ec12c275080830347f5de68b53",
          "sha256": "6f6837e84e75fd2e4648652d82e7b333b2c07c0b2866fb0d5234bde1b04187de"
        },
        "downloads": -1,
        "filename": "norse-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c6c3e8ec12c275080830347f5de68b53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25463,
        "upload_time": "2019-11-27T13:48:23",
        "upload_time_iso_8601": "2019-11-27T13:48:23.462732Z",
        "url": "https://files.pythonhosted.org/packages/37/15/ec15a34565f2059241d3fbaebbf90501aa269fafa132f9623629eb7bcf0c/norse-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80434f5c9e74f77267f41a7b34e92dd2315c82fb8f5c1f2ef053d799fce2680e",
          "md5": "1ba2e8a6eeb033b480a1c3e80acaf432",
          "sha256": "ff30db49bf6c3802bb033a239ea663a64a74570ac744e094a258e0494352cc79"
        },
        "downloads": -1,
        "filename": "norse-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ba2e8a6eeb033b480a1c3e80acaf432",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48981,
        "upload_time": "2020-02-25T20:04:42",
        "upload_time_iso_8601": "2020-02-25T20:04:42.003462Z",
        "url": "https://files.pythonhosted.org/packages/80/43/4f5c9e74f77267f41a7b34e92dd2315c82fb8f5c1f2ef053d799fce2680e/norse-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4fd16ea8f0c7e4c8aff0fc0ba8383daf53b929bfe6aee50814fbd4cad9e9131",
          "md5": "43d026648dbebdb014747f1a890f7c0b",
          "sha256": "45692a9f321fe65072075c21ccc03ecc30218d3593de6a213cf88fe9a5b92d06"
        },
        "downloads": -1,
        "filename": "norse-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "43d026648dbebdb014747f1a890f7c0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26401,
        "upload_time": "2020-02-25T20:04:43",
        "upload_time_iso_8601": "2020-02-25T20:04:43.452327Z",
        "url": "https://files.pythonhosted.org/packages/a4/fd/16ea8f0c7e4c8aff0fc0ba8383daf53b929bfe6aee50814fbd4cad9e9131/norse-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9f3c2e75b36f95a5dff3cc667e5809e582909cb2a9f257de3ef16e583b29f84",
          "md5": "8da634fa9a6a0092c6a95d2d9d69ab21",
          "sha256": "30b9884d675ed1ad6efc7cb01b666128a2bcf5a6f003e7ab938db03f6eb2fe9b"
        },
        "downloads": -1,
        "filename": "norse-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8da634fa9a6a0092c6a95d2d9d69ab21",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 68133,
        "upload_time": "2020-06-15T09:02:26",
        "upload_time_iso_8601": "2020-06-15T09:02:26.361574Z",
        "url": "https://files.pythonhosted.org/packages/b9/f3/c2e75b36f95a5dff3cc667e5809e582909cb2a9f257de3ef16e583b29f84/norse-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63bffef63c422a3dad442f58b1a1b514be30208eb8c6ae4470867b6fe486b815",
          "md5": "6f2bc2a2a66a8f464187084792e7674e",
          "sha256": "698a62520a9df87348ab497ce1d5ee55d298e397c9027a41faeeb5ea91a35202"
        },
        "downloads": -1,
        "filename": "norse-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6f2bc2a2a66a8f464187084792e7674e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41588,
        "upload_time": "2020-06-15T09:02:29",
        "upload_time_iso_8601": "2020-06-15T09:02:29.842381Z",
        "url": "https://files.pythonhosted.org/packages/63/bf/fef63c422a3dad442f58b1a1b514be30208eb8c6ae4470867b6fe486b815/norse-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52e19508da87b2b2d205ac5d7a319783acd16b816963e4e201ee41aa5c4b0269",
          "md5": "de1382ee3940f8f0f73f77f4209fcf42",
          "sha256": "07ac61e1db37497dd2fd2f99d06c5e718149a1c5d15e05f2dced888cf0954a2e"
        },
        "downloads": -1,
        "filename": "norse-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de1382ee3940f8f0f73f77f4209fcf42",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 95298,
        "upload_time": "2020-09-10T17:25:27",
        "upload_time_iso_8601": "2020-09-10T17:25:27.620779Z",
        "url": "https://files.pythonhosted.org/packages/52/e1/9508da87b2b2d205ac5d7a319783acd16b816963e4e201ee41aa5c4b0269/norse-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d57eb7326140296b0820b7a0549cf411b60c8e343f221663c691bd1c5a68074c",
          "md5": "c2a1bad56d83936bcc73e5934ebce11a",
          "sha256": "73ef30923d7ad25ec97b850a44b5ef7dde6a500c40e921f7be2fdf2747d97ecd"
        },
        "downloads": -1,
        "filename": "norse-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c2a1bad56d83936bcc73e5934ebce11a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 81853,
        "upload_time": "2020-12-21T15:06:39",
        "upload_time_iso_8601": "2020-12-21T15:06:39.065171Z",
        "url": "https://files.pythonhosted.org/packages/d5/7e/b7326140296b0820b7a0549cf411b60c8e343f221663c691bd1c5a68074c/norse-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85bac9ef2a84e193919146b25c7857a5be18f4531c6f6f499a2007e854132069",
          "md5": "0a132dd6525fd8760f73f9ba3a0f7468",
          "sha256": "2f4dd9394e39039d31eb8eaba801985cc932dc1c673ca1ccd750d92451cc71b9"
        },
        "downloads": -1,
        "filename": "norse-0.0.5.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "0a132dd6525fd8760f73f9ba3a0f7468",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 87899,
        "upload_time": "2020-12-21T22:51:51",
        "upload_time_iso_8601": "2020-12-21T22:51:51.170864Z",
        "url": "https://files.pythonhosted.org/packages/85/ba/c9ef2a84e193919146b25c7857a5be18f4531c6f6f499a2007e854132069/norse-0.0.5.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "555e31a5c0231ab887dd02b110a7c6164870f0dcbfb27a15c99bd1fc42248331",
          "md5": "8ad384e41568de055d735bfb6d6fd087",
          "sha256": "b61d917cff6534827ce72cb06aa46c6cd05f8a876a05344d4cd3f5764f1ea915"
        },
        "downloads": -1,
        "filename": "norse-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "8ad384e41568de055d735bfb6d6fd087",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 87199,
        "upload_time": "2021-02-01T00:03:12",
        "upload_time_iso_8601": "2021-02-01T00:03:12.196823Z",
        "url": "https://files.pythonhosted.org/packages/55/5e/31a5c0231ab887dd02b110a7c6164870f0dcbfb27a15c99bd1fc42248331/norse-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2ae6dbbc3ff223a814cdb86fe5451212fe9da6799bd00d2bf9cb7f7503ce179",
          "md5": "806c9d2cf21042c380d7d6811e94b84b",
          "sha256": "fee02707cd1676a57fe84185158002d5e1500d5383938f67e9c933228571f46c"
        },
        "downloads": -1,
        "filename": "norse-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "806c9d2cf21042c380d7d6811e94b84b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 108417,
        "upload_time": "2021-10-06T10:07:49",
        "upload_time_iso_8601": "2021-10-06T10:07:49.388889Z",
        "url": "https://files.pythonhosted.org/packages/d2/ae/6dbbc3ff223a814cdb86fe5451212fe9da6799bd00d2bf9cb7f7503ce179/norse-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cdf460ead49a7c4fcd0108a02614f44e8a0a0495fa3ca740ec0e96cc0f5b425",
          "md5": "cae982bc646294c676fd0ea404cb3a4b",
          "sha256": "aeea3bd08f47fcfe3b301f1190928dec482938956a1ab8ba568851deed94bda5"
        },
        "downloads": -1,
        "filename": "norse-0.0.7.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "cae982bc646294c676fd0ea404cb3a4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 109331,
        "upload_time": "2021-10-06T10:26:35",
        "upload_time_iso_8601": "2021-10-06T10:26:35.845794Z",
        "url": "https://files.pythonhosted.org/packages/2c/df/460ead49a7c4fcd0108a02614f44e8a0a0495fa3ca740ec0e96cc0f5b425/norse-0.0.7.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ad7d382ddd846686711fa7aac39b61240bcecbecce380f40c98f8ec7fd5bf3e",
          "md5": "8d6911a975a06ea56c67d6f4c1614d28",
          "sha256": "6a9b2cdb2135818154fb157b870b71a9b04beef1c88ac96bb2d808773056ce13"
        },
        "downloads": -1,
        "filename": "norse-1.0.0-cp37-cp37m-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8d6911a975a06ea56c67d6f4c1614d28",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 267576,
        "upload_time": "2023-01-20T00:10:28",
        "upload_time_iso_8601": "2023-01-20T00:10:28.070740Z",
        "url": "https://files.pythonhosted.org/packages/8a/d7/d382ddd846686711fa7aac39b61240bcecbecce380f40c98f8ec7fd5bf3e/norse-1.0.0-cp37-cp37m-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf36fe4cf7faac2766960b3a496899a612383ce74104e66cce5e0ec6eb2e528b",
          "md5": "133b93431c2058fb94fa61c23af7ed21",
          "sha256": "da950d96d8ce887c9cdfa8de4f0629c57266390f77db5923c298d57ef69187c7"
        },
        "downloads": -1,
        "filename": "norse-1.0.0-cp38-cp38-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "133b93431c2058fb94fa61c23af7ed21",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 267907,
        "upload_time": "2023-01-20T00:09:52",
        "upload_time_iso_8601": "2023-01-20T00:09:52.293003Z",
        "url": "https://files.pythonhosted.org/packages/cf/36/fe4cf7faac2766960b3a496899a612383ce74104e66cce5e0ec6eb2e528b/norse-1.0.0-cp38-cp38-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce868f32d063358e0f9f61b9759ec0be197f607ce29b6bc9cd3f6191b3b97b47",
          "md5": "6f4efd999dc226d2769bd8e89546f530",
          "sha256": "416075566a60dce199e3e022384134e46751a425f56922e56736882798c974d0"
        },
        "downloads": -1,
        "filename": "norse-1.0.0-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "6f4efd999dc226d2769bd8e89546f530",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 277110,
        "upload_time": "2023-01-20T00:08:57",
        "upload_time_iso_8601": "2023-01-20T00:08:57.028157Z",
        "url": "https://files.pythonhosted.org/packages/ce/86/8f32d063358e0f9f61b9759ec0be197f607ce29b6bc9cd3f6191b3b97b47/norse-1.0.0-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abb513ad4b84fd3881e8d48683be2d366ced1c9be99d442ae933895e0b4b4b75",
          "md5": "3ea5667d713d730d36059deba08644a7",
          "sha256": "0324d64698afd561a8d361cb88bc7b69206a7c250a6fcb79dfc944e06142a346"
        },
        "downloads": -1,
        "filename": "norse-1.0.0-cp39-cp39-macosx_11_0_x86_64.whl",
        "has_sig": false,
        "md5_digest": "3ea5667d713d730d36059deba08644a7",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 268155,
        "upload_time": "2023-01-20T00:14:39",
        "upload_time_iso_8601": "2023-01-20T00:14:39.942959Z",
        "url": "https://files.pythonhosted.org/packages/ab/b5/13ad4b84fd3881e8d48683be2d366ced1c9be99d442ae933895e0b4b4b75/norse-1.0.0-cp39-cp39-macosx_11_0_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f92978b59bb6b440f7d9d6f8d69bef2ecd1ecbaa0f268317af7a2162750b54fe",
          "md5": "ac20fcedc9291d4cb1a736bea4a26f4e",
          "sha256": "92f6bd0d97aa519ffcb605a25c4bda1ef1d949de8f87d0450eb1176ee7de69c9"
        },
        "downloads": -1,
        "filename": "norse-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ac20fcedc9291d4cb1a736bea4a26f4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 115563,
        "upload_time": "2023-01-20T00:08:58",
        "upload_time_iso_8601": "2023-01-20T00:08:58.627706Z",
        "url": "https://files.pythonhosted.org/packages/f9/29/78b59bb6b440f7d9d6f8d69bef2ecd1ecbaa0f268317af7a2162750b54fe/norse-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ad7d382ddd846686711fa7aac39b61240bcecbecce380f40c98f8ec7fd5bf3e",
        "md5": "8d6911a975a06ea56c67d6f4c1614d28",
        "sha256": "6a9b2cdb2135818154fb157b870b71a9b04beef1c88ac96bb2d808773056ce13"
      },
      "downloads": -1,
      "filename": "norse-1.0.0-cp37-cp37m-macosx_10_15_x86_64.whl",
      "has_sig": false,
      "md5_digest": "8d6911a975a06ea56c67d6f4c1614d28",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 267576,
      "upload_time": "2023-01-20T00:10:28",
      "upload_time_iso_8601": "2023-01-20T00:10:28.070740Z",
      "url": "https://files.pythonhosted.org/packages/8a/d7/d382ddd846686711fa7aac39b61240bcecbecce380f40c98f8ec7fd5bf3e/norse-1.0.0-cp37-cp37m-macosx_10_15_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf36fe4cf7faac2766960b3a496899a612383ce74104e66cce5e0ec6eb2e528b",
        "md5": "133b93431c2058fb94fa61c23af7ed21",
        "sha256": "da950d96d8ce887c9cdfa8de4f0629c57266390f77db5923c298d57ef69187c7"
      },
      "downloads": -1,
      "filename": "norse-1.0.0-cp38-cp38-macosx_10_15_x86_64.whl",
      "has_sig": false,
      "md5_digest": "133b93431c2058fb94fa61c23af7ed21",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": null,
      "size": 267907,
      "upload_time": "2023-01-20T00:09:52",
      "upload_time_iso_8601": "2023-01-20T00:09:52.293003Z",
      "url": "https://files.pythonhosted.org/packages/cf/36/fe4cf7faac2766960b3a496899a612383ce74104e66cce5e0ec6eb2e528b/norse-1.0.0-cp38-cp38-macosx_10_15_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce868f32d063358e0f9f61b9759ec0be197f607ce29b6bc9cd3f6191b3b97b47",
        "md5": "6f4efd999dc226d2769bd8e89546f530",
        "sha256": "416075566a60dce199e3e022384134e46751a425f56922e56736882798c974d0"
      },
      "downloads": -1,
      "filename": "norse-1.0.0-cp38-cp38-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "6f4efd999dc226d2769bd8e89546f530",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": null,
      "size": 277110,
      "upload_time": "2023-01-20T00:08:57",
      "upload_time_iso_8601": "2023-01-20T00:08:57.028157Z",
      "url": "https://files.pythonhosted.org/packages/ce/86/8f32d063358e0f9f61b9759ec0be197f607ce29b6bc9cd3f6191b3b97b47/norse-1.0.0-cp38-cp38-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "abb513ad4b84fd3881e8d48683be2d366ced1c9be99d442ae933895e0b4b4b75",
        "md5": "3ea5667d713d730d36059deba08644a7",
        "sha256": "0324d64698afd561a8d361cb88bc7b69206a7c250a6fcb79dfc944e06142a346"
      },
      "downloads": -1,
      "filename": "norse-1.0.0-cp39-cp39-macosx_11_0_x86_64.whl",
      "has_sig": false,
      "md5_digest": "3ea5667d713d730d36059deba08644a7",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": null,
      "size": 268155,
      "upload_time": "2023-01-20T00:14:39",
      "upload_time_iso_8601": "2023-01-20T00:14:39.942959Z",
      "url": "https://files.pythonhosted.org/packages/ab/b5/13ad4b84fd3881e8d48683be2d366ced1c9be99d442ae933895e0b4b4b75/norse-1.0.0-cp39-cp39-macosx_11_0_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f92978b59bb6b440f7d9d6f8d69bef2ecd1ecbaa0f268317af7a2162750b54fe",
        "md5": "ac20fcedc9291d4cb1a736bea4a26f4e",
        "sha256": "92f6bd0d97aa519ffcb605a25c4bda1ef1d949de8f87d0450eb1176ee7de69c9"
      },
      "downloads": -1,
      "filename": "norse-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ac20fcedc9291d4cb1a736bea4a26f4e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 115563,
      "upload_time": "2023-01-20T00:08:58",
      "upload_time_iso_8601": "2023-01-20T00:08:58.627706Z",
      "url": "https://files.pythonhosted.org/packages/f9/29/78b59bb6b440f7d9d6f8d69bef2ecd1ecbaa0f268317af7a2162750b54fe/norse-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}