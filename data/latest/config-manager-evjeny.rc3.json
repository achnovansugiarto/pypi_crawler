{
  "info": {
    "author": "evjeny",
    "author_email": "gkanafing@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# config_manager\n\n![Tests](https://github.com/evjeny/config_manager/actions/workflows/python-app.yml/badge.svg)\n![Release](https://img.shields.io/github/v/release/evjeny/config_manager)\n[![PyPI](https://img.shields.io/badge/PyPI-config_manager_evjeny-blue)](https://pypi.org/project/config-manager-evjeny)\n\nConfiguration manager for parsing from different sources\n\n## Installation\n\n```bash\npython -m pip install config-manager-evjeny\n```\n\n## Usage\n\nCreate class with config variables and inherit it from `config_manager.config.Config`.\nYou can define variables and their types or even define values.\nThen we can parse variables from different sources.\nFor example, this is [example_parser.py](example_parser.py):\n\n```python\nfrom config_manager.config import Config\nfrom config_manager.variable_parsers import ListType\n\n\nclass TestConfig(Config):\n    \"\"\"Config example with some variables of different types\"\"\"\n\n    name: str\n    age: int\n    is_useful: bool = False\n    parts: ListType[float]\n\n\nmy_config = TestConfig() \\\n    .parse_env(prefix=\"test_config_\") \\\n    .parse_json(json_path=\"test_config.json\") \\\n    .parse_arguments(\"TestConfig parser\")\n\nprint(my_config)\n```\n\nIf we run it:\n\n```bash\ntest_config_age=33 python example_parser.py \\\n  --name hello \\\n  --is_useful false \\\n  --parts \"[0.25, 0.5, 0.75]\"\n```\n\nIt will output something like and all the *primitive* types will be parsed correctly:\n\n```\nage = 33\nis_useful = False\nname = hello\nparts = [0.25, 0.5, 0.75]\n```\n\n## Type details\n\n### `str`, `int` and `float`\n\nFor `str`, `int` and `float` casting is the same as builtin functions.\n\n### `bool`\n\nGenerally all not empty containers (even string `\"false\"`)\ncast to `bool` would return `True`.\n\nThus, there is a `BoolParser` that casts value to `True` in one of these cases:\n* variable is subclass of `str` and it's value one of (in any case):\n  * `\"yes\"`\n  * `\"true\"`\n  * `\"1\"`\n  * `\"on\"`\n* in other cases default `bool` call used\n\n```python\nfrom config_manager.variable_parsers import BoolParser\n\nparser = BoolParser()\n\nassert parser(\"yes\") == True\nassert parser(\"yES\") == True\nassert parser(\"tRuE\") == True\nassert parser(\"1\") == True\nassert parser(\"on\") == True\n\nassert parser(\"no\") == False\nassert parser(\"FaLsE\") == False\n\nassert parser(1.0) == True\nassert parser(0.0) == False\nassert parser(1) == True\nassert parser(0) == False\nassert parser(True) == True\nassert parser(False) == False\n```\n\n### `ListType`\n\nAs it is impossible to get type from `typing.List[T]`\n(plus this annotation removed in Python 3.9) there is a `ListType`.\nIt can be used with any parseable type, so every element will be cast\nto target type. For example:\n\n```python\nfrom config_manager.variable_parsers import ListType\n\n# shallow lists\nassert ListType[int]([\"1\", \"2\", \"3\"]) == [1, 2, 3]\nassert ListType[str]([1.0, -213.5122, 52.123]) == [\"1.0\", \"-213.5122\", \"52.123\"]\nassert ListType[int](\"[1, 2, 3]\") == [1, 2, 3]\n```\n\nAll the parse sources provide different ways to define list, so there they are:\n* in `predefine` and `json` case simply assign any python list to variable\n* in `environment` and `argument` cases every list is parsed from string `[item_1, item_2, ...]`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/evjeny/config_manager",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "config-manager-evjeny",
    "package_url": "https://pypi.org/project/config-manager-evjeny/",
    "platform": "",
    "project_url": "https://pypi.org/project/config-manager-evjeny/",
    "project_urls": {
      "Homepage": "https://github.com/evjeny/config_manager"
    },
    "release_url": "https://pypi.org/project/config-manager-evjeny/0.3.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Small config manager for parsing configs from different sources",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12830075,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efe1bf3d45c93b6efd53ce4809b4a9cbc1a3d38f612a2769876179d5e47d5ce1",
          "md5": "06aa50e9c401f4113380c8eadcf8b62f",
          "sha256": "2c4cb96d2c2a82038924ad1a55b19899e61bc95226185a87143f778b90861141"
        },
        "downloads": -1,
        "filename": "config_manager_evjeny-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06aa50e9c401f4113380c8eadcf8b62f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2565,
        "upload_time": "2022-01-23T18:00:23",
        "upload_time_iso_8601": "2022-01-23T18:00:23.254483Z",
        "url": "https://files.pythonhosted.org/packages/ef/e1/bf3d45c93b6efd53ce4809b4a9cbc1a3d38f612a2769876179d5e47d5ce1/config_manager_evjeny-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2aabe439d24413c795675e79a905db06fdd822692e23f3a434caeea4a021ff38",
          "md5": "c6d9a0fb1532a35600b8d661f36de358",
          "sha256": "6e1c31a1c7955f764d17aec87b9db893fed94326fb0761c434b6d1cf855ab571"
        },
        "downloads": -1,
        "filename": "config_manager_evjeny-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c6d9a0fb1532a35600b8d661f36de358",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2251,
        "upload_time": "2022-01-23T18:00:24",
        "upload_time_iso_8601": "2022-01-23T18:00:24.909054Z",
        "url": "https://files.pythonhosted.org/packages/2a/ab/e439d24413c795675e79a905db06fdd822692e23f3a434caeea4a021ff38/config_manager_evjeny-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "788496300f6b393ccd03b7cd2a3a8b1d1cf596c00f78c5eee4b22dfc27c99e04",
          "md5": "de14342612afe2e29ead8b43dd85bcef",
          "sha256": "d5477b7de4289cb7693066fc87854a072727d635942a120970de7dd232e2f0bc"
        },
        "downloads": -1,
        "filename": "config_manager_evjeny-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de14342612afe2e29ead8b43dd85bcef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4019,
        "upload_time": "2022-01-24T00:39:34",
        "upload_time_iso_8601": "2022-01-24T00:39:34.782527Z",
        "url": "https://files.pythonhosted.org/packages/78/84/96300f6b393ccd03b7cd2a3a8b1d1cf596c00f78c5eee4b22dfc27c99e04/config_manager_evjeny-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2570737bb2d762289a97479cd58e4602cf674f4fe2aa68e09f7a1cfb5ccd039a",
          "md5": "b51ae5e3f7da3d6b294ce6f421adcd94",
          "sha256": "256ed0b71aebd64e27b0de5e37473acb151242f5d14b9e5ace9ffe74067e573c"
        },
        "downloads": -1,
        "filename": "config_manager_evjeny-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b51ae5e3f7da3d6b294ce6f421adcd94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3521,
        "upload_time": "2022-01-24T00:39:36",
        "upload_time_iso_8601": "2022-01-24T00:39:36.175908Z",
        "url": "https://files.pythonhosted.org/packages/25/70/737bb2d762289a97479cd58e4602cf674f4fe2aa68e09f7a1cfb5ccd039a/config_manager_evjeny-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d76cdf1cd62736e6911610b5e18624ffd0cb974bbd21e9c0312f0e8310195084",
          "md5": "d76610494fd033f0a106781eab02ec95",
          "sha256": "f35cfef01607f8d06ab1a6276419dc6eb79c0dc57ce8f46721d684a75c50cd0c"
        },
        "downloads": -1,
        "filename": "config_manager_evjeny-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d76610494fd033f0a106781eab02ec95",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5168,
        "upload_time": "2022-02-08T20:07:08",
        "upload_time_iso_8601": "2022-02-08T20:07:08.891822Z",
        "url": "https://files.pythonhosted.org/packages/d7/6c/df1cd62736e6911610b5e18624ffd0cb974bbd21e9c0312f0e8310195084/config_manager_evjeny-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b246be29afc711ff63550637770ee58092dea1002f1f2bb6eed7df80ab971a3",
          "md5": "7767c8e67e59775a7767c0248abd4c5d",
          "sha256": "9ecef1041773c01cf9d1d5c3a8335a5c2abd762c27e340db454c27a3816978b1"
        },
        "downloads": -1,
        "filename": "config_manager_evjeny-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7767c8e67e59775a7767c0248abd4c5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4414,
        "upload_time": "2022-02-08T20:07:10",
        "upload_time_iso_8601": "2022-02-08T20:07:10.325669Z",
        "url": "https://files.pythonhosted.org/packages/4b/24/6be29afc711ff63550637770ee58092dea1002f1f2bb6eed7df80ab971a3/config_manager_evjeny-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d76cdf1cd62736e6911610b5e18624ffd0cb974bbd21e9c0312f0e8310195084",
        "md5": "d76610494fd033f0a106781eab02ec95",
        "sha256": "f35cfef01607f8d06ab1a6276419dc6eb79c0dc57ce8f46721d684a75c50cd0c"
      },
      "downloads": -1,
      "filename": "config_manager_evjeny-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d76610494fd033f0a106781eab02ec95",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 5168,
      "upload_time": "2022-02-08T20:07:08",
      "upload_time_iso_8601": "2022-02-08T20:07:08.891822Z",
      "url": "https://files.pythonhosted.org/packages/d7/6c/df1cd62736e6911610b5e18624ffd0cb974bbd21e9c0312f0e8310195084/config_manager_evjeny-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4b246be29afc711ff63550637770ee58092dea1002f1f2bb6eed7df80ab971a3",
        "md5": "7767c8e67e59775a7767c0248abd4c5d",
        "sha256": "9ecef1041773c01cf9d1d5c3a8335a5c2abd762c27e340db454c27a3816978b1"
      },
      "downloads": -1,
      "filename": "config_manager_evjeny-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7767c8e67e59775a7767c0248abd4c5d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4414,
      "upload_time": "2022-02-08T20:07:10",
      "upload_time_iso_8601": "2022-02-08T20:07:10.325669Z",
      "url": "https://files.pythonhosted.org/packages/4b/24/6be29afc711ff63550637770ee58092dea1002f1f2bb6eed7df80ab971a3/config_manager_evjeny-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}