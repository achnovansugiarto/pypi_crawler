{
  "info": {
    "author": "Greg Bock",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# unitmeasure: Swift units and measurement in Python\n\n**unitmeasure** is a simple Python library that tries\nto implement the features of Swift's [Units and Measurement\nframework.](https://developer.apple.com/documentation/foundation/units_and_measurement)\n\nWith **unitmeasure**, you can label numeric quantities \nwith physical dimensions and convert between related units.\n\n\n## Contributing\n\nFor anyone looking to contribute, you can look at doing any of the following:\n* Submit bugs and feature requests\n* Review any documentation and create pull requests for anything from typos to new content.\n\n## Installation\n\n**unitmeasure** can be installed from PyPI:\n\n```\npip install unitmeasure\n```\n\n## Overview\n\n### Base available classes\n   The basic available classes should match the classes found in swift.\n\n* `Unit` - represents a unit that has a `symbol` to describe it.\n* `Dimension` - subclass of `Unit` and has multiple child classes defining different dimensions.\n* `Measurement` - Immutable. wraps a number with a unit. Supports comparison operators, addition and subtraction with another measurement, and multiplication and division with a scalar value.\n\n### Supported Units\nAll supported units can be found in the units sub directory.\nAny unit class can be imported directly from **unitmeasure**.\n\n## Examples\n\n> for more detailed usage see unit tests.\n\n### Create a measurement\n```python\nimport unitmeasure\n\ndur = unitmeasure.Measurement(value=2,\n                              unit=unitmeasure.UnitDuration.minutes)\nprint(dur)\n```\n\n### Convert a measurement\n```python\nimport unitmeasure\n\ndur = unitmeasure.Measurement(value=2,\n                              unit=unitmeasure.UnitDuration.minutes)\n\ndur.convert(unitmeasure.UnitDuration.seconds)\nprint(dur)\n```\n\n### Convert a measurement and return new object\n```python\nimport unitmeasure\n\nminutes = unitmeasure.Measurement(value=2,\n                             unit=unitmeasure.UnitDuration.minutes)\n\nseconds = minutes.converted(unitmeasure.UnitDuration.seconds)\nprint(minutes)\nprint(seconds)\n```\n\n### add measurements\n```python\nimport unitmeasure\n\nminutes = unitmeasure.Measurement(value=2,\n                             unit=unitmeasure.UnitDuration.minutes)\n\nseconds = minutes.converted(unitmeasure.UnitDuration.seconds)\n# adding measurements will automagically convert the measurement  into its base unit.\nprint(minutes + seconds)\n```\n\n### Create a custom Unit\n```python\nimport unitmeasure\n\ncustomLengthUnit = unitmeasure.UnitLength(symbol=\"FLARB\", coefficient=2.0)\n\ncustomLength = Measurement(value=1, unit=customLengthUnit)\n\nmeters = customLength.converted(to: unitmeasure.UnitLength.meters)\n```\n\n### Converting to and from JSON\n\n> NOTE: JSON struct should match swift's so it should be possible to import json data to/from swift.\n```python\nimport unitmeasure\n\nseconds = unitmeasure.Measurement(value=2,\n                             unit=unitmeasure.UnitDuration.seconds)\n\nwith open(\"measurement.json\", \"w\") as f:\n    f.write(unitmeasure.to_json(seconds))\n\nwith open(\"measurement.json\", \"r\") as f:\n    # if a dimension is not specified you will end up with\n    # a measurement that has a basic unit (only a symbol)\n    loaded_measurement = unitmeasure.from_json(f.read(), dimension=unitmeasure.UnitDuration)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gabock/unitmeasure",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "unitmeasure",
    "package_url": "https://pypi.org/project/unitmeasure/",
    "platform": "",
    "project_url": "https://pypi.org/project/unitmeasure/",
    "project_urls": {
      "Bug Tracker": "https://github.com/gabock/unitmeasure/issues",
      "Homepage": "https://github.com/gabock/unitmeasure"
    },
    "release_url": "https://pypi.org/project/unitmeasure/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python units and measurements",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11683920,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3681f19ce6313da72ca28f7dd4ed70937c21f829e30fbb71ddc767ee2496b7bf",
          "md5": "db4b201427476531f3f877b004b2e2c4",
          "sha256": "dff1ecb687fd376442d7fc11c001cb5b0821570aa297d1c6e43b4975c874f8c1"
        },
        "downloads": -1,
        "filename": "unitmeasure-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db4b201427476531f3f877b004b2e2c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23149,
        "upload_time": "2021-10-11T01:51:43",
        "upload_time_iso_8601": "2021-10-11T01:51:43.025738Z",
        "url": "https://files.pythonhosted.org/packages/36/81/f19ce6313da72ca28f7dd4ed70937c21f829e30fbb71ddc767ee2496b7bf/unitmeasure-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99eefe14afcc92813d6930947a8e519cc800072725b743f3204d4813544a79ef",
          "md5": "19b892182b6464502d7aa88902c91a8c",
          "sha256": "7fd3f93785f3fdbc10897f80772cc8644bd32dc77e164d2e749ef8344c54a0e6"
        },
        "downloads": -1,
        "filename": "unitmeasure-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "19b892182b6464502d7aa88902c91a8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14122,
        "upload_time": "2021-10-11T01:51:44",
        "upload_time_iso_8601": "2021-10-11T01:51:44.530563Z",
        "url": "https://files.pythonhosted.org/packages/99/ee/fe14afcc92813d6930947a8e519cc800072725b743f3204d4813544a79ef/unitmeasure-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3681f19ce6313da72ca28f7dd4ed70937c21f829e30fbb71ddc767ee2496b7bf",
        "md5": "db4b201427476531f3f877b004b2e2c4",
        "sha256": "dff1ecb687fd376442d7fc11c001cb5b0821570aa297d1c6e43b4975c874f8c1"
      },
      "downloads": -1,
      "filename": "unitmeasure-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "db4b201427476531f3f877b004b2e2c4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 23149,
      "upload_time": "2021-10-11T01:51:43",
      "upload_time_iso_8601": "2021-10-11T01:51:43.025738Z",
      "url": "https://files.pythonhosted.org/packages/36/81/f19ce6313da72ca28f7dd4ed70937c21f829e30fbb71ddc767ee2496b7bf/unitmeasure-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99eefe14afcc92813d6930947a8e519cc800072725b743f3204d4813544a79ef",
        "md5": "19b892182b6464502d7aa88902c91a8c",
        "sha256": "7fd3f93785f3fdbc10897f80772cc8644bd32dc77e164d2e749ef8344c54a0e6"
      },
      "downloads": -1,
      "filename": "unitmeasure-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "19b892182b6464502d7aa88902c91a8c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14122,
      "upload_time": "2021-10-11T01:51:44",
      "upload_time_iso_8601": "2021-10-11T01:51:44.530563Z",
      "url": "https://files.pythonhosted.org/packages/99/ee/fe14afcc92813d6930947a8e519cc800072725b743f3204d4813544a79ef/unitmeasure-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}