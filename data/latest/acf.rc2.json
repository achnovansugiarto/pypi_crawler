{
  "info": {
    "author": "Jan Cervenka",
    "author_email": "jan.cervenka@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Acf\n\n[1]: https://dl.acm.org/doi/10.1109/ICDM.2008.22\n\n*A lightweight recommender engine for implicit feedback datasets*\n\n![PyPI](https://badge.fury.io/py/acf.svg)\n![Test](https://github.com/jancervenka/acf/actions/workflows/test.yml/badge.svg)\n![Publish](https://github.com/jancervenka/acf/actions/workflows/publish.yml/badge.svg)\n\nThe package implements an algorithm described in\n[Collaborative Filtering for Implicit Feedback Datasets][1] paper. \nThe algorithm is based on the following ideas:\n\n* using collaborative filtering with latent factors\n* transforming feedback observations into binary preferences\n  with associated confidence levels\n* using alternating least sqaures to compute the matrix factorization\n\n## Install\n\nThe package requires Python `3.7` or newer, the only dependencies are\n`numpy` and `pandas`. To install it, run\n\n```bash\npip install acf\n```\n\n## Usage\n\nThe following example shows how to train a model and compute predictions.\n\n```python\nimport acf\nimport pandas as pd\n\n# assuming the data are in the following format:\n# | user_id | item_id | feedback |\n# |---------|---------|----------|\n# | 2491    | 129     | 2        |\n\ninteractions = pd.read_csv('interactions.csv')\n\nengine = acf.Engine(reg_lambda=1, alpha=35, n_factors=2, random_state=0)\n\nengine.fit(interactions,\n           user_column='user_id',\n           item_column='item_id',\n           feedback_column='feedback',\n           n_iter=20,\n           n_jobs=4)\n\n# get the best 20 recommendations\nprediction = engine.predict(user=2491, top_n=20)\n\n# to print training loss value at every iteration\nprint(engine.loss)\n```\n\n### Model Evaluation\n\nFor performance evaluation, the package offers `metrics.mean_rank`\nfunction that implements \"mean rank\" metric as defined by equation\n8 in the [paper][1].\n\nThe metric is a weighted mean of percentile-ranked recommendations\n(`rank_ui = 0` says that item `i` is the first to be recommended for\nuser `u` and item `j` with `rank_uj = 1` is the last to be recommended)\nwhere the weights are the actual feedback values from `R` user-item matrix.\n\n```python\ninteractions_test = pd.read_csv('intercations_test.csv')\n\nprint(acf.metrics.mean_rank(interactions=interactions_test,\n                            user_column='user_id',\n                            item_column='item_id'\n                            feedback_column='feedback',\n                            engine=engine))\n```\n\n### Model Persistence\n\nTrained model can be serialized and stored using `joblib` or `pickle`.\n\nTo store a model:\n\n```python\nwith open('engine.joblib', 'wb') as f:\n    joblib.dump(engine, f)\n```\n\nTo load a model:\n\n```python\nwith open('engine.joblib', 'rb') as f:\n    engine = joblib.load(f)\n```\n\n## Public API\n\n### `acf.Engine`\n\n```python\nacf.core.computation.Engine(reg_lambda=0.1, alpha=40,\n                            n_factors=10, random_state=None):\n```\n\nClass exposing the recommender.\n\n* `reg_lambda`: regularization strength\n* `alpha`: gain parameter in feedback-confidence transformation \n           `c_ui = 1 + alpha * r_ui`\n* `n_factors`: number of latent factors\n* `random_state`: initial RNG state\n\n__Properties:__\n\n* `user_factors`: user factor matrix\n* `item_factors`: item factor matrix\n* `loss`: training loss history\n\n__Methods:__\n\n```python\nEngine.fit(interactions, user_column, item_column,\n           feedback_column, n_iter=20, n_jobs=1)\n```\n\nTrains the model.\n\n* `interactions`: dataframe containing user-item feedbacks\n* `user_column`: name of the column containing user ids\n* `item_column`: name of the column containing item ids\n* `feedback_column`: name of the column containing feedback values\n* `n_iter`: number of alternating least squares iteration\n* `n_jobs`: number of parallel jobs\n\n```python\nEngine.predict(user, top_n=None)\n```\n\nPredicts the recommendation.\n\n* `user`: user identification for whom the prediction is computed\n* `top_n`: if not `None`, only the besr n items are included in the result\n\n__Returns:__ predicted recommendation score for each item as `pandas.Series`\n\n### `acf.metrics.mean_rank`\n\n```python\nacf.core.metrics.mean_rank(interactions, user_column, item_column,\n                           feedback_column, engine)\n```\n\nComputes mean rank evaluation.\n\n* `interactions`: dataframe containing user-item feedbacks\n* `user_column`: name of the column containing user ids\n* `item_column`: name of the column containing item ids\n* `feedback_column`: name of the column containing feedback values\n* `engine`: trained `acf.Engine` instance\n\n__Returns:__ computed value\n\n## Tests\n\nTests can be executed by `pytest` as\n\n```bash\npython -m pytest acf/tests\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "acf",
    "package_url": "https://pypi.org/project/acf/",
    "platform": "",
    "project_url": "https://pypi.org/project/acf/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/acf/0.2.3/",
    "requires_dist": [
      "pandas (>=1.0)",
      "numpy (>=1.16)"
    ],
    "requires_python": ">=3.7",
    "summary": "Lightweight recommender engine",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11668645,
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cce8949ceb40746ebda4b1d4cc9dd30892f017b54b2c38bdeb778ac045efff5d",
          "md5": "4cf8a399fc2687ebad3c2ec6e98503fb",
          "sha256": "4a9a899170c5053dbbbc424edc7d955f02da53efd179caef612785d5d838df78"
        },
        "downloads": -1,
        "filename": "acf-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4cf8a399fc2687ebad3c2ec6e98503fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14584,
        "upload_time": "2021-07-29T11:21:17",
        "upload_time_iso_8601": "2021-07-29T11:21:17.886644Z",
        "url": "https://files.pythonhosted.org/packages/cc/e8/949ceb40746ebda4b1d4cc9dd30892f017b54b2c38bdeb778ac045efff5d/acf-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "891dfdc9df3541e6e8f41bfbc4b886443182145cc2dee24c3f7da24333acb986",
          "md5": "edc92fa00b27b33ce3bc5399f1884c4e",
          "sha256": "32875a3e7f43c753cba8e45cfc8ae84ecb71970f4d8155facd4c83f70b374ba8"
        },
        "downloads": -1,
        "filename": "acf-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "edc92fa00b27b33ce3bc5399f1884c4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11878,
        "upload_time": "2021-07-29T11:21:19",
        "upload_time_iso_8601": "2021-07-29T11:21:19.351107Z",
        "url": "https://files.pythonhosted.org/packages/89/1d/fdc9df3541e6e8f41bfbc4b886443182145cc2dee24c3f7da24333acb986/acf-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4741a4e70c2e9a5e08f1e731c8f8580c1101af23845b2e295f4ed4ff2b985d2",
          "md5": "feb6bf81cbdf77676272c2892e83124f",
          "sha256": "7b752efd531ea636344183b8c631e558040413a72950f48e587727e6c8a6f405"
        },
        "downloads": -1,
        "filename": "acf-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "feb6bf81cbdf77676272c2892e83124f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16300,
        "upload_time": "2021-10-08T19:35:46",
        "upload_time_iso_8601": "2021-10-08T19:35:46.109189Z",
        "url": "https://files.pythonhosted.org/packages/c4/74/1a4e70c2e9a5e08f1e731c8f8580c1101af23845b2e295f4ed4ff2b985d2/acf-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c1e07a8e5fddc23aad5b7d735ded9a937bbe7a694ad70602bfc65a8e266c012",
          "md5": "de049a98e004f16c0d6b58c1eccc86f0",
          "sha256": "60ca033e988736728c2d95051f42b09ae4625030fec1aab7d8c32eb27a0d7880"
        },
        "downloads": -1,
        "filename": "acf-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "de049a98e004f16c0d6b58c1eccc86f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13749,
        "upload_time": "2021-10-08T19:35:47",
        "upload_time_iso_8601": "2021-10-08T19:35:47.996879Z",
        "url": "https://files.pythonhosted.org/packages/7c/1e/07a8e5fddc23aad5b7d735ded9a937bbe7a694ad70602bfc65a8e266c012/acf-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4741a4e70c2e9a5e08f1e731c8f8580c1101af23845b2e295f4ed4ff2b985d2",
        "md5": "feb6bf81cbdf77676272c2892e83124f",
        "sha256": "7b752efd531ea636344183b8c631e558040413a72950f48e587727e6c8a6f405"
      },
      "downloads": -1,
      "filename": "acf-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "feb6bf81cbdf77676272c2892e83124f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 16300,
      "upload_time": "2021-10-08T19:35:46",
      "upload_time_iso_8601": "2021-10-08T19:35:46.109189Z",
      "url": "https://files.pythonhosted.org/packages/c4/74/1a4e70c2e9a5e08f1e731c8f8580c1101af23845b2e295f4ed4ff2b985d2/acf-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c1e07a8e5fddc23aad5b7d735ded9a937bbe7a694ad70602bfc65a8e266c012",
        "md5": "de049a98e004f16c0d6b58c1eccc86f0",
        "sha256": "60ca033e988736728c2d95051f42b09ae4625030fec1aab7d8c32eb27a0d7880"
      },
      "downloads": -1,
      "filename": "acf-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "de049a98e004f16c0d6b58c1eccc86f0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13749,
      "upload_time": "2021-10-08T19:35:47",
      "upload_time_iso_8601": "2021-10-08T19:35:47.996879Z",
      "url": "https://files.pythonhosted.org/packages/7c/1e/07a8e5fddc23aad5b7d735ded9a937bbe7a694ad70602bfc65a8e266c012/acf-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}