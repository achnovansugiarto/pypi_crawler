{
  "info": {
    "author": "Hideo Hattori",
    "author_email": "hhatto.jp@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "aiogrn\n======\n\nasyncio Groonga_ Client.\n\n.. _Groonga: http://groonga.org/\n\nRequirements\n------------\n* Python3.5+\n\nUsage\n-----\n\nGQTP\n~~~~\n\n.. code-block:: python\n\n    import asyncio\n    from aiogrn.client import GroongaClient\n\n    async def fetch(grn, cmd, **kwargs):\n        ret = await grn.call(cmd, **kwargs)\n        print(ret)\n\n    loop = asyncio.get_event_loop()\n    grn = GroongaClient(host='localhost', port=10043, protocol='gqtp', loop=loop)\n    tasks = [\n            asyncio.ensure_future(fetch(grn, 'status')),\n            asyncio.ensure_future(fetch(grn, 'select', table='Foo')),\n            asyncio.ensure_future(fetch(grn, 'status'))]\n    loop.run_until_complete(asyncio.gather(*tasks))\n    loop.close()\n\n\nHTTP\n~~~~\n\n.. code-block:: python\n\n    import asyncio\n    from aiogrn.client import GroongaClient\n\n    async def fetch(grn, cmd, **kwargs):\n        ret = await grn.call(cmd, **kwargs)\n        print(ret)\n\n    loop = asyncio.get_event_loop()\n    grn = GroongaClient(loop=loop)\n    tasks = [\n            asyncio.ensure_future(fetch(grn, 'status')),\n            asyncio.ensure_future(fetch(grn, 'select', table='Foo')),\n            asyncio.ensure_future(fetch(grn, 'status'))]\n    loop.run_until_complete(asyncio.gather(*tasks))\n    loop.close()",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hhatto/aiogrn",
    "keywords": "asyncio groonga http gqtp",
    "license": "MIT License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "aiogrn",
    "package_url": "https://pypi.org/project/aiogrn/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/aiogrn/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/hhatto/aiogrn"
    },
    "release_url": "https://pypi.org/project/aiogrn/0.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "asyncio Groonga Client library",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2426144,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe2ce2bf5e83d38945947ccbbe83b19beb1575c89bec2abd0c5213237505c69c",
          "md5": "504d83f0597cdc229662350e730ebad4",
          "sha256": "61a8ae0ba54105c11fdcb1b448afdbcf1e1d11887a0f3f8e61b10b2605d216d6"
        },
        "downloads": -1,
        "filename": "aiogrn-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "504d83f0597cdc229662350e730ebad4",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "requires_python": null,
        "size": 4101,
        "upload_time": "2016-10-27T12:54:11",
        "upload_time_iso_8601": "2016-10-27T12:54:11.938071Z",
        "url": "https://files.pythonhosted.org/packages/fe/2c/e2bf5e83d38945947ccbbe83b19beb1575c89bec2abd0c5213237505c69c/aiogrn-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1775da60c5155df0ec2e736eb65e0eddcadf01c2f40a649510d4ebbe2fab4023",
          "md5": "ec9dcee6e79046ad406c48a45d9ffa89",
          "sha256": "a7a28adcf423f7e6f18a87ecf0a2b7cf5861a1136be2e1adb11e3bbfe8fc21ea"
        },
        "downloads": -1,
        "filename": "aiogrn-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ec9dcee6e79046ad406c48a45d9ffa89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3232,
        "upload_time": "2016-10-27T12:54:08",
        "upload_time_iso_8601": "2016-10-27T12:54:08.609150Z",
        "url": "https://files.pythonhosted.org/packages/17/75/da60c5155df0ec2e736eb65e0eddcadf01c2f40a649510d4ebbe2fab4023/aiogrn-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe2ce2bf5e83d38945947ccbbe83b19beb1575c89bec2abd0c5213237505c69c",
        "md5": "504d83f0597cdc229662350e730ebad4",
        "sha256": "61a8ae0ba54105c11fdcb1b448afdbcf1e1d11887a0f3f8e61b10b2605d216d6"
      },
      "downloads": -1,
      "filename": "aiogrn-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "504d83f0597cdc229662350e730ebad4",
      "packagetype": "bdist_wheel",
      "python_version": "3.5",
      "requires_python": null,
      "size": 4101,
      "upload_time": "2016-10-27T12:54:11",
      "upload_time_iso_8601": "2016-10-27T12:54:11.938071Z",
      "url": "https://files.pythonhosted.org/packages/fe/2c/e2bf5e83d38945947ccbbe83b19beb1575c89bec2abd0c5213237505c69c/aiogrn-0.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1775da60c5155df0ec2e736eb65e0eddcadf01c2f40a649510d4ebbe2fab4023",
        "md5": "ec9dcee6e79046ad406c48a45d9ffa89",
        "sha256": "a7a28adcf423f7e6f18a87ecf0a2b7cf5861a1136be2e1adb11e3bbfe8fc21ea"
      },
      "downloads": -1,
      "filename": "aiogrn-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ec9dcee6e79046ad406c48a45d9ffa89",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3232,
      "upload_time": "2016-10-27T12:54:08",
      "upload_time_iso_8601": "2016-10-27T12:54:08.609150Z",
      "url": "https://files.pythonhosted.org/packages/17/75/da60c5155df0ec2e736eb65e0eddcadf01c2f40a649510d4ebbe2fab4023/aiogrn-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}