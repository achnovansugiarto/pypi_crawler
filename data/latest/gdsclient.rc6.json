{
  "info": {
    "author": "Neo4j",
    "author_email": "team-gds@neo4j.org",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Database",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development",
      "Typing :: Typed"
    ],
    "description": "# gdsclient\n\n`gdsclient` is a Python wrapper API for operating and working with the [Neo4j Graph Data Science (GDS) library](https://github.com/neo4j/graph-data-science).\nIt enables users to write pure Python code to project graphs, run algorithms, and define and use machine learning pipelines in GDS.\n\nThe API is designed to mimic the GDS Cypher procedure API in Python code.\nIt abstracts the necessary operations of the [Neo4j Python driver](https://neo4j.com/docs/python-manual/current/) to offer a simpler surface.\n\nPlease leave any feedback as issues on [the source repository](https://github.com/neo4j/gdsclient).\nHappy coding!\n\n\n## NOTE\n\nThis is a work in progress and some GDS features are known to be missing or not working properly (see [Known limitations](#known-limitations) below).\nFurther, this library targets GDS versions 2.0+ (not yet released) and as such may not work with older versions.\n\n\n## Installation\n\nTo install the latest deployed version of `gdsclient`, simply run:\n\n```bash\npip install gdsclient\n```\n\n\n## Usage\n\nWhat follows is a high level description of some of the operations supported by `gdsclient`.\nFor extensive documentation of all operations supported by GDS, please refer to the [GDS Manual](https://neo4j.com/docs/graph-data-science/current/).\n\nExtensive end-to-end examples in Jupyter ready-to-run notebooks can be found in the [`examples` source directory](https://github.com/neo4j/gdsclient/tree/main/examples):\n\n* [Computing similarities with kNN based on FastRP embeddings](https://github.com/neo4j/gdsclient/tree/main/examples/fastrp-and-knn.ipynb)\n\n\n### Imports and setup\n\nThe library wraps the [Neo4j Python driver](https://neo4j.com/docs/python-manual/current/) with a `GraphDataScience` object through which most calls to GDS will be made.\n\n```python\nfrom neo4j import GraphDatabase\nfrom gdsclient import Neo4jQueryRunner, GraphDataScience\n\n# Replace Neo4j Python driver settings according to your setup\nURI = \"bolt://localhost:7687\"\ndriver = GraphDatabase.driver(URI)\ngds = GraphDataScience(Neo4jQueryRunner(driver))\ngds.set_database(\"my-db\")  # (Optional) Use a specific Neo4j database\n```\n\n\n### Projecting a graph\n\nSupposing that we have some graph data in our Neo4j database, we can [project the graph into memory](https://neo4j.com/docs/graph-data-science/current/graph-create/).\n\n```python\n# Optionally we can estimate memory of the operation first\nres = gds.graph.project.estimate(\"*\", \"*\")\nassert res[0][\"requiredMemory\"] < 1e12\n\nG = gds.graph.project(\"graph\", \"*\", \"*\")\n```\n\nThe `G` that is returned here is a `Graph` which on the client side represents the projection on the server side.\n\nThe analogous calls `gds.graph.project.cypher{,.estimate}` for [Cypher based projection](https://neo4j.com/docs/graph-data-science/current/graph-create-cypher/) are also supported.\n\n\n### Running algorithms\n\nWe can take a projected graph, represented to us by a `Graph` object named `G`, and run [algorithms](https://neo4j.com/docs/graph-data-science/current/algorithms/) on it.\n\n```python\n# Optionally we can estimate memory of the operation first (if the algo supports it)\nres = gds.pageRank.mutate.estimate(G, tolerance=0.5, writeProperty=\"pagerank\")\nassert res[0][\"requiredMemory\"] < 1e12\n\nres = gds.pageRank.mutate(G, tolerance=0.5, writeProperty=\"pagerank\")\nassert res[0][\"nodePropertiesWritten\"] == G.node_count()\n```\n\nThese calls take one positional argument and a number of keyword arguments depending on the algorithm.\nThe first (positional) argument is a `Graph`, and the keyword arguments map directly to the algorithm's [configuration map](https://neo4j.com/docs/graph-data-science/current/common-usage/running-algos/#algorithms-syntax-configuration-parameters).\nThe calls return a list of dictionaries (with contents depending on the algorithm of course) as is also the case when using the Neo4j Python driver directly.\n\nThe other [algorithm execution modes](https://neo4j.com/docs/graph-data-science/current/common-usage/running-algos/) - stats, stream and write - are also supported via analogous calls.\n\n\n#### Topological link prediction\n\nThe methods for doing [topological link prediction](https://neo4j.com/docs/graph-data-science/current/algorithms/linkprediction/) are a bit different.\nJust like in the GDS procedure API they do not take a graph as an argument, but rather two node references as positional arguments.\nAnd they simply return the similarity score of the prediction just made as a float - not a list of dictionaries.\n\n\n### The Graph object\n\nIn this library, graphs projected onto server-side memory are represented by `Graph` objects.\nThere are convenience methods on the `Graph` object that let us extract information about our projected graph.\nSome examples are (where `G` is a `Graph`):\n\n```python\n# Get the graph's node count\nn = G.node_count()\n\n# Get a list of all relationship properties present on\n# relationships of the type \"myRelType\"\nrel_props = G.relationship_properties(\"myRelType\")\n\n# Drop the projection represented by G\nG.drop()\n```\n\n\n### Machine learning models\n\nIn GDS, you can train machine learning models.\nWhen doing this using the `gdsclient`, you can get a model object returned directly in the client.\nThe model object allows for convenient access to details about the model via Python methods.\nIt also offers the ability to directly compute predictions using the appropriate GDS procedure for that model.\nThis includes support for models trained using pipelines (for Link Prediction and Node Classification) as well as GraphSAGE models.\n\n\n#### Pipelines\n\nThere's native support for [Link prediction pipelines](https://neo4j.com/docs/graph-data-science/current/algorithms/ml-models/linkprediction-pipelines/) and [Node classification pipelines](https://neo4j.com/docs/graph-data-science/current/algorithms/ml-models/nodeclassification-pipelines/).\nApart from the call to create a pipeline, the GDS native pipelines calls are represented by methods on pipeline Python objects.\nAdditionally to the standard GDS calls, there are several methods to query the pipeline for information about it.\n\nBelow is a minimal example for node classification (supposing we have a graph `G` with a property \"myClass\"):\n\n```python\npipe = gds.alpha.ml.pipeline.nodeClassification.create(\"myPipe\")\nassert pipe.type() == \"Node classification training pipeline\"\n\npipe.addNodeProperty(\"degree\", mutateProperty=\"rank\")\npipe.selectFeatures(\"rank\")\nsteps = pipe.feature_properties()\nassert len(steps) == 1\nassert steps[0][\"feature\"] == \"rank\"\n\ntrained_pipe = pipe.train(G, modelName=\"myModel\", targetProperty=\"myClass\", metrics=[\"ACCURACY\"])\nassert trained_pipe.metrics()[\"ACCURACY\"][\"test\"] > 0\n\nres = trained_pipe.predict_stream(G)\nassert len(res) == G.node_count()\n```\n\nLink prediction works the same way, just with different method names for calls specific to that pipeline.\nPlease see the GDS documentation for more on the pipelines' procedure APIs.\n\n\n#### GraphSAGE\n\nAssuming we have a graph `G` with node property `x`, we can do the following:\n\n```python\nmodel = gds.beta.graphSage.train(G, modelName=\"myModel\", featureProperties=[\"x\"])\nassert len(model.metrics()[\"epochLosses\"]) == model.metrics()[\"ranEpochs\"] \n\nres = model.predict_stream(G)\nassert len(res) == G.node_count()\n```\n\nNote that with GraphSAGE we call the `train` method directly and supply all training configuration.\n\n\n### Graph catalog utils\n\nAll procedures from the [GDS Graph catalog](https://neo4j.com/docs/graph-data-science/current/management-ops/graph-catalog-ops/) are supported with `gdsclient`.\nSome examples are (where `G` is a `Graph`):\n\n```python\nres = gds.graph.list()\nassert len(res) == 1  # Exactly one graph is projected\n\nres = gds.graph.streamNodeProperties(G, \"rank\")\nassert len(res) == G.node_count()\n```\n\nFurther, there's a new call named `gds.graph.get` (`gdsclient` only) which takes a name as input and returns a `Graph` object if a graph projection of that name exists in the user's graph catalog.\nThe idea is to have a way of creating `Graph`s for already projected graphs, without having to do a new projection.\n\n\n### Model catalog utils\n\nAll procedures from the [GDS Model catalog](https://neo4j.com/docs/graph-data-science/current/model-catalog/) are supported with `gdsclient`.\nSome examples are (where `model` is a machine learning model object):\n\n```python\nres = gds.beta.model.list()\nassert len(res) == 1  # Exactly one model is loaded\n\nres = gds.beta.model.drop(model)\nassert res[0][\"modelInfo\"][\"modelName\"] == model.name()\n```\n\nFurther, there's a new call named `gds.model.get` (`gdsclient` only) which takes a model name as input and returns a model object if a model of that name exists in the user's model catalog.\nThe idea is to have a way of creating model objects for already loaded models, without having to create them again.\n\n\n### Node matching without Cypher\n\nWhen calling path finding or topological link prediction algorithms one has to provide specific nodes as input arguments.\nWhen using the GDS procedure API directly to call such algorithms, typically Cypher `MATCH` statements are used in order to find valid representations of input nodes of interest, see eg. [this example in the GDS docs](https://neo4j.com/docs/graph-data-science/current/algorithms/dijkstra-source-target/#algorithms-dijkstra-source-target-examples-stream).\nTo simplify this, `gdsclient` provides a utility function, `gds.find_node_id`, for letting one find nodes without using Cypher.\n\nBelow is an example of how this can be done (supposing `G` is a projected `Graph` with `City` nodes having `name` properties):\n\n```python\n# gds.find_node_id takes a list of labels and a dictionary of\n# property key-value pairs\nsource_id = gds.find_node_id([\"City\"], {\"name\": \"New York\"})\ntarget_id = gds.find_node_id([\"City\"], {\"name\": \"Philadelphia\"})\n\nres = gds.shortestPath.dijkstra.stream(G, sourceNode=source_id, targetNode=target_id)\nassert res[0][\"totalCost\"] == 100\n```\n\nThe nodes found by `gds.find_node_id` are those that have all labels specified and fully match all property key-value pairs given.\nNote that exactly one node per method call must be matched.\n\nFor more advanced filtering we recommend users do matching via Cypher's `MATCH`.\n\n\n## Known limitations\n\nOperations known to not yet work with `gdsclient`:\n\n* Some utility functions\n\n\n## License\n\n`gdsclient` is licensed under the Apache Software License version 2.0.\nAll content is copyright © Neo4j Sweden AB.\n\n\n## Acknowledgements\n\nThis work has been inspired by the great work done in the following libraries:\n\n* [pygds](https://github.com/stellasia/pygds) by stellasia\n* [gds-python](https://github.com/moxious/gds-python) by moxious\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://neo4j.com/product/graph-data-science/",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gdsclient",
    "package_url": "https://pypi.org/project/gdsclient/",
    "platform": "",
    "project_url": "https://pypi.org/project/gdsclient/",
    "project_urls": {
      "Bug Tracker": "https://github.com/neo4j/gdsclient/issues",
      "Documentation": "https://neo4j.com/docs/graph-data-science/current/",
      "Homepage": "https://neo4j.com/product/graph-data-science/",
      "Source": "https://github.com/neo4j/gdsclient"
    },
    "release_url": "https://pypi.org/project/gdsclient/0.0.6/",
    "requires_dist": [
      "neo4j"
    ],
    "requires_python": ">=3.6",
    "summary": "Python bindings for the Neo4j Graph Data Science library",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12596431,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "258f3bd07aa1ee84afc160c37b7d3c0b9fbd3a5e07c54cc0ba3a816955c56287",
          "md5": "c0f1924a9a02eee51dac22ae448f8a45",
          "sha256": "a31b1a1cc05c611d4933bab1a18d9c1b2a006e75a58abc4ee17cc9dd24a9fe03"
        },
        "downloads": -1,
        "filename": "gdsclient-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0f1924a9a02eee51dac22ae448f8a45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14714,
        "upload_time": "2022-01-03T14:32:37",
        "upload_time_iso_8601": "2022-01-03T14:32:37.026322Z",
        "url": "https://files.pythonhosted.org/packages/25/8f/3bd07aa1ee84afc160c37b7d3c0b9fbd3a5e07c54cc0ba3a816955c56287/gdsclient-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98b9b56eff60b3eb1306692441ca2b02c78b59613f3c48494e7389cb9dd6dde6",
          "md5": "5bcdfba83c3168510014f2cde98dc85c",
          "sha256": "7848b729c074b2ffe722388953ff084af9b7f2ce91e667fa8bf7674bc3754e7d"
        },
        "downloads": -1,
        "filename": "gdsclient-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5bcdfba83c3168510014f2cde98dc85c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13343,
        "upload_time": "2022-01-03T14:32:39",
        "upload_time_iso_8601": "2022-01-03T14:32:39.095069Z",
        "url": "https://files.pythonhosted.org/packages/98/b9/b56eff60b3eb1306692441ca2b02c78b59613f3c48494e7389cb9dd6dde6/gdsclient-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e2d177aed3864860b8ac84078e6f5a452253dd35e5cb8811f880da44dd2f827",
          "md5": "ad0ebfdd5df1abf6f8d34c66345c77d2",
          "sha256": "09dce02961d990ba53a774098e28276fc2b8b6ab925b528251e3e2c41e075203"
        },
        "downloads": -1,
        "filename": "gdsclient-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad0ebfdd5df1abf6f8d34c66345c77d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14723,
        "upload_time": "2022-01-03T14:59:47",
        "upload_time_iso_8601": "2022-01-03T14:59:47.871965Z",
        "url": "https://files.pythonhosted.org/packages/7e/2d/177aed3864860b8ac84078e6f5a452253dd35e5cb8811f880da44dd2f827/gdsclient-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4ce8bc7c65987697b69b7ed650f75da6749594770db6dc3d8363387586b773b",
          "md5": "74ccbfdf3f15e097f242643bcb7fb2b4",
          "sha256": "88054ab02114e64df9d23bd8bdd98923c05cdd05525765284f94f7be54ac2d7a"
        },
        "downloads": -1,
        "filename": "gdsclient-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "74ccbfdf3f15e097f242643bcb7fb2b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13391,
        "upload_time": "2022-01-03T14:59:49",
        "upload_time_iso_8601": "2022-01-03T14:59:49.913280Z",
        "url": "https://files.pythonhosted.org/packages/f4/ce/8bc7c65987697b69b7ed650f75da6749594770db6dc3d8363387586b773b/gdsclient-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ed4fd0a4fd6b02ca839e64cece0bcb700f7cf5427c24df087431a44f4541abf",
          "md5": "eaf0a22bb33b917bf0b21b0e310c46c5",
          "sha256": "dc444a0f6ff44f7674bc18b63fbf5efbd229c0d97270d5853afe45df35ff8e04"
        },
        "downloads": -1,
        "filename": "gdsclient-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eaf0a22bb33b917bf0b21b0e310c46c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15777,
        "upload_time": "2022-01-04T17:22:16",
        "upload_time_iso_8601": "2022-01-04T17:22:16.617259Z",
        "url": "https://files.pythonhosted.org/packages/1e/d4/fd0a4fd6b02ca839e64cece0bcb700f7cf5427c24df087431a44f4541abf/gdsclient-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cda1e12c4798b340912da1f549ce05492c4fed087f9b3861f719547c0703f64",
          "md5": "1cd00e398f030b53cce33d17e4a0d3ef",
          "sha256": "3b4e0bf381f20b4fc841edb37696e2498e75266cc817310cc9a5e46d62a8828f"
        },
        "downloads": -1,
        "filename": "gdsclient-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1cd00e398f030b53cce33d17e4a0d3ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14276,
        "upload_time": "2022-01-04T17:22:18",
        "upload_time_iso_8601": "2022-01-04T17:22:18.673679Z",
        "url": "https://files.pythonhosted.org/packages/5c/da/1e12c4798b340912da1f549ce05492c4fed087f9b3861f719547c0703f64/gdsclient-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fbf9494b38618197f232d131413137939e23e5b613a30c166aa82b2fbd99381",
          "md5": "868db96d7e8cbb5ebc2d74deea4810d9",
          "sha256": "528ac96d2ac2bde09600a8e8b10f49607e354a5202e23531956181f618013629"
        },
        "downloads": -1,
        "filename": "gdsclient-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "868db96d7e8cbb5ebc2d74deea4810d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22154,
        "upload_time": "2022-01-10T10:25:10",
        "upload_time_iso_8601": "2022-01-10T10:25:10.188728Z",
        "url": "https://files.pythonhosted.org/packages/6f/bf/9494b38618197f232d131413137939e23e5b613a30c166aa82b2fbd99381/gdsclient-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d3cb6a89b6e6c770b5ce807838124e83c86f64b861ddad2a305b2fc9ae4f889",
          "md5": "1a5ab67b10b13d2a9fa3b4f9cfc3967c",
          "sha256": "61059dac41c3418705eecba6d4373673c1294768f1b0cc4a5fd1ff64322bfc87"
        },
        "downloads": -1,
        "filename": "gdsclient-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1a5ab67b10b13d2a9fa3b4f9cfc3967c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17011,
        "upload_time": "2022-01-10T10:25:12",
        "upload_time_iso_8601": "2022-01-10T10:25:12.177929Z",
        "url": "https://files.pythonhosted.org/packages/5d/3c/b6a89b6e6c770b5ce807838124e83c86f64b861ddad2a305b2fc9ae4f889/gdsclient-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9be09a4f7ce50608367e088aa03e197c0d8154ab90257423b97cf3d2953c2bce",
          "md5": "8d60fabb21213d8e6ed21677023c6414",
          "sha256": "5541fdcda1cbaa819803edbb8e6f4a2d12b8e3ae37395dd88d228607902e4666"
        },
        "downloads": -1,
        "filename": "gdsclient-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d60fabb21213d8e6ed21677023c6414",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25260,
        "upload_time": "2022-01-11T16:56:15",
        "upload_time_iso_8601": "2022-01-11T16:56:15.498431Z",
        "url": "https://files.pythonhosted.org/packages/9b/e0/9a4f7ce50608367e088aa03e197c0d8154ab90257423b97cf3d2953c2bce/gdsclient-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b646af284bc8ebcd1be025e5acd6b9c88a634650567dd8c1ae1b905d118bed2",
          "md5": "7a4cc32bd605278ad4f61318fb20b613",
          "sha256": "d30eeb53bacd864a3a2ca50054b08c38a14770a236aeef968092674299f38b2f"
        },
        "downloads": -1,
        "filename": "gdsclient-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7a4cc32bd605278ad4f61318fb20b613",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19093,
        "upload_time": "2022-01-11T16:56:16",
        "upload_time_iso_8601": "2022-01-11T16:56:16.773670Z",
        "url": "https://files.pythonhosted.org/packages/7b/64/6af284bc8ebcd1be025e5acd6b9c88a634650567dd8c1ae1b905d118bed2/gdsclient-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dedb3a1d725e7921d555b76a47bf6cf3f65d378adf18f21d753c0bc0c93109e",
          "md5": "d86cfdf0cf5f08d0d5cf561a37bf5054",
          "sha256": "1de747cede2c0f5c2accc0f83fe5d8c9c75c5ad990de2c97819eb5ea3f0b2591"
        },
        "downloads": -1,
        "filename": "gdsclient-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d86cfdf0cf5f08d0d5cf561a37bf5054",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 29624,
        "upload_time": "2022-01-17T12:47:25",
        "upload_time_iso_8601": "2022-01-17T12:47:25.887343Z",
        "url": "https://files.pythonhosted.org/packages/2d/ed/b3a1d725e7921d555b76a47bf6cf3f65d378adf18f21d753c0bc0c93109e/gdsclient-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84f5c1b1ad19b117c2b980547819c96b5b4ab3c349a7e70cd4b60be6cebda919",
          "md5": "c2aea5ff9690d9d9ed96167bcbafb97f",
          "sha256": "69aab3cd9e05790e6eae7ab5c5bb08d9a2a1a01dd17a2258f1d3297de374d426"
        },
        "downloads": -1,
        "filename": "gdsclient-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c2aea5ff9690d9d9ed96167bcbafb97f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20290,
        "upload_time": "2022-01-17T12:47:27",
        "upload_time_iso_8601": "2022-01-17T12:47:27.768717Z",
        "url": "https://files.pythonhosted.org/packages/84/f5/c1b1ad19b117c2b980547819c96b5b4ab3c349a7e70cd4b60be6cebda919/gdsclient-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2dedb3a1d725e7921d555b76a47bf6cf3f65d378adf18f21d753c0bc0c93109e",
        "md5": "d86cfdf0cf5f08d0d5cf561a37bf5054",
        "sha256": "1de747cede2c0f5c2accc0f83fe5d8c9c75c5ad990de2c97819eb5ea3f0b2591"
      },
      "downloads": -1,
      "filename": "gdsclient-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d86cfdf0cf5f08d0d5cf561a37bf5054",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 29624,
      "upload_time": "2022-01-17T12:47:25",
      "upload_time_iso_8601": "2022-01-17T12:47:25.887343Z",
      "url": "https://files.pythonhosted.org/packages/2d/ed/b3a1d725e7921d555b76a47bf6cf3f65d378adf18f21d753c0bc0c93109e/gdsclient-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "84f5c1b1ad19b117c2b980547819c96b5b4ab3c349a7e70cd4b60be6cebda919",
        "md5": "c2aea5ff9690d9d9ed96167bcbafb97f",
        "sha256": "69aab3cd9e05790e6eae7ab5c5bb08d9a2a1a01dd17a2258f1d3297de374d426"
      },
      "downloads": -1,
      "filename": "gdsclient-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "c2aea5ff9690d9d9ed96167bcbafb97f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20290,
      "upload_time": "2022-01-17T12:47:27",
      "upload_time_iso_8601": "2022-01-17T12:47:27.768717Z",
      "url": "https://files.pythonhosted.org/packages/84/f5/c1b1ad19b117c2b980547819c96b5b4ab3c349a7e70cd4b60be6cebda919/gdsclient-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}