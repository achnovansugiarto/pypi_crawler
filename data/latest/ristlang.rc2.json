{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# RistPy\nA programming language made by me ([@Rishiraj0100](https://GitHub.com/Rishiraj0100))\n```\nR  - Rist\nI  - Is\nS  - Short\nT  - Text\nPy - Python\n```\n## Usage\n\nFirst of all, it should be installed by\n```sh\npython3 -m pip install -U RistLang\n```\n\nCreate a file named `main.rist`<br />\nA sample code is given here\n```rist\n@+ os, pprint\n+@ typing @+ Union\n\ncls${}: os.system{\"cls\" if os.name == \"nt\" $e \"clear\"}\n\ncls{}\n\nsomething${arg: Union[str, int]}:\n  p$p.p$p{[\"myText\", [arg]]};\n\nsomething{\"text2\"};\n```\n\nThen in your shell\n```sh\nrist run main.rist\n```\nOr if you want to compile into python file then run in your shell\n```sh\nrist run main.rist --compile-to rist_compiled_main.py\n```\nOr in your python file\n```py\nfrom ristpy import rist, E, W\n\nprint(rist(\"main.rist\"))\n# if you want some text to compile then\n\ncode = \"\"\"\n$p{\"hello\"} # Print\n\"\"\"\nprint(rist(code, fp=False))\n# if you wanna execute then\nrist(code, fp=False, flags=E) # E flag means execute\nrist('main.rist', flags=E)\n# compile code somewhere\nrist(\"main.rist\", flags=W, compile_to=\"main.py\") # W flag means write\n# if execute too then\nrist(\"main.rist\", flags=W|E, compile_to=\"main.py\")\n```\n\n## Syntax\n### Importing\n#### What can it Import?\n\nIt can Import all python modules\n\n#### How to Import?\nIn python you do `import asyncio`\n\nIn rist you have to do `@+ asyncio`\n\nIn python you do `from aiohttp import web`\n\nIn rist you have to do `+@ aiohttp @+ web`\n\n### Functions\nHow do i make a function?\n#### Making a function\n```rist\n# synchronous func;\nfoo${}: # <name_of_func> + $\n  pass\n\n# asynchronous func\n$bar${}: # $ + <name_of_func> + $\n  pass\n```\nHow do i call it?\n#### Calling a function\n```rist\n# synchronous function\nfoo{}\n\n# asynchronous func\n?bar{} # ? + <name_of_func>\n```\n### Dict \nHow can I make dict as `{}` is used as `()`\n#### Working With Dict\nTo make dict to things are here\n`()` and `<>`\nFor example\n```rist\n(\"hi\": \"hello\")\n(\"hello\": (\"wor\": \"ld\"))\n<\"hi\": \"hi\">\n\n# mixed\n<\n  1: <\n    2: (\n      3: 4\n    ),\n    5: 6\n  >,\n  7: 8\n>\n```\n### Tuples and lists\n#### Making a List \n```rist\n[1,2]\n[\n  1,\n  2\n]\n```\n#### Making a Tuple \n```rist\n{1,2}\n{\n  1,\n  2\n}\n```\n### Function Return TypeHints\nHow do I use `def myfunc() -> None:` in rist as `>` symbol\nis used in dict?\n\n`>` is used for dictionary but however, typehints\ndoesn't gets converted, it's like `} -> Any:`\n```rist\nSomeFunc${} -> None:\n  pass\n```\n### Comments \nTo use comments in this language, use `#`, Just like Python\n\nFor example:-\n```rist\n# Some comment\n```\n### Built-ins\nLike every language, this language also have\nsome built-in functions, but with other syntax\n\nThe syntax made for them is `$ + <function name>`\n```rist\n$f    # for\n$i    # int\n$s    # str\n$y    # try\n$x    # xor\n$d    # dict\n$ei   # elif\n$e    # else\n$l    # list\n$p    # pass\n$t    # type\n$b    # break\n$n    # input\n$p    # print\n$u    # tuple\n$yi   # yield\n$ex   # except\n$la   # lambda\n$o    # locals\n$fi   # finally\n$g    # globals\n$ret  # return\n$co   # continue\n$m    # __import__\n$r    # ristpy.rist\n$eval # run rist code\n$re   # regex library (re)\n```\n\nThe `xor` given here is a function provided by rist\nwhich takes two inputs/parameters and returns boolean value as follows:\n\n| Input1 | Input2 | Output |\n---------|--------|---------\n| False | False | False |\n| False | True | True |\n| True | False | True |\n| True | True | False |\n\nWhich can be written as\n```rist\nt = True\nf = False\n\n$p{$x{f,f}}\n$p{$x{f,t}}\n$p{$x{t,f}}\n$p{$x{t,t}}\n```\nAnd its output will be\n```\nFalse\nTrue\nTrue\nFalse\n```\n\n## Encryptions/Decryptions\nEncryptions and Decryptions too comes with rist.\nYou can encrypt anything with rist!\n\n### Encrypting from shell\nIf you want to encrypt something, then just run this in your shell\n```\nrist encrypt --filepath <file_to_encrypt> --output <encrypted_output_file> --key <any_integer> --depth 2\n```\nHere, key is any number of your choice which will be the passcode and it is optional.\nGenerates automatically if not given\nDepth is also a number, between 1 to 8 which specifies the layers/times\nit will be encrypted. It is 1 by default\n\nFor example:\n```\nrist encrypt --filepath myfile.rist --output myfile.rist.enc --key 22 --depth 2\n```\n\n### Encrypting from rist\nIf you want to encrypt something from rist, then\n```rist\n+@ ristpy @+ encrypt\n\ntext=\"Some_Text\"\nencrypted=encrypt{text,22,depth=2}\n$p{encrypted}\n```\n\n\n### Decrypting from shell\nIf you want to Decrypt something, then just run this in your shell\n```\nrist decrypt --filepath <file_to_decrypt> --output <decrypted_output_file> --key <your_key> --depth <the_depth_you_used>\n```\nFor example:\n```\nrist decrypt --filepath myfile.rist.enc --output myfile.rist --key 22 --depth 2\n```\n\n### Decrypting from rist\nIf you want to decrypt something from rist, then\n```rist\n+@ ristpy @+ decrypt\n\ntext=\"1100 1254 1166 1254 726 1122 1166 1210 1166 726 1122 1166 1122 1078 726 1122 1122 1166 1166 726 1122 1100 1100 1122 726 1100 1254 1232 1078 726 1122 1122 1166 1166 726 1122 1210 1210 1122 726 1122 1188 1232 1166\"\ndecrypted=decrypt{text,22,depth=2}\n$p{decrypted}\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RistPy/PyRist",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "RistLang",
    "package_url": "https://pypi.org/project/RistLang/",
    "platform": null,
    "project_url": "https://pypi.org/project/RistLang/",
    "project_urls": {
      "Homepage": "https://github.com/RistPy/PyRist",
      "Issue tracker": "https://github.com/RistPy/PyRist/issues"
    },
    "release_url": "https://pypi.org/project/RistLang/1.1.0/",
    "requires_dist": [
      "import-expression"
    ],
    "requires_python": ">=3.8",
    "summary": "A module for compiling RistLang",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16276360,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64d6d349aa933a8e70e7a0e0872572783fa452b5379abdf14387cad2eba9130a",
          "md5": "0fcc60c8f08490866f95dca4b834fb6e",
          "sha256": "7bfbd67a6c3104a301ef91273bfc39c41ede95196492917a96dcf604b4d42f44"
        },
        "downloads": -1,
        "filename": "RistLang-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0fcc60c8f08490866f95dca4b834fb6e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11881,
        "upload_time": "2022-12-31T12:03:41",
        "upload_time_iso_8601": "2022-12-31T12:03:41.048863Z",
        "url": "https://files.pythonhosted.org/packages/64/d6/d349aa933a8e70e7a0e0872572783fa452b5379abdf14387cad2eba9130a/RistLang-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1e0f648200737ab420e20513b2682c649eb4084dd40d8b77d223bdb2f5a9bc2",
          "md5": "0602e009fd74bd8d691fb348e4b09300",
          "sha256": "4266855118c70389e1a253acde8eccdd5495766c4f7167c5dae86a9d152bc523"
        },
        "downloads": -1,
        "filename": "RistLang-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0602e009fd74bd8d691fb348e4b09300",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11544,
        "upload_time": "2022-12-31T12:03:43",
        "upload_time_iso_8601": "2022-12-31T12:03:43.292841Z",
        "url": "https://files.pythonhosted.org/packages/c1/e0/f648200737ab420e20513b2682c649eb4084dd40d8b77d223bdb2f5a9bc2/RistLang-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f780e6f1ab5907b2812113468cdc9dae9592dbcbdf0fa35b37d2916a8c4b3c7",
          "md5": "8dedf86842d307bda630ffb9e1f070d0",
          "sha256": "faa038a6722bd6a7c23bcd3fa81fd4f301f90deb27ad16c49a21309e4c3e9886"
        },
        "downloads": -1,
        "filename": "RistLang-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8dedf86842d307bda630ffb9e1f070d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 12222,
        "upload_time": "2023-01-02T04:44:26",
        "upload_time_iso_8601": "2023-01-02T04:44:26.228038Z",
        "url": "https://files.pythonhosted.org/packages/9f/78/0e6f1ab5907b2812113468cdc9dae9592dbcbdf0fa35b37d2916a8c4b3c7/RistLang-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15ee82c6c13d01e3c7776140e855d5b05c663a8a908b54d5701a92543d6b804f",
          "md5": "32d9ba35e2f956eb6570824cc48c198a",
          "sha256": "3db7c62054094a08dd14501afaa7429c9008989e071df2c3421de5cd7055108f"
        },
        "downloads": -1,
        "filename": "RistLang-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "32d9ba35e2f956eb6570824cc48c198a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11865,
        "upload_time": "2023-01-02T04:44:27",
        "upload_time_iso_8601": "2023-01-02T04:44:27.630656Z",
        "url": "https://files.pythonhosted.org/packages/15/ee/82c6c13d01e3c7776140e855d5b05c663a8a908b54d5701a92543d6b804f/RistLang-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f780e6f1ab5907b2812113468cdc9dae9592dbcbdf0fa35b37d2916a8c4b3c7",
        "md5": "8dedf86842d307bda630ffb9e1f070d0",
        "sha256": "faa038a6722bd6a7c23bcd3fa81fd4f301f90deb27ad16c49a21309e4c3e9886"
      },
      "downloads": -1,
      "filename": "RistLang-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8dedf86842d307bda630ffb9e1f070d0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 12222,
      "upload_time": "2023-01-02T04:44:26",
      "upload_time_iso_8601": "2023-01-02T04:44:26.228038Z",
      "url": "https://files.pythonhosted.org/packages/9f/78/0e6f1ab5907b2812113468cdc9dae9592dbcbdf0fa35b37d2916a8c4b3c7/RistLang-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15ee82c6c13d01e3c7776140e855d5b05c663a8a908b54d5701a92543d6b804f",
        "md5": "32d9ba35e2f956eb6570824cc48c198a",
        "sha256": "3db7c62054094a08dd14501afaa7429c9008989e071df2c3421de5cd7055108f"
      },
      "downloads": -1,
      "filename": "RistLang-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "32d9ba35e2f956eb6570824cc48c198a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 11865,
      "upload_time": "2023-01-02T04:44:27",
      "upload_time_iso_8601": "2023-01-02T04:44:27.630656Z",
      "url": "https://files.pythonhosted.org/packages/15/ee/82c6c13d01e3c7776140e855d5b05c663a8a908b54d5701a92543d6b804f/RistLang-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}