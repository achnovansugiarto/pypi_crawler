{
  "info": {
    "author": "Marek Jagielski",
    "author_email": "marek.jagielski@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "========\nRuminaq\n========\n\nRuminaq python package is part of Ruminaq project https://github.com/systemincloud/ruminaq.\nThis package is an api for writing custom tasks in python.\n\n\nInstallation\n============\n\nInstall with pip.\n\n.. code:: bash\n\n    $ pip install ruminaq\n\n\nCode Demo\n=========\n\nDefine a custom task as follow:\n\n.. code:: python\n\n\t@python_task_info(generator=True, external_source=True)\n\t@parameter(name=\"param\")\n\tclass MyPythonTask(PythonTask):\n\t\n\t    def __init_ports__(self):\n\t        self.in1 = InputPort(name=\"in1\", data_type=Bool)\n\t        self.in2 = InputPort(name=\"in2\", data_type=Bool, asynchronous=True)\n\t        self.out = OutputPort(name=\"out\", data_type=Bool)\n\t\n\t    def execute_async(self, async_in):\n\t        \"\"\" this will run when asynchronous port\n\t            receive data \"\"\"\n\t\n\t    def execute_ext_src(self):\n\t        \"\"\" this will run after internal\n\t            request \"\"\"\n\t\n\t    def generate(self):\n\t        \"\"\" this will run periodicaly \"\"\"\n\t\n\t    def execute(self, grp):\n\t        \"\"\" this will run when all synchronous ports \n\t            from group receive data \"\"\"\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache License version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ruminaq",
    "package_url": "https://pypi.org/project/ruminaq/",
    "platform": "",
    "project_url": "https://pypi.org/project/ruminaq/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/ruminaq/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "python task api",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4449929,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "378d635a0deb4142d2ea4c09e991f5cebe7cf7d798c89a9710359fe04b84395e",
          "md5": "3ba86166b8107c5f970c9266f56a5083",
          "sha256": "8603736d2b635a2e4da0f6b02ead46f7bbd0cf5748c2bcb0db1bbe83fcfd1f96"
        },
        "downloads": -1,
        "filename": "ruminaq-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3ba86166b8107c5f970c9266f56a5083",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6631,
        "upload_time": "2018-11-04T15:45:18",
        "upload_time_iso_8601": "2018-11-04T15:45:18.089368Z",
        "url": "https://files.pythonhosted.org/packages/37/8d/635a0deb4142d2ea4c09e991f5cebe7cf7d798c89a9710359fe04b84395e/ruminaq-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "378d635a0deb4142d2ea4c09e991f5cebe7cf7d798c89a9710359fe04b84395e",
        "md5": "3ba86166b8107c5f970c9266f56a5083",
        "sha256": "8603736d2b635a2e4da0f6b02ead46f7bbd0cf5748c2bcb0db1bbe83fcfd1f96"
      },
      "downloads": -1,
      "filename": "ruminaq-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3ba86166b8107c5f970c9266f56a5083",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6631,
      "upload_time": "2018-11-04T15:45:18",
      "upload_time_iso_8601": "2018-11-04T15:45:18.089368Z",
      "url": "https://files.pythonhosted.org/packages/37/8d/635a0deb4142d2ea4c09e991f5cebe7cf7d798c89a9710359fe04b84395e/ruminaq-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}