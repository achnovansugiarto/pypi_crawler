{
  "info": {
    "author": "Ngenux Solutions Pvt. Ltd.",
    "author_email": "connect@ngenux.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Common Public License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Documentation"
    ],
    "description": "# ngtextpreprocess\n\n**[ngtextpreprocess](https://pypi.org/project/ngtextpreprocess)** a simple Python package that removes noise and extracts the meaningful information from the given input text data.\n\nUnlike plain tokenization and de-tokenization, where useful information like sentences, dates, percentages, monetary values etc\nbecomes undentifiable, **ngtextpreprocess** goes one step ahead in preserving these crucial information while removing noisy data.\n\n\n[![Current Release Version](https://shields.io/badge/release-v1.0-purple?&logo=github)](https://github.com/ngenux/ngtextpreprocessing/releases)\n[![Current Release Version](https://shields.io/badge/pypi-v1.1.2-blue?&logo=pypi)](https://pypi.org/project/ngtextpreprocess/)\n![](https://img.shields.io/badge/python-3.8-blue?&logo=Python)\n![](https://img.shields.io/badge/license-Creative%20Commons%20Attribution%20NonCommercial%20NoDerivatives%204.0%20International%20Public%20License-green.svg)\n\n## Table of contents:\n- **[Installation](#installation)**\n- **[Usage](#usage)**\n  * [Cleaning pipeline](#cleaning-pipeline)\n  * [Using required functions in the pipeline](#using-required-functions-in-the-pipeline)\n  * [Individual methods](#individual-methods)\n\n\n\n## Installation:\n\nTo install the package in your local environment, open a terminal inside your project directory and type:\n```python\npip install ngtextpreprocess\n```  \n\nTo upgrade the already existing installation, run\n```python\n  pip install -U ngtextpreprocess\n```\n\n\n## Usage:\nThe package comes with a cleaning pipeline for performing all the \ntext cleaning processes in a single step.  \nAlong with that, the package also can be used for specific text cleaning tasks \nby accessing the individual methods.\n\n### Cleaning pipeline\n\n```python\n# import the package\nfrom ngtextpreprocess import CleanText\n\n# initialize the input text\ninput_text = \"\"\"\n                This is a #1234 sampl writtn 100% on 2022/04/14 ___\n                <a href=#> with $100.50 on my @abcd table.</a>\n              \"\"\"\n\n# instantiate the class object by passing the input text\nct = CleanText(input_text=input_text)\n\n# call the cleaning pipeline and get the output\noutput_text = ct.cleaning_pipeline()\n\nprint(output_text)\n\n>> This is a sample written 100% on 2022/04/14 with $100.50 on my table.\n```\nYou can customize the pipeline by deciding what all functions\nyou would require in the same sequential manner. \n\nThis can be done by backward elimination technique where\nyou can set the parameter for the required function as False.\n\nAlso you can enable the set_logging parameter to get the\nlogging details as a log file in a dynamically created\nlogging directory.\n\nHere is how its done.\n\n### Using required functions in the pipeline\n\nIn this example, we want the name to stay intact in the output.\nSo, we are disabling the remove_name function. Also we are \nenabling logging to get the log details in the logging\ndirectory.\n\n```python\n# import\nfrom ngtextpreprocess import CleanText\n\n# initialize the input text\ninput_text = \"This is John Doe from U.S. .\"\n\n# instantiate\ncleaner = CleanText(input_text)\n\n# call the cleaning_pipeline method\noutput_text = cleaner.cleaning_pipeline(set_logging=True, set_remove_name=False)\n\nprint(output_text)\n\n>> This is John Doe from\n```\n\nAs you can see, the name has been preserved and all other possible\ncorrections have been made. Also, the logfiles have been generated.\n\n### Individual methods\nThe following are the individual functions used within the pipeline.  \n\n#### For Text Beautification\n1. Cleaning HTML\n2. Fixing ASCII decoding errors\n3. Removing Bullets\n4. Replacing Hexcodes\n5. Removing Symbols and Emojis  \n\n#### For Personal Information Removal\n1. Removing Personal Names\n2. Removing Contact Addresses\n3. Removing Contact Numbers\n4. Removing e-mail address\n5. Removing social-media tags\n6. Removing URL  \n\n#### For Text Correction\n1. Expanding Domain specific short-forms\n(Currently, financial domain has been covered.)\n2. Expanding General short-forms\n3. Fixing Contractions\n4. Removing Punctuations\n5. Removing Extra Whitespaces\n6. Fixing Spelling errors\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/ngenux/ngtextpreprocess/archive/refs/tags/0.0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ngenux/ngtextpreprocess.git",
    "keywords": "",
    "license": "Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ngtextpreprocess",
    "package_url": "https://pypi.org/project/ngtextpreprocess/",
    "platform": null,
    "project_url": "https://pypi.org/project/ngtextpreprocess/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ngenux/ngtextpreprocess.git/issues",
      "Download": "https://github.com/ngenux/ngtextpreprocess/archive/refs/tags/0.0.1.tar.gz",
      "Homepage": "https://github.com/ngenux/ngtextpreprocess.git"
    },
    "release_url": "https://pypi.org/project/ngtextpreprocess/0.0.1/",
    "requires_dist": [
      "spacy",
      "autocorrect",
      "contractions"
    ],
    "requires_python": "",
    "summary": "A small text cleaning package",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15214023,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc2110bc0f51f93356f458f9d6d996ea3c589f82b43d44d356e2057267cdf2f7",
          "md5": "3caa32ac9b1bc4b9ca80614ff248ea85",
          "sha256": "7a14fd6bf4cef322b328843a046b20ed49aa1a980c7e9bd1f94931936e981aac"
        },
        "downloads": -1,
        "filename": "ngtextpreprocess-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3caa32ac9b1bc4b9ca80614ff248ea85",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15883,
        "upload_time": "2022-09-26T11:41:30",
        "upload_time_iso_8601": "2022-09-26T11:41:30.856280Z",
        "url": "https://files.pythonhosted.org/packages/dc/21/10bc0f51f93356f458f9d6d996ea3c589f82b43d44d356e2057267cdf2f7/ngtextpreprocess-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "400b09c19b1c98b1313a8fef3dd2153c42022b1d7177debad51210004f407a92",
          "md5": "f9663a578c8b2bc597e646c49c9b118f",
          "sha256": "08b41cd5abe19f9fca8fd9f67a5048d7e58fad4cfa6ce402f79e1d70994ff2db"
        },
        "downloads": -1,
        "filename": "ngtextpreprocess-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f9663a578c8b2bc597e646c49c9b118f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18195,
        "upload_time": "2022-09-26T11:41:32",
        "upload_time_iso_8601": "2022-09-26T11:41:32.863740Z",
        "url": "https://files.pythonhosted.org/packages/40/0b/09c19b1c98b1313a8fef3dd2153c42022b1d7177debad51210004f407a92/ngtextpreprocess-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc2110bc0f51f93356f458f9d6d996ea3c589f82b43d44d356e2057267cdf2f7",
        "md5": "3caa32ac9b1bc4b9ca80614ff248ea85",
        "sha256": "7a14fd6bf4cef322b328843a046b20ed49aa1a980c7e9bd1f94931936e981aac"
      },
      "downloads": -1,
      "filename": "ngtextpreprocess-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3caa32ac9b1bc4b9ca80614ff248ea85",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15883,
      "upload_time": "2022-09-26T11:41:30",
      "upload_time_iso_8601": "2022-09-26T11:41:30.856280Z",
      "url": "https://files.pythonhosted.org/packages/dc/21/10bc0f51f93356f458f9d6d996ea3c589f82b43d44d356e2057267cdf2f7/ngtextpreprocess-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "400b09c19b1c98b1313a8fef3dd2153c42022b1d7177debad51210004f407a92",
        "md5": "f9663a578c8b2bc597e646c49c9b118f",
        "sha256": "08b41cd5abe19f9fca8fd9f67a5048d7e58fad4cfa6ce402f79e1d70994ff2db"
      },
      "downloads": -1,
      "filename": "ngtextpreprocess-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f9663a578c8b2bc597e646c49c9b118f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18195,
      "upload_time": "2022-09-26T11:41:32",
      "upload_time_iso_8601": "2022-09-26T11:41:32.863740Z",
      "url": "https://files.pythonhosted.org/packages/40/0b/09c19b1c98b1313a8fef3dd2153c42022b1d7177debad51210004f407a92/ngtextpreprocess-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}