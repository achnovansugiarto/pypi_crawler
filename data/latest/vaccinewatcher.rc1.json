{
  "info": {
    "author": "Tri Songz",
    "author_email": "ts@scontentengine.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers"
    ],
    "description": "# Vaccine Watcher\n\nMonitor Vaccine Availability from your Local CVS and Walgreens (US Only).\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/trisongz/vaccinewatcher/blob/master/etc/Vaccine_Watcher.ipynb) \n\n\n*Disclaimer: This library is provided as is. It involves some minor browser tricks in order to properly get the availability data. Use at your own risk.*\n\nOriginally inspired from [Vaccine-hunter.js](https://github.com/mikeendale/vaccine-hunter), I wanted to write a pythonic version of it. Somewhat ironically, right after publishing and running it, availability popped up.\n\n## What does it do\n\n1. You can run it as a command line program.\n2. You can run it pythonically through the VaccineWatcher object class - either with real-time polling, or on-demand.\n\nIt currently polls CVS and Walgreen's Website through a modified Selenium called [Selenium-wire](https://github.com/wkeeling/selenium-wire) to be able to access the headers and parse the response data. Both CVS and Walgreens use different detectors/cookies in order to determine your location, so using plain requests/sessions was a bit problematic. \n\nThis method was the one that ensured consistency no matter which location.\n\nHopefully, you'll see something like this:\n\n\n```bash\n[VaccineWatcher] info : CVS has Available Appointments in HOUSTON, TX\n```\n\n## Prerequisites\n\nYou should have chromedriver installed and in your paths, which a typical install will do.\n\n```bash\n# linux\napt-get install chromedriver\n\n# macos - this may cause issues if your Chrome Browser =/= to your Chromedriver version.\nbrew install chromedriver\n\n# windows - sorry, I don't know.\n```\n\n## Installation\n\n`vaccinewatcher` is on currently only available on Github since it's not stable yet:\n\n```bash\npip install --upgrade git+https://github.com/trisongz/vaccinewatcher\n```\n\n## Quick Start\n\nThe below is the minimum required variables to run the CLI version, with optional flags for additional control.\n\nIf you have a lower-spec device, I would suggest increasing the frequency, since due to the modified Selenium, it can tend to be more memory intensive. \n\n```bash\n# --no-cvs / disables CVS polling\n# --no-wg / disables Walgreens polling\n# --freq / how many secs between polling. default = 600 secs / 10 mins\n# --zapier / provide a Zapier Webhook URL to send notifications to\n# --verbose / enable logging for all results, regardless of options.\n\n# make sure if you have multiple words in any variable to have them in quotations.\nvaccinewatcher --city \"Houston\" --state \"Texas\" --abbr \"TX\" --zip \"77056\"\n```\n\nThe Pythonic API can be accessed with more ease. Rather than importing the `VaccineWatcher` object directly, it's recommended to use `get_vaccine_watcher` which prevents multiple instances from spawning through threading.Lock. \n\n\n```python\nfrom vaccinewatcher import get_vaccine_watcher\n\nfreq = 600\nhook = None\ncheck_wg = True \ncheck_cvs = True\nparams = {'city': 'San Francisco', 'state': 'California', 'state_abbr': 'CA', 'zipcode': '94117'}\n\nwatcher = get_vaccine_watcher(config=params, freq_secs=freq, hook=hook, check_walgreens=check_wg, check_cvs=check_cvs))\n\n# if you want to poll on demand:\nres = watcher(check_cvs=False, check_walgreens=True)\n# > {'walgreens': False}\n\n## NOTE - It is not recommended to run both a service daemon and on-demand, since the process in polling the websites is sensitive to the steps in which the data is queried. If the browser is interrupted by another call, it will likely mess up.\n\n# to run as a thread daemon\nwatcher.run()\n\n# to kill the service\nwatcher.close()\n\n# Access the last captured data\nres = watcher.last_check()\n\n# results of res\n# {'cvs': {'available': False, 'data': None, 'timestamp': None},\n# 'walgreens': {'available': False, 'data': {'appointmentsAvailable': False, 'availabilityGroups': [], 'days': 4, 'radius': 25,\n# 'stateCode': 'CA', 'stateName': 'California', 'zipCode': '94117'}, 'timestamp': '03-30-2021 07:17:24'}}\n```\n\n## More Advanced Stuff\n\nThere are a few additional settings available for the adventurous. \n\n### The Hook Function\n\nThe hook function is expected to receive two parameters, `message` and `data`. Below is the included example Zapier Webhook Listener. Message will only be included when availability changes - i.e. is available, rather than all the time. However, you can choose to send the data that is polled through the daemon by including `send_data=True` and `always_send=True` in the initial params, which will then always send the data to your webhook, regardless of status change.\n\n```python\n\nclass ZapierWebhook:\n    def __init__(self, url):\n        self.url = url\n        self.s = requests.Session()\n        logger.log(f'Initialized Zapier Webhook at {self.url}')\n\n    def __call__(self, message=None, data=None):\n        if not message or data:\n            return\n        params = {}\n        if message:\n            params['message'] = message\n        if data:\n            params.update(data)\n        params['timestamp'] = create_timestamp()\n        r = self.s.post(self.url, json=params)\n        if r.status_code == 200:\n            logger.log(f'Successfully sent to Zapier Webhook: {params}')\n        else:\n            logger.log(f'Potential Error sending to Zapier Webhook')\n\n```\n\n# Final Notes\n\n\n![vaccine-appt](etc/confirmation.png)\n\nIf you found this library helpful, please do share it with others. This is what is within my capabilities to help provide a resource and tool to allow others to find vaccine availibility, and help bring an end to the pandemic. If you end up using some parts of this library for something bigger, let me know! I'd love to check it out.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/trisongz/vaccinewatcher",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vaccinewatcher",
    "package_url": "https://pypi.org/project/vaccinewatcher/",
    "platform": "",
    "project_url": "https://pypi.org/project/vaccinewatcher/",
    "project_urls": {
      "Homepage": "http://github.com/trisongz/vaccinewatcher"
    },
    "release_url": "https://pypi.org/project/vaccinewatcher/0.0.1/",
    "requires_dist": [
      "selenium",
      "selenium-wire",
      "undetected-chromedriver",
      "elemental"
    ],
    "requires_python": ">3.6",
    "summary": "Monitor Vaccine Availability from your Local CVS and Walgreens (US Only).",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9921492,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2676c45ef0c755d0a427f9c1695f19c704a8620c70300c17662cd7e96b77d1c",
          "md5": "ead936b1e2851d7345b53bca5b568805",
          "sha256": "fe198b22db104beb0eff05d824d27e61bf316f650fca7666f2b8ce5d4195ea2b"
        },
        "downloads": -1,
        "filename": "vaccinewatcher-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ead936b1e2851d7345b53bca5b568805",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 9902,
        "upload_time": "2021-03-30T08:14:57",
        "upload_time_iso_8601": "2021-03-30T08:14:57.557556Z",
        "url": "https://files.pythonhosted.org/packages/b2/67/6c45ef0c755d0a427f9c1695f19c704a8620c70300c17662cd7e96b77d1c/vaccinewatcher-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a58d1a1bb54e73c7888705051f98a82d8fa1c0126a10abe847bd7de2a8a55885",
          "md5": "5c5a2f002b0993eadf03641d7bac68e6",
          "sha256": "c894cfe87e0fa65de949c73703598996a24495cf3422f7ae11515d80ab808911"
        },
        "downloads": -1,
        "filename": "vaccinewatcher-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5c5a2f002b0993eadf03641d7bac68e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 8827,
        "upload_time": "2021-03-30T08:14:59",
        "upload_time_iso_8601": "2021-03-30T08:14:59.884538Z",
        "url": "https://files.pythonhosted.org/packages/a5/8d/1a1bb54e73c7888705051f98a82d8fa1c0126a10abe847bd7de2a8a55885/vaccinewatcher-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b2676c45ef0c755d0a427f9c1695f19c704a8620c70300c17662cd7e96b77d1c",
        "md5": "ead936b1e2851d7345b53bca5b568805",
        "sha256": "fe198b22db104beb0eff05d824d27e61bf316f650fca7666f2b8ce5d4195ea2b"
      },
      "downloads": -1,
      "filename": "vaccinewatcher-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ead936b1e2851d7345b53bca5b568805",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3.6",
      "size": 9902,
      "upload_time": "2021-03-30T08:14:57",
      "upload_time_iso_8601": "2021-03-30T08:14:57.557556Z",
      "url": "https://files.pythonhosted.org/packages/b2/67/6c45ef0c755d0a427f9c1695f19c704a8620c70300c17662cd7e96b77d1c/vaccinewatcher-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a58d1a1bb54e73c7888705051f98a82d8fa1c0126a10abe847bd7de2a8a55885",
        "md5": "5c5a2f002b0993eadf03641d7bac68e6",
        "sha256": "c894cfe87e0fa65de949c73703598996a24495cf3422f7ae11515d80ab808911"
      },
      "downloads": -1,
      "filename": "vaccinewatcher-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5c5a2f002b0993eadf03641d7bac68e6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.6",
      "size": 8827,
      "upload_time": "2021-03-30T08:14:59",
      "upload_time_iso_8601": "2021-03-30T08:14:59.884538Z",
      "url": "https://files.pythonhosted.org/packages/a5/8d/1a1bb54e73c7888705051f98a82d8fa1c0126a10abe847bd7de2a8a55885/vaccinewatcher-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}