{
  "info": {
    "author": "Dadmatech AI Company",
    "author_email": "info@dadmatech.ir",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<!-- <h1 align=\"center\">\n  <img src=\"images/dadmatech.jpeg\"  width=\"150\"  />\n   Dadmatools\n</h1> -->\n\n\n<h2 align=\"center\">DadmaTools: A Python NLP Library for Persian</h2>\n\n<div align=\"center\">\n  <a href=\"https://pypi.org/project/dadmatools/\"><img src=\"https://img.shields.io/pypi/v/dadmatools.svg\"></a>\n  <a href=\"\"><img src=\"https://img.shields.io/badge/license-Apache%202-blue.svg\"></a>\n  <a href='https://dadmatools.readthedocs.io/en/latest/'><img src='https://readthedocs.org/projects/danlp-alexandra/badge/?version=latest' alt='Documentation Status' /></a>\n</div>\n<div align=\"center\">\n  <h5>\n      Named Entity Recognition\n    <span> | </span>\n      Part of Speech Tagging\n    <span> | </span>\n      Dependency Parsing\n  </h5>\n  <h5>\n      Constituency Parsing\n    <span> | </span>\n      Chunking\n    <span> | </span>\n      Kasreh Ezafe Detection\n  </h5>\n  <h5>\n      Spellchecker\n    <span> | </span>\n       Normalizer\n    <span> | </span>\n      Tokenizer\n    <span> | </span>\n      Lemmatizer\n  </h5>\n  <h5>\n  </h5>\n</div>\n\n\n# **DadmaTools**\nDadmaTools is a repository for Natural Language Processing resources for the Persian Language. The aim is to make it easier and more applicable to practitioners in the industry to use Persian NLP, and hence this project is licensed to allow commercial use. The project features code examples on how to use the models in popular NLP frameworks such as spaCy and Transformers, as well as Deep Learning frameworks such as PyTorch. Furthermore, DadmaTools support common Persian embedding and Persian datasets.\nfor more details about how to use this tool read the instruction below.\n\nContents:\n- [Installation](#installation)\n- [NLP Models](#nlp-models)\n  - [Normalizer](#normalizer)\n  - [Pipline (tok,lem,dep,pos,cons,chunk,kasreh,spellchecker)](#pipeline)\n- [Datasets](#loading-persian-nlp-datasets)\n- [Embeddings](#loading-persian-word-embeddings)\n- [Evaluation](#evaluation)\n- [How to use in colab](#how-to-use)\n- [Cite us](#cite)\n\n\n## Installation\n\nTo get started using DadmaTools in your python project, simply install via the pip package. Note that installing the default pip package \nwill not install all NLP libraries because we want you to have the freedom to limit the dependency on what you use. Instead, we provide you with an installation option if you want to install all the required dependencies. \n\n### Install with pip\n\nTo get started using DadmaTools, simply install the project with pip:\n\n```bash\npip install dadmatools \n```\n\nNote that the default installation of DadmaTools **does** install other NLP libraries such as SpaCy and supar.\n\nYou can check the `requirements.txt` file to see what version the packages has been tested with.\n\n### Install from github\nAlternatively you can install the latest version from github using:\n```bash\npip install git+https://github.com/Dadmatech/dadmatools.git\n```\n\n\n## NLP Models\n\nNatural Language Processing is an active area of research, and it consists of many different tasks. \nThe DadmaTools repository provides an overview of Persian models for some of the most basic NLP tasks (and is continuously evolving). \n\nHere is the list of NLP tasks we currently cover in the repository. These NLP tasks are defined as pipelines. Therefore, a pipeline list must be created and passed through the model. This will allow the user to choose the only task needed without loading others. \nEach task has its abbreviation as follows:\n-  Named Entity Recognition: ```ner```\n-  Part of speech tagging: ```pos```\n-  Dependency parsing: ```dep```\n-  Constituency parsing: ```cons```\n-  Kasreh Ezafe Detection: ```kasreh```\n-  Chunking: ```chunk```\n-  Lemmatizing: ```lem```\n-  Tokenizing: ```tok```\n-  Spellchecker: ```spellchecker```\n-  Normalizing\n\n**Note** that the normalizer can be used outside of the pipeline as there are several configs (the default config is in the pipeline with the name of def-norm).\n**Note** that if no pipeline is passed to the model, the tokenizer will be loaded as default.\n\n<!--### Use Case -->\n\n<!-- These NLP tasks are defined as pipelines. Therefore, a pipeline list must be created and passed through the model. This will allow the user to choose the only task needed without loading others. \nEach task has its abbreviation as following:\n-  ```ner```: Named entity recognition\n-  ```pos```: Part of speech tagging\n-  ```dep```: Dependency parsing\n-  ```cons```: Constituency parsing\n-  ```chunk```: Chunking\n-  ```kasreh```: Kasreh Ezafe Detection\n-  ```spellchecker```: SpellChecker\n-  ```lem```: Lemmatizing\n-  ```tok```: Tokenizing\n\nNote that the normalizer can be used outside of the pipeline as there are several configs.\nNote that if no pipeline is passed to the model the tokenizer will be load as default. -->\n\n### Normalizer\ncleaning text and unify characters.\n\nNote: None means no action! \n```python\nfrom dadmatools.models.normalizer import Normalizer\n\nnormalizer = Normalizer(\n    full_cleaning=False,\n    unify_chars=True,\n    refine_punc_spacing=True,\n    remove_extra_space=True,\n    remove_puncs=False,\n    remove_html=False,\n    remove_stop_word=False,\n    replace_email_with=\"<EMAIL>\",\n    replace_number_with=None,\n    replace_url_with=\"\",\n    replace_mobile_number_with=None,\n    replace_emoji_with=None,\n    replace_home_number_with=None\n)\n\ntext = \"\"\"\n<p>\nدادماتولز اولین نسخش سال ۱۴۰۰ منتشر شده. \nامیدواریم که این تولز بتونه کار با متن رو براتون شیرین‌تر و راحت‌تر کنه\nلطفا با ایمیل dadmatools@dadmatech.ir با ما در ارتباط باشید\nآدرس گیت‌هاب هم که خب معرف حضور مبارک هست:\n https://github.com/Dadmatech/DadmaTools\n</p>\n\"\"\"\nnormalized_text = normalizer.normalize(text)\n#<p> دادماتولز اولین نسخش سال 1400 منتشر شده. امیدواریم که این تولز بتونه کار با متن رو براتون شیرین‌تر و راحت‌تر کنه لطفا با ایمیل <EMAIL> با ما در ارتباط باشید آدرس گیت‌هاب هم که خب معرف حضور مبارک هست: </p>\n\n#full cleaning\nnormalizer = Normalizer(full_cleaning=True)\nnormalized_text = normalizer.normalize(text)\n#دادماتولز نسخش سال منتشر تولز بتونه کار متن براتون شیرین‌تر راحت‌تر کنه ایمیل ارتباط آدرس گیت‌هاب معرف حضور مبارک\n\n```\n\n### Pipeline\nContaining Tokenizer, Lemmatizer, POS Tagger, Dependancy Parser, Constituency Parser, Kasreh, spellcheker.\n\n```python\nimport dadmatools.pipeline.language as language\n\n# here lemmatizer and pos tagger will be loaded\n# as tokenizer is the default tool, it will be loaded as well even without calling\npips = 'tok,lem,pos,dep,chunk,cons,spellchecker,kasreh' \nnlp = language.Pipeline(pips)\n\n# you can see the pipeline with this code\nprint(nlp.analyze_pipes(pretty=True))\n\n# doc is an SpaCy object\ndoc = nlp('از قصهٔ کودکیشان که می‌گفت، گاهی حرص می‌خورد!')\n```\n[```doc```](https://spacy.io/api/doc) object has different extensions. First, there are ```sentences``` in ```doc``` which is the list of the list of [```Token```](https://spacy.io/api/token). Each [```Token```](https://spacy.io/api/token) also has its own extensions. Note that we defined our own extension as well in DadmaTools. If any pipeline related to the specific extensions is not called, that extension will have no value.\n\nTo better see the results which you can use this code:\n\n```python\n\ndictionary = language.to_json(pips, doc)\nprint(dictionary)\n```\n\n```python\n[[{'id': 1, 'text': 'از', 'lemma': 'از', 'pos': 'ADP', 'rel': 'case', 'root': 2}, {'id': 2, 'text': 'قصهٔ', 'lemma': 'قصه', 'pos': 'NOUN', 'rel': 'obl', 'root': 10}, {'id': 3, 'text': 'کودکی', 'lemma': 'کودکی', 'pos': 'NOUN', 'rel': 'nmod', 'root': 2}, {'id': 4, 'text': 'شان', 'lemma': 'آنها', 'pos': 'PRON', 'rel': 'nmod', 'root': 3}, {'id': 5, 'text': 'که', 'lemma': 'که', 'pos': 'SCONJ', 'rel': 'mark', 'root': 6}, {'id': 6, 'text': 'می\\u200cگفت', 'lemma': 'گفت#گو', 'pos': 'VERB', 'rel': 'acl', 'root': 2}, {'id': 7, 'text': '،', 'lemma': '،', 'pos': 'PUNCT', 'rel': 'punct', 'root': 6}, {'id': 8, 'text': 'گاهی', 'lemma': 'گاه', 'pos': 'NOUN', 'rel': 'obl', 'root': 10}, {'id': 9, 'text': 'حرص', 'lemma': 'حرص', 'pos': 'NOUN', 'rel': 'compound:lvc', 'root': 10}, {'id': 10, 'text': 'می\\u200cخورد', 'lemma': 'خورد#خور', 'pos': 'VERB', 'rel': 'root', 'root': 0}, {'id': 11, 'text': '!', 'lemma': '!', 'pos': 'PUNCT', 'rel': 'punct', 'root': 10}]]\n\n```\n\n```python\nsentences = doc._.sentences\nfor sentence in sentences:\n    text = sentence.text\n    for token in sentence:\n        token_text = token.text\n        lemma = token.lemma_ ## this has value only if lem is called\n        pos_tag = token.pos_ ## this has value only if pos is called\n        dep = token.dep_ ## this has value only if dep is called\n        dep_arc = token._.dep_arc ## this has value only if dep is called\nsent_constituency = doc._.constituency ## this has value only if cons is called\nsent_chunks = doc._.chunks ## this has value only if cons is called\nners = doc._.ners ## this has value only if ner is called\nspellchekers = doc._.spellchecker ## this has value only if spellchecker is called\nkasreh = doc._.kasreh_ezafe ## this has value only if kasreh is called\n```\n\n**Note** that ```_.constituency``` and ```_.chunks``` are the object of [SuPar](https://parser.yzhang.site/en/latest/) class.\n\n## Loading Persian NLP Datasets\nWe provide an easy-to-use way to load some popular Persian NLP datasets\n\nHere is the list of supported datasets.\n\n   |    Dataset             | Task \n|       :----------------:               |  :----------------:   \n   |    PersianNER           |   Named Entity Recognition   | \n   |       ARMAN             |   Named Entity Recognition\n   |       Peyma             | Named Entity Recognition\n  |       FarsTail           | Textual Entailment\n |        FaSpell           | Spell Checking\n  |      PersianNews        | Text Classification\n  |       PerUDT            | Universal Dependency\n  |      PnSummary          | Text Summarization\n  |    SnappfoodSentiment   | Sentiment Classification\n  |           TEP           | Text Translation(eng-fa)\n| WikipediaCorpus               | Corpus\n| PersianTweets           | Corpus\n\n\nall datasets are iterator and can be used like below:\n```python\nfrom dadmatools.datasets import FarsTail\nfrom dadmatools.datasets import SnappfoodSentiment\nfrom dadmatools.datasets import Peyma\nfrom dadmatools.datasets import PerUDT\nfrom dadmatools.datasets import PersianTweets\nfrom dadmatools.datasets import PnSummary\n\n\nfarstail = FarsTail()\n#len of dataset\nprint(len(farstail.train))\n\n#like a generator\nprint(next(farstail.train))\n\n#dataset details\npn_summary = PnSummary()\nprint('PnSummary dataset information: ', pn_summary.info)\n\n#loop over dataset\nsnpfood_sa = SnappfoodSentiment()\nfor i, item in enumerate(snpfood_sa.test):\n    print(item['comment'], item['label'])\n\n#get first tokens' lemma of all dev items\nperudt = PerUDT()\nfor token_list in perudt.dev:\n    print(token_list[0]['lemma'])\n\n#get NER tag of first Peyma's data\npeyma = Peyma()\nprint(next(peyma.data)[0]['tag'])\n\n#corpus \ntweets = PersianTweets()\nprint('tweets count : ', len(tweets.data))\nprint('sample tweet: ', next(tweets.data))\n```\nget dataset info:\n```python\n\nfrom dadmatools.datasets import get_all_datasets_info\n\nget_all_datasets_info().keys()\n#dict_keys(['Persian-NEWS', 'fa-wiki', 'faspell', 'PnSummary', 'TEP', 'PerUDT', 'FarsTail', 'Peyma', 'snappfoodSentiment', 'Persian-NER', 'Arman', 'PerSent'])\n\n#specify task\nget_all_datasets_info(tasks=['NER', 'Sentiment-Analysis'])\n```\nthe output will be:\n\n```json\n{\"ARMAN\": {\"description\": \"ARMAN dataset holds 7,682 sentences with 250,015 sentences tagged over six different classes.\\n\\nOrganization\\nLocation\\nFacility\\nEvent\\nProduct\\nPerson\",\n  \"filenames\": [\"train_fold1.txt\",\n   \"train_fold2.txt\",\n   \"train_fold3.txt\",\n   \"test_fold1.txt\",\n   \"test_fold2.txt\",\n   \"test_fold3.txt\"],\n  \"name\": \"ARMAN\",\n  \"size\": {\"test\": 7680, \"train\": 15361},\n  \"splits\": [\"train\", \"test\"],\n  \"task\": \"NER\",\n  \"version\": \"1.0.0\"},\n \"PersianNer\": {\"description\": \"source: https://github.com/Text-Mining/Persian-NER\",\n  \"filenames\": [\"Persian-NER-part1.txt\",\n   \"Persian-NER-part2.txt\",\n   \"Persian-NER-part3.txt\",\n   \"Persian-NER-part4.txt\",\n   \"Persian-NER-part5.txt\"],\n  \"name\": \"PersianNer\",\n  \"size\": 976599,\n  \"splits\": [],\n  \"task\": \"NER\",\n  \"version\": \"1.0.0\"},\n \"Peyma\": {\"description\": \"source: http://nsurl.org/2019-2/tasks/task-7-named-entity-recognition-ner-for-farsi/\",\n  \"filenames\": [\"peyma/600K\", \"peyma/300K\"],\n  \"name\": \"Peyma\",\n  \"size\": 10016,\n  \"splits\": [],\n  \"task\": \"NER\",\n  \"version\": \"1.0.0\"},\n \"snappfoodSentiment\": {\"description\": \"source: https://huggingface.co/HooshvareLab/bert-fa-base-uncased-sentiment-snappfood\",\n  \"filenames\": [\"snappfood/train.csv\",\n   \"snappfood/test.csv\",\n   \"snappfood/dev.csv\"],\n  \"name\": \"snappfoodSentiment\",\n  \"size\": {\"dev\": 6274, \"test\": 6972, \"train\": 56516},\n  \"splits\": [\"train\", \"test\", \"dev\"],\n  \"task\": \"Sentiment-Analysis\",\n  \"version\": \"1.0.0\"}}\n```\n\n\n## Loading Persian Word Embeddings\nTo start using embedding please install fasttext:\n\n`pip install fasttext`\n\ndownload, load and use some pre-trained Persian word embeddings.\n\ndadmatools supports all glove, fasttext, and word2vec formats.\n```python\nfrom dadmatools.embeddings import get_embedding, get_all_embeddings_info, get_embedding_info\nfrom pprint import pprint\n\npprint(get_all_embeddings_info())\n\n#get embedding information of specific embedding\nembedding_info = get_embedding_info('glove-wiki')\n\n#### load embedding ####\nword_embedding = get_embedding('glove-wiki')\n\n#get vector of the word\nprint(word_embedding['سلام'])\n\n#vocab\nvocab = word_embedding.get_vocab()\n\n### some useful functions ###\nprint(word_embedding.top_nearest(\"زمستان\", 10))\nprint(word_embedding.similarity('کتب', 'کتاب'))\nprint(word_embedding.embedding_text('امروز هوای خوبی بود'))\n```\nThe following word embeddings are currently supported: \n\n| Name | Embedding Algorithm | Corpus | \n| :-------------: | :-------------:  | :-------------:  | \n| [`glove-wiki`](https://github.com/Text-Mining/Persian-Wikipedia-Corpus/tree/master/models/glove)  | glove | Wikipedia  |\n| [`fasttext-commoncrawl-bin`](https://fasttext.cc/docs/en/crawl-vectors.html) | fasttext | CommonCrawl |\n| [`fasttext-commoncrawl-vec`](https://fasttext.cc/docs/en/crawl-vectors.html) | fasttext | CommonCrawl |\n| [`word2vec-conll`](http://vectors.nlpl.eu/) | word2vec | Persian CoNLL17 corpus  |\n\n## Evaluation\nWe have compared our pos tagging, dependancy parsing, and lemmatization models to `stanza` and `hazm`.\n\n<table>\n  <tr align='center'>\n    <td colspan=\"4\"><b>PerDT (F1 score)</b></td>\n  </tr>\n  <tr align='center'>\n    <td><b>Toolkit</b></td>\n    <td><b>POS Tagger (UPOS)</b></td>\n    <td><b>Dependancy Parser (UAS/LAS)</b></td>\n    <td><b>Lemmatizer</b></td>\n  </tr>\n  <tr align='center'>\n    <td>DadmaTools</td>\n    <td><b>97.52%</b></td>\n    <td><b>95.36%</b>  /  <b>92.54%</b> </td>\n    <td><b>99.14%</b> </td>\n  </tr>\n  <tr align='center'>\n    <td>stanza</td>\n    <td>97.35%</td>\n    <td>93.34%  /  91.05% </td>\n    <td>98.97% </td>\n  </tr>\n  <tr align='center'>\n    <td>hazm</td>\n    <td>-</td>\n    <td>- </td>\n    <td>89.01% </td>\n  </tr>\n\n\n  <tr align='center'>\n    <td colspan=\"4\"><b>Seraji (F1 score)</b></td>\n  </tr>\n  <tr align='center'>\n    <td><b>Toolkit</b></td>\n    <td><b>POS Tagger (UPOS)</b></td>\n    <td><b>Dependancy Parser (UAS/LAS)</b></td>\n    <td><b>Lemmatizer</b></td>\n  </tr>\n  <tr align='center'>\n    <td>DadmaTools</td>\n    <td><b>97.83%</b></td>\n    <td><b>92.5%</b>  /  <b>89.23%</b> </td>\n    <td> - </td>\n  </tr>\n  <tr align='center'>\n    <td>stanza</td>\n    <td>97.43%</td>\n    <td>87.20% /  83.89% </td>\n    <td> - </td>\n  </tr>\n  <tr align='center'>\n    <td>hazm</td>\n    <td>-</td>\n    <td>- </td>\n    <td>86.93% </td>\n  </tr>\n</table>\n\n\n<table>\n  <tr align='center'>\n    <td colspan=\"2\"><b>Tehran university tree bank (F1 score)</b></td>\n  </tr>\n  <tr align='center'>\n    <td><b>Toolkit</b></td>\n    <td><b>Constituency Parser</b></td>\n  </tr>\n  <tr align='center'>\n    <td>DadmaTools (without preprocess))</td>\n    <td><b>82.88%</b></td>\n  </tr>\n  <tr align='center'>\n    <td>Stanford (with some preprocess on POS tags)</td>\n    <td>80.28</td>\n  </tr>\n</table>\n\n\n## How to use\nYou can see the codes and the output in colab.\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1re_7tr-U6XOmzptkb-s-_lK2H9Kb0Y6l?usp=sharing)\n\n\n## Cite\n```\n@inproceedings{etezadi-etal-2022-dadmatools,\n    title = \"{D}adma{T}ools: Natural Language Processing Toolkit for {P}ersian Language\",\n    author = \"Etezadi, Romina  and\n      Karrabi, Mohammad  and\n      Zare, Najmeh  and\n      Sajadi, Mohamad Bagher  and\n      Pilehvar, Mohammad Taher\",\n    booktitle = \"Proceedings of the 2022 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies: System Demonstrations\",\n    month = jul,\n    year = \"2022\",\n    address = \"Hybrid: Seattle, Washington + Online\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2022.naacl-demo.13\",\n    pages = \"124--130\",\n    abstract = \"We introduce DadmaTools, an open-source Python Natural Language Processing toolkit for the Persian language. The toolkit is a neural pipeline based on spaCy for several text processing tasks, including normalization, tokenization, lemmatization, part-of-speech, dependency parsing, constituency parsing, chunking, and ezafe detecting. DadmaTools relies on fine-tuning of ParsBERT using the PerDT dataset for most of the tasks. Dataset module and embedding module are included in DadmaTools that support different Persian datasets, embeddings, and commonly used functions for them. Our evaluations show that DadmaTools can attain state-of-the-art performance on multiple NLP tasks. The source code is freely available at https://github.com/Dadmatech/DadmaTools.\",\n}\n``` \n\n<!-- Read the paper here.  -->\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Dadmatech/DadmaTools",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dadmatools",
    "package_url": "https://pypi.org/project/dadmatools/",
    "platform": null,
    "project_url": "https://pypi.org/project/dadmatools/",
    "project_urls": {
      "Homepage": "https://github.com/Dadmatech/DadmaTools"
    },
    "release_url": "https://pypi.org/project/dadmatools/1.5.2/",
    "requires_dist": [
      "bpemb (>=0.3.3)",
      "nltk",
      "folium (>=0.2.1)",
      "spacy (>=3.0.0)",
      "sklearn (>=0.0)",
      "torch (>=1.7.1)",
      "transformers (>=4.9.1)",
      "h5py (>=3.3.0)",
      "Deprecated (==1.2.6)",
      "hyperopt (>=0.2.5)",
      "pyconll (>=3.1.0)",
      "pytorch-transformers (>=1.1.0)",
      "segtok (>=1.5.7)",
      "tabulate (>=0.8.6)",
      "supar (==1.1.2)",
      "gensim (>=3.6.0)",
      "conllu",
      "gdown (>=4.3.1)",
      "NERDA",
      "py7zr (>=0.17.2)",
      "html2text",
      "tf-estimator-nightly (==2.8.0.dev2021122109)"
    ],
    "requires_python": "",
    "summary": "DadmaTools is a Persian NLP toolkit",
    "version": "1.5.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15006120,
  "releases": {
    "1.1.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f9ab780ecf808add8592c6ea263e4b8b4517864afa826beb6c63e85b4e1b534",
          "md5": "7cf8e603e953325d017e6b7381c5a466",
          "sha256": "8feaa7347d9e0ba32f9e2f2f24ec2860321210184a0d8c7c159440796294c164"
        },
        "downloads": -1,
        "filename": "dadmatools-1.1.1.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7cf8e603e953325d017e6b7381c5a466",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 861963,
        "upload_time": "2022-08-16T06:39:54",
        "upload_time_iso_8601": "2022-08-16T06:39:54.479556Z",
        "url": "https://files.pythonhosted.org/packages/8f/9a/b780ecf808add8592c6ea263e4b8b4517864afa826beb6c63e85b4e1b534/dadmatools-1.1.1.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1.dev2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e50ababd8f69ce63b03162c7efcdac8cfed9f5b55c691e6575d70b7625c204b0",
          "md5": "e49e531c6f999aeefac1ac2529c384e2",
          "sha256": "69b8206f5f2c220ad58c6e3ccc64168c93a518749a26cfeff342ade649ed9e6a"
        },
        "downloads": -1,
        "filename": "dadmatools-1.1.1.dev2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e49e531c6f999aeefac1ac2529c384e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 861963,
        "upload_time": "2022-08-16T07:43:15",
        "upload_time_iso_8601": "2022-08-16T07:43:15.766824Z",
        "url": "https://files.pythonhosted.org/packages/e5/0a/babd8f69ce63b03162c7efcdac8cfed9f5b55c691e6575d70b7625c204b0/dadmatools-1.1.1.dev2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f49559202bb1c4e10e0621dc1845e1004879443ce5df1a3ee1c170f6dd5f3d56",
          "md5": "305b7f6d7d088260ad27fa2eb122b4f5",
          "sha256": "6488c4a3a41620e77652238ec4b275240abd94af9a6bae33d6207b0573ccc74b"
        },
        "downloads": -1,
        "filename": "dadmatools-1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "305b7f6d7d088260ad27fa2eb122b4f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 843503,
        "upload_time": "2021-12-26T07:38:33",
        "upload_time_iso_8601": "2021-12-26T07:38:33.407507Z",
        "url": "https://files.pythonhosted.org/packages/f4/95/59202bb1c4e10e0621dc1845e1004879443ce5df1a3ee1c170f6dd5f3d56/dadmatools-1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc7c22e7a110458b1da1a5002470fc35dc5ad8ff26b3118ef22c15a4fa5da0fc",
          "md5": "e8a3280ede3962fb7502796697eb2d53",
          "sha256": "348da20f3a49da0709476b3bfcfee9c3a600bd617b5ebd08250234d649492d8f"
        },
        "downloads": -1,
        "filename": "dadmatools-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e8a3280ede3962fb7502796697eb2d53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 712821,
        "upload_time": "2021-12-26T07:38:49",
        "upload_time_iso_8601": "2021-12-26T07:38:49.888309Z",
        "url": "https://files.pythonhosted.org/packages/cc/7c/22e7a110458b1da1a5002470fc35dc5ad8ff26b3118ef22c15a4fa5da0fc/dadmatools-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee30784ee14a2d85ea46e62f781afda1b22b97506cd22dbcd94c046d0e7b66bd",
          "md5": "afff67f547b70b85f57ded7bd0156682",
          "sha256": "e81c4b1a02758ac59fc959b9bcf599cd6aa22d306ca1cb9b69612bd6304d9a2c"
        },
        "downloads": -1,
        "filename": "dadmatools-1.3.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afff67f547b70b85f57ded7bd0156682",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 848567,
        "upload_time": "2022-02-13T08:01:47",
        "upload_time_iso_8601": "2022-02-13T08:01:47.829270Z",
        "url": "https://files.pythonhosted.org/packages/ee/30/784ee14a2d85ea46e62f781afda1b22b97506cd22dbcd94c046d0e7b66bd/dadmatools-1.3.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c24ce53413e26d9fad9f18dcc582b5f2b5b8e3976f146b9555483962a3d560f",
          "md5": "b470657bef041947a4a187e9a0f97c4d",
          "sha256": "2f740defb7af13d012b09248763b1a25fdc0ecaed2bb36d4fa0e6b7b4afe42cf"
        },
        "downloads": -1,
        "filename": "dadmatools-1.3.10.tar.gz",
        "has_sig": false,
        "md5_digest": "b470657bef041947a4a187e9a0f97c4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 720611,
        "upload_time": "2022-02-13T08:01:57",
        "upload_time_iso_8601": "2022-02-13T08:01:57.432015Z",
        "url": "https://files.pythonhosted.org/packages/7c/24/ce53413e26d9fad9f18dcc582b5f2b5b8e3976f146b9555483962a3d560f/dadmatools-1.3.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dc4438c2f5dc52f9c9293b9d4f103c457494fa6b9d424a90196aca8578b37f1",
          "md5": "ff9dfda2ce6c509ff6e18ff2d620d59f",
          "sha256": "a178e579948a84c5f20b5288f9feebe687e7a4f269e24b62302bcde864202d8d"
        },
        "downloads": -1,
        "filename": "dadmatools-1.3.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff9dfda2ce6c509ff6e18ff2d620d59f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 846155,
        "upload_time": "2021-12-28T09:04:17",
        "upload_time_iso_8601": "2021-12-28T09:04:17.835740Z",
        "url": "https://files.pythonhosted.org/packages/4d/c4/438c2f5dc52f9c9293b9d4f103c457494fa6b9d424a90196aca8578b37f1/dadmatools-1.3.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20300d545451b7ffb6d2d097ee71951d1eb33b26d96608b3c005780f6cf4b1d6",
          "md5": "6dd8bb84ef2aa1601fc9a66a936b282c",
          "sha256": "93398b0cadda96a46bfbbfc8ad442092008fddffbdd89421a313ecf8a94a5c3c"
        },
        "downloads": -1,
        "filename": "dadmatools-1.3.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6dd8bb84ef2aa1601fc9a66a936b282c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 714514,
        "upload_time": "2021-12-28T09:04:37",
        "upload_time_iso_8601": "2021-12-28T09:04:37.142548Z",
        "url": "https://files.pythonhosted.org/packages/20/30/0d545451b7ffb6d2d097ee71951d1eb33b26d96608b3c005780f6cf4b1d6/dadmatools-1.3.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ac27a77d5f84fe4fb41b43510414ce0cfa7844a55c1874ac30addf6d58a5c7e",
          "md5": "32fbad0baf8e48f01cc591f4b116a304",
          "sha256": "d95b4fce76d8ba9151d84e95e0faa34a39cef9e81789051080f71ff354e36851"
        },
        "downloads": -1,
        "filename": "dadmatools-1.3.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32fbad0baf8e48f01cc591f4b116a304",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 847527,
        "upload_time": "2022-01-04T08:35:18",
        "upload_time_iso_8601": "2022-01-04T08:35:18.849328Z",
        "url": "https://files.pythonhosted.org/packages/9a/c2/7a77d5f84fe4fb41b43510414ce0cfa7844a55c1874ac30addf6d58a5c7e/dadmatools-1.3.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6092f759e06f3b712c09d17654af6ed5b8dfde0e36352a434adc620ebcbcb899",
          "md5": "701af07534ec0190a8662a023d47b2e4",
          "sha256": "1b8e23db9a06a0c001938777199f0f6d7418360a291021cc65437793b5db99ba"
        },
        "downloads": -1,
        "filename": "dadmatools-1.3.7.tar.gz",
        "has_sig": false,
        "md5_digest": "701af07534ec0190a8662a023d47b2e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 715967,
        "upload_time": "2022-01-04T08:35:28",
        "upload_time_iso_8601": "2022-01-04T08:35:28.185117Z",
        "url": "https://files.pythonhosted.org/packages/60/92/f759e06f3b712c09d17654af6ed5b8dfde0e36352a434adc620ebcbcb899/dadmatools-1.3.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1da77e335cbbae3d55a5c0c846bee3b9fa7b1045793f1b36b7e2f3ced1eca764",
          "md5": "a2b985c6eeb5834ea9d3121dc8144ed1",
          "sha256": "9e481bfd9f338e27098160c253f6637b6df146e9d41c6e97bd5feafd3b1966c5"
        },
        "downloads": -1,
        "filename": "dadmatools-1.3.8-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2b985c6eeb5834ea9d3121dc8144ed1",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 848529,
        "upload_time": "2022-02-09T12:27:58",
        "upload_time_iso_8601": "2022-02-09T12:27:58.506973Z",
        "url": "https://files.pythonhosted.org/packages/1d/a7/7e335cbbae3d55a5c0c846bee3b9fa7b1045793f1b36b7e2f3ced1eca764/dadmatools-1.3.8-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "324268c9968f5aa019e9b40d3d17eb0fdd21692ca54df7d86cd77799ed4ed2ff",
          "md5": "108f2656661319b2596418416fc8c144",
          "sha256": "a07f9aaf7dc7de7062171c2b05945a326d18a4841867b279df67ba9f04648850"
        },
        "downloads": -1,
        "filename": "dadmatools-1.3.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "108f2656661319b2596418416fc8c144",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 848548,
        "upload_time": "2022-02-09T13:09:39",
        "upload_time_iso_8601": "2022-02-09T13:09:39.288591Z",
        "url": "https://files.pythonhosted.org/packages/32/42/68c9968f5aa019e9b40d3d17eb0fdd21692ca54df7d86cd77799ed4ed2ff/dadmatools-1.3.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecc3f7822919546cb337012d8efcf0df86844d060479a078d34f08cbaf16d727",
          "md5": "d538426c9c1162974d8c7a1f217bf8cf",
          "sha256": "124272a5d4d8b7d49991ec08fd97ac442d8e26c4162a0ce3a200884bb2a18265"
        },
        "downloads": -1,
        "filename": "dadmatools-1.3.8.tar.gz",
        "has_sig": false,
        "md5_digest": "d538426c9c1162974d8c7a1f217bf8cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 720625,
        "upload_time": "2022-02-09T13:09:42",
        "upload_time_iso_8601": "2022-02-09T13:09:42.952954Z",
        "url": "https://files.pythonhosted.org/packages/ec/c3/f7822919546cb337012d8efcf0df86844d060479a078d34f08cbaf16d727/dadmatools-1.3.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8909da575f445c1a0a27969825dd616414de8e5b36cb9a37344aed32b5256b1a",
          "md5": "b64deefe3d59826f0ef3c64915a36128",
          "sha256": "b58856f6918468b26e46c91031f4bcd00308f16a7b7efc7a8ce70f38c91d84ef"
        },
        "downloads": -1,
        "filename": "dadmatools-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b64deefe3d59826f0ef3c64915a36128",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 848684,
        "upload_time": "2022-02-26T11:30:47",
        "upload_time_iso_8601": "2022-02-26T11:30:47.945820Z",
        "url": "https://files.pythonhosted.org/packages/89/09/da575f445c1a0a27969825dd616414de8e5b36cb9a37344aed32b5256b1a/dadmatools-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e75e86f72b7c2221a47e797040e68c2940772cc2d493075f674c6fab1f4bef86",
          "md5": "3239d251826234e1890cd3299626538b",
          "sha256": "118e082c32766f74a547f38bfc8a0fcf7187dbc5927c73c6313610b613429f1b"
        },
        "downloads": -1,
        "filename": "dadmatools-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3239d251826234e1890cd3299626538b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 720850,
        "upload_time": "2022-02-26T11:30:57",
        "upload_time_iso_8601": "2022-02-26T11:30:57.272994Z",
        "url": "https://files.pythonhosted.org/packages/e7/5e/86f72b7c2221a47e797040e68c2940772cc2d493075f674c6fab1f4bef86/dadmatools-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80881dbe92c4147e8239cfa85affa9855263a3262577531b378b51de1bfe398e",
          "md5": "ff1ac0798c598eff71524ad4e6c0bb98",
          "sha256": "f88f20179c484f8befe49e3e52a4e814f74e03180a2297a4b089478e06e69cd5"
        },
        "downloads": -1,
        "filename": "dadmatools-1.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff1ac0798c598eff71524ad4e6c0bb98",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 855941,
        "upload_time": "2022-06-15T12:00:23",
        "upload_time_iso_8601": "2022-06-15T12:00:23.726830Z",
        "url": "https://files.pythonhosted.org/packages/80/88/1dbe92c4147e8239cfa85affa9855263a3262577531b378b51de1bfe398e/dadmatools-1.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd0891871bfe566779aa02b5994cff02f5beb0901309abdbfa04815aa341aecf",
          "md5": "ca294040a8390c766ac87b533a14de2b",
          "sha256": "cc66071af0a6886e511ee1b4740a483eb53bffdb7340c3afe27c86d115a384f0"
        },
        "downloads": -1,
        "filename": "dadmatools-1.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca294040a8390c766ac87b533a14de2b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 862207,
        "upload_time": "2022-08-16T08:59:53",
        "upload_time_iso_8601": "2022-08-16T08:59:53.536607Z",
        "url": "https://files.pythonhosted.org/packages/dd/08/91871bfe566779aa02b5994cff02f5beb0901309abdbfa04815aa341aecf/dadmatools-1.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4da6d63ee00113695606da9416373e76eb7d46e0354663a4963f2333d37d7d5e",
          "md5": "988e7a8f01f68f1cf3bc0cadf05ca93f",
          "sha256": "cd8a87f1135988561d4afd0605a25775ca6857fdeebaab9411df443fc08ed7cc"
        },
        "downloads": -1,
        "filename": "dadmatools-1.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "988e7a8f01f68f1cf3bc0cadf05ca93f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 862593,
        "upload_time": "2022-09-06T10:57:22",
        "upload_time_iso_8601": "2022-09-06T10:57:22.192106Z",
        "url": "https://files.pythonhosted.org/packages/4d/a6/d63ee00113695606da9416373e76eb7d46e0354663a4963f2333d37d7d5e/dadmatools-1.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4da6d63ee00113695606da9416373e76eb7d46e0354663a4963f2333d37d7d5e",
        "md5": "988e7a8f01f68f1cf3bc0cadf05ca93f",
        "sha256": "cd8a87f1135988561d4afd0605a25775ca6857fdeebaab9411df443fc08ed7cc"
      },
      "downloads": -1,
      "filename": "dadmatools-1.5.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "988e7a8f01f68f1cf3bc0cadf05ca93f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 862593,
      "upload_time": "2022-09-06T10:57:22",
      "upload_time_iso_8601": "2022-09-06T10:57:22.192106Z",
      "url": "https://files.pythonhosted.org/packages/4d/a6/d63ee00113695606da9416373e76eb7d46e0354663a4963f2333d37d7d5e/dadmatools-1.5.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}