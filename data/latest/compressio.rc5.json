{
  "info": {
    "author": "Ian Eaves, Simon Brugman",
    "author_email": "ian.k.eaves@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "![Compressio Logo](https://github.com/dylan-profiler/compressio/raw/master/images/logo/compressio-logos_transparent_banner.png)\n\n# Compress*io*\n\n> Compressio provides lossless in-memory compression of pandas DataFrames and Series powered by the [visions](https://github.com/dylan-profiler/visions) type system. Use up to 10x less RAM with the same data!\n\nGetting started is as easy as\n\n```python\nfrom compressio import Compress\n\ncompress = Compress()\ncompressed_data = compress.it(data)\n\n```\n\n\n## The Framework\n\nCompressio is a general framework for automated data compression and representation management not limited to any specific compression algorithm or implementation.\nYou have complete control, define your own types, write your own compression algorithms, or get started with the large library of types provided by [visions](https://dylan-profiler.github.io/visions/visions/api/types.html) and the suite of powerful algorithms included in compressio by default.\n\n\nThese algorithms can be subdivided around three basic optimization strategies:\n\n1. Prefer smaller dtypes where possible without loss of information\n2. Consider (more efficient) data representations*\n3. Compress data using more efficient data structures\n\n\\* this is where things get messy without visions\n\n### 1. Smaller dtypes\n\nUnder the hood, pandas leverages numpy arrays to store data.\nEach numpy array has an associated `dtype` specifying a physical, on disk, representation of the data.\nFor instance, a sequence of integers might be stored as 64-bit integers (`int64`), 8-bit unsigned integers (`uint8`) or even 32-bit floating point number (`float32`).\nAn overview of the numpy type system can be found [here](https://numpy.org/doc/stable/user/basics.types.html).\n\nThese type differences have numerous computational implications, for example, where an 8 bit integer can represent numbers between 0 and 255, the range of a 64 bit integer is  between -9,223,372,036,854,775,808 and 9,223,372,036,854,775,807 at the cost of an 8x larger memory footprint.\nThere can also be computational performance implications for different sizes.\n\n```python\nimport numpy as np\n\narray_int_64 = np.ones((1000, 1000), dtype=np.int64)\nprint(array_int_64.nbytes)\n8000000\n\narray_int_8 = np.ones((1000, 1000), dtype=np.int8)\nprint(array_int_8.nbytes)\n1000000\n```\n\nAs you can see, the 8-bit integer array decreases the memory usage by 87.5%.\n\n### 2. Appropriate machine representation\n\nCompressio uses visions to infer the semantic type of data and coerce it into alternative computational representations which minimize memory impact while maintaining it's semantic meaning.\n\n\nFor instance, although pandas can use the generic object dtype to store boolean sequences, it comes at the cost of a 4x memory footprint.\nVisions can automatically handle these circumstances to find an appropriate representation for your data.\n\n```python\n>>>> import pandas as pd\n>>>> # dtype: object\n>>>> series = pd.Series([True, False, None, None, None, None, True, False] * 1000)\n>>>> print(series.nbytes)\n64000\n\n>>>> # dtype: boolean (pandas' nullable boolean)\n>>>> new_series = series.astype(\"boolean\")\n>>>> print(new_series.nbytes)\n16000\n```\n\nFurther background information is available in the [visions documentation](https://dylan-profiler.github.io/visions/visions/applications/compression.html), [github repository](https://github.com/dylan-profiler/visions) and [JOSS publication](https://joss.theoj.org/papers/10.21105/joss.02145).\n\n### 3. Efficient data structures\n\nWithout additional instructions, pandas represents your data as *dense* arrays. This is a good all-round choice. \n\nWhen your data is not randomly distributed, it can be compressed ([Theory](https://simonbrugman.nl/2020/04/02/searching-for-neural-networks-with-low-kolmogorov-complexity.html#kolmogorov-complexity)).\n\nLow cardinality data can often be more efficiently stored using [sparse data structures](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray), which are provided by pandas by default. \nThese structures offer efficiency by storing the predominant values only once and instead keeping indices for all other values.\n\n[This notebook](https://github.com/dylan-profiler/compressio/raw/master/examples/notebooks/Sparse%20Data.ipynb) shows how to use compressio with sparse data structures.\n\nData structure optimization is not limited to sparse arrays but instead include numerous domain specific opportunities such as [run-length encoding (RLE)](https://www.dlsi.ua.es/~carrasco/papers/RLE%20-%20Run%20length%20Encoding.html) which can be applied to compress sequential data. \nWe note that a pandas-specific third-party implementation is currently under development: [RLEArray](https://github.com/JDASoftwareGroup/rle-array).\n\n## Usage\n\n### Installation\n\nYou can easily install compressio with pip:\n\n```\npip install compressio\n```\n\nOr, alternatively, install from source.\n\n```\ngit clone https://github.com/dylan-profiler/compressio.git\n```\n\n### Examples\n\n[![Code example](https://github.com/dylan-profiler/compressio/raw/master/images/notebook-example.png)](examples/notebooks/Compressio.ipynb).\n\nThere is a collection of example notebooks to play with in the [examples directory](https://github.com/dylan-profiler/compressio/raw/master/examples/notebooks/) with a quick start notebook available [here](https://github.com/dylan-profiler/compressio/raw/master/examples/notebooks/Compressio.ipynb).\n\n## Optimizing strings in pandas\n\nPandas allows for multiple ways of storing strings: as string objects or as `pandas.Category`. Recent version of pandas have a `pandas.String` type.\n\nHow you store strings in pandas can significantly impact the RAM required. \n\n[![Memory usage of string representations in pandas](https://github.com/dylan-profiler/compressio/raw/master/images/str-type-1.1.0.png)](examples/notebooks/pandas%20string%20type%20analysis.ipynb)\n\nThe key insights from this analysis are:\n- The Category is more memory efficient when values are recurring and the String representation the percentage of distinct values. \n- The size of the Series is _not_ decisive for the string representation choice.\n\nYou can find the full analysis [here](https://github.com/dylan-profiler/compressio/raw/master/examples/notebooks/pandas%20string%20type%20analysis.ipynb).\n\n## Gotcha's\n\nCompressing DataFrames can be helpful in many situations, but not all.\nBe mindful of how to apply it in the following cases:\n\n- _Overflow_: compression by dropping precision can lead to overflows if the array is manipulated afterwards. \nThis can be an issue for instance for [numpy integers](https://mortada.net/can-integer-operations-overflow-in-python.html). In case this is a problem for your application, you can explicitly choose a precision.\n\n- _Compatibility_: other libraries may make different decisions to how to handle your compressed data.\nOne example where code needs to be adjusted to the compressed data is when the sparse data structure is used in combination with [`.groupby`](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html). (`observed` must be set to `True`).\nThis [article](https://pythonspeed.com/articles/numpy-memory-footprint/#when-these-strategies-wont-work) provides another example of scikit-image, which for some functions immediately converts a given array to a float64 dtype.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dylan-profiler/compressio",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "compressio",
    "package_url": "https://pypi.org/project/compressio/",
    "platform": "",
    "project_url": "https://pypi.org/project/compressio/",
    "project_urls": {
      "Homepage": "https://github.com/dylan-profiler/compressio"
    },
    "release_url": "https://pypi.org/project/compressio/0.1.4/",
    "requires_dist": [
      "visions (>=0.6.0)",
      "pint",
      "pandas",
      "numpy"
    ],
    "requires_python": ">=3.6",
    "summary": "compressio",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8405655,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9964c8e88474b7f6c17acb5f203841c8718b88e443701d019fdb08ae5b591d9",
          "md5": "945bbe736997ec01c7eb253d99116a71",
          "sha256": "5c70af4c93dea4cc7e966c2cf97dfe279ad59b0e99fd8e8fb1e64ed6ed49b066"
        },
        "downloads": -1,
        "filename": "compressio-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "945bbe736997ec01c7eb253d99116a71",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6560,
        "upload_time": "2020-08-17T04:55:35",
        "upload_time_iso_8601": "2020-08-17T04:55:35.239193Z",
        "url": "https://files.pythonhosted.org/packages/f9/96/4c8e88474b7f6c17acb5f203841c8718b88e443701d019fdb08ae5b591d9/compressio-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6deebc47e6815f5f806986926c21f9d04b1df2184f30123c21da8236f53de2d0",
          "md5": "bcde91252fce4b35c79b60657c98d29f",
          "sha256": "1044adefd04777916dc331bec30699a6af034289774aabc6fd87989462cfe7a5"
        },
        "downloads": -1,
        "filename": "compressio-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bcde91252fce4b35c79b60657c98d29f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 241076,
        "upload_time": "2020-08-17T04:55:37",
        "upload_time_iso_8601": "2020-08-17T04:55:37.827650Z",
        "url": "https://files.pythonhosted.org/packages/6d/ee/bc47e6815f5f806986926c21f9d04b1df2184f30123c21da8236f53de2d0/compressio-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d8fc52666abe7449858b67222b0678e207409f9d8ee1c37001a0f6d88242864",
          "md5": "066220b196321a79f2b629485878a0a7",
          "sha256": "f6f7979b99345891e72675107a57829510fa05301e73d466a2484ff4914d303c"
        },
        "downloads": -1,
        "filename": "compressio-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "066220b196321a79f2b629485878a0a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10681,
        "upload_time": "2020-08-31T18:07:33",
        "upload_time_iso_8601": "2020-08-31T18:07:33.702611Z",
        "url": "https://files.pythonhosted.org/packages/7d/8f/c52666abe7449858b67222b0678e207409f9d8ee1c37001a0f6d88242864/compressio-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3e9122baaa223f4b8f274cc0c705c532fa1646ca151570722bcd8de61ed3467",
          "md5": "cf428a0ac0b2f7173d51fa100ba69224",
          "sha256": "e2e89395d11d602591d0f92fdbede7e2b015ad52e415e5f337f47325718c6772"
        },
        "downloads": -1,
        "filename": "compressio-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cf428a0ac0b2f7173d51fa100ba69224",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1265713,
        "upload_time": "2020-08-31T18:07:35",
        "upload_time_iso_8601": "2020-08-31T18:07:35.034141Z",
        "url": "https://files.pythonhosted.org/packages/d3/e9/122baaa223f4b8f274cc0c705c532fa1646ca151570722bcd8de61ed3467/compressio-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0b941ec60e373135b4349c71b4c7f3cf2930d01833f65e9732ebb8c1d5d964a",
          "md5": "afda1561359e6929a2e9d9eb939d0e57",
          "sha256": "30c94705da09ac0dfbc1da1429ecb00f743f84cbc3e492d247b43b1f697cf273"
        },
        "downloads": -1,
        "filename": "compressio-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afda1561359e6929a2e9d9eb939d0e57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10694,
        "upload_time": "2020-09-22T23:40:51",
        "upload_time_iso_8601": "2020-09-22T23:40:51.957985Z",
        "url": "https://files.pythonhosted.org/packages/a0/b9/41ec60e373135b4349c71b4c7f3cf2930d01833f65e9732ebb8c1d5d964a/compressio-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d46932814d9f684e5b8f8f0ec09480a48db612af96c52541f2778cc3f14688da",
          "md5": "700be142cc49409075eba7bf0ac78bb5",
          "sha256": "a168f10059ff2efeccbc80244f3ff1c9aa94e271c247f8f4157cb383986e2104"
        },
        "downloads": -1,
        "filename": "compressio-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "700be142cc49409075eba7bf0ac78bb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1265738,
        "upload_time": "2020-09-22T23:40:53",
        "upload_time_iso_8601": "2020-09-22T23:40:53.249233Z",
        "url": "https://files.pythonhosted.org/packages/d4/69/32814d9f684e5b8f8f0ec09480a48db612af96c52541f2778cc3f14688da/compressio-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a77809fa6f2ddf1be08dc9a6a3d8f4be86fff04a43a7ccba04f64b4818786387",
          "md5": "874cb5cae4d7de848f9d39d5f8875727",
          "sha256": "85f3e0ce49137a67b79b3b9c2d1443051404c01a66503973038a5452eecabebd"
        },
        "downloads": -1,
        "filename": "compressio-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "874cb5cae4d7de848f9d39d5f8875727",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10831,
        "upload_time": "2020-09-23T20:47:26",
        "upload_time_iso_8601": "2020-09-23T20:47:26.071745Z",
        "url": "https://files.pythonhosted.org/packages/a7/78/09fa6f2ddf1be08dc9a6a3d8f4be86fff04a43a7ccba04f64b4818786387/compressio-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9591e59410ccd8fb5ca8f3e3d2f4ee5eccabc268fd1497317b7daaa78b9e0a58",
          "md5": "69d64eccde39db472a95ecb04c6931da",
          "sha256": "80064c65169dcf0a133b9fbb0aa02a49e1f6eb2a9fc1672650376beacd5c4636"
        },
        "downloads": -1,
        "filename": "compressio-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "69d64eccde39db472a95ecb04c6931da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1265852,
        "upload_time": "2020-09-23T20:47:27",
        "upload_time_iso_8601": "2020-09-23T20:47:27.344139Z",
        "url": "https://files.pythonhosted.org/packages/95/91/e59410ccd8fb5ca8f3e3d2f4ee5eccabc268fd1497317b7daaa78b9e0a58/compressio-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b70f55ee14a82d2e37c6cebaae1ac1d480949791264b4e9fb9609eb899197b29",
          "md5": "fe73f290f75bf3a3071d77d546539b71",
          "sha256": "c8b5a0b548c21f257e21f5e9a23b04247b7873e15a8dce83177ae157fc79b862"
        },
        "downloads": -1,
        "filename": "compressio-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe73f290f75bf3a3071d77d546539b71",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11005,
        "upload_time": "2020-10-13T22:53:43",
        "upload_time_iso_8601": "2020-10-13T22:53:43.990984Z",
        "url": "https://files.pythonhosted.org/packages/b7/0f/55ee14a82d2e37c6cebaae1ac1d480949791264b4e9fb9609eb899197b29/compressio-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "412be6991b1bb9be16d077459ae73d457701ac1c234542b7cfabadba022f2d43",
          "md5": "72415763e3ba5fb398bedec5f44f3444",
          "sha256": "1f174e2b40ccf7c5681de37532d9535e04d296f3ce8a9f836d02d0957490421e"
        },
        "downloads": -1,
        "filename": "compressio-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "72415763e3ba5fb398bedec5f44f3444",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1266106,
        "upload_time": "2020-10-13T22:53:45",
        "upload_time_iso_8601": "2020-10-13T22:53:45.145734Z",
        "url": "https://files.pythonhosted.org/packages/41/2b/e6991b1bb9be16d077459ae73d457701ac1c234542b7cfabadba022f2d43/compressio-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b70f55ee14a82d2e37c6cebaae1ac1d480949791264b4e9fb9609eb899197b29",
        "md5": "fe73f290f75bf3a3071d77d546539b71",
        "sha256": "c8b5a0b548c21f257e21f5e9a23b04247b7873e15a8dce83177ae157fc79b862"
      },
      "downloads": -1,
      "filename": "compressio-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fe73f290f75bf3a3071d77d546539b71",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11005,
      "upload_time": "2020-10-13T22:53:43",
      "upload_time_iso_8601": "2020-10-13T22:53:43.990984Z",
      "url": "https://files.pythonhosted.org/packages/b7/0f/55ee14a82d2e37c6cebaae1ac1d480949791264b4e9fb9609eb899197b29/compressio-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "412be6991b1bb9be16d077459ae73d457701ac1c234542b7cfabadba022f2d43",
        "md5": "72415763e3ba5fb398bedec5f44f3444",
        "sha256": "1f174e2b40ccf7c5681de37532d9535e04d296f3ce8a9f836d02d0957490421e"
      },
      "downloads": -1,
      "filename": "compressio-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "72415763e3ba5fb398bedec5f44f3444",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 1266106,
      "upload_time": "2020-10-13T22:53:45",
      "upload_time_iso_8601": "2020-10-13T22:53:45.145734Z",
      "url": "https://files.pythonhosted.org/packages/41/2b/e6991b1bb9be16d077459ae73d457701ac1c234542b7cfabadba022f2d43/compressio-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}