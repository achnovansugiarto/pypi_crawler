{
  "info": {
    "author": "",
    "author_email": "Sebastiaan Mathôt <s.mathot@cogsci.nl>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Time Series Test\n\n*Statistical testing and plotting functions for time-series data in general, and data from cognitive-pupillometry and electroencephalography (EEG) experiments in particular. Based on linear mixed effects modeling (or regular multiple linear regression), crossvalidation, and cluster-based permutation testing.*\n\nSebastiaan Mathôt (@smathot) <br />\nCopyright 2021 - 2023\n\n[![Publish to PyPi](https://github.com/smathot/time_series_test/actions/workflows/publish-package.yaml/badge.svg)](https://github.com/smathot/time_series_test/actions/workflows/publish-package.yaml)\n[![Tests](https://github.com/smathot/time_series_test/actions/workflows/run-unittests.yaml/badge.svg)](https://github.com/smathot/time_series_test/actions/workflows/run-unittests.yaml)\n\n\n## Contents\n\n- [Citation](#citation)\n- [About](#about)\n- [Dependencies](#dependencies)\n- [Usage](#usage)\n- [Function reference](#function-reference)\n- [License](#license)\n\n\n## Citation\n\nMathôt, S., & Vilotijević, A. (2022). Methods in cognitive pupillometry: design, preprocessing, and analysis. *Behavior Research Methods*. <https://doi.org/10.1101/2022.02.23.481628>\n\n\n## About\n\nThis library provides two main functions for statistical testing of time-series data: `lmer_crossvalidation_test()` and `lmer_permutation_test()`. For a detailed description, see the manuscript above, but below a short introduction to both functions with their respective advantages and disadavantages.\n\n\n### When to use crossvalidation?\n\nIn general terms, `lmer_crossvalidation_test()` implements a statistical test for a specific-yet-common question when analyzing time-series data:\n\n> Do one or more independent variables affect a continuously recorded dependent variable (a 'time series') at any point in time?\n\nWhen to use this test:\n\n- For time series consisting of only a single component, that is, when each independent variable has only a single effect on the time series. An example of this is the effect of stimulus intensity on pupil size, when presenting light flashes of different intensities.\n- When you do not know a priori which time points to test.\n\nWhen *not* to use this test:\n\n- For time series that contain multiple components, that is, when each independent variable affects the time series in multiple ways that change over time. An example of this is the effect of visual attention on lateralized EEG recordings, where different EEG components emerge at different points in time.\n- When you know a priori which time points to test.\n\nMore specifically, `lmer_crossvalidation_test()` locates and statistically tests effects in time-series data. It does so by using crossvalidation to identify time points to test, and then using a linear mixed effects model to actually perform the statistical test. More specifically, the data is subdivided in a number of subsets (by default 4). It takes one of the subsets (the *test* set) out of the full dataset, and conducts a linear mixed effects model on each sample of the remaining data (the *training* set). The sample with the highest absolute z value in the training set is used as the sample-to-be-tested for the test set. This procedure is repeated for all subsets of the data, and for all fixed effects in the model. Finally, a single linear mixed effects model is conducted for each fixed effects on the samples that were thus identified.\n\nThis packages also provides a function (`plot()`) to visualize time-series data to visually annotate the results of `lmer_crossvalidation_test()`.\n\n\n### When to use `lmer_permutation_test()`?\n\n`lmer_permutation_test()` implements a fairly standard cluster-based permutation test, which differs from most other implementations in that it relies on linear mixed-effects modeling to calculate the test statistics. Therefore, this function tends to be extremely computationally intensive, but should also be more sensitive than cluster-based permutation tests that are based on average data. Its main advantage as compared to `lmer_crossvalidation_test()` is that it is also valid for data with multiple components, such as event-related potentials (ERPs).\n\n\n### Can the tests also be based on regular multiple regression (instead of linear mixed effects modeling)?\n\nYes. If you pass `groups=None` to any of the functions, the analysis will be based on a regular multiple linear regression instead of linear mixed effects modeling.\n\n\n## Installation\n\n```\npip install time_series_test\n```\n\n## Dependencies\n\n- [Python 3](https://www.python.org/)\n- [datamatrix](https://pydatamatrix.eu/)\n- [statsmodels](https://www.statsmodels.org/)\n- [matplotlib](https://matplotlib.org/)\n\n\n## Usage\n\nWe will use data from [Zhou, Lorist, and Mathôt (2021)](https://doi.org/10.1101/2021.11.23.469689). In brief, this is data from a visual-working-memory experiment in which participant memorized one or more colors (set size: 1, 2, 3 or 4) of two different types (color type: proto, nonproto) while pupil size was being recorded during a 3s retention interval.\n\nThis dataset contains the following columns:\n\n- `pupil`, which is is our dependent measure. It is a baseline-corrected pupil time series of 300 samples, recorded at 100 Hz\n- `subject_nr`, which we will use as a random effect\n- `set_size`, which we will use as a fixed effect\n- `color_type`, which we will use as a fixed effect\n\nFirst, load the dataset:\n\n\n\n```python\nfrom datamatrix import io\ndm = io.readpickle('data/zhou_et_al_2021.pkl')\n```\n\n\n\nThe `plot()` function provides a convenient way to plot pupil size over time as a function of one or two factors, in this case set size and color type:\n\n\n\n```python\nimport time_series_test as tst\nfrom matplotlib import pyplot as plt\n\ntst.plot(dm, dv='pupil', hue_factor='set_size', linestyle_factor='color_type')\nplt.savefig('img/signal-plot-1.png')\n```\n\n\n\n![](https://github.com/smathot/time_series_test/raw/master/img/signal-plot-1.png)\n\nFrom this plot, we can tell that there appear to be effects in the 1500 to 2000 ms interval. To test this, we could perform a linear mixed effects model on this interval, which corresponds to samples 150 to 200.\n\nThe model below uses mean pupil size during the 150 - 200 sample range as dependent measure, set size and color type as fixed effects, and a random by-subject intercept. In the more familiar notation of the R package `lme4`, this corresponds to `mean_pupil ~ set_size * color_type + (1 | subject_nr)`. (To use more complex random-effects structures, you can use the `re_formula` argument to `mixedlm()`.)\n\n\n\n```python\nfrom statsmodels.formula.api import mixedlm\nfrom datamatrix import series as srs, NAN\n\ndm.mean_pupil = srs.reduce(dm.pupil[:, 150:200])\ndm_valid_data = dm.mean_pupil != NAN\nmodel = mixedlm(formula='mean_pupil ~ set_size * color_type',\n                data=dm_valid_data, groups='subject_nr').fit()\nprint(model.summary())\n```\n\n__Output:__\n``` .text\n                    Mixed Linear Model Regression Results\n=============================================================================\nModel:                    MixedLM       Dependent Variable:       mean_pupil \nNo. Observations:         7300          Method:                   REML       \nNo. Groups:               30            Scale:                    38610.3390 \nMin. group size:          235           Log-Likelihood:           -48952.3998\nMax. group size:          248           Converged:                Yes        \nMean group size:          243.3                                              \n-----------------------------------------------------------------------------\n                              Coef.   Std.Err.   z    P>|z|  [0.025   0.975] \n-----------------------------------------------------------------------------\nIntercept                    -144.024   17.438 -8.259 0.000 -178.202 -109.846\ncolor_type[T.proto]           -24.133   11.299 -2.136 0.033  -46.278   -1.987\nset_size                       49.979    2.906 17.200 0.000   44.284   55.675\nset_size:color_type[T.proto]   10.176    4.120  2.470 0.014    2.101   18.251\nsubject_nr Var               7217.423    9.882                               \n=============================================================================\n\n```\n\n\n\nThe model summary shows that, assuming an alpha level of .05, there are significant main effects of color type (z = -2.136, p = .033), set size (z = 17.2, p < .001), and a significant color-type by set-size interaction (z = 2.47, p = .014). However, we have selectively analyzed a sample range that we knew, based on a visual inspection of the data, to show these effects. This means that our analysis is circular: we have looked at the data to decide where to look! The `find()` function improves this by splitting the data into training and tests sets, as described under [About](#about), thus breaking the circularity.\n\n\n\n```python\nresults = tst.find(dm, 'pupil ~ set_size * color_type',\n                   groups='subject_nr', winlen=5)\n```\n\n\n\nThe return value of `find()` is a `dict`, where keys are effect labels and values are named tuples of the following:\n\n- `model`: a model as returned by `mixedlm().fit()`\n- `samples`: a `set` with the sample indices that were used\n- `p`: the p-value from the model\n- `z`: the z-value from the model\n\nThe `summarize()` function is a convenient way to get the results in a human-readable format.\n\n\n\n```python\nprint(tst.summarize(results))\n```\n\n__Output:__\n``` .text\nIntercept was tested at samples {95} → z = -13.1098, p = 2.892e-39\ncolor_type[T.proto] was tested at samples {160, 170, 175} → z = -2.0949, p = 0.03618\nset_size was tested at samples {185, 210, 195, 255} → z = 16.2437, p = 2.475e-59\nset_size:color_type[T.proto] was tested at samples {165, 175} → z = 2.5767, p = 0.009974\n```\n\n\n\nWe can pass the `results` to `plot()` to visualize the results:\n\n\n\n```python\nplt.clf()\ntst.plot(dm, dv='pupil', hue_factor='set_size', linestyle_factor='color_type',\n         results=results)\nplt.savefig('img/signal-plot-2.png')\n```\n\n\n\n![](https://github.com/smathot/time_series_test/raw/master/img/signal-plot-2.png)\n\n\n## Function reference\n\n## <span style=\"color:purple\">time\\_series\\_test.lmer\\_crossvalidation\\_test</span>_(dm, formula, groups, re\\_formula=None, winlen=1, split=4, split\\_method='interleaved', samples\\_fe=True, samples\\_re=True, localizer\\_re=False, fit\\_method=None, suppress\\_convergence\\_warnings=False, fit\\_kwargs=None, \\*\\*kwargs)_\n\nConducts a single linear mixed effects model to a time series, where the\nto-be-tested samples are determined through crossvalidation.\n\nThis function uses `mixedlm()` from the `statsmodels` package. See the\nstatsmodels documentation for a more detailed explanation of the\nparameters.\n\n### Parameters\n\n* **dm: DataMatrix**\n\n  The dataset\n\n* **formula: str**\n\n  A formula that describes the dependent variable, which should be the\n  name of a series column in `dm`, and the fixed effects, which should\n  be regular (non-series) columns.\n\n* **groups: str or None or list of str**\n\n  The groups for the random effects, which should be regular (non-series)\n  columns in `dm`. If `None` is specified, then all analyses are based\n  on a regular multiple linear regression (instead of linear mixed \n  effects model).\n\n* **re\\_formula: str or None**\n\n  A formula that describes the random effects, which should be regular\n  (non-series) columns in `dm`.\n\n* **winlen: int, optional**\n\n  The number of samples that should be analyzed together, i.e. a \n  downsampling window to speed up the analysis.\n\n* **split: int, optional**\n\n  The number of splits that the analysis should be based on.\n\n* **split\\_method: str, optional**\n\n  If 'interleaved', the data is split in a regular interleaved fashion,\n  such that the first row goes to the first subset, the second row to the\n  second subset, etc. If 'random', the data is split randomly in subsets.\n  Interleaved splitting is deterministic (i.e. it results in the same\n  outcome each time), but random splitting is not.\n\n* **samples\\_fe: bool, optional**\n\n  Indicates whether sample indices are included as an additive factor\n  to the fixed-effects formula. If all splits yielded the same sample\n  index, this is ignored.\n\n* **samples\\_re: bool, optional**\n\n  Indicates whether sample indices are included as an additive factor\n  to the random-effects formula. If all splits yielded the same sample\n  index, this is ignored.\n\n* **localizer\\_re: bool, optional**\n\n  Indicates whether a random effects structure as specified using the\n  `re_formula` keyword should also be used for the localizer models,\n  or only for the final model.\n\n* **fit\\_kwargs: dict or None, optional**\n\n  A `dict` that is passed as keyword arguments to `mixedlm.fit()`. For\n  example, to specify the nm as the fitting method, specify\n  `fit_kwargs={'fit': 'nm'}`.\n\n* **fit\\_method: str, list of str, or None, optional**\n\n  Deprecated. Use `fit_kwargs` instead.\n\n* **suppress\\_convergence\\_warnings: bool, optional**\n\n  Installs a warning filter to suppress conververgence (and other)\n  warnings.\n\n* **\\*\\*kwargs: dict, optional**\n\n  Optional keywords to be passed to `mixedlm()`.\n\n### Returns\n\n* **_dict_**\n\n  A dict where keys are effect labels, and values are named tuples\n  of `model`, `samples`, `p`, and `z`.\n\n## <span style=\"color:purple\">time\\_series\\_test.lmer\\_permutation\\_test</span>_(dm, formula, groups, re\\_formula=None, winlen=1, suppress\\_convergence\\_warnings=False, fit\\_kwargs={}, iterations=1000, cluster\\_p\\_threshold=0.05, test\\_intercept=False, \\*\\*kwargs)_\n\nPerforms a cluster-based permutation test based on sample-by-sample\nlinear-mixed-effects analyses. The permutation test identifies clusters\nbased on p-value threshold and uses the absolute of the summed z-values of\nthe clusters as test statistic.\n\nIf no clusters reach the threshold, the test is skipped right away. By\ndefault the Intercept is ignored for this criterion, because the intercept\nusually has significant clusters that we're not interested in. However, you\ncan change this using the `test_intercept` keyword.\n\n*Warning:* This is generally an extremely time-consuming analysis because\nit requires thousands of lmers to be run.\n\nSee `lmer_crossvalidation()` for an explanation of the arguments.\n\n### Parameters\n\n* **dm: DataMatrix**\n\n* **formula: str**\n\n* **groups: str**\n\n* **re\\_formula: str or None, optional**\n\n* **winlen: int, optional**\n\n* **suppress\\_convergence\\_warnings: bool, optional**\n\n* **fit\\_kwargs: dict, optional**\n\n* **iterations: int, optional**\n\n  The number of permutations to run.\n\n* **cluster\\_p\\_threshold: float or None, optional**\n\n  The maximum p-value for a sample to be considered part of a cluster.\n\n* **test\\_intercept: bool, optional**\n\n  Indicates whether the intercept should be included when considering if\n  there are any clusters, as described above.\n\n* **\\*\\*kwargs: dict, optional**\n\n### Returns\n\n* **_dict_**\n\n  A dict with effects as keys and lists of clusters defined by\n  (start, end, z-sum, hit proportion) tuples. The p-value is\n  1 - hit proportion.\n\n## <span style=\"color:purple\">time\\_series\\_test.lmer\\_series</span>_(dm, formula, winlen=1, fit\\_kwargs={}, \\*\\*kwargs)_\n\nPerforms a sample-by-sample linear-mixed-effects analysis. See\n`lmer_crossvalidation()` for an explanation of the arguments.\n\n### Parameters\n\n* **dm: DataMatrix**\n\n* **formula: str**\n\n* **winlen: int, optional**\n\n* **fit\\_kwargs: dict, optional**\n\n* **\\*\\*kwargs: dict, optional**\n\n### Returns\n\n* **_DataMatrix_**\n\n  A DataMatrix with one row per effect, including the intercept, and\n  three series columns with the same depth as the dependent measure\n  specified in the formula:\n\n  - `est`: the slope\n  - `p`: the p value\n  - `z`: the z value\n  - `se`: the standard error\n\n## <span style=\"color:purple\">time\\_series\\_test.plot</span>_(dm, dv, hue\\_factor, results=None, linestyle\\_factor=None, hues=None, linestyles=None, alpha\\_level=0.05, annotate\\_intercept=False, annotation\\_hues=None, annotation\\_linestyle=':', legend\\_kwargs=None, annotation\\_legend\\_kwargs=None)_\n\nVisualizes a time series, where the signal is plotted as a function of\nsample number on the x-axis. One fixed effect is indicated by the hue\n(color) of the lines. An optional second fixed effect is indicated by the\nlinestyle. If the `results` parameter is used, significant effects are\nannotated in the figure.\n\n### Parameters\n\n* **dm: DataMatrix**\n\n  The dataset\n\n* **dv: str**\n\n  The name of the dependent variable, which should be a series column\n  in `dm`.\n\n* **hue\\_factor: str**\n\n  The name of a regular (non-series) column in `dm` that specifies the\n  hue (color) of the lines.\n\n* **results: dict, optional**\n\n  A `results` dict as returned by `lmer_crossvalidation()`.\n\n* **linestyle\\_factor: str, optional**\n\n  The name of a regular (non-series) column in `dm` that specifies the\n  linestyle of the lines for a two-factor plot.\n\n* **hues: str, list, or None, optional**\n\n  The name of a matplotlib colormap or a list of hues to be used as line\n  colors for the hue factor.\n\n* **linestyles: list or None, optional**\n\n  A list of linestyles to be used for the second factor.\n\n* **alpha\\_level: float, optional**\n\n  The alpha level (maximum p value) to be used for annotating effects\n  in the plot.\n\n* **annotate\\_intercept: bool, optional**\n\n  Specifies whether the intercept should also be annotated along with\n  the fixed effects.\n\n* **annotation\\_hues: str, list, or None, optional**\n\n  The name of a matplotlib colormap or a list of hues to be used for the\n  annotations if `results` is provided.\n\n* **annotation\\_linestyle: str, optional**\n\n  The linestyle for the annotations.\n\n* **legend\\_kwargs: None or dict, optional**\n\n  Optional keywords to be passed to `plt.legend()` for the factor legend.\n\n* **annotation\\_legend\\_kwargs: None or dict, optional**\n\n  Optional keywords to be passed to `plt.legend()` for the annotation\n  legend.\n\n## <span style=\"color:purple\">time\\_series\\_test.summarize</span>_(results, detailed=False)_\n\nGenerates a string with a human-readable summary of a results `dict` as\nreturned by `lmer_crossvalidation()`.\n\n### Parameters\n\n* **results: dict**\n\n  A `results` dict as returned by `lmer_crossvalidation()`.\n\n* **detailed: bool, optional**\n\n  Indicates whether model details should be included in the summary.\n\n### Returns\n\n* **_str_**\n\n\n## License\n\n`time_series_test` is licensed under the [GNU General Public License\nv3](http://www.gnu.org/licenses/gpl-3.0.en.html).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "signal processing,statistics,plotting,data analysis,crossvalidation",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "time-series-test",
    "package_url": "https://pypi.org/project/time-series-test/",
    "platform": null,
    "project_url": "https://pypi.org/project/time-series-test/",
    "project_urls": {
      "Documentation": "https://github.com/smathot/time_series_test",
      "Source": "https://github.com/smathot/time_series_test"
    },
    "release_url": "https://pypi.org/project/time-series-test/0.11.1/",
    "requires_dist": [
      "datamatrix",
      "statsmodels",
      "matplotlib"
    ],
    "requires_python": ">=3.5",
    "summary": "A statistical test and plotting function for time-series data in general,",
    "version": "0.11.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17010808,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b8019a623c833e223f8b4ccbf61794eb43c85e6aeaa5c51c7ff21ad3e60b64d",
          "md5": "d4289bf3360f82083bf532fc447ad605",
          "sha256": "4dea5e824dfd9faa1b76aac0274265ebff56eae461d94aaf3bbbb9caa19bac1a"
        },
        "downloads": -1,
        "filename": "time_series_test-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4289bf3360f82083bf532fc447ad605",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 21219,
        "upload_time": "2021-12-23T11:12:41",
        "upload_time_iso_8601": "2021-12-23T11:12:41.041246Z",
        "url": "https://files.pythonhosted.org/packages/0b/80/19a623c833e223f8b4ccbf61794eb43c85e6aeaa5c51c7ff21ad3e60b64d/time_series_test-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53899ac369bcbeff8f2fc29d8c7e002419df23aaa2d9f047aaec031cdc772416",
          "md5": "f3593079006ad68b8a3068bea7a6bfcc",
          "sha256": "5fe7596d6c4213558aaea36d34bd300209d9901a32123ed65d389cf31f8002ef"
        },
        "downloads": -1,
        "filename": "time_series_test-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f3593079006ad68b8a3068bea7a6bfcc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 7184167,
        "upload_time": "2021-12-23T11:12:58",
        "upload_time_iso_8601": "2021-12-23T11:12:58.640894Z",
        "url": "https://files.pythonhosted.org/packages/53/89/9ac369bcbeff8f2fc29d8c7e002419df23aaa2d9f047aaec031cdc772416/time_series_test-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98f4701d19aab7fc353dc2e19cb68244a8407016fea64507b0d081dea371abd2",
          "md5": "4bb35ddf3a73b881bc07c41119e607ce",
          "sha256": "2c5f9c516b6e267a2e1bfd5ead31b65fd74ddf54706f8e732e04cf15311407d8"
        },
        "downloads": -1,
        "filename": "time_series_test-0.10.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4bb35ddf3a73b881bc07c41119e607ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 26572,
        "upload_time": "2023-02-14T09:40:20",
        "upload_time_iso_8601": "2023-02-14T09:40:20.782647Z",
        "url": "https://files.pythonhosted.org/packages/98/f4/701d19aab7fc353dc2e19cb68244a8407016fea64507b0d081dea371abd2/time_series_test-0.10.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6db2e58b9c116a086d97ac610c6816166d20e053813db616bd0356249032bbb",
          "md5": "f7ccbccde72ae9b80fe643dd130fce53",
          "sha256": "87ee19bf00d8e0d25d6a01c1dc1ad5dcdc7bb50db439bc7b9755d756036f0b08"
        },
        "downloads": -1,
        "filename": "time_series_test-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f7ccbccde72ae9b80fe643dd130fce53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 29241,
        "upload_time": "2023-02-14T09:40:23",
        "upload_time_iso_8601": "2023-02-14T09:40:23.106188Z",
        "url": "https://files.pythonhosted.org/packages/f6/db/2e58b9c116a086d97ac610c6816166d20e053813db616bd0356249032bbb/time_series_test-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c92a0c2d8b95f50ecf179ee4d58c82750142e5b46f64b700f7eab788977d39b",
          "md5": "34e03a48e8434cd434e74a141e8de252",
          "sha256": "9a79df0a472ccff9f10446c42f07f4227e2a0cd447337078f9d37572313976ce"
        },
        "downloads": -1,
        "filename": "time_series_test-0.11.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34e03a48e8434cd434e74a141e8de252",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 26960,
        "upload_time": "2023-02-24T12:47:42",
        "upload_time_iso_8601": "2023-02-24T12:47:42.804105Z",
        "url": "https://files.pythonhosted.org/packages/4c/92/a0c2d8b95f50ecf179ee4d58c82750142e5b46f64b700f7eab788977d39b/time_series_test-0.11.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c805cbc9358a550f1a5ad6511303ffa690b7a545fe3a9227f1fd05fb6edfac8b",
          "md5": "3955934a1e2f9d6d282a36850d401376",
          "sha256": "cb9b3eac492ea97f347df15444954f86c87d5865833911ed1bf183325a9014b9"
        },
        "downloads": -1,
        "filename": "time_series_test-0.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3955934a1e2f9d6d282a36850d401376",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 29598,
        "upload_time": "2023-02-24T12:47:45",
        "upload_time_iso_8601": "2023-02-24T12:47:45.549888Z",
        "url": "https://files.pythonhosted.org/packages/c8/05/cbc9358a550f1a5ad6511303ffa690b7a545fe3a9227f1fd05fb6edfac8b/time_series_test-0.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7ef4beb263a162866ea9394d09986e91d349008a345e78e20d44dbad485da12",
          "md5": "25615c037bd79ac08823300879592d0a",
          "sha256": "45189b34163b967bb95bbb0957362c7e8648898ebec730fa10b925b5dcaf6bdc"
        },
        "downloads": -1,
        "filename": "time_series_test-0.11.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25615c037bd79ac08823300879592d0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 26953,
        "upload_time": "2023-02-24T12:49:37",
        "upload_time_iso_8601": "2023-02-24T12:49:37.989610Z",
        "url": "https://files.pythonhosted.org/packages/a7/ef/4beb263a162866ea9394d09986e91d349008a345e78e20d44dbad485da12/time_series_test-0.11.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4b267b093045247f16bd348818944a828ec10b0695e0fde39693e9258f082b1",
          "md5": "d444f812bb4bd5bf7f3071c28d1e1ceb",
          "sha256": "2b89e2cb68437aaac6ecccf007610ef0c23f39b14f0f62b2ab15463499776bea"
        },
        "downloads": -1,
        "filename": "time_series_test-0.11.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d444f812bb4bd5bf7f3071c28d1e1ceb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 29585,
        "upload_time": "2023-02-24T12:49:39",
        "upload_time_iso_8601": "2023-02-24T12:49:39.427234Z",
        "url": "https://files.pythonhosted.org/packages/b4/b2/67b093045247f16bd348818944a828ec10b0695e0fde39693e9258f082b1/time_series_test-0.11.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3253d3fecdcbb64cdd484b706720ee7df3be04145b6eaaaffbbf5b4d728f03a2",
          "md5": "69a66cd9d4c15a494919051c7b4635e9",
          "sha256": "ba378ee72adcf1acbd14450a5b372ebfae0eb316fa1728c50774418878a33758"
        },
        "downloads": -1,
        "filename": "time_series_test-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69a66cd9d4c15a494919051c7b4635e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 22422,
        "upload_time": "2022-01-21T12:56:49",
        "upload_time_iso_8601": "2022-01-21T12:56:49.667583Z",
        "url": "https://files.pythonhosted.org/packages/32/53/d3fecdcbb64cdd484b706720ee7df3be04145b6eaaaffbbf5b4d728f03a2/time_series_test-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38aef4eea9ab4bc18408d2488100c52cca4f3d7716dd82bbbe33e2ec12efce8d",
          "md5": "02f03bfe8c301d706a84e346b353e86d",
          "sha256": "b5959cefb926b6a075e16354f9d219f22c145949bc684761647f8842e7bfc7a3"
        },
        "downloads": -1,
        "filename": "time_series_test-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "02f03bfe8c301d706a84e346b353e86d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 7189386,
        "upload_time": "2022-01-21T12:56:56",
        "upload_time_iso_8601": "2022-01-21T12:56:56.704147Z",
        "url": "https://files.pythonhosted.org/packages/38/ae/f4eea9ab4bc18408d2488100c52cca4f3d7716dd82bbbe33e2ec12efce8d/time_series_test-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55831da544ce4fbeba9479b2df60c92b832556ec0ef3e9b656c233ea38c20646",
          "md5": "d7baf0ac14de6821a1787c687f44cb47",
          "sha256": "29d06f3f8d740e660b3a225e7d8f4f24e05d81c506d3ef0d882f7c4d48c164c7"
        },
        "downloads": -1,
        "filename": "time_series_test-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7baf0ac14de6821a1787c687f44cb47",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 22578,
        "upload_time": "2022-01-28T16:38:38",
        "upload_time_iso_8601": "2022-01-28T16:38:38.727390Z",
        "url": "https://files.pythonhosted.org/packages/55/83/1da544ce4fbeba9479b2df60c92b832556ec0ef3e9b656c233ea38c20646/time_series_test-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96eeddfe8aee2db613acdbe3395f002cf236c6d105bea8e8f905f350a5b1915c",
          "md5": "266452609052623a1c4082edf7ffc00e",
          "sha256": "2b40b5a75ced39ee59cbe7bc5960e7b821220583f92b2003a19ce3f6709d7919"
        },
        "downloads": -1,
        "filename": "time_series_test-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "266452609052623a1c4082edf7ffc00e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 7189687,
        "upload_time": "2022-01-28T16:39:34",
        "upload_time_iso_8601": "2022-01-28T16:39:34.942860Z",
        "url": "https://files.pythonhosted.org/packages/96/ee/ddfe8aee2db613acdbe3395f002cf236c6d105bea8e8f905f350a5b1915c/time_series_test-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24ec248e953d37730d9653abcfbf172dd27f92da070ee26bcc2ed7a958179dca",
          "md5": "d9359a41a1bef13cd0eebeb57b7bf267",
          "sha256": "45984db5635d17c8fdf10d2e0c220e4f129b6e3aa56bccb13794d8acadccc0f5"
        },
        "downloads": -1,
        "filename": "time_series_test-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9359a41a1bef13cd0eebeb57b7bf267",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 22786,
        "upload_time": "2022-08-19T12:32:10",
        "upload_time_iso_8601": "2022-08-19T12:32:10.797405Z",
        "url": "https://files.pythonhosted.org/packages/24/ec/248e953d37730d9653abcfbf172dd27f92da070ee26bcc2ed7a958179dca/time_series_test-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56a13e617bd5d2ca28bf96aaef3841e0cbb3c0e1bd4e3e4daa2377fdf2c7138b",
          "md5": "e5912e709695f17627cd1c724ddb57ff",
          "sha256": "8f7422b6c219dcce75e1e91153b536cc8d6c61b3a76c00f29a36372b2d2e6a8e"
        },
        "downloads": -1,
        "filename": "time_series_test-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e5912e709695f17627cd1c724ddb57ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 21101,
        "upload_time": "2022-08-19T12:32:12",
        "upload_time_iso_8601": "2022-08-19T12:32:12.033120Z",
        "url": "https://files.pythonhosted.org/packages/56/a1/3e617bd5d2ca28bf96aaef3841e0cbb3c0e1bd4e3e4daa2377fdf2c7138b/time_series_test-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c3105c1e2ab3c05a76785f251594f73939f87c21bd19e4f43a21a5e42548be4",
          "md5": "6216262d59f747cd837281855198ec07",
          "sha256": "1785785d3dbdddd806c629eba93b37f04c787d8adcead1a5cb5c7b78dae15979"
        },
        "downloads": -1,
        "filename": "time_series_test-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6216262d59f747cd837281855198ec07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 22993,
        "upload_time": "2022-08-19T12:57:46",
        "upload_time_iso_8601": "2022-08-19T12:57:46.559081Z",
        "url": "https://files.pythonhosted.org/packages/6c/31/05c1e2ab3c05a76785f251594f73939f87c21bd19e4f43a21a5e42548be4/time_series_test-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a5f5259b08c574802f17c66cdacecbf2fe74d603a3c7c62ad4291dea21dc001",
          "md5": "fbb3bf3b2aefa4eaaf95073d7d271a0c",
          "sha256": "dbac43b0a9d62c5f02155f66039a8371330a945e86de8fa594f28bbebb9433f5"
        },
        "downloads": -1,
        "filename": "time_series_test-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fbb3bf3b2aefa4eaaf95073d7d271a0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 24413,
        "upload_time": "2022-08-19T12:57:47",
        "upload_time_iso_8601": "2022-08-19T12:57:47.729590Z",
        "url": "https://files.pythonhosted.org/packages/8a/5f/5259b08c574802f17c66cdacecbf2fe74d603a3c7c62ad4291dea21dc001/time_series_test-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c09d24ba5d000c8c85198b2886e496cd9c545a1d5b438638cc75212040512ba",
          "md5": "65c4895e7bb48ed0bad6857892ff1d74",
          "sha256": "8e83f99e91af043087f87f6bf2c1dcadada6786ce38a514900e421e9cfbe113d"
        },
        "downloads": -1,
        "filename": "time_series_test-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65c4895e7bb48ed0bad6857892ff1d74",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 23764,
        "upload_time": "2022-11-03T12:01:43",
        "upload_time_iso_8601": "2022-11-03T12:01:43.223586Z",
        "url": "https://files.pythonhosted.org/packages/0c/09/d24ba5d000c8c85198b2886e496cd9c545a1d5b438638cc75212040512ba/time_series_test-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "925ddd2d9be21abc6c5681d6120b3187ff5c6daec58f3e93788eb3bb5d59ce1b",
          "md5": "db6c00719b2903dab6a59a136ccdb864",
          "sha256": "9f074f3c3af6b432249bc6ace265314a1151fe378c92cfca80718eb37ba39a75"
        },
        "downloads": -1,
        "filename": "time_series_test-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "db6c00719b2903dab6a59a136ccdb864",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 25315,
        "upload_time": "2022-11-03T12:01:44",
        "upload_time_iso_8601": "2022-11-03T12:01:44.565156Z",
        "url": "https://files.pythonhosted.org/packages/92/5d/dd2d9be21abc6c5681d6120b3187ff5c6daec58f3e93788eb3bb5d59ce1b/time_series_test-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "896dd04d1da401b7790e4dde33d206d7a971147721c6964057e0dccc4d335467",
          "md5": "1db2ffc820ebebe0b7cb459b02ba9213",
          "sha256": "9eea106db2fd1b225950fbf1c8eb615249088ae4defb1420bf7e0d42beacd87e"
        },
        "downloads": -1,
        "filename": "time_series_test-0.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1db2ffc820ebebe0b7cb459b02ba9213",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 23804,
        "upload_time": "2022-11-03T12:15:24",
        "upload_time_iso_8601": "2022-11-03T12:15:24.014691Z",
        "url": "https://files.pythonhosted.org/packages/89/6d/d04d1da401b7790e4dde33d206d7a971147721c6964057e0dccc4d335467/time_series_test-0.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cde8e20e85096a312db10e9815f72417275935a34b7826fcd854387ae4988cd",
          "md5": "643dfd8fdd2367fa056abf2151e1ac9f",
          "sha256": "0a268949af2be35b90fbd88a8cce04391c186f3b676e39ecadab391af7d06d08"
        },
        "downloads": -1,
        "filename": "time_series_test-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "643dfd8fdd2367fa056abf2151e1ac9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 25337,
        "upload_time": "2022-11-03T12:15:25",
        "upload_time_iso_8601": "2022-11-03T12:15:25.150745Z",
        "url": "https://files.pythonhosted.org/packages/6c/de/8e20e85096a312db10e9815f72417275935a34b7826fcd854387ae4988cd/time_series_test-0.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c9c8fee62f71926925e34622b833687d7ac59ee333d36d302fd911e8f3dc4b1",
          "md5": "6da17b6bd9ed432556e6ebb85404a14c",
          "sha256": "6453093a8a082bf1ac47b01372a7cb09700309a3cbbfbfec9e3d37a4b1003748"
        },
        "downloads": -1,
        "filename": "time_series_test-0.7.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6da17b6bd9ed432556e6ebb85404a14c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 23822,
        "upload_time": "2022-11-24T15:37:01",
        "upload_time_iso_8601": "2022-11-24T15:37:01.755893Z",
        "url": "https://files.pythonhosted.org/packages/2c/9c/8fee62f71926925e34622b833687d7ac59ee333d36d302fd911e8f3dc4b1/time_series_test-0.7.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf1ebb5d590400dde06fc2df63ba96c1d7e7cb7d861d9100f8069c6cf6165cc7",
          "md5": "5fde2d0f190ff03e9a5354ffd24ab16a",
          "sha256": "643433014bd007b81a26d3a4ef6e1695ed6bc91eccae0dbcf4537a7d700903e3"
        },
        "downloads": -1,
        "filename": "time_series_test-0.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5fde2d0f190ff03e9a5354ffd24ab16a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 25348,
        "upload_time": "2022-11-24T15:37:03",
        "upload_time_iso_8601": "2022-11-24T15:37:03.365731Z",
        "url": "https://files.pythonhosted.org/packages/bf/1e/bb5d590400dde06fc2df63ba96c1d7e7cb7d861d9100f8069c6cf6165cc7/time_series_test-0.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b017796f1fe1393fceafc48c510ccabd94289d79351963d8ce03c59fad6ebf1c",
          "md5": "3494af23f903664de84942cd62e94802",
          "sha256": "e7b9c59ceaf8f211fd37e2145b3a9b66faa0f53c386cd6df72af95f4e902ce6d"
        },
        "downloads": -1,
        "filename": "time_series_test-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3494af23f903664de84942cd62e94802",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 26198,
        "upload_time": "2023-01-23T08:47:56",
        "upload_time_iso_8601": "2023-01-23T08:47:56.037711Z",
        "url": "https://files.pythonhosted.org/packages/b0/17/796f1fe1393fceafc48c510ccabd94289d79351963d8ce03c59fad6ebf1c/time_series_test-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05abc760440235539580048941b39e21e15e9ca9774e41debe8baaa3e696dcf0",
          "md5": "8b88ed3aba64e497f0ec57d5c4e4733a",
          "sha256": "4b6fc69e35446c77ea506018494a6fe1676eefb111ec688d4c224d2b6c0d032e"
        },
        "downloads": -1,
        "filename": "time_series_test-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8b88ed3aba64e497f0ec57d5c4e4733a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 28541,
        "upload_time": "2023-01-23T08:47:57",
        "upload_time_iso_8601": "2023-01-23T08:47:57.728208Z",
        "url": "https://files.pythonhosted.org/packages/05/ab/c760440235539580048941b39e21e15e9ca9774e41debe8baaa3e696dcf0/time_series_test-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7ef4beb263a162866ea9394d09986e91d349008a345e78e20d44dbad485da12",
        "md5": "25615c037bd79ac08823300879592d0a",
        "sha256": "45189b34163b967bb95bbb0957362c7e8648898ebec730fa10b925b5dcaf6bdc"
      },
      "downloads": -1,
      "filename": "time_series_test-0.11.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "25615c037bd79ac08823300879592d0a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 26953,
      "upload_time": "2023-02-24T12:49:37",
      "upload_time_iso_8601": "2023-02-24T12:49:37.989610Z",
      "url": "https://files.pythonhosted.org/packages/a7/ef/4beb263a162866ea9394d09986e91d349008a345e78e20d44dbad485da12/time_series_test-0.11.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b4b267b093045247f16bd348818944a828ec10b0695e0fde39693e9258f082b1",
        "md5": "d444f812bb4bd5bf7f3071c28d1e1ceb",
        "sha256": "2b89e2cb68437aaac6ecccf007610ef0c23f39b14f0f62b2ab15463499776bea"
      },
      "downloads": -1,
      "filename": "time_series_test-0.11.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d444f812bb4bd5bf7f3071c28d1e1ceb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 29585,
      "upload_time": "2023-02-24T12:49:39",
      "upload_time_iso_8601": "2023-02-24T12:49:39.427234Z",
      "url": "https://files.pythonhosted.org/packages/b4/b2/67b093045247f16bd348818944a828ec10b0695e0fde39693e9258f082b1/time_series_test-0.11.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}