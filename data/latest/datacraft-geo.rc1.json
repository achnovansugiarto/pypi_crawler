{
  "info": {
    "author": "Brian Buxton",
    "author_email": "bbux-dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "datacraft-geo\r\n===============\r\n\r\nCustom plugin for [datacraft](https://datacraft.readthedocs.io/en/latest) to extend the geo types to include\r\n`geo.mgrs` and `geo.utm`\r\n\r\n## Usage in Specs\r\n\r\n### `geo.mgrs`\r\n\r\n```json\r\n{\r\n  \"mgrs\":{\r\n    \"type\": \"geo.mgrs\"\r\n  }\r\n}\r\n```\r\n\r\n```shell\r\n$ datacraft -s geo.mgrs.json -i 4 -r 1 --format json -x -l error\r\n{\"mgrs\": \"33TVE8831137089\"}\r\n{\"mgrs\": \"28CET4236233893\"}\r\n{\"mgrs\": \"33RXH7235656683\"}\r\n{\"mgrs\": \"44XNJ6899271743\"}\r\n```\r\n\r\n### `geo.utm`\r\n\r\n```json\r\n{\r\n  \"utm\":{\r\n    \"type\": \"geo.utm\"\r\n  }\r\n}\r\n```\r\n\r\n```shell\r\n$ datacraft -s geo.utm.json -i 3 -r 1 --format json -x -l warning\r\n\r\n{\"utm\": \"37 T 482637 5257154\"}\r\n{\"utm\": \"38 T 489869 4504951\"}\r\n{\"utm\": \"33 K 673513 7460351\"}\r\n{\"utm\": \"20 Q 629432 1992725\"}\r\n```\r\n\r\n#### Customizing UTM output\r\n\r\nWe use the utm package under the hood, which provides it's output as a tuple of\r\n(EASTING, NORTHING, ZONE_NUMBER, ZONE_LETTER) e.g: (513864.9288961077, 1664402.2459186069, 25, \"P\").\r\nThe default is to format this as:\r\n`{{ zone_number }} {{ zone_letter }} {{ easting | int }} {{ northing | int }}` You can override this by specifying \r\na `template` config parameter with the fields arranged as you like.  See example below. The other way is to override\r\nthe `geo_utm_template` default value from the command line\r\n(`datacraft --set-defaults geo_utm_template=\"{{ zone_number }}{{ zone_letter }} {{ easting | int }}/{{ northing | int }\r\n}\"`). Note that `{{ zn }}` can be used in place of zone_number and `{{ zl }}` in place of zone_letter.\r\n\r\n\r\n```json\r\n{\r\n  \"utm_custom\":{\r\n    \"type\": \"geo.utm\",\r\n    \"config\": {\r\n      \"template\": \"{{ zn }}{{ zl }} {{ easting | int }}/{{ northing | int }}\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n```shell\r\n$ datacraft -s geo.utm.custom.json -i 3 -r 1 --format json -x -l warning\r\n{\"utm_custom\": \"37T 325263/5115949\"}\r\n{\"utm_custom\": \"31N 676324/553043\"}\r\n{\"utm_custom\": \"45J 300889/6854467\"}\r\n{\"utm_custom\": \"44R 288307/2890462\"}\r\n```\r\n\r\n## Geo Lat/Long/Pair Clipped\r\n\r\nThese types are extensions to the existing datacraft geo types to support clipping of the points using\r\ngeojson to specify valid polygon boundaries.\r\n\r\nTypes\r\n\r\n| name          | description                                                                   |\r\n|---------------|-------------------------------------------------------------------------------|\r\n| geo.pair.clip | coordinate pair as list with longitude first, unless lat_first=True specified |\r\n| geo.lat.clip  | latitude from a coordinate pair bounded by the geojson                        |\r\n| geo.long.clip | longitude from a coordinate pair bounded by the geojson                       |\r\n| geo.utm       | also supports clipping                                                        |\r\n| geo.mgrs      | also supports clipping                                                        |\r\n\r\nExample:\r\n\r\n```python\r\nfrom shapely.geometry import shape\r\ngeojson = {\r\n  \"type\": \"Feature\",\r\n  \"geometry\": {\r\n    \"type\": \"Polygon\",\r\n    \"coordinates\": [[[23.0843, 53.1544], [23.0859, 53.1544], [23.0859, 53.1535], [23.0843, 53.1544]]]\r\n  }\r\n}\r\nshape(geojson['geometry'])\r\n```\r\n\r\n![Boundary](./boundary.svg)\r\n\r\nThe image above describes the boundary of where we want our points to exist. To reference this geojson boundary, we\r\ncan use the `geojson` config parameter in two ways.\r\n\r\n1. as the raw geojson\r\n```json\r\n{\r\n  \"coords\": {\r\n    \"type\": \"geo.pair.clip\",\r\n    \"config\": {\r\n      \"geojson\": {\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[23.0843,53.1544],[23.0845,53.1544],[23.0859,53.1535],[23.0843,53.1544]]]}},\r\n      \"join_with\": \",\"\r\n    }\r\n  }\r\n}\r\n```\r\n2. as the file name path to the geojson file\r\n```json\r\n{\r\n  \"coords\": {\r\n    \"type\": \"geo.pair.clip\",\r\n    \"config\": {\r\n      \"geojson\": \"/path/to/clip.geo.json\",\r\n      \"join_with\": \",\"\r\n    }\r\n  }\r\n}\r\n```\r\nInstead of hard-coding the path, you can specify just the file name then use the `--data-dir` to specify where to look\r\nfor it and other data related files.\r\n\r\n\r\n### Multiple Polygons\r\n\r\nYou can use multiple polygons as boundaries by using a GeoJSON FeatureCollection:\r\n\r\n```json\r\n{\r\n  \"type\": \"FeatureCollection\",\r\n  \"features\": [\r\n    {\r\n      \"type\": \"Feature\",\r\n      \"geometry\": {\r\n        \"type\": \"Polygon\",\r\n        \"coordinates\": [\r\n          [[ 23.0843, 53.1544 ],\r\n           [ 23.0845, 53.1544 ],\r\n           [ 23.0859, 53.1535 ],\r\n           [ 23.0843, 53.1544 ]]\r\n        ]\r\n      }\r\n    },{\r\n      \"type\": \"Feature\",\r\n      \"geometry\": {\r\n        \"type\": \"Polygon\",\r\n        \"coordinates\": [\r\n          [[ 33.0843, 43.1544 ],\r\n           [ 33.0845, 43.1544 ],\r\n           [ 33.0859, 43.1535 ],\r\n           [ 33.0843, 43.1544 ]]\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bbux-dev/datacraft-geo",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "datacraft-geo",
    "package_url": "https://pypi.org/project/datacraft-geo/",
    "platform": null,
    "project_url": "https://pypi.org/project/datacraft-geo/",
    "project_urls": {
      "Homepage": "https://github.com/bbux-dev/datacraft-geo"
    },
    "release_url": "https://pypi.org/project/datacraft-geo/0.1.0/",
    "requires_dist": [
      "datacraft (>=0.7.1)",
      "mgrs",
      "utm",
      "shapely",
      "pytest (>=6.2.2) ; extra == 'all'",
      "pycodestyle ; extra == 'all'",
      "pytest-cov ; extra == 'all'",
      "pytest (>=6.2.2) ; extra == 'test'",
      "pycodestyle ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Custom geo type extensions for datacraft package",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16060781,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce757eddc7a89bfcb2ff1bc982896733049463ee0c97ace11f56d4de9839b9a1",
          "md5": "603a8d1d261a24e0e764b959fed3b1d0",
          "sha256": "a4daf498345d817ee1cf7ce36834a4a875c77be98679e2e0673997d174b01659"
        },
        "downloads": -1,
        "filename": "datacraft_geo-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "603a8d1d261a24e0e764b959fed3b1d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8279,
        "upload_time": "2022-12-10T22:15:11",
        "upload_time_iso_8601": "2022-12-10T22:15:11.524421Z",
        "url": "https://files.pythonhosted.org/packages/ce/75/7eddc7a89bfcb2ff1bc982896733049463ee0c97ace11f56d4de9839b9a1/datacraft_geo-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59537e97defdc599eef3dcf4915a00391d56734ba84d3483f05127258c1bc583",
          "md5": "d8db24bde62a67ee120fd07fd3ee5f1c",
          "sha256": "cb56758debdfb10a8fab89cd0ccc218c1ea9b82a05414abcbbc10decf96882a8"
        },
        "downloads": -1,
        "filename": "datacraft-geo-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d8db24bde62a67ee120fd07fd3ee5f1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8275,
        "upload_time": "2022-12-10T22:15:13",
        "upload_time_iso_8601": "2022-12-10T22:15:13.241017Z",
        "url": "https://files.pythonhosted.org/packages/59/53/7e97defdc599eef3dcf4915a00391d56734ba84d3483f05127258c1bc583/datacraft-geo-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce757eddc7a89bfcb2ff1bc982896733049463ee0c97ace11f56d4de9839b9a1",
        "md5": "603a8d1d261a24e0e764b959fed3b1d0",
        "sha256": "a4daf498345d817ee1cf7ce36834a4a875c77be98679e2e0673997d174b01659"
      },
      "downloads": -1,
      "filename": "datacraft_geo-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "603a8d1d261a24e0e764b959fed3b1d0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8279,
      "upload_time": "2022-12-10T22:15:11",
      "upload_time_iso_8601": "2022-12-10T22:15:11.524421Z",
      "url": "https://files.pythonhosted.org/packages/ce/75/7eddc7a89bfcb2ff1bc982896733049463ee0c97ace11f56d4de9839b9a1/datacraft_geo-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59537e97defdc599eef3dcf4915a00391d56734ba84d3483f05127258c1bc583",
        "md5": "d8db24bde62a67ee120fd07fd3ee5f1c",
        "sha256": "cb56758debdfb10a8fab89cd0ccc218c1ea9b82a05414abcbbc10decf96882a8"
      },
      "downloads": -1,
      "filename": "datacraft-geo-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d8db24bde62a67ee120fd07fd3ee5f1c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8275,
      "upload_time": "2022-12-10T22:15:13",
      "upload_time_iso_8601": "2022-12-10T22:15:13.241017Z",
      "url": "https://files.pythonhosted.org/packages/59/53/7e97defdc599eef3dcf4915a00391d56734ba84d3483f05127258c1bc583/datacraft-geo-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}