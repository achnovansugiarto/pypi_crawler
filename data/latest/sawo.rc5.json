{
  "info": {
    "author": "Sawolab",
    "author_email": "tech@sawolabs.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Sawo\n\nPasswordless and OTP-less Authentication for your website. [Check the documentaion here.](https://docs.sawolabs.com/sawo/v/0.0.2/)\n\n## Installing\n\nA step by step series of examples that tell you how to get a development env running. These instructions will let you render the form in your speicified container, and allow you to attach successful login callback for futher actions.\n\n#### Install the sawo package\n\n```\npip install sawo\n```\n#### Import from Sawo createTemplate, getContext and verifyToken method from the sawo package\n\n**The getContext method is used to create sawo dict object from data gain from DB in Django**\n```python\nfrom sawo import createTemplate,getContext,verifyToken\n```\n\n#### API Key\n* Login to sawo [dev console](https://dev.sawolabs.com/)\n* Create a new project\n    * Set Project Name\n    * Set Project Host\n        *  For dev: point to localhost\n        *  For prod: point to your domain.\n*  Copy the API key\n\n#### Setup\nGetting started Creating template for sawo passwordless and OTP-less Authentication for your website.\n\n###### Django\n```python\n    createTemplate(\"<filepath>\")\n\n    #example\n    createTemplate(\"templates/partials\")\n```\n###### Flask\n```python\n    createTemplate(\"./<filepath>\",flask=True)\n\n    #example\n    createTemplate(\"./templates/partials\",flask=True)\n```\n\nThis will create a _sawo.html file in the filepath provided.\n\n##### Using _sawo.html in your html files\n\n\n###### Django\n\n```html\n    {% include \"<filepath>/_sawo.html\" %}\n\n    #example\n    {% include \"partials/_sawo.html\" %}\n```\n\n###### Flask\n```html\n    {% include \"./<filepath>/_sawo.html\" %}\n\n    #example\n    {% include \"./partials/_sawo.html\" %}\n```\n\n\n##### Sending data required by _sawo.html\nThe variable name used in **_sawo.html** template are **sawo.auth_key**, **sawo.identifier** and **sawo.to** so to send that data we create a json.\n\n**Note**\n1. The \"to\" route should be a post route which can recive posted data\n2. If you dont know how data is passed to templates in Django or Flask, We will suggest looking into it first. \n\n###### Django\n##### Method 1. Sending static data\n\n```python\n    context = {\n            \"sawo\": {\n                \"auth_key\" : \"<api_key>\",\n                \"identifier\":\"email | phone_number_sms\",\n                \"to\":\"<route>\" #the route where you will recive the payload sent by sdk\n                }\n            }\n\n    #exapmple\n    context = {\n            \"sawo\": {\n                \"auth_key\" : \"785ha-hdjsdsd-799-ss345\",\n                \"identifier\":\"phone_number_sms\",\n                \"to\":\"login\" \n                }\n            }\n```\n\n##### Method 2. Using admin and database to save config for sawo\nStep 1. Creating fields for sawo api_key and identifier to set it from admin dashboard\n\n**copy this code in models of your app**\n\n```python\nclass Config(models.Model):\n    api_key = models.CharField(max_length=200)\n    identifier = models.CharField(max_length=100, choices=[(\"email\",\"Email\"),(\"phone_number_sms\",\"Phone\")])\n```\n\nStep 2. Setting up view.py of app\n\n**Note: Route should be the reciving end where you can handle post request**\n```python\nfrom .models import Config\nfrom sawo import getContext\n\ndef <yourfuntion>(request):\n    config = Config.objects.order_by('-api_key')[:1]\n    context = {\n        \"sawo\":getContext(config,<route>)  #the route where you will recive the payload sent by sdk \n    }\n\n#example\ndef index(request):\n    config = Config.objects.order_by('-api_key')[:1]\n    context = {\n        \"sawo\":getContext(config,\"login\")\n    }\n```\n\n###### Flask\n```python\n    sawo = {\n            \"auth_key\" : \"<api_key>\",\n            \"identifier\":\"email | phone_number_sms\",\n            \"to\":\"<route>\" #the route where you will recive the payload sent by sdk\n        }\n    \n    #exapmple\n    sawo = {\n            \"auth_key\" : \"785ha-hdjsdsd-799-ss345\",\n            \"identifier\":\"phone_number_sms\",\n            \"to\":\"login\" \n        }\n```\n#### Verifying Token\nWhen he login is done on the webpage it sends the data to backend as payload to verify user you can use verifyToken function , it returns a boolen.\n\n##### Backend **Code is ame for Django and Flask**\n```python\n    from sawo import verifyToken\n    verifyToken()\n    #use the methods provided by flask and django to recive data from post request\n    #then use this funtion it will return True or False depending on user status\n    For Example (The data key pair is an example below, these keys are returned in payload once the user is authenticated from SAWO )\n    data  = {\n    \"user_id\" : \"a0aca1a0-7460-4e8e-8e46-3baf2c92423d\", \n    \"verification_token\" : \"ADdHrvkgi407qNfnAyrIVqokm3OWdKUCdj8y\"\n          }\n    if(verifyToken(data)):\n        #do something\n    else:\n        #do something else\n```\n\n## Tutorials\n\n###### **Django Tutorial** - [See Tutorial](https://github.com/sawolabs/sawo-python-examples)\n###### **Flask Tutorial** - [See Tutorial](https://github.com/sawolabs/sawo-python-examples) \n\n## Versioning\nWe use [SemVer](http://semver.org/) for versioning.\n\n## Authors\n**SAWO Labs** - [GitHub](https://github.com/sawolabs)\n\n## License\n\nThis project is licensed under the MIT License",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sawo",
    "package_url": "https://pypi.org/project/sawo/",
    "platform": "",
    "project_url": "https://pypi.org/project/sawo/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/sawo/1.2.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Sawo Python SDK",
    "version": "1.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13031447,
  "releases": {
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a688a60d83b8cb3263cd1ebff2d0604ad97a7333f4a6fa12874a489fe8c5340",
          "md5": "baafc5174bc4146cc4d9a628d0ba5009",
          "sha256": "5fe4130b1b13c917e85474c2ec4f150f4fa417c115b56e948deb422ddad802d4"
        },
        "downloads": -1,
        "filename": "sawo-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "baafc5174bc4146cc4d9a628d0ba5009",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3929,
        "upload_time": "2021-01-08T09:40:53",
        "upload_time_iso_8601": "2021-01-08T09:40:53.832428Z",
        "url": "https://files.pythonhosted.org/packages/6a/68/8a60d83b8cb3263cd1ebff2d0604ad97a7333f4a6fa12874a489fe8c5340/sawo-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "817b11d006b0a33b3bfed5f13d0a3b0a076d7c45e27081ee4c3d8d359569a56d",
          "md5": "df2290670610d337f3f5b17fbc2feefc",
          "sha256": "a5d443bc8cc6c828aaba7c682046ac28f8ea026b573743c4fd57b482858c59ef"
        },
        "downloads": -1,
        "filename": "sawo-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "df2290670610d337f3f5b17fbc2feefc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4278,
        "upload_time": "2021-08-11T08:40:17",
        "upload_time_iso_8601": "2021-08-11T08:40:17.619202Z",
        "url": "https://files.pythonhosted.org/packages/81/7b/11d006b0a33b3bfed5f13d0a3b0a076d7c45e27081ee4c3d8d359569a56d/sawo-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5f88a6aa4b83bf0549cb5d058e56215a1d49e147a8900523ae3f67184e2a815",
          "md5": "6a2460071ef4e37faca0b019dbf6cb69",
          "sha256": "a280234cf4509792c9d012b71ce77fcae3fd2c4ccd81fe5688cd0e0585c9af09"
        },
        "downloads": -1,
        "filename": "sawo-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6a2460071ef4e37faca0b019dbf6cb69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4296,
        "upload_time": "2021-08-11T08:55:51",
        "upload_time_iso_8601": "2021-08-11T08:55:51.694133Z",
        "url": "https://files.pythonhosted.org/packages/c5/f8/8a6aa4b83bf0549cb5d058e56215a1d49e147a8900523ae3f67184e2a815/sawo-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3794eb69841460e45723eda096e6e12f30a600423f0a162ae11852f99b6acca",
          "md5": "d73c6e689e602f8d78a0bfc2b88210d7",
          "sha256": "045d487fa0f89370b71aff247d955bb98abedd604a87c5a3ab684ef2d5134ad2"
        },
        "downloads": -1,
        "filename": "sawo-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d73c6e689e602f8d78a0bfc2b88210d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4300,
        "upload_time": "2021-08-11T17:54:04",
        "upload_time_iso_8601": "2021-08-11T17:54:04.112434Z",
        "url": "https://files.pythonhosted.org/packages/e3/79/4eb69841460e45723eda096e6e12f30a600423f0a162ae11852f99b6acca/sawo-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81203e89c3a20259cbe9400ada44e2d0d4b22d9325f76ee2a2856c7448b36144",
          "md5": "80c8daf935178839b48bc7b3646dcc3b",
          "sha256": "930a13e8db7d7002b94f0632749f9533f6e97ead9bb280c38f3964a3760dcc07"
        },
        "downloads": -1,
        "filename": "sawo-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "80c8daf935178839b48bc7b3646dcc3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4469,
        "upload_time": "2022-02-28T08:53:52",
        "upload_time_iso_8601": "2022-02-28T08:53:52.466165Z",
        "url": "https://files.pythonhosted.org/packages/81/20/3e89c3a20259cbe9400ada44e2d0d4b22d9325f76ee2a2856c7448b36144/sawo-1.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "81203e89c3a20259cbe9400ada44e2d0d4b22d9325f76ee2a2856c7448b36144",
        "md5": "80c8daf935178839b48bc7b3646dcc3b",
        "sha256": "930a13e8db7d7002b94f0632749f9533f6e97ead9bb280c38f3964a3760dcc07"
      },
      "downloads": -1,
      "filename": "sawo-1.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "80c8daf935178839b48bc7b3646dcc3b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4469,
      "upload_time": "2022-02-28T08:53:52",
      "upload_time_iso_8601": "2022-02-28T08:53:52.466165Z",
      "url": "https://files.pythonhosted.org/packages/81/20/3e89c3a20259cbe9400ada44e2d0d4b22d9325f76ee2a2856c7448b36144/sawo-1.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}