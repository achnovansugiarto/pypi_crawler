{
  "info": {
    "author": "KrutosX",
    "author_email": "krutosviprus@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# anonchat-api.py\nPython implementation of anonchat API\n\n## Installation\n```bash\n$ pip install anonchat\n```\n\n## Building\n**You need to sync up this repo using git: https://github.com/anonchat-org/anonchat-api.py**\n\nFirst of all, install 'build' package\n```bash\n$ py -m pip install --upgrade build\n```\n\nThen, build this package. You need to be in root of directory, not in src and etc.\n```bash\n$ py -m build\n```\n\nIt will give you two packages:\n```\ndist/\n  anonchat-0.0.1-py3-none-any.whl\n  anonchat-0.0.1.tar.gz\n```\n\nInstall builded package:\n```\npip install ./dist/anonchat-0.0.1-py3-none-any.whl\n```\n\n## Usage\nImport all from anonchat.client\n\n```py\nfrom anonchat.client import *\n```\n\nYou can check version, if you want.\n```py\nprint(AnonClient._VERSION)\n```\n\nNow, lets create your client.\n\n### Basic events and connection\n> AnonClient(ip: str, - The IP of the server\n>\t\t\t port: int, - Port of the server \n>\t\t\t name: str - Bot name\n>\t\t\t)\n\n```py\nbot = AnonClient(\"IP\", port, \"ExampleNickname\") # Change this to your info!\n```\n\nBy default, bot uses API v2. API v1 is supported, but not tested.\nTo change API version, after bot creation, change this:\n```py\nbot.version = 2 # Set API 2. This is set by default.\n# And to API 1\nbot.version = 1 # Set deprecated API 1.\n```\n\nLet's send message about bot connection. You need this decorator:\n\n>  @bot.event_connect\n\n```py\n@bot.event_connect\ndef on_connect():\n\tprint(f\"Bot {bot.username} connected!\")\n```\n\nYou can send messages with function bot.send\n> bot.send(\n>\t\t   text: str\n>\t\t  )\n\nAdd this to our on_connect function!\n```py\n@bot.event_connect\ndef on_connect():\n\tprint(f\"Bot {bot.username} connected!\")\n\tbot.send(\"I am connected!\")\n```\nThis function is called when bot is fully connected.\n\nIf you want to send message on bot disconnect, you can also add this to your code.\n\n> @bot.event_disconnect\n\n```py\n@bot.event_disconnect\ndef on_disconnect():\n\tbot.send(\"See you next time!\")\n\tprint(\"Bot disconnecting...\")\n```\nThis function will be called before bot disconnect, so you can send messages.\n\nThats all. Lets connect our bot. Write this function after ALL code. Or, it won't be called.\n```py\nbot.connect()\n```\nSo, our bot is working. It can be disconnected using another function. <br/>\nIt it normal, if you get an error here. This is because of closed socket.\n```py\nbot.close()\n```\nLets go to another part.\n\n### Message processing\n\nIf you want to get all messages, set your custom message event function.\n> @bot.event_message\n\n```py\n@bot.event_message\ndef on_message(message):\n```\n\nAll messages, which passed to on_message, will be V1Message or V2Message class objects, depending on the selected API version\n\n> V2Message\n>\t+ Variables:\n>\t- .contents: str - Message contents\n>\t- .author: str - Message author\n>\t- .time: datetime.now - Time, when message was recieved by client.\n>\t- .me: bool - Is this my message? But, this is not accurate, because anyone can set your name.\n>\t- .bot: class <AnonClient> - The bot object.\n>\t\n>\t+ Functions:\n>\t- .reply(text: str - Reply text\n> \t  ) - Reply to message\n>\t\n>\t+ Can be converted to:\n>\t- bytes - Dumped Encoded JSON\n>\t- str - Dumped JSON\n\nMessage author is not availible on API1, so there is no .author\n\n> V1Message\n>\t+ Variables:\n>\t- .contents: str - Message contents\n>\t- .time: datetime.now - Time, when message was recieved by client.\n>   - .me: bool - Is this my message? But, this is not accurate, because anyone can set your name.\n>\t- .bot: class <AnonClient> - The bot object.\n>\t\n>\t+ Functions:\n>\t- .reply(text: str - Reply text\n>\t\t  ) - Reply to message\n>\t\n>\t+ Can be converted to:\n>\t- bytes - Encoded message.contents\n>\t- str - message.contents\n\n\nIf the server (as the server on Dart does) sends a message to a client with API 2 of API 1 standard, the client will automatically adapt it to API 2 and the one who sent the message will be named \"V1-Package\". Since the function which adjusts for API 2 is local, it is possible to change the name to something else:\n```py\nbot.v1_client = \"V1MSG\" # Or something else, if you like.\n```\nIf the official Python server is used, the server will do it automatically by itself, with exactly the same name \"V1-Package\", it cannot be changed.\n\n**Next code is only for API2.**\n\nLets write basic on_message function, which will be detecting, if there is 'Hello' at start, and if message is not from our bot.\n\n```py\n@bot.event_message\ndef on_message(message): \n\tif message.contents.startswith(\"Hello\") and not message.me: # If message has 'Hello' at start, and this is not our message.\n\t\tmessage.reply(f\"Hello, dear {message.author}!\") # Reply to message.\n```\n\nThis function will be called all time when the message is recieved.\n\n**API1/API2 Code**\n\nIf you want to do some processing before message sending, there is also a function.\n\n> @bot.event_send\n\nThis function is called before message send, so it uses another objects.\n\n> RequestV2Message\n>\t+ Variables:\n>\t- .contents: str - Message contents\n>\t- .author: str - Message author\n>\n>\t+ Can be converted to:\n>\t- bytes - Dumped Encoded JSON\n>\t- str - Dumped JSON\n\n> RequestV1Message\n>\t+ Variables:\n>\t- .contents: str - Message contents\n>\t\n>\t+ Can be converted to:\n>\t- bytes - Encoded message.contents\n>\t- str - message.contents\n\nThere is no .bot, .me, .time and .reply, because this message is not sent. Of course, it is our message.\n\nAnd example code:\n```py\n@bot.event_send\ndef on_send(message):\n\tprint(f\"Bot will send message with text '{message.contents}'\")\n```\n\t\n### Errors\nThere is three type of errors you can get.\n\n> anonchat.SendError\n\nYou can get this while sending message in closed/disconnected socket.\n\n> anonchat.SocketError\n\nYou can get this while trying to connect to bad server adress or offline server.\n\n> RuntimeError\n\nYou can get this if there is an error in your code.\n\n## Good luck!\nThats all you need to know.\nThis example can be found in examples dir\nGood luck in writing bot/client for your server! \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/anonchat-org/anonchat-api.py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "anonchat",
    "package_url": "https://pypi.org/project/anonchat/",
    "platform": "",
    "project_url": "https://pypi.org/project/anonchat/",
    "project_urls": {
      "Bug Tracker": "https://github.com/anonchat-org/anonchat-api.py/issues",
      "Homepage": "https://github.com/anonchat-org/anonchat-api.py"
    },
    "release_url": "https://pypi.org/project/anonchat/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Package for interacting with anonchat servers",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12795153,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a75b1fd26bf15eab0c613faf8b4b8cec045b44a0411022d7534f2b10dbda4a3",
          "md5": "99e05f95d8dd59625766ef978e5c97f2",
          "sha256": "2df696bbda27b8f22dc73e9c971781c40ac58ac12bd5c576d2ff005e5295d463"
        },
        "downloads": -1,
        "filename": "anonchat-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99e05f95d8dd59625766ef978e5c97f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6761,
        "upload_time": "2022-02-05T08:45:33",
        "upload_time_iso_8601": "2022-02-05T08:45:33.835957Z",
        "url": "https://files.pythonhosted.org/packages/8a/75/b1fd26bf15eab0c613faf8b4b8cec045b44a0411022d7534f2b10dbda4a3/anonchat-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6d333520d7b455cafd8d8a8643704047b2be1f06da2a6bcbd6107c680c44e19",
          "md5": "d80de534a1902b97c7a89f0a83538208",
          "sha256": "ef202f9ae7c0a5cea2a2cb296fc3ce6bc58009017ba42e0209119117aeefcd22"
        },
        "downloads": -1,
        "filename": "anonchat-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d80de534a1902b97c7a89f0a83538208",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6644,
        "upload_time": "2022-02-05T08:45:35",
        "upload_time_iso_8601": "2022-02-05T08:45:35.358912Z",
        "url": "https://files.pythonhosted.org/packages/c6/d3/33520d7b455cafd8d8a8643704047b2be1f06da2a6bcbd6107c680c44e19/anonchat-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3099587d8529d98f325d26698ce848857473996c8867cccc7ac07c1b99afb999",
          "md5": "ee8c5e162fc2fc41539829ed3c037d76",
          "sha256": "c8f2cb7e8caf5e2c32e5cdcf08bb76184bab0ec40aefde03ee33cb591bf6f2ee"
        },
        "downloads": -1,
        "filename": "anonchat-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee8c5e162fc2fc41539829ed3c037d76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6778,
        "upload_time": "2022-02-05T08:58:01",
        "upload_time_iso_8601": "2022-02-05T08:58:01.714043Z",
        "url": "https://files.pythonhosted.org/packages/30/99/587d8529d98f325d26698ce848857473996c8867cccc7ac07c1b99afb999/anonchat-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3add9b1769575c0ba9c78c90186ef4c60d90452f8a8109b14f0c0c2e46eb3ab6",
          "md5": "cdfeec1c621c32cfdb6954ce77239606",
          "sha256": "9622205dec4ebfb21688f709cbec887800b0295ebeebe174d3e7a7cd5c2410a3"
        },
        "downloads": -1,
        "filename": "anonchat-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cdfeec1c621c32cfdb6954ce77239606",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6666,
        "upload_time": "2022-02-05T08:58:03",
        "upload_time_iso_8601": "2022-02-05T08:58:03.160762Z",
        "url": "https://files.pythonhosted.org/packages/3a/dd/9b1769575c0ba9c78c90186ef4c60d90452f8a8109b14f0c0c2e46eb3ab6/anonchat-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3099587d8529d98f325d26698ce848857473996c8867cccc7ac07c1b99afb999",
        "md5": "ee8c5e162fc2fc41539829ed3c037d76",
        "sha256": "c8f2cb7e8caf5e2c32e5cdcf08bb76184bab0ec40aefde03ee33cb591bf6f2ee"
      },
      "downloads": -1,
      "filename": "anonchat-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ee8c5e162fc2fc41539829ed3c037d76",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6778,
      "upload_time": "2022-02-05T08:58:01",
      "upload_time_iso_8601": "2022-02-05T08:58:01.714043Z",
      "url": "https://files.pythonhosted.org/packages/30/99/587d8529d98f325d26698ce848857473996c8867cccc7ac07c1b99afb999/anonchat-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3add9b1769575c0ba9c78c90186ef4c60d90452f8a8109b14f0c0c2e46eb3ab6",
        "md5": "cdfeec1c621c32cfdb6954ce77239606",
        "sha256": "9622205dec4ebfb21688f709cbec887800b0295ebeebe174d3e7a7cd5c2410a3"
      },
      "downloads": -1,
      "filename": "anonchat-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "cdfeec1c621c32cfdb6954ce77239606",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6666,
      "upload_time": "2022-02-05T08:58:03",
      "upload_time_iso_8601": "2022-02-05T08:58:03.160762Z",
      "url": "https://files.pythonhosted.org/packages/3a/dd/9b1769575c0ba9c78c90186ef4c60d90452f8a8109b14f0c0c2e46eb3ab6/anonchat-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}