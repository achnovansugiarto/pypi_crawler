{
  "info": {
    "author": "John Cao",
    "author_email": "cao@vouched.id",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Academic Free License (AFL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# vouched-python\n\nInstall the wheel on Python 3:\n\n```sh\npip install --user vouched_python\n```\n\nCreate update `.env` with the following test environment values:\n\n```python\nVOUCHED_SERVER=https://verify.woollylabs.com/graphql\nTEST_API_KEY_NO_PROD_DANGER=test_key\nTEST_JOB_ID=<ID>\nAPI_KEY=api_key\nJOB_ID=<ID>\n```\n\n\nRun tests in the Python 3.7:\n\n```sh\npytest\n```\n\n## Build Package\n\nTo build python package , the wheel will be created in the `dist` folder. Run:\n\n```\npython setup.py sdist bdist_wheel\n```\n\n## Quick start\nHere's a very simple server using Vouched for Node.js for authentication\n\n### Create the Vouched client\n\n```python\nfrom vouched.api import Client\nclient = Client(secret_app_key)\n```\n\n#### Arguments\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| key | String | * | Secret Application Key |\n\n#### Returns\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| key | String | * | Secret Application Key |\n\n#### Errors\n\n[`InvalidRequestError`](#InvalidRequestError)\n\n\n### Update client key\n\n```python\ncret_client_key = <SECRET>\ndata = client.update_secret_client_key(secret_client_key=secret_client_key)\n```\n\n#### Arguments\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| secretClientKey | String | * | The secret key to be included in the header X-Api-Key of the webhook call. |\n\n#### Returns\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| secretClientKey | String | * | The updated secretClientKey |\n\n#### Errors\n[`AuthenticationError`](#AuthenticationError)\n[`ConnectionError`](#ConnectionError)\n[`InvalidRequestError`](#InvalidRequestError)\n[`UnknownSystemError`](#UnknownSystemError)\n\n\n### Submit a verification job\n\n```python\nfrom vouched.utils import image_to_base64\n\nuser_photo_base64 = image_to_base64('/opt/app/tests/data/selfie.png')\nid_photo_base64 = image_to_base64('/opt/app/tests/data/id.jpg')\njob = client.submit(\n    user_photo=user_photo_base64,\n    id_photo=id_photo_base64,\n    properties=[\n      dict(name='internal_id',value='iid'),\n      dict(name='internal_username',value='bob'),\n    ],\n    type='id-verification',\n    first_name='Janice',\n    dob='06/22/1990',\n    last_name='Way'\n)\n\n```\n\n#### Arguments\n\n|type|String|*|Type of AI job (\"id-verification\")}|\n| ----------- | ----------- | ----------- | ----------- |\n|callbackURL|String||Upon the jobs completion, Vouched will POST the job results to the webhook. If the callbackURL is not given, Vouch will process the job in realtime.|\n|`properties`|Object||Arbitrary properties to add to the job, i.e. application ids. Described below.|\n|`parameters`|Object|*|Object for id-verification. Described below.|\n\n#### `properties` - arbitrary properties to add to the job, i.e. application ids\n\n|type|String|*|Type of AI job (\"id-verification\")}|\n| ----------- | ----------- | ----------- | ----------- |\n|name|String||Name of the property|\n|value|String||Value of the property|\n\n#### `parameters` - object for id-verification.\n\n|type|String|*|Type of AI job (\"id-verification\")|\n| ----------- | ----------- | ----------- | ----------- |\n|userPhoto|String| Buffer||The users id comparison photo. Supported types include image/png, image/jpeg|\n|idPhoto|String| Buffer|*|The users official identification photo. Supported types include image/png, image/jpeg|\n|idPhotoBack|String| Buffer|*|The users official back of the identification photo. Supported types include image/png, image/jpeg.|\n|firstName|String|*|The users first name.|\n|lastName|String|*|The users last name.|\n|dob|String|*|Date in the format MM/DD/YYYY.|\n\n#### Returns\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| job | Job | * | The newly created job. |\n\n#### Errors\n[`AuthenticationError`](#AuthenticationError)\n[`ConnectionError`](#ConnectionError)\n[`InvalidRequestError`](#InvalidRequestError)\n[`UnknownSystemError`](#UnknownSystemError)\n\n\n### Remove a job\n\n```python\njob = client.remove_job(\n    id='USkjk33'\n)\n```\n\n#### Arguments\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| id | String | * | ID of the job to remove. |\n\n#### Returns\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| job | Job | * | The newly created job. |\n\n#### Errors\n[`AuthenticationError`](#AuthenticationError)\n[`ConnectionError`](#ConnectionError)\n[`InvalidRequestError`](#InvalidRequestError)\n[`UnknownSystemError`](#UnknownSystemError)\n\n\n### Provide results on jobs\n```python\nparams := map[string]interface{}{\n  \"page\":       1,\n  \"sortBy\":     \"date\",\n  \"sortOrder\":  \"desc\",\n  \"from\":       \"1990-12-24T04:44:00+00:00\",\n  \"to\":         \"2020-12-24T04:44:00+00:00\",\n  \"type\":       \"id-verification\",\n  \"token\":       \"SESSION_TOKEN\",\n  \"status\":     \"active\",\n  \"withPhotos\": false,\n  \"pageSize\":   2,\n}\nif resp, err := c.Jobs(params); err != nil {\n  fmt.Printf(\"Error: %+v\\n\", err)\n} else {\n  fmt.Printf(\"Jobs: %+v\\n\", resp)\n}\n\njobs = client.jobs(\n    page=1,\n    page_size=2,\n    type='id-verification',\n    token=<TOKEN_FROM_WEB_CLIENT>,\n    status='active',\n    sort_by='date',\n    sort_order='desc',\n    with_photos=True,\n    from_date='2017-01-24T04:44:00+00:00',\n    to_date='2020-12-24T04:44:00+00:00'\n )\n```\n\n#### Arguments\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|id|String|*|ID of the job to remove.|\n|type|String||Type of job (\"id-verification\").|\n|ids|[ID]||Filter by a list of job IDs.|\n|page|String||Paginate list by page where the page starts at 1, defaults to 1.|\n|pageSize|String||The number of items for a page, max 1000, defaults to 100.|\n|sortBy|String||Sort the list from (\"date\", \"status\").|\n|sortOrder|String||Order the sort from (\"asc\", \"desc\").|\n|status|String||Filter by status from (\"active\",\"completed\")|\n|to|String||Filter by submitted to ISO8601 date.|\n|from|String||Filter by submitted from ISO8601 date.|\n|withPhotos|Boolean||Defaults to False. The returned job will contain detailed information idPhoto, idPhotoBack, and userPhoto.|\n\n#### Returns\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n|jobs|[Job]|*|The removed job.|\n|totalPages|Int|*|Total number of pages of jobs.|\n|pageSize|Int|*|The requested page size.|\n|page|Int|*|The requested page.|\n|total|Int|*|Total number of filtered jobs.|\n\n### Errors\n[`AuthenticationError`](#AuthenticationError)\n[`ConnectionError`](#ConnectionError)\n[`InvalidRequestError`](#InvalidRequestError)\n[`UnknownSystemError`](#UnknownSystemError)\n\n## Types\n### Errors\n\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|`type`|String|*||\n|message|String|*|Type of job (\"id-verification\").|\n|suggestion|[ID]||A suggestion for matching name, John Smith, Jon Smith.|\n|errors|[Error]|InvalidRequestError contains a sub list of errors|\n\n#### `type`\n`InvalidRequestError` - The request is invalid.\n`FaceMatchError` - Face match felled below the threshold\n`NameMatchError` - Name match felled below the threshold\n`BirthDateMatchError` - Birth date match felled below the threshold\n`InvalidIdPhotoError` - The ID is invalid\n`InvalidUserPhotoError` - The user photo (selfie) is invalid\n`UNAUTHENTICATED`/`AuthenticationError` - The request could not be authenticated\n`ConnectionError` - A connection error occurred while communicating to the Vouched service\n`InvalidIdBackPhotoError` - The back of the ID is invalid\n`UnknownSystemError` - A unknown system error occurred\n`InvalidIdError` - The ID is invalid\n\n### Job\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|id|ID |*|Job ID|\n|status|String|*|Job status from (\"active\",\"completed\")|\n|submitted|String||ISO8601 date\n|`request`|Object||Object for 'id-verification'.|\n|`result`|Object||Object of 'id-verification'.|\n|errors|[Error] ||List of errors for unsuccessful completed jobs.|\n\n#### `request`\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|type |String |* |Job type|\n|callbackURL |String ||POST enabled webhook|\n|parameters |JobParameters |* |Object for 'id-verification'|\n\n#### `result`\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|success|Boolean|*|Did the id verification completed successfully?|\n|type|String||The id type|\n|callbackURL|String||POST enabled webhook|\n|state|String||The issuing state of the id if applicable|\n|country|String||The issuing country of the id|\n|id|String||The verified id number of the id|\n|expireDate|String||The verified expired date in the format MM/DD/YYYY|\n|birthDate|String||The verified date in the format MM/DD/YYYY|\n|firstName|String||The user's verified first name.|\n|lastName|String||The user's verified last name|\n|confidences|Confidences||Confidence scores|\n\n### Confidences\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|id|Float |*|Confidence score for an id photo, 0-1.0|\n|backId|Float |*|Confidence score for the back of the id photo, 0-1.0|\n|selfie|Float |*|Confidence score for a selfie photo, 0-1.0|\n|idMatch|Float |*|Confidence score for matching data on the id, 0-1.0|\n|faceMatch|Float |*|Confidence score for matching faces, 0-1.0|\n\n### JobParameters\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|idPhoto|String |*|The user's official identification photo in base64.|\n|userPhoto|String ||The user's id comparison photo in base64.|\n|twicPhoto|String ||The user's id twic id photo in base64.|\n|carInsurancePhoto|String ||The user's id car insurance photo in base64.|\n|dotPhoto|String |*|The user's id dot letter photo in base64.|\n|idPhotoBack|String ||The user's official back of the identification photo in base64.|\n|dob|String ||Date in the format MM/DD/YYYY.|\n|firstName|String ||The user's first name.|\n|lastName|String ||The user's last name.|\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vouched/vouched-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vouched-python",
    "package_url": "https://pypi.org/project/vouched-python/",
    "platform": "",
    "project_url": "https://pypi.org/project/vouched-python/",
    "project_urls": {
      "Homepage": "https://github.com/vouched/vouched-python"
    },
    "release_url": "https://pypi.org/project/vouched-python/0.0.5b10/",
    "requires_dist": [
      "wheel (==0.32.2)",
      "opencv-python (==3.4.4.19)",
      "gql (==0.1.0)",
      "pyopenssl (==18.0.0)",
      "ndg-httpsclient (==0.5.1)",
      "pyasn1 (==0.4.4)",
      "python-magic (==0.4.15)",
      "pytest (==3.9.2)",
      "requests[security] (==2.20.0)",
      "requests-mock (==1.5.2)"
    ],
    "requires_python": "",
    "summary": "Vouched Client",
    "version": "0.0.5b10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6532480,
  "releases": {
    "0.0.5b10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddfb28ac2892a5849232044eb8d69a73722f54a194fc707dce03f8309df23869",
          "md5": "87e0b7ec47aef284df11e4181b2803a6",
          "sha256": "c337b68edab87c9984e4ab114a9a365db2c3ea8072be09d11b44d28c7c6bd040"
        },
        "downloads": -1,
        "filename": "vouched_python-0.0.5b10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "87e0b7ec47aef284df11e4181b2803a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17205,
        "upload_time": "2020-01-28T14:27:32",
        "upload_time_iso_8601": "2020-01-28T14:27:32.492350Z",
        "url": "https://files.pythonhosted.org/packages/dd/fb/28ac2892a5849232044eb8d69a73722f54a194fc707dce03f8309df23869/vouched_python-0.0.5b10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5405dbea5f22064fc0aedc86670359a18c4cb348b1c944b3be307a0f4947bb4c",
          "md5": "94d9eec00791611ddf434437460763d2",
          "sha256": "6d515da7a0a8bc9d4bd914d8fe8f1d8e7e55f579436ca0629c21e13252c20c04"
        },
        "downloads": -1,
        "filename": "vouched-python-0.0.5b10.tar.gz",
        "has_sig": false,
        "md5_digest": "94d9eec00791611ddf434437460763d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13073,
        "upload_time": "2020-01-28T14:27:34",
        "upload_time_iso_8601": "2020-01-28T14:27:34.978787Z",
        "url": "https://files.pythonhosted.org/packages/54/05/dbea5f22064fc0aedc86670359a18c4cb348b1c944b3be307a0f4947bb4c/vouched-python-0.0.5b10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ddfb28ac2892a5849232044eb8d69a73722f54a194fc707dce03f8309df23869",
        "md5": "87e0b7ec47aef284df11e4181b2803a6",
        "sha256": "c337b68edab87c9984e4ab114a9a365db2c3ea8072be09d11b44d28c7c6bd040"
      },
      "downloads": -1,
      "filename": "vouched_python-0.0.5b10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "87e0b7ec47aef284df11e4181b2803a6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17205,
      "upload_time": "2020-01-28T14:27:32",
      "upload_time_iso_8601": "2020-01-28T14:27:32.492350Z",
      "url": "https://files.pythonhosted.org/packages/dd/fb/28ac2892a5849232044eb8d69a73722f54a194fc707dce03f8309df23869/vouched_python-0.0.5b10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5405dbea5f22064fc0aedc86670359a18c4cb348b1c944b3be307a0f4947bb4c",
        "md5": "94d9eec00791611ddf434437460763d2",
        "sha256": "6d515da7a0a8bc9d4bd914d8fe8f1d8e7e55f579436ca0629c21e13252c20c04"
      },
      "downloads": -1,
      "filename": "vouched-python-0.0.5b10.tar.gz",
      "has_sig": false,
      "md5_digest": "94d9eec00791611ddf434437460763d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13073,
      "upload_time": "2020-01-28T14:27:34",
      "upload_time_iso_8601": "2020-01-28T14:27:34.978787Z",
      "url": "https://files.pythonhosted.org/packages/54/05/dbea5f22064fc0aedc86670359a18c4cb348b1c944b3be307a0f4947bb4c/vouched-python-0.0.5b10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}