{
  "info": {
    "author": "edX",
    "author_email": "UNKNOWN",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing"
    ],
    "description": "js-test-tool\n============\n\nRun JavaScript test suites and collect coverage information.\n\n\nInstallation\n------------\n\n.. code:: bash\n\n    cd js-test-tool\n    python setup.py install\n\n\nGetting Started\n---------------\n\n1. Create a file describing the test suite.\n\n.. code:: bash\n\n    js-test-tool init js_test.yml\n\nThis will create a YAML file (``js_test.yml``) that looks like:\n\n.. code:: yaml\n\n    ---\n    # Name of the test suite, used to construct\n    # the URL from which pages are served.\n    #\n    # For example, if the suite name is \"test_suite\",\n    # then:\n    #\n    #   * /suite/test_suite\n    #     serves the test suite runner page\n    #   * /suite/test_suite/include/*\n    #     serves dependencies (src, spec, lib, and fixtures)\n    #\n    # Test suite names must be URL-encodable and unique\n    # among suite descriptions passed to js-test-tool\n    test_suite_name: test_suite\n\n    # Currently, the only supported test runner is Jasmine\n    # See http://pivotal.github.io/jasmine/\n    # for the Jasmine documentation.\n    test_runner: jasmine\n\n    # Path prepended to source files in the coverage report (optional)\n    # For example, if the source path\n    # is \"src/source.js\" (relative to this YAML file)\n    # and the prepend path is \"base/dir\"\n    # then the coverage report will show\n    # \"base/dir/src/source.js\"\n    prepend_path: base/path\n\n    # Paths to library JavaScript files (optional)\n    lib_paths:\n        - path/to/lib\n\n    # Paths to source JavaScript files\n    src_paths:\n        - path/to/src\n\n    # Paths to spec (test) JavaScript files\n    spec_paths:\n        - path/to/spec\n\n    # Paths to fixture files (optional)\n    # The fixture path will be set automatically when using jasmine-jquery.\n    # (https://github.com/velesin/jasmine-jquery)\n    #\n    # You can then access fixtures using paths relative to\n    # the test suite description:\n    #\n    #   loadFixtures('path/to/fixture/fixture.html');\n    #\n    fixture_paths:\n        - path/to/fixture\n\n    # Regular expressions used to exclude *.js files from\n    # appearing in the test runner page.\n    # Some test runners (like the jasmine runner) include files by default,\n    # which means that they are loaded using a <script> tag in the test\n    # runner page. When loading many files, this can be slow, so\n    # exclude any files you don't need.\n    # Note that not all runners behave the same way: for example, the\n    # jasmine_requirejs runner does not include files using <script> tags\n    # by default, and so will ignore this directive.\n    exclude_from_page:\n        - path/to/lib/exclude/.*\n\n    # Regular expression used to guarantee that a *.js file\n    # is included in the test runner page.\n    # If a file name matches both `exclude_from_page` and\n    # `include_in_page`, the file WILL be included.\n    # You can use this to exclude all files in a directory,\n    # but make an exception for particular files.\n    include_in_page:\n        - path/to/lib/exclude/exception_.*\\.js\n\n\n* All paths are specified relative\n  to the location of the YAML file.\n\n* Directory paths are searched recursively.\n\n* JavaScript files are loaded in the specified order.\n\n* Paths cannot contain up-level references. For example, ``path/to/dir`` is okay,\n  but ``../path/to/dir`` is not.\n  If you need to access files in directories above the test suite directory,\n  use symbolic links.\n\n2. Run the test suite.\n\n.. code:: bash\n\n    js-test-tool run js_test.yml --use-firefox\n\nThis will output a report to the console showing which tests passed or failed.\n\n\nDev Mode\n--------\n\n``js-test-tool`` has a special mode for writing and debugging tests:\n\n.. code:: bash\n\n    js-test-tool dev js_test.yml\n\nThis will start ``js-test-tool`` in **dev mode**:\n\n* Tests will run in your default browser.\n* The tool will keep running until you terminate it with ``Ctrl-C``.\n* Test results are displayed directly in the browser.\n\n\nTimeouts\n--------\n\nIf tests take too long to run, the test runner will time out.\nThe default timeout is 5 minutes, but you can override this:\n\n.. code:: bash\n\n    js-test-tool run js_test.yml --use-chrome --timeout-sec 10\n\nThe above command sets the timeout to 10 seconds.\n\n\nCoverage\n--------\n\nTo collect JavaScript coverage:\n\n1. Download and unzip `JSCover`__\n\n__ http://tntim96.github.io/JSCover/\n\n2. Set the environment variable ``JSCOVER_JAR``:\n\n.. code:: bash\n\n    export JSCOVER_JAR=~/jscover/target/dist/JSCover-all.jar\n\n3. Run ``js-test-tool`` with coverage:\n\n.. code:: bash\n\n    js-test-tool run js_test.yml --use-phantomjs --coverage-xml=js_coverage.xml --coverage-html=js_coverage.html\n\nThis will create coverage reports in two formats:\n\n* Cobertura XML\n* HTML\n\n\nXUnit Reports\n-------------\n\n``js-test-tool`` can generate XUnit-style XML reports for consumption\nby a CI system such as Jenkins.\n\n.. code:: bash\n\n    js-test-tool run js_test.yml --use-firefox --xunit-report report.xml\n\nwill generate a report called ``report.xml``.\n\n\nMultiple Browsers\n------------------\n\nUsing command-line options, you can run the tests in\nmultiple browsers:\n\n.. code:: bash\n\n    js-test-tool run js_test.yml --use-chrome --use-phantomjs\n\nwill run the tests in both Chrome and PhantomJS if the\nbrowsers are installed.\n\nThe tool currently supports these browsers:\n\n* Chrome\n* PhantomJS\n* Firefox\n\nCoverage information is combined across browsers: a line is\nconsidered covered if it is executed under *any* browser.\n\n\nMultiple Test Suites\n--------------------\n\nYou can run test suites sequentially:\n\n.. code:: bash\n\n    js-test-tool run test_1.yml test_2.yml --use-firefox\n\nIf collecting coverage, then the coverage report\nwill contain information for all files included\nin each test suite.\n\n\nLicense\n-------\n\nThe code in this repository is licensed under version 3 of the AGPL unless\notherwise noted.\n\nPlease see ``LICENSE.txt`` for details.\n\n\nHow to Contribute\n-----------------\n\nContributions are very welcome. The easiest way is to fork this repo, and then\nmake a pull request from your fork. The first time you make a pull request, you\nmay be asked to sign a Contributor Agreement.\n\n\nReporting Security Issues\n-------------------------\n\nPlease do not report security issues in public. Please email security@edx.org\n\n\nMailing List and IRC Channel\n----------------------------\n\nYou can discuss this code on the `edx-code Google Group`__ or in the\n``edx-code`` IRC channel on Freenode.\n\n__ https://groups.google.com/forum/#!forum/edx-code\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/edx/js-test-tool",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "js_test_tool",
    "package_url": "https://pypi.org/project/js_test_tool/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/js_test_tool/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/edx/js-test-tool"
    },
    "release_url": "https://pypi.org/project/js_test_tool/0.1.5/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Run JavaScript test suites and collect coverage information.",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1249378,
  "releases": {
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d56e40078f95e2e77267068dfa2fb2f871c3d2c07a1eef7a8056444323c0fd1",
          "md5": "1abaa2d4c214c8d6869f9dedd9a351ff",
          "sha256": "7ac6c7b19247bc94798a4f34a508b529db94b48ca27de9227bce167cca08ad9f"
        },
        "downloads": -1,
        "filename": "js_test_tool-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "1abaa2d4c214c8d6869f9dedd9a351ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 70226,
        "upload_time": "2013-09-08T02:54:47",
        "upload_time_iso_8601": "2013-09-08T02:54:47.862134Z",
        "url": "https://files.pythonhosted.org/packages/6d/56/e40078f95e2e77267068dfa2fb2f871c3d2c07a1eef7a8056444323c0fd1/js_test_tool-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b24f88e6d3eea86e5503b2b065989d2d4fb18a22c1a51b9bbe1dfc43af193874",
          "md5": "4be32ce962d7ed1c798eea432e180a1f",
          "sha256": "ecb76e76624e933454717e4a4890b19bec4713fe019d6051a9543a1fc28c3043"
        },
        "downloads": -1,
        "filename": "js_test_tool-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4be32ce962d7ed1c798eea432e180a1f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 126806,
        "upload_time": "2014-10-06T13:03:59",
        "upload_time_iso_8601": "2014-10-06T13:03:59.431512Z",
        "url": "https://files.pythonhosted.org/packages/b2/4f/88e6d3eea86e5503b2b065989d2d4fb18a22c1a51b9bbe1dfc43af193874/js_test_tool-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b24f88e6d3eea86e5503b2b065989d2d4fb18a22c1a51b9bbe1dfc43af193874",
        "md5": "4be32ce962d7ed1c798eea432e180a1f",
        "sha256": "ecb76e76624e933454717e4a4890b19bec4713fe019d6051a9543a1fc28c3043"
      },
      "downloads": -1,
      "filename": "js_test_tool-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "4be32ce962d7ed1c798eea432e180a1f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 126806,
      "upload_time": "2014-10-06T13:03:59",
      "upload_time_iso_8601": "2014-10-06T13:03:59.431512Z",
      "url": "https://files.pythonhosted.org/packages/b2/4f/88e6d3eea86e5503b2b065989d2d4fb18a22c1a51b9bbe1dfc43af193874/js_test_tool-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}