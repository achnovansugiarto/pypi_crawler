{
  "info": {
    "author": "Tim Barnes",
    "author_email": "tdba@bas.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: Other/Proprietary License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# README\n\nThis is a Python module which decodes meteorological reports (e.g. SYNOPs) into a Python dictionary. It can also take a Python dictionary and encode a meteorological report from it.\n\n## Currently supported\n\nThe current version of the module supports the following (in most cases; see Known Issues below):\n\n* SYNOP (FM-12)\n* SHIP (FM-13)\n* SYNOP MOBIL (FM-14)\n\n## Example usage\n\nTo decode a SYNOP:\n\n```python\nfrom pymetdecoder import synop as s\n\nsynop = \"AAXX 01004 88889 12782 61506 10094 20047 30111 40197 53007 60001 81541 333 81656 86070\"\noutput = s.SYNOP().decode(synop)\nprint(output)\n```\n\nThis yields the following output (pretty-printed):\n\n```json\n{\n  \"station_type\": {\n    \"value\": \"AAXX\"\n  },\n  \"obs_time\": {\n    \"day\": {\n      \"value\": 1\n    },\n    \"hour\": {\n      \"value\": 0\n    }\n  },\n  \"wind_indicator\": {\n    \"value\": 4,\n    \"unit\": \"KT\",\n    \"estimated\": false\n  },\n  \"station_id\": {\n    \"value\": \"88889\"\n  },\n  \"region\": {\n    \"value\": \"III\"\n  },\n  \"precipitation_indicator\": {\n    \"value\": 1,\n    \"in_group_1\": true,\n    \"in_group_3\": false\n  },\n  \"weather_indicator\": {\n    \"value\": 2,\n    \"automatic\": false\n  },\n  \"lowest_cloud_base\": {\n    \"_table\": \"1600\",\n    \"min\": 1500,\n    \"max\": 2000,\n    \"quantifier\": null,\n    \"_code\": 7,\n    \"unit\": \"m\"\n  },\n  \"visibility\": {\n    \"_table\": \"4377\",\n    \"value\": 40000,\n    \"quantifier\": null,\n    \"use90\": false,\n    \"_code\": 82,\n    \"unit\": \"m\"\n  },\n  \"cloud_cover\": {\n    \"_table\": \"2700\",\n    \"value\": 6,\n    \"obscured\": false,\n    \"unit\": \"okta\",\n    \"_code\": 6\n  },\n  \"surface_wind\": {\n    \"direction\": {\n      \"_table\": \"0877\",\n      \"value\": 150,\n      \"varAllUnknown\": false,\n      \"calm\": false,\n      \"_code\": 15,\n      \"unit\": \"deg\"\n    },\n    \"speed\": {\n      \"value\": 6,\n      \"unit\": \"KT\"\n    }\n  },\n  \"air_temperature\": {\n    \"value\": 9.4,\n    \"unit\": \"Cel\"\n  },\n  \"dewpoint_temperature\": {\n    \"value\": 4.7,\n    \"unit\": \"Cel\"\n  },\n  \"station_pressure\": {\n    \"value\": 1011.1,\n    \"unit\": \"hPa\"\n  },\n  \"sea_level_pressure\": {\n    \"value\": 1019.7,\n    \"unit\": \"hPa\"\n  },\n  \"pressure_tendency\": {\n    \"tendency\": {\n      \"_table\": \"0200\",\n      \"value\": 3\n    },\n    \"change\": {\n      \"value\": 0.7,\n      \"unit\": \"hPa\"\n    }\n  },\n  \"precipitation_s1\": {\n    \"amount\": {\n      \"_table\": \"3590\",\n      \"value\": 0,\n      \"quantifier\": null,\n      \"trace\": false,\n      \"_code\": 0,\n      \"unit\": \"mm\"\n    },\n    \"time_before_obs\": {\n      \"_table\": \"4019\",\n      \"value\": 6,\n      \"unit\": \"h\",\n      \"_code\": 1\n    }\n  },\n  \"cloud_types\": {\n    \"low_cloud_type\": {\n      \"_table\": \"0513\",\n      \"value\": 5\n    },\n    \"middle_cloud_type\": {\n      \"_table\": \"0515\",\n      \"value\": 4\n    },\n    \"high_cloud_type\": {\n      \"_table\": \"0509\",\n      \"value\": 1\n    },\n    \"low_cloud_amount\": {\n      \"value\": 1,\n      \"unit\": \"okta\"\n    }\n  },\n  \"cloud_layer\": [\n    {\n      \"cloud_cover\": {\n        \"_table\": \"2700\",\n        \"value\": 1,\n        \"obscured\": false,\n        \"unit\": \"okta\",\n        \"_code\": 1\n      },\n      \"cloud_genus\": {\n        \"_table\": \"0500\",\n        \"value\": \"Sc\",\n        \"_code\": 6\n      },\n      \"cloud_height\": {\n        \"_table\": \"1677\",\n        \"value\": 1800,\n        \"quantifier\": null,\n        \"_code\": 56,\n        \"unit\": \"m\"\n      }\n    },\n    {\n      \"cloud_cover\": {\n        \"_table\": \"2700\",\n        \"value\": 6,\n        \"obscured\": false,\n        \"unit\": \"okta\",\n        \"_code\": 6\n      },\n      \"cloud_genus\": {\n        \"_table\": \"0500\",\n        \"value\": \"Ci\",\n        \"_code\": 0\n      },\n      \"cloud_height\": {\n        \"_table\": \"1677\",\n        \"value\": 6000,\n        \"quantifier\": null,\n        \"_code\": 70,\n        \"unit\": \"m\"\n      }\n    }\n  ]\n}\n```\n\nRe-encoding this dict gets back the original SYNOP:\n\n```python\nfrom pymetdecoder import synop as s\n\noriginal = \"AAXX 01004 88889 12782 61506 10094 20047 30111 40197 53007 60001 81541 333 81656 86070\"\nsynop = s.SYNOP()\noutput = synop.decode(synop)\nmsg = synop.encode(output)\n\nprint(msg)\n# Returns AAXX 01004 88889 12782 61506 10094 20047 30111 40197 53007 60001 81541 333 81656 86070\n```\n\nCommonly seen attributes in the output dict are as follows:\n\n* `value` - The absolute value of the attribute\n* `min`, `max` - If a code value converts to a range, the min/max specifies the limit of the range\n* `quantifier` - Used alongside min/max/value to add an inequality if needs be (e.g. `{ \"value\": 6000, \"quantifier\": \"isGreater\"}` represents a value >6000). This is often the case when looking up values in a code table\n* `unit` - The unit the value is measured in. The Unified Code for Units of Measure is used here (https://ucum.org/ucum.html)\n* `_table` - This is the code table used to look up the value\n* `_code` - The code value looked up in the code table. When encoding a message, if this attribute is present, it will use that, rather than trying to calculate it from the value\n\n### Malformed reports\n\nThe module will try to decode as much of a report as it can. Non-fatal problems (e.g. invalid codes) will emit a warning message and continue. Fatal problems will emit a `DecodeError` exception, which can be caught in a `try...except` block.\n\n## Changelog\n\nSee `CHANGELOG.md` for the list of changes\n\n## Known issues\n\nThis version is 0.1.2. There may be some uncaught bugs/issues or other problems that have not been found yet. The following is a list of known issues which are still to be addressed:\n\n* Not all countries are auto-detected. As more region-specific handling is added, more countries will be added to the list\n* Section 5 of the SYNOP messages are not handled yet. Any codes in these sections are stored in the output dict under the `section5` attribute\n* Most of the group 9 codes of section 3 are handled. Any codes not handled are added to a list in the output dict under the `_not_implemented` attribute\n* Some aspects of encoding have not been fully tested\n\nFeel free to raise any additional issues/bugs in the issue tracker\n\n## Future plans\n\nIn future, it is intended that the module will support the following:\n\n* SYNOP section 5\n* BUOY (FM-18)\n* TEMP (FM-35)\n* CLIMAT (FM-71)\n* METAR (FM-15)\n\nIf you would like to contribute to this module by adding in the functionality to support any of these reports (or other reports), then feel free to do so!\n\n## License\n\n(c) UK Research and Innovation (UKRI), 2021 - 2023, British Antarctic Survey.\nYou may use and re-use this software and associated documentation files free of charge in any format or medium, under the terms of the Open Government Licence v3.0.\nYou may obtain a copy of the Open Government Licence at http://www.nationalarchives.gov.uk/doc/open-government-licence/\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/antarctica/pymetdecoder",
    "keywords": "",
    "license": "Open Government License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymetdecoder",
    "package_url": "https://pypi.org/project/pymetdecoder/",
    "platform": null,
    "project_url": "https://pypi.org/project/pymetdecoder/",
    "project_urls": {
      "Homepage": "https://github.com/antarctica/pymetdecoder"
    },
    "release_url": "https://pypi.org/project/pymetdecoder/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python module to decode/encode met reports e.g. SYNOPs",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16573430,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c5833f3fedc987b14e63d2c84c42c1af8a66c6ecf94ac98f469aabbfaf94617",
          "md5": "97776ed40d575f73e2f789acccc1a422",
          "sha256": "8ae9c04cc7516f3a89cb2c4341aab26c1303e213b249f90a6fe596d303d9a1fd"
        },
        "downloads": -1,
        "filename": "pymetdecoder-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97776ed40d575f73e2f789acccc1a422",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39006,
        "upload_time": "2021-05-27T11:22:44",
        "upload_time_iso_8601": "2021-05-27T11:22:44.919232Z",
        "url": "https://files.pythonhosted.org/packages/3c/58/33f3fedc987b14e63d2c84c42c1af8a66c6ecf94ac98f469aabbfaf94617/pymetdecoder-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4ad2a9784a207384d4ac266d6819499a5e155623954a8e69e8558bf5b1bbb38",
          "md5": "58fbcf656a8ec357cc25decfa48ecb8b",
          "sha256": "f26ca521f39c638354c85d7af78ef657671b0fd95c586535781366e20281b489"
        },
        "downloads": -1,
        "filename": "pymetdecoder-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "58fbcf656a8ec357cc25decfa48ecb8b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38819,
        "upload_time": "2021-05-27T11:22:47",
        "upload_time_iso_8601": "2021-05-27T11:22:47.070783Z",
        "url": "https://files.pythonhosted.org/packages/b4/ad/2a9784a207384d4ac266d6819499a5e155623954a8e69e8558bf5b1bbb38/pymetdecoder-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5523580d2ff3c651df64165a822cfca9c676802ec2026a728db1bd47818884de",
          "md5": "5710d7544dfdb38fc3bb2254a1fa70bc",
          "sha256": "7d50139575ad8f38cf4721f5c90c21d33d053a2e2ec0b2fac6a2503029d6197c"
        },
        "downloads": -1,
        "filename": "pymetdecoder-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5710d7544dfdb38fc3bb2254a1fa70bc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39143,
        "upload_time": "2021-07-19T11:42:02",
        "upload_time_iso_8601": "2021-07-19T11:42:02.652860Z",
        "url": "https://files.pythonhosted.org/packages/55/23/580d2ff3c651df64165a822cfca9c676802ec2026a728db1bd47818884de/pymetdecoder-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c99a3872f338858cd1becd4451cfeaa7d708e233fc2844a90bc7102d6999d90",
          "md5": "5b5356ce1555ae185ac7614090d9f71b",
          "sha256": "80bf6e6123eb5df622ee57a831464c664abd5d421f1ee94903f100c5d3532bf0"
        },
        "downloads": -1,
        "filename": "pymetdecoder-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5b5356ce1555ae185ac7614090d9f71b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38944,
        "upload_time": "2021-07-19T11:42:04",
        "upload_time_iso_8601": "2021-07-19T11:42:04.926717Z",
        "url": "https://files.pythonhosted.org/packages/9c/99/a3872f338858cd1becd4451cfeaa7d708e233fc2844a90bc7102d6999d90/pymetdecoder-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86c53dd34ee2107214839e1ce77d86c3d16f1265153faa4cd602473332fb262e",
          "md5": "76159488f892b4a0e3b736a6a188c7a5",
          "sha256": "d1f2a9387ad841eb45df676547b7bb099edbb0ea41de18c107a1033ae5087f53"
        },
        "downloads": -1,
        "filename": "pymetdecoder-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76159488f892b4a0e3b736a6a188c7a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 40168,
        "upload_time": "2023-01-26T09:42:34",
        "upload_time_iso_8601": "2023-01-26T09:42:34.168971Z",
        "url": "https://files.pythonhosted.org/packages/86/c5/3dd34ee2107214839e1ce77d86c3d16f1265153faa4cd602473332fb262e/pymetdecoder-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f60a7c7ea8e0bd9fd3e205d02da130897574fd2d94d1a3a7b828317ad7743224",
          "md5": "49d18a4f7f98be73ee2ff11d32eeae27",
          "sha256": "4f2e61d90ff96e2933341b8d7f396aae3784e2e7d9f2d64435befb0ec7d14d23"
        },
        "downloads": -1,
        "filename": "pymetdecoder-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "49d18a4f7f98be73ee2ff11d32eeae27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39866,
        "upload_time": "2023-01-26T09:42:36",
        "upload_time_iso_8601": "2023-01-26T09:42:36.764912Z",
        "url": "https://files.pythonhosted.org/packages/f6/0a/7c7ea8e0bd9fd3e205d02da130897574fd2d94d1a3a7b828317ad7743224/pymetdecoder-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86c53dd34ee2107214839e1ce77d86c3d16f1265153faa4cd602473332fb262e",
        "md5": "76159488f892b4a0e3b736a6a188c7a5",
        "sha256": "d1f2a9387ad841eb45df676547b7bb099edbb0ea41de18c107a1033ae5087f53"
      },
      "downloads": -1,
      "filename": "pymetdecoder-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "76159488f892b4a0e3b736a6a188c7a5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 40168,
      "upload_time": "2023-01-26T09:42:34",
      "upload_time_iso_8601": "2023-01-26T09:42:34.168971Z",
      "url": "https://files.pythonhosted.org/packages/86/c5/3dd34ee2107214839e1ce77d86c3d16f1265153faa4cd602473332fb262e/pymetdecoder-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f60a7c7ea8e0bd9fd3e205d02da130897574fd2d94d1a3a7b828317ad7743224",
        "md5": "49d18a4f7f98be73ee2ff11d32eeae27",
        "sha256": "4f2e61d90ff96e2933341b8d7f396aae3784e2e7d9f2d64435befb0ec7d14d23"
      },
      "downloads": -1,
      "filename": "pymetdecoder-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "49d18a4f7f98be73ee2ff11d32eeae27",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39866,
      "upload_time": "2023-01-26T09:42:36",
      "upload_time_iso_8601": "2023-01-26T09:42:36.764912Z",
      "url": "https://files.pythonhosted.org/packages/f6/0a/7c7ea8e0bd9fd3e205d02da130897574fd2d94d1a3a7b828317ad7743224/pymetdecoder-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}