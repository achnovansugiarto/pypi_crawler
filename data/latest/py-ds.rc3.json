{
  "info": {
    "author": "Nitin Katyal",
    "author_email": "nitinkatyal1314@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Data Structure in Python\n\nThis repo contains python implementation of data structures. The following data structures are available:\n\n1. Tree\n2. Heap\n3. Disjoint sets\n4. Graph\n\n\n# Installation\n\nTo install from pypi\n\n```bash\npip install py-ds\n```\n\nTo install from source\n\n```bash\ngit clone https://github.com/nitinkatyal1314/data-structures.git\npython setup.py install\n```\n\n# Examples\n\nThe examples are available in the examples directory and can be used as a playground or a starting point.\n\n## Tree creation and traversal (BFS)\n\n\n```python\nfrom pyds.tree import TreeAPI, TreeWalkStrategy, TreeNodeKeys\n\n\nname = TreeNodeKeys.NAME\ndata = TreeNodeKeys.DATA\nchildren = TreeNodeKeys.CHILDREN\n\n# tree as JSON with root node and 2 children (L1 and R1), and R2-1 is the child of R1\n# if the tree is large, it is recommended to create smaller subtrees and use the add_child API\n# refer examples/tree/add_subtree.py for the API\ntree_data = {\n    name: \"R_\",\n    data: {},\n    children: [\n        {\n            name: \"L1\",\n            children: [],\n            data: {}\n        },\n        {\n            name: \"R1\",\n            children: [\n                {\n                    name: \"R2-1\",\n                    data: {},\n                    children: []\n                },\n            ],\n            data: {}\n        }\n    ]\n}\n\n# callback methof to print the node\ndef print_nodename(node):\n    print(node.name)\n\n# the main API\ndef main():\n    api = TreeAPI()\n    root = api.parse(tree_data)\n    print(\"Walking - Breadth First\")\n    api.walk(root, strategy=TreeWalkStrategy.BREADTH_FIRST, callback=print_nodename)\n\n\n# run the main method\nmain()\n```\n\n## Heap (Insertion and Deletion)\n\n```python\nfrom pyds.heap import HeapType, Heap\n\n# max heap\nheap = Heap(heap_type=HeapType.MAX)\n\nheap.add_node(1)\nheap.add_node(2)\nheap.add_node(3)\nheap.add_node(4)\nheap.add_node(5)\n\n# heap print node callback\ndef print_node(el):\n  print(\"Node : \", el)\n\n\n# walk the heap\nheap.walk(print_node)\n\n# delete the node from the heap\nheap.delete_node()\n```\n\n## Disjoint set (check items are disjoint)\n\n```python\nfrom pyds.disjointsets import DisjointSetAPI\n\nitems = [\"A\", \"B\", \"C\", \"D\"]\napi = DisjointSetAPI()\n\nitem1 = \"A\"\nitem2 = \"B\"\n\n# creates 4 sets each with single item\napi.create(items)\n\nis_disjoint = api.is_disjoint(item1, item2)\n\nprint(\"Checking if %s and %s are disjoint sets\" % (item1, item2))\nprint(is_disjoint)\n\nprint(\"==========================\")\nprint(\"Taking a union of sets now\")\napi.union(item1, item2)\n\nprint(\"==========================\")\nprint(\"Checking if post union %s and %s are disjoint sets\" % (item1, item2))\nis_disjoint = api.is_disjoint(item1, item2)\nprint(is_disjoint)\n\n```\n\n\n## Graph (Creation and DFS Walk)\n\n```python\nfrom pyds.graph import GraphAPI, GraphTypes\n\n# callback method to print the node during traversal\ndef print_node(node):\n    \"\"\"\n    Callback function to print the node.\n\n    :param node: node of the graph\n    :type node: str\n    :return:\n    :rtype:\n    \"\"\"\n    print(\"Node : \", node)\n\n# create graph, add nodes\napi = GraphAPI()\n\n# change this to Directed for directed graphs\ngraph = api.init_graph(graph_type=GraphTypes.UNDIRECTED)\n\napi.add_node(graph, \"A\")\napi.add_node(graph, \"B\")\napi.add_node(graph, \"C\")\napi.add_node(graph, \"D\")\napi.add_node(graph, \"E\")\napi.add_node(graph, \"F\")\n\n# connect nodes in graph\napi.add_edge(graph, \"A\", \"B\")\napi.add_edge(graph, \"A\", \"C\")\napi.add_edge(graph, \"C\", \"B\")\napi.add_edge(graph, \"B\", \"D\")\napi.add_edge(graph, \"D\", \"F\")\napi.add_edge(graph, \"C\", \"E\")\napi.add_edge(graph, \"E\", \"F\")\n\nprint(\"DFS Start \")\napi.walk_dfs(graph, \"A\", print_node)\n\n```\n\n## Graph (Dijikstra - Single source shortest path)\n\n```python\nfrom pyds.graph import GraphAPI, GraphTypes\n\n# create graph (DIRECTED), add nodes\n# create graph, add nodes\napi = GraphAPI()\ngraph = api.init_graph(graph_type=GraphTypes.DIRECTED)\n\napi.add_node(graph, \"A\")\napi.add_node(graph, \"B\")\napi.add_node(graph, \"C\")\napi.add_node(graph, \"D\")\napi.add_node(graph, \"E\")\napi.add_node(graph, \"F\")\n\n# connect nodes in graph\napi.add_edge(graph, \"A\", \"B\", 5)\napi.add_edge(graph, \"A\", \"C\", 2)\napi.add_edge(graph, \"B\", \"D\", 3)\napi.add_edge(graph, \"B\", \"C\", 9)\napi.add_edge(graph, \"C\", \"E\", 5)\napi.add_edge(graph, \"E\", \"D\", 4)\napi.add_edge(graph, \"E\", \"F\", 6)\napi.add_edge(graph, \"D\", \"F\", 1)\n\nsource_node = \"A\"\n\nprint(\"Running Dijikstra algorithm starting from node %s. \" % source_node)\nshortest_distance_data = api.find_shortest_path_using_dijikstra(graph, start_node=source_node)\nprint(\"Shortest distance to all nodes from source node [%s] is: \" % source_node)\nprint(shortest_distance_data)\n\n```\n\n## Minimum cost spanning Tree (Prim's and Kruskal)\n\n```python\nfrom pyds.graph import GraphAPI, GraphTypes\n\n# create graph, add nodes\napi = GraphAPI()\n\ngraph_obj = api.init_graph(graph_type=GraphTypes.UNDIRECTED)\n\napi.add_node(graph_obj, \"A\")\napi.add_node(graph_obj, \"B\")\napi.add_node(graph_obj, \"C\")\napi.add_node(graph_obj, \"D\")\napi.add_node(graph_obj, \"E\")\napi.add_node(graph_obj, \"F\")\napi.add_node(graph_obj, \"G\")\n\n# connect nodes in graph\napi.add_edge(graph_obj, \"A\", \"B\", 10)\napi.add_edge(graph_obj, \"A\", \"C\", 28)\napi.add_edge(graph_obj, \"B\", \"E\", 25)\napi.add_edge(graph_obj, \"E\", \"D\", 24)\napi.add_edge(graph_obj, \"E\", \"F\", 22)\napi.add_edge(graph_obj, \"C\", \"D\", 14)\napi.add_edge(graph_obj, \"C\", \"G\", 16)\napi.add_edge(graph_obj, \"F\", \"D\", 18)\napi.add_edge(graph_obj, \"F\", \"G\", 12)\n\nspanning_tree = api.min_cost_spanning_tree_using_prims(graph_obj)\nprint(spanning_tree)\n```\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nitinkatyal1314/data-structures",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-ds",
    "package_url": "https://pypi.org/project/py-ds/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-ds/",
    "project_urls": {
      "Homepage": "https://github.com/nitinkatyal1314/data-structures"
    },
    "release_url": "https://pypi.org/project/py-ds/0.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Ready to use data structures",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10907858,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5ee4aa9a7f3b8c047f98c1e3f3a02f1be6ffb4b73b5701deca96ca65cca2c7c",
          "md5": "945cd54928feec6d2cc1a3254b82ba34",
          "sha256": "84b8b3dd1c9c4849bd619c46e764ad29ffc92ca335bb2bd22c7e4e11916560b4"
        },
        "downloads": -1,
        "filename": "py_ds-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "945cd54928feec6d2cc1a3254b82ba34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10271,
        "upload_time": "2021-05-04T10:55:19",
        "upload_time_iso_8601": "2021-05-04T10:55:19.159326Z",
        "url": "https://files.pythonhosted.org/packages/b5/ee/4aa9a7f3b8c047f98c1e3f3a02f1be6ffb4b73b5701deca96ca65cca2c7c/py_ds-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c623cf507f97630bcc6c666f012e33efb8c4f8dffe4edac0de057dd916dc978",
          "md5": "4124e8478b5f5a1ae27f688eeec27aac",
          "sha256": "caa94b41cc322e5ed582d725a7dabd11a4fc0b9687f2e0f99f5432eef8814092"
        },
        "downloads": -1,
        "filename": "py-ds-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4124e8478b5f5a1ae27f688eeec27aac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8238,
        "upload_time": "2021-05-04T10:55:20",
        "upload_time_iso_8601": "2021-05-04T10:55:20.631923Z",
        "url": "https://files.pythonhosted.org/packages/4c/62/3cf507f97630bcc6c666f012e33efb8c4f8dffe4edac0de057dd916dc978/py-ds-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64d1c9abbaec9955f32206cc64e2086ad2b5e8fa816fe32bbdd535fe2cd5440d",
          "md5": "130542d4dab09479faf0241820b2e538",
          "sha256": "d580e71d9d22a894a1201b04538f429e8670472fec4bebc74c2254c3bfca0f1f"
        },
        "downloads": -1,
        "filename": "py_ds-0.1.1-py3.9.egg",
        "has_sig": false,
        "md5_digest": "130542d4dab09479faf0241820b2e538",
        "packagetype": "bdist_egg",
        "python_version": "3.9",
        "requires_python": ">=3.6",
        "size": 23635,
        "upload_time": "2021-05-05T10:37:07",
        "upload_time_iso_8601": "2021-05-05T10:37:07.166465Z",
        "url": "https://files.pythonhosted.org/packages/64/d1/c9abbaec9955f32206cc64e2086ad2b5e8fa816fe32bbdd535fe2cd5440d/py_ds-0.1.1-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58956bfccfc34c50edc1c33f53ab46495a2e5d8a093b33302b9775c923080697",
          "md5": "0a52733e702de3d24830100886b54e98",
          "sha256": "50188e2f8e40bade59deacca9704a249e95d2a294acaf84bf4ea532f2614536a"
        },
        "downloads": -1,
        "filename": "py_ds-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a52733e702de3d24830100886b54e98",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11532,
        "upload_time": "2021-05-05T10:37:03",
        "upload_time_iso_8601": "2021-05-05T10:37:03.492115Z",
        "url": "https://files.pythonhosted.org/packages/58/95/6bfccfc34c50edc1c33f53ab46495a2e5d8a093b33302b9775c923080697/py_ds-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bfa2b9967f608edf0e34fd00a02c5801f3c1b5642da7ecb07834d4d772d1193",
          "md5": "f560d55d8c636ed1871ccdb428e2abb8",
          "sha256": "28094d81c525e2a8d7530ae98d0690ff3e84d180ca0a0eb6eb7598acd02243da"
        },
        "downloads": -1,
        "filename": "py-ds-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f560d55d8c636ed1871ccdb428e2abb8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9468,
        "upload_time": "2021-05-05T10:37:05",
        "upload_time_iso_8601": "2021-05-05T10:37:05.230631Z",
        "url": "https://files.pythonhosted.org/packages/3b/fa/2b9967f608edf0e34fd00a02c5801f3c1b5642da7ecb07834d4d772d1193/py-ds-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80c884e3b4bd277e9eb3016f3bc91283cac3f39f4b97f0db62484c41c1cfc0f6",
          "md5": "e42830345293a6240d84c81295512499",
          "sha256": "a8274752f7391051db8b84b0252cbb5e1cacfb630e18db758f34a9bcc60dca24"
        },
        "downloads": -1,
        "filename": "py_ds-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e42830345293a6240d84c81295512499",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28172,
        "upload_time": "2021-07-14T13:38:47",
        "upload_time_iso_8601": "2021-07-14T13:38:47.611863Z",
        "url": "https://files.pythonhosted.org/packages/80/c8/84e3b4bd277e9eb3016f3bc91283cac3f39f4b97f0db62484c41c1cfc0f6/py_ds-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d60b74c2f1ab7479fc3ab8f028f0a95d84206c20d61c1c9de0bb5035022f79ce",
          "md5": "18c15a3677994bd05f52f717a76aa909",
          "sha256": "f7c7a8c771d1298520b6d5033e1ef2e4d03fd6476f590f279694aaee8d06cb3d"
        },
        "downloads": -1,
        "filename": "py-ds-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "18c15a3677994bd05f52f717a76aa909",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22996,
        "upload_time": "2021-07-14T13:38:49",
        "upload_time_iso_8601": "2021-07-14T13:38:49.453709Z",
        "url": "https://files.pythonhosted.org/packages/d6/0b/74c2f1ab7479fc3ab8f028f0a95d84206c20d61c1c9de0bb5035022f79ce/py-ds-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80c884e3b4bd277e9eb3016f3bc91283cac3f39f4b97f0db62484c41c1cfc0f6",
        "md5": "e42830345293a6240d84c81295512499",
        "sha256": "a8274752f7391051db8b84b0252cbb5e1cacfb630e18db758f34a9bcc60dca24"
      },
      "downloads": -1,
      "filename": "py_ds-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e42830345293a6240d84c81295512499",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 28172,
      "upload_time": "2021-07-14T13:38:47",
      "upload_time_iso_8601": "2021-07-14T13:38:47.611863Z",
      "url": "https://files.pythonhosted.org/packages/80/c8/84e3b4bd277e9eb3016f3bc91283cac3f39f4b97f0db62484c41c1cfc0f6/py_ds-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d60b74c2f1ab7479fc3ab8f028f0a95d84206c20d61c1c9de0bb5035022f79ce",
        "md5": "18c15a3677994bd05f52f717a76aa909",
        "sha256": "f7c7a8c771d1298520b6d5033e1ef2e4d03fd6476f590f279694aaee8d06cb3d"
      },
      "downloads": -1,
      "filename": "py-ds-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "18c15a3677994bd05f52f717a76aa909",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 22996,
      "upload_time": "2021-07-14T13:38:49",
      "upload_time_iso_8601": "2021-07-14T13:38:49.453709Z",
      "url": "https://files.pythonhosted.org/packages/d6/0b/74c2f1ab7479fc3ab8f028f0a95d84206c20d61c1c9de0bb5035022f79ce/py-ds-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}