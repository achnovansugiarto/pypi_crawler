{
  "info": {
    "author": "t bittarn",
    "author_email": "t@bittarn.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# ElasticMockNew\n\nPython Elasticsearch Mock for test purposes\n\n[![Build Status](https://travis-ci.org/vrcmarcos/elasticmock.svg?branch=master)](https://travis-ci.org/vrcmarcos/elasticmock) [![Coverage Status](https://coveralls.io/repos/github/vrcmarcos/elasticmock/badge.svg?branch=master)](https://coveralls.io/github/vrcmarcos/elasticmock?branch=master) [![PyPI version](https://badge.fury.io/py/ElasticMockNew.svg)](https://badge.fury.io/py/ElasticMockNew) [![GitHub license](https://img.shields.io/github/license/vrcmarcos/elasticmock)](https://github.com/vrcmarcos/elasticmock/blob/master/LICENSE) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/ElasticMockNew) ![ElasticSearch Version](https://img.shields.io/badge/elasticsearch-1%20%7C%202%20%7C%205%20%7C%206%20%7C%207-blue) \n\n![Libraries.io dependency status for latest release](https://img.shields.io/librariesio/release/pypi/elasticmock) [![Downloads](https://pepy.tech/badge/elasticmock/month)](https://pepy.tech/project/elasticmock/month)\n\n## Installation\n\n```shell\npip install ElasticMockNew\n```\n\n## Usage\n\nTo use ElasticMockNew, decorate your test method with **@elasticmock** decorator:\n\n```python\nfrom unittest import TestCase\n\nfrom elasticmock import elasticmock\n\n\nclass TestClass(TestCase):\n\n    @elasticmock\n    def test_should_return_something_from_elasticsearch(self):\n        self.assertIsNotNone(some_function_that_uses_elasticsearch())\n```\n\n### Custom Behaviours\n\nYou can also force the behaviour of the ElasticSearch instance by importing the `elasticmock.behaviour` module:\n\n```python\nfrom unittest import TestCase\n\nfrom elasticmock import behaviour\n\n\nclass TestClass(TestCase):\n\n    ...\n\n    def test_should_return_internal_server_error_when_simulate_server_error_is_true(self):\n        behaviour.server_failure.enable()\n        ...\n        behaviour.server_failure.disable()\n```\n\nYou can also disable all behaviours by calling `behaviour.disable_all()` (Consider put this in your `def tearDown(self)` method)\n\n#### Available Behaviours\n\n* `server_failure`: Will make all calls to ElasticSearch returns the following error message:\n    ```python\n    {\n        'status_code': 500,\n        'error': 'Internal Server Error'\n    }\n    ```\n\n## Code example\n\nLet's say you have a prod code snippet like this one:\n\n```python\nimport elasticsearch\n\nclass FooService:\n\n    def __init__(self):\n        self.es = elasticsearch.Elasticsearch(hosts=[{'host': 'localhost', 'port': 9200}])\n\n    def create(self, index, body):\n        es_object = self.es.index(index, body)\n        return es_object.get('_id')\n\n    def read(self, index, id):\n        es_object = self.es.get(index, id)\n        return es_object.get('_source')\n\n```\n\nThan you should be able to test this class by mocking ElasticSearch using the following test class:\n\n```python\nfrom unittest import TestCase\nfrom elasticmock import elasticmock\nfrom foo.bar import FooService\n\nclass FooServiceTest(TestCase):\n\n    @elasticmock\n    def should_create_and_read_object(self):\n        # Variables used to test\n        index = 'test-index'\n        expected_document = {\n            'foo': 'bar'\n        }\n\n        # Instantiate service\n        service = FooService()\n\n        # Index document on ElasticSearch\n        id = service.create(index, expected_document)\n        self.assertIsNotNone(id)\n\n        # Retrive dpcument from ElasticSearch\n        document = service.read(index, id)\n        self.assertEquals(expected_document, document)\n\n```\n\n## Notes:\n\n- The mocked **search** method returns **all available documents** indexed on the index with the requested document type.\n- The mocked **suggest** method returns the exactly suggestions dictionary passed as body serialized in Elasticsearch.suggest response. **Atention:** If the term is an *int*, the suggestion will be ```python term + 1```. If not, the suggestion will be formatted as ```python {0}_suggestion.format(term) ```.\nExample:\n\t- **Suggestion Body**:\n\t```python\n    suggestion_body = {\n        'suggestion-string': {\n            'text': 'test_text',\n            'term': {\n                'field': 'string'\n            }\n        },\n        'suggestion-id': {\n            'text': 1234567,\n            'term': {\n                'field': 'id'\n            }\n        }\n    }\n    ```\n    - **Suggestion Response**:\n    ```python\n    {\n        'suggestion-string': [\n            {\n                'text': 'test_text',\n                'length': 1,\n                'options': [\n                    {\n                        'text': 'test_text_suggestion',\n                        'freq': 1,\n                        'score': 1.0\n                    }\n                ],\n                'offset': 0\n            }\n        ],\n        'suggestion-id': [\n            {\n                'text': 1234567,\n                'length': 1,\n                'options': [\n                    {\n                        'text': 1234568,\n                        'freq': 1,\n                        'score': 1.0\n                    }\n                ],\n                'offset': 0\n            }\n        ],\n    }\n    ```\n\n## Testing\n\n```bash\npython setup.py test\n```\n\n## Changelog\n\n#### 1.8.1:\n- Add must not to query type\n- Add sort support\n\n#### 1.8.0:\n- [Add multi_match](https://github.com/vrcmarcos/elasticmock/pull/63) (Thanks [@carlosgalvez-tiendeo](https://github.com/carlosgalvez-tiendeo))\n- [Add mget](https://github.com/vrcmarcos/elasticmock/pull/64) (Thanks [@carlosgalvez-tiendeo](https://github.com/carlosgalvez-tiendeo))\n- [Add create, update, and delete to bulk API](https://github.com/vrcmarcos/elasticmock/pull/65) (Thanks [@fenimore](https://github.com/fenimore))\n- [Add Should to bool Query](https://github.com/vrcmarcos/elasticmock/pull/67) (Thanks [@fenimore](https://github.com/fenimore))\n- [Update Search API return result](https://github.com/vrcmarcos/elasticmock/pull/68) (Thanks [@fenimore](https://github.com/fenimore))\n\n#### 1.7.0:\n- [Add shards skipped to search and count](https://github.com/vrcmarcos/elasticmock/pull/56) (Thanks [@philtweir](https://github.com/philtweir))\n- [Allow 'match_all' queries in FakeSearch](https://github.com/vrcmarcos/elasticmock/pull/54) (Thanks [@jankislinger](https://github.com/jankislinger))\n- [Query using nested attributes](https://github.com/vrcmarcos/elasticmock/pull/55) (Thanks [@jankislinger](https://github.com/jankislinger))\n- [New features: range, size, aggregations](https://github.com/vrcmarcos/elasticmock/pull/57) (Thanks [@jankislinger](https://github.com/jankislinger))\n- [Adding \"should\" and \"minimum_should_match\" to QueryType](https://github.com/vrcmarcos/elasticmock/pull/62) (Thanks [@lunarie16](https://github.com/lunarie16))\n\n#### 1.6.2:\n- [Add must to query type](https://github.com/vrcmarcos/elasticmock/pull/47) (Thanks [@cuent](https://github.com/cuent))\n- [Add match all query type](https://github.com/vrcmarcos/elasticmock/pull/48) (Thanks [@cuent](https://github.com/cuent))\n\n#### 1.6.1:\n- Fix Twine README.md\n\n#### 1.6.0:\n- [Implements several basic search types](https://github.com/vrcmarcos/elasticmock/pull/42) (Thanks [@KyKoPho](https://github.com/KyKoPho))\n- [Allow ignoring of missing documents (404) for get and delete](https://github.com/vrcmarcos/elasticmock/pull/44) (Thanks [@joosterman](https://github.com/joosterman))\n\n#### 1.5.1:\n- [Fix tests for es > 7](https://github.com/vrcmarcos/elasticmock/pull/38) (Thanks [@chesstrian](https://github.com/chesstrian))\n\n#### 1.5.0:\n- [**FakeElasticSearch**: Mocked **indices** property](https://github.com/vrcmarcos/elasticmock/issues/22)\n  - **FakeIndicesClient**: Mocked **create**, **exists**, **refresh** and **delete** methods\n- [**FakeElasticSearch**: Mocked **cluster** property](https://github.com/vrcmarcos/elasticmock/issues/8)\n  - **FakeClusterClient**: Mocked **health** method\n\n#### 1.4.0\n\n- [Fix es.index regression issue](https://github.com/vrcmarcos/elasticmock/issues/34)\n- [Add 'Force Server Failure' feature as requested](https://github.com/vrcmarcos/elasticmock/issues/28)\n- Reformat code to be compliant with PEP8\n- Add support to Python 3.8\n\n#### 1.3.7\n\n- [Adding fix for updating existing doc using index](https://github.com/vrcmarcos/elasticmock/pull/32) (Thanks [@adityaghosh](https://github.com/adityaghosh))\n- [Added bulk method](https://github.com/vrcmarcos/elasticmock/pull/30) (Thanks [@charl-van-niekerk](https://github.com/charl-van-niekerk))\n- [Add default value to doc_type in index method as it is by default set to '\\_doc'](https://github.com/vrcmarcos/elasticmock/pull/27) (Thanks [@mohantyashish109](https://github.com/mohantyashish109))\n- [Add support for Python 3.7](https://github.com/vrcmarcos/elasticmock/pull/25) (Thanks [@asherf](https://github.com/asherf))\n\n#### 1.3.6\n\n- [Fix installation issue](https://github.com/vrcmarcos/elasticmock/pull/20) (Thanks [@tdhopper](https://github.com/tdhopper))\n\n#### 1.3.5\n\n- [Fix 1.3.4 release](https://github.com/vrcmarcos/elasticmock/pull/19) (Thanks [@infinite-Joy](https://github.com/infinite-Joy))\n\n#### 1.3.4\n\n- [Added aggregations to response if requested](https://github.com/vrcmarcos/elasticmock/pull/15) (Thanks [@snakeye](https://github.com/snakeye))\n- [Implementing new methods for scrolling](https://github.com/vrcmarcos/elasticmock/pull/17) (Thanks [@tcatrain](https://github.com/tcatrain))\n\n#### 1.3.3\n\n- [Search: doc_type can be a list](https://github.com/vrcmarcos/elasticmock/pull/16) (Thanks [@garncarz](https://github.com/garncarz))\n- [Exclude tests package](https://github.com/vrcmarcos/elasticmock/pull/13) (Thanks [@jmlw](https://github.com/jmlw))\n- [Make the FakeElasticsearch __init__ signature match the one from Elasticsearch](https://github.com/vrcmarcos/elasticmock/pull/10) (Thanks [@xrmx](https://github.com/xrmx))\n- [Improve search and count](https://github.com/vrcmarcos/elasticmock/pull/7) (Thanks [@frivoire](https://github.com/frivoire))\n\n#### 1.3.2\n\n- **elasticmock**: Python 3 fixes (Thanks [@barseghyanartur](https://github.com/barseghyanartur))\n- **test**: Add information on testing (Thanks [@barseghyanartur](https://github.com/barseghyanartur))\n- **README.md**: Fixed typo (Thanks [@bowlofstew](https://github.com/bowlofstew))\n\n#### 1.3.1\n\n- **elasticmock**: Allow the same arguments to the mock that elasticsearch.Elasticsearch allows (Thanks [@mattbreeden](https://github.com/mattbreeden))\n\n#### 1.3.0:\n- **FakeElasticSearch**: Mocked **count** method (Thanks [@TheoResources](https://github.com/TheoResources))\n\n#### 1.2.0:\n- **FakeElasticSearch**: Mocked **suggest** method\n\n#### 1.1.1:\n- **elasticmock**: Changing the cleanup older FakeElasticSearch's instances order\n- **FakeElasticSearch.index**: Changing the method signature to correctly overrides the Elasticsearch.index method\n\n#### 1.1.0:\n- **FakeElasticSearch**: Mocked **delete** method\n\n#### 1.0.1:\n- **setup.py**: Fixed GitHub link\n\n#### 1.0.0:\n- **elasticmock**: Created **@elasticmock** decorator\n- **FakeElasticSearch**: Mocked **exists**, **get**, **get_source**, **index**, **info**, **search** and **ping** method\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/t-bittarn/elasticmock",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ElasticMockNew",
    "package_url": "https://pypi.org/project/ElasticMockNew/",
    "platform": "",
    "project_url": "https://pypi.org/project/ElasticMockNew/",
    "project_urls": {
      "Homepage": "https://github.com/t-bittarn/elasticmock"
    },
    "release_url": "https://pypi.org/project/ElasticMockNew/1.8.1/",
    "requires_dist": [
      "elasticsearch",
      "mock",
      "python-dateutil"
    ],
    "requires_python": "",
    "summary": "Python Elasticsearch Mock for test purposes with new features",
    "version": "1.8.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10689414,
  "releases": {
    "1.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32626daed9a5dcc6328cf4d771fbbd029460ab34e02f3d641c5994301417ee63",
          "md5": "94047ead5149746899c2facd882b5abe",
          "sha256": "cb1bcc89ba3bcbd3a1c9f4d047d7bb0b26df9201955878e8ee263e54c9c94af2"
        },
        "downloads": -1,
        "filename": "ElasticMockNew-1.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94047ead5149746899c2facd882b5abe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28581,
        "upload_time": "2021-06-19T03:15:23",
        "upload_time_iso_8601": "2021-06-19T03:15:23.987554Z",
        "url": "https://files.pythonhosted.org/packages/32/62/6daed9a5dcc6328cf4d771fbbd029460ab34e02f3d641c5994301417ee63/ElasticMockNew-1.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3088c4b212f9eff86a30166b9a8636eac5e429f9177ba8d7b449b177bbdb26ff",
          "md5": "6196848d9c0e703f978ad619fc9fd282",
          "sha256": "eb86678824884bd8a1caede7cf24aad7a08482631a29356afa2c4ccebe4b93cd"
        },
        "downloads": -1,
        "filename": "ElasticMockNew-1.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6196848d9c0e703f978ad619fc9fd282",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19953,
        "upload_time": "2021-06-19T03:15:25",
        "upload_time_iso_8601": "2021-06-19T03:15:25.727892Z",
        "url": "https://files.pythonhosted.org/packages/30/88/c4b212f9eff86a30166b9a8636eac5e429f9177ba8d7b449b177bbdb26ff/ElasticMockNew-1.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3efbc48d4582727ea958562b613a8f4cc2b8d8ef07a0177e72a4de1a9112e28b",
          "md5": "8fe9743da90d53d8b4f71d752a2f301a",
          "sha256": "4b1917fc7a8ddb3aaf5794c47d30f4b60e9ac54310b84f5c83cc74aa6453ae9c"
        },
        "downloads": -1,
        "filename": "ElasticMockNew-1.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fe9743da90d53d8b4f71d752a2f301a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28870,
        "upload_time": "2021-06-19T09:16:10",
        "upload_time_iso_8601": "2021-06-19T09:16:10.750693Z",
        "url": "https://files.pythonhosted.org/packages/3e/fb/c48d4582727ea958562b613a8f4cc2b8d8ef07a0177e72a4de1a9112e28b/ElasticMockNew-1.8.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e95a40b0ccd6af4636decd1cef3eea2ca56f2cc3cf60d3936a284b099cfe84b4",
          "md5": "c7dd544897672560b6d6b21d5e94eba7",
          "sha256": "7c4e696b2a32306ac256b4cffc818dc03de3436b61de3d0429363ce90f319bd9"
        },
        "downloads": -1,
        "filename": "ElasticMockNew-1.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c7dd544897672560b6d6b21d5e94eba7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20283,
        "upload_time": "2021-06-19T09:16:13",
        "upload_time_iso_8601": "2021-06-19T09:16:13.647367Z",
        "url": "https://files.pythonhosted.org/packages/e9/5a/40b0ccd6af4636decd1cef3eea2ca56f2cc3cf60d3936a284b099cfe84b4/ElasticMockNew-1.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3efbc48d4582727ea958562b613a8f4cc2b8d8ef07a0177e72a4de1a9112e28b",
        "md5": "8fe9743da90d53d8b4f71d752a2f301a",
        "sha256": "4b1917fc7a8ddb3aaf5794c47d30f4b60e9ac54310b84f5c83cc74aa6453ae9c"
      },
      "downloads": -1,
      "filename": "ElasticMockNew-1.8.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8fe9743da90d53d8b4f71d752a2f301a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28870,
      "upload_time": "2021-06-19T09:16:10",
      "upload_time_iso_8601": "2021-06-19T09:16:10.750693Z",
      "url": "https://files.pythonhosted.org/packages/3e/fb/c48d4582727ea958562b613a8f4cc2b8d8ef07a0177e72a4de1a9112e28b/ElasticMockNew-1.8.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e95a40b0ccd6af4636decd1cef3eea2ca56f2cc3cf60d3936a284b099cfe84b4",
        "md5": "c7dd544897672560b6d6b21d5e94eba7",
        "sha256": "7c4e696b2a32306ac256b4cffc818dc03de3436b61de3d0429363ce90f319bd9"
      },
      "downloads": -1,
      "filename": "ElasticMockNew-1.8.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c7dd544897672560b6d6b21d5e94eba7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20283,
      "upload_time": "2021-06-19T09:16:13",
      "upload_time_iso_8601": "2021-06-19T09:16:13.647367Z",
      "url": "https://files.pythonhosted.org/packages/e9/5a/40b0ccd6af4636decd1cef3eea2ca56f2cc3cf60d3936a284b099cfe84b4/ElasticMockNew-1.8.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}