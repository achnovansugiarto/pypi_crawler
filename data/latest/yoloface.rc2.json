{
  "info": {
    "author": "Vishal Patil",
    "author_email": "vishalbpatil1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# YOLO FACE\n```bash\nYou only look once (YOLO) is a state-of-the-art, real-time object detection system. It is based on Deep Learning.\nFace detection is one of the important tasks of object detection. We apply a single neural network to the full image.\nThis project focuses on improving the accuracy of detecting the face using the model of deep learning network (YOLO).\nThis network divides the image into regions and predicts bounding boxes and probabilities for each region.\nThese bounding boxes are weighted by the predicted probabilities.\n\nFor this project, I am going to use YOLOv3, one of the most frequently used versions of the YOLO family, which comprises the \nstate-of-the-art object detection system for the real-time scenario and it is amazingly accurate and fast.\nyou can give  the weights file created by training with YOLOv3 and our results on the custom dataset.\nAlso it has been added configuration files for use of weights file properly. \nYou want to test our face detection system you can use the following sample code sample.\n\n```\n\n## User Installation :\nIf you already have a working installation of numpy and pandas, opencv the easiest way to install yoloface is using pip\n```bash\npip install yoloface\n```\n\n\n\n## This Package Depend On Other Packages:\n```bash\n# Prerequisites\n  1.numpy\n  2.cv2\n  3.os \n  4.PIL\n  5.gdown\n  6.time\n  7.IPython\n```\n\n# Usage\n\n## Face Detection In Image\n```python\n# import libraries\nfrom yoloface import face_analysis\nimport numpy\nimport cv2\nface=face_analysis()        #  Auto Download a large weight files from Google Drive.\n                            #  only first time.\n                            #  Automatically  create folder .yoloface on cwd.\n# example 1\n%%time\nimg,box,conf=face.face_detection(image_path='path/to/jpg/or/png/filename.jpg',model='tiny')\nprint(box)                  # box[i]=[x,y,w,h]\nprint(conf)                 #  value between(0 - 1)  or probability\nface.show_output(img,box)\n```\n\n```python\n# example 2\n%%time\nimg,box,conf=face.face_detection(image_path='path/to/jpg/or/png/filename.jpg',model='full')\nprint(box)\nprint(conf)\nface.show_output(img,box)\n\n```\n\n## Real-Time Detection on a Webcam\n\n```python\nfrom yoloface import face_analysis\nimport numpy\nimport cv2\n\n# example 3\ncap = cv2.VideoCapture(0)\nwhile True: \n    _, frame = cap.read()\n    _,box,conf=face.face_detection(frame_arr=frame,frame_status=True,model='tiny')\n    output_frame=face.show_output(frame,box,frame_status=True)\n    cv2.imshow('frame',output_frame)\n    key=cv2.waitKey(1)\n    if key ==ord('v'): \n        break \ncap.release()\ncv2.destroyAllWindows()\n#press v (exits)\n```\n\n\n\n```python\n# example 4\ncap = cv2.VideoCapture(r'video file path.mp4')\nwhile True: \n    _, frame = cap.read()\n    __,box,conf=face.face_detection(frame_arr=frame,frame_status=True,model='full')\n    output_frame=face.show_output(img=frame,face_box=box,frame_status=True)\n    print(box)\n    cv2.imshow('frame',output_frame)\n    key=cv2.waitKey(0)\n    if key ==ord('v'): \n        break \ncap.release()\ncv2.destroyAllWindows()\n#press v (exits)\n```\n\n## Sample images\n## Output Image 1\n![input](result1.png)\n\n## Output Image 2\n![input2](https://github.com/vishalbpatil1/yoloface/blob/main/ff4.png)\n\n## Output Image 3\n![input3](result2.png)\n\nThe YOLOv3 (You Only Look Once) is a state-of-the-art, real-time object detection algorithm. The published model recognizes 80 different objects in images and videos. For more details, you can refer to this paper.\n[Reference link ](https://pjreddie.com/darknet/yolo/)\n\n\n[Github file source fist](https://github.com/vishalbpatil1/Supper-face-detection-or-crowd-detection)\n```bash\n\n```\n[Github file source second](https://github.com/vishalbpatil1/yoloface)\n\n\nChange Log\n==========\n0.0.3 (28/04/2021)\n-------------------\n- First Release\n-------------------\n0.0.4 (29/04/2021)\n-------------------\n- First Release\n-------------------",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vishalbpatil1/yoloface",
    "keywords": "face detection",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yoloface",
    "package_url": "https://pypi.org/project/yoloface/",
    "platform": "",
    "project_url": "https://pypi.org/project/yoloface/",
    "project_urls": {
      "Homepage": "https://github.com/vishalbpatil1/yoloface"
    },
    "release_url": "https://pypi.org/project/yoloface/0.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simplest and efficient way to detect face",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10208298,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28f705219ea1036ef902e8e2f34e3ecfd19c7708a8219f74cdd3368e4c850843",
          "md5": "9eed3097fa886cc2a1c59ef2f8c17c49",
          "sha256": "4549e2e77fe1387499c6ed6488807dde1233b21d5eaa8532660efb2ff93f25f0"
        },
        "downloads": -1,
        "filename": "yoloface-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9eed3097fa886cc2a1c59ef2f8c17c49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6687,
        "upload_time": "2021-04-28T13:16:18",
        "upload_time_iso_8601": "2021-04-28T13:16:18.141099Z",
        "url": "https://files.pythonhosted.org/packages/28/f7/05219ea1036ef902e8e2f34e3ecfd19c7708a8219f74cdd3368e4c850843/yoloface-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e24e4680ee6c99408cbb44289820da59d996dcb79b1fac1613c48729ac1012d5",
          "md5": "bb29c7b14d074523c9c696b60b58455c",
          "sha256": "c70aba6898fbc7adeb2d1a5689618247d13822605fb4444ef3fb80b4b9881d16"
        },
        "downloads": -1,
        "filename": "yoloface-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "bb29c7b14d074523c9c696b60b58455c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6811,
        "upload_time": "2021-04-29T13:50:03",
        "upload_time_iso_8601": "2021-04-29T13:50:03.164638Z",
        "url": "https://files.pythonhosted.org/packages/e2/4e/4680ee6c99408cbb44289820da59d996dcb79b1fac1613c48729ac1012d5/yoloface-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e24e4680ee6c99408cbb44289820da59d996dcb79b1fac1613c48729ac1012d5",
        "md5": "bb29c7b14d074523c9c696b60b58455c",
        "sha256": "c70aba6898fbc7adeb2d1a5689618247d13822605fb4444ef3fb80b4b9881d16"
      },
      "downloads": -1,
      "filename": "yoloface-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "bb29c7b14d074523c9c696b60b58455c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6811,
      "upload_time": "2021-04-29T13:50:03",
      "upload_time_iso_8601": "2021-04-29T13:50:03.164638Z",
      "url": "https://files.pythonhosted.org/packages/e2/4e/4680ee6c99408cbb44289820da59d996dcb79b1fac1613c48729ac1012d5/yoloface-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}