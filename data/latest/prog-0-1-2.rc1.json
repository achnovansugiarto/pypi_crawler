{
  "info": {
    "author": "Brian Reece",
    "author_email": "bdreece@mtu.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# prog\n\n A tool for centralizing scripted shell commands via a configurable JSON or YAML file.\n\n## Table of Contents\n\n 1. [Downloading and Installing](#downloading-and-installing)\n 2. [Usage](#usage)\n 3. [Future Plans](future-plans)\n\n## Downloading and Installing\n\n#### Downloading\n\n prog is currently available as a GitHub repository, and can be cloned using the\n following command:\n `git clone https://github.com/bdreece/prog.git`\n\n#### Installing\n\n prog is packaged via the setup script, and can be installed using the following\n command:\n `cd prog; pip install .`\n\n Congratulations! You should now have prog installed on your system!\n\n## Usage\n\n#### Help Page\n\n The help page for prog can be displayed in the following manner:\n `prog --help`\n\n This will display the following information:\n ```\n Usage: prog [OPTIONS] [COMMANDS]...\n\n   A command line utility for centralizing scripted shell commands via a\n   configurable JSON or YAML file\n\n Options:\n   -j, --json       Use JSON config file\n   -y, --yml        Use YAML config file\n   -g, --generate   Create a config file\n   -e, --edit       Edit config file\n   -v, --verbose    Show verbose output\n   -f, --file PATH  Path to config file\n   -V, --version    Show the version and exit.\n   -h, --help       Show this message and exit.\n ```\n\n#### JSON Config File\n\n A default JSON file can be generated using the `prog -jg` command, optionally specifying an output file with `prog -jgf <PATH>` (default: `./prog.json`). This file is based on a C-style project, with commands listed for building, running, and debugging a project, and is configured as follows:\n ```\n {\n   \"build\": \"make all\",\n   \"run\": \"./main\",\n   \"debug\": \"gdb ./main\"\n }\n ```\n The aliased command hooks are listed in the keys of the JSON file, and their corresponding shell commands are the respective values of the JSON file.\n\n#### YAML Config File\n\n A default YAML file can be generated using the `prog -yg` command, optionally specifying an output file with `prog -ygf <PATH>` (default: `./prog.yml`). This file is based on a C-style project, with commands listed for building, running, and debugging a project, and is configured as follows:\n```\n build: make all\n run: ./main\n debug: gdb ./main\n```\n The aliased command hooks are listed in the keys of the YAML file, and their corresponding shell commands are the respective values of the YAML file.\n\n#### Config File Structure\n\nThe `prog` tool supports nested subcommands and lists of shell commands. These can be written in the form of nested objects and nested lists, respectively. Examples in JSON and YAML are as follows:\n\n```\n{\n    \"config\": {\n        \"debug\": \"cmake -DCMAKE_BUILD_TYPE=Debug -B build -G Ninja .\",\n        \"release\": \"cmake -DCMAKE_BUILD_TYPE=Debug -B build -G Ninja .\"\n    },\n    \"build\": \"cd build; ninja\",\n    \"push\": [\n        \"git add .\",\n        \"git commit\",\n        \"git push\"\n        \"git status\"\n    ]\n}\n```\n\n```\nconfig:\n    debug: cmake -DCMAKE_BUILD_TYPE=Debug -B build -G Ninja .\n    release: cmake -DCMAKE_BUILD_TYPE=Release -B build -G Ninja .\nbuild: cd build; ninja\npush:\n    - git add .\n    - git commit\n    - git push\n    - git status\n```\n\n#### Invocation\n\n Once the JSON file has been configured to your needs, you can simply invoke the\n custom commands using the following command:\n `prog [COMMANDS]...`\n\n Multiple commands may be specified, and will execute in the order they are specified.\n\n If nested subcommands are present, the `prog` tool expects exactly one command per layer of nesting. Try enabling verbose output if issues arise.\n\n## Future Plans\n\n With the addition of advanced object structures to `prog`'s parser, I can see a lot more use cases for this style of program. I plan to update this project incrementally as I get ideas for more intuitive behavior.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bdreece/prog",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "prog-0.1.2",
    "package_url": "https://pypi.org/project/prog-0.1.2/",
    "platform": "",
    "project_url": "https://pypi.org/project/prog-0.1.2/",
    "project_urls": {
      "Homepage": "https://github.com/bdreece/prog"
    },
    "release_url": "https://pypi.org/project/prog-0.1.2/0.1.2/",
    "requires_dist": [
      "Click",
      "pyyaml"
    ],
    "requires_python": ">=3.6",
    "summary": "A tool for centralizing scripted shell commands via a configurable JSON or YAML file",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12319186,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "367d1a004ba2a66b759d710d15465d47ed1b7b6f7e5d4d69e3009b32581afb39",
          "md5": "e7149ef5719bd56bb1017cf01aaf7ef7",
          "sha256": "4ebc79bbe6c5e0177ef38dadbffc3c40964082998734f0f6609eb6dd625856d8"
        },
        "downloads": -1,
        "filename": "prog_0.1.2-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7149ef5719bd56bb1017cf01aaf7ef7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7078,
        "upload_time": "2021-12-16T02:57:00",
        "upload_time_iso_8601": "2021-12-16T02:57:00.660479Z",
        "url": "https://files.pythonhosted.org/packages/36/7d/1a004ba2a66b759d710d15465d47ed1b7b6f7e5d4d69e3009b32581afb39/prog_0.1.2-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "367d1a004ba2a66b759d710d15465d47ed1b7b6f7e5d4d69e3009b32581afb39",
        "md5": "e7149ef5719bd56bb1017cf01aaf7ef7",
        "sha256": "4ebc79bbe6c5e0177ef38dadbffc3c40964082998734f0f6609eb6dd625856d8"
      },
      "downloads": -1,
      "filename": "prog_0.1.2-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e7149ef5719bd56bb1017cf01aaf7ef7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7078,
      "upload_time": "2021-12-16T02:57:00",
      "upload_time_iso_8601": "2021-12-16T02:57:00.660479Z",
      "url": "https://files.pythonhosted.org/packages/36/7d/1a004ba2a66b759d710d15465d47ed1b7b6f7e5d4d69e3009b32581afb39/prog_0.1.2-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}