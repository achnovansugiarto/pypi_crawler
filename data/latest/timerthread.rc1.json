{
  "info": {
    "author": "Yi Zhang",
    "author_email": "yizhang.dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# TimerThread\n\nTimerThread is\n\n* A lightweight task scheduling timer\n* written in [Python (3.7+) Standard Library](https://docs.python.org/3.7/library/)\n\n\n\nTimerThread supports to\n\n* schedule task execution after a given delay\n* schedule recurring task execution\n* run in the background\n* use `@task` decorator to define task\n\n\n\n## Quickstart\n\nDefine your function, `now(cost)` as an example:\n\n```python\nimport time\n\ndef now(cost=1):\n    time.sleep(cost)\n    print( time.strftime('%Y-%m-%d %H:%M:%S %Z', time.localtime()) )\n```\n\nCreate a TimerThread scheduler and start it:\n\n```python\nimport timerthread\n\ntimer = timerthread.Scheduler('recur', 3, now, args=(1,))\ntimer.start()\n```\n\nShutdown the scheduler:\n\n```python\ntimer.cancel()\n```\n\n\n\n### Play with the `@task` decorator\n\nUse `@task` decorator to define your function, then schedule it and start the scheduler, `now(cost)` as an example:\n\n```python\nimport time\nimport timerthread\n\n@timerthread.task('recur', 3)\ndef now(cost=1):\n    time.sleep(cost)\n    print( time.strftime('%Y-%m-%d %H:%M:%S %Z', time.localtime()) )\n\ntimer = now.sched(cost=1)\ntimer.start()\n```\n\nWhen you'd like to cancel the recurring execution, shutdown the scheduler as usual:\n\n```python\ntimer.cancel()\n```\n\n\n\n### Install TimerThread\n\n```bash\n$ pip install timerthread\n```\n\n\n\n## Documentation\n\n### `Scheduler`\n\n```python\nclass timerthread.Scheduler(trigger, interval, fn, args=(), kwargs={})\n```\n\n`trigger` must be `'delay'` or `'recur'`.\n\n* `stopped`\n\n  The scheduler is stopped or not, `True` (default) or `False`.\n\n* `result`\n\n  The execution result, `{}` as default.\n\n* `start()`\n\n  Let scheduler start executing your function as scheduled in the background.\n\n* `cancel()`\n\n  Shutdown the scheduler.\n\n\n\n### `task`\n\n```python\nclass timerthread.task(trigger, interval)\n```\n\n`trigger` must be `'delay'` or `'recur'`.\n\n* Use `@task` decorator to define your function, then schedule it and start the scheduler:\n\n  ```python\n  @timerthread.task(trigger, interval)\n  def fn(args, kwargs):\n      pass\n\n  timer = fn.sched(*args, **kwargs)\n  ```\n\n  `fn.sched(*args, **kwargs)` returns `timerthread.Scheduler` instance.\n\n\n\n## Related Projects\n\n* [`threading.Timer`](https://github.com/python/cpython/blob/3.7/Lib/threading.py#L1153) ([Timer Objects](https://docs.python.org/3.7/library/threading.html?highlight=thread#timer-objects))\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/yzhang-dev/TimerThread",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yzhang-dev/TimerThread",
    "keywords": "timer,background-jobs,background-thread,tasks,background",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "TimerThread",
    "package_url": "https://pypi.org/project/TimerThread/",
    "platform": "",
    "project_url": "https://pypi.org/project/TimerThread/",
    "project_urls": {
      "Download": "https://github.com/yzhang-dev/TimerThread",
      "Homepage": "https://github.com/yzhang-dev/TimerThread"
    },
    "release_url": "https://pypi.org/project/TimerThread/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A lightweight task scheduling timer",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8887149,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "125269a4d2d446a72feaaa4488c9b71269d51bc17939a9d43922d85a6dd57ef1",
          "md5": "f5c3c400ec4fa5db81cc7444142b2e73",
          "sha256": "cd819676f758933440f60207379f6dc1421856ffc34888fe18269edcd6a2cd92"
        },
        "downloads": -1,
        "filename": "TimerThread-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5c3c400ec4fa5db81cc7444142b2e73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4446,
        "upload_time": "2020-12-13T02:53:25",
        "upload_time_iso_8601": "2020-12-13T02:53:25.643156Z",
        "url": "https://files.pythonhosted.org/packages/12/52/69a4d2d446a72feaaa4488c9b71269d51bc17939a9d43922d85a6dd57ef1/TimerThread-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e2473de674f0324c62952d8662b7affc42e4a9a40e36921661875b121a2b723",
          "md5": "a819d0a5533f21bb36123707f64a5453",
          "sha256": "417ee7c80ecefc25e7e74759d0d69b4f2b63bb351fb39fa5c362e529b4efdbc6"
        },
        "downloads": -1,
        "filename": "TimerThread-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a819d0a5533f21bb36123707f64a5453",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3056,
        "upload_time": "2020-12-13T02:53:27",
        "upload_time_iso_8601": "2020-12-13T02:53:27.964165Z",
        "url": "https://files.pythonhosted.org/packages/9e/24/73de674f0324c62952d8662b7affc42e4a9a40e36921661875b121a2b723/TimerThread-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "125269a4d2d446a72feaaa4488c9b71269d51bc17939a9d43922d85a6dd57ef1",
        "md5": "f5c3c400ec4fa5db81cc7444142b2e73",
        "sha256": "cd819676f758933440f60207379f6dc1421856ffc34888fe18269edcd6a2cd92"
      },
      "downloads": -1,
      "filename": "TimerThread-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f5c3c400ec4fa5db81cc7444142b2e73",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4446,
      "upload_time": "2020-12-13T02:53:25",
      "upload_time_iso_8601": "2020-12-13T02:53:25.643156Z",
      "url": "https://files.pythonhosted.org/packages/12/52/69a4d2d446a72feaaa4488c9b71269d51bc17939a9d43922d85a6dd57ef1/TimerThread-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e2473de674f0324c62952d8662b7affc42e4a9a40e36921661875b121a2b723",
        "md5": "a819d0a5533f21bb36123707f64a5453",
        "sha256": "417ee7c80ecefc25e7e74759d0d69b4f2b63bb351fb39fa5c362e529b4efdbc6"
      },
      "downloads": -1,
      "filename": "TimerThread-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a819d0a5533f21bb36123707f64a5453",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 3056,
      "upload_time": "2020-12-13T02:53:27",
      "upload_time_iso_8601": "2020-12-13T02:53:27.964165Z",
      "url": "https://files.pythonhosted.org/packages/9e/24/73de674f0324c62952d8662b7affc42e4a9a40e36921661875b121a2b723/TimerThread-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}