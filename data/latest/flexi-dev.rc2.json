{
  "info": {
    "author": "Mesar Hameed",
    "author_email": "mesar.hameed@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Trio",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Adaptive Technologies",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# flexi_dev\n\n## Flexible Input Devices\n\nExtend your applications/scripts by using events from an input device to trigger actions.\n\nDo you have a spare bluetooth mouse that you wish you could use as a remote control for triggering actions on your raspberry pi?\n\ndo you have repetitive strain injury (RSI) in your hands and wish that you could use an old keyboard as an input device to trigger actions using your feet?\n\n\n## Install\n\n```sh\n$ pip install flexi_dev\n```\n\n\n## Prerequisites\n\nYour user needs to be able to read from the chosen input device.\n\nFind out device permissions:\n\n```sh\n$ ls -l /dev/input\ntotal 0\ndrwxr-xr-x 2 root root     200 Feb 19 07:41 by-id\ndrwxr-xr-x 2 root root     280 Feb 19 07:41 by-path\ncrw-rw---- 1 root input 13, 64 Feb 17 16:00 event0\ncrw-rw---- 1 root input 13, 65 Feb 17 16:00 event1\ncrw-rw---- 1 root input 13, 66 Feb 17 16:00 event2\n.......... . .... ..... ... .. ... .. ..... ......\n.......... . .... ..... ... .. ... .. ..... ......    \ncrw-rw---- 1 root input 13, 73 Feb 17 16:00 event9\n.......... . .... ..... ... .. ... .. ..... ......\ncrw-rw---- 1 root input 13, 34 Feb 17 16:00 mouse2\n$\n```\n\nverify that the local user belong to the input group:\n\n```sh\n$ groups\nadm cdrom sudo audio dip plugdev input lpadmin lxd sambashare davfs2\n$\n```\n\nList the current input devices recognized by Xorg:\n\n```sh\n$ xinput list > /tmp/old\n```\n\nPlug in your mouse and relist:\n\n```sh\n$ xinput list > /tmp/new\n```\n\n```sh\n$ diff -u /tmp/old /tmp/new\n--- /tmp/old\t2022-02-19 14:01:19.802425450 +0000\n+++ /tmp/new\t2022-02-19 14:01:43.510674690 +0000\n@@ -3,6 +3,7 @@\n ⎜   ↳ EST Gaming keyboard                     \tid=9\t[slave  pointer  (2)]\n+⎜   ↳ Lenovo Ultraslim Plus Wireless Keyboard & Mouse\tid=14\t[slave  pointer  (2)]\n ⎣ Virtual core keyboard                   \tid=3\t[master keyboard (2)]\n```\n\nNote the *id*.\nWe don't want our mouse to move the normal mouse pointer or to perform any normal button presses so we need to disable it:\n \n```sh\n$ xinput set-int-prop $id \"Device Enabled\" 8 0\n```\n\nThe input device is now ours to play with.\n\n## Simple Example\n\nNow use our prepared device to print something to the terminal when we left/right click:\n\n\n```python\n#!/usr/bin/env python3\nimport logging\nimport sys\nimport trio\nimport flexi_dev.mousedriver as msd\n\nclass MickeyMouse(msd.MouseDriver):\n    def __init__(self, device, *args, **kwargs):\n        super(MickeyMouse, self).__init__(device=device, *args, **kwargs)\n\n    async def defaultAction(self, **kwargs):\n        await super().defaultAction(**kwargs)\n        n = kwargs.get('n')\n        if n & msd.MOUSE_EVENT_LEFT_BUTTON:\n            print(\"left button pressed\")\n        if n & msd.MOUSE_EVENT_RIGHT_BUTTON:\n            print(\"right button pressed\")\n        if n & msd.MOUSE_EVENT_THIRD_BUTTON:\n            print(\"middle button pressed, quitting.\")\n            self.stop = True\n\nlogger = logging.getLogger('flexi_dev')\nlogger.setLevel(logging.DEBUG)\nfh = logging.FileHandler('flexi_dev.log')\nfh.setLevel(logging.DEBUG)\nlogger.addHandler(fh)\n\nm = MickeyMouse('/dev/input/by-id/usb-17ef_Lenovo_Ultraslim_Plus_Wireless_Keyboard___Mouse-if01-mouse')\ntrio.run(m.run)\n```\n\n## Compass direction\n\n```python\n#!/usr/bin/env python3\nimport logging\nimport math\nimport sys\nimport trio\nimport flexi_dev.mousedriver as msd\n\ncompass_brackets = [\n    \"North\", \"North East\", \"East\",\n    \"South East\", \"South\", \"South West\",\n    \"West\", \"North West\", \"North\"\n]\n\nclass CompassDirections(msd.MouseDriver):\n    def __init__(self, device, *args, **kwargs):\n        super(CompassDirections, self).__init__(device=device, *args, **kwargs)\n        self.absX = 0\n        self.absY = 0\n        self.prevAbsX = 0\n        self.prevAbsY = 0\n        self.triggerDistance = 300\n\n    async def defaultAction(self, *args, **kwargs):\n        x = kwargs.get('x', 0)\n        y = kwargs.get('y', 0)\n        self.absX += x\n        self.absY += y\n        xdelta = self.absX - self.prevAbsX\n        ydelta = self.absY - self.prevAbsY\n        # pythagoras\n        distance = math.sqrt(xdelta**2 + ydelta**2)\n        if distance >= self.triggerDistance:\n            self.prevAbsX = self.absX\n            self.prevAbsY = self.absY\n            degrees = math.atan2(xdelta, ydelta)/math.pi*180\n            if degrees < 0:\n                degrees += 360\n            print(compass_brackets[round(degrees / 45)])\n\n    async def ms_btn9(self, **kwargs):\n        x = kwargs.get('x', 0)\n        y = kwargs.get('y', 0)\n        if x==0 and y==0:\n            print(\"left button pressed, quitting...\")\n            self.stop = True\n\nlogger = logging.getLogger('flexi_dev')\nlogger.setLevel(logging.DEBUG)\nfh = logging.FileHandler('flexi_dev.log')\nfh.setLevel(logging.DEBUG)\nlogger.addHandler(fh)\n\nm = CompassDirections('/dev/input/mouse2')\ntrio.run(m.run)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mhameed/python_flexi_dev",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flexi-dev",
    "package_url": "https://pypi.org/project/flexi-dev/",
    "platform": "",
    "project_url": "https://pypi.org/project/flexi-dev/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mhameed/python_flexi_dev/issues",
      "Homepage": "https://github.com/mhameed/python_flexi_dev",
      "Source": "https://github.com/mhameed/python_flexi_dev/"
    },
    "release_url": "https://pypi.org/project/flexi-dev/1.1.0/",
    "requires_dist": [
      "trio"
    ],
    "requires_python": ">=3.7",
    "summary": "Use standard input devices as novel interaction controllers.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12951121,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2aa81ef0a33eeac7fe2d255fcd7cf9382dd682d7386c7ab3fe14002627a7072",
          "md5": "f8c99d685be2cc1cd4fc1898912a8804",
          "sha256": "d8af43347ccd0aed3d384cad6b9213fd65298fa31d58be9988452a1ee5de2a9e"
        },
        "downloads": -1,
        "filename": "flexi_dev-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8c99d685be2cc1cd4fc1898912a8804",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17572,
        "upload_time": "2022-02-19T21:25:10",
        "upload_time_iso_8601": "2022-02-19T21:25:10.405172Z",
        "url": "https://files.pythonhosted.org/packages/c2/aa/81ef0a33eeac7fe2d255fcd7cf9382dd682d7386c7ab3fe14002627a7072/flexi_dev-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ada78f9bb318d2e9cb24645755f8a23a9c513fbff1ec9144271ce7ddc85218c0",
          "md5": "03a5073f88a4541d03841619cf6764fc",
          "sha256": "28651796cd9955352d0fb1559ef13f186e51951f657a53305c8a879f1c67dfaa"
        },
        "downloads": -1,
        "filename": "flexi_dev-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "03a5073f88a4541d03841619cf6764fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16631,
        "upload_time": "2022-02-19T21:25:11",
        "upload_time_iso_8601": "2022-02-19T21:25:11.780889Z",
        "url": "https://files.pythonhosted.org/packages/ad/a7/8f9bb318d2e9cb24645755f8a23a9c513fbff1ec9144271ce7ddc85218c0/flexi_dev-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ee6e48fb088f3aa514882aeb16ace581879971a733fa601f34a10fa1df45716",
          "md5": "85762f8a0e0ec7c66b1f4fa4cfb47312",
          "sha256": "b4837bdac0ffa29e41ff6ba794c16007f31625ced9662613b487d8adf42157d0"
        },
        "downloads": -1,
        "filename": "flexi_dev-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85762f8a0e0ec7c66b1f4fa4cfb47312",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18025,
        "upload_time": "2022-02-20T13:57:21",
        "upload_time_iso_8601": "2022-02-20T13:57:21.650524Z",
        "url": "https://files.pythonhosted.org/packages/8e/e6/e48fb088f3aa514882aeb16ace581879971a733fa601f34a10fa1df45716/flexi_dev-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e82400f13543a63ee1d02edef7e4539ce361b4f844d33e89fc22a620b74ef6a2",
          "md5": "c2639cb2c6d07c522d054f08981e6df6",
          "sha256": "7a10cc15dd3609321730a7574d1cae2f59aff9fdfc8556b6ad91934698da510b"
        },
        "downloads": -1,
        "filename": "flexi_dev-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c2639cb2c6d07c522d054f08981e6df6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17136,
        "upload_time": "2022-02-20T13:57:23",
        "upload_time_iso_8601": "2022-02-20T13:57:23.491023Z",
        "url": "https://files.pythonhosted.org/packages/e8/24/00f13543a63ee1d02edef7e4539ce361b4f844d33e89fc22a620b74ef6a2/flexi_dev-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ee6e48fb088f3aa514882aeb16ace581879971a733fa601f34a10fa1df45716",
        "md5": "85762f8a0e0ec7c66b1f4fa4cfb47312",
        "sha256": "b4837bdac0ffa29e41ff6ba794c16007f31625ced9662613b487d8adf42157d0"
      },
      "downloads": -1,
      "filename": "flexi_dev-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "85762f8a0e0ec7c66b1f4fa4cfb47312",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 18025,
      "upload_time": "2022-02-20T13:57:21",
      "upload_time_iso_8601": "2022-02-20T13:57:21.650524Z",
      "url": "https://files.pythonhosted.org/packages/8e/e6/e48fb088f3aa514882aeb16ace581879971a733fa601f34a10fa1df45716/flexi_dev-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e82400f13543a63ee1d02edef7e4539ce361b4f844d33e89fc22a620b74ef6a2",
        "md5": "c2639cb2c6d07c522d054f08981e6df6",
        "sha256": "7a10cc15dd3609321730a7574d1cae2f59aff9fdfc8556b6ad91934698da510b"
      },
      "downloads": -1,
      "filename": "flexi_dev-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c2639cb2c6d07c522d054f08981e6df6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 17136,
      "upload_time": "2022-02-20T13:57:23",
      "upload_time_iso_8601": "2022-02-20T13:57:23.491023Z",
      "url": "https://files.pythonhosted.org/packages/e8/24/00f13543a63ee1d02edef7e4539ce361b4f844d33e89fc22a620b74ef6a2/flexi_dev-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}