{
  "info": {
    "author": "",
    "author_email": "Ali Aliyev <ali@aliev.me>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# aioshutdown\n\nContext manager that provides simple graceful shutdown interface for your asyncio tasks.\n\n## Installation\n\n```\npip install -U aioshutdown\n```\n\n## Usage\n\nJust specify the list of signals that you want to intercept using the `|` operator:\n\n```python\nfrom aioshutdown import SIGTERM, SIGINT, SIGHUP\n\n\nwith SIGTERM | SIGHUP | SIGINT as loop:\n    ...\n```\n\nThe context manager will return an instance of the current event loop. You can intercept signals directly inside your coroutines:\n\n```python\nasync def my_task(sleep: int):\n    try:\n        \"\"\" Main logic of your coroutine. \"\"\"\n    except asyncio.CancelledError as exc:\n        \"\"\" In this place you can gracefully complete the work. \"\"\"\n```\n\nFull example:\n\n\n```python\nimport asyncio\nfrom aioshutdown import SIGTERM, SIGINT, SIGHUP\nimport logging\n\n\nlogging.basicConfig(\n    level=logging.INFO,\n    format=\"%(asctime)s,%(msecs)d %(levelname)s: %(message)s\",\n    datefmt=\"%H:%M:%S\",\n)\n\nasync def my_task(sleep: int):\n    try:\n        while True:\n            logging.info(\"Sleep from task #%s\", sleep)\n            await asyncio.sleep(sleep)\n    except asyncio.CancelledError as exc:\n        # Received an exit signal. In this place we gracefully complete the work.\n        signal = exc.args[0] # NOTE: works in Python >= 3.9 only: https://docs.python.org/3/library/asyncio-future.html?highlight=Changed%20in%20version%203.9:%20Added%20the%20msg%20parameter.#asyncio.Future.cancel\n        logging.warning(\"Received %s signal. Shutting down...\", signal.value)\n\n# Usage with `run_forever`\n\nwith SIGTERM | SIGHUP | SIGINT as loop:\n    tasks = [loop.create_task(my_task(i)) for i in range(1, 10)]\n    loop.run_forever()\n\n# Usage with `run_until_complete`\n\nwith SIGTERM | SIGHUP | SIGINT as loop:\n    tasks = [loop.create_task(my_task(i)) for i in range(1, 10)]\n    loop.run_until_complete(asyncio.gather(*results))\n```\n\nOutput\n\n```\n23:04:05,798 INFO: Sleep from task #1\n23:04:05,798 INFO: Sleep from task #2\n23:04:06,799 INFO: Sleep from task #1\n23:04:07,800 INFO: Sleep from task #2\n23:04:07,800 INFO: Sleep from task #1\n23:04:08,801 INFO: Sleep from task #1\n^C23:04:09,504 INFO: Received exit signal SIGINT...\n23:04:09,504 INFO: Cancelling 2 outstanding tasks\n23:04:09,504 WARNING: Received 2 signal. Shutting down...\n23:04:09,504 WARNING: Received 2 signal. Shutting down...\n23:04:09,504 INFO: Stopping event loop\n```\n\n\n## Useful links\n\n[Graceful Shutdowns with asyncio](https://www.roguelynn.com/words/asyncio-graceful-shutdowns/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "asyncio,graceful,shutdown",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aioshutdown",
    "package_url": "https://pypi.org/project/aioshutdown/",
    "platform": null,
    "project_url": "https://pypi.org/project/aioshutdown/",
    "project_urls": {
      "Bug Tracker": "https://github.com/aliev/aioshutdown/issues",
      "Homepage": "https://github.com/aliev/aioshutdown"
    },
    "release_url": "https://pypi.org/project/aioshutdown/0.0.2/",
    "requires_dist": [
      "typing-extensions"
    ],
    "requires_python": ">=3.8",
    "summary": "Context manager that provides simple graceful shutdown interface for your asyncio tasks.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17276392,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a1dd3be803f1609ddfad3fd7418699e9bf0c8dc724f5081bdf0ee6037939ccf",
          "md5": "df7025c6739d1a13d3c78a0faf4bf860",
          "sha256": "ab33ae757d13b758d6ae145b4002996ef2b3ad26be7aa4507703cd0853a09bae"
        },
        "downloads": -1,
        "filename": "aioshutdown-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df7025c6739d1a13d3c78a0faf4bf860",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 5010,
        "upload_time": "2023-03-06T19:33:33",
        "upload_time_iso_8601": "2023-03-06T19:33:33.759754Z",
        "url": "https://files.pythonhosted.org/packages/4a/1d/d3be803f1609ddfad3fd7418699e9bf0c8dc724f5081bdf0ee6037939ccf/aioshutdown-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d90951fd53de613472354ad1f325994bad859b3ea34044810f70ddaaa7b9edbc",
          "md5": "7ed3c1813e3338a8b52ccb3e89d0597d",
          "sha256": "89c024c05232cea85cc21a931deeefe69a34e3e8ee456245e6ad728f2acd7afc"
        },
        "downloads": -1,
        "filename": "aioshutdown-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7ed3c1813e3338a8b52ccb3e89d0597d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 4211,
        "upload_time": "2023-03-06T19:33:35",
        "upload_time_iso_8601": "2023-03-06T19:33:35.748209Z",
        "url": "https://files.pythonhosted.org/packages/d9/09/51fd53de613472354ad1f325994bad859b3ea34044810f70ddaaa7b9edbc/aioshutdown-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "015a7a89cb1a994e962be9d88567e81d92b34d8ce7d227709e1290bd36badf7e",
          "md5": "b531affc22b2ff8265d676e0dd780763",
          "sha256": "ed75f50ff5a670a4c5cb12b1ecfe5ceb5298e8a2f13de32d52c92d61f4c07a3f"
        },
        "downloads": -1,
        "filename": "aioshutdown-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b531affc22b2ff8265d676e0dd780763",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 5080,
        "upload_time": "2023-03-13T20:13:28",
        "upload_time_iso_8601": "2023-03-13T20:13:28.062784Z",
        "url": "https://files.pythonhosted.org/packages/01/5a/7a89cb1a994e962be9d88567e81d92b34d8ce7d227709e1290bd36badf7e/aioshutdown-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c985b6cd93a9d60b02547124a93090f5163bde9bdc6b1b56e58c218af892a62f",
          "md5": "1ad54ecde2757c3464a56bfac8c5dff0",
          "sha256": "2a69baf10f4235f51eb3228868406abe39b345081c5c1930e8ce17d4e5a7597d"
        },
        "downloads": -1,
        "filename": "aioshutdown-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1ad54ecde2757c3464a56bfac8c5dff0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 4858,
        "upload_time": "2023-03-13T20:13:29",
        "upload_time_iso_8601": "2023-03-13T20:13:29.585058Z",
        "url": "https://files.pythonhosted.org/packages/c9/85/b6cd93a9d60b02547124a93090f5163bde9bdc6b1b56e58c218af892a62f/aioshutdown-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "015a7a89cb1a994e962be9d88567e81d92b34d8ce7d227709e1290bd36badf7e",
        "md5": "b531affc22b2ff8265d676e0dd780763",
        "sha256": "ed75f50ff5a670a4c5cb12b1ecfe5ceb5298e8a2f13de32d52c92d61f4c07a3f"
      },
      "downloads": -1,
      "filename": "aioshutdown-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b531affc22b2ff8265d676e0dd780763",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 5080,
      "upload_time": "2023-03-13T20:13:28",
      "upload_time_iso_8601": "2023-03-13T20:13:28.062784Z",
      "url": "https://files.pythonhosted.org/packages/01/5a/7a89cb1a994e962be9d88567e81d92b34d8ce7d227709e1290bd36badf7e/aioshutdown-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c985b6cd93a9d60b02547124a93090f5163bde9bdc6b1b56e58c218af892a62f",
        "md5": "1ad54ecde2757c3464a56bfac8c5dff0",
        "sha256": "2a69baf10f4235f51eb3228868406abe39b345081c5c1930e8ce17d4e5a7597d"
      },
      "downloads": -1,
      "filename": "aioshutdown-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1ad54ecde2757c3464a56bfac8c5dff0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 4858,
      "upload_time": "2023-03-13T20:13:29",
      "upload_time_iso_8601": "2023-03-13T20:13:29.585058Z",
      "url": "https://files.pythonhosted.org/packages/c9/85/b6cd93a9d60b02547124a93090f5163bde9bdc6b1b56e58c218af892a62f/aioshutdown-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}