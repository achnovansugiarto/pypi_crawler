{
  "info": {
    "author": "Krishna Velu",
    "author_email": "krishnajvelu@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Official Python SDK for Alice Blue API\n\nThe Official Python library for communicating with the Alice Blue APIs.\n\nAlice Blue Python library provides an easy to use wrapper over the HTTPS APIs.\n\nThe HTTP calls have been converted to methods and JSON responses are wrapped into Python-compatible objects.\n\nWebsocket connections are handled automatically within the library.\n\n* __Author: [krishnavelu](https://github.com/krishnavelu/)__\n* [Unofficed](https://www.unofficed.com/) is strategic partner of Alice Blue responsible for this git.\n* Alice Blue API trading is free for [Unofficed](https://www.unofficed.com/) members. Follow [this](https://unofficed.com/alice-blue/) to get API free.\n\n## Installation\n\nThis module is installed via pip:\n\n```\npip install alice_blue\n```\n\nTo force upgrade existing installations:\n```\npip uninstall alice_blue\npip --no-cache-dir install --upgrade alice_blue\n```\n\n## Getting started with API\n\n### Overview\nThere is only one class in the whole library: `AliceBlue`. The `login_and_get_sessionID()` static method is used to retrieve session ID from alice blue server. A session ID is valid for 24 hours.\nWith session ID, you can instantiate an AliceBlue object. Ideally you only need to create a session ID once every day. Once the session ID is created new, it'll be stored in a temporary location. Next time, the same session ID will be used.\n\n### REST Documentation\nThe original REST API documentation is available [here](https://v2api.aliceblueonline.com/).\n\n## Using the API\n\n### Logging\nThe whole library is equipped with python's `logging` module for debugging. If more debug information is needed, enable logging using the following code.\n\n```python\nimport logging\nlogging.basicConfig(level=logging.DEBUG)\n```\n\n### Geting API Id and API secret\napi_secret is unique for each and every account. You need to enable api trading and get api_secret from alice blue.\n1. Login to [developer console](http://developers.aliceblueonline.com).\n1. Click on 'Create New App'.\n1. Enter 'App Name' as you like. Enter 'Redirect URL' and 'Post Back URL' as `https://ant.aliceblueonline.com/plugin/callback`.\n1. Click on 'Save'.\n1. Copy the 'App Code' and 'App Secret'. You will need these to generate a session ID.\n\n### Getting an session ID\n1. Import alice_blue\n```python\nfrom alice_blue import *\n```\n\n2. Create `session_id` using `login_and_get_sessionID()` function  with your `username`, `password`, `2FA (2fa is now year of birth)`, `app_id` and `api_secret`.\n```python\nsession_id = AliceBlue.login_and_get_sessionID(   username    = \"username\", \n                                                    password    = \"password\", \n                                                    twoFA       = \"1993\",\n                                                    app_id      = \"app_id\",\n                                                    api_secret  = \"api_secret\")\n```\n\n### Problem getting access token\nIf you are facing problem getting access token, make sure the following are correct.\n1. username.\n1. password.\n1. 2FA.\n1. api secret.\n1. app id.\n\nEven after verifying all these, if you are facing problem, contact alice customer care. They should enable the API access in their end. Don't create a new issue in this library for OAuth Error.\n\n### Create AliceBlue Object\nOnce you have your `session_id`, you can create an AliceBlue object with your `session_id` and `username`.\n```python\nalice = AliceBlue(username = \"username\", session_id = session_id)\n```\n\nYou can run these commands to check your newly created alice blue object.\n1. [Get Balance](#get-balance)\n1. [Get Profile](#get-profile)\n1. [Get Daywise positions](#get-daywise-positions)\n1. [Get Netwise positions](#get-netwise-positions)\n1. [Get Holding positions](#get-holding-positions)\n\n### Get Balance\nCode:\n```python\nprint(alice.get_balance()) # get balance / margin limits\n```\nSample response\n```\n[{'symbol': 'ALL', 'cncMarginUsed': '0', 'spanmargin': '159440.00', 'branchAdhoc': '0.000000', 'adhocMargin': '0.000000', 'payoutamount': '0.00', 'cdsSpreadBenefit': '0', 'adhocscripmargin': '0.00', 'exposuremargin': '7774.30', 'scripbasketmargin': '0.00', 'credits': '114028.29', 'segment': 'ALL', 'net': '95012.20', 'turnover': '0.00', 'grossexposurevalue': '0.00', 'mfssAmountUsed': '0.00', 'realizedMtomPrsnt': '-6075.80', 'product': 'ALL', 'stat': 'Ok', 'cncSellCrditPrsnt': '0', 'debits': '243846.09', 'varmargin': '0.00', 'multiplier': '10.00', 'elm': '0.00', 'mfamount': '0.00', 'cashmarginavailable': '119428.29', 'brokeragePrsnt': '355.990260', 'cncRealizedMtomPrsnt': '0', 'notionalCash': '0.000000', 'directcollateralvalue': '0.00', 'cncBrokeragePrsnt': '0', 'valueindelivery': '0', 'nfoSpreadBenefit': '0', 'losslimit': '0', 'subtotal': '243846.09', 'rmsPayInAmnt': '0', 'unrealizedMtomPrsnt': '-0.00', 'coverOrderMarginPrsnt': '0', 'exchange': 'ALL', 'category': 'ABFS-COMMON', 'collateralvalue': '0.00', 'rmsIpoAmnt': '0', 'cncUnrealizedMtomPrsnt': '0', 'premiumPrsnt': '0'}, {'symbol': 'ALL', 'cncMarginUsed': '0', 'spanmargin': '0.00', 'branchAdhoc': '0.000000', 'adhocMargin': '0.000000', 'payoutamount': '0.00', 'cdsSpreadBenefit': '0', 'adhocscripmargin': '0.00', 'exposuremargin': '0.00', 'scripbasketmargin': '0.00', 'credits': '0.00', 'segment': 'COM', 'net': '0.00', 'turnover': '0.00', 'grossexposurevalue': '0.00', 'mfssAmountUsed': '0.00', 'realizedMtomPrsnt': '-0.00', 'product': 'ALL', 'stat': 'Ok', 'cncSellCrditPrsnt': '0', 'debits': '0.00', 'varmargin': '0.00', 'multiplier': '1.00', 'elm': '0.00', 'mfamount': '0.00', 'cashmarginavailable': '0.00', 'brokeragePrsnt': '0', 'cncRealizedMtomPrsnt': '0', 'notionalCash': '0.000000', 'directcollateralvalue': '0.00', 'cncBrokeragePrsnt': '0', 'valueindelivery': '0', 'nfoSpreadBenefit': '0', 'losslimit': '0', 'subtotal': '0.00', 'rmsPayInAmnt': '0', 'unrealizedMtomPrsnt': '-0.00', 'coverOrderMarginPrsnt': '0', 'exchange': 'ALL', 'category': 'NO_VAL', 'collateralvalue': '0.00', 'rmsIpoAmnt': '0', 'cncUnrealizedMtomPrsnt': '0', 'premiumPrsnt': '0'}]\n```\n\n### Get Profile\nCode\n```python\nprint(alice.get_profile()) # get profile\n```\nSample response\n```\n{'accountStatus': 'Activated', 'dpType': 'CDSL', 'accountId': 'SP220xx', 'sBrokerName': 'ALICEBLUE', 'product': ['NRML', 'MIS', 'CNC', 'CO', 'BO'], 'accountName': 'xxxx xxxx', 'cellAddr': 'xxxxxxxxxx', 'emailAddr': 'xxxxxx@xxx.com', 'exchEnabled': 'bcs_fo|mcx_fo|nse_cm|bse_cm|nse_fo'}\n```\n\n### Get Daywise Positions\nCode\n```python\nprint(alice.get_daywise_positions()) # get daywise positions\n```\nSample response\n```\n[{'realisedprofitloss': '-7,217.50', 'Fillsellamt': '292,062.50', 'Netqty': '0', 'Symbol': 'EICHERMOT', 'Instname': 'NA', 'Expdate': 'NA', 'LTP': '3,355.10', 'Opttype': 'XX', 'BLQty': 1.0, 'Token': '910', 'Fillbuyamt': '299,280.00', 'Fillsellqty': '87', 'Tsym': 'EICHERMOT-EQ', 'sSqrflg': 'Y', 'unrealisedprofitloss': '0.00', 'Buyavgprc': '3,440.00', 'MtoM': '-7,217.50', 'stat': 'Ok', 's_NetQtyPosConv': 'N', 'Sqty': '87', 'Sellavgprc': '3,357.04', 'PriceDenomenator': '1', 'PriceNumerator': '1', 'actid': 'SP220xx', 'posflag': 'true', 'Pcode': 'MIS', 'Stikeprc': '0', 'Bqty': '87', 'BEP': '0.00', 'Exchange': 'NSE', 'Series': 'EQ', 'GeneralDenomenator': '1', 'Type': 'DAY1', 'Netamt': '-7,217.50', 'companyname': 'EICHER MOTORS LTD', 'Fillbuyqty': '87', 'GeneralNumerator': '1', 'Exchangeseg': 'nse_cm', 'discQty': '10'}, {'realisedprofitloss': '1,141.70', 'Fillsellamt': '298,216.70', 'Netqty': '0', 'Symbol': 'M&M', 'Instname': 'NA', 'Expdate': 'NA', 'LTP': '1,274.65', 'Opttype': 'XX', 'BLQty': 1.0, 'Token': '2031', 'Fillbuyamt': '297,075.00', 'Fillsellqty': '233', 'Tsym': 'M&M-EQ', 'sSqrflg': 'Y', 'unrealisedprofitloss': '0.00', 'Buyavgprc': '1,275.00', 'MtoM': '1,141.70', 'stat': 'Ok', 's_NetQtyPosConv': 'N', 'Sqty': '233', 'Sellavgprc': '1,279.90', 'PriceDenomenator': '1', 'PriceNumerator': '1', 'actid': 'SP220xx', 'posflag': 'true', 'Pcode': 'MIS', 'Stikeprc': '0', 'Bqty': '233', 'BEP': '0.00', 'Exchange': 'NSE', 'Series': 'EQ', 'GeneralDenomenator': '1', 'Type': 'DAY1', 'Netamt': '1,141.70', 'companyname': 'MAHINDRA & MAHINDRA LTD', 'Fillbuyqty': '233', 'GeneralNumerator': '1', 'Exchangeseg': 'nse_cm', 'discQty': '10'}]\n```\n\n### Get Netwise Positions\nCode\n```python\nprint(alice.get_netwise_positions()) # get netwise positions\n```\nSample response\n```\n[{'Instname': 'NA', 'Expdate': 'NA', 'CFsellqty': '0', 'Opttype': 'XX', 'Token': '910', 'CFSellavgprc': '0.00', 'sSqrflg': 'Y', 'unrealisedprofitloss': '0.00', 's_NetQtyPosConv': 'N', 'FillbuyamtCF': '0.00', 'Sqty': '87', 'Sellavgprc': '3,357.04', 'actid': 'SP220xx', 'netbuyamt': '299,280.00', 'Pcode': 'MIS', 'Bqty': '87', 'NetBuyavgprc': '3440.0', 'Exchange': 'NSE', 'companyname': 'EICHER MOTORS LTD', 'netbuyqty': '87', 'realisedprofitloss': '-7,217.50', 'Fillsellamt': '292,062.50', 'Netqty': '0', 'Symbol': 'EICHERMOT', 'LTP': '3,355.10', 'BLQty': 1.0, 'Fillbuyamt': '299,280.00', 'Fillsellqty': '87', 'Tsym': 'EICHERMOT-EQ', 'CFbuyqty': '0', 'Buyavgprc': '3,440.00', 'netSellamt': '292,062.50', 'MtoM': '-7,217.50', 'stat': 'Ok', 'FillsellamtCF': '0.00', 'PriceDenomenator': '1', 'netsellqty': '87', 'PriceNumerator': '1', 'posflag': 'true', 'Stikeprc': '0', 'BEP': '0.00', 'Series': 'EQ', 'GeneralDenomenator': '1', 'Type': 'DAY1', 'Netamt': '-7,217.50', 'NetSellavgprc': '3357.04', 'CFBuyavgprc': '0.00', 'Fillbuyqty': '87', 'GeneralNumerator': '1', 'Exchangeseg': 'nse_cm', 'discQty': '10'}, {'Instname': 'NA', 'Expdate': 'NA', 'CFsellqty': '0', 'Opttype': 'XX', 'Token': '2031', 'CFSellavgprc': '0.00', 'sSqrflg': 'Y', 'unrealisedprofitloss': '0.00', 's_NetQtyPosConv': 'N', 'FillbuyamtCF': '0.00', 'Sqty': '233', 'Sellavgprc': '1,279.90', 'actid': 'SP220xx', 'netbuyamt': '297,075.00', 'Pcode': 'MIS', 'Bqty': '233', 'NetBuyavgprc': '1275.0', 'Exchange': 'NSE', 'companyname': 'MAHINDRA & MAHINDRA LTD', 'netbuyqty': '233', 'realisedprofitloss': '1,141.70', 'Fillsellamt': '298,216.70', 'Netqty': '0', 'Symbol': 'M&M', 'LTP': '1,274.65', 'BLQty': 1.0, 'Fillbuyamt': '297,075.00', 'Fillsellqty': '233', 'Tsym': 'M&M-EQ', 'CFbuyqty': '0', 'Buyavgprc': '1,275.00', 'netSellamt': '298,216.70', 'MtoM': '1,141.70', 'stat': 'Ok', 'FillsellamtCF': '0.00', 'PriceDenomenator': '1', 'netsellqty': '233', 'PriceNumerator': '1', 'posflag': 'true', 'Stikeprc': '0', 'BEP': '0.00', 'Series': 'EQ', 'GeneralDenomenator': '1', 'Type': 'DAY1', 'Netamt': '1,141.70', 'NetSellavgprc': '1279.9', 'CFBuyavgprc': '0.00', 'Fillbuyqty': '233', 'GeneralNumerator': '1', 'Exchangeseg': 'nse_cm', 'discQty': '10'}, {'Instname': 'OPTIDX', 'Expdate': '1 Sep, 2022', 'CFsellqty': '0', 'Opttype': 'CE', 'Token': '51698', 'CFSellavgprc': '0.00', 'sSqrflg': 'Y', 'unrealisedprofitloss': '555.00', 's_NetQtyPosConv': 'N', 'FillbuyamtCF': '18,570.00', 'Sqty': '0', 'Sellavgprc': '0.00', 'actid': 'SP220xx', 'netbuyamt': '18,570.00', 'Pcode': 'NRML', 'Bqty': '0', 'NetBuyavgprc': '441.0', 'Exchange': 'NFO', 'companyname': '', 'netbuyqty': '50', 'realisedprofitloss': '0.00', 'Fillsellamt': '0.00', 'Netqty': '50', 'Symbol': 'BANKNIFTY', 'LTP': '382.50', 'BLQty': 25.0, 'Fillbuyamt': '0.00', 'Fillsellqty': '0', 'Tsym': 'BANKNIFTY2290139100CE', 'CFbuyqty': '50', 'Buyavgprc': '0.00', 'netSellamt': '0.00', 'MtoM': '555.00', 'stat': 'Ok', 'FillsellamtCF': '0.00', 'PriceDenomenator': '1', 'netsellqty': '0', 'PriceNumerator': '1', 'posflag': 'false', 'Stikeprc': '39100.0', 'BEP': '371.40', 'Series': 'XX', 'GeneralDenomenator': '1', 'Type': 'NET1', 'Netamt': '-18,570.00', 'NetSellavgprc': '0.00', 'CFBuyavgprc': '441.0', 'Fillbuyqty': '0', 'GeneralNumerator': '1', 'Exchangeseg': 'nse_fo', 'discQty': 'NA'}, {'Instname': 'OPTIDX', 'Expdate': '1 Sep, 2022', 'CFsellqty': '100', 'Opttype': 'CE', 'Token': '51731', 'CFSellavgprc': '128.45', 'sSqrflg': 'Y', 'unrealisedprofitloss': '-150.00', 's_NetQtyPosConv': 'N', 'FillbuyamtCF': '0.00', 'Sqty': '0', 'Sellavgprc': '0.00', 'actid': 'SP220xx', 'netbuyamt': '0.00', 'Pcode': 'NRML', 'Bqty': '0', 'NetBuyavgprc': '0.00', 'Exchange': 'NFO', 'companyname': '', 'netbuyqty': '0', 'realisedprofitloss': '0.00', 'Fillsellamt': '0.00', 'Netqty': '-100', 'Symbol': 'BANKNIFTY', 'LTP': '96.00', 'BLQty': 25.0, 'Fillbuyamt': '0.00', 'Fillsellqty': '0', 'Tsym': 'BANKNIFTY2290139900CE', 'CFbuyqty': '0', 'Buyavgprc': '0.00', 'netSellamt': '9,450.00', 'MtoM': '-150.00', 'stat': 'Ok', 'FillsellamtCF': '9,450.00', 'PriceDenomenator': '1', 'netsellqty': '100', 'PriceNumerator': '1', 'posflag': 'false', 'Stikeprc': '39900.0', 'BEP': '94.50', 'Series': 'XX', 'GeneralDenomenator': '1', 'Type': 'NET1', 'Netamt': '9,450.00', 'NetSellavgprc': '128.45', 'CFBuyavgprc': '0.00', 'Fillbuyqty': '0', 'GeneralNumerator': '1', 'Exchangeseg': 'nse_fo', 'discQty': 'NA'}]\n```\n\n### Get Holding Positions\nCode\n```python\nprint(alice.get_holding_positions()) # get holding positions\n```\nSample response\n```\n{'stat': 'Ok', 'HoldingVal': [{'WCqty': '0', 'BSEHOldingValue': '25700.00', 'hsflag': 'Y', 'Series1': 'A', 'HUqty': '200', 'authQty': '0', 'YSXHOldingValue': '0.00', 'CSEHOldingValue': '0.00', 'Ttrind': 'N', 'DaysMTM': '0', 'csflag': 'Y', 'WHqty': '0', 'Pcode': 'CNC', 'Price': '102.78', 'Exch4': '0', 'BuyQty': '0', 'Bsetsym': 'BANKBARODA', 'Exch5': '0', 'LTcse': '0.00', 'MCXHOldingValue': '0.00', 'Holdqty': '0', 'Exch1': 'nse_cm', 'Exch2': 'bse_cm', 'Exch3': '0', 'LTysx': '0.00', 'Haircut': '0.00', 'Scripcode': '532134', 'LTPValuation': '0', 'NSEHOldingValue': '25660.00', 'Ysxtsym': '0', 'Ltp': '128.50', 'Coltype': '--', 'Btst': '0', 'LTmcxsxcm': '0.00', 'Usedqty': '0', 'poaStatus': 'Y', 'Token5': '0', 'Nsetsym': 'BANKBARODA-EQ', 'CUqty': '0', 'Token2': '532134', 'Token1': '4668', 'Token4': '0', 'Token3': '0', 'SellableQty': '200', 'Mcxsxcmsym': '0', 'Csetsym': '0', 'authFlag': True, 'LTnse': '128.30', 'pdc': '125.9', 'Series': 'EQ', 'Colqty': '0', 'ExchSeg5': None, 'ExchSeg2': 'BSE', 'ExchSeg1': 'NSE', 'LTbse': '128.50', 'ExchSeg4': None, 'ExchSeg3': None, 'isin': 'INE028A01039', 'Tprod': 'NA'}, {'WCqty': '0', 'BSEHOldingValue': '772832.75', 'hsflag': 'Y', 'Series1': 'X', 'HUqty': '19345', 'authQty': '0', 'YSXHOldingValue': '0.00', 'CSEHOldingValue': '0.00', 'Ttrind': 'N', 'DaysMTM': '0', 'csflag': 'Y', 'WHqty': '0', 'Pcode': 'CNC', 'Price': '44.60', 'Exch4': '0', 'BuyQty': '0', 'Bsetsym': 'SMIFS', 'Exch5': '0', 'LTcse': '0.00', 'MCXHOldingValue': '0.00', 'Holdqty': '0', 'Exch1': '0', 'Exch2': 'bse_cm', 'Exch3': '0', 'LTysx': '0.00', 'Haircut': '0.00', 'Scripcode': '508905', 'LTPValuation': '0', 'NSEHOldingValue': '0.00', 'Ysxtsym': '0', 'Ltp': '39.95', 'Coltype': '--', 'Btst': '0', 'LTmcxsxcm': '0.00', 'Usedqty': '0', 'poaStatus': 'Y', 'Token5': '0', 'Nsetsym': '0', 'CUqty': '0', 'Token2': '508905', 'Token1': '0', 'Token4': '0', 'Token3': '0', 'SellableQty': '19345', 'Mcxsxcmsym': '0', 'Csetsym': '0', 'authFlag': True, 'LTnse': '0.00', 'pdc': '41.95', 'Series': '---', 'Colqty': '0', 'ExchSeg5': None, 'ExchSeg2': 'BSE', 'ExchSeg1': None, 'LTbse': '39.95', 'ExchSeg4': None, 'ExchSeg3': None, 'isin': 'INE641A01013', 'Tprod': 'NA'}], 'clientid': 'WBK293', 'Totalval': {'TotalMCXHoldingValue': '0.00', 'TotalCSEHoldingValue': '0.00', 'TotalNSEHoldingValue': '25660.00', 'TotalYSXHoldingValue': '0.00', 'TotalBSEHoldingValue': '798532.75'}}\n```\n\n### Get master contracts\nGetting master contracts allow you to search for instruments by symbol name and place orders.\nMaster contracts are stored as an OrderedDict by token number and by symbol name in a local file. Whenever you get a trade update, order update, or quote update, the library will check if master contracts are loaded. If they are, it will attach the instrument object directly to the update. By default all master contracts of all enabled exchanges in your personal profile will be downloaded. i.e. If your profile contains the following as enabled exchanges `['NSE', 'BSE', 'MCX', NFO']` all contract notes of all exchanges will be downloaded by default. If you feel it takes too much time to download all exchange, or if you don't need all exchanges to be downloaded, you can specify which exchange to download contract notes while creating the AliceBlue object. Master contracts once downloaded is stored in temp location and reused the subsequent times. Master contracts are downloaded newly once a day (because new master contracts are updated everyday around 8:00am).\n\nCode\n```python\nalice = AliceBlue(username = \"username\", session_id = session_id, master_contracts_to_download=['NSE', 'BSE'])\n```\nThis will reduce a few seconds in object creation time of AliceBlue object.\n\n#### Get Scrip info\nGet Scrip info from alice server (this is different from instrument object).\n```python\nprint(alice.get_scrip_info(alice.get_instrument_by_symbol(\"NSE\", \"INFY-EQ\")))\n```\n```\n{'optiontype': 'XX', 'SQty': 55, 'vwapAveragePrice': '1499.38', 'LTQ': '40', 'Ltp': '1511.65', 'LTP': '1511.65', 'DecimalPrecision': 2, 'openPrice': '1488.00', 'BRate': '00.00', 'defmktproval': '3', 'BQty': 0, 'symbolname': 'INFY', 'noMktPro': '0', 'LTT': '09/09/2022 15:59:32', 'mktpro': '1', 'TickSize': '5', 'Multiplier': 1, 'strikeprice': '00.00', 'TotalSell': '55', 'High': '1520.00', 'stat': 'Ok', 'BodLotQty': 1, 'yearlyHighPrice': '1953.90', 'yearlyLowPrice': '1367.15', 'exchFeedTime': '09-Sep-2022 16:18:43', 'PrvClose': '1511.65', 'SRate': '1511.65', 'Change': '00.00', 'Series': 'EQ', 'TotalBuy': 'NA', 'Low': '1480.00', 'UniqueKey': 'INFY', 'PerChange': '00.00', 'companyname': 'INFOSYS LIMITED', 'TradeVolume': '4816910', 'TSymbl': 'INFY-EQ', 'Exp': 'NA', 'LTD': 'NA'}\n```\n#### Instrument object\nInstruments are represented by instrument objects. These are named-tuples that are created while getting the master contracts. They are used when placing an order and subscribing to a symbol. The structure of an instrument tuple is as follows:\n\n```python\nInstrument = namedtuple('Instrument', ['exchange', 'token', 'symbol',\n                                      'name', 'expiry', 'lot_size'])\n```\n\nAll instruments have the fields mentioned above. Wherever a field is not applicable for an instrument (for example, equity instruments don't have strike prices), that value will be `None`.\n\n### Get tradable instruments\nSymbols can be retrieved in multiple ways. Once you have the master contract loaded for an exchange, you can get an instrument in many ways.\n\n#### Get a single instrument by it's name:\nCode\n```python\ntatasteel_nse_eq = alice.get_instrument_by_symbol('NSE', 'TATASTEEL-EQ')\nreliance_nse_eq = alice.get_instrument_by_symbol('NSE', 'RELIANCE-EQ')\nongc_bse_eq = alice.get_instrument_by_symbol('BSE', 'ONGC-EQ')\nindia_vix_nse_index = alice.get_instrument_by_symbol('NSE', 'India VIX')\nsensex_nse_index = alice.get_instrument_by_symbol('BSE', 'SENSEX')\nnifty50_nse_index = alice.get_instrument_by_symbol('NSE', 'NIFTY 50')\nbanknifty_nse_index = alice.get_instrument_by_symbol('NSE', 'NIFTY Bank')\n```\n\n#### Get a single instrument by it's token number (generally useful only for BSE Equities):\nCode\n```python\nongc_bse_eq = alice.get_instrument_by_token('BSE', 500312)\nreliance_bse_eq = alice.get_instrument_by_token('BSE', 500325)\nacc_nse_eq = alice.get_instrument_by_token('NSE', 22)\n```\n\n#### Get FNO instruments easily by mentioning expiry, strike & call or put.\nCode\n```python\nbn_fut = alice.get_instrument_for_fno(symbol = 'BANKNIFTY', expiry_date=datetime.date(2019, 6, 27), is_fut=True, strike=None, is_CE = False)\nbn_call = alice.get_instrument_for_fno(symbol = 'BANKNIFTY', expiry_date=datetime.date(2019, 6, 27), is_fut=False, strike=30000, is_CE = True)\nbn_put = alice.get_instrument_for_fno(symbol = 'BANKNIFTY', expiry_date=datetime.date(2019, 6, 27), is_fut=False, strike=30000, is_CE = False)\n```\n\n### Search for symbols\nSearch for multiple instruments by matching the name. This works case insensitive and returns all instrument which has the name in its symbol.\nCode\n```python\nall_sensex_scrips = alice.search_instruments('BSE', 'sEnSeX')\nprint(all_sensex_scrips)\n```\nThe above code results multiple symbol which has 'sensex' in its symbol.\nSample response\n```\n[Instrument(exchange='BSE', token=532985, symbol='KTKSENSEX', name='KOTAK MAHINDRA MUTUAL FUND', expiry=None, lot_size='1'), Instrument(exchange='BSE', token=535276, symbol='SBISENSEX', name='SBI MUTUAL FUND - SBI ETF SENS', expiry=None, lot_size='1'), Instrument(exchange='BSE', token=538683, symbol='SENSEXBEES', name='NIPPON INDIA ETF SENSEX', expiry=None, lot_size='1'), Instrument(exchange='BSE', token=540154, symbol='IDFSENSEXE', name='IDFC Mutual Fund', expiry=None, lot_size='1'), Instrument(exchange='BSE', token=199040, symbol='SENSEXBINAV', name='INAV NIPPO INDIA ETF SENSE', expiry=None, lot_size='1')]\n```\n\n#### Search for multiple instruments by matching multiple names\nCode\n```python\nmultiple_underlying = [\"INFY\", \"SBIN\", \"BHEL\"]\nall_scripts = alice.search_instruments('NFO', multiple_underlying)\nprint(all_scripts)\n```\n\n### Live Feed Data and Market Depth Data\nOnce you have master contracts loaded & a tradable instrument, you can easily subscribe to market feedd/depth data.\n\n#### Two types of Live data are available\nYou can subscribe any one type of live data for a given scrip. Using the `LiveFeedType` enum, you can specify what type of live feed you need.\n* `LiveFeedType.TICK_DATA`\n* `LiveFeedType.DEPTH_DATA`\n\nPlease refer to the original documentation [here](https://v2api.aliceblueonline.com/websocket) for more details of different types of live feeds.\n\n#### Subscribe to a live feed\nCode\n```python\nalice.subscribe(alice.get_instrument_by_symbol('NSE', 'TATASTEEL-EQ'), LiveFeedType.TICK_DATA)\nalice.subscribe(alice.get_instrument_by_symbol('BSE', 'RELIANCE-EQ'), LiveFeedType.DEPTH_DATA)\n```\n#### Subscribe to multiple instruments in a single call. Give an array of instruments to be subscribed.\nCode\n```python\nalice.subscribe([alice.get_instrument_by_symbol('NSE', 'TATASTEEL-EQ'), alice.get_instrument_by_symbol('NSE', 'ACC-EQ')], LiveFeedType.TICK_DATA)\n```\n\n#### Start getting live feed via websocket\nCode\n```python\ndef event_handler_quote_update(message):\n    print(f\"quote update {message}\")\n\nalice.start_websocket(subscribe_callback=event_handler_quote_update)\n\nalice.subscribe(alice.get_instrument_by_symbol('NSE', 'ONGC-EQ'), LiveFeedType.TICK_DATA)\nsleep(10)\n```\n\n#### Unsubscribe to a live feed\nUnsubscribe to an existing live feed.\n\nCode\n```python\nalice.unsubscribe(alice.get_instrument_by_symbol('NSE', 'TATASTEEL-EQ'), LiveFeedType.TICK_DATA)\nalice.unsubscribe(alice.get_instrument_by_symbol('BSE', 'RELIANCE-EQ'), LiveFeedType.DEPTH_DATA)\n```\n#### Unsubscribe to multiple instruments in a single call. Give an array of instruments to be unsubscribed.\nCode\n```python\nalice.unsubscribe([alice.get_instrument_by_symbol('NSE', 'TATASTEEL-EQ'), alice.get_instrument_by_symbol('NSE', 'ACC-EQ')], LiveFeedType.TICK_DATA)\n```\n\n#### Get All Subscribed Symbols\nCode\n```python\nalice.get_all_subscriptions() # All\n```\n\n### Market Status messages & Exchange messages.\nSubscribe to market status & Exchange messages coming soon.\n\n#### Subscribe to Market Status messages\nCode\n```python\nalice.subscribe_market_status_messages()\n```\n\n#### Getting market status messages.\nCode\n```python\nprint(alice.get_market_status_messages())\n```\n\nSample Response of `get_market_status_messages()`\n```\n[{'exchange': 'NSE', 'length_of_market_type': 6, 'market_type': b'NORMAL', 'length_of_status': 31, 'status': b'The Closing Session has closed.'}, {'exchange': 'NFO', 'length_of_market_type': 6, 'market_type': b'NORMAL', 'length_of_status': 45, 'status': b'The Normal market has closed for 22 MAY 2020.'}, {'exchange': 'CDS', 'length_of_market_type': 6, 'market_type': b'NORMAL', 'length_of_status': 45, 'status': b'The Normal market has closed for 22 MAY 2020.'}, {'exchange': 'BSE', 'length_of_market_type': 13, 'market_type': b'OTHER SESSION', 'length_of_status': 0, 'status': b''}]\n```\n\n#### Subscribe to exchange messages\nCode\n```python\nalice.subscribe_exchange_messages()\n```\n\n#### Getting market status messages.\nCode\n```python\nprint(alice.get_exchange_messages())\n```\n\nSample Response of `get_exchange_messages()`\n```\n[{'exchange': 'NSE', 'length': 32, 'message': b'DS : Bulk upload can be started.', 'exchange_time_stamp': 1590148595}, {'exchange': 'NFO', 'length': 200, 'message': b'MARKET WIDE LIMIT FOR VEDL IS 183919959. OPEN POSITIONS IN VEDL HAVE REACHED 84 PERCENT OF THE MARKET WIDE LIMIT.                                                                                       ', 'exchange_time_stamp': 1590146132}, {'exchange': 'CDS', 'length': 54, 'message': b'DS : Regular segment Bhav copy broadcast successfully.', 'exchange_time_stamp': 1590148932}, {'exchange': 'MCX', 'length': 7, 'message': b'.......', 'exchange_time_stamp': 1590196159}]\n```\n\n#### Market Status messages & Exchange messages through callbacks\nCode\n```python\nsocket_opened = False\ndef market_status_messages(message):\n    print(f\"market status messages {message}\")\n\ndef exchange_messages(message):\n    print(f\"exchange messages {message}\")\n\nalice.start_websocket(market_status_messages_callback=market_status_messages,\n                      exchange_messages_callback=exchange_messages)\nalice.subscribe_market_status_messages()\nalice.subscribe_exchange_messages()\nsleep(10)\n```\n\n### Place an order\nYou can place following types of order through this API.\n1. [Limit](#limit-order-intraday-buy)\n1. [Market](#market-order-delivery-sell)\n1. [Stop Loss Limit](#stop-loss-limit-order)\n1. [Stop Loss Market](#stop-loss-market-order)\n1. [Bracket Order](#bracket-order)\n1. [AMO](#after-market-order)\n\n#### Limit Order (Intraday Buy)\nCode\n```python\nprint(alice.place_order(transaction_type = TransactionType.Buy, \n                        instrument = alice.get_instrument_by_symbol(\"NSE\", \"INFY-EQ\"), \n                        quantity = 1,\n                        order_type = OrderType.Limit, \n                        product_type = ProductType.Intraday, \n                        price = 500.0))\n```\nSample reponse of place order\n```python\n[{'stat': 'Ok', 'NOrdNo': '220909000171482'}]\n```\n#### Market Order (Delivery Sell)\n\n```python\nprint(alice.place_order(transaction_type = TransactionType.Sell,\n                        instrument = alice.get_instrument_by_symbol(\"NSE\", \"INFY-EQ\"), \n                        quantity = 0, \n                        order_type = OrderType.Market, \n                        product_type = ProductType.Delivery))\n```\n\n#### Stop Loss Limit order \n```python\nprint(alice.place_order(transaction_type = TransactionType.Sell, \n                        instrument = alice.get_instrument_by_symbol(\"NSE\", \"INFY-EQ\"), \n                        quantity = 1, \n                        order_type = OrderType.StopLossLimit,\n                        product_type = ProductType.Intraday, \n                        price = 500.0, \n                        trigger_price = 490.0))\n```\n#### Stop Loss Market order \n```python\nprint(alice.place_order(transaction_type = TransactionType.Sell, \n                        instrument = alice.get_instrument_by_symbol(\"NSE\", \"INFY-EQ\"), \n                        quantity = 1, \n                        order_type = OrderType.StopLossMarket,\n                        product_type = ProductType.Intraday, \n                        trigger_price = 490.0))\n```\n#### Bracket Order\n```python\nprint(alice.place_order(transaction_type = TransactionType.Sell,\n                        instrument = alice.get_instrument_by_symbol(\"NSE\", \"INFY-EQ\"), \n                        quantity = 1, \n                        order_type = OrderType.StopLossLimit,\n                        product_type = ProductType.Intraday, \n                        price = 1464.0, \n                        trigger_price = 1466.0, \n                        stop_loss = 1450.0, \n                        target = 1480.0, \n                        trailing_sl = 1.0))\n```\n#### After Market Order\nCode\n```python\nprint(alice.place_order(transaction_type = TransactionType.Buy, \n                        instrument = alice.get_instrument_by_symbol(\"NSE\", \"INFY-EQ\"), \n                        quantity = 1, \n                        order_type = OrderType.AfterMarketOrder,\n                        product_type = ProductType.Delivery, \n                        price = 500.0))\n```\nSample reponse of AMO order\n```\n[{'stat': 'Ok', 'NOrdNo': '220909000171690-after market order req received'}]\n```\n#### Modify Order\n```python\nprint(alice.modify_order(   order_id = order_id, \n                            transaction_type = TransactionType.Buy, \n                            instrument = alice.get_instrument_by_symbol(\"NSE\", \"INFY-EQ\"), \n                            quantity = 2, \n                            order_type = OrderType.AfterMarketOrder,\n                            product_type = ProductType.Delivery, \n                            price = 600.0))\n```\nSample response of modify order\n```\n{'stat': 'Ok', 'Result': ' NEST Order Number :220909000171761'}\n```\n\n#### Cancel an order\n```python\norder_id = 220909000171761\nprint(alice.cancel_order(order_id = order_id))\n```\nSample response of cancel order\n```\n{'stat': 'Ok', 'Result': ' NEST Order Number :220909000171761'}\n```\n\n### Getting order history and trade details\n\n#### Get order history of all orders.\n```python\nprint(alice.get_order_history())\n```\n```\n[{'Prc': '600.00', 'RequestID': '1', 'Cancelqty': 0, 'discQtyPerc': '10', 'customText': 'NA', 'Mktpro': 'NA', 'defmktproval': '3', 'optionType': 'XX', 'usecs': '078218', 'mpro': '1', 'Qty': 2, 'ordergenerationtype': 'AMO', 'Unfilledsize': 0, 'orderAuthStatus': '', 'Usercomments': 'NA', 'ticksize': '5', 'Prctype': 'AMO', 'Status': 'cancelled after market order', 'Minqty': 0, 'orderCriteria': 'NA', 'Exseg': 'nse_cm', 'Sym': 'INFY', 'multiplier': '1', 'ExchOrdID': 'NA', 'ExchConfrmtime': '--', 'Pcode': 'CNC', 'SyomOrderId': '', 'Dscqty': 0, 'Exchange': 'NSE', 'Ordvaldate': 'NA', 'accountId': 'SP220xx', 'exchangeuserinfo': '111111111111130', 'Avgprc': '00.00', 'Trgprc': '00.00', 'Trantype': 'B', 'bqty': '1', 'Trsym': 'INFY-EQ', 'Fillshares': 0, 'AlgoCategory': 'NA', 'sipindicator': 'N', 'strikePrice': '00.00', 'reporttype': 'NA', 'AlgoID': 'NA', 'noMktPro': '0', 'BrokerClient': '--', 'OrderUserMessage': '', 'decprec': '2', 'ExpDate': 'NA', 'COPercentage': 0.0, 'marketprotectionpercentage': '--', 'Nstordno': '220909000171761', 'ExpSsbDate': 'NA', 'OrderedTime': '09/09/2022 15:47:11', 'RejReason': '--', 'modifiedBy': 'SP220xx', 'Scripname': 'INFOSYS LIMITED', 'stat': 'Ok', 'orderentrytime': '', 'PriceDenomenator': '1', 'panNo': 'NA', 'RefLmtPrice': 0.0, 'PriceNumerator': '1', 'token': '1594', 'ordersource': 'NEST_REST_WEB', 'Validity': None, 'GeneralDenomenator': '1', 'series': 'EQ', 'InstName': '', 'GeneralNumerator': '1', 'user': 'SP220xx', 'remarks': '--', 'iSinceBOE': 1662718631}, {'Prc': '378.50', 'RequestID': '1', 'Cancelqty': 0, 'discQtyPerc': '10', 'customText': 'NA', 'Mktpro': 'NA', 'defmktproval': '3', 'optionType': 'XX', 'usecs': '428162', 'mpro': '1', 'Qty': 704, 'ordergenerationtype': '--', 'Unfilledsize': 0, 'orderAuthStatus': '', 'Usercomments': 'NA', 'ticksize': '5', 'Prctype': 'L', 'Status': 'complete', 'Minqty': 0, 'orderCriteria': 'NA', 'Exseg': 'nse_cm', 'Sym': 'HINDALCO', 'multiplier': '1', 'ExchOrdID': '1100000000211421', 'ExchConfrmtime': '09-Sep-2022 09:07:03', 'Pcode': 'MIS', 'SyomOrderId': '', 'Dscqty': 0, 'Exchange': 'NSE', 'Ordvaldate': 'NA', 'accountId': 'SP220xx', 'exchangeuserinfo': '333333333333100', 'Avgprc': '426.00', 'Trgprc': '00.00', 'Trantype': 'S', 'bqty': '1', 'Trsym': 'HINDALCO-EQ', 'Fillshares': 704, 'AlgoCategory': 'NA', 'sipindicator': 'N', 'strikePrice': '00.00', 'reporttype': 'fill', 'AlgoID': 'NA', 'noMktPro': '0', 'BrokerClient': '--', 'OrderUserMessage': '', 'decprec': '2', 'ExpDate': 'NA', 'COPercentage': 0.0, 'marketprotectionpercentage': '--', 'Nstordno': '220909000001363', 'ExpSsbDate': 'NA', 'OrderedTime': '09/09/2022 09:07:03', 'RejReason': '--', 'modifiedBy': '--', 'Scripname': 'HINDALCO  INDUSTRIES  LTD', 'stat': 'Ok', 'orderentrytime': 'Sep 09 2022 09:06:59', 'PriceDenomenator': '1', 'panNo': 'xxxxx', 'RefLmtPrice': 0.0, 'PriceNumerator': '1', 'token': '1363', 'ordersource': 'NEST_REST_TLAPI', 'Validity': 'DAY', 'GeneralDenomenator': '1', 'series': 'EQ', 'InstName': '', 'GeneralNumerator': '1', 'user': 'SP220xx', 'remarks': '--', 'iSinceBOE': 1662694623}]\n```\n\n#### Get order history of a particular order\n```python\nprint(alice.get_order_history(220909000171761))\n```\nSample Response\n```\n[{'Prc': '600.00', 'Action': 'B', 'productcode': 'CNC', 'reporttype': 'NA', 'triggerprice': '0.0', 'filledShares': 0, 'disclosedqty': '0', 'exchangetimestamp': '--', 'ExchTimeStamp': '09/09/2022 15:47:11', 'symbolname': 'INFY', 'nestordernumber': '220909000171761', 'duration': None, 'OrderUserMessage': '', 'averageprice': '0.0', 'Qty': 2, 'ordergenerationtype': 'AMO', 'modifiedBy': 'SP220xx', 'filldateandtime': '-- --', 'Status': 'cancelled after market order', 'rejectionreason': '--', 'stat': 'Ok', 'PriceDenomenator': '1', 'exchangeorderid': None, 'PriceNumerator': '1', 'legorderindicator': '', 'customerfirm': 'C', 'ordersource': 'NEST_REST_WEB', 'GeneralDenomenator': '1', 'nestreqid': '1', 'Ordtype': 'AMO', 'unfilledSize': 0, 'scripname': 'INFOSYS LIMITED', 'GeneralNumerator': '1', 'bqty': 1, 'exchange': 'NSE', 'Trsym': 'INFY-EQ'}, {'Prc': '600.00', 'Action': 'B', 'productcode': 'CNC', 'reporttype': 'NA', 'triggerprice': '0.0', 'filledShares': 0, 'disclosedqty': '0', 'exchangetimestamp': '--', 'ExchTimeStamp': '09/09/2022 15:47:10', 'symbolname': 'INFY', 'nestordernumber': '220909000171761', 'duration': None, 'OrderUserMessage': '', 'averageprice': '0.0', 'Qty': 2, 'ordergenerationtype': 'AMO', 'modifiedBy': 'SP220xx', 'filldateandtime': '-- --', 'Status': 'modify after market order req received', 'rejectionreason': '--', 'stat': 'Ok', 'PriceDenomenator': '1', 'exchangeorderid': None, 'PriceNumerator': '1', 'legorderindicator': '', 'customerfirm': 'C', 'ordersource': 'NEST_REST_WEB', 'GeneralDenomenator': '1', 'nestreqid': '1', 'Ordtype': 'AMO', 'unfilledSize': 2, 'scripname': 'INFOSYS LIMITED', 'GeneralNumerator': '1', 'bqty': 1, 'exchange': 'NSE', 'Trsym': 'INFY-EQ'}, {'Prc': '500.00', 'Action': 'B', 'productcode': 'CNC', 'reporttype': 'NA', 'triggerprice': '0.0', 'filledShares': 0, 'disclosedqty': '1', 'exchangetimestamp': '--', 'ExchTimeStamp': '09/09/2022 15:47:09', 'symbolname': 'INFY', 'nestordernumber': '220909000171761', 'duration': 'DAY', 'OrderUserMessage': '', 'averageprice': '0.0', 'Qty': 1, 'ordergenerationtype': 'AMO', 'modifiedBy': '--', 'filldateandtime': '-- --', 'Status': 'after market order req received', 'rejectionreason': '--', 'stat': 'Ok', 'PriceDenomenator': '1', 'exchangeorderid': None, 'PriceNumerator': '1', 'legorderindicator': '', 'customerfirm': 'C', 'ordersource': 'NEST_REST_WEB', 'GeneralDenomenator': '1', 'nestreqid': '1', 'Ordtype': 'AMO', 'unfilledSize': 1, 'scripname': 'INFOSYS LIMITED', 'GeneralNumerator': '1', 'bqty': 1, 'exchange': 'NSE', 'Trsym': 'INFY-EQ'}]\n```\n\n#### Get trade book\n```python\nprint(alice.get_trade_book())\n```\nSample Response\n```\n[{'Filltime': '15:10:00', 'usecs': '836064', 'Ordduration': 'DAY', 'ExchordID': '1100000022855645', 'Qty': 201, 'ordergenerationtype': '--', 'strikeprice': '00.00', 'AvgPrice': '1499.52', 'Prctype': 'MKT', 'Minqty': 0, 'Exchseg': 'nse_cm', 'Pcode': 'MIS', 'FillLeg': 1, 'Exchange': 'NSE', 'accountId': 'SP220xx', 'Price': '1499.40', 'Trantype': 'S', 'companyname': 'HDFC BANK LTD', 'Exchtime': '09-Sep-2022 15:10:00', 'bqty': 1, 'Filldate': '09-Sep-2022', 'AlgoCategory': 'NA', 'Custofrm': 'C', 'expdate': 'NA', 'optiontype': 'XX', 'AlgoID': 'NA', 'Symbol': '1333', 'Filledqty': 201, 'Time': '09/09/2022 15:10:00', 'symbolname': 'HDFCBANK', 'BrokerClient': '--', 'NOReqID': '1', 'Tsym': 'HDFCBANK-EQ', 'Nstordno': '220909000161876', 'ReportType': 'fill', 'Expiry': 'NA', 'stat': 'Ok', 'PriceDenomenator': '1', 'panNo': 'xxxxxxxxx', 'PriceNumerator': '1', 'posflag': 'false', 'GeneralDenomenator': '1', 'FillId': '29599427', 'Fillqty': 29, 'series': 'EQ', 'GeneralNumerator': '1', 'user': 'SP220xx', 'remarks': '--', 'iSinceBOE': 1662716400}, {'Filltime': '15:10:00', 'usecs': '835977', 'Ordduration': 'DAY', 'ExchordID': '1100000022855645', 'Qty': 201, 'ordergenerationtype': '--', 'strikeprice': '00.00', 'AvgPrice': '1499.55', 'Prctype': 'MKT', 'Minqty': 0, 'Exchseg': 'nse_cm', 'Pcode': 'MIS', 'FillLeg': 1, 'Exchange': 'NSE', 'accountId': 'SP220xx', 'Price': '1499.55', 'Trantype': 'S', 'companyname': 'HDFC BANK LTD', 'Exchtime': '09-Sep-2022 15:10:00', 'bqty': 1, 'Filldate': '09-Sep-2022', 'AlgoCategory': 'NA', 'Custofrm': 'C', 'expdate': 'NA', 'optiontype': 'XX', 'AlgoID': 'NA', 'Symbol': '1333', 'Filledqty': 162, 'Time': '09/09/2022 15:10:00', 'symbolname': 'HDFCBANK', 'BrokerClient': '--', 'NOReqID': '1', 'Tsym': 'HDFCBANK-EQ', 'Nstordno': '220909000161876', 'ReportType': 'fill', 'Expiry': 'NA', 'stat': 'Ok', 'PriceDenomenator': '1', 'panNo': 'xxxxxxxxx', 'PriceNumerator': '1', 'posflag': 'false', 'GeneralDenomenator': '1', 'FillId': '29599425', 'Fillqty': 162, 'series': 'EQ', 'GeneralNumerator': '1', 'user': 'SP220xx', 'remarks': '--', 'iSinceBOE': 1662716400}, {'Filltime': '15:10:00', 'usecs': '836021', 'Ordduration': 'DAY', 'ExchordID': '1100000022855645', 'Qty': 201, 'ordergenerationtype': '--', 'strikeprice': '00.00', 'AvgPrice': '1499.54', 'Prctype': 'MKT', 'Minqty': 0, 'Exchseg': 'nse_cm', 'Pcode': 'MIS', 'FillLeg': 1, 'Exchange': 'NSE', 'accountId': 'SP220xx', 'Price': '1499.45', 'Trantype': 'S', 'companyname': 'HDFC BANK LTD', 'Exchtime': '09-Sep-2022 15:10:00', 'bqty': 1, 'Filldate': '09-Sep-2022', 'AlgoCategory': 'NA', 'Custofrm': 'C', 'expdate': 'NA', 'optiontype': 'XX', 'AlgoID': 'NA', 'Symbol': '1333', 'Filledqty': 172, 'Time': '09/09/2022 15:10:00', 'symbolname': 'HDFCBANK', 'BrokerClient': '--', 'NOReqID': '1', 'Tsym': 'HDFCBANK-EQ', 'Nstordno': '220909000161876', 'ReportType': 'fill', 'Expiry': 'NA', 'stat': 'Ok', 'PriceDenomenator': '1', 'panNo': 'xxxxxxxxx', 'PriceNumerator': '1', 'posflag': 'false', 'GeneralDenomenator': '1', 'FillId': '29599426', 'Fillqty': 10, 'series': 'EQ', 'GeneralNumerator': '1', 'user': 'SP220xx', 'remarks': '--', 'iSinceBOE': 1662716400}]\n```\n\n### Order properties as enums\nOrder properties such as TransactionType, OrderType, and others have been safely classified as enums so you don't have to write them out as strings.\n\n#### TransactionType\nTransaction types indicate whether you want to buy or sell. Valid transaction types are of the following:\n\n* `TransactionType.Buy` - buy\n* `TransactionType.Sell` - sell\n\n#### OrderType\nOrder type specifies the type of order you want to send. Valid order types include:\n\n* `OrderType.Market` - Place the order with a market price\n* `OrderType.Limit` - Place the order with a limit price (limit price parameter is mandatory)\n* `OrderType.StopLossLimit` - Place as a stop loss limit order\n* `OrderType.StopLossMarket` - Place as a stop loss market order\n* `OrderType.BracketOrder` - Place as a bracket order\n* `OrderType.AfterMarketOrder` - Place as a after market order\n\n#### ProductType\nProduct types indicate the complexity of the order you want to place. Valid product types are:\n\n* `ProductType.Intraday` - Intraday order that will get squared off before market close\n* `ProductType.Delivery` - Delivery order that will be held with you after market close\n\n## Example strategy using alice blue API\n[Here](https://gist.github.com/krishnavelu/e0df312ccf5f022edb1823461ff4230e) is an example moving average strategy using alice blue API.\nThis strategy generates a buy signal when 5-EMA > 20-EMA (golden cross) or a sell signal when 5-EMA < 20-EMA (death cross).\n\n## Historical API\nAlice Blue now supports downloading historical data for back testing.\n1. Historical data API will be available from 5:30 PM (evening) to 8 AM (Next day morning) on weekdays (Monday to Friday). Historical data will not be available during market hours\n1. Historical data API will be available fully during weekends and holidays.\n1. For NSE segment, 2 years of historical data will be provided.\n1. For NFO, CDS and MCX segments, current expiry data will be provided.\n\nCode\n```python\nprint(alice.historical_data(alice.get_instrument_by_symbol(\"NSE\", \"INFY-EQ\"),\n                            datetime.datetime.now(), \n                            datetime.datetime.now(), \n                            HistoricalDataType.Minute))\n```\nSample Reponse\n```\n{'stat': 'Ok', 'result': [{'volume': 130792.0, 'high': 1489.8, 'low': 1483.1, 'time': '2022-09-09 09:15:00', 'close': 1488.8, 'open': 1488.0}, {'volume': 33730.0, 'high': 1488.95, 'low': 1485.35, 'time': '2022-09-09 09:16:00', 'close': 1486.0, 'open': 1488.05}, {'volume': 28446.0, 'high': 1486.5, 'low': 1484.0, 'time': '2022-09-09 09:17:00', 'close': 1484.8, 'open': 1485.65}, {'volume': 33256.0, 'high': 1486.0, 'low': 1484.55, 'time': '2022-09-09 09:18:00', 'close': 1485.45, 'open': 1484.9}], 'message': None}\n```\n## Read this before creating an issue\nBefore creating an issue in this library, please follow the following steps.\n\n1. Search the problem you are facing is already asked by someone else. There might be some issues already there, either solved/unsolved related to your problem. Go to [issues](https://github.com/krishnavelu/alice_blue/issues) page, use `is:issue` as filter and search your problem. ![image](https://user-images.githubusercontent.com/38440742/85207058-376ee400-b2f4-11ea-91ad-c8fd8a682a12.png)\n2. If you feel your problem is not asked by anyone or no issues are related to your problem, then create a new issue.\n3. Describe your problem in detail while creating the issue. If you don't have time to detail/describe the problem you are facing, assume that I also won't be having time to respond to your problem.\n4. Post a sample code of the problem you are facing. If I copy paste the code directly from issue, I should be able to reproduce the problem you are facing.\n5. Before posting the sample code, test your sample code yourself once. Only sample code should be tested, no other addition should be there while you are testing.\n6. Have some print() function calls to display the values of some variables related to your problem.\n7. Post the results of print() functions also in the issue.\n8. Use the insert code feature of github to inset code and print outputs, so that the code is displayed neat. ![image](https://user-images.githubusercontent.com/38440742/85207234-4dc96f80-b2f5-11ea-990c-df013dd69cf2.png)\n9. If you have multiple lines of code, use triple grave accent ( ``` ) to insert multiple lines of code. [Example:](https://docs.github.com/en/github/writing-on-github/creating-and-highlighting-code-blocks) ![image](https://user-images.githubusercontent.com/38440742/89105781-343a3e00-d3f2-11ea-9f86-92dda88aa5bf.png)\n10. [Here](https://github.com/krishnavelu/alice_blue/issues/134#issuecomment-647016659) is an example of what I'm expecting while you are creating an issue.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/krishnavelu/alice_blue",
    "keywords": "alice,alice-blue,python,sdk,trading,stock markets",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alice-blue",
    "package_url": "https://pypi.org/project/alice-blue/",
    "platform": null,
    "project_url": "https://pypi.org/project/alice-blue/",
    "project_urls": {
      "Homepage": "https://github.com/krishnavelu/alice_blue"
    },
    "release_url": "https://pypi.org/project/alice-blue/2.0.3/",
    "requires_dist": [
      "cryptography",
      "pytz",
      "requests",
      "websocket-client"
    ],
    "requires_python": ">=3.6",
    "summary": "Official Python library for Alice Blue APIs",
    "version": "2.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15344864,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7f5f8b52cb1229075fa37c1dd772fc8c9be528f5f09a58e00a59381989be0ab",
          "md5": "adb909fb057df0d150b6d15a09aa43e8",
          "sha256": "bf54011be38fa818d8a3153276c697750dae7ad23c882e1d8c70b9fa2fd2030c"
        },
        "downloads": -1,
        "filename": "alice_blue-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "adb909fb057df0d150b6d15a09aa43e8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24425,
        "upload_time": "2019-04-06T16:47:16",
        "upload_time_iso_8601": "2019-04-06T16:47:16.547131Z",
        "url": "https://files.pythonhosted.org/packages/a7/f5/f8b52cb1229075fa37c1dd772fc8c9be528f5f09a58e00a59381989be0ab/alice_blue-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "452a4b6bdaa1f65580211e44a0641e70da5a827f3b6499955aa2c0ebb15a2419",
          "md5": "f4f502b5a72ff8b2500be942ab191d3a",
          "sha256": "100456d643df4ec7b0009448848cbc85d2a0e74465d6ae06183ca56ea04f03b9"
        },
        "downloads": -1,
        "filename": "alice_blue-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f4f502b5a72ff8b2500be942ab191d3a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28566,
        "upload_time": "2019-04-06T16:47:18",
        "upload_time_iso_8601": "2019-04-06T16:47:18.630214Z",
        "url": "https://files.pythonhosted.org/packages/45/2a/4b6bdaa1f65580211e44a0641e70da5a827f3b6499955aa2c0ebb15a2419/alice_blue-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ec586488fd9e1ec8c53450b50fa1e5a5fcdba39923dca8d3b20af7daed819dd",
          "md5": "7489d3e5356abe9d64362174608e2d6d",
          "sha256": "006f6a09c5b5dfbfc7c0a6f7af62b513709b264cdb93543f6f7336d88ade0e7e"
        },
        "downloads": -1,
        "filename": "alice_blue-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7489d3e5356abe9d64362174608e2d6d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24321,
        "upload_time": "2019-04-07T04:43:30",
        "upload_time_iso_8601": "2019-04-07T04:43:30.523396Z",
        "url": "https://files.pythonhosted.org/packages/6e/c5/86488fd9e1ec8c53450b50fa1e5a5fcdba39923dca8d3b20af7daed819dd/alice_blue-0.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e69f8dcd67ea3265f7ba401f8219822ef95844ab2751d59ab13d09132ef9cc5",
          "md5": "16f658d90bcc786c1b6a0f8892f8973c",
          "sha256": "5c46eceb63735705a90102a0eedb20d618f0e7ba2278ede9cfe0baf3d6ab4d40"
        },
        "downloads": -1,
        "filename": "alice_blue-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "16f658d90bcc786c1b6a0f8892f8973c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28404,
        "upload_time": "2019-04-07T04:43:31",
        "upload_time_iso_8601": "2019-04-07T04:43:31.930635Z",
        "url": "https://files.pythonhosted.org/packages/4e/69/f8dcd67ea3265f7ba401f8219822ef95844ab2751d59ab13d09132ef9cc5/alice_blue-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3480f2d5a748cefc74fa6490f3f78bfcd2754a2dd57255b6d053d546f600173",
          "md5": "f2a1443359ef6a9ebbd90f7aeb12a07a",
          "sha256": "f9b4a204f08c6b165b76fbb2b18a33980c3a7cfdad09169d8beb35edb91d8f50"
        },
        "downloads": -1,
        "filename": "alice_blue-0.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2a1443359ef6a9ebbd90f7aeb12a07a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24438,
        "upload_time": "2019-04-17T02:19:10",
        "upload_time_iso_8601": "2019-04-17T02:19:10.903099Z",
        "url": "https://files.pythonhosted.org/packages/d3/48/0f2d5a748cefc74fa6490f3f78bfcd2754a2dd57255b6d053d546f600173/alice_blue-0.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a70770c17ffb0085286482b9f91c8836f9680b72ef396e8941a865c3eb912db4",
          "md5": "393d0ca10ac1f45569766750ca6762f6",
          "sha256": "ae5a77f68e18873813d1066804c9b67eb0e6f39f4cb12d280594dacbfba9b98f"
        },
        "downloads": -1,
        "filename": "alice_blue-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "393d0ca10ac1f45569766750ca6762f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28478,
        "upload_time": "2019-04-17T02:19:12",
        "upload_time_iso_8601": "2019-04-17T02:19:12.259305Z",
        "url": "https://files.pythonhosted.org/packages/a7/07/70c17ffb0085286482b9f91c8836f9680b72ef396e8941a865c3eb912db4/alice_blue-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "230fe6662ae1e62bc34670c2c877e6fae734d52b2f293d59647ea75c70d4ab03",
          "md5": "4cc9c4f3edc96991623907b2681b71b6",
          "sha256": "bdb80bf5e5ad3a9d43d05dde5c2488507aede8af9fce150ab7308e5ab5efee8a"
        },
        "downloads": -1,
        "filename": "alice_blue-0.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4cc9c4f3edc96991623907b2681b71b6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24875,
        "upload_time": "2019-10-19T15:08:03",
        "upload_time_iso_8601": "2019-10-19T15:08:03.950779Z",
        "url": "https://files.pythonhosted.org/packages/23/0f/e6662ae1e62bc34670c2c877e6fae734d52b2f293d59647ea75c70d4ab03/alice_blue-0.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18f34a601cf0d3e33c2619a314571b9db5d2cc485844eac8eb6be2bb82ee889a",
          "md5": "991a4ae04de977f6dcb5b394df2beaf1",
          "sha256": "35285dd9d730ee236e74de7258a334f50ca70e9dd3c661b925b40cf2df003155"
        },
        "downloads": -1,
        "filename": "alice_blue-0.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "991a4ae04de977f6dcb5b394df2beaf1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25869,
        "upload_time": "2019-12-07T18:12:36",
        "upload_time_iso_8601": "2019-12-07T18:12:36.130000Z",
        "url": "https://files.pythonhosted.org/packages/18/f3/4a601cf0d3e33c2619a314571b9db5d2cc485844eac8eb6be2bb82ee889a/alice_blue-0.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e003ac842b05d54e6721bdc5ee020e856d59a206aadd77a519e93a4a63191062",
          "md5": "2a52f4a72197af9fb48a380e711b8333",
          "sha256": "eb79fe9a2f6111a9b7d25b016fcd018ba2f99ad795363957860aa2b3b71574b7"
        },
        "downloads": -1,
        "filename": "alice_blue-0.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a52f4a72197af9fb48a380e711b8333",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 26178,
        "upload_time": "2020-04-19T16:50:56",
        "upload_time_iso_8601": "2020-04-19T16:50:56.087190Z",
        "url": "https://files.pythonhosted.org/packages/e0/03/ac842b05d54e6721bdc5ee020e856d59a206aadd77a519e93a4a63191062/alice_blue-0.0.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16bb52bd6b0ba9173cf8658d0a3467944810737d3555bec048bcacca599d6aae",
          "md5": "a57054dd42b445512d078dfbc63edc53",
          "sha256": "2c54f3d346a1f283f3dce42992618fb2d47a93c1caa9058f28d119970822bfca"
        },
        "downloads": -1,
        "filename": "alice_blue-0.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a57054dd42b445512d078dfbc63edc53",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 28678,
        "upload_time": "2020-06-20T17:29:23",
        "upload_time_iso_8601": "2020-06-20T17:29:23.498877Z",
        "url": "https://files.pythonhosted.org/packages/16/bb/52bd6b0ba9173cf8658d0a3467944810737d3555bec048bcacca599d6aae/alice_blue-0.0.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b9f6e84e9e45aac7cc3923e250a209e50c1008545168ea84c3ac5d12221a4d6",
          "md5": "79f900dc94083b5b86b9dade1c01786b",
          "sha256": "e92ae15a37174d33b108651937744785fe0c4985fcaa180ae8b3704c646f481d"
        },
        "downloads": -1,
        "filename": "alice_blue-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79f900dc94083b5b86b9dade1c01786b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 28747,
        "upload_time": "2020-07-26T15:30:31",
        "upload_time_iso_8601": "2020-07-26T15:30:31.287113Z",
        "url": "https://files.pythonhosted.org/packages/9b/9f/6e84e9e45aac7cc3923e250a209e50c1008545168ea84c3ac5d12221a4d6/alice_blue-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97630b0b39ed1ad5810b43fa1665e631b55b92183fa2b55abfea5b37c6d3d1a4",
          "md5": "ac38922a2acf96b807f42a1f309d735a",
          "sha256": "8001ad8bec3ace72f114a70908b31e2e55ff2c31bd04bd07a0b74d8e5e687329"
        },
        "downloads": -1,
        "filename": "alice_blue-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac38922a2acf96b807f42a1f309d735a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 28691,
        "upload_time": "2020-12-13T17:21:46",
        "upload_time_iso_8601": "2020-12-13T17:21:46.228909Z",
        "url": "https://files.pythonhosted.org/packages/97/63/0b0b39ed1ad5810b43fa1665e631b55b92183fa2b55abfea5b37c6d3d1a4/alice_blue-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f2192cb1586d80b21e6a5ff6ec9bdae132c434582c9e3f4845c5ea9abaed257",
          "md5": "9d3cc3d7bc19ab41de11f85ff2429a41",
          "sha256": "a94ec886a60919da9957fa9e06fb564d4356bea1b5a7a94c79181877d8088d9d"
        },
        "downloads": -1,
        "filename": "alice_blue-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d3cc3d7bc19ab41de11f85ff2429a41",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 29149,
        "upload_time": "2021-09-18T06:45:29",
        "upload_time_iso_8601": "2021-09-18T06:45:29.362102Z",
        "url": "https://files.pythonhosted.org/packages/1f/21/92cb1586d80b21e6a5ff6ec9bdae132c434582c9e3f4845c5ea9abaed257/alice_blue-1.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb2b9e8fa86abed9e2449c78e7903480085e65b002d47ebddaa7f035b66df098",
          "md5": "fae6948dbe279785de604510dc0c1aed",
          "sha256": "a808a005004e9f41636c41f9ce788fb6172d8c97df39ab903a0c06b0ea9df50a"
        },
        "downloads": -1,
        "filename": "alice_blue-1.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fae6948dbe279785de604510dc0c1aed",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 29157,
        "upload_time": "2022-01-14T00:34:22",
        "upload_time_iso_8601": "2022-01-14T00:34:22.213223Z",
        "url": "https://files.pythonhosted.org/packages/bb/2b/9e8fa86abed9e2449c78e7903480085e65b002d47ebddaa7f035b66df098/alice_blue-1.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a9852825284f253f0be9f7a550c212cf0385fa25787154dcb1e7ae49601ab67",
          "md5": "e04f443ba381f31b5bf2ec97578e3727",
          "sha256": "b0f08e0f5c624cc68273c89840ea0836e9c63604a0b43fe294e06ace21ecbeea"
        },
        "downloads": -1,
        "filename": "alice_blue-1.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e04f443ba381f31b5bf2ec97578e3727",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 29581,
        "upload_time": "2022-04-17T22:29:32",
        "upload_time_iso_8601": "2022-04-17T22:29:32.424822Z",
        "url": "https://files.pythonhosted.org/packages/9a/98/52825284f253f0be9f7a550c212cf0385fa25787154dcb1e7ae49601ab67/alice_blue-1.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b90e70d1a0bc69a5a25128c099d9b516e09fe982c75291016f06914d940949ea",
          "md5": "a026399d1a1c0c067ad0438b2fb37b2d",
          "sha256": "64d3f52ba1834716aa5036a76501dbc080f4ca596fc3e6a4cbcc9aec124953ce"
        },
        "downloads": -1,
        "filename": "alice_blue-1.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a026399d1a1c0c067ad0438b2fb37b2d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 29583,
        "upload_time": "2022-05-18T11:51:43",
        "upload_time_iso_8601": "2022-05-18T11:51:43.060043Z",
        "url": "https://files.pythonhosted.org/packages/b9/0e/70d1a0bc69a5a25128c099d9b516e09fe982c75291016f06914d940949ea/alice_blue-1.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "516ff03af17618599ff3b0dc82c651cb8087f0a008bff6565ff63ef098cd520c",
          "md5": "3a8187a6afc249bfc512600e943cbfdb",
          "sha256": "5d6041fd0ca83acee3785165924c2227fecbca80253ecceae1a93261cd55b7cb"
        },
        "downloads": -1,
        "filename": "alice_blue-1.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a8187a6afc249bfc512600e943cbfdb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 29583,
        "upload_time": "2022-05-24T12:27:42",
        "upload_time_iso_8601": "2022-05-24T12:27:42.175579Z",
        "url": "https://files.pythonhosted.org/packages/51/6f/f03af17618599ff3b0dc82c651cb8087f0a008bff6565ff63ef098cd520c/alice_blue-1.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f58a5c7235c597cb9834959d07ceead64a8efd20301c15c1a23f656711649898",
          "md5": "29c32c19c5737f0043472f2e89447fcc",
          "sha256": "d4eecf38e1a17ef46caa1c2c8495051064a212b0c53e33788e420ad9fc2a1433"
        },
        "downloads": -1,
        "filename": "alice_blue-2.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29c32c19c5737f0043472f2e89447fcc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 34703,
        "upload_time": "2022-09-09T12:43:36",
        "upload_time_iso_8601": "2022-09-09T12:43:36.675967Z",
        "url": "https://files.pythonhosted.org/packages/f5/8a/5c7235c597cb9834959d07ceead64a8efd20301c15c1a23f656711649898/alice_blue-2.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb1ec55cec9e3f127dceb87367a81347bd15621c91aa7729ff28b4d95e492177",
          "md5": "8eea3c8d33b2f91ae79f6cad5ff343fc",
          "sha256": "1178ca62f7b5f7976cb5e7ddb3b338b15baf124713c16f903b06b523a5a0e5e8"
        },
        "downloads": -1,
        "filename": "alice_blue-2.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8eea3c8d33b2f91ae79f6cad5ff343fc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 34686,
        "upload_time": "2022-09-17T14:26:10",
        "upload_time_iso_8601": "2022-09-17T14:26:10.893670Z",
        "url": "https://files.pythonhosted.org/packages/eb/1e/c55cec9e3f127dceb87367a81347bd15621c91aa7729ff28b4d95e492177/alice_blue-2.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53aac7a2619578b9d6a79c3aa2cf1499e384ba7723b387f475d841a7569b6c50",
          "md5": "a0c3c6cad74e354dcea59482cd7e8cfd",
          "sha256": "48337410f34fc4ab9d0ca4c2d30f20eed109a97dff40b591b3bbf2a1797d02b9"
        },
        "downloads": -1,
        "filename": "alice_blue-2.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a0c3c6cad74e354dcea59482cd7e8cfd",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 34664,
        "upload_time": "2022-09-21T01:20:06",
        "upload_time_iso_8601": "2022-09-21T01:20:06.940848Z",
        "url": "https://files.pythonhosted.org/packages/53/aa/c7a2619578b9d6a79c3aa2cf1499e384ba7723b387f475d841a7569b6c50/alice_blue-2.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ebbbff0f5a71e64e80c8a8054387e6661a261e7d95117e1bb6672546a29a79c",
          "md5": "fe7e54adfc9a40901e07654eafd59775",
          "sha256": "b88f7934d6ced54505c5fd51645857f2e751cd53f9c7c622181b9dad0b009a4a"
        },
        "downloads": -1,
        "filename": "alice_blue-2.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe7e54adfc9a40901e07654eafd59775",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 35039,
        "upload_time": "2022-10-08T15:57:52",
        "upload_time_iso_8601": "2022-10-08T15:57:52.198020Z",
        "url": "https://files.pythonhosted.org/packages/9e/bb/bff0f5a71e64e80c8a8054387e6661a261e7d95117e1bb6672546a29a79c/alice_blue-2.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ebbbff0f5a71e64e80c8a8054387e6661a261e7d95117e1bb6672546a29a79c",
        "md5": "fe7e54adfc9a40901e07654eafd59775",
        "sha256": "b88f7934d6ced54505c5fd51645857f2e751cd53f9c7c622181b9dad0b009a4a"
      },
      "downloads": -1,
      "filename": "alice_blue-2.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fe7e54adfc9a40901e07654eafd59775",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 35039,
      "upload_time": "2022-10-08T15:57:52",
      "upload_time_iso_8601": "2022-10-08T15:57:52.198020Z",
      "url": "https://files.pythonhosted.org/packages/9e/bb/bff0f5a71e64e80c8a8054387e6661a261e7d95117e1bb6672546a29a79c/alice_blue-2.0.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}