{
  "info": {
    "author": "Sam Jarrett",
    "author_email": "sam@samjarrett.com.au",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pipegen\n\n<div align=\"center\">\n  <img height=\"150px\" src=\"docs/pipe.png\" alt=\"A pixelated pipe\">\n</div>\n\nA CodePipeline/CodeBuild CI/CD Pipeline creator + deployer.\n\n## Installation\n\nInstall using pip/pypi:\n\n```bash\npip install pipegen\n```\n\n## Usage\n\nDeploying your pipeline with pipegen:\n\n```bash\npipegen deploy --config CONFIG_FILE --stack-name NAME_OF_STACK [--var KEY=VALUE [--var KEY=VALUE]]\n```\n\nTo output compiled configuration:\n\n```bash\npipegen dump config --config CONFIG_FILE [--var KEY=VALUE [--var KEY=VALUE]]\n```\n\nTo output compiled CloudFormation template:\n\n```bash\npipegen dump template --config CONFIG_FILE [--var KEY=VALUE [--var KEY=VALUE]]\n```\n\n## Configuration Schema\n\nThe schema is broken down into several sections:\n\n- Base/shared config used across many of the resources\n- Source configuration\n- Pipeline configuration\n\n### Base Config\n\nBase config is used across multiple resources deployed using `pipegen`, or can be used to override some defaults.\n\nFull schema is documented below, required elements are specified with `(R)`, and defaults are indicated.\n\n```yaml\nconfig:\n  s3_bucket: (R) the name of a S3 bucket to store artifacts in (source copies, \n             codebuild artifacts, etc)\n  kms_key_arn: (R) the ARN of a KMS key to encrypt all resources with\n\n  codepipeline:\n    restart_execution_on_update: whether or not to restart an in-progress \n                                 CodePipeline execution if the pipeline is \n                                 updated (default: false)\n\n  codebuild:\n    compute_type: the default compute type to use (default: BUILD_GENERAL1_SMALL)\n    image: the default docker image to use \n           (default: aws/codebuild/amazonlinux2-x86_64-standard:3.0)\n    log_group: \n      enabled: whether or not to enable CloudWatch logs for CodeBuild \n               projects (default: true)\n      create: whether or not to create the CloudWatch log group (default: true). \n              Disable if you have created the log group externally.\n      name: the name of the CloudWatch log group for the pipeline \n            (default: random generated name based on the stack name)\n      retention: A number in days to retain logs (default: null, logs are retained \n                 indefinitely)\n  iam: a list of IAM statements to add to the CodeBuild role (default: null). \n       Use if your CodeBuild projects need to manipulate AWS resources\n```\n\n#### IAM Examples\n\nBy default, `pipegen` configures CodeBuild with the minimal amount of permissions in order to run, decrypt your artifacts from KMS, pull images from ECR (if configured), write logs to CloudWatch logs (if configured).  If you require additional IAM permissions, you can specify them using the following syntax:\n\n```yaml\nconfig:\n  iam:\n    - standard IAM statement\n```\n\nFor example, adding permissions to upload files to S3 in your build:\n\n```yaml\nconfig:\n  iam:\n    - Effect: Allow\n      Action:\n        - s3:PutObject\n      Resource: \n        - my-bucket-name/*\n```\n\n### Source configuration\n\nSource configuration defines where your project's code comes from. \n\nTwo top-level options are supported currently:\n1. [CodeCommit](https://aws.amazon.com/codecommit/), AWS' hosted git service\n2. CodeStar Connections, to use Github.com, GitHub Enterprise (GHE), or BitBucket\n\nPipelines can use multiple source repositories mixed from either provider. \n\n#### CodeCommit\n\nThe following describes source configuration for using CodeCommit.\n\nFull schema is documented below, required elements are specified with `(R)`, and defaults are indicated.\n\n```yaml\nsources:\n  - name: (R) a unique name for this source entry\n    from: (R) the provider to use. use `CodeCommit` for CodeCommit\n    repository: (R) the name of the repository\n    branch: (R) the branch to build from\n    poll_for_source_changes: whether CodePipeline should poll for updates (default: false)\n    event_for_source_changes: whether to use CloudWatch events/EventBridge to \n                              detect updates (default: true)\n```\n\nNote: if you want the pipeline to trigger a build when the repository is pushed to, either `poll_for_source_changes` or `event_for_source_changes` should be set to `true` (`event_for_source_changes` is preferred).\n\n#### CodeStar Connections\n\nThe following describes source configuration for using CodeStar Connections to get your source from Github.com, GHE or BitBucket.\n\nIn order to use CodeStar connections, you must have configurared a connection separately and prior to deploying the pipeline stack. \n\nFull schema is documented below, required elements are specified with `(R)`, and defaults are indicated.\n\n```yaml\nsources:\n  - name: (R) a unique name for this source entry\n    from: (R) the provider to use. use `CodeCommit` for CodeCommit\n    repository: (R) the name of the repository\n    branch: (R) the branch to build from\n    connection_arn: (R) the codestar connection ARN to use to pull changes through\n```\n\n### Pipeline configuration\n\nThe following describes the pipeline's build configuration.\n\nFull schema is documented below, required elements are specified with `(R)`, and defaults are indicated.\n\n```yaml\nstages:\n  - name: (R) a unique name for this deploy stage, e.g. \"Build\", \"Deploy\", etc\n    enabled: whether or not this stage is enabled (default: true)\n    actions:\n      - name: (R) a unique name for this action, e.g. \"Build\", \"DeployToStaging\", \n              \"DeleteProduction\", etc\n        provider: the provider to use to perform the action, \n                  allowed values: CodeBuild (default: CodeBuild). \n                  Note: list may be extended in future\n        buildspec: a path to a CodeBuild buildspec YAML file from your first \n                   repository's root directory\n        commands: a list of commands to run as part of your buildspec\n        artifacts: a list of file path artifacts to store after your build\n        compute_type: the compute type to use (default: config.codebuild.compute_type's value)\n        image: the docker image to use (default: config.codebuild.image's value)\n        environment: a hash of \"key: value\" variables to provide to the build\n        input_artifacts: a list of other build actions `Name` fields, who's artifacts \n                         to bring in to your build\n```\n\n#### BuildSpec / Commands / Artifacts\n\nWhen using CodeBuild, you can either:\n- not specify `buildspec`, `commands`, or `artifacts` fields, which will default to using `buildspec.yml` in the primary source's root directory for build instructions,\n- provide a `buildspec` field, to specify a file in your repository that contains build instructions,\n- provide `commands` (and `artifacts` if needed) for pipegen to generate a buildspec for you inline.\n\nThe template reference for a CodeBuild buildspec can be found here: https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html. If you specify `commands`, pipegen uses buildspec v0.2 to generate a buildspec inline.\n\n#### Environment Variables\n\nBy default, pipegen provides two environment variables to your build project:\n`AWS_DEFAULT_REGION` and `AWS_REGION`, both are set to the AWS region that you deploy to (CloudFormation equivalent to `AWS::Region`). Either of these can be overridden by specifying those keys with alternative values.\n\nYou can provide additional environment variables as needed using the following syntax:\n\n```yaml\nenvironment:\n  KEY: VALUE\n  MY_VARIABLE: my value\n```\n\n#### Input Artifacts\n\nEvery CodeBuild project that pipegen configures will have all sources configured added as inputs, meaning that each build will have access to each repository. \n\nIf you are building using a \"build then deploy\" pattern, you may want to pass build artifacts through to deployment stages. You can achieve this with a syntax similar to the following:\n\n```yaml\nstages:\n  - name: Build\n    actions:\n      - name: MyBuildStep\n  - name: Deploy\n    actions:\n      - name: Deploy\n        commmands:\n          - bin/deploy\n        input_artifacts:\n          - MyBuildStep # << Note that this matches the action name above\n```\n\n### Variables and Imports\n\n`pipegen` supports two special syntaxes for most configuration entries. \n\n#### Variables\n\nAny `--var key=name` passed to the CLI can be used inside your configuration file, to vary behaviour at runtime using a syntax like `{{vars.KEY}}`. This is commonly used to vary things like the branch used. For example:\n\n`config.yml`:\n```yaml\nsources:\n  - name: Source\n    from: CodeCommit\n    repository: my-repo\n    branch: {{vars.BranchName}}\n```\n\n`pipegen cli`:\n```bash\npipegen deploy --var BranchName=main ...\n```\n\nFurther, as configuration for pipegen is evaluated using jinja2, you can use variables to determine other values. Commonly this can be used to enable/disable stages based on branch (e.g. only running a production deploy for the `main` branch).\n\n```yaml\nstages:\n  - name: Production\n    enabled: {{vars.BranchName == \"main\"}}\n```\n\n#### Imports\n\n`pipegen` supports importing values from [CloudFormation exports](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html) using syntax like `import:ImportName`. \n\nExample:\n\n```yaml\nconfig:\n  s3_bucket: import:S3BucketName\n  kms_key_arn: import:KmsKeyArn\n```\n\n### Example configuration\n\n#### Building from CodeCommit\n\n```yaml\n---\nconfig:\n  s3_bucket: my-s3-bucket\n  kms_key_arn: arn:aws:kms:REGION:ACCOUNT:key/KEY-ID\n\nsources:\n  - name: Source\n    from: CodeCommit\n    repository: my-repo\n    branch: {{vars.BranchName}}\n\nstages:\n  - name: Build\n    actions:\n      - name: Build\n        provider: CodeBuild\n        buildspec: buildspecs/build.yml\n  - name: DevDeploy\n    actions:\n      - name: Deploy\n        provider: CodeBuild\n        buildspec: buildspecs/deploy.yml\n        environment:\n          TARGET_ENVIRONMENT: dev\n        input_artifacts:\n          - Build\n  - name: ProdDeploy\n    enabled: {{vars.BranchName == \"main\"}}\n    actions:\n      - name: ProdDeploy\n        provider: CodeBuild\n        buildspec: buildspecs/deploy.yml\n        environment:\n          TARGET_ENVIRONMENT: prod\n        input_artifacts:\n          - Build\n```\n\n#### Building from CodeStar/Github.com\n\n```yaml\n---\nconfig:\n  s3_bucket: import:S3BucketName\n  kms_key_arn: import:KMSKeyArn\n  codebuild:\n    log_group:\n      retention: 7 # (days)\n\nsources:\n  - name: codebuild-test\n    from: CodeStarConnection\n    repository: samjarrett/codebuild-test\n    branch: main\n    connection_arn: arn:aws:codestar-connections:REGION:ACCOUNT:connection/CONNECTION-ID\n\nstages:\n  - name: Build\n    actions:\n      - name: Build\n        provider: CodeBuild\n        commands: \n          - make build\n        artifacts:\n          - build/*\n  - name: Deploy\n    actions:\n      - name: Deploy\n        provider: CodeBuild\n        commands:\n          - make deploy\n        input_artifacts:\n          - Build\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pipegen",
    "package_url": "https://pypi.org/project/pipegen/",
    "platform": null,
    "project_url": "https://pypi.org/project/pipegen/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pipegen/0.5.0/",
    "requires_dist": [
      "cfn-sync (>=0.0.9)",
      "boto3",
      "strictyaml",
      "jinja2 (>=2.0.0)",
      "click (>=7.0.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "CodePipeline Generator",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16615614,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a3b95fcddda884960631ceebdbc3b939dc9bba3342f0be46773a63e3fb81e67",
          "md5": "04169e736039db6cfcbee06765f980f5",
          "sha256": "6ab9df5b9cc521b419d7002067e39c7e519488b1507ba03ff72f566b611e2060"
        },
        "downloads": -1,
        "filename": "pipegen-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04169e736039db6cfcbee06765f980f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10672,
        "upload_time": "2021-03-12T06:01:26",
        "upload_time_iso_8601": "2021-03-12T06:01:26.917766Z",
        "url": "https://files.pythonhosted.org/packages/0a/3b/95fcddda884960631ceebdbc3b939dc9bba3342f0be46773a63e3fb81e67/pipegen-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "646449e6d9b0301fda0dcdff6edefdb1c82dc005b936818e735d6d504ebc1131",
          "md5": "ae3c92c87b0816bdb5a4591ef2ad19e7",
          "sha256": "d2c01d9c195071da79418bd2420d919205cb978019ca78e22f74aef0fe064b85"
        },
        "downloads": -1,
        "filename": "pipegen-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ae3c92c87b0816bdb5a4591ef2ad19e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12865,
        "upload_time": "2021-03-12T06:01:27",
        "upload_time_iso_8601": "2021-03-12T06:01:27.904949Z",
        "url": "https://files.pythonhosted.org/packages/64/64/49e6d9b0301fda0dcdff6edefdb1c82dc005b936818e735d6d504ebc1131/pipegen-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40d5555c33146ed4d457f1e4caec57b5060f786f97be4e930887df0cde2a1a04",
          "md5": "810393043e8cfe7162eb688443d1f373",
          "sha256": "e6e1805e1490955e54fbecc00473a0816097b2a672e75e2b209c0fe2608c5af2"
        },
        "downloads": -1,
        "filename": "pipegen-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "810393043e8cfe7162eb688443d1f373",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11351,
        "upload_time": "2021-03-23T11:39:47",
        "upload_time_iso_8601": "2021-03-23T11:39:47.239607Z",
        "url": "https://files.pythonhosted.org/packages/40/d5/555c33146ed4d457f1e4caec57b5060f786f97be4e930887df0cde2a1a04/pipegen-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49ebbe2efd54d3d617262cc973e610f3487c9e53f53a08c8609fe6a562aa43b5",
          "md5": "cf86f13216a7e36ecc458213d651584e",
          "sha256": "7cbf18358f331b63574e549f6b76ac30261703b4d77b73ad8d60b2004e05424c"
        },
        "downloads": -1,
        "filename": "pipegen-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cf86f13216a7e36ecc458213d651584e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14485,
        "upload_time": "2021-03-23T11:39:47",
        "upload_time_iso_8601": "2021-03-23T11:39:47.949843Z",
        "url": "https://files.pythonhosted.org/packages/49/eb/be2efd54d3d617262cc973e610f3487c9e53f53a08c8609fe6a562aa43b5/pipegen-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a11cd9e1e1f56bff1e290d4a1c39dba9dd462c903ec042e9db9e36f7ca7df02f",
          "md5": "60a33da58a93fdcaf09aabdc7300143c",
          "sha256": "af57c59d60d9f0d3ae8849ee2b73f10697067944ca6b2f2b29eb6c68facac316"
        },
        "downloads": -1,
        "filename": "pipegen-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60a33da58a93fdcaf09aabdc7300143c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14956,
        "upload_time": "2021-04-27T11:19:07",
        "upload_time_iso_8601": "2021-04-27T11:19:07.478927Z",
        "url": "https://files.pythonhosted.org/packages/a1/1c/d9e1e1f56bff1e290d4a1c39dba9dd462c903ec042e9db9e36f7ca7df02f/pipegen-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a830a837a698792348594970410f8fdfe245205ccb0752a9b92b0a92960e69e5",
          "md5": "e7dc3f732fd511e25e6daa67be870049",
          "sha256": "d6cb13eb27313a1b40a31fecfe45c42eafecd8d12b196e80f6949eb6b588b07e"
        },
        "downloads": -1,
        "filename": "pipegen-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e7dc3f732fd511e25e6daa67be870049",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18334,
        "upload_time": "2021-04-27T11:19:08",
        "upload_time_iso_8601": "2021-04-27T11:19:08.487761Z",
        "url": "https://files.pythonhosted.org/packages/a8/30/a837a698792348594970410f8fdfe245205ccb0752a9b92b0a92960e69e5/pipegen-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ae1ea23e30accaf3067faadd147f22efe5a43c69c60b56efc079e9809f8dccd",
          "md5": "b4f87b7f7018b704b70f5f75a619f604",
          "sha256": "511250c6c55dc5b083375bc22f1dc28778b62b03a0f18f95eb50b49e69470804"
        },
        "downloads": -1,
        "filename": "pipegen-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4f87b7f7018b704b70f5f75a619f604",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18386,
        "upload_time": "2022-03-01T07:18:41",
        "upload_time_iso_8601": "2022-03-01T07:18:41.813853Z",
        "url": "https://files.pythonhosted.org/packages/0a/e1/ea23e30accaf3067faadd147f22efe5a43c69c60b56efc079e9809f8dccd/pipegen-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d090c1deba63425776f76d2dee0568e116f89b3b036f51382263c104b0b52363",
          "md5": "67cacef58eeebc08b355b10aad844588",
          "sha256": "efabae5ca813ef4031afd1df7e906352a377367a720a313f9e3f60bc04eba5cd"
        },
        "downloads": -1,
        "filename": "pipegen-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "67cacef58eeebc08b355b10aad844588",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24716,
        "upload_time": "2022-03-01T07:18:43",
        "upload_time_iso_8601": "2022-03-01T07:18:43.327142Z",
        "url": "https://files.pythonhosted.org/packages/d0/90/c1deba63425776f76d2dee0568e116f89b3b036f51382263c104b0b52363/pipegen-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "335ae5cada44ce5aabf3eb92124ba38706841d30236e5090cd75af5b4abc3c59",
          "md5": "d7ec4a4d0b9dbb8d642a73605c4e937e",
          "sha256": "9fa3a09d1af4088a8cb9dc8eea2050a3475ef448a3033a29249a75804fce59d3"
        },
        "downloads": -1,
        "filename": "pipegen-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7ec4a4d0b9dbb8d642a73605c4e937e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18647,
        "upload_time": "2022-03-01T07:50:31",
        "upload_time_iso_8601": "2022-03-01T07:50:31.779461Z",
        "url": "https://files.pythonhosted.org/packages/33/5a/e5cada44ce5aabf3eb92124ba38706841d30236e5090cd75af5b4abc3c59/pipegen-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "666e844bd14ff6261c8c5eed694a582c645bfdc1d7074b099f0caaf59abc683a",
          "md5": "a87b9552b07f872fc00e1e3926024f66",
          "sha256": "36690f844038986187997ebb24157534fe8c580f114253a866431c42a8a2264b"
        },
        "downloads": -1,
        "filename": "pipegen-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a87b9552b07f872fc00e1e3926024f66",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25009,
        "upload_time": "2022-03-01T07:50:33",
        "upload_time_iso_8601": "2022-03-01T07:50:33.398340Z",
        "url": "https://files.pythonhosted.org/packages/66/6e/844bd14ff6261c8c5eed694a582c645bfdc1d7074b099f0caaf59abc683a/pipegen-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a28e0a46b2236698d8d4847978855a12684ef42382fc47ad3f7adb0c0e761da7",
          "md5": "4ba13a7c524e79a226a22de95abeb15e",
          "sha256": "8b5d1551a9aedb8f08cc69899762319c156623c1ac1c809ba49a4c0b23bd253f"
        },
        "downloads": -1,
        "filename": "pipegen-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ba13a7c524e79a226a22de95abeb15e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 18630,
        "upload_time": "2023-01-30T07:02:19",
        "upload_time_iso_8601": "2023-01-30T07:02:19.817532Z",
        "url": "https://files.pythonhosted.org/packages/a2/8e/0a46b2236698d8d4847978855a12684ef42382fc47ad3f7adb0c0e761da7/pipegen-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a6bd266522192d33a9ce8a0e65191b7659d7f272dd68a5133493a5f0db31351",
          "md5": "f150825b63b2cac83d88bef20d1c5245",
          "sha256": "28011f7aed0c0c7c7d59824d4af140c8829f070a9b2d03c50a0c60088be849b5"
        },
        "downloads": -1,
        "filename": "pipegen-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f150825b63b2cac83d88bef20d1c5245",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 25094,
        "upload_time": "2023-01-30T07:02:21",
        "upload_time_iso_8601": "2023-01-30T07:02:21.601774Z",
        "url": "https://files.pythonhosted.org/packages/9a/6b/d266522192d33a9ce8a0e65191b7659d7f272dd68a5133493a5f0db31351/pipegen-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a28e0a46b2236698d8d4847978855a12684ef42382fc47ad3f7adb0c0e761da7",
        "md5": "4ba13a7c524e79a226a22de95abeb15e",
        "sha256": "8b5d1551a9aedb8f08cc69899762319c156623c1ac1c809ba49a4c0b23bd253f"
      },
      "downloads": -1,
      "filename": "pipegen-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4ba13a7c524e79a226a22de95abeb15e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 18630,
      "upload_time": "2023-01-30T07:02:19",
      "upload_time_iso_8601": "2023-01-30T07:02:19.817532Z",
      "url": "https://files.pythonhosted.org/packages/a2/8e/0a46b2236698d8d4847978855a12684ef42382fc47ad3f7adb0c0e761da7/pipegen-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a6bd266522192d33a9ce8a0e65191b7659d7f272dd68a5133493a5f0db31351",
        "md5": "f150825b63b2cac83d88bef20d1c5245",
        "sha256": "28011f7aed0c0c7c7d59824d4af140c8829f070a9b2d03c50a0c60088be849b5"
      },
      "downloads": -1,
      "filename": "pipegen-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f150825b63b2cac83d88bef20d1c5245",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 25094,
      "upload_time": "2023-01-30T07:02:21",
      "upload_time_iso_8601": "2023-01-30T07:02:21.601774Z",
      "url": "https://files.pythonhosted.org/packages/9a/6b/d266522192d33a9ce8a0e65191b7659d7f272dd68a5133493a5f0db31351/pipegen-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}