{
  "info": {
    "author": "Alex Yang",
    "author_email": "aleozlx@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: Apache Software License",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# docker-playbook\n\nYAML driven (nvidia) docker playbook\n\n## Requirements\n\n* Python3.x\n* Nvidia-docker2 (Make sure you can `nvidia-smi` and `docker images`)\n* PyYAML>=3.12 (both host and docker image)\n\n> Template Dockerfile is provided at the bottom, which is optional     \n> though recommended because of its **security enhancements** and **useful features**.\n\n## Usage example\n\n```\n./playbook.py sample.yml\n```\n\n**Features**\n\n* Runs with `nvidia-docker2` mostly in non-interactive mode (so if your script waits for input by accident, it gets signal and dies)\n* Runs (whitelisted) steps in sequential manner\n* Context deduction: each step can run in different docker images or host\n* Full access to host network services in non-interactive mode\n* Simple step function siginature `step_blah(ctx)` - easy to extend\n* Minimal command line arguments `./playbook.py some.yml` is all you do\n* Single source file & low dependency (only PyYAML is not in standard library, replacable but strongly recommend)\n* Colorful logging for readability\n\n## How to add steps?\n\n1. Copy `library.steps` module from this repository to start developing your own `library.steps` module for this script to import.\n2. Add a function `def step_something(ctx)`. Current execution context is in `ctx` as dict. Keys are proxied to attributes to save a lot of brakets and quotes. You may use `logger` to print info.\n```python\ndef step_something(ctx):\n    logger.info(ctx.other_vars)\n```\n3. Whitelist your step in `library.steps.whitlist` without the `step_` prefix.\n4. Add an entry to your YAML file in `steps` where `action` is the step function name without prefix:\n\n```yml\nsteps:\n  - name: Some message here\n    action: something\n    other_vars: goes_to_ctx\n```\n\n## Context deduction rules\n\n```\ndocker overrides > step config > global config > parser defualts > context initialization\n```\n\n## How to specify docker environment?\n\nYou may add a default docker environment.\nAnd use `docker_overrides` to change context variables when docker is in use.\n```yml\ndocker:\n  image: aleozlx/tkstack2:latest\n  runtime: nvidia\n  gui: False\n  ports:\n    - 6006:6006\n  volumes:\n    - /tmp:/workspace/build\n    - /mnt/datasets:/workspace/datasets\n  docker_overrides:\n    storage: /workspace/datasets\nsteps:\n  - name: Some message here\n    action: something\n    storage: /mnt/datasets\n```\n\nOr override the docker environment completely per step\n```yml\ndocker:\n  # ...\nsteps:\n  - name: Some message here\n    action: something\n    storage: /mnt/datasets\n    docker:\n      image: aleozlx/tkstack2:latest\n      runtime: nvidia\n      volumes:\n        - /tmp:/workspace/build\n    docker_overrides:\n        storage: /workspace/datasets\n```\n\nOr use the host\n```yml\ndocker:\n  # ...\nsteps:\n  - name: Some message here\n    action: something\n    storage: /mnt/datasets\n    docker: null\n```\n\n> Note: When a docker environment is present, the playbook starts docker accordingly and resumes itself inside docker to reuse many of the playbooks' features, so that context deduction and logging have consistent behavior. (To do that, you code containing the playbook will have to be mounted read-only. This is automatic.) That's why PyYAML is also required inside your docker image. Consider you are keeping the full operationalizing mechanism with a silght dependency constraint.\n\n## Security assumptions (or gotchas)\n\n> **Host file system**: volumes specified in your playbook will be mounted RW. Although your code will be mounted RO automatically. Playbook assumes that you use a docker image that uses non-root user (like recommended) whose uid:gid **hopefully** maps to you on host system.\n\n> **Network**: network services inside docker are **not isolated** from host in non-interactive mode to provide **convenient access** to host databases etc. Playbook assumes whatever you are operationalizing is trusted and that your host should have a proper set of INPUT rules, and that services inside docker should be protected by an independent firewall if necessary.\n\n> **X11**: the recommended docker image does intend to provide isolated X11 access by creating non-root user that **presumably** maps to you on host and your X authentication files are natually mounted with proper permissions already in place. But the uid in that image is just a guess so on a host shared by many users, this is probably no good if it even works. (Docker image needs to be build in a better way)\n\n> **Playbook itself**: the playbook itself is obviously a very capable shell program. It has execute permission by default for convenience (not necessarily good idea). It is based on a simple whitelist to allow any actions to be executed. The docker shell provided shouldn't be able to be spawned on host. But all these are best-effort, no promises.\n\nAt the end of day, this is an under-2^7-line script that is supposed to just drive other things and make them work. Composition over inheritance principle makes things simpler and useful.\n\n## Template Dockerfile\n\nhttps://gitlab-p01.cgi.missouri.edu/ExternalUsers/AlexYang_Fun/tkstack2/blob/master/src/Dockerfile\n\n**Features**\n\n* Non-root with passwordless sudo\n* Low maintenance: base image is `tensorflow/tensorflow:1.8.0-devel-gpu-py3`\n* Numpy + Scipy linked against libblas + liblapack\n* Isolated X11 GUI support\n* Details at https://gitlab-p01.cgi.missouri.edu/ExternalUsers/AlexYang_Fun/tkstack2\n\n## License\n\nLicensed under either of\n\n * Apache License, Version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0)\n * MIT license ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)\n\nat your option.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "docker-playbook",
    "package_url": "https://pypi.org/project/docker-playbook/",
    "platform": "",
    "project_url": "https://pypi.org/project/docker-playbook/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/docker-playbook/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "YAML driven docker playbook",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4413416,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7190a34f496fd6ebc9311a3da466137626cff77f3a7bbf29edad1457728f5ef",
          "md5": "93e7bd3771f7aa5bad1f68cd36ccc122",
          "sha256": "7999c0049aab98683d682cf3558d8fb5877774265ff70284c06fc4b69f8f78a3"
        },
        "downloads": -1,
        "filename": "docker_playbook-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93e7bd3771f7aa5bad1f68cd36ccc122",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8797,
        "upload_time": "2018-10-25T02:44:28",
        "upload_time_iso_8601": "2018-10-25T02:44:28.823378Z",
        "url": "https://files.pythonhosted.org/packages/e7/19/0a34f496fd6ebc9311a3da466137626cff77f3a7bbf29edad1457728f5ef/docker_playbook-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7b901156cdf1bd0c97fe1a905a43479fc94f8622dbbadfe03ac24db32ba96c6",
          "md5": "efed7cac6d546b028b46f41a68339d8d",
          "sha256": "84adbfe902f184002dca7834ce680a15f71aa6f8e2f00105d2defa61978277bc"
        },
        "downloads": -1,
        "filename": "docker-playbook-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "efed7cac6d546b028b46f41a68339d8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3881,
        "upload_time": "2018-10-25T02:44:30",
        "upload_time_iso_8601": "2018-10-25T02:44:30.103362Z",
        "url": "https://files.pythonhosted.org/packages/d7/b9/01156cdf1bd0c97fe1a905a43479fc94f8622dbbadfe03ac24db32ba96c6/docker-playbook-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7190a34f496fd6ebc9311a3da466137626cff77f3a7bbf29edad1457728f5ef",
        "md5": "93e7bd3771f7aa5bad1f68cd36ccc122",
        "sha256": "7999c0049aab98683d682cf3558d8fb5877774265ff70284c06fc4b69f8f78a3"
      },
      "downloads": -1,
      "filename": "docker_playbook-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "93e7bd3771f7aa5bad1f68cd36ccc122",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8797,
      "upload_time": "2018-10-25T02:44:28",
      "upload_time_iso_8601": "2018-10-25T02:44:28.823378Z",
      "url": "https://files.pythonhosted.org/packages/e7/19/0a34f496fd6ebc9311a3da466137626cff77f3a7bbf29edad1457728f5ef/docker_playbook-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7b901156cdf1bd0c97fe1a905a43479fc94f8622dbbadfe03ac24db32ba96c6",
        "md5": "efed7cac6d546b028b46f41a68339d8d",
        "sha256": "84adbfe902f184002dca7834ce680a15f71aa6f8e2f00105d2defa61978277bc"
      },
      "downloads": -1,
      "filename": "docker-playbook-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "efed7cac6d546b028b46f41a68339d8d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3881,
      "upload_time": "2018-10-25T02:44:30",
      "upload_time_iso_8601": "2018-10-25T02:44:30.103362Z",
      "url": "https://files.pythonhosted.org/packages/d7/b9/01156cdf1bd0c97fe1a905a43479fc94f8622dbbadfe03ac24db32ba96c6/docker-playbook-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}