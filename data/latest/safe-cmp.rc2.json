{
  "info": {
    "author": "David Wolever",
    "author_email": "david@wolever.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "``safe_cmp``: safe comparisons (total ordering) for any object in Python 3\n==========================================================================\n\nIn Python 2, it was possible to compare any object::\n\n    >>> None > 2\n    False\n    >>> [] < object()\n    True\n\nBut this is no longer true in Python 3::\n\n    >>> None > 2\n    ...\n    TypeError: '>' not supported between instances of 'NoneType' and 'int'\n    >>> [] < object()\n    ...\n    TypeError: '<' not supported between instances of 'list' and 'object'\n\nBut there are many cases where it is useful to, for example:\n\n* Sort heterogeneous lists (ie, lists that contain many types of object)\n* Compare objects to ``None`` (for example, to find the ``max(...)`` of a list\n  where some items may be ``None``)\n* Write generic functions which will have robust, deterministic behaviour on\n  arbitrary input\n\n``safe_cmp`` provides functions for safely sorting and ordering any value in\nPython 3. In fancy math terms, ``safe_cmp`` implements a total ordering of all\nvalues in Python 3 [1]_.\n\n``safe_cmp`` implements Python 2 compatible safe versions of the ordering\nfunctions:\n\n* ``safe_cmp``: a Python 2 compatible implementation of ``cmp`` for Python 3\n* ``safe_sorted``: a safe version of ``sorted(...)``\n* ``safe_min``: a safe version of ``min(...)``\n* ``safe_max``: a safe version of ``max(...)``\n\nAnd provides a wrapper - ``safe_order`` - which defines a total ordering for\nany object (for example, ``heterogeneous_list.sort(key=safe_order)``).\n\nExamples\n--------\n\nSorting a heterogeneous list:\n\n.. code-block:: python\n\n    >>> from safe_cmp import safe_sorted, safe_order\n    >>> items = [1, None, \"foo\", {}, object]\n    >>> list(safe_sorted(items)) # Using \"safe_sorted\"\n    [None, {}, 1, 'foo', object]\n    >>> items.sort(key=safe_order) # Using \"safe_order\" with key=\n    >>> items\n    [None, {}, 1, 'foo', object]\n\nFinding the max of a list which includes nulls:\n\n.. code-block:: python\n\n    >>> from safe_cmp import safe_max\n    >>> safe_max([1, None, 3, None, 4])\n    4\n\nThe rare situation where Python 2 style ``cmp`` is useful:\n\n.. code-block:: python\n\n    >>> from safe_cmp import safe_cmp\n    >>> safe_cmp(None, 1)\n    -1\n    >>> safe_cmp(None, None)\n    0\n    >>> safe_cmp(1, None)\n    1\n\nNote: ``safe_cmp`` will produce Python 2 compatible results when called with\n``nan``:\n\n.. code-block:: python\n\n    >>> from safe_cmp import safe_cmp\n    >>> nan = float(\"NaN\")\n    >>> safe_cmp(nan, 1)\n    -1\n    >>> safe_cmp(1, nan)\n    1\n    >>> safe_cmp(nan, nan)\n    0\n\nAs will ``safe_sorted``:\n\n.. code-block:: python\n\n    >>> from safe_cmp import safe_sorted\n    >>> list(safe_sorted([nan, 2, nan, 1]))\n    [nan, 2, nan, 1]\n\n\nPerformance\n-----------\n\nCurrently ``safe_cmp`` methods are currently implemented in Python (in contrast\nto their unsafe builtin counterparts, which are implemented in C), so\nperformance will notable worse for large comparisons::\n\n    In [1]: %timeit safe_max(range(10000000))\n    2.8 s ± 42 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n    In [2]: %timeit max(range(10000000))\n    345 ms ± 6.23 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\nFor smaller comparisons, though, the difference will be negligible::\n\n    In [1]: %timeit safe_max(1, 2)\n    682 ns ± 7.12 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)\n\n    In [2]: %timeit max(1, 2)\n    218 ns ± 6.87 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)\n\nIf there is interest in performant implementations, however, they will be\nstraight forward to provide.\n\nAdditionally, where obvious, performance optimizations have been implemented\n(for example, caching the result of ``key=`` functions).\n\n.. [1] More precisely, a total ordering *of all values which can be ordered*.\n   This excludes ``NaN``, and any other values which are defined as having an\n   undefined ordering.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wolever/python-safe_cmp",
    "keywords": "",
    "license": "FreeBSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "safe-cmp",
    "package_url": "https://pypi.org/project/safe-cmp/",
    "platform": "",
    "project_url": "https://pypi.org/project/safe-cmp/",
    "project_urls": {
      "Homepage": "https://github.com/wolever/python-safe_cmp"
    },
    "release_url": "https://pypi.org/project/safe-cmp/0.1.1/",
    "requires_dist": [
      "parameterized ; extra == 'dev'",
      "nose ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Safe comparisons (total ordering) for any object in Python 3",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7314023,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5edd2f8335e70a432c1f66982467fc7ecd8ffb94aa8decdf4352539667ca7536",
          "md5": "81197a7cf30cb32839f7a7bc9c25d265",
          "sha256": "c69a1f63121514bf62fc6b3df9b77bc7cdb8bfc3900fa0783e82482f0ae7176c"
        },
        "downloads": -1,
        "filename": "safe_cmp-0.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "81197a7cf30cb32839f7a7bc9c25d265",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "requires_python": null,
        "size": 2784,
        "upload_time": "2020-05-23T00:45:49",
        "upload_time_iso_8601": "2020-05-23T00:45:49.317780Z",
        "url": "https://files.pythonhosted.org/packages/5e/dd/2f8335e70a432c1f66982467fc7ecd8ffb94aa8decdf4352539667ca7536/safe_cmp-0.1.0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75e50c60ac672f64c3b415d266ebc656dfe2f77cafe4bd52d1b27a555d096adb",
          "md5": "139014dddab279a62e0af2696ffdc3e0",
          "sha256": "e236a340512c1d45c2bcdb4bb57d9c8923a1574b965637d8c9e0bbbee1b5aa16"
        },
        "downloads": -1,
        "filename": "safe_cmp-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "139014dddab279a62e0af2696ffdc3e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4937,
        "upload_time": "2020-05-23T00:45:47",
        "upload_time_iso_8601": "2020-05-23T00:45:47.191728Z",
        "url": "https://files.pythonhosted.org/packages/75/e5/0c60ac672f64c3b415d266ebc656dfe2f77cafe4bd52d1b27a555d096adb/safe_cmp-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c752e781123e11431bf99ad2fbf42f8c685e07545f9a610d8756092de9f94e0",
          "md5": "35144d1235dde17e2e8165d937d91f8e",
          "sha256": "0d38f011f25f6434ac453a6bdd1958b0da71181da49bfdfda356e6e5865d8579"
        },
        "downloads": -1,
        "filename": "safe_cmp-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35144d1235dde17e2e8165d937d91f8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5244,
        "upload_time": "2020-05-24T16:20:32",
        "upload_time_iso_8601": "2020-05-24T16:20:32.392223Z",
        "url": "https://files.pythonhosted.org/packages/0c/75/2e781123e11431bf99ad2fbf42f8c685e07545f9a610d8756092de9f94e0/safe_cmp-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "529ec9ad3a175e8b14825a7eb2be4739650669dfcd99c931217ab3401290361a",
          "md5": "bdc5ec0ef5ff1f97ac418d64fb5626da",
          "sha256": "dd0f984fb9ac4ae95b0d608e8d78801780fdcac432878841b31e27ec93e58114"
        },
        "downloads": -1,
        "filename": "safe_cmp-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bdc5ec0ef5ff1f97ac418d64fb5626da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5297,
        "upload_time": "2020-05-24T16:20:33",
        "upload_time_iso_8601": "2020-05-24T16:20:33.645500Z",
        "url": "https://files.pythonhosted.org/packages/52/9e/c9ad3a175e8b14825a7eb2be4739650669dfcd99c931217ab3401290361a/safe_cmp-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c752e781123e11431bf99ad2fbf42f8c685e07545f9a610d8756092de9f94e0",
        "md5": "35144d1235dde17e2e8165d937d91f8e",
        "sha256": "0d38f011f25f6434ac453a6bdd1958b0da71181da49bfdfda356e6e5865d8579"
      },
      "downloads": -1,
      "filename": "safe_cmp-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "35144d1235dde17e2e8165d937d91f8e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5244,
      "upload_time": "2020-05-24T16:20:32",
      "upload_time_iso_8601": "2020-05-24T16:20:32.392223Z",
      "url": "https://files.pythonhosted.org/packages/0c/75/2e781123e11431bf99ad2fbf42f8c685e07545f9a610d8756092de9f94e0/safe_cmp-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "529ec9ad3a175e8b14825a7eb2be4739650669dfcd99c931217ab3401290361a",
        "md5": "bdc5ec0ef5ff1f97ac418d64fb5626da",
        "sha256": "dd0f984fb9ac4ae95b0d608e8d78801780fdcac432878841b31e27ec93e58114"
      },
      "downloads": -1,
      "filename": "safe_cmp-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bdc5ec0ef5ff1f97ac418d64fb5626da",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5297,
      "upload_time": "2020-05-24T16:20:33",
      "upload_time_iso_8601": "2020-05-24T16:20:33.645500Z",
      "url": "https://files.pythonhosted.org/packages/52/9e/c9ad3a175e8b14825a7eb2be4739650669dfcd99c931217ab3401290361a/safe_cmp-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}