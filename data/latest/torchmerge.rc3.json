{
  "info": {
    "author": "Kevin Noel",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": " ``` \n\n Merge mutiple models or embedding into a single one very easily\n in Pytorch.\n\n\n\n\n\n## Usage\n\nhttps://colab.research.google.com/drive/1vOFxEcLQdgCxCCJCkp-mxouTQ1f8F5FX?usp=sharing\n\n\n\n### Example Short:\n\nimport os, random, numpy as np, pandas as pd ;from box import Box\nfrom copy import deepcopy\nimport copy, collections\nimport torch.nn as nn\nimport torchvision\n\n##### only this\nfrom torchmerge import merge as me\n\n\n#############################################################################################\ndef test3d():    \n    from box import Box ; from copy import deepcopy\n    from torch.utils.data import DataLoader, TensorDataset\n    \n\n    ARG = Box({\n        'MODE'   : 'mode1',\n        'DATASET': {},\n        'MODEL_INFO' : {},\n    })\n    PARAMS = {}\n\n \n    ##################################################################\n    if ARG.MODE == 'mode1':\n        ARG.MODEL_INFO.TYPE = 'dataonly' \n        train_config                           = Box({})\n        train_config.LR                        = 0.001\n        train_config.SEED                      = 42\n        train_config.DEVICE                    = 'cpu'\n        train_config.BATCH_SIZE                = 64\n        train_config.EPOCHS                    = 1\n        train_config.EARLY_STOPPING_THLD       = 10\n        train_config.VALID_FREQ                = 1\n        train_config.SAVE_FILENAME             = './model.pt'\n        train_config.TRAIN_RATIO               = 0.7\n        train_config.VAL_RATIO                 = 0.2\n        train_config.TEST_RATIO                = 0.1\n\n\n    ####################################################################\n    def load_DataFrame():\n        return None\n\n\n    def test_dataset_f_mnist(samples=100):\n        from sklearn.model_selection import train_test_split\n        from torchvision import transforms, datasets\n        # Generate the transformations\n        train_list_transforms = [transforms.ToTensor(),transforms.Lambda(lambda x: x.repeat(3, 1, 1))]\n\n        dataset1 = datasets.FashionMNIST(root=\"data\",train=True,\n                                         transform=transforms.Compose(train_list_transforms),download=True,)\n        \n        #sampling the requred no. of samples from dataset \n        dataset1 = torch.utils.data.Subset(dataset1, np.arange(samples))\n        X,Y    = [],  []\n        for data, targets in dataset1:\n            X.append(data)\n            Y.append(targets)\n\n        #Converting list to tensor format\n        X,y = torch.stack(X),torch.Tensor(Y)\n\n        train_r, test_r, val_r  = train_config.TRAIN_RATIO, train_config.TEST_RATIO,train_config.VAL_RATIO\n        train_X, test_X, train_y, test_y = train_test_split(X,  y,  test_size=1 - train_r)\n        valid_X, test_X, valid_y, test_y = train_test_split(test_X, test_y, test_size= test_r / (test_r + val_r))\n        return (train_X, train_y, valid_X, valid_y, test_X , test_y)\n\n\n    def prepro_dataset(self,df:pd.DataFrame=None):\n        train_X ,train_y,valid_X ,valid_y,test_X, test_y = test_dataset_f_mnist(samples=100)\n        return train_X ,train_y,valid_X ,valid_y,test_X,test_y\n\n\n    \n    ### modelA  ########################################################\n    from torchvision import  models\n    model_ft = models.resnet18(pretrained=True)\n    embA_dim = model_ft.fc.in_features  ###\n\n    ARG.modelA               = {}   \n    ARG.modelA.name          = 'resnet18'\n    ARG.modelA.nn_model      = model_ft\n    ARG.modelA.layer_emb_id  = 'fc'\n    ARG.modelA.architect     = [ embA_dim]  ### head s\n    modelA = me.model_create(ARG.modelA)\n    \n\n\n    ### modelB  ########################################################\n    from torchvision import  models\n    model_ft = models.resnet50(pretrained=True)\n    embB_dim = int(model_ft.fc.in_features)\n\n    ARG.modelB               = {}   \n    ARG.modelB.name          = 'resnet50'\n    ARG.modelB.nn_model      = model_ft\n    ARG.modelB.layer_emb_id  = 'fc'\n    ARG.modelB.architect     = [embB_dim ]   ### head size\n    modelB = me.model_create(ARG.modelB )\n\n\n\n\n    ### merge_model  ###################################################\n    ### EXPLICIT DEPENDENCY  \n    ARG.merge_model           = {}\n    ARG.merge_model.name      = 'modelmerge1'\n\n    ARG.merge_model.architect                  = {}\n    ARG.merge_model.architect.input_dim        =  embA_dim + embB_dim \n\n    ARG.merge_model.architect.merge_type       = 'cat'\n    ARG.merge_model.architect.merge_layers_dim = [1024, 768]  ### Common embedding is 768\n    ARG.merge_model.architect.merge_custom     = None\n\n\n    ### Custom head\n    ARG.merge_model.architect.head_layers_dim  = [ 128, 1]    ### Specific task    \n    ARG.merge_model.architect.head_custom      = None\n  \n  \n    ARG.merge_model.dataset       = {}\n    ARG.merge_model.dataset.dirin = \"/\"\n    ARG.merge_model.dataset.coly = 'ytarget'\n    ARG.merge_model.train_config  = train_config\n\n\n    model = me.MergeModel_create(ARG, model_create_list= [modelA, modelB ] )\n    model.build()\n\n\n\n    #### Run Model   ###################################################\n    model.training(load_DataFrame, prepro_dataset) \n\n    model.save_weight('ztmp/model_x5.pt')\n    model.load_weights('ztmp/model_x5.pt')\n    inputs = torch.randn((train_config.BATCH_SIZE,3,28,28)).to(model.device)\n    outputs = model.predict(inputs)\n    print(outputs)\n\n\n\n\n\n\n\n\n \n\n\n\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "torch",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "torchmerge",
    "package_url": "https://pypi.org/project/torchmerge/",
    "platform": null,
    "project_url": "https://pypi.org/project/torchmerge/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/torchmerge/0.1.16540980/",
    "requires_dist": [
      "utilmy",
      "pyyaml",
      "python-box",
      "fire"
    ],
    "requires_python": ">=3.7.5",
    "summary": "torch",
    "version": "0.1.16540980",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14002227,
  "releases": {
    "0.1.16540949": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab9cfdae13ee2f23a273f065a55770988fd7fa454961d1fe2811e273720c3139",
          "md5": "9a1e6d37506c318acf82241089119417",
          "sha256": "4639f70ae45338a3a42293f96b65e570959eb2ccb4180af7f3c1e6cef39255b4"
        },
        "downloads": -1,
        "filename": "torchmerge-0.1.16540949-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a1e6d37506c318acf82241089119417",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.5",
        "size": 6417,
        "upload_time": "2022-06-01T14:49:01",
        "upload_time_iso_8601": "2022-06-01T14:49:01.210960Z",
        "url": "https://files.pythonhosted.org/packages/ab/9c/fdae13ee2f23a273f065a55770988fd7fa454961d1fe2811e273720c3139/torchmerge-0.1.16540949-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1330e633e2ae7a5e888f95066224e3aab12fd1de298370f98bfdea962af535d5",
          "md5": "30be717e71d31c268810af387028f904",
          "sha256": "20a5c98e07fbc1e58e05331c3dabc55c95c592fe3ad418cc759e75716a494c80"
        },
        "downloads": -1,
        "filename": "torchmerge-0.1.16540949.tar.gz",
        "has_sig": false,
        "md5_digest": "30be717e71d31c268810af387028f904",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.5",
        "size": 7622,
        "upload_time": "2022-06-01T14:49:02",
        "upload_time_iso_8601": "2022-06-01T14:49:02.994866Z",
        "url": "https://files.pythonhosted.org/packages/13/30/e633e2ae7a5e888f95066224e3aab12fd1de298370f98bfdea962af535d5/torchmerge-0.1.16540949.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.16540964": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50287369abb2f6d87f3a5f5d64e36805af3fe1746c292010cbdc1553a59201c3",
          "md5": "b7e74e10dad59a74b3337ddc8259c7b5",
          "sha256": "0dc8594e4a33b6c6620cf37aa637cb42dc1ee855e81641b8f3480e73bd46530c"
        },
        "downloads": -1,
        "filename": "torchmerge-0.1.16540964-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7e74e10dad59a74b3337ddc8259c7b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.5",
        "size": 8022,
        "upload_time": "2022-06-01T15:13:22",
        "upload_time_iso_8601": "2022-06-01T15:13:22.818788Z",
        "url": "https://files.pythonhosted.org/packages/50/28/7369abb2f6d87f3a5f5d64e36805af3fe1746c292010cbdc1553a59201c3/torchmerge-0.1.16540964-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d5f525755b12868355e9893f5d85e31f236638c2ca0ea82e985ca471890912b",
          "md5": "e4ef6453e6fc88e3faad4699661c87cb",
          "sha256": "83b25a90f12262562a0e0a3b7e3771bc860b8942bfc5d17b67bd8556641b214f"
        },
        "downloads": -1,
        "filename": "torchmerge-0.1.16540964.tar.gz",
        "has_sig": false,
        "md5_digest": "e4ef6453e6fc88e3faad4699661c87cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.5",
        "size": 9484,
        "upload_time": "2022-06-01T15:13:23",
        "upload_time_iso_8601": "2022-06-01T15:13:23.920792Z",
        "url": "https://files.pythonhosted.org/packages/3d/5f/525755b12868355e9893f5d85e31f236638c2ca0ea82e985ca471890912b/torchmerge-0.1.16540964.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.16540980": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa2dc190fbec1e8eccc016a0fa361ac35acfc838c3a4e4877e084cf04ef623eb",
          "md5": "1db7d82bbed5066b8ab46add76d00020",
          "sha256": "7027dbd52966554095ed1dfc910ef9720c77186915ab50c8f174364ab91a49da"
        },
        "downloads": -1,
        "filename": "torchmerge-0.1.16540980-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1db7d82bbed5066b8ab46add76d00020",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.5",
        "size": 8044,
        "upload_time": "2022-06-01T15:41:23",
        "upload_time_iso_8601": "2022-06-01T15:41:23.393576Z",
        "url": "https://files.pythonhosted.org/packages/aa/2d/c190fbec1e8eccc016a0fa361ac35acfc838c3a4e4877e084cf04ef623eb/torchmerge-0.1.16540980-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "165e8f04c7fb9138f320285fac18b31191b43a7350e473f13e639bc9d95198c9",
          "md5": "fc95a4eaeadd02a5fd8ef489e788d163",
          "sha256": "66463a58bc357b9eaeec25e7c6e7938b6ec74db29fe05ea25ef2fad254096106"
        },
        "downloads": -1,
        "filename": "torchmerge-0.1.16540980.tar.gz",
        "has_sig": false,
        "md5_digest": "fc95a4eaeadd02a5fd8ef489e788d163",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.5",
        "size": 9490,
        "upload_time": "2022-06-01T15:41:24",
        "upload_time_iso_8601": "2022-06-01T15:41:24.868485Z",
        "url": "https://files.pythonhosted.org/packages/16/5e/8f04c7fb9138f320285fac18b31191b43a7350e473f13e639bc9d95198c9/torchmerge-0.1.16540980.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa2dc190fbec1e8eccc016a0fa361ac35acfc838c3a4e4877e084cf04ef623eb",
        "md5": "1db7d82bbed5066b8ab46add76d00020",
        "sha256": "7027dbd52966554095ed1dfc910ef9720c77186915ab50c8f174364ab91a49da"
      },
      "downloads": -1,
      "filename": "torchmerge-0.1.16540980-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1db7d82bbed5066b8ab46add76d00020",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.5",
      "size": 8044,
      "upload_time": "2022-06-01T15:41:23",
      "upload_time_iso_8601": "2022-06-01T15:41:23.393576Z",
      "url": "https://files.pythonhosted.org/packages/aa/2d/c190fbec1e8eccc016a0fa361ac35acfc838c3a4e4877e084cf04ef623eb/torchmerge-0.1.16540980-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "165e8f04c7fb9138f320285fac18b31191b43a7350e473f13e639bc9d95198c9",
        "md5": "fc95a4eaeadd02a5fd8ef489e788d163",
        "sha256": "66463a58bc357b9eaeec25e7c6e7938b6ec74db29fe05ea25ef2fad254096106"
      },
      "downloads": -1,
      "filename": "torchmerge-0.1.16540980.tar.gz",
      "has_sig": false,
      "md5_digest": "fc95a4eaeadd02a5fd8ef489e788d163",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.5",
      "size": 9490,
      "upload_time": "2022-06-01T15:41:24",
      "upload_time_iso_8601": "2022-06-01T15:41:24.868485Z",
      "url": "https://files.pythonhosted.org/packages/16/5e/8f04c7fb9138f320285fac18b31191b43a7350e473f13e639bc9d95198c9/torchmerge-0.1.16540980.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}