{
  "info": {
    "author": "Alex Gaynor",
    "author_email": "alex.gaynor@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Django Filter EX\n================\n\nDjango-filter is a reusable Django application allowing users to declaratively\nadd dynamic ``QuerySet`` filtering from URL parameters.\n\nFull documentation on `read the docs`_.\n\n.. image:: https://travis-ci.org/carltongibson/django-filter.svg?branch=master\n    :target: https://travis-ci.org/carltongibson/django-filter\n\n.. image:: https://codecov.io/gh/carltongibson/django-filter/branch/develop/graph/badge.svg\n    :target: https://codecov.io/gh/carltongibson/django-filter\n\n.. image:: https://badge.fury.io/py/django-filter.svg\n    :target: http://badge.fury.io/py/django-filter\n\n\nRequirements\n------------\n\n* **Python**: 2.7, 3.6\n* **Django**: 1.11\n* **DRF**: 3.7, 3.8\n\nDjango filter EX is a fork from Django filter 1.1.0 witch contains a small patch to improve performance of \nthe default filterset on chained filters. It passes all the tests and works for my use-case.\n\n\nInstallation\n------------\n\nInstall using pip:\n\n.. code-block:: sh\n\n    pip install django-filter\n\nThen add ``'django_filters'`` to your ``INSTALLED_APPS``.\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        ...\n        'django_filters',\n    ]\n\n\nUsage\n-----\n\nDjango-filter can be used for generating interfaces similar to the Django\nadmin's ``list_filter`` interface.  It has an API very similar to Django's\n``ModelForms``.  For example, if you had a Product model you could have a\nfilterset for it with the code:\n\n.. code-block:: python\n\n    import django_filters\n\n    class ProductFilter(django_filters.FilterSet):\n        class Meta:\n            model = Product\n            fields = ['name', 'price', 'manufacturer']\n\n\nAnd then in your view you could do:\n\n.. code-block:: python\n\n    def product_list(request):\n        filter = ProductFilter(request.GET, queryset=Product.objects.all())\n        return render(request, 'my_app/template.html', {'filter': filter})\n\n\nUsage with Django REST Framework\n--------------------------------\n\nDjango-filter provides a custom ``FilterSet`` and filter backend for use with\nDjango REST Framework.\n\nTo use this adjust your import to use\n``django_filters.rest_framework.FilterSet``.\n\n.. code-block:: python\n\n    from django_filters import rest_framework as filters\n\n    class ProductFilter(filters.FilterSet):\n        class Meta:\n            model = Product\n            fields = ('category', 'in_stock')\n\n\nFor more details see the `DRF integration docs`_.\n\n\nSupport\n-------\n\nIf you have questions about usage or development you can join the\n`mailing list`_.\n\n.. _`read the docs`: https://django-filter.readthedocs.io/en/develop/\n.. _`mailing list`: http://groups.google.com/group/django-filter\n.. _`DRF integration docs`: https://django-filter.readthedocs.io/en/develop/guide/rest_framework.html\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tikal.tech/django-filter/tree/py2-compat",
    "keywords": "",
    "license": "BSD",
    "maintainer": "Tikal Tech",
    "maintainer_email": "bruno@tikal.tech",
    "name": "django-filter-ex",
    "package_url": "https://pypi.org/project/django-filter-ex/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-filter-ex/",
    "project_urls": {
      "Homepage": "https://github.com/tikal.tech/django-filter/tree/py2-compat"
    },
    "release_url": "https://pypi.org/project/django-filter-ex/1.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django-filter is a reusable Django application for allowing users to filter querysets dynamically.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4298432,
  "releases": {
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2a7fed89619ba3f6fc040d83286eff4c998fad3d963f2e2a1e335c82b4090fb",
          "md5": "47682e40ad1586a92de3f548af47676b",
          "sha256": "0600025783c4ae0d2d40d641253527378c09a54627bb839a5684d05fbe44222d"
        },
        "downloads": -1,
        "filename": "django_filter_ex-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47682e40ad1586a92de3f548af47676b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 43952,
        "upload_time": "2018-09-22T00:11:14",
        "upload_time_iso_8601": "2018-09-22T00:11:14.144294Z",
        "url": "https://files.pythonhosted.org/packages/a2/a7/fed89619ba3f6fc040d83286eff4c998fad3d963f2e2a1e335c82b4090fb/django_filter_ex-1.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cd152a84272736a209a28a6aade7ab76a2d67ef396d782500ee062f78ec11aa",
          "md5": "f2da787d22ef487552e4f20e33315708",
          "sha256": "6e609ec5ac145f2ed6687921840cb65c34d1016e7adf5d2c7e17ec758d50cff6"
        },
        "downloads": -1,
        "filename": "django-filter-ex-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f2da787d22ef487552e4f20e33315708",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 110855,
        "upload_time": "2018-09-22T00:11:16",
        "upload_time_iso_8601": "2018-09-22T00:11:16.141455Z",
        "url": "https://files.pythonhosted.org/packages/7c/d1/52a84272736a209a28a6aade7ab76a2d67ef396d782500ee062f78ec11aa/django-filter-ex-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2a7fed89619ba3f6fc040d83286eff4c998fad3d963f2e2a1e335c82b4090fb",
        "md5": "47682e40ad1586a92de3f548af47676b",
        "sha256": "0600025783c4ae0d2d40d641253527378c09a54627bb839a5684d05fbe44222d"
      },
      "downloads": -1,
      "filename": "django_filter_ex-1.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47682e40ad1586a92de3f548af47676b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 43952,
      "upload_time": "2018-09-22T00:11:14",
      "upload_time_iso_8601": "2018-09-22T00:11:14.144294Z",
      "url": "https://files.pythonhosted.org/packages/a2/a7/fed89619ba3f6fc040d83286eff4c998fad3d963f2e2a1e335c82b4090fb/django_filter_ex-1.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7cd152a84272736a209a28a6aade7ab76a2d67ef396d782500ee062f78ec11aa",
        "md5": "f2da787d22ef487552e4f20e33315708",
        "sha256": "6e609ec5ac145f2ed6687921840cb65c34d1016e7adf5d2c7e17ec758d50cff6"
      },
      "downloads": -1,
      "filename": "django-filter-ex-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f2da787d22ef487552e4f20e33315708",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 110855,
      "upload_time": "2018-09-22T00:11:16",
      "upload_time_iso_8601": "2018-09-22T00:11:16.141455Z",
      "url": "https://files.pythonhosted.org/packages/7c/d1/52a84272736a209a28a6aade7ab76a2d67ef396d782500ee062f78ec11aa/django-filter-ex-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}