{
  "info": {
    "author": "Gregory Kuhn",
    "author_email": "gregorykuhn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# r_map\n\n\n\nA library for working with register map data.\n\nThe data source is abstracted such that if a user wants to work with a\n\nparticular data source, he/she may:\n\n\n\n1. Provide an appropriately formatted serialized data source (probably the\n\n   easiest)\n\n2. Create a parser of the source data and dynamically generate the data\n\n   structure using the provided data classes\n\n\n\n## Purpose\n\n\n\n1. Easily utilize register map data\n\n2. Be able to iterate through register map from arbitrary position\n\n3. Provide conveniences for walking through data\n\n4. Provide ability to serialize/deserialize data\n\n5. Provide mechanism to easily subclass base element implementations\n\n6. Provide means to register which elements are accessed in data base and create\n\n   a subtree from this data\n\n\n\n## Features\n\n\n\n### Key and attribute access\n\n\n\nKey and attribute access to an elements sub elements. The key access is\n\nparticularly useful for cases where a sub element happens to have the name of a\n\nreserved keyword in Python.\n\n\n\n```python\n\n    r_map1.reg.value = 10\n\n    r_map1['reg'].value = 10\n\n```\n\n\n\nThat elements are not intended to be added to a node via key based assignment\n\nlike a dictionary. A method: `_add` is provided for that.\n\n\n\nKey based assignment is not intended to be supported because it can result in a\n\nsub element having an alias which would be confusing and is an unlikely usecase.\n\n\n\n### Simple Iteration\n\n\n\nIteration is supported by the base Node class and hence provided by all\n\nsubclasses.\n\n\n\nFor example:\n\n\n\n```python\n\n\n\n    for reg in reg_map:\n\n        for bf_ref in reg:\n\n            print(f\"bitfield reference: {bf_ref.name} has value: {bf_ref.value}\")\n\n```\n\n\n\n### Register to bitfield value mapping\n\n\n\nA register's value is based on its component bitfield's values. In fact, there\n\nis an additional layer of indirection to support a register only having a\n\npartial view to a bitfield. It's therefore possible for multiple registers to\n\nhave access to the same bitfield. Support for this level is complexity is baked\n\ninto the data structre and modelled with a class: BitFieldRef.\n\n\n\nA full register map tree is serialized using a common dictionary with nodes\n\nreferencing others via their uuids.\n\n\n\nFor example:\n\n\n\n    \"1b99635555e647638f8a1ff38a1e3cf1\": {\n\n        \"name\": \"root\",\n\n        \"type\": \"Node\",\n\n        \"children\": [\n\n            \"3e2f9ba277e44050b52b5111fd814008\"\n\n        ]\n\n    },\n\n    \"3e2f9ba277e44050b52b5111fd814008\": {\n\n        \"name\": \"r_map1\",\n\n        \"descr\": \"An example register map containing r\n\n        \"local_address\": 268435456,\n\n        \"type\": \"RegisterMap\",\n\n        \"children\": [\n\n            \"c897cf71021449bdbdc819e7255fcab7\",\n\n            \"569715f765f14ba09313796ee98b6db6\"\n\n        ]\n\n    },\n\n    \"c897cf71021449bdbdc819e7255fcab7\": {\n\n        \"local_address\": 0,\n\n        \"name\": \"reg1\",\n\n        \"width\": 32,\n\n        \"type\": \"Register\",\n\n        \"children\": [\n\n            \"8cded8916e014bb3ab621e327f9c0ae8\"\n\n        ]\n\n    },\n\n    \"8cded8916e014bb3ab621e327f9c0ae8\": {\n\n        \"reg_offset\": 8,\n\n        \"field_offset\": 7,\n\n        \"name\": \"bf1_ref\",\n\n        \"slice_width\": 6,\n\n        \"type\": \"BitFieldRef\",\n\n        \"children\": [\n\n            \"b138d3d5335442479f25ec4d57859cda\"\n\n        ]\n\n    },\n\n    \"b138d3d5335442479f25ec4d57859cda\": {\n\n        \"access\": \"RW\",\n\n        \"name\": \"bf1\",\n\n        \"reset_val\": 74565,\n\n        \"width\": 20,\n\n        \"doc\": \"Some documentation to describe the bit\n\n        \"type\": \"BitField\",\n\n        \"children\": [\n\n            \"ba75ebd0924a46f29f0dd1726fd5fb5f\",\n\n            \"36b5d3a221e6400bba2d76a303dac2c2\"\n\n        ]\n\n    },\n\n    \"ba75ebd0924a46f29f0dd1726fd5fb5f\": {\n\n        \"name\": \"use_auto_inc\",\n\n        \"value\": 20,\n\n        \"type\": \"Enumeration\"\n\n    },\n\n    \"36b5d3a221e6400bba2d76a303dac2c2\": {\n\n        \"name\": \"use_auto_dec\",\n\n        \"value\": 10,\n\n        \"type\": \"Enumeration\"\n\n    },\n\n    \"569715f765f14ba09313796ee98b6db6\": {\n\n        \"local_address\": 4,\n\n        \"name\": \"reg2\",\n\n        \"width\": 32,\n\n        \"type\": \"Register\",\n\n        \"children\": [\n\n            \"14b8d11fea244200a6d0efee16d740f7\",\n\n            \"37a9c221ab77446aafe9f74ec14c78c6\",\n\n            \"6f695b3dbdd74cb3abaddf82c9594e4b\"\n\n        ]\n\n    },\n\n    \"14b8d11fea244200a6d0efee16d740f7\": {\n\n        \"_alias\": true,\n\n        \"reg_offset\": 0,\n\n        \"field_offset\": 0,\n\n        \"name\": \"bf4_ref\",\n\n        \"slice_width\": 2,\n\n        \"_ref\": \"6f695b3dbdd74cb3abaddf82c9594e4b\",\n\n        \"type\": \"BitFieldRef\"\n\n    },\n\n    \"6f695b3dbdd74cb3abaddf82c9594e4b\": {\n\n        \"reg_offset\": 5,\n\n        \"field_offset\": 2,\n\n        \"name\": \"bf3_ref\",\n\n        \"slice_width\": 5,\n\n        \"type\": \"BitFieldRef\",\n\n        \"children\": [\n\n            \"28c6a9c6929a4ad2baabc18751ec21d3\"\n\n        ]\n\n    },\n\n    \"28c6a9c6929a4ad2baabc18751ec21d3\": {\n\n        \"access\": \"R\",\n\n        \"name\": \"bf2\",\n\n        \"reset_val\": 26505,\n\n        \"width\": 20,\n\n        \"type\": \"BitField\"\n\n    },\n\n    \"37a9c221ab77446aafe9f74ec14c78c6\": {\n\n        \"_alias\": true,\n\n        \"reg_offset\": 4,\n\n        \"field_offset\": 3,\n\n        \"name\": \"bf2_ref\",\n\n        \"slice_width\": 4,\n\n        \"_ref\": \"8cded8916e014bb3ab621e327f9c0ae8\",\n\n        \"type\": \"BitFieldRef\"\n\n    },\n\n    \"root\": \"1b99635555e647638f8a1ff38a1e3cf1\"\n\n}\n\n\n\nThe `_ref` attribute facilitates modeling that one node can be an instance of\n\nanother. Which saves duplication of common information within the serialized\n\ntree. The `_alias` attribute indicates that an instance can be an alias of\n\nanother. This simply means that the new instance's bitfields will be shared with\n\nthe source node.\n\n\n\n## r_map classes\n\n\n\n### Common Attributes\n\n\n\nAll tree objects have the following common attributes:\n\n\n\n1. name\n\n   The name of the item\n\n2. descr\n\n   A short description of the item\n\n3. doc\n\n   A longer description of the item\n\n\n\nNote that the descr and doc attributes could potentially be None or an empty\n\nstring.\n\n\n\nThere are other common attributes but as a user of an r_map tree, they are not\n\nof interest.\n\n\n\n### RegisterMap\n\n\n\nUsed to hold register objects.\n\n\n\nRegisterMap Attributes\n\n\n\n\n\nObjects of this class have:\n\n\n\n1. address\n\n   The starting address of the register map. This may not be awfully useful as\n\n   the most interesting addresses are probably those of the child Registers.\n\n2. local_address\n\n   The aforementioned address is found dynamically by summing the local_address\n\n   with the local_addresses of the parent nodes in the tree hierarchy. Unless\n\n   you're using a subclassed FixedRegisterMap where the local_address ==\n\n   address.\n\n\n\n#### RegisterMap Methods\n\n\n\n1. read\n\n   This method can be used to read the current register map's data and update\n\n   the child register's values. It relies upon a `_block_read_func` function\n\n   having been added to it or some parent in the tree hierarchy.\n\n2. write\n\n   Write the register map's child register values value to some destination.\n\n   Note that if there are gaps between adjacent child registers, zeroes are\n\n   written to those addresses.\n\n   This method relies upon a `_block_write_func` having been added.\n\n\n\n### Register\n\n\n\n#### Register Attributes\n\n\n\nObjects of this class have the same attributes as RegisterMap objects and in\n\naddition have a width attribute, indicating the width of the register.\n\nThese are children of RegisterMap instances.\n\n\n\nRegisters have the following additional attributes:\n\n1. value\n\n   This is the current value of the register. It is dynamically computed based\n\n   on the current values from all of the child BitFieldRefs. It can be assigned\n\n   directly as well and the value will update the child bitfields accordingly.\n\n2. reset_val\n\n   This is the reset value of the register\n\n3. access\n\n   This indicates the access level for the register, dynamically computed based\n\n   on the child BitFieldRef's access levels. If different children have\n\n   different access levels, they will be `'|'.join`ed together.\n\n\n\n#### Register Methods\n\n\n\n1. read\n\n   This method can be used to read the current register's data and update the\n\n   register's value. It relies upon a `_reg_read_func` function having been added\n\n   to it or some parent in the tree hierarchy.\n\n2. write\n\n   Write the register's value to some destination. Works similarly to the read\n\n   function above and similarly relies upon a `_reg_write_func` having been\n\n   added.\n\n\n\n### BitFieldRef\n\n\n\nThese ojects represent a contribution of a bitfield within a register. They\n\nallow a register to provide access to only a portion of a bitfield.\n\nAlternatively they also allow multiple registers to provide access to common\n\nbitfields or for bitfields to span multiple registers.\n\n\n\n#### BitFieldRef Attributes\n\n\n\nObjects of this class are children of Register instances. They have the\n\nfollowing additional attributes:\n\n\n\n1. reg_offset\n\n   This is the offset within the host register that the contribution from this\n\n   object's child bitfield starts at.\n\n2. slice_width\n\n   This is the width of the slice from the child bitfield that this contribution\n\n   represents.\n\n3. field_offset\n\n   This is like the reg_offset but instead its the offset within the child\n\n   bitfield that this contribution is taken from.\n\n4. value\n\n   This is the value of the contribution of the child's bitfield, shifted up by\n\n   `reg_offset`\n\n5. Represents what `value` above would be at reset time.\n\n6. bf\n\n   This attribute returns the child bitfield of the bitfield reference.\n\n\n\n### BitField\n\n\n\n### BitField Attributes\n\n\n\nObjects of this class represent a bitfield.\n\n\n\nThey have the following additional attributes:\n\n\n\n1. width\n\n   The width of the bit field in bits\n\n2. reset_val\n\n   The value of this bit field at reset.\n\n3. access\n\n   The access level of the reset_val. This is currently just for documentation\n\n   sake but could conceivably be used by the user. It would contain a string\n\n   such as 'RW' or 'R' for example.\n\n4. value\n\n   This is the current value of the bitfield.\n\n\n\n### BitField\n\n\n\n#### BitField Methods\n\n\n\n1. reset\n\n   Reset the value of this bitfield to the value specified by `reset_val`.\n\n2. annotation\n\n   Find the name of a child annotation, should its value match the current\n\n   value, otherwise, return the value in hex.\n\n\n\n### Enumeration\n\n\n\nObjects of this class are used to represent an enumeration. They are children of\n\nBitField objects. They can be assigned directly to a BitField's value.\n\n\n\n#### Enumeration Attributes\n\n\n\nEnumeration objects have a value Attribute to provide the value of it.\n\n\n\n## Notes\n\n\n\n1. the `_nb_attrs` class attribute is used to control what is serialized in each\n\n   class instance.\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mentaal/r_map",
    "keywords": "register bitfield registermap",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "r-map",
    "package_url": "https://pypi.org/project/r-map/",
    "platform": "",
    "project_url": "https://pypi.org/project/r-map/",
    "project_urls": {
      "Bug Reports": "https://github.com/mentaal/r_map/issues",
      "Homepage": "https://github.com/mentaal/r_map",
      "Source": "https://github.com/mentaal/r_map"
    },
    "release_url": "https://pypi.org/project/r-map/0.9.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A data structure for working with register map information",
    "version": "0.9.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12922562,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a0e1784986a52a1fbe493f85fdaa8813d41cbf209b5800da8d9cc14cd4c3227",
          "md5": "c0f8d1f560be48d292126c944bb96bff",
          "sha256": "8d6f3ca5abbae44ebeb4a409a6ae1ccf88177f16a4f80ada34af7621ad27dacf"
        },
        "downloads": -1,
        "filename": "r_map-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c0f8d1f560be48d292126c944bb96bff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14288,
        "upload_time": "2018-05-05T11:11:19",
        "upload_time_iso_8601": "2018-05-05T11:11:19.868265Z",
        "url": "https://files.pythonhosted.org/packages/2a/0e/1784986a52a1fbe493f85fdaa8813d41cbf209b5800da8d9cc14cd4c3227/r_map-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a18e0fbd6b30112b24cc24fba2a03e9cf356356f7580b18855e7f57293703b9a",
          "md5": "868e80ef6126f61bc93a12f097c2cf87",
          "sha256": "a8be881073c7e88f1506c9b3ec02a2eb894ffbd58d6a62e231222a7eba48c551"
        },
        "downloads": -1,
        "filename": "r_map-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "868e80ef6126f61bc93a12f097c2cf87",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17288,
        "upload_time": "2019-09-02T15:21:41",
        "upload_time_iso_8601": "2019-09-02T15:21:41.339508Z",
        "url": "https://files.pythonhosted.org/packages/a1/8e/0fbd6b30112b24cc24fba2a03e9cf356356f7580b18855e7f57293703b9a/r_map-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "530779f3a89fd4fd0dc818c9b896e58ad55d1f384abb21f0ff3a98b32a02ac41",
          "md5": "f05837155921ecd3762ee8ca5cc2c21e",
          "sha256": "1cbfd868ddab444c8eb8d8888c5939f32298d654922ccb74df4f50039083086b"
        },
        "downloads": -1,
        "filename": "r_map-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f05837155921ecd3762ee8ca5cc2c21e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18992,
        "upload_time": "2020-03-08T12:41:50",
        "upload_time_iso_8601": "2020-03-08T12:41:50.693898Z",
        "url": "https://files.pythonhosted.org/packages/53/07/79f3a89fd4fd0dc818c9b896e58ad55d1f384abb21f0ff3a98b32a02ac41/r_map-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "422882f5e0720fbb830e39fb8e72e69d7b749327b384733c50cf7588133a899c",
          "md5": "c28e6ee0930bb6108fed713034e1ce5f",
          "sha256": "669f61c15f9adb0ead737bcdf15cbfe10b28991d79127adcd36be98a1072bb5b"
        },
        "downloads": -1,
        "filename": "r_map-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c28e6ee0930bb6108fed713034e1ce5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18960,
        "upload_time": "2020-03-08T13:37:29",
        "upload_time_iso_8601": "2020-03-08T13:37:29.407211Z",
        "url": "https://files.pythonhosted.org/packages/42/28/82f5e0720fbb830e39fb8e72e69d7b749327b384733c50cf7588133a899c/r_map-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8d7d4f17990514360d3a93f072c250d405624a8269b08aa524dbf3c57d0781c",
          "md5": "36294125ad012c26b0773476d0dcee57",
          "sha256": "63c9aed26f220af0f09374c5e2d8982b88612bb9550597da08b42392163e24fe"
        },
        "downloads": -1,
        "filename": "r_map-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36294125ad012c26b0773476d0dcee57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20446,
        "upload_time": "2021-12-01T11:32:23",
        "upload_time_iso_8601": "2021-12-01T11:32:23.813766Z",
        "url": "https://files.pythonhosted.org/packages/a8/d7/d4f17990514360d3a93f072c250d405624a8269b08aa524dbf3c57d0781c/r_map-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03fce370dc89adc5e81cb0fad94e7a636e63b9ea5e4191ea343d874a56d0700f",
          "md5": "0587695622cca8202b60b86d35835766",
          "sha256": "80d9d10fbc33574b0439c4ebc5ff98bbd729b6cf9929ac90b1c71b7889fd6bf8"
        },
        "downloads": -1,
        "filename": "r_map-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0587695622cca8202b60b86d35835766",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20769,
        "upload_time": "2021-12-14T08:33:39",
        "upload_time_iso_8601": "2021-12-14T08:33:39.619942Z",
        "url": "https://files.pythonhosted.org/packages/03/fc/e370dc89adc5e81cb0fad94e7a636e63b9ea5e4191ea343d874a56d0700f/r_map-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5381ecff7b354629f6ee548875a6c6fc791aafb2d99e76cd1683b7f39ed2046",
          "md5": "9556fe4bbb853b9891719340b1147788",
          "sha256": "5cb07cc108f215f9c8fb165b7156d7106ce532286468129da486cc9ea8ee9927"
        },
        "downloads": -1,
        "filename": "r_map-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9556fe4bbb853b9891719340b1147788",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21463,
        "upload_time": "2021-12-21T09:36:45",
        "upload_time_iso_8601": "2021-12-21T09:36:45.267742Z",
        "url": "https://files.pythonhosted.org/packages/d5/38/1ecff7b354629f6ee548875a6c6fc791aafb2d99e76cd1683b7f39ed2046/r_map-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5968d72b03327b6fa80a9c8733a01861fd4fdb4b5db2abadfe93d6365415234e",
          "md5": "6585b6828ccec62a463a8dd712f907d1",
          "sha256": "0eef529ae15410daa6540ff23f6bb1aa9fc3798909cb65fdc69557b1a5cafc3c"
        },
        "downloads": -1,
        "filename": "r_map-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6585b6828ccec62a463a8dd712f907d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22834,
        "upload_time": "2021-12-21T23:54:12",
        "upload_time_iso_8601": "2021-12-21T23:54:12.583158Z",
        "url": "https://files.pythonhosted.org/packages/59/68/d72b03327b6fa80a9c8733a01861fd4fdb4b5db2abadfe93d6365415234e/r_map-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "801ed5f4b75a4d48fabf88fda4142ce2338a7a21785f19c02b166e01435da0a1",
          "md5": "be03cd54ae1ddead450fcaa4f81c7523",
          "sha256": "34fe689ec50ea0ac59b29accfc042299dfe04b7cff740e65c708a7e97e7ed27c"
        },
        "downloads": -1,
        "filename": "r_map-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be03cd54ae1ddead450fcaa4f81c7523",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22940,
        "upload_time": "2022-02-16T14:14:17",
        "upload_time_iso_8601": "2022-02-16T14:14:17.059403Z",
        "url": "https://files.pythonhosted.org/packages/80/1e/d5f4b75a4d48fabf88fda4142ce2338a7a21785f19c02b166e01435da0a1/r_map-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4535ed315aae4326e55bee4cd50d1cd6cef7079e5633849c060d561d10ab915b",
          "md5": "d9989ebf71ed94fdb1d0d842821495ac",
          "sha256": "1251e5fe7ac6f4abad706b229e9cc8487db5ea5bb8df3a326d0311549d4857ef"
        },
        "downloads": -1,
        "filename": "r_map-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9989ebf71ed94fdb1d0d842821495ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23181,
        "upload_time": "2022-02-17T15:36:13",
        "upload_time_iso_8601": "2022-02-17T15:36:13.786434Z",
        "url": "https://files.pythonhosted.org/packages/45/35/ed315aae4326e55bee4cd50d1cd6cef7079e5633849c060d561d10ab915b/r_map-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4535ed315aae4326e55bee4cd50d1cd6cef7079e5633849c060d561d10ab915b",
        "md5": "d9989ebf71ed94fdb1d0d842821495ac",
        "sha256": "1251e5fe7ac6f4abad706b229e9cc8487db5ea5bb8df3a326d0311549d4857ef"
      },
      "downloads": -1,
      "filename": "r_map-0.9.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d9989ebf71ed94fdb1d0d842821495ac",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 23181,
      "upload_time": "2022-02-17T15:36:13",
      "upload_time_iso_8601": "2022-02-17T15:36:13.786434Z",
      "url": "https://files.pythonhosted.org/packages/45/35/ed315aae4326e55bee4cd50d1cd6cef7079e5633849c060d561d10ab915b/r_map-0.9.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}