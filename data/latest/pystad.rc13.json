{
  "info": {
    "author": "Jelmer Bot",
    "author_email": "jelmer.bot@uhasselt.be",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: IPython",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Cython",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Multimedia :: Graphics",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "description": "# pySTAD \n\n[![PyPI version fury.io](https://pypip.in/v/pystad/badge.png)](https://pypi.python.org/pypi/pystad/)\n[![PyPI status](https://img.shields.io/pypi/status/pystad.svg)](https://pypi.python.org/pypi/pystad/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/pystad.svg)](https://pypi.python.org/pypi/pystad/)\n[![PyPI license](https://img.shields.io/pypi/l/pystad.svg)](https://pypi.python.org/pypi/pystad/)\n[![pipeline status](https://gitlab.com/dsi_uhasselt/vda-lab/pystad2/badges/master/pipeline.svg)](https://gitlab.com/dsi_uhasselt/vda-lab/pystad2/-/commits/master)\n[![coverage report](https://gitlab.com/dsi_uhasselt/vda-lab/pystad2/badges/master/coverage.svg)](https://gitlab.com/dsi_uhasselt/vda-lab/pystad2/-/commits/master)\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gl/dsi_uhasselt%2Fvda-lab%2Fpystad2/master?urlpath=lab/tree/examples)\n\nThis is a python implementation of [STAD](https://ieeexplore.ieee.org/document/9096616/) \nfor exploration and visualisation of high-dimensional data. This implementation \nis based on the [R version](https://github.com/vda-lab/stad).\n\n## Background\n\n[STAD](https://ieeexplore.ieee.org/document/9096616/) is a dimensionality \nreduction algorithm, that generates an abstract representation of \nhigh-dimensional data by giving each data point a location in a graph which \npreserves the distances in the original high-dimensional space. The STAD graph \nis built upon the Minimum Spanning Tree (MST) to which new edges are added until\nthe correlation between the graph and the original dataset is maximized. \nAdditionally, STAD supports the inclusion of filter functions to analyse data \nfrom new perspectives, emphasizing traits in data which otherwise would remain \nhidden. \n\n### Topological Data analysis\n\nTopological data analysis (TDA) aims to describe the geometric structures \npresent in data. A dataset is interpreted as a point-cloud, where each point \nis sampled from an underlying geometric object. TDA tries to recover and \ndescribe the geometry of that object in terms of features that are invariant \n[\"under continuous deformations, such as stretching, twisting, crumpling and bending, but not tearing or gluing\"](https://en.wikipedia.org/wiki/Topology). \nTwo geometries that can be deformed into each other without tearing or \nglueing are *homeomorphic* (for instance a donut and coffee mug). Typically, \nTDA describes the *holes* in a geometry, formalised as \n[Betti numbers](https://en.wikipedia.org/wiki/Betti_number).\n\n\nLike other TDA algorithms, STAD constructs a graph that describes the structure \nof the data. However, the output of STAD should be interpreted as a \ndata-visualisation result, rather than a topological description of the data's \nstructure. Other TDA algorithms, like \n[mapper](https://github.com/scikit-tda/kepler-mapper), do produce topological \nresults. However, they rely on aggregating the data, whereas STAD encodes the \noriginal data points as vertices in a graph.\n\n### Dimensionality reduction\n\nCompared to dimensionality reduction algorithms like, t-SNE and UMAP, the STAD \nproduces a more flexible description of the data. A graph can be drawn using\ndifferent layouts and a user can interact with it. In addition, STAD's \nprojections retain the global structure of the data. In general, the STAD graph \ntends to underestimate distant data-points in the network structure. On the \nother hand, t-SNE and UMAP emphasize the relation of data-points with their \nclosest neighbors over that with distant data-points.\n\n<p style=\"text-align:center;\"><img src=\"./assets/dimensionality_reduction_comparison.png\" width=\"90%\" /></p>\n\nfrom [Alcaide & Aerts (2020)](https://ieeexplore.ieee.org/document/9096616/)\n\n\n## Installation\n\npySTAD can be installed with pip:\n```bash\npip install pystad\n```\nor compiled from source (see `development/Development.md` for instructions)\n\n## How to use pySTAD\n\n### From the command-line\npySTAD has a `__main__` entry-point which can be called using: \n`python -m stad --help` or `stad --help` from the command-line. These \nentrypoints take a distance matrix in the form of a `.csv` file and print the \nresulting network as a JSON string to stdout. Some information of the network is\nlogged to stderr, including the number of added edges and the correlation of the\nnetwork-distances with the original distances.\n\n### From within python\npySTAD is the most versatile when used within python. Three basic examples are \nshown below and the example jupyterlab notebooks can be explored on \n[binder](https://mybinder.org/v2/gl/dsi_uhasselt%2Fvda-lab%2Fpystad2/master?urlpath=tree/examples)\nwithout installing pySTAD on your machine.\n\n#### Example 1\nMost basic use of pySTAD using the default options.\n\n```python\nimport stad as sd\nimport numpy as np\nimport networkx as nx\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom scipy.spatial.distance import pdist\n\n# Load a dataset\ndata = pd.read_csv('./data/five_circles.csv', header=0)\ncondensed_distances = pdist(data[['x', 'y']], 'euclidean')\n\n# Show the data in 2D\nplt.scatter(data.x, data.y, s=5, c=data.x)\nplt.show()\n\n## Compute stad\nnetwork, sweep = sd.stad(condensed_distances)\nsd.plot.network(network, layout='kk', node_color=data['x'])\nplt.show()\n\n# Show the correlation trace\nsd.plot.sweep(condensed_distances, sweep)\nplt.show()\n```\n\n#### Example 2\n\nUse a lens / filter to highlight some property of the data.\n\n```python\nimport stad as sd\nimport numpy as np\nimport networkx as nx\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom scipy.spatial.distance import pdist\n\n# Load a dataset\ndata = pd.read_csv('./data/five_circles.csv', header=0)\ncondensed_distances = pdist(data[['x', 'y']], 'euclidean')\n\n# Show the dataset in 2D\nplt.scatter(data.x, data.y, s=5, c=data.x)\nplt.show()\n\n# Run stad with a lens\nlens = sd.Lens(data['x'].to_numpy(), n_bins=3)\nnetwork, sweep = sd.stad(condensed_distances, lens=lens)\n\n# Show which edges cross filter-segment boundaries\nedge_color = np.where(lens.adjacent_edges[sweep.network_mask], '#f33', '#ddd')\nsd.plot.network(network, layout='kk', edge_color=edge_color, node_color=data['x'])\nplt.show()\n\n# Show the correlation trace\nsd.plot.sweep(condensed_distances, sweep)\nplt.show()\n```\n\n#### Example 3\nExplore the resulting network interactively in jupyter-lab.\n\n```python\nimport stad as sd\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport ipywidgets as widgets\nfrom scipy.spatial.distance import pdist\n\n# Load data, compute distances, show 2d projection\ndata = pd.read_csv('./data/horse.csv')\nidx = np.random.choice(data.shape[0], 500, replace=False)\ndata = data.iloc[idx, :]\ndist = pdist(data, 'euclidean')\nplt.scatter(data.z, data.y, s=5, c=data.z)\nplt.show()\n\n## Compute stad without lens\nnetwork, sweep = sd.stad(dist, sweep=sd.ThresholdDistance(0.11))\nw = sd.Widget()\nw\n```\n\n```python\n# show() calls only work after the front-end of the widget is instantiated.\n# so they have to be in a cell below the cell that outputs the widget.\nw.show(network, node_color=data['z'])\n```\n\n## Compared to the R-implementation\n\nThe [R implementation](https://github.com/vda-lab/stad) supports 2-dimensional \nfilters (lenses) and uses Simulated Annealing to optimise the output graph. This\nimplementation currently only supports 1D lenses. In addition, this implementation\nuses a logistic sweep on the number of edges in the network by default, but still\nsupports optimization functions such as simulated annealing. \n\nThis implementation is optimised using Cython and OpenMP, resulting shorter \ncomputation times compared to the R implementation.\n\nThe R implementation uses a MST refinement procedure when using a lens / filter, as\ndescribed in the paper. This implementation just uses the MST. The refinement\nprocedure depends on community detection to remove edges between different groups of\ndata-points within the same filter segment, which is a process that requires fine-tuning\nper dataset. When communities are not detected correctly, edges between distinct groups of\ndatapoints within a filter segment remain in the network, obscuring the patterns the filter\nshould expose.\n\n\n## How to cite\n\n@TODO create DOI for software releases\n\nPlease cite our papers when using this software:\n\nAPA:\n\n    Alcaide, D., & Aerts, J. (2020). Spanning Trees as Approximation of Data \n    Structures. IEEE Transactions on Visualization and Computer Graphics. \n    https://doi.org/10.1109/TVCG.2020.2995465\n\nBibtex:\n\n    @article{alcaide2020spanning,\n      title={Spanning Trees as Approximation of Data Structures},\n      author={Alcaide, Daniel and Aerts, Jan},\n      journal={IEEE Transactions on Visualization and Computer Graphics},\n      year={2020},\n      publisher={IEEE},\n      doi = {10.1109/TVCG.2020.2995465},\n    }\n\n[![DOI:10.1109/TVCG.2020.2995465](https://zenodo.org/badge/DOI/10.1109/TVCG.2020.2995465.svg)](https://doi.org/10.1109/TVCG.2020.2995465)\n\nand for the STAD-R variant:\n\nAPA: \n\n    Alcaide, D., & Aerts, J. (2021). A visual analytic approach for the \n    identification of ICU patient subpopulations using ICD diagnostic codes. \n    PeerJ Computer Science, 7, e430. \n    https://doi.org/10.7717/peerj-cs.430\n\nBibtex:\n\n    @article{alcaide2021visual,\n      title={A visual analytic approach for the identification of ICU patient subpopulations using ICD diagnostic codes},\n      author={Alcaide, Daniel and Aerts, Jan},\n      journal={PeerJ Computer Science},\n      volume={7},\n      pages={e430},\n      year={2021},\n      publisher={PeerJ Inc.}\n      doi = {10.7717/peerj-cs.430}\n    }\n\n[![DOI:10.7717/peerj-cs.430](https://zenodo.org/badge/DOI/10.7717/peerj-cs.430.svg)](https://doi.org/10.7717/peerj-cs.430)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/dsi_uhasselt/vda-lab/pystad2",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pySTAD",
    "package_url": "https://pypi.org/project/pySTAD/",
    "platform": "",
    "project_url": "https://pypi.org/project/pySTAD/",
    "project_urls": {
      "Code": "https://gitlab.com/dsi_uhasselt/vda-lab/pystad2",
      "Homepage": "https://gitlab.com/dsi_uhasselt/vda-lab/pystad2",
      "Issue tracker": "https://gitlab.com/dsi_uhasselt/vda-lab/pystad2/-/issues"
    },
    "release_url": "https://pypi.org/project/pySTAD/0.2.10/",
    "requires_dist": [
      "numpy (>=1.20.0)",
      "python-igraph (>=0.8.2)",
      "networkx (>=2.5.1)",
      "scipy (>=1.6.3)",
      "matplotlib (>=3.4.2)",
      "pandas (>=1.1.0)",
      "jupyterlab (>=3.0.0)",
      "ipywidgets (>=7.6.3)",
      "pywin32 (>=1.0) ; platform_system == \"Windows\"",
      "Cython (>=0.29.20) ; extra == 'development'",
      "jupyter-packaging (~=0.10.2) ; extra == 'development'",
      "pytest ; extra == 'testing'",
      "pytest-cov ; extra == 'testing'"
    ],
    "requires_python": ">=3.7",
    "summary": "Dimensionality reduction through Simplified Topological Abstraction of Data",
    "version": "0.2.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12493891,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "796385d5ba152bd4cb141c6b779e880e5f6f32ad12ada7a3e9ccc753ed851705",
          "md5": "578fee01ed219432df20f8d20098500a",
          "sha256": "8a768240175b4e1f034af1e625c0b36c4e345ca5135ba8ea0151d9862cb533fb"
        },
        "downloads": -1,
        "filename": "pystad-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "578fee01ed219432df20f8d20098500a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15808,
        "upload_time": "2020-07-16T16:05:05",
        "upload_time_iso_8601": "2020-07-16T16:05:05.778489Z",
        "url": "https://files.pythonhosted.org/packages/79/63/85d5ba152bd4cb141c6b779e880e5f6f32ad12ada7a3e9ccc753ed851705/pystad-0.0.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "python < 3.9 automatically installs this old version, which does not do what the repo shows"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70206a7e1e8c3c40349ee192790e8a97e75671f5c5026007a42284ab3413fea7",
          "md5": "6b9a5b84f5c8e8e94f6016cf2cd1d511",
          "sha256": "aa6588538483ca5a5d35a315d35ef6b4fbd308a7d34239adbe75ac5198cb2a87"
        },
        "downloads": -1,
        "filename": "pystad-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6b9a5b84f5c8e8e94f6016cf2cd1d511",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14530,
        "upload_time": "2020-07-16T16:05:08",
        "upload_time_iso_8601": "2020-07-16T16:05:08.512218Z",
        "url": "https://files.pythonhosted.org/packages/70/20/6a7e1e8c3c40349ee192790e8a97e75671f5c5026007a42284ab3413fea7/pystad-0.0.1.tar.gz",
        "yanked": true,
        "yanked_reason": "python < 3.9 automatically installs this old version, which does not do what the repo shows"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f15b0e94e599ec7345b79e6fa4b6f51e830de16b64e4121c3d949246b213a9ac",
          "md5": "6837517d801f352a11d5630d6b9898c3",
          "sha256": "ada4f0fc878ba216b87f8d4f376112e941eb96ae0c939daf68b2de5ea29079a6"
        },
        "downloads": -1,
        "filename": "pystad-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6837517d801f352a11d5630d6b9898c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15931,
        "upload_time": "2020-07-16T16:47:18",
        "upload_time_iso_8601": "2020-07-16T16:47:18.756744Z",
        "url": "https://files.pythonhosted.org/packages/f1/5b/0e94e599ec7345b79e6fa4b6f51e830de16b64e4121c3d949246b213a9ac/pystad-0.0.2-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "python < 3.9 automatically installs this old version, which does not do what the repo shows"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cfa7e2be46023b00c152491f28e03c9c948f5cb114338c70f8bc4c8f169957e",
          "md5": "92f932c244c4bad0445a0faf70d53ad3",
          "sha256": "97661244987bec7fdb4230393bf77e05ff30446c7cd0f6d0ed3beea114014cb3"
        },
        "downloads": -1,
        "filename": "pystad-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "92f932c244c4bad0445a0faf70d53ad3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14666,
        "upload_time": "2020-07-16T16:47:19",
        "upload_time_iso_8601": "2020-07-16T16:47:19.768932Z",
        "url": "https://files.pythonhosted.org/packages/4c/fa/7e2be46023b00c152491f28e03c9c948f5cb114338c70f8bc4c8f169957e/pystad-0.0.2.tar.gz",
        "yanked": true,
        "yanked_reason": "python < 3.9 automatically installs this old version, which does not do what the repo shows"
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92929203b4651a752ff3bf48fd25b103f1d4e38d109c3f02ca746bcda1b700d7",
          "md5": "37cd04f6e9cc6a23ecb0e6682092b416",
          "sha256": "c156e7906b98845406fc3b678a6c4e15d28add0380668d934b3a872f350b75a3"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.0-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "37cd04f6e9cc6a23ecb0e6682092b416",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.9",
        "size": 1021688,
        "upload_time": "2021-05-25T15:29:58",
        "upload_time_iso_8601": "2021-05-25T15:29:58.598198Z",
        "url": "https://files.pythonhosted.org/packages/92/92/9203b4651a752ff3bf48fd25b103f1d4e38d109c3f02ca746bcda1b700d7/pySTAD-0.2.0-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "740df063beba914a2408587ab33362f49907fc82a07cbc95c372b59f30a2eb8b",
          "md5": "5a22cb01a4dabf4099dd9905ca35c82b",
          "sha256": "4a18aca432446081e2045b1a0d14081ac43142210638231fc68e7cea8a18f27f"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5a22cb01a4dabf4099dd9905ca35c82b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 5453976,
        "upload_time": "2021-05-25T15:30:08",
        "upload_time_iso_8601": "2021-05-25T15:30:08.370516Z",
        "url": "https://files.pythonhosted.org/packages/74/0d/f063beba914a2408587ab33362f49907fc82a07cbc95c372b59f30a2eb8b/pySTAD-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "882bb7045000dbb1d009a2228fca8dbaac4e624abc0b4df37cf3afb65e03c6d8",
          "md5": "1b4f46cc53c944075892301ed18e4aef",
          "sha256": "34f3d83a2b7caf914bc5b2a2e85fde0c7e05f6978d22aa9763263005f5f6d38a"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.1-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "1b4f46cc53c944075892301ed18e4aef",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.9",
        "size": 1021710,
        "upload_time": "2021-07-16T14:11:01",
        "upload_time_iso_8601": "2021-07-16T14:11:01.325206Z",
        "url": "https://files.pythonhosted.org/packages/88/2b/b7045000dbb1d009a2228fca8dbaac4e624abc0b4df37cf3afb65e03c6d8/pySTAD-0.2.1-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66869c8fd46d17f62c75576a90158fcc4b143e59f3cc2bbdf7f53904d432b0d0",
          "md5": "f0aaa8b713032d0aebeae295a359687c",
          "sha256": "fc6fc92974f00d28c92b94b401345831b9600b38c1fa1337bc5d3c0d170b4e6a"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f0aaa8b713032d0aebeae295a359687c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 5457291,
        "upload_time": "2021-07-16T14:11:10",
        "upload_time_iso_8601": "2021-07-16T14:11:10.865132Z",
        "url": "https://files.pythonhosted.org/packages/66/86/9c8fd46d17f62c75576a90158fcc4b143e59f3cc2bbdf7f53904d432b0d0/pySTAD-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8513f15ce7e44179a18b8bfb1f884f3f1d811ed2596f649f91c834b4edde1e1a",
          "md5": "efca945409b733a0012ce076ed6c9dd6",
          "sha256": "013f1cb2c6bbecf8222b868edcf960427eb2998370a0f4775366a50767ae115c"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.10-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "efca945409b733a0012ce076ed6c9dd6",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 4083648,
        "upload_time": "2022-01-06T12:24:22",
        "upload_time_iso_8601": "2022-01-06T12:24:22.282116Z",
        "url": "https://files.pythonhosted.org/packages/85/13/f15ce7e44179a18b8bfb1f884f3f1d811ed2596f649f91c834b4edde1e1a/pySTAD-0.2.10-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84ae4d9dee3a3130d3389969d1a3e632ab04782927be04165af266e06d7c3d93",
          "md5": "19825d21af3403d48c09c9c33530de71",
          "sha256": "402d3c29ceaa8e256a4514b773c864aa1f0c48fcc63191fa1689efddc89afab6"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.10.tar.gz",
        "has_sig": false,
        "md5_digest": "19825d21af3403d48c09c9c33530de71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6000184,
        "upload_time": "2022-01-06T12:24:33",
        "upload_time_iso_8601": "2022-01-06T12:24:33.205799Z",
        "url": "https://files.pythonhosted.org/packages/84/ae/4d9dee3a3130d3389969d1a3e632ab04782927be04165af266e06d7c3d93/pySTAD-0.2.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93bcb3a3dc19d5c9fb2f70114f34c390d86a2aba5bf82ffd084f829a847084f0",
          "md5": "64efca87d68c8402021be58042f3c292",
          "sha256": "b45853226eb22ef622dc0edc4b2458c775cbaed88276f27cf7aade52bd25781c"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.2-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "64efca87d68c8402021be58042f3c292",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.9",
        "size": 1270196,
        "upload_time": "2021-08-24T10:13:20",
        "upload_time_iso_8601": "2021-08-24T10:13:20.245038Z",
        "url": "https://files.pythonhosted.org/packages/93/bc/b3a3dc19d5c9fb2f70114f34c390d86a2aba5bf82ffd084f829a847084f0/pySTAD-0.2.2-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cbd3420895d3a6a86cd8c1aac7eab28b1e1030e9cc288a9e7a02d207f3b7b98",
          "md5": "baebb8e9d9716450853eaf3125f704a4",
          "sha256": "2105b1ea9977a01f0dd98e9a733eb0b5656d47e9642a8c0b9f21cf91b0912761"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "baebb8e9d9716450853eaf3125f704a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 5457121,
        "upload_time": "2021-08-24T10:13:29",
        "upload_time_iso_8601": "2021-08-24T10:13:29.082408Z",
        "url": "https://files.pythonhosted.org/packages/7c/bd/3420895d3a6a86cd8c1aac7eab28b1e1030e9cc288a9e7a02d207f3b7b98/pySTAD-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77440fc4f8b40125aec0f01af46c97c7d6bf0c96d3b520b9bd09888a79c47ee7",
          "md5": "022ea4dce8ac3baa383e95cb12d83420",
          "sha256": "2be8a984fdd6be83b6818502de245cb13ca4da82de92a912b8ef162646513e46"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.3-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "022ea4dce8ac3baa383e95cb12d83420",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.9",
        "size": 1270235,
        "upload_time": "2021-08-25T12:56:36",
        "upload_time_iso_8601": "2021-08-25T12:56:36.446967Z",
        "url": "https://files.pythonhosted.org/packages/77/44/0fc4f8b40125aec0f01af46c97c7d6bf0c96d3b520b9bd09888a79c47ee7/pySTAD-0.2.3-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75afe7281bdc09446a1f191fcba8751df014297db82a5ce5352b545a7624eaa0",
          "md5": "247a1fc72cf3c07c38f3f383fd6343c2",
          "sha256": "fa5f6ad89c4e7cbed161242e63c8223c7861990e52e495ca6f2e5f915c6310df"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "247a1fc72cf3c07c38f3f383fd6343c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 5457197,
        "upload_time": "2021-08-25T12:56:46",
        "upload_time_iso_8601": "2021-08-25T12:56:46.554842Z",
        "url": "https://files.pythonhosted.org/packages/75/af/e7281bdc09446a1f191fcba8751df014297db82a5ce5352b545a7624eaa0/pySTAD-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea8218f21742e559e3b5ed824ab39f4732b86e6bd00a74193258a865c231a2e0",
          "md5": "5c53acaea0297af7cbc3681f9de3d75f",
          "sha256": "4937057f8d5cdca076878530da458344f40b4708b98f6822f7744691c6aef2c1"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.4-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "5c53acaea0297af7cbc3681f9de3d75f",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.9",
        "size": 1529830,
        "upload_time": "2021-08-26T14:50:34",
        "upload_time_iso_8601": "2021-08-26T14:50:34.445304Z",
        "url": "https://files.pythonhosted.org/packages/ea/82/18f21742e559e3b5ed824ab39f4732b86e6bd00a74193258a865c231a2e0/pySTAD-0.2.4-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "859d87b69a54e58871962f9e0c267ac3c03f98a01f7e5123b92b51aab0cea021",
          "md5": "7c5ec594d028b7fa0d6e1e0cd54f015a",
          "sha256": "91b722af1a810b491799f697db7786a6319a434d204a7d0f7e6a25df14cccb82"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7c5ec594d028b7fa0d6e1e0cd54f015a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 5514957,
        "upload_time": "2021-08-26T14:50:47",
        "upload_time_iso_8601": "2021-08-26T14:50:47.647000Z",
        "url": "https://files.pythonhosted.org/packages/85/9d/87b69a54e58871962f9e0c267ac3c03f98a01f7e5123b92b51aab0cea021/pySTAD-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21c12c19fa088b77f65ede42429f5d5d021841bd50eefe45a8d9c1a70b1103b8",
          "md5": "5554f67ed59f68d4cdf6e865e21e2ac0",
          "sha256": "a82fcba27fcb9bfc3fe444d261771708e9494ca2cf2aa94fbad3ec99f3302481"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.5-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "5554f67ed59f68d4cdf6e865e21e2ac0",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.9",
        "size": 1784132,
        "upload_time": "2021-09-28T11:35:56",
        "upload_time_iso_8601": "2021-09-28T11:35:56.356934Z",
        "url": "https://files.pythonhosted.org/packages/21/c1/2c19fa088b77f65ede42429f5d5d021841bd50eefe45a8d9c1a70b1103b8/pySTAD-0.2.5-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5731cecce5dccbb199c5e0b93e4dd848dccf97caa72fcb202790dbc1f1d6ee2",
          "md5": "a67f186e890ed2f4142c7ed98b2a6007",
          "sha256": "bc11b6452427a714d7e69cf3158a3c8c0edbc2adf2b089dc007cc2aa9a5664a8"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a67f186e890ed2f4142c7ed98b2a6007",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 5515037,
        "upload_time": "2021-09-28T11:36:03",
        "upload_time_iso_8601": "2021-09-28T11:36:03.210551Z",
        "url": "https://files.pythonhosted.org/packages/c5/73/1cecce5dccbb199c5e0b93e4dd848dccf97caa72fcb202790dbc1f1d6ee2/pySTAD-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8928e128ed7fa77bb5a1976236090bfee56df4f514e10fc850b3f08211184e5",
          "md5": "0ef471d6ed331bfd5a511eda1ce60b66",
          "sha256": "09d9d6b62311f106f00edb72f4069b54907b7852e2b947fd6ce82b4f23106a89"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.6-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "0ef471d6ed331bfd5a511eda1ce60b66",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 3111939,
        "upload_time": "2021-11-09T17:35:47",
        "upload_time_iso_8601": "2021-11-09T17:35:47.220019Z",
        "url": "https://files.pythonhosted.org/packages/a8/92/8e128ed7fa77bb5a1976236090bfee56df4f514e10fc850b3f08211184e5/pySTAD-0.2.6-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2210788672c4220d6a614c13c92da89d3b964fe44e92b8564273539339494286",
          "md5": "5a0bc0563526d1612a75b01bc8deb92f",
          "sha256": "0ea401a1c292a01a799d05542a2a81f2add00185124091e46f3f70e38af8b2c3"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "5a0bc0563526d1612a75b01bc8deb92f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6571347,
        "upload_time": "2021-11-09T17:35:52",
        "upload_time_iso_8601": "2021-11-09T17:35:52.394037Z",
        "url": "https://files.pythonhosted.org/packages/22/10/788672c4220d6a614c13c92da89d3b964fe44e92b8564273539339494286/pySTAD-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89331f63b038369dd8d84bea0fac49ce2d3f177fecf8b0bb1cf0e80e041fd692",
          "md5": "2a08799dc8b029fa56bbff6adaf183fd",
          "sha256": "8cbeee2802ca3ed9d6014ca66212f5b6fe72478e1c32380cf37ec88e2f7c5fe3"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.7-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "2a08799dc8b029fa56bbff6adaf183fd",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 2868602,
        "upload_time": "2021-11-30T11:19:33",
        "upload_time_iso_8601": "2021-11-30T11:19:33.902827Z",
        "url": "https://files.pythonhosted.org/packages/89/33/1f63b038369dd8d84bea0fac49ce2d3f177fecf8b0bb1cf0e80e041fd692/pySTAD-0.2.7-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e9045ffa52620fe3d6ad3ac85b9bb84a5be9f6971eb54d9fda43aa5fb5525e7",
          "md5": "7dab16b3cf211ef21da2229e8fed9b35",
          "sha256": "5a0e51759d284d5117430dc0b8e2e1d6bc644226de212d29feb3fbe9fe4d3dea"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "7dab16b3cf211ef21da2229e8fed9b35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7047091,
        "upload_time": "2021-11-30T11:19:40",
        "upload_time_iso_8601": "2021-11-30T11:19:40.101354Z",
        "url": "https://files.pythonhosted.org/packages/7e/90/45ffa52620fe3d6ad3ac85b9bb84a5be9f6971eb54d9fda43aa5fb5525e7/pySTAD-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70b589dd435a9dd3304a2513680e18d5a4e2d0dd082301a416bb11ff16d28158",
          "md5": "aa03f24ca806b205a2fa5144b6461732",
          "sha256": "4568ad7750ebf8d7a11634435e49566f17cc6133e40467c55381349669a0db55"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.8-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "aa03f24ca806b205a2fa5144b6461732",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 2872305,
        "upload_time": "2022-01-05T15:12:12",
        "upload_time_iso_8601": "2022-01-05T15:12:12.980872Z",
        "url": "https://files.pythonhosted.org/packages/70/b5/89dd435a9dd3304a2513680e18d5a4e2d0dd082301a416bb11ff16d28158/pySTAD-0.2.8-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a409182dae7dbccefc1b39675759cf3d38219dd7e64ec37ba90df694fc6253c",
          "md5": "fbf1b97f81bb534273fdd52038886357",
          "sha256": "aec2e5a63cf000817639c71862e4dcea45fc120406352a97c64725bd7ee77904"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "fbf1b97f81bb534273fdd52038886357",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7134377,
        "upload_time": "2022-01-05T15:12:18",
        "upload_time_iso_8601": "2022-01-05T15:12:18.609117Z",
        "url": "https://files.pythonhosted.org/packages/8a/40/9182dae7dbccefc1b39675759cf3d38219dd7e64ec37ba90df694fc6253c/pySTAD-0.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f7d49ffa2d956fa9233562755b9beddb529044d9dd82120e3686c1e54b63a4f",
          "md5": "8e512b924383d8ef2de0686d9677008e",
          "sha256": "738b577a64e6183edc3c134ae5f578f23adac254ea1961de604823159db29201"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.9-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "8e512b924383d8ef2de0686d9677008e",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 3477597,
        "upload_time": "2022-01-06T11:06:26",
        "upload_time_iso_8601": "2022-01-06T11:06:26.567257Z",
        "url": "https://files.pythonhosted.org/packages/3f/7d/49ffa2d956fa9233562755b9beddb529044d9dd82120e3686c1e54b63a4f/pySTAD-0.2.9-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0d58a9e21299a913fa32b6c335e36462e21eb6b42b394e6ddd2f676a30e6b76",
          "md5": "3a3b0f63706f545921f3e7665d1e25c3",
          "sha256": "07c14bd1c26014904512e0ad92aa6386680e6d2895436636c87eefb9e254d3a6"
        },
        "downloads": -1,
        "filename": "pySTAD-0.2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "3a3b0f63706f545921f3e7665d1e25c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5999778,
        "upload_time": "2022-01-06T11:06:31",
        "upload_time_iso_8601": "2022-01-06T11:06:31.739418Z",
        "url": "https://files.pythonhosted.org/packages/e0/d5/8a9e21299a913fa32b6c335e36462e21eb6b42b394e6ddd2f676a30e6b76/pySTAD-0.2.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8513f15ce7e44179a18b8bfb1f884f3f1d811ed2596f649f91c834b4edde1e1a",
        "md5": "efca945409b733a0012ce076ed6c9dd6",
        "sha256": "013f1cb2c6bbecf8222b868edcf960427eb2998370a0f4775366a50767ae115c"
      },
      "downloads": -1,
      "filename": "pySTAD-0.2.10-cp39-cp39-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "efca945409b733a0012ce076ed6c9dd6",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.7",
      "size": 4083648,
      "upload_time": "2022-01-06T12:24:22",
      "upload_time_iso_8601": "2022-01-06T12:24:22.282116Z",
      "url": "https://files.pythonhosted.org/packages/85/13/f15ce7e44179a18b8bfb1f884f3f1d811ed2596f649f91c834b4edde1e1a/pySTAD-0.2.10-cp39-cp39-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "84ae4d9dee3a3130d3389969d1a3e632ab04782927be04165af266e06d7c3d93",
        "md5": "19825d21af3403d48c09c9c33530de71",
        "sha256": "402d3c29ceaa8e256a4514b773c864aa1f0c48fcc63191fa1689efddc89afab6"
      },
      "downloads": -1,
      "filename": "pySTAD-0.2.10.tar.gz",
      "has_sig": false,
      "md5_digest": "19825d21af3403d48c09c9c33530de71",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6000184,
      "upload_time": "2022-01-06T12:24:33",
      "upload_time_iso_8601": "2022-01-06T12:24:33.205799Z",
      "url": "https://files.pythonhosted.org/packages/84/ae/4d9dee3a3130d3389969d1a3e632ab04782927be04165af266e06d7c3d93/pySTAD-0.2.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}