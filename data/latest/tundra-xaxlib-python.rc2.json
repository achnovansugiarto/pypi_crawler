{
  "info": {
    "author": "Vít Labuda",
    "author_email": "dev@vitlabuda.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries",
      "Typing :: Typed"
    ],
    "description": "<!--\nCopyright (c) 2022 Vít Labuda. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the\nfollowing conditions are met:\n 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\n    disclaimer.\n 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\n    following disclaimer in the documentation and/or other materials provided with the distribution.\n 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\n    products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-->\n\n# tundra-xaxlib-python\n`tundra-xaxlib-python`, or **Tundra-NAT64 external address translation library for Python**, enables one to easily \nparse and constructs wireformat messages used by _Tundra-NAT64 external address translation protocol_\n([specification](https://github.com/vitlabuda/tundra-nat64/blob/main/external_addr_xlat/EXTERNAL-ADDR-XLAT-PROTOCOL.md))\nin Python programs. Although this library will probably be most commonly used to implement servers, it is also\nable to construct request messages and parse response messages, which are actions that only the client, i.e.\n[Tundra-NAT64](https://github.com/vitlabuda/tundra-nat64), needs to perform.\n\n_NOTE: Some links in this README may not work if the file is not viewed through \n[GitHub](https://github.com/vitlabuda/tundra-xaxlib-python/blob/main/README.md)._\n\n\n\n## Installation\nThis library targets **Python 3.9 and above**. It might work in older Python 3 versions, but nothing is guaranteed.  \n\n`tundra-xaxlib-python` may be installed from [PyPI](https://pypi.org/project/tundra-xaxlib-python/) using `pip`:\n```shell\npython3 -m pip install --upgrade tundra-xaxlib-python\n```\n\n\n\n## Usage\nClasses and variables try to reflect the \n[protocol specification](https://github.com/vitlabuda/tundra-nat64/blob/main/external_addr_xlat/EXTERNAL-ADDR-XLAT-PROTOCOL.md)\nas closely as possible in terms of both names and functionality, so I would recommend to start there.\n\nThis library's central (data)classes are [RequestMessage](src/tundra_xaxlib/v1/RequestMessage.py),\n[SuccessfulResponseMessage](src/tundra_xaxlib/v1/SuccessfulResponseMessage.py) and\n[ErroneousResponseMessage](src/tundra_xaxlib/v1/ErroneousResponseMessage.py). Each of them can be instantiated the \nusual way, or by using the `from_wireformat()` classmethod for parsing wireformat. The instances then have the \n`to_wireformat()` method for constructing wireformat. The [RequestMessage](src/tundra_xaxlib/v1/RequestMessage.py)\nclass has additional methods for constructing response message objects which use existing data from the request:\n`generate_successful_response()` and `generate_erroneous_response()`. Methods which have it documented in their \ndocstrings raise [InvalidMessageDataExc](src/tundra_xaxlib/exc/InvalidMessageDataExc.py) (or a subclass thereof) in \ncase an error occurs. If you, for some reason, needed to detect the appropriate message class from wireformat or \ninstantiate it straightaway, the [WireformatParsingHelpers](src/tundra_xaxlib/v1/WireformatParsingHelpers.py) class \nis there to help with that.\n\n\n\n## Examples\n- **[001_nat64.py](examples/001_nat64.py)** – An example external address translation server which works almost exactly \n  the same as [Tundra-NAT64](https://github.com/vitlabuda/tundra-nat64)'s built-in `nat64` addressing mode, i.e. it is \n  able to, without the help of a NAT66, statelessly translate packets from one source IPv6 to one source IPv4 and do \n  the inverse process for packets going the other way.\n\n\n\n## Licensing\nThis project is licensed under the **3-clause BSD license** – see the [LICENSE](LICENSE) file.\n\nProgrammed by **[Vít Labuda](https://vitlabuda.cz/)**.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vitlabuda/tundra-xaxlib-python",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tundra-xaxlib-python",
    "package_url": "https://pypi.org/project/tundra-xaxlib-python/",
    "platform": null,
    "project_url": "https://pypi.org/project/tundra-xaxlib-python/",
    "project_urls": {
      "Bug Tracker": "https://github.com/vitlabuda/tundra-xaxlib-python/issues",
      "Homepage": "https://github.com/vitlabuda/tundra-xaxlib-python"
    },
    "release_url": "https://pypi.org/project/tundra-xaxlib-python/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Tundra-NAT64 external address translation library for Python",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14600855,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a958515826c844453c45ad4ce19d0e331e3e532f9f61dd187d760bb06d13c28",
          "md5": "42a07875c4c83964d762180811ac2239",
          "sha256": "41de676b8d9abfa6385f73f7d0d345f84b8e54458475a1ee151fe86a6876a015"
        },
        "downloads": -1,
        "filename": "tundra-xaxlib-python-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "42a07875c4c83964d762180811ac2239",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 10338,
        "upload_time": "2022-07-30T20:51:38",
        "upload_time_iso_8601": "2022-07-30T20:51:38.202490Z",
        "url": "https://files.pythonhosted.org/packages/7a/95/8515826c844453c45ad4ce19d0e331e3e532f9f61dd187d760bb06d13c28/tundra-xaxlib-python-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5778521bdedea7384d9946cba5e41be62fda06253e4b2ccd7f3fc90555488a5",
          "md5": "61bc59539115669770dc66e042f7c9fe",
          "sha256": "39f7b9749ba26fcb5e0351d576e2cd1bf32a8e0baa81f52d47ac6ae1ffc6d96f"
        },
        "downloads": -1,
        "filename": "tundra-xaxlib-python-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "61bc59539115669770dc66e042f7c9fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 10716,
        "upload_time": "2022-07-30T21:05:51",
        "upload_time_iso_8601": "2022-07-30T21:05:51.204457Z",
        "url": "https://files.pythonhosted.org/packages/a5/77/8521bdedea7384d9946cba5e41be62fda06253e4b2ccd7f3fc90555488a5/tundra-xaxlib-python-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5778521bdedea7384d9946cba5e41be62fda06253e4b2ccd7f3fc90555488a5",
        "md5": "61bc59539115669770dc66e042f7c9fe",
        "sha256": "39f7b9749ba26fcb5e0351d576e2cd1bf32a8e0baa81f52d47ac6ae1ffc6d96f"
      },
      "downloads": -1,
      "filename": "tundra-xaxlib-python-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "61bc59539115669770dc66e042f7c9fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 10716,
      "upload_time": "2022-07-30T21:05:51",
      "upload_time_iso_8601": "2022-07-30T21:05:51.204457Z",
      "url": "https://files.pythonhosted.org/packages/a5/77/8521bdedea7384d9946cba5e41be62fda06253e4b2ccd7f3fc90555488a5/tundra-xaxlib-python-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}