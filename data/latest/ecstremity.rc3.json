{
  "info": {
    "author": "Jonathan Crum",
    "author_email": "crumja4@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# ECStremity\n\n**ECStremity** is an Entity-Component library. It is a Python port of the JavaScript library [geotic](https://github.com/ddmills/geotic) by Dalton Mills.\n\n- *entity* : a unique id and a collection of components\n- *component* : a data container\n- *query* : a way to gather collections of entities that match some criteria, for use in systems\n- *event* : a message to an entity and its components\n\n## Installation\n\n```\npip install ecstremity\n```\n\n## Usage\n\nTo start using **ECStremity**, import the library and make some components.\n\n```python\nfrom ecstremity import (Engine, Component)\n\necs = Engine()\n\nclass Position(Component):\n    def __init__(self, x: int, y: int) -> None:\n        self.x = x\n        self.y = y\n\nclass Velocity(Component):\n    def __init__(self, x: int, y: int) -> None:\n        self.x = x\n        self.y = y\n\nclass Frozen(Component):\n    \"\"\"Tag component denoting a frozen character.\"\"\"\n```\n\n All components must be registered with the engine. Component registration must use the class symbol (i.e. do not use the component name attribute).\n\n```python\necs.register_component(Position)\necs.register_component(Velocity)\necs.register_component(Frozen)\n```\n\nInstruct the engine to make a new entity, then add components to it.\nOnce a component is registered, it can be accessed using the class symbol or a string representing the class. The name attribute is not case-sensitive.\n\n```python\nentity = ecs.create_entity()\n\nentity.add(Position)\nentity.add(\"Velocity\")\n```\n\nThe ecstremity library has no actual \"system\" class. Instead, instruct the engine to produce a query. For example, make a query that tracks all components that have both a `Position` and `Velocity` component, but not a `Frozen` component. A query can have any combination of the `all_of`, `any_of`, and `none_of` quantifiers.\n\n```python\nkinematics = ecs.create_query(\n    all_of = ['Position', 'Velocity'],\n    none_of = ['Frozen']\n    )\n```\n\nLoop over the result set to update the position for all entities in the query. The query will always return an up-to-date list containing entities that match.\n\n```python\ndef loop(dt):\n    for entity in kinematics.result:\n        entity['Position'].x += entity['Velocity'].x * dt\n        entity['Position'].y += entity['Velocity'].y * dt\n```\n\n\n## Changelog\n\n### v.1.0.1\nInitial release\n\n### v.1.0.2\n- Changed how component names are handled. Previously creating a component required setting a class variable `name` \n  with a string in all-caps that is identical to the class name, e.g. if a component was created as `class Position`,\n  the class required a variable `name = \"POSITION\"`. Now all components inherit from `componentmeta` which handles\n  this automatically. All references to component names inside the engine also convert the name string to the required\n  casing.\n\n- Added the ability to make use of the `EntityEvent` system. Use `entity.fire_event('event_name', data)` where data can\n  be any object (typically a dict) that you want to pass to an entity's components. The `'event_name'` should have a\n  corresponding `on_event_name` method on one or more components of the entity, which will have the event passed to it.\n\n- Added a prefab system. This is a work-in-progress addition, but essentially you can now define component structures\n  that can be applied all at once to an entity, allowing for templating of entity types.\n\n### v.1.0.3\n- Miscellaneous fixes and performance updates.\n- Fixed an issue with queries not updating their cache when components are added/removed from an entity.\n\n### v.1.0.4\n- Added an `EngineAdapter` class that allows for passing in a reference to the game client.\n- Added entity cloning. Use `entity.clone()` to make a copy of an entity with all attached components.\n- Added an `EventData` class to pass in as the data argument of `entity.fire_event`. This base class is meant to be\n  extensible, but by default it has five optional parameters:\n  - `instigator: Entity`   \n    Used to pass reference to the entity that fired the event.\n  - `target: Union[Tuple[int, int], Entity]`  \n    Used to pass reference to an entity or position that can be used for various things, like forwarding an event or querying for data. \n  - `interactions: List[Dict[str, str]]`  \n    Used to get back a list of interactions from a component. Typical format is `{'name': 'event_name', 'event': 'on_event_method'}`.\n  - `callback: Callable[[Any], Any]`  \n    A callback that can be executed inside a component.\n  - `cost: float`  \n    An event cost, for use with energy-based action systems.\n- Added `EntityEvent.route` to trigger forwarding of an event to a target entity. For example, in my project game [Anathema](https://github.com/krummja/Anathema),\nI use this to query a target entity for interactions, say when bumping into it:\n\n```python\nclass Legs(Component):\n  # ...\n  def on_try_move(self, evt: EntityEvent) -> None:\n      if self.area.is_blocked(*evt.data.target):\n          if self.area.is_interactable(*evt.data.target):\n              self.entity.fire_event('try_interact', evt.data)  \n```\n\nand then in a separate component:\n\n```python\nclass Brain(Component):\n    # ...\n    def on_try_interact(self, evt: EntityEvent) -> None:\n        evt.data.instigator = self.entity\n        evt.data.interactions = []\n\n        target: Entity = self.client.interaction_system.get(*evt.dat.target)\n        routed_evt: EntityEvent = evt.route(\n          new_event='get_interactions', \n          target=target\n        )\n        routed_evt.handle()\n```\n\nFinally, on a component attached to the target entity, I might have:\n\n```python\nclass Container(Component):\n    # ...\n    def on_get_interactions(self, evt) -> None:\n        if self._is_open:\n            evt.data.interactions.append({\n              \"name\": \"Close\",\n              \"event\": \"try_close_container\"\n            })\n        # ...\n```\n\nWhich requires a corresponding `Container.on_try_close_container`, and so forth.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/krummja/ECStremity",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ecstremity",
    "package_url": "https://pypi.org/project/ecstremity/",
    "platform": "",
    "project_url": "https://pypi.org/project/ecstremity/",
    "project_urls": {
      "Homepage": "https://github.com/krummja/ECStremity"
    },
    "release_url": "https://pypi.org/project/ecstremity/1.0.4/",
    "requires_dist": [
      "uuid"
    ],
    "requires_python": ">=3.8.5",
    "summary": "An ECS Library based on the JavaScript geotic library.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10033234,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0edbd916db03372711a68e8862ea90413a8370067380075cf1e3a32888f9fa52",
          "md5": "fb4f06cb31770dc51b173d971246012f",
          "sha256": "301cde57785c3ec36db15bc102166cc4700b98bbb922c8b4003e238d55221cb8"
        },
        "downloads": -1,
        "filename": "ecstremity-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb4f06cb31770dc51b173d971246012f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.5",
        "size": 10793,
        "upload_time": "2021-01-17T02:11:46",
        "upload_time_iso_8601": "2021-01-17T02:11:46.888673Z",
        "url": "https://files.pythonhosted.org/packages/0e/db/d916db03372711a68e8862ea90413a8370067380075cf1e3a32888f9fa52/ecstremity-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2097d63b05fe4ea91cf05cc29451c89e2294f6e4293e702c365e0d26a1b29382",
          "md5": "4e3d9d3c1add61b8942ce1b9d0ba8867",
          "sha256": "7be6edd85b3ef0a50e0bbd5c8b323d27eb15af352f18d7c988e2c277b21d99ce"
        },
        "downloads": -1,
        "filename": "ecstremity-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e3d9d3c1add61b8942ce1b9d0ba8867",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.5",
        "size": 10762,
        "upload_time": "2021-01-17T02:12:43",
        "upload_time_iso_8601": "2021-01-17T02:12:43.475510Z",
        "url": "https://files.pythonhosted.org/packages/20/97/d63b05fe4ea91cf05cc29451c89e2294f6e4293e702c365e0d26a1b29382/ecstremity-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d37353ff48368fda1d75b9a810431dcde2ee265707db1774ed6f63a0d042934",
          "md5": "8e4d9313d2fbd943a0f3274fd128eeaa",
          "sha256": "ba874228150700ee4a260673c0e01988cc2d0113912c83906645bdd7d07c2104"
        },
        "downloads": -1,
        "filename": "ecstremity-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8e4d9313d2fbd943a0f3274fd128eeaa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.5",
        "size": 7760,
        "upload_time": "2021-01-17T02:12:44",
        "upload_time_iso_8601": "2021-01-17T02:12:44.546672Z",
        "url": "https://files.pythonhosted.org/packages/7d/37/353ff48368fda1d75b9a810431dcde2ee265707db1774ed6f63a0d042934/ecstremity-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d781390d56aec9ab09f718850bf81001ee8cae4281b1ab399ba5a6b5cb887d4f",
          "md5": "40fd45658faa7326f99bde73294c1524",
          "sha256": "ef109567f152e3e7ae6945f56ca4586e15a27e75b3f6e2a545d50108ce615eac"
        },
        "downloads": -1,
        "filename": "ecstremity-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40fd45658faa7326f99bde73294c1524",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.5",
        "size": 14170,
        "upload_time": "2021-04-11T18:37:56",
        "upload_time_iso_8601": "2021-04-11T18:37:56.718999Z",
        "url": "https://files.pythonhosted.org/packages/d7/81/390d56aec9ab09f718850bf81001ee8cae4281b1ab399ba5a6b5cb887d4f/ecstremity-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ceec207324a6f8f1bfa0bb07137f281658ae8722058c1f68188a3a4e2374e160",
          "md5": "dcfcb2b4375b79685913c8bca5510049",
          "sha256": "60c4c1105799975b8d2363cf11b9ddecf9e02d75ef087fad76cf6c5b6f064e96"
        },
        "downloads": -1,
        "filename": "ecstremity-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "dcfcb2b4375b79685913c8bca5510049",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.5",
        "size": 12801,
        "upload_time": "2021-04-11T18:37:58",
        "upload_time_iso_8601": "2021-04-11T18:37:58.080596Z",
        "url": "https://files.pythonhosted.org/packages/ce/ec/207324a6f8f1bfa0bb07137f281658ae8722058c1f68188a3a4e2374e160/ecstremity-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d781390d56aec9ab09f718850bf81001ee8cae4281b1ab399ba5a6b5cb887d4f",
        "md5": "40fd45658faa7326f99bde73294c1524",
        "sha256": "ef109567f152e3e7ae6945f56ca4586e15a27e75b3f6e2a545d50108ce615eac"
      },
      "downloads": -1,
      "filename": "ecstremity-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "40fd45658faa7326f99bde73294c1524",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.5",
      "size": 14170,
      "upload_time": "2021-04-11T18:37:56",
      "upload_time_iso_8601": "2021-04-11T18:37:56.718999Z",
      "url": "https://files.pythonhosted.org/packages/d7/81/390d56aec9ab09f718850bf81001ee8cae4281b1ab399ba5a6b5cb887d4f/ecstremity-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ceec207324a6f8f1bfa0bb07137f281658ae8722058c1f68188a3a4e2374e160",
        "md5": "dcfcb2b4375b79685913c8bca5510049",
        "sha256": "60c4c1105799975b8d2363cf11b9ddecf9e02d75ef087fad76cf6c5b6f064e96"
      },
      "downloads": -1,
      "filename": "ecstremity-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "dcfcb2b4375b79685913c8bca5510049",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.5",
      "size": 12801,
      "upload_time": "2021-04-11T18:37:58",
      "upload_time_iso_8601": "2021-04-11T18:37:58.080596Z",
      "url": "https://files.pythonhosted.org/packages/ce/ec/207324a6f8f1bfa0bb07137f281658ae8722058c1f68188a3a4e2374e160/ecstremity-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}