{
  "info": {
    "author": "Nicky Pochinkov",
    "author_email": "work@nicky.pro",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Welford\n=======\n\nPython (Pytorch) implementation of Welford’s algorithm, which is online or\nparallel algorithm for calculating variances.\n\nThe algorithm is described in the followings,\n\n-  `Wikipedia:Welford Online\n   Algorithm <https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Online_algorithm>`__\n-  `Wikipedia:Welford Parallel\n   Algorithm <https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Parallel_algorithm>`__\n\nWelford’s method is more numerically stable than the standard method.\nThe theoritical background of Welford’s method is mentioned in detail on\nthe following blog articles. Please refer them if you are interested in.\n\n-  http://www.johndcook.com/blog/standard_deviation\n-  https://jonisalonen.com/2013/deriving-welfords-method-for-computing-variance/\n\nThis library is a fork of `welford` library implemented in Numpy ( https://github.com/a-mitani/welford ).\n\nInstall\n-------\n\nDownload package via `PyPI\nrepository <https://pypi.org/project/welford-torch/>`__\n\n::\n\n   $ pip install welford-torch\n\nExample\n-------\n\nFor Online Calculation\n~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n   import torch\n   from welford_torch import Welford\n\n   # Initialize Welford object\n   w = Welford()\n\n   # Input data samples sequentialy\n   w.add(torch.tensor([0, 100]))\n   w.add(torch.tensor([1, 110]))\n   w.add(torch.tensor([2, 120]))\n\n   # output\n   print(w.mean)  # mean --> [  1. 110.]\n   print(w.var_s)  # sample variance --> [1, 100]\n   print(w.var_p)  # population variance --> [ 0.6667 66.6667 ]\n\n   # You can add other samples after calculating variances.\n   w.add(torch.tensor([3, 130]))\n   w.add(torch.tensor([4, 140]))\n\n   # output with added samples\n   print(w.mean)  # mean --> [  2. 120.]\n   print(w.var_s)  # sample variance --> [  2.5 250. ]\n   print(w.var_p)  # population variance --> [  2. 200.]\n\nWelford object supports initialization with data samples and batch\naddition of samples.\n\n.. code:: python\n\n   # Initialize Welford object with samples\n   ini = torch.tensor([[0, 100],\n                   [1, 110],\n                   [2, 120]])\n   w = Welford(ini)\n\n   # output\n   print(w.mean)  # mean --> [  1. 110.]\n   print(w.var_s)  # sample variance --> [1, 100]\n   print(w.var_p)  # population variance --> [ 0.6667 66.6667]\n\n   # add other samples through batch method\n   other_samples = torch.tensor([[3, 130],\n                             [4, 140]])\n   w.add_all(other_samples)\n\n   # output with added samples\n   print(w.mean)  # mean --> [  2. 120.]\n   print(w.var_s)  # sample variance --> [  2.5 250. ]\n   print(w.var_p)  # population variance --> [  2. 200.]\n\nFor Parallel Calculation\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nWelford also offers parallel calculation method for variance.\n\n.. code:: python\n\n   import torch\n   from welford_torch import Welford\n\n   # Initialize two Welford objects\n   w_1 = Welford()\n   w_2 = Welford()\n\n   # Each object will calculate variance of each samples in parallel.\n   # On w_1\n   w_1.add(torch.tensor([0, 100]))\n   w_1.add(torch.tensor([1, 110]))\n   w_1.add(torch.tensor([2, 120]))\n   print(w_1.var_s)  # sample variance -->[  1. 100.]\n   print(w_1.var_p)  # population variance -->[ 0.6667 66.6667]\n\n   # On w_2\n   w_2.add(torch.tensor([3, 130]))\n   w_2.add(torch.tensor([4, 140]))\n   print(w_2.var_s)  # sample variance -->[ 0.5 50. ]\n   print(w_2.var_p)  # sample variance -->[ 0.25 25.  ]\n\n   # You can Merge objects to get variance of WHOLE samples\n   w_1.merge(w_2)\n   print(w.var_s)  # sample variance --> [  2.5 250. ]\n   print(w_1.var_p)  # sample variance -->[  2. 200.]\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pesvut/welford-torch",
    "keywords": "statistics,online,welford,torch",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "welford-torch",
    "package_url": "https://pypi.org/project/welford-torch/",
    "platform": null,
    "project_url": "https://pypi.org/project/welford-torch/",
    "project_urls": {
      "Homepage": "https://github.com/pesvut/welford-torch"
    },
    "release_url": "https://pypi.org/project/welford-torch/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python (Pytorch) implementation of Welford's algorithm.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16160274,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f99e7aa96157c18ca9928b184ab8dfc270024b78c773b801fc1f53ff39053f6",
          "md5": "f38db5385ede46033fa5e70c806d1e90",
          "sha256": "308975288ece828befcf53f06fd14d61930fadc772244f587e1b6d767c316c98"
        },
        "downloads": -1,
        "filename": "welford-torch-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f38db5385ede46033fa5e70c806d1e90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6178,
        "upload_time": "2022-12-19T17:34:05",
        "upload_time_iso_8601": "2022-12-19T17:34:05.066219Z",
        "url": "https://files.pythonhosted.org/packages/4f/99/e7aa96157c18ca9928b184ab8dfc270024b78c773b801fc1f53ff39053f6/welford-torch-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c40c4ad880d8ddb33cf285512d837df91a3dc25b689b99543b63439ed9abd565",
          "md5": "25bb788a0226b12882f03cd502c15fb4",
          "sha256": "22de21db55e7f798b16623cad8c28e271a6e86712a53f29b7fb696189dc82368"
        },
        "downloads": -1,
        "filename": "welford-torch-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "25bb788a0226b12882f03cd502c15fb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6159,
        "upload_time": "2022-12-20T09:03:51",
        "upload_time_iso_8601": "2022-12-20T09:03:51.164262Z",
        "url": "https://files.pythonhosted.org/packages/c4/0c/4ad880d8ddb33cf285512d837df91a3dc25b689b99543b63439ed9abd565/welford-torch-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9ebc6cd1c6b0b3a8a544552c92f7800efb4840e91f1a511cf2b2221c3064eb9",
          "md5": "c5876d6a522931ff4b21918a31c0228e",
          "sha256": "f3217eac9bd9e3e1d46e56ce45c551d82d721cfce44187fffdae599f6abf58b6"
        },
        "downloads": -1,
        "filename": "welford-torch-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c5876d6a522931ff4b21918a31c0228e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6352,
        "upload_time": "2022-12-20T11:07:57",
        "upload_time_iso_8601": "2022-12-20T11:07:57.981537Z",
        "url": "https://files.pythonhosted.org/packages/b9/eb/c6cd1c6b0b3a8a544552c92f7800efb4840e91f1a511cf2b2221c3064eb9/welford-torch-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9ebc6cd1c6b0b3a8a544552c92f7800efb4840e91f1a511cf2b2221c3064eb9",
        "md5": "c5876d6a522931ff4b21918a31c0228e",
        "sha256": "f3217eac9bd9e3e1d46e56ce45c551d82d721cfce44187fffdae599f6abf58b6"
      },
      "downloads": -1,
      "filename": "welford-torch-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c5876d6a522931ff4b21918a31c0228e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6352,
      "upload_time": "2022-12-20T11:07:57",
      "upload_time_iso_8601": "2022-12-20T11:07:57.981537Z",
      "url": "https://files.pythonhosted.org/packages/b9/eb/c6cd1c6b0b3a8a544552c92f7800efb4840e91f1a511cf2b2221c3064eb9/welford-torch-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}