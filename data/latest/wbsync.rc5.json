{
  "info": {
    "author": "Alejandro González Hevia, Othmane Bakhtaoui, Pablo Menéndez",
    "author_email": "alejandrgh11@gmail.com, b.othmane98@live.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# wikibase-sync\n<table>\n<tr>\n  <td>License</td>\n  <td>\n    <a href=\"https://github.com/weso/wikibase-sync/blob/master/LICENSE\">\n    <img src=\"https://img.shields.io/github/license/weso/wikibase-sync\" alt=\"license\" />\n    </a>\n</td>\n</tr>\n<tr>\n  <td>Build Status</td>\n  <td>\n    <a href=\"https://travis-ci.com/weso/wikibase-sync\">\n    <img src=\"https://travis-ci.com/weso/wikibase-sync.svg?branch=master\" alt=\"travis build status\" />\n    </a>\n  </td>\n</tr>\n<tr>\n  <td>Coverage</td>\n  <td>\n    <a href=\"https://codecov.io/gh/weso/wikibase-sync\">\n    <img src=\"https://codecov.io/gh/weso/wikibase-sync/branch/master/graph/badge.svg\" alt=\"coverage\" />\n    </a>\n  </td>\n</tr>\n</table>\n\nPython library to synchronise data between RDF files and Wikibase instances.\n\nIt updates your wikibase instance based on the changes of the RDF ontology.\n\n## How to install\nYou can install it manually from the source code:\n```bash\ngit clone https://github.com/weso/wikibase-sync\ncd wikibase-sync\npython setup.py install\n```\n\nPython 3.7+ is recommended.\n\n## Examples\nWith the following code you can synchronize the modification of two RDF files to a given Wikibase instance:\n```python\nfrom wbsync.triplestore import WikibaseAdapter\nfrom wbsync.synchronization import GraphDiffSyncAlgorithm, OntologySynchronizer\n\nmediawiki_api_url='wikibase_api_endpoint'\nsparql_endpoint_url='wikibase_sparql_endpoint'\nusername='wikibase_username'\npassword='wikibase_password'\nadapter = WikibaseAdapter(mediawiki_api_url, sparql_endpoint_url, username, password)\n\nalgorithm = GraphDiffSyncAlgorithm()\nsynchronizer = OntologySynchronizer(algorithm)\n\nsource_content = \"original rdf content goes here\"\ntarget_content = \"final rdf content goes here\"\nops = synchronizer.synchronize(source_content, target_content)\nfor op in ops:\n    res = op.execute(adapter)\n    if not res.successful:\n        print(f\"Error synchronizing triple: {res.message}\")\n```\n\nLeaving the source_content empty will be equivalent to adding the target contents to the Wikibase, while leaving the target_content empty will be equivalent to removing the source_content from the Wikibase if present. Additional examples about synchronizing RDF files with a Wikibase instance can be seen in the [Synchronization notebook](notebooks/Synchronization.ipynb).\n\n## Executing batch operations\nThere is the possibility of performing batch operations (executing at once all of the statements of a given entity). This type of synchronization will have a better performance at the risk that an invalid statement will cancel the entire batch operation. The following code can be used to execute batch operations:\n```python\nfrom wbsync.synchronization.operations import optimize_ops\n\ndef execute_batch_synchronization(source_content, target_content, synchronizer, adapter):\n    ops = synchronizer.synchronize(source_content, target_content)\n    batch_ops = optimize_ops(ops)\n    for op in batch_ops:\n        res = op.execute(adapter)\n        if not res.successful:\n            print(f\"Error synchronizing triple: {res.message}\")\n```\n\nMore information about these operations and time gained with them can be explored in the [Benchmarks notebook](notebooks/Benchmarks.ipynb).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/weso/rdf-wb-sync",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wbsync",
    "package_url": "https://pypi.org/project/wbsync/",
    "platform": "",
    "project_url": "https://pypi.org/project/wbsync/",
    "project_urls": {
      "Homepage": "https://github.com/weso/rdf-wb-sync"
    },
    "release_url": "https://pypi.org/project/wbsync/0.1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9706166,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3f67154995916458962693339f1d0e4b39f8a3576fac0104f70558c90e49912",
          "md5": "14395b07f1a8a0085af79abc022b77c3",
          "sha256": "d4837db00ec92a9f07cf1da01b2e4e3b3e2617b82f86fcd1b0798049d8955aa7"
        },
        "downloads": -1,
        "filename": "wbsync-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "14395b07f1a8a0085af79abc022b77c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10825,
        "upload_time": "2020-08-31T16:50:32",
        "upload_time_iso_8601": "2020-08-31T16:50:32.014795Z",
        "url": "https://files.pythonhosted.org/packages/a3/f6/7154995916458962693339f1d0e4b39f8a3576fac0104f70558c90e49912/wbsync-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82c057f0ea2de358940c340e50c8bbf2143ac4caf8420b9fb74d5138ea2ab62c",
          "md5": "b3ccbdb32f097b1d23b7a18cc1e89a04",
          "sha256": "e48102d59dd8c959c814d429e6d8fc4aaa9e48238b6f7b6da586ae80cec61a8a"
        },
        "downloads": -1,
        "filename": "wbsync-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b3ccbdb32f097b1d23b7a18cc1e89a04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10825,
        "upload_time": "2020-08-31T16:52:49",
        "upload_time_iso_8601": "2020-08-31T16:52:49.454774Z",
        "url": "https://files.pythonhosted.org/packages/82/c0/57f0ea2de358940c340e50c8bbf2143ac4caf8420b9fb74d5138ea2ab62c/wbsync-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49ebcdbd7efdfa1cd621e4b0f7e04f94a6e8d5c6f10db7a77cb04adaf16da781",
          "md5": "8edeec3de90a84931f0ecc6b86f96781",
          "sha256": "ef25f77b911bd321d3bcb46901cfd91e1718ec20cbc77dc14e1e671edc0803e8"
        },
        "downloads": -1,
        "filename": "wbsync-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8edeec3de90a84931f0ecc6b86f96781",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13099,
        "upload_time": "2020-08-31T18:32:12",
        "upload_time_iso_8601": "2020-08-31T18:32:12.846060Z",
        "url": "https://files.pythonhosted.org/packages/49/eb/cdbd7efdfa1cd621e4b0f7e04f94a6e8d5c6f10db7a77cb04adaf16da781/wbsync-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "765a4089f284813daa2c5dee981747765fcbd880ca972842b5ffcd7405aae205",
          "md5": "7cdfd847515a27f3593ec569131059d5",
          "sha256": "59b2f2f561c5c078c1f85996dcbbb6fc4bff2556b52840993f1d64b61cebd471"
        },
        "downloads": -1,
        "filename": "wbsync-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7cdfd847515a27f3593ec569131059d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13094,
        "upload_time": "2020-08-31T19:01:35",
        "upload_time_iso_8601": "2020-08-31T19:01:35.719707Z",
        "url": "https://files.pythonhosted.org/packages/76/5a/4089f284813daa2c5dee981747765fcbd880ca972842b5ffcd7405aae205/wbsync-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c7a2aaafdce186021df220acce8990784b1860e56a4b26b8efe41cef3b5bfb6",
          "md5": "341cd0afcac0b4977a24ccb7dfd8765b",
          "sha256": "0371c62d571a7158095e08a0565a9507241bf929aef48dd57443ccbb13c86355"
        },
        "downloads": -1,
        "filename": "wbsync-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "341cd0afcac0b4977a24ccb7dfd8765b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13865,
        "upload_time": "2021-03-08T19:06:01",
        "upload_time_iso_8601": "2021-03-08T19:06:01.066948Z",
        "url": "https://files.pythonhosted.org/packages/8c/7a/2aaafdce186021df220acce8990784b1860e56a4b26b8efe41cef3b5bfb6/wbsync-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c7a2aaafdce186021df220acce8990784b1860e56a4b26b8efe41cef3b5bfb6",
        "md5": "341cd0afcac0b4977a24ccb7dfd8765b",
        "sha256": "0371c62d571a7158095e08a0565a9507241bf929aef48dd57443ccbb13c86355"
      },
      "downloads": -1,
      "filename": "wbsync-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "341cd0afcac0b4977a24ccb7dfd8765b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13865,
      "upload_time": "2021-03-08T19:06:01",
      "upload_time_iso_8601": "2021-03-08T19:06:01.066948Z",
      "url": "https://files.pythonhosted.org/packages/8c/7a/2aaafdce186021df220acce8990784b1860e56a4b26b8efe41cef3b5bfb6/wbsync-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}