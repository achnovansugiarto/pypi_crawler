{
  "info": {
    "author": "Gomgom",
    "author_email": "dev@gomgom.io",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5"
    ],
    "description": ".. image:: https://blog.gomgom.io/blog/wp-content/uploads/2016/05/pypubdata_logo_160514.png\n    :target: https://github.com/gomgomdev/pypubdata\n    :align: center\n    :alt: pypubdata Logo image\n\n**pypubdata: 대한민국 공공데이터 OpenAPI가 Python 3로 포팅된 파이썬 OpenAPI 활용 모듈 라이브러리**\n\n.. image:: https://img.shields.io/pypi/l/pypubdata.svg?maxAge=2592000\n     :target: http://www.gnu.org/licenses/lgpl-3.0.html\n     :alt: license - lGPL v3\n.. image:: https://img.shields.io/pypi/pyversions/pypubdata.svg?maxAge=2592000\n    :target: https://github.com/gomgomdev/pypubdata\n    :alt: support python verson - upper 3.5\n.. image:: https://img.shields.io/pypi/v/pypubdata.svg?maxAge=2592000\n    :target: https://github.com/gomgomdev/pypubdata\n    :alt: pypi version - check Github\n\n\n===============\n들어가며\n===============\n\n이 모듈은 파이썬을 통해 대한민국 공공데이터포털(https://data.go.kr) OpenAPI에 손쉽게 접근할 수 있도록 하기 위하여 만들어진 모듈 패키지입니다.\n\n개인적으로 개발하며 사용하기 위해 만든 간단한 국가대기오염정보 OpenAPI 처리 모듈을, 부끄럽지만 많이 손봐서 내놓습니다.\n\n현재까지는 한국환경공단의 **국가대기오염정보의 HTTP -> 파이썬 딕셔너리 포팅**을 지원하고 있습니다.\n\n시간 날 때마다 조금씩 조금씩 손봐서 좀 더 다양한 OpenAPI를 지원할 수 있는 모듈 패키지가 되었으면 좋겠습니다.\n\n\n===============\n각 모듈의 저작권\n===============\n\nOpenAPI를 포팅하기 위한 모듈 소스 코드는 모두 GNU 약소 일반 공중 사용 허가서(GNU Lesser General Public License) version 3에 따라 저작권이 보호되고 있습니다.\n\nlGPL v3에 관한 자세한 정보는 GNU.org를 참고하여 주십시오.\n\nⓒ 본 라이브러리 내 개인적으로 쓰여진 코드는 lGPL v3 라이센스에 준거하여 공개합니다.\n\nⓒ 모든 데이터의 저작권 및 OpenAPI 접근에 관한 방법에 대한 방법 일체에 대해서는 공공데이터포털 저작권을 따릅니다.\n\nⓒ Copyright of pypubdata's code is under the lGPL v3 license.\nⓒ Copyright of every data and OpenAPI of Republic of Korea Public Data Portal and OpenAPI are under their own license.\nⓒ The Python logo is a trademark of the PSF\n\n\n======================================\n국가대기오염정보 OpenAPI 모듈 사용법 (pdairp)\n======================================\n\n*(ver 0.1.3 기준, c한국환경공단, c환경부)*\n\n'pdairp' 모듈을 통해 현재 지원하고 있는 서비스는 '측정소정보 조회 서비스', '대기오염정보조회 서비스', '대기오염통계 서비스', '오존황사 발생정보조회' 입니다.\n\n모든 데이터는 공공데이터포털에서 제공하는 'IROS3_OA_DV_0701_OpenAPI활용가이드_한국환경공단_국가대기오염정보_v1.3.docx'에 기재되어 있는 결과값을 받아오도록 기본 구조가 형성되어있습니다.\n\n영어로 기재되어 있는 서비스명들은 사용하기 용이하도록 이름을 임의로 수정하였으며, 데이터가 정상적이지 못한 또는 적용할 필요가 없는 API는 과감하게 제거하였습니다.\n\n------------------\n개요\n------------------\n\n사용을 위해서는 먼저 pypubdata 패키지에서 pdairp(국가대기오염정보 모듈)을 import합니다.\n\n그 이후, pdairp에서 이용하고자 하는 서비스를 찾으신 뒤, 공공데이터포털에서 지급받으신 비밀키(utf-8 엑세스 키)를 입력해 인스턴스를 초기화 해 줍니다.\n\n.. code:: bash\n\n  For Windows: C:\\Users\\sample> pip install pypubdata\n  For Linux/Unix: sample@ip-123-12-3-45:~$ sudo pip3 install pypubdata\n\n.. code:: python\n\n  >>> import pdairp\n  >>> a = pdairp.PollutionData(\"ACCESS_KEY\")\n\npdairp 모듈을 초기화 한 인스턴스(예제의 a)를 활용하여, 다양한 기능을 하는 메소드를 불러와서 사용하시면 됩니다.\n\n.. code:: python\n\n  >>> print(a.station(\"문창동\", \"DAILY\"))\n  {'totalCount': 23, '9': {'pm10Value24': '23', 'pm25Value': '-', ...\n\n모든 데이터는 파이썬 딕셔너리(Dictionary) 구조로 반환되며, 키 값의 구조는 다음과 같습니다.\n\n- 딕셔너리 안에는: 'totalCount'와 숫자로 구성된 딕셔너리를 반환합니다. totalCount는 반환된 데이터의 총 갯수이며, 그 갯수별로 딕셔너리가 존재합니다.\n- 숫자 키 값 안에는: '0'번 딕셔너리부터 가장 최근값이 들어가 있습니다. 숫자 키 값을 갖는 딕셔너리 안에는 {'반환 내용', 반환값}으로 구성된 딕셔너리가 존재합니다.\n- 사용 예) 문창동측정소의 하루치 자료 중 가장 최신 자료의 PM10 값\n\n.. code:: python\n\n  >> pm10 = a.station(\"문창동\", \"DAILY\")['0']['pm10Value']\n  >> print(pm10)\n\n아래 서비스 목록에는 서비스 목록과 결과값만 간단하게 기재해 두었으므로, 클래스 및 변수값 등에 대한 자세한 정보는 OpenAPI 신청 시 동봉되어 있는 워드문서를 참고해 주세요.\n\n----------------------------------\n측정소정보 조회 서비스 (StationInfo 클래스)\n----------------------------------\n\n- **근접측정소 목록 조회(nearby)**\n\n.. code:: python\n\n  >> StationInfo.nearby(tm_x, tm_y, page_no='1', num_of_rows='10')\n\n*tmX 코드*와 *tmY 코드*를 받아 그 주변의 근접측정소 목록을 조회해줍니다.\n\n결과로는 다음과 같은 값을 활용할 수 있습니다.\n\n=============    ================\n항목명(영문)          항목명(국문)\n=============    ================\nstationName      측정소 이름\naddr             측정소 주소\ntm               측정소까지 거리\n=============    ================\n\n- **측정소 목록 조회 -상세정보조회- (detail)**\n\n.. code:: python\n\n  >> StationInfo.detail(addr, station_name, page_no='1', num_of_rows='10')\n\n*지역명*과 *측정소명*을 입력받아 그 측정소의 정보를 자세하게 조회해줍니다.\n\n결과로는 다음과 같은 값을 활용할 수 있습니다.\n\n=============    ================\n항목명(영문)          항목명(국문)\n=============    ================\naddr             측정소 주소\ndmX              WGS84 기반 위도\ndmY              WGS84 기반 경도\nitem             측정항목\nmangName         측정망\nmap              지도\noper             관리기관명\nphoto            전경 사진\nstationName      측정소 이미지\nvrml             측정소 전경\nyear             운영년도\n=============    ================\n\n- **TM 기준좌표 조회 (tmcode)**\n\n.. code:: python\n\n  >> StationInfo.tmcode(umd_name, page_no='1', num_of_rows='10')\n\n*읍면동* 이름을 입력받아 그 읍면동과 가장 가까운 측정소를 안내해 줍니다.\n\n결과로는 다음과 같은 값을 활용할 수 있습니다.\n\n=============    ================\n항목명(영문)          항목명(국문)\n=============    ================\nsidoName         시도 이름\nsggName          시군구 이름\numdName          읍면동 이름\ntmX              읍면동의 tm_X 좌표\ntmY              읍면동의 tm_Y 좌표\n=============    ================\n\n\n----------------------------------\n대기오염정보조회 서비스 (PollutionData 클래스)\n----------------------------------\n\n- **측정소별 실시간 측정정보조회 (station)**\n\n.. code:: python\n\n  >> PollutionData.station(station_name, data_term, page_no='1', num_of_rows='10', ver='1.2')\n\n*측정소 이름*과 *요청 데이터 기간*를 받아 데이터 기간 동안의 측정정보를 제공합니다.\n\n결과로는 다음과 같은 값을 활용할 수 있습니다.\n\n=============    ================\n항목명(영문)          항목명(국문)\n=============    ================\ndataTime         측정일\nmangName         측정망\nkhaiGrade        통합대기환경 지수\nkhaiValue        통합대기환경 수치\ncoGrade          일산화탄소 지수\ncoValue          일산화탄소 농도\nno2Grade         이산화질소 지수\nno2Value         이산화질소 농도\no3Grade          오존 지수\no3Value          오존 농도\nso2Grade         아황산가스 지수\nso2Value         아황산가스 농도\npm10Grade        PM10(미세먼지) 지수\npm10Value        PM10 농도\npl10Value24      PM10 24시간 예측농도\npm25Grade        PM2.5(초미세먼지) 지수\npm25Value        PM2.5 농도\npm25Value24      PM2.5 24시간 예측농도\n=============    ================\n\n- **통합대기환경지수 민감군 이상 측정소 목록 조회 (strangelist)**\n\n.. code:: python\n\n  >> PollutionData.strangelist(page_no='1', num_of_rows='10')\n\n현재 통합대기환경지수가 나쁨 이상으로 이상한 측정소의 목록을 조회해줍니다.\n\n결과로는 다음과 같은 값을 활용할 수 있습니다.\n\n=============    ================\n항목명(영문)          항목명(국문)\n=============    ================\naddr             측정소 주소\nstationName      측정소 이름\n=============    ================\n\n- **시도별 실시간 측정정보조회 (sido)**\n\n.. code:: python\n\n  >> PollutionData.sido(sido_name, page_no='1', num_of_rows='10', ver='1.2')\n\n*광역자치단체(시, 도)* 이름을 받아 광역자치단체 대표 시군구에 위치한 측정소 측정정보를 제공합니다.\n\n결과로는 다음과 같은 값을 활용할 수 있습니다.\n\n=============    ================\n항목명(영문)          항목명(국문)\n=============    ================\ndataTime         측정일\nmangName         측정망\nstationName      측정소 이름\nkhaiGrade        통합대기환경 지수\nkhaiValue        통합대기환경 수치\ncoGrade          일산화탄소 지수\ncoValue          일산화탄소 농도\nno2Grade         이산화질소 지수\nno2Value         이산화질소 농도\no3Grade          오존 지수\no3Value          오존 농도\nso2Grade         아황산가스 지수\nso2Value         아황산가스 농도\npm10Grade        PM10(미세먼지) 지수\npm10Value        PM10 농도\npl10Value24      PM10 24시간 예측농도\npm25Grade        PM2.5(초미세먼지) 지수\npm25Value        PM2.5 농도\npm25Value24      PM2.5 24시간 예측농도\n=============    ================\n\n- **미세먼지/오존 예보통보 조회 (forecastlist)**\n\n.. code:: python\n\n  >> PollutionData.forecastlist(inform_code, search_date='0', page_no='1', num_of_rows='10')\n\n*조회코드(PM10, PM25, O3)*와 *조회날짜(예: 2016-05-14)*를 받아 그 시각 예보가 있는 곳을 확인해줍니다.\n\n결과로는 다음과 같은 값을 활용할 수 있습니다.\n\n=============    ================\n항목명(영문)          항목명(국문)\n=============    ================\ndataTime         자료 일자\nimageUrl1        모델 결과(PM10 12시)\nimageUrl2        모델 결과(PM10 18시)\nimageUrl3        모델 결과(PM10 24시)\nimageUrl4        모델 결과(PM2.5 12시)\nimageUrl5        모델 결과(PM2.5 18시)\nimageUrl6        모델 결과(PM2.5 24시)\ninformCause      발생원인\ninformData       에측통보 시간\ninformGrade      예보등급\ninformOverall    예보개황\nactionKnack      행동요령 (필요시)\n=============    ================\n\n\n\n----------------------------------\n대기오염통계 서비스 (PollutionStats 클래스)\n----------------------------------\n\n- **측정소별 최종확정 농도 조회(station)**\n\n.. code:: python\n\n  >> PollutionStats.station(station_name, searchCondition, page_no='1', num_of_rows='10')\n\n*측정소 이름*과 *연별/월별/일별(YEAR/MONTH/DAILY)* 조건을 제공 받아 측정 시작일로부터 모든 통계치를 조회합니다.\n\n결과로는 다음과 같은 값을 활용할 수 있습니다.\n\n=============    ================\n항목명(영문)          항목명(국문)\n=============    ================\ndataTime           측정일\nso2Avg             아황산가스 농도 평균\ncoAvg              일산화탄소 농도 평균\no3Avg              오존 농도\nno2Avg             이산화질소 농도\npm10Avg            미세먼지 농도\n=============    ================\n\n- **기간별 오염통계 조회 (period)**\n\n.. code:: python\n\n  >> PollutionStats.period(searchDataTime, statArticleCondition, page_no='1', num_of_rows='10')\n\n*검색 월(예: 2008-01)*과 *측정망정보(예: \"도시대기\")*를 입력받아 월 통계 자료를 조회합니다.\n\n결과로는 다음과 같은 값을 활용할 수 있습니다.\n\n=============    ================\n항목명(영문)          항목명(국문)\n=============    ================\ndataTime         측정일\nsidoName         시도이름 (지자체명)\nso2Avg           아황산가스 농도 평균\ncoAvg            일산화탄소 농도 평균\no3Avg            오존 농도 평균\nno2Avg           이산화질소 농도 평균\npm10Avg          미세먼지(PM10) 농도 평균\nso2Max           아황산가스 농도 최대값\ncoMax            일산화탄소 농도 최대값\no3Max            오존 농도 최대값\nno2Max           이산화질소 농도 최대값\npm10Max          미세먼지 농도 최대값\nso2Min           아황산가스 농도 최소값\ncoMin            일산화탄소 농도 최소값\no3Min            오존 농도 최소값\nno2Min           이산화질소 농도 최소값\npm10Min          미세먼지 농도 최소값\n=============    ================\n\n\n\n----------------------------------\n오존황사 발생정보조회 (O3YOccurInfo 클래스)\n----------------------------------\n\n- **오존주의보 발생정보 조회(o3)**\n\n.. code:: python\n\n  >> O3YOccurInfo.o3(year, page_no='1', num_of_rows='10')\n\n*조회 연도*를 제공받아 특정 연도의 오존주의보 발생정보를 조회합니다.\n\n결과로는 다음과 같은 값을 활용할 수 있습니다.\n\n=============    ================\n항목명(영문)          항목명(국문)\n=============    ================\ndataTime         측정일\ndistrictName     발령 지역 이름\nmoveName         발령 권역 이름\nissueTime        발령 시각\nissueVal         발령 시 오존 농도\nclearTime        해제 시각\nclearVal         해제 시 오존 농도\nMaxVal           오존 최고 농도\n=============    ================\n\n- **황사주의보 발생정보 조회(yellow)**\n\n.. code:: python\n\n  >> O3YOccurInfo.yellow(year, page_no='1', num_of_rows='10')\n\n*조회 연도*를 제공받아 특정 연도의 황사주의보 발생정보를 조회합니다.\n\n결과로는 다음과 같은 값을 활용할 수 있습니다.\n\n=============    ================\n항목명(영문)          항목명(국문)\n=============    ================\ndataTime         측정일\ntmCnt            발령 회차\ntmArea           주의보 발령 지역\n=============    ================\n\n\n\n======================================\n모듈 문서 (Documentation)\n======================================\n\n아직 준비하지 못했습니다. 현재까지 개발된 모듈은 Github 내 pypubdata 저장소의 README.rst를 참조해 주시기 바랍니다.\n\n(https://github.com/gomgomdev/pypubdata)\n\n\n======================================\n도움이 필요한 경우 및 기타 문의 안내 (Contact)\n======================================\n\nGithub 저장소 내 Issues에서 각종 버그와 기타 문의를 추적하고자 합니다.\n\n프로그래밍이 본업이 아닌 쌩초보 개발자이므로 살살 다뤄주세요... (^^;)\n\n(https://github.com/gomgomdev/pypubdata)\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/gomgomdev/pypubdata/archive/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gomgomdev/pypubdata",
    "keywords": "",
    "license": "lGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pypubdata",
    "package_url": "https://pypi.org/project/pypubdata/",
    "platform": "",
    "project_url": "https://pypi.org/project/pypubdata/",
    "project_urls": {
      "Download": "https://github.com/gomgomdev/pypubdata/archive/master.zip",
      "Homepage": "https://github.com/gomgomdev/pypubdata"
    },
    "release_url": "https://pypi.org/project/pypubdata/0.1.4.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "It is simple module package for ROK Public Data OpenAPI.",
    "version": "0.1.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3854424,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57589319c6dbcbadfe44961a62529a1e85129b5279db74d3e88191f9f7419a9e",
          "md5": "ad3c3798ef2fe18c9c864a88418ff193",
          "sha256": "98dc73dfc2ae201c50243d5eb708c602ffa14ba13684bd3c0999e931ef4d2534"
        },
        "downloads": -1,
        "filename": "pypubdata-0.1.2.zip",
        "has_sig": false,
        "md5_digest": "ad3c3798ef2fe18c9c864a88418ff193",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8077,
        "upload_time": "2016-05-14T10:23:26",
        "upload_time_iso_8601": "2016-05-14T10:23:26.425547Z",
        "url": "https://files.pythonhosted.org/packages/57/58/9319c6dbcbadfe44961a62529a1e85129b5279db74d3e88191f9f7419a9e/pypubdata-0.1.2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcff5d4f31d04b6e74fb7955ad671a48d1aaf30946beca72d70aa0c62415edae",
          "md5": "66d9ece00328f8213b80e5f1c1cb4b2c",
          "sha256": "e04c29b28156dd518a2445a207a121ecd900bd7f5c24fa7a9f5a5f23c21ee0f7"
        },
        "downloads": -1,
        "filename": "pypubdata-0.1.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66d9ece00328f8213b80e5f1c1cb4b2c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9391,
        "upload_time": "2018-05-11T15:09:41",
        "upload_time_iso_8601": "2018-05-11T15:09:41.327959Z",
        "url": "https://files.pythonhosted.org/packages/bc/ff/5d4f31d04b6e74fb7955ad671a48d1aaf30946beca72d70aa0c62415edae/pypubdata-0.1.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06afc803dd031227b9d474355f2f3460144b1c0638002e14787ae49f966dfd25",
          "md5": "182e46dae41459bc03b0f728c59a6787",
          "sha256": "f2c93adb5a5b5d2de72e67b64d3395bc660ce4fc4c2c90b22dea01477c8ebd67"
        },
        "downloads": -1,
        "filename": "pypubdata-0.1.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "182e46dae41459bc03b0f728c59a6787",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8236,
        "upload_time": "2018-05-11T15:09:42",
        "upload_time_iso_8601": "2018-05-11T15:09:42.663854Z",
        "url": "https://files.pythonhosted.org/packages/06/af/c803dd031227b9d474355f2f3460144b1c0638002e14787ae49f966dfd25/pypubdata-0.1.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcff5d4f31d04b6e74fb7955ad671a48d1aaf30946beca72d70aa0c62415edae",
        "md5": "66d9ece00328f8213b80e5f1c1cb4b2c",
        "sha256": "e04c29b28156dd518a2445a207a121ecd900bd7f5c24fa7a9f5a5f23c21ee0f7"
      },
      "downloads": -1,
      "filename": "pypubdata-0.1.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "66d9ece00328f8213b80e5f1c1cb4b2c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9391,
      "upload_time": "2018-05-11T15:09:41",
      "upload_time_iso_8601": "2018-05-11T15:09:41.327959Z",
      "url": "https://files.pythonhosted.org/packages/bc/ff/5d4f31d04b6e74fb7955ad671a48d1aaf30946beca72d70aa0c62415edae/pypubdata-0.1.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06afc803dd031227b9d474355f2f3460144b1c0638002e14787ae49f966dfd25",
        "md5": "182e46dae41459bc03b0f728c59a6787",
        "sha256": "f2c93adb5a5b5d2de72e67b64d3395bc660ce4fc4c2c90b22dea01477c8ebd67"
      },
      "downloads": -1,
      "filename": "pypubdata-0.1.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "182e46dae41459bc03b0f728c59a6787",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8236,
      "upload_time": "2018-05-11T15:09:42",
      "upload_time_iso_8601": "2018-05-11T15:09:42.663854Z",
      "url": "https://files.pythonhosted.org/packages/06/af/c803dd031227b9d474355f2f3460144b1c0638002e14787ae49f966dfd25/pypubdata-0.1.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}