{
  "info": {
    "author": "BitLogiK",
    "author_email": "contact@bitlogik.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Security :: Cryptography",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "OTPpy\r\n=====\r\n\r\nOTP library for Python 3 : HOTP and TOTP ( RFC4226 &amp; RFC6238 )\r\n\r\nEasy to use OTP 2FA check and generator, counter-based or time-based\r\n\r\n* Fully compatible with standards\r\n* Can manage 4 to 8 digits\r\n* Can manage SHA1, SHA256 or SHA512 hash functions (as in RFC6238)\r\n\r\nCompatible with Google Authenticator (default settings)\r\n\r\n\r\n## Using library\r\n\r\n### Get the library\r\n\r\nFrom pip/pypi repository :\r\n\r\n    python3 -m pip install otppy\r\n\r\nOr the old fashion way :  \r\nCopy the otppy folder in your working directory.\r\n\r\nUse  \r\n`from otppy import OTP` in your Python program.\r\n\r\n\r\n### Examples\r\n\r\n\r\nExample for code generation :\r\n\r\n    from otppy import OTP\r\n    this_otp = OTP.fromb32(\"BASE32SECRETHERE\")\r\n    # TOTP return : [TOTPcode, Remaining Time in seconds]\r\n    totp = this_otp.TOTP()\r\n    print(\"TOTP Code :\", totp[0])\r\n    print(totp[1], \"sec left\")\r\n\r\nExample for code check :\r\n\r\n    # Initialize\r\n    from otppy import OTP\r\n    this_otp = OTP.fromb32(\"BASE32SECRETHERE\")\r\n    # Check validity, return a boolean\r\n    totp_valid = this_otp.check_TOTP(string_code_received)\r\n\r\n\r\n### Interface methods of OTPpy OTP\r\n\r\n`otppy.OTP( secret, hashalg=\"sha1\", digits=6, time_window=30 )`  \r\nCreate an OTP object from a raw secret.  \r\nBetter to use with the class constructor \"fromb32\" :\r\n\r\n`otppy.fromb32( secret_base32, hashalg=\"sha1\", digits=6, time_window=30 )`  \r\nLoad an OTP from parameters, including the shared secret as base32 encoded.  \r\nsecret_base32 is the shared secret encoded in base32, optional padding.  \r\nhashalg is the hash algorithm to use : \"sha1\", \"sha256\" or \"sha512\".  \r\ndigits is the integer for number of digits.  \r\ntime_window is the time width of a time block in seconds (integer).  \r\nNote that the secret_base32 argument is enough to use a standard OTP setting (sha1, 6 digits and 30 seconds blocks).\r\n\r\n`.HOTP( counter )`  \r\nCompute a HOTP code from the integer counter value.  \r\nReturn the HOTP code as a string.\r\n\r\n`.TOTP( )`  \r\nCompute a TOTP code from the current UTC machine time.  \r\nReturn a duet list : the TOTP code as a string, and the remaining validity time in seconds.\r\n\r\n`.check_HOTP( counter_value, hotp_string )`  \r\nCheck the HOTP code string for the given values.  \r\nReturn a boolean.\r\n\r\n\r\n`.check_TOTP( totp_string )`  \r\nCheck the TOTP code string (for the machine UTC time).  \r\nReturn a boolean.\r\n\r\n\r\nForm more details: see otppy/ code.\r\n\r\n### Internal tests\r\n\r\nTest vectors from standards included in tests directory for pytest :\r\n\r\n    python3 -m pytest tests\r\n\r\n\r\nLicence\r\n-------\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, version 3 of the License.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bitlogik/OTPpy",
    "keywords": "otppy otp security hotp totp 2FA",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "OTPpy",
    "package_url": "https://pypi.org/project/OTPpy/",
    "platform": "",
    "project_url": "https://pypi.org/project/OTPpy/",
    "project_urls": {
      "Homepage": "https://github.com/bitlogik/OTPpy"
    },
    "release_url": "https://pypi.org/project/OTPpy/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.4",
    "summary": "OTP library for Python 3",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11972051,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b61a4c1bf81a02128eb1b1f7e3333ce29dfd90f914e77f602bc328f1b9bf0e86",
          "md5": "91be2daabee534afa6778cc79c4b2432",
          "sha256": "0d41b8af4f1328c6e73f16da612b8ec54eae3be6b5bb13c54890b054e59ea7bc"
        },
        "downloads": -1,
        "filename": "OTPpy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "91be2daabee534afa6778cc79c4b2432",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 16379,
        "upload_time": "2021-11-08T13:53:20",
        "upload_time_iso_8601": "2021-11-08T13:53:20.647864Z",
        "url": "https://files.pythonhosted.org/packages/b6/1a/4c1bf81a02128eb1b1f7e3333ce29dfd90f914e77f602bc328f1b9bf0e86/OTPpy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72924cddfe9aba928b35728ff4f87a12e32aa89888225fecda7bbba609e926eb",
          "md5": "90137c327db3adbcdd591afb85a907ff",
          "sha256": "826a9dd3110b94d209f90b101594650420c10e2c99c27477533dce63031ec668"
        },
        "downloads": -1,
        "filename": "OTPpy-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "90137c327db3adbcdd591afb85a907ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 16491,
        "upload_time": "2021-11-09T11:56:53",
        "upload_time_iso_8601": "2021-11-09T11:56:53.198783Z",
        "url": "https://files.pythonhosted.org/packages/72/92/4cddfe9aba928b35728ff4f87a12e32aa89888225fecda7bbba609e926eb/OTPpy-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "72924cddfe9aba928b35728ff4f87a12e32aa89888225fecda7bbba609e926eb",
        "md5": "90137c327db3adbcdd591afb85a907ff",
        "sha256": "826a9dd3110b94d209f90b101594650420c10e2c99c27477533dce63031ec668"
      },
      "downloads": -1,
      "filename": "OTPpy-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "90137c327db3adbcdd591afb85a907ff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 16491,
      "upload_time": "2021-11-09T11:56:53",
      "upload_time_iso_8601": "2021-11-09T11:56:53.198783Z",
      "url": "https://files.pythonhosted.org/packages/72/92/4cddfe9aba928b35728ff4f87a12e32aa89888225fecda7bbba609e926eb/OTPpy-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}