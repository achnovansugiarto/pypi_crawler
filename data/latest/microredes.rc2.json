{
  "info": {
    "author": "Gonzalo Ribera",
    "author_email": "gonzalo.ribera@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# microredes-lib\n\n## Instalación\n\n### Requerimientos\n\nPython 3.6 o superior\n\n### Librerías necesarias para instalar\n\n```sh\n$ pip install --upgrade --pre python-can\n```\n\n### Instalación de la librería\n\n```sh\n$ pip install microredes\n```\n\n## Ejemplos de uso\n\n```python3\nfrom microredes import microredes as mr # Importación de la librería\n\nbus = mr.Microredes('/dev/ttyUSB0', '115200') # Conexión al BUS\n```\n\n### Seteo de salida digital\n\n```python3\nbus.set_target(2) # Setea la dirección de destino del equipo a consultar\nbus.do_digital_out(2, True) # Pone en True el pin digital 2\n```\n\n### Leyendo entrada analógica\n\n```python3\nbus.set_target(2) # Setea la dirección de destino del equipo a consultar\nbus.qry_analog_in(0) # Lee la entrada analógica 0\nres = bus.can_read() # Lee el BUS de datos y guarda la respuesta del query\nprint(res)\n```\n\n### Uso del intervalo\n\nEn el caso de las funciones de consulta (qry), existe un parámetro opcional que permite dejar en ejecución una consulta durante el tiempo indicado expresado en segundos.\n\n```python3\nbus.set_target(2) # Setea la dirección de destino del equipo a consultar\nquery_id = bus.qry_analog_in(0, interval=1) # Lee la entrada analógica 0 con un intervalo de 1 segundo\n\ncont = 0  # Inicio contador en 0\nwhile True:  # Lee en bucle infinito la respuesta desde el BUS\n  res = bus.can_read()\n\n  if len(res):\n    print(res)\n    cont += 1  # Incremento contador\n    if cont == 5:  # Si el contador llega a 5\n      bus.stop_listener(query_id)  # Detiene la consulta\n      break\n```\n\n### Objeto de respuesta\n\nLa respuesta de cada consulta devuelve un objeto del siguiente tipo:\n\n```\n[\n  {\n    'origen': '0x2',                                                   # Dir. de origen de la respuesta\n    'status': 'ACK',                                                   # Status de la respuesta\n    'timestamp': '2021-09-29 09:44:26.931015',                         # Fecha y hora de recepción\n    'data': ['0x1', '0x3', '0x0', '0x4', '0x51', '0x0', '0x0', '0x0'], # Mensaje completo\n    'valor': 0.825,                                                    # Valor leído\n    'unidad': 'v'                                                      # Unidad\n  }\n]\n```\n\n## Listado de funciones\n\n### ACQ-II\n\n| Tipo | Función        | Parámetros                                                                                                 | Descripción                                                              |\n| :--: | :------------- | :--------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------- |\n|  DO  | do_digital_out | **pin** (int) Pin [2-9] <br/> **mode:** (bool) Enciende/Apaga                                              | Enciende/Apaga salida digital indicada.                                  |\n|  DO  | do_analog_out  | **pin** (int) Pin [0-1] <br/> **steps:** (int) Valor                                                       | Setea salida del DAC.                                                    |\n|  DO  | do_pwm         | **pin** (int) Pin de salida [10-13] <br/> **duty** (int) Duty Cicle                                        | Habilita salida PWM.                                                     |\n|  DO  | do_parada      | -                                                                                                          | Detiene todas las interrupciones y lecturas del equipo.                  |\n|  DO  | do_soft_reset  | -                                                                                                          | Reinicia el equipo.                                                      |\n| QRY  | qry_digital_in | -                                                                                                          | Devuelve estado de los pines digitales.                                  |\n| QRY  | qry_analog_in  | **pin** (int) Pin [0-7]                                                                                    | Devuelve valor del pin analógico pasado por parámetro.                   |\n| QRY  | qry_rtc        | -                                                                                                          | Devuelve fecha y hora del RTC del equipo.                                |\n| SET  | set_modo_func  | **mode** (int) Modo de trabajo [0-4]                                                                       | Setea el modo de funcionamiento de la placa.                             |\n| SET  | set_analog     | **cant_can** (int) Cantidad de canales analógicos a habilitar [1-8]                                        | Setea cantidad de canales analógicos.                                    |\n| SET  | set_in_amp     | **cant_can** (int) Cantidad de canales in-Amp a habilitar                                                  | Setea cantidad de canales in-Amp.                                        |\n| SET  | set_amp_in_amp | **pin** (int) Canal in-Amp a amplificar [9-12] <br/> **amp** (int) Amplificación [0-3] (int) Amplificación | Setea amplificación de canales in-Amp.                                   |\n| SET  | set_rtc        | **fecha** (string) Fecha en formato dd/mm/aa. <br/> **hora** (string) Hora en formato hh:mm:ss             | Setea la fecha y hora en el RTC del equipo.                              |\n|  HB  | hb_echo        | **val** (int) Valor [0-127]                                                                                | Devuelve el mismo valor pasado por parámetro. Sirve a modo de heartbeat. |\n\n### M90E36A\n\n| Tipo | Función    | Descripción                                  |\n| :--: | :--------- | :------------------------------------------- |\n| QRY  | qry_u_a    | Devuelve tensión F1                          |\n| QRY  | qry_u_b    | Devuelve tensión F2                          |\n| QRY  | qry_u_c    | Devuelve tensión F3                          |\n| QRY  | qry_i_a    | Devuelve corriente F1                        |\n| QRY  | qry_i_b    | Devuelve corriente F2                        |\n| QRY  | qry_i_c    | Devuelve corriente F3                        |\n| QRY  | qry_i_n1   | Devuelve corriente N                         |\n| QRY  | qry_pa_a   | Devuelve potencia activa F1                  |\n| QRY  | qry_pa_b   | Devuelve potencia activa F2                  |\n| QRY  | qry_pa_c   | Devuelve potencia activa F3                  |\n| QRY  | qry_pa_tot | Devuelve potencia activa total               |\n| QRY  | qry_pr_a   | Devuelve potencia reactiva F1                |\n| QRY  | qry_pr_b   | Devuelve potencia reactiva F2                |\n| QRY  | qry_pr_c   | Devuelve potencia reactiva F3                |\n| QRY  | qry_pr_tot | Devuelve potencia reactiva total             |\n| QRY  | qry_fp_a   | Devuelve potencia factor de potencia F1      |\n| QRY  | qry_fp_b   | Devuelve potencia factor de potencia F2      |\n| QRY  | qry_fp_c   | Devuelve potencia factor de potencia F3      |\n| QRY  | qry_fp_tot | Devuelve potencia factor de potencia total   |\n| QRY  | qry_thdu_a | Devuelve distorsión armónica en tensión F1   |\n| QRY  | qry_thdu_b | Devuelve distorsión armónica en tensión F2   |\n| QRY  | qry_thdu_c | Devuelve distorsión armónica en tensión F3   |\n| QRY  | qry_thdi_a | Devuelve distorsión armónica en corriente F1 |\n| QRY  | qry_thdi_b | Devuelve distorsión armónica en corriente F2 |\n| QRY  | qry_thdi_c | Devuelve distorsión armónica en corriente F3 |\n| QRY  | qry_frec   | Devuelve temperatura                         |\n| QRY  | qry_temp   | Devuelve frecuencia                          |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gribera/microredes-lib",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "microredes",
    "package_url": "https://pypi.org/project/microredes/",
    "platform": "",
    "project_url": "https://pypi.org/project/microredes/",
    "project_urls": {
      "Homepage": "https://github.com/gribera/microredes-lib"
    },
    "release_url": "https://pypi.org/project/microredes/0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Librería para control de una microrred basada en BUS CAN",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12888029,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed23fdfaa12f1ab4d671a3e93bcdef579a6561cdfacd923813fea2216d609c56",
          "md5": "2f1ffaedad390b3a5e8dcb350f257309",
          "sha256": "a1e0893b8b4b9a017fbd94884fa7b180ca70e923ecb624ab6f038f90f618f43b"
        },
        "downloads": -1,
        "filename": "microredes-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f1ffaedad390b3a5e8dcb350f257309",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10440,
        "upload_time": "2021-09-29T12:57:27",
        "upload_time_iso_8601": "2021-09-29T12:57:27.629965Z",
        "url": "https://files.pythonhosted.org/packages/ed/23/fdfaa12f1ab4d671a3e93bcdef579a6561cdfacd923813fea2216d609c56/microredes-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12381321a06c0c4a72397da2a5df1606a9d3f0070b5bb594a083db2fdcee2005",
          "md5": "97b695a09126fb88fd31c0c2128e0a5c",
          "sha256": "e8475824a727c43571f1b7db4ea883168705f9698357b05c098d7153e76b1e3c"
        },
        "downloads": -1,
        "filename": "microredes-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "97b695a09126fb88fd31c0c2128e0a5c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10503,
        "upload_time": "2021-09-29T12:57:29",
        "upload_time_iso_8601": "2021-09-29T12:57:29.392881Z",
        "url": "https://files.pythonhosted.org/packages/12/38/1321a06c0c4a72397da2a5df1606a9d3f0070b5bb594a083db2fdcee2005/microredes-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5a402a06612d2bba3981c5900837998f703ba069bd276e1404a00d8af1e89a8",
          "md5": "1b9b3d0f32ccb4367bd18d7cd5082381",
          "sha256": "6ee30c71b04fa0b589def664280cf3ec23b7f1acbeb228bd3cd7e64776166acd"
        },
        "downloads": -1,
        "filename": "microredes-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b9b3d0f32ccb4367bd18d7cd5082381",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10755,
        "upload_time": "2022-02-14T18:12:11",
        "upload_time_iso_8601": "2022-02-14T18:12:11.323044Z",
        "url": "https://files.pythonhosted.org/packages/a5/a4/02a06612d2bba3981c5900837998f703ba069bd276e1404a00d8af1e89a8/microredes-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c38e075e2fcd30406123894ee3cbda63ad31e50e2e06612982ba93e97adc7373",
          "md5": "239546131f3271765e98beb760974666",
          "sha256": "66a0c9f1c64c989dd7a9958749bef641a569784953741eb2fedfb9852f40b635"
        },
        "downloads": -1,
        "filename": "microredes-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "239546131f3271765e98beb760974666",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10863,
        "upload_time": "2022-02-14T18:12:13",
        "upload_time_iso_8601": "2022-02-14T18:12:13.050730Z",
        "url": "https://files.pythonhosted.org/packages/c3/8e/075e2fcd30406123894ee3cbda63ad31e50e2e06612982ba93e97adc7373/microredes-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5a402a06612d2bba3981c5900837998f703ba069bd276e1404a00d8af1e89a8",
        "md5": "1b9b3d0f32ccb4367bd18d7cd5082381",
        "sha256": "6ee30c71b04fa0b589def664280cf3ec23b7f1acbeb228bd3cd7e64776166acd"
      },
      "downloads": -1,
      "filename": "microredes-0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1b9b3d0f32ccb4367bd18d7cd5082381",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10755,
      "upload_time": "2022-02-14T18:12:11",
      "upload_time_iso_8601": "2022-02-14T18:12:11.323044Z",
      "url": "https://files.pythonhosted.org/packages/a5/a4/02a06612d2bba3981c5900837998f703ba069bd276e1404a00d8af1e89a8/microredes-0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c38e075e2fcd30406123894ee3cbda63ad31e50e2e06612982ba93e97adc7373",
        "md5": "239546131f3271765e98beb760974666",
        "sha256": "66a0c9f1c64c989dd7a9958749bef641a569784953741eb2fedfb9852f40b635"
      },
      "downloads": -1,
      "filename": "microredes-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "239546131f3271765e98beb760974666",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10863,
      "upload_time": "2022-02-14T18:12:13",
      "upload_time_iso_8601": "2022-02-14T18:12:13.050730Z",
      "url": "https://files.pythonhosted.org/packages/c3/8e/075e2fcd30406123894ee3cbda63ad31e50e2e06612982ba93e97adc7373/microredes-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}