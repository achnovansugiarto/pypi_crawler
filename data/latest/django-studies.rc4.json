{
  "info": {
    "author": "Filip TodiÄ‡",
    "author_email": "todic.filip@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Plugins",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
      "Topic :: Software Development",
      "Topic :: Software Development :: Bug Tracking",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Testing",
      "Topic :: Software Development :: Testing :: Acceptance",
      "Topic :: System :: Logging",
      "Topic :: System :: Networking :: Monitoring",
      "Topic :: Utilities"
    ],
    "description": "django-studies\n==============\n\n.. image:: https://github.com/fitodic/django-studies/actions/workflows/ci.yml/badge.svg?event=push\n    :target: https://github.com/fitodic/django-studies/actions\n    :alt: Build status\n\n.. image:: https://codecov.io/gh/fitodic/django-studies/branch/master/graph/badge.svg?token=S2WQ9OTR9O\n    :target: https://codecov.io/gh/fitodic/django-studies\n    :alt: Test coverage status\n\nHave you ever found yourself in a situation where you've made changes to\nsome functionality, all the tests are passing, manual tests look OK, but\nyou're still not convinced that you've covered all of the edge-cases?\n\nYou know your new implementation is faster or more stable, but you still\nhave the feeling you're missing something. Wouldn't it be great if you \ncould run both implementations side-by-side and compare the results?\n\nMaybe you'd want to try it out on a limited set of users for a certain\nperiod of time just to flesh out all the cases you've missed. Or you\njust want to run a couple of experiments and study the effects without\nseverely impacting the users in a negative way.\n\nInspired by `GitHub's Scientist\n<https://github.com/github/scientist>`_ and\n`RealGeeks' lab_tech <https://github.com/RealGeeks/lab_tech>`_, this\nproject brings\n`Joe Alcorn's laboratory <https://github.com/joealcorn/laboratory>`_ to\n`Django <https://github.com/django/django>`_'s world not only to allow\nyou to run experiments, but to dynamically modify their impact on users.\nThis would give you the confirmations and the peace of mind you're \nlooking for *and* your users wouldn't be inconvenienced by potential \nerrors.\n\nInstallation\n^^^^^^^^^^^^\n\nTo use this library, install it using ``pip``\n\n.. code:: bash\n\n    pip install django-studies\n\nregister the Django app in your ``settings.py``:\n\n.. code:: python\n\n    # project/settings.py\n    INSTALLED_APPS = [\n        # ...\n        \"studies\",\n    ]\n    \nand run the migrations:\n\n.. code:: bash\n\n    python manage.py studies\n\nFeatures\n^^^^^^^^\n\n* To run an experiment, instantiate the ``Experiment`` class, define the `control` and the `candidate` and `conduct` the experiment. For example, a simple Django class-based view with an experiment would look like (the one from the ``demo`` project):\n\n\n.. code:: python\n\n    from studies.experiments import Experiment\n\n\n    class ViewWithMatchingResults(View):\n        def get(self, request, *args, **kwargs):\n            with Experiment(\n                name=\"ViewWithMatchingResults\",\n                context={\"context_key\": \"context_value\"},\n                percent_enabled=100,\n            ) as experiment:\n                arg = \"match\"\n                kwargs = {\"extra\": \"value\"}\n                experiment.control(\n                    self._get_control,\n                    context={\"strategy\": \"control\"},\n                    args=[arg],\n                    kwargs=kwargs,\n                )\n                experiment.candidate(\n                    self._get_candidate,\n                    context={\"strategy\": \"candidate\"},\n                    args=[arg],\n                    kwargs=kwargs,\n                )\n                data = experiment.conduct()\n\n            return JsonResponse(data)\n\n        def _get_control(self, result, **kwargs):\n            return {\"result\": result, **kwargs}\n\n        def _get_candidate(self, result, **kwargs):\n            return {\"result\": result, **kwargs}\n\n* Adjust the percentage of users who'll be impacted by this experiment via the admin:\n\n.. figure::  docs/images/admin.png\n    :align:  center\n    :alt:    The experiment's detail page in the admin\n\n* To add support for your own reporting system, whether it's ``logging``, ``statsd`` or something else, override the ``Experiment`` class' ``publish`` method and make the call (another example from the ``demo`` project):\n\n\n.. code:: python\n\n    import logging\n    from studies.experiments import Experiment\n\n\n    logger = logging.getLogger()\n\n\n    class ExperimentWithLogging(Experiment):\n    \"\"\"\n    An override that provides logging support for demonstration\n    purposes.\n    \"\"\"\n\n    def publish(self, result):\n        if result.match:\n            logging.info(\n                \"Experiment %(name)s is a match\",\n                {\"name\": result.experiment.name},\n            )\n        else:\n            control_observation = result.control\n            candidate_observation = result.candidates[0]\n            logging.info(\n                json.dumps(\n                    control_observation.__dict__,\n                    cls=ExceptionalJSONEncoder,  # defined in `demo.overrides`\n                )\n            )\n            logging.info(\n                json.dumps(\n                    candidate_observation.__dict__,\n                    cls=ExceptionalJSONEncoder,\n                )\n            )\n            logging.error(\n                \"Experiment %(name)s is not a match\",\n                {\"name\": result.experiment.name},\n            )\n\n* Override any method from ``laboratory``'s ``Experiment`` class, including `how you make the comparison <https://github.com/joealcorn/laboratory#controlling-comparison>`_:\n\n\n.. code:: python\n\n    from studies.experiments import Experiment\n\n\n    class MyExperiment(Experiment):\n        def compare(self, control, candidate):\n            return control.value['id'] == candidate.value['id']\n\n\nCaveats\n^^^^^^^\n\nAs always there are certain caveats that you should keep in mind. As\nstated in ``laboratory``'s\n`Caveats <https://github.com/joealcorn/laboratory#caveats>`_, if the\ncontrol or the candidate has a side-effect like a write operation to the\ndatabase or the cache, you could end up with erroneous data or similar\nbugs.\n\nAt the moment, this library doesn't provide a safe write mechanism to\nmitigate this situation, but it may in the future.\n\n\nContributing\n^^^^^^^^^^^^\n\nTo contribute to this project, take a look at `CONTRIBUTING.rst <./CONTRIBUTING.rst>`_.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fitodic/django-studies",
    "keywords": "Django,experiments",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-studies",
    "package_url": "https://pypi.org/project/django-studies/",
    "platform": "POSIX",
    "project_url": "https://pypi.org/project/django-studies/",
    "project_urls": {
      "Homepage": "https://github.com/fitodic/django-studies"
    },
    "release_url": "https://pypi.org/project/django-studies/0.1.2/",
    "requires_dist": [
      "Django (>=3.2)",
      "laboratory (>=1.0)",
      "tox ; extra == 'dev'",
      "ipdb ; extra == 'dev'",
      "django-configurations[database] ; extra == 'dev'",
      "isort ; extra == 'lint'",
      "black ; extra == 'lint'",
      "flake8 ; extra == 'lint'",
      "ipdb ; extra == 'test'",
      "coverage ; extra == 'test'",
      "pytest (>=3.0) ; extra == 'test'",
      "pytest-django ; extra == 'test'",
      "pytest-runner ; extra == 'test'",
      "django-configurations[database] ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "Run experiments in you Django project",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15287971,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c84939d6dfa1794b47989804ed2b7c40327ddc232bfad64f4d76bfb3fce82da5",
          "md5": "f5f623329ef5eed67b88cbc816baeef3",
          "sha256": "b183bab35ea5031d252b1e1a5297ccb1f055839a57e1415f8fd2097954023b46"
        },
        "downloads": -1,
        "filename": "django_studies-0.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5f623329ef5eed67b88cbc816baeef3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 7947,
        "upload_time": "2022-06-25T08:36:56",
        "upload_time_iso_8601": "2022-06-25T08:36:56.011546Z",
        "url": "https://files.pythonhosted.org/packages/c8/49/39d6dfa1794b47989804ed2b7c40327ddc232bfad64f4d76bfb3fce82da5/django_studies-0.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2807c999d6f031b10ece09c2e34cd100643cfd7058ed4d696e27ec0d9e126b2c",
          "md5": "86e41bf47d65f600e974118e46c7d829",
          "sha256": "b9b887f5b43740b03a1ce3fb151ef056398f6ce4a35b4595bf4d8bff850dc796"
        },
        "downloads": -1,
        "filename": "django_studies-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86e41bf47d65f600e974118e46c7d829",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8090,
        "upload_time": "2022-06-25T10:29:35",
        "upload_time_iso_8601": "2022-06-25T10:29:35.134491Z",
        "url": "https://files.pythonhosted.org/packages/28/07/c999d6f031b10ece09c2e34cd100643cfd7058ed4d696e27ec0d9e126b2c/django_studies-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51ee4e885279452f1d7bcfbee5e482453d19b0766b1996458da69026cd499d72",
          "md5": "8ac1cffeeefa9fd7fdbebcd5903b3dec",
          "sha256": "f49bb8278962bffca582f4b4a8b87b44ff1122dfd9e8025c7630ebbf70cb34ec"
        },
        "downloads": -1,
        "filename": "django-studies-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8ac1cffeeefa9fd7fdbebcd5903b3dec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 99302,
        "upload_time": "2022-06-25T10:29:37",
        "upload_time_iso_8601": "2022-06-25T10:29:37.358436Z",
        "url": "https://files.pythonhosted.org/packages/51/ee/4e885279452f1d7bcfbee5e482453d19b0766b1996458da69026cd499d72/django-studies-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d57ab2e6aecbd70823727c93a180073a3984212b523a539a15f3824407af5c39",
          "md5": "5674ada92f4f0c889e276385eda7ff48",
          "sha256": "4f873d5d8833caa91e5108113f11eb2edba2f53601dda041842a590d71332c9e"
        },
        "downloads": -1,
        "filename": "django_studies-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5674ada92f4f0c889e276385eda7ff48",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8089,
        "upload_time": "2022-06-25T10:54:26",
        "upload_time_iso_8601": "2022-06-25T10:54:26.616979Z",
        "url": "https://files.pythonhosted.org/packages/d5/7a/b2e6aecbd70823727c93a180073a3984212b523a539a15f3824407af5c39/django_studies-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "370e7bc46ed94f4fca0faf608b621e6202de27720f724af9026fb6833261735e",
          "md5": "53d100933d2ea2048cace8627b1f1a51",
          "sha256": "5e1afcb3d3530246faee852e2d383107625dc2a786f1401bc4f7298fc0355cfe"
        },
        "downloads": -1,
        "filename": "django-studies-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "53d100933d2ea2048cace8627b1f1a51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 99321,
        "upload_time": "2022-06-25T10:54:27",
        "upload_time_iso_8601": "2022-06-25T10:54:27.968441Z",
        "url": "https://files.pythonhosted.org/packages/37/0e/7bc46ed94f4fca0faf608b621e6202de27720f724af9026fb6833261735e/django-studies-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd5633c822f396166ae84f46899af785485984f0f31b6d78f17af49d44349884",
          "md5": "27a4e7d4aa1ece3b546b0f7f40d6c3c3",
          "sha256": "4ee703df1dc3eb0b5a8eb86df547b66cd3b34f1787f152e294c52900a42354e0"
        },
        "downloads": -1,
        "filename": "django_studies-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27a4e7d4aa1ece3b546b0f7f40d6c3c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8291,
        "upload_time": "2022-10-03T10:39:09",
        "upload_time_iso_8601": "2022-10-03T10:39:09.366762Z",
        "url": "https://files.pythonhosted.org/packages/bd/56/33c822f396166ae84f46899af785485984f0f31b6d78f17af49d44349884/django_studies-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "189466ce86c945b82a5a26647fc40576d7eac66c4fe445025058a7aed4eb9913",
          "md5": "db9eccaf2dfa5e6c2c7a56a64d6927d7",
          "sha256": "275ef8feeb832a59461bade420990f5969057a9869c3d87bfc21117fe19b4bc0"
        },
        "downloads": -1,
        "filename": "django-studies-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "db9eccaf2dfa5e6c2c7a56a64d6927d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 99841,
        "upload_time": "2022-10-03T10:39:11",
        "upload_time_iso_8601": "2022-10-03T10:39:11.031490Z",
        "url": "https://files.pythonhosted.org/packages/18/94/66ce86c945b82a5a26647fc40576d7eac66c4fe445025058a7aed4eb9913/django-studies-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd5633c822f396166ae84f46899af785485984f0f31b6d78f17af49d44349884",
        "md5": "27a4e7d4aa1ece3b546b0f7f40d6c3c3",
        "sha256": "4ee703df1dc3eb0b5a8eb86df547b66cd3b34f1787f152e294c52900a42354e0"
      },
      "downloads": -1,
      "filename": "django_studies-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "27a4e7d4aa1ece3b546b0f7f40d6c3c3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 8291,
      "upload_time": "2022-10-03T10:39:09",
      "upload_time_iso_8601": "2022-10-03T10:39:09.366762Z",
      "url": "https://files.pythonhosted.org/packages/bd/56/33c822f396166ae84f46899af785485984f0f31b6d78f17af49d44349884/django_studies-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "189466ce86c945b82a5a26647fc40576d7eac66c4fe445025058a7aed4eb9913",
        "md5": "db9eccaf2dfa5e6c2c7a56a64d6927d7",
        "sha256": "275ef8feeb832a59461bade420990f5969057a9869c3d87bfc21117fe19b4bc0"
      },
      "downloads": -1,
      "filename": "django-studies-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "db9eccaf2dfa5e6c2c7a56a64d6927d7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 99841,
      "upload_time": "2022-10-03T10:39:11",
      "upload_time_iso_8601": "2022-10-03T10:39:11.031490Z",
      "url": "https://files.pythonhosted.org/packages/18/94/66ce86c945b82a5a26647fc40576d7eac66c4fe445025058a7aed4eb9913/django-studies-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}