{
  "info": {
    "author": "Saeed Mohammadzadeh",
    "author_email": "saeedmhz@bu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "# **SarcGraph**\r\n\r\n[![python](https://img.shields.io/badge/python-3.10-blue.svg)](https://www.python.org/) ![os](https://img.shields.io/badge/os-ubuntu%20|%20macos%20|%20windows-blue.svg) [![license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/Sarc-Graph/sarcgraph#license)\r\n\r\n[![flake8](https://github.com/Sarc-Graph/sarcgraph/actions/workflows/black_flake8.yml/badge.svg)](https://github.com/Sarc-Graph/sarcgraph/actions/workflows/black_flake8.yml) [![codecov](https://codecov.io/gh/Sarc-Graph/sarcgraph/branch/main/graph/badge.svg?token=XNE85EJ4GX)](https://codecov.io/gh/Sarc-Graph/sarcgraph) [![Documentation Status](https://readthedocs.org/projects/sarc-graph/badge/?version=latest)](https://sarc-graph.readthedocs.io/en/latest/?badge=latest)\r\n\r\n## **Table of Contents**\r\n* [Project Summary](#summary)\r\n* [Installation Instructions](#install)\r\n* [Contents](#contents)\r\n* [Tutorial](#tutorial) - [Notebooks](https://github.com/Sarc-Graph/sarcgraph/tree/main/tutorials)\r\n* [Validation](#validation)\r\n* [References to Related Work](#references)\r\n* [Contact Information](#contact)\r\n* [Acknowledgements](#acknowledge)\r\n\r\n## **Project Summary** <a name=\"summary\"></a>\r\n\r\n**SarcGraph** is a tool for automatic detection, tracking and analysis of\r\nz-discs and sarcomeres in movies of beating *human induced pluripotent stem\r\ncell-derived cardiomyocytes (hiPSC-CMs)*.\r\n\r\n<br />\r\n<center><img src=\"figures/intro.png\" width=30%></center>\r\n<br />\r\n\r\nSarcGraph was initially introduced in [Sarc-Graph: Automated segmentation, tracking, and analysis of sarcomeres in hiPSC-derived cardiomyocytes](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1009443).\r\nThis package is created to make SarcGraph more accessible to the broader\r\nresearch community.\r\n\r\n**For more information visit [SarcGraph documentation](https://sarc-graph.readthedocs.io/en/latest/).**\r\n\r\n## **Installation Instructions** <a name=\"install\"></a>\r\n\r\n### **Get a copy of the [SarcGraph repository](https://github.com/Sarc-Graph/sarcgraph) on your local machine**\r\n\r\nYou can do this by clicking the green ``<> code`` button and selecting ``Download Zip`` or by running the following command in terminal:\r\n\r\n```bash\r\ngit clone https://github.com/Sarc-Graph/sarcgraph.git\r\n```\r\n\r\n### **Create and activate a conda virtual environment**\r\n\r\n1. Install [Anaconda](https://docs.anaconda.com/anaconda/install/) on your local machine.\r\n\r\n2. Open a terminal and move to the directory of the ``sarcgraph`` repository. Then, type the following command in terminal to create a virtual envirnoment and install the required packages:\r\n\r\n```bash\r\ncd sarcgraph\r\nconda env create --file=environments.yml\r\n```\r\n\r\n3. Activate your virtual environment.\r\n\r\n```bash\r\nconda activate sarcgraph\r\n```\r\n\r\n### **Install SarcGraph**\r\n\r\nSarcGraph can be installed using ``pip``:\r\n\r\n```bash\r\npip install sarcgraph\r\n```\r\n\r\n## **Contents** <a name=\"contents\"></a>\r\n\r\n```bash\r\n|___ sarcgraph\r\n|        |___ docs/\r\n|        |___ figures/\r\n|                |___ *.png\r\n|        |___ samples/\r\n|        |___ sarcgraph/\r\n|                |___ __init__.py\r\n|                |___ sg.py\r\n|                |___ sg_tools.py\r\n|        |___ tests/\r\n|        |___ tutorials/\r\n|                |___ *.ipynb\r\n```\r\n\r\n## **Tutorial** <a name=\"tutorial\"></a>\r\n\r\nThis GitHub repository contains a folder called ``tutorials`` that contains demos to extensively show how this package can be used to analyze videos or images of hiPSC-CMs.\r\n\r\n### **Package Contents** <a name=\"whats-in-package\"></a>\r\n\r\nThe package contains two seperate modules: `sg` for sarcomere detection and tracking and `sg_tools` for running further analysis and visualizations.\r\n\r\n#### **sarcgraph.sg** <a name=\"sarcgraph.py\"></a>\r\n`sarcgraph.sg` module takes a video/image file as input (more details in tutorials). This module then processes the input file to detect and track z-discs and sarcomeres through running 3 tasks:\r\n\r\n - Z-disc Segmentation,\r\n - Z-disc Tracking,\r\n - Sarcomere Detection.\r\n\r\nHere is a list of functions developed for each task:\r\n\r\n- `zdisc_segmentation`: Detect z-discs in each frame of the input video/image and saves the following information into a pandas `DataFrame`:\r\n\r\n> - `frame`: (frame number) \r\n> - `x` and `y`: (X and Y position of the center of a z-disc)\r\n> - `p1_x`, `p1_y` and `p2_x`, `p2_y`: (X and Y position of both ends of a z-disc)\r\n\r\n- `zdisc_tracking`: Tracks detected z-discs in the input video over all frames and adds the following information to the pandas `DataFrame`:\r\n\r\n> - `particle`: (z-disc id)\r\n> - `freq`: (number of frames in which a z-discs is tracked)\r\nframe,sarc_id,x,y,length,width,angle,z-discs\r\n\r\n- `sarcomere_detection`: Detects sarcomeres in the input video/image using tracked z-discs `DataFrame` and saves the following information into a new pandas `DataFrame`:\r\n\r\n> - `frame`: (frame number)\r\n> - `sarc_id`: (sarcomere id)\r\n> - `x` and `y`: (X and Y position of the center of a sarcomere)\r\n> - `length`: (sarcomere length)\r\n> - `width`: (sarcomere width)\r\n> - `angle`: (sarcomere angle)\r\n> - `zdiscs`: (ids of the two z-discs forming a sarcomere)\r\n\r\n\r\n#### **sarcgraph.sg_tools** <a name=\"sarcgraph_tools.py\"></a>\r\n\r\n`sarcgraph.sg_tools` module consists of 3 subclasses:\r\n\r\n- `TimeSeries`: Process timeseries of detected and tracked sarcomeres\r\n\r\n> - `sarcomeres_gpr()`: Applies Gaussian Process Regression (GPR) on each recovered timeseries characteristic of all detected sarcomeres to reduce the noise and fill in the missing data\r\n\r\n- `Analysis`: Extract more information from detected sarcomeres characteristics timeseries\r\n\r\n> - `compute_F_J`: Computes the average deformation gradient (F) and its jacobian (J)\r\n> - `compute_OOP`: Computes the Orientation Order Parameter (OOP)\r\n> - `compute_metrics`: Computes {OOP, C_iso, C_OOP, s_til, s_avg} as defined in the [SarcGraph paper](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1009443)\r\n> - `compute_ts_params`: Computes timeseries constants (contraction time, relaxation time, flat time, period, offset)\r\n> - `create_spatial_graph`: Generates a spatial graph of tracked z-discs where edges indicate sarcomeres and edge weights indicate the ratio of the frames in which each sarcomere is detected\r\n\r\n- `Visualization`: Visualize detected sarcomeres information\r\n\r\n> - `zdiscs_and_sarcs`: Visualizes detected z-discs and sarcomeres in the chosen frame\r\n> - `contraction`:Visualizes detected sarcomeres in every frame as a gif file\r\n> - `normalized_sarcs_length`: Plots normalized length of all detected sarcomeres vs frame number\r\n> - `OOP`: Plots recovered Orientational Order Parameter\r\n> - `F`: Plots recovered deformation gradient\r\n> - `J`: Plots recovered deformation jacobian\r\n> - `F_eigenval_animation`: Visualizes the eigenvalues of F vs frame number\r\n> - `timeseries_params`: Visualizes time series parameters\r\n> - `dendrogram`: Clusters timeseries and plots as a dendrogram of the clusters\r\n> - `spatial_graph`: Visualizes the spatial graph\r\n> - `tracked_vs_untracked`: Visualizes metrics that compare the effect of tracking sarcomeres in a video vs only detecting sarcomeres in each frame without tracking\r\n\r\nTo use this module an object of the class `SarcGraphTools` should be created by setting the `input_dir` to the folder that contains the output saved from running full sarcomere detection and timeseries processing on the input data.\r\n\r\n## Validation <a name=\"validation\"></a>\r\n\r\nTo validate our methods and ensure correct implementation, we generated challenging synthetic videos with characteristics similar to beating hiPSC-CMs. We used these videos to evaluate the sarcomere detection algorithm by comparing recovered metrics to their known ground truth. The figure shows this process for one of many tested validation examples.\r\n\r\n<br />\r\n<center><img src=\"figures/validation.png\" width=75%></center>\r\n<br />\r\n\r\n## References to Related Work <a name=\"references\"></a>\r\n\r\n* Zhao, B., Zhang, K., Chen, C. S., & Lejeune, E. (2021). Sarc-graph: Automated segmentation, tracking, and analysis of sarcomeres in hiPSC-derived cardiomyocytes. PLoS Computational Biology, 17(10), e1009443.\r\n\r\n* Allan, D. B., Caswell, T., Keim, N. C., Wel, C. M. van der, & Verweij, R. W. (2023). Soft-matter/trackpy: v0.6.1 (Version v0.6.1). Zenodo. https://doi.org/10.5281/zenodo.7670439\r\n\r\n* Toepfer, C. N., Sharma, A., Cicconet, M., Garfinkel, A. C., MÃ¼cke, M., Neyazi, M., Willcox, J. A., Agarwal, R., Schmid, M., Rao, J., & others. (2019). SarcTrack: An adaptable software tool for efficient large-scale analysis of sarcomere function in hiPSC-cardiomyocytes. Circulation Research, 124(8), 1172â€“1183.\r\n\r\n* Morris, T. A., Naik, 94 J., Fibben, K. S., Kong, X., Kiyono, T., Yokomori, K., & Grosberg, A. (2020). Striated myocyte structural integrity: Automated analysis of sarcomeric z-discs. PLoS Computational Biology, 16(3), e1007676.\r\n\r\n* Pasqualin, C., Gannier, F., Yu, A., MalÃ©cot, C. O., Bredeloux, P., & Maupoil, V. (2016). SarcOptiM for ImageJ: High-frequency online sarcomere length computing on stimulated cardiomyocytes. American Journal of Physiology-Cell Physiology, 311(2), C277â€“C283.\r\n\r\n* Ribeiro, A. J. S., Schwab, O., Mandegar, M. A., Ang, Y.-S., Conklin, B. R., Srivastava, D., & Pruitt, B. L. (2017). Multi-imaging method to assay the contractile mechanical output of micropatterned human iPSC-derived cardiac myocytes. Circulation Research, 120(10), 1572â€“1583. https://doi.org/10.1161/CIRCRESAHA.116.310363\r\n\r\n## Contact Information <a name=\"contact\"></a>\r\n\r\nFor information about this software, please get in touch with [Saeed Mohammadzadeh](mailto:saeedmhz@bu.edu) or [Emma Lejeune](mailto:elejeune@bu.edu).\r\n\r\n## Acknowledgements <a name=\"acknowledge\"></a>\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/sarcgraph/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "[('Saeed Mohammadzadeh', 'saeedmhz@bu.edu'), ('Emma Lejeune', 'elejeune@bu.edu')]",
    "maintainer_email": "",
    "name": "sarcgraph",
    "package_url": "https://pypi.org/project/sarcgraph/",
    "platform": null,
    "project_url": "https://pypi.org/project/sarcgraph/",
    "project_urls": {
      "Documentation": "https://sarc-graph.readthedocs.io/en/latest/",
      "Homepage": "https://pypi.org/project/sarcgraph/",
      "Source": "https://github.com/Sarc-Graph/sarcgraph"
    },
    "release_url": "https://pypi.org/project/sarcgraph/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A software for sarcomere detection and tracking",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17150454,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e314bf66e63588b0f8e0570b9969b858998322108cc7a64afac0f77419a59c8",
          "md5": "092e7378ce8ff095fef195a790a6363e",
          "sha256": "32b9fb366720a8bd80d9f8ecd0028029a4135ca35b1479a7852a7b9c26f4f5d6"
        },
        "downloads": -1,
        "filename": "sarcgraph-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "092e7378ce8ff095fef195a790a6363e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25525,
        "upload_time": "2023-03-03T23:17:42",
        "upload_time_iso_8601": "2023-03-03T23:17:42.574294Z",
        "url": "https://files.pythonhosted.org/packages/6e/31/4bf66e63588b0f8e0570b9969b858998322108cc7a64afac0f77419a59c8/sarcgraph-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7185bd606d5ec5788d8a3312d0e3cb67c6f048df753c3a2b28d4a8aa439ba82f",
          "md5": "62cca659b73639d2d799a28fe986a651",
          "sha256": "4939df5ba9958be83c6fcc756da807203fa1508104d30bd3a8b04c2e5cf392d7"
        },
        "downloads": -1,
        "filename": "sarcgraph-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "62cca659b73639d2d799a28fe986a651",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28508,
        "upload_time": "2023-03-03T23:17:44",
        "upload_time_iso_8601": "2023-03-03T23:17:44.818546Z",
        "url": "https://files.pythonhosted.org/packages/71/85/bd606d5ec5788d8a3312d0e3cb67c6f048df753c3a2b28d4a8aa439ba82f/sarcgraph-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e314bf66e63588b0f8e0570b9969b858998322108cc7a64afac0f77419a59c8",
        "md5": "092e7378ce8ff095fef195a790a6363e",
        "sha256": "32b9fb366720a8bd80d9f8ecd0028029a4135ca35b1479a7852a7b9c26f4f5d6"
      },
      "downloads": -1,
      "filename": "sarcgraph-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "092e7378ce8ff095fef195a790a6363e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 25525,
      "upload_time": "2023-03-03T23:17:42",
      "upload_time_iso_8601": "2023-03-03T23:17:42.574294Z",
      "url": "https://files.pythonhosted.org/packages/6e/31/4bf66e63588b0f8e0570b9969b858998322108cc7a64afac0f77419a59c8/sarcgraph-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7185bd606d5ec5788d8a3312d0e3cb67c6f048df753c3a2b28d4a8aa439ba82f",
        "md5": "62cca659b73639d2d799a28fe986a651",
        "sha256": "4939df5ba9958be83c6fcc756da807203fa1508104d30bd3a8b04c2e5cf392d7"
      },
      "downloads": -1,
      "filename": "sarcgraph-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "62cca659b73639d2d799a28fe986a651",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28508,
      "upload_time": "2023-03-03T23:17:44",
      "upload_time_iso_8601": "2023-03-03T23:17:44.818546Z",
      "url": "https://files.pythonhosted.org/packages/71/85/bd606d5ec5788d8a3312d0e3cb67c6f048df753c3a2b28d4a8aa439ba82f/sarcgraph-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}