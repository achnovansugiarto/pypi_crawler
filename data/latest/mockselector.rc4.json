{
  "info": {
    "author": "SBA",
    "author_email": "s-ball@laposte.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Testing :: Mocking"
    ],
    "description": "[![Build Status](https://travis-ci.com/s-ball/MockSelector.svg?branch=0.2.3)](https://travis-ci.com/s-ball/MockSelector)\n[![codecov](https://codecov.io/gh/s-ball/MockSelector/commit/c902053a6bcf111503060491777a1af83f92750d/graph/badge.svg)](https://codecov.io/gh/s-ball/MockSelector)\n\n# MockSelector\n\n## Description\n\nThis is a collection of Python classes designed to help to test TCP servers\nbased on selectors. The `mockselector` package provides everything needed to easily write\nunittest TestCases simulating incoming connections and the associated\ninput data\n\n## Installation\n\n### From PyPI\n\nStarting from 0.1.1, `mockselector` is available on PyPI. If you just want to\nuse it in your projects, it is the recommended way:\n\n    pip install mockselector\n\nOf course, this can be done in a relevant venv if you do not want to have it\nin your main installation.\n\nNote: the `test` folder is only available in the source distribution.\n\n### From Github\n\nThis is the recommended way if you want to contribute or simply tweak\n`mockselector` to your own requirements. You can get a local copy by\ndownloading a zipfile but if you want to make changes, you should\n rather clone the repository to have access to all `git` goodies:\n\n    git clone https://github.com/s-ball/MockSelector.git\n\nYou can then install it in your main Python installation or in a venv with:\n\n    pip install -e .\n\nor on Windows with the launcher:\n\n    py -m pip install -e .\n\n`pip` should be used to install it for the first time in order to have\n`setuptools-scm` to generate the `version.py` file from git metadata.\nOnce this is done, `setup.py` can be used with no special issue.\n\nAlternatively you can manually install `setuptools-scm`:\n\n    pip install setuptools-scm\n    python setup.py install\n\n#### Special handling of `version.py`:\n\n`mockselector` relies on `setuptools-scm` to automatically extract a\nversion number from git metadata and store it in a `version.py` file\nfor later use. The requires the availability of both `git` (which should\nnot be a problem when the project is downloaded from Github), and\n`setuptools-scm`. If it fails because one is not available or because\ngit metadata is not there (if you only downloaded a zip archive from\nGithub), the version is set to 0.0.0\n\nFor that reason, if you do not use git to download the sources, you\nshould download a source distribution from PyPI, because the latter\ncontains a valid `version.py`\n\n`pip` uses the `pyproject.toml` file with respect to PEP-518 and\nPEP-517 to know that `setuptools-scm` is required before the build.\n\n## Basic use\n\nOnce installed, you can easily import it in your tests.\n\n```\nfrom mockselector.selector import MockSocket, ListenSocket, MockSelector\n```\n\n`MockSelector` is a `selectors.BaseSelector` subclass. At creation time it\ntakes an iterable of objects. Those objects can be:\n\n* a `socket.socket` (or a `Mock`) that will be returned by a `select` call\nalong with an `EVENT_READ` event\n* a pair `(socket, event)` that will be returned - this allows to pass\n`EVENT_WRITE` events\n* an iterable of above elements. They will be returned in a list by a\nsingle `select` call as *simultaneous* events\n\n`MockSocket` is a specialization of a `Mock(socket.socket)`. Its initializer\ntakes an iterable of byte strings or functions returning byte strings.\nThe functions can be used as a run time side effect to set a flag in a\nserver and allow a clean exit from the main loop.\nThe byte strings are returned one at a time by the `recv` method. When\nthe iterable is exhausted, `recv` returns an empty byte string (`b''`)\nto mimic a client close or shutdown on the socket.\n\n`ListenSocket` is used to mimic a listening socket. Its initializer takes\nan iterable of `socket.socket` objects (including plain `Mock` or\n`MockSocket` objects) or callables returning an object like that.\nThe socket objects are returned one at a time by the `accept` method.\n\n### Typical use\n\nFacing a main server loop close to:\n\n```\n        ...\n        s = socket.socket()\n        s.bind(('0.0.0.0', self.port))\n        s.listen()\n        sel = DefaultSelector()\n        sel.register(s, EVENT_READ)\n        while not self.stop:\n            for key, event in sel.select():\n                if key.fileobj == s:\n                    c, _ = s.accept()\n                    sel.register(c, EVENT_READ)\n                else:\n                    c = key.fileobj\n                    data = c.recv(1024)\n                    if len(data) == 0:\n                        sel.unregister(c)\n                        c.close()\n                    else:\n                        # process received data\n                        ...\n```\nYou can do:\n\n```\n    def test_run_stop(self):\n        def do_stop(serv):\n            serv.stop = True\n            return b''\n        serv = ...                  # an instance or the serveur to test\n        c1 = MockSocket([...])      # a client with its data\n        c2 = MockSocket([..., lambda: do_stop(serv)]) # another client asking for end of server loop\n        s = ListenSocket((c1, c2))\n        sel = MockSelector([s, c1, s, c2, c2, (c1, c2), c1, c2, c2]) # ordered list of events\n        with patch('socket.socket') as socket, \\\n                patch('miniserv.DefaultSelector') as selector:\n            socket.return_value = s\n            selector.return_value = sel\n            serv.run()\n```\n\nYou can find a full code example in the `miniserv.py` and `test_miniserv.py`\nfiles in the tests folder\n\n## Advanced use and contribution\n\nIf you want to tailor the package, it already contains a number of tests.\nYou can run all of them from the top folder:\n\n```\npython setup.py install -e    # edit mode of install to use the local folder\npython -m unittest discover\n```\nI will be glad to receive issues that would help to improve this project...\n\n## Disclaimer: beta quality\n\nEven if the package has a nice test coverage (> 95%), it currently only\ncontains what I need to test another project of mine. It might not meet\nyour own requirements, or main contain Still Unidentified Bugs...\n\nIt is still a 0.x version, so the API is not guaranteed to be stable.\n\n## License\n\nThat work is licenced under a MIT Licence. See [LICENSE.txt](https://raw.githubusercontent.com/s-ball/MockSelector/master/LICENCE.txt)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/s-ball/MockSelector",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mockselector",
    "package_url": "https://pypi.org/project/mockselector/",
    "platform": "",
    "project_url": "https://pypi.org/project/mockselector/",
    "project_urls": {
      "Homepage": "https://github.com/s-ball/MockSelector"
    },
    "release_url": "https://pypi.org/project/mockselector/0.2.3/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Mock subclass of BaseSelector",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7977341,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a263d66a641724e29abb14779993f2ecf05162e9a97080ff64f83960c8b8a79",
          "md5": "e9b38eec2ff404e0394f54a2c948fc82",
          "sha256": "6d31185f96086ad7d1ffd51d973bbab2961a1c0830ac0a4070abf95d529336e6"
        },
        "downloads": -1,
        "filename": "mockselector-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9b38eec2ff404e0394f54a2c948fc82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 6849,
        "upload_time": "2020-08-11T10:02:14",
        "upload_time_iso_8601": "2020-08-11T10:02:14.810764Z",
        "url": "https://files.pythonhosted.org/packages/3a/26/3d66a641724e29abb14779993f2ecf05162e9a97080ff64f83960c8b8a79/mockselector-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "997fcd0f43a683255d91b9a4e88255cc430bc6cb8cfa8a3a4d75b8bf76b53a42",
          "md5": "d577d368bc1dda7bcba56abdccb8fccd",
          "sha256": "fcab5f99cb2dd8e72e4b69892b90d1fab7ff3b595d79fb471d62376ec727e1e5"
        },
        "downloads": -1,
        "filename": "mockselector-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d577d368bc1dda7bcba56abdccb8fccd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8397,
        "upload_time": "2020-08-11T10:02:17",
        "upload_time_iso_8601": "2020-08-11T10:02:17.232836Z",
        "url": "https://files.pythonhosted.org/packages/99/7f/cd0f43a683255d91b9a4e88255cc430bc6cb8cfa8a3a4d75b8bf76b53a42/mockselector-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4db0e0ec428373f47b80ea7cb6b70a13e864a94728ac8fa4d49298c2e186f0e3",
          "md5": "e7a06197274596431ce568f622288aa8",
          "sha256": "952e8506f18dcd08fc6c0c27f560617714d27637e8c6b47fc9c1778803f958ff"
        },
        "downloads": -1,
        "filename": "mockselector-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7a06197274596431ce568f622288aa8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7030,
        "upload_time": "2020-08-11T10:08:29",
        "upload_time_iso_8601": "2020-08-11T10:08:29.947917Z",
        "url": "https://files.pythonhosted.org/packages/4d/b0/e0ec428373f47b80ea7cb6b70a13e864a94728ac8fa4d49298c2e186f0e3/mockselector-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16991e579301560232cbbee0b0479b7383a951a71e91531d9f255a34c6660354",
          "md5": "f98bfbda4f9682f13ef8db4d8355885e",
          "sha256": "9ee541323a6aae2c5faaba9acfcc610c41a08c90204a8d429fa6ef03ed03febe"
        },
        "downloads": -1,
        "filename": "mockselector-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f98bfbda4f9682f13ef8db4d8355885e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8626,
        "upload_time": "2020-08-11T10:08:31",
        "upload_time_iso_8601": "2020-08-11T10:08:31.357783Z",
        "url": "https://files.pythonhosted.org/packages/16/99/1e579301560232cbbee0b0479b7383a951a71e91531d9f255a34c6660354/mockselector-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd7a2f752b43bed968411378932f4d057b9b821646ec9541ddea8c8649dc1602",
          "md5": "3dce85922596724f8bc37161529bbe9d",
          "sha256": "e906cffd9d5c20c472c11f525b8482fb5fa2b798952371b5ab085180d14fc984"
        },
        "downloads": -1,
        "filename": "mockselector-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3dce85922596724f8bc37161529bbe9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7759,
        "upload_time": "2020-08-14T15:54:31",
        "upload_time_iso_8601": "2020-08-14T15:54:31.962318Z",
        "url": "https://files.pythonhosted.org/packages/bd/7a/2f752b43bed968411378932f4d057b9b821646ec9541ddea8c8649dc1602/mockselector-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa508ab6696ca1fb3e7d1b62c793dbfe4d3b905262175b2fc7d1d52da4d35737",
          "md5": "f25bb960ae3f475d609f7bc9877ca464",
          "sha256": "c2e6e8cb3ee01fedd2f68a509ca57955a319da42606c565e2ad90c2dfa974c63"
        },
        "downloads": -1,
        "filename": "mockselector-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f25bb960ae3f475d609f7bc9877ca464",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12560,
        "upload_time": "2020-08-14T15:54:33",
        "upload_time_iso_8601": "2020-08-14T15:54:33.089115Z",
        "url": "https://files.pythonhosted.org/packages/aa/50/8ab6696ca1fb3e7d1b62c793dbfe4d3b905262175b2fc7d1d52da4d35737/mockselector-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59d4a3bbd924c01ad6b09cb440371f44abc73ce39ea0a66a7197b6bb48f800fb",
          "md5": "9f802f422d7071b253c9e99058529d45",
          "sha256": "6b7b3827f8349bf9f4bcc2901ca2f6abae401da781f07f986adb7cff3babf7ca"
        },
        "downloads": -1,
        "filename": "mockselector-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f802f422d7071b253c9e99058529d45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7764,
        "upload_time": "2020-08-17T07:02:13",
        "upload_time_iso_8601": "2020-08-17T07:02:13.411547Z",
        "url": "https://files.pythonhosted.org/packages/59/d4/a3bbd924c01ad6b09cb440371f44abc73ce39ea0a66a7197b6bb48f800fb/mockselector-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bdc7243f1705d0135fc3059072fa7878bec61465a13b9323f3be796c8f98972",
          "md5": "c5852c8ee61b5e1273733f1c9ecab177",
          "sha256": "2f74ba7da02633cb2be02b123a27b88d60d2faf0dc0ee4e8fe608f37f256f78e"
        },
        "downloads": -1,
        "filename": "mockselector-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c5852c8ee61b5e1273733f1c9ecab177",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12580,
        "upload_time": "2020-08-17T07:02:14",
        "upload_time_iso_8601": "2020-08-17T07:02:14.718955Z",
        "url": "https://files.pythonhosted.org/packages/5b/dc/7243f1705d0135fc3059072fa7878bec61465a13b9323f3be796c8f98972/mockselector-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59d4a3bbd924c01ad6b09cb440371f44abc73ce39ea0a66a7197b6bb48f800fb",
        "md5": "9f802f422d7071b253c9e99058529d45",
        "sha256": "6b7b3827f8349bf9f4bcc2901ca2f6abae401da781f07f986adb7cff3babf7ca"
      },
      "downloads": -1,
      "filename": "mockselector-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9f802f422d7071b253c9e99058529d45",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 7764,
      "upload_time": "2020-08-17T07:02:13",
      "upload_time_iso_8601": "2020-08-17T07:02:13.411547Z",
      "url": "https://files.pythonhosted.org/packages/59/d4/a3bbd924c01ad6b09cb440371f44abc73ce39ea0a66a7197b6bb48f800fb/mockselector-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5bdc7243f1705d0135fc3059072fa7878bec61465a13b9323f3be796c8f98972",
        "md5": "c5852c8ee61b5e1273733f1c9ecab177",
        "sha256": "2f74ba7da02633cb2be02b123a27b88d60d2faf0dc0ee4e8fe608f37f256f78e"
      },
      "downloads": -1,
      "filename": "mockselector-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c5852c8ee61b5e1273733f1c9ecab177",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 12580,
      "upload_time": "2020-08-17T07:02:14",
      "upload_time_iso_8601": "2020-08-17T07:02:14.718955Z",
      "url": "https://files.pythonhosted.org/packages/5b/dc/7243f1705d0135fc3059072fa7878bec61465a13b9323f3be796c8f98972/mockselector-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}