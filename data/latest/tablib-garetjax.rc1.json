{
  "info": {
    "author": "Kenneth Reitz",
    "author_email": "me@kennethreitz.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.0",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2"
    ],
    "description": "Tablib: format-agnostic tabular dataset library\n===============================================\n\n::\n\n\t_____         ______  ___________ ______\n\t__  /_______ ____  /_ ___  /___(_)___  /_\n\t_  __/_  __ `/__  __ \\__  / __  / __  __ \\\n\t/ /_  / /_/ / _  /_/ /_  /  _  /  _  /_/ /\n\t\\__/  \\__,_/  /_.___/ /_/   /_/   /_.___/\n\n\n\nTablib is a format-agnostic tabular dataset library, written in Python.\n\nOutput formats supported:\n\n- Excel (Sets + Books)\n- JSON (Sets + Books)\n- YAML (Sets + Books)\n- HTML (Sets)\n- TSV (Sets)\n- CSV (Sets)\n\nNote that tablib *purposefully* excludes XML support. It always will. (Note: This is a joke. Pull requests are welcome.)\n\nOverview\n--------\n\n`tablib.Dataset()`\n\tA Dataset is a table of tabular data. It may or may not have a header row. They can be build and manipulated as raw Python datatypes (Lists of tuples|dictionaries). Datasets can be imported from JSON, YAML, and CSV; they can be exported to XLSX, XLS, ODS, JSON, YAML, CSV, TSV, and HTML.\n\n`tablib.Databook()`\n\tA Databook is a set of Datasets. The most common form of a Databook is an Excel file with multiple spreadsheets. Databooks can be imported from JSON and YAML; they can be exported to XLSX, XLS, ODS, JSON, and YAML.\n\nUsage\n-----\n\n\nPopulate fresh data files: ::\n\n    headers = ('first_name', 'last_name')\n\n    data = [\n        ('John', 'Adams'),\n        ('George', 'Washington')\n    ]\n\n    data = tablib.Dataset(*data, headers=headers)\n\n\nIntelligently add new rows: ::\n\n    >>> data.append(('Henry', 'Ford'))\n\nIntelligently add new columns: ::\n\n    >>> data.append_col((90, 67, 83), header='age')\n\nSlice rows:  ::\n\n    >>> print data[:2]\n    [('John', 'Adams', 90), ('George', 'Washington', 67)]\n\n\nSlice columns by header: ::\n\n    >>> print data['first_name']\n    ['John', 'George', 'Henry']\n\nEasily delete rows: ::\n\n    >>> del data[1]\n\nExports\n-------\n\nDrumroll please...........\n\nJSON!\n+++++\n::\n\n\t>>> print data.json\n\t[\n\t  {\n\t    \"last_name\": \"Adams\",\n\t    \"age\": 90,\n\t    \"first_name\": \"John\"\n\t  },\n\t  {\n\t    \"last_name\": \"Ford\",\n\t    \"age\": 83,\n\t    \"first_name\": \"Henry\"\n\t  }\n\t]\n\n\nYAML!\n+++++\n::\n\n\t>>> print data.yaml\n\t- {age: 90, first_name: John, last_name: Adams}\n\t- {age: 83, first_name: Henry, last_name: Ford}\n\nCSV...\n++++++\n::\n\n\t>>> print data.csv\n\tfirst_name,last_name,age\n\tJohn,Adams,90\n\tHenry,Ford,83\n\nEXCEL!\n++++++\n::\n\n\t>>> open('people.xls', 'wb').write(data.xls)\n\nIt's that easy.\n\n\nInstallation\n------------\n\nTo install tablib, simply: ::\n\n\t$ pip install tablib\n\nOr, if you absolutely must: ::\n\n\t$ easy_install tablib\n\nContribute\n----------\n\nIf you'd like to contribute, simply fork `the repository`_, commit your\nchanges to the **develop** branch (or branch off of it), and send a pull\nrequest. Make sure you add yourself to AUTHORS_.\n\n\n\n\n.. _`the repository`: http://github.com/kennethreitz/tablib\n.. _AUTHORS: http://github.com/kennethreitz/tablib/blob/master/AUTHORS\n\n\nHistory\n-------\n\n++++\n\n* Unicode Column Headers\n\n0.9.11 (2011-06-30)\n+++++++++++++++++++\n\n* Bugfixes\n\n0.9.10 (2011-06-22)\n+++++++++++++++++++\n\n* Bugfixes\n\n0.9.9 (2011-06-21)\n++++++++++++++++++\n\n* Dataset API Changes\n* ``stack_rows`` => ``stack``, ``stack_columns`` => ``stack_cols``\n* column operations have their own methods now (``append_col``, ``insert_col``)\n* List-style ``pop()``\n* Redis-style ``rpush``, ``lpush``, ``rpop``, ``lpop``, ``rpush_col``, and ``lpush_col``\n\n0.9.8 (2011-05-22)\n++++++++++++++++++\n\n* OpenDocument Spreadsheet support (.ods)\n* Full Unicode TSV support\n\n\n0.9.7 (2011-05-12)\n++++++++++++++++++\n\n* Full XLSX Support!\n* Pickling Bugfix\n* Compat Module\n\n\n0.9.6 (2011-05-12)\n++++++++++++++++++\n\n* ``seperators`` renamed to ``separators``\n* Full unicode CSV support\n\n\n0.9.5 (2011-03-24)\n++++++++++++++++++\n\n* Python 3.1, Python 3.2 Support (same code base!)\n* Formatter callback support\n* Various bug fixes\n\n\n\n0.9.4 (2011-02-18)\n++++++++++++++++++\n\n* Python 2.5 Support!\n* Tox Testing for 2.5, 2.6, 2.7\n* AnyJSON Integrated\n* OrderedDict support\n* Caved to community pressure (spaces)\n\n\n0.9.3 (2011-01-31)\n++++++++++++++++++\n\n* Databook duplication leak fix.\n* HTML Table output.\n* Added column sorting.\n\n\n0.9.2 (2010-11-17)\n++++++++++++++++++\n\n* Transpose method added to Datasets.\n* New frozen top row in Excel output.\n* Pickling support for Datasets and Rows.\n* Support for row/column stacking.\n\n\n0.9.1 (2010-11-04)\n++++++++++++++++++\n\n* Minor reference shadowing bugfix.\n\n\n0.9.0 (2010-11-04)\n++++++++++++++++++\n\n* Massive documentation update!\n* Tablib.org!\n* Row tagging and Dataset filtering!\n* Column insert/delete support\n* Column append API change (header required)\n* Internal Changes (Row object and use thereof)\n\n\n0.8.5 (2010-10-06)\n++++++++++++++++++\n\n* New import system. All dependencies attempt to load from site-packages,\n  then fallback on tenderized modules.\n\n\n0.8.4 (2010-10-04)\n++++++++++++++++++\n\n* Updated XLS output: Only wrap if '\\\\n' in cell.\n\n\n0.8.3 (2010-10-04)\n++++++++++++++++++\n\n* Ability to append new column passing a callable\n  as the value that will be applied to every row.\n\n\n0.8.2 (2010-10-04)\n++++++++++++++++++\n\n* Added alignment wrapping to written cells.\n* Added separator support to XLS.\n\n\n0.8.1 (2010-09-28)\n++++++++++++++++++\n\n* Packaging Fix\n\n\n0.8.0 (2010-09-25)\n++++++++++++++++++\n\n* New format plugin system!\n* Imports! ELEGANT Imports!\n* Tests. Lots of tests.\n\n\n0.7.1 (2010-09-20)\n++++++++++++++++++\n\n* Reverting methods back to properties.\n* Windows bug compensated in documentation.\n\n\n0.7.0 (2010-09-20)\n++++++++++++++++++\n\n* Renamed DataBook Databook for consistency.\n* Export properties changed to methods (XLS filename / StringIO bug).\n* Optional Dataset.xls(path='filename') support (for writing on windows).\n* Added utf-8 on the worksheet level.\n\n\n0.6.4 (2010-09-19)\n++++++++++++++++++\n\n* Updated unicode export for XLS.\n* More exhaustive unit tests.\n\n\n0.6.3 (2010-09-14)\n++++++++++++++++++\n* Added Dataset.append() support for columns.\n\n\n0.6.2 (2010-09-13)\n++++++++++++++++++\n* Fixed Dataset.append() error on empty dataset.\n* Updated Dataset.headers property w/ validation.\n* Added Testing Fixtures.\n\n0.6.1 (2010-09-12)\n++++++++++++++++++\n\n* Packaging hotfixes.\n\n\n0.6.0 (2010-09-11)\n++++++++++++++++++\n\n* Public Release.\n* Export Support for XLS, JSON, YAML, and CSV.\n* DataBook Export for XLS, JSON, and YAML.\n* Python Dict Property Support.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://python-tablib.org",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "tablib-garetjax",
    "package_url": "https://pypi.org/project/tablib-garetjax/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/tablib-garetjax/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://python-tablib.org"
    },
    "release_url": "https://pypi.org/project/tablib-garetjax/0.9.12/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Format agnostic tabular data library (XLS, JSON, YAML, CSV)",
    "version": "0.9.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 810415,
  "releases": {
    "0.9.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af14768cefd7e5810701f06ea438b4cb795030f81cea56cc8bd69697a613d24e",
          "md5": "0504a3e6e245097536cec9a75b652612",
          "sha256": "0ca6423d23975c41d687fd41c874332e22802976415508283a5e03494cad79f9"
        },
        "downloads": -1,
        "filename": "tablib-garetjax-0.9.12.tar.gz",
        "has_sig": false,
        "md5_digest": "0504a3e6e245097536cec9a75b652612",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 701219,
        "upload_time": "2013-07-07T21:45:30",
        "upload_time_iso_8601": "2013-07-07T21:45:30.171288Z",
        "url": "https://files.pythonhosted.org/packages/af/14/768cefd7e5810701f06ea438b4cb795030f81cea56cc8bd69697a613d24e/tablib-garetjax-0.9.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af14768cefd7e5810701f06ea438b4cb795030f81cea56cc8bd69697a613d24e",
        "md5": "0504a3e6e245097536cec9a75b652612",
        "sha256": "0ca6423d23975c41d687fd41c874332e22802976415508283a5e03494cad79f9"
      },
      "downloads": -1,
      "filename": "tablib-garetjax-0.9.12.tar.gz",
      "has_sig": false,
      "md5_digest": "0504a3e6e245097536cec9a75b652612",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 701219,
      "upload_time": "2013-07-07T21:45:30",
      "upload_time_iso_8601": "2013-07-07T21:45:30.171288Z",
      "url": "https://files.pythonhosted.org/packages/af/14/768cefd7e5810701f06ea438b4cb795030f81cea56cc8bd69697a613d24e/tablib-garetjax-0.9.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}