{
  "info": {
    "author": "Taha Zerrouki",
    "author_email": "taha.zerrouki@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: End Users/Desktop",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "Ghalatawi غلطاوي\n================\n\nGhalatawi: Arabic Autocorrect library مكتبة للتصحيح التلقائي للغة\nالعربية\n\n.. figure:: doc/ghalatawi_header.png\n   :alt: ghalatawi logo\n\n   ghalatawi logo\n\n.. figure:: https://img.shields.io/pypi/dm/ghalatawi\n   :alt: PyPI - Downloads\n\n   PyPI - Downloads\n\nDeveloppers: Taha Zerrouki: http://tahadz.com taha dot zerrouki at gmail\ndot com\n\n+------+---------------------------------------------------------------+\n| Feat | value                                                         |\n| ures |                                                               |\n+------+---------------------------------------------------------------+\n| Aut  |  Authors.md                                                   |\n| hors |  <https://github.com/linuxscout/ghalatawi/main/AUTHORS.md>    |\n+------+---------------------------------------------------------------+\n| Rel  | 0.1                                                           |\n| ease |                                                               |\n+------+---------------------------------------------------------------+\n| Lic  | `                                                             |\n| ense | GPL <https://github.com/linuxscout/ghalatawi/main/LICENSE>`__ |\n+------+---------------------------------------------------------------+\n| Tra  | `linuxscout/ghalata                                           |\n| cker | wi/Issues <https://github.com/linuxscout/ghalatawi/issues>`__ |\n+------+---------------------------------------------------------------+\n| So   | `Github <http://github.com/linuxscout/ghalatawi>`__           |\n| urce |                                                               |\n+------+---------------------------------------------------------------+\n| F    | `Comments <https://github.com/linuxscout/ghalatawi/>`__       |\n| eedb |                                                               |\n| acks |                                                               |\n+------+---------------------------------------------------------------+\n| Acco | `@Twitter <https://twitter.com/linuxscout>`__)                |\n| unts |                                                               |\n+------+---------------------------------------------------------------+\n\nDescription\n-----------\n\nghalatawi: Arabic Autocorrect library\n\nالتصحيح الإملائي من أهم الأدوات المستعملة في النشر والكتابة الإلكترونية،\nوتستعمل في البحث والاستعلامات، كما يعد من أهم الأدوات المرافقة للبرامج\nالمكتبية. وفي بعض الحالات نحتاج لما يسمى بالتصحيح التلقائي للكلمات، وهو\nاقتراح تصحيح لأخطاء شائعة في الكتابة، مثل قلب حرفين، أو عدم الضغط على زر\nما لإعطاء كلمة خاطئة، وتشيع في الكتابة بالعربية بعض الأخطاء مثل عدم\nالتفريق بين همزة الوصل وهمزة القطع، والخلط بين الضاد والظاء، وإغفال\nنقطتي الياء، وكتابة التاء المربوطة هاء.\n\nيهدف هذا المشروع إلى وضع قائمة للكلمات الخاطئة الشائعة وتصحيحها\nالتلقائي، وكذا وضع التعبيرات المنتظمة التي تعبّر عن بعض الحالات.\n\nAutoCorrect (Text replacement, Replace as you type) is a software\nfunction commonly found in word processors such as\nOpenOffice.org/LibreOffice. Its principal purpose is to correct common\nspelling or typing errors, saving time for the user. It is also used to\nautomatically format text or insert special characters by recognizing\nparticular character usage, saving the user from having to use more\ntedious functions[cf. wikipedia]. The common errors in Arabic, are\nconfusion between Alef forms ( Alef with Hamza, Alef without Hamza),\nmissig the Yeh dots, and missing the Teh-Marbuta dots.\n\nThis Project aims to construct a word list and a list of regular\nexpressions for Arabic auto-correction.\n\nمزايا:\n~~~~~~\n\nApplications تطبيقات\n~~~~~~~~~~~~~~~~~~~~\n\n-  قائمة التصحيح التلقائي في البرامج المكتبة OpenOffice/LibreOffice\n\n-  تدقيق الأخطاء الشائعة في المواقع ذات المحتوى الضخم، مثل ويكيبيديا.\n\n-  مساعدة الكاتب في برامج المراسلات، والترجمة، وغيرها.\n\n-  تدقيق المدوّنات اللغوية (corpus).\n\n-  تصحيح استعلامات البحث.\n\n-  تصحيح الكتابة في الأجهزة المحمولة كالهوتاف الذكية.\n\n-  AutoCorrect for word processors like OpenOffice/LibreOffice\n\n-  Huge content site Autocorrection, like Wikipedia.\n\n-  Writres and translators assitantance .\n\n-  Corpora Autocorrection.\n\nUsage\n~~~~~\n\ninstall\n~~~~~~~\n\n.. code:: shell\n\n   pip install ghalatawi\n\n[requirement]\n^^^^^^^^^^^^^\n\n::\n\n   pyarabic>=0.6.8\n\nimport\n^^^^^^\n\n.. code:: python\n\n   >>> from ghalatawi.autocorrector import AutoCorrector\n\nExamples\n--------\n\nDetailed examples and features in `Features <doc/features.md>`__\n\n-  Autocorrect a text\n\n.. code:: python\n\n   from ghalatawi.autocorrector import AutoCorrector\n   autoco = AutoCorrector()\n   text = 'اذا أردت إستعارة كتاب ، اذهب الى المكتبه او الادارة فى الضهيرة .'\n   autoco.spell(text)\n\noutput\n\n.. code:: python\n\n   'إذا أردت استعارة كتاب، اذهب إلى المكتبة أو الادارة في الظهيرة.'\n\n-  Show methods used in spelling\n\n.. code:: python\n\n   from ghalatawi.autocorrector import AutoCorrector\n   autoco = AutoCorrector()\n   autoco.show_config()\n\n.. code:: python\n\n   {'regex': True, 'wordlist': True, 'punct': True, 'typo': True}\n\n-  Allow/disallow methods used in spelling\n\n.. code:: python\n\n   from ghalatawi.autocorrector import AutoCorrector\n   autoco = AutoCorrector()\n   # remove regex method from spelling\n   autoco.unset_allow(\"regex\") \n   text = 'اذا أردت إستعارة كتاب ، اذهب الى المكتبه او الادارة فى الضهيرة .'\n   # The word إستعارة will no be corrected\n   expected_text = 'إذا أردت إستعارة كتاب، اذهب إلى المكتبة أو الادارة في الظهيرة.'\n   result_text = autoco.spell(text)\n   bool(result_text == expected_text)\n   # Allow regex \n   autoco.set_allow(\"regex\") \n   expected_text = 'إذا أردت استعارة كتاب، اذهب إلى المكتبة أو الادارة في الظهيرة.'\n   result_text = autoco.spell(text)\n   bool(result_text == expected_text)\n\n.. code:: python\n\n   True\n   True\n\n-  Adjust punctuations in text\n\n   .. code:: python\n\n      >>> from ghalatawi.autocorrector import AutoCorrector\n      >>> autoco = AutoCorrector()\n      >>> text = \"قال : للصائم فرحتان : فرحة حين يفطر ، وفرحة حين يلقى ربه  .\"\n      >>> autoco.adjust_pounct(text)\n      'قال: للصائم فرحتان: فرحة حين يفطر، وفرحة حين يلقى ربه.'\n\n-  Adjust typos in text\n\n   .. code:: python\n\n      >>> from ghalatawi.autocorrector import AutoCorrector\n      >>> autoco = AutoCorrector()        \n      >>> text = \"اشتريت الخبز و الحليب و الخضر و قليلا من الفاكهة.\"\n      >>> autoco.adjust_typo(text)\n          'اشتريت الخبز والحليب والخضر وقليلا من الفاكهة.'\n\n-  Autocorrect a word by regex\n\n   .. code:: python\n\n      >>> from ghalatawi.autocorrector import AutoCorrector\n      >>> autoco = AutoCorrector()            \n      >>> word=u\"الإجتماعية\"\n      >>> autoco.autocorrect_by_regex(word)\n      الاجتماعية\n\n-  Autocorrect a word by autucorrection word list; with given word list\n\n   .. code:: python\n\n      >>> from ghalatawi.autocorrector import AutoCorrector\n      >>> autoco = AutoCorrector()            \n      >>> autocorrectlist={\n      ...                 u'اذا':u'إذا',\n      ...                 u'او':u'أو',\n      ...                 u'فى':u'في',\n      ...                 u'هى':u'هي',\n      ...                 u'انت':u'أنت',\n      ...                 u'انتما':u'أنتما',\n      ...                 u'الى':u'إلى',\n      ...                 u'التى':u'التي',\n      ...                 u'الذى':u'الذي',\n      ...                 }\n      >>> word=u\"اذا\"\n      >>> autoco.autocorrect_by_wordlist(word, autocorrectlist)\n      'إذا'\n\n-  Autocorrect a word by autucorrection word list; with default word\n   list\n\n   .. code:: python\n\n      >>> from ghalatawi.autocorrector import AutoCorrector\n      >>> autoco = AutoCorrector()                    \n      >>> word=u\"اذا\"\n      >>> # default word list\n      >>> autoco.autocorrect_by_wordlist(word)\n      إذا\n\n-  Load a specific wordlist Autocorrect a word by autucorrection word\n   list\n\n.. code:: python\n\n   >>> from ghalatawi.autocorrector import AutoCorrector\n   >>> autoco = AutoCorrector()                    \n   >>> autocorrectlist = autoco.load_wordlist(\"data/arabic.acl\")\n   >>> word=u\"اذا\"\n   >>> autoco.autocorrect_by_wordlist(word, autocorrectlist)\n   إذا\n\n\n",
    "description_content_type": "",
    "docs_url": "https://pythonhosted.org/ghalatawi/",
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://ghalatawi.sourceforge.net/",
    "keywords": "",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ghalatawi",
    "package_url": "https://pypi.org/project/ghalatawi/",
    "platform": null,
    "project_url": "https://pypi.org/project/ghalatawi/",
    "project_urls": {
      "Homepage": "http://ghalatawi.sourceforge.net/"
    },
    "release_url": "https://pypi.org/project/ghalatawi/0.3/",
    "requires_dist": [
      "pyarabic (>=0.6.8)"
    ],
    "requires_python": "",
    "summary": "ghalatawi: Arabic autocorrect library",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16317619,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfe458004c5453e697331a6d7008fd185d1d8b9417ef0ef18f618cdef9f14f00",
          "md5": "c9128db857674fe8c788c5958c92bb0a",
          "sha256": "90b1b165299abd91ccac3674b2e14f4a183b1949d242111f9b011670ff963869"
        },
        "downloads": -1,
        "filename": "ghalatawi-0.2.win32.exe",
        "has_sig": false,
        "md5_digest": "c9128db857674fe8c788c5958c92bb0a",
        "packagetype": "bdist_wininst",
        "python_version": "2.6",
        "requires_python": null,
        "size": 199671,
        "upload_time": "2011-08-03T16:43:38",
        "upload_time_iso_8601": "2011-08-03T16:43:38.152326Z",
        "url": "https://files.pythonhosted.org/packages/bf/e4/58004c5453e697331a6d7008fd185d1d8b9417ef0ef18f618cdef9f14f00/ghalatawi-0.2.win32.exe",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5c4a157c89235b527629ba81ac0a7ba50104cfc1530880f734d164dfbcd4fdf",
          "md5": "7afa6950e1786db9729f2582c451a2a9",
          "sha256": "647c44541652d0e014cf0edd44c6f6f9cc02e7e5aa78d8f3ad40b40e9648b6fe"
        },
        "downloads": -1,
        "filename": "ghalatawi-0.2.zip",
        "has_sig": false,
        "md5_digest": "7afa6950e1786db9729f2582c451a2a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 930380,
        "upload_time": "2011-08-03T16:42:59",
        "upload_time_iso_8601": "2011-08-03T16:42:59.333595Z",
        "url": "https://files.pythonhosted.org/packages/f5/c4/a157c89235b527629ba81ac0a7ba50104cfc1530880f734d164dfbcd4fdf/ghalatawi-0.2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f8f015d12e92f3e7c72c0ec36e6ad0b3258a55aeaec2599976783e1848dd1e7",
          "md5": "6b70c5ddf36e933d96d7c281df170716",
          "sha256": "19153f751e4fec2ce2330bcca9dc64f0061c07f7e1ef1800ada4e13a4d83302c"
        },
        "downloads": -1,
        "filename": "ghalatawi-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b70c5ddf36e933d96d7c281df170716",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7169842,
        "upload_time": "2023-01-05T15:13:15",
        "upload_time_iso_8601": "2023-01-05T15:13:15.300684Z",
        "url": "https://files.pythonhosted.org/packages/6f/8f/015d12e92f3e7c72c0ec36e6ad0b3258a55aeaec2599976783e1848dd1e7/ghalatawi-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f8f015d12e92f3e7c72c0ec36e6ad0b3258a55aeaec2599976783e1848dd1e7",
        "md5": "6b70c5ddf36e933d96d7c281df170716",
        "sha256": "19153f751e4fec2ce2330bcca9dc64f0061c07f7e1ef1800ada4e13a4d83302c"
      },
      "downloads": -1,
      "filename": "ghalatawi-0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6b70c5ddf36e933d96d7c281df170716",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7169842,
      "upload_time": "2023-01-05T15:13:15",
      "upload_time_iso_8601": "2023-01-05T15:13:15.300684Z",
      "url": "https://files.pythonhosted.org/packages/6f/8f/015d12e92f3e7c72c0ec36e6ad0b3258a55aeaec2599976783e1848dd1e7/ghalatawi-0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}