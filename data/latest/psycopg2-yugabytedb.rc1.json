{
  "info": {
    "author": "Yugabyte",
    "author_email": "pypi@yugabyte.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: C",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: SQL",
      "Topic :: Database",
      "Topic :: Database :: Front-Ends",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Psycopg is the most popular PostgreSQL database adapter for the Python\nprogramming language.  Its main features are the complete implementation of\nthe Python DB API 2.0 specification and the thread safety (several threads can\nshare the same connection).  It was designed for heavily multi-threaded\napplications that create and destroy lots of cursors and make a large number\nof concurrent \"INSERT\"s or \"UPDATE\"s.\n\nPsycopg 2 is mostly implemented in C as a libpq wrapper, resulting in being\nboth efficient and secure.  It features client-side and server-side cursors,\nasynchronous communication and notifications, \"COPY TO/COPY FROM\" support.\nMany Python types are supported out-of-the-box and adapted to matching\nPostgreSQL data types; adaptation can be extended and customized thanks to a\nflexible objects adaptation system.\n\nPsycopg 2 is both Unicode and Python 3 friendly.\n\n\nDocumentation\n-------------\n\nDocumentation is included in the ``doc`` directory and is `available online`__.\n\n.. __: https://www.psycopg.org/docs/\n\nFor any other resource (source code repository, bug tracker, mailing list)\nplease check the `project homepage`__.\n\n.. __: https://psycopg.org/\n\n\nInstallation\n------------\n\nBuilding Psycopg requires a few prerequisites (a C compiler, some development\npackages): please check the install_ and the faq_ documents in the ``doc`` dir\nor online for the details.\n\nIf prerequisites are met, you can install psycopg like any other Python\npackage, using ``pip`` to download it from PyPI_::\n\n    $ pip install psycopg2-yugabytedb\n\nor using ``setup.py`` if you have downloaded the source package locally::\n\n    $ python setup.py build\n    $ sudo python setup.py install\n\nNote - The YugabyteDB Psycopg2 requires Postgresql version 11 or above (preferrably 14)\n\n.. _PyPI: https://pypi.org/project/psycopg2-yugabytedb/\n.. _install: https://www.psycopg.org/docs/install.html#install-from-source\n.. _faq: https://www.psycopg.org/docs/faq.html#faq-compile\n\n:Linux/OSX: |gh-actions|\n:Windows: |appveyor|\n\n.. |gh-actions| image:: https://github.com/psycopg/psycopg2/actions/workflows/tests.yml/badge.svg\n    :target: https://github.com/psycopg/psycopg2/actions/workflows/tests.yml\n    :alt: Linux and OSX build status\n\n.. |appveyor| image:: https://ci.appveyor.com/api/projects/status/github/psycopg/psycopg2?branch=master&svg=true\n    :target: https://ci.appveyor.com/project/psycopg/psycopg2/branch/master\n    :alt: Windows build status\n\nYugabyteDB Psycopg2 Features\n============================\n\nYugabyte Psycopg2 driver is a distributed python driver for YSQL built on the PostgreSQL psycopg2 driver. Although the upstream PostgreSQL psycopg2 driver works with YugabyteDB, the Yugabyte driver enhances YugabyteDB by eliminating the need for external load balancers.\n\n* It is cluster-aware, which eliminates the need for an external load balancer.\n* It is topology-aware, which is essential for geographically-distributed applications. The driver uses servers that are part of a set of geo-locations specified by topology keys.\n\nLoad balancing\n--------------\n\nThe Yugabyte Psycopg2 driver has the following load balancing features:\n\n* Uniform load balancing\n\nIn this mode, the driver makes the best effort to uniformly distribute the connections to each YugabyteDB server. For example, if a client application creates 100 connections to a YugabyteDB cluster consisting of 10 servers, then the driver creates 10 connections to each server. If the number of connections are not exactly divisible by the number of servers, then a few may have 1 less or 1 more connection than the others. This is the client view of the load, so the servers may not be well balanced if other client applications are not using the Yugabyte JDBC driver.\n\n* Topology-aware load balancing\n\nBecause YugabyteDB clusters can have servers in different regions and availability zones, the YugabyteDB JDBC driver is topology-aware, and can be configured to create connections only on servers that are in specific regions and zones. This is useful for client applications that need to connect to the geographically nearest regions and availability zone for lower latency; the driver tries to uniformly load only those servers that belong to the specified regions and zone.\nThe Yugabyte Psycopg2 driver can be configured with pooling as well.\n\nUsage\n-----\n\nLoad balancing connection properties:\n\nThe following connection properties need to be added to enable load balancing:\n\n* load_balance - enable cluster-aware load balancing by setting this property to True; disabled by default.\n* topology_keys - provide comma-separated geo-location values to enable topology-aware load balancing. Geo-locations can be provided as cloud.region.zone.\n\nPass new connection properties for load balancing in the connection URL or in the dictionary. To enable uniform load balancing across all servers, you set the load-balance property to True in the URL, as per the following example.\n\nConnection String::\n\n    conn = psycopg2.connect(\"dbname=database_name host=hostname port=port user=username  password=password load_balance=true\")\n\nConnection Dictionary::\n\n    conn = psycopg2.connect(user = 'username', password='xxx', host = 'hostname', port = 'port', dbname = 'database_name', load_balance='True')\n\nTo specify topology keys, you set the topology_keys property to comma separated values, as per the following example.\n\nConnection String::\n\n    conn = psycopg2.connect(\"dbname=database_name host=hostname port=port user=username  password=password load_balance=true topology_keys=cloud1.region1.zone1,cloud2.region2.zone2\")\n\nConnection Dictionary::\n\n    conn = psycopg2.connect(user = 'username', password='xxx', host = 'hostname', port = 'port', dbname = 'database_name', load_balance='True', topology_keys='cloud1.region1.zone1,cloud2.region2.zone2')\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://psycopg.org/",
    "keywords": "",
    "license": "LGPL with exceptions",
    "maintainer": "Sfurti Sarah",
    "maintainer_email": "ssarah@yugabyte.com",
    "name": "psycopg2-yugabytedb",
    "package_url": "https://pypi.org/project/psycopg2-yugabytedb/",
    "platform": "any",
    "project_url": "https://pypi.org/project/psycopg2-yugabytedb/",
    "project_urls": {
      "Code": "https://github.com/yugabyte/psycopg2",
      "Documentation": "https://www.psycopg.org/docs/",
      "Download": "https://pypi.org/project/psycopg2-yugabytedb/",
      "Homepage": "https://psycopg.org/",
      "Issue Tracker": "https://github.com/psycopg/psycopg2/issues"
    },
    "release_url": "https://pypi.org/project/psycopg2-yugabytedb/2.9.3.post0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "psycopg2 - Python-PostgreSQL Database Adapter",
    "version": "2.9.3.post0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13510239,
  "releases": {
    "2.9.3.post0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f4ba7f70434ed7683155bf8bc43a2f3ac7f0d448349d2ff7ea61e9ccbff1ff2",
          "md5": "27be698709a8900f9fd88034222c7f2f",
          "sha256": "e77d230f8e754c8d0940834314d49af80ae6a801560deb52eae5f3fa4155c7ba"
        },
        "downloads": -1,
        "filename": "psycopg2-yugabytedb-2.9.3.post0.tar.gz",
        "has_sig": false,
        "md5_digest": "27be698709a8900f9fd88034222c7f2f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 386195,
        "upload_time": "2022-04-14T05:01:15",
        "upload_time_iso_8601": "2022-04-14T05:01:15.117283Z",
        "url": "https://files.pythonhosted.org/packages/6f/4b/a7f70434ed7683155bf8bc43a2f3ac7f0d448349d2ff7ea61e9ccbff1ff2/psycopg2-yugabytedb-2.9.3.post0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f4ba7f70434ed7683155bf8bc43a2f3ac7f0d448349d2ff7ea61e9ccbff1ff2",
        "md5": "27be698709a8900f9fd88034222c7f2f",
        "sha256": "e77d230f8e754c8d0940834314d49af80ae6a801560deb52eae5f3fa4155c7ba"
      },
      "downloads": -1,
      "filename": "psycopg2-yugabytedb-2.9.3.post0.tar.gz",
      "has_sig": false,
      "md5_digest": "27be698709a8900f9fd88034222c7f2f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 386195,
      "upload_time": "2022-04-14T05:01:15",
      "upload_time_iso_8601": "2022-04-14T05:01:15.117283Z",
      "url": "https://files.pythonhosted.org/packages/6f/4b/a7f70434ed7683155bf8bc43a2f3ac7f0d448349d2ff7ea61e9ccbff1ff2/psycopg2-yugabytedb-2.9.3.post0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}