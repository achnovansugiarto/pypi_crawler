{
  "info": {
    "author": "Casper",
    "author_email": "casper@devdroplets.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "distributed-worker\n==================\n\nA Python 3.7 wrapper around multiprocessing for easy cross-machine\ncomputation\n\nWhat is this?\n-------------\n\nDistributed Worker is a wrapper around the multiprocessing package\nallowing you to focus on the distributed computations instead of\nmanaging nodes/communication.\nYou can use regular python primitives to communicate just as in\nmultiprocessing, but you can also use remote machines as workers.\n\nHow does it work?\n-----------------\n\nYou create a ``DistributedManager`` which creates a central server for\nyour workers to connect to.\nYou can create some logic around it to manage tasks/messages.\n\nThen you implement one or multiple ``DistributedWorker``\\ s to handle\nthose tasks.\n\nAnd now you can run your distributed computations.\n\nExample Setup\n-------------\n\n    Check ``/example.py`` for a fully functional version\n\nLet's say we want a distributed prime checker, here is a very naive\nimplementation:\n``py def is_prime(x):   for num in range(2, x):     if (x % num) == 0:       return False   return True``\n\nIf we want to check a large amount of primes that would take ages, so we\nwant to distribute the task.\n\n    To be clear this task is likely overkill for a distributed setup,\n    but it's a good example\n\nFirst we will create a task server:\n\n\\`\\`\\`py\nfrom distributed\\_worker import DistributedManager\nclass PrimeManager(DistributedManager):\ndef **init**\\ (self):\n::\n\n    super().__init__()\n    self.pending = list(range(150000))\n    self.results = {}\n    self.tasked = set()\n    self.chunks = 1000 # Task size\n\ndef loop(self):\n::\n\n    # No tasks pending, wait on exit\n    if len(self.pending) < 1:\n        return\n\n    # Assign tasks to workers\n    active = set(self.get_active_workers())\n    available_workers = active - self.tasked\n    for x in available_workers:\n      chunk = min(len(self.pending), self.chunks)\n      # Send chunks (1000) of numbers for processing\n      task = self.pending[:chunk]\n      self.pending = self.pending[chunk:]\n      print('Send task %d-%d to worker %d' % (task[0], task[-1], x))\n      self.send(x, task)\n      self.tasked.add(x)\n\ndef on\\_new\\_worker(self, worker: int):\n::\n\n    print('New worker added %d' % worker)\n\ndef on\\_worker\\_disconnect(self, worker: int):\n::\n\n    print('Worker disconnected %d' % worker)\n\ndef handle\\_msg(self, worker: int, msg: Any):\n::\n\n    # Worker finished it's task\n    for num in msg:\n      self.results[num] = msg[num]\n    self.tasked.remove(worker)\n\nif **name** == \"**main**\\ \":\n::\n\n    manager = PrimeManager()\n\n    # For adding remote workers\n    print('client creds:', manager.get_client_args())\n\n    while manager.tasked or manager.pending:\n      manager.run_once()\n      # Can do other tasks here as well\n\n    # Print the results\n    print(manager.results)\n\n    # Stop all workers\n    manager.stop()\n\n\\`\\`\\`\n\nThen we'll create a worker:\n\n\\`\\`\\`py\nfrom distributed\\_worker import DistributedWorker\nclass PrimeWorker(DistributedWorker):\ndef **init**\\ (self, pipe, \\*args, \\*\\*kwargs):\n::\n\n    super().__init__(pipe)\n    self.task = []\n    self.results = {}\n\ndef loop(self):\n::\n\n    # Ideally keep the executing here within 1 hour or adjust TTL on the server\n    if len(self.task):\n      # Tasks available\n      ctask = self.task.pop()\n      self.results[ctask] = is_prime(ctask)\n    else:\n      # Finished tasks\n      if len(self.results):\n        self.send(self.results)\n        # Clear results so we don't resend\n        self.results = {}\n\ndef handle\\_msg(self, msg):\n::\n\n    if type(msg) == list:\n      self.task = msg\n\n\\`\\`\\`\n\nNow we can create distributed workers gallore:\n\\`\\`\\`py\nfrom distributed\\_worker import create\\_remote\\_worker\n\nimport PrimeWorker as well\n==========================\n\nExample, check console of server\n================================\n\nclient\\_args = (('localhost', 6000), 'AF\\_INET', b'secret password')\n\nCreate 10 workers (10 threads)\n==============================\n\nfor x in range(10):\n# Add PrimeWorker constructor args if needed\ncreate\\_remote\\_worker(PrimeWorker, client\\_args)\n\\`\\`\\`\n\nIf we just want to utilize our local CPU cores (and not deal with the\nauthentication) we can create workers through the manager:\n``py manager = DistributedManager() # Again, add PrimeWorker constructor args if needed manager.create_local_worker(PrimeWorker)``\n\n    The total execution time will generally improve as tasks need more\n    time to complete\n\nRunning ``example.py`` vs a single-threaded version:\n\\`\\`\\`\n$ time example.py\n...\nreal 0m11.631s\nuser 0m57.648s\nsys 0m0.395s\n\n$ time single.py\nreal 0m43.581s\nuser 0m43.550s\nsys 0m0.018s\n\\`\\`\\`",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/i404788/distributed-worker",
    "keywords": "",
    "license": "BSD 2-Clause \"Simplified\" License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "distributed-worker",
    "package_url": "https://pypi.org/project/distributed-worker/",
    "platform": "",
    "project_url": "https://pypi.org/project/distributed-worker/",
    "project_urls": {
      "Homepage": "https://github.com/i404788/distributed-worker"
    },
    "release_url": "https://pypi.org/project/distributed-worker/1.3.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python wrapper around multiprocessing for easy cross-machine computation",
    "version": "1.3.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10658053,
  "releases": {
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df0aa43e56e966c4bc9b249575e6e2afa16368add918e5f403bb1748dcc9a704",
          "md5": "b2f2c545a9396834f700293b9d5f9bae",
          "sha256": "6038a8009e28ae2b9199629404147a2935280a1313fafc4d00bf4dbb4b0deb19"
        },
        "downloads": -1,
        "filename": "distributed-worker-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b2f2c545a9396834f700293b9d5f9bae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5741,
        "upload_time": "2020-06-11T13:11:14",
        "upload_time_iso_8601": "2020-06-11T13:11:14.837050Z",
        "url": "https://files.pythonhosted.org/packages/df/0a/a43e56e966c4bc9b249575e6e2afa16368add918e5f403bb1748dcc9a704/distributed-worker-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ec3a9691a38a993c6f7fea5d6dab40e5db9f394a45699b74354c88e924e5ebf",
          "md5": "25916d999bcd46666bdb996e2b25cdd0",
          "sha256": "e1898814ddd7ad494f3589dec1e1ffc394abf5e0aa8b14bfd366fff254f8e307"
        },
        "downloads": -1,
        "filename": "distributed-worker-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "25916d999bcd46666bdb996e2b25cdd0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5689,
        "upload_time": "2020-06-12T01:48:53",
        "upload_time_iso_8601": "2020-06-12T01:48:53.039111Z",
        "url": "https://files.pythonhosted.org/packages/4e/c3/a9691a38a993c6f7fea5d6dab40e5db9f394a45699b74354c88e924e5ebf/distributed-worker-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1412bbda53aded0fb2e9ceace2bd4bc706345ddc23a7e6f585511014ea903168",
          "md5": "bab37abe7166509dd3db23f97a96c334",
          "sha256": "125d24cd5e119c82bc01b5d9e67bda6a457e281741c333744fcdb89a5e24192b"
        },
        "downloads": -1,
        "filename": "distributed-worker-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bab37abe7166509dd3db23f97a96c334",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6871,
        "upload_time": "2020-10-28T23:20:44",
        "upload_time_iso_8601": "2020-10-28T23:20:44.969760Z",
        "url": "https://files.pythonhosted.org/packages/14/12/bbda53aded0fb2e9ceace2bd4bc706345ddc23a7e6f585511014ea903168/distributed-worker-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "747c59d785eb5a6854791b65ec3fe7d7a0142655d75e60ca3ca054f29a33b527",
          "md5": "0f2d33f5ea9fbf73704aa181cdf18586",
          "sha256": "334fd910aeac348fba5d94da4240f27282f78ffb332d86b5d4aebadb53e82d4e"
        },
        "downloads": -1,
        "filename": "distributed_worker-1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f2d33f5ea9fbf73704aa181cdf18586",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6840,
        "upload_time": "2020-11-08T23:12:57",
        "upload_time_iso_8601": "2020-11-08T23:12:57.538005Z",
        "url": "https://files.pythonhosted.org/packages/74/7c/59d785eb5a6854791b65ec3fe7d7a0142655d75e60ca3ca054f29a33b527/distributed_worker-1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90e10c1df632f889e12d443a10d06abb8e35b2cd86bc424b75c38f766348e9c7",
          "md5": "4d5b5452a9271de72ce06489299e6f4d",
          "sha256": "4faa4cb5a5ae4df43871c97cdb6607e8b6c9a2503e47073d9c951cdd03550bfe"
        },
        "downloads": -1,
        "filename": "distributed-worker-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4d5b5452a9271de72ce06489299e6f4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6885,
        "upload_time": "2020-11-08T23:13:01",
        "upload_time_iso_8601": "2020-11-08T23:13:01.226780Z",
        "url": "https://files.pythonhosted.org/packages/90/e1/0c1df632f889e12d443a10d06abb8e35b2cd86bc424b75c38f766348e9c7/distributed-worker-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f76529c8e553926234fc4b3990f9754dbe2f3214f48781abeaa0e81ef9a0608d",
          "md5": "42f535ad6fe71f00ddbc0a4ae260ddc3",
          "sha256": "ff4c4346ea2426d1df90eb0ec9945fa61ac2243c026288e3d9faefc4b0a70b33"
        },
        "downloads": -1,
        "filename": "distributed_worker-1.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42f535ad6fe71f00ddbc0a4ae260ddc3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6873,
        "upload_time": "2020-11-08T23:27:18",
        "upload_time_iso_8601": "2020-11-08T23:27:18.111382Z",
        "url": "https://files.pythonhosted.org/packages/f7/65/29c8e553926234fc4b3990f9754dbe2f3214f48781abeaa0e81ef9a0608d/distributed_worker-1.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ee7b509095236188bc89aab24193ee448196d03c0f003c0eb8bd3e07b439224",
          "md5": "f3a27ac54146ca2b696e7fc422370396",
          "sha256": "5b6a478440284abe0624c439823082a5f40c81784ed751b7e5c8110e1f32fb2c"
        },
        "downloads": -1,
        "filename": "distributed-worker-1.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f3a27ac54146ca2b696e7fc422370396",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6904,
        "upload_time": "2020-11-08T23:27:22",
        "upload_time_iso_8601": "2020-11-08T23:27:22.414976Z",
        "url": "https://files.pythonhosted.org/packages/0e/e7/b509095236188bc89aab24193ee448196d03c0f003c0eb8bd3e07b439224/distributed-worker-1.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d506ea8869abc324e6c285bd6cef0268c78b143c45b86973bb1063e74ec67d42",
          "md5": "4c65622204adc6ec49fca4b8d1080149",
          "sha256": "a6965265747773ef2dd0eb889875d8a830a3cd86787fc71244582901c1d82261"
        },
        "downloads": -1,
        "filename": "distributed-worker-1.3.3.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "4c65622204adc6ec49fca4b8d1080149",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9114,
        "upload_time": "2020-12-08T18:46:24",
        "upload_time_iso_8601": "2020-12-08T18:46:24.572560Z",
        "url": "https://files.pythonhosted.org/packages/d5/06/ea8869abc324e6c285bd6cef0268c78b143c45b86973bb1063e74ec67d42/distributed-worker-1.3.3.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edcaab6dda91f51e51d6930e8e937c6f83ad6eb47e508ec72a358d2f881d532c",
          "md5": "5fca4920557f98aa97f850fb84b9a025",
          "sha256": "20e804e48522bdd9ac37e44f31475531fd0821b5f27cf837c3f42f430a7db1aa"
        },
        "downloads": -1,
        "filename": "distributed-worker-1.3.7.tar.gz",
        "has_sig": false,
        "md5_digest": "5fca4920557f98aa97f850fb84b9a025",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5963,
        "upload_time": "2021-06-15T23:25:09",
        "upload_time_iso_8601": "2021-06-15T23:25:09.948933Z",
        "url": "https://files.pythonhosted.org/packages/ed/ca/ab6dda91f51e51d6930e8e937c6f83ad6eb47e508ec72a358d2f881d532c/distributed-worker-1.3.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "edcaab6dda91f51e51d6930e8e937c6f83ad6eb47e508ec72a358d2f881d532c",
        "md5": "5fca4920557f98aa97f850fb84b9a025",
        "sha256": "20e804e48522bdd9ac37e44f31475531fd0821b5f27cf837c3f42f430a7db1aa"
      },
      "downloads": -1,
      "filename": "distributed-worker-1.3.7.tar.gz",
      "has_sig": false,
      "md5_digest": "5fca4920557f98aa97f850fb84b9a025",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5963,
      "upload_time": "2021-06-15T23:25:09",
      "upload_time_iso_8601": "2021-06-15T23:25:09.948933Z",
      "url": "https://files.pythonhosted.org/packages/ed/ca/ab6dda91f51e51d6930e8e937c6f83ad6eb47e508ec72a358d2f881d532c/distributed-worker-1.3.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}