{
  "info": {
    "author": "Lightstreamer Srl",
    "author_email": "support@lightstreamer.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Communications",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "=====================================\r\nLightstreamer SDK for Python Adapters\r\n=====================================\r\n\r\nA Python library to  write Data Adapters and Metadata Adapters for `Lightstreamer Server`_.\r\nThe adapters will run in a separate process, communicating with the Server through the Adapter Remoting Infrastructure.\r\n\r\n.. _Lightstreamer Server: http://www.lightstreamer.com\r\n\r\n.. image:: https://raw.githubusercontent.com/Lightstreamer/Lightstreamer-lib-python-adapter/master/architecture.png\r\n\r\nUse\r\n===\r\nInstall the package:\r\n\r\n.. code-block:: bash\r\n\r\n   $ pip install lightstreamer-adapter\r\n\r\nConfigure Lightstreamer\r\n-----------------------\r\n\r\n1) Download and install Lightstreamer\r\n2) Go to the ``adapters`` folder of your Lightstreamer Server installation. Create a new folder to deploy the remote adapters in, let's call it ``PythonAdapter``\r\n3) Create an ``adapters.xml`` file inside the ``PythonAdapter`` folder and use the following contents (this is an example configuration, you can modify it to your liking by using the generic template, https://lightstreamer.com/docs/ls-server/latest/remote_adapter_conf_template/adapters.xml or https://lightstreamer.com/docs/ls-server/latest/remote_adapter_robust_conf_template/adapters.xml, as a reference):\r\n\r\n   .. code-block:: xml\r\n\r\n      <?xml version=\"1.0\"?>\r\n      <adapters_conf id=\"PROXY_PYTHON\">\r\n         <metadata_provider>\r\n            <adapter_class>ROBUST_PROXY_FOR_REMOTE_ADAPTER</adapter_class>\r\n            <classloader>log-enabled</classloader>\r\n            <param name=\"request_reply_port\">8003</param>\r\n            <param name=\"timeout\">36000000</param>\r\n         </metadata_provider>\r\n         <data_provider>\r\n            <adapter_class>ROBUST_PROXY_FOR_REMOTE_ADAPTER</adapter_class>\r\n            <classloader>log-enabled</classloader>\r\n            <param name=\"request_reply_port\">8001</param>\r\n            <param name=\"notify_port\">8002</param>\r\n            <param name=\"timeout\">36000000</param>\r\n         </data_provider>\r\n      </adapters_conf>\r\n    \r\n4) Take note of the ports configured in the adapters.xml file as those are needed to write the remote part of the adapters.\r\n\r\nWrite the Adapters\r\n------------------\r\n\r\nCreate a new python module, let's call it ``adapters.py``, where we will put  the minimal logic required to write a basic Adapter Set.\r\n\r\n1) Import the sever classes needed to setup the connection to the Lightstreamer server, and the adapter classes to be extended to write your own Remote Adapters:\r\n\r\n   .. code-block:: python\r\n   \r\n      from lightstreamer_adapter.server import (DataProviderServer, MetadataProviderServer)\r\n      from lightstreamer_adapter.interfaces.data import DataProvider\r\n      from lightstreamer_adapter.interfaces.metadata import MetadataProvider\r\n   \r\n2) Create a new Remote Data Adapter by subclassing the DataProvider abstract class:\r\n\r\n   .. code-block:: python\r\n   \r\n      class MyDataAdapter(DataProvider):\r\n          \"\"\"This Remote Data Adapter sample class shows a simple implementation of\r\n          the DataProvider abstract class.\"\"\"\r\n      \r\n          def __init__(self):\r\n              # Reference to the provided ItemEventListener instance\r\n              self._listener = None\r\n\r\n          def issnapshot_available(self, item_name):\r\n              \"\"\"Returns True if Snapshot information will be sent for the item_name\r\n              item before the updates.\"\"\"\r\n              snapshot = False  # May be based on the item_name item\r\n              return snapshot\r\n         \r\n          def set_listener(self, event_listener):\r\n              \"\"\"Caches the reference to the provided ItemEventListener instance.\"\"\"\r\n              self._listener = event_listener\r\n              \r\n          def subscribe(self, item_name):\r\n              \"\"\"Invoked to request data for an item. From now on you can start\r\n              sending real time updates for item_name item, through invocations like\r\n              the following:\r\n              \r\n              self._listener.update(item_name, {'field1': valField1,\r\n                                                'field2': valField2}, False)\r\n              \"\"\"\r\n              \r\n          def unsubscribe(self, item_name):\r\n              \"\"\"Invoked to end a previous request of data for an item. From now on,\r\n              you should stop sending updates for item_name item.\"\"\"\r\n\r\n\r\n3) Create a new Remote Metadata Adapter by subclassing the MetadataProvider class, if the latter's default behaviour does not meet your requirements, and override the methods for which you want to supply a custom implementation:\r\n\r\n   .. code-block:: python\r\n      \r\n      class MyMetadataAdapter(MetadataProvider):\r\n          \"\"\"This Remote Metadata Adapter sample class shows a minimal custom\r\n          implementation of the notify_user_message method.\r\n          \"\"\"\r\n          \r\n          def notify_user_message(self, user, session_id, message):\r\n              \"\"\"Invoked to forward a message received by a User\"\"\"\r\n              print(\"Message {} arrived for user {} in the session {}\"\r\n                    .format(user, session_id, message))\r\n                    \r\n4) Run the adapters, by creating, configuring and starting the server class instances:\r\n\r\n   .. code-block:: python\r\n   \r\n      if __name__ == \"__main__\":\r\n          # The host of the Lightstreamer server, to be changed as required.\r\n          LS_SERVER_HOST = 'localhost'\r\n          \r\n          # Creates a new MetadataProviderServer instance, passing a new\r\n          # MyMetadataAdpater object and the remote address.\r\n          metadata_provider_server = MetadataProviderServer(MyMetadataAdapter(),\r\n                                                            (LS_SERVER_HOST, 8003))\r\n          \r\n          # Starts the server instance.\r\n          metadata_provider_server.start()\r\n          \r\n          # Creates a new DataProviderServer instance, passing a new MyDataAdpater\r\n          # object and the remote address\r\n          data_provider_sever = DataProviderServer(MyDataAdapter(),\r\n                                                   (LS_SERVER_HOST, 8001, 8002))\r\n          # Starts the server instance.\r\n          data_provider_sever.start()\r\n\r\n5) Ensure that the main thread stays alive. This is needed, since Python 3.9, to allow the SDK library to take advantage of the system's ThreadPoolExecutor class. Here we show a simple way to do so:\r\n\r\n   .. code-block:: python\r\n   \r\n      from threading import Event\r\n      \r\n      .....\r\n      \r\n      shutdown_event = Event()\r\n      shutdown_event.wait()\r\n\r\nRun\r\n---\r\n\r\nFrom the command line, execute:\r\n\r\n.. code-block:: bash\r\n\r\n   $ python adapters.py\r\n\r\nConnect a Client\r\n----------------\r\n\r\n.. code-block:: javascript\r\n\r\n    var lsClient = new LightstreamerClient(LS_SERVER_HOST, \"PROXY_PYTHON\");\r\n    lsClient.connect();\r\n    // To be completed with other client side activities, like registration of subscriptions and handling of \r\n    // real time updates.\r\n    // ...\r\n    \r\nwhere ``LS_SERVER_HOST`` is the host of the Lightstreamer Server, and ``\"PROXY_PYTHON\"`` is the Adapter Set ID as specified in the ``adapters.xml`` file.\r\n    \r\nAPI Reference\r\n-------------\r\n\r\nAPI Reference is available at `<http://lightstreamer-lib-python-adapter.readthedocs.io/en/version-1.2.3>`_.\r\n\r\nYou can generate it by executing the following command from the ``doc`` folder:\r\n\r\n.. code-block:: bash\r\n\r\n   $ make html\r\n   \r\nThe generated documentation will be available under the ``doc\\_build\\html`` folder. \r\n\r\n\r\nSee Also\r\n=================================\r\n\r\n- `Adapter Remoting Infrastructure Network Protocol Specification`_\r\n- `Lightstreamer Chat Demo adapter for Python`_\r\n\r\n.. _Adapter Remoting Infrastructure Network Protocol Specification: https://lightstreamer.com/api/ls-generic-adapter/latest/ARI%20Protocol.pdf\r\n.. _Lightstreamer Chat Demo adapter for Python: https://github.com/Lightstreamer/Lightstreamer-example-Chat-adapter-python\r\n\r\n\r\nLightstreamer Compatibility Notes\r\n=================================\r\n\r\nCompatible with Adapter Remoting Infrastructure since Server version 7.0 (corresponding to Adapter Remoting Infrastructure 1.8).\r\n\r\n- For a version of this library compatible with Adapter Remoting Infrastructure for Server version 6.0 (corresponding to Adapter Remoting Infrastructure 1.7), please refer to `this tag`_.\r\n\r\n.. _this tag: https://github.com/Lightstreamer/Lightstreamer-lib-python-adapter/tree/version-1.0.0post1-27\r\n\r\n\r\n.. :changelog:\r\n\r\nRelease History\r\n---------------\r\n\r\n\r\n1.2.3 (2023-03-21)\r\n\r\n**Improvements**\r\n\r\n- Added handling of runtime exceptions in the internal threads, by submitting\r\n  them to the exception handlers and extended the default handling of runtime\r\n  exceptions by always showing the stack trace.\r\n\r\n- Added a unit test on keepalive packets for the notify connection.\r\n  Also improved unit tests log to better identify the current test.\r\n\r\n- Added documentation notes regarding the compatibility with Python 3.9 and\r\n  later. See \"start\" in MetadataProviderServer and DataProviderServer.\r\n\r\n**Bug Fixes**\r\n\r\n- Fixed a race condition which could have caused the RAC message to be sent\r\n  too late and break the protocol. However, this could only happen when the\r\n  Proxy Adapter had no credential check configured.\r\n\r\n- Addressed possible race conditions in the unit tests.\r\n\r\n**Lightstreamer Compatibility Notes**\r\n\r\n- Compatible with Adapter Remoting Infrastructure since Server version 7.0.\r\n\r\n\r\n1.2.2 (2021-08-30)\r\n++++++++++++++++++\r\n\r\n**Improvements**\r\n\r\n- Introduced full support for Server version 7.2. Now the library can log any\r\n  message sent by the Proxy Adapter when forcibly closing the connection.\r\n\r\n- Modified the behavior when incomplete credentials are configured: now they\r\n  are sent to the Proxy Adapter, whereas previously they were not sent.\r\n  Note that, if the Proxy Adapter has credentials configured, they cannot be\r\n  incomplete; hence the Proxy Adapter is expected to refuse the connection in\r\n  all cases.\r\n\r\n**Bug Fixes**\r\n\r\n- Fixed a bug on the handling of keepalives on the notification channel of the\r\n  Data Adapter, which may have caused the Proxy Adapter to close the connection\r\n  due to a keepalive timeout, if configured. This had the highest probability\r\n  to happen in case of a reduced overall data flow, or during the startup phase.\r\n\r\n**Lightstreamer Compatibility Notes**\r\n\r\n- Compatible with Adapter Remoting Infrastructure since Server version 7.0.\r\n\r\n\r\n1.2.1 (2021-05-25)\r\n+++++++++++++++++++\r\n\r\n**Improvements**\r\n\r\n- Reformulated the compatibility constraint with respect to the Server version,\r\n  instead of the Adapter Remoting Infrastructure version.\r\n\r\n**Lightstreamer Compatibility Notes**\r\n\r\n- Compatible with Adapter Remoting Infrastructure since Server version 7.0.\r\n\r\n\r\n1.2.0 (2020-01-24)\r\n+++++++++++++++++++\r\n\r\n**Improvements**\r\n\r\n- Extended DataProviderServer and MetadataProviderServer (through the Server\r\n  superclass) with settings of credentials, to be sent to the Proxy Adapter\r\n  upon each connection. Credential check is an optional configuration of the\r\n  Proxy Adapter; if not leveraged, the credentials will be ignored.\r\n\r\n- Modified the handling of the keepalives when connected to a Proxy Adapter\r\n  (i.e. Adapter Remoting Infrastructure) version 1.9\r\n  (corresponding to Server 7.1) or higher: the preferred\r\n  keepalive interval requested by the Proxy Adapter, when stricter than the\r\n  configured one, is now obeyed (with a safety minimun of 1 second). Moreover,\r\n  in that case, the default interval configuration is now 10 seconds instead of\r\n  1. If an existing installation relies on a very short keepalive interval to\r\n  keep the connection alive due to intermediate nodes, the time should now be\r\n  explicitly configured.\r\n\r\n- Added full support for ARI Protocol extensions introduced in Adapter Remoting\r\n  Infrastructure version 1.9 (corresponding to Server 7.1).\r\n\r\n- Added full support for TLS/SSL encrypted connections the Proxy Adapters.\r\n\r\n- Added clarifications in the documentation of the exception handlers and fix\r\n  a few obsolete notes.\r\n\r\n- Added clarifications in the documentation of MetadataProviderServer and\r\n  DataProviderServer classes.\r\n\r\n- Improved code layout as per pylint/pycodestyle outputs.\r\n\r\n- Remove useless \"pass\" statement from classes of the interfaces package.\r\n\r\n- Updated unit tests according to new features\r\n\r\n**Bug Fixes**\r\n\r\n- Removed useless optional client_principal parameter from the\r\n  MetadataProvider.notify_user method.\r\n\r\n- Fixed documentation of the DataProvider class, where \"Lightstreamer Kernel\"\r\n  was erroneously referred as \"Lightstreamer1\".\r\n\r\n- Fixed broken links in the documentation of the DataProviderServer class.\r\n\r\n**Lightstreamer Compatibility Notes**\r\n\r\n- Compatible with Adapter Remoting Infrastructure since 1.8\r\n  (corresponding to Server 7.0).\r\n\r\n\r\n1.1.4 (2019-03-29)\r\n+++++++++++++++++++\r\n\r\n**Bug Fixes**\r\n\r\n- Fixed a bug that caused requests sent from Lightstreamer instances running on\r\n  non-Windows platform not to be parsed correctly (see #2).\r\n\r\n**Lightstreamer Compatibility Notes**\r\n\r\n- Compatible with Adapter Remoting Infrastructure since 1.8\r\n  (corresponding to Server 7.0).\r\n\r\n\r\n1.1.3 (2019-03-28)\r\n+++++++++++++++++++\r\n\r\n**Bug Fixes**\r\n\r\n- Fixed parsing issue when subscribing to more than two items.\r\n\r\n**Lightstreamer Compatibility Notes**\r\n\r\n- Compatible with Adapter Remoting Infrastructure since 1.8\r\n  (corresponding to Server 7.0).\r\n\r\n\r\n1.1.2 (2018-02-22)\r\n+++++++++++++++++++\r\n\r\n**Improvements**\r\n\r\n- Added clarifications on licensing matters in the docs.\r\n\r\n**Bug Fixes**\r\n\r\n- Fixed edition note in the documentation of notify_user_with_principal.\r\n\r\n**Lightstreamer Compatibility Notes**\r\n\r\n- Compatible with Adapter Remoting Infrastructure since 1.8\r\n  (corresponding to Server 7.0).\r\n\r\n\r\n1.1.1 (2017-12-22)\r\n+++++++++++++++++++\r\n\r\n**Improvements**\r\n\r\n- Moved API documentation to `<http://lightstreamer-lib-python-adapter.readthedocs.io/en/latest/>`_.\r\n\r\n- Fixed few source code fragments to make them PEP 8 compliant.\r\n\r\n**Bug Fixes**\r\n\r\n- Fixed Lightstreamer Compatibility Notes in the README file.\r\n\r\n**Lightstreamer Compatibility Notes**\r\n\r\n- Compatible with Adapter Remoting Infrastructure since 1.8\r\n  (corresponding to Server 7.0).\r\n\r\n\r\n1.1.0 (2017-12-19)\r\n+++++++++++++++++++\r\n\r\n**Improvements**\r\n\r\n- Modified the signature of the notify_mpn_device_access and\r\n  notify_mpn_device_token_change methods of the MetadataProvider class,\r\n  to add a session ID argument.\r\n  Existing Remote Metadata Adapters leveraging notify_mpn_device_access\r\n  and/or notify_mpn_device_token_change have to be ported to the new signature.\r\n\r\n- Revised the public constants defined in the MpnPlatformType class.\r\n  The constants referring to the supported platforms have got new names,\r\n  whereas the constants for platforms not yet supported have been removed.\r\n  Existing Remote Metadata Adapters explicitly referring to the constants\r\n  have to be aligned.\r\n\r\n- Removed the subclasses of MpnSubscriptionInfo (namely\r\n  MpnApnsSubscriptionInfo and MpnGcmSubscriptionInfo) that were used\r\n  by the SDK library to supply the attributes of the MPN subscriptions\r\n  in notify_mpn_subscription_activation. Now, simple instances of\r\n  MpnSubscriptionInfo will be supplied and attribute information can be\r\n  obtained through the new \"notification_format\" property.\r\n  See the MPN chapter on the General Concepts document for details on the\r\n  characteristics of the Notification Format.\r\n  Existing Remote Metadata Adapters\r\n  leveraging notify_mpn_subscription_activation and inspecting the supplied\r\n  MpnSubscriptionInfo have to be ported to the new class contract.\r\n\r\n- Improved the interface documentation of MPN-related methods.\r\n\r\n- Clarified in the docs for notifySessionClose which race conditions with other\r\n  methods can be expected.\r\n\r\n- Aligned the documentation to comply with current licensing policies.\r\n\r\n**Lightstreamer Compatibility Notes**\r\n\r\n- Compatible with Adapter Remoting Infrastructure since 1.8\r\n  (corresponding to Server 7.0).\r\n\r\n\r\n1.0.0.post1 (2016-11-22)\r\n++++++++++++++++++++++++\r\n\r\n- Finishing touches on the package documentation visible from the PyPi repository\r\n\r\n\r\n1.0.0 (2016-11-22)\r\n+++++++++++++++++++\r\n\r\n**Improvements**\r\n\r\n- Updated logging messages.\r\n\r\n**Bug Fixes**\r\n\r\n- Fixed notification of End Of Snaphsot in case of not availability of the snapshot.\r\n\r\n- Fixed docstrings in modules *lightstreamer_adapter/server.py* and *lightstreamer_adapter/subscription.py*.\r\n\r\n- Fixed unit tests.\r\n\r\n**Lightstreamer Compatibility Notes**\r\n\r\n- Compatible with Adapter Remoting Infrastructure since 1.7\r\n  (corresponding to Server 6.0).\r\n\r\n\r\n1.0.0b1 (2016-04-15)\r\n+++++++++++++++++++++\r\n\r\n**Bug Fixes**\r\n\r\n- Fixed docstrings.\r\n\r\n- Fixed typo in some Exceptions' message.\r\n\r\n- Fixed unit tests.\r\n\r\n**Lightstreamer Compatibility Notes**\r\n\r\n- Compatible with Adapter Remoting Infrastructure since 1.7\r\n  (corresponding to Server 6.0).\r\n\r\n\r\n1.0.0a2 (2016-04-08)\r\n+++++++++++++++++++++\r\n\r\n**Bug Fixes**\r\n\r\n- Fixed return values in *lightstreamer_adapter.interfaces.metadata.MetadataProvider* class.\r\n\r\n- Fixed default handling of I/O related errors.\r\n\r\n- Fixed docstrings in modules *lightstreamer_adapter/data_protocol.py* and *lightstreamer_adapter/metadata_protocol.py*.\r\n\r\n**Lightstreamer Compatibility Notes**\r\n\r\n- Compatible with Adapter Remoting Infrastructure since 1.7\r\n  (corresponding to Server 6.0).\r\n\r\n\r\n1.0.0a1 (2016-04-08)\r\n+++++++++++++++++++++\r\n\r\n**Initial release**\r\n\r\n**Lightstreamer Compatibility Notes**\r\n\r\n- Compatible with Adapter Remoting Infrastructure since 1.7\r\n  (corresponding to Server 6.0).\r\n\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Lightstreamer/Lightstreamer-lib-python-adapter",
    "keywords": "lightstreamer push realtime real-time",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lightstreamer-adapter",
    "package_url": "https://pypi.org/project/lightstreamer-adapter/",
    "platform": null,
    "project_url": "https://pypi.org/project/lightstreamer-adapter/",
    "project_urls": {
      "Homepage": "https://github.com/Lightstreamer/Lightstreamer-lib-python-adapter"
    },
    "release_url": "https://pypi.org/project/lightstreamer-adapter/1.2.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Lightstreamer SDK for Python Adapters",
    "version": "1.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17379614,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "737a7d8ccf752844b3e66cee08f8a73b193c3e0c1b1946fd89036d087b0e7d27",
          "md5": "5b66f8166be40045aa9e2f8c49734d64",
          "sha256": "de842cf1316b9909659bf480234c8f5287fc12a979493ccc290d4b58c31adfb9"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter-1.0.0.zip",
        "has_sig": false,
        "md5_digest": "5b66f8166be40045aa9e2f8c49734d64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 97128,
        "upload_time": "2016-11-22T09:19:16",
        "upload_time_iso_8601": "2016-11-22T09:19:16.005818Z",
        "url": "https://files.pythonhosted.org/packages/73/7a/7d8ccf752844b3e66cee08f8a73b193c3e0c1b1946fd89036d087b0e7d27/lightstreamer_adapter-1.0.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f75d549fa9b79363db68ac6d215f33b7b1af8551b68d93cd937b76f2b5ca45e",
          "md5": "b768d652620eb597f844061772f68e24",
          "sha256": "a67b0d54dcbf4d6e653a4d2e7cfd3186b100aadfb747c164cbd290e7b566c7a1"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter-1.0.0a1.zip",
        "has_sig": false,
        "md5_digest": "b768d652620eb597f844061772f68e24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 48038,
        "upload_time": "2016-04-08T09:36:44",
        "upload_time_iso_8601": "2016-04-08T09:36:44.060150Z",
        "url": "https://files.pythonhosted.org/packages/0f/75/d549fa9b79363db68ac6d215f33b7b1af8551b68d93cd937b76f2b5ca45e/lightstreamer_adapter-1.0.0a1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03ac79e3da4a5595d9f54bf6999bd5700362b2d8d94d83345ae340afd22e0558",
          "md5": "49183527c8f756f1a2be2a8cb94e1951",
          "sha256": "96dac6218181d66c1d8e5af42ee6ec52bf0f3460da2d247eeaa17ea8bbecd6de"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter-1.0.0a2.zip",
        "has_sig": false,
        "md5_digest": "49183527c8f756f1a2be2a8cb94e1951",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 48434,
        "upload_time": "2016-04-08T17:28:29",
        "upload_time_iso_8601": "2016-04-08T17:28:29.522469Z",
        "url": "https://files.pythonhosted.org/packages/03/ac/79e3da4a5595d9f54bf6999bd5700362b2d8d94d83345ae340afd22e0558/lightstreamer_adapter-1.0.0a2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "722b0db5bd776cfb3920c625d455d97456eb4bd4b35564a0a7a73f6190bb6a06",
          "md5": "53ce12e9a772f5960a837b16699d591d",
          "sha256": "d19e36792aa89e3022fb8ff2498099787b76a4d657bed565ca18fa1b6e09a2ce"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter-1.0.0b1.zip",
        "has_sig": false,
        "md5_digest": "53ce12e9a772f5960a837b16699d591d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49067,
        "upload_time": "2016-04-15T15:48:05",
        "upload_time_iso_8601": "2016-04-15T15:48:05.376430Z",
        "url": "https://files.pythonhosted.org/packages/72/2b/0db5bd776cfb3920c625d455d97456eb4bd4b35564a0a7a73f6190bb6a06/lightstreamer_adapter-1.0.0b1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "094ca9369140fb79cc0e98a2ba162688b79647262a274ee72ebb8e74fa5b3da7",
          "md5": "e23311e7bfdf77c6c3be145c62d0e709",
          "sha256": "bbfb04cd4f68a51588d2d1da2858d82a25c0f674020368a73d23b2b4eb20455a"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter-1.0.0post1.zip",
        "has_sig": false,
        "md5_digest": "e23311e7bfdf77c6c3be145c62d0e709",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 97441,
        "upload_time": "2016-11-22T11:52:40",
        "upload_time_iso_8601": "2016-11-22T11:52:40.966377Z",
        "url": "https://files.pythonhosted.org/packages/09/4c/a9369140fb79cc0e98a2ba162688b79647262a274ee72ebb8e74fa5b3da7/lightstreamer_adapter-1.0.0post1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c5d20dfa4bfc9211becd425ada0a9a8300c2b270cafdb90f929a1d9eda9c068",
          "md5": "83dadf58c95cde5cbc7979f8c1ca9edd",
          "sha256": "768bee5e486394fb0606b579be51597c186c49022ea10f024fae50cf98a50ce2"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter.zip",
        "has_sig": false,
        "md5_digest": "83dadf58c95cde5cbc7979f8c1ca9edd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 127741,
        "upload_time": "2017-12-20T11:43:35",
        "upload_time_iso_8601": "2017-12-20T11:43:35.326483Z",
        "url": "https://files.pythonhosted.org/packages/6c/5d/20dfa4bfc9211becd425ada0a9a8300c2b270cafdb90f929a1d9eda9c068/lightstreamer_adapter.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c413aa9b4c6c0b20250e8fe29844cdae5bda51e7d026a70e54fa05cb780aff0f",
          "md5": "3bd3d06ae6fd4b864371a9539e62089b",
          "sha256": "a1f005efb21a32b36e92a5a3d78669b812c4cb9ba9a267981212b2040b0443cd"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter-1.1.1.zip",
        "has_sig": false,
        "md5_digest": "3bd3d06ae6fd4b864371a9539e62089b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 128002,
        "upload_time": "2017-12-22T10:57:20",
        "upload_time_iso_8601": "2017-12-22T10:57:20.554164Z",
        "url": "https://files.pythonhosted.org/packages/c4/13/aa9b4c6c0b20250e8fe29844cdae5bda51e7d026a70e54fa05cb780aff0f/lightstreamer_adapter-1.1.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "479e32cbdb48e62e5006a4d95d3d8610489550301ea0d27283e0ac563b8687fe",
          "md5": "3b7013f2f5c68b9dba722a3d026a1a3b",
          "sha256": "101c95aba4c59c9169a7ab80c7e1d1c4043cd9c1b5ebb0b9856a373bf2dc474e"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter-1.1.2.zip",
        "has_sig": false,
        "md5_digest": "3b7013f2f5c68b9dba722a3d026a1a3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 128267,
        "upload_time": "2018-02-22T15:59:06",
        "upload_time_iso_8601": "2018-02-22T15:59:06.396101Z",
        "url": "https://files.pythonhosted.org/packages/47/9e/32cbdb48e62e5006a4d95d3d8610489550301ea0d27283e0ac563b8687fe/lightstreamer_adapter-1.1.2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "734cfd9ad4a8d85130c035bb1f00b9299cbee70b4ae6173376e0ed9cb81c3383",
          "md5": "ce1442cbefbcd08620be943e079d089e",
          "sha256": "55772f709ac7fc7a5fdd45883b7547531e5fbe3ad366fe5c8a3c44073383e414"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter-1.1.3.zip",
        "has_sig": false,
        "md5_digest": "ce1442cbefbcd08620be943e079d089e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 128881,
        "upload_time": "2019-03-28T17:03:52",
        "upload_time_iso_8601": "2019-03-28T17:03:52.932651Z",
        "url": "https://files.pythonhosted.org/packages/73/4c/fd9ad4a8d85130c035bb1f00b9299cbee70b4ae6173376e0ed9cb81c3383/lightstreamer_adapter-1.1.3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30b9edbb6dbf2edeeba48b49612857e3b8bf7cde22d78c84a80dffb414f52736",
          "md5": "6c95cefac4f0d04d761fbcdfb4e337c5",
          "sha256": "c957b11ff9e4adfab04dcba4b2c8b0ce370abc28c672283ee8a2f7e60611c1a6"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter-1.1.4.zip",
        "has_sig": false,
        "md5_digest": "6c95cefac4f0d04d761fbcdfb4e337c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 129136,
        "upload_time": "2019-03-29T17:34:46",
        "upload_time_iso_8601": "2019-03-29T17:34:46.943987Z",
        "url": "https://files.pythonhosted.org/packages/30/b9/edbb6dbf2edeeba48b49612857e3b8bf7cde22d78c84a80dffb414f52736/lightstreamer_adapter-1.1.4.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21ec864ae15a1bb95248a1581f935f43026a79983bfc3a037e6ed1d5bc2a377c",
          "md5": "cb101d8f3827e8c27b37ccf7d71df79e",
          "sha256": "af7e7b122fe39590c91679a4206ce8367c774f96ad9ca91202843ce5d8152f4b"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter-1.2.0.zip",
        "has_sig": false,
        "md5_digest": "cb101d8f3827e8c27b37ccf7d71df79e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 134913,
        "upload_time": "2020-01-24T12:02:06",
        "upload_time_iso_8601": "2020-01-24T12:02:06.186618Z",
        "url": "https://files.pythonhosted.org/packages/21/ec/864ae15a1bb95248a1581f935f43026a79983bfc3a037e6ed1d5bc2a377c/lightstreamer_adapter-1.2.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd351a2817b6465c3fc3cef6240412b608872f92e6e7e7a730a367d1cddb39b4",
          "md5": "63160a4ca8dab71c7dc246ecaaa1a6d0",
          "sha256": "e1cdb72ddc03aae52ad41c2b8397eea901e85d23cc41fd11e587306c1a687d87"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter-1.2.1.zip",
        "has_sig": false,
        "md5_digest": "63160a4ca8dab71c7dc246ecaaa1a6d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 136343,
        "upload_time": "2021-05-25T10:55:21",
        "upload_time_iso_8601": "2021-05-25T10:55:21.724172Z",
        "url": "https://files.pythonhosted.org/packages/cd/35/1a2817b6465c3fc3cef6240412b608872f92e6e7e7a730a367d1cddb39b4/lightstreamer_adapter-1.2.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "896ba2f29d4f9a289fcc1176fb25b71efa61a4ee2dfa1f7c8092d096c41d7444",
          "md5": "c5f6567b55afd799b1853ca450073618",
          "sha256": "101ab45c1cf8e0fb28d9b28981ff1576dd0a47f96287416ff9b85a423bf1144e"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter-1.2.2.zip",
        "has_sig": false,
        "md5_digest": "c5f6567b55afd799b1853ca450073618",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 138302,
        "upload_time": "2021-08-30T14:34:10",
        "upload_time_iso_8601": "2021-08-30T14:34:10.114263Z",
        "url": "https://files.pythonhosted.org/packages/89/6b/a2f29d4f9a289fcc1176fb25b71efa61a4ee2dfa1f7c8092d096c41d7444/lightstreamer_adapter-1.2.2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2b2a76031aa5012306e705d1004fb0590c79beba8e64a146eba8c329e28049f",
          "md5": "0b926f546e41ec368e18567843ef6ac5",
          "sha256": "170dc7e3749c5c23e7caaed9d8a3229b71a08cfaecb406ebe8b3033c545f08e4"
        },
        "downloads": -1,
        "filename": "lightstreamer_adapter-1.2.3.zip",
        "has_sig": false,
        "md5_digest": "0b926f546e41ec368e18567843ef6ac5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 139722,
        "upload_time": "2023-03-21T13:35:02",
        "upload_time_iso_8601": "2023-03-21T13:35:02.717036Z",
        "url": "https://files.pythonhosted.org/packages/a2/b2/a76031aa5012306e705d1004fb0590c79beba8e64a146eba8c329e28049f/lightstreamer_adapter-1.2.3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2b2a76031aa5012306e705d1004fb0590c79beba8e64a146eba8c329e28049f",
        "md5": "0b926f546e41ec368e18567843ef6ac5",
        "sha256": "170dc7e3749c5c23e7caaed9d8a3229b71a08cfaecb406ebe8b3033c545f08e4"
      },
      "downloads": -1,
      "filename": "lightstreamer_adapter-1.2.3.zip",
      "has_sig": false,
      "md5_digest": "0b926f546e41ec368e18567843ef6ac5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 139722,
      "upload_time": "2023-03-21T13:35:02",
      "upload_time_iso_8601": "2023-03-21T13:35:02.717036Z",
      "url": "https://files.pythonhosted.org/packages/a2/b2/a76031aa5012306e705d1004fb0590c79beba8e64a146eba8c329e28049f/lightstreamer_adapter-1.2.3.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}