{
  "info": {
    "author": "Dominik Müller",
    "author_email": "dominik.mueller@informatik.uni-augsburg.de",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Healthcare Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Image Recognition",
      "Topic :: Scientific/Engineering :: Medical Science Apps."
    ],
    "description": "# MIScnn: Medical Image Segmentation with Convolutional Neural Networks\n\nThe open-source Python library MIScnn is an intuitive API allowing fast setup of medical image segmentation pipelines with state-of-the-art convolutional neural network and deep learning models in just a few lines of code.\n\nMIScnn provides several core features:\n- 2D/3D medical image segmentation for binary and multi-class problems\n- Data I/O, preprocessing and data augmentation for biomedical images\n- Patch-wise and full image analysis\n- State-of-the-art deep learning model and metric library\n- Intuitive and fast model utilization (training, prediction)\n- Multiple automatic evaluation techniques (e.g. cross-validation)\n- Custom model, data I/O, pre-/postprocessing and metric support\n- Based on Keras with Tensorflow as backend\n\n![MIScnn workflow](https://raw.githubusercontent.com/frankkramer-lab/MIScnn/master/docs/MIScnn.pipeline.png)\n\n## Getting started: 30 seconds to a MIS pipeline\n\nCreate a Data I/O instance with an already provided interface for your specific data\nformat.\n\n```python\nfrom miscnn.data_loading.data_io import Data_IO\nfrom miscnn.data_loading.interfaces.nifti_io import NIFTI_interface\n\n# Create an interface for kidney tumor CT scans in NIfTI format\ninterface = NIFTI_interface(pattern=\"case_0000[0-2]\", channels=1, classes=3)\n# Initialize data path and create the Data I/O instance\ndata_path = \"/home/mudomini/projects/KITS_challenge2019/kits19/data.original/\"\ndata_io = Data_IO(interface, data_path)\n```\n\nCreate a Preprocessor instance to configure how to preprocess the data into batches.\n\n```python\nfrom miscnn.processing.preprocessor import Preprocessor\n\npp = Preprocessor(data_io, batch_size=4, analysis=\"patchwise-crop\", patch_shape=(128,128,128))\n```\n\nCreate a deep learning neural network model with a standard U-Net architecture.\n\n```python\nfrom miscnn.neural_network.model import Neural_Network\nfrom miscnn.neural_network.architecture.unet.standard import Architecture\n\nunet_standard = Architecture()\nmodel = Neural_Network(preprocessor=pp, architecture=unet_standard)\n```\nCongratulations to your ready-to-use Medical Image Segmentation pipeline including data I/O, preprocessing and data augmentation with default setting.\n\nLet's run a model training on our data set. Afterwards, predict the segmentation of a sample using the fitted model.\n\n```python\n# Training the model with all except one sample for 500 epochs\nsample_list = data_io.get_indiceslist()\nmodel.train(sample_list[0:-1], epochs=500)\n\n# Predict the one remaining sample\npred = model.predict([sample_list[-1]], direct_output=True)\n```\n\nNow, let's run a 5-fold Cross-Validation with our model, create automatically evaluation figures and save the results into the directory \"evaluation_results\".\n\n```python\nfrom miscnn.evaluation.cross_validation import cross_validation\n\ncross_validation(sample_list, model, k_fold=5, epochs=100,\n                 evaluation_path=\"evaluation_results\", draw_figures=True)\n```\n\n## Installation\n\nThere are two ways to install MIScnn:\n\n- **Install MIScnn from PyPI (recommended):**\n\nNote: These installation steps assume that you are on a Linux or Mac environment. If you are on Windows or in a virtual environment without root, you will need to remove sudo to run the commands below.\n\n```sh\nsudo pip install miscnn\n```\n\n- **Alternatively: install MIScnn from the GitHub source:**\n\nFirst, clone MIScnn using git:\n\n```sh\ngit clone https://github.com/frankkramer-lab/MIScnn.git\n```\n\nThen, cd to the MIScnn folder and run the install command:\n\n```sh\ncd MIScnn\nsudo python setup.py install\n```\n\n## Author\n\nDominik Müller\\\nEmail: dominik.mueller@informatik.uni-augsburg.de\\\nIT-Infrastructure for Translational Medical Research\\\nUniversity Augsburg\\\nBavaria, Germany\n\n## How to cite / More information\n\nDominik Müller and Frank Kramer. (2019)\\\nMIScnn: A Framework for Medical Image Segmentation with Convolutional Neural Networks and Deep Learning.\n\n## License\n\nThis project is licensed under the GNU GENERAL PUBLIC LICENSE Version 3.\\\nSee the LICENSE.md file for license rights and limitations.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/frankkramer-lab/MIScnn",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "miscnn-TF-2.0",
    "package_url": "https://pypi.org/project/miscnn-TF-2.0/",
    "platform": "",
    "project_url": "https://pypi.org/project/miscnn-TF-2.0/",
    "project_urls": {
      "Homepage": "https://github.com/frankkramer-lab/MIScnn"
    },
    "release_url": "https://pypi.org/project/miscnn-TF-2.0/0.32/",
    "requires_dist": [
      "tensorflow (==2.0.1)",
      "numpy (>=1.18.2)",
      "nibabel (>=2.4.0)",
      "matplotlib (>=3.0.3)",
      "batchgenerators (>=0.19.3)"
    ],
    "requires_python": "",
    "summary": "Framework for Medical Image Segmentation with Convolutional Neural Networks and Deep Learning",
    "version": "0.32",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7137350,
  "releases": {
    "0.31": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85e91903becfcedad807b7bac9acc3b3b2857d3a8c47afce54cec4f47210975c",
          "md5": "a3f76318ffcf76a46533846d56d608da",
          "sha256": "57893ebd84fef32bd846966c835156453f7b41d978ba85f0076db498a15f31ff"
        },
        "downloads": -1,
        "filename": "miscnn_TF_2.0-0.31-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3f76318ffcf76a46533846d56d608da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 94167,
        "upload_time": "2020-04-29T11:17:53",
        "upload_time_iso_8601": "2020-04-29T11:17:53.913554Z",
        "url": "https://files.pythonhosted.org/packages/85/e9/1903becfcedad807b7bac9acc3b3b2857d3a8c47afce54cec4f47210975c/miscnn_TF_2.0-0.31-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b3ffd409ca62c5789bf8279f28dc159df7915cb8237003dcf60a91c87cde686",
          "md5": "7b4bd04688917525ed7d0cbc6be7ac1d",
          "sha256": "070d6fec72de28efb8687d535abd1fa0accb6072a535566daf8ecdf661f03fa1"
        },
        "downloads": -1,
        "filename": "miscnn_TF-2.0-0.31.tar.gz",
        "has_sig": false,
        "md5_digest": "7b4bd04688917525ed7d0cbc6be7ac1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40735,
        "upload_time": "2020-04-29T11:17:56",
        "upload_time_iso_8601": "2020-04-29T11:17:56.400154Z",
        "url": "https://files.pythonhosted.org/packages/7b/3f/fd409ca62c5789bf8279f28dc159df7915cb8237003dcf60a91c87cde686/miscnn_TF-2.0-0.31.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.32": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcbe00efe997120ea808c7fda78a78f28b57cb0575a86c18150521e3a0a3e18c",
          "md5": "24cb719161a97cd44beb91d1e275722f",
          "sha256": "fe3072996286ab83239995a08b6c8af8400932d27f41cdeb596d1ab20ec026ab"
        },
        "downloads": -1,
        "filename": "miscnn_TF_2.0-0.32-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24cb719161a97cd44beb91d1e275722f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 94477,
        "upload_time": "2020-04-30T13:24:40",
        "upload_time_iso_8601": "2020-04-30T13:24:40.141254Z",
        "url": "https://files.pythonhosted.org/packages/fc/be/00efe997120ea808c7fda78a78f28b57cb0575a86c18150521e3a0a3e18c/miscnn_TF_2.0-0.32-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db87600983a361a92aac3c22ddf027c05e4b07b8ad4da6c2cbe83938a750a829",
          "md5": "ec4cb1f0f2e3fce1a1564131a4b48b0c",
          "sha256": "cfe9bb5a621e69a32c3b353d4e653ffe4eac07171f4bd8c61145518f818472c2"
        },
        "downloads": -1,
        "filename": "miscnn_TF-2.0-0.32.tar.gz",
        "has_sig": false,
        "md5_digest": "ec4cb1f0f2e3fce1a1564131a4b48b0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41038,
        "upload_time": "2020-04-30T13:24:41",
        "upload_time_iso_8601": "2020-04-30T13:24:41.822392Z",
        "url": "https://files.pythonhosted.org/packages/db/87/600983a361a92aac3c22ddf027c05e4b07b8ad4da6c2cbe83938a750a829/miscnn_TF-2.0-0.32.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcbe00efe997120ea808c7fda78a78f28b57cb0575a86c18150521e3a0a3e18c",
        "md5": "24cb719161a97cd44beb91d1e275722f",
        "sha256": "fe3072996286ab83239995a08b6c8af8400932d27f41cdeb596d1ab20ec026ab"
      },
      "downloads": -1,
      "filename": "miscnn_TF_2.0-0.32-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "24cb719161a97cd44beb91d1e275722f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 94477,
      "upload_time": "2020-04-30T13:24:40",
      "upload_time_iso_8601": "2020-04-30T13:24:40.141254Z",
      "url": "https://files.pythonhosted.org/packages/fc/be/00efe997120ea808c7fda78a78f28b57cb0575a86c18150521e3a0a3e18c/miscnn_TF_2.0-0.32-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db87600983a361a92aac3c22ddf027c05e4b07b8ad4da6c2cbe83938a750a829",
        "md5": "ec4cb1f0f2e3fce1a1564131a4b48b0c",
        "sha256": "cfe9bb5a621e69a32c3b353d4e653ffe4eac07171f4bd8c61145518f818472c2"
      },
      "downloads": -1,
      "filename": "miscnn_TF-2.0-0.32.tar.gz",
      "has_sig": false,
      "md5_digest": "ec4cb1f0f2e3fce1a1564131a4b48b0c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 41038,
      "upload_time": "2020-04-30T13:24:41",
      "upload_time_iso_8601": "2020-04-30T13:24:41.822392Z",
      "url": "https://files.pythonhosted.org/packages/db/87/600983a361a92aac3c22ddf027c05e4b07b8ad4da6c2cbe83938a750a829/miscnn_TF-2.0-0.32.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}