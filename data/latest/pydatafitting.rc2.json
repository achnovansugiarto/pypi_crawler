{
  "info": {
    "author": "Alexander Southan",
    "author_email": "alexander.southan@web.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n[![build workflow](https://github.com/AlexanderSouthan/pyDataFitting/actions/workflows/main.yml/badge.svg)](https://github.com/AlexanderSouthan/pyDataFitting/actions/workflows/main.yml)\n[![codecov](https://codecov.io/gh/AlexanderSouthan/pyDataFitting/branch/master/graph/badge.svg?token=NYWF752QP0)](https://codecov.io/gh/AlexanderSouthan/pyDataFitting)\n\n# pyDataFitting\nLinear and nonlinear fit functions that can be used *e.g.* for curve fitting.\nIs not meant to duplicate methods already implemented *e.g.* in NumPy or SciPy,\nbut to provide additional, specialized regression methods or higher computation\nspeed. You will need certain functions of my little_helpers repository and\nquite a few other, external packages like Numpy, Pandas, matplotlib,\nscikit-learn, statsmodels, Scipy.\n\nInstall with:\n```\npip install pyDataFitting\n```\n\n## Linear regression (in linear_regression.py)\n* dataset_regression: Does a classical linear least squares regression. Treats\nthe input data as a linear combination of the different components from\nreference data. Can be used for example to fit spectra of mixtures with spectra\nof pure components. Produces the same result like, but much faster than using\nsklearn.linear_model.LinearRegression().fit(...).\n* lin_reg_all_sections: Does linear regressions on a dataset starting with the\nfirst two datapoints and expands the segment by one for each iteration. The\nregression metrics are useful to determine if a dataset behaves linearly at its\nbeginning or not, and when a transition to nonlinear behavior occurs.\n\n## Polynomial regression (in polynomial_regression.py)\n* polynomial_fit: Allows to perform polynomial fits by minimizing the sum of\nthe squared residuals while also taking equality constaints into account via\nLagrange multiplicators. This can be used to force the regression function\nthrough certain points or to force it to have certain slopes at a given points.\nAlso does unconstrained polynomial fits, but is slower than the corresponding\nNumpy functions.\n* piecewise_polynomial_fit: Allows to do a picewise polynomial fit on a dataset,\n*i.e.* the data is divided into segments that are then each fitted with an own\npolynomial function. The segments can be fitted with polynomials of different\norders. It is possible to use equality constraints on the segment borders, so\nthat the segments *e.g.* are forced to have the same y values at the borders or\nthe same slopes.\n* segment_regression: Does a piecewise polynomial fit with the segment borders,\ny values at the segment borders, or the slopes at the segment borders as\nadditional fit parameters. The additional fit parameters are estimated with an\nevolutionary fitting algorithm which calls picewise_polynomial_fit several\ntimes in each iteration, so the whole procedure is rather slow (albeit still\nvery usable).\n\n## General nonlinear regression (in nonlinear_regression.py)\n* nonlinear_regression: Does nonlinear regressions by minimizing the sum of the\nsquared residuals. Basically utilizes differential_evolution from\nscipy.optimize to estimatze the parameters of complex regression functions. The\nfunctions must be included in calc_functions, but can be added easily there. \nThis is not a particularly fast method, so use methods from other packages for\nsimple problems.\n* nonlinear_regression_3D: Does the same like nonlinear_regression, but on 3D\ndatasets. Also here, the regression function must be included in\ncalc_function_3D.\n\n## Principal component regression and partial least squares regression (in multivariate_regression.py)\n* principal_component_regression: A class for a principal component regression\n(PCR). Does a principal component analysis of the dataset and a multilinear\nregression on the resulting scores with one or several responses in order to\ngenerate a model to predict the responses from future data. The PCR parts work\nquite well, the methods included for generating various plots still need\nimproving.\n* pls_regression: A class to help with using the partial least squares\nregression class from scikit-learn. It is usable, but could do with some\nredesigning.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AlexanderSouthan/pyDataFitting",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyDataFitting",
    "package_url": "https://pypi.org/project/pyDataFitting/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyDataFitting/",
    "project_urls": {
      "Bug Tracker": "https://github.com/AlexanderSouthan/pyDataFitting/issues",
      "Homepage": "https://github.com/AlexanderSouthan/pyDataFitting"
    },
    "release_url": "https://pypi.org/project/pyDataFitting/0.0.2/",
    "requires_dist": [
      "statsmodels",
      "numpy",
      "pandas",
      "scipy",
      "matplotlib",
      "scikit-learn",
      "little-helpers"
    ],
    "requires_python": ">=3.6",
    "summary": "package for specialized regression",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12180173,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31e234c614a84fac07a328a85c7868b1e9ec93e3a0fbc462077496050d15d026",
          "md5": "e0067f99194a32e39094360cae71bd18",
          "sha256": "201e848673d6369b84d5bde07070d5b09f050f327f81a2defc78cf59043408fd"
        },
        "downloads": -1,
        "filename": "pyDataFitting-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0067f99194a32e39094360cae71bd18",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24350,
        "upload_time": "2021-10-18T21:16:07",
        "upload_time_iso_8601": "2021-10-18T21:16:07.619875Z",
        "url": "https://files.pythonhosted.org/packages/31/e2/34c614a84fac07a328a85c7868b1e9ec93e3a0fbc462077496050d15d026/pyDataFitting-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a5dee2db391e07cb30392cbc652f4a0efe8df0cf68788d3673b3ef92e0cff35",
          "md5": "71897d4a6a53a46292fbf5f6bfdf3c8a",
          "sha256": "16a5b9ac5baeadfd365c946af09a6fbdac7375d7bfd841fcd26c84e02eedf152"
        },
        "downloads": -1,
        "filename": "pyDataFitting-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "71897d4a6a53a46292fbf5f6bfdf3c8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24173,
        "upload_time": "2021-10-18T21:16:10",
        "upload_time_iso_8601": "2021-10-18T21:16:10.440885Z",
        "url": "https://files.pythonhosted.org/packages/8a/5d/ee2db391e07cb30392cbc652f4a0efe8df0cf68788d3673b3ef92e0cff35/pyDataFitting-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "181858773f0c20bf10f6891acf7314eb65701f69729b8ea9c2488f33f8c9d4f6",
          "md5": "0a646f831e747f18331a927ffafe68bd",
          "sha256": "225062f01dcb189d46c60df43d3618c9c1f287870640780ed72b2848ebe72185"
        },
        "downloads": -1,
        "filename": "pyDataFitting-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a646f831e747f18331a927ffafe68bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24446,
        "upload_time": "2021-12-01T18:38:59",
        "upload_time_iso_8601": "2021-12-01T18:38:59.082393Z",
        "url": "https://files.pythonhosted.org/packages/18/18/58773f0c20bf10f6891acf7314eb65701f69729b8ea9c2488f33f8c9d4f6/pyDataFitting-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be7c4e058abadaf5e0d82eea623fecff870dcb1451f304fa46d4f298030490c9",
          "md5": "e0daedfaecefa02649d80969ef67e48b",
          "sha256": "32fb035531240c679be846f2cfe0ac04ef7b9ac61044b0be1d7e126b5dfde9d7"
        },
        "downloads": -1,
        "filename": "pyDataFitting-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e0daedfaecefa02649d80969ef67e48b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24275,
        "upload_time": "2021-12-01T18:39:01",
        "upload_time_iso_8601": "2021-12-01T18:39:01.796216Z",
        "url": "https://files.pythonhosted.org/packages/be/7c/4e058abadaf5e0d82eea623fecff870dcb1451f304fa46d4f298030490c9/pyDataFitting-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "181858773f0c20bf10f6891acf7314eb65701f69729b8ea9c2488f33f8c9d4f6",
        "md5": "0a646f831e747f18331a927ffafe68bd",
        "sha256": "225062f01dcb189d46c60df43d3618c9c1f287870640780ed72b2848ebe72185"
      },
      "downloads": -1,
      "filename": "pyDataFitting-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a646f831e747f18331a927ffafe68bd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 24446,
      "upload_time": "2021-12-01T18:38:59",
      "upload_time_iso_8601": "2021-12-01T18:38:59.082393Z",
      "url": "https://files.pythonhosted.org/packages/18/18/58773f0c20bf10f6891acf7314eb65701f69729b8ea9c2488f33f8c9d4f6/pyDataFitting-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be7c4e058abadaf5e0d82eea623fecff870dcb1451f304fa46d4f298030490c9",
        "md5": "e0daedfaecefa02649d80969ef67e48b",
        "sha256": "32fb035531240c679be846f2cfe0ac04ef7b9ac61044b0be1d7e126b5dfde9d7"
      },
      "downloads": -1,
      "filename": "pyDataFitting-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e0daedfaecefa02649d80969ef67e48b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 24275,
      "upload_time": "2021-12-01T18:39:01",
      "upload_time_iso_8601": "2021-12-01T18:39:01.796216Z",
      "url": "https://files.pythonhosted.org/packages/be/7c/4e058abadaf5e0d82eea623fecff870dcb1451f304fa46d4f298030490c9/pyDataFitting-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}