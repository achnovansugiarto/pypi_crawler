{
  "info": {
    "author": "Ronak H Shah",
    "author_email": "rons.shah@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "iCallSV: Structural Aberration Detection from NGS datasets\n================================================================\n\n:Author: Ronak H Shah\n:Contact: rons.shah@gmail.com\n:Source code: http://github.com/rhshah/iCallSV\n:Wiki: http://icallsv.readthedocs.io/en/latest/\n:License: `Apache License 2.0 <http://www.apache.org/licenses/LICENSE-2.0>`_\n\n.. image:: https://landscape.io/github/rhshah/iCallSV/master/landscape.svg?style=flat\n   :target: https://landscape.io/github/rhshah/iCallSV/master\n   :alt: Code Health\n\n\n.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.184864.svg\n\t:target: https://doi.org/10.5281/zenodo.184864\n\n\n.. image:: https://codecov.io/gh/rhshah/iCallSV/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/rhshah/iCallSV\n\n\niCallSV is a Python library and command-line software toolkit to call structural aberrations from Next Generation DNA sequencing data. Behind the scenes it uses Delly2 to do structural variant calling. It is designed for use with hybrid capture, including both whole-exome and custom target panels, and\nshort-read sequencing platforms such as Illumina.\n\nThe filtering process can be observed here:  `Workflow <https://www.draw.io/?lightbox=1&highlight=0000ff&edit=_blank&layers=1&nav=1&title=iCallSV_Filters.html#Uhttps%3A%2F%2Fdrive.google.com%2Fuc%3Fid%3D0Bwn1ij1qNCi_cE4xOW1NS0JJaTg%26export%3Ddownload>`_\n\nCitation\n========\n\nWe are in the process of publishing a manuscript describing iCallSV as part of the Structural Variant Detection framework.\nIf you use this software in a publication, for now, please cite our website `iCallSV <http://github.com/rhshah/iCallSV>`_.\n\nNote\n====\n\nFor some reason docstrings is not shown by `Read The Docs <https:read-the-docs.readthedocs.io>`_\n\nSo please use these url from `Github <https:github.com>`_ with `Html Preview <https://htmlpreview.github.io/>`_ for each module information:\n\n`Per Module Info <https://htmlpreview.github.io/?https://raw.githubusercontent.com/rhshah/iCallSV/master/docs/_build/html/iCallSV.html>`_ \n\n\nRequired Packages\n=================\nWe require that you install:\n\n:pandas: `v0.16.2 <http://pandas.pydata.org/>`_\n:biopython: `v1.65 <http://biopython.org/wiki/Main_Page>`_\n:pysam: `v0.8.4 <https://pypi.python.org/pypi/pysam>`_\n:pyvcf: `0.6.7 <https://pypi.python.org/pypi/PyVCF>`_\n:Delly: `v0.7.5 <https://github.com/tobiasrausch/delly>`_\n:targetSeqView: `master <https://github.com/Eitan177/targetSeqView>`_\n:iAnnotateSV: `v1.0.6 <https://github.com/rhshah/iAnnotateSV/tree/1.0.5>`_\n:coloredlogs: `v5.2 <https://pypi.python.org/pypi/coloredlogs>`_\n\nRequired Data Files\n===================\n\nThis files are given in the ``data`` folder inside iCallSV.\n\n\n:BlackListFile: (blacklist.txt) Tab-delimited file wihout header having black listed regions in order:\n\n\t\t\t\t**chromosome 1, breakpoint 1, chromosome 2, breakpoint 2**\n\n\n\t:Example:\n\n\t\t7\t140498077\t5\t175998094\n\n\n:BlackListGenes: (blacklistgenes.txt) Gene listed one per line wihout header that are to be removed \n\n\t:Example:\n\n\t\tLINC00486\n\n\t\tCNOT4\n\n:HotspotFile: (hotspotgenes.txt) Tab-delimited file wihout header having hotspot regions in order:\n\n\t\t\t  **chromosome, start, end, name**\n\n\t:Example:\n\n\t\t2\t29416089\t30143525\tALK\n\n:GenesToKeep: (genesToInclude.txt) Gene listed one per line wihout header that are to be kept\n\n\t:Example:\n\n\t\tALK\n\n\t\tBRAF\n\n\nConfiguration File Format\n=========================\n\n.. code-block:: ini\n\n\t#~~~Template configuration file to run iCallSV~~~#\n\t#### Path to python executable ###\n\t[Python]\n\tPYTHON:\n\t#### Path to R executable and R Lib ###\n\t[R]\n\tRHOME: \n\tRLIB: \n\t#### Path to delly, bcftools executables and Version of delly (supports only 0.7.3)###\n\t[SVcaller]\n\tDELLY:\n\tDellyVersion:\n\tBCFTOOLS:\n\t#### Path to hg19 Referece Fasta file ###\n\t[ReferenceFasta]\n\tREFFASTA:\n\t#### Path to file containing regions to exclude please follow Delly documentation for this ###\n\t[ExcludeRegion]\n\tEXREGIONS:\n\t#### Path to file containing regions to where lenient threshold will be used; and file containing genes to keep ###\n\t[HotSpotRegions]\n\tHotspotFile:\n\tGenesToKeep:\n\t#### Path to file containing regions/genes to filter ###\n\t[BlackListRegions]\n\tBlackListFile:\n\tBlackListGenes:\n\t#### Path to samtools executable ###\n\t[SAMTOOLS]\n\tSAMTOOLS:\n\t#### Path to iAnnotateSV.py and all its required files, please follow iAnnotateSV documentation ###\n\t[iAnnotateSV]\n\tANNOSV:\n\tGENOMEBUILD:\n\tDISTANCE:\n\tCANONICALTRANSCRIPTFILE:\n\tUNIPROTFILE:\n\tCosmicCensus:\n\tCosmicFusionCounts:\n\tRepeatRegionAnnotation:\n\tDGvAnnotations:\n\t#### TargetSeqView Parameters ###\n\t[TargetSeqView]\n\tCalculateConfidenceScore:\n\tGENOMEBUILD:\n\tReadLength:\n\t#### Parameters to run Delly ###\n\t[ParametersToRunDelly]\n\tMAPQ: 20\n\tNumberOfProcessors: 4\n\t[ParametersToFilterDellyResults]\n\t####Case Allele Fraction Hotspot####\n\tCaseAltFreqHotspot: 0.05\n\t####Total Case Coverage Hotspot#####\n\tCaseCoverageHotspot = 5\n\t####Control Allele Fraction Hotspot####\n\tControlAltFreqHotspot = 0\n\t####Case Allele Fraction####\n\tCaseAltFreq: 0.10\n\t####Total Case Coverage#####\n\tCaseCoverage = 10\n\t####Control Allele Fraction####\n\tControlAltFreq = 0\n\t###Overall Supporting Read-pairs ###\n\tOverallSupportingReads: 5\n\t###Overall Supporting Read-pairs Hotspot ###\n\tOverallSupportingReadsHotspot: 3\n\t###Overall Supporting splitreads ###\n\tOverallSupportingSplitReads: 0\n\t###Overall Supporting splitreads Hotspot ###\n\tOverallSupportingSplitReadsHotspot: 0\n\t###Case Supporting Read-pairs ###\n\tCaseSupportingReads: 2\n\t###Case Supporting splitreads ###\n\tCaseSupportingSplitReads: 0\n\t###Case Supporting Read-pairs Hotspot ###\n\tCaseSupportingReadsHotspot: 1\n\t###Case Supporting splitreads Hotspot ###\n\tCaseSupportingSplitReadsHotspot: 0\n\t###Control Supporting Read-pairs ###\n\tControlSupportingReads: 3\n\t###Control Supporting Read-pairs Hotspot ###\n\tControlSupportingReadsHotspot: 3\n\t###Control Supporting splitreads ###\n\tControlSupportingSplitReads: 3\n\t###Control Supporting splitreads Hotspot ###\n\tControlSupportingSplitReadsHotspot: 3\n\t###Length of Structural Variant###\n\tLengthOfSV: 500\n\t###Overall Mapping Quality Threshold###\n\tOverallMapq: 20\n\t###Overall Mapping Quality Threshold Hotspot###\n\tOverallMapqHotspot: 5\n\n\n\nQuick Usage\n===========\n\n.. code-block:: sh\n\n\tpython iCallSV.py -sc /path/to/template.ini -abam /path/to/casebamFile -bbam /path/to/controlbamFile -aId caseID -bId controlId -o /path/to/output/directory -op prefix_for_the_output_files\n\n\n.. code-block:: sh\n\n\t> python iCallSV.py -h\n\n\tusage: iCallSV.py [-h] [-v] [-V] -sc config.ini -abam caseBAMFile.bam -bbam\n\t                  controlBAMFile.bam -aId caseID -bId controlID -o\n\t                  /somepath/output -op TumorID\n\n\tiCallSV.iCallSV -- wrapper to run iCallSV package\n\n\t  Created by Ronak H Shah on 2015-03-30.\n\t  Copyright 2015-2016 Ronak H Shah. All rights reserved.\n\n\t  Licensed under the Apache License 2.0\n\t  http://www.apache.org/licenses/LICENSE-2.0\n\n\t  Distributed on an \"AS IS\" basis without warranties\n\t  or conditions of any kind, either express or implied.\n\n\tUSAGE\n\n\toptional arguments:\n\t  -h, --help            show this help message and exit\n\t  -v, --verbose         set verbosity level [default: True]\n\t  -V, --version         show program's version number and exit\n\t  -sc config.ini, --svConfig config.ini\n\t                        Full path to the structural variant configuration\n\t  -abam caseBAMFile.bam, --caseBam caseBAMFile.bam\n\t                        Full path to the case bam file\n\t  -bbam controlBAMFile.bam, --controlBam controlBAMFile.bam\n\t                        Full path to the control bam file\n\t  -aId caseID, --caseId caseID\n\t                        Id of the case to be analyzed, this will be the sub-\n\t                        folder\n\t  -bId controlID, --controlId controlID\n\t                        Id of the control to be used, this will be used for\n\t                        filtering variants\n\t  -o /somepath/output, --outDir /somepath/output\n\t                        Full Path to the output dir.\n\t  -op TumorID, --outPrefix TumorID\n\t                        Id of the Tumor bam file which will be used as the\n\t                        prefix for output files\n\nRunning on SGE or LSF\n=====================\n\n.. sidebar:: Note:\n\n\tFor both SGE and LSF you need to provide total number of cores based on the number of threads you have assinged to delly installation using **OMP_NUM_THREADS**. \n\n.. sidebar:: Note:\n\n\tFor example: if you set **OMP_NUM_THREADS** as `export OMP_NUM_THREADS=3` then you need to set total number of cores to be 13 (12 + 1 extra as buffer) so for each of the Delly program it utilizes 3 cores. Here I use pythons multiprocessing module to launch delly, so all four programs would be launch as seprate process utilizing number of threads given to them but setting the **OMP_NUM_THREADS**\n\nSGE\n---\n\n.. code-block:: sh\n\n\tqsub -q some.q -N iCallSV_JobName -o iCallSV.stdout -e iCallSV.stderr -V -l h_vmem=6G,virtual_free=6G -pe smp 13 -wd /some/path/to/working/dir -sync y  -b y python iCallSV.py -sc template.ini -bbam control.bam -abam case.bam -aId caseID -bId controlID -op outputPrefix -o  /some/path/to/output/dir -v \n\nLSF\n---\n\n.. code-block:: sh\n\n\tbsub -q some.q -J iCallSV_JobName -o iCallSV.stdout -e iCallSV.stderr -We 24:00 -R \"rusage[mem=20]\" -M 30 -n 13 -cwd /some/path/to/working/dir \"python iCallSV.py -sc template.ini -bbam control.bam -abam case.bam -aId caseID -bId controlID -op outputPrefix -o  /some/path/to/output/dir -v\"\n\n\nUtilities\n=========\n\nRunning iCallSV on MSK-IMPACT Pools\n-----------------------------------\n\n**This is only for MSK-IMPACT internal samples**\n\n.. code-block:: sh\n\n\t> python iCallSV_dmp_wrapper.py -h\n\n\tusage: iCallSV_dmp_wrapper.py [options]\n\n\tRun iCallSV on selected pools using MSK data\n\n\toptional arguments:\n\t  -h, --help            show this help message and exit\n\t  -fl folders.fof, --folderList folders.fof\n\t                        Full path folders file of files.\n\t  -qc /some/path/qcLocation, --qcLocation /some/path/qcLocation\n\t                        Full path qc files.\n\t  -b /some/path/bamlocation, --bamLocation /some/path/bamlocation\n\t                        Full path bam files.\n\t  -P /somepath/python, --python /somepath/python\n\t                        Full path Pyhton executables.\n\t  -icsv /somepath/iCallSV.py, --iCallSV /somepath/iCallSV.py\n\t                        Full path iCallSV.py executables.\n\t  -conf /somepath/template.ini, --iCallSVconf /somepath/template.ini\n\t                        Full path configuration file to run iCallSV\n\t  -q all.q or clin.q, --queue all.q or clin.q\n\t                        Name of the SGE queue\n\t  -qsub /somepath/qsub, --qsubPath /somepath/qsub\n\t                        Full Path to the qsub executables of SGE.\n\t  -t 5, --threads 5     Number of Threads to be used to run iCallSV\n\t  -v, --verbose         make lots of noise [default]\n\t  -o /somepath/output, --outDir /somepath/output\n\t                        Full Path to the output dir.\n\t  -of outputfile.txt, --outDir outputfile.txt\n\t\t\t\t\t  \t    Name of the final output file.\n\n\nTaking the iCallSV and chechking for processed transcript/cDNA in samples\n-------------------------------------------------------------------------\n\n.. code-block:: sh\n\n\t> python check_cDNA_contamination.py -h\n\tusage: check_cDNA_contamination.py [options]\n\n\tCalculate cDNA contamination per sample based of the Structural Variants\n\tPipeline result\n\n\toptional arguments:\n\t  -h, --help            show this help message and exit\n\t  -v, --verbose         make lots of noise [default]\n\t  -s SVfile.txt, --svFile SVfile.txt\n\t                        Location of the structural variant file to be used\n\t  -o cDNA_contamination, --outputFileName cDNA_contamination\n\t                        Full path name for the output file\n\n\n\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/rhshah/iCallSV/tarball/0.0.7",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rhshah/iCallSV",
    "keywords": "",
    "license": "Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "iCallSV",
    "package_url": "https://pypi.org/project/iCallSV/",
    "platform": "any",
    "project_url": "https://pypi.org/project/iCallSV/",
    "project_urls": {
      "Download": "https://github.com/rhshah/iCallSV/tarball/0.0.7",
      "Homepage": "https://github.com/rhshah/iCallSV"
    },
    "release_url": "https://pypi.org/project/iCallSV/0.0.7/",
    "requires_dist": [
      "pyvcf (==0.6.7)",
      "biopython (==1.65)",
      "coloredlogs (==5.2)",
      "pandas (==0.16.2)",
      "pysam (==0.8.4)"
    ],
    "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4",
    "summary": "The module helps to call structural variants using NGS data set on human.",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3107040,
  "releases": {
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3919c11fe5d0057ee8d739d60234e03fe069cbea3e894cd3cac7c523d561c79e",
          "md5": "d39e57828a58dc83916b4d2829cec569",
          "sha256": "bf56ad5842252d37bfac4c5c44551e4e76f47c6c57ea8878355f5e60a15eec6b"
        },
        "downloads": -1,
        "filename": "iCallSV-0.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d39e57828a58dc83916b4d2829cec569",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4",
        "size": 59346,
        "upload_time": "2017-08-18T19:12:52",
        "upload_time_iso_8601": "2017-08-18T19:12:52.139021Z",
        "url": "https://files.pythonhosted.org/packages/39/19/c11fe5d0057ee8d739d60234e03fe069cbea3e894cd3cac7c523d561c79e/iCallSV-0.0.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4681bc357e5cc1fdfb9b74079df05a60ccc4bcee24e7f440abf4b47c49a4007",
          "md5": "1873020a39a8311213649a601e5e33f9",
          "sha256": "9b2c6cde59a88883d69261c61d8c06a142918104e5d2dad02bb60826aae49540"
        },
        "downloads": -1,
        "filename": "iCallSV-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "1873020a39a8311213649a601e5e33f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4",
        "size": 489821,
        "upload_time": "2017-08-18T19:12:54",
        "upload_time_iso_8601": "2017-08-18T19:12:54.176009Z",
        "url": "https://files.pythonhosted.org/packages/a4/68/1bc357e5cc1fdfb9b74079df05a60ccc4bcee24e7f440abf4b47c49a4007/iCallSV-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3919c11fe5d0057ee8d739d60234e03fe069cbea3e894cd3cac7c523d561c79e",
        "md5": "d39e57828a58dc83916b4d2829cec569",
        "sha256": "bf56ad5842252d37bfac4c5c44551e4e76f47c6c57ea8878355f5e60a15eec6b"
      },
      "downloads": -1,
      "filename": "iCallSV-0.0.7-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d39e57828a58dc83916b4d2829cec569",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4",
      "size": 59346,
      "upload_time": "2017-08-18T19:12:52",
      "upload_time_iso_8601": "2017-08-18T19:12:52.139021Z",
      "url": "https://files.pythonhosted.org/packages/39/19/c11fe5d0057ee8d739d60234e03fe069cbea3e894cd3cac7c523d561c79e/iCallSV-0.0.7-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4681bc357e5cc1fdfb9b74079df05a60ccc4bcee24e7f440abf4b47c49a4007",
        "md5": "1873020a39a8311213649a601e5e33f9",
        "sha256": "9b2c6cde59a88883d69261c61d8c06a142918104e5d2dad02bb60826aae49540"
      },
      "downloads": -1,
      "filename": "iCallSV-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "1873020a39a8311213649a601e5e33f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4",
      "size": 489821,
      "upload_time": "2017-08-18T19:12:54",
      "upload_time_iso_8601": "2017-08-18T19:12:54.176009Z",
      "url": "https://files.pythonhosted.org/packages/a4/68/1bc357e5cc1fdfb9b74079df05a60ccc4bcee24e7f440abf4b47c49a4007/iCallSV-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}