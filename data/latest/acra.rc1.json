{
  "info": {
    "author": "An amazing developer",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Sphinx",
      "Natural Language :: English",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3"
    ],
    "description": "Python3_pep8_updates\n\nBranch of Python 3 library with library modules passed through pylint and mostly complying with pep8 coding styleguide\n\nNot for general use. Will be merged with the main Python 3 branch when debugging is complete.\nWill need wrappers to ensure backwards compatability with existing tests which use the current code/library before it can be merged back with the main Python 3 branch\n\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nLibrary tools for use in DV, Production test and general scripting\n\nRegularly updated, with bug fixes and new features.\nThe best way to find out what is contained in this liibrary is to \n\n1) install it (as administator)\n2) create an acra_help.py file with the following contents:\n\nimport acra;help(acra)\n\n\nRun acra_help.py and redirect the output to a file. The file will list all the \ncomponents of the ACRA library and all of the functions/classes/methods \navailable\n\nThis of course means that if you have a function/module/class that you \nthink should be added to the library the code must properly documented,\ni.e. file headers, class/method/function headers, and they must all have \nmeaningful contents.\n\nWhilst compact code is appreciated, it should be easily understood\nand easy to understand.\n\n\n----------------------------------------------------------------------\nREVISION HISTORY & RELEASE NOTES FOR *ACRA UTILS* PYTHON DISTRIBUTION.\n----------------------------------------------------------------------\n\nACRA_Utils-3.73.N-py3-none-any.whl\n*******************\n\t\t\tPython 3 only compatible library. All instruments can now be controlled using Python 3\n\t\t\tportchecker utility added.\n\t\t\tFunction/method names harmonised across the instruments.\n\t\t\tNot backwards compatible with 1.73\n\n\n# Here endeth Python 2 Support!\n\n\n------------------------------------------\nPython 2 versions of the libraries.\n------------------------------------------\n\nACRA_Utils-1.73-py2-none-any.whl\n*******************\n\t\t\t# Here endeth Python 2 Support!\n\t\t\t\nABI.py \t\t\nABIPackets.py\t\tThe listed files are being used in multiple tests and should have been.\nABI_WRAPPER.py          added as library files rather than copied from project_to_project.\nACRA_NET_PROTS.py       They have now been added to the ACRA utils library\nIENA.PY\nIENA_DATA_TIMER.PY\nCHS_CLASS.PY\nFileutils.PY\n\nacra-1.72.win32.exe\n*******************\nExcel.py \t\tAncient Excel library added. Unmodified.\nPST3202.py\t\tDriver for Instek 3202 Power supply added to utils.\n\nacra-1.71.win32.exe\n*******************\nPT_Framework.py \tCheckExpected added from the obsolete ProcessUtils\n\nacra-1.70.win32.exe\n*******************\nT316.py \t\tRedundant read removed from init.\n\nacra-1.69.win32.exe\n*******************\nMETERS.py \t\tRestored to installation. It was removed over a year ago...\n\nacra-1.68.win32.exe\n*******************\nPT_Framework.py \tUpdate to BASETESTINFO method \"printable_test_summary\" to improve reporting.\n\nacra-1.67.win32.exe\n*******************\nHP3458.py \t\tDrivers for HP/Agilent/Keysight 3458 DMM\n\nacra-1.66.win32.exe\n*******************\nK2700.py \t\tUpdates to ReadVolts function to make it more robust.\n\nacra-1.65.win32.exe\n*******************\nCPX400DP.py \t\tDriver for TTi CPX 400 DP Bench PSU\nCPX400SP.py \t\tDriver for TTi CPX 400 SP Bench PSU\n\nacra-1.64.win32.exe\n*******************\nDS360.py \t\tAdded VRMS and BAL/UNBAL functions\n\nacra-1.63.win32.exe\n*******************\nk2000.py \t\traised to rev 1.6 - fixed typo in ReadMilliVolt function\n\nacra-1.62.win32.exe\n*******************\nksdlib.py\t\tCorrected typo in self.SERCMD  = 'KSD -C %d -J %%d -XERS -NUI -TAGS -A 0x%%Xffffb -S 2' %(chid).\n\t\t\tNote that this is a new, untested, command and should not be used in any tests.\n\t\t\t\nacra-1.61.win32.exe\n*******************\nserial_number_tools.py\tUpdated to with function to generate a housekeeping sector. Function added to provide serial numbers\n\t\t\tin a form that can be directly compared. Can now handle 1 letter serial numbers...(yes, they exist)\n\nacra-1.60.win32.exe\n*******************\nksdlib.py\t\tHeader info added. This library is not recommended for inclusion in any new tests.\n\t\t\tUnfortunately it is required by the SBI/Burn-in test. Its use should be avoided.\n\nacra-1.59.win32.exe\n*******************\nPTR2word.py\t\tResults comparison message corrected.\n\nacra-1.58.win32.exe\n*******************\nACRA_EXCEPTS.py\t\tDeleted. Not used. Development stalled many years ago.\nMETERS.py\t\tDeleted. Not used. Development stalled many years ago. Desired functionality supported by Wrappers.py\n\nacra-1.57.win32.exe\n*******************\nPT100.py \t\tError checking updated. \nK2000.py\t\tLibrary updated to deal with positive and negative nunmbers.\t\t\t\n\nacra-1.56.win32.exe\n*******************\nPT100.py \t\tPT100 library tools added. Converts resistances to temperatures and temperatures \n\t\t\tto resistances based on the RTD PT_385 lookup tables supplied with DAS Studio.\n                       \n\nacra-1.55.win32.exe\n*******************\noven.py \t\tSupport added for Watlow F4 PLC controller (as used by space oven). \n\t\t\tLibrary defaults to West controller for compatibility with existing scripts\n                       \nacra-1.54.win32.exe\n*******************\nserial_number_tools.py added to acrautils. This provides library functions for encoding and decoding serial numbers\n                       for storage in standard eeproms.\n\nacra-1.53.win32.exe\n*******************\nPL330DP library updated\nTTi3510 library updated\nTTI_PSU library added for generic TTi PSUs (ones that don't need a dedicated driver library)\nWrapper.PY updated to incorporate PSUs. \n\nacra-1.52.win32.exe\n*******************\nPL330DP.py: library updated to allow for the V/I output values to be read and for the settings to be read back. Feature was always there, it just never worked.\n\nacra-1.51.win32.exe\n*******************\nwrappers.py added to ACRA UTILS. Provides an agnostic interface to digital thermometers.\n            PSUs will be added to this module in due course. \n\nversion.py added to allow the library version to be returned dynamically\n\nacra-1.50.win32.exe\n*******************\nPROCESS_UTILS: set_format, SW_FMT modified to allow the parallel port to be supplied as an arguement if necessary\n\nacra-1.49.win32.exe\n*******************\nK2700.py: closeRelay() function added for backwards compatibility with older tests that used development versions of the K2700 library.\n\nacra-1.48.win32.exe\n*******************\nPT_Framework.py: Test equipment can now be added by supplying a correctly formatted list of test equipment to the tool. The file must have been created no more than 12 hours before the test is run.\n\nacra-1.47.win32.exe\n*******************\nOVEN.py: Python script for controlling the ovens added.\n\nacra-1.46.win32.exe\n*******************\nDS360.py: readPort modified to allow correct operation with GPIB port.\n\nacra-1.45.win32.exe\n*******************\nPTR2Word: CheckTestTime() changed to report max legal duration vs run time in minutes\n\nacra-1.44.win32.exe\n*******************\nPT_Framework: kup_exec() added. Generic function for programming the passed KUP command string, using acraexec.\n\nacra-1.43.win32.exe\n*******************\nPTR2Word: LessThanResultInt(): logical bug fixed and error text corrected.\n\nacra-1.42.win32.exe\n*******************\nFixed editor induced typos in DS360 library.\n\nacra-1.41.win32.exe\n*******************\nDriver update for T319 to correct for spurious returns in the message string.\n\nacra-1.40.win32.exe\n*******************\nDriver for TTi 3510 power supply added.\n\nacra-1.39.win32.exe\n*******************\nAdded library for Ectron, K2000, K2700 and DS360 libraries updated to communicate over GPIB, USB/GPIB or serial. \nSample usage below:\n\n\tDCSource = ECTRON(<portNo>)     #RS-232\n\tor\n\tDCSource = ECTRON(<GPIBAddress>)     #GPIB\n\tor\n\tDCSource = ECTRON([<portNo>,<GPIBAddress>])     #Prologix\n\nacra-1.38.win32.exe\n*******************\nTemporary version. Built for testing. Never formally issued.\nset_format(fmt) updated to make it more reliable. Uses ctypes library calls now. Update propagated to next revision.\n\n\nacra-1.37.win32.exe\n*******************\nPT_Framework.fill_equipment_details() modified to accept na or n/a for equipment (such as cables) that do not require calibration\n\nacra-1.36.win32.exe\n*******************\nPT_Framework updated as a result of ADC/140 production test development. Functions moved from process_utils to PT_Framework as process_utils is being deprecated.\nprocess_utils and PT_Framework can be made work correctly together if paths are controlled for functions available in both libraries. Process_utils should not be used in any new production test developments.\n\nacra-1.35.win32.exe\n*******************\nAdded Tecpel T319 driver library and added scan_serial_ports() GetUTCTime() GetUTCDate() to utils\nusage: myT319 = T319.T319(port)\n'%s' %GetUTCTime() %s = 17:35:13\n'%s' %GetUTCDate() %s = 2015:06:02\nscan_serial_ports()\noutput:\n(0) COM1\n(10) COM11\n(20) COM21\n\nacra-1.34.win32.exe\n*******************\nFormatting updates for MC21. Format of MC21 test reports changed to match MC21 quality docs. \nTest Tech explicitly highlighted in test report, headings of equipment list updated - manufacturer => Make, ID => S/N\n\nacra-1.33.win32.exe\n*******************\nK2700 class: New function added: CloseRelay() function which closes a single relay. Introduced because of problems with existing CloseRelays() function and the EXC/101\n\nacra-1.32.win32.exe\n*******************\nAnton corrected some typos that had crept in.\n\nacra-1.31.win32.exe\n*******************\nstandardised SerNo in functions called by PT_Framework. Syntax same as Process_Utils now. Added help comments to Process_Utils.py functions and indicated deprecated functions in Process_Utils.py\n\nacra-1.30.win32.exe\n*******************\nNot released\n\nacra-1.29.win32.exe\n*******************\nUpdated header file (general purpose):\n\n[Updated] - T316.py          - Some bugs were found during oven testing - corrected\n\nacra-1.28.win32.exe\n*******************\nAdded a new header file (general purpose):\n\n[New] - T316.py      \t     - This is a driver for the new Tecpel DTM-316 digital thermometer\n\nacra-1.27.win32.exe\n*******************\nUpdated two headers and added two new header files to complement the UTL/106 production test:\n\n[Updated] - K2700.py \t     - Added a closePort() function to complement the K2000 driver\n[Updated] - PROCESS_UTILS.py - Added 4 new functions - Read_K2x00_V, Read_K2x00_mA, Read_K2x00_Hz, and Set_M2001\n\t\t               All used to be local functions to the production test body (under different names) but were required to be more global\n\t\t               for use within some of the new header files.\n[New] - Prod_DS3_Oct.py      - This is the DS3 extractor and Octave processor from previous production tests - it used to be needed once or twice for most\n\t\t\t       analogue module tests but the UTL/106 required this block of code to be called around 10 times - considering it is nearly 500 lines long\n\t\t\t       it was worthwhile moving it to a header. It will be used from now on in the analogue module production tests.\n[New] - Martel_IVC222HPII.py - New driver for the handheld Martel IVC222HPII.py\n\nacra-1.26.win32.exe\n*******************\nUpdated Utils.py library to include network inspect function required by TDC/109\n\nacra-1.25.win32.exe\n*******************\nAdded the driver for the Fluke 5100B High Voltage signal generator\n\nacra-1.24.win32.exe\n*******************\nAdded two functions to K2000.py for further DV functionality and production test:\nsetFreqMode() - Sets up the DMM for frequency readings \nreadFreq() - Returns the frequency reading in Hz (float) from the DMM \n\nacra-1.23.win32.exe\n*******************\nAdded ten functions to PROCESS_UTILS.py to support the new ADC126B production test and any new analogue production tests from now on.\nThe primary motive was to decouple the DV_Prog analogue module test code that previously sat on top of the production code.\nThe tradional production test couldn't do advanced DS3 functions such as supercommutation or Octave/Matlab processing\nAlso, some local function were imported from the main production test body and cleaned up.\nThis version is fully backward compatible with all previous production tests:\n\nMake_M_File()          - Function to perform Octave/Matlab processing to produce fourparam data on input samples\nFind_Folder()          - Used by the Make_M_File() function as well as the new DS3 processing sections in the production tests\nset_format_with_path() - Created to overcome the limitations of having to copy the 'lptout.exe' program to multiple locations\nCompile_XID()          - Created this one function to do the work of the previous 4 local functions in the production tests\nKUP_SYS_PROG()         - Ported in to compliment the Compile_XID() function\nGet_MaxCount_Val       - Ported in from the DV program to work with the new DS3 processing in the production test\nGet_MinCount_Val       - Ported in from the DV program to work with the new DS3 processing in the production test\nGet_AveCount_Val       - Ported in from the DV program to work with the new DS3 processing in the production test\nCal_Gain_Coeff         - Ported in from the DV program to work with the new DS3 processing in the production test\nCal_Offset_Coeff       - Ported in from the DV program to work with the new DS3 processing in the production test\n\nacra-1.22.win32.exe\n*******************\nAdded four functions to M2001.py for further DV functionality and production test:\nsetTCInput() - Configures the TC port for the TC INPUT function (based on thermocouple and temperature type) \nsetRTDInput() - Configures the RTD INPUT port for the RTD INPUT function (based on PT sensor and temperature type) \nreadM2001PortVal() - reads the current value from the TC INPUT or RTD INPUT configurations (float)\nclosePort() - closes the serial port.\n\nacra-1.21.win32.exe\n*******************\nAdded two functions to K2700.py for controlling the relay extender cards:\nopenRelays() and closeRelays().\nMinor correction: Added a space +' '+ between KSMpath & KUPopt in KSM_TOOLS.Kup \nfunction to correct the command line execution.\n\nacra-1.20.win32.exe\n*******************\nPROCESS_UTILS.py upgraded as follows:\nAdded class TESTINFO, class REPORT, functions CheckDir and EnterTestInfo.\nGetDetails() has been superseded by TESTINFO (but leaving it in codebase\nfor backward compatability).\nSW_FMT has been updated to call set_format (double call of lptout.exe).\nUsage of SW_FMT and set_format are the same, but SW_FMT is still \nbackward compatable.\n\nacra-1.19.win32.exe\n*******************\nFixed a bug in setONOFF() function. The syntax 'OnOff' in paramterlist should\nhave been 'ONOFF'.\n\nacra-1.18.win32.exe\n*******************\nUpdated DS360 setAmp() function to allow 0V to be set properly and setOffset to \nuse Volts, not mV.\nUpdated K2700 to fix the bug that negative readings were having their sign (-)\nremoved when read.\nUpdated K2000 with RemoveEsc() function and used it in Voltage/Current/Resistance\nmeasurement classes.\nUpdated utils.py by expanding __init__ parameter list, and also\nadding a new function getParamMS (see source code for description).\nUpdated PL330DP.py header with some wiring information.\n\nacra-1.17.win32.exe\n*******************\nAdded fileSplit() function to PROCESS_UTILS package.\n10-Apr-08: Just repacked to remove some duplicate files, no code changes.\n\nacra-1.16.win32.exe\n*******************\nFolded in missing code, in that the update from 1.13 was not folded into the\nbuild in 1.14 or 1.15 (Milos update to utils.py).\nNothing else changed.\n\nacra-1.15.win32.exe\n*******************\nImproved & bench tested (to a large extent) the K2000 class.\nNothing else changed.\n\nacra-1.14.win32.exe\n*******************\nInitial attempt at new code structure, containing classes for various \ncommonly-used ACRA instruments and devices.\nRetained code from 1.12 (four files) for backward compatability.\n\nacra-1.13.win32.exe\n*******************\nLater build by Milos. Contains 4 files as in build 1.12.\nksdlib.py, martel.py, __init__.py are unchanged (except build no. in __init__).\n\n1) Updates done by Milos on utils.py. Function DS3Parser: parameter\nradix='hex' was added that assumes the log file contain data in hex.\ngetParamCount() new function added & getParam(self, format='i') contains\nnew parameter 'format'. \n\nacra-1.12.win32.exe\n*******************\nEarly original build of ACRA UTILS from 2004. Created by Milos.\nInstallation contains 4 files: [ksdlib.py, martel.py, utils.py, __init__.py].\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "acra",
    "package_url": "https://pypi.org/project/acra/",
    "platform": null,
    "project_url": "https://pypi.org/project/acra/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/acra/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Generic ACRA test utilities",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17223692,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2fec00b1ae3ebf88fb4845f2adce6ece551ac12fd29e779f45d71ba6bf06ea0",
          "md5": "15ecf0d5cff27fe57c7b05f724d709b7",
          "sha256": "95dc217d2fadb659bf6778e81b6ca1ac5b4b2ebb81ccfcccc1b23b031d0f6ebd"
        },
        "downloads": -1,
        "filename": "acra-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15ecf0d5cff27fe57c7b05f724d709b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7078,
        "upload_time": "2023-03-09T12:42:54",
        "upload_time_iso_8601": "2023-03-09T12:42:54.022171Z",
        "url": "https://files.pythonhosted.org/packages/f2/fe/c00b1ae3ebf88fb4845f2adce6ece551ac12fd29e779f45d71ba6bf06ea0/acra-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2fec00b1ae3ebf88fb4845f2adce6ece551ac12fd29e779f45d71ba6bf06ea0",
        "md5": "15ecf0d5cff27fe57c7b05f724d709b7",
        "sha256": "95dc217d2fadb659bf6778e81b6ca1ac5b4b2ebb81ccfcccc1b23b031d0f6ebd"
      },
      "downloads": -1,
      "filename": "acra-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "15ecf0d5cff27fe57c7b05f724d709b7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7078,
      "upload_time": "2023-03-09T12:42:54",
      "upload_time_iso_8601": "2023-03-09T12:42:54.022171Z",
      "url": "https://files.pythonhosted.org/packages/f2/fe/c00b1ae3ebf88fb4845f2adce6ece551ac12fd29e779f45d71ba6bf06ea0/acra-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}