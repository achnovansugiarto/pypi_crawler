{
  "info": {
    "author": "Vlad Arefev",
    "author_email": "vlad.arefiev1992@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Database :: Front-Ends",
      "Topic :: Software Development :: Libraries",
      "Typing :: Typed"
    ],
    "description": "[![codecov](https://codecov.io/gh/vladarefiev/sqlalchemy-filter/branch/master/graph/badge.svg)](https://codecov.io/gh/vladarefiev/sqlalchemy-filter)\n\nUsage\n-----\n\n`sqlalchemy-filter` can be used for generating interfaces similar to the `django-filter`\nlibrary. For example, if you have a Post model you can create a\nfilter for it with the code:\n\n```python\nfrom sqlalchemy_filter import Filter, fields\nfrom app import models\n\nclass PostFilter(Filter):\n    from_date = fields.DateField(field_name=\"pub_date\", lookup_type=\">=\")\n    to_date = fields.DateField(field_name=\"pub_date\", lookup_type=\"<=\")\n    is_published = fields.BooleanField()\n    title = fields.Field(lookup_type=\"==\")\n    title_like = fields.Field(lookup_type=\"like\")\n    title_ilike = fields.Field(lookup_type=\"ilike\")\n    data = fields.JsonField(lookup_type=\"#>>\", lookup_path=\"{foo,0}\", not_equal=True)\n    category = fields.Field(relation_model=\"Category\", field_name=\"name\", lookup_type=\"in\")\n    order = fields.OrderField()\n\n    class Meta:\n        model = models.Post\n```\n\nAnd then in your view you could do:\n\n```python\ndef post_list(request):\n    posts = (\n        PostFilter()\n        .filter_query(Post.query.join(Category), {\"category\": 'Category 1', 'order': 'title,-id'})\n        .all()\n    )\n    return {\"posts\": posts}\n\n```    \nAbove code will perform query like:\n```postgresql\nSELECT post.id AS post_id, post.title AS post_title, post.pub_date AS post_pub_date, post.is_published AS post_is_published, post.category_id AS post_category_id \nFROM post JOIN category ON category.id = post.category_id \nWHERE category.name IN ('Category 1')\nORDER BY post.title ASC, post.id DESC\n```\nNotes:\n    You should validate your filter params by yourself and pass already validated params to filter_query func, \n    also you should manually make needed joins like in above example ``Post.query.join(Category)``\n\nPossible lookup_types for Field class:\n\n``\n['==', '<', '>', '<=', '>=', '!=', 'in', 'not_in', 'like', 'ilike', 'notlike', 'notilike']\n``\n\nPossible lookup_types for DateField and DateTimeField class:\n\n``\n['==', '<', '>', '<=', '>=', '!=']\n``\n\nPossible lookup_types for JsonField class:\n\n``\n['->>', '#>>']\n``\n\nExamples of usage JsonField:\n--------------------------------\n\n```python\nfrom app import models, db\n\npost = models.Post(data={\n    \"title\": \"Title 1\",\n    \"is_published\": True, \n    \"tags\": [{\"name\": \"IT\"}, {\"name\": \"Biology\"}]\n})\ndb.session.add(post)\ndb.session.commit()\n```\n\n```python\nfrom sqlalchemy_filter import fields, Filter\nfrom app import models\n\nclass PostFilter(Filter):\n    not_title = fields.JsonField(field_name='data', lookup_type='->>', lookup_path='title', not_equal=True)\n    is_published = fields.JsonField(field_name='data', lookup_type='->>', lookup_path='is_published')\n    tag = fields.JsonField(field_name='data', lookup_type='#>>', lookup_path='{tags, 0, name}')\n\n    class Meta:\n        model = models.Post\n```\n\nFind posts where title != Title 1\n\n```python\nPostFilter().filter_query(models.Post.query, {\"not_title\": \"Title 1\"}).all()\n```\n\n```postgresql\nSELECT *\nFROM post \nWHERE (post.data ->> \"title\") != \"Title 1\"\n```\n\nFind posts where is_published == True\n\n```python\nPostFilter().filter_query(models.Post.query, {\"is_published\": \"true\"}).all()\n```\n\n```postgresql\nSELECT *\nFROM post \nWHERE (post.data ->> \"is_published\") = \"true\"\n```\n\nFind posts where first tag name == IT\n\n```python\nPostFilter().filter_query(models.Post.query, {\"tag\": 'IT'}).all()\n```\n\n```postgresql\nSELECT *\nFROM post \nWHERE (post.data #>> \"{tags, 0, name}\") = \"IT\"\n```\n\nUsage with Flask\n--------------------------------\n\nExample below contains integration with Flask:\n\n```python\nfrom flask.views import MethodView\nfrom sqlalchemy_filter.mixins import FilterSetMixin\nfrom app.filters import PostFilter\n\nclass PostAPI(MethodView, FilterSetMixin):\n    filter_class = PostFilter\n\n    def get(self, *args, **kwargs):\n        base_query = Post.query\n        filter_params = {...}\n        filtered_query = self.filter_query(base_query, filter_params)\n        return {\"posts\": filtered_query.all()}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vladarefiev/sqlalchemy-filter",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sqlalchemy-filter",
    "package_url": "https://pypi.org/project/sqlalchemy-filter/",
    "platform": "",
    "project_url": "https://pypi.org/project/sqlalchemy-filter/",
    "project_urls": {
      "Homepage": "https://github.com/vladarefiev/sqlalchemy-filter"
    },
    "release_url": "https://pypi.org/project/sqlalchemy-filter/0.1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "sqlalchemy-filter is a helper library to perform filtering over sqlalchemy queries",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7488602,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80aa4dc914b435e8cfc3da6b05a3b3fcefeb64d3382a599504bb2a1fbad843cc",
          "md5": "fb755c0c2543a98154220b940e66f70f",
          "sha256": "17f2d97ad19625170f62dacc8da731590e415ff69629549323ded24bb6b66566"
        },
        "downloads": -1,
        "filename": "sqlalchemy-filter-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fb755c0c2543a98154220b940e66f70f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3900,
        "upload_time": "2020-06-02T11:06:31",
        "upload_time_iso_8601": "2020-06-02T11:06:31.109263Z",
        "url": "https://files.pythonhosted.org/packages/80/aa/4dc914b435e8cfc3da6b05a3b3fcefeb64d3382a599504bb2a1fbad843cc/sqlalchemy-filter-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1b8c361438b6032a886916d8b5228f8d9d24c5e14d5c75d1b00be07d615ec1b",
          "md5": "21dff6675453d374f80cd710ee1211ea",
          "sha256": "427da6241062d34929a7c56745eb0fa3547b0b8ac66f7373e545bcd7a38cb8d0"
        },
        "downloads": -1,
        "filename": "sqlalchemy-filter-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "21dff6675453d374f80cd710ee1211ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4836,
        "upload_time": "2020-06-03T14:41:28",
        "upload_time_iso_8601": "2020-06-03T14:41:28.562668Z",
        "url": "https://files.pythonhosted.org/packages/d1/b8/c361438b6032a886916d8b5228f8d9d24c5e14d5c75d1b00be07d615ec1b/sqlalchemy-filter-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b341a271b18d280c64f6fea52bcdea462a2156e839f2fb2666f44844f313a47",
          "md5": "cc0debdaaa41275d5787acb559d98e61",
          "sha256": "da0582a8d71f35c4b232d7d0f05a18fbc3790ee4a93f723139ab5a9fce1b71d1"
        },
        "downloads": -1,
        "filename": "sqlalchemy-filter-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cc0debdaaa41275d5787acb559d98e61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5191,
        "upload_time": "2020-06-12T07:21:37",
        "upload_time_iso_8601": "2020-06-12T07:21:37.047117Z",
        "url": "https://files.pythonhosted.org/packages/4b/34/1a271b18d280c64f6fea52bcdea462a2156e839f2fb2666f44844f313a47/sqlalchemy-filter-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8c5d88ae8584dd4782b458fe969e90a9e9a65aceeb161f947012e791856bcba",
          "md5": "0ca94930bcde30f890e5f19c2352ddb2",
          "sha256": "2ef1f2115ebad6d8d3e167c8453615dbce1f53f79f637a09197d91a9107ea959"
        },
        "downloads": -1,
        "filename": "sqlalchemy-filter-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0ca94930bcde30f890e5f19c2352ddb2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5214,
        "upload_time": "2020-06-16T13:26:33",
        "upload_time_iso_8601": "2020-06-16T13:26:33.583683Z",
        "url": "https://files.pythonhosted.org/packages/c8/c5/d88ae8584dd4782b458fe969e90a9e9a65aceeb161f947012e791856bcba/sqlalchemy-filter-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7541a724e824dc46b50a67477b89e7f7ed1c053ee05bedfa891a55be7aa18c2",
          "md5": "c032c30550d9df77e2c9a60135b849df",
          "sha256": "0cd28f02b69219c9b9f93f47c080e8b80624f375149f20814ddb96abb60fff08"
        },
        "downloads": -1,
        "filename": "sqlalchemy-filter-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c032c30550d9df77e2c9a60135b849df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5256,
        "upload_time": "2020-06-16T14:27:33",
        "upload_time_iso_8601": "2020-06-16T14:27:33.360212Z",
        "url": "https://files.pythonhosted.org/packages/a7/54/1a724e824dc46b50a67477b89e7f7ed1c053ee05bedfa891a55be7aa18c2/sqlalchemy-filter-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7541a724e824dc46b50a67477b89e7f7ed1c053ee05bedfa891a55be7aa18c2",
        "md5": "c032c30550d9df77e2c9a60135b849df",
        "sha256": "0cd28f02b69219c9b9f93f47c080e8b80624f375149f20814ddb96abb60fff08"
      },
      "downloads": -1,
      "filename": "sqlalchemy-filter-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "c032c30550d9df77e2c9a60135b849df",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5256,
      "upload_time": "2020-06-16T14:27:33",
      "upload_time_iso_8601": "2020-06-16T14:27:33.360212Z",
      "url": "https://files.pythonhosted.org/packages/a7/54/1a724e824dc46b50a67477b89e7f7ed1c053ee05bedfa891a55be7aa18c2/sqlalchemy-filter-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}