{
  "info": {
    "author": "Chris Caron",
    "author_email": "lead2gold@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "![Apprise Logo](https://raw.githubusercontent.com/caronc/apprise/master/apprise/assets/themes/default/apprise-logo.png)\n\n<hr/>\n\n**apÂ·prise** / *verb*<br/>\nTo inform or tell (someone). To make one aware of something.\n<hr/>\n\n*Apprise* allows you to send a notification to *almost* all of the most popular *notification* services available to us today such as: Telegram, Discord, Slack, Amazon SNS, Gotify, etc.\n\n* One notification library to rule them all.\n* A common and intuitive notification syntax.\n* Supports the handling of images and attachments (_to the notification services that will accept them_).\n* It's incredibly lightweight.\n* Amazing response times because all messages sent asynchronously.\n\nDevelopers who wish to provide a notification service no longer need to research each and every one out there. They no longer need to try to adapt to the new ones that comeout thereafter. They just need to include this one library and then they can immediately gain access to almost all of the notifications services available to us today.\n\nSystem Administrators and DevOps who wish to send a notification now no longer need to find the right tool for the job. Everything is already wrapped and supported within the `apprise` command line tool (CLI) that ships with this product.\n\n[![Paypal](https://img.shields.io/badge/paypal-donate-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=MHANV39UZNQ5E)\n[![Follow](https://img.shields.io/twitter/follow/l2gnux)](https://twitter.com/l2gnux/)<br/>\n[![Discord](https://img.shields.io/discord/558793703356104724.svg?colorB=7289DA&label=Discord&logo=Discord&logoColor=7289DA&style=flat-square)](https://discord.gg/MMPeN2D)\n[![Python](https://img.shields.io/pypi/pyversions/apprise.svg?style=flat-square)](https://pypi.org/project/apprise/)\n[![Build Status](https://travis-ci.com/caronc/apprise.svg?branch=master)](https://travis-ci.com/caronc/apprise)\n[![CodeCov Status](https://codecov.io/github/caronc/apprise/branch/master/graph/badge.svg)](https://codecov.io/github/caronc/apprise)\n[![PyPi](https://img.shields.io/pypi/dm/apprise.svg?style=flat-square)](https://pypi.org/project/apprise/)\n\n## Supported Notifications\nThe section identifies all of the services supported by this library. [Check out the wiki for more information on the supported modules here](https://github.com/caronc/apprise/wiki).\n\n### Popular Notification Services\nThe table below identifies the services this tool supports and some example service urls you need to use in order to take advantage of it. Click on any of the services listed below to get more details on how you can configure Apprise to access them.\n\n| Notification Service | Service ID | Default Port | Example Syntax |\n| -------------------- | ---------- | ------------ | -------------- |\n| [Boxcar](https://github.com/caronc/apprise/wiki/Notify_boxcar)  | boxcar://   | (TCP) 443   | boxcar://hostname<br />boxcar://hostname/@tag<br/>boxcar://hostname/device_token<br />boxcar://hostname/device_token1/device_token2/device_tokenN<br />boxcar://hostname/@tag/@tag2/device_token\n| [Discord](https://github.com/caronc/apprise/wiki/Notify_discord)  | discord://   | (TCP) 443   | discord://webhook_id/webhook_token<br />discord://avatar@webhook_id/webhook_token\n| [Emby](https://github.com/caronc/apprise/wiki/Notify_emby)  | emby:// or embys:// | (TCP) 8096 | emby://user@hostname/<br />emby://user:password@hostname\n| [Enigma2](https://github.com/caronc/apprise/wiki/Notify_enigma2)  | enigma2:// or enigma2s:// | (TCP) 80 or 443 | enigma2://hostname\n| [Faast](https://github.com/caronc/apprise/wiki/Notify_faast) | faast://    | (TCP) 443    | faast://authorizationtoken\n| [FCM](https://github.com/caronc/apprise/wiki/Notify_fcm) | fcm://    | (TCP) 443    | fcm://project@apikey/DEVICE_ID<br />fcm://project@apikey/#TOPIC<br/>fcm://project@apikey/DEVICE_ID1/#topic1/#topic2/DEVICE_ID2/\n| [Flock](https://github.com/caronc/apprise/wiki/Notify_flock) | flock://    | (TCP) 443    | flock://token<br/>flock://botname@token<br/>flock://app_token/u:userid<br/>flock://app_token/g:channel_id<br/>flock://app_token/u:userid/g:channel_id\n| [Gitter](https://github.com/caronc/apprise/wiki/Notify_gitter) | gitter://    | (TCP) 443    | gitter://token/room<br/>gitter://token/room1/room2/roomN\n| [Google Chat](https://github.com/caronc/apprise/wiki/Notify_googlechat) | gchat://    | (TCP) 443    | gchat://workspace/key/token\n| [Gotify](https://github.com/caronc/apprise/wiki/Notify_gotify) | gotify:// or gotifys://   | (TCP) 80 or 443    | gotify://hostname/token<br />gotifys://hostname/token?priority=high\n| [Growl](https://github.com/caronc/apprise/wiki/Notify_growl)  | growl://   | (UDP) 23053   | growl://hostname<br />growl://hostname:portno<br />growl://password@hostname<br />growl://password@hostname:port</br>**Note**: you can also use the get parameter _version_ which can allow the growl request to behave using the older v1.x protocol. An example would look like: growl://hostname?version=1\n| [Home Assistant](https://github.com/caronc/apprise/wiki/Notify_homeassistant)       | hassio:// or hassios://   | (TCP) 8123 or 443 | hassio://hostname/accesstoken<br />hassio://user@hostname/accesstoken<br />hassio://user:password@hostname:port/accesstoken<br />hassio://hostname/optional/path/accesstoken\n| [IFTTT](https://github.com/caronc/apprise/wiki/Notify_ifttt) | ifttt://    | (TCP) 443    | ifttt://webhooksID/Event<br />ifttt://webhooksID/Event1/Event2/EventN<br/>ifttt://webhooksID/Event1/?+Key=Value<br/>ifttt://webhooksID/Event1/?-Key=value1\n| [Join](https://github.com/caronc/apprise/wiki/Notify_join) | join://   | (TCP) 443    | join://apikey/device<br />join://apikey/device1/device2/deviceN/<br />join://apikey/group<br />join://apikey/groupA/groupB/groupN<br />join://apikey/DeviceA/groupA/groupN/DeviceN/\n| [KODI](https://github.com/caronc/apprise/wiki/Notify_kodi) | kodi:// or kodis://    | (TCP) 8080 or 443   | kodi://hostname<br />kodi://user@hostname<br />kodi://user:password@hostname:port\n| [Kumulos](https://github.com/caronc/apprise/wiki/Notify_kumulos) | kumulos:// | (TCP) 443 | kumulos://apikey/serverkey\n| [LaMetric Time](https://github.com/caronc/apprise/wiki/Notify_lametric) | lametric:// | (TCP) 443 | lametric://apikey@device_ipaddr<br/>lametric://apikey@hostname:port<br/>lametric://client_id@client_secret\n| [Mailgun](https://github.com/caronc/apprise/wiki/Notify_mailgun) | mailgun:// | (TCP) 443 | mailgun://user@hostname/apikey<br />mailgun://user@hostname/apikey/email<br />mailgun://user@hostname/apikey/email1/email2/emailN<br />mailgun://user@hostname/apikey/?name=\"From%20User\"\n| [Matrix](https://github.com/caronc/apprise/wiki/Notify_matrix) | matrix:// or matrixs://  | (TCP) 80 or 443 | matrix://hostname<br />matrix://user@hostname<br />matrixs://user:pass@hostname:port/#room_alias<br />matrixs://user:pass@hostname:port/!room_id<br />matrixs://user:pass@hostname:port/#room_alias/!room_id/#room2<br />matrixs://token@hostname:port/?webhook=matrix<br />matrix://user:token@hostname/?webhook=slack&format=markdown\n| [Mattermost](https://github.com/caronc/apprise/wiki/Notify_mattermost) | mmost:// or mmosts:// | (TCP) 8065 | mmost://hostname/authkey<br />mmost://hostname:80/authkey<br />mmost://user@hostname:80/authkey<br />mmost://hostname/authkey?channel=channel<br />mmosts://hostname/authkey<br />mmosts://user@hostname/authkey<br />\n| [Microsoft Teams](https://github.com/caronc/apprise/wiki/Notify_msteams) | msteams://  | (TCP) 443   | msteams://TokenA/TokenB/TokenC/\n| [Nextcloud](https://github.com/caronc/apprise/wiki/Notify_nextcloud) | ncloud:// or nclouds:// | (TCP) 80 or 443 | ncloud://adminuser:pass@host/User<br/>nclouds://adminuser:pass@host/User1/User2/UserN\n| [Notica](https://github.com/caronc/apprise/wiki/Notify_notica) | notica://  | (TCP) 443   | notica://Token/\n| [Notifico](https://github.com/caronc/apprise/wiki/Notify_notifico) | notifico://  | (TCP) 443   | notifico://ProjectID/MessageHook/\n| [Office 365](https://github.com/caronc/apprise/wiki/Notify_office365) | o365://  | (TCP) 443   | o365://TenantID:AccountEmail/ClientID/ClientSecret<br />o365://TenantID:AccountEmail/ClientID/ClientSecret/TargetEmail<br />o365://TenantID:AccountEmail/ClientID/ClientSecret/TargetEmail1/TargetEmail2/TargetEmailN\n| [OneSignal](https://github.com/caronc/apprise/wiki/Notify_onesignal) | onesignal:// | (TCP) 443 | onesignal://AppID@APIKey/PlayerID<br/>onesignal://TemplateID:AppID@APIKey/UserID<br/>onesignal://AppID@APIKey/#IncludeSegment<br/>onesignal://AppID@APIKey/Email\n| [Opsgenie](https://github.com/caronc/apprise/wiki/Notify_opsgenie) | opsgenie:// | (TCP) 443 | opsgenie://APIKey<br/>opsgenie://APIKey/UserID<br/>opsgenie://APIKey/#Team<br/>opsgenie://APIKey/\\*Schedule<br/>opsgenie://APIKey/^Escalation\n| [ParsePlatform](https://github.com/caronc/apprise/wiki/Notify_parseplatform) | parsep:// or parseps:// | (TCP) 80 or 443 | parsep://AppID:MasterKey@Hostname<br/>parseps://AppID:MasterKey@Hostname\n| [PopcornNotify](https://github.com/caronc/apprise/wiki/Notify_popcornnotify) | popcorn://  | (TCP) 443   | popcorn://ApiKey/ToPhoneNo<br/>popcorn://ApiKey/ToPhoneNo1/ToPhoneNo2/ToPhoneNoN/<br/>popcorn://ApiKey/ToEmail<br/>popcorn://ApiKey/ToEmail1/ToEmail2/ToEmailN/<br/>popcorn://ApiKey/ToPhoneNo1/ToEmail1/ToPhoneNoN/ToEmailN\n| [Prowl](https://github.com/caronc/apprise/wiki/Notify_prowl) | prowl://   | (TCP) 443    | prowl://apikey<br />prowl://apikey/providerkey\n| [PushBullet](https://github.com/caronc/apprise/wiki/Notify_pushbullet) | pbul://    | (TCP) 443    | pbul://accesstoken<br />pbul://accesstoken/#channel<br/>pbul://accesstoken/A_DEVICE_ID<br />pbul://accesstoken/email@address.com<br />pbul://accesstoken/#channel/#channel2/email@address.net/DEVICE\n| [Pushjet](https://github.com/caronc/apprise/wiki/Notify_pushjet) | pjet:// or pjets:// | (TCP) 80 or 443 | pjet://hostname/secret<br />pjet://hostname:port/secret<br />pjets://secret@hostname/secret<br />pjets://hostname:port/secret\n| [Push (Techulus)](https://github.com/caronc/apprise/wiki/Notify_techulus) | push://    | (TCP) 443    | push://apikey/\n| [Pushed](https://github.com/caronc/apprise/wiki/Notify_pushed) | pushed://    | (TCP) 443    | pushed://appkey/appsecret/<br/>pushed://appkey/appsecret/#ChannelAlias<br/>pushed://appkey/appsecret/#ChannelAlias1/#ChannelAlias2/#ChannelAliasN<br/>pushed://appkey/appsecret/@UserPushedID<br/>pushed://appkey/appsecret/@UserPushedID1/@UserPushedID2/@UserPushedIDN\n| [Pushover](https://github.com/caronc/apprise/wiki/Notify_pushover)  | pover://   | (TCP) 443   | pover://user@token<br />pover://user@token/DEVICE<br />pover://user@token/DEVICE1/DEVICE2/DEVICEN<br />**Note**: you must specify both your user_id and token\n| [PushSafer](https://github.com/caronc/apprise/wiki/Notify_pushsafer)  | psafer:// or psafers://  | (TCP) 80 or 443  | psafer://privatekey<br />psafers://privatekey/DEVICE<br />psafer://privatekey/DEVICE1/DEVICE2/DEVICEN\n| [Reddit](https://github.com/caronc/apprise/wiki/Notify_reddit) | reddit:// | (TCP) 443   | reddit://user:password@app_id/app_secret/subreddit<br />reddit://user:password@app_id/app_secret/sub1/sub2/subN\n| [Rocket.Chat](https://github.com/caronc/apprise/wiki/Notify_rocketchat) | rocket:// or rockets://  | (TCP) 80 or 443   | rocket://user:password@hostname/RoomID/Channel<br />rockets://user:password@hostname:443/#Channel1/#Channel1/RoomID<br />rocket://user:password@hostname/#Channel<br />rocket://webhook@hostname<br />rockets://webhook@hostname/@User/#Channel\n| [Ryver](https://github.com/caronc/apprise/wiki/Notify_ryver) | ryver://  | (TCP) 443   | ryver://Organization/Token<br />ryver://botname@Organization/Token\n| [SendGrid](https://github.com/caronc/apprise/wiki/Notify_sendgrid) | sendgrid://  | (TCP) 443   | sendgrid://APIToken:FromEmail/<br />sendgrid://APIToken:FromEmail/ToEmail<br />sendgrid://APIToken:FromEmail/ToEmail1/ToEmail2/ToEmailN/\n| [SimplePush](https://github.com/caronc/apprise/wiki/Notify_simplepush) | spush://   | (TCP) 443    | spush://apikey<br />spush://salt:password@apikey<br />spush://apikey?event=Apprise\n| [Slack](https://github.com/caronc/apprise/wiki/Notify_slack) | slack://  | (TCP) 443   | slack://TokenA/TokenB/TokenC/<br />slack://TokenA/TokenB/TokenC/Channel<br />slack://botname@TokenA/TokenB/TokenC/Channel<br />slack://user@TokenA/TokenB/TokenC/Channel1/Channel2/ChannelN\n| [SMTP2Go](https://github.com/caronc/apprise/wiki/Notify_smtp2go) | smtp2go:// | (TCP) 443 | smtp2go://user@hostname/apikey<br />smtp2go://user@hostname/apikey/email<br />smtp2go://user@hostname/apikey/email1/email2/emailN<br />smtp2go://user@hostname/apikey/?name=\"From%20User\"\n| [SparkPost](https://github.com/caronc/apprise/wiki/Notify_sparkpost) | sparkpost:// | (TCP) 443 | sparkpost://user@hostname/apikey<br />sparkpost://user@hostname/apikey/email<br />sparkpost://user@hostname/apikey/email1/email2/emailN<br />sparkpost://user@hostname/apikey/?name=\"From%20User\"\n| [Spontit](https://github.com/caronc/apprise/wiki/Notify_spontit) | spontit://  | (TCP) 443   | spontit://UserID@APIKey/<br />spontit://UserID@APIKey/Channel<br />spontit://UserID@APIKey/Channel1/Channel2/ChannelN\n| [Syslog](https://github.com/caronc/apprise/wiki/Notify_syslog) | syslog://  | n/a  | syslog://<br />syslog://Facility\n| [Telegram](https://github.com/caronc/apprise/wiki/Notify_telegram) | tgram://  | (TCP) 443   | tgram://bottoken/ChatID<br />tgram://bottoken/ChatID1/ChatID2/ChatIDN\n| [Twitter](https://github.com/caronc/apprise/wiki/Notify_twitter) | twitter://  | (TCP) 443   | twitter://CKey/CSecret/AKey/ASecret<br/>twitter://user@CKey/CSecret/AKey/ASecret<br/>twitter://CKey/CSecret/AKey/ASecret/User1/User2/User2<br/>twitter://CKey/CSecret/AKey/ASecret?mode=tweet\n| [Twist](https://github.com/caronc/apprise/wiki/Notify_twist) | twist://  | (TCP) 443   | twist://pasword:login<br/>twist://password:login/#channel<br/>twist://password:login/#team:channel<br/>twist://password:login/#team:channel1/channel2/#team3:channel\n| [XBMC](https://github.com/caronc/apprise/wiki/Notify_xbmc) | xbmc:// or xbmcs://    | (TCP) 8080 or 443   | xbmc://hostname<br />xbmc://user@hostname<br />xbmc://user:password@hostname:port\n| [XMPP](https://github.com/caronc/apprise/wiki/Notify_xmpp) | xmpp:// or xmpps://    | (TCP) 5222 or 5223   | xmpp://password@hostname<br />xmpp://user:password@hostname<br />xmpps://user:password@hostname:port?jid=user@hostname/resource<br/>xmpps://password@hostname/target@myhost, target2@myhost/resource\n| [Webex Teams (Cisco)](https://github.com/caronc/apprise/wiki/Notify_wxteams) | wxteams://  | (TCP) 443   | wxteams://Token\n| [Zulip Chat](https://github.com/caronc/apprise/wiki/Notify_zulip) | zulip://  | (TCP) 443   | zulip://botname@Organization/Token<br />zulip://botname@Organization/Token/Stream<br />zulip://botname@Organization/Token/Email\n\n\n### SMS Notification Support\n| Notification Service | Service ID | Default Port | Example Syntax |\n| -------------------- | ---------- | ------------ | -------------- |\n| [AWS SNS](https://github.com/caronc/apprise/wiki/Notify_sns)  | sns://   | (TCP) 443   | sns://AccessKeyID/AccessSecretKey/RegionName/+PhoneNo<br/>sns://AccessKeyID/AccessSecretKey/RegionName/+PhoneNo1/+PhoneNo2/+PhoneNoN<br/>sns://AccessKeyID/AccessSecretKey/RegionName/Topic<br/>sns://AccessKeyID/AccessSecretKey/RegionName/Topic1/Topic2/TopicN\n| [ClickSend](https://github.com/caronc/apprise/wiki/Notify_clicksend) | clicksend://  | (TCP) 443   | clicksend://user:pass@PhoneNo<br/>clicksend://user:pass@ToPhoneNo1/ToPhoneNo2/ToPhoneNoN\n| [D7 Networks](https://github.com/caronc/apprise/wiki/Notify_d7networks) | d7sms://  | (TCP) 443   | d7sms://user:pass@PhoneNo<br/>d7sms://user:pass@ToPhoneNo1/ToPhoneNo2/ToPhoneNoN\n| [DingTalk](https://github.com/caronc/apprise/wiki/Notify_dingtalk)  | dingtalk://   | (TCP) 443   | dingtalk://token/<br />dingtalk://token/ToPhoneNo<br />dingtalk://token/ToPhoneNo1/ToPhoneNo2/ToPhoneNo1/\n| [Kavenegar](https://github.com/caronc/apprise/wiki/Notify_kavenegar) | kavenegar://  | (TCP) 443   | kavenegar://ApiKey/ToPhoneNo<br/>kavenegar://FromPhoneNo@ApiKey/ToPhoneNo<br/>kavenegar://ApiKey/ToPhoneNo1/ToPhoneNo2/ToPhoneNoN\n| [MessageBird](https://github.com/caronc/apprise/wiki/Notify_messagebird) | msgbird://  | (TCP) 443   | msgbird://ApiKey/FromPhoneNo<br/>msgbird://ApiKey/FromPhoneNo/ToPhoneNo<br/>msgbird://ApiKey/FromPhoneNo/ToPhoneNo1/ToPhoneNo2/ToPhoneNoN/\n| [MSG91](https://github.com/caronc/apprise/wiki/Notify_msg91) | msg91://  | (TCP) 443   | msg91://AuthKey/ToPhoneNo<br/>msg91://SenderID@AuthKey/ToPhoneNo<br/>msg91://AuthKey/ToPhoneNo1/ToPhoneNo2/ToPhoneNoN/\n| [Nexmo](https://github.com/caronc/apprise/wiki/Notify_nexmo) | nexmo://  | (TCP) 443   | nexmo://ApiKey:ApiSecret@FromPhoneNo<br/>nexmo://ApiKey:ApiSecret@FromPhoneNo/ToPhoneNo<br/>nexmo://ApiKey:ApiSecret@FromPhoneNo/ToPhoneNo1/ToPhoneNo2/ToPhoneNoN/\n| [Sinch](https://github.com/caronc/apprise/wiki/Notify_sinch) | sinch://  | (TCP) 443   | sinch://ServicePlanId:ApiToken@FromPhoneNo<br/>sinch://ServicePlanId:ApiToken@FromPhoneNo/ToPhoneNo<br/>sinch://ServicePlanId:ApiToken@FromPhoneNo/ToPhoneNo1/ToPhoneNo2/ToPhoneNoN/<br/>sinch://ServicePlanId:ApiToken@ShortCode/ToPhoneNo<br/>sinch://ServicePlanId:ApiToken@ShortCode/ToPhoneNo1/ToPhoneNo2/ToPhoneNoN/\n| [Twilio](https://github.com/caronc/apprise/wiki/Notify_twilio) | twilio://  | (TCP) 443   | twilio://AccountSid:AuthToken@FromPhoneNo<br/>twilio://AccountSid:AuthToken@FromPhoneNo/ToPhoneNo<br/>twilio://AccountSid:AuthToken@FromPhoneNo/ToPhoneNo1/ToPhoneNo2/ToPhoneNoN/<br/>twilio://AccountSid:AuthToken@ShortCode/ToPhoneNo<br/>twilio://AccountSid:AuthToken@ShortCode/ToPhoneNo1/ToPhoneNo2/ToPhoneNoN/\n\n## Desktop Notification Support\n| Notification Service | Service ID | Default Port | Example Syntax |\n| -------------------- | ---------- | ------------ | -------------- |\n| [Linux DBus Notifications](https://github.com/caronc/apprise/wiki/Notify_dbus)  | dbus://<br />qt://<br />glib://<br />kde://  | n/a  | dbus://<br />qt://<br />glib://<br />kde://\n| [Linux Gnome Notifications](https://github.com/caronc/apprise/wiki/Notify_gnome) | gnome://    |        n/a          | gnome://\n| [MacOS X Notifications](https://github.com/caronc/apprise/wiki/Notify_macosx) | macosx://    |        n/a          | macosx://\n| [Windows Notifications](https://github.com/caronc/apprise/wiki/Notify_windows) | windows://    |        n/a          | windows://\n\n### Email Support\n| Service ID | Default Port | Example Syntax |\n| ---------- | ------------ | -------------- |\n| [mailto://](https://github.com/caronc/apprise/wiki/Notify_email)  |  (TCP) 25    | mailto://userid:pass@domain.com<br />mailto://domain.com?user=userid&pass=password<br/>mailto://domain.com:2525?user=userid&pass=password<br />mailto://user@gmail.com&pass=password<br />mailto://mySendingUsername:mySendingPassword@example.com?to=receivingAddress@example.com<br />mailto://userid:password@example.com?smtp=mail.example.com&from=noreply@example.com&name=no%20reply\n| [mailtos://](https://github.com/caronc/apprise/wiki/Notify_email) |  (TCP) 587   | mailtos://userid:pass@domain.com<br />mailtos://domain.com?user=userid&pass=password<br/>mailtos://domain.com:465?user=userid&pass=password<br />mailtos://user@hotmail.com&pass=password<br />mailtos://mySendingUsername:mySendingPassword@example.com?to=receivingAddress@example.com<br />mailtos://userid:password@example.com?smtp=mail.example.com&from=noreply@example.com&name=no%20reply\n\nApprise have some email services built right into it (such as yahoo, fastmail, hotmail, gmail, etc) that greatly simplify the mailto:// service.  See more details [here](https://github.com/caronc/apprise/wiki/Notify_email).\n\n### Custom Notifications\n| Post Method          | Service ID | Default Port | Example Syntax |\n| -------------------- | ---------- | ------------ | -------------- |\n| [JSON](https://github.com/caronc/apprise/wiki/Notify_Custom_JSON)       | json:// or jsons://   | (TCP) 80 or 443 | json://hostname<br />json://user@hostname<br />json://user:password@hostname:port<br />json://hostname/a/path/to/post/to\n| [XML](https://github.com/caronc/apprise/wiki/Notify_Custom_XML)         | xml:// or xmls://   | (TCP) 80 or 443 | xml://hostname<br />xml://user@hostname<br />xml://user:password@hostname:port<br />xml://hostname/a/path/to/post/to\n\n## Installation\nThe easiest way is to install this package is from pypi:\n```bash\npip install apprise\n```\n## Command Line\nA small command line tool is also provided with this package called *apprise*. If you know the server url's you wish to notify, you can simply provide them all on the command line and send your notifications that way:\n```bash\n# Send a notification to as many servers as you want\n# as you can easily chain one after another (the -vv provides some\n# additional verbosity to help let you know what is going on):\napprise -vv -t 'my title' -b 'my notification body' \\\n   'mailto://myemail:mypass@gmail.com' \\\n   'pbul://o.gn5kj6nfhv736I7jC3cj3QLRiyhgl98b'\n\n# If you don't specify a --body (-b) then stdin is used allowing\n# you to use the tool as part of your every day administration:\ncat /proc/cpuinfo | apprise -vv -t 'cpu info' \\\n   'mailto://myemail:mypass@gmail.com'\n\n# The title field is totally optional\nuptime | apprise -vv \\\n   'discord:///4174216298/JHMHI8qBe7bk2ZwO5U711o3dV_js'\n```\n\n### Configuration Files\nNo one wants to put their credentials out for everyone to see on the command line.  No problem *apprise* also supports configuration files.  It can handle both a specific [YAML format](https://github.com/caronc/apprise/wiki/config_yaml) or a very simple [TEXT format](https://github.com/caronc/apprise/wiki/config_text). You can also pull these configuration files via an HTTP query too! You can read more about the expected structure of the configuration files [here](https://github.com/caronc/apprise/wiki/config).\n```bash\n# By default if no url or configuration is specified aprise will attempt to load\n# configuration files (if present):\n#  ~/.apprise\n#  ~/.apprise.yml\n#  ~/.config/apprise\n#  ~/.config/apprise.yml\n\n# Windows users can store their default configuration files here:\n#  %APPDATA%/Apprise/apprise\n#  %APPDATA%/Apprise/apprise.yml\n#  %LOCALAPPDATA%/Apprise/apprise\n#  %LOCALAPPDATA%/Apprise/apprise.yml\n\n# If you loaded one of those files, your command line gets really easy:\napprise -vv -t 'my title' -b 'my notification body'\n\n# If you want to deviate from the default paths or specify more than one,\n# just specify them using the --config switch:\napprise -vv -t 'my title' -b 'my notification body' \\\n   --config=/path/to/my/config.yml\n\n# Got lots of configuration locations? No problem, you can specify them all:\n# Apprise can even fetch the configuration from over a network!\napprise -vv -t 'my title' -b 'my notification body' \\\n   --config=/path/to/my/config.yml \\\n   --config=https://localhost/my/apprise/config\n```\n\n### Attaching Files\nApprise also supports file attachments too! Specify as many attachments to a notification as you want.\n```bash\n# Send a funny image you found on the internet to a colleague:\napprise -vv --title 'Agile Joke' \\\n        --body 'Did you see this one yet?' \\\n        --attach https://i.redd.it/my2t4d2fx0u31.jpg \\\n        'mailto://myemail:mypass@gmail.com'\n\n# Easily send an update from a critical server to your dev team\napprise -vv --title 'system crash' \\\n        --body 'I do not think Jim fixed the bug; see attached...' \\\n        --attach /var/log/myprogram.log \\\n        --attach /var/debug/core.2345 \\\n        --tag devteam\n```\n\n## Developers\nTo send a notification from within your python application, just do the following:\n```python\nimport apprise\n\n# Create an Apprise instance\napobj = apprise.Apprise()\n\n# Add all of the notification services by their server url.\n# A sample email notification:\napobj.add('mailto://myuserid:mypass@gmail.com')\n\n# A sample pushbullet notification\napobj.add('pbul://o.gn5kj6nfhv736I7jC3cj3QLRiyhgl98b')\n\n# Then notify these services any time you desire. The below would\n# notify all of the services loaded into our Apprise object.\napobj.notify(\n    body='what a great notification service!',\n    title='my notification title',\n)\n```\n\n### Configuration Files\nDevelopers need access to configuration files too. The good news is their use just involves declaring another object (called *AppriseConfig*) that the *Apprise* object can ingest.  You can also freely mix and match config and notification entries as often as you wish! You can read more about the expected structure of the configuration files [here](https://github.com/caronc/apprise/wiki/config).\n```python\nimport apprise\n\n# Create an Apprise instance\napobj = apprise.Apprise()\n\n# Create an Config instance\nconfig = apprise.AppriseConfig()\n\n# Add a configuration source:\nconfig.add('/path/to/my/config.yml')\n\n# Add another...\nconfig.add('https://myserver:8080/path/to/config')\n\n# Make sure to add our config into our apprise object\napobj.add(config)\n\n# You can mix and match; add an entry directly if you want too\n# In this entry we associate the 'admin' tag with our notification\napobj.add('mailto://myuser:mypass@hotmail.com', tag='admin')\n\n# Then notify these services any time you desire. The below would\n# notify all of the services that have not been bound to any specific\n# tag.\napobj.notify(\n    body='what a great notification service!',\n    title='my notification title',\n)\n\n# Tagging allows you to specifically target only specific notification\n# services you've loaded:\napobj.notify(\n    body='send a notification to our admin group',\n    title='Attention Admins',\n    # notify any services tagged with the 'admin' tag\n    tag='admin',\n)\n\n# If you want to notify absolutely everything (reguardless of whether\n# it's been tagged or not), just use the reserved tag of 'all':\napobj.notify(\n    body='send a notification to our admin group',\n    title='Attention Admins',\n    # notify absolutely everything loaded, reguardless on wether\n    # it has a tag associated with it or not:\n    tag='all',\n)\n```\n\n### Attaching Files\nAttachments are very easy to send using the Apprise API:\n```python\nimport apprise\n\n# Create an Apprise instance\napobj = apprise.Apprise()\n\n# Add at least one service you want to notify\napobj.add('mailto://myuser:mypass@hotmail.com')\n\n# Then send your attachment.\napobj.notify(\n    title='A great photo of our family',\n    body='The flash caused Jane to close her eyes! hah! :)',\n    attach='/local/path/to/my/DSC_003.jpg',\n)\n\n# Send a web based attachment too! In the below example, we connect to a home\n# security camera and send a live image to an email. By default remote web\n# content is cached but for a security camera, we might want to call notify\n# again later in our code so we want our last image retrieved to expire(in\n# this case after 3 seconds).\napobj.notify(\n    title='Latest security image',\n    attach='http:/admin:password@hikvision-cam01/ISAPI/Streaming/channels/101/picture?cache=3'\n)\n```\n\nTo send more than one attachment, just use a list, set, or tuple instead:\n```python\nimport apprise\n\n# Create an Apprise instance\napobj = apprise.Apprise()\n\n# Add at least one service you want to notify\napobj.add('mailto://myuser:mypass@hotmail.com')\n\n# Now add all of the entries we're intrested in:\nattach = (\n    # ?name= allows us to rename the actual jpeg as found on the site\n    # to be another name when sent to our receipient(s)\n    'https://i.redd.it/my2t4d2fx0u31.jpg?name=FlyingToMars.jpg',\n\n    # Now add another:\n    '/path/to/funny/joke.gif',\n)\n\n# Send your multiple attachments with a single notify call:\napobj.notify(\n    title='Some good jokes.',\n    body='Hey guys, check out these!',\n    attach=attach,\n)\n```\n\n## Want To Learn More?\nIf you're interested in reading more about this and other methods on how to customize your own notifications, please check out the following links:\n* ð£ [Using the CLI](https://github.com/caronc/apprise/wiki/CLI_Usage)\n* ð ï¸ [Development API](https://github.com/caronc/apprise/wiki/Development_API)\n* ð§ [Troubleshooting](https://github.com/caronc/apprise/wiki/Troubleshooting)\n* âï¸ [Configuration File Help](https://github.com/caronc/apprise/wiki/config)\n* ð [Apprise API/Web Interface](https://github.com/caronc/apprise-api)\n* ð [Showcase](https://github.com/caronc/apprise/wiki/showcase)\n\nWant to help make Apprise better?\n* ð¡ [Contribute to the Apprise Code Base](https://github.com/caronc/apprise/wiki/Development_Contribution)\n* â¤ï¸ [Sponsorship and Donations](https://github.com/caronc/apprise/wiki/Sponsors)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/caronc/apprise",
    "keywords": "Push Notifications Alerts Email AWS SNS Boxcar ClickSend Dingtalk Discord Dbus Emby Faast FCM Flock Gitter Gnome Google Chat Gotify Growl Home Assistant IFTTT Join Kavenegar KODI Kumulos LaMetric MacOS Mailgun Matrix Mattermost MessageBird MSG91 Nexmo Nextcloud Notica Notifico Office365 OneSignal Opsgenie ParsePlatform PopcornNotify Prowl PushBullet Pushjet Pushed Pushover PushSafer Reddit Rocket.Chat Ryver SendGrid SimplePush Sinch Slack SMTP2Go SparkPost Spontit Stride Syslog Techulus Telegram Twilio Twist Twitter XBMC MSTeams Microsoft Windows Webex CLI API",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mka142-apprise",
    "package_url": "https://pypi.org/project/mka142-apprise/",
    "platform": "",
    "project_url": "https://pypi.org/project/mka142-apprise/",
    "project_urls": {
      "Homepage": "https://github.com/caronc/apprise"
    },
    "release_url": "https://pypi.org/project/mka142-apprise/0.9.4/",
    "requires_dist": [
      "PyYAML",
      "click (>=5.0)",
      "cryptography",
      "markdown",
      "requests",
      "requests-oauthlib",
      "six"
    ],
    "requires_python": ">=2.7",
    "summary": "Push Notifications that work with just about every platform! | for nextcloud 21",
    "version": "0.9.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11239310,
  "releases": {
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0a93ed1a8749d879e00affba507f00dd4069ddbe5421f0801396d666b7ef1af",
          "md5": "e955eaa5b1df4e97cb3fa2a98263bfee",
          "sha256": "cbf15c271303f95023802f2ef1cb095486a460511dc03d6ed748ce0443089b0a"
        },
        "downloads": -1,
        "filename": "mka142_apprise-0.9.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e955eaa5b1df4e97cb3fa2a98263bfee",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7",
        "size": 995245,
        "upload_time": "2021-08-21T13:42:23",
        "upload_time_iso_8601": "2021-08-21T13:42:23.746554Z",
        "url": "https://files.pythonhosted.org/packages/d0/a9/3ed1a8749d879e00affba507f00dd4069ddbe5421f0801396d666b7ef1af/mka142_apprise-0.9.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d12387bde6e9488c3cf39f4e7c315acc00aac510b6df81ce186365df2ce4b99",
          "md5": "17a151a7c41f95765cabb7d43fb3cba5",
          "sha256": "57bf21a16703411555b599ff0fe5d42a8dfea4243d192aa2b5db4f384c91ac54"
        },
        "downloads": -1,
        "filename": "mka142-apprise-0.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "17a151a7c41f95765cabb7d43fb3cba5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 1360435,
        "upload_time": "2021-08-21T13:42:26",
        "upload_time_iso_8601": "2021-08-21T13:42:26.278782Z",
        "url": "https://files.pythonhosted.org/packages/1d/12/387bde6e9488c3cf39f4e7c315acc00aac510b6df81ce186365df2ce4b99/mka142-apprise-0.9.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d0a93ed1a8749d879e00affba507f00dd4069ddbe5421f0801396d666b7ef1af",
        "md5": "e955eaa5b1df4e97cb3fa2a98263bfee",
        "sha256": "cbf15c271303f95023802f2ef1cb095486a460511dc03d6ed748ce0443089b0a"
      },
      "downloads": -1,
      "filename": "mka142_apprise-0.9.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e955eaa5b1df4e97cb3fa2a98263bfee",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=2.7",
      "size": 995245,
      "upload_time": "2021-08-21T13:42:23",
      "upload_time_iso_8601": "2021-08-21T13:42:23.746554Z",
      "url": "https://files.pythonhosted.org/packages/d0/a9/3ed1a8749d879e00affba507f00dd4069ddbe5421f0801396d666b7ef1af/mka142_apprise-0.9.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d12387bde6e9488c3cf39f4e7c315acc00aac510b6df81ce186365df2ce4b99",
        "md5": "17a151a7c41f95765cabb7d43fb3cba5",
        "sha256": "57bf21a16703411555b599ff0fe5d42a8dfea4243d192aa2b5db4f384c91ac54"
      },
      "downloads": -1,
      "filename": "mka142-apprise-0.9.4.tar.gz",
      "has_sig": false,
      "md5_digest": "17a151a7c41f95765cabb7d43fb3cba5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 1360435,
      "upload_time": "2021-08-21T13:42:26",
      "upload_time_iso_8601": "2021-08-21T13:42:26.278782Z",
      "url": "https://files.pythonhosted.org/packages/1d/12/387bde6e9488c3cf39f4e7c315acc00aac510b6df81ce186365df2ce4b99/mka142-apprise-0.9.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}