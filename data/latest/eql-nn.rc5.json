{
  "info": {
    "author": "Kristof Pusztai",
    "author_email": "kpusztai@berkeley.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![GitHub release (latest by date)](https://img.shields.io/github/v/release/KristofPusztai/EQL?style=plastic)\n![PyPI - License](https://img.shields.io/pypi/l/EQL-NN)\n![GitHub issues](https://img.shields.io/github/issues/KristofPusztai/EQL)\n# Introduction:\n\nA tensorflow implementation of the Equation Learner Neural Network based model:\n![Imgur](https://i.imgur.com/L77pz3d.png)\n- https://arxiv.org/pdf/1610.02995.pdf\n\n# Functionality:\n### Installation:\npip:\n\n    pip install EQL-NN\nor from github:\n    \n    git clone https://github.com/KristofPusztai/EQL.git\nNavigate to cloned directory and run setup.py\n    \n    sudo python setup.py install\n\n### Creating and training a model:\n\n    from EQL.model import EQL\n    EQLmodel = EQL(num_layers = 2, dim=5, v = [1,1]) # num_layers -> hidden_layers, dim -> dimension of input, v -> number of binary inputs\n    x = tf.random_normal_initializer()(shape=(100, 5))\n    y = tf.random_normal_initializer()(shape=(100, 1))\n    \n    EQLmodel.build_and_compile(self, metrics=None, loss_weights=None, weighted_metrics=None,\n                               run_eagerly=None, kernel_regularizer=None,\n                               w_init='random_normal', b_init='random_normal, exclude=None) # exclude specifies activation function exclusions in layers\n                               \n    EQLmodel.fit(x, y, lmbda, t0=100, t1=0, t2=0, initial_epoch=0, verbose=0, batch_size=None, callbacks=None,\n            validation_split=0.0, validation_data=None, shuffle=True, class_weight=None,\n            sample_weight=None, steps_per_epoch=None,\n            validation_steps=None, validation_batch_size=None, validation_freq=1,\n            max_queue_size=10, workers=1, use_multiprocessing=False, atol=0.01)\n    \n### Prediction:\n    \n    EQLmodel.predict(x, batch_size=None, verbose=0, steps=None, \n                     callbacks=None, max_queue_size=10,\n                     workers=1, use_multiprocessing=False)\n    \nNote: use tensor input for maximum computational efficiency\n\n### Model Information:\nThere are a variety of methods for understanding what is going on\nin your model.\n\n    EQLmodel.summary() # Provides tensorflow summary\n    EQLmodel.count_params() # Provides # trainable params\n    EQLmodel.get_weights(layer) #returns array of layer values\n    EQLmodel.set_weights(layer, weights) #sets weights of specified layer\n    \n    EQLmodel.evaluate(x=None, y=None, batch_size=None, verbose=1,\n                      sample_weight=None, steps=None,\n                      callbacks=None, max_queue_size=10, \n                      workers=1, use_multiprocessing=False,\n                      return_dict=False)\n    # Returns the loss value & metrics values for the model\n    \nCan also access the tensorflow model directly to use other TensorFlow functions such as saving:\n    \n    EQLmodel.model.save('path/to/save')\n## Implementation Notes:\nTraining regiment is interpretted as debiased LASSO:\n- T0 epochs are normal training, no regularization\n- T1 epochs are L1 regularized training, continuing where T0 ended\n- T2 epochs are L0 (weights with values close to 0, |w| < atol, are rounded to 0 and left untrained) regularized training, continuing from T1\n\nCheck out the jupyter notebook for examples on learning sinusoidal functions:\nhttps://github.com/KristofPusztai/EQL/blob/master/Jupyter%20Notebooks/EQLtest.ipynb",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/KristofPusztai/EQL",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "EQL-NN",
    "package_url": "https://pypi.org/project/EQL-NN/",
    "platform": "",
    "project_url": "https://pypi.org/project/EQL-NN/",
    "project_urls": {
      "Homepage": "https://github.com/KristofPusztai/EQL"
    },
    "release_url": "https://pypi.org/project/EQL-NN/1.9.6/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A Tensorflow implementation of the Equation Learning Based Neural Network Model",
    "version": "1.9.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9479176,
  "releases": {
    "1.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7fb525a9f68c4cf181631842a2b3685e2301d34f8f9c519443e40e6cc093814",
          "md5": "299c9c3cd8a609603c54ca84b51329c3",
          "sha256": "164993dc8c790d5232fbb943cac0a053a60db0bd2d057db9e6478a274b8041bf"
        },
        "downloads": -1,
        "filename": "EQL_NN-1.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "299c9c3cd8a609603c54ca84b51329c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9481,
        "upload_time": "2020-12-30T22:29:55",
        "upload_time_iso_8601": "2020-12-30T22:29:55.254455Z",
        "url": "https://files.pythonhosted.org/packages/d7/fb/525a9f68c4cf181631842a2b3685e2301d34f8f9c519443e40e6cc093814/EQL_NN-1.9.2.tar.gz",
        "yanked": true,
        "yanked_reason": "Update readme"
      }
    ],
    "1.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04cafde28580388957d7ce022519d57b8f6ce39d0d6001718f33688bf6d68ec7",
          "md5": "10aaccdadcc9174baa97999497ef6686",
          "sha256": "d1c2575fe8d7a12d0c96497dbf9eb29c5bf654816d639b40a888618fb4580d20"
        },
        "downloads": -1,
        "filename": "EQL-NN-1.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "10aaccdadcc9174baa97999497ef6686",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9484,
        "upload_time": "2020-12-30T22:35:54",
        "upload_time_iso_8601": "2020-12-30T22:35:54.181997Z",
        "url": "https://files.pythonhosted.org/packages/04/ca/fde28580388957d7ce022519d57b8f6ce39d0d6001718f33688bf6d68ec7/EQL-NN-1.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2624d3fd4c24daac08678d924fd496ab15cf2d679e4f2f459fc1081430fa272",
          "md5": "b9762481b5b4bb414c0c2540855a3931",
          "sha256": "6f20dfb8f4109e4523e27ddbfa1d78288969644f1f0022820d7af3ba38aea729"
        },
        "downloads": -1,
        "filename": "EQL-NN-1.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b9762481b5b4bb414c0c2540855a3931",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9550,
        "upload_time": "2021-01-13T15:15:35",
        "upload_time_iso_8601": "2021-01-13T15:15:35.279240Z",
        "url": "https://files.pythonhosted.org/packages/d2/62/4d3fd4c24daac08678d924fd496ab15cf2d679e4f2f459fc1081430fa272/EQL-NN-1.9.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8aa65cecd0f0548af170917aa0bf75a8ab9e7ff9b3a849b29161dfe8c458114",
          "md5": "e7cdc87dbd4d1cdf18bed7a2d8630e5c",
          "sha256": "3ac18307c3450e7d3637054b7ff5fe4068643d09b8810c74a040a002637664b9"
        },
        "downloads": -1,
        "filename": "EQL-NN-1.9.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e7cdc87dbd4d1cdf18bed7a2d8630e5c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9594,
        "upload_time": "2021-01-13T15:31:57",
        "upload_time_iso_8601": "2021-01-13T15:31:57.719731Z",
        "url": "https://files.pythonhosted.org/packages/e8/aa/65cecd0f0548af170917aa0bf75a8ab9e7ff9b3a849b29161dfe8c458114/EQL-NN-1.9.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d972dad649ca37b6f26d77e26d51face941d07f8a68516d983c48002b59d3578",
          "md5": "a50c02c61268a09edc812046183cd70b",
          "sha256": "d214470f845bec30b153cf324b28090c49ce1d090eb65508fbf563e8dd538763"
        },
        "downloads": -1,
        "filename": "EQL-NN-1.9.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a50c02c61268a09edc812046183cd70b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9733,
        "upload_time": "2021-02-21T05:03:36",
        "upload_time_iso_8601": "2021-02-21T05:03:36.405009Z",
        "url": "https://files.pythonhosted.org/packages/d9/72/dad649ca37b6f26d77e26d51face941d07f8a68516d983c48002b59d3578/EQL-NN-1.9.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d972dad649ca37b6f26d77e26d51face941d07f8a68516d983c48002b59d3578",
        "md5": "a50c02c61268a09edc812046183cd70b",
        "sha256": "d214470f845bec30b153cf324b28090c49ce1d090eb65508fbf563e8dd538763"
      },
      "downloads": -1,
      "filename": "EQL-NN-1.9.6.tar.gz",
      "has_sig": false,
      "md5_digest": "a50c02c61268a09edc812046183cd70b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9733,
      "upload_time": "2021-02-21T05:03:36",
      "upload_time_iso_8601": "2021-02-21T05:03:36.405009Z",
      "url": "https://files.pythonhosted.org/packages/d9/72/dad649ca37b6f26d77e26d51face941d07f8a68516d983c48002b59d3578/EQL-NN-1.9.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}