{
  "info": {
    "author": "8go",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications :: Chat"
    ],
    "description": "# PRE-INSTALLATION\n\nBefore you install `matrix-commander` with `pip install matrix-commander`\nyou *must* have followed these prerequisites steps! Otherwise `pip` will fail.\n\n- Note that even if you install via `pip` you must have a) Python 3.8+\n  and b) `libolm` installed.\n- Run `python -V` to get your Python version number and assure that it is\n  3.8+.\n- For e2ee support, python-olm is needed which requires the libolm C\n  library (version 3.x). See also https://gitlab.matrix.org/matrix-org/olm.\n  Make sure that version 3 is installed. Version 2 will not work.\n  To install `libolm` do this:\n  - On Debian, Ubuntu and Debian/Ubuntu derivative distributions: `sudo apt install libolm-dev`\n  - On Fedora or Fedora derivative distributions do: `sudo dnf install libolm-devel`\n  - On MacOS use brew: `brew install libolm`\n\n- For macOS Monterey 12.4 (21F79) (Apple M1 Pro) and similar please follow\n  these steps for installation:\n\n  - Install `libolm`, `dbus` and `libmagic` using Homebrew:\n      - `brew install libolm dbus libmagic`\n  - Install `matrix-commander` using this command:\n      - `pip3 install --global-option=build_ext --global-option=\"-I/opt/homebrew/include/\" --global-option=\"-L/opt/homebrew/lib/\" matrix-commander`\n  - For more details see Issue #79. Thanks to @KizzyCode for the contribution.\n\n- For macOS x86_64 and similar please follow these steps for installation:\n\n  - `brew install libolm dbus libmagic`\n  - `pip3 install poetry`\n  - `pip3 install --global-option=build_ext --global-option=\"-I/usr/local/include/\" --global-option=\"-L/usr/local/lib/\" matrix-commander`\n  - Notice that the Link and Include directories between ARM (M1, etc.)\n    and x86-64 are different.\n    So, check for example where file `olm.h` is located on your hard disk.\n    That gives you a hint which Include directory to use.\n  - For more details see Issue #103. Thanks to @johannes87 for the contribution.\n\n- Installing dependencies of `matrix-commander-tui`\n  - `matrix-commander-tui` requires that you install `vipe` from the packge `moreutils`.\n    - Read https://www.putorius.net/moreutils.html for installation instructions.\n    - As an alternative you could also install `vipe.sh` from https://github.com/0mp/vipe.sh/blob/master/vipe.sh.\n  - `matrix-commander-tui` requires that you install `fzf`.\n    - Read https://github.com/junegunn/fzf#installation for installation instructions.\n\n[![PyPI - Python Version](\nhttps://img.shields.io/pypi/pyversions/matrix-commander?color=red)](\nhttps://www.python.org/)\n[![Built with matrix-nio](\nhttps://img.shields.io/badge/built%20with-matrix--nio-darkgreen)](\nhttps://github.com/poljar/matrix-nio)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](\nhttps://github.com/psf/black)\n[![Docker Pulls](https://img.shields.io/docker/pulls/matrixcommander/matrix-commander)](\nhttps://hub.docker.com/r/matrixcommander/matrix-commander/)\n[![PyPI - Version](https://img.shields.io/pypi/v/matrix-commander?color=darkblue)](\nhttps://pypi.org/project/matrix-commander)\n[![PyPI - Downloads](\nhttps://img.shields.io/pypi/dm/matrix-commander?color=darkblue&label=PyPi%20Downloads\n)](https://pypi.org/project/matrix-commander)\n[![Nix: package](https://img.shields.io/badge/Nix-package-6fa8dc.svg)](\nhttps://search.nixos.org/packages?query=matrix-commander)\n\n<p>\n<img\nsrc=\"https://raw.githubusercontent.com/8go/matrix-commander/master/logos/mc.svg\"\nalt=\"MC> logo\" height=\"150\">\n\n<p>\n<a href=\"https://matrix.org/docs/projects/client/matrix-commander\">\n<img src=\"https://matrix.org/docs/projects/images/made-for-matrix.png\"\nalt=\"made for Matrix\" height=\"100\"></a>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<a href=\"https://pypi.org/project/matrix-commander/\">\n<img src=\"https://pypi.org/static/images/logo-large.6bdbb439.svg\"\nalt=\"get it on PyPi\" height=\"100\"></a>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<a href=\"https://hub.docker.com/r/matrixcommander/matrix-commander\">\n<img src=\"https://www.unixtutorial.org/images/software/docker-hub.png\"\nalt=\"get it on Docker Hub\" height=\"100\"></a>\n</p>\n\n# :loudspeaker: :new: :boom: Latest News! :fire: :mega: :tada:\n\n- `matrix-commander` now available on\n  [Docker Hub](https://hub.docker.com/r/matrixcommander/matrix-commander)\n  and hence easy to install as docker image (:clap: to @pataquets for his PR).\n  Install via `docker pull matrixcommander/matrix-commander`.\n- `matrix-commander` now available on\n  [PyPi](https://pypi.org/project/matrix-commander/)\n  and hence easy to install via `pip install matrix-commander`\n- available as reproducible\n  [Nix package](https://search.nixos.org/packages?query=matrix-commander)\n  for NixOS, Debian, Fedora, etc.\n- `matrix-commander` is now callable from a Python program as well.\n  See [tests/test-send.py](\n  https://github.com/8go/matrix-commander/blob/master/tests/test-send.py)\n  for an example on how to do that.\n- announcing `matrix-commander-rs` :crab:, `matrix-commander` but in Rust.\n  See [matrix-commander-rs](https://github.com/8go/matrix-commander-rs).\n  Please :star: it if you like the idea. Please contribute if you can,\n  please :pray: Thank you!\n  :heart:\n- announcing `nostr-commander-rs`, similar idea as `matrix-commander` but\n  for the [nostr protocol](https://github.com/nostr-protocol/nostr).\n  See [nostr-commander-rs](https://github.com/8go/nostr-commander-rs).\n  Please :star: it if you like the idea. Please contribute if you can,\n  please :pray: Thank you!\n  :heart:\n- announcing a new tool! `matrix-commander-tui`. Since `matrix-commander` now\n  has more than 90 options this textual UI tool for the terminal\n  helps you build your command. Run `matrix-commander-tui`,\n  select the desired options in the desired order via fzf, then adjust your\n  selection, and then run your interactively built command.\n\n# Summary, TLDR\n\nThis simple Matrix client written in Python allows you to send and\nreceive messages and files, verify other devices, and interact with\nyour Matrix account or other Matrix users in many ways.\nYou use it from the terminal (CLI) or integrate it into other simple\nPython programs. Enjoy and please :star: star on Github.\n\n# matrix-commander\n\nSimple but convenient CLI-based Matrix client app for sending, receiving,\ncreating rooms, inviting, verifying, and so much more.\n\n- `matrix-commander` is a simple command-line [Matrix](https://matrix.org/)\n  client.\n- It is a simple but convenient app to\n    - send Matrix text messages as well as text, image, audio, video or\n      other arbitrary files\n    - listen to and receive Matrix messages, images, audio, video, etc.\n    - download media files like images or audio\n    - perform Matrix emoji verification\n    - performs actions of rooms (create rooms, invite to rooms, etc.)\n    - list rooms and room members\n    - and much more\n- It exclusively offers a command-line interface (CLI).\n- Hence the word-play: matrix-command(lin)er\n- There is no GUI and there are no windows (except for pop-up windows in\n  OS notification)\n- It uses the [matrix-nio](https://github.com/poljar/matrix-nio/) SDK\n- Both `matrix-nio` and `matrix-commander` are written in Python 3\n- Convenient to install via `pip`.\n\n# What for? Why? For whom? Use cases?\n\nUse cases for this program could be\n- a bot or part of a bot,\n- to automate sending via programs and scripts\n- `matrix-nio show case`: as educational material that showcases the use\n  of the `matrix-nio` SDK\n- `alerter`: to send all sorts of alerts,\n- `Gitlab CI automation tool`: some user uses it as Gitlab CI automation tool\n   to report build success/failure to their internal Matrix room.\n   See [Issue #81](https://github.com/8go/matrix-commander/issues/81).\n- `admin tool` or `automation tool`: you needs to create 175 room for the\n   roll-out within a company? You want to query some 9000 rooms for\n   visibility data? You want to collect profile data of 7000 enterprise or\n   public users? `matrix-commander` has many admin capabilities and can\n   automate many tasks completely. Many admin jobs can be reduced to running\n   a simple bash script or a simple Python program using `matrix-commander`.\n- `reminder`: send yourself or others daily/weekly reminders via a cron job.\n- `surf report`: an addict surfer uses `matrix-commander` combined with a\n   `cron` job to publish daily early morning surf reports for his 3 favorite\n   surfing spots to his Element app.\n- `juke box`: a user told me he has a large collection of mp3 files on his\n  server. He uses `matrix-commander` to send himself a random song from\n  his music collection to brighten his day.\n- `ticker`: many people send themselves stock prices from one of the many\n  public ticker APIs. This is usually a single `curl` command piped into\n  `matrix-commander`.\n- `poor-man's Matrix client`: if you love the terminal and are too lazy to\n   start up an Element desktop app or an Element webpage,\n   `matrix-commander` is a a trivial way to fire off some instant\n   messages to your friends from the terminal.\n- `poor-man's importer or exporter`: you want to get things in and out of\n   Matrix?\n   Send those 39 holiday picture you have laying around in a holiday folder?\n   Or, your best friend just sent you 57 wedding pictures on Element and\n   you want to store them? `matrix-commander` can help with importing and\n   exporting data.\n- `poor man's blogger`: a \"blogger\" who frequently sends messages and\n  images to the same public room(s) could use `matrix-commander` to keep\n  his audience informed.\n- `poor man's diary`: a person could write a diary or run a gratitude\n  journal by sending messages to her/his own diary room or gratitude room.\n- `ghost`: `matrix-commander` can be used in an ephemeral fashion, in a\n  fire-and-forget style. A single batch command can log in, create a\n  new device, send a message, and then log out and delete the device.\n\n# Give it a Star\n\nIf you like it, use it, fork it, make a Pull Request or contribute.\nPlease give it a :star: on Github right now so others find it more easily.\n:heart:\n\n\n# Features\n\n- CLI, Command Line Interface\n- Python 3\n- Simplicity\n- Small footprint, small application (only around 250K)\n- Uses `nio-template`\n- End-to-end encryption\n- Storage for End-to-end encryption\n- Storage of credentials\n- Supports access token instead of password\n- Supports SSO (Single Sign-On)\n- Sending messages\n- Sending notices\n- Sending formatted messages\n- Sending MarkDown messages\n- Message splitting before sending\n- Sending Code-formatted messages\n- Sending to one room\n- Sending to multiple rooms\n- Sending image files (photos, etc.)\n- Sending of media files (music, videos, etc.)\n- Sending of arbitrary files (PDF, xls, doc, txt, etc.)\n- Sending events such as emoji reactions, or replies as threads\n- Using events to edit sent messages\n- Supports creating private DM rooms (thanks to PR from @murlock1000)\n- Supports DM (direct messaging), sending DMs, listening for DMs\n- Listing of joined rooms\n- Listing of members of given room(s)\n- Receiving messages forever\n- Receiving messages once\n- Receiving last messages\n- Receiving or skipping its own messages\n- Receiving and downloading media files\n  - including automatic decryption\n- Creating new rooms\n- Joining rooms\n- Leaving rooms\n- Forgetting rooms\n- Inviting other users to rooms\n- Banning from rooms\n- Unbanning from rooms\n- Kicking from rooms\n- Supports renaming of device\n- Supports getting and setting display name\n- Supports getting and setting presence\n- Uploading, downloading, and deleting to/from resource depository\n- Listing your devices\n- Listing discovery info\n- Listing available login methods supported by server\n- Supports skipping SSL verification to use HTTP instead of HTTPS\n- Supports providing local SSL certificate files\n- Supports notification via OS of received messages\n- Supports periodic execution via crontab\n- Supports room aliases\n- Supports multiple output formats like `text` (for human consumption)\n  and `json` (for machine consumption and further processing)\n- Provides PID files\n- Logging (at various levels)\n- In-source documentation\n- Can be run as a service\n- Smart tab completion for shells like bash (thanks to PR from @mizlan :clap:)\n- TUI tool for building commands (`matrix-commander-tui`)\n- More than 90 options\n- More than 300 stars :stars: on Github\n- Easy installation, available through `pip`, i.e. available in\n  [PyPi](https://pypi.org/project/matrix-commander/) store\n- Easy installation, available as docker image on\n  [Docker Hub](https://hub.docker.com/r/matrixcommander/matrix-commander)\n  (thanks to PR from @pataquets :clap:)\n- Easy installation, available in Nix repository as reproducible\n  [Nix package](https://search.nixos.org/packages?query=matrix-commander)\n- Callable from the terminal, from shells like `bash`, etc.\n- Callable from Python programs via the entry point (function) `main`.\n- Open source\n- Free, GPL3+ license\n\n# First Run, Set Up, Credentials File, End-to-end Encryption\n\nOn the first run `matrix-commander` must be executed with the\n`--login` argument and the corresponding secondary arguments.\nThis creates a credentials.json file.\nThe credentials.json file stores: homeserver, user id,\naccess token, device id, and default room id. On the first run,\nthe --login run, it asks some questions if not everything is\nprovided by arguments, creates the token and device id\nand stores everything in the credentials.json file. If desired,\nall arguments can be provided via arguments to that log in can\nbe performed fully in batch.\n\nSince the credentials file holds an access token it\nshould be protected and secured. One can use different\ncredential files for different users or different rooms.\n\nOn creation the credentials file will by default be created in the local\ndirectory, so the users sees it right away. This is fine if you have\nonly one or a few credential files, but for better maintainability\nit is suggested to place your credentials files into directory\n$HOME/.config/matrix-commander/. When the program looks for\na credentials file it will first look in local directory and then\nas secondary choice it will look in directory\n$HOME/.config/matrix-commander/.\n\nIf you want to re-use an existing device id and an existing\naccess token, you can do so as well, just manually edit the\ncredentials file. However, for end-to-end encryption this will\nNOT work.\n\nEnd-to-end encryption (e2ee) is enabled by default. It cannot be turned off.\nWherever possible end-to-end encryption will be used. For e2ee to work\nefficiently a `store` directory is needed to store e2ee data persistently.\nThe default location for the store directory is a local directory named\n`store`. Alternatively, as a secondary choice the program looks for a store\ndirectory in $HOME/.local/shared/matrix-commander/store/. The user can always\nspecify a different location via the --store argument. The `store`\ndirectory will usually be created on the first run.\n\nFor specific use cases end-to-end encryption can be disabled. Please see\ndescription of flag `--plain` for details.\n\nFrom the second time the program is run, and on all\nfuture runs it will use the homeserver, user id\nand access token found in the credentials file to log\ninto the Matrix account. Now this program can be used\nto easily send simple text messages, images, and so forth\nto the just configured room.\n\n# Verification\n\nAs second step after the `--login`, it is recommended to perform an\nemoji verification by running `--verify`. Verification is always\ninteractive, bacause the emojis need to be confirmed via the keyboard.\nIf desired `--login` and `--verify` can be done in the same first run.\nThe program can accept verification request and verify other devices\nvia emojis. See `--verify` in help for more details.\n\n# Room Operations, Actions on Rooms\n\nThe program can create rooms, join, leave and forget rooms.\nIt can also send invitations to join rooms to\nothers (given that user has the appropriate permissions) as\nwell as ban, unban and kick other users from rooms.\n\n# Sending\n\nMessages to send can be provided\n1) in the command line (-m or --message)\n2) as input from the keyboard (if there is no other input or command)\n3) through a pipe from stdin (|), i.e. piped in from another program.\n\nFor sending messages the program supports various text formats:\n1) text: default\n2) html:  HTML formatted text\n3) markdown: MarkDown formatted text\n4) code: used a block of fixed-sized font, ideal for ASCII art or\n   tables, bash outputs, etc.\n5) notification\n6) split: splits messages into multiple units at given pattern\n\nPhotos and images that can be sent. That includes files like\n.jpg, .gif, .png or .svg.\n\nArbitrary files like .txt, .pdf, .doc, audio files like .mp3\nor video files like .mp4 can also be sent.\n\nMatrix events like sending an emoji reaction, replying as a thread,\nmessage edits can be sent.\n\n# Listening, Receiving\n\nOne can listen to one or multiple rooms. Received messages will be displayed\non the screen. If desired, optionally, you can be notified of incoming\nmessages through the operating system standard notification system, usually a\nsmall pop-up window.\n\nMessages can be received or listened to various ways:\n1) Forever: the program runs forever, listens forever, and prints all\n   messages as they arrive in real-time.\n2) Once: the program prints all the messages that are waiting in the queue,\n   i.e. all messages that have been sent in, and after printing them the\n   program terminates.\n3) Tail: prints the last N read or unread messages of one or multiple\n   specified rooms and after printing them the program terminates.\n\nWhen listening to messages you can also choose to download and decrypt\nmedia. Say, someone is sending a song. The mp3 file can be downloaded\nand automatically decrypted for you.\n\n# Dependencies and Installation\n\n- If you install via `pip`, then `pip` will take care of most of the\n  dependencies.\n  - See https://pypi.org/project/matrix-commander\n  - Usually `pip install matrix-commander` will do the trick.\n  - But, note that even if you install via `pip` you must have a) Python 3.8+\n    and b) `libolm` installed. See `PyPi-Instructions.md`.\n  - Run `python -V` to get your Python version number and assure that it is\n    3.8+.\n  - For e2ee support, python-olm is needed which requires the libolm C\n    library (version 3.x). See also https://gitlab.matrix.org/matrix-org/olm.\n    Make sure that version 3 is installed. Version 2 will not work.\n    To install `libolm` do this:\n    - On Debian, Ubuntu and Debian/Ubuntu derivative distributions:\n      `sudo apt install libolm-dev`\n    - On Fedora or Fedora derivative distributions do:\n      `sudo dnf install libolm-devel`\n    - On MacOS use brew:\n      `brew install libolm`\n\n- For macOS Monterey 12.4 (21F79) (Apple M1 Pro) and similar please follow\n  these steps for installation:\n\n  - Install `libolm`, `dbus` and `libmagic` using Homebrew:\n      - `brew install libolm dbus libmagic`\n  - Install `matrix-commander` using this command:\n      - `pip3 install --global-option=build_ext --global-option=\"-I/opt/homebrew/include/\" --global-option=\"-L/opt/homebrew/lib/\" matrix-commander`\n  - For more details see Issue #79. Thanks to @KizzyCode for the contribution.\n\n- For macOS x86_64 and similar please follow these steps for installation:\n\n  - `brew install libolm dbus libmagic`\n  - `pip3 install poetry`\n  - `pip3 install --global-option=build_ext --global-option=\"-I/usr/local/include/\" --global-option=\"-L/usr/local/lib/\"  matrix-commander`\n  - Notice that the Link and Include directories between ARM (M1, etc.)\n    and x86-64 are different.\n    So, check for example where file `olm.h` is located on your hard disk.\n    That gives you a hint which Include directory to use.\n  - For more details see Issue #103. Thanks to @johannes87 for the contribution.\n\n- If you install a docker image: `matrix-commander` is available on\n  [Docker Hub](https://hub.docker.com/r/matrixcommander/matrix-commander)\n  and hence easy to install as docker image (:clap: to @pataquets for his PR).\n  Install via `docker pull matrixcommander/matrix-commander`.\n\n- If you install it via `git` or via file download then these are the\n  dependencies that you must take care of:\n\n    - Python 3.8 or higher installed (3.7 will NOT work)\n    - libolm-dev must be installed as it is required by matrix-nio\n      - libolm-dev on Debian/Ubuntu, libolm-devel on Fedora, libolm on MacOS\n    - matrix-nio must be installed, see https://github.com/poljar/matrix-nio\n      - pip3 install --user --upgrade matrix-nio[e2e]\n    - python3 package markdown must be installed to support MarkDown format\n      - pip3 install --user --upgrade markdown\n    - python3 package python_magic must be installed to support image sending\n      - pip3 install --user --upgrade python_magic\n    - if (and only if) you want OS notification support, then the python3\n      package notify2 and dbus-python should be installed\n      - pip3 install --user --upgrade dbus-python # optional\n      - pip3 install --user --upgrade notify2 # optional\n    - python3 package urllib must be installed to support media download\n      - pip3 install --user --upgrade urllib\n    - python3 package pyxdg must be installed to support `XDG_*` env vars.\n      Be careful. Multiple packages install in the same directory `xdg` and\n      overwrite each other. These packages can be conflicting. Specifically,\n      packages `pyxdg` and `xdg` collide. If you already have `xdg` installed\n      you cannot just simply install `pyxdg`; in this case you should opt\n      for a separate Python environment.\n      - pip3 install --user --upgrade pyxdg\n    - `matrix_commander/matrix_commander.py` file must be installed, and should\n      have execution permissions\n      - chmod 755 matrix_commander.py\n    - `matrix_commander/matrix-commander` file is recommended for the install,\n      and should have execution permissions\n      - chmod 755 matrix-commander\n    - for a full list or requirements look at the `requirements.txt` file\n      - run `pip install -r requirements.txt` to automatically install\n        all required Python packages\n      - if you e.g. run on a headless server and don't want dbus-python and\n        notify2, please remove the corresponding 2 lines from\n        the `requirements.txt` file\n\n- Installing dependencies of `matrix-commander-tui`\n  - `matrix-commander-tui` requires that you install `vipe` from the packge `moreutils`.\n    - Read https://www.putorius.net/moreutils.html for installation instructions.\n    - As an alternative you could also install `vipe.sh` from https://github.com/0mp/vipe.sh/blob/master/vipe.sh.\n  - `matrix-commander-tui` requires that you install `fzf`.\n    - Read https://github.com/junegunn/fzf#installation for installation instructions.\n\n# Documentation and Resources\n\n- There are 4 level of details for the documentation. In sorted order from\n  short summary to long details:\n  - Just the options, no explanation:\n    `matrix-commander --usage` or\n    [online](https://github.com/8go/matrix-commander/blob/master/help.usage.txt)\n    on Github\n  - One-liner explanations for each option:\n    `matrix-commander --help` or\n      [online](https://github.com/8go/matrix-commander/blob/master/help.help.txt)\n      on Github\n  - Detailed verbose explanations for each option, like a man-page:\n    `matrix-commander --manual` or\n    [online](https://github.com/8go/matrix-commander/blob/master/help.manual.txt)\n    on Github\n  - Full documentation, installation, examples, use-cases, etc.:\n    `matrix-commander --readme` or\n    [online](https://github.com/8go/matrix-commander/blob/master/README.md)\n    on Github\n\n# Examples of calling `matrix-commander`\n\n- Alternative 1: Usually `matrix-commander` is called from a terminal\n  inside a shell like `bash`, `sh`, `zsh`, your Windows CMD terminal\n  or similar. You will find plenty of examples how to use it within\n  a terminal just a few lines down.\n  Or invoke it via the TUI (Terminal User Interface) tool `matrix-commander-tui`.\n- Alternative 2: Sometimes, however, it might be more convenient to call\n  `matrix-commander` from within a Python program. This is also possible.\n  Import the Python module `matrix_commander` and use the provided\n  entry point `main`. An example of how this can be done can be found\n  in [tests/test-send.py](\n  https://github.com/8go/matrix-commander/blob/master/tests/test-send.py).\n\n```\n$ matrix-commander --login password # first run; will configure everything\n$ matrix-commander --login sso # alternative first run with Single Sign-On;\n$   # this will configure everything on a headless server w/o a browser\n$ # this created a credentials.json file, and a store directory.\n$ # optionally, if you want you can move credentials to app config directory\n$ mkdir $HOME/.config/matrix-commander # optional\n$ mv -i credentials.json $HOME/.config/matrix-commander/\n$ # optionally, if you want you can move store to the app share directory\n$ mkdir $HOME/.local/share/matrix-commander # optional\n$ mv -i store $HOME/.local/share/matrix-commander/\n$ # Now you are ready to run program for a second time\n$ # Let us verify the device/room to where we want to send messages\n$ # The other device will issue a \"verify by emoji\" request\n$ matrix-commander --verify\n$ # Now program is both configured and verified, let us send the first message\n$ matrix-commander -m \"First message!\"\n$ matrix-commander --debug -m \"First message!\" # turn debugging on\n$ # turn debugging on also for submodules\n$ matrix-commander --debug --debug -m \"First message!\"\n$ # turn debugging on, high verbosity\n$ matrix-commander --debug --verbose -m \"First message!\"\n$ # turn debugging on, very high verbosity\n$ matrix-commander --debug --verbose --verbose -m \"First message!\"\n$ # maximum debugging info\n$ matrix-commander --debug --debug --verbose --verbose -m \"First message!\"\n$ matrix-commander --help # print help\n$ matrix-commander # this will ask user for message to send\n$ matrix-commander --message \"Hello World!\" # sends provided message\n$ echo \"Hello World\" | matrix-commander # pipe input msg into program\n$ matrix-commander -m msg1 -m msg2 # sends 2 messages\n$ matrix-commander -m msg1 msg2 msg3 # sends 3 messages\n$ df -h | matrix-commander --code # formatting for code/tables\n$ matrix-commander -m \"<b>BOLD</b> and <i>ITALIC</i>\" --html\n$ matrix-commander -m \"- bullet1\" --markdown\n$ # take input from an RSS feed and split large RSS entries into multiple\n$ # Matrix messages wherever the pattern \"\\n\\n\\n\" is found\n$ rssfeed | matrix-commander --split \"\\n\\n\\n\"\n$ matrix-commander --credentials usr1room2.json # select credentials file\n$ matrix-commander --store /var/storage/ # select store directory\n$ # Send to a specific room\n$ matrix-commander -m \"hi\" --room '!YourRoomId:example.org'\n$ # some shells require the ! of the room id to be escaped with \\\n$ matrix-commander -m \"hi\" --room \"\\!YourRoomId:example.org\"\n$ # Send to multiple rooms\n$ matrix-commander -m \"hi\" -r '!r1:example.org' '!r2:example.org'\n$ # Send to multiple rooms, another way\n$ matrix-commander -m \"hi\" -r '!r1:example.org' -r '!r2:example.org'\n$ # Send to a specific user, DM, direct messaging, using full user id\n$ matrix-commander -m \"hi\" --user '@MyFriend:example.org'\n$ # Send to a specific user, DM, direct messaging, using partial user id\n$ # It will be assumed that user @MyFriend is on same homeserver\n$ matrix-commander -m \"hi\" --user '@MyFriend'\n$ # Send to a specific user, DM, direct messaging, using display name\n$ # Careful! Display names might not be unique. Don't DM the wrong person!\n$ # To double-check the display names do a --joined-members \"*\"\n$ matrix-commander -m \"hi\" -u 'Joe'\n$ # Send to multiple users\n$ matrix-commander -m \"hi\" -u '@Joe:example.org' '@Jane:example.org'\n$ # Send to multiple users, another way\n$ matrix-commander -m \"hi\" -u '@Joe:example.org' -u '@Jane:example.org'\n$ # send 2 images and 1 text, text will be sent last\n$ matrix-commander -i photo1.jpg photo2.img -m \"Do you like my 2 photos?\"\n$ # send 1 image and no text\n$ matrix-commander -i photo1.jpg\n$ # pipe 1 image and no text\n$ cat image1.jpg | matrix-commander -i -\n$ # send 1 audio and 1 text to 2 rooms\n$ matrix-commander -a song.mp3 -m \"Do you like this song?\" \\\n    -r '!someroom1:example.com' '!someroom2:example.com'\n$ # send 2 audios, 1 via stdin pipe\n$ audio-generator | matrix-commander -a intro.mp3 -\n$ # send a .pdf file and a video with a text\n$ matrix-commander -f example.pdf video.mp4 -m \"Here are the promised files\"\n$ # send a .pdf file via stdin pipe\n$ pdf-generator | matrix-commander -f -\n$ # listen forever, get msgs in real-time and notify me via OS\n$ matrix-commander --listen forever --os-notify\n$ # listen forever, and show me also my own messages\n$ matrix-commander --listen forever --listen-self\n$ # listen once, get any new messages and quit\n$ matrix-commander --listen once --listen-self\n$ matrix-commander --listen once --listen-self | process-in-other-app\n$ # listen to tail, get the last N messages and quit\n$ matrix-commander --listen tail --tail 10 --listen-self\n$ # listen to tail, another way of specifying it\n$ matrix-commander --tail 10 --listen-self | process-in-other-app\n$ # get the very last message\n$ matrix-commander --tail 1 --listen-self\n$ # listen to (get) all messages, old and new, and process them in another app\n$ matrix-commander --listen all | process-in-other-app\n$ # listen to (get) all messages, including own\n$ matrix-commander --listen all --listen-self\n$ # set, rename device-name, sometimes also called device display-name\n$ matrix-commander --set-device-name \"my new device name\"\n$ # set, rename display name for authenticated user\n$ matrix-commander --set-display-name \"Alex\"\n$ # get display name for authenticated user, for itself\n$ matrix-commander --get-display-name\n$ # get display name for other users\n$ matrix-commander --get-display-name  \\\n    --user '@user1:example.com' '@user2:example.com'\n$ # list all the rooms that I am a member of, all joined rooms\n$ matrix-commander --joined-rooms\n$ # list all the members of 2 specific rooms\n$ matrix-commander --joined-members '!someroomId1:example.com' \\\n    '!someroomId2:example.com'\n$ # list all the members of all rooms  that I am member of\n$ matrix-commander --joined-members '*'\n$ # set presence\n$ matrix-commander --set-presence \"unavailable\"\n$ # get presence of matrix-commander itself\n$ matrix-commander --get-presence\n$ # get presence of other users\n$ matrix-commander --get-presence \\\n    --user '@user1:example.com' '@user2:example.com'\n$ # upload file to resource repository\n$ matrix-commander --upload \"avatar.png\"\n$ # download file from resource repository via URI (MXC)\n$ matrix-commander --download \"mxc://example.com/SomeStrangeUriKey\"\n$ matrix-commander --delete-mxc mxc://... # delete image from database\n$ matrix-commander --delete-mxc-before '20.01.2022 19:38:42' 1024000\n$ # for more examples of --upload, --download, --delete-mxc,\n$ # --delete-mxc-before, --mxc-to-http, see file tests/test-upload.sh\n$ matrix-commander  --rest GET \"\" '__homeserver__/_matrix/client/versions'\n$ # for more examples of --rest see file tests/test-rest.sh\n$ matrix-commander --get-avatar # get its own avatar MXC URI\n$ # get avatar MXC URIs of other users\n$ matrix-commander --get-avatar '@user1:example.com' '@user2:example.com'\n$ matrix-commander --set-avatar mxc://... # set its own avatar MXC URI\n$ # for more examples of --set_avatar see tests/test-setget.sh\n$ matrix-commander --get-profile # get its own user profile\n$ matrix-commander --get-profile '@user1:example.com' '@user2:example.com'\n$ matrix-commander --get-room-info # get its default room info\n$ matrix-commander --get-room-info '\\!room1:example.com' \\\n    '\\!room2:example.com' # get room info for multiple rooms\n$ # map from room id to room alias\n$ matrix-commander --get-room-info '\\!roomId1:example.com'\n$ # map from room alias to room id\n$ matrix-commander --get-room-info '#roomAlias1:example.com'\n$ matrix-commander --get-client-info # get client info\n$ matrix-commander --has-permission '!someroomId1:example.com' 'ban'\n$ matrix-commander --export-keys mykeys \"my passphrase\" # export keys\n$ matrix-commander --import-keys mykeys \"my passphrase\" # import keys\n$ matrix-commander --get-openid-token # get its own OpenId token\n$ # get OpenID tokens for other users\n$ matrix-commander --get-openid-token '@user1:example.com' '@user2:example.com'\n$ matrix-commander --room-get-visibility # get default room visibility\n$ matrix-commander --room-get-visibility \\\n    '\\!someroomId1:example.com' '\\!someroomId2:example.com'\n$ matrix-commander --room-set-alias '#someRoomAlias:matrix.example.org'\n$ matrix-commander --room-set-alias 'someRoomAlias' \\\n    '\\!someroomId1:example.com'\n$ matrix-commander --room-resolve-alias '#someRoomAlias:matrix.example.org'\n$ matrix-commander --room-resolve-alias '#someRoomAlias1:matrix.example.org' \\\n    'someRoomAlias2'\n$ matrix-commander --room-delete-alias '#someRoomAlias:matrix.example.org'\n$ matrix-commander --room-delete-alias '#someRoomAlias1:matrix.example.org' \\\n    'someRoomAlias2'\n$ matrix-commander --room-get-state # get state of default room\n$ matrix-commander --room-get-state \\\n    '\\!someroomId1:example.com' '\\!someroomId2:example.com'\n$ matrix-commander --delete-device \"QBUAZIFURK\" --password 'mc-password'\n$ matrix-commander --delete-device \"QBUAZIFURK\" \"AUIECTSRND\" \\\n    --user '@user1:example.com' --password 'user1-password'\n$ # delete a message with event id 'someEventId'\n# matrix-commander --room-redact '!someroomId1:example.com' 'someEventId'\n$ # delete 2 images from 2 rooms\n$ matrix-commander --room-redact \\\n    '\\!someroomId1:example.com' '\\$someEventId1' 'Image deleted, obsolete info'\n    '\\!someroomId2:example.com' '\\$someEventId2' 'Image deleted, outdated'\n$ # print its own user id\n$ matrix-commander --whoami\n$ # skip SSL certificate verification for a homeserver without SSL\n$ matrix-commander --no-ssl -m \"also working without Let's Encrypt SSL\"\n$ # use your own SSL certificate for a homeserver with SSL and local certs\n$ matrix-commander --ssl-certificate mycert.crt -m \"using my own cert\"\n$ # download and decrypt media files like images, audio, PDF, etc.\n$ # and store downloaded files in directory \"mymedia\"\n$ matrix-commander --listen forever --listen-self --download-media mymedia\n$ # create rooms without name and topic, just with alias, use a simple alias\n$ matrix-commander --room-create roomAlias1\n$ # don't use a well formed alias like '#roomAlias1:example.com' as it will\n$ # confuse the server!\n$ # BAD: matrix-commander --room-create roomAlias1 '#roomAlias1:example.com'\n$ # create rooms with name and topic\n$ matrix-commander --room-create roomAlias3 --name 'Fancy Room' \\\n    --topic 'All about Matrix'\n$ matrix-commander --room-create roomAlias4 roomAlias5 \\\n    --name 'Fancy Room 4' -name 'Cute Room 5' \\\n    --topic 'All about Matrix 4' 'All about Nio 5'\n$ # create DM rooms with user.\n$ matrix-commander --room-dm-create '@user1:example.com'\n$ # create DM rooms with name, topic, alias\n$ matrix-commander --room-dm-create '@user1:example.com' '@user2:example.com' \\\n    --name 'Fancy DM room 4' -name 'Cute DM room 4' \\\n    --topic 'All about Matrix 4' 'All about Nio 5' \\\n    --alias roomAlias1 '#roomAlias2:example.com'\n$ # rooms (normal as well as DM) are by default created encrypted,\n$ # to overwrite that and to create a room with encryption disabled use --plain\n$ matrix-commander --room-create public-room-alias2 --plain\n$ matrix-commander --room-dm-create not-encrypted-alias3 --plain\n$ # join rooms\n$ matrix-commander --room-join '!someroomId1:example.com' \\\n    '!someroomId2:example.com' '#roomAlias1:example.com'\n$ # leave rooms\n$ matrix-commander --room-leave '#roomAlias1:example.com' \\\n    '!someroomId2:example.com'\n$ # forget rooms, you have to first leave a room before you forget it\n$ matrix-commander --room-forget '#roomAlias1:example.com'\n$ # invite users to rooms\n$ matrix-commander --room-invite '#roomAlias1:example.com' \\\n    --user '@user1:example.com' '@user2:example.com'\n$ # ban users from rooms\n$ matrix-commander --room-ban '!someroom1:example.com' \\\n    '!someroom2:example.com' \\\n    --user '@user1:example.com' '@user2:example.com'\n$ # unban users from rooms, remember after unbanning you have to invite again\n$ matrix-commander --room-unban '!someroom1:example.com' \\\n    '!someroom2:example.com' \\\n    --user '@user1:example.com' '@user2:example.com'\n$ # kick users from rooms\n$ matrix-commander --room-kick '!someroom1:example.com' \\\n    '#roomAlias2:example.com' \\\n    --user '@user1:example.com' '@user2:example.com'\n$ # set log levels, INFO for matrix-commander and ERROR for modules below\n$ matrix-commander -m \"test\" --log-level INFO ERROR\n$ # example of how to quote text correctly, e.g. JSON text\n$ matrix-commander -m '{title: \"hello\", message: \"here it is\"}'\n$ matrix-commander -m \"{title: \\\"hello\\\", message: \\\"here it is\\\"}\"\n$ matrix-commander -m \"{title: \\\"${TITLE}\\\", message: \\\"${MSG}\\\"}\"\n$ matrix-commander -m \"Don't do this\"\n$ matrix-commander -m 'He said \"No\" to me.'\n$ matrix-commander --separator \" || \" # customize column separator in outputs\n$ matrix-commander --mxc-to-http mxc://example.com/abc... # get HTTP\n$ matrix-commander --devices # to list devices of matrix-commander\n$ matrix-commander --discovery-info # print discovery info of homeserver\n$ matrix-commander --login-info # list login methods\n$ matrix-commander --content-repository-config # list config of content repo\n$ matrix-commander --sync off -m Test -i image.svg # a faster send\n$ matrix-commander --joined-rooms --output json | jq # get json output in JSON\n$ matrix-commander --joined-rooms --output json-max | jq # full details\n$ matrix-commander --tail 10 --output json-spec | jq # as specification\n$ matrix-commander --joined-rooms --output text # get human-readable output\n$ # example of how to use stdin, how to pipe data into the program\n$ echo \"Some text\" | matrix-commander # send a text msg via pipe\n$ echo \"Some text\" | matrix-commander -m - # long form to send text via pipe\n$ matrix-commander -m \"\\-\" # send the literal minus sign as a text msg\n$ cat image1.png | matrix-commander -i - # send an image via pipe\n$ matrix-commander -i - < image1.png # send an image via pipe\n$ cat image1.png | matrix-commander -i - -m \"text\" # send image and text\n$ # send 3 images out of which the second will be read from stdin via pipe\n$ cat im2.png | matrix-commander -i im1.jpg - im3.jpg # send 3 images\n$ echo \"text\" | matrix-commander -i im1.png # first image, then piped text\n$ echo \"text\" | matrix-commander -i im1.png -m - # same, long version\n$ pdf-generator | matrix-commander -f - -m \"Here is my PDF file.\"\n$ audio-generator | matrix-commander -a - -m \"Like this song?\"\n$ echo \"junk\" | matrix-commander -i - -m - # this will fail, not allowed\n$ # remember, pipe or stdin, i.e. the \"-\" can be used at most once\n$ cat im.png | matrix-commander -i im1.png - im3.png - im5.png # will fail\n$ # sending an event: e.g. reacting with an emoji\n$ JSON_REACT_MSC2677='{ \"type\": \"m.reaction\",\n    \"content\": { \"m.relates_to\": { \"rel_type\": \"m.annotation\",\n    \"event_id\": \"%s\", \"key\": \"%s\" } } }'\n$ TARGET_EVENT=\"\\$...a.valid.event.id\" # event to which to react\n$ REACT_EMOJI=\"😀\" # how to react\n$ printf \"$JSON_REACT_MSC2677\" \"$TARGET_EVENT\" \"$REACT_EMOJI\" |\n    matrix-commander --event -\n$ # for more examples of \"matrix-commander --event\" see tests/test-event.sh\n```\n\n# Usage\n```\nWelcome to matrix-commander, a Matrix CLI client. ─── On first run use --login\nto log in, to authenticate. On second run we suggest to use --verify to get\nverified. Emoji verification is built-in which can be used to verify devices. On\nfurther runs this program implements a simple Matrix CLI client that can send\nmessages, listen to messages, verify devices, etc. It can send one or multiple\nmessage to one or multiple Matrix rooms and/or users. The text messages can be\nof various formats such as \"text\", \"html\", \"markdown\" or \"code\". Images, audio,\narbitrary files, or events can be sent as well. For receiving there are three\nmain options: listen forever, listen once and quit, and get the last N messages\nand quit. End-to-end encryption is enabled by default and cannot be turned off,\nbut it can be disabled for specific use cases.  ─── Bundling several actions\ntogether into a single call to matrix-commander is faster than calling matrix-\ncommander multiple times with only one action. If there are both 'set' and 'get'\nactions present in the arguments, then the 'set' actions will be performed\nbefore the 'get' actions. Then send actions and at the very end listen actions\nwill be performed. ─── For even more explications and examples also read the\ndocumentation provided in the on-line Github README.md file or the README.md in\nyour local installation.  ─── For less information just use --help instead of\n--manual.\n\nusage: matrix-commander [--usage] [-h] [--manual] [--readme] [-d]\n                        [--log-level DEBUG|INFO|WARNING|ERROR|CRITICAL [DEBUG|INFO|WARNING|ERROR|CRITICAL ...]]\n                        [--verbose] [--login PASSWORD|SSO] [--verify [EMOJI]]\n                        [--logout ME|ALL] [-c CREDETIALS_FILE]\n                        [-s STORE_DIRECTORY] [-r ROOM [ROOM ...]]\n                        [--room-default DEFAULT_ROOM]\n                        [--room-create ROOM_ALIAS [ROOM_ALIAS ...]]\n                        [--room-dm-create USER [USER ...]]\n                        [--room-join ROOM [ROOM ...]]\n                        [--room-leave ROOM [ROOM ...]]\n                        [--room-forget ROOM [ROOM ...]]\n                        [--room-invite ROOM [ROOM ...]]\n                        [--room-ban ROOM [ROOM ...]]\n                        [--room-unban ROOM [ROOM ...]]\n                        [--room-kick ROOM [ROOM ...]] [-u USER [USER ...]]\n                        [--user-login USER] [--name ROOM_NAME [ROOM_NAME ...]]\n                        [--topic ROOM_TOPIC [ROOM_TOPIC ...]]\n                        [--alias ROOM_ALIAS [ROOM_ALIAS ...]]\n                        [-m TEXT [TEXT ...]] [-i IMAGE_FILE [IMAGE_FILE ...]]\n                        [-a AUDIO_FILE [AUDIO_FILE ...]] [-f FILE [FILE ...]]\n                        [-e MATRIX_JSON_OBJECT [MATRIX_JSON_OBJECT ...]] [-w]\n                        [-z] [-k] [-p SEPARATOR] [--config CONFIG_FILE]\n                        [--proxy PROXY] [-n] [--encrypted]\n                        [-l [NEVER|ONCE|FOREVER|TAIL|ALL]] [-t [NUMBER]] [-y]\n                        [--print-event-id]\n                        [--download-media [DOWNLOAD_DIRECTORY]] [--os-notify]\n                        [--set-device-name DEVICE_NAME]\n                        [--set-display-name DISPLAY_NAME] [--get-display-name]\n                        [--set-presence ONLINE|OFFLINE|UNAVAILABLE]\n                        [--get-presence] [--upload FILE [FILE ...]]\n                        [--download MXC_URI [MXC_URI ...]]\n                        [--delete-mxc MXC_URI [MXC_URI ...]]\n                        [--delete-mxc-before TIMESTAMP [TIMESTAMP ...]]\n                        [--joined-rooms] [--joined-members ROOM [ROOM ...]]\n                        [--mxc-to-http MXC_URI [MXC_URI ...]] [--devices]\n                        [--discovery-info] [--login-info]\n                        [--content-repository-config]\n                        [--rest REST_METHOD DATA URL [REST_METHOD DATA URL ...]]\n                        [--set-avatar AVATAR_MXC_URI]\n                        [--get-avatar [USER ...]] [--get-profile [USER ...]]\n                        [--get-room-info [ROOM ...]] [--get-client-info]\n                        [--has-permission ROOM BAN|INVITE|KICK|NOTIFICATIONS|REDACT|etc [ROOM BAN|INVITE|KICK|NOTIFICATIONS|REDACT|etc ...]]\n                        [--import-keys FILE PASSPHRASE FILE PASSPHRASE]\n                        [--export-keys FILE PASSPHRASE FILE PASSPHRASE]\n                        [--room-set-alias ROOM_ALIAS ROOM [ROOM_ALIAS ROOM ...]]\n                        [--room-resolve-alias ROOM_ALIAS [ROOM_ALIAS ...]]\n                        [--room-delete-alias ROOM_ALIAS [ROOM_ALIAS ...]]\n                        [--get-openid-token [USER ...]]\n                        [--room-get-visibility [ROOM ...]]\n                        [--room-get-state [ROOM ...]]\n                        [--delete-device DEVICE [DEVICE ...]]\n                        [--room-redact ROOM_ID EVENT_ID REASON [ROOM_ID EVENT_ID REASON ...]]\n                        [--whoami] [--no-ssl]\n                        [--ssl-certificate SSL_CERTIFICATE_FILE]\n                        [--file-name FILE [FILE ...]]\n                        [--key-dict KEY_DICTIONARY [KEY_DICTIONARY ...]]\n                        [--plain] [--separator SEPARATOR]\n                        [--access-token ACCESS_TOKEN] [--password PASSWORD]\n                        [--homeserver HOMESERVER_URL] [--device DEVICE_NAME]\n                        [--sync FULL|OFF] [-o TEXT|JSON|JSON-MAX|JSON-SPEC]\n                        [-v [PRINT|CHECK]]\n\nWelcome to matrix-commander, a Matrix CLI client.\n\noptions:\n  --usage               Print usage. Details:: See also --help for printing a\n                        bit more and --manual for printing a lot more detailed\n                        information.\n  -h, --help            Print help. Details:: ee also --usage for printing\n                        even less information, and --manual for printing more\n                        detailed information.\n  --manual              Print manual. Details:: See also --usage for printing\n                        the absolute minimum, and --help for printing less.\n  --readme              Print README.md file. Details:: Tries to print the\n                        local README.md file from installation. If not found\n                        it will get the README.md file from github.com and\n                        print it. See also --usage, --help, and --manual.\n  -d, --debug           Print debug information. Details:: If used once, only\n                        the log level of matrix-commander is set to DEBUG. If\n                        used twice (\"-d -d\" or \"-dd\") then log levels of both\n                        matrix-commander and underlying modules are set to\n                        DEBUG. \"-d\" is a shortcut for \"--log-level DEBUG\". See\n                        also --log-level. \"-d\" takes precedence over \"--log-\n                        level\". Additionally, have a look also at the option \"\n                        --verbose\".\n  --log-level DEBUG|INFO|WARNING|ERROR|CRITICAL [DEBUG|INFO|WARNING|ERROR|CRITICAL ...]\n                        Set the log level(s). Details:: Possible values are\n                        \"DEBUG\", \"INFO\", \"WARNING\", \"ERROR\", and \"CRITICAL\".\n                        If --log_level is used with one level argument, only\n                        the log level of matrix-commander is set to the\n                        specified value. If --log_level is used with two level\n                        argument (e.g. \"--log-level WARNING ERROR\") then log\n                        levels of both matrix-commander and underlying modules\n                        are set to the specified values. See also --debug.\n  --verbose             Set the verbosity level. Details:: If not used, then\n                        verbosity will be set to low. If used once, verbosity\n                        will be high. If used more than once, verbosity will\n                        be very high. Verbosity only affects the debug\n                        information. So, if '--debug' is not used then '--\n                        verbose' will be ignored.\n  --login PASSWORD|SSO  Login to and authenticate with the Matrix homeserver.\n                        Details:: This requires exactly one argument, the\n                        login method. Currently two choices are offered:\n                        'password' and 'sso'. Provide one of these methods. If\n                        you have chosen 'password', you will authenticate\n                        through your account password. You can optionally\n                        provide these additional arguments: --homeserver to\n                        specify the Matrix homeserver, --user-login to specify\n                        the log in user id, --password to specify the\n                        password, --device to specify a device name, --room-\n                        default to specify a default room for\n                        sending/listening. If you have chosen 'sso', you will\n                        authenticate through Single Sign-On. A web-browser\n                        will be started and you authenticate on the webpage.\n                        You can optionally provide these additional arguments:\n                        --homeserver to specify the Matrix homeserver, --user-\n                        login to specify the log in user id, --device to\n                        specify a device name, --room-default to specify a\n                        default room for sending/listening. See all the extra\n                        arguments for further explanations. ----- SSO (Single\n                        Sign-On) starts a web browser and connects the user to\n                        a web page on the server for login. SSO will only work\n                        if the server supports it and if there is access to a\n                        browser. So, don't use SSO on headless homeservers\n                        where there is no browser installed or accessible.\n  --verify [EMOJI]      Perform verification. Details:: By default, no\n                        verification is performed. Possible values are:\n                        \"emoji\". If verification is desired, run this program\n                        in the foreground (not as a service) and without a\n                        pipe. While verification is optional it is highly\n                        recommended, and it is recommended to be done right\n                        after (or together with) the --login action.\n                        Verification is always interactive, i.e. it required\n                        keyboard input. Verification questions will be printed\n                        on stdout and the user has to respond via the keyboard\n                        to accept or reject verification. Once verification is\n                        complete, the program may be run as a service.\n                        Verification is best done as follows: Perform a cross-\n                        device verification, that means, perform a\n                        verification between two devices of the *same* user.\n                        For that, open (e.g.) Element in a browser, make sure\n                        Element is using the same user account as the matrix-\n                        commander user (specified with --user-login at\n                        --login). Now in the Element webpage go to the room\n                        that is the matrix-commander default room (specified\n                        with --room-default at --login). OK, in the web-\n                        browser you are now the same user and in the same room\n                        as matrix-commander. Now click the round 'i' 'Room\n                        Info' icon, then click 'People', click the appropriate\n                        user (the matrix-commander user), click red 'Not\n                        Trusted' text which indicated an untrusted device,\n                        then click the square 'Interactively verify by Emoji'\n                        button (one of 3 button choices). At this point both\n                        web-page and matrix-commander in terminal show a set\n                        of emoji icons and names. Compare them visually.\n                        Confirm on both sides (Yes, They Match, Got it),\n                        finally click OK. You should see a green shield and\n                        also see that the matrix-commander device is now green\n                        and verified in the webpage. In the terminal you\n                        should see a text message indicating success. You\n                        should now be verified across all devices and across\n                        all users.\n  --logout ME|ALL       Logout. Details:: Logout this or all devices from the\n                        Matrix homeserver. This requires exactly one argument.\n                        Two choices are offered: 'me' and 'all'. Provide one\n                        of these choices. If you choose 'me', only the one\n                        device matrix-commander is currently using will be\n                        logged out. If you choose 'all', all devices of the\n                        user used by matrix-commander will be logged out.\n                        While --logout neither removes the credentials nor the\n                        store, the logout action removes the device and makes\n                        the access-token stored in the credentials invalid.\n                        Hence, after a --logout, one must manually remove\n                        creditials and store, and then perform a new --login\n                        to use matrix-commander again. You can perfectly use\n                        matrix-commander without ever logging out. --logout is\n                        a cleanup if you have decided not to use this (or all)\n                        device(s) ever again.\n  -c CREDETIALS_FILE, --credentials CREDETIALS_FILE\n                        Specify location of credentials file. Details:: On\n                        first run, information about homeserver, user, room\n                        id, etc. will be written to a credentials file. By\n                        default, this file is \"credentials.json\". On further\n                        runs the credentials file is read to permit logging\n                        into the correct Matrix account and sending messages\n                        to the preconfigured room. If this option is provided,\n                        the provided file name will be used as credentials\n                        file instead of the default one.\n  -s STORE_DIRECTORY, --store STORE_DIRECTORY\n                        Specify location of store directory. Details:: Path to\n                        directory to be used as \"store\" for encrypted\n                        messaging. By default, this directory is \"./store/\".\n                        Since encryption is always enabled, a store is always\n                        needed. The provided directory name will be used as\n                        persistent storage directory instead of the default\n                        one. Preferably, for multiple executions of this\n                        program use the same store for the same device. The\n                        store directory can be shared between multiple\n                        different devices and users.\n  -r ROOM [ROOM ...], --room ROOM [ROOM ...]\n                        Specify one or multiple rooms. Details:: Optionally\n                        specify one or multiple rooms via room ids or room\n                        aliases. --room is used by various send actions and\n                        various listen actions. The default room is provided\n                        in the credentials file (specified at --login with\n                        --room-default). If a room (or multiple ones) is (or\n                        are) provided in the --room arguments, then it (or\n                        they) will be used instead of the one from the\n                        credentials file. The user must have access to the\n                        specified room in order to send messages there or\n                        listen on the room. Messages cannot be sent to\n                        arbitrary rooms. When specifying the room id some\n                        shells require the exclamation mark to be escaped with\n                        a backslash. As an alternative to specifying a room as\n                        destination, one can specify a user as a destination\n                        with the '--user' argument. See '--user' and the term\n                        'DM (direct messaging)' for details. Specifying a room\n                        is always faster and more efficient than specifying a\n                        user. Not all listen operations allow setting a room.\n                        Read more under the --listen options and similar. Most\n                        actions also support room aliases instead of room ids.\n                        Some even short room aliases.\n  --room-default DEFAULT_ROOM\n                        Specify the default room at --login. Details::\n                        Optionally specify a room as the default room for\n                        future actions. If not specified for --login, it will\n                        be queried via the keyboard. --login stores the\n                        specified room as default room in your credentials\n                        file. This option is only used in combination with\n                        --login. A default room is needed. Specify a valid\n                        room either with --room-default or provide it via\n                        keyboard.\n  --room-create ROOM_ALIAS [ROOM_ALIAS ...]\n                        Create one or multiple rooms for given alias(es).\n                        Details:: One or multiple room aliases can be\n                        specified. For each alias specified a room will be\n                        created. For each created room one line with room id\n                        and alias will be printed to stdout. If you are not\n                        interested in an alias, provide an empty string like\n                        \"\".The alias provided must be in canocial local form,\n                        i.e. if you want a final full alias like\n                        \"#SomeRoomAlias:matrix.example.com\" you must provide\n                        the string 'SomeRoomAlias'. The user must be permitted\n                        to create rooms. Combine --room-create with --name and\n                        --topic to add names and topics to the room(s) to be\n                        created. Rooms are by default created encrypted; to\n                        overwrite that and to create a room with encryption\n                        disabled use '--plain'. Room id, room alias,\n                        encryption and other fields are printed as output, one\n                        line per created room.\n  --room-dm-create USER [USER ...]\n                        Create one or multiple DM rooms with the specified\n                        users. Details:: For each user specified a DM room\n                        will be created and the user invited to it. For each\n                        created room one line with room id and alias will be\n                        printed to stdout. The user must be permitted to\n                        create rooms. Combine --room-dm-create with --name,\n                        --topic, --alias to add names, topics and aliases to\n                        the room(s) to be created.DM rooms are by default\n                        created encrypted; to overwrite that and to create a\n                        room with encryption disabled use '--plain'. Room id,\n                        room alias, encryption and other fields are printed as\n                        output, one line per created room.\n  --room-join ROOM [ROOM ...]\n                        Join one room or multiple rooms. Details:: One or\n                        multiple room aliases can be specified. The room (or\n                        multiple ones) provided in the arguments will be\n                        joined. The user must have permissions to join these\n                        rooms.\n  --room-leave ROOM [ROOM ...]\n                        Leave one room or multiple rooms. Details:: One or\n                        multiple room aliases can be specified. The room (or\n                        multiple ones) provided in the arguments will be left.\n  --room-forget ROOM [ROOM ...]\n                        Forget one room or multiple rooms. Details:: After\n                        leaving a room you should (most likely) forget the\n                        room. Forgetting a room removes the users' room\n                        history. One or multiple room aliases can be\n                        specified. The room (or multiple ones) provided in the\n                        arguments will be forgotten. If all users forget a\n                        room, the room can eventually be deleted on the\n                        server.\n  --room-invite ROOM [ROOM ...]\n                        Invite one ore more users to join one or more rooms.\n                        Details:: Specify the user(s) as arguments to --user.\n                        Specify the rooms as arguments to this option, i.e. as\n                        arguments to --room-invite. The user must have\n                        permissions to invite users.\n  --room-ban ROOM [ROOM ...]\n                        Ban one ore more users from one or more rooms.\n                        Details:: Specify the user(s) as arguments to --user.\n                        Specify the rooms as arguments to this option, i.e. as\n                        arguments to --room-ban. The user must have\n                        permissions to ban users.\n  --room-unban ROOM [ROOM ...]\n                        Unban one ore more users from one or more rooms.\n                        Details:: Specify the user(s) as arguments to --user.\n                        Specify the rooms as arguments to this option, i.e. as\n                        arguments to --room-unban. The user must have\n                        permissions to unban users.\n  --room-kick ROOM [ROOM ...]\n                        Kick one ore more users from one or more rooms.\n                        Details:: Specify the user(s) as arguments to --user.\n                        Specify the rooms as arguments to this option, i.e. as\n                        arguments to --room-kick. The user must have\n                        permissions to kick users.\n  -u USER [USER ...], --user USER [USER ...]\n                        Specify one or multiple users. Details:: This option\n                        is meaningful in combination with a) room actions like\n                        --room-invite, --room-ban, --room-unban, etc. and b)\n                        send actions like -m, -i, -f, etc. c) some listen\n                        actions --listen, as well as d) actions like --delete-\n                        device. In case of a) this option --user specifies the\n                        users to be used with room commands (like invite, ban,\n                        etc.). In case of b) the option --user can be used as\n                        an alternative to specifying a room as destination for\n                        text (-m), images (-i), etc. For send actions '--user'\n                        is providing the functionality of 'DM (direct\n                        messaging)'. For c) this option allows an alternative\n                        to specifying a room as destination for some --listen\n                        actions. For d) this gives the otion to delete the\n                        device of a different user. ----- What is a DM?\n                        matrix-commander tries to find a room that contains\n                        only the sender and the receiver, hence DM. These\n                        rooms have nothing special other the fact that they\n                        only have 2 members and them being the sender and\n                        recipient respectively. If such a room is found, the\n                        first one found will be used as destination. If no\n                        such room is found, the send fails and the user should\n                        do a --room-create and --room-invite first. If\n                        multiple such rooms exist, one of them will be used\n                        (arbitrarily). For sending and listening, specifying a\n                        room directly is always faster and more efficient than\n                        specifying a user. So, if you know the room, it is\n                        preferred to use --room instead of --user. For b) and\n                        c) --user can be specified in 3 ways: 1) full user id\n                        as in '@john:example.org', 2) partial user id as in\n                        '@john' when the user is on the same homeserver\n                        (example.org will be automatically appended), or 3) a\n                        display name as in 'john'. Be careful, when using\n                        display names as they might not be unique, and you\n                        could be sending to the wrong person. To see possible\n                        display names use the --joined-members '*' option\n                        which will show you the display names in the middle\n                        column.\n  --user-login USER     Specify user for --login. Details:: Optional argument\n                        to specify the user for --login. This gives the otion\n                        to specify the user id for login. For '--login sso'\n                        the --user-login is not needed as user id can be\n                        obtained from server via SSO. For '--login password',\n                        if not provided it will be queried via keyboard. A\n                        full user id like '@john:example.com', a partial user\n                        name like '@john', and a short user name like 'john'\n                        can be given. --user-login is only used by --login and\n                        ignored by all other actions.\n  --name ROOM_NAME [ROOM_NAME ...]\n                        Specify one or multiple room names. Details:: This\n                        option is only meaningful in combination with option\n                        --room-create. This option --name specifies the names\n                        to be used with the command --room-create.\n  --topic ROOM_TOPIC [ROOM_TOPIC ...]\n                        Specify one or multiple room topics. Details:: This\n                        option is only meaningful in combination with option\n                        --room-create. This option --topic specifies the\n                        topics to be used with the command --room-create.\n  --alias ROOM_ALIAS [ROOM_ALIAS ...]\n                        Specify one or multiple room aliases. Details:: This\n                        option is only meaningful in combination with option\n                        --room-dm-create. This option --alias specifies the\n                        aliases to be used with the command --room-dm-create.\n  -m TEXT [TEXT ...], --message TEXT [TEXT ...]\n                        Send one or multiple text messages. Details:: Message\n                        data must not be binary data, it must be text. If no\n                        '-m' is used and no other conflicting arguments are\n                        provided, and information is piped into the program,\n                        then the piped data will be used as message. Finally,\n                        if there are no operations at all in the arguments,\n                        then a message will be read from stdin, i.e. from the\n                        keyboard. This option can be used multiple times to\n                        send multiple messages. If there is data piped into\n                        this program, then first data from the pipe is\n                        published, then messages from this option are\n                        published. Messages will be sent last, i.e. after\n                        objects like images, audio, files, events, etc. Input\n                        piped via stdin can additionally be specified with the\n                        special character '-'. If you want to feed a text\n                        message into matrix-commander via a pipe, via stdin,\n                        then specify the special character '-'. If '-' is\n                        specified as message, then the program will read the\n                        message from stdin. With '-' the whole message, all\n                        lines, will be considered a single message and sent as\n                        one message.If your message is literally '-' then use\n                        '\\-' as message in the argument. '-' may appear in any\n                        position, i.e. '-m \"start\" - \"end\"' will send 3\n                        messages out of which the second one is read from\n                        stdin. '-' may appear only once overall in all\n                        arguments. Similar to '-', another shortcut character\n                        is '_'. The special character '_' is used for\n                        streaming data via a pipe on stdin. With '_' the stdin\n                        pipe is read line-by-line and each line is treated as\n                        a separate message and sent right away. The program\n                        waits for pipe input until the pipe is closed. E.g.\n                        Imagine a tool that generates output sporadically\n                        24x7. It can be piped, i.e. streamed, into matrix-\n                        commander, and matrix-commander stays active, sending\n                        all input instantly. If you want to send the literal\n                        letter '_' then escape it and send '\\_'. '_' can be\n                        used only once. And either '-' or '_' can be used.\n  -i IMAGE_FILE [IMAGE_FILE ...], --image IMAGE_FILE [IMAGE_FILE ...]\n                        Send one or multiple image files. Details:: This\n                        option can be used multiple times to send multiple\n                        images. First images are sent, then text messages are\n                        sent. If you want to feed an image into matrix-\n                        commander via a pipe, via stdin, then specify the\n                        special character '-'. If '-' is specified as image\n                        file name, then the program will read the image data\n                        from stdin. If your image file is literally named '-'\n                        then use '\\-' as file name in the argument. '-' may\n                        appear in any position, i.e. '-i image1.jpg -\n                        image3.png' will send 3 images out of which the second\n                        one is read from stdin. '-' may appear only once\n                        overall in all arguments. If the file exists already,\n                        it is more efficient to specify the file name than to\n                        pipe the file through stdin.\n  -a AUDIO_FILE [AUDIO_FILE ...], --audio AUDIO_FILE [AUDIO_FILE ...]\n                        Send one or multiple audio files. Details:: This\n                        option can be used multiple times to send multiple\n                        audio files. First audios are sent, then text messages\n                        are sent. If you want to feed an audio into matrix-\n                        commander via a pipe, via stdin, then specify the\n                        special character '-'. See description of '-i' to see\n                        how '-' is handled.\n  -f FILE [FILE ...], --file FILE [FILE ...]\n                        Send one or multiple files (e.g. PDF, DOC, MP4).\n                        Details:: This option can be used multiple times to\n                        send multiple files. First files are sent, then text\n                        messages are sent. If you want to feed a file into\n                        matrix-commander via a pipe, via stdin, then specify\n                        the special character '-'. See description of '-i' to\n                        see how '-' is handled.\n  -e MATRIX_JSON_OBJECT [MATRIX_JSON_OBJECT ...], --event MATRIX_JSON_OBJECT [MATRIX_JSON_OBJECT ...]\n                        Send a Matrix JSON event. Details:: Send an event that\n                        is formatted as a JSON object as specified by the\n                        Matrix protocol. This allows the advanced user to send\n                        additional types of events such as reactions, send\n                        replies to previous events, or edit previous messages.\n                        Specifications for events can be found at\n                        https://spec.matrix.org/unstable/proposals/. This\n                        option can be used multiple times to send multiple\n                        events. First events are sent, then text messages are\n                        sent. If you want to feed an event into matrix-\n                        commander via a pipe, via stdin, then specify the\n                        special character '-'. See description of '-i' to see\n                        how '-' is handled. See tests/test-event.sh for\n                        examples.\n  -w, --html            Send message as format \"HTML\". Details:: If not\n                        specified, message will be sent as format \"TEXT\". E.g.\n                        that allows some text to be bold, etc. Only a subset\n                        of HTML tags are accepted by Matrix.\n  -z, --markdown        Send message as format \"MARKDOWN\". Details:: If not\n                        specified, message will be sent as format \"TEXT\". E.g.\n                        that allows sending of text formatted in MarkDown\n                        language.\n  -k, --code            Send message as format \"CODE\". Details:: If not\n                        specified, message will be sent as format \"TEXT\". If\n                        both --html and --code are specified then --code takes\n                        priority. This is useful for sending ASCII-art or\n                        tabbed output like tables as a fixed-sized font will\n                        be used for display.\n  -p SEPARATOR, --split SEPARATOR\n                        Split message text into multiple Matrix messages.\n                        Details:: If set, split the message(s) into multiple\n                        messages wherever the string specified with --split\n                        occurs. E.g. One pipes a stream of RSS articles into\n                        the program and the articles are separated by three\n                        newlines. Then with --split set to \"\\n\\n\\n\" each\n                        article will be printed in a separate message. By\n                        default, i.e. if not set, no messages will be split.\n  --config CONFIG_FILE  Specify the location of a config file. Details:: By\n                        default, no config file is used. If this option is\n                        provided, the provided file name will be used to read\n                        configuration from. Not implemented.\n  --proxy PROXY         Specify a proxy for connectivity. Details:: By\n                        default, i.e. if this option is not set, no proxy is\n                        used. If this option is used a proxy URL must be\n                        provided. The provided proxy URL will be used for the\n                        HTTP connection to the server. The proxy supports\n                        SOCKS4(a), SOCKS5, and HTTP (tunneling). Examples of\n                        valid URLs are \"http://10.10.10.10:8118\" or\n                        \"socks5://user:password@127.0.0.1:1080\". URLs with\n                        \"https\" or \"socks4a\" are not valid. Only \"http\",\n                        \"socks4\" and \"socks5\" are valid.\n  -n, --notice          Send message as notice. Details:: If not specified,\n                        message will be sent as text.\n  --encrypted           Send message end-to-end encrypted. Details::\n                        Encryption is always turned on and will always be used\n                        where possible. It cannot be turned off. This flag\n                        does nothing as encryption is turned on with or\n                        without this argument. This flag exists only for\n                        historic reasons. In some specific case encryption can\n                        be disabled, please see --plain.\n  -l [NEVER|ONCE|FOREVER|TAIL|ALL], --listen [NEVER|ONCE|FOREVER|TAIL|ALL]\n                        Print received messages and listen to messages.\n                        Details:: The --listen option takes one argument.\n                        There are several choices: \"never\", \"once\", \"forever\",\n                        \"tail\", and \"all\". By default, --listen is set to\n                        \"never\". So, by default no listening will be done. Set\n                        it to \"forever\" to listen for and print incoming\n                        messages to stdout. \"--listen forever\" will listen to\n                        all messages on all rooms forever. To stop listening\n                        \"forever\", use Control-C on the keyboard or send a\n                        signal to the process or service. The PID for\n                        signaling can be found in a PID file in directory\n                        \"/home/user/.run\". \"--listen once\" will get all the\n                        messages from all rooms that are currently queued up.\n                        So, with \"once\" the program will start, print waiting\n                        messages (if any) and then stop. The timeout for\n                        \"once\" is set to 10 seconds. So, be patient, it might\n                        take up to that amount of time. \"tail\" reads and\n                        prints the last N messages from the specified rooms,\n                        then quits. The number N can be set with the --tail\n                        option. With \"tail\" some messages read might be old,\n                        i.e. already read before, some might be new, i.e.\n                        never read before. It prints the messages and then the\n                        program stops. Messages are sorted, last-first. Look\n                        at --tail as that option is related to --listen tail.\n                        The option \"all\" gets all messages available, old and\n                        new. Unlike \"once\" and \"forever\" that listen in ALL\n                        rooms, \"tail\" and \"all\" listen only to the room\n                        specified in the credentials file or the --room\n                        options.\n  -t [NUMBER], --tail [NUMBER]\n                        Print last messages. Details:: The --tail option reads\n                        and prints up to the last N messages from the\n                        specified rooms, then quits. It takes one argument, an\n                        integer, which we call N here. If there are fewer than\n                        N messages in a room, it reads and prints up to N\n                        messages. It gets the last N messages in reverse\n                        order. It print the newest message first, and the\n                        oldest message last. If --listen-self is not set it\n                        will print less than N messages in many cases because\n                        N messages are obtained, but some of them are\n                        discarded by default if they are from the user itself.\n                        Look at --listen as this option is related to --tail.\n  -y, --listen-self     Print your own messages as well. Details:: If set and\n                        listening, then program will listen to and print also\n                        the messages sent by its own user. By default messages\n                        from oneself are not printed.\n  --print-event-id      Print event ids of received messages. Details:: If set\n                        and listening, then 'matrix-commander' will print also\n                        the event id for each received message or other\n                        received event. If set and sending, then 'matrix-\n                        commander' will print the event id of the sent message\n                        or the sent object (audio, file, event) to stdout.\n                        Other information like room id and reference to what\n                        was sent will be printed too. For sending this is\n                        useful, if after sending the user wishes to perform\n                        further operations on the sent object, e.g.\n                        redacting/deleting it after an expiration time, etc.\n  --download-media [DOWNLOAD_DIRECTORY]\n                        Download media files while listening. Details:: If set\n                        and listening, then program will download received\n                        media files (e.g. image, audio, video, text, PDF\n                        files). media will be downloaded to local directory.\n                        By default, media will be downloaded to is \"./media/\".\n                        You can overwrite default with your preferred\n                        directory. If media is encrypted it will be decrypted\n                        and stored decrypted. By default media files will not\n                        be downloaded.\n  --os-notify           Notify me of arriving messages. Details:: If set and\n                        listening, then program will attempt to visually\n                        notify of arriving messages through the operating\n                        system. By default there is no notification via OS.\n  --set-device-name DEVICE_NAME\n                        Set or rename the current device. Details:: Set or\n                        rename the current device to the device name provided.\n                        Send, listen and verify operations are allowed when\n                        renaming the device.\n  --set-display-name DISPLAY_NAME\n                        Set or rename the display name. Details:: Set or\n                        rename the display name for the current user to the\n                        display name provided. Send, listen and verify\n                        operations are allowed when setting the display name.\n                        Do not confuse this option with the option '--get-\n                        room-info' which gets the room display name, not the\n                        user display name.\n  --get-display-name    Get the display name of yourself. Details:: Get the\n                        display name of matrix-commander (itself), or of one\n                        or multiple users. Specify user(s) with the --user\n                        option. If no user is specified get the display name\n                        of itself. Send, listen and verify operations are\n                        allowed when getting display name(s). Do not confuse\n                        this option with the option '--get-room-info' which\n                        gets the room display name, not the user display name.\n  --set-presence ONLINE|OFFLINE|UNAVAILABLE\n                        Set your presence. Details:: Set presence of matrix-\n                        commander to the given value. Must be one of these\n                        values: “online”, “offline”, “unavailable”. Otherwise\n                        an error will be produced.\n  --get-presence        Get your presence. Details:: Get presence of matrix-\n                        commander (itself), or of one or multiple users.\n                        Specify user(s) with the --user option. If no user is\n                        specified get the presence of itself. Send, listen and\n                        verify operations are allowed when getting\n                        presence(s).\n  --upload FILE [FILE ...]\n                        Upload one or multiple files to the content\n                        repository. Details:: The files will be given a Matrix\n                        URI and stored on the server. --upload allows the\n                        optional argument --plain to skip encryption for\n                        upload. See tests/test-upload.sh for an example.\n  --download MXC_URI [MXC_URI ...]\n                        Download one or multiple files from the content\n                        repository. Details:: You must provide one or multiple\n                        Matrix URIs (MXCs) which are strings like this\n                        'mxc://example.com/SomeStrangeUriKey'. If found they\n                        will be downloaded, decrypted, and stored in local\n                        files. If file names are specified with --file-name\n                        the downloads will be saved with these file names. If\n                        --file-name is not specified the original file name\n                        from the upload will be used. If neither specified nor\n                        available on server, then the file name of last resort\n                        'mxc-<mxc-id>' will be used. If a file name in --file-\n                        name contains the placeholder __mxc_id__, it will be\n                        replaced with the mxc-id. If a file name is specified\n                        as empty string in --file-name, then also the name\n                        'mxc-<mxc-id>' will be used. By default, the upload\n                        was encrypted so a decryption dictionary must be\n                        provided to decrypt the data. Specify one or multiple\n                        decryption keys with --key-dict. If --key-dict is not\n                        set, not decryption is attempted; and the data might\n                        be stored in encrypted fashion, or might be plain-text\n                        if the --upload skipped encryption with --plain. See\n                        tests/test-upload.sh for an example.\n  --delete-mxc MXC_URI [MXC_URI ...]\n                        Delete one or multiple objects from the content\n                        repository. Details:: You must provide one or multiple\n                        Matrix URIs (MXC) which are strings like this\n                        'mxc://example.com/SomeStrangeUriKey'. Alternatively,\n                        you can just provide the MXC id, i.e. the part after\n                        the last slash. If found they (i.e. the files they\n                        represent) will be deleted from the server database.\n                        In order to delete objects one must have server admin\n                        permissions. Having only room admin permissions is not\n                        sufficient and it will fail. Read https://matrix-org.g\n                        ithub.io/synapse/latest/usage/administration/admin_api\n                        / for learning how to set server admin permissions on\n                        the server. Alternatively, and optionally, one can\n                        specify an access token which has server admin\n                        permissions with the --access-token argument. See\n                        tests/test-upload.sh for an example.\n  --delete-mxc-before TIMESTAMP [TIMESTAMP ...]\n                        Delete old objects from the content\n                        repositoryDetails:: Delete files from the content\n                        repository that are older than a given timestamp. It\n                        is the timestamp of last access, not the timestamp\n                        when the file was created. Additionally you can\n                        specify a size in bytes to indicate that only files\n                        older than timestamp and larger than size will be\n                        deleted. You must provide a timestamp of the following\n                        format: 'DD.MM.YYYY HH:MM:SS' like '20.01.2022\n                        19:38:42' for January 20, 2022, 7pm 38min 42sec. Files\n                        that are still used in image data (e.g user profile,\n                        room avatar) will not be deleted from the server\n                        database. In order to delete objects one must have\n                        server admin permissions. Having only room admin\n                        permissions is not sufficient and it will fail. Read\n                        https://matrix-org.github.io/synapse/latest/usage/admi\n                        nistration/admin_api/ for learning how to set server\n                        admin permissions on the server. Alternatively, and\n                        optionally, one can specify an access token which has\n                        server admin permissions with the --access-token\n                        argument. See tests/test-upload.sh for an example.\n  --joined-rooms        Print the list of joined rooms. Details:: All rooms\n                        that you are a member of will be printed, one room per\n                        line.\n  --joined-members ROOM [ROOM ...]\n                        Print the list of joined members for one or multiple\n                        rooms. Details:: If you want to print the joined\n                        members of all rooms that you are member of, then use\n                        the special character '*'.\n  --mxc-to-http MXC_URI [MXC_URI ...]\n                        Convert MXC URIs to HTTP URLs. Details:: Convert one\n                        or more matrix content URIs to the corresponding HTTP\n                        URLs. The MXC URIs to provide look something like this\n                        'mxc://example.com/SomeStrangeUriKey'. See tests/test-\n                        upload.sh for an example.\n  --devices, --get-devices\n                        Print the list of devices. Details:: All device of\n                        this account will be printed, one device per line.\n  --discovery-info      Print discovery information about current homeserver.\n                        Details:: Note that not all homeservers support\n                        discovery and an error might be reported.\n  --login-info          Print login methods supported by the homeserver.\n                        Details:: It prints one login method per line.\n  --content-repository-config\n                        Print the content repository configuration. Details::\n                        This currently just prints the upload size limit in\n                        bytes.\n  --rest REST_METHOD DATA URL [REST_METHOD DATA URL ...]\n                        Use the Matrix Client REST API. Details:: Matrix has\n                        several extensive REST APIs. With the --rest argument\n                        you can invoke a Matrix REST API call. This allows the\n                        user to do pretty much anything, at the price of not\n                        being very convenient. The APIs are described in\n                        https://matrix.org/docs/api/,\n                        https://spec.matrix.org/latest/client-server-api/,\n                        https://matrix-org.github.io/synapse/latest/usage/admi\n                        nistration/admin_api/, etc. Each REST call requires\n                        exactly 3 arguments. So, the total number of arguments\n                        used with --rest must be a multiple of 3. The argument\n                        triples are: (a) the method, a string of GET, POST,\n                        PUT, DELETE, or OPTIONS. (b) a string containing the\n                        data (if any) in JSON format. (c) a string containing\n                        the URL. All strings must be UTF-8. There are a few\n                        placeholders. They are: __homeserver__ (like\n                        https://matrix.example.org), __hostname__ (like\n                        matrix.example.org), __access_token__, __user_id__\n                        (like @mc:matrix.example.com), __device_id__, and\n                        __room_id__. If a placeholder is found it is replaced\n                        with the value from the local credentials file. An\n                        example would be: --rest 'GET' ''\n                        '__homeserver__/_matrix/client/versions'. If there is\n                        no data, i.e. data (b) is empty, then use '' for it.\n                        Optionally, --access-token can be used to overwrite\n                        the access token from credentials (if needed). See\n                        tests/test-rest.sh for an example.\n  --set-avatar AVATAR_MXC_URI\n                        Set your avatar. Details:: Set the avatar MXC resource\n                        used by matrix-commander. Provide one MXC URI that\n                        looks like this 'mxc://example.com/SomeStrangeUriKey'.\n  --get-avatar [USER ...]\n                        Get an avatar. Details:: Get the avatar MXC resource\n                        used by matrix-commander, or one or multiple other\n                        users. Specify zero or more user ids. If no user id is\n                        specified, the avatar of matrix-commander will be\n                        fetched. If one or more user ids are given, the\n                        avatars of these users will be fetched. As response\n                        both MXC URI as well as URL will be printed.\n  --get-profile [USER ...]\n                        Get a user profile. Details:: Get the user profile\n                        used by matrix-commander, or one or multiple other\n                        users. Specify zero or more user ids. If no user id is\n                        specified, the user profile of matrix-commander will\n                        be fetched. If one or more user ids are given, the\n                        user profiles of these users will be fetched. As\n                        response display name and avatar MXC URI as well as\n                        possible additional profile information (if present)\n                        will be printed. One line per user will be printed.\n  --get-room-info [ROOM ...]\n                        Get the room information. Details:: Get the room\n                        information such as room display name, room alias,\n                        room creator, etc. for one or multiple specified\n                        rooms. The included room 'display name' is also\n                        referred to as 'room name' or incorrectly even as room\n                        title. If one or more room are given, the room\n                        informations of these rooms will be fetched. If no\n                        room is specified, the room information for the\n                        default room configured for matrix-commander is\n                        fetched. Rooms can be given via room id (e.g.\n                        '\\!SomeRoomId:matrix.example.com'), canonical (full)\n                        room alias (e.g. '#SomeRoomAlias:matrix.example.com'),\n                        or short alias (e.g. 'SomeRoomAlias' or\n                        '#SomeRoomAlias'). As response room id, room display\n                        name, room canonical alias, room topic, room creator,\n                        and room encryption are printed. One line per room\n                        will be printed. Since either room id or room alias\n                        are accepted as input and both room id and room alias\n                        are given as output, one can hence use this option to\n                        map from room id to room alias as well as vice versa\n                        from room alias to room id. Do not confuse this option\n                        with the options '--get-display-name' and '--set-\n                        display-name', which get/set the user display name,\n                        not the room display name.\n  --get-client-info     Print client information. Details:: Print information\n                        kept in the client, i.e. matrix-commander. Output is\n                        printed in JSON format.\n  --has-permission ROOM BAN|INVITE|KICK|NOTIFICATIONS|REDACT|etc [ROOM BAN|INVITE|KICK|NOTIFICATIONS|REDACT|etc ...]\n                        Inquire about permissions. Details:: Inquire if user\n                        used by matrix-commander has permission for one or\n                        multiple actions in one or multiple rooms. Each\n                        inquiry requires 2 parameters: the room id and the\n                        permission type. One or multiple of these parameter\n                        pairs may be specified. For each parameter pair there\n                        will be one line printed to stdout. Values for the\n                        permission type are 'ban', 'invite', 'kick',\n                        'notifications', 'redact', etc. See\n                        https://spec.matrix.org/v1.2/client-server-\n                        api/#mroompower_levels.\n  --import-keys FILE PASSPHRASE FILE PASSPHRASE\n                        Import Megolm decryption keys from a file. Details::\n                        This is an optional argument. If used it must be\n                        followed by two values. (a) a file name from which the\n                        keys will be read. (b) a passphrase with which the\n                        file can be decrypted with. The keys will be added to\n                        the current instance as well as written to the\n                        database. See also --export-keys.\n  --export-keys FILE PASSPHRASE FILE PASSPHRASE\n                        Export all the Megolm decryption keys of this device.\n                        Details:: This is an optional argument. If used it\n                        must be followed by two values. (a) a file name to\n                        which the keys will be written to. (b) a passphrase\n                        with which the file will be encrypted with. Note that\n                        this does not save other information such as the\n                        private identity keys of the device.\n  --room-set-alias ROOM_ALIAS ROOM [ROOM_ALIAS ROOM ...], --room-put-alias ROOM_ALIAS ROOM [ROOM_ALIAS ROOM ...]\n                        Add aliases to rooms. Details:: Add an alias to a\n                        room, or aliases to multiple rooms. Provide pairs of\n                        arguments. In each pair, the first argument must be\n                        the alias you want to assign to the room given via\n                        room id in the second argument of the pair. E.g. the 4\n                        arguments 'a1 r1 a2 r2' would assign the alias 'a1' to\n                        room 'r1' and the alias 'a2' to room 'r2'. If you just\n                        have one single pair then the second argument is\n                        optional. If just a single value is given (an alias)\n                        then this alias is assigned to the default room of\n                        matrix-commander (as found in credentials file). In\n                        short, you can have just a single argument or an even\n                        number of arguments forming pairs. You can have\n                        multiple room aliases per room. So, you may add\n                        multiple aliases to the same room. A room alias looks\n                        like this: '#someRoomAlias:matrix.example.org'. Short\n                        aliases like 'someRoomAlias' or '#someRoomAlias' are\n                        also accepted. In case of a short alias, it will be\n                        automatically prefixed with '#' and the homeserver\n                        will be automatically appended. Adding the same alias\n                        multiple times to the same room results in an error.\n                        --room-put-alias is eqivalent to --room-set-alias.\n  --room-resolve-alias ROOM_ALIAS [ROOM_ALIAS ...]\n                        Show room ids correspnding to room aliases. Details::\n                        Resolves a room alias to the corresponding room id, or\n                        multiple room aliases to their corresponding room ids.\n                        Provide one or multiple room aliases. A room alias\n                        looks like this: '#someRoomAlias:matrix.example.org'.\n                        Short aliases like 'someRoomAlias' or '#someRoomAlias'\n                        are also accepted. In case of a short alias, it will\n                        be automatically prefixed with '#' and the homeserver\n                        from the default room of matrix-commander (as found in\n                        credentials file) will be automatically appended.\n                        Resolving an alias that does not exist results in an\n                        error. For each room alias one line will be printed to\n                        stdout with the result.\n  --room-delete-alias ROOM_ALIAS [ROOM_ALIAS ...]\n                        Delete one or multiple rooms aliases. Details::\n                        Provide one or multiple room aliases. You can have\n                        multiple room aliases per room. So, you may delete\n                        multiple aliases from the same room or from different\n                        rooms. A room alias looks like this:\n                        '#someRoomAlias:matrix.example.org'. Short aliases\n                        like 'someRoomAlias' or '#someRoomAlias' are also\n                        accepted. In case of a short alias, it will be\n                        automatically prefixed with '#' and the homeserver\n                        from the default room of matrix-commander (as found in\n                        credentials file) will be automatically appended.\n                        Deleting an alias that does not exist results in an\n                        error.\n  --get-openid-token [USER ...]\n                        Get an OpenID token. Details:: Get an OpenID token for\n                        matrix-commander, or for one or multiple other users.\n                        It prints an OpenID token object that the requester\n                        may supply to another service to verify their identity\n                        in Matrix. See http://www.openid.net/. Specify zero or\n                        more user ids. If no user id is specified, an OpenID\n                        for matrix-commander will be fetched. If one or more\n                        user ids are given, the OpenID of these users will be\n                        fetched. As response the user id(s) and OpenID(s) will\n                        be printed.\n  --room-get-visibility [ROOM ...]\n                        Get the visibility of one or more rooms. Details::\n                        Provide zero or more room ids as arguments. If no\n                        argument is given, then the default room of matrix-\n                        commander (as found in credentials file) will be used.\n                        For each room the visibility will be printed.\n                        Currently, this is either the string 'private' or\n                        'public'. As response one line per room will be\n                        printed to stdout.\n  --room-get-state [ROOM ...]\n                        Get the state of one or more rooms. Details::Provide\n                        zero or more room ids as arguments. If no argument is\n                        given, then the default room of matrix-commander (as\n                        found in credentials file) will be used. For each room\n                        the state will be printed. The state is a long list of\n                        events including events like 'm.room.create',\n                        'm.room.encryption', 'm.room.guest_access',\n                        'm.room.history_visibility', 'm.room.join_rules',\n                        'm.room.member', 'm.room.power_levels', etc. As\n                        response one line per room will be printed to stdout.\n                        The line can be very long as the list of events can be\n                        very large. To get output into a human readable form\n                        pipe output through sed and jq as shown in an example\n                        in tests/test-setget.sh.\n  --delete-device DEVICE [DEVICE ...]\n                        Delete one or multiple devices. Details:: By default\n                        devices belonging to matrix-commander will be deleted.\n                        If the devices belong to a different user, use the\n                        --user argument to specify the user, i.e. owner. Only\n                        exactly one user can be specified with the optional\n                        --user argument. Device deletion requires the user\n                        password. It must be specified with the --password\n                        argument. If the server uses only HTTP (and not\n                        HTTPS), then the password can be visible to attackers.\n                        Hence, if the server does not support HTTPS this\n                        operation is discouraged.\n  --room-redact ROOM_ID EVENT_ID REASON [ROOM_ID EVENT_ID REASON ...], --room-delete-content ROOM_ID EVENT_ID REASON [ROOM_ID EVENT_ID REASON ...]\n                        Strip information out of one or several events.\n                        Details:: Strip information from events, e.g.\n                        messages. Redact is used in the meaning of 'strip,\n                        wipe, black-out', not in the meaning of 'edit'. This\n                        action removes, deletes the content of an event while\n                        not removing the event. You can wipe text from a\n                        previous message, etc. Typical Matrix clients like\n                        Element will delete messages, images and other objects\n                        from the GUI once they have been redacted. So, --room-\n                        redact is a way to delete a message, images, etc. The\n                        content is wiped, the GUI deletes the message, but the\n                        server keeps the event history. Note, while this\n                        deletes from the client (GUI, e.g. Element), it does\n                        not delete from the database on the server. So, this\n                        call is not a way to clean up the server database.\n                        Each redact (wipe, strip, delete) operation requires\n                        exactly 3 arguments. The argument triples are: (a) the\n                        room id. (b) the id of the event to be redacted. (c) a\n                        string containing the reason for the redaction. Use ''\n                        if you do not want to give a reason. So, the total\n                        number of arguments used with --room-redact must be a\n                        multiple of 3, but we also accept 2 in which case only\n                        one redaction will be done without specifying a\n                        reason. Event ids start with the dollar sign ($).\n                        Depending on your shell, you might have to escape the\n                        '$' to '\\$'. --room-delete-content is an alias for\n                        --room-redact. They can be used interchangeably.\n  --whoami              Print your user id. Details:: Print the user id used\n                        by matrix-commander (itself). One can get this\n                        information also by looking at the credentials file.\n  --no-ssl              Skip SSL verification. Details:: By default (if this\n                        option is not used) the SSL certificate is validated\n                        for the connection. But, if this option is used, then\n                        the SSL certificate validation will be skipped. This\n                        is useful for home-servers that have no SSL\n                        certificate. If used together with the \"--ssl-\n                        certificate\" parameter, this option is meaningless and\n                        an error will be raised.\n  --ssl-certificate SSL_CERTIFICATE_FILE\n                        Use your own SSL certificate. Details:: Use this\n                        option to use your own local SSL certificate file.\n                        This is an optional parameter. This is useful for home\n                        servers that have their own SSL certificate. This\n                        allows you to use HTTPS/TLS for the connection while\n                        using your own local SSL certificate. Specify the path\n                        and file to your SSL certificate. If used together\n                        with the \"--no-ssl\" parameter, this option is\n                        meaningless and an error will be raised.\n  --file-name FILE [FILE ...]\n                        Specify one or multiple file names for some actions.\n                        Details:: This is an optional argument. Use this\n                        option in combination with options like --download to\n                        specify one or multiple file names. Ignored if used by\n                        itself without an appropriate corresponding action.\n  --key-dict KEY_DICTIONARY [KEY_DICTIONARY ...]\n                        Specify one or multiple key dictionaries for\n                        decryption. Details:: One or multiple decryption\n                        dictionaries are provided by the --upload action as a\n                        result. A decryption dictionary is a string like this:\n                        \"{'v': 'v2', 'key': {'kty': 'oct', 'alg': 'A256CTR',\n                        'ext': True, 'k': 'somekey', 'key_ops': ['encrypt',\n                        'decrypt']}, 'iv': 'someiv', 'hashes': {'sha256':\n                        'someSHA'}}\". If you have a list of key dictionaries\n                        and want to skip one, use the empty string.\n  --plain               Disable encryption for a specific action. Details:: By\n                        default, everything is always encrypted. Actions that\n                        support this option are: --upload, --room-create, and\n                        --room-dm-create. Rooms are by default created\n                        encrypted; to overwrite that and to create a room with\n                        encryption disabled use '--plain'. See the individual\n                        commands.\n  --separator SEPARATOR\n                        Set a custom separator used for certain print outs.\n                        Details:: By default, i.e. if --separator is not used,\n                        4 spaces are used as separator between columns in\n                        print statements. You could set it to '\\t' if you\n                        prefer a tab, but tabs are usually replaced with\n                        spaces by the terminal. So, that might not give you\n                        what you want. Maybe ' || ' is an alternative choice.\n  --access-token ACCESS_TOKEN\n                        Set a custom access token for use by certain actions.\n                        Details:: It is an optional argument. By default\n                        --access-token is ignored and not used. It is used by\n                        the --delete-mxc, --delete-mxc-before, and --rest\n                        actions.\n  --password PASSWORD   Specify a password for use by certain actions.\n                        Details:: It is an optional argument. By default\n                        --password is ignored and not used. It is used by '--\n                        login password' and '--delete-device' actions. If not\n                        provided for --login the user will be queried via\n                        keyboard.\n  --homeserver HOMESERVER_URL\n                        Specify a homeserver for use by certain actions.\n                        Details:: It is an optional argument. By default\n                        --homeserver is ignored and not used. It is used by '\n                        --login' action. If not provided for --login the user\n                        will be queried via keyboard.\n  --device DEVICE_NAME  Specify a device name, for use by certain actions.\n                        Details:: It is an optional argument. By default\n                        --device is ignored and not used. It is used by '--\n                        login' action. If not provided for --login the user\n                        will be queried via keyboard. If you want the default\n                        value specify ''. Multiple devices (with different\n                        device id) may have the same device name. In short,\n                        the same device name can be assigned to multiple\n                        different devices if desired.\n  --sync FULL|OFF       Choose synchronization options. Details:: This option\n                        decides on whether the program synchronizes the state\n                        with the server before a 'send' action. Currently two\n                        choices are offered: 'full' and 'off'. Provide one of\n                        these choices. The default is 'full'. If you want to\n                        use the default, then there is no need to use this\n                        option. If you have chosen 'full', the full state, all\n                        state events will be synchronized between this program\n                        and the server before a 'send'. If you have chosen\n                        'off', synchronization will be skipped entirely before\n                        the 'send' which will improve performance.\n  -o TEXT|JSON|JSON-MAX|JSON-SPEC, --output TEXT|JSON|JSON-MAX|JSON-SPEC\n                        Select an output format. Details:: This option decides\n                        on how the output is presented. Currently offered\n                        choices are: 'text', 'json', 'json-max', and 'json-\n                        spec'. Provide one of these choices. The default is\n                        'text'. If you want to use the default, then there is\n                        no need to use this option. If you have chosen 'text',\n                        the output will be formatted with the intention to be\n                        consumed by humans, i.e. readable text. If you have\n                        chosen 'json', the output will be formatted as JSON.\n                        The content of the JSON object matches the data\n                        provided by the matrix-nio SDK. In some occassions the\n                        output is enhanced by having a few extra data items\n                        added for convenience. In most cases the output will\n                        be processed by other programs rather than read by\n                        humans. Option 'json-max' is practically the same as\n                        'json', but yet another additional field is added. The\n                        data item 'transport_response' which gives information\n                        on how the data was obtained and transported is also\n                        being added. For '--listen' a few more fields are\n                        added. In most cases the output will be processed by\n                        other programs rather than read by humans. Option\n                        'json-spec' only prints information that adheres\n                        1-to-1 to the Matrix Specification. Currently only the\n                        events on '--listen' and '--tail' provide data exactly\n                        as in the Matrix Specification. If no data is\n                        available that corresponds exactly with the Matrix\n                        Specification, no data will be printed. In short,\n                        currently '--json-spec' only provides outputs for '--\n                        listen' and '--tail'. All other arguments like '--get-\n                        room-info' will print no output.\n  -v [PRINT|CHECK], -V [PRINT|CHECK], --version [PRINT|CHECK]\n                        Print version information or check for updates.\n                        Details:: This option takes zero or one argument. If\n                        no argument is given, 'print' is assumed which will\n                        print the version of the currently installed\n                        'PROG_WITHOUT_EXT' package. 'check' is the\n                        alternative. '{CHECK}' connects to https://pypi.org\n                        and gets the version number of latest stable release.\n                        There is no 'calling home' on every run, only a 'check\n                        pypi.org' upon request. Your privacy is protected. The\n                        new release is neither downloaded, nor installed. It\n                        just informs you. After printing version information\n                        the program will continue to run. This is useful for\n                        having version number in the log files.\n\nYou are running version 6.0.1 2022-12-16. Enjoy, star on Github and contribute\nby submitting a Pull Request. Also have a look at matrix-commander-tui.\n```\n\n# Autocompletion\n\nTab completion is provided for shells (e.g. bash), courtesy of @mizlan).\n\nHere is a sample snapshot of tab completion in action:\n\n![tab completion screenshot](screenshots/tab_complete.png)\n\n# Performance and Speed\n\n- `matrix-commander` is written in Python and hence rather on the slow side\n- It is not thread-safe. One cannot just simply run multiple instances\n  at the same time. However, with very careful set-up one can run\n  multiple instances, but that is not the target use case. See\n  [Issue #31](https://github.com/8go/matrix-commander/issues/31).\n- Where possible bundle several actions together into a single call.\n  For example if one wants to send 8 images, then it is significantly faster\n  to call `matrix-commander` once with `-i` specifying 8 images, than\n  to call `matrix-commander` 8 times with one image each call. One needs\n  to send 5 messages, 10 images, 5 audios, 3 PDF files and 7 events to\n  the same user? Call `matrix-commander` once, not 30 times.\n- If you are sending something, then try the `--sync off` option and see\n  to what degree skipping the server sync for sending helps.\n- Avoid using room aliases. Instead use room ids. For each room alias\n  the corresponding id must be retrieved from the server creating overhead.\n\n# For Developers\n\n- Don't change tabbing, spacing, or formatting as file is automatically\n  sorted, linted and formatted.\n- `pylama:format=pep8:linters=pep8`\n- first `isort` import sorter\n- then `flake8` linter/formater\n- then `black` linter/formater\n- line length: 79\n  - isort matrix_commander.py\n  - flake8 matrix_commander.py\n  - python3 -m black --line-length 79 matrix_commander.py\n- There is a script called `lintmc.sh` in `scripts` directory for that.\n\n# Semantic Versioning\n\nA version number is defined by: `MAJOR.MINOR.PATCH` where\n- MAJOR version changes when there is a incompatible API change\n- MINOR version changes when there is added functionality in a\n  backwards-compatible manner, and\n- PATCH version changes when there are backwards-compatible bug fixes.\n\nSee also Issue #109 for a discussion on this topic.\n\nOutput written to stdout (e.g. results on --room-get-info) is considered\npart of the API. So, if there is added space this would cause a major\nversion change even though only a \"meaningless\" character has changed.\n\nDebugging and logging output written to stderr (e.g. debug statements,\ninfo, warning, and errors) are *not* part of the API. So, if the\ndescription of an error changes than this is only a patch.\nYou should not rely on anything written to stderr or parse stderr or\nlog files. An example line is:\n`2022-11-22 10:30:18,921:     ERROR: matrix-commander: E123 Failed ...`.\nThe format is: date, level, module, number and description.\nOnly warnings and errors have the `number` part.\nAn effort is made to keep the first parts of these lines up to `number`\nthe same for warnings and errors, and only change description.\n\nOutput of `--help` can also change and should not be relied on, changes to it\nare just a patch.\n\nSome actions return a JSON event and these JSON objects might change\nas Matrix specifications change. This will not cause a version change in\nmatrix-commander.\n\n# License\n\nThis program is free software: you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nWhen preparing to package `matrix-commander` for NIX the question\ncame up if `matrix-commander` is GPL3Only or GPL3Plus. GPL3PLus was\ndeemed to be better. As such the license was changed from GPL3Only\nto GPL3Plus on May 25, 2021. Versions before this date are licensed\nunder GPL3. Versions on or after this date are GPL3Plus, i.e.\nGPL3 or later.\n\nSee [GPL3 at FSF](https://www.fsf.org/licensing/).\n\n# Things to do, Things missing\n\n- see [Issues](https://github.com/8go/matrix-commander/issues) on Github\n\n\n# Related Tools and Projects\n\n- [matrix-nio](https://github.com/poljar/matrix-nio/)\n- [matrix-commander](https://github.com/8go/matrix-commander/)\n- [matrix-commander-tui](https://github.com/8go/matrix-commander/matrix_commander)\n- [matrix-commander-rs](https://github.com/8go/matrix-commander-rs/)\n- [nostr-commander-rs](https://github.com/8go/nostr-commander-rs/)\n- [matrix-nostr-bridge](https://github.com/8go/matrix-nostr-bridge/)\n\n# Final Remarks\n\n- Thanks to all of you who already have contributed! So appreciated!\n  - :heart: and :thumbsup: to @fyfe, @berlincount, @ezwen, @Scriptkiddi,\n    @pelzvieh, @mizlan, @edwinsage, @jschwartzentruber, @nirgal, @benneti,\n    @opk12, @pataquets, @KizzyCode, @murlock1000, etc.\n- Enjoy!\n- Give it a :star: star on GitHub! Pull requests are welcome  :heart:\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/8go/matrix-commander",
    "keywords": "Matrix,chat,messaging",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matrix-commander",
    "package_url": "https://pypi.org/project/matrix-commander/",
    "platform": null,
    "project_url": "https://pypi.org/project/matrix-commander/",
    "project_urls": {
      "Bug Tracker": "https://github.com/8go/matrix-commander/issues",
      "Homepage": "https://github.com/8go/matrix-commander",
      "repository": "https://github.com/8go/matrix-commander"
    },
    "release_url": "https://pypi.org/project/matrix-commander/6.0.1/",
    "requires_dist": [
      "aiohttp",
      "aiofiles (>=0.6.0)",
      "argparse",
      "asyncio",
      "datetime",
      "markdown",
      "matrix-nio[e2e] (>=0.14.1)",
      "notify2",
      "Pillow",
      "python-magic",
      "pyxdg",
      "uuid"
    ],
    "requires_python": ">=3.8",
    "summary": "A simple command-line Matrix client",
    "version": "6.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16121233,
  "releases": {
    "2.16.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60cc683683f4bfac91f7672947e8a107bdd6cd9a33740a90a7fb6707151bbe31",
          "md5": "30fd004bd6fe75483e7511ac653cd261",
          "sha256": "604da65a13a5fb73731f349e1b79cf39bfc1cc723233078f0a8866fdf4ca07ea"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.16.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30fd004bd6fe75483e7511ac653cd261",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 75240,
        "upload_time": "2022-05-29T22:07:50",
        "upload_time_iso_8601": "2022-05-29T22:07:50.276144Z",
        "url": "https://files.pythonhosted.org/packages/60/cc/683683f4bfac91f7672947e8a107bdd6cd9a33740a90a7fb6707151bbe31/matrix_commander-2.16.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6876f1aa4fab3183892f0ea8e7fbb5effdf3b093051d96244e0f396445faf6d8",
          "md5": "a8dad32be7663be3ff73531c1603db19",
          "sha256": "729efd8ce676547ac258ef6c6d465bc8331003dd3de4c382d8a57a03ce9db80d"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.16.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a8dad32be7663be3ff73531c1603db19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 100821,
        "upload_time": "2022-05-29T22:07:52",
        "upload_time_iso_8601": "2022-05-29T22:07:52.740574Z",
        "url": "https://files.pythonhosted.org/packages/68/76/f1aa4fab3183892f0ea8e7fbb5effdf3b093051d96244e0f396445faf6d8/matrix-commander-2.16.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.17.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec61a78bcd9d0f42a544c71efb9ece46fbf956e5e2da2d3bb5707c789416d21b",
          "md5": "4d30738b16a5dccd4783738f48ef0bae",
          "sha256": "23a48aa39a1aa703288af945b40805c9640f86863b111ac339c679428c3db40f"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.17.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d30738b16a5dccd4783738f48ef0bae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 76213,
        "upload_time": "2022-05-30T20:41:06",
        "upload_time_iso_8601": "2022-05-30T20:41:06.110811Z",
        "url": "https://files.pythonhosted.org/packages/ec/61/a78bcd9d0f42a544c71efb9ece46fbf956e5e2da2d3bb5707c789416d21b/matrix_commander-2.17.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48be10ece91aa59a4a80d43acd203b6c515e8f043f0cf4382e70d81984b088c8",
          "md5": "20b325606c4eb0081d033d8e5a5eeb61",
          "sha256": "c1ef010eda39a7aec0efaa55c3465fe81d5b74a50e384fb6f19ad26e90b5b681"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.17.0.tar.gz",
        "has_sig": false,
        "md5_digest": "20b325606c4eb0081d033d8e5a5eeb61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 102171,
        "upload_time": "2022-05-30T20:41:07",
        "upload_time_iso_8601": "2022-05-30T20:41:07.971322Z",
        "url": "https://files.pythonhosted.org/packages/48/be/10ece91aa59a4a80d43acd203b6c515e8f043f0cf4382e70d81984b088c8/matrix-commander-2.17.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.18.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3712fb3db1c04e4fa8ea932e53832fbcd9074a66375a9779e1df01c371c8a0e5",
          "md5": "54e2c7516f50158929a14524f9e8a188",
          "sha256": "70b2edd6e313649365e05b83ba13d2da083c19dbbc1e7266a728dfe24ce832a9"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.18.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54e2c7516f50158929a14524f9e8a188",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 76704,
        "upload_time": "2022-05-31T12:50:21",
        "upload_time_iso_8601": "2022-05-31T12:50:21.727132Z",
        "url": "https://files.pythonhosted.org/packages/37/12/fb3db1c04e4fa8ea932e53832fbcd9074a66375a9779e1df01c371c8a0e5/matrix_commander-2.18.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6b740bf595cf71f6086fc99e8a5b5923b6656c304019b125149181ded0514fa",
          "md5": "3e64424d65b4b78dc7c27b2be8f5c6d6",
          "sha256": "231847a3c07d8ee5d77aeab0601c4ad3f412e32d1fa2c5cb654bd2a3f78bfb45"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.18.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3e64424d65b4b78dc7c27b2be8f5c6d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 102798,
        "upload_time": "2022-05-31T12:50:23",
        "upload_time_iso_8601": "2022-05-31T12:50:23.932109Z",
        "url": "https://files.pythonhosted.org/packages/d6/b7/40bf595cf71f6086fc99e8a5b5923b6656c304019b125149181ded0514fa/matrix-commander-2.18.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.19.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd6e03ffe6169b86ceaab2165f5d80adbf7e30e3256a2c6b009e24db106275f7",
          "md5": "8e5bab959e89e1171e6de81ce3be6a9b",
          "sha256": "4d8e04c3edc67a84ce3dcb0f6ded81e3493f37bbcba1ad9b9769c6f8f6c7b756"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.19.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e5bab959e89e1171e6de81ce3be6a9b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 77959,
        "upload_time": "2022-05-31T17:14:05",
        "upload_time_iso_8601": "2022-05-31T17:14:05.795691Z",
        "url": "https://files.pythonhosted.org/packages/fd/6e/03ffe6169b86ceaab2165f5d80adbf7e30e3256a2c6b009e24db106275f7/matrix_commander-2.19.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "caf7cf6d1e0f9cec73018fcdcfb46a20550fdedc168b6783d25fd9085f3e5faa",
          "md5": "a519236d4636ffa2cb7cd3395dfddb0f",
          "sha256": "41fd289dc1ec5fe00afe71a3ece685f9d6dac284c623979bb6868ad1ef09d968"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.19.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a519236d4636ffa2cb7cd3395dfddb0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 104394,
        "upload_time": "2022-05-31T17:14:07",
        "upload_time_iso_8601": "2022-05-31T17:14:07.804883Z",
        "url": "https://files.pythonhosted.org/packages/ca/f7/cf6d1e0f9cec73018fcdcfb46a20550fdedc168b6783d25fd9085f3e5faa/matrix-commander-2.19.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.20.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcddb47c5c58e13db58250b3d7d2897cdc122dcee7a2087c9bfb42858cca8601",
          "md5": "a5cb124d250f0a79d1dd0f19cdc0feb2",
          "sha256": "df85c7adfa7d4b1c8aef9b6ba6224286729a5b4d26b3f591aae6cf4dd4b56f9a"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.20.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5cb124d250f0a79d1dd0f19cdc0feb2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 82461,
        "upload_time": "2022-06-01T09:22:37",
        "upload_time_iso_8601": "2022-06-01T09:22:37.687878Z",
        "url": "https://files.pythonhosted.org/packages/fc/dd/b47c5c58e13db58250b3d7d2897cdc122dcee7a2087c9bfb42858cca8601/matrix_commander-2.20.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "029fd34d355f91e72a9c311eec980cb1f55ae3835058dae584d081e0586f14a1",
          "md5": "03a2643366176e82ee993a52958ecfb7",
          "sha256": "3af71f1398186ce4ae8d9cae36e55c7b41000d18d9604841acd8fb6448bc2607"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.20.0.tar.gz",
        "has_sig": false,
        "md5_digest": "03a2643366176e82ee993a52958ecfb7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 110914,
        "upload_time": "2022-06-01T09:22:39",
        "upload_time_iso_8601": "2022-06-01T09:22:39.590539Z",
        "url": "https://files.pythonhosted.org/packages/02/9f/d34d355f91e72a9c311eec980cb1f55ae3835058dae584d081e0586f14a1/matrix-commander-2.20.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.21.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f91d5d1d0f45b4b2055da84bfbf4189fbca913bff2f6a09583f35bb8708342a",
          "md5": "e82a4a44b0c3bca019c3b4cbb144095e",
          "sha256": "8ac89ebf1dc3c0ac10848976e3326d29f640893cc6756287e5b92df24ad85930"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.21.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e82a4a44b0c3bca019c3b4cbb144095e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 82677,
        "upload_time": "2022-06-02T09:52:30",
        "upload_time_iso_8601": "2022-06-02T09:52:30.044508Z",
        "url": "https://files.pythonhosted.org/packages/7f/91/d5d1d0f45b4b2055da84bfbf4189fbca913bff2f6a09583f35bb8708342a/matrix_commander-2.21.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "804eb78b87322ee8bbba7caa971c3b09a9533bed57480c92f99eb914c6fa1521",
          "md5": "6dbe8d45ecc8f33cdecdf5fb53e1800d",
          "sha256": "09cd6ce7b17f9a9ebccdd7cfa39f03c72f8241a0afafe3c650a2d4319eb1cf38"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.21.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6dbe8d45ecc8f33cdecdf5fb53e1800d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 111266,
        "upload_time": "2022-06-02T09:52:31",
        "upload_time_iso_8601": "2022-06-02T09:52:31.656954Z",
        "url": "https://files.pythonhosted.org/packages/80/4e/b78b87322ee8bbba7caa971c3b09a9533bed57480c92f99eb914c6fa1521/matrix-commander-2.21.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.23.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77f7b7e5aa691a50725d3490f4d6a092b9644d3ac3617ab49dd3fefef52c5326",
          "md5": "8aa2f28829d684774363665c08593c5c",
          "sha256": "4aab7530be429b899543bfa501b5b06bb816b2092aa82b215fb57f187f6f5373"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.23.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8aa2f28829d684774363665c08593c5c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 84725,
        "upload_time": "2022-06-02T16:59:03",
        "upload_time_iso_8601": "2022-06-02T16:59:03.188710Z",
        "url": "https://files.pythonhosted.org/packages/77/f7/b7e5aa691a50725d3490f4d6a092b9644d3ac3617ab49dd3fefef52c5326/matrix_commander-2.23.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86fad3b6e2641709cb91ae2e99b1fcd4f3e2158603b159cefd5c535e325b5f6c",
          "md5": "e4d1701505459d06dd122a3c1263054a",
          "sha256": "f233b7bc7c6524697ae5efde73d94b7ec0d48f0f985e5ff21bebb03899db1547"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.23.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e4d1701505459d06dd122a3c1263054a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 114720,
        "upload_time": "2022-06-02T16:59:06",
        "upload_time_iso_8601": "2022-06-02T16:59:06.339467Z",
        "url": "https://files.pythonhosted.org/packages/86/fa/d3b6e2641709cb91ae2e99b1fcd4f3e2158603b159cefd5c535e325b5f6c/matrix-commander-2.23.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.24.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f03ec6e5639839b8237bf68ce049e0617a4bf375c8c6e8612b95891e795540a",
          "md5": "b4845bf00db9d9a6a22dd6a9346718cd",
          "sha256": "c90f9e44aed8607b2cb343378cd38f0ee817eb4c77f9caf3540520dca24a79a1"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.24.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4845bf00db9d9a6a22dd6a9346718cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 89278,
        "upload_time": "2022-06-03T06:51:41",
        "upload_time_iso_8601": "2022-06-03T06:51:41.097437Z",
        "url": "https://files.pythonhosted.org/packages/0f/03/ec6e5639839b8237bf68ce049e0617a4bf375c8c6e8612b95891e795540a/matrix_commander-2.24.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e4f853bc328ad1e513c672210edc4df56f1c5f05ef03df8110475f827b3ce6d",
          "md5": "6895ffe6a8547b04f882c22a683d3e4d",
          "sha256": "a73c4d01d2243e6f3db968e30e5473ebc5cd49b8313214d65b041ba2487773d2"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.24.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6895ffe6a8547b04f882c22a683d3e4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 121370,
        "upload_time": "2022-06-03T06:51:48",
        "upload_time_iso_8601": "2022-06-03T06:51:48.325479Z",
        "url": "https://files.pythonhosted.org/packages/3e/4f/853bc328ad1e513c672210edc4df56f1c5f05ef03df8110475f827b3ce6d/matrix-commander-2.24.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.27.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a13e6e74738c1e4be9f830da2eb380ffd9f4db3070b558627e8bfc173e134cc9",
          "md5": "aa9ecb6c963bef76ef03ae087af7b5ff",
          "sha256": "2aaef7cba264172c6b6997456e4450ae12b480b75d06d41138486e64f9890e32"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.27.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa9ecb6c963bef76ef03ae087af7b5ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 89926,
        "upload_time": "2022-06-03T13:50:52",
        "upload_time_iso_8601": "2022-06-03T13:50:52.935235Z",
        "url": "https://files.pythonhosted.org/packages/a1/3e/6e74738c1e4be9f830da2eb380ffd9f4db3070b558627e8bfc173e134cc9/matrix_commander-2.27.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8adf8b2c2a0ba2030f7ee7f96ce921b608b00a3f6c1167d8fcd86d0ee5f8c0f8",
          "md5": "2f203aca9e27ecc31734ec8c544412ea",
          "sha256": "43abac1727393e0c14ea5daceacf0836cdde8a6c03eb66d1bdaec8405c4c1bc6"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.27.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2f203aca9e27ecc31734ec8c544412ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 122544,
        "upload_time": "2022-06-03T13:50:54",
        "upload_time_iso_8601": "2022-06-03T13:50:54.459252Z",
        "url": "https://files.pythonhosted.org/packages/8a/df/8b2c2a0ba2030f7ee7f96ce921b608b00a3f6c1167d8fcd86d0ee5f8c0f8/matrix-commander-2.27.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.28.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1fc2157ce3fc2c66a097030f43e50ed37831835216183023ae3134b839fd44f",
          "md5": "c3e17d7906fd5bae511b3dd44a369264",
          "sha256": "ea0dd390b0d186513f4b40fb588786d2277e17d95f48ed999123545391556244"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.28.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3e17d7906fd5bae511b3dd44a369264",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 90776,
        "upload_time": "2022-06-03T19:11:16",
        "upload_time_iso_8601": "2022-06-03T19:11:16.060736Z",
        "url": "https://files.pythonhosted.org/packages/d1/fc/2157ce3fc2c66a097030f43e50ed37831835216183023ae3134b839fd44f/matrix_commander-2.28.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0bb9e838b3bb3deddbbccf2f028ba5f00fdb3184e91b53ce74779766999a865",
          "md5": "6712291f33aab4e81186acf16e5b91bc",
          "sha256": "e8ad65212466045b0dabc2e0bfe124e7b8fe3a110a42e5c656dae99d817ea999"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.28.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6712291f33aab4e81186acf16e5b91bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 123819,
        "upload_time": "2022-06-03T19:11:17",
        "upload_time_iso_8601": "2022-06-03T19:11:17.628960Z",
        "url": "https://files.pythonhosted.org/packages/f0/bb/9e838b3bb3deddbbccf2f028ba5f00fdb3184e91b53ce74779766999a865/matrix-commander-2.28.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.29.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9146beb67df118782d73e2af08176d7eb4a939753d14efdba33875760519b444",
          "md5": "bfcc5d6e35fc8198c5692d6fa43f0fda",
          "sha256": "deca2a37e5232b2140b07cc0050274387a84b591759cdaa585aee513c24abab6"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.29.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bfcc5d6e35fc8198c5692d6fa43f0fda",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 93372,
        "upload_time": "2022-06-05T08:18:34",
        "upload_time_iso_8601": "2022-06-05T08:18:34.366984Z",
        "url": "https://files.pythonhosted.org/packages/91/46/beb67df118782d73e2af08176d7eb4a939753d14efdba33875760519b444/matrix_commander-2.29.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a477b73c211d05f04c8cd87ed551c62b42052c2d80855aced806f45dd2b1f5b1",
          "md5": "253b2c99293dfa1bd78de036b3df3bd0",
          "sha256": "518b7dfd3e40107192ac66d9cb038887eeec2b4d7ff7183b3ffcbf17d9f871d0"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.29.0.tar.gz",
        "has_sig": false,
        "md5_digest": "253b2c99293dfa1bd78de036b3df3bd0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 127674,
        "upload_time": "2022-06-05T08:18:35",
        "upload_time_iso_8601": "2022-06-05T08:18:35.855674Z",
        "url": "https://files.pythonhosted.org/packages/a4/77/b73c211d05f04c8cd87ed551c62b42052c2d80855aced806f45dd2b1f5b1/matrix-commander-2.29.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.30.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81d986f159ba2886ecc7f754dc82a1a05c81914ec0367cfd0e6baf4ef17be9f5",
          "md5": "b1fde96c674aff262cb168e8d80149ac",
          "sha256": "0ac77133003e20dea9cd55c49c840c08902b31a2cd9ccdf4706e5ddca4fbc40f"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.30.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1fde96c674aff262cb168e8d80149ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 96096,
        "upload_time": "2022-06-05T15:13:52",
        "upload_time_iso_8601": "2022-06-05T15:13:52.791773Z",
        "url": "https://files.pythonhosted.org/packages/81/d9/86f159ba2886ecc7f754dc82a1a05c81914ec0367cfd0e6baf4ef17be9f5/matrix_commander-2.30.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "136caab4980d054aef5fe7090c18fb2099381d57b87f0cea603015ee0907259d",
          "md5": "220b301ffcfe50dffe3aea884e3801e8",
          "sha256": "d78ae045e9746fa35dca3b705195988a90360b8907e84b9d6fe6a8b5c9e4b33c"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.30.0.tar.gz",
        "has_sig": false,
        "md5_digest": "220b301ffcfe50dffe3aea884e3801e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 131668,
        "upload_time": "2022-06-05T15:13:54",
        "upload_time_iso_8601": "2022-06-05T15:13:54.232542Z",
        "url": "https://files.pythonhosted.org/packages/13/6c/aab4980d054aef5fe7090c18fb2099381d57b87f0cea603015ee0907259d/matrix-commander-2.30.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.31.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0b028530f9f5592458775dd2558227692dc93035f589701fdb7e9df71a7a285",
          "md5": "51afcee4c466d85e7eb03c9ed07b8ecd",
          "sha256": "4bc45c8c0273d9cd73784a4e8627dc23287a89abb435d4556ded30a644fff2b0"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.31.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "51afcee4c466d85e7eb03c9ed07b8ecd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 98073,
        "upload_time": "2022-06-06T16:50:06",
        "upload_time_iso_8601": "2022-06-06T16:50:06.727390Z",
        "url": "https://files.pythonhosted.org/packages/b0/b0/28530f9f5592458775dd2558227692dc93035f589701fdb7e9df71a7a285/matrix_commander-2.31.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65bbadf1c8405e75def19e18a8126adc2ba22e3c517e4865324e2380655044cb",
          "md5": "f0a1a6026bfa4eceed60c3ff35b7b51a",
          "sha256": "0c48e2b4c2e64303229d13ac673f8146edf845dce0753936c5dbe3f54f221120"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.31.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f0a1a6026bfa4eceed60c3ff35b7b51a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 134463,
        "upload_time": "2022-06-06T16:50:11",
        "upload_time_iso_8601": "2022-06-06T16:50:11.673664Z",
        "url": "https://files.pythonhosted.org/packages/65/bb/adf1c8405e75def19e18a8126adc2ba22e3c517e4865324e2380655044cb/matrix-commander-2.31.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.32.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "845f2fd6e6a8eb85d25615e6676f163e8eded524cbb9dbb53882ae5782e7a302",
          "md5": "198921994fa3d10bc095edeea20f13a8",
          "sha256": "eb40e5cf6ef8233a82b0fd893628b11df6c21bd80cf95e07459a01a8008f1be1"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.32.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "198921994fa3d10bc095edeea20f13a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 99173,
        "upload_time": "2022-06-07T16:10:10",
        "upload_time_iso_8601": "2022-06-07T16:10:10.496155Z",
        "url": "https://files.pythonhosted.org/packages/84/5f/2fd6e6a8eb85d25615e6676f163e8eded524cbb9dbb53882ae5782e7a302/matrix_commander-2.32.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f8df5a935203088372886ceda98905a9ce38997b9caaa46a3f89736cd02f4b6",
          "md5": "a105e868ed0dff7f5c4a4ed2ba601b9a",
          "sha256": "2c0b8668a915bdc15030cf83519df9fade4cfa3e14f34448d3f49df0e851bfc3"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.32.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a105e868ed0dff7f5c4a4ed2ba601b9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 136039,
        "upload_time": "2022-06-07T16:10:12",
        "upload_time_iso_8601": "2022-06-07T16:10:12.165104Z",
        "url": "https://files.pythonhosted.org/packages/1f/8d/f5a935203088372886ceda98905a9ce38997b9caaa46a3f89736cd02f4b6/matrix-commander-2.32.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.34.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5f70d040bd1171f3b5246e9b0a5fdb664aecb7483d3ebb45280574b41696b5d",
          "md5": "f564c978d4eab49902e08ed00760f191",
          "sha256": "cbf5a60b7435451219d996217ebd78484b890bb76c826053afdb8cf714d260a0"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.34.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f564c978d4eab49902e08ed00760f191",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 101623,
        "upload_time": "2022-06-08T18:37:40",
        "upload_time_iso_8601": "2022-06-08T18:37:40.182188Z",
        "url": "https://files.pythonhosted.org/packages/a5/f7/0d040bd1171f3b5246e9b0a5fdb664aecb7483d3ebb45280574b41696b5d/matrix_commander-2.34.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d27196261304699823a9b251477d1fc673674cdc367884a89c0a5882aa25eae1",
          "md5": "a1ecc2e7f6f2203d1f99f4aee9278926",
          "sha256": "a841a6cc15028e0d004477e9c51f3769a817bd2f288e77102ee5b800386a01ed"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.34.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a1ecc2e7f6f2203d1f99f4aee9278926",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 139985,
        "upload_time": "2022-06-08T18:37:42",
        "upload_time_iso_8601": "2022-06-08T18:37:42.038011Z",
        "url": "https://files.pythonhosted.org/packages/d2/71/96261304699823a9b251477d1fc673674cdc367884a89c0a5882aa25eae1/matrix-commander-2.34.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.34.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1fcd0cd6becac2bf9b2820e8f317e94cf0b393989b857f0b422f81b772a6cb0",
          "md5": "089704a51a5adf46d5917670fb1b798c",
          "sha256": "c0425ac2a4aeba27b612c3bb346f52cc8985c544aa78dd19230a063580f5dbfa"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.34.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "089704a51a5adf46d5917670fb1b798c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 101822,
        "upload_time": "2022-06-09T08:56:47",
        "upload_time_iso_8601": "2022-06-09T08:56:47.829720Z",
        "url": "https://files.pythonhosted.org/packages/f1/fc/d0cd6becac2bf9b2820e8f317e94cf0b393989b857f0b422f81b772a6cb0/matrix_commander-2.34.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69feb9bad2f662291953ed054b79ce64e5ef06966d058b9f962bd4a57208a915",
          "md5": "49f64ba78ce38d20a4f4568b8b13530e",
          "sha256": "b3177b75df11f7498e9a2304ff32e89aed0ab44f30e3724e7678cc2a426fa162"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.34.1.tar.gz",
        "has_sig": false,
        "md5_digest": "49f64ba78ce38d20a4f4568b8b13530e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 140581,
        "upload_time": "2022-06-09T08:56:52",
        "upload_time_iso_8601": "2022-06-09T08:56:52.938906Z",
        "url": "https://files.pythonhosted.org/packages/69/fe/b9bad2f662291953ed054b79ce64e5ef06966d058b9f962bd4a57208a915/matrix-commander-2.34.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.35.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5e294793f918abe39297fb0c382eb752e71eab1e315f0cd7a9ae8db914868cd",
          "md5": "678ed2f703422ff4c9a1e136a4d6396b",
          "sha256": "fe567de748cacfccdede75c9ef71ed83dd6736cc1cd3b7c3ccfdf97b4e34f7d3"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.35.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "678ed2f703422ff4c9a1e136a4d6396b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 103891,
        "upload_time": "2022-06-09T12:41:06",
        "upload_time_iso_8601": "2022-06-09T12:41:06.541866Z",
        "url": "https://files.pythonhosted.org/packages/b5/e2/94793f918abe39297fb0c382eb752e71eab1e315f0cd7a9ae8db914868cd/matrix_commander-2.35.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e76a4fa51b2da6e0eb2ee31100eac6082b7eb1c5e09c68eeec535fbaa447ac44",
          "md5": "9a754b01b4f424926e9643147e7cd4d3",
          "sha256": "372dd85513542e1d73553d1f73b1d552de4852580d13ff836e60a774c5b32518"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.35.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9a754b01b4f424926e9643147e7cd4d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 143572,
        "upload_time": "2022-06-09T12:41:08",
        "upload_time_iso_8601": "2022-06-09T12:41:08.740945Z",
        "url": "https://files.pythonhosted.org/packages/e7/6a/4fa51b2da6e0eb2ee31100eac6082b7eb1c5e09c68eeec535fbaa447ac44/matrix-commander-2.35.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.36.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "940b858d803cf0acc3e421b2296ca83f7e21ac64e3f2141777a6e1ffd2d84d60",
          "md5": "3ac8b801a587c80a674ab4318e9d2370",
          "sha256": "7dc91223474fb214d74d9cf8d376d368a126860e0c361adccdac50409293dfdc"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.36.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ac8b801a587c80a674ab4318e9d2370",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 106127,
        "upload_time": "2022-06-10T10:08:23",
        "upload_time_iso_8601": "2022-06-10T10:08:23.984544Z",
        "url": "https://files.pythonhosted.org/packages/94/0b/858d803cf0acc3e421b2296ca83f7e21ac64e3f2141777a6e1ffd2d84d60/matrix_commander-2.36.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f5165fe7842cbb02c90ce98e56c04c2357f56898886c008f9e576689ba8c3d3",
          "md5": "d3d383e370ed74c5dd91a1f8c386bef7",
          "sha256": "fec4642dc1b0a4d4ff6a42dc0dc56f4487ff7f7f6a5a13853a586629d811c75a"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.36.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d3d383e370ed74c5dd91a1f8c386bef7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 147126,
        "upload_time": "2022-06-10T10:08:25",
        "upload_time_iso_8601": "2022-06-10T10:08:25.782094Z",
        "url": "https://files.pythonhosted.org/packages/0f/51/65fe7842cbb02c90ce98e56c04c2357f56898886c008f9e576689ba8c3d3/matrix-commander-2.36.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.37.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1ee66e8779cf97a4bc08dad63474c0e5f759bcf776d2fc113cd65e512df21c3",
          "md5": "b1221745c120b4408f2e091a06e862e0",
          "sha256": "6c0d102201211eef140d7544f15d6ec2052f24ef0c3630acb4c049936246aee8"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.37.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1221745c120b4408f2e091a06e862e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 106772,
        "upload_time": "2022-06-13T09:58:40",
        "upload_time_iso_8601": "2022-06-13T09:58:40.139324Z",
        "url": "https://files.pythonhosted.org/packages/f1/ee/66e8779cf97a4bc08dad63474c0e5f759bcf776d2fc113cd65e512df21c3/matrix_commander-2.37.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58ea4273b63880bf0774200345b8af7fd7443eb63c5d4bb0ba2202bd722dab54",
          "md5": "1b9932c0654f0a639c9a543daeb0f5cd",
          "sha256": "789e7ae77e634c071060ee2ce868b59327062075dd47b3e827738061e264287a"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.37.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1b9932c0654f0a639c9a543daeb0f5cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 148086,
        "upload_time": "2022-06-13T09:58:41",
        "upload_time_iso_8601": "2022-06-13T09:58:41.466377Z",
        "url": "https://files.pythonhosted.org/packages/58/ea/4273b63880bf0774200345b8af7fd7443eb63c5d4bb0ba2202bd722dab54/matrix-commander-2.37.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.38.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db3353e996e4d9f0e2cdc36e1ce413c1ca7f810ef0261baaea89448667c5b37a",
          "md5": "165a9e599f9ea03892f2a6bb5f974ac0",
          "sha256": "dac83f3599d67749b62793ffe959a994f67ef623049f2cbed3b9e4c8720e9879"
        },
        "downloads": -1,
        "filename": "matrix_commander-2.38.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "165a9e599f9ea03892f2a6bb5f974ac0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 113665,
        "upload_time": "2022-06-23T12:29:43",
        "upload_time_iso_8601": "2022-06-23T12:29:43.732603Z",
        "url": "https://files.pythonhosted.org/packages/db/33/53e996e4d9f0e2cdc36e1ce413c1ca7f810ef0261baaea89448667c5b37a/matrix_commander-2.38.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "373ea9ec87d07518a7d5de9b3fbf081ff8ba3b2e2d8ccfe4073daf45a880c8ce",
          "md5": "b7e24f9541bd5c2711b999c8e2f3ad95",
          "sha256": "8f04751d9f28f85f017108185541f2fcda9c317defec6262f2ee209867c1ae80"
        },
        "downloads": -1,
        "filename": "matrix-commander-2.38.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b7e24f9541bd5c2711b999c8e2f3ad95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 158850,
        "upload_time": "2022-06-23T12:29:46",
        "upload_time_iso_8601": "2022-06-23T12:29:46.211657Z",
        "url": "https://files.pythonhosted.org/packages/37/3e/a9ec87d07518a7d5de9b3fbf081ff8ba3b2e2d8ccfe4073daf45a880c8ce/matrix-commander-2.38.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7fcdd35d265de2e445211254fbf7aa661882645dcab4415a00f1fa2a4ad9176",
          "md5": "aebb493eb869e3796205ddf8a289a603",
          "sha256": "98d10151b478721e1c61ba2307469981ca9e180ec6fe778f2626a1b022378fd0"
        },
        "downloads": -1,
        "filename": "matrix_commander-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aebb493eb869e3796205ddf8a289a603",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 121547,
        "upload_time": "2022-06-25T12:26:21",
        "upload_time_iso_8601": "2022-06-25T12:26:21.841179Z",
        "url": "https://files.pythonhosted.org/packages/d7/fc/dd35d265de2e445211254fbf7aa661882645dcab4415a00f1fa2a4ad9176/matrix_commander-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72dee84430bdb8f3727c980d87d414dd3989b86ff2f2952b85fd68dc930c54cb",
          "md5": "8f2a2a222b5d7faba2f1f79566fa699c",
          "sha256": "ac4bab1d6605193174ef9f2d002f4dbabaf367f37ab67465c6161854d27808df"
        },
        "downloads": -1,
        "filename": "matrix-commander-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8f2a2a222b5d7faba2f1f79566fa699c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 171671,
        "upload_time": "2022-06-25T12:26:23",
        "upload_time_iso_8601": "2022-06-25T12:26:23.725018Z",
        "url": "https://files.pythonhosted.org/packages/72/de/e84430bdb8f3727c980d87d414dd3989b86ff2f2952b85fd68dc930c54cb/matrix-commander-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d89a5eda68432a737f9349cac02e1bc0592b9a4c1d8d9640efc4025e8084526f",
          "md5": "0c77c4c39b16e58889aae8dfc4997f22",
          "sha256": "66faeb8f665441c642e66a93e3d74282082aabe984c5daf01901980d5071c761"
        },
        "downloads": -1,
        "filename": "matrix_commander-3.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c77c4c39b16e58889aae8dfc4997f22",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 123228,
        "upload_time": "2022-07-22T15:56:53",
        "upload_time_iso_8601": "2022-07-22T15:56:53.202638Z",
        "url": "https://files.pythonhosted.org/packages/d8/9a/5eda68432a737f9349cac02e1bc0592b9a4c1d8d9640efc4025e8084526f/matrix_commander-3.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f24beda2be4024bc001417b74f920feeb600deeada0c1a94f505a3fb4c8aefce",
          "md5": "4ccf5d0e84b6438a81365cc613d5fa2e",
          "sha256": "aad6bf15633d3802967a27d5b364ad05058ad74ce4e55dc532ae900f2b0b2195"
        },
        "downloads": -1,
        "filename": "matrix-commander-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4ccf5d0e84b6438a81365cc613d5fa2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 174111,
        "upload_time": "2022-07-22T15:56:54",
        "upload_time_iso_8601": "2022-07-22T15:56:54.510737Z",
        "url": "https://files.pythonhosted.org/packages/f2/4b/eda2be4024bc001417b74f920feeb600deeada0c1a94f505a3fb4c8aefce/matrix-commander-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36c6f2c74f9dff18c9f0b837aecc6cbf74d39ac0513ea38297b797c59038e29b",
          "md5": "2b986970bca78362546720983c2bc5b9",
          "sha256": "39407b9a15b4e0201db46ef84333d37349fb239ed5d3a4175306d53169cb43ce"
        },
        "downloads": -1,
        "filename": "matrix_commander-3.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b986970bca78362546720983c2bc5b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 123380,
        "upload_time": "2022-07-29T13:30:15",
        "upload_time_iso_8601": "2022-07-29T13:30:15.985673Z",
        "url": "https://files.pythonhosted.org/packages/36/c6/f2c74f9dff18c9f0b837aecc6cbf74d39ac0513ea38297b797c59038e29b/matrix_commander-3.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2da418d5e6fb6cc6cffcaf41b16c4cb22af6e9c625ce78051df1cdb2ed5d96d5",
          "md5": "2ac0f9c24989ea8315f06fe9a4fe71c0",
          "sha256": "8a1dacfd7c4f4d76360c754e70439b7d1dc6d207d4ad55bfcc9905f764ed90cf"
        },
        "downloads": -1,
        "filename": "matrix-commander-3.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2ac0f9c24989ea8315f06fe9a4fe71c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 174269,
        "upload_time": "2022-07-29T13:30:17",
        "upload_time_iso_8601": "2022-07-29T13:30:17.689715Z",
        "url": "https://files.pythonhosted.org/packages/2d/a4/18d5e6fb6cc6cffcaf41b16c4cb22af6e9c625ce78051df1cdb2ed5d96d5/matrix-commander-3.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb850c7f095ff564b037a9f94d09754daed7aca198d2ad50bd42419db8dce8d3",
          "md5": "2b45a1598a2f4e8801debcfbdb2fb872",
          "sha256": "03c291031cedbaf64285b1c53a6030dadfdb933120011c63a4cc51b1411e4b2f"
        },
        "downloads": -1,
        "filename": "matrix_commander-3.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b45a1598a2f4e8801debcfbdb2fb872",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 123379,
        "upload_time": "2022-07-29T14:02:12",
        "upload_time_iso_8601": "2022-07-29T14:02:12.347660Z",
        "url": "https://files.pythonhosted.org/packages/fb/85/0c7f095ff564b037a9f94d09754daed7aca198d2ad50bd42419db8dce8d3/matrix_commander-3.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8786aaffe976332c3151e10a476fec4380f0b5d713f31303986aa20d4c47e570",
          "md5": "03af917b6d81adec83e7252b7d0d5e87",
          "sha256": "adac7195f911ad32398892e86a6c053119c64f7bee82474a0107749f379a3176"
        },
        "downloads": -1,
        "filename": "matrix-commander-3.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "03af917b6d81adec83e7252b7d0d5e87",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 174252,
        "upload_time": "2022-07-29T14:02:14",
        "upload_time_iso_8601": "2022-07-29T14:02:14.151910Z",
        "url": "https://files.pythonhosted.org/packages/87/86/aaffe976332c3151e10a476fec4380f0b5d713f31303986aa20d4c47e570/matrix-commander-3.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cc949d8c71770e456b82c7e3475c7a1ef2f50a5092a240b0d8d29328b5dfb64",
          "md5": "e3f9b8bed3d92c72846d25a147008c96",
          "sha256": "a35247fe315518b13564562adcc2dd3367e98c8d8bf2936422b607cbf6906a32"
        },
        "downloads": -1,
        "filename": "matrix_commander-3.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3f9b8bed3d92c72846d25a147008c96",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 123379,
        "upload_time": "2022-07-29T14:47:23",
        "upload_time_iso_8601": "2022-07-29T14:47:23.260929Z",
        "url": "https://files.pythonhosted.org/packages/4c/c9/49d8c71770e456b82c7e3475c7a1ef2f50a5092a240b0d8d29328b5dfb64/matrix_commander-3.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57e517204112ab3965dca47521f1f6cdf03e0ec6c9dc3d04fb8a69154b6337bc",
          "md5": "a8b191b359ceadf894bf62cf53bcfe97",
          "sha256": "815feece179e63412ae1a6924aa6bd3bb050f686372529f97245320ca9a3ccc1"
        },
        "downloads": -1,
        "filename": "matrix-commander-3.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a8b191b359ceadf894bf62cf53bcfe97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 174254,
        "upload_time": "2022-07-29T14:47:25",
        "upload_time_iso_8601": "2022-07-29T14:47:25.205196Z",
        "url": "https://files.pythonhosted.org/packages/57/e5/17204112ab3965dca47521f1f6cdf03e0ec6c9dc3d04fb8a69154b6337bc/matrix-commander-3.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "930cb0e138158220af3d2da24e9c7fee5ef5b3541c86a8d3637788be3b42edbc",
          "md5": "8f0a4f92863812037845bb9ec1c58a96",
          "sha256": "8f04c28ff82b25b61672417faa833ff65d62134fedb5b08af80b05630683ec7d"
        },
        "downloads": -1,
        "filename": "matrix_commander-3.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f0a4f92863812037845bb9ec1c58a96",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 123384,
        "upload_time": "2022-07-29T15:14:16",
        "upload_time_iso_8601": "2022-07-29T15:14:16.084041Z",
        "url": "https://files.pythonhosted.org/packages/93/0c/b0e138158220af3d2da24e9c7fee5ef5b3541c86a8d3637788be3b42edbc/matrix_commander-3.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7536ece03f906b5ca677886d1a9540db926ec389ccd0473515ce4538f035e9b3",
          "md5": "3d3edafd9d8b6f6499b7c4a16e625d1e",
          "sha256": "9d3c080892745b0dd0c4c511c0560b1ab781a977933e9ecee09989c06d3e0412"
        },
        "downloads": -1,
        "filename": "matrix-commander-3.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3d3edafd9d8b6f6499b7c4a16e625d1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 174263,
        "upload_time": "2022-07-29T15:14:17",
        "upload_time_iso_8601": "2022-07-29T15:14:17.710922Z",
        "url": "https://files.pythonhosted.org/packages/75/36/ece03f906b5ca677886d1a9540db926ec389ccd0473515ce4538f035e9b3/matrix-commander-3.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5c77f6de60696be44e6928fb8de7ffe9d466a6aa9f18b11ad72404a2ea996e5",
          "md5": "71bbd462fcbce5c97fc8e1c059713284",
          "sha256": "546fb5ddaaa3229cc6e3cd010b8fccbe1346744c4442a07509858d4243633161"
        },
        "downloads": -1,
        "filename": "matrix_commander-3.5.19-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71bbd462fcbce5c97fc8e1c059713284",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 134317,
        "upload_time": "2022-10-15T14:07:02",
        "upload_time_iso_8601": "2022-10-15T14:07:02.946408Z",
        "url": "https://files.pythonhosted.org/packages/b5/c7/7f6de60696be44e6928fb8de7ffe9d466a6aa9f18b11ad72404a2ea996e5/matrix_commander-3.5.19-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86454d96cf438912a3bdec44a07f290641dfa78c5a125ac5379bdad96db9cd8f",
          "md5": "95515559d24506199747d0c3b812163f",
          "sha256": "19b8a2562e373231ef898ddabfd5172453e61a43909203d62469bf4fe8a5b8c9"
        },
        "downloads": -1,
        "filename": "matrix-commander-3.5.19.tar.gz",
        "has_sig": false,
        "md5_digest": "95515559d24506199747d0c3b812163f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 188271,
        "upload_time": "2022-10-15T14:07:05",
        "upload_time_iso_8601": "2022-10-15T14:07:05.061936Z",
        "url": "https://files.pythonhosted.org/packages/86/45/4d96cf438912a3bdec44a07f290641dfa78c5a125ac5379bdad96db9cd8f/matrix-commander-3.5.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.24": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f40aba6573a93235a3fcdc19126761a416b1bede5948f5f62435eb92f084af55",
          "md5": "1b627d55fefb43ba56b90cad7d17ad1d",
          "sha256": "e40b6d91648f8e84e21968ebc97000667f352dbef4092b4b88ea730059ee260d"
        },
        "downloads": -1,
        "filename": "matrix_commander-3.5.24-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b627d55fefb43ba56b90cad7d17ad1d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 134704,
        "upload_time": "2022-11-04T12:49:01",
        "upload_time_iso_8601": "2022-11-04T12:49:01.426333Z",
        "url": "https://files.pythonhosted.org/packages/f4/0a/ba6573a93235a3fcdc19126761a416b1bede5948f5f62435eb92f084af55/matrix_commander-3.5.24-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f8f76d434e15a7ed305500706f9bd175fc4e15a9536432104da770ceb1849e8",
          "md5": "b053f58f36c819c79fad95e7c8d13961",
          "sha256": "5b18d74db1a19ab4e1656ce797604e559a4297f779a24e1ad2d1643c4ee73717"
        },
        "downloads": -1,
        "filename": "matrix-commander-3.5.24.tar.gz",
        "has_sig": false,
        "md5_digest": "b053f58f36c819c79fad95e7c8d13961",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 188711,
        "upload_time": "2022-11-04T12:49:03",
        "upload_time_iso_8601": "2022-11-04T12:49:03.349191Z",
        "url": "https://files.pythonhosted.org/packages/3f/8f/76d434e15a7ed305500706f9bd175fc4e15a9536432104da770ceb1849e8/matrix-commander-3.5.24.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.25": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1806e0becbb396dd16a0e51254deb2ab149683772ab0208e0e42080e12e3d579",
          "md5": "98b998f0d5a52c00d0a7b2a0df0c3374",
          "sha256": "6309c875640d0da88755b60052a75a7053be7f1d0395513bd1af06c1a338d960"
        },
        "downloads": -1,
        "filename": "matrix_commander-3.5.25-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98b998f0d5a52c00d0a7b2a0df0c3374",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 135654,
        "upload_time": "2022-11-21T18:13:07",
        "upload_time_iso_8601": "2022-11-21T18:13:07.919492Z",
        "url": "https://files.pythonhosted.org/packages/18/06/e0becbb396dd16a0e51254deb2ab149683772ab0208e0e42080e12e3d579/matrix_commander-3.5.25-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd97562cf9361f6e475cf812beb846e6058294111ecc19a2e98d241c4d07e7fd",
          "md5": "fec55e6d91e105b8eaea69c14db2c49a",
          "sha256": "67eb07c7b2dfab72765c6ff24695cb2f2eeba2a63347c689eeae6083ce2488c8"
        },
        "downloads": -1,
        "filename": "matrix-commander-3.5.25.tar.gz",
        "has_sig": false,
        "md5_digest": "fec55e6d91e105b8eaea69c14db2c49a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 190148,
        "upload_time": "2022-11-21T18:13:20",
        "upload_time_iso_8601": "2022-11-21T18:13:20.048652Z",
        "url": "https://files.pythonhosted.org/packages/cd/97/562cf9361f6e475cf812beb846e6058294111ecc19a2e98d241c4d07e7fd/matrix-commander-3.5.25.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.26": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17b06a1eae63b6d13ac31882a907fbceae6354a45499f2eefba3cdc60729861f",
          "md5": "2cea61c5c0c14048336523a654f0a672",
          "sha256": "6c38d3edaefd350e44786bcb6bb659d731007d539badce61ed27387e1f3d8ede"
        },
        "downloads": -1,
        "filename": "matrix_commander-3.5.26-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cea61c5c0c14048336523a654f0a672",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 136289,
        "upload_time": "2022-11-21T19:50:55",
        "upload_time_iso_8601": "2022-11-21T19:50:55.110778Z",
        "url": "https://files.pythonhosted.org/packages/17/b0/6a1eae63b6d13ac31882a907fbceae6354a45499f2eefba3cdc60729861f/matrix_commander-3.5.26-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efa1ed2f2a0aaeb81b7aaf178eb520bdc031d5c5fc72d38e71346adda45bf007",
          "md5": "3bd40189468bba0aadfe6c7031debfad",
          "sha256": "0eff8cf494a64d3b614c36f4694d8a2a84ff23eedf9ef65742ee1a9b34f011ce"
        },
        "downloads": -1,
        "filename": "matrix-commander-3.5.26.tar.gz",
        "has_sig": false,
        "md5_digest": "3bd40189468bba0aadfe6c7031debfad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 191236,
        "upload_time": "2022-11-21T19:50:58",
        "upload_time_iso_8601": "2022-11-21T19:50:58.563047Z",
        "url": "https://files.pythonhosted.org/packages/ef/a1/ed2f2a0aaeb81b7aaf178eb520bdc031d5c5fc72d38e71346adda45bf007/matrix-commander-3.5.26.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.27": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c87120d660dc4570cc85d31e350fb03ac7a9b4178e30c5e128b787a033c4c118",
          "md5": "69795a855b67f247cb4dbd3b08dfdd55",
          "sha256": "944a58aa650b7cd8b6b63abdb3fdf1f2ef41ee50bb599329023681e21c748c31"
        },
        "downloads": -1,
        "filename": "matrix_commander-3.5.27-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69795a855b67f247cb4dbd3b08dfdd55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 136335,
        "upload_time": "2022-11-21T23:24:51",
        "upload_time_iso_8601": "2022-11-21T23:24:51.165630Z",
        "url": "https://files.pythonhosted.org/packages/c8/71/20d660dc4570cc85d31e350fb03ac7a9b4178e30c5e128b787a033c4c118/matrix_commander-3.5.27-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f3f53c2294b03becd00227dcf94a20efce204857b263de8ebc8534dd93476c4",
          "md5": "c6a6a82a463bcaa0209f0113137b65b1",
          "sha256": "83110ca75a49e58a9ea6cfff50141303bdc7dc73cae1bc942487bbd46cc2c90e"
        },
        "downloads": -1,
        "filename": "matrix-commander-3.5.27.tar.gz",
        "has_sig": false,
        "md5_digest": "c6a6a82a463bcaa0209f0113137b65b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 191303,
        "upload_time": "2022-11-21T23:24:55",
        "upload_time_iso_8601": "2022-11-21T23:24:55.183684Z",
        "url": "https://files.pythonhosted.org/packages/2f/3f/53c2294b03becd00227dcf94a20efce204857b263de8ebc8534dd93476c4/matrix-commander-3.5.27.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6aa8d8b10260ff48c5c7e44d4563f690a0c6af65008eab272d20ec3f744abc28",
          "md5": "3fc40bd0e007707af4bf6dd03b149d45",
          "sha256": "65a09856e12d86d72e215c33eae1ff393c5ede28bacd738c7940567d84fe439a"
        },
        "downloads": -1,
        "filename": "matrix_commander-4.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3fc40bd0e007707af4bf6dd03b149d45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 137045,
        "upload_time": "2022-11-22T09:32:43",
        "upload_time_iso_8601": "2022-11-22T09:32:43.656441Z",
        "url": "https://files.pythonhosted.org/packages/6a/a8/d8b10260ff48c5c7e44d4563f690a0c6af65008eab272d20ec3f744abc28/matrix_commander-4.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75734fe9270fd120ef13cbb989b2fe11543605cf44b880b10cdcfefb26491188",
          "md5": "7d6e086bb7f65b9859bd8f6c15d3f9a9",
          "sha256": "1e7561622b581b2a424c163d0d19fe57ab1869d8d7e71ed261f833e6c071cd2d"
        },
        "downloads": -1,
        "filename": "matrix-commander-4.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7d6e086bb7f65b9859bd8f6c15d3f9a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 192068,
        "upload_time": "2022-11-22T09:32:47",
        "upload_time_iso_8601": "2022-11-22T09:32:47.425498Z",
        "url": "https://files.pythonhosted.org/packages/75/73/4fe9270fd120ef13cbb989b2fe11543605cf44b880b10cdcfefb26491188/matrix-commander-4.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10a59b9913db41f8d7e858f1ff43c6e86c543139046cf26533ecfe6929549499",
          "md5": "84f007105582898ac6ffdf1f30714774",
          "sha256": "808915d16fb08d25e2af417b9ef7a5c0dfa80ff68bc61bab1d70f71a59ce1e61"
        },
        "downloads": -1,
        "filename": "matrix_commander-5.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84f007105582898ac6ffdf1f30714774",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 110916,
        "upload_time": "2022-11-22T14:04:09",
        "upload_time_iso_8601": "2022-11-22T14:04:09.757573Z",
        "url": "https://files.pythonhosted.org/packages/10/a5/9b9913db41f8d7e858f1ff43c6e86c543139046cf26533ecfe6929549499/matrix_commander-5.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f62339b6cf84183bbb381ddcab9d013524fc2785bd396fac79ba3df16d66fcc2",
          "md5": "a166afde9ab60f9a64624dce27dc5141",
          "sha256": "f35641fed1cf9a0c2ee740b42b09321bcdda4a4530c0efcb036893addb375061"
        },
        "downloads": -1,
        "filename": "matrix-commander-5.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a166afde9ab60f9a64624dce27dc5141",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 167515,
        "upload_time": "2022-11-22T14:04:12",
        "upload_time_iso_8601": "2022-11-22T14:04:12.338340Z",
        "url": "https://files.pythonhosted.org/packages/f6/23/39b6cf84183bbb381ddcab9d013524fc2785bd396fac79ba3df16d66fcc2/matrix-commander-5.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "275b1661fb67dfd5eacb9ed6a15b699934a9c82d2d9c872c8f088f809f9f9655",
          "md5": "57bd4fbca8fc7d2e57cdf06e51420f02",
          "sha256": "5fd05c65403bfaa8e95730d2aa85cb74d897013f921e4725a51753a3ef39a783"
        },
        "downloads": -1,
        "filename": "matrix_commander-5.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57bd4fbca8fc7d2e57cdf06e51420f02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 111903,
        "upload_time": "2022-12-11T20:42:32",
        "upload_time_iso_8601": "2022-12-11T20:42:32.799769Z",
        "url": "https://files.pythonhosted.org/packages/27/5b/1661fb67dfd5eacb9ed6a15b699934a9c82d2d9c872c8f088f809f9f9655/matrix_commander-5.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3b0c6b950037e7422917c7ef05f00ee71b0b9cd009949c5b6eeadf68551394b",
          "md5": "95bde8c6ed50709d1903f2af6142c473",
          "sha256": "0e5b86e2344638e6ef36c8cc81d3ef2941aa49d30188ee282cfebfdcfac02e99"
        },
        "downloads": -1,
        "filename": "matrix-commander-5.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "95bde8c6ed50709d1903f2af6142c473",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 168615,
        "upload_time": "2022-12-11T20:42:35",
        "upload_time_iso_8601": "2022-12-11T20:42:35.160250Z",
        "url": "https://files.pythonhosted.org/packages/a3/b0/c6b950037e7422917c7ef05f00ee71b0b9cd009949c5b6eeadf68551394b/matrix-commander-5.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b50f21facd0e4f72c4de5d03b25cb919e87ea44fdc4104245af8485fb07e1935",
          "md5": "9a89dda3f254193c39f6c6a19da611c2",
          "sha256": "5ecee501bbaf9b263d3f7fa5bf3d31e42c8cf9b2fd9fa78804bba79745f47bd1"
        },
        "downloads": -1,
        "filename": "matrix_commander-5.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a89dda3f254193c39f6c6a19da611c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 117079,
        "upload_time": "2022-12-12T14:05:25",
        "upload_time_iso_8601": "2022-12-12T14:05:25.373254Z",
        "url": "https://files.pythonhosted.org/packages/b5/0f/21facd0e4f72c4de5d03b25cb919e87ea44fdc4104245af8485fb07e1935/matrix_commander-5.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f2b93f3ecb0bc09a59fdab419b9703a3f525c112116fd97b48ea6f432cfcba2",
          "md5": "1ef451138027afe01a7e8e97c50debd2",
          "sha256": "e38787c18fd81150873fb9316aaeeefa01aea78e13e752fd40d530ad707db552"
        },
        "downloads": -1,
        "filename": "matrix-commander-5.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1ef451138027afe01a7e8e97c50debd2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 175549,
        "upload_time": "2022-12-12T14:05:27",
        "upload_time_iso_8601": "2022-12-12T14:05:27.853489Z",
        "url": "https://files.pythonhosted.org/packages/6f/2b/93f3ecb0bc09a59fdab419b9703a3f525c112116fd97b48ea6f432cfcba2/matrix-commander-5.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8cd42a4a308f427db58bb3ee3ee9deaba495e9376b7e092a8dc350f834e17a4",
          "md5": "2dcff5403bc80961687a35dfb880e7d3",
          "sha256": "4474f4e8221dc37f2606d6b679303ba3f5da4efdb661b1a189cabe639bb0df99"
        },
        "downloads": -1,
        "filename": "matrix_commander-6.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2dcff5403bc80961687a35dfb880e7d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 119889,
        "upload_time": "2022-12-13T11:15:29",
        "upload_time_iso_8601": "2022-12-13T11:15:29.369090Z",
        "url": "https://files.pythonhosted.org/packages/a8/cd/42a4a308f427db58bb3ee3ee9deaba495e9376b7e092a8dc350f834e17a4/matrix_commander-6.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8769495158122ce9d9413c480e1d379853ffddb07aef5d3b33332422d073ea61",
          "md5": "b8d1376e84ef7eea2e9786e7124b7334",
          "sha256": "84a2a022fe7aadcbc79f13e817ced40a8ef52938864cf1a5f563394e85308e97"
        },
        "downloads": -1,
        "filename": "matrix-commander-6.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b8d1376e84ef7eea2e9786e7124b7334",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 179987,
        "upload_time": "2022-12-13T11:15:30",
        "upload_time_iso_8601": "2022-12-13T11:15:30.909570Z",
        "url": "https://files.pythonhosted.org/packages/87/69/495158122ce9d9413c480e1d379853ffddb07aef5d3b33332422d073ea61/matrix-commander-6.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b289cc4f53af3d14c589bf6016dfd87220f4f12cdf8239583f215d53dc57e55c",
          "md5": "63533e1da7949f4b120a7605c4dd339d",
          "sha256": "8e0c9031e3018de6a245637dfc2c3b7d66953afe1ca95da48d1a04c00667de1d"
        },
        "downloads": -1,
        "filename": "matrix_commander-6.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63533e1da7949f4b120a7605c4dd339d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 119906,
        "upload_time": "2022-12-16T02:27:13",
        "upload_time_iso_8601": "2022-12-16T02:27:13.212616Z",
        "url": "https://files.pythonhosted.org/packages/b2/89/cc4f53af3d14c589bf6016dfd87220f4f12cdf8239583f215d53dc57e55c/matrix_commander-6.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "082605fd27baf2453eaae363a63db06364a11dcb7e2cf737e1f38f655d6506e6",
          "md5": "8e76f9390368d1c9c00a613fb3bb583d",
          "sha256": "6b7e8d8bbbbb231a38f18912e0a21d3538ed707a62625a051089e35a2986827b"
        },
        "downloads": -1,
        "filename": "matrix-commander-6.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8e76f9390368d1c9c00a613fb3bb583d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 179995,
        "upload_time": "2022-12-16T02:27:15",
        "upload_time_iso_8601": "2022-12-16T02:27:15.748094Z",
        "url": "https://files.pythonhosted.org/packages/08/26/05fd27baf2453eaae363a63db06364a11dcb7e2cf737e1f38f655d6506e6/matrix-commander-6.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b289cc4f53af3d14c589bf6016dfd87220f4f12cdf8239583f215d53dc57e55c",
        "md5": "63533e1da7949f4b120a7605c4dd339d",
        "sha256": "8e0c9031e3018de6a245637dfc2c3b7d66953afe1ca95da48d1a04c00667de1d"
      },
      "downloads": -1,
      "filename": "matrix_commander-6.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "63533e1da7949f4b120a7605c4dd339d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 119906,
      "upload_time": "2022-12-16T02:27:13",
      "upload_time_iso_8601": "2022-12-16T02:27:13.212616Z",
      "url": "https://files.pythonhosted.org/packages/b2/89/cc4f53af3d14c589bf6016dfd87220f4f12cdf8239583f215d53dc57e55c/matrix_commander-6.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "082605fd27baf2453eaae363a63db06364a11dcb7e2cf737e1f38f655d6506e6",
        "md5": "8e76f9390368d1c9c00a613fb3bb583d",
        "sha256": "6b7e8d8bbbbb231a38f18912e0a21d3538ed707a62625a051089e35a2986827b"
      },
      "downloads": -1,
      "filename": "matrix-commander-6.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8e76f9390368d1c9c00a613fb3bb583d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 179995,
      "upload_time": "2022-12-16T02:27:15",
      "upload_time_iso_8601": "2022-12-16T02:27:15.748094Z",
      "url": "https://files.pythonhosted.org/packages/08/26/05fd27baf2453eaae363a63db06364a11dcb7e2cf737e1f38f655d6506e6/matrix-commander-6.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}