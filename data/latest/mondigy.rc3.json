{
  "info": {
    "author": "John Dagdelen",
    "author_email": "jdagdelen@berkeley.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## mondigy\n\nMondigy is a small library for using a Mongodb database as a data loader \nfor [Prodigy](https://prodi.gy) annotation applications.\n\n## Motivation\nProdigy naviely supports loading text data from files and dataset objects, \nbut annotating data that is stored in a MongoDB database is not natively \nsupported. \n\nWith *mondigy* you can annotate data from a MongoDB collection \nand store your annotations in a MongoDB database.\n\n## Features\n* Annotate text data from MongoDB\n* Pipe data directly from your MongoDB database to your Prodigy application\n\n\n## Installation & Setup\n\nMondigy can be installed via `pip install mondigy` or by cloning this repo and \nrunning `python setup.py` in the project root.\n\nMondigy will set up the collections it requires in your mongo database. They are \nnamed with a `_p.<collection_name>`convention. Don't delete these collections or \nmanually edit any of the documents in them.\n\nTo set up mondigy, just enter your MongoDB connection info into your \n[prodigy.json config file](https://prodi.gy/docs/install#config),\nwhich is found in your `PRODIGY_HOME` directory. The source database and annotations \ndatabase (where your completed annotations are stored by Prodigy) can be configured \nindependently or the same database can be specified for both if you want everything\nin the same db. See [/example_config/prodigy.json](/example_config/prodigy.json)\nfor an example config file.\n\n## Code Example\nLet's define a db connection and start annotating data from our MongoDB database!\n\n*Step 1.* Add configuration parameters to `prodigy.json` in your `PRODIGY_HOME` directory. For this example, \nwe'll be limiting our annotations to the 1000 entries that are `in_stock` from the `products` collection \nof our database. We'll also include the product name and product id in the data returned to Prodigy \nso we can include that information in a custom view. .\n\n##### my_db_config.json\n```\n  ...\n  \"db\": \"mondigy.db\",\n  \"db_settings\": {\n    \"mongodb\": {\n      \"source_db\": {\n        \"host\": \"my.database.com\",\n        \"user\": \"mongo_user\",\n        \"password\": \"mongo_pass\",\n        \"database\": \"my_db\",\n        \"auth_source\": \"admin\",\n        \"collection\": \"products\",\n        \"text_field\": \"description\",\n        \"other_fields\": [\"product_name\", \"product_id\"],\n        \"query\": {\"in_stock\": true},\n        \"limit\": 1000\n      },\n      \"annotations_db\": {\n        \"host\": \"my.database.com\",\n        \"user\": \"mongo_user\",\n        \"password\": \"mongo_pass\",\n        \"database\": \"my_db\",\n        \"auth_source\": \"admin\",\n      }\n    }\n  },\n  ...\n}\n```\n\n*Step 2.* Start your Prodigy server and let mondigy point your MongoDB collection at it by \nsupplying the paths of your config file and the Mondigy loader.\n\n```prodigy ner.manual my_ner_task en_core_web_sm - --label FEATURE,KEYWORD```\n\n\n*Step 3.* Annotate! \n\n## License\n\nMIT Â© [John Dagdelen](jdagdelen.github.io)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jdagdelen/mondigy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mondigy",
    "package_url": "https://pypi.org/project/mondigy/",
    "platform": "",
    "project_url": "https://pypi.org/project/mondigy/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jdagdelen/mondigy/issues",
      "Homepage": "https://github.com/jdagdelen/mondigy"
    },
    "release_url": "https://pypi.org/project/mondigy/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A small wrapper for connecting MongoDB collections to Prodigy",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9581592,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee2fd7785d63bcb067e35ed21152cfa0b1b6afd55d1f9abc03fee6388a813183",
          "md5": "83d778c98783852532065997cfdb3bee",
          "sha256": "2b9d49c99cd1c26d286b39d8c9b346a18cc2a898b0c2a90b7531c3955b0850b7"
        },
        "downloads": -1,
        "filename": "mondigy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "83d778c98783852532065997cfdb3bee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5400,
        "upload_time": "2021-03-02T01:33:57",
        "upload_time_iso_8601": "2021-03-02T01:33:57.590094Z",
        "url": "https://files.pythonhosted.org/packages/ee/2f/d7785d63bcb067e35ed21152cfa0b1b6afd55d1f9abc03fee6388a813183/mondigy-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b708f41116e1adacc49e826660cf717ec821aba507b32b4b2bcfb0541a9188a",
          "md5": "5eb78213ebaadb6a518f92e93dc5c093",
          "sha256": "adea21ba5e6ffb4429e04d1de434412914c281400f7a0f1a38732b758a8e644e"
        },
        "downloads": -1,
        "filename": "mondigy-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5eb78213ebaadb6a518f92e93dc5c093",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5392,
        "upload_time": "2021-03-02T01:37:00",
        "upload_time_iso_8601": "2021-03-02T01:37:00.997144Z",
        "url": "https://files.pythonhosted.org/packages/8b/70/8f41116e1adacc49e826660cf717ec821aba507b32b4b2bcfb0541a9188a/mondigy-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3963d8c643764e2a3007f6de39a1cd72f61230d9c6045c8e8fcf9289441ee65",
          "md5": "705ec52e50339dc9ff5c7277c9a31937",
          "sha256": "b0c3cb9a098232e62a962914c9ce4c26767de02a4f82eec92e732aaa748d0a2f"
        },
        "downloads": -1,
        "filename": "mondigy-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "705ec52e50339dc9ff5c7277c9a31937",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5710,
        "upload_time": "2021-03-02T02:05:51",
        "upload_time_iso_8601": "2021-03-02T02:05:51.711092Z",
        "url": "https://files.pythonhosted.org/packages/e3/96/3d8c643764e2a3007f6de39a1cd72f61230d9c6045c8e8fcf9289441ee65/mondigy-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3963d8c643764e2a3007f6de39a1cd72f61230d9c6045c8e8fcf9289441ee65",
        "md5": "705ec52e50339dc9ff5c7277c9a31937",
        "sha256": "b0c3cb9a098232e62a962914c9ce4c26767de02a4f82eec92e732aaa748d0a2f"
      },
      "downloads": -1,
      "filename": "mondigy-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "705ec52e50339dc9ff5c7277c9a31937",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5710,
      "upload_time": "2021-03-02T02:05:51",
      "upload_time_iso_8601": "2021-03-02T02:05:51.711092Z",
      "url": "https://files.pythonhosted.org/packages/e3/96/3d8c643764e2a3007f6de39a1cd72f61230d9c6045c8e8fcf9289441ee65/mondigy-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}