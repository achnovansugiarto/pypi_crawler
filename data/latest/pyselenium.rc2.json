{
  "info": {
    "author": "Felipe Fiali de SÃ¡",
    "author_email": "felipefiali@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing",
      "Topic :: Utilities"
    ],
    "description": ".. image:: https://travis-ci.org/felipefiali/PySelenium.svg?branch=master\n   :target: https://travis-ci.org/felipefiali/PySelenium\n   :alt: Travis CI Build Status\n\n\n.. image:: https://coveralls.io/repos/github/felipefiali/PySelenium/badge.svg\n   :target: https://coveralls.io/github/felipefiali/PySelenium\n   :alt: Coverage Status\n\n\n.. image:: https://badge.fury.io/py/PySelenium.svg\n   :target: https://badge.fury.io/py/PySelenium\n   :alt: PyPI version\n\n\n.. image:: https://img.shields.io/github/license/felipefiali/pyselenium.svg\n   :target: ./LICENSE\n   :alt: License\n\n\nPySelenium\n==========\n\nA Python package that uses Selenium to enable for automating tests for web applications.\n\nSetup instructions\n------------------\n\n\n* \n  Get Google Chrome's driver from https://sites.google.com/a/chromium.org/chromedriver/downloads\n\n* \n  Put the web driver executable in any folder and add that folder to ``$PATH``\n\n* \n  Run ``pip install pyselenium`` \n\nUsage\n-----\n\nAfter successfully going through the setup instructions, you can start programming your tests like so:\n\n.. code-block:: python\n\n   from pyselenium.test_metadata import Test\n   from pyselenium.test_steps import *\n   from pyselenium.test_runner import *\n\n   test = Test('My test')\n   test.add_step(Navigate('http://www.google.com'))\n   test.add_step(TypeText(css_path='#lst-ib', hint='Google search bar', text='Automating a Google search'))\n   test.add_step(SendEnter())\n   test_runner = TestRunner(test)\n   test_result = test_runner.run_test()\n\n   print(test_result)\n\nGetting the CSS path from elements\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFinding the CSS path from elements is failry easy with Google Chrome. All you need to do is right-click the element, and hit \"Inspect\" to bring up the developer tools console:\n\n\n.. image:: https://github.com/felipefiali/PySelenium/blob/master/images/Inspect.gif?raw=true\n   :target: https://github.com/felipefiali/PySelenium/blob/master/images/Inspect.gif\n   :alt: Inspect\n\n\nWith the developer tools console opened, right-click the element in it and choose \"Copy Selector\":\n\n\n.. image:: https://github.com/felipefiali/PySelenium/blob/master/images/Selector.gif?raw=true\n   :target: https://github.com/felipefiali/PySelenium/blob/master/images/Selector.gif\n   :alt: Selector\n\n\nThe CSS path of the selected element should already be in your clipboard after doing this.\n\nSample test\n-----------\n\nYou can find a sample test in `pyselenium/sample_test.py <https://github.com/felipefiali/PySelenium/blob/master/pyselenium/sample_test.py>`_\n\nList of available test steps\n----------------------------\n\nThese are the test steps currently available to be used:\n\n\n* \n  **Navigate**\n\n\n  * Navigates to a specified URL.\n\n* \n  **Click**\n\n\n  * Clicks on a given element on the web page. It may be any HTML element. Fails if the element can not be found on the web page.\n\n* \n  **AssertElementValue**\n\n\n  * Asserts that the element value (text) is equal to the specified one. Fails if the found value is different from the expected one.\n\n* \n  **AssertElementAttributeValue**\n\n\n  * Asserts that the value of a specific attribute of the HTML element is equal to the specified one. Fails if the found value is different from the expected one.\n\n* \n  **ClickIfFound**\n\n\n  * Clicks on a given element on the web page. It may be any HTML element. Does not fail if the element can not be found on the web page. If the element is not found, does nothing.\n\n* \n  **AssertElementNotPresent**\n\n\n  * Asserts that an element is not present on the web page. Fails if the element is found.\n\n* \n  **TypeText**\n\n\n  * Simulates the user typing text on a given element on the web page. Fails if the element is not found.\n\n* \n  **SelectDropDownItemByText**\n\n\n  * Selects an option on a dropdown element by comparing its text to a given value. Fails if the element is not found.\n\n* \n  **SetCheckbox**\n\n\n  * Sets a checkbox to true or false. Fails if the checkbox is not found.\n\n* \n  **SwitchFrame**\n\n\n  * Switches the context to a given iFrame on the page. Fails if the iFrame is not found. After running this step, one should call the ``SwitchToDefaultContent`` right after running the needed steps on the selected iFrame to ensure that the context is switched back to the default content of the page.\n\n* \n  **SwitchToDefaultContent**\n\n\n  * Switches the context to the default content of the web page. Should always be called after switching the context to another iFrame and running the needed steps on that iFrame.\n\n* \n  **SendEnter**\n\n\n  * Sends an ENTER key to the webpage. It's the same as if the user simply hit the return button on the keyboard. This step does not have any context information as to there the focus is on the page, so should only be used when necessary.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/felipefiali/PySelenium/archive/1.0.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/felipefiali/PySelenium",
    "keywords": "testing,test-automation,selenium,web-automation",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PySelenium",
    "package_url": "https://pypi.org/project/PySelenium/",
    "platform": "Windows,Linux,MacOS",
    "project_url": "https://pypi.org/project/PySelenium/",
    "project_urls": {
      "Download": "https://github.com/felipefiali/PySelenium/archive/1.0.2.tar.gz",
      "Homepage": "https://github.com/felipefiali/PySelenium"
    },
    "release_url": "https://pypi.org/project/PySelenium/1.0.2/",
    "requires_dist": [
      "selenium"
    ],
    "requires_python": "",
    "summary": "A wrapper for Selenium to allow easy development of automated tests for the web",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2690399,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d0d9902d334de9da55a4c2912ce15ff616162cf3886b9acde53d3251d21afdf",
          "md5": "5c8662a96e6e5fa1e3d7c4946cd0c806",
          "sha256": "1033c2979f855a43f80f8aeff38bb437a71bd962597f1f596f8ccbd4ceb43b82"
        },
        "downloads": -1,
        "filename": "PySelenium-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c8662a96e6e5fa1e3d7c4946cd0c806",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12119,
        "upload_time": "2017-03-07T20:27:45",
        "upload_time_iso_8601": "2017-03-07T20:27:45.018861Z",
        "url": "https://files.pythonhosted.org/packages/2d/0d/9902d334de9da55a4c2912ce15ff616162cf3886b9acde53d3251d21afdf/PySelenium-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "043fcc87cce159826a8bdb8e5e18e240c393d91f70ff48d116601b4525cc2814",
          "md5": "78e948d3f765afd3e9b0031db33ab584",
          "sha256": "e272798a82e33469d4155c1161994bd640ef7741c6579a99ebfb0f3a269d3221"
        },
        "downloads": -1,
        "filename": "PySelenium-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "78e948d3f765afd3e9b0031db33ab584",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8997,
        "upload_time": "2017-03-07T20:27:29",
        "upload_time_iso_8601": "2017-03-07T20:27:29.051686Z",
        "url": "https://files.pythonhosted.org/packages/04/3f/cc87cce159826a8bdb8e5e18e240c393d91f70ff48d116601b4525cc2814/PySelenium-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d72e5d7db744c667f4bb11ac2e59acd7520cc15316d1b3e826f46c2c73f38874",
          "md5": "c6ef7d9013945102e7650a9999f22867",
          "sha256": "7f6d1a1a731ade1eb1c65b0c259145b848499abadb8bf8389aedbef33c08ed17"
        },
        "downloads": -1,
        "filename": "PySelenium-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6ef7d9013945102e7650a9999f22867",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12118,
        "upload_time": "2017-03-07T23:42:43",
        "upload_time_iso_8601": "2017-03-07T23:42:43.248575Z",
        "url": "https://files.pythonhosted.org/packages/d7/2e/5d7db744c667f4bb11ac2e59acd7520cc15316d1b3e826f46c2c73f38874/PySelenium-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b56e2d4e7e2d4544cec9ffafa0c0e1643622c1570590e1b2c97e7842d16a0396",
          "md5": "0e187b065754a58aa4b4a906e2720cff",
          "sha256": "448d3f8bbd16af411164c3dcd2a8e52410256a5e71eb4b5f3b3502af23130236"
        },
        "downloads": -1,
        "filename": "PySelenium-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0e187b065754a58aa4b4a906e2720cff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8997,
        "upload_time": "2017-03-07T23:42:45",
        "upload_time_iso_8601": "2017-03-07T23:42:45.498982Z",
        "url": "https://files.pythonhosted.org/packages/b5/6e/2d4e7e2d4544cec9ffafa0c0e1643622c1570590e1b2c97e7842d16a0396/PySelenium-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d72e5d7db744c667f4bb11ac2e59acd7520cc15316d1b3e826f46c2c73f38874",
        "md5": "c6ef7d9013945102e7650a9999f22867",
        "sha256": "7f6d1a1a731ade1eb1c65b0c259145b848499abadb8bf8389aedbef33c08ed17"
      },
      "downloads": -1,
      "filename": "PySelenium-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c6ef7d9013945102e7650a9999f22867",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12118,
      "upload_time": "2017-03-07T23:42:43",
      "upload_time_iso_8601": "2017-03-07T23:42:43.248575Z",
      "url": "https://files.pythonhosted.org/packages/d7/2e/5d7db744c667f4bb11ac2e59acd7520cc15316d1b3e826f46c2c73f38874/PySelenium-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b56e2d4e7e2d4544cec9ffafa0c0e1643622c1570590e1b2c97e7842d16a0396",
        "md5": "0e187b065754a58aa4b4a906e2720cff",
        "sha256": "448d3f8bbd16af411164c3dcd2a8e52410256a5e71eb4b5f3b3502af23130236"
      },
      "downloads": -1,
      "filename": "PySelenium-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0e187b065754a58aa4b4a906e2720cff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8997,
      "upload_time": "2017-03-07T23:42:45",
      "upload_time_iso_8601": "2017-03-07T23:42:45.498982Z",
      "url": "https://files.pythonhosted.org/packages/b5/6e/2d4e7e2d4544cec9ffafa0c0e1643622c1570590e1b2c97e7842d16a0396/PySelenium-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}