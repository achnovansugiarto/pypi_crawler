{
  "info": {
    "author": "Yen, Tzu-Hsi",
    "author_email": "joseph.yen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "=============================\n**orz**: Result type\n=============================\n\n**orz** aims to provide a more pythonic and mature Result type(or similar to Result type) for Python.\n\nResult is a Monad type for handling success response and errors without using `try ... except` or special values(e.g. `-1`, `0` or `None`). It makes your code more readable and more elegant.\n\nMany langauges already have a builtin Result type. e.g. `Result in Rust <https://doc.rust-lang.org/std/result/>`_, `Either type in Haskell <http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Either.html>`_ , `Result type in Swift <https://developer.apple.com/documentation/swift/result>`_ and `Result type in OCaml <https://ocaml.org/learn/tutorials/error_handling.html#Resulttype>`_. And there's a `proposal in Go <https://github.com/golang/go/issues/19991>`_. Although `Promise in Javascript <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise>`_ is not a Result type, it handles errors fluently in a similar way.\n\nExisting Result type Python libraries, such as `dbrgn/result <https://github.com/dbrgn/result>`_, `arcrose/result_py <https://github.com/arcrose/result_py>`_, and `ipconfiger/result2 <https://github.com/ipconfiger/result2>`_ did great job on porting Result from other languages. However, most of these libraries doesn't support Python 2(sadly, I still have to use it). And because of the syntax limitation of Python, like lack of pattern matching, it's not easy to show all the strength of Result type.\n\n**orz** trying to make Result more pythonic and readable, useful in most cases.\n\nInstall Orz\n============\n\nJust like other Python package, install it by `pip\n<https://pip.pypa.io/en/stable/>`_ into a `virtualenv\n<https://hynek.me/articles/virtualenv-lives/>`_, or use `poetry\n<https://poetry.eustace.io/>`_ to automatically create and manage the\nvirtualenv.\n\n.. code-block:: console\n\n   $ pip install orz\n\nCheat Sheet\n============\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n| ``orz.Ok(value)``                                                 | Create a Result object                                                                            |\n| ``orz.Err(error)``                                                |                                                                                                   |\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n| ``orz.catch(raises=(Exception,))(func)``                          | Wrap a function to return an `Ok` when success, or return an `Err` when exception is raised       |\n|                                                                   |                                                                                                   |\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n| ``[Ok|Err].then(func, catch_raises=None)``                        | Transform the wrapped value/error through `func`.                                                 |\n| ``[Ok|Err].err_then(func, catch_raises=None)``                    |                                                                                                   |\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n| ``[Ok|Err].then_unpack(func, catch_raises=None)``                 |     Same as ``then()`` and ``err_then()``, but values are unpacked as arguments of ``func``.      |\n| ``[Ok|Err].err_then_unpack(func, catch_raises=None)``             |                                                                                                   |\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n| ``[Ok|Err].get_or(default)``                                      | ``Ok``: Get the wrapped value.                                                                    |\n| ``[Ok|Err].get_or_raise(self, error=None)``                       | ``Err``: Raise excetpion or get default value.                                                    |\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n| ``[Ok|Err].guard(pred, err=UnSet)``                               | ``Ok``: Make sure value in Ok pass the predicate function ``pred``, or return an ``Err`` object.  |\n| ``[Ok|Err].guard_none(err=UnSet)``                                | ``Err``: Return self.                                                                             |\n|                                                                   |                                                                                                   |\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n| ``[Ok|Err].fill(pred, value)``                                    | ``Ok``: Return self.                                                                              |\n|                                                                   | ``Err``: Return ``Ok(value)`` if the wrapped error pass the predicate function.                   |\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n| ``bool([Ok|Err])``                                                | Check whether the object is Ok or Err.                                                            |\n| ``[Ok|Err].is_ok()``                                              |                                                                                                   |\n| ``[Ok|Err].is_err()``                                             |                                                                                                   |\n| ``isinstance(obj, orz.Ok)``                                       |                                                                                                   |\n| ``isinstance(obj, orz.Err)``                                      |                                                                                                   |\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n| ``orz.is_result(obj)``                                            | Check if the object is a Result object(Ok or Err).                                                |\n| ``isinstance(obj, orz.Result)``                                   |                                                                                                   |\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n| ``orz.all(results)``                                              | Get an Ok which contains a list of values if all are Ok, or an Err of first Err                   |\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n| ``orz.any(results)``                                              | Get an Ok which contains a list of Ok values, or get last Err if all results are Err              |\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n| ``orz.first_ok(results)``                                         | Get first ok or last err                                                                          |\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n| ``orz.ensure(obj)``                                               | Ensure object is an instance of Result.                                                           |\n+-------------------------------------------------------------------+---------------------------------------------------------------------------------------------------+\n\n\n\nGetting Start\n=============\n\nCreate a ``orz.Result`` object\n------------------------------\n\nWrap the return value with ``orz.Ok`` explicitly for indicating success. And\nreturn an ``orz.Err`` object when something went wrong. Normally, the value wraped with\n``Err`` is an error message or an exception object.\n\n.. code-block:: python\n\n   >>> import orz\n\n   >>> def get_score_rz(subj):\n   ...     score_db = {'math': 80, 'physics': 95}\n   ...     if subj in score_db:\n   ...         return orz.Ok(score_db[subj])\n   ...     else:\n   ...         return orz.Err('subj does not exist: ' + subj)\n\n   >>> get_score_rz('math')\n   Ok(80)\n   >>> get_score_rz('bio')\n   Err('subj does not exist: bio')\n\nA handy decorator ``orz.catch`` can transform normal function into a\nResult-oriented function. The return value would be wraped with ``orz.Ok``\nautomatically, and exceptions would be captured and wraped with ``orz.Err``.\n\n.. code-block:: python\n\n   >>> @orz.catch(raises=KeyError)\n   ... def get_score_rz(subj):\n   ...     score_db = {'math': 80, 'physics': 95}\n   ...     return score_db[subj]\n\n   >>> get_score_rz('math')\n   Ok(80)\n   >>> get_score_rz('bio')\n   Err(KeyError('bio',))\n\nProcessing Pipeline\n-------------------\n\nBoth ``Ok`` and ``Err`` are of ``Result`` type, they have the same set of methods for further processing. The value in ``Ok`` would be transformed with ``then(func)``. And ``Err`` would skip the transformation, and propogate the error to the next stage.\n\n.. code-block:: python\n\n   >>> def get_letter_grade_rz(score):\n   ...     if 90 <= score <= 100: return orz.Ok('A')\n   ...     elif 80 <= score < 90: return orz.Ok('B')\n   ...     elif 70 <= score < 80: return orz.Ok('C')\n   ...     elif 60 <= score < 70: return orz.Ok('D')\n   ...     elif 0 <= score <= 60: return orz.Ok('F')\n   ...     else: return orz.Err('Wrong value range')\n\n   >>> get_score_rz('math')\n   Ok(80)\n   >>> get_score_rz('math').then(get_letter_grade_rz)\n   Ok('B')\n   >>> get_score_rz('bio')\n   Err(KeyError('bio',))\n   >>> get_score_rz('bio').then(get_letter_grade_rz)\n   Err(KeyError('bio',))\n\n\nThe ``func`` pass to the ``then(func, catch_raises=None)`` can be a normal\nfunction which returns an ordinary value. The returned value would be wraped with\n``Ok`` automatically. Use ``catch_raises`` to capture exceptions and returned as an ``Err`` object.\n\n.. code-block:: python\n\n   >>> letter_grade_rz = get_score_rz('math').then(get_letter_grade_rz)\n   >>> msg_rz = letter_grade_rz.then(lambda letter_grade: 'your grade is {}'.format(letter_grade))\n   >>> msg_rz\n   Ok('your grade is B')\n\nConnect all the ``then(func)`` calls together. And use\n``Result.get_or(default)`` to get the final\nvalue.\n\n.. code-block:: python\n\n   >>> def get_grade_msg(subj):\n   ...      return (\n   ...          get_score_rz(subj)\n   ...          .then(get_letter_grade_rz)\n   ...          .then(lambda letter_grade: 'your grade is {}'.format(letter_grade))\n   ...          .get_or('something went wrong'))\n\n   >>> get_grade_msg('math')\n   'your grade is B'\n   >>> get_grade_msg('bio')\n   'something went wrong'\n\nIf you prefer to raise an exception rather than get a fallback value, use ``get_or_raise(error)`` instead.\n\n.. code-block:: python\n\n   >>> def get_grade_msg(subj):\n   ...      return (\n   ...          get_score_rz(subj)\n   ...          .then(get_letter_grade_rz)\n   ...          .then(lambda letter_grade: 'your grade is {}'.format(letter_grade))\n   ...          .get_or_raise())\n\n   >>> get_grade_msg('math')\n   'your grade is B'\n   >>> get_grade_msg('bio')\n   Traceback (most recent call last):\n   ...\n   KeyError: 'bio'\n\n\nHandling Error\n--------------\n\nUse ``Result.err_then(func, catch_raises)`` to convert ``Err`` back to ``Ok`` or to other ``Err``.\n\n.. code-block:: python\n\n   >>> get_score_rz('bio')\n   Err(KeyError('bio',))\n   >>> get_score_rz('bio').then(get_letter_grade_rz)\n   Err(KeyError('bio',))\n   >>> (get_score_rz('bio')\n   ...  .err_then(lambda error: 0 if isinstance(error, KeyError) else error))\n   Ok(0)\n   >>> (get_score_rz('bio')\n   ...  .err_then(lambda error: 0 if isinstance(error, KeyError) else error)\n   ...  .then(get_letter_grade_rz))\n   Ok('F')\n   >>> (get_score_rz('bio')\n   ...  .then(get_letter_grade_rz)\n   ...  .err_then(lambda error: 'F' if isinstance(error, KeyError) else error))\n   Ok('F')\n\n\nMost of the time, ``fill()`` is more concise to turn some ``Err`` back.\n\n.. code-block:: python\n\n   >>> get_score_rz('bio').fill(lambda error: isinstance(error, KeyError), 0)\n   Ok(0)\n\nCheck whether the returned value is `Err` or `Ok`.\n\n.. code-block:: python\n\n   >>> num_rz = orz.Ok(42)\n   >>> num_rz.is_ok()\n   True\n   >>> num_rz.is_err()\n   False\n   >>> isinstance(num_rz, orz.Ok)\n   True\n   >>> bool(num_rz)\n   True\n   >>> bool(orz.Ok(True))  # you always get True for Ok\n   True\n   >>> bool(orz.Ok(False))  # you always get True for Ok\n   True\n   >>> bool(orz.Err(True))  # you always get True for Err\n   False\n\nMore in Orz\n===========\n\nProcess Multiple Result objects\n-------------------------------\n\nTo ensure all values are ``Ok`` and handle them together.\n\n.. code-block:: python\n\n   >>> orz.all([orz.Ok(39), orz.Ok(2), orz.Ok(1)])\n   Ok([39, 2, 1])\n   >>> orz.all([orz.Ok(40), orz.Err('wrong value'), orz.Ok(1)])\n   Err('wrong value')\n\n   >>> orz.all([orz.Ok(40), orz.Ok(2)]).then(lambda values: sum(values))\n   Ok(42)\n   >>> orz.all([orz.Ok(40), orz.Ok(2)]).then_unpack(lambda n1, n2: n1 + n2)\n   Ok(42)\n\n\n``then_all()`` is useful when you want to apply multiple functions to the same value.\n\n.. code-block:: python\n\n   >>> orz.Ok(3).then_all(lambda n: n+2, lambda n: n+1)\n   Ok([5, 4])\n   >>> orz.Ok(3).then_all(lambda n: n+2, lambda n: n+1).then_unpack(lambda n1, n2: n1 + n2)\n   Ok(9)\n\nUse ``first_ok()`` To get the first available value.\n\n.. code-block:: python\n\n   >>> orz.first_ok([orz.Err('E1'), orz.Ok(42), orz.Ok(3)])\n   Ok(42)\n   >>> orz.first_ok([orz.Err('E1'), orz.Err('E2'), orz.Err('E3')])\n   Err('E3')\n   >>> orz.Ok(15).then_first_ok(\n   ...     lambda v: 2 if (v % 2) == 0 else orz.Err('not a factor'),\n   ...     lambda v: 3 if (v % 3) == 0 else orz.Err('not a factor'),\n   ...     lambda v: 5 if (v % 5) == 0 else orz.Err('not a factor'))\n   Ok(3)\n\nGuard value\n-----------\n\n.. code-block:: python\n\n   >>> orz.Ok(3).guard(lambda v: v > 0)\n   Ok(3)\n   >>> orz.Ok(-3).guard(lambda v: v > 0)\n   Err(GuardError('Ok(-3) was failed to pass the guard: <function <lambda> at ...>',))\n   >>> orz.Ok(-3).guard(lambda v: v > 0, err=orz.Err('value should be greater than zero'))\n   Err('value should be greater than zero')\n\nIn fact, guard is a short-hand for a pattern of ``then()``.\n\n.. code-block:: python\n\n   >>> (orz.Ok(-3)\n   ...  .then(lambda v:\n   ...        orz.Ok(v) if v > 0\n   ...        else orz.Err('value should be greater than zero')))\n   Err('value should be greater than zero')\n\n   >>> orz.Ok(3).guard_none()\n   Ok(3)\n   >>> orz.Ok(None).guard_none()\n   Err(GuardError('failed to pass not None guard: ...',))\n\nConvert any value to Result type\n--------------------------------\n\n``orz.ensure`` always returns a Result object.\n\n.. code-block:: python\n\n   >>> orz.ensure(42)\n   Ok(42)\n   >>> orz.ensure(orz.Ok(42))\n   Ok(42)\n   >>> orz.ensure(orz.Ok(orz.Ok(42)))\n   Ok(42)\n   >>> orz.ensure(orz.Err('failed'))\n   Err('failed')\n   >>> orz.ensure(KeyError('a'))\n   Err(KeyError('a',))\n\n\nCheck if object is a Result\n----------------------------\n\n.. code-block:: python\n\n   >>> orz.is_result(orz.Ok(3))\n   True\n   >>> isinstance(orz.Ok(3), orz.Result)\n   True\n   >>> orz.Ok(3).is_ok()\n   True\n   >>> orz.Ok(3).is_err()\n   False\n   >>> orz.Err('E').is_ok()\n   False\n   >>> orz.Err('E').is_err()\n   True\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/d2207197/orz",
    "keywords": "result,monad,error,exception,either,functional,error handling",
    "license": "Apache-2.0",
    "maintainer": "Yen, Tzu-Hsi",
    "maintainer_email": "joseph.yen@gmail.com",
    "name": "orz",
    "package_url": "https://pypi.org/project/orz/",
    "platform": "",
    "project_url": "https://pypi.org/project/orz/",
    "project_urls": {
      "Homepage": "https://github.com/d2207197/orz",
      "Repository": "https://github.com/d2207197/orz"
    },
    "release_url": "https://pypi.org/project/orz/0.3.3/",
    "requires_dist": null,
    "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
    "summary": "A Result(Either) like library to handle error fluently",
    "version": "0.3.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8699866,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8a6dad2589b2811a7c3eacba689b83db1bba38ef2000c03d5f5d2a70744ec68",
          "md5": "71f8a4721a607d743cf935ab45d95806",
          "sha256": "8594ad8d7368dcd0d7551bea487c7fdaa3cc2220dfe3c35829d0bc99dcf81485"
        },
        "downloads": -1,
        "filename": "orz-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71f8a4721a607d743cf935ab45d95806",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 7674,
        "upload_time": "2019-06-22T16:50:43",
        "upload_time_iso_8601": "2019-06-22T16:50:43.263594Z",
        "url": "https://files.pythonhosted.org/packages/b8/a6/dad2589b2811a7c3eacba689b83db1bba38ef2000c03d5f5d2a70744ec68/orz-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8200f2ddf15a84635ac5224866e0fd539136676457b943b92b08395c4a5ff151",
          "md5": "afe66f062e81f5131683a1cdd85d242a",
          "sha256": "7ccac2a9c9c66298beaaa5f36c975dd9c8451e3400097c427e850262ec45fe38"
        },
        "downloads": -1,
        "filename": "orz-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "afe66f062e81f5131683a1cdd85d242a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 7190,
        "upload_time": "2019-06-22T16:50:46",
        "upload_time_iso_8601": "2019-06-22T16:50:46.217840Z",
        "url": "https://files.pythonhosted.org/packages/82/00/f2ddf15a84635ac5224866e0fd539136676457b943b92b08395c4a5ff151/orz-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e446088bf33f998690c33afb03656c72abc9c93ebcb901a3c42b65f5eccb8627",
          "md5": "7b1c0b35e8daaeb3acab495f7c60877d",
          "sha256": "2dc5efc421eef58d78373cb56022ba86aea1c1268320cd0a5f0e73b79dc64265"
        },
        "downloads": -1,
        "filename": "orz-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b1c0b35e8daaeb3acab495f7c60877d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 7694,
        "upload_time": "2019-06-26T12:59:22",
        "upload_time_iso_8601": "2019-06-26T12:59:22.247906Z",
        "url": "https://files.pythonhosted.org/packages/e4/46/088bf33f998690c33afb03656c72abc9c93ebcb901a3c42b65f5eccb8627/orz-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b723ad2d7fb713cccc9710e574647d0ff259adee1fbb7051aee6dd56a8860b2",
          "md5": "75240a81429b510010c13478908d0657",
          "sha256": "eee4b708d602db4e81ed9716bb6c977e4ceaeb15f7adac803a460dc033d05eba"
        },
        "downloads": -1,
        "filename": "orz-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "75240a81429b510010c13478908d0657",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 7221,
        "upload_time": "2019-06-26T12:59:23",
        "upload_time_iso_8601": "2019-06-26T12:59:23.746399Z",
        "url": "https://files.pythonhosted.org/packages/9b/72/3ad2d7fb713cccc9710e574647d0ff259adee1fbb7051aee6dd56a8860b2/orz-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9aaf54b8cb876936446ed3e7020a96ecc1261c9dac191c7b0d4ef6c4b796264a",
          "md5": "0188b3ead7714946747e0f9a9c275f3d",
          "sha256": "a05bd8a8b5976000dbea859dfde5e01ca0de3abf868566f8f092f7abc5aca52d"
        },
        "downloads": -1,
        "filename": "orz-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0188b3ead7714946747e0f9a9c275f3d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 7771,
        "upload_time": "2019-09-02T17:58:33",
        "upload_time_iso_8601": "2019-09-02T17:58:33.098696Z",
        "url": "https://files.pythonhosted.org/packages/9a/af/54b8cb876936446ed3e7020a96ecc1261c9dac191c7b0d4ef6c4b796264a/orz-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d134068c6154600f80dddb372e4d6f5fec1c1ec809cdbe66762d76987876a373",
          "md5": "46bf6a72bb873cba7cdf54fe358a05ab",
          "sha256": "75719f48ac868c9d974c85dbe72ff560f083eb7362b1769b4b480dca4977c913"
        },
        "downloads": -1,
        "filename": "orz-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "46bf6a72bb873cba7cdf54fe358a05ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 7328,
        "upload_time": "2019-09-02T17:58:34",
        "upload_time_iso_8601": "2019-09-02T17:58:34.588927Z",
        "url": "https://files.pythonhosted.org/packages/d1/34/068c6154600f80dddb372e4d6f5fec1c1ec809cdbe66762d76987876a373/orz-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86cd4267f0310a4caa85336ddbd3154e0c8f6e6a735747c33bd828941075dd42",
          "md5": "df4a5e2c23ced138ed5a2a9f72c1af92",
          "sha256": "77d4b7adc0c93c677b16757777037fffff64b929e312a01abf762443fa5439e3"
        },
        "downloads": -1,
        "filename": "orz-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df4a5e2c23ced138ed5a2a9f72c1af92",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 7771,
        "upload_time": "2019-09-02T18:09:40",
        "upload_time_iso_8601": "2019-09-02T18:09:40.144879Z",
        "url": "https://files.pythonhosted.org/packages/86/cd/4267f0310a4caa85336ddbd3154e0c8f6e6a735747c33bd828941075dd42/orz-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "038adc5e8e1d8723fe37382eca693058c16c81d84e3258263ca8bab0452cae5c",
          "md5": "0fd8c4990371b14ad650c93b1cbbd5f3",
          "sha256": "7d7eea64f9e5752e38f671f4fa455fac28645f6eb842418b768852e64c50578f"
        },
        "downloads": -1,
        "filename": "orz-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0fd8c4990371b14ad650c93b1cbbd5f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 7331,
        "upload_time": "2019-09-02T18:09:41",
        "upload_time_iso_8601": "2019-09-02T18:09:41.721136Z",
        "url": "https://files.pythonhosted.org/packages/03/8a/dc5e8e1d8723fe37382eca693058c16c81d84e3258263ca8bab0452cae5c/orz-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2639feee7779eeb3c3fdc9b57849971db6cd804f182844424945f15f72dc1e2a",
          "md5": "d4fbc63b2e985d2f80bd63431109e475",
          "sha256": "034cd47ef64a5edadfca3208c096b5b033845205198641d2a4c6cec8b92a9179"
        },
        "downloads": -1,
        "filename": "orz-0.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4fbc63b2e985d2f80bd63431109e475",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 7778,
        "upload_time": "2019-09-03T17:32:31",
        "upload_time_iso_8601": "2019-09-03T17:32:31.740294Z",
        "url": "https://files.pythonhosted.org/packages/26/39/feee7779eeb3c3fdc9b57849971db6cd804f182844424945f15f72dc1e2a/orz-0.2.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddd3bfd74547f4e55fd18951d64ca9fac53db1003d4784b25a8d7d998fabd46f",
          "md5": "346098b39a90d24ddbc182c11d856861",
          "sha256": "8e226540aefd376e7df6ddd1445390f3ea5db587e0d2336b8eaa3709555973d3"
        },
        "downloads": -1,
        "filename": "orz-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "346098b39a90d24ddbc182c11d856861",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 7315,
        "upload_time": "2019-09-03T17:32:33",
        "upload_time_iso_8601": "2019-09-03T17:32:33.294643Z",
        "url": "https://files.pythonhosted.org/packages/dd/d3/bfd74547f4e55fd18951d64ca9fac53db1003d4784b25a8d7d998fabd46f/orz-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcf28ce4b5e2aa9db9e1595ec4005424dae7f2a8ffe429acd9901329e3ea8a9b",
          "md5": "e1cb6ac84379596cf2a08934a75d2742",
          "sha256": "bc30445311f95e0e0315f9cc2e9b14ae6fafd1a4172b42957efdc85724e72ce8"
        },
        "downloads": -1,
        "filename": "orz-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1cb6ac84379596cf2a08934a75d2742",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 7866,
        "upload_time": "2019-09-05T16:48:53",
        "upload_time_iso_8601": "2019-09-05T16:48:53.103566Z",
        "url": "https://files.pythonhosted.org/packages/bc/f2/8ce4b5e2aa9db9e1595ec4005424dae7f2a8ffe429acd9901329e3ea8a9b/orz-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a843ad2fb9e417da85fa52f1593acc5c8ee1d3a270d009028ada794b35ad4d7",
          "md5": "51370f15d761bf73460756893c96a5a1",
          "sha256": "d9102c80a40159c7614083b5081211b3748b22009059646ff1cebb6e33caba34"
        },
        "downloads": -1,
        "filename": "orz-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "51370f15d761bf73460756893c96a5a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 7406,
        "upload_time": "2019-09-05T16:48:55",
        "upload_time_iso_8601": "2019-09-05T16:48:55.316418Z",
        "url": "https://files.pythonhosted.org/packages/7a/84/3ad2fb9e417da85fa52f1593acc5c8ee1d3a270d009028ada794b35ad4d7/orz-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3728b26f0ef111b20d7f7c011fce24f80d5430d703f9b2c2a7a77b1a9ad91bbe",
          "md5": "2ec1d8ac5ce98fd770c84972c6898bcc",
          "sha256": "a0e6a4c04c2e2d84e870b77941c42d59e11d83ff640d4340cf56d8afc3048c37"
        },
        "downloads": -1,
        "filename": "orz-0.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ec1d8ac5ce98fd770c84972c6898bcc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 10614,
        "upload_time": "2019-09-05T17:02:25",
        "upload_time_iso_8601": "2019-09-05T17:02:25.841255Z",
        "url": "https://files.pythonhosted.org/packages/37/28/b26f0ef111b20d7f7c011fce24f80d5430d703f9b2c2a7a77b1a9ad91bbe/orz-0.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "911e13771ec1a2a18d924676811b13bd6f1d8060f78867d248adc77e8a3c8b36",
          "md5": "964b2712602921b462739efdb1459c76",
          "sha256": "df4fc73f5c50204a6520a6c05700131421461ed2d7dd50893e8cd816367f4dc2"
        },
        "downloads": -1,
        "filename": "orz-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "964b2712602921b462739efdb1459c76",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 11476,
        "upload_time": "2019-09-05T17:02:28",
        "upload_time_iso_8601": "2019-09-05T17:02:28.320272Z",
        "url": "https://files.pythonhosted.org/packages/91/1e/13771ec1a2a18d924676811b13bd6f1d8060f78867d248adc77e8a3c8b36/orz-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "137ba4cc75399738becd00c863aef9c8aa289393481ce86551df4ca66fe9a516",
          "md5": "d0f99bca6674a1ee8cced9164d62bc28",
          "sha256": "68ef673f705221e95e76ca7eca82ed9e74a6f976b2f1ecfbf62a96169bc11cf3"
        },
        "downloads": -1,
        "filename": "orz-0.3.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d0f99bca6674a1ee8cced9164d62bc28",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 11377,
        "upload_time": "2020-10-27T03:31:06",
        "upload_time_iso_8601": "2020-10-27T03:31:06.329219Z",
        "url": "https://files.pythonhosted.org/packages/13/7b/a4cc75399738becd00c863aef9c8aa289393481ce86551df4ca66fe9a516/orz-0.3.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "465f0f2c8d5919037f8f17620e9cd02150a198db45636e3cbbb074565ce9e2c5",
          "md5": "0a0682e37ed8abdbd71d5e76cf2aa75b",
          "sha256": "d1893fb7aa52e7d332eb6bdc2cf2cbdec5e724ab054005b683692b51dc41e7c9"
        },
        "downloads": -1,
        "filename": "orz-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0a0682e37ed8abdbd71d5e76cf2aa75b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 14665,
        "upload_time": "2020-10-27T03:31:08",
        "upload_time_iso_8601": "2020-10-27T03:31:08.768904Z",
        "url": "https://files.pythonhosted.org/packages/46/5f/0f2c8d5919037f8f17620e9cd02150a198db45636e3cbbb074565ce9e2c5/orz-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ec56a06f0c1fc6605ba6b3fa8c995cdde0175729d6f89720e9dd2f815155541",
          "md5": "530d036b790fb5991e3f2adfeebb7bf4",
          "sha256": "c6b8fd87a1eec0b51dd284c0d7ba0164d52e1786ec6a6d290294030ec910bacf"
        },
        "downloads": -1,
        "filename": "orz-0.3.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "530d036b790fb5991e3f2adfeebb7bf4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 11555,
        "upload_time": "2020-11-19T13:12:56",
        "upload_time_iso_8601": "2020-11-19T13:12:56.728278Z",
        "url": "https://files.pythonhosted.org/packages/2e/c5/6a06f0c1fc6605ba6b3fa8c995cdde0175729d6f89720e9dd2f815155541/orz-0.3.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "972e09ac759a8810691dd656dc01e379c212f7d638d297a95d49b9f45c3db659",
          "md5": "798fbc1cb1c88322b92bd2ec3cdf9938",
          "sha256": "2ab6561fe9b586dbe0d11c358581f9d90991265b5b783b4e4e79b8b92de959d3"
        },
        "downloads": -1,
        "filename": "orz-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "798fbc1cb1c88322b92bd2ec3cdf9938",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "size": 14853,
        "upload_time": "2020-11-19T13:12:59",
        "upload_time_iso_8601": "2020-11-19T13:12:59.529517Z",
        "url": "https://files.pythonhosted.org/packages/97/2e/09ac759a8810691dd656dc01e379c212f7d638d297a95d49b9f45c3db659/orz-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ec56a06f0c1fc6605ba6b3fa8c995cdde0175729d6f89720e9dd2f815155541",
        "md5": "530d036b790fb5991e3f2adfeebb7bf4",
        "sha256": "c6b8fd87a1eec0b51dd284c0d7ba0164d52e1786ec6a6d290294030ec910bacf"
      },
      "downloads": -1,
      "filename": "orz-0.3.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "530d036b790fb5991e3f2adfeebb7bf4",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
      "size": 11555,
      "upload_time": "2020-11-19T13:12:56",
      "upload_time_iso_8601": "2020-11-19T13:12:56.728278Z",
      "url": "https://files.pythonhosted.org/packages/2e/c5/6a06f0c1fc6605ba6b3fa8c995cdde0175729d6f89720e9dd2f815155541/orz-0.3.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "972e09ac759a8810691dd656dc01e379c212f7d638d297a95d49b9f45c3db659",
        "md5": "798fbc1cb1c88322b92bd2ec3cdf9938",
        "sha256": "2ab6561fe9b586dbe0d11c358581f9d90991265b5b783b4e4e79b8b92de959d3"
      },
      "downloads": -1,
      "filename": "orz-0.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "798fbc1cb1c88322b92bd2ec3cdf9938",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
      "size": 14853,
      "upload_time": "2020-11-19T13:12:59",
      "upload_time_iso_8601": "2020-11-19T13:12:59.529517Z",
      "url": "https://files.pythonhosted.org/packages/97/2e/09ac759a8810691dd656dc01e379c212f7d638d297a95d49b9f45c3db659/orz-0.3.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}