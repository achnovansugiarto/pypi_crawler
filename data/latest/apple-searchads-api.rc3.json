{
  "info": {
    "author": "Abdul Majeed Alkattan",
    "author_email": "alkattan@phiture.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Apple SearchAds API\n\nThis is an updated version of the Phiture's searchads_api client.\nNew features include:\n- Update cryptography library to compile on M1 machines.\n- Add support for get Ads reports by date\n\n### Installation\n\n```shell\npip install apple_searchads_api\n```\n\n## About Phiture\n\n_[Phiture](http://phiture.com) is a Berlin-based mobile growth consultancy working with the teams behind leading apps. Using the companyâ€™s industry-acclaimed Mobile Growth Stack as a strategic framework, Phiture team offers 4 key services: App Store Optimization, Apple Search Ads, User Retention services and Growth Consulting._\n\n### Apple Searchads API Library in Python\n\nIn order to facilitate the usage of the Apple Search Ads API Phiture's Engineers have built a library in Python which allows users to manage campaigns, ad groups, keywords and creative sets. This library only requires intermediate Python skills and therefore makes it possible not only for Engineers but also for Data Analysts and Apple Search Ads Consultants to work with it.  While the library is extensive it is not complete and users are encouraged to commit suggestions.\nThe official link to the searchads campaign management api is https://developer.apple.com/documentation/search_ads/\n\n## Setup for V3 of the API\n\nCreate a `certs` directory inside your project folder, or create a different certs directory and specify it using the\n`certificates_dir_path` argument.\n\n```python\nfrom searchads_api import SearchAdsAPI\n\napi = SearchAdsAPI(org_id=123456, pem=\"cert.pem\", key=\"cert.key\", certificates_dir_path=\"certs/\", verbose=False)\n```\n\n## Setup for v4 of the API\n\nCreate a `certs` directory inside your project folder, or create a different certs directory and specify it using the\n`certificates_dir_path` argument.\n\n```python\nfrom searchads_api import SearchAdsAPI\n\napi = SearchAdsAPI(\n  org_id=123456,\n  pem=\"\",  # Only needed for v3 of the API\n  key=\"private.key\",\n  client_id=\"SEARCHADS.07875add-f6cd-4111-9c38-b84501d557c8\",\n  team_id=\"SEARCHADS.07879add-d6cd-4111-9c38-b84501d527c8\",\n  key_id=\"78a167b1-e423-4ab4-bcd1-8be75a4d7b7e\",\n  verbose=True\n)\n```\n\n## Available Methods\n\n### Campaign Methods\n\n- Create a new campaign\n\n         res = api.create_campaign(1433439534, ['AU'], \"test\", 1, 1, \"EUR\")\n\n- Find campaigns using a conditions list\n\n         res = api.find_campaigns(conditions=[{\"field\": \"countriesOrRegions\",\"operator\": \"CONTAINS_ALL\",\"values\": [\"US\", \"CA\"]}])\n\n- Get a specific campaign\n\n         res = api.get_campaign(283767149)\n\n- Get all campaigns\n\n         res = api.get_campaigns(limit=0)\n\n- Update a campaign\n\n         res = update_campaign(campaign_id, countries=None, campaign_name=\"Christmas Campaign 2019\", budget=None, daily_budget=None, curruncy=None, status=None, adamId=None)\n\n- Delete campaign\n\n         res = api.delete_campaign(283767149)\n\n### Adgroup Methods\n\n- Create a new adGroup inside of a campaign\n\n        res = api.create_adgroup(186370637, \"test\", \"EUR\",1, datetime.datetime.utcnow())\n        \n        res = api.create_adgroup(186370637, \"test\", \"EUR\",1, datetime.datetime.utcnow(), localities=[\"US|NY|New York\"], adminAreas=[\"US|NY\"])\n\n         res = api.create_adgroup(campaign_id, adgroup_name, currency,\n                       cpc_bid,  start_time, end_time=None, cpa_goal=None,  automated_keywords_opt_in=False, age=None, gender=None, device_class=None, day_part=None, adminArea=None, locality=None, appDownloaders=None)\n\n- Fetch ad groups within a campaign.\n\n         res = api.find_adgroups(campaign_id, limit=1000, offset=0, sort_field=\"id\", sort_order=\"ASCENDING\", conditions=[], fields=[])\n\n- Get all adGroups\n\n         res = api.get_adgroups(290916652)\n\n- Get a specific adGroup\n\n         res = api.get_adgroups(290916652, 21321323)\n\n- Update an Adgroup\n\n         res = update_adgroup(campaign_id, adgroup_id, adgroup_name=None,                             cpa_goal=None, currency=None,\n                       cpc_bid=None, start_time=None, end_time=None, automated_keywords_opt_in=False, age=None, gender=None, device_class=None,\n                       day_part=None, adminArea=None, locality=None, appDownloaders=None)\n\n- Delete an Adgroup\n\n         res = delete_adgroup(campaign_id, adgroup_id)\n\n\n### Targeting Keyword Methods\n\n- Add new targeting keywords to an AdGroup\n\n         keywords = [{\n                 \"text\": \"keyword\",\n                 \"matchType\": \"BROAD\",\n                 \"status\" : \"PAUSED\",\n                 \"bidAmount\": {\n                     \"amount\": \"1\",\n                     \"currency\": \"EUR\"\n                 }\n             }, {\n                 \"text\": \"keyword 5\",\n                 \"matchType\": \"EXACT\",\n                 \"status\" : \"PAUSED\",\n                 \"bidAmount\": {\n                     \"amount\": \"1\",\n                     \"currency\": \"EUR\"\n                 }\n             }]\n         res = api.add_targeting_keywords(290916652,291017295,keywords)\n\n- Fetch keywords used in ad groups.\n\n         res = find_targeting_keywords(campaign_id, adgroup_id, sort_field=\"id\", sort_order=\"ASCENDING\", conditions=[], offset=0, limit=1000)\n\n- Get one targeting keyword\n\n         res = api.get_targeting_keyword(290916652,291017295, 213213213)\n\n- Get all targeting keywords\n\n         res = api.get_targeting_keywords(290916652,291017295)\n\n- Update targeting keywords in an adGroup\n\n         keywords = [{\n                     \"id\": 291202529,\n                     \"status\": \"PAUSED\",\n                     \"bidAmount\": {\n                         \"amount\": \"0.5\",\n                         \"currency\": \"EUR\"\n                     }\n                     },\n                     {\n                     \"id\": 291202530,\n                     \"status\": \"PAUSED\",\n                     \"bidAmount\": {\n                         \"amount\": \"0.5\",\n                         \"currency\": \"EUR\"\n                     }\n                     }\n                     ]\n         res = api.update_targeting_keywords(290916652, 291017295, keywords)\n\n### Campaign Negative Keyword Methods\n\n- Add new campaign negative keywords\n\n         keywords = [{\n                 \"text\": \"keyword\",\n                 \"matchType\": \"BROAD\",\n                 \"status\" : \"PAUSED\",\n             }, {\n                 \"text\": \"keyword 5\",\n                 \"matchType\": \"EXACT\",\n                 \"status\" : \"PAUSED\",\n             }]\n         res = api.add_campaign_negative_keywords(290916652, keywords)\n\n- Get a specific campaign negative keyword\n\n         res = api.get_campaign_negative_keyword(290916652, 291225104)\n\n- Get all campaign negative keywords\n\n         res = api.get_campaign_negative_keywords(290916652)\n\n- Update campaign negative keywords\n\n         keywords = [{\n                 \"id\": \"291225104\",\n                 \"status\" : \"PAUSED\",\n             }]\n         res = api.update_campaign_negative_keywords(290916652, keywords)\n\n- Delete campaign negative keywords\n\n         keywords = [291225104]\n         res = api.delete_campaign_negative_keywords(290916652, keywords)\n\n### Adgroup Negative Keyword Methods\n\n- Add new adgroup negative keywords\n\n         keywords = [{\n                 \"text\": \"keyword\",\n                 \"matchType\": \"BROAD\",\n                 \"status\" : \"PAUSED\",\n             }, {\n                 \"text\": \"keyword 5\",\n                 \"matchType\": \"EXACT\",\n                 \"status\" : \"PAUSED\",\n             }]\n         res = api.add_adgroup_negative_keywords(290916652, 291017295, keywords)\n\n- Get a specific adGroup negative keyword\n\n         res = api.get_adgroup_negative_keyword(290916652, 291017295, 291227741)\n\n- Get all adgroup negative keywords\n\n         res = api.get_adgroup_negative_keywords(290916652,291017295)\n\n- Update adGroup negative keywords\n\n         keywords = [{\n             \"id\": \"123456789\",\n             \"status\": \"PAUSED\",\n         }]\n         res = api.update_adgroup_negative_keywords(123456789, 291017295, keywords)\n\n- Update a list of adGroup negative Keywords\n\n         keywords = [{\n                     \"id\": 0000000,\n                     \"adGroupId\": 291017295,\n                     \"text\": \"test\",\n                     \"status\": \"PAUSED\",\n                     \"matchType\": \"EXACT\",\n                     \"bidAmount\": {\n                         \"amount\": \"0.5\",\n                         \"currency\": \"EUR\"\n                     },\n                     \"deleted\": False\n                 }]\n         res = api.update_targeting_keywords(290916652,291017295,keywords)\n\n- Delete a list of AdGroup negative keywords\n\n         keyword_ids = [123456789]\n         res = api.delete_adgroup_negative_keywords(290916652, 291017295, keyword_ids)\n\n### Creativeset Methods\n\n- Fetch assets used with Creative Sets.\n\n         res = api.get_creativesets_assets(adam_id, countries_or_regions, assets_gen_ids=[])\n\n- Fetch supported app preview device size mappings.\n\n         res = api.get_app_preview_device_sizes()\n\n- Create a new creativeset\n\n         res = api.create_creativeset(campaign_id, adgroup_id, adamId, name, languageCode, assetsGenIds)\n\n- Get all Creativesets\n\n         res = api.get_creativeset(campaign_id, adgroup_id=None, limit=1000, offset=0))\n\n- Get a specific Creativesets\n\n         res = api.get_creativeset(creativeset_id, include_deleted_creative_set_assets=False)\n\n- Update an Adgroup Creativeset\n\n         res = api.update_creativeset(campaign_id, adgroup_id, creativeset_id, status)\n\n- Assign a Creativeset to an Adgroup\n\n         res = api.assign_creativeset_to_adgroup(campaign_id, adgroup_id, creativeset_id)\n\n- Fetch all Creative Sets assigned to ad groups.\n\n         conditions = [{\n            \"field\": \"id\",\n            \"operator\": \"EQUALS\",\n            \"values\": [\n            \"11111111\"\n                ]\n            }]\n         res = api.find_adgroup_creativesets(campaign_id,conditions=conditions,         sort_field=\"id\", sort_order=\"ASCENDING\")\n\n- Fetch all Creative Sets assigned to an organization.\n\n         res = api.find_creativesets(conditions=[], limit=1000, offset=0)\n\n- Fetch asset details of a Creative Set.\n\n         res = api.get_creativeset(creativeset_id, include_deleted_creative_set_assets=False)\n\n- Update a creativeset name\n\n         res = api.update_adgroup_creativeset_name(creativeset_id, name)\n\n- Delete creative sets from a specified Adgroup\n         res = api.delete_creativesets(campaign_id, adgroup_id, ids)\n\n### Reporting Methods\n\n- Get reports on campaigns within a specific org.\n\n         res = api.get_adgroups_report_by_date(\"2019-04-01\", \"2019-04-10\", 123456789, limit=5)\n\n- Get reports on adgroups within a specific org.\n\n         row, grandTotals = api.get_adgroups_report_by_date(123456789, \"2019-02-20\", \"2019-02-28\",limit=0)\n\n- Get reports on creativeset level. limit 0 gets all results instead of just 1000\n\n         row, grandTotals= api.get_creativesets_report_by_date(123456789, \"2019-06-01\", \"2019-06-10\")\n\n- Get reports on keywords level. limit 0 gets all results instead of just 1000\n\n         row, grandTotals = api.get_keywords_report_by_date(123456789, \"2019-02-20\", \"2019-02-28\",limit=0)\n\n- Get reports on searchterms level\n\n         row, grandTotals = api.get_searcherms_report_by_date(123456789,\"2019-05-01\", \"2019-05-07\",limit=0)\n\n- Get reports on ads level with grand totals (without granularity):\n```python\nrow, grandTotals = api.get_ads_report_by_date(123456789, \"2019-05-01\", \"2019-05-07\", limit=0)\n```\n\n- Get reports on ads level with granularity set to `DAILY`:\n```python\nrows = api.get_ads_report_by_date(\n  123456789,\n  \"2019-05-01\",\n  \"2019-05-07\",\n  return_row_totals=False,\n  return_grand_totals=False,\n  granularity=\"DAILY\",\n  limit=0\n)\n```\n\n\n### Geo Search\n\n- Search Adminareas\n\n         res = api.geo_search(\"New York\", entity=\"AdminArea\", country_code=\"US\")\n\n- Search Localities \n\n         res = api.geo_search(\"New York\", entity=\"Locality\", country_code=\"US\")\n\n- Returns a list of admin areas in a country.\n\n         res = api.get_admin_areas(country_code=\"US\")\n\n- Returns a list of localities in a country.\n\n         res = api.get_localities(country_code)\n\n- Gets geo location details based on geo identifier.\n\n         res = api.get_geo_locations_list(geo_id,\n                               entity,\n                               limit=1000, offset=0)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dapanas/searchads_api",
    "keywords": "python,searchads,library",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "apple-searchads-api",
    "package_url": "https://pypi.org/project/apple-searchads-api/",
    "platform": null,
    "project_url": "https://pypi.org/project/apple-searchads-api/",
    "project_urls": {
      "Homepage": "https://github.com/dapanas/searchads_api"
    },
    "release_url": "https://pypi.org/project/apple-searchads-api/1.6.2/",
    "requires_dist": [
      "requests (>=2.27.1)",
      "PyJWT (==2.4.0)",
      "cryptography (==3.4.8)"
    ],
    "requires_python": "",
    "summary": "Apple SearchAds API non-official python library",
    "version": "1.6.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13808838,
  "releases": {
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d2e6d1b9a2f52718e94f7998712453e40ba42a63b96ea9116701c6421d0146a",
          "md5": "6ecad31226c08f41655f66ac53e3fc10",
          "sha256": "8925ed6b8bd9f7781218931715c9c5289f9fd5317326de840d0d019f61722241"
        },
        "downloads": -1,
        "filename": "apple_searchads_api-1.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ecad31226c08f41655f66ac53e3fc10",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13323,
        "upload_time": "2022-05-13T17:12:35",
        "upload_time_iso_8601": "2022-05-13T17:12:35.751777Z",
        "url": "https://files.pythonhosted.org/packages/1d/2e/6d1b9a2f52718e94f7998712453e40ba42a63b96ea9116701c6421d0146a/apple_searchads_api-1.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e547e9e04141e43a91522b92f651c2dbbc605722b2589150ca2231585377837",
          "md5": "833b8e54390b562e4312217a601ac1d0",
          "sha256": "ed7742cf7619bc358ac9d5ee9c0b06d43de89bc8ca563e8462d98a2bded67ab5"
        },
        "downloads": -1,
        "filename": "apple_searchads_api-1.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "833b8e54390b562e4312217a601ac1d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13725,
        "upload_time": "2022-05-13T17:12:37",
        "upload_time_iso_8601": "2022-05-13T17:12:37.631612Z",
        "url": "https://files.pythonhosted.org/packages/3e/54/7e9e04141e43a91522b92f651c2dbbc605722b2589150ca2231585377837/apple_searchads_api-1.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b74b3f9ad82018fd0cee9edc05939291770850f52318cb03d8f71b2f69ca787c",
          "md5": "e1a80604e36f5bca17766084bdb80fd0",
          "sha256": "873b42f8a957558df7ebb5c0d90b30a71b419742860dd5e2a97ab3198cf337e9"
        },
        "downloads": -1,
        "filename": "apple_searchads_api-1.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1a80604e36f5bca17766084bdb80fd0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13417,
        "upload_time": "2022-05-13T17:30:16",
        "upload_time_iso_8601": "2022-05-13T17:30:16.701699Z",
        "url": "https://files.pythonhosted.org/packages/b7/4b/3f9ad82018fd0cee9edc05939291770850f52318cb03d8f71b2f69ca787c/apple_searchads_api-1.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "592ab82161388ef6e05288bc23711f5de580b6d66aaf9d6defa916bd8ac3c46f",
          "md5": "8f03996f6c2ea3de36cce726448782ea",
          "sha256": "3179b0b32aeef294ddfab9eaa8fbcd4850f433671c97451c38440cfae6ff16c2"
        },
        "downloads": -1,
        "filename": "apple_searchads_api-1.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8f03996f6c2ea3de36cce726448782ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13881,
        "upload_time": "2022-05-13T17:30:19",
        "upload_time_iso_8601": "2022-05-13T17:30:19.470201Z",
        "url": "https://files.pythonhosted.org/packages/59/2a/b82161388ef6e05288bc23711f5de580b6d66aaf9d6defa916bd8ac3c46f/apple_searchads_api-1.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56b77a91303288f77f47c5c5ec98891e4df416fbd881d4438da20593fceb436a",
          "md5": "4594a5afa76eab885b018d891ebf2726",
          "sha256": "f1fef6080349903444780eac478cc1e08293bd3e3e5602437ab26f36245a97de"
        },
        "downloads": -1,
        "filename": "apple_searchads_api-1.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4594a5afa76eab885b018d891ebf2726",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13585,
        "upload_time": "2022-05-13T17:49:23",
        "upload_time_iso_8601": "2022-05-13T17:49:23.605601Z",
        "url": "https://files.pythonhosted.org/packages/56/b7/7a91303288f77f47c5c5ec98891e4df416fbd881d4438da20593fceb436a/apple_searchads_api-1.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc893d4fad7b9d6b15b56b13d611f08aa1e065b95d77400483bd84d2292c3029",
          "md5": "c32f628f1c3eab33cef25fb5e9a07d41",
          "sha256": "f8c851748bd495487e102d46c18b642bb09b06ef475ac7aa2d7e69e21aa8b0f1"
        },
        "downloads": -1,
        "filename": "apple_searchads_api-1.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c32f628f1c3eab33cef25fb5e9a07d41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14131,
        "upload_time": "2022-05-13T17:49:27",
        "upload_time_iso_8601": "2022-05-13T17:49:27.369709Z",
        "url": "https://files.pythonhosted.org/packages/cc/89/3d4fad7b9d6b15b56b13d611f08aa1e065b95d77400483bd84d2292c3029/apple_searchads_api-1.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56b77a91303288f77f47c5c5ec98891e4df416fbd881d4438da20593fceb436a",
        "md5": "4594a5afa76eab885b018d891ebf2726",
        "sha256": "f1fef6080349903444780eac478cc1e08293bd3e3e5602437ab26f36245a97de"
      },
      "downloads": -1,
      "filename": "apple_searchads_api-1.6.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4594a5afa76eab885b018d891ebf2726",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13585,
      "upload_time": "2022-05-13T17:49:23",
      "upload_time_iso_8601": "2022-05-13T17:49:23.605601Z",
      "url": "https://files.pythonhosted.org/packages/56/b7/7a91303288f77f47c5c5ec98891e4df416fbd881d4438da20593fceb436a/apple_searchads_api-1.6.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc893d4fad7b9d6b15b56b13d611f08aa1e065b95d77400483bd84d2292c3029",
        "md5": "c32f628f1c3eab33cef25fb5e9a07d41",
        "sha256": "f8c851748bd495487e102d46c18b642bb09b06ef475ac7aa2d7e69e21aa8b0f1"
      },
      "downloads": -1,
      "filename": "apple_searchads_api-1.6.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c32f628f1c3eab33cef25fb5e9a07d41",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14131,
      "upload_time": "2022-05-13T17:49:27",
      "upload_time_iso_8601": "2022-05-13T17:49:27.369709Z",
      "url": "https://files.pythonhosted.org/packages/cc/89/3d4fad7b9d6b15b56b13d611f08aa1e065b95d77400483bd84d2292c3029/apple_searchads_api-1.6.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}