{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "# treeds\r\n\r\nEasy to use Tree Data Structure with many useful methods.\r\n\r\nDeveloped by Tatwik.\r\n\r\n# Examples of using treeds\r\n\r\n![Tree Example](https://adrianmejia.com/images/tree-parts.jpg)\r\n\r\nWe will consider this image as an example for the below code.\r\n\r\n## Creating a Tree\r\n---\r\n\r\n1. Adding the root node at initialization.\r\n\r\n```python\r\n  from treeds import Tree\r\n  tree = Tree(root_nodes=['a'])\r\n```\r\n\r\n> 1. We can have multiple root nodes, Just by passing multiple nodes to the parameter 'root_nodes'\r\n\r\n2. Adding the root node after initialization.\r\n\r\n```python\r\n  from treeds import Tree\r\n  tree = Tree()\r\n  tree.add_node(('nil', 'a'))\r\n```\r\n\r\n> 1. Here the parent node of the root node 'a' is 'nil'.\r\n> 2. You can modify the 3rd line of the above code as \r\n> ```python\r\n> tree.add_children('nil', ['a'])\r\n> ```\r\n> The above function helps to add multiple root nodes instead of one root node 'a'.\r\n\r\n3. Adding the remaining nodes to the tree.\r\n\r\n```python\r\n# level-1\r\ntree.add_children('a', ['b', 'c', 'd'])\r\n# level-2\r\ntree.add_children('b', ['e', 'f'])\r\ntree.add_children('d', ['g', 'h'])\r\n# level-3\r\ntree.add_children('h', ['i', 'j'])\r\n```\r\n> 1. Now we have created a Tree that's in the above image.\r\n\r\n> 2. Let's print the Tree we have created.\r\n> ```python\r\n> print(tree.tree)\r\n> ```\r\n> Output:\r\n> \r\n> {'nil': (None, ['a']), 'a': ('nil', ['b', 'c', 'd']), 'b': ('a', ['e', 'f']), 'c': ('a', []), 'd': ('a', ['g', 'h']), 'e': ('b', []), 'f': ('b', []), 'g': ('d', []), 'h': ('d', ['i', 'j']), 'i': ('h', []), 'j': ('h', [])}\r\n> \r\n> Let's check the above Output dictionary.\r\n> - Dict Keys - Node names\r\n> - Dict Values - (parent node, [child nodes])\r\n> \r\n> Let's see an example:\r\n> Consider: 'a': ('nil', ['b', 'c', 'd'])\r\n> - Here 'a' is the node name.\r\n> - 'nil' is the parent node of 'a'.\r\n> - ['b', 'c', 'd'] are the children nodes of node 'a'.\r\n\r\n## Using the methods of Tree class\r\n---\r\n\r\n- ### add_node()\r\n> Adds the node to the tree.\r\n> - parameter node: Tuple with parent and child.\r\n> ```python\r\n> tree.add_node(('parent_node', 'node_name'))\r\n> ```\r\n\r\n- ### add_children()\r\n> Adds multiple children to the node.\r\n> - parameter node: The name of the node.\r\n> - parameter children: List of children of the node.\r\n> ```python\r\n> tree.add_children('node_name', ['child_node1', 'child_node2', 'child_node3'])\r\n> ```\r\n\r\n- ### get_parent()\r\n> Returns the parent of the given node.\r\n> - parameter node: The name of the node.\r\n> - returns: The parent of the given node.\r\n> ```python\r\n> tree.get_parent('b')\r\n> ```\r\n> Output: 'a'\r\n\r\n- ### get_children()\r\n> Returns the list of childeren of the given node.\r\n> - parameter node: The name of the node.\r\n> - returns: The list of children for the node.\r\n> ```python\r\n> tree.get_children('a')\r\n> ```\r\n> > Output: ['b', 'c', 'd']\r\n\r\n- ### get_path()\r\n> Returns The path from root node to the given node.\r\n> - parameter node: The name of the node.\r\n> - return: The list of path from root node to the given node.\r\n> ```python\r\n> tree.get_path('i')\r\n> ```\r\n> > Output: ['a', 'd', 'h', 'i']\r\n\r\n- ### get_depth()\r\n> Returns the depth at where the node is located in the tree.\r\n> - parameter node: The name of the node.\r\n> - return: The depth at which the node is located in the tree.\r\n> ```python\r\n> tree.get_depth('g')\r\n> ```\r\n> > Output: 2\r\n\r\n- ### delete()\r\n> Deletes the node and the tree to the down of the node.\r\n> - parameter node: The name of the node.\r\n> ```python\r\n> tree.delete('d')\r\n> ```\r\n> Because we deleted node 'd' all the nodes below it will also get deleted so the nodes ['d', 'g', 'h', 'i', 'j'] will be deleted.\r\n\r\n---\r\n\r\n[Mail me](mailto:sreenu143anupama@gmail.com)\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,treeds,tree python,data structure,tree data structure,pytree",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "treeds",
    "package_url": "https://pypi.org/project/treeds/",
    "platform": "",
    "project_url": "https://pypi.org/project/treeds/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/treeds/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple implementation of Tree Data Structure",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11147728,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88ea8efe0c65d7c4fa1f4d7201bedd59d9b9d8a15af2caf4e8efe3bce4c6c414",
          "md5": "18d613e3db83e2407f34a34ba3748b67",
          "sha256": "fa38e2ccb67711cc92a885d665fbf12796876f5a8c498a22c60792392c795a60"
        },
        "downloads": -1,
        "filename": "treeds-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "18d613e3db83e2407f34a34ba3748b67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3144,
        "upload_time": "2021-08-11T07:39:39",
        "upload_time_iso_8601": "2021-08-11T07:39:39.118711Z",
        "url": "https://files.pythonhosted.org/packages/88/ea/8efe0c65d7c4fa1f4d7201bedd59d9b9d8a15af2caf4e8efe3bce4c6c414/treeds-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88ea8efe0c65d7c4fa1f4d7201bedd59d9b9d8a15af2caf4e8efe3bce4c6c414",
        "md5": "18d613e3db83e2407f34a34ba3748b67",
        "sha256": "fa38e2ccb67711cc92a885d665fbf12796876f5a8c498a22c60792392c795a60"
      },
      "downloads": -1,
      "filename": "treeds-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "18d613e3db83e2407f34a34ba3748b67",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3144,
      "upload_time": "2021-08-11T07:39:39",
      "upload_time_iso_8601": "2021-08-11T07:39:39.118711Z",
      "url": "https://files.pythonhosted.org/packages/88/ea/8efe0c65d7c4fa1f4d7201bedd59d9b9d8a15af2caf4e8efe3bce4c6c414/treeds-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}