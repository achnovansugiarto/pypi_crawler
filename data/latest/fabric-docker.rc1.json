{
  "info": {
    "author": "Alex (Oleksii) Markov",
    "author_email": "alex@markovs.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Clustering",
      "Topic :: System :: Software Distribution",
      "Topic :: System :: Systems Administration"
    ],
    "description": "fabric-docker\r\n=============\r\n\r\nDocker-engine command-line tool wrapper for Fabric.\r\n\r\nCan be used both in local and remote modes (via subprocess or ssh).\r\n\r\nMethod names and options try to use the same names as related docker-engine\r\ncommands and options.\r\n\r\nSo, it is mainly a helper to write:\r\n\r\n.. code-block:: python\r\n\r\n    docker.ps(all=True, size=True)\r\n\r\ninstead of:\r\n\r\n.. code-block:: python\r\n\r\n    run('docker ps --all --size')\r\n\r\nWith some nice use cases:\r\n\r\n.. code-block:: python\r\n\r\n    # remove dangling images \"<none>:<none>\"\r\n    docker.rmi(docker.none_images())\r\n\r\n    # remove images by some filter\r\n    images = [\r\n        image['image id'] for image in docker.images()\r\n        if image['tag'] != 'latest'\r\n    ]\r\n    docker.rmi(images)\r\n\r\n\r\nRequirements\r\n------------\r\n\r\n* Docker (local or remote - depending the mode you use)\r\n* Fabric\r\n* pyyaml\r\n\r\n\r\nSupported commands\r\n------------------\r\n\r\nOnly limited set of commands and options are supported now:\r\n\r\n* cli - run arbitrary Docker command. i.e. ``docker.cli('ps -a')``\r\n* images\r\n* ps\r\n* restart\r\n* rm\r\n* rmi\r\n* run - limited set of options\r\n* start\r\n* stop\r\n* version\r\n* none_images - helper method to get \"dangling\" images\r\n\r\n\r\nInstall\r\n-------\r\n\r\n.. code::\r\n\r\n    pip install fabric-docker\r\n\r\n\r\nUsage\r\n-----\r\n\r\nCreate instance to use locally with sudo:\r\n\r\n.. code-block:: python\r\n\r\n    import fabric_docker\r\n\r\n    docker = fabric_docker.DockerCli(local=True, use_sudo=True)\r\n    # any command can override this default settings by suppling\r\n    # \"local\" and \"sudo\" key-value arguments\r\n\r\nList all local containers:\r\n\r\n.. code-block:: python\r\n\r\n    docker.ps(all=True)\r\n\r\nRemove latest container:\r\n\r\n.. code-block:: python\r\n\r\n    docker.rm(docker.ps(latest=True))\r\n\r\nList remote images (override default local flag):\r\n\r\n.. code-block:: python\r\n\r\n    docker.images(no_truncate=True, local=False)\r\n\r\nRun remote container:\r\n\r\n.. code-block:: python\r\n\r\n    docker.run(\r\n        detach=True,\r\n        restart='always',\r\n        publish={'8080':'80'},\r\n        volume={'/host/dir': '/container/dir', '/host/dir2': '/container/dir2'},\r\n        name='name_of_container',\r\n        image='image_name:tag',\r\n    )",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/malexer/fabric-docker",
    "keywords": "fabric fabfile docker docker-engine",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fabric-docker",
    "package_url": "https://pypi.org/project/fabric-docker/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/fabric-docker/",
    "project_urls": {
      "Homepage": "https://github.com/malexer/fabric-docker"
    },
    "release_url": "https://pypi.org/project/fabric-docker/0.1/",
    "requires_dist": [
      "fabric",
      "pyyaml"
    ],
    "requires_python": "",
    "summary": "Docker command-line tool wrapper for Fabric.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2037759,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3fa6b57b2732bcaadc23a2058428e7debc6fe53966528b71d9cb0de0b71732f",
          "md5": "a856b94a06243caa64b620a8addaf7c8",
          "sha256": "0cf7cfda8f8b448d9910341d6c8bb0921aa1d04b8639880026a6854fc79356f3"
        },
        "downloads": -1,
        "filename": "fabric-docker-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a856b94a06243caa64b620a8addaf7c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5303,
        "upload_time": "2016-03-14T13:17:45",
        "upload_time_iso_8601": "2016-03-14T13:17:45.960222Z",
        "url": "https://files.pythonhosted.org/packages/a3/fa/6b57b2732bcaadc23a2058428e7debc6fe53966528b71d9cb0de0b71732f/fabric-docker-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3fa6b57b2732bcaadc23a2058428e7debc6fe53966528b71d9cb0de0b71732f",
        "md5": "a856b94a06243caa64b620a8addaf7c8",
        "sha256": "0cf7cfda8f8b448d9910341d6c8bb0921aa1d04b8639880026a6854fc79356f3"
      },
      "downloads": -1,
      "filename": "fabric-docker-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a856b94a06243caa64b620a8addaf7c8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5303,
      "upload_time": "2016-03-14T13:17:45",
      "upload_time_iso_8601": "2016-03-14T13:17:45.960222Z",
      "url": "https://files.pythonhosted.org/packages/a3/fa/6b57b2732bcaadc23a2058428e7debc6fe53966528b71d9cb0de0b71732f/fabric-docker-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}