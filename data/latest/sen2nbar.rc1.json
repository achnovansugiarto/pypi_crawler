{
  "info": {
    "author": "David Montero Loaiza",
    "author_email": "dml.mont@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<p align=\"center\">\n  <a href=\"https://github.com/ESDS-Leipzig/sen2nbar\"><img src=\"https://github.com/ESDS-Leipzig/sen2nbar/raw/main/docs/_static/logo.png\" alt=\"cubo\"></a>\n</p>\n<p align=\"center\">\n    <em>Nadir BRDF Adjusted Reflectance (NBAR) for Sentinel-2 in Python</em>\n</p>\n<p align=\"center\">\n<a href='https://pypi.python.org/pypi/sen2nbar'>\n    <img src='https://img.shields.io/pypi/v/sen2nbar.svg' alt='PyPI' />\n</a>\n<a href='https://anaconda.org/conda-forge/sen2nbar'>\n    <img src='https://img.shields.io/conda/vn/conda-forge/sen2nbar.svg' alt='conda-forge' />\n</a>\n<a href='https://sen2nbar.readthedocs.io/en/latest/?badge=latest'>\n    <img src='https://readthedocs.org/projects/sen2nbar/badge/?version=latest' alt='Documentation Status' />\n</a>\n<a href=\"https://github.com/ESDS-Leipzig/sen2nbar/actions/workflows/tests.yml\" target=\"_blank\">\n    <img src=\"https://github.com/ESDS-Leipzig/sen2nbar/actions/workflows/tests.yml/badge.svg\" alt=\"Tests\">\n</a>\n<a href=\"https://opensource.org/licenses/MIT\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/License-MIT-blue.svg\" alt=\"License\">\n</a>\n<a href=\"https://github.com/sponsors/davemlz\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/GitHub%20Sponsors-Donate-ff69b4.svg\" alt=\"GitHub Sponsors\">\n</a>\n<a href=\"https://www.buymeacoffee.com/davemlz\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/Buy%20me%20a%20coffee-Donate-ff69b4.svg\" alt=\"Buy me a coffee\">\n</a>\n<a href=\"https://ko-fi.com/davemlz\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/kofi-Donate-ff69b4.svg\" alt=\"Ko-fi\">\n</a>\n<a href=\"https://twitter.com/dmlmont\" target=\"_blank\">\n    <img src=\"https://img.shields.io/twitter/follow/dmlmont?style=social\" alt=\"Twitter\">\n</a>\n<a href=\"https://github.com/psf/black\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" alt=\"Black\">\n</a>\n<a href=\"https://pycqa.github.io/isort/\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336\" alt=\"isort\">\n</a>\n</p>\n\n---\n\n**GitHub**: [https://github.com/ESDS-Leipzig/sen2nbar](https://github.com/ESDS-Leipzig/sen2nbar)\n\n**Documentation**: [https://sen2nbar.readthedocs.io/](https://sen2nbar.readthedocs.io/)\n\n**PyPI**: [https://pypi.org/project/sen2nbar/](https://pypi.org/project/sen2nbar/)\n\n**Conda-forge**: [https://anaconda.org/conda-forge/sen2nbar](https://anaconda.org/conda-forge/sen2nbar)\n\n**Tutorials**: [https://sen2nbar.readthedocs.io/en/latest/tutorials.html](https://sen2nbar.readthedocs.io/en/latest/tutorials.html)\n\n---\n\n## Overview\n\nFirst, a super small glossary:\n\n- **BRDF**: Bidirectional Reflectance Distribution Function.\n- **DN**: Digital Number.\n- **NBAR**: Nadir BRDF Adjusted Reflectance.\n- **SR**: Surface Reflectance.\n- **STAC**: SpatioTemporal Assets Catalogs.\n\nSecond, the amazing bibliography by David P. Roy et al., used to create this package:\n\n- [Multi-temporal MODIS-Landsat data fusion for relative radiometric normalization, gap filling, and prediction of Landsat data.](https://doi.org/10.1016/j.rse.2008.03.009)\n- [A general method to normalize Landsat reflectance data to nadir BRDF adjusted reflectance.](https://doi.org/10.1016/j.rse.2016.01.023)\n- [Examination of Sentinel-2A multi-spectral instrument (MSI) reflectance anisotropy and the suitability of a general method to normalize MSI reflectance to nadir BRDF adjusted reflectance.](https://doi.org/10.1016/j.rse.2017.06.019)\n- [Adjustment of sentinel-2 multi-spectral instrument (MSI) red-edge band reflectance to nadir BRDF adjusted reflectance (NBAR) and quantification of red-edge band BRDF effects.](https://doi.org/10.3390/rs9121325)\n\nThird, the super useful bibliography by Lucht et al.,:\n\n- [An algorithm for the retrieval of albedo from space using semiempirical BRDF models.](https://doi.org/10.1109/36.841980)\n\nGiven this, and in a few words, `sen2nbar` converts the **Sentinel-2 SR** (i.e., L2A) to **Sentinel-2 NBAR** via the **_c_-factor** method.\n\n### SAFE\n\nYou can use `sen2nbar` to convert complete images via SAFE:\n\n```python\nfrom sen2nbar.nbar import nbar_SAFE\n\n# Converted images are saved inside the SAFE path\nnbar_SAFE(\"S2A_MSIL2A_20230223T075931_N0509_R035_T35HLC_20230223T120656.SAFE\")\n```\n\n> **Note**\n>\n> Note that `sen2nbar` automatically shifts the DN of images with a processing baseline >= 04.00. This includes data cubes obtained via `stackstac` or `cubo`.\n\n### stackstac\n\nOr, if you are using STAC and retrieving images via `stackstac`:\n\n```python\nimport pystac_client\nimport stackstac\nimport planetary_computer as pc\nfrom sen2nbar.nbar import nbar_stackstac\n\n# Important infor for later\nendpoint = \"https://planetarycomputer.microsoft.com/api/stac/v1\"\ncollection = \"sentinel-2-l2a\"\nbounds = (-148.565368, 60.800723, -147.443389, 61.183638)\n\n# Open the STAC\ncatalog = pystac_client.Client.open(endpoint, modifier=pc.sign_inplace)\n\n# Define your area\narea_of_interest = {\n    \"type\": \"Polygon\",\n    \"coordinates\": [\n        [\n            [bounds[0], bounds[1]],\n            [bounds[2], bounds[1]],\n            [bounds[2], bounds[3]],\n            [bounds[0], bounds[3]],\n            [bounds[0], bounds[1]],\n        ]\n    ],\n}\n\n# Search the items\nitems = catalog.search(\n    collections=[collection],\n    intersects=area_of_interest,\n    datetime=\"2019-06-01/2019-08-01\",\n    query={\"eo:cloud_cover\": {\"lt\": 10}},\n).get_all_items()\n\n# Retrieve all items as a xr.DataArray\nstack = stackstac.stack(\n    items,\n    assets=[\"B05\",\"B06\",\"B07\"], # Red Edge here, but you can use more!\n    bounds_latlon=bounds,\n    resolution=20\n)\n\n# Convert it to NBAR!\nda = nbar_stackstac(\n    stack,\n    stac=endpoint,\n    collection=collection\n)\n```\n\n> **Warning**\n>\n> These examples are done using `Planetary Computer`. If you are using data cubes retrieved via STAC (e.g., by using `stackstac` or `cubo`), we recommend you to use this provider. The provider `Element84` is not supported at the moment.\n\n### cubo\n\nAnd going deeper, if you are using `cubo`:\n\n```python\nimport cubo\nimport xarray as xr\nfrom sen2nbar.nbar import nbar_cubo\n\n# Get your cube\nda = cubo.create(\n    lat=47.84815,\n    lon=13.37949,\n    collection=\"sentinel-2-l2a\",\n    bands=[\"B02\",\"B03\",\"B04\"], # RGB here, but you can add more bands!\n    start_date=\"2020-01-01\",\n    end_date=\"2021-01-01\",\n    edge_size=64,\n    resolution=10,\n    query={\"eo:cloud_cover\": {\"lt\": 3}}\n)\n\n# Convert it to NBAR (This a xr.DataArray)\nda = nbar_cubo(da)\n```\n\n## Bands\n\n`sen2nbar` converts the following bands (if available in the input data):\n\n- **RGB Bands**: 02, 03, 04.\n- **Red Edge Bands**: 05, 06, 07.\n- **Broad NIR Band**: 08.\n- **SWIR Bands**: 11, 12.\n\n\n## Installation\n\nInstall the latest version from PyPI:\n\n```\npip install sen2nbar\n```\n\nUpgrade `sen2nbar` by running:\n\n```\npip install -U sen2nbar\n```\n\nInstall the latest version from conda-forge:\n\n```\nconda install -c conda-forge sen2nbar\n```\n\nInstall the latest dev version from GitHub by running:\n\n```\npip install git+https://github.com/davemlz/sen2nbar\n```\n\n## License\n\nThe project is licensed under the MIT license.\n\n[![RSC4Earth](https://github.com/davemlz/sen2nbar/raw/main/docs/_static/esds.png)](https://rsc4earth.de/authors/esds/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ESDS-Leipzig/sen2nbar",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sen2nbar",
    "package_url": "https://pypi.org/project/sen2nbar/",
    "platform": null,
    "project_url": "https://pypi.org/project/sen2nbar/",
    "project_urls": {
      "Homepage": "https://github.com/ESDS-Leipzig/sen2nbar"
    },
    "release_url": "https://pypi.org/project/sen2nbar/2023.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Nadir BRDF Adjusted Reflectance (NBAR) for Sentinel-2 in Python",
    "version": "2023.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17376554,
  "releases": {
    "2023.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c5f0ea2208da17c2b0d0a1afab2b634359782e5f9a3cfc66912c0ece2df1ff6",
          "md5": "e59738ae990c727aba4737fcd2f21caa",
          "sha256": "695f2840bdf768f85675ac242f5e0a66c639ac2b25cb8041d42d758ee6044d22"
        },
        "downloads": -1,
        "filename": "sen2nbar-2023.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e59738ae990c727aba4737fcd2f21caa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13550,
        "upload_time": "2023-03-21T09:09:54",
        "upload_time_iso_8601": "2023-03-21T09:09:54.452781Z",
        "url": "https://files.pythonhosted.org/packages/7c/5f/0ea2208da17c2b0d0a1afab2b634359782e5f9a3cfc66912c0ece2df1ff6/sen2nbar-2023.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c5f0ea2208da17c2b0d0a1afab2b634359782e5f9a3cfc66912c0ece2df1ff6",
        "md5": "e59738ae990c727aba4737fcd2f21caa",
        "sha256": "695f2840bdf768f85675ac242f5e0a66c639ac2b25cb8041d42d758ee6044d22"
      },
      "downloads": -1,
      "filename": "sen2nbar-2023.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e59738ae990c727aba4737fcd2f21caa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13550,
      "upload_time": "2023-03-21T09:09:54",
      "upload_time_iso_8601": "2023-03-21T09:09:54.452781Z",
      "url": "https://files.pythonhosted.org/packages/7c/5f/0ea2208da17c2b0d0a1afab2b634359782e5f9a3cfc66912c0ece2df1ff6/sen2nbar-2023.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}