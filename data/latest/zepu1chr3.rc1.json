{
  "info": {
    "author": "CYB3RMX",
    "author_email": "cyb3rmx0@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Zepu1chr3\n<img src=\"https://img.shields.io/badge/-Python-black?style=for-the-badge&logo=python&logoColor=white\">\n<br><b>A Radare2 based Python module for Binary Analysis and Reverse Engineering.</b><br>\n\n# How to Use\n## Specifying a target binary\n- <i>Description</i>: You can specify any binary file to analysis you want. It returns a handler for target file.<br>\n```python\nimport zepu1chr3\n\nzep = zepu1chr3.Binary()\ntarget = zep.File(\"WannaCry.exe\")\n```\n\n## Getting symbols from target binary\n- <i>Description</i>: This method will give you what symbols are inside of the target file. It returns an array of symbol information.<br>\n```python\nimport zepu1chr3\n\nzep = zepu1chr3.Binary()\ntarget zep.File(\"WannaCry.exe\")\nsymbols = zep.GetSymbols(target)\n```\n![image](.animations/symbols.png)\n\n## Getting imports from target binary\n- <i>Description</i>: This method will give you what imports are inside of the target file. It returns an array of import information.<br>\n```python\nimport zepu1chr3\n\nzep = zepu1chr3.Binary()\ntarget = zep.File(\"WannaCry.exe\")\nimports = zep.GetImports(target)\n```\n![image](.animations/imports.png)\n\n## Getting functions from target binary\n- <i>Description</i>: This method will give you what functions are inside of the target file. It returns an array of function information.<br>\n```python\nimport zepu1chr3\n\nzep = zepu1chr3.Binary()\ntarget = zep.File(\"WannaCry.exe\")\nfunctions = zep.GetFunctions(target)\n```\n![image](.animations/functions.png)\n\n## Getting sections from target binary\n- <i>Description</i>: This method will give you what sections are inside of the target file. It returns an array of section information.<br>\n```python\nimport zepu1chr3\n\nzep = zepu1chr3.Binary()\ntarget = zep.File(\"WannaCry.exe\")\nsections = zep.GetSections(target)\n```\n![image](.animations/sections.png)\n\n# Disassembling functions or somethings contained in offsets\n## Getting informations about only machine code\n- <i>Description</i>: This method will give you disassembled function codes if ```only_codes``` parameter set to ```True```<br>\n```python\nimport zepu1chr3\n\nzep = zepu1chr3.Binary()\ntarget = zep.File(\"WannaCry.exe\")\ndisas = zep.DisassembleFunction(target, given_function=\"entry0\", only_codes=True)\nsecond = zep.DisassembleFunction(target, given_function=\"0x401000\", only_codes=True) # You can use offsets to!!\n```\n![image](.animations/disas1.png)\n\n## Getting every information about machine code (verbose!!)\n- <i>Description</i>: If you set ```only_codes``` parameter as ```False``` you will get more verbose output.<br>\n```python\nimport zepu1chr3\n\nzep = zepu1chr3.Binary()\ntarget = zep.File(\"WannaCry.exe\")\ndisas = zep.DisassembleFunction(target, given_function=\"entry0\", only_codes=False)\n```\n![image](.animations/disas2.png)\n\n# Pypi and Other functionalities are coming soon!!\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CYB3RMX/Zepu1chr3",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zepu1chr3",
    "package_url": "https://pypi.org/project/zepu1chr3/",
    "platform": "",
    "project_url": "https://pypi.org/project/zepu1chr3/",
    "project_urls": {
      "Bug Tracker": "https://github.com/CYB3RMX/Zepu1chr3/issues",
      "Homepage": "https://github.com/CYB3RMX/Zepu1chr3"
    },
    "release_url": "https://pypi.org/project/zepu1chr3/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A Radare2 based Python module for Binary Analysis and Reverse Engineering.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12810325,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51139b3b465acc9b17b1fc79962db2d0763b8aca83e5d9988539c6c35ef10723",
          "md5": "c6f1baa49e4b997f0c00583ba57ebe34",
          "sha256": "9613d0bed7d0f0d08deb6e673fa1949f158b39ca0e4a23d2d4351617a7674cd1"
        },
        "downloads": -1,
        "filename": "zepu1chr3-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6f1baa49e4b997f0c00583ba57ebe34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7784,
        "upload_time": "2022-02-07T08:53:49",
        "upload_time_iso_8601": "2022-02-07T08:53:49.111281Z",
        "url": "https://files.pythonhosted.org/packages/51/13/9b3b465acc9b17b1fc79962db2d0763b8aca83e5d9988539c6c35ef10723/zepu1chr3-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7e0ff87d21918b3222edc87c9f96d695408f962c15bccc656dd7dbfa1f66c66",
          "md5": "233eb8a9a926ac14ab57510468bfdc8a",
          "sha256": "e33038324a9c849ead5914e2cbecd16475bee0d79a46fa5c289a60e2dc902453"
        },
        "downloads": -1,
        "filename": "zepu1chr3-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "233eb8a9a926ac14ab57510468bfdc8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7426,
        "upload_time": "2022-02-07T08:53:50",
        "upload_time_iso_8601": "2022-02-07T08:53:50.740524Z",
        "url": "https://files.pythonhosted.org/packages/e7/e0/ff87d21918b3222edc87c9f96d695408f962c15bccc656dd7dbfa1f66c66/zepu1chr3-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51139b3b465acc9b17b1fc79962db2d0763b8aca83e5d9988539c6c35ef10723",
        "md5": "c6f1baa49e4b997f0c00583ba57ebe34",
        "sha256": "9613d0bed7d0f0d08deb6e673fa1949f158b39ca0e4a23d2d4351617a7674cd1"
      },
      "downloads": -1,
      "filename": "zepu1chr3-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c6f1baa49e4b997f0c00583ba57ebe34",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7784,
      "upload_time": "2022-02-07T08:53:49",
      "upload_time_iso_8601": "2022-02-07T08:53:49.111281Z",
      "url": "https://files.pythonhosted.org/packages/51/13/9b3b465acc9b17b1fc79962db2d0763b8aca83e5d9988539c6c35ef10723/zepu1chr3-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7e0ff87d21918b3222edc87c9f96d695408f962c15bccc656dd7dbfa1f66c66",
        "md5": "233eb8a9a926ac14ab57510468bfdc8a",
        "sha256": "e33038324a9c849ead5914e2cbecd16475bee0d79a46fa5c289a60e2dc902453"
      },
      "downloads": -1,
      "filename": "zepu1chr3-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "233eb8a9a926ac14ab57510468bfdc8a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7426,
      "upload_time": "2022-02-07T08:53:50",
      "upload_time_iso_8601": "2022-02-07T08:53:50.740524Z",
      "url": "https://files.pythonhosted.org/packages/e7/e0/ff87d21918b3222edc87c9f96d695408f962c15bccc656dd7dbfa1f66c66/zepu1chr3-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}