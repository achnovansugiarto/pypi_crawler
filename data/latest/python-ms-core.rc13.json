{
  "info": {
    "author": "Sujata Misra",
    "author_email": "sujatam@gaussiansolutions.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Core package for microservice\n\n\n## System requirements\n| Software   | Version |\n|------------|---------|\n| Python     | 3.10.x  |\n\n\n## Starting a new project with template\n\n- Add `python-ms-core` package as dependency in your `requirements.txt`\n- or `pip install python-ms-core`\n- Start using the core packages in your code.\n\n\n\n## Core\nContains all the abstract and Azure implementation classes for connecting to Azure components.\n\n## Initialize and Configuration\nAll the cloud connections are initialized with `initialize` function of core which takes an optional parameter of type `CoreConfig`. A `CoreConfig` takes only one parameter called `provider` which by default is set to `Azure`. The Core.initialize method can be called without any parameter or with a constructed CoreConfig object.\n\nEg.\n```python\nfrom python_ms_core import Core\ncore = Core() or Core(config='Local')\n```\nThe method analyzes the `.env` variables and does a health check on what components are available\n\n## Setting up local connections\n`Core` works with all the default options and wherever required, relies on environment variables for connecting. The environment variables can be accessed either by setting them in the local machine or by importing via `python-dotenv` package which reads from a `.env` file created in the source code. All the variables in the `.env` file are optional. However, some of them will be needed inorder for the specific features to work.\n\nHere is the structure \n\n```shell\n# Provider information. Only two options available Azure and Local\n# Defaults to Azure if not provided\nPROVIDER=Azure \n\n# Connection string to queue. \n# Optional. Logger functionality for Azure may not work \n# if not provided\nQUEUECONNECTION=\n# connection string to Azure storage if the provider is Azure\n# Same can be used for root folder in Local provider\nSTORAGECONNECTION=\n# Name of the queue that the logger writes to.\n# This is optional and defaults value tdei-ms-log\nLOGGERQUEUE=\n\n```\nThis file will have to be generated or shared offline as per the developer requirement.\n\n### Logger\nOffers helper classes to help log the information. It is also used to record the audit messages\nas well as the analytics information required.\n\nUse `core.get_logger()`\nEg.\n```python\nfrom python_ms_core import Core\n\ncore = Core()\nlogger = core.get_logger()\n\n# Record a metric\nlogger.record_metric(name='test', value='test') # Metric and value\n\n```\nNote:\n\n* All the `debug`, `info`, `warn`, `error` logs can be logged with `console` and will be injected into appInsight traces.\nEg.\n```python\nfrom python_ms_core import Core\n\ncore = Core()\nlogger = core.get_logger()\n\n# Record a metric\nlogger.debug('Debug Message')\nlogger.info('Info Message')\nlogger.warn('Warning Message')\nlogger.error('Error Message')\n\n```\n\n\n\nNOTE: In future, there will be other decorators in place based on the need.\nEg. @Validate, @UUID, @Required\n\nThese will help in easily modelling the classes along with the required validation.\n\n\n### Topic\nTopic is an advanced version of Queue where the messages are published and subscribed. Each message published to a topic can be subscribed \nby multiple parties for their own analysis and purpose. The messages sent and received via a topic will still be of type `QueueMessage`\n\nThe configuration required by Queue and Topic is similar and will be handled via a connection string.\n\n### Accessing a specific topic\n\nTopic can be accessed by the core method `get_topic`. This method takes two parameters\n1. topic name (required)\n\n```python\nfrom python_ms_core import Core\n\ncore = Core()\ntopic = core.get_topic(topic_name='topicName')\n\n```\n\n### Publishing message to topic\n\nOnce the topic object is got, use `publish` method to publish the message to topic. \n```python\nfrom python_ms_core import Core\nfrom python_ms_core.core.queue.models.queue_message import QueueMessage\n\ncore = Core()\ntopic = core.get_topic(topic_name='topicName')\ntopic.publish(QueueMessage.data_from(\n    {\n        'message': 'Test message'\n    }\n))\n\n```\n\n### Subscribing to topic\nAn active subscription will listening to a subscription over the topic. This is achieved by using `subscribe` method of `Topic`.\nIt takes one parameter\n1. subscription name\n\n\n```python\nfrom python_ms_core import Core\n\ncore = Core()\ntopic_object = topic = Core.get_topic(topic_name='topicName')\n\ndef process(message):\n    print(f'Message Received: {message}')\n\ntry:\n    topic_object.subscribe(subscription='subscriptionName')\nexcept Exception as e:\n    print(e)\n```\n\n### Storage\nFor all the azure blobs and other storages, storage components will offer simple ways to upload/download and read the existing data.\n```python\nfrom python_ms_core import Core\n\ncore = Core()\n# Create storage client\nazure_client = core.get_storage_client()\n\n# Get a container in the storage client\ncontainer = azure_client.get_container(container_name='tdei-storage-test')\n\n# To get the list of files\nlist_of_files = container.list_files()\n\n```\nThere are two ways to fetch the content of the file.\n1. ReadStream - use `file.get_stream()` which gives a `stream` object \n2. GetText - use `file.get_body_text()` which gives a `string` object containing all the data of the file in `utf-8` format.\n\nFile upload is done only through read stream.\n```python\nfrom python_ms_core import Core\nfrom io import BytesIO, StringIO\n\ncore = Core()\nazure_client = core.get_storage_client()\ncontainer = azure_client.get_container(container_name='tdei-storage-test')\n# Create an instance of `AzureFileEntity` with name and mime-type\ntxt = 'foo\\nbar\\nbaz'\nfile_like_io = StringIO(txt)\n\ntest_file = container.create_file('text.txt', 'text/plain')\n# Call the upload method with the readstream.\ntest_file.upload(file_like_io.read())\n```\n\n## Authorization\n\nCore offers a simple way of verifying the authorization of a user and their role.\n\nChecking the permission involves three steps\n1. Preparing a permission request object\n2. Getting an authorizer object from core\n3. Requesting if the permission is valid/true\n\n### Preparing the permission request\n\n```python\nfrom python_ms_core.core.auth.models.permission_request import PermissionRequest\n\npermission_request = PermissionRequest(\n    user_id='<userID>',\n    org_id='<orgID>',\n    should_satisfy_all=False,\n    permissions=['permission1', 'permission2']\n)\n\n```\n\nIn the above example, `should_satisfy_all` helps in figuring out if all the permissions are needed or any one of the permission is sufficient.\n\n### Getting the authorizer from core\n\nCore exposes `get_authorizer` method with 2 parameters\n\n1. `request_params` parameter which is instance of `PermissionRequest` class (Mandatory Parameter).\n2. `config` parameter (Optional)\n\nThere are two types of `Authorizer` objects in core. \n1. HostedAuthorizer: checks the permissions against a hosted API\n2. SimulatedAuthorizer: makes a simulated authorizer used for local/non-hosted environment.\n\nThe following code demonstrates getting the simulated and hosted authorizer\n```python\nfrom python_ms_core import Core\ncore = Core()\n# HostedAuthorizer \n\nhosted_authorizer = core.get_authorizer(config={'provider': 'Hosted', 'api_url': '<AUTH_API_URL>'})\n\nsimulated_authorizer = core.get_authorizer(config={'provider': 'Simulated'})\n\n```\nIn case `api_url` is not provided for `Hosted` auth provider, the core will pick it up from environment variable `AUTHURL`\n\n#### Requesting if certain permission is valid:\n\nUse the method `has_ermission(request_params)` to know if the permission request is valid/not.\n\n```python\n\n# Complete Example\nfrom python_ms_core import Core\nfrom python_ms_core.core.auth.models.permission_request import PermissionRequest\n\ncore = Core()\n\n\npermission_request = PermissionRequest(\n    user_id='<userID>',\n    org_id='<orgID>',\n    should_satisfy_all=False,\n    permissions=['permission1', 'permission2']\n)\n\n# With Hosted provider\nauth_provider = core.get_authorizer(config={'provider': 'Hosted', 'api_url': '<AUTH_API_URL>'})\nresponse = auth_provider.has_permission(request_params=permission_request)\n# Response will be boolean\n\n# With Simulated provider\nauth_provider = core.get_authorizer(config={'provider': 'Simulated'})\nresponse = auth_provider.has_permission(request_params=permission_request)\n# Response will be boolean\n```\n\n#### How does Simulated authentication work?\nWith simulated authentication, the method `has_permission` simply returns the value given in `should_satisfy_all` property in the permission request.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TaskarCenterAtUW/TDEI-Python-ms-core",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-ms-core",
    "package_url": "https://pypi.org/project/python-ms-core/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-ms-core/",
    "project_urls": {
      "Changelog": "https://github.com/TaskarCenterAtUW/TDEI-Python-ms-core/blob/develop/CHANGELOG.md",
      "Documentation": "https://github.com/TaskarCenterAtUW/TDEI-Python-ms-core/blob/main/README.md",
      "GitHub": "https://github.com/TaskarCenterAtUW/TDEI-Python-ms-core",
      "Homepage": "https://github.com/TaskarCenterAtUW/TDEI-Python-ms-core"
    },
    "release_url": "https://pypi.org/project/python-ms-core/0.0.13/",
    "requires_dist": [
      "azure-common (==1.1.28)",
      "azure-core (==1.26.1)",
      "azure-servicebus (==7.0.0)",
      "azure-storage-blob (==12.14.1)",
      "certifi (==2022.12.7)",
      "cffi (==1.15.1)",
      "charset-normalizer (==2.1.1)",
      "cryptography (==39.0.0)",
      "idna (==3.4)",
      "isodate (==0.6.1)",
      "msrest (==0.7.1)",
      "oauthlib (==3.2.2)",
      "pycparser (==2.21)",
      "python-dotenv (==0.21.0)",
      "requests (==2.28.1)",
      "requests-oauthlib (==1.3.1)",
      "six (==1.16.0)",
      "typing-extensions (==4.4.0)",
      "uamqp (==1.6.3)",
      "urllib3 (==1.26.14)",
      "pika (==1.3.1)"
    ],
    "requires_python": ">=3.9",
    "summary": "Python Boilerplate with cloud interaction",
    "version": "0.0.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17095769,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fdaef6ed50e9295624afa28d48852145f4b87f7cf48e241e3ce7eb1774f24c5",
          "md5": "62ae6ff61ef3acd2bb9f41116e518636",
          "sha256": "da5985b5487769286ce5fdccc08b0a83521f41644744b3818a447ac407a37a13"
        },
        "downloads": -1,
        "filename": "python_ms_core-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62ae6ff61ef3acd2bb9f41116e518636",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 25775,
        "upload_time": "2023-01-11T16:03:13",
        "upload_time_iso_8601": "2023-01-11T16:03:13.724082Z",
        "url": "https://files.pythonhosted.org/packages/2f/da/ef6ed50e9295624afa28d48852145f4b87f7cf48e241e3ce7eb1774f24c5/python_ms_core-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e078cc8dfe82fde91de24374afdd409965c3ab7dfe3e7604c6e7306686fe6504",
          "md5": "429d38ca32e7ebba18f99ef0cce49e2e",
          "sha256": "cd3b4adc4542270689d52c705cacf2d04c456adff5d631044d7689f4cf33db92"
        },
        "downloads": -1,
        "filename": "python_ms_core-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "429d38ca32e7ebba18f99ef0cce49e2e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 26002,
        "upload_time": "2023-02-23T07:23:02",
        "upload_time_iso_8601": "2023-02-23T07:23:02.207014Z",
        "url": "https://files.pythonhosted.org/packages/e0/78/cc8dfe82fde91de24374afdd409965c3ab7dfe3e7604c6e7306686fe6504/python_ms_core-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03df1f5a21090c971e8957869102aaa4e77f82dd088c92bef984120ba9f3676a",
          "md5": "b6d0177c3a33355d959992afda6f4f2f",
          "sha256": "14181568fd04cf0074d173403165c897ef20954299f495b8408cbf1cd4b3f38a"
        },
        "downloads": -1,
        "filename": "python_ms_core-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6d0177c3a33355d959992afda6f4f2f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 28299,
        "upload_time": "2023-02-23T07:29:29",
        "upload_time_iso_8601": "2023-02-23T07:29:29.813469Z",
        "url": "https://files.pythonhosted.org/packages/03/df/1f5a21090c971e8957869102aaa4e77f82dd088c92bef984120ba9f3676a/python_ms_core-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19097f3b9253bb729972a6a9824d02cbfaffe8ae5bb409237d8dcb5f71381121",
          "md5": "85bf078c62ae2d0c0713665a5b4af0b8",
          "sha256": "396800cc760d695609a27ab737644873449c4b273f0a1ece3c259045d2721e89"
        },
        "downloads": -1,
        "filename": "python_ms_core-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85bf078c62ae2d0c0713665a5b4af0b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 28331,
        "upload_time": "2023-02-23T23:25:37",
        "upload_time_iso_8601": "2023-02-23T23:25:37.791817Z",
        "url": "https://files.pythonhosted.org/packages/19/09/7f3b9253bb729972a6a9824d02cbfaffe8ae5bb409237d8dcb5f71381121/python_ms_core-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2f1709e529217f5510abcd4d92cde495adbc713ee10ad0da311f4799d0de982",
          "md5": "604917b3dfd3efc2f87966370a15e1b5",
          "sha256": "2b2078329619dd7c8ae6ae489065b4883d8565c342636f8ea7687e178b14448d"
        },
        "downloads": -1,
        "filename": "python_ms_core-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "604917b3dfd3efc2f87966370a15e1b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 28331,
        "upload_time": "2023-02-28T13:32:21",
        "upload_time_iso_8601": "2023-02-28T13:32:21.052981Z",
        "url": "https://files.pythonhosted.org/packages/a2/f1/709e529217f5510abcd4d92cde495adbc713ee10ad0da311f4799d0de982/python_ms_core-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a332dbb27b34580389ea01fe4f365d8f6ba0ebc31a9104e5dc33785bbfbb5ab7",
          "md5": "e5d4797c53d269c2cd1f46570268b2b6",
          "sha256": "592eb152792018092d9edfeaf5ae57aa9b972a00810aa77e638f640d017fa79c"
        },
        "downloads": -1,
        "filename": "python_ms_core-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5d4797c53d269c2cd1f46570268b2b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 26083,
        "upload_time": "2023-01-16T16:59:03",
        "upload_time_iso_8601": "2023-01-16T16:59:03.291223Z",
        "url": "https://files.pythonhosted.org/packages/a3/32/dbb27b34580389ea01fe4f365d8f6ba0ebc31a9104e5dc33785bbfbb5ab7/python_ms_core-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "387e2797a208b49b13ff3d42619352c51994f4d64e97136c59c9103035d8600f",
          "md5": "e72d4108eff3024f7e255602be67b204",
          "sha256": "5c2ffc34c50b15ef7bf3f037bbf813f004f5cfe9da660a95c45418d7526ad5d6"
        },
        "downloads": -1,
        "filename": "python_ms_core-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e72d4108eff3024f7e255602be67b204",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 26439,
        "upload_time": "2023-01-23T12:25:06",
        "upload_time_iso_8601": "2023-01-23T12:25:06.267048Z",
        "url": "https://files.pythonhosted.org/packages/38/7e/2797a208b49b13ff3d42619352c51994f4d64e97136c59c9103035d8600f/python_ms_core-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75f5b6dd68a31d5b20dc2fe096fef1ed2dbfb6324db87498882d43792b53db44",
          "md5": "3ec4c4f86393ca1d67061e853e687689",
          "sha256": "4fc0bb25fbf4dfdf1f832f2b8656713e05457902ce6d5f28b056d202aebb709a"
        },
        "downloads": -1,
        "filename": "python_ms_core-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ec4c4f86393ca1d67061e853e687689",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 26427,
        "upload_time": "2023-01-23T13:30:30",
        "upload_time_iso_8601": "2023-01-23T13:30:30.835129Z",
        "url": "https://files.pythonhosted.org/packages/75/f5/b6dd68a31d5b20dc2fe096fef1ed2dbfb6324db87498882d43792b53db44/python_ms_core-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfab6dc41ccb5805e26b19bffde9a5722dd57c2f7790436be88156e6f7618f42",
          "md5": "fbe2b8342be52b8d9e12f44b59cda573",
          "sha256": "5fbb6418986576d1bae77c27703d3c6bc40f1a5a35d44e230560c6781435d664"
        },
        "downloads": -1,
        "filename": "python_ms_core-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbe2b8342be52b8d9e12f44b59cda573",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 26645,
        "upload_time": "2023-01-23T19:18:37",
        "upload_time_iso_8601": "2023-01-23T19:18:37.994635Z",
        "url": "https://files.pythonhosted.org/packages/cf/ab/6dc41ccb5805e26b19bffde9a5722dd57c2f7790436be88156e6f7618f42/python_ms_core-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd6e05e887f040cedfa33d6e16eef0c6cd8e997f7cad62d84a6db9ac4f6434e8",
          "md5": "bcc7cbcaa6587945781a29d1a9c16550",
          "sha256": "32e9f6724c7975be22dc7919196587759a8ca08e0059c6bc6067911627357f32"
        },
        "downloads": -1,
        "filename": "python_ms_core-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bcc7cbcaa6587945781a29d1a9c16550",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 26629,
        "upload_time": "2023-01-25T11:05:18",
        "upload_time_iso_8601": "2023-01-25T11:05:18.328080Z",
        "url": "https://files.pythonhosted.org/packages/bd/6e/05e887f040cedfa33d6e16eef0c6cd8e997f7cad62d84a6db9ac4f6434e8/python_ms_core-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6405c500ae60268ac3f411450a72ab659e230fa93fdee76a97e7555b203a47a0",
          "md5": "411a6d3d59a1bcac253fb9ea42e3308d",
          "sha256": "6902a96ed1b1a8e40d5ed49104160ea96e98f28a343b7c14019f2b32de3a385e"
        },
        "downloads": -1,
        "filename": "python_ms_core-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "411a6d3d59a1bcac253fb9ea42e3308d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 14164,
        "upload_time": "2023-02-13T12:19:52",
        "upload_time_iso_8601": "2023-02-13T12:19:52.479783Z",
        "url": "https://files.pythonhosted.org/packages/64/05/c500ae60268ac3f411450a72ab659e230fa93fdee76a97e7555b203a47a0/python_ms_core-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bcbb66113396fd3898574b01935799477bc74fd098ed667fcdd87c3b3fa8d82",
          "md5": "3108b7adef0351577705e9ac22c42325",
          "sha256": "fbe357d5f9cbdb347a82553b65f7aedec24a0a1f1741d507daecac4dafbe08c4"
        },
        "downloads": -1,
        "filename": "python_ms_core-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3108b7adef0351577705e9ac22c42325",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 15134,
        "upload_time": "2023-02-23T06:17:35",
        "upload_time_iso_8601": "2023-02-23T06:17:35.657096Z",
        "url": "https://files.pythonhosted.org/packages/8b/cb/b66113396fd3898574b01935799477bc74fd098ed667fcdd87c3b3fa8d82/python_ms_core-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3668f44aaef418d79d525b7c72f7705b33327f55471582b3f3d12e768365b053",
          "md5": "782a56e8a09418769c2dcb8195dcab3e",
          "sha256": "eddfc22139aaf056ab6fcdd4b62e80424bc7cf88ef3200703fe2f440bf5a2c14"
        },
        "downloads": -1,
        "filename": "python_ms_core-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "782a56e8a09418769c2dcb8195dcab3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 24843,
        "upload_time": "2023-02-23T07:13:38",
        "upload_time_iso_8601": "2023-02-23T07:13:38.597466Z",
        "url": "https://files.pythonhosted.org/packages/36/68/f44aaef418d79d525b7c72f7705b33327f55471582b3f3d12e768365b053/python_ms_core-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2f1709e529217f5510abcd4d92cde495adbc713ee10ad0da311f4799d0de982",
        "md5": "604917b3dfd3efc2f87966370a15e1b5",
        "sha256": "2b2078329619dd7c8ae6ae489065b4883d8565c342636f8ea7687e178b14448d"
      },
      "downloads": -1,
      "filename": "python_ms_core-0.0.13-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "604917b3dfd3efc2f87966370a15e1b5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 28331,
      "upload_time": "2023-02-28T13:32:21",
      "upload_time_iso_8601": "2023-02-28T13:32:21.052981Z",
      "url": "https://files.pythonhosted.org/packages/a2/f1/709e529217f5510abcd4d92cde495adbc713ee10ad0da311f4799d0de982/python_ms_core-0.0.13-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}