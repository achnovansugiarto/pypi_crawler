{
  "info": {
    "author": "Mustafa M. A. U. AbuGhazy",
    "author_email": "moustafa.abu.ghazy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Cython",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Monitoring",
      "Topic :: Terminals :: Serial"
    ],
    "description": "Package **XcomLAN**\n===================\n\nPython library to access Studer-Innotec Xcom-LAN/Xcom-232i node through (SCOM) Xtender Serial Protocol over a TCP/IP\nNetwork connection.\n\nPrerequisites\n-------------\n\nPlease read the complete documentation available on : Studer Innotec SA -> Support -> Download Center ->\nSoftware and Updates -> Communication protocols Xcom-232i\n\nInstallation\n------------\nThe Package can be installed from the Python package manager. Simply execute in a console the following command:\n\n```bash\n  $ pip install XcomLAN\n```\n\nor , if you will use the attached ThingsBoardClient\n\n```bash\n  $ pip install XcomLAN[ThingsBoard]\n```\n\nGetting Started\n----------------\n\n- copy the example code [example.py](https://github.com/Mustafa-Abu-Ghazy/XcomLAN/blob/master/example.py)\n- setup the Xcom-232i device in Xcom-LAN mode.\n- configure the MOXA-NPort Operation Mode\n\n```\nTest Succeed:\n    # MOXA-NPort Operation Mode: RFC2217\n    \"interface\": \"rfc2217://<host>:<port>\",\nTest Failed:\n    # MOXA-NPort Operation Mode: TCP Server\n    \"interface\": \"socket://<host>:<port>\",\nTest Succeed:\n    # MOXA-NPort Operation Mode: TCP Server,\n    # And Use Any COM Mapping Tool like \"TCP-Com.exe\" as TCP-Client connects on <host>:<port>\n    #       -->{BaudRate: 115200, Parity: None, StopBits: 1, DataBits: 8}\n    \"interface\": \"<SERIAL_VIRTUAL_PORT>\",\nTest Succeed:\n    # MOXA-NPort Operation Mode: RealCOM,\n    # And Use MOXA drivers/COM Mapping Tool\n    #       -->{BaudRate: 115200, Parity: None, StopBits: 1, DataBits: 8}\n    \"interface\": \"<SERIAL_VIRTUAL_PORT>\",\n```\n\n- define your own NODES_LIST\n\n```python\nNODES_LIST = {\n    \"N01\": {\"interface\": \"<SERIAL_VIRTUAL_PORT>\",\n            # ...\n            },\n    \"N02\": {\"interface\": \"rfc2217://<host>:<port>\",\n            # ...\n            },\n    \"N03\": {\"interface\": \"socket://<host>:<port>\",\n            # ...\n            },\n    # ...\n}\n```\n\n- create .env file like\n\n```\nTHINGSBOARD_SERVER=<your tb host>>\nGATEWAY_Access_TOKEN=<your tb gatway-device access-token>\n\nREADINGS_DELAY_IN_SECONDS=60\n```\n- run the script, and start to design your own TB dashboards based on the received telemetry\n- the examble code by default have some infos of interst per device type, and address ranges for devices to be discovered.\nit will auto discover all possible XT, VT, VS, BSP device in the node.\n\nWarnings\n--------\n- make sure scom package has been installed successfully, you might be required to move the two files\n  from the site-packages directory to site-packages\\sino\\scom directory\n  - baseframe.*.pyd|so\n  - property.*.pyd|so\n\nAuthors\n-------\n\n- **Mustafa M. A. U. AbuGhazy**\n\nLicense\n-------\n\nThis project is licensed under the MIT License - see the `LICENSE` file for details\n\n\nCredits\n-------\n\nThanks for [HES-SO Valais-Wallis](https://github.com/hesso-valais)\nfor their great package [scom](https://pypi.org/project/scom/). As I've developed this package by inspiration of **\nscom** and depend on it.\n\nExternal References:\n--------------------\n\n- [Studer-Innotec](https://www.studer-innotec.com)\n- [Studer-Innotec -> xcom485i Package](https://github.com/studer-innotec/xcom485i.git)\n- [Studer-Innotec -> xcomcan Package](https://github.com/studer-innotec/xcomcan.git)\n- [HES-SO Valais-Wallis -> scom Package](https://github.com/hesso-valais/scom.git)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/XcomLAN/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "moustafa.abu.ghazy@gmail.com",
    "name": "XcomLAN",
    "package_url": "https://pypi.org/project/XcomLAN/",
    "platform": "any",
    "project_url": "https://pypi.org/project/XcomLAN/",
    "project_urls": {
      "Documentation": "https://mustafa-abu-ghazy.github.io/XcomLAN/",
      "Homepage": "https://pypi.org/project/XcomLAN/",
      "Issues tracker": "https://github.com/mustafa-abu-ghazy/XcomLAN/issues",
      "Source Code": "https://github.com/mustafa-abu-ghazy/XcomLAN"
    },
    "release_url": "https://pypi.org/project/XcomLAN/0.0.1/",
    "requires_dist": [
      "scom (==0.7.3)",
      "Cython",
      "pyserial (>=3.5)",
      "python-dotenv",
      "tb-mqtt-client ; extra == 'thingsboard'"
    ],
    "requires_python": ">=3.6",
    "summary": "Python library to access Studer-Innotec Xcom-LAN/Xcom-232i node through (SCOM) Xtender Serial Protocol over a TCP/IP Network connection.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12733366,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c661cc956d50d31940bf9491b6554ab3396ee59f88332d14501229d3398b977",
          "md5": "a665069a9018f257dcc98fd6a896b880",
          "sha256": "90e90439c98f40207cec15c5f24ec3865a2dec81254e41687adddde0b93be6fa"
        },
        "downloads": -1,
        "filename": "XcomLAN-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a665069a9018f257dcc98fd6a896b880",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 67309,
        "upload_time": "2022-01-29T22:18:03",
        "upload_time_iso_8601": "2022-01-29T22:18:03.861474Z",
        "url": "https://files.pythonhosted.org/packages/8c/66/1cc956d50d31940bf9491b6554ab3396ee59f88332d14501229d3398b977/XcomLAN-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47d49ced5cad7fc1aede2d518c704570334e1a799a8dacfe420d7e62e2fa1554",
          "md5": "edab3f90739560e3a8a18c254881871f",
          "sha256": "d76063f9edd4362b331439b514661d2f2e2096b70ce813fec411475be3a992c1"
        },
        "downloads": -1,
        "filename": "XcomLAN-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "edab3f90739560e3a8a18c254881871f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 58522,
        "upload_time": "2022-01-29T22:18:06",
        "upload_time_iso_8601": "2022-01-29T22:18:06.213869Z",
        "url": "https://files.pythonhosted.org/packages/47/d4/9ced5cad7fc1aede2d518c704570334e1a799a8dacfe420d7e62e2fa1554/XcomLAN-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c661cc956d50d31940bf9491b6554ab3396ee59f88332d14501229d3398b977",
        "md5": "a665069a9018f257dcc98fd6a896b880",
        "sha256": "90e90439c98f40207cec15c5f24ec3865a2dec81254e41687adddde0b93be6fa"
      },
      "downloads": -1,
      "filename": "XcomLAN-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a665069a9018f257dcc98fd6a896b880",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 67309,
      "upload_time": "2022-01-29T22:18:03",
      "upload_time_iso_8601": "2022-01-29T22:18:03.861474Z",
      "url": "https://files.pythonhosted.org/packages/8c/66/1cc956d50d31940bf9491b6554ab3396ee59f88332d14501229d3398b977/XcomLAN-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47d49ced5cad7fc1aede2d518c704570334e1a799a8dacfe420d7e62e2fa1554",
        "md5": "edab3f90739560e3a8a18c254881871f",
        "sha256": "d76063f9edd4362b331439b514661d2f2e2096b70ce813fec411475be3a992c1"
      },
      "downloads": -1,
      "filename": "XcomLAN-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "edab3f90739560e3a8a18c254881871f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 58522,
      "upload_time": "2022-01-29T22:18:06",
      "upload_time_iso_8601": "2022-01-29T22:18:06.213869Z",
      "url": "https://files.pythonhosted.org/packages/47/d4/9ced5cad7fc1aede2d518c704570334e1a799a8dacfe420d7e62e2fa1554/XcomLAN-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}