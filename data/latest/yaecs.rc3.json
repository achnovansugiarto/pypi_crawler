{
  "info": {
    "author": "Reactive Reality AG",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# YAECS (Yet Another Experiment Config System)\n\n[![Offial repo](https://img.shields.io/badge/official%20repo-YAECS-%23ff9626?logo=gitlab)](https://gitlab.com/reactivereality/public/yaecs)\n![GitHub last commit (branch)](https://img.shields.io/github/last-commit/valentingol/yaecs/main)\n[![License](https://img.shields.io/badge/license-LGPLV3%2B-%23c4c2c2)](https://www.gnu.org/licenses/)\n\n---\n\nThis package is a Config System which allows easy manipulation of config files\nfor safe, clear and repeatable experiments.\n\n**DISCLAIMER:** This repository is the public version of a repository that is\nthe property of [Reactive Reality](https://www.reactivereality.com/). This\nrepository IS NOT OFFICIAL and can not to be maintained in the future. Some\nminor changed* are applied from the\n[official repository (GitLab)](https://gitlab.com/reactivereality/public/yaecs)\n(under lesser GNU license).\n\n*documentation and other PyPI related changes\n\n[LINK TO DOCUMENTATION](https://gitlab.com/reactivereality/public/yaecs/-/wikis/home)\n\n## Installation\n\nThe package can be installed from our registry using pip: `pip install yaecs`\n\n## Getting started\n\nThis package is adapted to a *project* where you need to run a number of\nexperiments. In this setup, it can be useful to gather all the parameters in\nthe project to a common location, some \"config files\", so you can access and\nmodify them easily. This package is based on YAML, therefore your config files\nshould be YAML files. One such YAML file could be :\n\n```yaml\ngpu: true\ndata_path: \"./data\"\nlearning_rate: 0.01\n```\n\nThose will be the default values for those three parameters, so we will keep\nthem in the file `my_project/configs/default.yaml`. Then, we just need to\nsubclass the Configuration class in this package so your project-specific\nsubclass knows where to find the default values for your project. A minimal\nproject-specific subclass looks like:\n\n```python\nfrom yaecs import Configuration\n\nclass ProjectSpecific(Configuration):\n    @staticmethod\n    def get_default_config_path():\n        return \"./configs/default.yaml\"\n\n    def parameters_pre_processing(self):\n        return {}\n```\n\nThat's all there is to it! Now if we use\n`config = ProjectSpecific.load_config()`, we can then call `config.data_path`\nor `config.learning_rate` to get their values as defined in the default config.\nWe don't need to specify where to get the default config because a project\nshould only ever have one default config, which centralizes all the parameters\nin that project. Since the location of the default config is a project\nconstant, it is defined in your project-specific subclass and there is no\nneed to clutter your main code with it. Now, for example, your main.py could\nlook like:\n\n```python\nfrom project_config import ProjectSpecific\n\nif __name__ == \"__main__\":\n    config = ProjectSpecific.load_config()\n    print(config.details())\n```\n\nThen, calling `python main.py --learning_rate=0.001` would parse\nthe command line and find the pre-existing parameter learning_rate, then change\nits value to 0.001.\n\n## Contribution\n\nWe welcome contributions to this repository via the\n[GitLab repository](https://gitlab.com/reactivereality/public/yaecs).\n\n## License\n\nThis repository is licensed under the\n[GNU Lesser General Public License](https://www.gnu.org/licenses/lgpl-3.0.en.html).\nIt is free to use and distribute but modifications are not allowed.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/reactivereality/public/yaecs",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yaecs",
    "package_url": "https://pypi.org/project/yaecs/",
    "platform": null,
    "project_url": "https://pypi.org/project/yaecs/",
    "project_urls": {
      "Homepage": "https://gitlab.com/reactivereality/public/yaecs"
    },
    "release_url": "https://pypi.org/project/yaecs/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Reactive Reality Machine Learning Config System",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15093170,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67dd74c84da9b70a51180981ea09c9d9796ef522ba309b7c14d4a21ea0191075",
          "md5": "215c55b60c2cd86369f89a30956b3732",
          "sha256": "e69ed10a6bee4d30bce917c6fcfb91f4531ce05126c2afc528afcb76a8e457d0"
        },
        "downloads": -1,
        "filename": "yaecs-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "215c55b60c2cd86369f89a30956b3732",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 57968,
        "upload_time": "2022-09-03T19:58:40",
        "upload_time_iso_8601": "2022-09-03T19:58:40.882282Z",
        "url": "https://files.pythonhosted.org/packages/67/dd/74c84da9b70a51180981ea09c9d9796ef522ba309b7c14d4a21ea0191075/yaecs-1.0.0.tar.gz",
        "yanked": true,
        "yanked_reason": "Only working for python 3.9+"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c122d7e535f7ac0ca210de4e3e2eec098029177a72bbcdebff27f459dc7346c",
          "md5": "1371e00725db31c79057838668c068db",
          "sha256": "6bdd54b8028a1aed958f8d84080be2cf624f08b779f4d12fbfdbbaa976b72ca3"
        },
        "downloads": -1,
        "filename": "yaecs-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1371e00725db31c79057838668c068db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 57954,
        "upload_time": "2022-09-03T20:18:15",
        "upload_time_iso_8601": "2022-09-03T20:18:15.238812Z",
        "url": "https://files.pythonhosted.org/packages/6c/12/2d7e535f7ac0ca210de4e3e2eec098029177a72bbcdebff27f459dc7346c/yaecs-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "552ab2b6f20684bbe35b13594e1a03e3db08223248482034cf1e0b7ae6e9b440",
          "md5": "3b90416c79c25876c774bb622e773cb1",
          "sha256": "5d22041e7a3a3135d284c2e58320cfbefc62bc824d7b7293c47845df9fd18b41"
        },
        "downloads": -1,
        "filename": "yaecs-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3b90416c79c25876c774bb622e773cb1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 57963,
        "upload_time": "2022-09-14T15:36:58",
        "upload_time_iso_8601": "2022-09-14T15:36:58.137258Z",
        "url": "https://files.pythonhosted.org/packages/55/2a/b2b6f20684bbe35b13594e1a03e3db08223248482034cf1e0b7ae6e9b440/yaecs-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "552ab2b6f20684bbe35b13594e1a03e3db08223248482034cf1e0b7ae6e9b440",
        "md5": "3b90416c79c25876c774bb622e773cb1",
        "sha256": "5d22041e7a3a3135d284c2e58320cfbefc62bc824d7b7293c47845df9fd18b41"
      },
      "downloads": -1,
      "filename": "yaecs-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3b90416c79c25876c774bb622e773cb1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 57963,
      "upload_time": "2022-09-14T15:36:58",
      "upload_time_iso_8601": "2022-09-14T15:36:58.137258Z",
      "url": "https://files.pythonhosted.org/packages/55/2a/b2b6f20684bbe35b13594e1a03e3db08223248482034cf1e0b7ae6e9b440/yaecs-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}