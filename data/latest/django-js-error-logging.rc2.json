{
  "info": {
    "author": "Masahiko Okada",
    "author_email": "moqada@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Plugins",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "#######################\nDjango JS Error Logging\n#######################\n\nThe Django JS Error Logging is logging for Client-Side JavaScript errors.\nYou can log by the following three ways.\n\n* Save to Django model\n* Notify by Email\n* Logging by python logger\n\n\nInstallation\n============\n\n#. Add the ``jserrorlogging`` directory to your Python path.\n\n   Can use pip command::\n\n       $ pip install django-js-error-logging\n\n#. Add ``jserrorlogging`` to your ``INSTALLED_APPS``.::\n\n       INSTALLED_APPS = (\n           # ...\n           'jserrorlogging',\n           # ...\n       )\n\n#. Add the following context processor to your ``TEMPLATE_CONTEXT_PROCESSORS``.::\n\n       TEMPLATE_CONTEXT_PROCESSORS = (\n           # ...\n           'jserrorlogging.context_processors.static',\n           # ...\n       )\n\n#. Add the following configuration to your ``urls.py``.::\n\n       urlpatterns = patterns(\n           # ...\n           url(r'^jserr/$', include('jserrorlogging.urls', namespace='jserrorlogging')),\n           # ...\n       )\n\n#. Add the following templatetag to head tag in your template.::\n\n       <head>\n       # ...\n       {% include \"jserrorlogging/includes/script.html\" %}\n       # ...\n       </head>\n\n   About more information of static files for Django,\n   you can see at https://docs.djangoproject.com/en/dev/howto/static-files/.\n\n#. Add the following static files.\n\n   Copy ``static/jserrorlogging`` directory to ``STATIC_ROOT`` or run the following command::\n\n       $ python manage.py collectstatic\n\n#. Run syncdb.::\n\n       $ python manage.py syncdb\n\n   **Note**: When your project use South, run the following command.::\n\n       $ python manage.py migrate jserrorlogging\n\n   If you don't want to save to django model, don't you run these commands.\n\n\nConfiguration\n=============\n\nDjango JS Error Logging has the following optional settings. \n\nSave to Django model\n--------------------\n\nYou can see results of logging in Admin site.\n\nThis option is default enabled.\nWhen you don't need to this option, ``JSERRORLOGGING_ENABLE_MODEL`` set to False.\n\nNotify by Email\n---------------\n\nYou can send results of logging to Email.\n\nThis option is default enabled.\nWhen you don't need to this option, ``JSERRORLOGGING_ENABLE_MAIL`` set to False.\n\n``JSERRORLOGGING_MAIL_TO``\n   Default: ``settings.ADMINS``\n\n   You can set the custom recipients for notification::\n\n       JSERRORLOGGING_MAIL_TO = (\n           ('someone', 'someone@example.com'),\n       )\n\n``JSERRORLOGGING_MAIL_NOTIFY_INTERVAL``\n   Default: ``3600``\n\n   When the same errors occurred,\n   you can stop notification for the duration of this setting (seconds).\n\nLogging by python logger\n------------------------\n\nYou can use Python's builtin logger.\n\nThis option is default disabled. \nWhen you need to this option, ``JSERRORLOGGING_ENABLE_LOGGER`` set to True.\nAnd ``JSERRORLOGGING_LOGGER_NAME`` set to your custom logger name.\n\nExample::\n\n   LOGGING = {\n       # ...\n       'loggers': {\n           # ...\n           'jserror': {\n               'handlers': ['console', 'mail_admins'],\n               'level': 'INFO',\n               'filters': ['special']\n           },\n           # ...\n       }\n       # ...\n   }\n\n   # ...\n\n   JSERRORLOGGING_ENABLE_MODEL = 'jserror'\n\n   # ...\n\nAbout more information of logging for Django,\nyou can see at https://docs.djangoproject.com/en/dev/topics/logging/.\n\nLogging additional data\n-----------------------\n\nYou can log your custom data.\n\nFor example, Django JS Error Logging has another template for the following additional data.\n\n* ``django.contrib.auth.User.id``\n* ``request.session.session_key``\n\nWhen you want to log user_id and session_key, set the following templatetag::\n\n   <head>\n   # ...\n   {% include \"jserrorlogging/includes/script_with_user.html\" %}\n   # ...\n   </head>\n\nIf you want to log another data, \nCreate a template that extends ``jserrorlogging/includes/script.html`` and \nedit ``meta_data`` block.\n\nExample (path_to_your_template_dir/script_with_more_data.html)::\n\n   {% extends \"jserrorlogging/includes/script.html\" %}\n   {% block meta_data %}\n   djjserr.meta = {\n       username: '{{ user.username }}',\n       always_true: true\n   };\n   {% endblock %}\n\nOthers\n------\n\nother configuration options.\n\n``JSERRORLOGGING_LOG_MODEL``\n   Default: 'jserrorlogging.Log'\n    \n   A name of model to save log.\n\n``JSERRORLOGGING_STATIC_URL``\n   Default: settings.STATIC_URL + 'jserrorlogging/'\n    \n   A URL of script files for Django JS Error Logging.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/moqada/django-js-error-logging/",
    "keywords": "django,javascript,logging,notify",
    "license": "BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-js-error-logging",
    "package_url": "https://pypi.org/project/django-js-error-logging/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-js-error-logging/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/moqada/django-js-error-logging/"
    },
    "release_url": "https://pypi.org/project/django-js-error-logging/0.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Logging Client-Side JavaScript errors for Django",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 789919,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81f9dd67a84aad96de2935d44f52a2364bdec689b39a96f1bf6815e221404d2f",
          "md5": "fe6b514e106286eaf3a8be4ef081aca3",
          "sha256": "1247297427ea62d5c88b72676b3de0d6dc4192003b7b0e5260ab09069ff6fd6a"
        },
        "downloads": -1,
        "filename": "django-js-error-logging-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fe6b514e106286eaf3a8be4ef081aca3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11899,
        "upload_time": "2012-12-11T00:26:10",
        "upload_time_iso_8601": "2012-12-11T00:26:10.389083Z",
        "url": "https://files.pythonhosted.org/packages/81/f9/dd67a84aad96de2935d44f52a2364bdec689b39a96f1bf6815e221404d2f/django-js-error-logging-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "188e4df0063d5185428351bdfb118affa272306c8984a13fa5057aecc2eb87c5",
          "md5": "7c06e1c4419066c39da1ee0e50ff661b",
          "sha256": "4d2ead6d8cb2759485866324d7e787d292d4fd116ffdf81ef6445c9a65afb63e"
        },
        "downloads": -1,
        "filename": "django-js-error-logging-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7c06e1c4419066c39da1ee0e50ff661b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11898,
        "upload_time": "2012-12-11T07:03:41",
        "upload_time_iso_8601": "2012-12-11T07:03:41.414176Z",
        "url": "https://files.pythonhosted.org/packages/18/8e/4df0063d5185428351bdfb118affa272306c8984a13fa5057aecc2eb87c5/django-js-error-logging-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "188e4df0063d5185428351bdfb118affa272306c8984a13fa5057aecc2eb87c5",
        "md5": "7c06e1c4419066c39da1ee0e50ff661b",
        "sha256": "4d2ead6d8cb2759485866324d7e787d292d4fd116ffdf81ef6445c9a65afb63e"
      },
      "downloads": -1,
      "filename": "django-js-error-logging-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7c06e1c4419066c39da1ee0e50ff661b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11898,
      "upload_time": "2012-12-11T07:03:41",
      "upload_time_iso_8601": "2012-12-11T07:03:41.414176Z",
      "url": "https://files.pythonhosted.org/packages/18/8e/4df0063d5185428351bdfb118affa272306c8984a13fa5057aecc2eb87c5/django-js-error-logging-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}