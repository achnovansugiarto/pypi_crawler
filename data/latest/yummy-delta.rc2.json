{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Programming Language :: Rust"
    ],
    "description": "# Yummy-[Delta](https://delta.io/)\n\nThis repository contains Yummy [Delta Lake](https://delta.io/) api written in Rust.\nThe api use [delta-rs](https://github.com/delta-io/delta-rs) implementation.\n\n\n## Instalation\n\n```\npip3 install yummy-delta\n```\n\n## Quick start\n\n``` python\nimport yummy_delta\n# yummy_delta.run({config_path}, {host}, {port}, {log_level})\nyummy_delta.run(\"config.yaml\", \"0.0.0.0\", 8080, \"error\")\n```\n\nIn the configuration file we can define multiple stores using supported backends.\n\nconfig.yaml\n``` yaml\nstores:\n  - name: local\n    path: \"/tmp/delta-test-1/\"\n  - name: az\n    path: \"az://delta-test-1/\"\n```\n\n## Delta backends\n\n### Local file system\n```\n/tmp/delta-test-1\n```\n\n### AWS S3 / S3\n```\ns3://<bucket>/<path>\ns3a://<bucket>/<path>\n```\n\nEnvironment variables:\n  AWS_REGION=\"us-east-1\",\n  AWS_ACCESS_KEY_ID=\"deltalake\",\n  AWS_SECRET_ACCESS_KEY=\"weloverust\",\n  AWS_ENDPOINT_URL=endpoint_url,\n\n### Azure Blob Storage / Azure Datalake Storage Gen2\n```\naz://<container>/<path>\nadl://<container>/<path>\nabfs://<container>/<path>\n```\n\nEnvironment variables:\n  AZURE_STORAGE_ACCOUNT_NAME=\"devstoreaccount1\",\n  AZURE_STORAGE_ACCOUNT_KEY=\"****\",\n  AZURE_STORAGE_USE_EMULATOR=\"false\",\n  AZURE_STORAGE_USE_HTTP=\"true\",\n\n### Google cloud storage\n```\ngs://<bucket>/<path>\n```\n\n## Rest API\n\n### Stores list\n\nRequest:\n```\ncurl -X GET \"http://localhost:8080/api/1.0/delta\" \\\n-H \"Content-Type: application/json\"\n```\n\nResponse:\n```\n{'stores': [{'path': '/tmp/delta-test-1/', 'store': 'local'},\n            {'path': 'az://delta-test-1/', 'store': 'az'}]}\n```\n\n### Tables list\n\nRequest:\n```\ncurl -X GET \"http://localhost:8080/api/1.0/delta/{store_name}\" \\\n-H \"Content-Type: application/json\"\n```\n\nResponse:\n```\n{'path': 'az://delta-test-1/',\n 'store': 'az',\n 'tables': ['test_delta_1', 'test_delta_2', 'test_delta_3', 'test_delta_4']}\n```\n\n### Table details\n\nRequest:\n```\ncurl -X GET \"http://localhost:8080/api/1.0/delta/{store_name}/{table_name}/details\" \\\n-H \"Content-Type: application/json\"\n```\n\nResponse:\n```\n{'path': 'az://delta-test-1/test_delta_4',\n 'schema': {'fields': [{'metadata': {},\n                        'name': 'col1',\n                        'nullable': false,\n                        'type': 'integer'},\n                       {'metadata': {},\n                        'name': 'col2',\n                        'nullable': false,\n                        'type': 'string'}],\n            'type': 'struct'},\n 'store': 'az',\n 'table': 'test_delta_4',\n 'version': 100}\n```\n\n### Create delta table\n\nRequest:\n```\ncurl -X POST \"http://localhost:8080/api/1.0/delta/{store_name}\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\n    \"table\": \"test_delta_4\",\n    \"schema\": [\n        {\n            \"name\": \"col1\",\n            \"type\": \"integer\",\n            \"nullable\": false\n        },\n        {\n            \"name\": \"col2\",\n            \"type\": \"string\",\n            \"nullable\": false\n        }\n    ],\n    \"partition_columns\": [\"col2\"],\n    \"comment\": \"Hello from delta\"\n}'\n```\n\nResponse:\n```\n{ \"table\": \"test_delta_4\" }\n```\n\n### Append data\n\nRequest:\n```\ncurl -X POST \"http://localhost:8080/api/1.0/delta/{store_name}/{table_name}\" \\\n-H \"Content-Type: application/json\" \\\n-d '\n{\"record_batch_dict\": {\"col1\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n                       \"col2\": [\"A\", \"B\", \"A\", \"B\", \"A\", \"A\", \"A\", \"B\", \"B\", \"A\", \"A\"]}}'\n```\n\nResponse:\n```\n{'table': 'test_delta_4', 'version': 101}\n```\n\nOR: \n\nRequest:\n```\ncurl -X POST \"http://localhost:8080/api/1.0/delta/{store_name}/{table_name}\" \\\n-H \"Content-Type: application/json\" \\\n-d '\n{\"record_batch_list\": [\n    {\"col1\": 1, \"col2\": \"A\"}, \n    {\"col1\": 2, \"col2\": \"B\"}, \n    {\"col1\": 3, \"col2\": \"A\"}, \n    {\"col1\": 4, \"col2\": \"B\"}, \n    {\"col1\": 5, \"col2\": \"A\"}, \n    {\"col1\": 6, \"col2\": \"A\"}, \n    {\"col1\": 7, \"col2\": \"A\"}, \n    {\"col1\": 8, \"col2\": \"B\"}, \n    {\"col1\": 9, \"col2\": \"B\"}, \n    {\"col1\": 10, \"col2\": \"A\"}, \n    {\"col1\": 11, \"col2\": \"A\"}\n    ]\n}\n```\n\nResponse:\n```\n{'table': 'test_delta_4', 'version': 101}\n```\n\n### Overwrite data\n\nRequest:\n```\ncurl -X PUT \"http://localhost:8080/api/1.0/delta/{store_name}/{table_name}\" \\\n-H \"Content-Type: application/json\" \\\n-d '\n{\"record_batch_dict\": {\"col1\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n                       \"col2\": [\"A\", \"B\", \"A\", \"B\", \"A\", \"A\", \"A\", \"B\", \"B\", \"A\", \"A\"]}}'\n```\n\nResponse:\n```\n{'table': 'test_delta_4', 'version': 101}\n```\n\nOR: \n\nRequest:\n```\ncurl -X PUT \"http://localhost:8080/api/1.0/delta/{store_name}/{table_name}\" \\\n-H \"Content-Type: application/json\" \\\n-d '\n{\"record_batch_list\": [\n    {\"col1\": 1, \"col2\": \"A\"}, \n    {\"col1\": 2, \"col2\": \"B\"}, \n    {\"col1\": 3, \"col2\": \"A\"}, \n    {\"col1\": 4, \"col2\": \"B\"}, \n    {\"col1\": 5, \"col2\": \"A\"}, \n    {\"col1\": 6, \"col2\": \"A\"}, \n    {\"col1\": 7, \"col2\": \"A\"}, \n    {\"col1\": 8, \"col2\": \"B\"}, \n    {\"col1\": 9, \"col2\": \"B\"}, \n    {\"col1\": 10, \"col2\": \"A\"}, \n    {\"col1\": 11, \"col2\": \"A\"}\n    ]\n}\n```\n\nResponse:\n```\n{'table': 'test_delta_4', 'version': 101}\n```\n\n### Optimize\n\nRequest:\n```\ncurl -X POST \"http://localhost:8080/api/1.0/delta/{store_name}/{table_name}/optimize\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\n    \"target_size\": 2000000,\n    \"filters\": [\n        {\n            \"column\": \"col2\",\n            \"operator\": \"=\",\n            \"value\": \"B\"\n        }\n    ]\n}'\n```\n\nResponse:\n```\n{'metrics': {'filesAdded': {'avg': 524.5,\n                            'max': 541,\n                            'min': 508,\n                            'totalFiles': 2,\n                            'totalSize': 1049},\n             'filesRemoved': {'avg': 506.75,\n                              'max': 538,\n                              'min': 499,\n                              'totalFiles': 36,\n                              'totalSize': 18243},\n             'numBatches': 1,\n             'numFilesAdded': 2,\n             'numFilesRemoved': 36,\n             'partitionsOptimized': 2,\n             'preserveInsertionOrder': true,\n             'totalConsideredFiles': 36,\n             'totalFilesSkipped': 0}}\n```\n\n### Vacuum\n\nRequest:\n```\ncurl -X POST \"http://localhost:8080/api/1.0/delta/{store_name}/{table_name}/vacuum\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\n    \"retention_period_seconds\": 0,\n    \"enforce_retention_duration\": false,\n    \"dry_run\": false\n}'\n```\n\nResponse:\n```\n{'dry_run': False,\n 'files_deleted': ['col2=A/part-00000-09fef82b-9208-41be-8769-30c442b36346-c000.snappy.parquet',\n                   'col2=A/part-00000-16779a2f-d2f4-450c-b815-3b8fca850402-c000.snappy.parquet',\n                   'col2=A/part-00000-26e01b49-a432-4d06-816d-9a2048c0194e-c000.snappy.parquet',\n                   'col2=A/part-00000-3ff1f905-87ae-4b73-a3ae-3cd1056171a0-c000.snappy.parquet',\n                   'col2=A/part-00000-50dbcfea-22d6-4ef3-bacf-f1371b9186ad-c000.snappy.parquet',\n                   'col2=A/part-00000-511d3ceb-0959-4024-9bbe-d049bb4fb4c6-c000.snappy.parquet',\n                   'col2=A/part-00000-56e5484f-1722-45eb-84bb-1475b67e9f63-c000.snappy.parquet',\n                   'col2=B/part-00000-b15a1cd7-9a15-4ba6-8ba8-e3ca63737f81-c000.snappy.parquet',\n                   'col2=B/part-00000-d4fadc68-46b5-4f1f-a378-e9f3dba842f0-c000.snappy.parquet',\n                   'col2=B/part-00000-d6e823d1-433e-4798-a641-1e2783c8c1eb-c000.snappy.parquet',\n                   'col2=B/part-00000-ded9a5b7-4754-47b7-9e2c-132263cea52e-c000.snappy.parquet',\n                   'col2=B/part-00000-fb89f02c-8ea3-47d9-8794-182d8602687c-c000.snappy.parquet']}\n```\n\n\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yummy-delta",
    "package_url": "https://pypi.org/project/yummy-delta/",
    "platform": null,
    "project_url": "https://pypi.org/project/yummy-delta/",
    "project_urls": {
      "repository": "https://github.com/yummyml/yummy"
    },
    "release_url": "https://pypi.org/project/yummy-delta/0.0.8/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Yummy mlflow rust extensions",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16626354,
  "releases": {
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a871b851d03bb93b797c3bf3294e2456f2d956dab1ac8b53dbf9546fa4bdc6af",
          "md5": "26b1b43bafede477e837029ac828ce3e",
          "sha256": "8d9d893db4c6c1675a5b444dbbde96d769ad5dbe8eade561da7f529b5829b4ad"
        },
        "downloads": -1,
        "filename": "yummy_delta-0.0.7-cp39-cp39-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "26b1b43bafede477e837029ac828ce3e",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 19197440,
        "upload_time": "2023-01-21T01:30:07",
        "upload_time_iso_8601": "2023-01-21T01:30:07.276842Z",
        "url": "https://files.pythonhosted.org/packages/a8/71/b851d03bb93b797c3bf3294e2456f2d956dab1ac8b53dbf9546fa4bdc6af/yummy_delta-0.0.7-cp39-cp39-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a8b286acd4c050c866c83750a9039cea9ff2efde18105b20e55e206cbf3c3d7",
          "md5": "83c0d93a9ef776a397dbfda6a2ae3a72",
          "sha256": "0a31f1042194e6d5862e47864c993879bd16b8d6bc2b81e1765c5516dd243a32"
        },
        "downloads": -1,
        "filename": "yummy_delta-0.0.8-cp39-cp39-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "83c0d93a9ef776a397dbfda6a2ae3a72",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 19231623,
        "upload_time": "2023-01-31T00:17:13",
        "upload_time_iso_8601": "2023-01-31T00:17:13.429810Z",
        "url": "https://files.pythonhosted.org/packages/5a/8b/286acd4c050c866c83750a9039cea9ff2efde18105b20e55e206cbf3c3d7/yummy_delta-0.0.8-cp39-cp39-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a8b286acd4c050c866c83750a9039cea9ff2efde18105b20e55e206cbf3c3d7",
        "md5": "83c0d93a9ef776a397dbfda6a2ae3a72",
        "sha256": "0a31f1042194e6d5862e47864c993879bd16b8d6bc2b81e1765c5516dd243a32"
      },
      "downloads": -1,
      "filename": "yummy_delta-0.0.8-cp39-cp39-manylinux_2_31_x86_64.whl",
      "has_sig": false,
      "md5_digest": "83c0d93a9ef776a397dbfda6a2ae3a72",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.7",
      "size": 19231623,
      "upload_time": "2023-01-31T00:17:13",
      "upload_time_iso_8601": "2023-01-31T00:17:13.429810Z",
      "url": "https://files.pythonhosted.org/packages/5a/8b/286acd4c050c866c83750a9039cea9ff2efde18105b20e55e206cbf3c3d7/yummy_delta-0.0.8-cp39-cp39-manylinux_2_31_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}