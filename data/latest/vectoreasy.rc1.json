{
  "info": {
    "author": "Marcos Paulo Alves de Sousa",
    "author_email": "desousa.mpa@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Vector Easy\n\n**vectoreasy** é um pacote simples e fácil para plotar vetores no espaço bidimensional e tridimensional.\n\n## Dependências\n**Python 3.6** ou posterior\n\nPacote **numpy**\nPacote **matplotlib.pyplot**\n\n\n## Começando o uso\nVocê vai precisar instalar o pacote **vectoreasy**, para isso basta executar:\n```\npip install vectoreasy\n```\n\n## Funções\n\n* `plot2d([<lista de componentes de vetores>],[<lista de cores para cada vetor],[<limites da plotage 2D>])` - Plota vetores a partir de componentes no espaço bidimensional\n```\nEx: \npip install vectorplot\nimport numpy as np\nfrom vectorplot import vp\n\nu_laranja='#FF9A13'\nv_azul='#1190FF'\nr_vermelho='#FF0000'\n\nu=[1,2]\nv=[2,1]\nu=np.array(u)\nv=np.array(v)\nr=u+v\n\nvp.plot2d([u,v,r], [u_laranja,v_azul,r_vermelho], [-3,3,-3,3])\n```\n\n* `plot2d([<Lista de tuplas de coordenadas>],[<lista de cores para cada vetor],[<limites da plotage 2D>])` - Plota vetores a partir de tuplas de coordenadas de pontos no espaço bidimensional\n```\nEx: \npip install vectorplot\nfrom vectorplot import vp\n\n#As tuplas devem conter coordenadas iniciais (xi,yi) e finais (xf,yf) por onde passa o vetor \nu=(1,1,4,4)\nv=(-1,2,5,6)\nu_laranja='#FF9A13'\nv_azul='#1190FF'\nvp.plot2d([u,v], [u_laranja,v_azul], [-6,6,-6,6])\n```\n\n\n* `plot3d([<lista de componentes de vetores>],[<lista de cores para cada vetor],[<limites da plotage 3D>])` - Plota vetores a partir de componentes no espaço tridimensional\n```\nEx: \npip install vectorplot\nimport numpy as np\nfrom vectorplot import vp\n\nu_laranja='#FF9A13'\nv_azul='#1190FF'\nr_vermelho='#FF0000'\n\nu=[-1,1,2]\nv=[2,3,2]\nu=np.array(u)\nv=np.array(v)\nr=u+v\n\nvp.plot3d([u,v,r],[u_laranja,v_azul,r_vermelho],[-4,4,-4,4,-4,4])\n```\n\n* `plot3d([<Lista de tuplas de coordenadas>],[<lista de cores para cada vetor],[<limites da plotage 3D>])` - Plota vetores a partir de tuplas de coordenadas de pontos no espaço tridimensional\n```\nEx: \npip install vectorplot\nimport numpy as np\nfrom vectorplot import vp\n\nu_laranja='#FF9A13'\nv_azul='#1190FF'\n\nu=(-1,1,2,2)\nv=(2,3,4,5]\n\nvp.plot3d([u,v],[u_laranja,v_azul],[-5,5,-5,5,-5,5])\n```\n\n* `equivalent2d([<Lista de componentes de vetores>])` - Verifica se uma lista de vetores 2d gerada a partir de componentes são equivalentes\n```\nEx: \npip install vectorplot\nfrom vectorplot import vp\n\nu=[2,2]\nv=[2,2]\nprint(vp.isequivalent([u,v]))\n\n```\n\n* `equivalent2d([<Lista de tuplas de coordenadas>])` - Verifica se uma lista de vetores 2d gerada a partir de tuplas de coordenadas de pontos são equivalentes\n```\nEx: \npip install vectorplot\nfrom vectorplot import vp\n\nu=(1,1,4,4)\nv=(-1,2,5,6)\nprint(vp.isequivalent([u,v]))\n\n```\n* `equivalent3d([<Lista de componentes de vetores>])` - Verifica se uma lista de vetores 3d gerada a partir de componentes são equivalentes\n```\nEx: \npip install vectorplot\nfrom vectorplot import vp\n\nu=[2,2,2]\nv=[2,2,2]\nprint(vp.isequivalent([u,v]))\n\n```\n\n* `equivalent3d([<Lista de tuplas de coordenadas>])` - Verifica se uma lista de vetores 3d gerada a partir de tuplas de coordenadas de pontos são equivalentes\n```\nEx: \npip install vectorplot\nfrom vectorplot import vp\n\nu=(1,1,1,4,4)\nv=(0,0,0,3,3,3)\nprint(vp.isequivalent([u,v]))\n\n```\n\n* `resultant_module(<módulo do primeiro vetor>,<módulo do segundo vetor>,<ângulo formando entre vetores)` - Calcula o módulo da resultante gerado a partir de um ângulo entre dois vetores\n```\nEx: \npip install vectorplot\nfrom vectorplot import vp\n\nprint(vp.resultant_module_angle(2,2,60))\n\n```\n\n\n* `vector_module(<vetor>)` - Calcula o módulo do vetor a partir dos seus componentes\n```\nEx: \npip install vectorplot\nfrom vectorplot import vp\nv=[2,2,1]\nprint(vp.vector_module(v))\nv=[1,1]\nprint(vp.vector_module(v))\n```\n\n\n* `angle_vectors(vector 1, vector 2)` - Calcula o angulo entre dois vetores\n```\nEx: \npip install vectorplot\nfrom vectorplot import vp\nv=[1,0]\nu=[0,1]\nprint(vp.angle_vectors(v,u))\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marcos-de-sousa/vectoreasy",
    "keywords": "Pacote",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vectoreasy",
    "package_url": "https://pypi.org/project/vectoreasy/",
    "platform": null,
    "project_url": "https://pypi.org/project/vectoreasy/",
    "project_urls": {
      "Homepage": "https://github.com/marcos-de-sousa/vectoreasy"
    },
    "release_url": "https://pypi.org/project/vectoreasy/0.0.1/",
    "requires_dist": [
      "numpy",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "Pacote python para plotagem de vetores em planos bidimensionais e espaços tridimensionais",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17231750,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17e0919929e67296e6de8a6c9e0f6ba6740233a4980f7cdd6d43a473af34309d",
          "md5": "63bf86be3d01891cddb75d2bd42a1181",
          "sha256": "2f7561e5236903288731dc94ac6345c8463bd4024c9959287717a22489f4b5e0"
        },
        "downloads": -1,
        "filename": "vectoreasy-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63bf86be3d01891cddb75d2bd42a1181",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3097,
        "upload_time": "2023-03-10T01:38:39",
        "upload_time_iso_8601": "2023-03-10T01:38:39.243799Z",
        "url": "https://files.pythonhosted.org/packages/17/e0/919929e67296e6de8a6c9e0f6ba6740233a4980f7cdd6d43a473af34309d/vectoreasy-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "215f9f32ec84c77797bdd3fca3cb6ce9903c50ebbeab899c29628f54d66befec",
          "md5": "cc94bebb879eb8b41f6f054379f40e99",
          "sha256": "8150a1e6c3c6c76d6f2ffe3661068f7c670bb1b9610accce02e9d2ee19473d8d"
        },
        "downloads": -1,
        "filename": "vectoreasy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cc94bebb879eb8b41f6f054379f40e99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2683,
        "upload_time": "2023-03-10T01:38:41",
        "upload_time_iso_8601": "2023-03-10T01:38:41.554612Z",
        "url": "https://files.pythonhosted.org/packages/21/5f/9f32ec84c77797bdd3fca3cb6ce9903c50ebbeab899c29628f54d66befec/vectoreasy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17e0919929e67296e6de8a6c9e0f6ba6740233a4980f7cdd6d43a473af34309d",
        "md5": "63bf86be3d01891cddb75d2bd42a1181",
        "sha256": "2f7561e5236903288731dc94ac6345c8463bd4024c9959287717a22489f4b5e0"
      },
      "downloads": -1,
      "filename": "vectoreasy-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "63bf86be3d01891cddb75d2bd42a1181",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3097,
      "upload_time": "2023-03-10T01:38:39",
      "upload_time_iso_8601": "2023-03-10T01:38:39.243799Z",
      "url": "https://files.pythonhosted.org/packages/17/e0/919929e67296e6de8a6c9e0f6ba6740233a4980f7cdd6d43a473af34309d/vectoreasy-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "215f9f32ec84c77797bdd3fca3cb6ce9903c50ebbeab899c29628f54d66befec",
        "md5": "cc94bebb879eb8b41f6f054379f40e99",
        "sha256": "8150a1e6c3c6c76d6f2ffe3661068f7c670bb1b9610accce02e9d2ee19473d8d"
      },
      "downloads": -1,
      "filename": "vectoreasy-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cc94bebb879eb8b41f6f054379f40e99",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2683,
      "upload_time": "2023-03-10T01:38:41",
      "upload_time_iso_8601": "2023-03-10T01:38:41.554612Z",
      "url": "https://files.pythonhosted.org/packages/21/5f/9f32ec84c77797bdd3fca3cb6ce9903c50ebbeab899c29628f54d66befec/vectoreasy-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}