{
  "info": {
    "author": "Mailgun Inc.",
    "author_email": "admin@mailgunhq.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "talon\n=====\n\nMailgun library to extract message quotations and signatures.\n\nIf you ever tried to parse message quotations or signatures you know that absence of any formatting standards in this area could make this task a nightmare. Hopefully this library will make your life much easier. The name of the project is inspired by TALON - multipurpose robot designed to perform missions ranging from reconnaissance to combat and operate in a number of hostile environments. That’s what a good quotations and signature parser should be like :smile:\n\nUsage\n-----\n\nHere’s how you initialize the library and extract a reply from a text\nmessage:\n\n.. code:: python\n\n    import talon\n    from talon import quotations\n\n    talon.init()\n\n    text =  \"\"\"Reply\n\n    -----Original Message-----\n\n    Quote\"\"\"\n\n    reply = quotations.extract_from(text, 'text/plain')\n    reply = quotations.extract_from_plain(text)\n    # reply == \"Reply\"\n\nTo extract a reply from html:\n\n.. code:: python\n\n    html = \"\"\"Reply\n    <blockquote>\n\n      <div>\n        On 11-Apr-2011, at 6:54 PM, Bob &lt;bob@example.com&gt; wrote:\n      </div>\n\n      <div>\n        Quote\n      </div>\n\n    </blockquote>\"\"\"\n\n    reply = quotations.extract_from(html, 'text/html')\n    reply = quotations.extract_from_html(html)\n    # reply == \"<html><body><p>Reply</p></body></html>\"\n\nOften the best way is the easiest one. Here’s how you can extract\nsignature from email message without any\nmachine learning fancy stuff:\n\n.. code:: python\n\n    from talon.signature.bruteforce import extract_signature\n\n\n    message = \"\"\"Wow. Awesome!\n    --\n    Bob Smith\"\"\"\n\n    text, signature = extract_signature(message)\n    # text == \"Wow. Awesome!\"\n    # signature == \"--\\nBob Smith\"\n\nQuick and works like a charm 90% of the time. For other 10% you can use\nthe power of machine learning algorithms:\n\n.. code:: python\n\n    import talon\n    # don't forget to init the library first\n    # it loads machine learning classifiers\n    talon.init()\n\n    from talon import signature\n\n\n    message = \"\"\"Thanks Sasha, I can't go any higher and is why I limited it to the\n    homepage.\n\n    John Doe\n    via mobile\"\"\"\n\n    text, signature = signature.extract(message, sender='john.doe@example.com')\n    # text == \"Thanks Sasha, I can't go any higher and is why I limited it to the\\nhomepage.\"\n    # signature == \"John Doe\\nvia mobile\"\n\nFor machine learning talon currently uses the `scikit-learn`_ library to build SVM\nclassifiers. The core of machine learning algorithm lays in\n``talon.signature.learning package``. It defines a set of features to\napply to a message (``featurespace.py``), how data sets are built\n(``dataset.py``), classifier’s interface (``classifier.py``).\n\nCurrently the data used for training is taken from our personal email\nconversations and from `ENRON`_ dataset. As a result of applying our set\nof features to the dataset we provide files ``classifier`` and\n``train.data`` that don’t have any personal information but could be\nused to load trained classifier. Those files should be regenerated every\ntime the feature/data set is changed.\n\nTo regenerate the model files, you can run\n\n.. code:: sh\n\n    python train.py\n\nor\n\n.. code:: python\n    \n    from talon.signature import EXTRACTOR_FILENAME, EXTRACTOR_DATA\n    from talon.signature.learning.classifier import train, init\n    train(init(), EXTRACTOR_DATA, EXTRACTOR_FILENAME)\n\nOpen-source Dataset\n-------------------\n\nRecently we started a `forge`_ project to create an open-source, annotated dataset of raw emails. In the project we\nused a subset of `ENRON`_ data, cleansed of private, health and financial information by `EDRM`_. At the moment over 190\nemails are annotated. Any contribution and collaboration on the project are welcome. Once the dataset is ready we plan to\nstart using it for talon.\n\n.. _scikit-learn: http://scikit-learn.org\n.. _ENRON: https://www.cs.cmu.edu/~enron/\n.. _EDRM: http://www.edrm.net/resources/data-sets/edrm-enron-email-data-set\n.. _forge: https://github.com/mailgun/forge\n\nTraining on your dataset\n------------------------\n\ntalon comes with a pre-processed dataset and a pre-trained classifier. To retrain the classifier on your own dataset of raw emails, structure and annotate them in the same way the `forge`_ project does. Then do:\n\n.. code:: python\n\n    from talon.signature.learning.dataset import build_extraction_dataset\n    from talon.signature.learning import classifier as c \n    \n    build_extraction_dataset(\"/path/to/your/P/folder\", \"/path/to/talon/signature/data/train.data\")\n    c.train(c.init(), \"/path/to/talon/signature/data/train.data\", \"/path/to/talon/signature/data/classifier\")\n\nNote that for signature extraction you need just the folder with the positive samples with annotated signature lines (P folder).\n\n.. _forge: https://github.com/mailgun/forge\n\nResearch\n--------\n\nThe library is inspired by the following research papers and projects:\n\n-  http://www.cs.cmu.edu/~vitor/papers/sigFilePaper_finalversion.pdf\n-  http://www.cs.cornell.edu/people/tj/publications/joachims_01a.pdf\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mailgun/talon",
    "keywords": "",
    "license": "APACHE2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "talon-v2",
    "package_url": "https://pypi.org/project/talon-v2/",
    "platform": "",
    "project_url": "https://pypi.org/project/talon-v2/",
    "project_urls": {
      "Homepage": "https://github.com/mailgun/talon"
    },
    "release_url": "https://pypi.org/project/talon-v2/1.0.0/",
    "requires_dist": [
      "lxml (>=2.3.3)",
      "regex (>=1)",
      "numpy",
      "scipy",
      "scikit-learn (==0.24.1)",
      "chardet (>=1.0.1)",
      "cchardet (>=0.3.5)",
      "cssselect",
      "six (>=1.10.0)",
      "html5lib",
      "joblib"
    ],
    "requires_python": "",
    "summary": "Mailgun library to extract message quotations and signatures.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11159686,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "450d73534803f1908ea4d285efd8ff9782aa6478e4a2518be35087e73f937fa3",
          "md5": "c83c8abcd727690186c69c640e070228",
          "sha256": "68caf20c878f63e69939b6173a3f7b9095fc7deae581bd59d34b44ada9836810"
        },
        "downloads": -1,
        "filename": "talon_v2-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c83c8abcd727690186c69c640e070228",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 37442,
        "upload_time": "2021-08-12T09:59:39",
        "upload_time_iso_8601": "2021-08-12T09:59:39.424219Z",
        "url": "https://files.pythonhosted.org/packages/45/0d/73534803f1908ea4d285efd8ff9782aa6478e4a2518be35087e73f937fa3/talon_v2-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "112497679b8202b1e6409b99ddefdd3351b57a5ff57e30044cb1b6a1045c73c8",
          "md5": "ed41d1172601f4c02edf8a237706d791",
          "sha256": "7d8ff31f5a7409ed719a2992eca3240822b3a9ededf37a5272d7b8620e309a18"
        },
        "downloads": -1,
        "filename": "talon_v2-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ed41d1172601f4c02edf8a237706d791",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34214,
        "upload_time": "2021-08-12T09:59:41",
        "upload_time_iso_8601": "2021-08-12T09:59:41.553749Z",
        "url": "https://files.pythonhosted.org/packages/11/24/97679b8202b1e6409b99ddefdd3351b57a5ff57e30044cb1b6a1045c73c8/talon_v2-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "450d73534803f1908ea4d285efd8ff9782aa6478e4a2518be35087e73f937fa3",
        "md5": "c83c8abcd727690186c69c640e070228",
        "sha256": "68caf20c878f63e69939b6173a3f7b9095fc7deae581bd59d34b44ada9836810"
      },
      "downloads": -1,
      "filename": "talon_v2-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c83c8abcd727690186c69c640e070228",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 37442,
      "upload_time": "2021-08-12T09:59:39",
      "upload_time_iso_8601": "2021-08-12T09:59:39.424219Z",
      "url": "https://files.pythonhosted.org/packages/45/0d/73534803f1908ea4d285efd8ff9782aa6478e4a2518be35087e73f937fa3/talon_v2-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "112497679b8202b1e6409b99ddefdd3351b57a5ff57e30044cb1b6a1045c73c8",
        "md5": "ed41d1172601f4c02edf8a237706d791",
        "sha256": "7d8ff31f5a7409ed719a2992eca3240822b3a9ededf37a5272d7b8620e309a18"
      },
      "downloads": -1,
      "filename": "talon_v2-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ed41d1172601f4c02edf8a237706d791",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 34214,
      "upload_time": "2021-08-12T09:59:41",
      "upload_time_iso_8601": "2021-08-12T09:59:41.553749Z",
      "url": "https://files.pythonhosted.org/packages/11/24/97679b8202b1e6409b99ddefdd3351b57a5ff57e30044cb1b6a1045c73c8/talon_v2-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}