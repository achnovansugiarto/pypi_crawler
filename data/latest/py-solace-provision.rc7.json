{
  "info": {
    "author": "Kegan Holtzhausen",
    "author_email": "marzubus@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: BSD License",
      "Topic :: Utilities"
    ],
    "description": "# py-solace-provision\n\nAn automated self-generating command-line tool for Solace appliances. This tool scans the imported `solace_semp_api` and \nrenders the Api into a command-line tool with some basic ability to create, update and delete Solace managed objects.\n\nExample:\n\n```bash\npysolpro.py [config|monitor|action] --help  \n\npysolpro.py config create_msg_vpn --body data/vpn.yaml\n\npysolpro.py action do_msg_vpn_clear_stats --msg_vpn_name default --body data/empty.yaml\n\npysolpro.py config update_msg_vpn \\\n    --msg_vpn_name myvpn \\\n    --body data/vpn.yaml \\\n    --override dmrEnabled false \\\n    --override enabled false\n\npysolpro.py action get_msg_vpns --where enabled==false\n\npysolpro.py config get_msg_vpn_queues --msg_vpn_name default 2>&1 | grep queueName\n```\n\n## Status\n\nMost commands work with some limitations. \n\n1. `--where` only supports ONE where parameter, due to solace OpenAPI spec being v2, and the API not accepting %2C encoded \n   comma. If Solace moves to OpenAPIv3, there is a `allowReserved` setting to prevent encoding of reserved characters.\n2. Argparse sometimes reports the incorrect missing required positional argument, see --help for the command when this \n   occurs.\n\n    ./pysolpro.py config update_dmr_cluster --body data/dmr/dmr-cluster.yaml                   \n    ERROR type error update_dmr_cluster() missing 1 required positional argument: 'body'\n\n## Dependencies\n\npySolPro imports one or several libraries available at runtime, [solace-semp-config](https://pypi.org/project/solace-semp-config/#description) library is required. The monitoring and action libraries are optional, and have a performance cost. So dont install monitor or action if you dont intend to use them. \n\n## Docker\n\nDocker images are available at https://hub.docker.com/r/unixunion/pysolpro\n\n## Installation\n\npySolPro depends on getting the closest version of the [solace-semp-config](https://pypi.org/project/solace-semp-config/#description) library. Use the closest version equal or less than your broker version from the versions available. \n\n### pip\n\nUsing pip, you can install pySolPro into your python environment.\n\n```sh\npip install py-solace-provision\npip install solace-semp-config==SOLACE_VERSION\n# optional\npip install solace-semp-monitor==SOLACE_VERSION\npip install solace-semp-action==SOLACE_VERSION\n```\n\n### manual\n\nCreate a virtual environment for this\n\n```bash\npython3 -m venv ~/spvenv\nsource ~/spvenv/bin/activate\n```\n\nInstall dependencies, where SOLACE_VERSION equals your broker version or closest match. \nsee [https://pypi.org/project/solace-semp-config/](https://pypi.org/project/solace-semp-config/) for available versions \n\n```bash\n# required\npip install -r requirements.txt\npip install solace-semp-config==SOLACE_VERSION\n```\n\noptional action and monitor api support\n\n```bash\npip install solace-semp-action==SOLACE_VERSION\npip install solace-semp-monitor==SOLACE_VERSION\n```\n\nOptional extras\n\n```sh\npip install argcomplete\npip install coloredlogs\n```\n\nNow you can run `pysolpro.py --help`\n\n## Configuring API\n\nSee [solace.yaml](solace.yaml) for how to set up broker credentials and API endpoint(s). pySolPro searches for a file named `solace.yaml` in several locations listed below, or you can pass the a config filename via an environment property, e.g:\n\n```bash\nPYSOLPRO_CONFIG=/full/path/to/config.yaml pysolpro.py config get_msg_vpns\n```\n\nYou can also pass a partial path via the environment variable, which will then search the below mentioned locations for that file.\n\n```bash\nPYSOLPRO_CONFIG=relevant/path/to/config.yaml pysolpro.py config get_msg_vpns\n```\n\nIf the above relevant config file is not immediately found in the current working directory, it is searched for in the following locations:\n\n    \".\",\n    \"~/.pysolpro/\",\n    \"/\",\n    \"/opt/pysolpro\",\n    \"/etc/pysolpro\"\n\nThe config file also denotes which API's pySolPro generates commands for. There are 3 API's available, `config`, `action` and `monitor`. `config` is required, and requires the `solace-semp-config` module. Both `action` and `monitor` are optional, and should not be installed if not using them, as it slows down the command parser.  \n\nConfiguring the API's example:\n\n    commands:\n      config:\n        api_path: /SEMP/v2/config\n        module: solace_semp_config\n        models: solace_semp_config.models\n        api_class: AllApi\n        config_class: Configuration\n        client_class: ApiClient\n      monitor:\n        api_path: /SEMP/v2/monitor\n        module: solace_semp_monitor\n        models: solace_semp_monitor.models\n        api_class: AllApi\n        config_class: Configuration\n        client_class: ApiClient\n      action:\n        api_path: /SEMP/v2/action\n        module: solace_semp_action\n        models: solace_semp_action.models\n        api_class: AllApi\n        config_class: Configuration\n        client_class: ApiClient\n\nOlder versions of SEMPv2 api do not have the `AllApi` interface, in those cases use `MsgVpnApi` instead.\n\nSolace broker configs are needed for each `API` you want to invoke.\n\n    solace_config:\n      ssl:\n        verify_ssl: false\n        cert: certs/cert.pem\n      config:\n        host: http://localhost:8080\n        username: admin\n        password: admin\n      monitor:\n        host: http://localhost:8080\n        username: admin\n        password: admin\n      action:\n        host: http://localhost:8080\n        username: admin\n        password: admin\n\n\n## Yaml Object Files\n\nAll solace managed objects can be represented as YAML files. see [data/](data/) for some examples. These can be created \nby querying the appliance for the relevant object. Note that some attributes are NOT retrieved from appliances during \nGET operations. Some examples are items such as credentials. There is a task to create this feature using the `opaque_password` parameter.\n\nSolace Objects have a tendency to have incompatible attributes, and these should be removed from YAML before submitting to appliance. Examples of these are commented out in [data/](/data) files. For example, you cannot use clearPercent and clearValue at same time.\n\n    eventEgressFlowCountThreshold:\n      clearPercent: 40\n    #  clearValue: 0\n      setPercent: 60\n    #  setValue: 0\n\nWhen using `--save`, these most of these incompatible attributes are null valued, and are removed when writing the yaml to disk.\n\nOther examples of incomatible types are authentication mechanisms, like password and certificate cannot both be used at the same time.\n\n    replicationBridgeAuthenticationBasicClientUsername: \"\"\n    replicationBridgeAuthenticationBasicPassword: \"\"\n    # replicationBridgeAuthenticationClientCertContent: \"\"\n    # replicationBridgeAuthenticationClientCertPassword: \"\"\n\nThe response from the appliance will generally indicate if you have incompatible configurations.\n\n        \"error\":{\n            \"code\":89,\n            \"description\":\"Problem with replicationBridgeAuthenticationClientCertContent or replicationBridgeAuthenticationClientCertPassword: Channel not encrypted\",\n            \"status\":\"NOT_ALLOWED\"\n        },\n\nWhen using Object Files to create/update managed objects on the broker, you can use the `--override` argument to override any attribute in the YAML files before it is posted to the appliance. As an example, this can be used enable/disable services. It can also be used to \"template\" objects using the same yaml. e.g:\n\n```bash\npysolpro.py config create_msg_vpn --body data/vpn.yaml --override msgVpnName myVpn\npysolpro.py config create_msg_vpn --body data/vpn.yaml --override msgVpnName anotherVpnSameYaml\n```\n\n## Running pySolPro\n\nSimply provide what the method's help requires, parameters are passed directly on command line, and some, like body, are labeled in the help as being `file: <ClassName>`. These must have their argument provide a path to a YAML file.\n\n    usage: pySolPro [-h] [--save] [--save-dir SAVEDIR] [--host HOST] [--username USERNAME] [--password PASSWORD] {config,monitor,action} ...\n\n    positional arguments:\n      {config,monitor,action}\n                            sub-command help\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --save                save retrieved data to disk\n      --save-dir SAVEDIR    location to save to\n      --host HOST           broker host override e.g: https://localhost:8843\n      --username USERNAME   username override\n      --password PASSWORD   password override\n\n    PYSOLPRO_CONFIG=/path/to/broker_config.yaml python pysolpro.py config create_dmr_cluster --body data/dmr/dmr-cluster.yaml\n\n\n#### Special parameters\n\n##### --opaque_password\n\nAllows you to upload/download secrets from the appliance. You must be using TLS.\n\n##### --override\n\nWhen creating/updating objects on the appliance, you can override any attributes read from the yaml files with the \n`--override KEY VALUE` argument. For example if you want to change the enabled state(s) of a MessageVPN.\n\n    ./pysolpro.py config update_msg_vpn \\\n        --msg_vpn_name default \\\n        --body default-vpn.yaml \\\n        --override enabled false \\\n        --override dmrEnabled false\n\nMultiple `--override` arguments can be provided.\n\n##### --where\n\nWhen querying the appliance with get_* commands, the SEMP API can filter the response to only include objects where certain conditions evaluate to true.\n\nThe value of where is a comma-separated list of expressions. All expressions must be true for the object to be included \nin the response. Each expression takes the form:\n\nexpression  = attribute-name OP value\nOP          = '==' | '!=' | '&lt;' | '&gt;' | '&lt;=' | '&gt;='\n\nvalue may be a number, string, true, or false, as appropriate for the type of attribute-name. Greater-than and less-than \ncomparisons only work for numbers. A * in a string value is interpreted as a wildcard (zero or more characters).\n\nNote, only one where condition is supported at the moment, due to Solace not using OpenAPI3. OpenAPI2 does not have `allowReserved` keyword in the parameter specification, so the `,` separator is encoded to %2C.\n\nExample:\n\n    ./pysolpro.py config get_msg_vpn_queues --msg_vpn_name default --where \"queueName==B*\"\n    ./pysolpro.py config get_msg_vpn_queues --msg_vpn_name default --where \"enabled==false\"\n    ./pysolpro.py monitor get_msg_vpn_queues --msg_vpn_name default --where \"spooledByteCount>1000000\"\n\n\n#### Changing the state of something\n\nChanges are sent to the appliance using the Yaml files, but with some additional arguments to identify the object to \nupdate. For instance when creating an object initially, it is often enough to ship send the yaml body only, but when \nupdating, you need to name the object you are updating. Overrides can also be used to alter some yaml attributes before\nsending them to the appliance. \n\n    python pysolpro.py config update_dmr_cluster \\\n        --dmr_cluster_name mydmr \\\n        --body data/dmr/dmr-cluster.yaml \\\n        --override enabled false \n\n### Yaml Files\n\nYou can get the YAML representation of an object with almost any of the get_* subcommands, \nthough some fields should be commented out for compatibility reasons. See the data/ examples.\n\n#### Saving Yaml\n\nThe `--save` option writes out to the retrieved object(s) to the `--save-dir` location.\n\n    python pysolpro.py --save --save-dir savedata config get_msg_vpn --msg_vpn_name default \n\nYou can also save multiple objects when using the \"plural\" getters.\n\n    python pysolpro.py --save --save-dir savedata config get_msg_vpns\n\n#### Saved File Naming / Mappings\n\nDue to the varying content types of objects, `data_mappings` from the configuration file are used to determine which \nkey in the data to use for the filename, or alternatively hash the payload for smalled config increments.\n\n### Optional Extras\n#### Tab completion\n\npySolPro supports tab completion, and will create a cache file named pysolpro.cache upon first invocation. \nsee [argcomplete](https://kislyuk.github.io/argcomplete/) for more info\n\n    pip install argcomplete\n\nFor zsh:\n\n    # one time\n    autoload -U bashcompinit\n    bashcompinit\n    # add this to end of ~/.zshrc\n    # source the venv that you installed argcomplete into, should be same as PySolPro venv.\n    source ~/spvenv/bin/activate\n    eval \"$(register-python-argcomplete pysolpro.py)\"\n\nTo populate the cache, run the --help command:\n\n    ./pysolpro.py --help\n\n#### Colourized logs\n\n    pip install coloredlogs\n\n### Notes \n\n#### Using the nw client\n\n    ./server.py\n    ./client.py config get_msg_vpn_queues --msg_vpn_name default |grep queueName | awk -F \": \" '{print $2;}' | \\\n        xargs -I{} ./client.py config get_msg_vpn_queue_subscriptions --msg_vpn_name default --queue {}\n\n#### Building wheels\n\n    pip install wheel\n    python setup.py bdist_wheel --universal\n\n#### Building docker image\n\nPass the version of SEMP to build for as a buld-arg. See [docker_deps/semp_config](docker_deps/semp_config) for bundled versions.\nYou can add your own just by dropping in the appropriate yaml specs.\n\n    docker build --build-arg sempver=9.8.0.12 -t unixunion/pysolpro:dev . \n\n##### Building all versions\n\n    ls docker_deps/semp_config | xargs -I {} -t docker build --build-arg sempver={} -t unixunion/pysolpro:0.0.2-{} .\n\n##### Testing all versions\n\n    ls docker_deps/semp_config | xargs -I {} -t docker run -v `pwd`/solace.yaml:/opt/pysolpro/solace.yaml unixunion/pysolpro:0.0.2-{} config get_msg_vpn --msg_vpn_name default\n\n##### Getting all SEMPv2 client whl files\n\n    ls docker_deps/semp_config | xargs -I@ -t docker create unixunion/pysolpro:0.1.1-@ | xargs -I@ docker cp @:/tmp output\n\n##### Releasing wheel to pypi\n\n###### solace_semp_* wheels\n\n    ls docker_deps/semp_config | xargs -I@ -t docker build --build-arg sempver=@ -t unixunion/pysolpro:0.1.3-@ . -f docker_deps/Dockerfile\n\n##### Creating self signed cert\n\n    openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365\n    openssl rsa -in key.pem -out nopassskey.pem\n    cat nopassskey.pem >>server.pem\n    cat cert.pem >>server.pem\n\nJump into the broker and enable TLS\n\n    docker exec -ti broker1 cli\n    enable\n    configure\n    ssl\n    server-certificate server.pem\n    exit\n    service semp\n    shutown\n    listen-port 8843 ssl\n    no shutdown\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/unixunion/py-solace-provision",
    "keywords": "solace messaging provioning",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-solace-provision",
    "package_url": "https://pypi.org/project/py-solace-provision/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-solace-provision/",
    "project_urls": {
      "Homepage": "https://github.com/unixunion/py-solace-provision"
    },
    "release_url": "https://pypi.org/project/py-solace-provision/0.2.9/",
    "requires_dist": [
      "libkplug",
      "six",
      "pyyaml"
    ],
    "requires_python": "",
    "summary": "A solace provisioning toolkit",
    "version": "0.2.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9796087,
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fec7f491d2ee4457d5ba8cd2322dff05c549663bf7fbc05cedf9d47ff979109e",
          "md5": "f4fd93fae9f7f09a5221e7d464063877",
          "sha256": "3cb3e9d8d2b2838bd40bb3849f407533bca6c0fb52228c350f37451416e12650"
        },
        "downloads": -1,
        "filename": "py_solace_provision-0.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4fd93fae9f7f09a5221e7d464063877",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20209,
        "upload_time": "2021-03-04T13:56:34",
        "upload_time_iso_8601": "2021-03-04T13:56:34.189610Z",
        "url": "https://files.pythonhosted.org/packages/fe/c7/f491d2ee4457d5ba8cd2322dff05c549663bf7fbc05cedf9d47ff979109e/py_solace_provision-0.2.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1b67d1bc3866f81b07ac7d63a786946c541383b0e46cad3d2b2aaa87cca8b42",
          "md5": "821cdc7e94172247953518ab37d7ccba",
          "sha256": "ce457e244bf6c70f5a0f36ef061627dacded9c2563681b0a40b8a0f229aee400"
        },
        "downloads": -1,
        "filename": "py_solace_provision-0.2.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "821cdc7e94172247953518ab37d7ccba",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20200,
        "upload_time": "2021-03-04T14:03:45",
        "upload_time_iso_8601": "2021-03-04T14:03:45.452771Z",
        "url": "https://files.pythonhosted.org/packages/c1/b6/7d1bc3866f81b07ac7d63a786946c541383b0e46cad3d2b2aaa87cca8b42/py_solace_provision-0.2.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cb47c6f1107a496fff7d1a7d36eb7789868ecb4dabacb0c7c858cfcb2e89cd3",
          "md5": "600032b770ebf606c0b57397b182977e",
          "sha256": "e3998fc691af221bad1780e6e55830f4a45f900a7fd818237bdfabcf8881f257"
        },
        "downloads": -1,
        "filename": "py_solace_provision-0.2.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "600032b770ebf606c0b57397b182977e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21233,
        "upload_time": "2021-03-05T05:39:59",
        "upload_time_iso_8601": "2021-03-05T05:39:59.437475Z",
        "url": "https://files.pythonhosted.org/packages/5c/b4/7c6f1107a496fff7d1a7d36eb7789868ecb4dabacb0c7c858cfcb2e89cd3/py_solace_provision-0.2.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a439dfd74d18da78859d6ee247faa0a383cc140006535feb326757b7e13a1638",
          "md5": "6572ca57a4fd3a069fae555a59142bed",
          "sha256": "5f9bf4d269def11e0d3cab92173ff74c8ed777be62c70f0b2a5c6f3bee6b3597"
        },
        "downloads": -1,
        "filename": "py_solace_provision-0.2.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6572ca57a4fd3a069fae555a59142bed",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21696,
        "upload_time": "2021-03-05T06:40:43",
        "upload_time_iso_8601": "2021-03-05T06:40:43.802640Z",
        "url": "https://files.pythonhosted.org/packages/a4/39/dfd74d18da78859d6ee247faa0a383cc140006535feb326757b7e13a1638/py_solace_provision-0.2.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37646cc576fb99534ae76f521e28e40443d55815019b0fd8423cd78292d46437",
          "md5": "2dd62d2ee7f025ef126b6e3a9d7324c7",
          "sha256": "f0f40c87ad303db451bfd09064f4cc5dd3cb0afeeca6f82edcdae2fb39da0703"
        },
        "downloads": -1,
        "filename": "py_solace_provision-0.2.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2dd62d2ee7f025ef126b6e3a9d7324c7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21152,
        "upload_time": "2021-03-05T14:16:45",
        "upload_time_iso_8601": "2021-03-05T14:16:45.527950Z",
        "url": "https://files.pythonhosted.org/packages/37/64/6cc576fb99534ae76f521e28e40443d55815019b0fd8423cd78292d46437/py_solace_provision-0.2.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "060eade5c55f7def2c1789f812579b8efc77701f6bd70a8d11cead69e1f47929",
          "md5": "a1018447ac56a6b5569cf2bcb8e21872",
          "sha256": "f014cb0782a324b563e1c7df82ba6cfbc7118696678fcc9225def811329437cc"
        },
        "downloads": -1,
        "filename": "py_solace_provision-0.2.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a1018447ac56a6b5569cf2bcb8e21872",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21978,
        "upload_time": "2021-03-09T12:56:40",
        "upload_time_iso_8601": "2021-03-09T12:56:40.049291Z",
        "url": "https://files.pythonhosted.org/packages/06/0e/ade5c55f7def2c1789f812579b8efc77701f6bd70a8d11cead69e1f47929/py_solace_provision-0.2.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1e4cb54ab24f4a280945251d80458b58bc1ba954a2d7e9ac1998409b029dc64",
          "md5": "d28550fef60a07a6559997c7a7c3d66e",
          "sha256": "7bd52494b35965a2f6eadc42294594abc5eb4c1d7d00812c43caf62cf4c8f332"
        },
        "downloads": -1,
        "filename": "py_solace_provision-0.2.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d28550fef60a07a6559997c7a7c3d66e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 22509,
        "upload_time": "2021-03-17T10:13:17",
        "upload_time_iso_8601": "2021-03-17T10:13:17.132970Z",
        "url": "https://files.pythonhosted.org/packages/a1/e4/cb54ab24f4a280945251d80458b58bc1ba954a2d7e9ac1998409b029dc64/py_solace_provision-0.2.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1e4cb54ab24f4a280945251d80458b58bc1ba954a2d7e9ac1998409b029dc64",
        "md5": "d28550fef60a07a6559997c7a7c3d66e",
        "sha256": "7bd52494b35965a2f6eadc42294594abc5eb4c1d7d00812c43caf62cf4c8f332"
      },
      "downloads": -1,
      "filename": "py_solace_provision-0.2.9-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d28550fef60a07a6559997c7a7c3d66e",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 22509,
      "upload_time": "2021-03-17T10:13:17",
      "upload_time_iso_8601": "2021-03-17T10:13:17.132970Z",
      "url": "https://files.pythonhosted.org/packages/a1/e4/cb54ab24f4a280945251d80458b58bc1ba954a2d7e9ac1998409b029dc64/py_solace_provision-0.2.9-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}