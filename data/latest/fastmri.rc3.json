{
  "info": {
    "author": "Meta/NYU fastMRI Team",
    "author_email": "fastmri@fb.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Image Processing",
      "Topic :: Scientific/Engineering :: Medical Science Apps.",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "# fastMRI\n\n[![LICENSE](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebookresearch/fastMRI/blob/master/LICENSE.md)\n[![Build and Test](https://github.com/facebookresearch/fastMRI/actions/workflows/build-and-test.yml/badge.svg)](https://github.com/facebookresearch/fastMRI/actions/workflows/build-and-test.yml)\n\n[Website and Leaderboards](https://fastMRI.org) |\n[Dataset](https://fastmri.med.nyu.edu/) |\n[GitHub](https://github.com/facebookresearch/fastMRI) |\n[Publications](#list-of-papers)\n\nAccelerating Magnetic Resonance Imaging (MRI) by acquiring fewer measurements\nhas the potential to reduce medical costs, minimize stress to patients and make\nMR imaging possible in applications where it is currently prohibitively slow or\nexpensive.\n\n[fastMRI](https://fastMRI.org) is a collaborative research project from\nFacebook AI Research (FAIR) and NYU Langone Health to investigate the use of AI\nto make MRI scans faster. NYU Langone Health has released fully anonymized knee\nand brain MRI datasets that can be downloaded from\n[the fastMRI dataset page](https://fastmri.med.nyu.edu/). Publications\nassociated with the fastMRI project can be found\n[at the end of this README](#list-of-papers).\n\nThis repository contains convenient PyTorch data loaders, subsampling\nfunctions, evaluation metrics, and reference implementations of simple baseline\nmethods. It also contains implementations for methods in some of the\npublications of the fastMRI project.\n\n## Documentation\n\n### The fastMRI Dataset\n\nThere are multiple publications describing different subcomponents of the data\n(e.g., brain vs. knee) and associated baselines.\n\n* **Project Summary, Datasets, Baselines:** [fastMRI: An Open Dataset and Benchmarks for Accelerated MRI ({J. Zbontar*, F. Knoll*, A. Sriram*} et al., 2018)](https://arxiv.org/abs/1811.08839)\n\n* **Knee Data:** [fastMRI: A Publicly Available Raw k-Space and DICOM Dataset of Knee Images for Accelerated MR Image Reconstruction Using Machine Learning ({F. Knoll*, J. Zbontar*} et al., 2020)](https://doi.org/10.1148/ryai.2020190007)\n\n* **Brain Dataset Properties:** [Supplemental Material](https://ieeexplore.ieee.org/ielx7/42/9526230/9420272/supp1-3075856.pdf?arnumber=9420272) of [Results of the 2020 fastMRI Challenge for Machine Learning MR Image Reconstruction ({M. Muckley*, B. Riemenschneider*} et al., 2021)](https://doi.org/10.1109/TMI.2021.3075856)\n\n### Code Repository\n\nFor code documentation, most functions and classes have accompanying docstrings\nthat you can access via the `help` function in IPython. For example:\n\n```python\nfrom fastmri.data import SliceDataset\n\nhelp(SliceDataset)\n```\n\n## Dependencies and Installation\n\n**Note:** Contributions to the code are continuously tested via GitHub actions.\nIf you encounter an issue, the best first thing to do is to try to match the\n`tests` environment in `setup.cfg`, e.g., `pip install --editable \".[tests]\"`\nwhen installing from source.\n\n**Note:** As documented in [Issue 215](https://github.com/facebookresearch/fastMRI/issues/215),\nthere is currently a memory leak when using `h5py` installed from `pip` and\nconverting to a `torch.Tensor`. To avoid the leak, you need to use `h5py` with\na version of HDF5 before 1.12.1. As of February 16, 2022, the `conda` version\nof `h5py` 3.6.0 used HDF5 1.10.6, which avoids the leak.\n\nFirst install PyTorch according to the directions at the\n[PyTorch Website](https://pytorch.org/get-started/) for your operating system\nand CUDA setup. Then, run\n\n```bash\npip install fastmri\n```\n\n`pip` will handle all package dependencies. After this you should be able to\nrun most of the code in the repository.\n\n### Installing Directly from Source\n\nIf you want to install directly from the GitHub source, clone the repository,\nnavigate to the `fastmri` root directory and run\n\n```bash\npip install -e .\n```\n\n## Package Structure & Usage\n\nThe repository is centered around the `fastmri` module. The following breaks\ndown the basic structure:\n\n`fastmri`: Contains a number of basic tools for complex number math, coil\ncombinations, etc.\n\n* `fastmri.data`: Contains data utility functions from original `data` folder\nthat can be used to create sampling masks and submission files.\n* `fastmri.models`: Contains reconstruction models, such as the U-Net and\nVarNet.\n* `fastmri.pl_modules`: PyTorch Lightning modules for data loading, training,\nand logging.\n\n## Examples and Reproducibility\n\nThe `fastmri_examples` and `banding_removal` folders include code for\nreproducibility. The baseline models were used in the [arXiv paper](https://arxiv.org/abs/1811.08839).\n\nA brief summary of implementions based on papers with links to code follows.\nFor completeness we also mention work on active acquisition, which is hosted\nin another repository.\n\n* **Baseline Models**\n\n  * [Zero-filled examples for saving images for leaderboard submission](https://github.com/facebookresearch/fastMRI/tree/master/fastmri_examples/zero_filled/)\n  * [ESPIRiTâ€”an eigenvalue approach to autocalibrating parallel MRI: where SENSE meets GRAPPA (M. Uecker et al., 2013)](https://github.com/facebookresearch/fastMRI/tree/master/fastmri_examples/cs/)\n  * [U-Net: Convolutional networks for biomedical image segmentation (O. Ronneberger et al., 2015)](https://github.com/facebookresearch/fastMRI/tree/master/fastmri_examples/unet/)\n\n* **Sampling, Reconstruction and Artifact Correction**\n\n  * [Offset Sampling Improves Deep Learning based Accelerated MRI Reconstructions by Exploiting Symmetry (A. Defazio, 2019)](https://github.com/facebookresearch/fastMRI/blob/8abe6eaeeb3d4504f26dc77adffb02a4be41d6f4/fastmri/data/subsample.py#L344-L475)\n  * [End-to-End Variational Networks for Accelerated MRI Reconstruction ({A. Sriram*, J. Zbontar*} et al., 2020)](https://github.com/facebookresearch/fastMRI/tree/master/fastmri_examples/varnet/)\n  * [MRI Banding Removal via Adversarial Training (A. Defazio, et al., 2020)](https://github.com/facebookresearch/fastMRI/tree/master/banding_removal)\n\n* **Active Acquisition**\n  * (external repository) [Reducing uncertainty in undersampled MRI reconstruction with active acquisition (Z. Zhang et al., 2019)](https://github.com/facebookresearch/active-mri-acquisition/tree/master/activemri/experimental/cvpr19_models)\n  * (external repository) [Active MR k-space Sampling with Reinforcement Learning (L. Pineda et al., 2020)](https://github.com/facebookresearch/active-mri-acquisition)\n  * [On learning adaptive acquisition policies for undersampled multi-coil MRI reconstruction (T. Bakker et al., 2022)](https://github.com/facebookresearch/fastMRI/tree/main/fastmri_examples/adaptive_varnet/)\n\n## Testing\n\nRun `pytest tests`. By default integration tests that use the fastMRI data are\nskipped. If you would like to run these tests, set `SKIP_INTEGRATIONS` to\n`False` in the [conftest](https://github.com/facebookresearch/fastMRI/tree/master/tests/conftest.py).\n\n## Training a model\n\nThe [data README](https://github.com/facebookresearch/fastMRI/tree/master/fastmri/data/README.md) has a bare-bones example for how to\nload data and incorporate data transforms. This\n[jupyter notebook](https://github.com/facebookresearch/fastMRI/tree/master/fastMRI_tutorial.ipynb) contains a simple tutorial\nexplaining how to get started working with the data.\n\nPlease look at\n[this U-Net demo script](https://github.com/facebookresearch/fastMRI/tree/master/fastmri_examples/unet/train_unet_demo.py) for an\nexample of how to train a model using the PyTorch Lightning framework.\n\n## Submitting to the Leaderboard\n\nRun your model on the provided test data and create a zip file containing your\npredictions. `fastmri` has a `save_reconstructions` function that saves the\ndata in the correct format.\n\nUpload the zip file to any publicly accessible cloud storage (e.g. Amazon S3,\nDropbox etc). Submit a link to the zip file on the\n[challenge website](https://fastmri.org/submit). You will need to create an\naccount before submitting.\n\n## License\n\nfastMRI is MIT licensed, as found in the [LICENSE file](https://github.com/facebookresearch/fastMRI/tree/master/LICENSE.md).\n\n## Cite\n\nIf you use the fastMRI data or code in your project, please cite the arXiv\npaper:\n\n```BibTeX\n@inproceedings{zbontar2018fastMRI,\n    title={{fastMRI}: An Open Dataset and Benchmarks for Accelerated {MRI}},\n    author={Jure Zbontar and Florian Knoll and Anuroop Sriram and Tullie Murrell and Zhengnan Huang and Matthew J. Muckley and Aaron Defazio and Ruben Stern and Patricia Johnson and Mary Bruno and Marc Parente and Krzysztof J. Geras and Joe Katsnelson and Hersh Chandarana and Zizhao Zhang and Michal Drozdzal and Adriana Romero and Michael Rabbat and Pascal Vincent and Nafissa Yakubova and James Pinkerton and Duo Wang and Erich Owens and C. Lawrence Zitnick and Michael P. Recht and Daniel K. Sodickson and Yvonne W. Lui},\n    journal = {ArXiv e-prints},\n    archivePrefix = \"arXiv\",\n    eprint = {1811.08839},\n    year={2018}\n}\n```\n\n## List of Papers\n\nThe following lists titles of papers from the fastMRI project. The\ncorresponding abstracts, as well as links to preprints and code can be found\n[here](https://github.com/facebookresearch/fastMRI/tree/master/LIST_OF_PAPERS.md).\n\n1. Zbontar, J.\\*, Knoll, F.\\*, Sriram, A.\\*, Murrell, T., Huang, Z., Muckley, M. J., ... & Lui, Y. W. (2018). [fastMRI: An Open Dataset and Benchmarks for Accelerated MRI](https://arxiv.org/abs/1811.08839). *arXiv preprint arXiv:1811.08839*.\n2. Zhang, Z., Romero, A., Muckley, M. J., Vincent, P., Yang, L., & Drozdzal, M. (2019). [Reducing uncertainty in undersampled MRI reconstruction with active acquisition](https://openaccess.thecvf.com/content_CVPR_2019/html/Zhang_Reducing_Uncertainty_in_Undersampled_MRI_Reconstruction_With_Active_Acquisition_CVPR_2019_paper.html). In *CVPR*, pages 2049-2058.\n3. Defazio, A. (2019). [Offset Sampling Improves Deep Learning based Accelerated MRI Reconstructions by Exploiting Symmetry](https://arxiv.org/abs/1912.01101). *arXiv preprint, arXiv:1912.01101*.\n4. Knoll, F.\\*, Zbontar, J.\\*, Sriram, A., Muckley, M. J., Bruno, M., Defazio, A., ... & Lui, Y. W. (2020). [fastMRI: A Publicly Available Raw k-Space and DICOM Dataset of Knee Images for Accelerated MR Image Reconstruction Using Machine Learning](https://doi.org/10.1148/ryai.2020190007). *Radiology: Artificial Intelligence*, 2(1), page e190007.\n5. Knoll, F.\\*, Murrell, T.\\*, Sriram, A.\\*, Yakubova, N., Zbontar, J., Rabbat, M., ... & Recht, M. P. (2020). [Advancing machine learning for MR image reconstruction with an open competition: Overview of the 2019 fastMRI challenge](https://doi.org/10.1002/mrm.28338). *Magnetic Resonance in Medicine*, 84(6), pages 3054-3070.\n6. Sriram, A., Zbontar, J., Murrell, T., Zitnick, C. L., Defazio, A., & Sodickson, D. K. (2020). [GrappaNet: Combining parallel imaging with deep learning for multi-coil MRI reconstruction](https://openaccess.thecvf.com/content_CVPR_2020/html/Sriram_GrappaNet_Combining_Parallel_Imaging_With_Deep_Learning_for_Multi-Coil_MRI_CVPR_2020_paper.html). In *CVPR*, pages 14315-14322.\n7. Recht, M. P., Zbontar, J., Sodickson, D. K., Knoll, F., Yakubova, N., Sriram, A., ... & Zitnick, C. L. (2020). [Using Deep Learning to Accelerate Knee MRI at 3T: Results of an Interchangeability Study](https://doi.org/10.2214/AJR.20.23313). *American Journal of Roentgenology*, 215(6), pages 1421-1429.\n8. Pineda, L., Basu, S., Romero, A., Calandra, R., & Drozdzal, M. (2020). [Active MR k-space Sampling with Reinforcement Learning](https://doi.org/10.1007/978-3-030-59713-9_3). In *MICCAI*, pages 23-33.\n9. Sriram, A.\\*, Zbontar, J.\\*, Murrell, T., Defazio, A., Zitnick, C. L., Yakubova, N., ... & Johnson, P. (2020). [End-to-End Variational Networks for Accelerated MRI Reconstruction](https://doi.org/10.1007/978-3-030-59713-9_7). In *MICCAI*, pages 64-73.\n10. Defazio, A., Murrell, T., & Recht, M. P. (2020). [MRI Banding Removal via Adversarial Training](https://papers.nips.cc/paper/2020/hash/567b8f5f423af15818a068235807edc0-Abstract.html). In *Advances in Neural Information Processing Systems*, 33, pages 7660-7670.\n11. Muckley, M. J.\\*, Riemenschneider, B.\\*, Radmanesh, A., Kim, S., Jeong, G., Ko, J., ... & Knoll, F. (2021). [Results of the 2020 fastMRI Challenge for Machine Learning MR Image Reconstruction](https://doi.org/10.1109/TMI.2021.3075856). *IEEE Transactions on Medical Imaging*, 40(9), pages 2306-2317.\n12. Johnson, P. M., Jeong, G., Hammernik, K., Schlemper, J., Qin, C., Duan, J., ..., & Knoll, F. (2021). [Evaluation of the Robustness of Learned MR Image Reconstruction to Systematic Deviations Between Training and Test Data for the Models from the fastMRI Challenge](https://doi.org/10.1007/978-3-030-88552-6_3). In *MICCAI MLMIR Workshop*, pages 25â€“34,\n13. Bakker, T., Muckley, M.J., Romero-Soriano, A., Drozdzal, M. & Pineda, L. (2022). [On learning adaptive acquisition policies for undersampled multi-coil MRI reconstruction](https://arxiv.org/abs/2203.16392). *In MIDL*. Accepted.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastmri",
    "package_url": "https://pypi.org/project/fastmri/",
    "platform": null,
    "project_url": "https://pypi.org/project/fastmri/",
    "project_urls": {
      "Homepage": "https://fastmri.org/",
      "Source": "https://github.com/facebookresearch/fastMRI"
    },
    "release_url": "https://pypi.org/project/fastmri/0.2.0/",
    "requires_dist": [
      "numpy (>=1.18.5)",
      "scikit-image (>=0.16.2)",
      "torchvision (>=0.8.1)",
      "torch (>=1.8.0)",
      "runstats (>=1.8.0)",
      "pytorch-lightning (>=1.4)",
      "h5py (>=2.10.0)",
      "PyYAML (>=5.3.1)",
      "torchmetrics (>=0.5.1)",
      "pandas (>=1.3.4)",
      "black (==22.3.0) ; extra == 'dev'",
      "flake8 (==4.0.1) ; extra == 'dev'",
      "mypy (==0.961) ; extra == 'dev'",
      "pytest (==7.1.2) ; extra == 'dev'",
      "types-pyyaml (==5.4.10) ; extra == 'dev'",
      "types-requests (==2.27.6) ; extra == 'dev'",
      "types-urllib3 (==1.26.6) ; extra == 'dev'",
      "black (==22.3.0) ; extra == 'tests'",
      "flake8 (==4.0.1) ; extra == 'tests'",
      "h5py (==3.7.0) ; extra == 'tests'",
      "isort (==5.10.1) ; extra == 'tests'",
      "mypy (==0.961) ; extra == 'tests'",
      "numpy (==1.22.3) ; extra == 'tests'",
      "pandas (==1.4.2) ; extra == 'tests'",
      "pandas-stubs (==1.2.0.61) ; extra == 'tests'",
      "pytest (==7.1.2) ; extra == 'tests'",
      "pytorch-lightning (==1.6.4) ; extra == 'tests'",
      "PyYAML (==6.0) ; extra == 'tests'",
      "runstats (==2.0.0) ; extra == 'tests'",
      "scikit-image (==0.19.3) ; extra == 'tests'",
      "torchmetrics (==0.9.1) ; extra == 'tests'",
      "torchvision (==0.12.0) ; extra == 'tests'",
      "torch (==1.11.0) ; extra == 'tests'",
      "types-pyyaml (==5.4.10) ; extra == 'tests'",
      "types-requests (==2.27.6) ; extra == 'tests'",
      "types-urllib3 (==1.26.6) ; extra == 'tests'"
    ],
    "requires_python": ">=3.8",
    "summary": "A large-scale dataset of both raw MRI measurements and clinical MRI images.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14166701,
  "releases": {
    "0.1.0.post210716": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e91e3f77588d87a31ae9b8baf8f54895be2584ff62818c62735878198e2694df",
          "md5": "86277d03c57815cb28481b6a6325de06",
          "sha256": "a1704faa3b69d7d42dd04176343e9374071779373bf0bdb9083504abc7c8767d"
        },
        "downloads": -1,
        "filename": "fastmri-0.1.0.post210716-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86277d03c57815cb28481b6a6325de06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40276,
        "upload_time": "2021-07-16T22:48:05",
        "upload_time_iso_8601": "2021-07-16T22:48:05.486780Z",
        "url": "https://files.pythonhosted.org/packages/e9/1e/3f77588d87a31ae9b8baf8f54895be2584ff62818c62735878198e2694df/fastmri-0.1.0.post210716-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9377bd2c7bf109cfca6ac94884208a2d0b78d30dbcf47eb821e8af4874797e9e",
          "md5": "5cfadb3f3c2169ee3504977718d0f61c",
          "sha256": "f1d6eea92b590e34a7646ecc972753c6665b1568c7be1e9cdc7057b0267c3af0"
        },
        "downloads": -1,
        "filename": "fastmri-0.1.0.post210716.tar.gz",
        "has_sig": false,
        "md5_digest": "5cfadb3f3c2169ee3504977718d0f61c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 44929,
        "upload_time": "2021-07-16T22:48:06",
        "upload_time_iso_8601": "2021-07-16T22:48:06.677921Z",
        "url": "https://files.pythonhosted.org/packages/93/77/bd2c7bf109cfca6ac94884208a2d0b78d30dbcf47eb821e8af4874797e9e/fastmri-0.1.0.post210716.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d32a528dc6bb188f7245af4bc6c396dc2f0c7029e03ce36dc1e294352bc0c76",
          "md5": "5bf49a8bde23e79a056c3480e26c81be",
          "sha256": "c881a91ffed22f41099ce77410b2c4813a49d5e8ccd30234fc7d554020b23216"
        },
        "downloads": -1,
        "filename": "fastmri-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bf49a8bde23e79a056c3480e26c81be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40333,
        "upload_time": "2021-07-20T14:23:04",
        "upload_time_iso_8601": "2021-07-20T14:23:04.382914Z",
        "url": "https://files.pythonhosted.org/packages/1d/32/a528dc6bb188f7245af4bc6c396dc2f0c7029e03ce36dc1e294352bc0c76/fastmri-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5c9644ec2f57eded3fb1745d29cffcf017730cfadd2301239076735167b48fe",
          "md5": "7662d44c7e41ecf3d715bb249782574a",
          "sha256": "8ecb8b511c17cac110164f2a9381ecd3e5f1352695b8c6da8b59fd768124fcc9"
        },
        "downloads": -1,
        "filename": "fastmri-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7662d44c7e41ecf3d715bb249782574a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36106,
        "upload_time": "2021-07-20T14:23:05",
        "upload_time_iso_8601": "2021-07-20T14:23:05.626934Z",
        "url": "https://files.pythonhosted.org/packages/d5/c9/644ec2f57eded3fb1745d29cffcf017730cfadd2301239076735167b48fe/fastmri-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8314294e9605522c1c6433d589d57d5578abf2d3012b252015bd7a0045422204",
          "md5": "f609078a0de50fbb5d37200f52136997",
          "sha256": "103fa2a131d131514b7f534dcb53a00b123bcf77307d9b559f6896f944aed968"
        },
        "downloads": -1,
        "filename": "fastmri-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f609078a0de50fbb5d37200f52136997",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 57097,
        "upload_time": "2022-06-17T20:04:32",
        "upload_time_iso_8601": "2022-06-17T20:04:32.042975Z",
        "url": "https://files.pythonhosted.org/packages/83/14/294e9605522c1c6433d589d57d5578abf2d3012b252015bd7a0045422204/fastmri-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6962dc49e635cbc2cfb731a666b856cd288cae5b72ce1706c7104902a8a2bb2",
          "md5": "7246d423986d626292ef9a7feb5ed8be",
          "sha256": "38e6772521aa8cb4bb5e7a66abac7c38a390d152eff4d9a4d484b9e94219612e"
        },
        "downloads": -1,
        "filename": "fastmri-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7246d423986d626292ef9a7feb5ed8be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 674459,
        "upload_time": "2022-06-17T20:04:34",
        "upload_time_iso_8601": "2022-06-17T20:04:34.262722Z",
        "url": "https://files.pythonhosted.org/packages/a6/96/2dc49e635cbc2cfb731a666b856cd288cae5b72ce1706c7104902a8a2bb2/fastmri-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8314294e9605522c1c6433d589d57d5578abf2d3012b252015bd7a0045422204",
        "md5": "f609078a0de50fbb5d37200f52136997",
        "sha256": "103fa2a131d131514b7f534dcb53a00b123bcf77307d9b559f6896f944aed968"
      },
      "downloads": -1,
      "filename": "fastmri-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f609078a0de50fbb5d37200f52136997",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 57097,
      "upload_time": "2022-06-17T20:04:32",
      "upload_time_iso_8601": "2022-06-17T20:04:32.042975Z",
      "url": "https://files.pythonhosted.org/packages/83/14/294e9605522c1c6433d589d57d5578abf2d3012b252015bd7a0045422204/fastmri-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6962dc49e635cbc2cfb731a666b856cd288cae5b72ce1706c7104902a8a2bb2",
        "md5": "7246d423986d626292ef9a7feb5ed8be",
        "sha256": "38e6772521aa8cb4bb5e7a66abac7c38a390d152eff4d9a4d484b9e94219612e"
      },
      "downloads": -1,
      "filename": "fastmri-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7246d423986d626292ef9a7feb5ed8be",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 674459,
      "upload_time": "2022-06-17T20:04:34",
      "upload_time_iso_8601": "2022-06-17T20:04:34.262722Z",
      "url": "https://files.pythonhosted.org/packages/a6/96/2dc49e635cbc2cfb731a666b856cd288cae5b72ce1706c7104902a8a2bb2/fastmri-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}