{
  "info": {
    "author": "AutONMT",
    "author_email": "mehdibenharrats@yahoo.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "[![pipeline status](https://gitlab.com/mehdidou99/autONMT/badges/main/pipeline.svg)](https://gitlab.com/mehdidou99/autONMT/-/commits/main)\n[![coverage report](https://gitlab.com/mehdidou99/autONMT/badges/main/coverage.svg)](https://mehdidou99.gitlab.io/autONMT/main/)\n[![PyPI version](https://badge.fury.io/py/AutONMT-tf.svg)](https://badge.fury.io/py/AutONMT-tf)\n\n# AutONMT-tf\n\nAutONMT-tf is a configuration tool designed to simplify the creation of complete OpenNMT-tf pipelines (data loading, preprocessing, training, inference...). It can also be used for other tasks not related to OpenNMT-tf, but there are no built-in modules for other NMT frameworks.\n\nIt is still at an early development stage, neither stability nor backward-compatibilty are guaranteed.\n\n## Requirements\n\nAutONMT-tf requires :\n\n- Python 3.7 or above\n- OpenNMT-tf 2.20 or above\n\n## Installation\n\n### Using pip\n\nIt is the recommanded (and simplest) installation method :\n\n```bash\npip install --upgrade pip\npip install AutONMT-tf\n```\n\n### From source\n\nYou can also install AutONMT-tf directly from source :\n\n```bash\ngit clone https://gitlab.com/mehdidou99/AutONMT-tf.git\ncd AutONMT-tf\npip install --upgrade pip\npip install .\n```\n\n## Usage\n\n### Quickstart\n\nOnce installed, you can try to run a simple Transformer model pipeline with some preprocessing :\n\n```bash\ngit clone https://gitlab.com/mehdidou99/AutONMT-tf.git\ncd AutONMT-tf\nautonmt_cli -v --config examples/pipelines/simple_transformer.yml --pipeline train\n```\n\nThe input data used in this example is a toy dataset with several corpora : you can inspect and modify it in [examples/data/](https://gitlab.com/mehdidou99/AutONMT-tf/-/tree/main/examples/data)\n\n### Pipeline examples\n\nSome examples are available in [examples/pipelines/](https://gitlab.com/mehdidou99/AutONMT-tf/-/tree/main/examples/pipelines):\n\n- simple_encoder.yml: A very simple example showcasing base functionalities of AutONMT-tf\n- fren_triple_encoder.yml: A more complex example showcasing the future functionalities of AutONMT-tf, which will allow it to have the flexibility needed for more complex models and pipelines.\n\n### Command line\n\nAutONMT-tf is used through the `autonmt_cli` command line interface.\n\n- Simplest usage : `autonmt_cli --config path/to/pipeline/config/file.yml --pipeline name_of_the_pipeline_to_run`\n- Key options :\n    - `--until step` : stops the execution after step *step*\n    - `--use_cache` : resumes execution using cache instead of launching the pipeline from the beginning\n\n### Pipeline elements\n\nEach pipeline configuration file is made of the following elements:\n\n- Global configuration\n- Pipelines made of pipeline blocks\n- Modules\n\nThe [simple_transformer](https://gitlab.com/mehdidou99/AutONMT-tf/-/blob/main/examples/pipelines/simple_transformer.yml) example illustrates all of those elements.\n\n#### Global configuration\n\nThe global configuration defines the elements that are used by all the pipelines defined in the file :\n\n- Experiment name\n- Custom directories\n- Model configuration\n- Scripts directory\n- Cache directory\n\n#### Pipelines\n\nPipelines are the core element of AutONMT-tf. A pipeline is a list of pipeline blocks which each define a specific step of the process : block is applied to a list of **corpora**; it receives input through **input tags** and outputs **output tags**. See [Tags](#tags) to learn more.\n\nAutONMT-tf currently provides the following block types:\n\n- data_query: Loads data : it is usually the first block of a pipeline, and creates the corpora that are later used by the subsequent blocks.\n- merging: Used to merge data from several datasets into one new dataset, usually used to merge data for training.\n- vocab_building: Builds a vocabulary using the 'onmt-build-vocab' command from OpenNMT-tf.\n- splitting: Splits input data into several parts, the intended use is to split train data into train, test and validation sets.\n- training: Trains the model using the 'onmt-main' command from OpenNMT-tf.\n- script: Executes custom scripts, usually used for experiment-dependent features such as preprocessing, tokenization, score computation...\n\n#### Modules\n\nModules are currently simply configuration modules allowing blocks to delegate their specific configuration to said module. Their use should be extended in future versions, allowing complete blocks to be defined as modules and allowing external module files in order to allow blocks to be reused in different experiments.\n\n#### Tags\n\nTags are a core element of AutONMT-tf: they allow pipelines to manipulate data through tags instead of real files, making the pipeline definition much more natural.\n\nThe link between abstract tags and underlying real files is handled automatically by AutONMT-tf. For *script* blocks, the paths to the real files are passed to the script as follows :\n\n```bash\nscript_name input_tag_1_path ... input_tag_N_path output_tag_1_path ... output_tag_M_path\n```\n\nScripts can thus process data without the script writer needing to know the paths to the real data files.\n\n#### Artifacts\n\nSome of the generated files are needed by the user, either to be inspected (e.g training data) or to be used in other pipelines. For example, a tokenizer can be trained with the training data, the output of the training being then needed to tokenize test data. Users can retrieve such files through artifacts, by defining correspondancies between Corpora/Tag pairs and custom filenames to which they want to save their files. See [simple_transformer](https://gitlab.com/mehdidou99/AutONMT-tf/-/blob/main/examples/pipelines/simple_transformer.yml) for a concrete example.\n\n### AutONMT-tf blocks\n\n#### Data Query\n\nThe `data_query` can load data from several corpora following a query. Only one kind of query is currently supported, here is an example from [simple_transformer](https://gitlab.com/mehdidou99/AutONMT-tf/-/blob/main/examples/pipelines/simple_transformer.yml) :\n\n```yaml\ndata_query_train:\n    search_root: data/multilingual\n    subpaths:\n        Tatoeba: 'Tatoeba/Tatoeba'\n        GlobalVoices: 'GlobalVoices/GlobalVoices'\n        NewsCommentary: 'NewsCommentary/News-Commentary'\n        TED2013: 'TED2013/TED2013'\n    query:\n        src_lgs:\n            - fr\n        tgt_lgs:\n            - en\n        max_entries: 1000000\n        options:\n            - try_reversed_lg_pairs\n```\n\nIn order to be found by this kind of queries, corpus files must be named with the following convention : `<subpath>.<src>-<tgt>.<src or tgt>`\n\nFor example, for Tatoeba in the preceding example: `Tatoeba/Tatoeba.fr-en.fr` and `Tatoeba/Tatoeba.fr-en.fr`.\n\nIf the `try_reversed_lg_pairs` option is active, source and target languages can be reversed in the suffix. *e.g* : `Tatoeba/Tatoeba.en-fr.fr` and `Tatoeba/Tatoeba.en-fr.fr`.\n\nOther query types will be added in a future version, allowing for less rigid naming conventions.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mehdidou99/AutONMT-tf",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "AutONMT-tf",
    "package_url": "https://pypi.org/project/AutONMT-tf/",
    "platform": "",
    "project_url": "https://pypi.org/project/AutONMT-tf/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mehdidou99/AutONMT-tf/issues",
      "Homepage": "https://github.com/mehdidou99/AutONMT-tf"
    },
    "release_url": "https://pypi.org/project/AutONMT-tf/0.1.2/",
    "requires_dist": [
      "PyYAML"
    ],
    "requires_python": ">=3.7",
    "summary": "A configuration tool designed to simplify the creation of complete OpenNMT-tf pipelines",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11051114,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d1691b564b6652598625b82452e257a2195ce32129d18a22034cd8fca231ee0",
          "md5": "0d22c878bc10260abed3da7fbb05b2b7",
          "sha256": "a286bf9bb3e989222ae83f23f654421c2095097fe9941bd36ba70aa33ac59ed9"
        },
        "downloads": -1,
        "filename": "AutONMT_tf-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d22c878bc10260abed3da7fbb05b2b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20896,
        "upload_time": "2021-07-30T12:13:38",
        "upload_time_iso_8601": "2021-07-30T12:13:38.900576Z",
        "url": "https://files.pythonhosted.org/packages/3d/16/91b564b6652598625b82452e257a2195ce32129d18a22034cd8fca231ee0/AutONMT_tf-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af036d63c8848eb1c40fc6a9b7758ffe01b00f7a02d55bd36ec6493ca7ac505b",
          "md5": "0891f3af41e8cfb31e49c15be476548f",
          "sha256": "249f8c21c566e7378f112ba2db4c4e196f07b357a9daabf4de7926e72f93d405"
        },
        "downloads": -1,
        "filename": "AutONMT-tf-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0891f3af41e8cfb31e49c15be476548f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15748,
        "upload_time": "2021-07-30T12:13:40",
        "upload_time_iso_8601": "2021-07-30T12:13:40.189875Z",
        "url": "https://files.pythonhosted.org/packages/af/03/6d63c8848eb1c40fc6a9b7758ffe01b00f7a02d55bd36ec6493ca7ac505b/AutONMT-tf-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6181748abcb38da2503074cd5a61870cf56cfdf94182957001ed1a4327f6e824",
          "md5": "bb441d75d7c1892671da648b8f5bfa4e",
          "sha256": "020ea02405fb4fb67d3d58d3afe7771fcd6301cc64af0fbd4bcf65ac14c0a801"
        },
        "downloads": -1,
        "filename": "AutONMT_tf-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb441d75d7c1892671da648b8f5bfa4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20940,
        "upload_time": "2021-07-30T12:42:27",
        "upload_time_iso_8601": "2021-07-30T12:42:27.146602Z",
        "url": "https://files.pythonhosted.org/packages/61/81/748abcb38da2503074cd5a61870cf56cfdf94182957001ed1a4327f6e824/AutONMT_tf-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19f9cb4b7b8a34b9d90026808672629fa684ebf8f505bd2e19730627d5060312",
          "md5": "1160abe93f6e331d41fb06735cd461b3",
          "sha256": "8f5f661bcda1816fab69fb27209ae3f674481ba6632a88d10fed424adf077558"
        },
        "downloads": -1,
        "filename": "AutONMT-tf-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1160abe93f6e331d41fb06735cd461b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15796,
        "upload_time": "2021-07-30T12:42:28",
        "upload_time_iso_8601": "2021-07-30T12:42:28.350679Z",
        "url": "https://files.pythonhosted.org/packages/19/f9/cb4b7b8a34b9d90026808672629fa684ebf8f505bd2e19730627d5060312/AutONMT-tf-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "235a7631fdfc9988f9154074aa7dbd87f987b0821991ed3b6d994369bcc67bea",
          "md5": "72cdf63ac32bef272bd6c9156b92f289",
          "sha256": "0c438c6985d15731de04902cd36303bcb3035fde95ee5fcbd3c9925040f94d3f"
        },
        "downloads": -1,
        "filename": "AutONMT_tf-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72cdf63ac32bef272bd6c9156b92f289",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 21456,
        "upload_time": "2021-07-30T14:43:15",
        "upload_time_iso_8601": "2021-07-30T14:43:15.491802Z",
        "url": "https://files.pythonhosted.org/packages/23/5a/7631fdfc9988f9154074aa7dbd87f987b0821991ed3b6d994369bcc67bea/AutONMT_tf-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48f7a51b43b7708c1ab837d1a9d8d6d3c576ccbb3f1efb82a5de85fd9b7284cb",
          "md5": "7a2b8b0781955e0f7473359333d2eeef",
          "sha256": "2f04d5c8b9b06e72ffed5003bf8e82c567a376c69d0c34c2956bc3f0d39c3a06"
        },
        "downloads": -1,
        "filename": "AutONMT-tf-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7a2b8b0781955e0f7473359333d2eeef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16290,
        "upload_time": "2021-07-30T14:43:16",
        "upload_time_iso_8601": "2021-07-30T14:43:16.406168Z",
        "url": "https://files.pythonhosted.org/packages/48/f7/a51b43b7708c1ab837d1a9d8d6d3c576ccbb3f1efb82a5de85fd9b7284cb/AutONMT-tf-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "235a7631fdfc9988f9154074aa7dbd87f987b0821991ed3b6d994369bcc67bea",
        "md5": "72cdf63ac32bef272bd6c9156b92f289",
        "sha256": "0c438c6985d15731de04902cd36303bcb3035fde95ee5fcbd3c9925040f94d3f"
      },
      "downloads": -1,
      "filename": "AutONMT_tf-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "72cdf63ac32bef272bd6c9156b92f289",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 21456,
      "upload_time": "2021-07-30T14:43:15",
      "upload_time_iso_8601": "2021-07-30T14:43:15.491802Z",
      "url": "https://files.pythonhosted.org/packages/23/5a/7631fdfc9988f9154074aa7dbd87f987b0821991ed3b6d994369bcc67bea/AutONMT_tf-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48f7a51b43b7708c1ab837d1a9d8d6d3c576ccbb3f1efb82a5de85fd9b7284cb",
        "md5": "7a2b8b0781955e0f7473359333d2eeef",
        "sha256": "2f04d5c8b9b06e72ffed5003bf8e82c567a376c69d0c34c2956bc3f0d39c3a06"
      },
      "downloads": -1,
      "filename": "AutONMT-tf-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7a2b8b0781955e0f7473359333d2eeef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 16290,
      "upload_time": "2021-07-30T14:43:16",
      "upload_time_iso_8601": "2021-07-30T14:43:16.406168Z",
      "url": "https://files.pythonhosted.org/packages/48/f7/a51b43b7708c1ab837d1a9d8d6d3c576ccbb3f1efb82a5de85fd9b7284cb/AutONMT-tf-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}