{
  "info": {
    "author": "DL1DH Team",
    "author_email": "d.nieto@ucm.es",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "DL1 Data Handler\n================\n\n\n.. image:: https://zenodo.org/badge/72042185.svg\n   :target: https://zenodo.org/badge/latestdoi/72042185\n   :alt: DOI\n\n\n.. image:: https://travis-ci.org/cta-observatory/dl1-data-handler.svg?branch=master\n   :target: https://travis-ci.org/cta-observatory/dl1-data-handler.svg?branch=master\n   :alt: build status\n\n\n.. image:: https://anaconda.org/ctlearn-project/dl1_data_handler/badges/installer/conda.svg\n   :target: https://anaconda.org/ctlearn-project/dl1_data_handler/\n   :alt: Anaconda-Server Badge\n\n\n.. image:: https://img.shields.io/pypi/v/dl1-data-handler\n    :target: https://pypi.org/project/dl1-data-handler/\n    :alt: Latest Release\n\n\n.. image:: https://coveralls.io/repos/github/cta-observatory/dl1-data-handler/badge.svg?branch=master\n   :target: https://coveralls.io/github/cta-observatory/dl1-data-handler?branch=master\n   :alt: Coverage Status\n\n\nA package of utilities for writing (deprecated), reading, and applying image processing to `Cherenkov Telescope Array (CTA) <https://www.cta-observatory.org/>`_ DL1 data (calibrated images) in a standardized format. Created primarily for testing machine learning image analysis techniques on IACT data.\n\nCurrently supports data in the CTA pyhessio sim_telarray format, with the possibility of supporting other IACT data formats in the future. Built using ctapipe and PyTables.\n\nPreviously named image-extractor (v0.1.0 - v0.6.0). Currently under development, intended for internal use only.\n\nData Format\n-----------\n\n[Deprecated] DL1DataWriter implements a standardized format for storing simulated CTA DL1 event data into Pytables files. CTAMLDataDumper is the class which implements the conversion from ctapipe containers to the CTA ML data format. See the wiki page `here <https://github.com/cta-observatory/dl1-data-handler/wiki/CTA-ML-Data-Format>`_ for a full description of this data format and an FAQ.\n\nctapipe process tool should be used instead.\n\nInstallation\n------------\n\nThe following installation method (for Linux) is recommended:\n\nInstalling as a conda package\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nTo install dl1-data-handler as a conda package, first install Anaconda by following the instructions here: https://www.anaconda.com/distribution/.\n\nThe following command will set up a conda virtual environment, add the\nnecessary package channels, and install dl1-data-handler specified version and its dependencies:\n\n.. code-block:: bash\n\n   DL1DH_VER=0.10.9\n   wget https://raw.githubusercontent.com/cta-observatory/dl1-data-handler/v$DL1DH_VER/environment.yml\n   conda env create -n [ENVIRONMENT_NAME] -f environment.yml\n   conda activate [ENVIRONMENT_NAME]\n   conda install -c ctlearn-project dl1_data_handler=$DL1DH_VER\n\nThis should automatically install all dependencies (NOTE: this may take some time, as by default MKL is included as a dependency of NumPy and it is very large).\n\nIf you want to import any functionality from dl1-data-handler into your own Python scripts, then you are all set. However, if you wish to make use of any of the scripts in dl1-data-handler/scripts (like write_data.py), you should also clone the repository locally and checkout the corresponding tag (i.e. for version v0.10.9):\n\n.. code-block:: bash\n\n   git clone https://github.com/cta-observatory/dl1-data-handler.git\n   git checkout v0.10.9\n\ndl1-data-handler should already have been installed in your environment by Conda, so no further installation steps (i.e. with setuptools or pip) are necessary and you should be able to run scripts/write_data.py directly.\n\nDependencies\n------------\n\nThe main dependencies are:\n\n\n* PyTables >= 3.7\n* NumPy >= 1.16.0\n* ctapipe == 0.17.0\n\nAlso see setup.py.\n\nUsage\n-----\n\n[Deprecated] DL1DataWriter\n^^^^^^^^^^^^^^^^^^^^^^^^^^\nThe DL1DataWriter is not supported by the default installation. Please follow the custom installation instructions:\n\n.. code-block:: bash\n\n   git clone https://github.com/cta-observatory/dl1-data-handler.git\n   git checkout magic # for MAGIC data\n   conda env create -n [ENVIRONMENT_NAME] -f environment-magic.yml\n   conda activate [ENVIRONMENT_NAME]\n   python setup_magic.py install\n\nFrom the Command Line:\n~~~~~~~~~~~~~~~~~~~~~~\n\nTo process data files into a desired format:\n\n.. code-block:: bash\n\n   dl1dh-write_data [runlist] [--config_file,-c CONFIG_FILE_PATH] [--output_dir,-o OUTPUT_DIR] [--debug]\n\non the command line.\n\nex:\n\n.. code-block:: bash\n\n   dl1dh-write_data runlist.yml -c example_config.yml --debug\n\n\n* runlist - A YAML file containing groups of input files to load data from and output files to write to. See example runlist for format.\n* config_file - The path to a YAML configuration file specifying all of the settings for data loading and writing. See example config file and documentation for details on each setting. If none is provided, default settings are used for everything.\n* output_dir - Path to directory to write all output files to. If not provided, defaults to the current directory.\n* debug - Optional flag to print additional debug information from the logger.\n\nIn a Python script:\n~~~~~~~~~~~~~~~~~~~\n\nIf the package was installed with pip as described above, you can import and use it in Python like:\n\nex:\n\n.. code-block:: python\n\n   from dl1_data_handler import dl1_data_writer\n\n   event_source_class = MyEventSourceClass\n   event_source_settings = {'setting1': 'value1'}\n\n   data_dumper_class = MyDataDumperClass\n   data_dumper_settings = {'setting2': 'value2'}\n\n   def my_cut_function(event):\n       # custom cut logic here\n       return True\n\n   data_writer = dl1_data_writer.DL1DataWriter(event_source_class=event_source_class,\n       event_source_settings=event_source_settings,\n       data_dumper_class=data_dumper_class,\n       data_dumper_settings=dumper_settings,\n       preselection_cut_function=my_cut_function,\n       output_file_size=10737418240,\n       events_per_file=500)\n\n   run_list = [\n    {'inputs': ['file1.simtel.gz', 'file2.simtel.gz'],\n     'target': 'output.h5'}\n   ]\n\n   data_writer.process_data(run_list)\n\nGenerating a run list\n~~~~~~~~~~~~~~~~~~~~~\n\nIf processing data from simtel.gz files, as long as their filenames have the format ``[particle_type]_[ze]deg_[az]deg_run[run_number]___[production info].simtel.gz`` or ``[particle_type]_[ze]deg_[az]deg_run[run_number]___[production info]_cone[cone_num].simtel.gz`` the dl1dh-generate_runlist can be used to automatically generate a runlist in the correct format. The script can also generate a run list with the MAGIC-MARS superstar files.\n\nIt can be called as:\n\n.. code-block:: bash\n\n   dl1dh-generate_runlist [file_dir] [--num_inputs_per_run,-n NUM_INPUTS_PER_RUN] [--output_file_name,-f OUTPUT_FILE_NAME] [--output_dir,-o OUTPUT_DIR]\n\n\n* file_dir - Path to a directory containing simtel.gz files with the filename format specified above.\n* num_inputs_per_run - Number of input files with the same particle type, ze, az, and production info to group together into each run (defaults to 10).\n* output_file - Path/filename of output runlist file without a postfix. Defaults to ./runlist\n* output_dir - Path where to save generated files. By default, the input directory is used.\n\nIt will automatically sort the simtel files in the file_dir directory into groups with matching particle_type, zenith, azimuth, and production parameters. Within each of these groups, it will group together input files in sequential order into runs of size NUM_INPUTS_PER_RUN. The output filename for each run will be automatically generated as ``[particle_type]_[ze]deg_[az]deg_runs[run_number_range]___[production info].h5``. The output YAML file will be written to output_file.\n\nImageMapper\n^^^^^^^^^^^\n\nThe ImageMapper class transforms the hexagonal input pixels into a 2D Cartesian output image. The basic usage is demonstrated in the `ImageMapper tutorial <https://github.com/cta-observatory/dl1-data-handler/blob/master/notebooks/test_image_mapper.ipynb>`_. It requires `ctapipe-extra <https://github.com/cta-observatory/ctapipe-extra>`_ outside of the dl1-data-handler. See this publication for a detailed description: `arXiv:1912.09898 <https://arxiv.org/abs/1912.09898>`_\n\nOther scripts\n^^^^^^^^^^^^^\n\nAll other scripts located in the scripts/deprecated directory are not currently updated to be compatible with dl1-data-handler >= 0.7.0 and should not be used.\n\nExamples/Tips\n-------------\n\n* Vitables is very helpful for viewing and debugging PyTables-style HDF5 files. Installation/download instructions can be found in the link below.\n\nKnown Issues/Troubleshooting\n----------------------------\n\nLinks\n-----\n\n\n* `Cherenkov Telescope Array (CTA) <https://www.cta-observatory.org/>`_ - Homepage of the CTA collaboration \n* `CTLearn <https://github.com/ctlearn-project/ctlearn/>`_ and `GammaLearn <https://gitlab.lapp.in2p3.fr/GammaLearn/GammaLearn>`_ - Repository of code for studies on applying deep learning to IACT analysis tasks. Maintained by groups at Columbia University, Universidad Complutense de Madrid, Barnard College (CTLearn) and LAPP (GammaLearn).\n* `ctapipe <https://cta-observatory.github.io/ctapipe/>`_ - Official documentation for the ctapipe analysis package (in development)\n* `ViTables <http://vitables.org/>`_ - Homepage for ViTables application for Pytables HDF5 file visualization\n\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/cta-observatory/dl1-data-handler",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dl1-data-handler",
    "package_url": "https://pypi.org/project/dl1-data-handler/",
    "platform": null,
    "project_url": "https://pypi.org/project/dl1-data-handler/",
    "project_urls": {
      "Homepage": "http://github.com/cta-observatory/dl1-data-handler"
    },
    "release_url": "https://pypi.org/project/dl1-data-handler/0.10.9/",
    "requires_dist": [
      "numpy (>1.16)",
      "astropy",
      "ctapipe (==0.17.0)",
      "traitlets (>=5.0)",
      "jupyter",
      "pandas",
      "pytest-cov",
      "tables (>=3.7)"
    ],
    "requires_python": "",
    "summary": "dl1 HDF5 data writer + reader + processor",
    "version": "0.10.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16485374,
  "releases": {
    "0.10.1.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8447ac2f3966bbd9603f523aa7b5c714ced39c0c49359822e933e98ed4bc385f",
          "md5": "78f2e8fc1fd339804925eada0932f2ce",
          "sha256": "ad23a1a7bb2dd5e2c24543295daa95cac484950a1ba4579d65c91aba58b325f8"
        },
        "downloads": -1,
        "filename": "dl1_data_handler-0.10.1.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78f2e8fc1fd339804925eada0932f2ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 58824,
        "upload_time": "2022-01-13T12:21:12",
        "upload_time_iso_8601": "2022-01-13T12:21:12.824141Z",
        "url": "https://files.pythonhosted.org/packages/84/47/ac2f3966bbd9603f523aa7b5c714ced39c0c49359822e933e98ed4bc385f/dl1_data_handler-0.10.1.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e07c47a7e9555d28db70c280ba8aea3db228c87a4fa8015754f5425efbba688e",
          "md5": "9cf11b2fc86012de41e228f45540d501",
          "sha256": "3184220d8cb80772e1e0c015bfb8826cf05ac030034fdb976b59c678fe04bc1b"
        },
        "downloads": -1,
        "filename": "dl1_data_handler-0.10.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9cf11b2fc86012de41e228f45540d501",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 58800,
        "upload_time": "2022-01-14T10:21:23",
        "upload_time_iso_8601": "2022-01-14T10:21:23.080359Z",
        "url": "https://files.pythonhosted.org/packages/e0/7c/47a7e9555d28db70c280ba8aea3db228c87a4fa8015754f5425efbba688e/dl1_data_handler-0.10.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38e251d86e545edfe25802ad36f53a319a8aaed537c8b0be2e8c02688e280cc0",
          "md5": "92f3d5634318a6712d356f5813a68ed9",
          "sha256": "2369d001f79e04be355d5f1dcf31a5d5d989b2fefd3d2063b5ee961b63d20d07"
        },
        "downloads": -1,
        "filename": "dl1_data_handler-0.10.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92f3d5634318a6712d356f5813a68ed9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 58755,
        "upload_time": "2022-01-20T15:13:55",
        "upload_time_iso_8601": "2022-01-20T15:13:55.323656Z",
        "url": "https://files.pythonhosted.org/packages/38/e2/51d86e545edfe25802ad36f53a319a8aaed537c8b0be2e8c02688e280cc0/dl1_data_handler-0.10.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f52820f7e9216f4aa3bb9309c66700ecffe2ec622c8bb7c8ccbdbb8293914e4d",
          "md5": "b8ec986a2d5c791a85c06116b54049a5",
          "sha256": "217cd2a08f0a3951cae28a7fd6591bd5dfff3c8af550a1e01ecfb46b6b8237d0"
        },
        "downloads": -1,
        "filename": "dl1_data_handler-0.10.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8ec986a2d5c791a85c06116b54049a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 58197,
        "upload_time": "2022-02-01T16:38:31",
        "upload_time_iso_8601": "2022-02-01T16:38:31.297272Z",
        "url": "https://files.pythonhosted.org/packages/f5/28/20f7e9216f4aa3bb9309c66700ecffe2ec622c8bb7c8ccbdbb8293914e4d/dl1_data_handler-0.10.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6889a485bc0dda2f4c5f573f5364a09e698824a4bdabbc859756a66312c1861a",
          "md5": "3e12d5df744626e6d2f7ff2d12172a1b",
          "sha256": "272717e21e8051a0bf194fc2be1d36704e7132cb42cbeeaa6b0254ad26440aed"
        },
        "downloads": -1,
        "filename": "dl1_data_handler-0.10.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e12d5df744626e6d2f7ff2d12172a1b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 59336,
        "upload_time": "2022-03-29T09:56:49",
        "upload_time_iso_8601": "2022-03-29T09:56:49.673611Z",
        "url": "https://files.pythonhosted.org/packages/68/89/a485bc0dda2f4c5f573f5364a09e698824a4bdabbc859756a66312c1861a/dl1_data_handler-0.10.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "844dea490e6a74e659c05e3cac94864cd00a71898be5746a58596070a0ba307c",
          "md5": "0ce28282a9a75474ee12f59efe2aafaf",
          "sha256": "31e9dd2911c86968e8bea63693d7f33582a128c7c95661392530ecae026db86e"
        },
        "downloads": -1,
        "filename": "dl1_data_handler-0.10.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ce28282a9a75474ee12f59efe2aafaf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 59353,
        "upload_time": "2022-05-10T15:41:12",
        "upload_time_iso_8601": "2022-05-10T15:41:12.885442Z",
        "url": "https://files.pythonhosted.org/packages/84/4d/ea490e6a74e659c05e3cac94864cd00a71898be5746a58596070a0ba307c/dl1_data_handler-0.10.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c60d2755d7e2530a8eac2e718bd45b58de8973582237f24b00c773f1ffab3830",
          "md5": "167581860bc336bbbdc94eb3e43b828e",
          "sha256": "d7800ed7b9575759e88819019dc47905aebfa1b02778b3dd4478b79b14849085"
        },
        "downloads": -1,
        "filename": "dl1_data_handler-0.10.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "167581860bc336bbbdc94eb3e43b828e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 61855,
        "upload_time": "2022-07-11T11:57:21",
        "upload_time_iso_8601": "2022-07-11T11:57:21.470161Z",
        "url": "https://files.pythonhosted.org/packages/c6/0d/2755d7e2530a8eac2e718bd45b58de8973582237f24b00c773f1ffab3830/dl1_data_handler-0.10.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1313dca11d03cbfc83394e13e393216a83b9b91c27db83c62371856a97f987d9",
          "md5": "e3000a36a8a5999f130f65d8c5f33c14",
          "sha256": "1386fef07c8f8b4c71b550765935ed24db1423e82ef35f0c749b8c1b4318a1d3"
        },
        "downloads": -1,
        "filename": "dl1_data_handler-0.10.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3000a36a8a5999f130f65d8c5f33c14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 61808,
        "upload_time": "2022-09-06T14:12:32",
        "upload_time_iso_8601": "2022-09-06T14:12:32.114376Z",
        "url": "https://files.pythonhosted.org/packages/13/13/dca11d03cbfc83394e13e393216a83b9b91c27db83c62371856a97f987d9/dl1_data_handler-0.10.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74d08499ef3c9c1a0ea46ba58788e644831b43e46097c11f9539467cda082820",
          "md5": "cd57e84fe23e6513b6498304acc36c7d",
          "sha256": "60275145b326d320524df37bc45dbc6ecd4a9bb6c10bf63f9629353a54982326"
        },
        "downloads": -1,
        "filename": "dl1_data_handler-0.10.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd57e84fe23e6513b6498304acc36c7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 61844,
        "upload_time": "2023-01-19T09:32:50",
        "upload_time_iso_8601": "2023-01-19T09:32:50.226204Z",
        "url": "https://files.pythonhosted.org/packages/74/d0/8499ef3c9c1a0ea46ba58788e644831b43e46097c11f9539467cda082820/dl1_data_handler-0.10.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74d08499ef3c9c1a0ea46ba58788e644831b43e46097c11f9539467cda082820",
        "md5": "cd57e84fe23e6513b6498304acc36c7d",
        "sha256": "60275145b326d320524df37bc45dbc6ecd4a9bb6c10bf63f9629353a54982326"
      },
      "downloads": -1,
      "filename": "dl1_data_handler-0.10.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cd57e84fe23e6513b6498304acc36c7d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 61844,
      "upload_time": "2023-01-19T09:32:50",
      "upload_time_iso_8601": "2023-01-19T09:32:50.226204Z",
      "url": "https://files.pythonhosted.org/packages/74/d0/8499ef3c9c1a0ea46ba58788e644831b43e46097c11f9539467cda082820/dl1_data_handler-0.10.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}