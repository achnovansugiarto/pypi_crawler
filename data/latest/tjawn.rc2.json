{
  "info": {
    "author": "tjkopena",
    "author_email": "tjkopena@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11"
    ],
    "description": "# tjawn <img src=\"https://github.com/tjkopena/tjawn/raw/main/docs/shark.png\" height=\"50\" title=\"tjawn\" alt='Drawing of a shark thrusting out of the water and growling \"Rwaa rwaa, rwaa rwaa!\" as it tries to eat you.' style=\"vertical-align: middle\" />\n\nThis is an implementation of *jawns*, a human friendly lightweight\nobject notation.  A jawn is a Python dict literal or a slight superset\nof JSON but with more flexible formatting. An example:\n\n```\nprotocol: 1.0,\ntoken: 854c37ee-517c-4ba6-b56b-06475ad24041\nconn: {\n    offer= { 'TLS1.2', TLS1.3  \"TLS 1.17\" }\n    \"dns:resolver\" = 10.0.0.1\n    cert: \"\"\"\n        -----BEGIN CERTIFICATE-----\n        MIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL\n        MAkGA1UECBMCUE4xCzAJBgNVBAcTAkNOMQswCQYDVQQKEwJPTjELMAkGA1UECxMC\n        VU4xFDASBgNVBAMTC0hlcm9uZyBZYW5nMB4XDTA1MDcxNTIxMTk0N1oXDTA1MDgx\n            ...\n    \"\"\"\n}\n```\n\nWhich parses to the equivalent of this Python literal:\n```python\n{\n    \"protocol\": 1.0,\n    \"token\": \"854c37ee-517c-4ba6-b56b-06475ad24041\",\n    \"conn\": {\n        \"offer\": {\"TLS1.2\", \"TLS1.3\",  \"TLS 1.17\"},\n        \"dns:resolver\": \"10.0.0.1\",\n        \"cert\": \"\"\"-----BEGIN CERTIFICATE-----\nMIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL\nMAkGA1UECBMCUE4xCzAJBgNVBAcTAkNOMQswCQYDVQQKEwJPTjELMAkGA1UECxMC\nVU4xFDASBgNVBAMTC0hlcm9uZyBZYW5nMB4XDTA1MDcxNTIxMTk0N1oXDTA1MDgx\n    ...\"\"\"\n    }\n}\n```\n\nSome features to call out:\n* Identifier-styled strings do not need to be quoted (for both keys & values).\n* Single or double quotes can be used interchangeably (in matched pairs).\n* Multi-line text _can_ have whitespace stripped while preserving relative indentation.\n* Key/value pairs are denoted by either ':' or '=' as you wish.\n* Commas are largely optional but permitted (i.e., allowed on closing elements).\n* Objects, sets, and lists are delimited by brackets, not whitespace.\n* Sets are supported.\n\n> _\"jawn?\"_\n\nJSON Alternative Written Notation?\\\nJoe's Awesome Wacky ... Notation?\\\n[Don't think about it too hard.](https://en.wikipedia.org/wiki/Jawn)\n\n\n> _\"But why?\"_\n\nI (tjkopena) find it _almost_ convenient to write simple config files\nor parameter sets and so on in JSON.  I don't implement such often\nenough to bother to remember how to format TOML or YAML or whateverML,\nand in any event I dislike their whitespace-based formatting, nesting,\nand other aspects.  I know JSON, use it all the time, I just want to\nwrite a little object file in it.  But it's _not actually_ convenient\nto do so because JSON is a picky, pedantic pain in the ass---double\nquotes on everything, no trailing commas, blah blah blah GTFO. Hence\njawns, a similarly simple, straightforward object model and syntax\nthat's not too fussed about the details.\n\n\n## jawns\n\nQuick outline of jawns as I'm getting tired of writing these notes---\n\nA jawn is a mapping (dictionary) of zero or more key/value pairs.\\\nKey/value pair elements are separated by colons or equals.\\\nKey/value pairs can be separated by commas or not, and a trailing comma is permitted.\n```\na: 1\nb = 2\n```\n\nKeys are strings (quoted or bare, see below).\n\nValues are null, true, false, numbers, strings, texts, lists, sets, or nested jawns.\n\nNull, true, and false are case-insensitive.\n```\na: null\nb: nULl\nc: true\nd: FALSE\n```\n\nNumbers are signed floats in decimal or exponential notation.\n```\na = 1\nb = 2.0\nc = 3.7e9\n```\n\nStrings consist of quoted strings, bare strings, or http/https URLs.\\\nQuoted strings are denoted by matched double or single quotes and permit linebreaks.\\\nBare strings are a sequence of characters excluding whitespace, quotes, brackets, colons, equals, or commas.\n```\na: \"my string\"\nb: 'my string'\nc: 'a string with\na linebreak'\n\nd: aBareString\ne: a-bare-string\n\nf: https://example.com\ng: http://example.com\n```\n\nTexts are denoted by matched pair of quote triplets (single or double) and permit linebreaks.\\\nLines consisting only of whitespace are removed from the start and end of texts.\\\nAny whitespace at the start of the first non-whitespace line is taken as a prefix and removed from the start of all lines.\n```\na: \"\"\"\n        # Example\n\n        This text looks very nice in the config file.\n          * And the indentations are preserved!\n            Which is super awesome\n\"\"\"\n```\n\nLists are denoted by zero or more values within square brackets.\\\nThe values can be separated by commas or not, and a trailing comma is permitted.\n```\na = [ 1 2 3 4 5, 6, 7, 8,]\nb = [ True \"banana\" { c: \"orange\" }]\nc = [x, y, [1 2 3]]\n```\n\nSets are denoted by one or more values within curly brackets, or a single underscore for empty set.\\\nIt is legal to include multiple equivalent values in the set, but these are collapsed in parsing.\\\nThe values can be separated by commas or not, and a trailing comma is permitted.\n```\na: { \"bananas\" \"oranges\" \"pears\" }\nb: { \"bananas\" \"oranges\" \"pears\" \"bananas\" }\nc: { _ }\n```\n\nNested jawns are delimited by curly brackets.\n```\na: { x: 1, y: 2}\nb: { 'alpha': 3 beta=4 zeta:{a=1, y=2}}\nc: {}\n```\n\nA grammar for jawns in Lark is [in the `src` folder](src/jawn.g).\n\n## Implementations\n\nCurrently tjawn has a Python implementation of jawns. JavaScript\nimplementation is expected in the near future.\n\n### Python\n\n#### Setup\n\ntjawn's Python module has no dependencies.  It is [listed in\nPyPi](https://pypi.org/project/tjawn/) and should be includable in\nall the usual ways.\n\n#### Usage\n\n```\nimport tjawn\n\no = tjawn.loads('a: \"Four score and seven...\"')\nprint(tjawn.dumps(o))\n```\n\n#### Development Notes\n\nInternally, tjawn's Python module is implemented using Lark to\ngenerate the lexer and parser, which are then vendored in the project\nrather than incurring a dependency.  To generate both these:\n\n```bash\npython -m lark.tools.standalone src/jawn.g > src/py/tjawn/lark_parser.py\n```\n\nTests can be run from the `src/py` directory via `pytest`.\n\n\n## License\n\ntjawn is released under MIT-0:\n\n> Copyright 2023 tjkopena\n>\n> Permission is hereby granted, free of charge, to any person\n> obtaining a copy of this software and associated documentation files\n> (the \"Software\"), to deal in the Software without restriction,\n> including without limitation the rights to use, copy, modify, merge,\n> publish, distribute, sublicense, and/or sell copies of the Software,\n> and to permit persons to whom the Software is furnished to do so.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n> EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n> MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n> NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n> BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n> ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n> CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n> SOFTWARE.\n\n[Shark icon](https://thenounproject.com/icon/shark-1257563/) by Luis Prado for The Noun Project, CCBY3.0.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tjawn",
    "package_url": "https://pypi.org/project/tjawn/",
    "platform": null,
    "project_url": "https://pypi.org/project/tjawn/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/tjawn/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.10,<4.0",
    "summary": "Human friendly lightweight object notation.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16823514,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0473c6ffb10e83c09268b980eae162bb7797ffe276d7942680ed072e9d5b83e",
          "md5": "a4de6f132cd49fa2790401daf28fcdc1",
          "sha256": "f79fbc84f252d4603ef77d5a645b7c35503f945e5ed62cd77e8169bd9724ea1d"
        },
        "downloads": -1,
        "filename": "tjawn-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a4de6f132cd49fa2790401daf28fcdc1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 30906,
        "upload_time": "2023-02-10T08:08:41",
        "upload_time_iso_8601": "2023-02-10T08:08:41.720792Z",
        "url": "https://files.pythonhosted.org/packages/f0/47/3c6ffb10e83c09268b980eae162bb7797ffe276d7942680ed072e9d5b83e/tjawn-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96182c873fa278348406667b1a347b34378a7f5280f43eb7d81b40204ba77c7b",
          "md5": "ee3d947e5c4152998397379c462ffc51",
          "sha256": "c8b14fa15ecc6d356769d05354e49c94989bc37055a467e7de2804c18d86a9c7"
        },
        "downloads": -1,
        "filename": "tjawn-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ee3d947e5c4152998397379c462ffc51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 29770,
        "upload_time": "2023-02-10T08:08:43",
        "upload_time_iso_8601": "2023-02-10T08:08:43.452777Z",
        "url": "https://files.pythonhosted.org/packages/96/18/2c873fa278348406667b1a347b34378a7f5280f43eb7d81b40204ba77c7b/tjawn-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16bf1a6085fec9e6cd1e83c261bdb5147bc44c6a38694b3ff0254b39604e9262",
          "md5": "adbd12420a5b8b50ec84549e7d260d77",
          "sha256": "94949598250675a69458135dbccc7487dc5ab7e17c08b43ebd64b944d4511c2a"
        },
        "downloads": -1,
        "filename": "tjawn-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "adbd12420a5b8b50ec84549e7d260d77",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 33064,
        "upload_time": "2023-02-12T15:15:09",
        "upload_time_iso_8601": "2023-02-12T15:15:09.893386Z",
        "url": "https://files.pythonhosted.org/packages/16/bf/1a6085fec9e6cd1e83c261bdb5147bc44c6a38694b3ff0254b39604e9262/tjawn-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6ceebd6180e9d661692b0ae66522a4685920f830e141ecafc9ad3a30c7d6d53",
          "md5": "338d4d3bfb31735097e3ed3619c2f4e0",
          "sha256": "466f03578fb84ec9459d21d0cb644527e375f13c0624d829db6065435d2854ae"
        },
        "downloads": -1,
        "filename": "tjawn-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "338d4d3bfb31735097e3ed3619c2f4e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 35538,
        "upload_time": "2023-02-12T15:15:11",
        "upload_time_iso_8601": "2023-02-12T15:15:11.023912Z",
        "url": "https://files.pythonhosted.org/packages/a6/ce/ebd6180e9d661692b0ae66522a4685920f830e141ecafc9ad3a30c7d6d53/tjawn-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "16bf1a6085fec9e6cd1e83c261bdb5147bc44c6a38694b3ff0254b39604e9262",
        "md5": "adbd12420a5b8b50ec84549e7d260d77",
        "sha256": "94949598250675a69458135dbccc7487dc5ab7e17c08b43ebd64b944d4511c2a"
      },
      "downloads": -1,
      "filename": "tjawn-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "adbd12420a5b8b50ec84549e7d260d77",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 33064,
      "upload_time": "2023-02-12T15:15:09",
      "upload_time_iso_8601": "2023-02-12T15:15:09.893386Z",
      "url": "https://files.pythonhosted.org/packages/16/bf/1a6085fec9e6cd1e83c261bdb5147bc44c6a38694b3ff0254b39604e9262/tjawn-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6ceebd6180e9d661692b0ae66522a4685920f830e141ecafc9ad3a30c7d6d53",
        "md5": "338d4d3bfb31735097e3ed3619c2f4e0",
        "sha256": "466f03578fb84ec9459d21d0cb644527e375f13c0624d829db6065435d2854ae"
      },
      "downloads": -1,
      "filename": "tjawn-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "338d4d3bfb31735097e3ed3619c2f4e0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 35538,
      "upload_time": "2023-02-12T15:15:11",
      "upload_time_iso_8601": "2023-02-12T15:15:11.023912Z",
      "url": "https://files.pythonhosted.org/packages/a6/ce/ebd6180e9d661692b0ae66522a4685920f830e141ecafc9ad3a30c7d6d53/tjawn-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}