{
  "info": {
    "author": "Markus Frey",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](http://www.gnu.org/licenses/gpl-3.0)\n![py38 status](https://img.shields.io/badge/python3.8-supported-green.svg)\n![Build Status](https://github.com/DeepMReye/DeepMReye/actions/workflows/main.yml/badge.svg)\n[![NatNeuro Paper](https://img.shields.io/badge/DOI-10.1038%2Fs41593--021--00947--w-blue)](https://doi.org/10.1038/s41593-021-00947-w)\n![Logo](media/deepmreye_logo.png)\n\n# DeepMReye: magnetic resonance-based eye tracking using deep neural networks\nThis [Jupyter Notebook](./notebooks/deepmreye_example_usage.ipynb) provides a step-by-step walkthrough of the code. It includes eyeball coregistration, voxel extraction, model training and test as well as basic performance measures. Alternatively, here is a [Colab Notebook](https://colab.research.google.com/drive/1kYVyierbKdNZ3RY4_pbACtdWEw7PKQuz?usp=sharing).\n\nThis [Data Repository](https://osf.io/mrhk9/) includes exemplary data for model training and test, source data of all paper figures as well as pre-trained model weights.\n\nMoreover, here are additional [User Recommendations](https://deepmreye.slite.com/p/channel/MUgmvViEbaATSrqt3susLZ/notes/kKdOXmLqe) as well as a [Frequently-Asked-Questions (FAQ)](https://deepmreye.slite.com/p/channel/MUgmvViEbaATSrqt3susLZ/notes/sargIAQ6t) page. If you have other questions, please reach out to us.\n\n![deepMReye video](media/deepMReye_video.gif)\n\n## Installation\n\n### Option 1: Pip install\n\n#### Pip installation\nInstall DeepMReye with a CPU/GPU version of [TensorFlow](https://www.tensorflow.org/install/) using the following command.\n```\npip install deepmreye\n```\n\n#### Anaconda / Miniconda installation\n\nTo encapsulate DeepMReye in a virtual environment install with the following commands:\n```\nconda create --name deepmreye python=3.9\nconda activate deepmreye\npip install deepmreye\n```\nThe tensorflow version supports both CPU and GPU instructions. Note that you might need to install cudnn first (conda install -c conda-forge cudnn). \nIf installation of [ANTsPy](https://github.com/ANTsX/ANTsPy) fails try to manually install it via:\n```\ngit clone https://github.com/ANTsX/ANTsPy\ncd ANTsPy\npip install CMake\npython3 setup.py install\n```\n\n### Option 2: Colab\n\nWe provide a [Colab Notebook](https://colab.research.google.com/drive/1kYVyierbKdNZ3RY4_pbACtdWEw7PKQuz?usp=sharing) showcasing model training and evaluation on a GPU provided by Google Colab. To use your own data, preprocess your data locally and upload only the extracted eyeball voxels. This saves space and avoids data privacy issues. See the [Jupyter Notebook](./notebooks/deepmreye_example_usage.ipynb) for the preprocessing and eyeball-extraction code.\n\n[![Model Training & Evaluation](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1kYVyierbKdNZ3RY4_pbACtdWEw7PKQuz?usp=sharing)\n\n![Colab Walkthrough](media/colab_walkthrough.gif)\n\n### Option 3: Docker\n\nBuild the image locally\n\n```bash\ndocker build . -t deepmreye:latest\n```\n\nUse deepMReye in the docker via a jupyterlab:\n\n```bash\nmkdir -p $PWD/notebooks\ndocker run -it --rm \\\n    --publish 8888:8888 \\\n    --volume $PWD/notebooks:/home/neuro/notebooks \\\n    deepmreye:latest \\\n        jupyter-lab --no-browser --ip 0.0.0.0\n```\n\n### Data formats\nThe <u>**fMRI data**</u> should be organized in 4D NIFTI files (.nii), containing the realigned 3D images acquired over time. The pipeline then extracts the eyeball voxels automatically and saves them as Python Pickle files, which serve as model input. For model training, you additionally need <u>**training labels**</u>, a numpy array containing 10 gaze coordinates per functional volume. These gaze coordinates can either be camera-based eye-tracking labels or the coordinates of a fixation target, and many file formats can be easily read (e.g. .npy, .npz, .mat, .csv etc.).\n\nPlease see our [FAQ](https://deepmreye.slite.com/p/channel/MUgmvViEbaATSrqt3susLZ/notes/sargIAQ6t) page for more details on data formats and preprocessing.\n\n## Hardware requirements\n\nThe GPU version of DeepMReye requires a NVIDIA GPU.\n\n## Software requirements\nThe following python dependencies are being automatically installed when installing DeepMReye (specified in requirements.txt):\n```\ntensorflow-gpu (2.2.0)\nnumpy (1.19.1)\npandas (1.0.5)\nmatplotlib (3.2.2)\nscipy (1.5.0)\nipython (7.13.0)\nplotly (4.14.3)\n```\nVersion in parentheses indicate the ones used for testing the framework. Its extensively tested on Linux 16.04 but should run on all OS (Windows, Mac, Linux) supporting a Python version >3.6 and pip. It is recommended to install the framework and dependencies in a virtual environment (e.g. conda). \n\n## Correspondence\nIf you have questions, comments or inquiries, please check out the online [User documention](https://deepmreye.slite.com/api/s/channel/MUgmvViEbaATSrqt3susLZ/DeepMReye%3A%20Documentation) and reach out to us: markus.frey[at]ntnu.no & matthias.nau[at]ntnu.no\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "https://github.com/DeepMReye/DeepMReye",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DeepMReye/DeepMReye",
    "keywords": "",
    "license": "LGPL-3.0",
    "maintainer": "Markus Frey",
    "maintainer_email": "markus.frey1@gmail.com",
    "name": "deepmreye",
    "package_url": "https://pypi.org/project/deepmreye/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/deepmreye/",
    "project_urls": {
      "Download": "https://github.com/DeepMReye/DeepMReye",
      "Homepage": "https://github.com/DeepMReye/DeepMReye"
    },
    "release_url": "https://pypi.org/project/deepmreye/0.1.1/",
    "requires_dist": [
      "numpy",
      "pandas",
      "matplotlib",
      "scipy",
      "plotly",
      "scikit-learn",
      "antspyx",
      "tensorflow",
      "jupyter",
      "sphinx (>=2.0) ; extra == 'all'",
      "sphinx-argparse ; extra == 'all'",
      "sphinx-rtd-theme ; extra == 'all'",
      "flake8 (>=3.7) ; extra == 'all'",
      "flake8-docstrings (>=1.5) ; extra == 'all'",
      "pytest (>=5.3) ; extra == 'all'",
      "pytest-cov ; extra == 'all'",
      "sphinx (>=2.0) ; extra == 'doc'",
      "sphinx-argparse ; extra == 'doc'",
      "sphinx-rtd-theme ; extra == 'doc'",
      "flake8 (>=3.7) ; extra == 'style'",
      "flake8-docstrings (>=1.5) ; extra == 'style'",
      "pytest (>=5.3) ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "flake8 (>=3.7) ; extra == 'test'",
      "flake8-docstrings (>=1.5) ; extra == 'test'"
    ],
    "requires_python": ">=3.8.0",
    "summary": "MR-based eye tracker without eye tracking",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16022610,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d3e7cba224510e535c31942de7690e93c0eec636739cb5dd8e9f5b2f7cdd85f",
          "md5": "563143e07221d4e35fd5a1a89e02a75a",
          "sha256": "a1b02bae65bb69a6173c5e688b8ab1c28a02afbdfdc4c7d9416937d5533edc60"
        },
        "downloads": -1,
        "filename": "deepmreye-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "563143e07221d4e35fd5a1a89e02a75a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0",
        "size": 2870480,
        "upload_time": "2022-12-07T16:40:25",
        "upload_time_iso_8601": "2022-12-07T16:40:25.917242Z",
        "url": "https://files.pythonhosted.org/packages/8d/3e/7cba224510e535c31942de7690e93c0eec636739cb5dd8e9f5b2f7cdd85f/deepmreye-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8d3e7cba224510e535c31942de7690e93c0eec636739cb5dd8e9f5b2f7cdd85f",
        "md5": "563143e07221d4e35fd5a1a89e02a75a",
        "sha256": "a1b02bae65bb69a6173c5e688b8ab1c28a02afbdfdc4c7d9416937d5533edc60"
      },
      "downloads": -1,
      "filename": "deepmreye-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "563143e07221d4e35fd5a1a89e02a75a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.0",
      "size": 2870480,
      "upload_time": "2022-12-07T16:40:25",
      "upload_time_iso_8601": "2022-12-07T16:40:25.917242Z",
      "url": "https://files.pythonhosted.org/packages/8d/3e/7cba224510e535c31942de7690e93c0eec636739cb5dd8e9f5b2f7cdd85f/deepmreye-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}