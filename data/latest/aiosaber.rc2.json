{
  "info": {
    "author": "bakezq",
    "author_email": "zhongquan789@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# A concurrent streaming package\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- Dataflow based functional syntax.\n- Implicitly parallelism for both async and non-async functions.\n- Composable for both flows and tasks.\n- Extensible with middlewares.\n\n## Installation\n\n```bash\npip install aiosaber\n```\n\n## Example\n\n- check [tests](https://github.com/flowsaber/aiosaber/tree/main/tests) for more examples.\n\n```python\nfrom aiosaber import *\n\n@task\ndef add(self, num):\n    for i in range(100000):\n        num += 1\n    return num\n\n@task\nasync def multiply(num1, num2):\n    return num1 * num2\n\n@flow\ndef sub_flow(num):\n    return add(num) | map_(lambda x: x ** 2) | add\n\n@flow\ndef my_flow(num):\n    [sub_flow(num), sub_flow(num)] | multiply | view\n\nnum_ch = Channel.values(*list(range(100)))\nf = my_flow(num_ch)\nasyncio.run(f.start())\n```\n\n## Middleware example\n\n```python\nfrom aiosaber import *\n\nclass NameBuilder(BaseBuilder):\n    def __call__(self, com, *args, **kwargs):\n        super().__call__(com, *args, **kwargs)\n        com.context['name'] = type(com).__name__ + str(id(com))\n\nclass ClientProvider(BaseExecutor):\n    async def __call__(self, com, **kwargs):\n        if not context.context.get('client'):\n            context.context['client'] = 'client'\n        return await super().__call__(com, **kwargs)\n\nclass Filter(BaseHandler):\n    async def __call__(self, com, get, put, **kwargs):\n        async def filter_put(data):\n            if data is END or data > 3:\n                await put(data)\n\n        return await super().__call__(com, get, filter_put, **kwargs)\n\n@task\nasync def add(self, num):\n    print(self.context['name'])\n    print(context.context['client'])\n    return num + 1\n\n@flow\ndef myflow(num_ch):\n    return num_ch | add | view\n\ncontext.context.update({\n    'builders': [NameBuilder],\n    'executors': [ClientProvider],\n    'handlers': [Filter]\n})\nf = myflow(Channel.values(1, 2, 3, 4, 5))\ncontext.context.clear()\nasyncio.run(f.start())\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/flowsaber/aiosaber",
    "keywords": "dataflow,asyncio",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiosaber",
    "package_url": "https://pypi.org/project/aiosaber/",
    "platform": "",
    "project_url": "https://pypi.org/project/aiosaber/",
    "project_urls": {
      "Homepage": "https://github.com/flowsaber/aiosaber"
    },
    "release_url": "https://pypi.org/project/aiosaber/0.0.1.1/",
    "requires_dist": [
      "uvloop",
      "makefun",
      "dask",
      "distributed"
    ],
    "requires_python": ">=3.7, <4",
    "summary": "A concurrent streaming package",
    "version": "0.0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10461263,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "981facd4089f68fcc8e19da3e4f8369b502117491f0b3211340d84fbf8bf0ed7",
          "md5": "c62f33f958af4076ec632a27262cfcf9",
          "sha256": "6e04559c8d6955f3b7f7a88db4eee4e94bf37a2104c45b69d282083104851dec"
        },
        "downloads": -1,
        "filename": "aiosaber-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c62f33f958af4076ec632a27262cfcf9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 27579,
        "upload_time": "2021-05-25T05:29:37",
        "upload_time_iso_8601": "2021-05-25T05:29:37.210410Z",
        "url": "https://files.pythonhosted.org/packages/98/1f/acd4089f68fcc8e19da3e4f8369b502117491f0b3211340d84fbf8bf0ed7/aiosaber-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c994aa0fa6c852fd1bd959596b3029cb3f87f9ecdb3c646573eff99293898ff2",
          "md5": "5ed7dbe11e552f1e95c5369a3d11c2b0",
          "sha256": "f5cc2e603543a0fe719084924dc215388858ca57540162ac3608bdf54dec39c4"
        },
        "downloads": -1,
        "filename": "aiosaber-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ed7dbe11e552f1e95c5369a3d11c2b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 23199,
        "upload_time": "2021-05-25T05:29:38",
        "upload_time_iso_8601": "2021-05-25T05:29:38.804092Z",
        "url": "https://files.pythonhosted.org/packages/c9/94/aa0fa6c852fd1bd959596b3029cb3f87f9ecdb3c646573eff99293898ff2/aiosaber-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91aa68c5ed34a97c50b52037a82f88b800ab9418649ef4ca67285853f9fc3d94",
          "md5": "735c26f76c11f1a816ce4c34f605e173",
          "sha256": "989e1eadc03c2df00e47302aa63046a8e6f19100f01a397bc12ac839af457d44"
        },
        "downloads": -1,
        "filename": "aiosaber-0.0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "735c26f76c11f1a816ce4c34f605e173",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 28052,
        "upload_time": "2021-05-25T07:04:52",
        "upload_time_iso_8601": "2021-05-25T07:04:52.258396Z",
        "url": "https://files.pythonhosted.org/packages/91/aa/68c5ed34a97c50b52037a82f88b800ab9418649ef4ca67285853f9fc3d94/aiosaber-0.0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8bbb7935e165d85cbf8de15cf5fdb9db7987ef1cd80e19303cbe686705ea0af",
          "md5": "eb7a4c3dbb633ec979318e821a413b4a",
          "sha256": "41a7e51c0ce35bb39bca0adb80a6439d665b60e02bc75f5a94326027b7dff613"
        },
        "downloads": -1,
        "filename": "aiosaber-0.0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eb7a4c3dbb633ec979318e821a413b4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 25067,
        "upload_time": "2021-05-25T07:04:53",
        "upload_time_iso_8601": "2021-05-25T07:04:53.495051Z",
        "url": "https://files.pythonhosted.org/packages/b8/bb/b7935e165d85cbf8de15cf5fdb9db7987ef1cd80e19303cbe686705ea0af/aiosaber-0.0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "91aa68c5ed34a97c50b52037a82f88b800ab9418649ef4ca67285853f9fc3d94",
        "md5": "735c26f76c11f1a816ce4c34f605e173",
        "sha256": "989e1eadc03c2df00e47302aa63046a8e6f19100f01a397bc12ac839af457d44"
      },
      "downloads": -1,
      "filename": "aiosaber-0.0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "735c26f76c11f1a816ce4c34f605e173",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 28052,
      "upload_time": "2021-05-25T07:04:52",
      "upload_time_iso_8601": "2021-05-25T07:04:52.258396Z",
      "url": "https://files.pythonhosted.org/packages/91/aa/68c5ed34a97c50b52037a82f88b800ab9418649ef4ca67285853f9fc3d94/aiosaber-0.0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8bbb7935e165d85cbf8de15cf5fdb9db7987ef1cd80e19303cbe686705ea0af",
        "md5": "eb7a4c3dbb633ec979318e821a413b4a",
        "sha256": "41a7e51c0ce35bb39bca0adb80a6439d665b60e02bc75f5a94326027b7dff613"
      },
      "downloads": -1,
      "filename": "aiosaber-0.0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "eb7a4c3dbb633ec979318e821a413b4a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 25067,
      "upload_time": "2021-05-25T07:04:53",
      "upload_time_iso_8601": "2021-05-25T07:04:53.495051Z",
      "url": "https://files.pythonhosted.org/packages/b8/bb/b7935e165d85cbf8de15cf5fdb9db7987ef1cd80e19303cbe686705ea0af/aiosaber-0.0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}