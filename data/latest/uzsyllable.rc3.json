{
  "info": {
    "author": "Ulugbek Salaev",
    "author_email": "ulugbek0302@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# UzMorphAnalyser\n\nhttps://pypi.org/project/UzMorphAnalyser <br>\nhttps://github.com/UlugbekSalaev/UzMorphAnalyser\n\nUzMorpAnalyser tool is focused to make morphological analysis of Uzbek word based on morphemes. The tool includes Stemmer, Lemmatizer, Morphological Analyze methods.\nIt is created as a python library and uploaded to [PyPI](https://pypi.org/). It is simply easy to use in your python project or other programming language projects via the API. \n\n## About project\nThe tool is focused to make morphological analysis of Uzbek word based on morphemes. The tool includes Stemmer, Lemmatizer, Morphological Analyze methods.\n\n## Quick links\n\n- [Github](https://github.com/UlugbekSalaev/UzMorphAnalyser)\n- [PyPI](https://pypi.org/project/UzMorphAnalyser/)\n- [Web-UI](https://nlp.urdu.uz/?menu=morphanalyser)\n\n## Demo\n\nYou can use [web interface](http://nlp.urdu.uz/?menu=morphanalyser).\n\n## Features\n\n- Stemmer\n- Lemmatizer\n- Lemmatizer with POS tag\n- Extract Morphemes list\n- Analyzer\n- Analyzer with POS tag\n\n## Usage\n\nThree options to run UzMorphAnalyser:\n\n- pip\n- API \n- Web interface\n\n### pip installation\n\nTo install UzMorphAnalyser, simply run:\n\n```code\npip install UzMorphAnalyser\n```\n\nAfter installation, use in python like following:\n```yml\n# import the library\nfrom UzMorphAnalyser import UzMorphAnalyser\n# create an object \nanalyzer = UzMorphAnalyser.UzMorphAnalyser()\n# call stem method\nanalyzer.stem('maktabimda')\n# call lemmatize method\nanalyzer.lemmatize('maktabimda')\n# call lemmatize method with POS tag\nanalyzer.lemmatize('maktabimda', analyzer.POS.NOUN)\n# call analyze method\nanalyzer.analyze('maktabimda')\n# call analyze method with POS tag\nanalyzer.analyze('maktabimda', analyzer.POS.NOUN)\n```\n\n### API\nAPI configurations: \n - Method: GET\n - Response type: <code>string</code>\n\n\n - URL: https://uz-translit.herokuapp.com/stem\n   - Parameters: <code>word:string</code></code>\n   - Sample Request: https://uztranslit.herokuapp.com/stem?word=maktabimda\n\n\n - https://uz-translit.herokuapp.com/lemmatize\n   - Parameters: <code>word:string</code>, <code>pos:string</code>\n   - Sample Request: https://uztranslit.herokuapp.com/lemmatize?word=maktabimda&pos=NOUN\n\n\n - https://uz-translit.herokuapp.com/analyze\n   - Parameters: <code>word:string</code>, <code>pos:string</code>\n   - Sample Request: https://uztranslit.herokuapp.com/analyze?word=maktabimda&pos=NOUN\n\n<i>Note: argument <code>pos</code> is optional in all methods</i>\n### Web-UI\n\nThe web interface created to use easily the library:\nYou can use web interface [here](http://nlp.urdu.uz/?menu=morphanalyser).\n\n![Demo image](./docs/images/web-interface-ui.png)\n\n\n### Options\nWhen you use PyPI or API, you should use following options as POS tag of a word which is optional parameters of `lemmatize()` and `analyze()` metods:<br>\n    `NOUN`  Noun<br>\n    `VERB`  Verb<br>\n    `ADJ`   Adjective<br>\n    `NUM`   Numerical<br>\n    `PRN`   Pronoun<br>\n    `ADV`   Adverb\n\n_`pos` parameters is optional for `lemmatize` and `analyze` metods._\n\n### Result Explaining\n\nIt returns single word in a string type from each method, `stem` and `lemmatize`, that is stem and lemma of given word, respectively. \n#### Result from `analyze` method\n`analyze` method returns a response as list of dictionary which is may contain following keys: \n```yml\n {'word', 'lemma', 'pos', 'affix','affixed','tense','person','cases','singular','plural','question','negative','impulsion','copula','verb_voice','verb_func'}: \n```\n\n## Documentation\n\nSee [here](https://github.com/UlugbekSalaev/UzMorphAnalyser).\n\n## Citation\n\n```tex\n@misc{UzMorphAnalyser,\n  title={{UzMorphAnalyser}: Morphological Analyser Tool for Uzbek},\n  url={https://github.com/UlugbekSalaev/UzMorphAnalyser},\n  note={Software available from https://github.com/UlugbekSalaev/UzMorphAnalyser},\n  author={\n    Ulugbek Salaev},\n  year={2022},\n}\n```\n\n## Contact\n\nFor help and feedback, please feel free to contact [the author](https://github.com/UlugbekSalaev).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/UlugbekSalaev/UzSyllable",
    "keywords": "syllable,line-break,uzbek-language",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "UzSyllable",
    "package_url": "https://pypi.org/project/UzSyllable/",
    "platform": null,
    "project_url": "https://pypi.org/project/UzSyllable/",
    "project_urls": {
      "Bug Tracker": "https://github.com/UlugbekSalaev/UzSyllable/issues",
      "Homepage": "https://github.com/UlugbekSalaev/UzSyllable"
    },
    "release_url": "https://pypi.org/project/UzSyllable/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "UzSyllable | The Syllable Separator, Line breaks and Counter for Uzbek Language",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17299585,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8a846acd3b9788802392f7c754b28b7262cea6aeeb469a6680dec00f2e2884c",
          "md5": "a5789a5b2bbc324804e185ccf9c83b8b",
          "sha256": "407bd2775b07b26bcef98505629c8c47076b10f27c98b74fe340056336c87919"
        },
        "downloads": -1,
        "filename": "UzSyllable-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5789a5b2bbc324804e185ccf9c83b8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3496,
        "upload_time": "2023-03-10T06:22:05",
        "upload_time_iso_8601": "2023-03-10T06:22:05.750763Z",
        "url": "https://files.pythonhosted.org/packages/b8/a8/46acd3b9788802392f7c754b28b7262cea6aeeb469a6680dec00f2e2884c/UzSyllable-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00a8bacbac893e80794eae05e2c5df80d8cc66c99f781f83bb7894d8674ff628",
          "md5": "a8d9e877370761c675d69c364c91b3bf",
          "sha256": "4c3c5466dd878f0b68c1558ade6a26b59ba967e5e39705500243360423917166"
        },
        "downloads": -1,
        "filename": "UzSyllable-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8d9e877370761c675d69c364c91b3bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3496,
        "upload_time": "2023-03-10T06:47:40",
        "upload_time_iso_8601": "2023-03-10T06:47:40.371148Z",
        "url": "https://files.pythonhosted.org/packages/00/a8/bacbac893e80794eae05e2c5df80d8cc66c99f781f83bb7894d8674ff628/UzSyllable-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abafc5eb624304e4a98f56606802a9b8100ffbc6795a66cf78e93b2bb237ca23",
          "md5": "89a1aeabf67840c9ca9ff38d25fed1a8",
          "sha256": "10f3545e9219290d46e04113ed4195e752c2db471d1b26bee5030329cd9f0485"
        },
        "downloads": -1,
        "filename": "UzSyllable-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "89a1aeabf67840c9ca9ff38d25fed1a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3702,
        "upload_time": "2023-03-10T06:47:42",
        "upload_time_iso_8601": "2023-03-10T06:47:42.523370Z",
        "url": "https://files.pythonhosted.org/packages/ab/af/c5eb624304e4a98f56606802a9b8100ffbc6795a66cf78e93b2bb237ca23/UzSyllable-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4cbdcfe0ca4ad7987a1975d218c4e0cc6b49422871f117f5133cc9aaa23d3bf",
          "md5": "1974be138db95fe681e56748866c4198",
          "sha256": "fae4218f1aad79218622d0feaf43c2dde098a4b552b470ce9d0feea5608c4ba3"
        },
        "downloads": -1,
        "filename": "UzSyllable-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1974be138db95fe681e56748866c4198",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4636,
        "upload_time": "2023-03-15T05:57:13",
        "upload_time_iso_8601": "2023-03-15T05:57:13.228291Z",
        "url": "https://files.pythonhosted.org/packages/e4/cb/dcfe0ca4ad7987a1975d218c4e0cc6b49422871f117f5133cc9aaa23d3bf/UzSyllable-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4cbdcfe0ca4ad7987a1975d218c4e0cc6b49422871f117f5133cc9aaa23d3bf",
        "md5": "1974be138db95fe681e56748866c4198",
        "sha256": "fae4218f1aad79218622d0feaf43c2dde098a4b552b470ce9d0feea5608c4ba3"
      },
      "downloads": -1,
      "filename": "UzSyllable-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1974be138db95fe681e56748866c4198",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4636,
      "upload_time": "2023-03-15T05:57:13",
      "upload_time_iso_8601": "2023-03-15T05:57:13.228291Z",
      "url": "https://files.pythonhosted.org/packages/e4/cb/dcfe0ca4ad7987a1975d218c4e0cc6b49422871f117f5133cc9aaa23d3bf/UzSyllable-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}