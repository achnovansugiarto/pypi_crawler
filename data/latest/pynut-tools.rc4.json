{
  "info": {
    "author": "Laurent Tupin",
    "author_email": "laurent.tupinn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Free For Home Use",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pynut_tools - Laurent Tupin\r\n\r\nIt provides various functions to simplify the users life. \r\n\r\n\r\n## Installation\r\n\r\nYou can install the package from [PyPI](https://pypi.org/project/pynut-tools/):\r\n\r\n    python -m pip install pynut-tools\r\n\r\nThe package is supported on Python 3.7 and above.\r\n\r\n\r\n\r\n## How to use\r\n\r\n\r\nYou can call a function as this example:\r\n\r\n    $ ----------------------------------------------------\r\n    >>> from pyNutTools import nutDate\r\n    >>> nutDate.fDte_Today()\r\n\r\n\r\nThis is the libraries I am using with the package\r\n\r\n    $ ----------------------------------------------------\r\n    >>> pandas==1.1.3\r\n\r\n\r\n## Documentation\r\n\r\nTemporary documentation for nutDate :\r\n\r\n    from pyNutTools import nutDate as dat\r\n    \r\n    dte_date = dat.fDte_formatToDate(dte_date, str_dateFormat = '%d/%m/%Y')\r\n    \"\"\" fDte_formatToDate makes sure you will have a varable with a date format\r\n        The first Argument is the Variable (date), and the format of the string if it is a sting\r\n        It allows you to avoid testing the type of the variable and get your get Date anyhow\"\"\"\r\n    \r\n    int_dateDiff = dat.fInt_dateDifference(dte_date1, dte_date2)\r\n    \"\"\" fInt_dateDifference give you the difference in days between 2 dates\"\"\"\r\n    \r\n    Date2 = dat.fDte_convertExcelInteger(Date)\r\n    \"\"\" fDte_convertExcelInteger takes an integer as input, \r\n        This is the integer you can find in Excel when it is a date \r\n        And return the associated date  \"\"\"\r\n    \r\n    \r\nTemporary documentation for nutDataframe :\r\n\r\n    from pyNutTools import nutDataframe as dframe\r\n    \r\n    bl_isempty = dframe.fBl_isDataframeEmpty(df_simple)\r\n    \"\"\" Test if a Dataframe is empty\"\"\"\r\n    \r\n    df_simple = dframe.fDf_createSimpleDataframe()\r\n    \"\"\" Create a simple dataframe to make test\"\"\"\r\n    \r\n    bl_compare, df_compare = dframe.fBl_compareDfCol({'df': df_1, 'colJoin': 'colJoin','colToCompare':'data'},\r\n                                                      {'df': df_2,'colJoin': 'colJoin','colToCompare':'data'})\r\n    \"\"\" compare 2 dataframe one a numeric column by joining the df and returning the difference \"\"\"\r\n    \r\n    df_1['DataRounded'] = df_1['DataToBeRounded'].apply(lambda x: dframe.round_down(x))\r\n    \"\"\" Use the Math Function floor() - Able to add a decimals like in Excel\r\n        floor() rounds down. int() truncates. \r\n        The difference is clear when you use negative numbers\r\n        math.floor(-3.5)    -4\r\n        int(-3.5)           -3\"\"\"\r\n    \r\n    df_2['DataRounded'] = df_2['DataToBeRounded'].apply(lambda x: dframe.round_up(x))\r\n    \"\"\" Use the Math Function ceil() - Able to add a decimals like in Excel\"\"\"\r\n    \r\n    df_data = dframe.fDf_readCsv_enhanced(path, bl_header = None, str_sep = '|', l_names = range(33))\r\n    \"\"\" Use the pandas method read_csv\r\n        but resolving Parse Error and will try again after displaying a message \r\n        Also resolving UnicodeDecodeError by detecting the encoding and trying again accordingly \"\"\"\r\n     \r\n    df2 = dframe.fDf_removeDoublons(df1)\r\n    \"\"\" Remove all rows that are exactly the same\"\"\"\r\n     \r\n    df2 = dframe.fDf_DropRowsIfNa_resetIndex(df1, l_colToDropNA = ['col1'])\r\n    \"\"\" Drop the rows where all defined columns will be Nan\r\n        And reset the index\"\"\"\r\n    \r\n    df2 = dframe.dDf_fillNaColumn(df1, 'col2', 'col1')\r\n    \"\"\" Replace Nan in a column by the value in another column or a Constant \"\"\"\r\n    \r\n    df2 = dframe.fDf_fillColUnderCondition(df1, 'NameColApply', df1['data'], 'NameColC', 'YES', bl_except = False)\r\n    ''' Transform DF with condition\r\n        ValueToApply can be a value or a lambda function'''   \r\n    \r\n    \r\nTemporary documentation for nutOther :\r\n    \r\n    from pyNutTools import nutOther as oth\r\n    \r\n    1. Decorators\r\n    \r\n    @oth.dec_singletonsClass\r\n    class CLASS_TO_DECORATE():\r\n    ''' Singeltons decorators: always use the first instance \r\n        Example: connection to database, FTP (keep the same connection for performance and possibly Access issue)\r\n        '''    \r\n    \r\n    @oth.dec_getTimePerf(int_secondesLimitDisplay = 2)\r\n    def function_TO_DECORATE(*args, **kwarks):\r\n    ''' Time Performance Decorators on a function\r\n        You can calculate and compare Performance on any function just by decorating it\r\n        It will show nothing if the performance is better than a specific threshold you will defined\r\n        '''   \r\n    \r\n    @oth.dec_stopProcessTimeOut(int_secondesLimit = 10, returnIfTimeOut = False)\r\n    def function_TO_DECORATE(*args, **kwarks):\r\n    ''' This decorators allow to stop a process if it is too long\r\n        For example, testing a folder existence might be very very long...'''\r\n    \r\n\r\n***END***\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Laurent-Tupin/pynut_tools",
    "keywords": "",
    "license": "Copyright 2022-2035",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pynut-tools",
    "package_url": "https://pypi.org/project/pynut-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/pynut-tools/",
    "project_urls": {
      "Homepage": "https://github.com/Laurent-Tupin/pynut_tools"
    },
    "release_url": "https://pypi.org/project/pynut-tools/3.1.1/",
    "requires_dist": [
      "pandas (==1.5.3)",
      "datefinder (==0.7.3)"
    ],
    "requires_python": "",
    "summary": "Function easing life :)",
    "version": "3.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16744734,
  "releases": {
    "2.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f78341c45a7856cd4abf52b064044ff0a84286de2ad3c0baaa767d7aca49ba1b",
          "md5": "a1c189bc51a183261c990c42c810570b",
          "sha256": "92aa922fdcb15753b321533b4a066e38ff8b11ff67d5a347f33e66c586aeb456"
        },
        "downloads": -1,
        "filename": "pynut_tools-2.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a1c189bc51a183261c990c42c810570b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28978,
        "upload_time": "2022-07-07T10:41:16",
        "upload_time_iso_8601": "2022-07-07T10:41:16.232975Z",
        "url": "https://files.pythonhosted.org/packages/f7/83/41c45a7856cd4abf52b064044ff0a84286de2ad3c0baaa767d7aca49ba1b/pynut_tools-2.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f564643dabe2cca7cb6641a6c25d00debb2e9167fd254ccc43d092e78d4d3136",
          "md5": "12d54218a20364042440a754227fc757",
          "sha256": "85042c1acacdd828b1b236d6edeec8d97c14ffd2bbd25d0c673fb032c5d460d7"
        },
        "downloads": -1,
        "filename": "pynut_tools-2.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "12d54218a20364042440a754227fc757",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30948,
        "upload_time": "2022-07-07T10:41:19",
        "upload_time_iso_8601": "2022-07-07T10:41:19.308403Z",
        "url": "https://files.pythonhosted.org/packages/f5/64/643dabe2cca7cb6641a6c25d00debb2e9167fd254ccc43d092e78d4d3136/pynut_tools-2.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e41f5c94b9dfca10dc5354e262ff2904d47aba9bfc4e232ea5541002cb9473a2",
          "md5": "3b66c1061fe59fddc4649bd54ea4e666",
          "sha256": "933bba7e0b7655562783ab8487d93c766fa450e1ec474716aa231c75a3c50846"
        },
        "downloads": -1,
        "filename": "pynut_tools-2.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b66c1061fe59fddc4649bd54ea4e666",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29423,
        "upload_time": "2022-12-05T04:26:53",
        "upload_time_iso_8601": "2022-12-05T04:26:53.678767Z",
        "url": "https://files.pythonhosted.org/packages/e4/1f/5c94b9dfca10dc5354e262ff2904d47aba9bfc4e232ea5541002cb9473a2/pynut_tools-2.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57ca920823195275bb39821fbced07b93368892bb25e8d50b10ba69806b963d3",
          "md5": "cf2866e9fd21421d2b6a0e14734f4372",
          "sha256": "d323cac526b49dbcf7ed750f068b35b6e66508b438a8f22985ab97432e30ae91"
        },
        "downloads": -1,
        "filename": "pynut-tools-2.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cf2866e9fd21421d2b6a0e14734f4372",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31610,
        "upload_time": "2022-12-05T04:26:55",
        "upload_time_iso_8601": "2022-12-05T04:26:55.418794Z",
        "url": "https://files.pythonhosted.org/packages/57/ca/920823195275bb39821fbced07b93368892bb25e8d50b10ba69806b963d3/pynut-tools-2.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1804e47b154e4a5ced1e057641ee3d3534dd1b838cbe7c7cada9a5a6f2a74abe",
          "md5": "186824cd52a104e6c24a59d29fe67122",
          "sha256": "208a9134b74a0c7933e98a1606cf923b472fa707709982321dceadf4162b695e"
        },
        "downloads": -1,
        "filename": "pynut_tools-2.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "186824cd52a104e6c24a59d29fe67122",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29552,
        "upload_time": "2023-01-04T09:14:39",
        "upload_time_iso_8601": "2023-01-04T09:14:39.807013Z",
        "url": "https://files.pythonhosted.org/packages/18/04/e47b154e4a5ced1e057641ee3d3534dd1b838cbe7c7cada9a5a6f2a74abe/pynut_tools-2.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeeb0ffc24bf67c27eba7354c0d926abf5ee360a6eda1659dad1946637d84eca",
          "md5": "3250a2c59f68bc0a1ce4fe864d9efef2",
          "sha256": "893643a3bc323511d76920e10ceb043773a62ee6a3c105396fb8972835ee1dab"
        },
        "downloads": -1,
        "filename": "pynut-tools-2.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "3250a2c59f68bc0a1ce4fe864d9efef2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31779,
        "upload_time": "2023-01-04T09:14:41",
        "upload_time_iso_8601": "2023-01-04T09:14:41.718675Z",
        "url": "https://files.pythonhosted.org/packages/ae/eb/0ffc24bf67c27eba7354c0d926abf5ee360a6eda1659dad1946637d84eca/pynut-tools-2.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6e0db543df6f6935a18e418f94476c54932df6f4fa3d5e8fcaa4c8315082abd",
          "md5": "b44ddea53592631ffa41dc7d6e359cc9",
          "sha256": "d950a8433cae9bd8d95a464e8ac031b2a487158072740f02809caa7f34b47aea"
        },
        "downloads": -1,
        "filename": "pynut_tools-3.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b44ddea53592631ffa41dc7d6e359cc9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29555,
        "upload_time": "2023-02-08T10:37:09",
        "upload_time_iso_8601": "2023-02-08T10:37:09.271963Z",
        "url": "https://files.pythonhosted.org/packages/a6/e0/db543df6f6935a18e418f94476c54932df6f4fa3d5e8fcaa4c8315082abd/pynut_tools-3.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b6b2c89d5ca13045ba218e1639842e06fb78dce6678e52976c46dc32a249cbe",
          "md5": "1f8da5f26d8552ee3c255cf900f08996",
          "sha256": "c0bc9160b8a86f6be90810cbe12a1df313cc47933a96634668054abf74a9c519"
        },
        "downloads": -1,
        "filename": "pynut-tools-3.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1f8da5f26d8552ee3c255cf900f08996",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31770,
        "upload_time": "2023-02-08T10:37:12",
        "upload_time_iso_8601": "2023-02-08T10:37:12.154875Z",
        "url": "https://files.pythonhosted.org/packages/0b/6b/2c89d5ca13045ba218e1639842e06fb78dce6678e52976c46dc32a249cbe/pynut-tools-3.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6e0db543df6f6935a18e418f94476c54932df6f4fa3d5e8fcaa4c8315082abd",
        "md5": "b44ddea53592631ffa41dc7d6e359cc9",
        "sha256": "d950a8433cae9bd8d95a464e8ac031b2a487158072740f02809caa7f34b47aea"
      },
      "downloads": -1,
      "filename": "pynut_tools-3.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b44ddea53592631ffa41dc7d6e359cc9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 29555,
      "upload_time": "2023-02-08T10:37:09",
      "upload_time_iso_8601": "2023-02-08T10:37:09.271963Z",
      "url": "https://files.pythonhosted.org/packages/a6/e0/db543df6f6935a18e418f94476c54932df6f4fa3d5e8fcaa4c8315082abd/pynut_tools-3.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b6b2c89d5ca13045ba218e1639842e06fb78dce6678e52976c46dc32a249cbe",
        "md5": "1f8da5f26d8552ee3c255cf900f08996",
        "sha256": "c0bc9160b8a86f6be90810cbe12a1df313cc47933a96634668054abf74a9c519"
      },
      "downloads": -1,
      "filename": "pynut-tools-3.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1f8da5f26d8552ee3c255cf900f08996",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 31770,
      "upload_time": "2023-02-08T10:37:12",
      "upload_time_iso_8601": "2023-02-08T10:37:12.154875Z",
      "url": "https://files.pythonhosted.org/packages/0b/6b/2c89d5ca13045ba218e1639842e06fb78dce6678e52976c46dc32a249cbe/pynut-tools-3.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}