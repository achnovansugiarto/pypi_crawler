{
  "info": {
    "author": "Alex Hall",
    "author_email": "alex.mojaki@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# instant_client\n\n[![Build Status](https://travis-ci.org/alexmojaki/instant_client.svg?branch=master)](https://travis-ci.org/alexmojaki/instant_client) [![Coverage Status](https://coveralls.io/repos/github/alexmojaki/instant_client/badge.svg?branch=master)](https://coveralls.io/github/alexmojaki/instant_client?branch=master) [![Supports Python versions 3.7+](https://img.shields.io/pypi/pyversions/instant_client.svg)](https://pypi.python.org/pypi/instant_client)\n\nA type-safe [JSON-RPC](https://www.jsonrpc.org/) client with automatic (de)serialization.\n\n    pip install instant-client\n\nFor communication over HTTP (like in the example below):\n\n    pip install 'instant-client[requests]'\n\n`instant_client` can be used with any server implementing JSON-RPC, but it's best paired with [`instant_api`](https://github.com/alexmojaki/instant_api). For example, suppose the API server is set up like this:\n\n```python\nfrom dataclasses import dataclass\nfrom flask import Flask\nfrom instant_api import InstantAPI\n\napp = Flask(__name__)\n\n@dataclass\nclass Point:\n    x: int\n    y: int\n\n@InstantAPI(app)\nclass Methods:\n    def translate(self, p: Point, dx: int, dy: int) -> Point:\n        return Point(p.x + dx, p.y + dy)\n\n    def scale(self, p: Point, factor: int) -> Point:\n        return Point(p.x * factor, p.y * factor)\n\nif __name__ == '__main__':\n    app.run()\n```\n\nThen using the client is as simple as:\n\n```python\nfrom server import Methods, Point  # the classes we defined above\nfrom instant_client import InstantClient\n\n# The type hint is a lie, but your linter/IDE doesn't know that!\nmethods: Methods = InstantClient(\"http://127.0.0.1:5000/api/\", Methods()).methods\n\nassert methods.scale(Point(1, 2), factor=3) == Point(3, 6)\n```\n\nThat looks a lot like it just called `Methods.scale()` directly, which is the point (no pun intended), but under the hood it did in fact send an HTTP request to the server! The same code written more manually looks like this:\n\n```python\nimport requests\n\nresponse = requests.post(\n    'http://127.0.0.1:5000/api/',\n    json={\n        'id': 0, \n        'jsonrpc': '2.0', \n        'method': 'scale', \n        'params': {\n            'p': {'x': 1, 'y': 2}, \n            'factor': 3,\n        },\n    },\n)\n\nassert response.json()['result'] == {'x': 3, 'y': 6}\n```\n\nIn general, the `InstantClient` constructor has two required parameters:\n\n1. [A client from the jsonrpcclient library](https://jsonrpcclient.readthedocs.io/en/latest/examples.html) for your desired transport. For example:\n\n    ```python\n    from jsonrpcclient.clients.zeromq_client import ZeroMQClient\n    from instant_client import InstantClient\n\n    client = InstantClient(ZeroMQClient(\"tcp://localhost:5000\"), Methods())\n    ```\n\n    As a convenience, you can also just pass a string representing a URL, which will be used to construct an `HTTPClient`.\n\n2. An object defining your methods. The method body can be empty, `InstantClient` just uses the signature and type hints to serialize the arguments and deserialize the result with the help of [datafunctions](https://github.com/alexmojaki/datafunctions).\n\nThe `methods` attribute of the client is a simple proxy so that this:\n\n```python\nclient.methods.scale(Point(1, 2), factor=3)\n```\n\nis equivalent to:\n\n```python\nclient.request(\"scale\", Point(1, 2), factor=3)\n```\n\nwhich in turn looks up the signature of the original method. \n\nYour IDE/linter/type-checker should think that `client.methods` is the object you passed at the beginning, so you can get all the usual warnings and autocompletions. Adding your own type hint can help but shouldn't be necessary.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/alexmojaki/instant_client",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "instant-client",
    "package_url": "https://pypi.org/project/instant-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/instant-client/",
    "project_urls": {
      "Homepage": "http://github.com/alexmojaki/instant_client"
    },
    "release_url": "https://pypi.org/project/instant-client/0.0.1/",
    "requires_dist": [
      "jsonrpcclient",
      "datafunctions",
      "requests ; extra == 'requests'",
      "pytest ; extra == 'tests'",
      "instant-api ; extra == 'tests'",
      "flask ; extra == 'tests'",
      "requests ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "Type safe JSON RPC client with automatic (de)serialization. Best paired with instant_api.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7205032,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8735fdc866798276664948213c4d5e16080b191efdd110a82341464fbd8d6d4",
          "md5": "3bf93188cc6ed7b6013da3c7a0771611",
          "sha256": "00f9b676f64ede890f64e3c31bd14102da0f907489e574a2f386c04c788960da"
        },
        "downloads": -1,
        "filename": "instant_client-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3bf93188cc6ed7b6013da3c7a0771611",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5695,
        "upload_time": "2020-05-09T18:34:42",
        "upload_time_iso_8601": "2020-05-09T18:34:42.076953Z",
        "url": "https://files.pythonhosted.org/packages/d8/73/5fdc866798276664948213c4d5e16080b191efdd110a82341464fbd8d6d4/instant_client-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d8735fdc866798276664948213c4d5e16080b191efdd110a82341464fbd8d6d4",
        "md5": "3bf93188cc6ed7b6013da3c7a0771611",
        "sha256": "00f9b676f64ede890f64e3c31bd14102da0f907489e574a2f386c04c788960da"
      },
      "downloads": -1,
      "filename": "instant_client-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3bf93188cc6ed7b6013da3c7a0771611",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5695,
      "upload_time": "2020-05-09T18:34:42",
      "upload_time_iso_8601": "2020-05-09T18:34:42.076953Z",
      "url": "https://files.pythonhosted.org/packages/d8/73/5fdc866798276664948213c4d5e16080b191efdd110a82341464fbd8d6d4/instant_client-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}