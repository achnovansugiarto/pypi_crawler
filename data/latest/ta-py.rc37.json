{
  "info": {
    "author": "Nino Kroesen",
    "author_email": "ninokroesen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Technical Analysis (ta.py)\n\nta.py is a Python package for dealing with financial technical analysis.\n\n## Installation\n\n#### pip\nUse the package manager pip to install ta.py.\n\n```bash\npip install ta_py\n```\n## Usage\n```python\nimport ta_py as ta;\n```\n## Examples\n#### Moving Averages\n- [Simple Moving Average](#sma)\n- [Smoothed Moving Average](#smma)\n- [Weighted Moving Average](#wma)\n- [Exponential Moving Average](#ema)\n- [Hull Moving Average](#hull)\n- [Least Squares Moving Average](#lsma)\n- [Volume Weighted Moving Average](#vwma)\n- [Volume Weighted Weighted Moving Average](#vwwma)\n- [Wilder's Smoothing Moving Average](#wsma)\n- [Parabolic Weighted Moving Average](#pwma)\n- [Hyperbolic Weighted Moving Average](#hwma)\n- [Kaufman Adaptive Moving Average](#kama)\n- [Custom Weighted Moving Average](#cwma)\n#### Indicators\n- [Moving Average Convergence / Divergence](#macd)\n- [Relative Strength Index](#rsi)\n- [Wilder's Relative Strength Index](#wrsi)\n- [True Strength Index](#tsi)\n- [Balance Of Power](#bop)\n- [Force Index](#fi)\n- [Accumulative Swing Index](#asi)\n- [Alligator Indicator](#alli)\n- [Williams %R](#pr)\n- [Stochastics](#stoch)\n- [Fibonacci Retracement](#fib)\n- [Bollinger Bandwidth](#bandwidth)\n- [Ichimoku Cloud](#ichi)\n- [Average True Range](#atr)\n- [Aroon Up](#aroon-up)\n- [Aroon Down](#aroon-down)\n- [Money Flow Index](#mfi)\n- [Rate Of Change](#roc)\n- [Coppock Curve](#cop)\n- [Know Sure Thing](#kst)\n- [On-Balance Volume](#obv)\n- [Volume-Weighted Average Price](#vwap)\n- [Fractals](#fractals)\n- [Crossover](#cross)\n- [Momentum](#mom)\n- [HalfTrend](#half)\n- [ZigZag](#zigzag)\n- [Parabolic SAR](#psar)\n- [SuperTrend](#supertrend)\n- [Elder Ray Index](#elderray)\n- [Historical Volatility](#hv)\n- [Relative Vigor Index](#rvi)\n- [Relative Vigor Index Signal](#rvi_signal)\n- [RSI Divergence](#rsi_divergence)\n- [Divergence](#divergence)\n#### Oscillators\n- [Alligator Oscillator](#gator)\n- [Chande Momentum Oscillator](#mom_osc)\n- [Chaikin Oscillator](#chaikin_osc)\n- [Aroon Oscillator](#aroon-osc)\n- [Awesome Oscillator](#ao)\n- [Accelerator Oscillator](#ac)\n- [Fisher Transform](#fish)\n#### Bands\n- [Bollinger Bands](#bands)\n- [Keltner Channels](#kelt)\n- [Donchian Channels](#don)\n- [Fibonacci Bollinger Bands](#fibbands)\n- [Envelope](#env)\n#### Statistics\n- [Standard Deviation](#std)\n- [Variance](#variance)\n- [Normal CDF](#ncdf)\n- [Inverse Normal Distribution](#normsinv)\n- [Monte Carlo Simulation](#sim)\n- [Percentile](#perc)\n- [Correlation](#cor)\n- [Covariance](#cov)\n- [Percentage Difference](#dif)\n- [Expected Return](#er)\n- [Abnormal Return](#ar)\n- [Kelly Criterion](#kelly)\n- [Permutations](#perm)\n- [Winratio](#winratio)\n- [Average Win](#avgwin)\n- [Average Loss](#avgloss)\n- [Drawdown](#drawdown)\n- [Median](#median)\n- [Recent High](#rh)\n- [Recent Low](#rl)\n- [Median Absolute Deviation](#mad)\n- [Average Absolute Deviation](#aad)\n- [Standard Error](#stderr)\n- [Sum Squared Differences](#ssd)\n- [Logarithm](#log)\n- [Exponent](#exp)\n- [Normalize](#norm)\n- [Denormalize](#dnorm)\n- [Normalize Pair](#normp)\n- [Normalize From](#normf)\n- [Standardize](#standard)\n- [Z-Score](#zscore)\n- [K-means Clustering](#kmeans)\n- [Mean Squared Error](#mse)\n- [Cumulative](#cum)\n#### Chart Types\n- [Heikin Ashi](#ha)\n- [Renko](#ren)\n#### Miscellaneous\n- [Times Up](#times_up)\n- [Times Down](#times_dn)\n#### Experimental\n- [Support Line](#sup)\n- [Resistance Line](#res)\n### Moving Averages\n#### <a id=\"sma\"></a>Simple Moving Average (SMA)\n```python\ndata = [1, 2, 3, 4, 5, 6, 10];\nlength = 6; # default = 14\nta.sma(data, length);\n# output (array)\n# [3.5, 5]\n```\n#### <a id=\"smma\"></a>Smoothed Moving Average (SMMA)\n```python\ndata = [1, 2, 3, 4, 5, 6, 10];\nlength = 5; # default = 14\nta.smma(data, length);\n# output (array)\n# [3.4, 4.92]\n```\n#### <a id=\"wma\"></a>Weighted Moving Average (WMA)\n```python\ndata = [69, 68, 66, 70, 68];\nlength = 4; # default = 14\nta.wma(data, length);\n# output (array)\n# [68.3, 68.2]\n```\n#### <a id=\"ema\"></a>Exponential Moving Average (EMA)\n```python\ndata = [1, 2, 3, 4, 5, 6, 10];\nlength = 6; # default = 12\nta.ema(data, length);\n# output (array)\n# [3.5, 5.357]\n```\n#### <a id=\"hull\"></a>Hull Moving Average\n```python\ndata = [6, 7, 5, 6, 7, 4, 5, 7];\nlength = 6; # default = 14\nta.hull(data, length);\n# output (array)\n# [4.76, 5.48]\n```\n#### <a id=\"lsma\"></a>Least Squares Moving Average (LSMA)\n```python\ndata = [5, 6, 6, 3, 4, 6, 7];\nlength = 6; # default = 25\nta.lsma(data, length);\n# output (array)\n# [4.714, 5.761]\n```\n#### <a id=\"vwma\"></a>Volume Weighted Moving Average (VWMA)\n```python\ndata = [[1, 59], [1.1, 82], [1.21, 27], [1.42, 73], [1.32, 42]]; # [price, volume (quantity)]\nlength = 4; # default = 20\nta.vwma(data, length);\n# output (array)\n# [1.185, 1.259]\n```\n#### <a id=\"vwma\"></a>Volume Weighted Weighted Moving Average (VWWMA)\n```python\ndata = [[1,59],[1.1,82],[1.21,27],[1.42,73],[1.32,42]];\nlength = 4;\nta.vwwma(data, length);\n# output (array)\n# [1.262, 1.316]\n```\n#### <a id=\"wsma\"></a>Wilder's Smoothing Moving Average\n```python\ndata = [1, 2, 3, 4, 5, 6, 10];\nlength = 6; # default = 14\nta.wsma(data, length);\n# output (array)\n# [3.5, 4.58]\n```\n#### <a id=\"pwma\"></a>Parabolic Weighted Moving Average\n```python\n data = [17, 26, 23, 29, 20];\n length = 4; # default = 14\nta.pwma(data, length);\n# output (array)\n# [24.09, 25.18]\n```\n#### <a id=\"hwma\"></a>Hyperbolic Weighted Moving Average\n```python\ndata = [54, 51, 86, 42, 47];\nlength = 4; # default = 14\nta.hwma(data, length);\n# output (array)\n# [56.2, 55.0]\n```\n#### <a id=\"kama\"></a>Kaufman Adaptive Moving Average (KAMA)\n```python\ndata = [8, 7, 8, 9, 7, 9];\nlength1 = 2; # default = 10\nlength2 = 4; # default = 2\nlength3 = 8; # default = 30\nta.kama(data, length1, length2, length3);\n# output (array)\n# [8, 8.64, 8.57, 8.57]\n```\n#### <a id=\"cwma\"></a>Custom Weighted Moving Average\n```python\ndata = [69,68,66,70,68,69];\nweights = [1,2,3,5,8];\nta.cwma(data, weights);\n# output (array)\n# [68.26315789473684, 68.52631578947368]\n```\n### Indicators\n#### <a id=\"macd\"></a>Moving Average Convergence / Divergence (MACD)\n```python\ndata = [1, 2, 3, 4, 5, 6, 14];\nlength1 = 3; # default = 12\nlength2 = 6; # default = 26\nta.macd(data, length1, length2);\n# output (array)\n# [1.5, 3]\n```\n#### <a id=\"rsi\"></a>Relative Strength Index (RSI)\n```python\ndata = [1, 2, 3, 4, 5, 6, 7, 5];\nlength = 6; # default = 14\nta.rsi(data, length);\n# output (array)\n# [100, 100, 66.667]\n```\n#### <a id=\"wrsi\"></a>Wilder's Relative Strength Index\n```python\ndata = [1, 2, 3, 4, 5, 6, 7, 5, 6];\nlength = 6; # default = 14\nta.wrsi(data, length);\n# output (array)\n# [100, 71.43, 75.61]\n```\n#### <a id=\"tsi\"></a>True Strength Index (TSI)\n```python\ndata = [1.32, 1.27, 1.42, 1.47, 1.42, 1.45, 1.59];\nlonglength = 3; # default = 25\nshortlength = 2; # default = 13\nsignallength = 2; # default = 13\nta.tsi(data, longlength, shortlength, signallength);\n# output (array)\n# [[0.327, 0.320], [0.579, 0.706]]\n# [strength line, signal line]\n```\n#### <a id=\"bop\"></a>Balance Of Power\n```python\ndata = [[4, 5, 4, 5], [5, 6, 5, 6], [6, 8, 5, 6]]; # [open, high, low, close]\nlength = 2; # default = 14\nta.bop(data, length);\n# output (array)\n# [1, 0.5]\n```\n#### <a id=\"fi\"></a>Force Index\n```python\ndata = [[1.4, 200], [1.5, 240], [1.1, 300], [1.2, 240], [1.5, 400]]; # [close, volume]\nlength = 4; # default = 13\nta.fi(data, length);\n# output (array)\n# [0.0075]\n```\n#### <a id=\"asi\"></a>Accumulative Swing Index\n```python\ndata = [[7, 6, 4], [9, 7, 5], [9, 8, 6]]; # [high, close, low]\nta.asi(data);\n# output (array)\n# [0, -12.5]\n```\n#### <a id=\"alli\"></a>Alligator Indicator\n```python\ndata = [8,7,8,9,7,8,9,6,7,8,6,8,10,8,7,9,8,7,9,6,7,9];\n# defaults shown\njawlength = 13;\nteethlength = 8;\nliplength = 5;\njawshift = 8;\nteethshift = 5;\nlipshift = 3;\nta.alligator(data, jawlength, teethlength, liplength, jawshift, teethshift, lipshift);\n# output (array)\n# [jaw, teeth, lips]\n```\n#### <a id=\"pr\"></a>Williams %R\n```python\ndata = [2, 1, 3, 1, 2];\nlength = 3; # default = 14\nta.pr(data, length);\n# output (array)\n# [-0, -100, -50]\n```\n#### <a id=\"stoch\"></a>Stochastics\n```python\ndata = [[3,2,1], [2,2,1], [4,3,1], [2,2,1]]; # [high, close, low]\nlength = 2; # default = 14\nsmoothd = 1; # default = 3\nsmoothk = 1; # default = 3\nta.stoch(data, length, smoothd, smoothk);\n# output (array)\n# [[66.667, 66.667], [33.336, 33.336]]\n# [kline, dline]\n```\n#### <a id=\"fib\"></a>Fibonacci Retracement\n```python\nstart = 1;\nend = 2;\nta.fib(start, end);\n# output (array)\n# [1, 1.236, 1.382, 1.5, 1.618, 1.786, 2, 2.618, 3.618, 4.618, 5.236]\n```\n#### <a id=\"bandwidth\"></a>Bollinger Bandwidth\n```python\ndata = [1, 2, 3, 4, 5, 6];\nlength = 5; # default = 14\ndeviations = 2; # default = 1\nta.bandwidth(data, length, deviations);\n# output (array)\n# [1.886, 1.344]\n```\n#### <a id=\"ichi\"></a>Ichimoku Cloud\n```python\ndata = [[6, 3, 2], [5, 4, 2], [5, 4, 3], [6, 4, 3], [7, 6, 4], [6, 5, 3]]; # [high, close, low]\nlength1 = 9; # default = 9\nlength2 = 26; # default = 26\nlength3 = 52; # default = 52\ndisplacement = 26; # default = 26\nta.ichimoku(data, length1, length2, length3, displacement);\n# output (array)\n# [conversion line, base line, leading span A, leading span B, lagging span]\n```\n#### <a id=\"atr\"></a>Average True Range (ATR)\n```python\ndata = [[3,2,1], [2,2,1], [4,3,1], [2,2,1]]; # [high, close, low]\nlength = 3; # default = 14\nta.atr(data, length);\n# output (array)\n# [2, 1.667, 2.111, 1.741]\n```\n#### <a id=\"aroon-up\"></a>Aroon Up\n```python\ndata = [5, 4, 5, 2];\nlength = 3; # default = 10\nta.aroon_up(data, length);\n# output (array)\n# [100.0, 50.0]\n```\n#### <a id=\"aroon-down\"></a>Aroon Down\n```python\ndata = [2, 5, 4, 5];\nlength = 3; # default = 10\nta.aroon_down(data, length);\n# output (array)\n# [0.0, 50.0]\n```\n#### <a id=\"mfi\"></a>Money Flow Index\n```python\ndata = [[19, 13], [14, 38], [21, 25], [32, 17]]; # [buy volume, sell volume]\nlength = 3; # default = 14\nta.mfi(data, length);\n# output (array)\n# [41.54, 45.58]\n```\n#### <a id=\"roc\"></a>Rate Of Change\n```python\ndata = [1, 2, 3, 4];\nlength = 3; # default = 14\nta.roc(data, length);\n# output (array)\n# [2, 1]\n```\n#### <a id=\"cop\"></a>Coppock Curve\n```python\ndata = [3, 4, 5, 3, 4, 5, 6, 4, 7, 5, 4, 7, 5];\nlength1 = 4; # (ROC period 1) default = 11\nlength2 = 6; # (ROC period 2) default = 14\nlength3 = 5; # (WMA smoothing period) default = 10\nta.cop(data, length1, length2, length3);\n# output (array)\n# [0.376, 0.237]\n```\n#### <a id=\"kst\"></a>Know Sure Thing\n```python\ndata = [8, 6, 7, 6, 8, 9, 7, 5, 6, 7, 6, 8, 6, 7, 6, 8, 9, 9, 8, 6, 4, 6, 5, 6, 7, 8, 9];\n# roc sma #1\nr1 = 5; # default = 10\ns1 = 5; # default = 10\n# roc sma #2\nr2 = 7; # default = 15\ns2 = 5; # default = 10\n# roc sma #3\nr3 = 10; # default = 20\ns3 = 5; # default = 10\n# roc sma #4\nr4 = 15; # default = 30\ns4 = 7; # default = 15\n# signal line\nsig = 4; # default = 9\nta.kst(data, r1, s1, r2, s2, r3, s3, r4, s4, sig);\n# output (array)\n# [[-0.68, -0.52], [-0.29, -0.58], [0.35, -0.36]]\n# [kst line, signal line]\n```\n#### <a id=\"obv\"></a>On-Balance Volume\n```python\ndata = [[25200, 10], [30000, 10.15], [25600, 10.17], [32000, 10.13]]; # [asset volume, close price]\nta.obv(data);\n# output (array)\n# [0, 30000, 55600, 23600]\n```\n#### <a id=\"vwap\"></a>Volume-Weighted Average Price\n```python\ndata = [[127.21, 89329], [127.17, 16137], [127.16, 23945]]; # [average price, volume (quantity)]\nlength = 2; # default = len(length)\nta.vwap(data, length);\n# output (array)\n# [127.204, 127.164]\n```\n#### <a id=\"fractals\"></a>Fractals\n```python\ndata = [[7,6],[8,6],[9,6],[8,5],[7,4],[6,3],[7,4],[8,5]]; # [high, low]\nta.fractals(data);\n# output (array, same length as input)\n# [[false, false],[false,false],[true,false],[false,false],[false,false],[false,true],[false,false],[false,false]]\n# [upper fractal, lower fractal]\n```\n#### <a id=\"cross\"></a>Crossover (golden cross)\n```python\nfastdata = [3,4,5,4,3]; # short period gets spliced when longer\nslowdata = [4,3,2,3,4];\nta.cross(fastdata, slowdata);\n# output (array)\n# [{index: 1, cross True}, {index: 4, cross: False}]\n# cross is true when fastdata is greater than the slowdata\n```\n#### <a id=\"mom\"></a>Momentum\n```python\ndata = [1, 1.1, 1.2, 1.24, 1.34];\nlength = 4; # default = 10\npercentage = false; # default = false (true returns percentage)\nta.mom(data, length, percentage);\n# output (array)\n# [0.24, 0.24]\n```\n#### <a id=\"half\"></a>HalfTrend\n```python\n# experimental (untested) function (may change in the future), ported from:\n# https://www.tradingview.com/script/U1SJ8ubc-HalfTrend/\n# data = [high, close, low]\ndata = [[100,97,90],[101,98,94],[103,96,92],[106,100,95],[110,101,100],[112,110,105],[110,100,90],[103,100,97],[95,90,85],[94,80,80],[90,82,81],[85,80,70]];\natrlen = 6;\namplitude = 3;\ndeviation = 2;\nta.halftrend(data, atrlen, amplitude, deviation);\n# output (array)\n# [\n#   [ 115.14, 105, 94.86, 'long' ],\n#   [ 100.77, 90, 79.22, 'long' ],\n#   [ 116.32, 105, 93.68, 'long' ],\n#   [ 101.1, 90, 78.89, 'long' ],\n#   [ 116.25, 105, 93.75, 'long' ],\n#   [ 99.77, 90, 80.23, 'long' ]\n# ]\n```\n#### <a id=\"zigzag\"></a>ZigZag\n```python\n# Based on high / low\ndata = [[10,9], [12,10], [14,12], [15,13], [16,15], [11,10], [18,15]]; # [high, low]\npercentage = 0.25; # default = 0.05\nta.zigzag(data, percentage);\n# output (array)\n# [9, 10.75, 12.5, 14.25, 16, 10, 18]\n```\n```python\n# Based on close\ndata = [6,7,8,9,10,12,9,8,5,3,3,3,5,7,8,9,11];\npercentage = 0.05;\nta.zigzag(data, percentage);\n# output (array)\n# [6, 7.2, 8.4, 9.6, 10.8, 12.0, 10.5, 9.0, 7.5, 6.0, 4.5, 3.0, 4.6, 6.2, 7.8, 9.4, 11.0]\n```\n#### <a id=\"psar\"></a>Parabolic SAR\n```python\ndata = [[82.15,81.29],[81.89,80.64],[83.03,81.31],[83.30,82.65],[83.85,83.07],[83.90,83.11],[83.33,82.49],[84.30,82.3],[84.84,84.15],[85,84.11],[75.9,74.03],[76.58,75.39],[76.98,75.76],[78,77.17],[70.87,70.01]];\nstep = 0.02;\nmax = 0.2;\nta.psar(data, step, max);\n# output (array)\n# [81.29,82.15,80.64,80.64,80.7464,80.932616,81.17000672,81.3884061824,81.67956556416,82.0588176964608,85,85,84.7806,84.565588,84.35487624000001]\n```\n#### <a id=\"supertrend\"></a>SuperTrend\n```python\ndata = [[3,2,1], [2,2,1], [4,3,1], [2,2,1]]; # [high, close, low]\nlength = 3;\nmultiplier = 0.5;\nta.supertrend(data, length, multiplier);\n# output (array)\n# [[5.56,1.44],[3.37,0.63]]\n# [up, down]\n```\n#### <a id=\"elderray\"></a>Elder Ray Index\n```python\ndata = [6,5,4,7,8,9,6,8];\nlength = 7;\nta.elderray(data, length);\n# output (array)\n# [[2.57,-2.43],[2.29,-2.71]]\n# [bull, bear]\n```\n#### <a id=\"hv\"></a>Historical Volatility\n```python\ndata = [7,6,5,7,8,9,7,6,5];\nlength = 8;\nta.hv(data, length);\n# output (array)\n# [0.642, 0.682]\n```\n#### <a id=\"rvi\"></a>Relative Vigor Index\n```python\n# data = [[open,high,low,close]] (requires at least 4 + length values)\ndata = [[4,6,3,3], [3,5,2,2], [2,5,2,4], [4,6,4,5], [5,7,4,4], [4,6,3,4], [4,7,3,5], [5,7,5,6], [6,8,6,6], [6,9,5,6], [6,8,6,7], [7,9,5,6],[6,7,4,5],[5,6,5,6],[6,8,5,5],[5,7,2,6]];\nlength = 8;\nta.rvi(data, length);\n# output (array)\n# [0.29,0.21,0.15,0.16,0.09,0.05]\n```\n#### <a id=\"rvi_signal\"></a>Relative Vigor Index Signal\n```python\nrvi = [0.29,0.21,0.15,0.16,0.09,0.05]; # requires at least 4 values\nta.rvi_signal(rvi);\n# output (array)\n# [0.20,0.15,0.12]\n```\n#### <a id=\"rsi_divergence\"></a>RSI Divergence\nExperimental function: https://github.com/Bitvested/ta.js/issues/18\n```python\ndata = [74,83,66,78,69,70,84,73,74,73,83];\nrsi_length = 5;\nrsi_function = ta.wrsi; # default (the tradingview rsi indicator)\nta.rsi_divergence(data, rsi_length, rsi_function);\n# output (array)\n# 1 = RSI is in divergence\n# 0 = RSI is not in divergence\n# [0, 0, 1, 0, 1, 0] (better to quantify if needed)\n```\n#### <a id=\"divergence\"></a>Universal Divergence\n```javascript\ndata1 = [48,34,43,54,56,64,43];\ndata2 = [76,74,43,55,34,32,45,47];\nta.divergence(data1, data2);\n# output (array)\n# 1 = RSI is in divergence\n# 0 = RSI is not in divergence\n# [0, 0, 1, 1, 0, 1] (better to quantify if needed)\n```\n### Oscillators\n#### <a id=\"gator\"></a>Alligator Oscillator\n```python\ndata = [8,7,8,9,7,8,9,6,7,8,6,8,10,8,7,9,8,7,9,6,7,9];\n# defaults shown\njawlength = 13;\nteethlength = 8;\nliplength = 5;\njawshift = 8;\nteethshift = 5;\nlipshift = 3;\nta.gator(data, jawlength, teethlength, liplength, jawshift, teethshift, lipshift);\n# output (array)\n# [upper gator, lower gator]\n```\n#### <a id=\"mom_osc\"></a>Chande Momentum Oscillator\n```python\ndata = [1, 1.2, 1.3, 1.3, 1.2, 1.4];\nlength = 4; # default = 9\nta.mom_osc(data, length);\n# output (array)\n# [0.0, 3.85]\n```\n#### <a id=\"chaikin_osc\"></a>Chaikin Oscillator\n```python\ndata = [[2,3,4,6],[5,5,5,4],[5,4,3,7],[4,3,3,4],[6,5,4,6],[7,4,3,6]]; # [high, close, low, volume]\nlength1 = 2; # default = 3\nlength2 = 4; # default = 10\nta.chaikin_osc(data, length1, length2);\n# output (array)\n# [-1.667, -0.289, -0.736]\n```\n#### <a id=\"aroon-osc\"></a>Aroon Oscillator\n```python\ndata = [2, 5, 4, 5];\nlength = 3; # default = 25\nta.aroon_osc(data, length);\n# output (array)\n# [50.0, 50.0]\n```\n#### <a id=\"ao\"></a>Awesome Oscillator\n```python\ndata = [[6, 5], [8, 6], [7, 4], [6, 5], [7, 6], [9, 8]]; # [high, low]\nshortlength = 2; # default = 5\nlonglength = 5; # default = 35\nta.ao(data, shortlength, longlength);\n# output (array)\n# [0, 0.9]\n```\n#### <a id=\"ac\"></a>Accelerator Oscillator\n```python\ndata = [[6, 5], [8, 6], [7, 4], [6, 5], [7, 6], [9, 8]]; # [high, low]\nshortlength = 2; # default = 5\nlonglength = 4; # default = 35\nta.ac(data, shortlength, longlength);\n# output (array)\n# [-5.875, -6.125, -6.5]\n```\n#### <a id=\"fish\"></a>Fisher Transform\n```python\ndata = [8,6,8,9,7,8,9,8,7,8,6,7]; # high + low / 2\nlength = 9;\nta.fisher(data, length);\n# output (array)\n# [[-0.318, -0.11], [-0.449, -0.318], [-0.616, -0.449]] # [fisher, trigger]\n```\n### Bands\n#### <a id=\"bands\"></a>Bollinger Bands\n```python\ndata = [1, 2, 3, 4, 5, 6];\nlength = 5; # default = 14\ndeviations = 2; # default = 1\nta.bands(data, length, deviations);\n# output (array)\n# [[5.828, 3, 0.172], [6.828, 4, 1.172]]\n# [upper band, middle band, lower band]\n```\n#### <a id=\"kelt\"></a>Keltner Channels\n```python\ndata = [[3,2,1], [2,2,1], [4,3,1], [2,2,1], [3,3,1]]; # [high, close, low]\nlength = 5; # default = 14\ndeviations = 1; # default = 1\nta.keltner(data, length, deviations);\n# output (array)\n# [[3.93, 2.06, 0.20]]\n# [upper band, middle band, lower band]\n```\n#### <a id=\"don\"></a>Donchian Channels\n```python\ndata = [[6, 2], [5, 2], [5, 3], [6, 3], [7, 4], [6, 3]]; # [high, low]\nlength = 5; # default = 20\nta.don(data, length);\n# output (array)\n# [[7, 4.5, 2], [7, 4.5, 2]]\n# [upper band, base line, lower band]\n```\n#### <a id=\"fibbands\"></a>Fibonacci Bollinger Bands\n```python\ndata = [[1,59],[1.1,82],[1.21,27],[1.42,73],[1.32,42]];\nlength = 4;\ndeviations = 3;\nta.fibbands(data, length, deviations);\n# output (array)\n# [[highest band -> fibonacci levels -> lowest band]]\n```\n#### <a id=\"env\"></a>Envelope\n```python\ndata = [6,7,8,7,6,7,8,7,8,7,8,7,8];\nlength = 11, # default = 10\npercentage = 0.05; # default = 0.005\nta.envelope(data, length, percentage);\n# output (array)\n# [[7.541, 7.182, 6.823], [7.636, 7.273, 6.909]]\n# [upper band, base line, lower band]\n```\n### Statistics\n#### <a id=\"std\"></a>Standard Deviation\n```python\ndata = [1, 2, 3];\nlength = 3; # default = len(length)\nta.std(data, length);\n# output (float)\n# 0.81649658092773\n```\n#### <a id=\"variance\"></a>Variance\n```python\ndata = [6, 7, 2, 3, 5, 8, 6, 2];\nlength = 7; # default = len(data)\nta.variance(data, length);\n# output (array)\n# [3.918, 5.061]\n```\n#### <a id=\"ncdf\"></a>Normal CDF\n```python\nsample = 13;\nmean = 10;\nstdv = 2;\nta.ncdf(sample, mean, stdv);\n# output (float)\n# 0.9331737996110652\n```\n```python\nzscore = 1.5;\nta.ncdf(zscore);\n# output (float)\n# 0.9331737996110652\n```\n#### <a id=\"normsinv\"></a>Inverse Normal Distribution\n```python\ndata = 0.4732;\nta.normsinv(data);\n# output (float)\n# -0.06722824471054376\n```\n#### <a id=\"sim\"></a>Monte Carlo Simulation\n```python\ndata = [6, 4, 7, 8, 5, 6];\nlength = 2; # default = 50\nsimulations = 100; # default = 1000\npercentile = 0.5; # default = -1 (returns all raw simulations)\nta.sim(data, length, simulations, percentile)\n# output (array)\n# [6, 4, 7, 8, 5, 6, 5.96, 5.7]\n```\n#### <a id=\"perc\"></a>Percentile\n```python\ndata = [[6,4,7], [5,3,6], [7,5,8]];\npercentile = 0.5;\nta.percentile(data, percentile);\n# output (array)\n# [6, 4, 7]\n```\n#### <a id=\"cor\"></a>Correlation\n```python\ndata1 = [1, 2, 3, 4, 5, 2];\ndata2 = [1, 3, 2, 4, 6, 3];\nta.cor(data1, data2);\n# output (float)\n# 0.8808929232684737\n```\n#### <a id=\"cov\"></a>Covariance\n```python\ndata1 = [12,13,25,39];\ndata2 = [67,45,32,21];\nlength = 4;\nta.covariance(data1, data2, 4);\n# output (array)\n# [-165.8125]\n```\n#### <a id=\"dif\"></a>Percentage Difference\n```python\nnewval = 0.75;\noldval = 0.5;\nta.dif(newval, oldval);\n# output (float)\n# 0.5\n```\n#### <a id=\"er\"></a>Expected Return\n```python\ndata = [0.02, -0.01, 0.03, 0.05, -0.03]; # historical return data\nta.er(data);\n# output (float)\n# 0.0119\n```\n#### <a id=\"ar\"></a>Abnormal Return\n```python\ndata = [0.02, -0.01, 0.03, 0.05, -0.03]; # historical return data\nlength = 3;\nta.ar(data, length);\n# output (array)\n# [0.037, -0.053]\n```\n#### <a id=\"kelly\"></a>Kelly Criterion\n```python\ndata = [0.01, 0.02, -0.01, -0.03, -0.015, 0.045, 0.005];\nta.kelly(data);\n# output (float)\n# 0.1443\n```\n#### <a id=\"permutations\"></a>Permutations\n```python\ndata = [10,10,10];\nta.permutations(data);\n# output (int)\n# 1000\n```\n#### <a id=\"winratio\"></a>Winratio\n```python\nvar data = [0.01, 0.02, -0.01, -0.03, -0.015, 0.005];\nta.winratio(data);\n# output (float)\n# 0.5\n```\n#### <a id=\"avgwin\"></a> Average Win\n```python\ndata = [0.01, 0.02, -0.01, -0.03, -0.015, 0.005];\nta.avgwin(data);\n# output (float)\n# 0.012\n```\n#### <a id=\"avgloss\"></a> Average Loss\n```python\ndata = [0.01, 0.02, -0.01, -0.03, -0.015, 0.005];\nta.avgloss(data);\n# output (float)\n# -0.018\n```\n#### <a id=\"drawdown\"></a>Drawdown\n```python\ndata = [1, 2, 3, 4, 2, 3];\nta.drawdown([1,2,3,4,2,3]);\n# output (float)\n# -0.5\n```\n#### <a id=\"median\"></a>Median\n```python\ndata = [4, 6, 3, 1, 2, 5];\nlength = 4; # default = len(data)\nta.median(data, length);\n# output (array)\n# [3, 2, 2]\n```\n#### <a id=\"rh\"></a>Recent High\n```python\ndata = [4,5,6,7,8,9,8,7,8,9,10,3,2,1];\nlookback = 3; # No higher values after 3 periods? resets after each new high\nta.recent_high(data, lookback);\n# output (dictionary)\n# {'index': 10, 'value': 10}\n```\n#### <a id=\"rl\"></a>Recent Low\n```python\ndata = [1,4,5,6,4,3,2,3,4,3,5,7,8,8,5];\nlookback = 4; # No lower values after 4 periods? resets after each new low\nta.recent_low(data, lookback);\n# output (dictionary)\n# {'index': 6, 'value': 2}\n```\n#### <a id=\"mad\"></a>Median Absolute Deviation\n```python\ndata = [3, 7, 5, 4, 3, 8, 9];\nlength = 6; # default = len(data)\nta.mad(data, length);\n# output (array)\n# [1, 2]\n```\n#### <a id=\"aad\"></a>Average Absolute Deviation\n```python\ndata = [4, 6, 8, 6, 8, 9, 10, 11];\nlength = 7; # default = len(data)\nta.aad(data, length);\n# output (array)\n# [1.673, 1.469]\n```\n#### <a id=\"stderr\"></a>Standard Error\n```python\ndata = [34, 54, 45, 43, 57, 38, 49];\nsize = 10; # default = len(data)\nta.se(data, size);\n# output (float)\n# 2.424\n```\n#### <a id=\"ssd\"></a>Sum Squared Differences\n```python\ndata = [7, 6, 5, 7, 9, 8, 3, 5, 4];\nlength = 7; # default = len(length)\nta.ssd(data, length);\n# output (array)\n# [4.87, 4.986, 5.372]\n```\n#### <a id=\"log\"></a>Logarithm\n```python\ndata = [5, 14, 18, 28, 68, 103];\nta.log(data);\n# output (array)\n# [1.61, 2.64, 2.89, 3.33, 4.22, 4.63]\n```\n#### <a id=\"exp\"></a>Exponent\n```python\ndata = [1.6, 2.63, 2.89, 3.33, 4.22, 4.63];\nta.exp(data);\n# output (array)\n# [4.95, 13.87, 17.99, 27.94, 68.03, 102.51]\n```\n#### <a id=\"norm\"></a>Normalize\n```python\ndata = [5,4,9,4];\nmargin = 0.1; # margin % (default = 0)\nta.normalize(data, margin);\n# output (array)\n# [0.22, 0.06, 0.86, 0.06]\n```\n#### <a id=\"dnorm\"></a>Denormalize\n```python\ndata = [5,4,9,4]; # original data || [highest, lowest]\nnorm = [0.22, 0.06, 0.86, 0.06, 0.44]; # normalized data\nmargin = 0.1; # margin % (default = 0)\nta.denormalize(data, norm, margin);\n# output (array)\n# [5 ,4, 9, 4, 6.4]\n```\n#### <a id=\"normp\"></a>Normalize Pair\n```python\npair1 = [10,12,11,13];\npair2 = [100,130,100,140];\nta.normalize_pair(pair1, pair2);\n# output (array)\n# [[55, 55], [66, 71.5], [60.5, 54.99], [71.5, 76.99]]\n```\n#### <a id=\"normf\"></a>Normalize From\n```python\ndata = [8, 12, 10, 11];\nbaseline = 100;\nta.normalize_from(data, baseline);\n# output (array)\n# [100, 150, 125, 137.5]\n```\n#### <a id=\"standard\"></a>Standardize\n```python\ndata = [6,4,6,8,6];\nta.standardize(data);\n# output (array)\n# [0, -1.581, 0, 1.581, 0]\n```\n#### <a id=\"zscore\"></a>Z-Score\n```python\ndata = [34,54,45,43,57,38,49];\nlength = 5;\nta.zscore(data, length);\n# output (array)\n# [1.266, -1.331, 0.408]\n```\n#### <a id=\"kmeans\"></a>K-means Clustering\n```python\ndata = [2, 3, 4, 5, 3, 5, 7, 8, 6, 8, 6, 4, 2, 6];\nlength = 4;\nta.kmeans(data, length);\n# output (array)\n# [[ 4, 5, 5, 4 ], [ 7, 6, 6, 6 ], [ 8, 8 ], [ 2, 3, 3, 2 ]]\n```\n#### <a id=\"mse\"></a>Mean Squared Error\n```python\ndata1 = [7,8,7,8,6,9];\ndata2 = [6,8,8,9,6,8];\nta.mse(data1, data2);\n# output (float)\n# 0.6666666666666666\n```\n#### <a id=\"cum\"></a>Cumulative\n```python\ndata = [3,5,7,5,10];\nlength = 4;\nta.cum(data, length);\n# output (array)\n# [20, 27]\n```\n### Chart types\n#### <a id=\"ha\"></a>Heikin Ashi\n```python\ndata = [[3, 4, 2, 3], [3, 6, 3, 5], [5, 5, 2, 3]]; # [open, high, low, close]\nta.ha(data);\n# output (array)\n# [open, high, low, close]\n# first 7-10 candles are unreliable\n```\n#### <a id=\"ren\"></a>Renko\n```python\ndata = [[8, 6], [9, 7], [9, 8]]; # [high, low]\nbricksize = 3;\nta.ren(data, bricksize);\n# output (array)\n# [open, high, low, close]\n```\n### Miscellaneous\n#### <a id=\"times_up\"></a>Times Up\n```python\ndata = [5,6,7,8,7,6,5];\nlength = 3;\nta.times_up(data, length);\n# output (array)\n# [1, 0, 0, 0]\n```\n#### <a id=\"times_dn\"></a>Times Down\n```python\ndata = [5,6,7,8,7,6,5];\nlength = 3;\nta.times_down(data, length);\n# output (array)\n# [0, 0, 0, 1]\n```\n### Experimental Functions\n#### <a id=\"sup\"></a>Support Line\n```python\ndata = [4,3,2,5,7,6,5,4,7,8,5,4,6,7,5];\nstart = {\"index\": 2, \"value\": 2}; # default = recent_low(data, 25)\nsupport = ta.support(data, start);\n# output (dictionary)\n# ['calculate'] = function(x) // calculates line at position x from start['index'] (= 0)\n# ['slope'] = delta y per x\n# ['lowest'] = lowest (start) value at x = 0\n# ['index'] = (start) index of lowest value\n# to get the line at the current candle / chart period\ncurrent = support['calculate'](len(data)-support['index']);\n```\n#### <a id=\"res\"></a>Resistance Line\n```python\ndata = [5,7,5,5,4,6,5,4,6,5,4,3,2,4,3,2,1];\nstart = {\"index\": 1, \"value\": 7}; # default = recent_high(data, 25)\nresistance = ta.resistance(data, start);\n# output (dictionary)\n# ['calculate'] = function(x) // calculates line at position x from start['index'] (= 0)\n# ['slope'] = delta y per x\n# ['highest'] = highest (start) value\n# ['index'] = (start) index of highest value\n# to get the line at the current candle / chart period\ncurrent = resistance['calculate'](len(data)-resistance['index']);\n```\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## License\n[MIT](https:#choosealicense.com/licenses/mit/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Bitvested/ta.py",
    "keywords": "financial,technical,analysis,ta,simple,weighted,exponential,sma,wma,ema,aroon,rsi,stochastics,macd,atr,vwap,lsma,least,squares,average,kama,variance,correlation,aad,mad,ssd,kmeans,monte,carlo",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ta-py",
    "package_url": "https://pypi.org/project/ta-py/",
    "platform": null,
    "project_url": "https://pypi.org/project/ta-py/",
    "project_urls": {
      "Homepage": "https://github.com/Bitvested/ta.py"
    },
    "release_url": "https://pypi.org/project/ta-py/1.6.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "ta.py is a Python package for dealing with financial technical analysis",
    "version": "1.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16432201,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7a459d3ae8023eb1e1aa1ff85bf94c20a8164abcf70e15831d9590c72ca9c53",
          "md5": "2eb61f519016ead13e572cbdec438f80",
          "sha256": "bc272433c61bd3fdc0c0e9bdfdb169906b2e9d235d24e75bedf96ac2819dc78c"
        },
        "downloads": -1,
        "filename": "ta_py-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2eb61f519016ead13e572cbdec438f80",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8871,
        "upload_time": "2021-04-18T10:32:50",
        "upload_time_iso_8601": "2021-04-18T10:32:50.009919Z",
        "url": "https://files.pythonhosted.org/packages/f7/a4/59d3ae8023eb1e1aa1ff85bf94c20a8164abcf70e15831d9590c72ca9c53/ta_py-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49f1d989ff36ea2602f78789e34532423b6c147d6bf66a0f41e50b8de4eb68ff",
          "md5": "39436e0556eff64622dfe7648964fb7c",
          "sha256": "b0cacf8734e4670783836e4c07117af9ff23db19537aefe33e9b14a1ecfc038e"
        },
        "downloads": -1,
        "filename": "ta_py-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "39436e0556eff64622dfe7648964fb7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12292,
        "upload_time": "2021-04-18T10:32:51",
        "upload_time_iso_8601": "2021-04-18T10:32:51.523558Z",
        "url": "https://files.pythonhosted.org/packages/49/f1/d989ff36ea2602f78789e34532423b6c147d6bf66a0f41e50b8de4eb68ff/ta_py-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4bdd504889b76e2ddbf14d7d0f3bf26b81a5926db5ad83c8baed67cb3ae76e6",
          "md5": "da2e3baa244ea25b24180603382e55b3",
          "sha256": "ab7e21319c30a74a18416c80a96a09eb856be5b80d6c6770920cf2ecb51949cd"
        },
        "downloads": -1,
        "filename": "ta_py-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da2e3baa244ea25b24180603382e55b3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9865,
        "upload_time": "2021-04-24T10:49:00",
        "upload_time_iso_8601": "2021-04-24T10:49:00.026564Z",
        "url": "https://files.pythonhosted.org/packages/d4/bd/d504889b76e2ddbf14d7d0f3bf26b81a5926db5ad83c8baed67cb3ae76e6/ta_py-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4c743ee5e9f63ba46e5b978ad7cda2679bba8ee4ea5483661b3befef99d932a",
          "md5": "72cb2471a625c543855f1127cf1b7411",
          "sha256": "0990be6a11861e65b87a31aac6ef588fbeefbb77e1b21d2075c9e15619411ba3"
        },
        "downloads": -1,
        "filename": "ta_py-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72cb2471a625c543855f1127cf1b7411",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10325,
        "upload_time": "2021-05-09T11:43:20",
        "upload_time_iso_8601": "2021-05-09T11:43:20.942604Z",
        "url": "https://files.pythonhosted.org/packages/c4/c7/43ee5e9f63ba46e5b978ad7cda2679bba8ee4ea5483661b3befef99d932a/ta_py-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a36e5de0e69750fbd6f77e3b4a3234c0979dde38062cfb465749cec8f1abb12",
          "md5": "74a887e7f6e0d9813126017925d57606",
          "sha256": "b02f4a54d2d7f71117ffe771c991aed17783099844305fbc5a88be993f87ff6f"
        },
        "downloads": -1,
        "filename": "ta_py-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74a887e7f6e0d9813126017925d57606",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11295,
        "upload_time": "2021-06-05T10:24:09",
        "upload_time_iso_8601": "2021-06-05T10:24:09.159764Z",
        "url": "https://files.pythonhosted.org/packages/5a/36/e5de0e69750fbd6f77e3b4a3234c0979dde38062cfb465749cec8f1abb12/ta_py-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e88d7567ae048aa423e9fb8b5201b54d01577bfb825151ecb40bf61abdb27aa9",
          "md5": "d2f0aa443485c43a198377eb9a107ba9",
          "sha256": "f4d250a53ba459859e296a15c2d045025c33bc631740af42ff9c9b876e17560e"
        },
        "downloads": -1,
        "filename": "ta_py-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2f0aa443485c43a198377eb9a107ba9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11291,
        "upload_time": "2021-06-06T18:19:46",
        "upload_time_iso_8601": "2021-06-06T18:19:46.217019Z",
        "url": "https://files.pythonhosted.org/packages/e8/8d/7567ae048aa423e9fb8b5201b54d01577bfb825151ecb40bf61abdb27aa9/ta_py-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d6dba347f9b0bfee414eeab0990c1a721f15a059245847a739763fbeacfbbfa",
          "md5": "add78bd5629d5a4a444d1479306f67f9",
          "sha256": "9080cdc2584dcf3816cde7816a45408616b88f9df962c396b3974c04804521b9"
        },
        "downloads": -1,
        "filename": "ta_py-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "add78bd5629d5a4a444d1479306f67f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11391,
        "upload_time": "2021-06-25T17:59:38",
        "upload_time_iso_8601": "2021-06-25T17:59:38.105659Z",
        "url": "https://files.pythonhosted.org/packages/3d/6d/ba347f9b0bfee414eeab0990c1a721f15a059245847a739763fbeacfbbfa/ta_py-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3ea7fe2d05c7f095e6744d631c846b4626068477c628679cf546d332a0cca19",
          "md5": "4fceda00059145511ca7077d92e93689",
          "sha256": "669cc1d46e6e98996d046ceec251e221f51cdec6ac1fedddefca7ce1ec06d6b3"
        },
        "downloads": -1,
        "filename": "ta_py-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4fceda00059145511ca7077d92e93689",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11533,
        "upload_time": "2021-07-23T07:58:01",
        "upload_time_iso_8601": "2021-07-23T07:58:01.250464Z",
        "url": "https://files.pythonhosted.org/packages/b3/ea/7fe2d05c7f095e6744d631c846b4626068477c628679cf546d332a0cca19/ta_py-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a11bf680463402a976aaa7433ca68bd01d6f5e3ee1897019bdde6b13ac6c4d9",
          "md5": "01bd82f7aacc1b6484498d51ca88d8fa",
          "sha256": "5106905c837b1fd8e46727aad5981db39997fbe6737b06799312e067e548349e"
        },
        "downloads": -1,
        "filename": "ta_py-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01bd82f7aacc1b6484498d51ca88d8fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11588,
        "upload_time": "2021-07-29T16:56:50",
        "upload_time_iso_8601": "2021-07-29T16:56:50.892572Z",
        "url": "https://files.pythonhosted.org/packages/5a/11/bf680463402a976aaa7433ca68bd01d6f5e3ee1897019bdde6b13ac6c4d9/ta_py-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "164ab1f87199839c0abf78d11da598303e9fc75c9df22797160d05a197745dbc",
          "md5": "6602049486206c854f99160e9fc36959",
          "sha256": "8de6e400a335dd6141c746c815cd6b76c972bd2df2fdd3200201caf33a381a57"
        },
        "downloads": -1,
        "filename": "ta_py-1.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6602049486206c854f99160e9fc36959",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11587,
        "upload_time": "2021-07-30T05:43:05",
        "upload_time_iso_8601": "2021-07-30T05:43:05.221115Z",
        "url": "https://files.pythonhosted.org/packages/16/4a/b1f87199839c0abf78d11da598303e9fc75c9df22797160d05a197745dbc/ta_py-1.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3470d15767832ad942ed9800a0ed5e0b64e7627b012a525662b43945421eba55",
          "md5": "db72248a2cd2f8c6d8bc53ea9e948674",
          "sha256": "1bb04ff64de8e448a400d18d11aea0f04c480dc50dc4ff78c218393bb9451177"
        },
        "downloads": -1,
        "filename": "ta_py-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db72248a2cd2f8c6d8bc53ea9e948674",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12187,
        "upload_time": "2021-07-30T09:30:26",
        "upload_time_iso_8601": "2021-07-30T09:30:26.257353Z",
        "url": "https://files.pythonhosted.org/packages/34/70/d15767832ad942ed9800a0ed5e0b64e7627b012a525662b43945421eba55/ta_py-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbe12d0675b8c96ab4c096055cdbf5a0fea29fed9a2fc2c20129b6df42ebf70a",
          "md5": "0948634229003ab23d1c65c37bd37565",
          "sha256": "ffdeb6e99afbdf2f446f8c98a3a0a5b99c77f8e899317f37b4a8770b59330e2c"
        },
        "downloads": -1,
        "filename": "ta_py-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0948634229003ab23d1c65c37bd37565",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13173,
        "upload_time": "2021-07-30T19:18:55",
        "upload_time_iso_8601": "2021-07-30T19:18:55.673086Z",
        "url": "https://files.pythonhosted.org/packages/cb/e1/2d0675b8c96ab4c096055cdbf5a0fea29fed9a2fc2c20129b6df42ebf70a/ta_py-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "067332c936830044e4e4e00ab3dec196061f75fe2d42908bd51a8af8a4ed70ba",
          "md5": "c96aee185faf910ee942fd6a6ea66569",
          "sha256": "87dfff3ee30e7ebc05d5f84ea3a3154c852c4b4d6c9188665f4e79095847e12f"
        },
        "downloads": -1,
        "filename": "ta_py-1.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c96aee185faf910ee942fd6a6ea66569",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14160,
        "upload_time": "2021-10-12T19:45:42",
        "upload_time_iso_8601": "2021-10-12T19:45:42.961661Z",
        "url": "https://files.pythonhosted.org/packages/06/73/32c936830044e4e4e00ab3dec196061f75fe2d42908bd51a8af8a4ed70ba/ta_py-1.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93d409e9fe06725ea824443b1f0f193b84efd05d321850a04122a9c7dab8c0da",
          "md5": "077aef043fec75a65f9534a794c2a4a5",
          "sha256": "06d4e96da84e89335b995706fdf231c089938538cc33b4736cae7dcc83bd00cf"
        },
        "downloads": -1,
        "filename": "ta_py-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "077aef043fec75a65f9534a794c2a4a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13210,
        "upload_time": "2021-07-30T20:01:33",
        "upload_time_iso_8601": "2021-07-30T20:01:33.453496Z",
        "url": "https://files.pythonhosted.org/packages/93/d4/09e9fe06725ea824443b1f0f193b84efd05d321850a04122a9c7dab8c0da/ta_py-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "349ce5420411dd09daaebaaa4017507ac6c3f8983dc972b32f2eb5a26ca1927a",
          "md5": "19b5f688ef751fa62965e48918d52b6a",
          "sha256": "234a5bd5963fefbe2d587cabf2c661137bf23f1302a945cf52dee08f8864b94e"
        },
        "downloads": -1,
        "filename": "ta_py-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19b5f688ef751fa62965e48918d52b6a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13324,
        "upload_time": "2021-08-01T19:05:22",
        "upload_time_iso_8601": "2021-08-01T19:05:22.439364Z",
        "url": "https://files.pythonhosted.org/packages/34/9c/e5420411dd09daaebaaa4017507ac6c3f8983dc972b32f2eb5a26ca1927a/ta_py-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ac5032dac14ab088e1400ffb7349991104b3bf3f95a0fd9e64390f814563da1",
          "md5": "c4de3d26187ad192f54b1f5995897877",
          "sha256": "7ef0ff0bda1540a93604b50fc78aced40186f2ff0b62d4537f333158dea18b88"
        },
        "downloads": -1,
        "filename": "ta_py-1.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c4de3d26187ad192f54b1f5995897877",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13478,
        "upload_time": "2021-08-01T19:53:19",
        "upload_time_iso_8601": "2021-08-01T19:53:19.206645Z",
        "url": "https://files.pythonhosted.org/packages/0a/c5/032dac14ab088e1400ffb7349991104b3bf3f95a0fd9e64390f814563da1/ta_py-1.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcc91029ac94c28a4c0d1072d62c93a985880507a469e10f8ea792ceb72ee944",
          "md5": "1d7279916be810cfceb47ac6567b1da9",
          "sha256": "b331246de74ea79ca687acb9d9ae73510ab10096e05b5071c1aa7f24872fe19a"
        },
        "downloads": -1,
        "filename": "ta_py-1.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d7279916be810cfceb47ac6567b1da9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13476,
        "upload_time": "2021-08-01T20:45:42",
        "upload_time_iso_8601": "2021-08-01T20:45:42.024329Z",
        "url": "https://files.pythonhosted.org/packages/bc/c9/1029ac94c28a4c0d1072d62c93a985880507a469e10f8ea792ceb72ee944/ta_py-1.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2428996762b6fbcae45b02a158f29cdcb545473511e8528852fc4802e8f8f2a",
          "md5": "f91d487ae80c692950b1b50e140cd3e5",
          "sha256": "ddc45980311c59f68042725b5e12df23ca54c9536f14e89397a6e7ca4bb686ff"
        },
        "downloads": -1,
        "filename": "ta_py-1.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f91d487ae80c692950b1b50e140cd3e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13786,
        "upload_time": "2021-08-02T09:30:55",
        "upload_time_iso_8601": "2021-08-02T09:30:55.179126Z",
        "url": "https://files.pythonhosted.org/packages/b2/42/8996762b6fbcae45b02a158f29cdcb545473511e8528852fc4802e8f8f2a/ta_py-1.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f539955f8402fcbe63088e5a154a3b253fb1aa9abd2dc6dd868fdcfbc21b7b9b",
          "md5": "2c8dab26b478b4df328a100ec31a65c1",
          "sha256": "f049975c391ddc1b6365e412c9b8dbcf6b43b2781bd43a2bf42d03bf4c4cecc5"
        },
        "downloads": -1,
        "filename": "ta_py-1.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c8dab26b478b4df328a100ec31a65c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13958,
        "upload_time": "2021-08-24T07:19:29",
        "upload_time_iso_8601": "2021-08-24T07:19:29.973700Z",
        "url": "https://files.pythonhosted.org/packages/f5/39/955f8402fcbe63088e5a154a3b253fb1aa9abd2dc6dd868fdcfbc21b7b9b/ta_py-1.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11b251dde3b7922e3b7800b60498a7150e2a437a99df85c90565a8d3db796c3b",
          "md5": "c21879924422b0b2459e724b8d987c32",
          "sha256": "4c7c93610e3be221ea356c92899990dee99939795709d0b0f4338bd8f7dad72d"
        },
        "downloads": -1,
        "filename": "ta_py-1.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c21879924422b0b2459e724b8d987c32",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14149,
        "upload_time": "2021-09-10T16:23:32",
        "upload_time_iso_8601": "2021-09-10T16:23:32.616736Z",
        "url": "https://files.pythonhosted.org/packages/11/b2/51dde3b7922e3b7800b60498a7150e2a437a99df85c90565a8d3db796c3b/ta_py-1.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e167dc1785faa05f5b2eae4767a185ad2ec0a7300fbdc81f9382e5c1202a232",
          "md5": "1f958fcbe1db73f621ed103cd646fcae",
          "sha256": "924013a71d6e7d3865867c5d8ed49106defb04727a021dcb452152dcd1441ca1"
        },
        "downloads": -1,
        "filename": "ta_py-1.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f958fcbe1db73f621ed103cd646fcae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14150,
        "upload_time": "2021-10-12T15:45:33",
        "upload_time_iso_8601": "2021-10-12T15:45:33.652903Z",
        "url": "https://files.pythonhosted.org/packages/0e/16/7dc1785faa05f5b2eae4767a185ad2ec0a7300fbdc81f9382e5c1202a232/ta_py-1.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f165956c6c87860d7160dd64c4fe911ec3146894d3f0c7814c5fc58421986cf",
          "md5": "24a38bda90c82f74268e30349b3d4579",
          "sha256": "d5d9211fec372d11694937956301054c8598e9898568eae09c01c34c6ec9fe79"
        },
        "downloads": -1,
        "filename": "ta_py-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24a38bda90c82f74268e30349b3d4579",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15415,
        "upload_time": "2021-12-27T10:13:17",
        "upload_time_iso_8601": "2021-12-27T10:13:17.229266Z",
        "url": "https://files.pythonhosted.org/packages/2f/16/5956c6c87860d7160dd64c4fe911ec3146894d3f0c7814c5fc58421986cf/ta_py-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf92100c29064eaaf50a81eec81ad332f7bc1ddc7391bdd14720cc4182e9387d",
          "md5": "77070fe9c4421b1913ea1d7eff873cab",
          "sha256": "883ed545992c3d4f3b557f3fe5d66914da228744e50830cb2d02faed3d7b4e40"
        },
        "downloads": -1,
        "filename": "ta_py-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77070fe9c4421b1913ea1d7eff873cab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16329,
        "upload_time": "2022-02-21T10:59:58",
        "upload_time_iso_8601": "2022-02-21T10:59:58.666575Z",
        "url": "https://files.pythonhosted.org/packages/bf/92/100c29064eaaf50a81eec81ad332f7bc1ddc7391bdd14720cc4182e9387d/ta_py-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27b1dc5aa1a1db9597174feb6684b5ce05bbd8e45b757c70f1e3231b451b8537",
          "md5": "27552c3985d62b6b166f6bf4ee0a1ccb",
          "sha256": "c2f3ef2424e572fb03f84d482dbe667ff2f66f23509f24d466fe61c681ae42e5"
        },
        "downloads": -1,
        "filename": "ta_py-1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27552c3985d62b6b166f6bf4ee0a1ccb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16408,
        "upload_time": "2022-02-21T15:43:26",
        "upload_time_iso_8601": "2022-02-21T15:43:26.921255Z",
        "url": "https://files.pythonhosted.org/packages/27/b1/dc5aa1a1db9597174feb6684b5ce05bbd8e45b757c70f1e3231b451b8537/ta_py-1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79fe9659bae80252de5b1a2771d697ed4c303d51894c0ce7f4db029f308df010",
          "md5": "460bf9a467ae9ad5a94cd56c372ef89e",
          "sha256": "40cbaa0e6f097d53b0061d2a693199960df4445acd2071efe3e2e57d15c1f14a"
        },
        "downloads": -1,
        "filename": "ta_py-1.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "460bf9a467ae9ad5a94cd56c372ef89e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16412,
        "upload_time": "2022-02-23T12:56:55",
        "upload_time_iso_8601": "2022-02-23T12:56:55.283289Z",
        "url": "https://files.pythonhosted.org/packages/79/fe/9659bae80252de5b1a2771d697ed4c303d51894c0ce7f4db029f308df010/ta_py-1.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f42f45bd626cdeacaaa7d31dbad9bd7098cfc6449396904de6b4caec12c94da5",
          "md5": "c117077c9dfb0cd16fc800c2ec91bc73",
          "sha256": "b36eab3248d532fdaa37a4a988c2b110071d23d984dcb2409576306d91700dbd"
        },
        "downloads": -1,
        "filename": "ta_py-1.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c117077c9dfb0cd16fc800c2ec91bc73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16416,
        "upload_time": "2022-03-02T15:36:13",
        "upload_time_iso_8601": "2022-03-02T15:36:13.145783Z",
        "url": "https://files.pythonhosted.org/packages/f4/2f/45bd626cdeacaaa7d31dbad9bd7098cfc6449396904de6b4caec12c94da5/ta_py-1.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f1f9eb745e3893e3cdb04218823962ecd1bc99a8b3142c3443e069b42447d95",
          "md5": "3c31e9d689aa988f971e49db16847b53",
          "sha256": "b2b11b4de9765b8347b5fbab0699f0442f170a7e92df8062f53d8e2bca0cb73d"
        },
        "downloads": -1,
        "filename": "ta_py-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c31e9d689aa988f971e49db16847b53",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17289,
        "upload_time": "2022-04-19T17:02:20",
        "upload_time_iso_8601": "2022-04-19T17:02:20.840154Z",
        "url": "https://files.pythonhosted.org/packages/9f/1f/9eb745e3893e3cdb04218823962ecd1bc99a8b3142c3443e069b42447d95/ta_py-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0b1651ee95a23b8596fcbc700dfce864357f72a6af90eed026b2c2569540020",
          "md5": "b185e8648b66253a26292a00e2f3d9cb",
          "sha256": "42c68a19f3616b4d1613abb0fffd2766cee7f733677d0c5a6f08781dd0f513b3"
        },
        "downloads": -1,
        "filename": "ta_py-1.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b185e8648b66253a26292a00e2f3d9cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17328,
        "upload_time": "2022-04-19T19:38:56",
        "upload_time_iso_8601": "2022-04-19T19:38:56.362301Z",
        "url": "https://files.pythonhosted.org/packages/b0/b1/651ee95a23b8596fcbc700dfce864357f72a6af90eed026b2c2569540020/ta_py-1.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc6a2f3a9b0e8e9c2a4c73f107a2256f52105c8b3d8f7e2b5d5f45f029413c05",
          "md5": "ccc2e7dcaee3926d8b973ae495d07ec6",
          "sha256": "0ceaeaec814dbb6957fd23c9a465a5a48c5017153d8394decddc3b8f4d6f9970"
        },
        "downloads": -1,
        "filename": "ta_py-1.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ccc2e7dcaee3926d8b973ae495d07ec6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17785,
        "upload_time": "2022-04-22T11:11:13",
        "upload_time_iso_8601": "2022-04-22T11:11:13.892109Z",
        "url": "https://files.pythonhosted.org/packages/dc/6a/2f3a9b0e8e9c2a4c73f107a2256f52105c8b3d8f7e2b5d5f45f029413c05/ta_py-1.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d54e7ccabeb65af14d96678746d6f1d09d52c043f4ce928c95a2f3e75ec6b68",
          "md5": "e382ba881a130b69cf5436731c137e44",
          "sha256": "eabc2f740690ad1b58344f91035f3e5751e32d75149e6d1c309824a3b12ce5cb"
        },
        "downloads": -1,
        "filename": "ta_py-1.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e382ba881a130b69cf5436731c137e44",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17966,
        "upload_time": "2022-05-06T19:01:25",
        "upload_time_iso_8601": "2022-05-06T19:01:25.898549Z",
        "url": "https://files.pythonhosted.org/packages/1d/54/e7ccabeb65af14d96678746d6f1d09d52c043f4ce928c95a2f3e75ec6b68/ta_py-1.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dd45f50d76325e27337e1b755c31505c8d3e1cee1ec988b8f4acc7331f876d6",
          "md5": "2a26c1d37096073aa0d0d384dc5b5c0f",
          "sha256": "1bc0f0e0e80cd3b9022d7c1c75d2b220d506264d28ac7eb281e1ebc80f644eac"
        },
        "downloads": -1,
        "filename": "ta_py-1.4.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a26c1d37096073aa0d0d384dc5b5c0f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18277,
        "upload_time": "2022-06-03T16:52:16",
        "upload_time_iso_8601": "2022-06-03T16:52:16.222139Z",
        "url": "https://files.pythonhosted.org/packages/6d/d4/5f50d76325e27337e1b755c31505c8d3e1cee1ec988b8f4acc7331f876d6/ta_py-1.4.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "840f858321add55e43255dc45294b0e1f111a358dffb6b4c40187ea36138b021",
          "md5": "d3e3ac1c023dafc0359e707294802072",
          "sha256": "d0365f6d03a6eb79a5ef31e622a7afdf0c05071a473dbc7e80bd1b30df781c41"
        },
        "downloads": -1,
        "filename": "ta_py-1.4.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3e3ac1c023dafc0359e707294802072",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18195,
        "upload_time": "2022-06-04T09:41:59",
        "upload_time_iso_8601": "2022-06-04T09:41:59.554491Z",
        "url": "https://files.pythonhosted.org/packages/84/0f/858321add55e43255dc45294b0e1f111a358dffb6b4c40187ea36138b021/ta_py-1.4.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70f2c3ecc17176b008dfe1475481650c8c11b71d9ae433967aaf4e92cac11cb6",
          "md5": "8d3021354a3f07c595dfb8b5e2b9e80d",
          "sha256": "61defa029d8ad803a427a996917d3a930b4314769b56f70a6106d686a18eff05"
        },
        "downloads": -1,
        "filename": "ta_py-1.4.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d3021354a3f07c595dfb8b5e2b9e80d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18287,
        "upload_time": "2022-06-07T08:17:50",
        "upload_time_iso_8601": "2022-06-07T08:17:50.863490Z",
        "url": "https://files.pythonhosted.org/packages/70/f2/c3ecc17176b008dfe1475481650c8c11b71d9ae433967aaf4e92cac11cb6/ta_py-1.4.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82ccaf0fba8ace737f142b110acba2505664feb615d17046cbc99545fa474271",
          "md5": "8cc7d93b832ec91f5e0bb56d1a6f9945",
          "sha256": "530a5a255b908d73975865408e5bc5f094c7842b4b7048117c3af2bfeae29133"
        },
        "downloads": -1,
        "filename": "ta_py-1.4.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cc7d93b832ec91f5e0bb56d1a6f9945",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18289,
        "upload_time": "2022-08-07T12:42:16",
        "upload_time_iso_8601": "2022-08-07T12:42:16.998728Z",
        "url": "https://files.pythonhosted.org/packages/82/cc/af0fba8ace737f142b110acba2505664feb615d17046cbc99545fa474271/ta_py-1.4.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ae9e72024e839adc13c647f00835bb59caf6a18cef69a1b14d35065d7c14b06",
          "md5": "5050c86f306ba2817445380ac14528db",
          "sha256": "1ec72c647821de770dcb7aae3392a31e127c469ccda8cc10b24c1aa4a6f7dab4"
        },
        "downloads": -1,
        "filename": "ta_py-1.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5050c86f306ba2817445380ac14528db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19273,
        "upload_time": "2022-08-19T22:23:29",
        "upload_time_iso_8601": "2022-08-19T22:23:29.087622Z",
        "url": "https://files.pythonhosted.org/packages/0a/e9/e72024e839adc13c647f00835bb59caf6a18cef69a1b14d35065d7c14b06/ta_py-1.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e0c31fdd06532169b9f0ebcc88b6467faf1059cd995b117fb66936bbb4e4e48",
          "md5": "c7fb49194afeb3ef6b1f6bb3c0d231e5",
          "sha256": "83f5848b63a605e31850f179e564704ea466de33fbe103d73495def5d6b3eac6"
        },
        "downloads": -1,
        "filename": "ta_py-1.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c7fb49194afeb3ef6b1f6bb3c0d231e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19662,
        "upload_time": "2022-12-18T09:25:40",
        "upload_time_iso_8601": "2022-12-18T09:25:40.267608Z",
        "url": "https://files.pythonhosted.org/packages/5e/0c/31fdd06532169b9f0ebcc88b6467faf1059cd995b117fb66936bbb4e4e48/ta_py-1.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3719aadd23394c46e5d6ed81fff4dd5bad020c4af73ea5bd9a35143c9a61ca28",
          "md5": "0e13e6db3e76f0d3570b5e4c77ae834d",
          "sha256": "ee14d5dc02b203401a2f57851a7c13317e6f63fc1c5aa404eccb179b23be25fb"
        },
        "downloads": -1,
        "filename": "ta_py-1.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e13e6db3e76f0d3570b5e4c77ae834d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20060,
        "upload_time": "2023-01-12T22:36:23",
        "upload_time_iso_8601": "2023-01-12T22:36:23.050368Z",
        "url": "https://files.pythonhosted.org/packages/37/19/aadd23394c46e5d6ed81fff4dd5bad020c4af73ea5bd9a35143c9a61ca28/ta_py-1.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66c251dc975bd04d973f3fd8fbe12dcfc738abb0bdfac1afa6270e119f121e51",
          "md5": "8a74c3404e846ea7b0900173ec54eb45",
          "sha256": "4bdb6c2764b0b9b19e0c4fac78fd3a63a477c4761e8b01008fa84c64e1581ee7"
        },
        "downloads": -1,
        "filename": "ta_py-1.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a74c3404e846ea7b0900173ec54eb45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20225,
        "upload_time": "2023-01-15T00:39:10",
        "upload_time_iso_8601": "2023-01-15T00:39:10.955636Z",
        "url": "https://files.pythonhosted.org/packages/66/c2/51dc975bd04d973f3fd8fbe12dcfc738abb0bdfac1afa6270e119f121e51/ta_py-1.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66c251dc975bd04d973f3fd8fbe12dcfc738abb0bdfac1afa6270e119f121e51",
        "md5": "8a74c3404e846ea7b0900173ec54eb45",
        "sha256": "4bdb6c2764b0b9b19e0c4fac78fd3a63a477c4761e8b01008fa84c64e1581ee7"
      },
      "downloads": -1,
      "filename": "ta_py-1.6.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8a74c3404e846ea7b0900173ec54eb45",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20225,
      "upload_time": "2023-01-15T00:39:10",
      "upload_time_iso_8601": "2023-01-15T00:39:10.955636Z",
      "url": "https://files.pythonhosted.org/packages/66/c2/51dc975bd04d973f3fd8fbe12dcfc738abb0bdfac1afa6270e119f121e51/ta_py-1.6.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}