{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: Turkish",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Turkish Morphology\n\n![](https://github.com/google-research/turkish-morphology/workflows/Linux%20Build%20Status/badge.svg)\n\nA two-level morphological analyzer for Turkish.\n\nThis is not an official Google product.\n\n## Components\n\nThis implementation is composed of three layers:\n\n* **Lexicons:**\n\n  This layer includes wide-coverage [Turkish lexicons][3] which are manually\n  annotated and validated for part-of-speech and morphophonemic irregularities.\n  They are intended to be used in building Turkish natural language processing\n  tools, such as morphological analyzers. The set of base lexicons that we\n  provide includes annotated lexical items for 47,202 words. The tagsets and\n  the annotation scheme are described in the [lexicon annotation guidelines][4].\n\n* **Morphotactics:**\n\n  This layer includes [a set of FST definitions][5] which are implemented in a\n  custom format which is similar to AT&T FSM format (only difference being that\n  we can use strings as state names and input/output labels for each transition\n  instead of integers). With each of these FSTs we define the suffixation\n  patterns and the morpheme inventories together with their corresponding\n  output morphological feature category-value pairs for a given part-of-speech.\n  Overall morphotactic model and the morphological feature category-value\n  tagsets are described in the [morphotactic model guidelines][6].\n\n* **Morphophonemics:**\n\n  This layer includes [a set of Thrax grammars][7], where each implements a\n  standalone morphophonemic process (such as vowel harmony, vowel drop,\n  consonant voicing and consonant drop and so on). Composition of the exported\n  FSTs defined in these Thrax grammars yield the [morphophonemic model][8] of\n  Turkish.\n\nThe first level of the morphological analysis is implemented by the\nmorphophonemic model, which takes a Turkish word and transforms it into the\nintermediate representation. The output of the first level is all possible\nhypotheses of word stem annotations with morphophonemic irregularities followed\nby the meta-morphemes that correspond to the suffixes that are realized in the\nsurface form.\n\n```\nInput: affında\nOutput: af\"+SH+NDA\n```\n\nLexicon entries and morphotactic FST definitions are composed and compiled into\na single FST which acts as the second level of the morphological analysis,\nnamely the morphotactic model. Morphotactic model takes the intermediate\ntape as the input and transforms it to all possible human-readable morphological\nanalyses that can be generated from the hypotheses generated by the first level.\n\n```\nInput: af\"+SH+NDA\nOutput: (af[NN]+[PersonNumber=A3sg]+Hn[Possessive=P2sg]+NDA[Case=Loc])+[Proper=False]\n```\n\nSee [Interpreting Human-Readable Morphological Analysis][12] section for a\ndescription of such human-readable morphological analysis.\n\n## How to Parse Words\n\nTo morphologically parse a word, simply run below from the project root\ndirectory.\n\n```\nbazel run -c opt scripts:print_analyses -- --word=[WORD_TO_PARSE]\n```\n\nThis will morphologically parse the input word against the two-level\nmorphological analyzer and output a set of human-readable morphological\nanalysis, as such:\n\n```\nbazel run -c opt scripts:print_analyses -- --word=geldiğinde\n> Morphological analyses for the word 'geldiğinde':\n> (gel[VB]+[Polarity=Pos])([NOMP]-DHk[Derivation=PastNom]+[PersonNumber=A3sg]+Hn[Possessive=P2sg]+NDA[Case=Loc]+[Copula=PresCop]+[PersonNumber=V3pl])+[Proper=False]\n> (gel[VB]+[Polarity=Pos])([NOMP]-DHk[Derivation=PastNom]+[PersonNumber=A3sg]+Hn[Possessive=P2sg]+NDA[Case=Loc]+[Copula=PresCop]+[PersonNumber=V3pl])+[Proper=True]\n> (gel[VB]+[Polarity=Pos])([NOMP]-DHk[Derivation=PastNom]+[PersonNumber=A3sg]+Hn[Possessive=P2sg]+NDA[Case=Loc]+[Copula=PresCop]+[PersonNumber=V3sg])+[Proper=False]\n> (gel[VB]+[Polarity=Pos])([NOMP]-DHk[Derivation=PastNom]+[PersonNumber=A3sg]+Hn[Possessive=P2sg]+NDA[Case=Loc]+[Copula=PresCop]+[PersonNumber=V3sg])+[Proper=True]\n> (gel[VB]+[Polarity=Pos])([NOMP]-DHk[Derivation=PastNom]+[PersonNumber=A3sg]+SH[Possessive=P3sg]+NDA[Case=Loc]+[Copula=PresCop]+[PersonNumber=V3pl])+[Proper=False]\n> (gel[VB]+[Polarity=Pos])([NOMP]-DHk[Derivation=PastNom]+[PersonNumber=A3sg]+SH[Possessive=P3sg]+NDA[Case=Loc]+[Copula=PresCop]+[PersonNumber=V3pl])+[Proper=True]\n> (gel[VB]+[Polarity=Pos])([NOMP]-DHk[Derivation=PastNom]+[PersonNumber=A3sg]+SH[Possessive=P3sg]+NDA[Case=Loc]+[Copula=PresCop]+[PersonNumber=V3sg])+[Proper=False]\n> (gel[VB]+[Polarity=Pos])([NOMP]-DHk[Derivation=PastNom]+[PersonNumber=A3sg]+SH[Possessive=P3sg]+NDA[Case=Loc]+[Copula=PresCop]+[PersonNumber=V3sg])+[Proper=True]\n> (gel[VB]+[Polarity=Pos])([VN]-DHk[Derivation=PastNom]+[PersonNumber=A3sg]+Hn[Possessive=P2sg]+NDA[Case=Loc])+[Proper=False]\n> (gel[VB]+[Polarity=Pos])([VN]-DHk[Derivation=PastNom]+[PersonNumber=A3sg]+Hn[Possessive=P2sg]+NDA[Case=Loc])+[Proper=True]\n> (gel[VB]+[Polarity=Pos])([VN]-DHk[Derivation=PastNom]+[PersonNumber=A3sg]+SH[Possessive=P3sg]+NDA[Case=Loc])+[Proper=False]\n> (gel[VB]+[Polarity=Pos])([VN]-DHk[Derivation=PastNom]+[PersonNumber=A3sg]+SH[Possessive=P3sg]+NDA[Case=Loc])+[Proper=True]\n```\n\nIf the input string is not accepted as a Turkish word, morphological analyzer\noutputs an empty result.\n\n```\nbazel run -c opt scripts:print_analyses -- --word=foo\n> 'foo' is not accepted as a Turkish word\n```\n\n## Interpreting Human-Readable Morphological Analysis\n\nAn example output human-readable morphological analysis is as follows;\n\n**Input Word** (*evlerindekilerin* = those that belongs to ones in their\nhomes):\n\n```\nbazel run -c opt scripts:print_analyses -- --word=evlerindekilerin\n```\n\n**Sample Output Morphological Analysis String**:\n\n```\n(ev[NN]+[PersonNumber=A3sg]+lArH[Possessive=P3pl]+NDA[Case=Loc])([PRF]-ki[Derivation=Pron]+lAr[PersonNumber=A3sg]+[Possessive=Pnon]+NHn[Case=Gen])+[Proper=False]\n```\n\nHuman-readable morphological analyses can be decomposed into parts:\n\n* **Inflectional groups:**\n\n  Each human-readable morphological analysis is composed of inflectional groups.\n  An inflectional group is a sub-word span, and it is created by affixation of a\n  derivational morpheme. Inflectional group analyses are enclosed in\n  parenthesis. Above example contains two inflectional groups:\n   - `(ev[NN]+[PersonNumber=A3sg]+lArH[Possessive=P3pl]+NDA[Case=Loc])`\n   - `([PRF]-ki[Derivation=Pron]+lAr[PersonNumber=A3pl]+[Possessive=Pnon]+NHn[Case=Gen])`\n\n* **Word stem:**\n\n  First inflectional group contains the word stem (e.g. `ev` is the root form\n  for the above example input word *evlerindekilerin*).\n\n* **Analysis of morphemes:**\n\n  Within each inflectional group meta-morphemes and\n  their corresponding morphological feature category-value tags are separated\n  with either `+` or `-` delimiters. (e.g. `+[PersonNumber=A3sg]`,\n  `+lArH[Possessive=P3pl]`, `-ki[Derivation=Pron]`, etc.). Strings that are\n  immediate followers of the delimiters `+` or `-` are the meta-morphemes (e.g.\n  `NDA` is the meta-morpheme in morpheme analysis `+NDA[Case=Loc]`).\n  Morphological feature category-value tags are enclosed in brackets right\n  after the meta-morphemes (e.g. `Case` is the feature category and `Loc` is\n  feature value in morpheme analysis `+NDA[Case=Loc]`).\n\n* **Part-of-speech:**\n\n  Part-of-speech tag of each inflectional group is the first bracketed tag of\n  the inflectional group (e.g. `NN` is the part-of-speech of the first\n  inflectional group and `PRF` is for the second inflectional group).\n\n* **Inflectional vs. Derivational morphemes:**\n\n  Meta-morphemes that are separated with `+` delimiter do not create a new\n  inflectional group. They are inflectional morphemes (e.g.\n  `+[PersonNumber=A3sg]`, `+NDA[Case=Loc]`, `+[Possessive=Pnon]`, etc.).\n  Meta-morphemes that are separated with `-` delimiter create a new\n  inflectional group. They are the derivational morphemes (e.g.\n  `-ki[Derivation=Pron]`). Therefore, first meta-morpheme in an inflectional\n  group always follows the delimiter `-`, but not `+`.\n\n* **Surface realization of inflections:**\n\n  Some meta-morphemes are not realized in the surface form. These meta-morphemes\n  do not correspond to a span of characters in the input word. For them we do\n  not output any meta-morpheme in the morpheme analysis (e.g.\n  `+lArH[Possessive=P3pl]` and `+NDA[Case=Loc]` are realized in the surface\n  form, thus they have explicit meta-morphemes `lArH` and `NDA` in their\n  morpheme analysis. However, `+[PersonNumber=A3sg]` and `+[Possessive=Pnon]`\n  are not realized in the surface form, therefore only morphological feature\n  category-value tags are output for them in their morpheme analysis).\n\n* **Surface realization of derivations:**\n\n  Derivational morphemes must always realize in the surface form. They always\n  correspond to a span of characters in the input word. Therefore, we always\n  output non-empty meta-morphemes in the corresponding morpheme analysis of\n  derivational morphemes. Meaning that no zero-derivations are allowed in the\n  morphotactic model.\n\n* **Proper noun analysis:**\n\n  An optional proper noun feature analysis is output at the end of each\n  inflectional group (e.g. `+[Proper=False]` which follows the second\n  inflectional group). Proper noun feature category can take two values `True`\n  or `False`. If it is specified as `True`, the inflectional group that it\n  follows is considered to be a part of a proper noun. This feature is used to\n  capture the internal structure of proper nouns that are composed of multiple\n  words (e.g. for multi-word movie names the true part-of-speech and\n  morphological feature of words that compose a multi-word movie name can be\n  annotated, while marking the fact that they are part of a proper noun using\n  this feature).\n\n  Proper noun feature analysis is omitted for some of the inflectional groups\n  to have a compact representation and to minimize the number of morphological\n  analyses generated by the morphological analyzer. In such cases, proper noun\n  feature analysis of an inflectional group applies to all preceding\n  inflectional groups that does not have one (e.g. first inflectional group of\n  the above example inherits its proper noun feature analysis `Proper=False`\n  from the second inflectional group).\n\n## Python API\n\nWe also provide a [Python API][15] that can be used to morphologically analyze\nTurkish words, generate Turkish word forms from morphological analyses, parse\nhuman-readable morphological analyses into protobuf messages, validate their\nstructural well-formedness and to generate human-readable analyses from them.\nYou can see some example use cases in [`//examples`][17].\n\nIf you are using [Bazel][16], you can depend on this repository as an external\ndependency of your project by adding the following to your WORKSPACE file:\n\n```\ngit_repository(\n  name = \"google_research_turkish_morphology\",\n  remote = \"https://github.com/google-research/turkish-morphology.git\",\n  tag = \"{version-tag}\",\n)\n```\n\nThen, you can simply use\n`@google_research_turkish_morphology//turkish_morphology:analyze`\n(or other modules of the API) as a dependecy of your relevant `py_library` or\n`py_binary` BUILD targets.\n\nThe API is also available on PyPi. To install the latest release from PyPi, run:\n\n```\npython3 -m pip install turkish-morphology\n```\n\nTo install from source, run below from the project root directory (preferably\nwithin a Python virtual environment):\n\n```\nbazel build //...\nbazel-bin/setup install\n```\n\n## Requirements\n\nTo build and run the morphological analyzer install [Bazel version 5.0.0][9] and\n[Python 3.9][10]. All other intrinsic dependencies will be imported, built and\ntaken care of by Bazel according to the [WORKSPACE][2] setup throughout the\nfirst invocation of the morphological analyzer runtime. If you are installing\nfrom PyPi, you need [pip][14].\n\n## Citing\n\nIf you use or discuss the code, data or tools from this repository in your work,\nplease cite:\n\nÖztürel, A., Kayadelen, T. & Demirşahin, I (2019, September). [A syntactically\nexpressive morphological analyzer for Turkish][13]. In Proceedings of the 14th\nInternational Conference on Finite-State Methods and Natural Language\nProcessing (pp. 65-75).\n\n```\n@inproceedings{\n    title = \"A Syntactically Expressive Morphological Analyzer for Turkish\",\n    author = \"\\\"{O}zt\\\"{u}rel, Adnan and Kayadelen, Tolga and Demir\\c{s}ahin,\n        I\\c{s}{\\i}n\",\n    booktitle = \"Proceedings of the 14th International Conference on Finite-State\n        Methods and Natural Language Processing\",\n    month = \"23--25\" # sep,\n    year = \"2019\",\n    address = \"Dresden, Germany\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://www.aclweb.org/anthology/W19-3110\",\n    pages = \"65--75\",\n}\n```\n\n## License\n\nUnless otherwise noted, all original files are licensed under an\n[Apache License, Version 2.0][1].\n\n[1]: LICENSE\n[2]: WORKSPACE.bazel\n[3]: ./src/analyzer/lexicon/base\n[4]: ./src/analyzer/lexicon/README.md\n[5]: ./src/analyzer/morphotactics/model\n[6]: ./src/analyzer/morphotactics/README.md\n[7]: ./src/analyzer/morphophonemics\n[8]: ./src/analyzer/morphophonemics/model.grm\n[9]: https://docs.bazel.build/versions/master/install.html\n[10]: https://www.python.org/downloads/\n[12]: #interpreting-human-readable-morphological-analysis\n[13]: https://www.aclweb.org/anthology/W19-3110\n[14]: https://pip.pypa.io/en/stable/installing/\n[15]: ./turkish_morphology\n[16]: https://bazel.build/\n[17]: ./examples\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/google-research/turkish-morphology/releases",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/google-research/turkish-morphology",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "turkish-morphology",
    "package_url": "https://pypi.org/project/turkish-morphology/",
    "platform": null,
    "project_url": "https://pypi.org/project/turkish-morphology/",
    "project_urls": {
      "Download": "https://github.com/google-research/turkish-morphology/releases",
      "Homepage": "https://github.com/google-research/turkish-morphology"
    },
    "release_url": "https://pypi.org/project/turkish-morphology/1.2.5/",
    "requires_dist": [
      "absl-py",
      "protobuf"
    ],
    "requires_python": ">=3.9",
    "summary": "Turkish Morphology",
    "version": "1.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13185200,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bd5be082cd2708e53166c179a4c734a27459610c1016571bd866fec12e1f5df",
          "md5": "e52523a693b4190fce72181035af3b50",
          "sha256": "09b2fe79ff9f6bbca244a980775ec40c1625ed8e95f464c802b26872ae29a7d1"
        },
        "downloads": -1,
        "filename": "turkish_morphology-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e52523a693b4190fce72181035af3b50",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13319191,
        "upload_time": "2020-03-14T23:54:44",
        "upload_time_iso_8601": "2020-03-14T23:54:44.229126Z",
        "url": "https://files.pythonhosted.org/packages/1b/d5/be082cd2708e53166c179a4c734a27459610c1016571bd866fec12e1f5df/turkish_morphology-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c913644975e14a90e1185d3deea399391ed856d9f2e7d4da64031418d5a57f15",
          "md5": "9c78b74a0207cac83906ac7f93c2d7f4",
          "sha256": "1469f5d84d7596cf70a709e58536b846f7876c31e21825a855061209a4f6691e"
        },
        "downloads": -1,
        "filename": "turkish-morphology-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9c78b74a0207cac83906ac7f93c2d7f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6120,
        "upload_time": "2020-03-14T23:54:46",
        "upload_time_iso_8601": "2020-03-14T23:54:46.979733Z",
        "url": "https://files.pythonhosted.org/packages/c9/13/644975e14a90e1185d3deea399391ed856d9f2e7d4da64031418d5a57f15/turkish-morphology-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ed2bf525181a41aa62a89d73695dc53126be8c74569c068da4e6ed453ece253",
          "md5": "c8e9f0f4988d426eee18b4ca62d679eb",
          "sha256": "109a6a4b0ae6232d12410b1ba1dcd68f762f80098eec0dc185e01177d5e2c8fe"
        },
        "downloads": -1,
        "filename": "turkish_morphology-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8e9f0f4988d426eee18b4ca62d679eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13322949,
        "upload_time": "2020-03-22T02:07:34",
        "upload_time_iso_8601": "2020-03-22T02:07:34.402739Z",
        "url": "https://files.pythonhosted.org/packages/9e/d2/bf525181a41aa62a89d73695dc53126be8c74569c068da4e6ed453ece253/turkish_morphology-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b376e2444c9da75df822d9e72885635b32874de63bd3fe82438acce995c35463",
          "md5": "37a7cbefec8e2b0b182a7ca093b3a9f9",
          "sha256": "76f0117144b88a03ef93308476577102985770f581bdd390f2584dd0cf9b1414"
        },
        "downloads": -1,
        "filename": "turkish-morphology-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "37a7cbefec8e2b0b182a7ca093b3a9f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7794,
        "upload_time": "2020-03-22T02:07:36",
        "upload_time_iso_8601": "2020-03-22T02:07:36.043001Z",
        "url": "https://files.pythonhosted.org/packages/b3/76/e2444c9da75df822d9e72885635b32874de63bd3fe82438acce995c35463/turkish-morphology-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ef2d98c1193cb178e0a6dc64fbdfad0269465ff8fef403cc17b16362331f6e5",
          "md5": "9ec8dd4b7f362b0ba43cd787aa6087fc",
          "sha256": "762792775028d5f3dcfba8f8845ce8e883df06b11c856d90f1aa867cea735618"
        },
        "downloads": -1,
        "filename": "turkish_morphology-1.2.0-py3.7.egg",
        "has_sig": false,
        "md5_digest": "9ec8dd4b7f362b0ba43cd787aa6087fc",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.7",
        "size": 13333619,
        "upload_time": "2020-04-01T07:32:22",
        "upload_time_iso_8601": "2020-04-01T07:32:22.053293Z",
        "url": "https://files.pythonhosted.org/packages/5e/f2/d98c1193cb178e0a6dc64fbdfad0269465ff8fef403cc17b16362331f6e5/turkish_morphology-1.2.0-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa80591867b46a965420663bfde9225cf326174d6cb0c8c46bed205f4ea45a13",
          "md5": "9e0898129bf6b5cfdaf88716f63587b5",
          "sha256": "6ed7abda2bda986379f2b08430f5ce9d8ed760f9dc9882aa33944782e5378592"
        },
        "downloads": -1,
        "filename": "turkish_morphology-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e0898129bf6b5cfdaf88716f63587b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13324986,
        "upload_time": "2020-04-01T07:32:19",
        "upload_time_iso_8601": "2020-04-01T07:32:19.570787Z",
        "url": "https://files.pythonhosted.org/packages/fa/80/591867b46a965420663bfde9225cf326174d6cb0c8c46bed205f4ea45a13/turkish_morphology-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "692e5c703af1f6626bb6a51d459fc00df449316b7939f53c7041ae89cdcc08b3",
          "md5": "b603ef1d7304b1465804f0f7bf61f3d1",
          "sha256": "3d6ea133213d1347db767c25252e7840d2f31140112201d98d895992eaaf3ff9"
        },
        "downloads": -1,
        "filename": "turkish-morphology-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b603ef1d7304b1465804f0f7bf61f3d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8712,
        "upload_time": "2020-04-01T07:32:23",
        "upload_time_iso_8601": "2020-04-01T07:32:23.936045Z",
        "url": "https://files.pythonhosted.org/packages/69/2e/5c703af1f6626bb6a51d459fc00df449316b7939f53c7041ae89cdcc08b3/turkish-morphology-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8586ddd37b5950d5ad39a5fc8224b54981e09738005ae7a166009d5b7d93578f",
          "md5": "c4c09552663a87aff5ad65d472ae2ab5",
          "sha256": "e5b542b10d4024fee918abb993a67f0d81cd9a16e0befc062cd700849508fe5b"
        },
        "downloads": -1,
        "filename": "turkish_morphology-1.2.1-py3.7.egg",
        "has_sig": false,
        "md5_digest": "c4c09552663a87aff5ad65d472ae2ab5",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.7",
        "size": 13333679,
        "upload_time": "2020-04-09T18:01:40",
        "upload_time_iso_8601": "2020-04-09T18:01:40.601371Z",
        "url": "https://files.pythonhosted.org/packages/85/86/ddd37b5950d5ad39a5fc8224b54981e09738005ae7a166009d5b7d93578f/turkish_morphology-1.2.1-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0ad7250ed9b7bf5a95547aeb5236bfd5d071281f7f4a9377628d1eb3cd3dbbf",
          "md5": "807271afa8d0eee1f68ab52de2449a3b",
          "sha256": "6c7c0a671ec02ce451e8adc15a3bf192db57c8e8552cbc79f9f006ee0b59861a"
        },
        "downloads": -1,
        "filename": "turkish_morphology-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "807271afa8d0eee1f68ab52de2449a3b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13325008,
        "upload_time": "2020-04-09T18:01:37",
        "upload_time_iso_8601": "2020-04-09T18:01:37.253586Z",
        "url": "https://files.pythonhosted.org/packages/b0/ad/7250ed9b7bf5a95547aeb5236bfd5d071281f7f4a9377628d1eb3cd3dbbf/turkish_morphology-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c1c3a94e2fc60d5b8686284b6dadadf1623aa45df1d1fe4a420ffd2f330ff16",
          "md5": "02d8d1654c5b24f9535e9da265d1d1cf",
          "sha256": "7739833baee051fb437f17b65de6c78d4fe9ecd613c9230033ebbecf15c7c812"
        },
        "downloads": -1,
        "filename": "turkish-morphology-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "02d8d1654c5b24f9535e9da265d1d1cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8730,
        "upload_time": "2020-04-09T18:01:41",
        "upload_time_iso_8601": "2020-04-09T18:01:41.915726Z",
        "url": "https://files.pythonhosted.org/packages/6c/1c/3a94e2fc60d5b8686284b6dadadf1623aa45df1d1fe4a420ffd2f330ff16/turkish-morphology-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30fde0e3db7a385e555a3add0a8089bdb0e9d17856f186aceb32c18a501be84b",
          "md5": "cd209a0e5ee193bbe53c982871811326",
          "sha256": "59b4cfe3b38c44a46b23abc0b95994de4d18b37d98bebc2c58f757bf7c3a271e"
        },
        "downloads": -1,
        "filename": "turkish_morphology-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd209a0e5ee193bbe53c982871811326",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13331017,
        "upload_time": "2020-09-08T17:15:18",
        "upload_time_iso_8601": "2020-09-08T17:15:18.496789Z",
        "url": "https://files.pythonhosted.org/packages/30/fd/e0e3db7a385e555a3add0a8089bdb0e9d17856f186aceb32c18a501be84b/turkish_morphology-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "789ae7ab2082b0ccfe8eb7b4192357f4e12f45fe370c3064ed602dd94a5532f7",
          "md5": "ce9ab5d1cd86f89984ac713baf92fbeb",
          "sha256": "d792e392ff77d940a5ade5812fff738e36afacaae181c71f4882da4f9ece6032"
        },
        "downloads": -1,
        "filename": "turkish-morphology-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ce9ab5d1cd86f89984ac713baf92fbeb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9116,
        "upload_time": "2020-09-08T17:15:19",
        "upload_time_iso_8601": "2020-09-08T17:15:19.926884Z",
        "url": "https://files.pythonhosted.org/packages/78/9a/e7ab2082b0ccfe8eb7b4192357f4e12f45fe370c3064ed602dd94a5532f7/turkish-morphology-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ed3aebce4bee5c24524782c0664ba9f2917ef1b4317218f69d6e1073b0f7ed4",
          "md5": "90b6c7007a783cbed68b2d44a6e4603e",
          "sha256": "e4a7baf3cb5c7c0a1ac2f239191f0cebe337362e8369bb88901bc5b165c6b25b"
        },
        "downloads": -1,
        "filename": "turkish-morphology-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "90b6c7007a783cbed68b2d44a6e4603e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18375,
        "upload_time": "2021-06-14T16:29:22",
        "upload_time_iso_8601": "2021-06-14T16:29:22.604253Z",
        "url": "https://files.pythonhosted.org/packages/1e/d3/aebce4bee5c24524782c0664ba9f2917ef1b4317218f69d6e1073b0f7ed4/turkish-morphology-1.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3f39d7a228cb8d1150297ff41fb38516c349b6b7e1684c84c80df109d77a0e2",
          "md5": "aa5e0e2ed128276e126a45aa13a76eab",
          "sha256": "a4c68062e7bf8bb2d406939b4fa73ac599a70aed46dc28c7dc8c2987eb2ecec1"
        },
        "downloads": -1,
        "filename": "turkish_morphology-1.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa5e0e2ed128276e126a45aa13a76eab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6839282,
        "upload_time": "2021-06-14T17:46:36",
        "upload_time_iso_8601": "2021-06-14T17:46:36.686776Z",
        "url": "https://files.pythonhosted.org/packages/d3/f3/9d7a228cb8d1150297ff41fb38516c349b6b7e1684c84c80df109d77a0e2/turkish_morphology-1.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d600881af019dc1d2ec2ebc458188338b6fb604d8aa537b704b148428f28469",
          "md5": "555507be55bb9ddcb5c9568356e96cca",
          "sha256": "8821561e7195668f4c274982dc262c07d3f1e2e9bd04e9ea0cd993bfdb32e577"
        },
        "downloads": -1,
        "filename": "turkish-morphology-1.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "555507be55bb9ddcb5c9568356e96cca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6775508,
        "upload_time": "2021-06-14T17:32:27",
        "upload_time_iso_8601": "2021-06-14T17:32:27.689556Z",
        "url": "https://files.pythonhosted.org/packages/5d/60/0881af019dc1d2ec2ebc458188338b6fb604d8aa537b704b148428f28469/turkish-morphology-1.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdb78fe397fdfc4e746b1a9beb2f7b16228dfc160f548f620f7922de2ec6981b",
          "md5": "6923f368c9c32a6557534e39c042b477",
          "sha256": "3c727ee2b0bbd5b822e835b3f321a6ac11acf8d138385da9bf1a280ed3f833b9"
        },
        "downloads": -1,
        "filename": "turkish_morphology-1.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6923f368c9c32a6557534e39c042b477",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 14348377,
        "upload_time": "2022-03-15T18:13:16",
        "upload_time_iso_8601": "2022-03-15T18:13:16.454690Z",
        "url": "https://files.pythonhosted.org/packages/fd/b7/8fe397fdfc4e746b1a9beb2f7b16228dfc160f548f620f7922de2ec6981b/turkish_morphology-1.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6bff76760c21eb7750de906accf3abd7fc32a7337f17f4e57bc8643afbd72e87",
          "md5": "0a78c974a4804724d6f943dd207c4048",
          "sha256": "883977d952380dcdbae6dc6e29a82e57908add2581f194617cc53f44b4d18bd7"
        },
        "downloads": -1,
        "filename": "turkish-morphology-1.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0a78c974a4804724d6f943dd207c4048",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 14057313,
        "upload_time": "2022-03-15T18:13:19",
        "upload_time_iso_8601": "2022-03-15T18:13:19.373285Z",
        "url": "https://files.pythonhosted.org/packages/6b/ff/76760c21eb7750de906accf3abd7fc32a7337f17f4e57bc8643afbd72e87/turkish-morphology-1.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fdb78fe397fdfc4e746b1a9beb2f7b16228dfc160f548f620f7922de2ec6981b",
        "md5": "6923f368c9c32a6557534e39c042b477",
        "sha256": "3c727ee2b0bbd5b822e835b3f321a6ac11acf8d138385da9bf1a280ed3f833b9"
      },
      "downloads": -1,
      "filename": "turkish_morphology-1.2.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6923f368c9c32a6557534e39c042b477",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 14348377,
      "upload_time": "2022-03-15T18:13:16",
      "upload_time_iso_8601": "2022-03-15T18:13:16.454690Z",
      "url": "https://files.pythonhosted.org/packages/fd/b7/8fe397fdfc4e746b1a9beb2f7b16228dfc160f548f620f7922de2ec6981b/turkish_morphology-1.2.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6bff76760c21eb7750de906accf3abd7fc32a7337f17f4e57bc8643afbd72e87",
        "md5": "0a78c974a4804724d6f943dd207c4048",
        "sha256": "883977d952380dcdbae6dc6e29a82e57908add2581f194617cc53f44b4d18bd7"
      },
      "downloads": -1,
      "filename": "turkish-morphology-1.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "0a78c974a4804724d6f943dd207c4048",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 14057313,
      "upload_time": "2022-03-15T18:13:19",
      "upload_time_iso_8601": "2022-03-15T18:13:19.373285Z",
      "url": "https://files.pythonhosted.org/packages/6b/ff/76760c21eb7750de906accf3abd7fc32a7337f17f4e57bc8643afbd72e87/turkish-morphology-1.2.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}