{
  "info": {
    "author": "Markus Amalthea Magnuson",
    "author_email": "markus@polyscopic.works",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Security :: Cryptography",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "# Substitution Cipher Solver\n\n### Algorithm for solving simple, monoalphabetic substitution ciphers\n\nThis is Python implementation of the algorithm for solving\n[simple, monoalphabetic substitution ciphers](https://en.wikipedia.org/wiki/Substitution_cipher#Simple_substitution)\ndescribed in the paper\n[“A Fast Method for the Cryptanalysis of Substitution Ciphers”](https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.55.89&rep=rep1&type=pdf)\nby Thomas Jakobsen. The main difference from the paper is that random key swaps are used\ninstead of a deterministic series of swaps since it yields better results, but the\noriginal method is included and can be used as an option.\n\n#### Installing\n\n    pip install cipher_solver\n\n#### API\n\n```python\nclass SimpleSolver:\n    \"\"\"Simple substitution cipher solver.\"\"\"\n\n    def __init__(self, ciphertext):\n        \"\"\"Create new solver.\n\n        Creates a new cipher solver from an initial ciphertext.\n        \"\"\"\n\n    def solve(self, method=\"random\"):\n        \"\"\"Solve the cipher.\n\n        Run the solver and save the resulting decryption key.\n        \"\"\"\n\n    def plaintext(self):\n        \"\"\"Return a plaintext using the current decryption key.\"\"\"\n\n    def reset(self):\n        \"\"\"Reset the solver to its initial state.\n\n        Set the decryption key to its initial state, effectively starting over.\n        \"\"\"\n```\nSee the [documentation](https://alimony.github.io/cipher_solver/) for full description\nof methods and their parameters.\n\n#### Requirements\n\n* numpy\n\n#### Usage\n\n```python\nfrom cipher_solver.simple import SimpleSolver\n\n# Solve a cipher.\ns = SimpleSolver(\"U kn kgmhksz tkm exmpb xt Gxesxe.\")\ns.solve()\nprint(s.plaintext())  # \"I am already far north of London.\"\n\ns.reset()  # Discard current solution to start over.\ns.solve()\nprint(s.plaintext())  # We have an alternative solution now.\n\nprint(s.decryption_key())  # \"goaskbihxvrldepfwntmzqjucy\"\n\n# Solve using the original key swap method instead.\nd = SimpleSolver(\"U kn kgmhksz tkm exmpb xt Gxesxe.\", method=\"deterministic\")\nd.solve()\nprint(s.plaintext())\n```\n\nNote, however, that the above ciphertext is too short to give any meaningful results.\nA length of at least a few hundred letters is preferred to solve a cipher. See below for\nan example using an included sample text.\n\n#### CLI\n\nA simple command-line interface is included. To solve a cipher, put it into a text file\nand run:\n\n```bash\ncipher_solver <path_to_ciphertext_file>\n```\n\nExample:\n\n```bash\ncipher_solver texts/26_char_key/ciphertexts/ciphertext_frankenstein_sample.txt\n```\n\nSince the algorithm involves [hill climbing](https://en.wikipedia.org/wiki/Hill_climbing)\nand randomness you might sometimes end up with complete gibberish, just run the script\nagain and the next result should be better.\n\n#### Running tests\n\n    make test\n\n#### Checking coverage\n\n    make coverage\n\n(Requires the `coverage` package.)\n\n#### Generating documentation\n\n    make docs\n\n(Requires the `pdoc3` package.)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alimony/cipher_solver",
    "keywords": "monoalphabetic-substitution-cipher substitution-cipher cipher",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cipher-solver",
    "package_url": "https://pypi.org/project/cipher-solver/",
    "platform": "",
    "project_url": "https://pypi.org/project/cipher-solver/",
    "project_urls": {
      "Documentation": "https://alimony.github.io/cipher_solver/",
      "Homepage": "https://github.com/alimony/cipher_solver",
      "Source": "https://github.com/alimony/cipher_solver",
      "Tracker": "https://github.com/alimony/cipher_solver/issues"
    },
    "release_url": "https://pypi.org/project/cipher-solver/1.0.1/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": ">=3.6",
    "summary": "Algorithm for solving simple, monoalphabetic substitution ciphers",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7333478,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b21cf282998846140d0dc1156c99ef4ce15dabb5893a916f876e339e84ab247a",
          "md5": "c37d4a5d24e162f993dbfdba2e727ad2",
          "sha256": "67426e6f029efbb14bdb10abd89b3cbf6b470a010d6ea5e4c6948a84cd9ea1f9"
        },
        "downloads": -1,
        "filename": "cipher_solver-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c37d4a5d24e162f993dbfdba2e727ad2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11848,
        "upload_time": "2020-05-27T07:22:06",
        "upload_time_iso_8601": "2020-05-27T07:22:06.129144Z",
        "url": "https://files.pythonhosted.org/packages/b2/1c/f282998846140d0dc1156c99ef4ce15dabb5893a916f876e339e84ab247a/cipher_solver-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f8da94c0555027e3e5d5a24161f7919cabb45d6fbfe3e2814e06a29309892b5",
          "md5": "fb18ec778c76fe270816dc18acfb5d0f",
          "sha256": "2b941c0065c26f48988f43f6574751d9992c4952048238eed4f9faa294ac4b18"
        },
        "downloads": -1,
        "filename": "cipher_solver-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fb18ec778c76fe270816dc18acfb5d0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11094,
        "upload_time": "2020-05-27T07:22:08",
        "upload_time_iso_8601": "2020-05-27T07:22:08.404449Z",
        "url": "https://files.pythonhosted.org/packages/9f/8d/a94c0555027e3e5d5a24161f7919cabb45d6fbfe3e2814e06a29309892b5/cipher_solver-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44dd0602ee22643315d481ee8624bdaf81e4e1283d68e3958720fc811b4572ac",
          "md5": "f50941eda760f40995fa0f916b62e715",
          "sha256": "d4a48e433f319ba2bfb1361ce52d2bb30447ed7048ec543bcc9fdbd6e9238855"
        },
        "downloads": -1,
        "filename": "cipher_solver-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f50941eda760f40995fa0f916b62e715",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11866,
        "upload_time": "2020-05-27T07:57:49",
        "upload_time_iso_8601": "2020-05-27T07:57:49.701390Z",
        "url": "https://files.pythonhosted.org/packages/44/dd/0602ee22643315d481ee8624bdaf81e4e1283d68e3958720fc811b4572ac/cipher_solver-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69ce6a596a6b3dc4694385a627a3bda65ada337c29e49af4a6cad16811e7b5ca",
          "md5": "1e08107a4d945fb121b7026e350c167a",
          "sha256": "c01628083a69039e2daaa5cee9b6387cbfa8a020f16eb6aeff93b126b0acf4f3"
        },
        "downloads": -1,
        "filename": "cipher_solver-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1e08107a4d945fb121b7026e350c167a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11124,
        "upload_time": "2020-05-27T07:57:51",
        "upload_time_iso_8601": "2020-05-27T07:57:51.142779Z",
        "url": "https://files.pythonhosted.org/packages/69/ce/6a596a6b3dc4694385a627a3bda65ada337c29e49af4a6cad16811e7b5ca/cipher_solver-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44dd0602ee22643315d481ee8624bdaf81e4e1283d68e3958720fc811b4572ac",
        "md5": "f50941eda760f40995fa0f916b62e715",
        "sha256": "d4a48e433f319ba2bfb1361ce52d2bb30447ed7048ec543bcc9fdbd6e9238855"
      },
      "downloads": -1,
      "filename": "cipher_solver-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f50941eda760f40995fa0f916b62e715",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11866,
      "upload_time": "2020-05-27T07:57:49",
      "upload_time_iso_8601": "2020-05-27T07:57:49.701390Z",
      "url": "https://files.pythonhosted.org/packages/44/dd/0602ee22643315d481ee8624bdaf81e4e1283d68e3958720fc811b4572ac/cipher_solver-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "69ce6a596a6b3dc4694385a627a3bda65ada337c29e49af4a6cad16811e7b5ca",
        "md5": "1e08107a4d945fb121b7026e350c167a",
        "sha256": "c01628083a69039e2daaa5cee9b6387cbfa8a020f16eb6aeff93b126b0acf4f3"
      },
      "downloads": -1,
      "filename": "cipher_solver-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1e08107a4d945fb121b7026e350c167a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11124,
      "upload_time": "2020-05-27T07:57:51",
      "upload_time_iso_8601": "2020-05-27T07:57:51.142779Z",
      "url": "https://files.pythonhosted.org/packages/69/ce/6a596a6b3dc4694385a627a3bda65ada337c29e49af4a6cad16811e7b5ca/cipher_solver-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}