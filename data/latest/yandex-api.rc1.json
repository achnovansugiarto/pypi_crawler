{
  "info": {
    "author": "Akshay Singh",
    "author_email": "akshayrameshwar2018@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# yadisk-api\nYandex.disk HTTP API Python library\n\nIn first get your access token [here](https://tech.yandex.ru/disk/api/concepts/quickstart-docpage/)\nIn second install package\n\n    pip install yadisk-api\n\nExample usage:\n\n    import yadisk_api\n\n    disk = yadisk_api.YandexDisk('my_token')\n\n    # get info about my disk\n    info = disk.get_disk_info()\n\n    # get meta info about file/directory in my app directory/trash\n    meta_info = disk.get_meta_info(\n        path='path/to/my/file.jpg',\n        preview_size='100x100',\n    )\n\n    # get audio files list in my disk\n    files_info = disk.get_files_list(\n        limit=50,\n        media_type='audio',\n    )\n\n    # get last uploaded files list\n    last_uploaded = disk.get_last_uploaded(\n        limit=10,\n        media_type='video',\n    )\n\n    # set meta data to file in your app directory\n    setted_result = disk.set_meta_to_resource(\n        'my/file/to/extra/meta/data.txt,\n        data={'Custom Header': 'custom value'},\n    )\n\n    # upload file to yandex disk\n    with open('/path/to/my/file.txt', 'rb') as f:\n        disk.upload_file(\n            f,\n            path='app:/directory/file.txt',\n            overwrite=True\n        )\n\n    # upload file to disk by url\n    disk.upload_file_from_url(\n        'http://example.com/sitemap.xml',\n        path='app:/sitemap_example.xml',\n    )\n\n    # download file content from yandex.disk\n    content = disk.download_file(\n        'app:/sitemap_example.xml',\n        stream=False,\n    )\n\n    # copy resource in disk\n    disk.copy_resource(\n        from_path='app:/sitemap_example.xml',\n        to_path='app:/sitemap_example_copy.xml',\n    )\n\n    # move resource in your disk\n    disk.move_resource(\n        from_path='app:/sitemap_example_copy.xml',\n        to_path='app:/sitemap_example_movied_copy.xml',\n    )\n\n    # delete resource\n    disk.delete_resource(\n        'app:/sitemap_example_movied_copy.xml',\n        permanently=False, # to trash\n    )\n\n    # create folder in your disk\n    disk.create_folder(\n        'app:/new_folder',\n    )\n\n    # publish\n    disk.publish_resource('app:/new_folder')\n\n    # unpublish\n    disk.unpublish_resource('app:/new_folder')\n\n    # fully empty trash\n    disk.empty_trash()\n    # or remove file from trash\n    disk.empty_trash('app:/sitemap_example_movied_copy.xml')\n\n    # restore resource from trash\n    disk.restore_from_trash('app:/sitemap_example_movied_copy.xml')\n\n    # upload dir to disk\n    disk.upload_directory('/path/to/source', 'app:/path/to/disk', overwrite=True)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/akshay-movieverse/yandex-api",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yandex-api",
    "package_url": "https://pypi.org/project/yandex-api/",
    "platform": "",
    "project_url": "https://pypi.org/project/yandex-api/",
    "project_urls": {
      "Homepage": "https://github.com/akshay-movieverse/yandex-api"
    },
    "release_url": "https://pypi.org/project/yandex-api/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Yandex.disk http api client",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7505211,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78536cf86bc78cca9456039cdfee863bf2cc0179bc0e81c8cc9de78112cb990d",
          "md5": "922435ae27cf3f40d60fec11506fa2cc",
          "sha256": "7be6c1cdf0632602e1c8fb825c8dcac94414cbc166d1662673dc890d3cbe2a2f"
        },
        "downloads": -1,
        "filename": "yandex-api-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "922435ae27cf3f40d60fec11506fa2cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5487,
        "upload_time": "2020-06-18T11:43:30",
        "upload_time_iso_8601": "2020-06-18T11:43:30.154747Z",
        "url": "https://files.pythonhosted.org/packages/78/53/6cf86bc78cca9456039cdfee863bf2cc0179bc0e81c8cc9de78112cb990d/yandex-api-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78536cf86bc78cca9456039cdfee863bf2cc0179bc0e81c8cc9de78112cb990d",
        "md5": "922435ae27cf3f40d60fec11506fa2cc",
        "sha256": "7be6c1cdf0632602e1c8fb825c8dcac94414cbc166d1662673dc890d3cbe2a2f"
      },
      "downloads": -1,
      "filename": "yandex-api-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "922435ae27cf3f40d60fec11506fa2cc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5487,
      "upload_time": "2020-06-18T11:43:30",
      "upload_time_iso_8601": "2020-06-18T11:43:30.154747Z",
      "url": "https://files.pythonhosted.org/packages/78/53/6cf86bc78cca9456039cdfee863bf2cc0179bc0e81c8cc9de78112cb990d/yandex-api-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}