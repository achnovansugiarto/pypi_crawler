{
  "info": {
    "author": "cpyberry",
    "author_email": "cpyberry222@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Natural Language :: Japanese",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# pytransform\n\nA library that applies arbitrary functions to each element of list type and dict type objects\n\nFunctions that defines the conversion process, which takes each element before conversion as an argument and returns each element after conversion, is called recursively, so it also supports nested list and dictionary.\n\n## Requirements\n\n* python 3.5, 3.6, 3.7, 3.8, 3.9\n\n## Installation\n\n```shell\npip install cpyberry-pytransform\n```\n\n## Usage\n\nWhen you want to multiply each element of the list by 2, you can write:\n\n```python\nimport pytransform\n\n\ndef operation_double(element: int, origin: list) -> int:\n\t# The first argument contains each element of the original list.\n\t# The original list is stored in the second argument.\n\treturn element * 2\n\n\npytransform.transform_list([1, 2, 3], operation_double)\n# return [2, 4, 6]\n\npytransform.transform_list(\n\torigin=[1, 2, 3],\n\toperation=operation_double\n)\n# return [2, 4, 6]\n```\n\nWhen you want to insert \"_neko\" at the end of each key in the dictionary and \"_inu\" at the end of each value, you can write:\n\n```python\ndef operation_key(key: str, origin: dict, value: str):\n\t# The first argument contains each key of the original dictionary.\n\t# The original dictionary is stored in the second argument.\n\t# The third argument contains the value corresponding to each key in the original dictionary.\n\treturn key + \"_neko\"\n\n\ndef operation_value(value: str, origin: dict, key: str):\n\t# The first argument contains each key of the original dictionary.\n\t# The original dictionary is stored in the second argument.\n\t# The third argument contains the value corresponding to each key in the original dictionary.\n\treturn value + \"_inu\"\n\n\npytransform.transform_dictionary(\n\torigin={\"meow\": \"woof\"},\n\toperation_key=operation_key,\n\toperation_value=operation_value\n)\n# return {\"meow_neko\", \"woof_inu\"}\n```\n\nThe above functions are called recursively, so they also support nested list and dictionary.\n\n```python\npytransform.transform_list([1, 2, [3, 4, 5]], operation_double)\n# return [2, 4, [6, 8, 10]]\n\npytransform.transform_dictionary(\n\torigin={\"meow\": {\"pows\": \"woof\"}},\n\toperation_key=operation_key,\n\toperation_value=operation_value\n)\n# return {\"meow_neko\": {\"pows_neko\": \"woof_inu\"}}\n```\n\n## Founder\n\n* [cpyberry](https://github.com/cpyberry)\n\n\temail: cpyberry222@gmail.com\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cpyberry/pytransform",
    "keywords": "",
    "license": "Apache-2.0 License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cpyberry-pytransform",
    "package_url": "https://pypi.org/project/cpyberry-pytransform/",
    "platform": "",
    "project_url": "https://pypi.org/project/cpyberry-pytransform/",
    "project_urls": {
      "Homepage": "https://github.com/cpyberry/pytransform"
    },
    "release_url": "https://pypi.org/project/cpyberry-pytransform/2.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "A library that applies arbitrary functions to each element of list type and dict type objects",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11439072,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cf13df9c7e1db6699cf27645992a09fba4bb41826c9df8fc8f24f28858eae8b",
          "md5": "14cae1c5fde6ca0df372eb4b5dbec64a",
          "sha256": "460d0f578a5404f544c14b40f379cb47b30b693c5bbb34794f1ce1b97b9fa139"
        },
        "downloads": -1,
        "filename": "cpyberry_pytransform-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14cae1c5fde6ca0df372eb4b5dbec64a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8185,
        "upload_time": "2021-09-13T16:40:30",
        "upload_time_iso_8601": "2021-09-13T16:40:30.566798Z",
        "url": "https://files.pythonhosted.org/packages/6c/f1/3df9c7e1db6699cf27645992a09fba4bb41826c9df8fc8f24f28858eae8b/cpyberry_pytransform-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5803571e3eaa0adf232bbb078bdf7ae5a4823e65cf583db5033c2758e38de1bf",
          "md5": "be56979befead0f1c1f4cb624810fee2",
          "sha256": "e6a1043b34e6d2639230dd4d9d5268f4a1ab02937e056fdd1784e09f07b68b92"
        },
        "downloads": -1,
        "filename": "cpyberry-pytransform-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "be56979befead0f1c1f4cb624810fee2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8098,
        "upload_time": "2021-09-13T16:40:32",
        "upload_time_iso_8601": "2021-09-13T16:40:32.343607Z",
        "url": "https://files.pythonhosted.org/packages/58/03/571e3eaa0adf232bbb078bdf7ae5a4823e65cf583db5033c2758e38de1bf/cpyberry-pytransform-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6cf13df9c7e1db6699cf27645992a09fba4bb41826c9df8fc8f24f28858eae8b",
        "md5": "14cae1c5fde6ca0df372eb4b5dbec64a",
        "sha256": "460d0f578a5404f544c14b40f379cb47b30b693c5bbb34794f1ce1b97b9fa139"
      },
      "downloads": -1,
      "filename": "cpyberry_pytransform-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "14cae1c5fde6ca0df372eb4b5dbec64a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 8185,
      "upload_time": "2021-09-13T16:40:30",
      "upload_time_iso_8601": "2021-09-13T16:40:30.566798Z",
      "url": "https://files.pythonhosted.org/packages/6c/f1/3df9c7e1db6699cf27645992a09fba4bb41826c9df8fc8f24f28858eae8b/cpyberry_pytransform-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5803571e3eaa0adf232bbb078bdf7ae5a4823e65cf583db5033c2758e38de1bf",
        "md5": "be56979befead0f1c1f4cb624810fee2",
        "sha256": "e6a1043b34e6d2639230dd4d9d5268f4a1ab02937e056fdd1784e09f07b68b92"
      },
      "downloads": -1,
      "filename": "cpyberry-pytransform-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "be56979befead0f1c1f4cb624810fee2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 8098,
      "upload_time": "2021-09-13T16:40:32",
      "upload_time_iso_8601": "2021-09-13T16:40:32.343607Z",
      "url": "https://files.pythonhosted.org/packages/58/03/571e3eaa0adf232bbb078bdf7ae5a4823e65cf583db5033c2758e38de1bf/cpyberry-pytransform-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}