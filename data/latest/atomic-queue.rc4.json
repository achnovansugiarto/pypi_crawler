{
  "info": {
    "author": "Andriy Rossoshynskyy",
    "author_email": "andriy.rossoshynskyy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# atomic-queue\nA thread-safe, lock-free queue implementation based on the LMAX Disruptor, with crititcal parts written in C++.\n\nThis queue supports multiple producers and consumers. Producers are responsible for managing their own threads,\nwhile consumer threads are managed by the queue and are required to implement the EventHandler interface.\n\n## Example\n\nInitialise an atomic queue instance with the buffer capacity and a wait strategy. The buffer capacity must be a power of 2 integer.\n\n```\nfrom atomicqueue import AtomicQueue, BUSY_SPIN_WAIT_STRATEGY\n\nqueue = AtomicQueue(256, wait_strategy=BUSY_SPIN_WAIT_STRATEGY)\n```\n\nDefine how the events will be consumed. In the example below event handler \"h_one\" and \"h_two\" can overrun each other but can not overrun the publishers, while event handler \"h_three\" can only consume events after \"h_one\" and \"h_two\" have finished consuming them.\n\n```\nqueue.handle_events_with(NoOpEventHandler(\"h_one\"), NoOpEventHandler(\"h_two\")).then(NoOpEventHandler(\"h_three\"))\n```\n\nOnce configured the queue can be started with the following command.\n\n```\nqueue.start()\n```\n\nTo publish to the queue, simply call publish_event on the queue.\n\n```\nqueue.publish_event(event)\n```\n\nStop the queue by calling stop().\n```\nqueue.stop()\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/arossoshynskyy/atomic-queue",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "atomic-queue",
    "package_url": "https://pypi.org/project/atomic-queue/",
    "platform": "",
    "project_url": "https://pypi.org/project/atomic-queue/",
    "project_urls": {
      "Homepage": "https://github.com/arossoshynskyy/atomic-queue"
    },
    "release_url": "https://pypi.org/project/atomic-queue/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A lock-free, thread-safe queue using the C++ atomic library to synchronise memory access.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8038549,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7851aa5303fd66af243b401623a818e4123cff94cecd4b89d2cb0a53f2c0e9cd",
          "md5": "9324073cf2ace9213a30ee077e73d82b",
          "sha256": "2b483edb6f19c437cc387f6b90171fbdd27e034ae1a10ab3b2a9830f3d09900e"
        },
        "downloads": -1,
        "filename": "atomic-queue-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9324073cf2ace9213a30ee077e73d82b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6473,
        "upload_time": "2020-08-09T15:56:21",
        "upload_time_iso_8601": "2020-08-09T15:56:21.470736Z",
        "url": "https://files.pythonhosted.org/packages/78/51/aa5303fd66af243b401623a818e4123cff94cecd4b89d2cb0a53f2c0e9cd/atomic-queue-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a0ecbd93e4c23baa621dd663b7d56a4a6212b6f43ffd5d641ee045933baaa71",
          "md5": "b0c9ecb742f9840bfa169cbff8c14342",
          "sha256": "d732a08d410cd60d15757ec15f580074944145fd74674b0bc64c6a537a08a642"
        },
        "downloads": -1,
        "filename": "atomic-queue-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b0c9ecb742f9840bfa169cbff8c14342",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6499,
        "upload_time": "2020-08-16T15:56:14",
        "upload_time_iso_8601": "2020-08-16T15:56:14.574880Z",
        "url": "https://files.pythonhosted.org/packages/4a/0e/cbd93e4c23baa621dd663b7d56a4a6212b6f43ffd5d641ee045933baaa71/atomic-queue-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "894faeccacd17186279f723903fa86efcd8df7cd8f1921e8d20c2e7511e51dde",
          "md5": "40d1f3442a6c0297b8da7d0d0c686d90",
          "sha256": "5c20c616696749c7421f90221bd9efcef74408da7228bedf14a1cfc94737fc20"
        },
        "downloads": -1,
        "filename": "atomic-queue-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "40d1f3442a6c0297b8da7d0d0c686d90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5761,
        "upload_time": "2020-08-25T20:58:33",
        "upload_time_iso_8601": "2020-08-25T20:58:33.254660Z",
        "url": "https://files.pythonhosted.org/packages/89/4f/aeccacd17186279f723903fa86efcd8df7cd8f1921e8d20c2e7511e51dde/atomic-queue-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0191ddd500fe9bcf8a6189899fe99f813985f509d48fbb138a691ee1b0a0dc6f",
          "md5": "07c8ef146fc9441759180ea4ff60f8b4",
          "sha256": "4a0b9c84e3cea3f67b2ad42f86374766b12e1c0c1be8196d5a68dcec15befece"
        },
        "downloads": -1,
        "filename": "atomic-queue-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "07c8ef146fc9441759180ea4ff60f8b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5780,
        "upload_time": "2020-08-25T21:04:03",
        "upload_time_iso_8601": "2020-08-25T21:04:03.546782Z",
        "url": "https://files.pythonhosted.org/packages/01/91/ddd500fe9bcf8a6189899fe99f813985f509d48fbb138a691ee1b0a0dc6f/atomic-queue-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0191ddd500fe9bcf8a6189899fe99f813985f509d48fbb138a691ee1b0a0dc6f",
        "md5": "07c8ef146fc9441759180ea4ff60f8b4",
        "sha256": "4a0b9c84e3cea3f67b2ad42f86374766b12e1c0c1be8196d5a68dcec15befece"
      },
      "downloads": -1,
      "filename": "atomic-queue-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "07c8ef146fc9441759180ea4ff60f8b4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5780,
      "upload_time": "2020-08-25T21:04:03",
      "upload_time_iso_8601": "2020-08-25T21:04:03.546782Z",
      "url": "https://files.pythonhosted.org/packages/01/91/ddd500fe9bcf8a6189899fe99f813985f509d48fbb138a691ee1b0a0dc6f/atomic-queue-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}