{
  "info": {
    "author": "Dave Schultz",
    "author_email": "dave@daveschultzconsulting.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# PySFN\n*A Python to AWS Step Functions transpiler for the CDK*\n\nThis package is an initial experiment in exploring ways to make AWS Step Functions more useful by allowing\ndevelopers to build state machines in the same way they would write a Python function. Users can define\nstate machines in their CDK Stack as simple functions, then apply a `@state_machine` decorator to declare\na Construct in their stack.\n\nThis is very much an experiment, and I welcome feedback on the viability and utility of this approach. \n\nNote that because it's Python-based it will only work when used with Python CDK stacks, and not TypeScript or \nother languages. Of course, your Lambdas can be written in any language, but Python Lambdas can take advantage\nof some additional features.\n\n## Quick start\nThere is a lot of good information below, but if you want to get started quickly and experiment with the\nprototype app, clone the repo give it a shot. Assuming you have the AWS CDK installed, you should be able to\ndeploy the app by doing the following:\n\n```shell\npip install pysfn\ncd proto_app\ncdk deploy\n```\n\nOnce you've deployed it, you can submit the *basic*, *simple*, and *larger* step functions that have been \ncreated with the following input.\n\n```json\n{\n  \"str_value\": \"html\",\n  \"list_value\": [100, 100],\n  \"option\": false\n}\n```\n\nReplacing `html` with `image`, `pdf`, or some other value will trigger the different paths in the function, \nand you can also test how default values are used by leaving off the `list_value` and `option` values.\n\n## Why Step Functions?\nAWS Step Functions (SFN) is a useful tool for orchestrating processing steps in a serverless fashion. By providing \nthe ability to invoke a range of AWS services such as Lambdas, DynamoDB, SNS, and many others, it's significantly\neasier to componentize an application into reusable pieces that can leverage a range of programming languages,\nlibraries, and utilities, while keeping compute requirements and complexity low.\n\nFor example, I've built SFN applications that combine NodeJS lambdas, Python Lambdas using a range of \ndifferent libraries, the AWS Textract service and DynamoDB into a single app that can be used in multiple\ncontexts for data processing. Building this in SFN avoids the need to launch a hosted service to manage\nthe processing flow, and keeps each resource focused on the processing needs of that particular function.\n\n## States Language Hell\nThe biggest downside of SFN is the language that AWS developed to power it.  The\n[Amazon States Language](https://states-language.net/) makes it possible to develop processing flows in\na technology-agnostic way, but it can be clumsy to pick up and use efficiently. Data moves through a state\nmachine definition as a JSON object, and each processing step must manipulate it using jsonpath.\nTo do this well, a developer needs to be aware of the inputs and outputs of each stage and handle them appropriately.\nIn addition, the use of jsonpath operations limits how these values can be assigned to the payload object. As a \nresult it's common to follow each processing step with a Pass stage to restructure the results into the payload\nappropriately. The alternative is to make each processing stage take on this responsibility within the processing\nflow. This works, but forces a very tight connection between the SFN definition and the Lambda or other code, and\nremoves the ability to flexibly use that component in a different context.\n\n# A new approach\nPySFN allows you to define your state machines in the same way that you would define any other function in\nPython. Look at the following function which executes a series of steps. The steps (`step[1-4]`) each refer\nto a lambda operation that we want to execute. \n\n```python\n@state_machine(self, \"pysfn-basic\", locals())\ndef basic(str_value: str, list_value: List[int] = None, option: bool = False):\n    uri1: Union[str, None] = None\n    uri2: Union[str, None] = None\n    (\n        available,\n        mode,\n        option,\n        processing_seconds,\n        code_value,\n        type_value,\n    ) = step1(str_value, option)\n\n    if available:\n        if mode == \"html\":\n            (available, list_value, uri1) = step2(str_value, list_value)\n        else:\n            (available, uri2, uri1) = step3(str_value, mode, code_value)\n        if uri1:\n            uri2 = step4(uri1)\n    return (\n        mode,\n        code_value,\n        processing_seconds,\n        available,\n        uri1,\n        uri2,\n        option,\n    )\n```\n\nBy attaching the `@statemachine` decorator to the function, we instruct the CDK to generate a State Machine\nConstruct named *pysfn-basic* that has a definition aligned with the function contents. You can see the result\nin the **long** detail below.\n\n```json\n{\n  \"StartAt\": \"Register Input [1:1]\",\n  \"States\": {\n    \"Register Input [1:1]\": {\n      \"Type\": \"Pass\",\n      \"ResultPath\": \"$.register\",\n      \"Next\": \"Has list_value [1:2]\"\n    },\n    \"Has list_value [1:2]\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n        {\n          \"Variable\": \"$.register.list_value\",\n          \"IsPresent\": false,\n          \"Next\": \"Assign list_value default [1:3]\"\n        }\n      ],\n      \"Default\": \"Has option [1:4]\"\n    },\n    \"Assign list_value default [1:3]\": {\n      \"Type\": \"Pass\",\n      \"ResultPath\": \"$.register\",\n      \"InputPath\": \"$.register\",\n      \"Parameters\": {\n        \"list_value\": \"\",\n        \"str_value.$\": \"$.str_value\"\n      },\n      \"Next\": \"Has option [1:4]\"\n    },\n    \"Has option [1:4]\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n        {\n          \"Variable\": \"$.register.option\",\n          \"IsPresent\": false,\n          \"Next\": \"Assign option default [1:5]\"\n        }\n      ],\n      \"Default\": \"Assign uri1 [1:6]\"\n    },\n    \"Assign option default [1:5]\": {\n      \"Type\": \"Pass\",\n      \"ResultPath\": \"$.register\",\n      \"InputPath\": \"$.register\",\n      \"Parameters\": {\n        \"option\": false,\n        \"str_value.$\": \"$.str_value\",\n        \"list_value.$\": \"$.list_value\"\n      },\n      \"Next\": \"Assign uri1 [1:6]\"\n    },\n    \"Assign uri1 [1:6]\": {\n      \"Type\": \"Pass\",\n      \"ResultPath\": \"$.register\",\n      \"InputPath\": \"$.register\",\n      \"Parameters\": {\n        \"uri1\": \"\",\n        \"option.$\": \"$.option\",\n        \"str_value.$\": \"$.str_value\",\n        \"list_value.$\": \"$.list_value\"\n      },\n      \"Next\": \"Assign uri2 [1:7]\"\n    },\n    \"Assign uri2 [1:7]\": {\n      \"Type\": \"Pass\",\n      \"ResultPath\": \"$.register\",\n      \"InputPath\": \"$.register\",\n      \"Parameters\": {\n        \"uri2\": \"\",\n        \"option.$\": \"$.option\",\n        \"uri1.$\": \"$.uri1\",\n        \"str_value.$\": \"$.str_value\",\n        \"list_value.$\": \"$.list_value\"\n      },\n      \"Next\": \"Call step1 [1:8]\"\n    },\n    \"Call step1 [1:8]\": {\n      \"Next\": \"Register step1 [1:9]\",\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\n            \"Lambda.ServiceException\",\n            \"Lambda.AWSLambdaException\",\n            \"Lambda.SdkClientException\"\n          ],\n          \"IntervalSeconds\": 2,\n          \"MaxAttempts\": 6,\n          \"BackoffRate\": 2\n        }\n      ],\n      \"Type\": \"Task\",\n      \"ResultPath\": \"$.register.out\",\n      \"Resource\": \"arn:aws:states:::lambda:invoke\",\n      \"Parameters\": {\n        \"FunctionName\": \"arn:aws:lambda:us-west-2:999999999999:function:pysfn-base-python\",\n        \"Payload\": {\n          \"str_value.$\": \"$.register.str_value\",\n          \"bool_value.$\": \"$.register.option\",\n          \"launcher_target\": \"step1\"\n        }\n      }\n    },\n    \"Register step1 [1:9]\": {\n      \"Type\": \"Pass\",\n      \"ResultPath\": \"$.register\",\n      \"InputPath\": \"$.register\",\n      \"Parameters\": {\n        \"available.$\": \"$.out.Payload.arg0\",\n        \"mode.$\": \"$.out.Payload.arg1\",\n        \"option.$\": \"$.out.Payload.arg2\",\n        \"processing_seconds.$\": \"$.out.Payload.arg3\",\n        \"code_value.$\": \"$.out.Payload.arg4\",\n        \"type_value.$\": \"$.out.Payload.arg5\",\n        \"list_value.$\": \"$.list_value\",\n        \"uri1.$\": \"$.uri1\",\n        \"uri2.$\": \"$.uri2\",\n        \"str_value.$\": \"$.str_value\"\n      },\n      \"Next\": \"If available [1:10]\"\n    },\n    \"If available [1:10]\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n        {\n          \"And\": [\n            {\n              \"Variable\": \"$.register.available\",\n              \"IsPresent\": true\n            },\n            {\n              \"Or\": [\n                {\n                  \"And\": [\n                    {\n                      \"Variable\": \"$.register.available\",\n                      \"IsBoolean\": true\n                    },\n                    {\n                      \"Variable\": \"$.register.available\",\n                      \"BooleanEquals\": true\n                    }\n                  ]\n                },\n                {\n                  \"And\": [\n                    {\n                      \"Variable\": \"$.register.available\",\n                      \"IsString\": true\n                    },\n                    {\n                      \"Not\": {\n                        \"Variable\": \"$.register.available\",\n                        \"StringEquals\": \"\"\n                      }\n                    }\n                  ]\n                },\n                {\n                  \"And\": [\n                    {\n                      \"Variable\": \"$.register.available\",\n                      \"IsNumeric\": true\n                    },\n                    {\n                      \"Not\": {\n                        \"Variable\": \"$.register.available\",\n                        \"NumericEquals\": 0\n                      }\n                    }\n                  ]\n                }\n              ]\n            }\n          ],\n          \"Next\": \"If mode=='html' [1:11]\"\n        }\n      ],\n      \"Default\": \"Return [1:19]\"\n    },\n    \"If mode=='html' [1:11]\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n        {\n          \"Variable\": \"$.register.mode\",\n          \"StringEquals\": \"html\",\n          \"Next\": \"Call step2 [1:12]\"\n        }\n      ],\n      \"Default\": \"Call step3 [1:14]\"\n    },\n    \"Call step2 [1:12]\": {\n      \"Next\": \"Register step2 [1:13]\",\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\n            \"Lambda.ServiceException\",\n            \"Lambda.AWSLambdaException\",\n            \"Lambda.SdkClientException\"\n          ],\n          \"IntervalSeconds\": 2,\n          \"MaxAttempts\": 6,\n          \"BackoffRate\": 2\n        }\n      ],\n      \"Type\": \"Task\",\n      \"ResultPath\": \"$.register.out\",\n      \"Resource\": \"arn:aws:states:::lambda:invoke\",\n      \"Parameters\": {\n        \"FunctionName\": \"arn:aws:lambda:us-west-2:999999999999:function:pysfn-js\",\n        \"Payload\": {\n          \"strValue.$\": \"$.register.str_value\",\n          \"optParam.$\": \"$.register.list_value\"\n        }\n      }\n    },\n    \"Register step2 [1:13]\": {\n      \"Type\": \"Pass\",\n      \"ResultPath\": \"$.register\",\n      \"InputPath\": \"$.register\",\n      \"Parameters\": {\n        \"available.$\": \"$.out.Payload.available\",\n        \"list_value.$\": \"$.out.Payload.listValue\",\n        \"uri1.$\": \"$.out.Payload.resultURI\",\n        \"code_value.$\": \"$.code_value\",\n        \"mode.$\": \"$.mode\",\n        \"processing_seconds.$\": \"$.processing_seconds\",\n        \"option.$\": \"$.option\",\n        \"type_value.$\": \"$.type_value\",\n        \"uri2.$\": \"$.uri2\",\n        \"str_value.$\": \"$.str_value\"\n      },\n      \"Next\": \"If uri1 [1:16]\"\n    },\n    \"Call step3 [1:14]\": {\n      \"Next\": \"Register step3 [1:15]\",\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\n            \"Lambda.ServiceException\",\n            \"Lambda.AWSLambdaException\",\n            \"Lambda.SdkClientException\"\n          ],\n          \"IntervalSeconds\": 2,\n          \"MaxAttempts\": 6,\n          \"BackoffRate\": 2\n        }\n      ],\n      \"Type\": \"Task\",\n      \"ResultPath\": \"$.register.out\",\n      \"Resource\": \"arn:aws:states:::lambda:invoke\",\n      \"Parameters\": {\n        \"FunctionName\": \"arn:aws:lambda:us-west-2:999999999999:function:pysfn-highmemory-python\",\n        \"Payload\": {\n          \"str_value.$\": \"$.register.str_value\",\n          \"str_value2.$\": \"$.register.mode\",\n          \"str_value3.$\": \"$.register.code_value\",\n          \"launcher_target\": \"step3\"\n        }\n      }\n    },\n    \"Register step3 [1:15]\": {\n      \"Type\": \"Pass\",\n      \"ResultPath\": \"$.register\",\n      \"InputPath\": \"$.register\",\n      \"Parameters\": {\n        \"available.$\": \"$.out.Payload.arg0\",\n        \"uri2.$\": \"$.out.Payload.arg1\",\n        \"uri1.$\": \"$.out.Payload.arg2\",\n        \"code_value.$\": \"$.code_value\",\n        \"mode.$\": \"$.mode\",\n        \"processing_seconds.$\": \"$.processing_seconds\",\n        \"list_value.$\": \"$.list_value\",\n        \"option.$\": \"$.option\",\n        \"type_value.$\": \"$.type_value\",\n        \"str_value.$\": \"$.str_value\"\n      },\n      \"Next\": \"If uri1 [1:16]\"\n    },\n    \"If uri1 [1:16]\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n        {\n          \"And\": [\n            {\n              \"Variable\": \"$.register.uri1\",\n              \"IsPresent\": true\n            },\n            {\n              \"Or\": [\n                {\n                  \"And\": [\n                    {\n                      \"Variable\": \"$.register.uri1\",\n                      \"IsBoolean\": true\n                    },\n                    {\n                      \"Variable\": \"$.register.uri1\",\n                      \"BooleanEquals\": true\n                    }\n                  ]\n                },\n                {\n                  \"And\": [\n                    {\n                      \"Variable\": \"$.register.uri1\",\n                      \"IsString\": true\n                    },\n                    {\n                      \"Not\": {\n                        \"Variable\": \"$.register.uri1\",\n                        \"StringEquals\": \"\"\n                      }\n                    }\n                  ]\n                },\n                {\n                  \"And\": [\n                    {\n                      \"Variable\": \"$.register.uri1\",\n                      \"IsNumeric\": true\n                    },\n                    {\n                      \"Not\": {\n                        \"Variable\": \"$.register.uri1\",\n                        \"NumericEquals\": 0\n                      }\n                    }\n                  ]\n                }\n              ]\n            }\n          ],\n          \"Next\": \"Call step4 [1:17]\"\n        }\n      ],\n      \"Default\": \"Return [1:19]\"\n    },\n    \"Call step4 [1:17]\": {\n      \"Next\": \"Register step4 [1:18]\",\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\n            \"Lambda.ServiceException\",\n            \"Lambda.AWSLambdaException\",\n            \"Lambda.SdkClientException\"\n          ],\n          \"IntervalSeconds\": 2,\n          \"MaxAttempts\": 6,\n          \"BackoffRate\": 2\n        }\n      ],\n      \"Type\": \"Task\",\n      \"ResultPath\": \"$.register.out\",\n      \"Resource\": \"arn:aws:states:::lambda:invoke\",\n      \"Parameters\": {\n        \"FunctionName\": \"arn:aws:lambda:us-west-2:999999999999:function:pysfn-base-python\",\n        \"Payload\": {\n          \"str_value.$\": \"$.register.uri1\",\n          \"launcher_target\": \"step4\"\n        }\n      }\n    },\n    \"Register step4 [1:18]\": {\n      \"Type\": \"Pass\",\n      \"ResultPath\": \"$.register\",\n      \"InputPath\": \"$.register\",\n      \"Parameters\": {\n        \"uri2.$\": \"$.out.Payload.arg0\",\n        \"available.$\": \"$.available\",\n        \"code_value.$\": \"$.code_value\",\n        \"mode.$\": \"$.mode\",\n        \"processing_seconds.$\": \"$.processing_seconds\",\n        \"list_value.$\": \"$.list_value\",\n        \"option.$\": \"$.option\",\n        \"uri1.$\": \"$.uri1\",\n        \"type_value.$\": \"$.type_value\",\n        \"str_value.$\": \"$.str_value\"\n      },\n      \"Next\": \"Return [1:19]\"\n    },\n    \"Return [1:19]\": {\n      \"Type\": \"Pass\",\n      \"Parameters\": {\n        \"mode.$\": \"$.register.mode\",\n        \"code_value.$\": \"$.register.code_value\",\n        \"processing_seconds.$\": \"$.register.processing_seconds\",\n        \"available.$\": \"$.register.available\",\n        \"uri1.$\": \"$.register.uri1\",\n        \"uri2.$\": \"$.register.uri2\",\n        \"option.$\": \"$.register.option\"\n      },\n      \"End\": true\n    }\n  }\n}\n```\n\nA few items to note with this result:\n* To avoid name conflicts when the CDK generates the constructs, I've added an ID suffix to each stage.\n* I treat the `register` object within the payload as my version of `locals()` to maintain a clean\n  view of the current set of vars. The first step copies the inputs into the register.\n* After this, we address any optional parameters defined in the function signature. If they aren't present,\n  we set the default value.\n* This function sets defaults for two `uri` values which we set using Pass states.\n* The if operations are converted to Choice states with the appropriate conditions. Note that in the case\n  of the first and last Choice states, the logic inserts a complex condition to mimic Python boolean type coercion.\n* Each call to a Lambda function is followed by a generated Pass state to move the results into the register.\n\n## About Lambdas...\nOne of the goals of this project is to make working with Python lambdas more flexible so that you don't have\nto spend a lot of time writing code to parse the `event` object over and over. While it's not necessary to\nuse it to take advantage of the transpiler, most of the Lambda steps in the proto_app are based on \n**launcher** logic I've included.\n\nThe `step1` function in the `operations.py` module is defined as shown below. Note that this looks like any other \npython function and could be referenced anywhere in your code. \n\n```python\ndef step1(str_value: str, bool_value: bool) -> (bool, str, bool, int, int, str):\n    return True, str_value, False, 4, 200, \"text/html\"\n```\n\nTo pull this into our stack we have to start by creating a Lambda that will hold the function. \nThis looks like this:\n\n```python\nbase_lambda = PythonLambda(\n    self,\n    \"pysfn-base-python\",\n    os.path.join(os.getcwd(), \"python\"),\n    role=self.lambda_role,\n    runtime=PythonLambda.PYTHON_3_9,\n    timeout_minutes=1,\n    memory_mb=1,\n    environment=None,\n)\n```\n\nThe `PythonLambda` class allows us to define a Lambda Construct that can contain multiple functions to be \nexecuted via a launcher that it will generate. Now that we've defined the container, we can add our function\nto the launcher.\n\n```python\nstep1 = base_lambda.register(operations.step1)\n```\n\nThe new `step1` variable has the same function signature as the original function, but can now be used\nwithin our state machine function. The transpiler uses the details of this lambda to produce the following\nstate in our state machine. Note the `pysfn_operation` value that is included in the Payload.\n\n```json\n    \"Call step1 [1:8]\": {\n      \"Next\": \"Register step1 [1:9]\",\n      \"Type\": \"Task\",\n      \"ResultPath\": \"$.register.out\",\n      \"Resource\": \"arn:aws:states:::lambda:invoke\",\n      \"Parameters\": {\n        \"FunctionName\": \"arn:aws:lambda:us-west-2:999999999999:function:pysfn-base-python\",\n        \"Payload\": {\n          \"str_value.$\": \"$.register.str_value\",\n          \"bool_value.$\": \"$.register.option\",\n          \"pysfn_operation\": \"step1\"\n        }\n      }\n    }\n```\n\nOf course, existing Lambdas are also supported. For example, we can define a Lambda construct as we normally\nwould as shown below.\n\n```python\njs_lambda = lmbda.Function(\n    self,\n    \"JSLambda\",\n    function_name=\"pysfn-js\",\n    code=lmbda.Code.from_asset(\n        os.path.join(os.getcwd(), \"js\"), exclude=[\"node_modules\"]\n    ),\n    handler=\"app.handler\",\n    runtime=lmbda.Runtime.NODEJS_14_X,\n    role=self.lambda_role,\n    timeout=Duration.minutes(10),\n    memory_size=2096,\n)\n```\n\nThen we can create a pysfn function from this construct as follows by declaring the input parameters and output \nvalues.\n\n```python\nstep2 = function_for_lambda(\n    js_lambda,\n    {\"strValue\": str, \"optParam\": bool},\n    {\"available\": bool, \"listValue\": List[int], \"resultURI\": str},\n)\n```\n\nBy specifying the output values in the function declaration, it allows PySFN to map the results from \na call like this to the appropriate variables.\n\n```python\n(available, list_value, uri1) = step2(str_value, list_value)\n```\n\nIn the step after the Lambda is invoked, a Pass state performs the mapping.\n\n```json\n\"Register step2 [1:13]\": {\n  \"Type\": \"Pass\",\n  \"ResultPath\": \"$.register\",\n  \"InputPath\": \"$.register\",\n  \"Parameters\": {\n    \"available.$\": \"$.out.Payload.available\",\n    \"list_value.$\": \"$.out.Payload.listValue\",\n    \"uri1.$\": \"$.out.Payload.resultURI\",\n    \"code_value.$\": \"$.code_value\",\n    \"mode.$\": \"$.mode\",\n    \"processing_seconds.$\": \"$.processing_seconds\",\n    \"option.$\": \"$.option\",\n    \"type_value.$\": \"$.type_value\",\n    \"uri2.$\": \"$.uri2\",\n    \"str_value.$\": \"$.str_value\"\n  },\n  \"Next\": \"If uri1 [1:16]\"\n}\n```\n\n# More to do!\nAfter a bunch of experiments and refactoring, I think I've been able to prove the utility of this approach,\nat least for the range of projects I typically use SFN for. It's still undocumented and has a lot of\nrough edges, but overall I've been thrilled at how easy it has been to iterate on new and existing SFNs\nusing this approach. It significantly reduces the cognitive load I felt when working with the stages language\nand makes it much easier to build stable and well-managed data flows.\n\nThat said, feedback and PRs are welcome. Over the next few months I'll hopefully be able to address the\nfollowing:\n1. Better support for `list`, `dict`, and `attribute` access\n2. List comprehensions\n3. Support for dataclasses\n4. Real documentation\n5. Take full advantage of Python type hints\n6. Support functions with kwonly or posonly args\n7. Add support for Parallel\n8. Support the full range of likely conditions\n9. Tree shaking to better handle if/elif/elif/else, as well as assigning multiple variables\n10. Support some common integrations such as reading from S3 or performing DynamoDB writes\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pysfn",
    "package_url": "https://pypi.org/project/pysfn/",
    "platform": null,
    "project_url": "https://pypi.org/project/pysfn/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pysfn/0.1.11/",
    "requires_dist": [
      "shortuuid (>=1.0.11,<2.0.0)",
      "aws-cdk-lib (>=2.55.1,<3.0.0)",
      "constructs (>=10.1.194,<11.0.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Transpiler for AWS Step Functions",
    "version": "0.1.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16845023,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec76b63a82cabb658978cc5284f8486e8ca2d1beb417d4a88db7b350884365ab",
          "md5": "e618f1e6c04d8363d11e53390f2607a3",
          "sha256": "a53878aa4ab4c23e325cb208e9ab4ad8d56e56e7764525684461b8bb7a7b4db5"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e618f1e6c04d8363d11e53390f2607a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 17909,
        "upload_time": "2022-11-12T00:46:47",
        "upload_time_iso_8601": "2022-11-12T00:46:47.434887Z",
        "url": "https://files.pythonhosted.org/packages/ec/76/b63a82cabb658978cc5284f8486e8ca2d1beb417d4a88db7b350884365ab/pysfn-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f785e7b73e04783b5a3aff85a23e91264850b5ebf5ad63c8613772b902a0bab",
          "md5": "32c4d18a8d734ef05e22788c9e9beb33",
          "sha256": "45af61133a97e95e7d1ef50252c55b42ef1fb242e3e92a4f60b7902ba539db3d"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32c4d18a8d734ef05e22788c9e9beb33",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 22464,
        "upload_time": "2023-01-05T01:12:25",
        "upload_time_iso_8601": "2023-01-05T01:12:25.531259Z",
        "url": "https://files.pythonhosted.org/packages/7f/78/5e7b73e04783b5a3aff85a23e91264850b5ebf5ad63c8613772b902a0bab/pysfn-0.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c7764c30a22476ed8710e15fe368471be1c80a748c832b836d1542e27520e90",
          "md5": "9f5c9ec35beb1c2d45db655c01a9f342",
          "sha256": "0646763e80ba6a8e4970a16e478354bbca03758fd742fc231d03e372d2f846c0"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "9f5c9ec35beb1c2d45db655c01a9f342",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 24059,
        "upload_time": "2023-01-05T01:12:27",
        "upload_time_iso_8601": "2023-01-05T01:12:27.424915Z",
        "url": "https://files.pythonhosted.org/packages/1c/77/64c30a22476ed8710e15fe368471be1c80a748c832b836d1542e27520e90/pysfn-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32f1733cf7246f891330187df1c7e3759c6dbaacbadab3adc461a08fc6e6ceb2",
          "md5": "af7044c1daf48fb054833189c3acf170",
          "sha256": "6a0f2a5c0055487878839c47c1e6880e4962b48e20269d7fdd2ab98db97230eb"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af7044c1daf48fb054833189c3acf170",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 21956,
        "upload_time": "2023-02-13T19:26:24",
        "upload_time_iso_8601": "2023-02-13T19:26:24.985262Z",
        "url": "https://files.pythonhosted.org/packages/32/f1/733cf7246f891330187df1c7e3759c6dbaacbadab3adc461a08fc6e6ceb2/pysfn-0.1.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ec4966323d4855df5d9adcb57cee9e82efb16ecd3968e808b5185737bf295a8",
          "md5": "d2b8540b6d71b6b129b65319f0f3a972",
          "sha256": "d0a5f971728faac89e378809b81f2ea2724265d7988a97fd2a99f899116bd241"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "d2b8540b6d71b6b129b65319f0f3a972",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 23448,
        "upload_time": "2023-02-13T19:26:26",
        "upload_time_iso_8601": "2023-02-13T19:26:26.803007Z",
        "url": "https://files.pythonhosted.org/packages/8e/c4/966323d4855df5d9adcb57cee9e82efb16ecd3968e808b5185737bf295a8/pysfn-0.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe6f19cc0f9b09195bf71fffbc42e07ff03367568c04eba76e7df7d0f19e4753",
          "md5": "d37a69d76a764a53bac025ff627cd1da",
          "sha256": "0e3ba37e82113b97c63c1a55548bfc719f6e9b8c74d833a36bef8323b575f436"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d37a69d76a764a53bac025ff627cd1da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 18562,
        "upload_time": "2022-11-19T19:00:40",
        "upload_time_iso_8601": "2022-11-19T19:00:40.097598Z",
        "url": "https://files.pythonhosted.org/packages/fe/6f/19cc0f9b09195bf71fffbc42e07ff03367568c04eba76e7df7d0f19e4753/pysfn-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc059aba3caf85f2d865c55b7ee9392c0fd2009e0131a2811492173c25e9f5a0",
          "md5": "892646fc4dfbed63636b37705612ae7b",
          "sha256": "ed587c615b233be101e5cedbace98dc8ff2aa3ca97063dd39af00e73107d2861"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "892646fc4dfbed63636b37705612ae7b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19499,
        "upload_time": "2022-11-21T17:49:43",
        "upload_time_iso_8601": "2022-11-21T17:49:43.725599Z",
        "url": "https://files.pythonhosted.org/packages/dc/05/9aba3caf85f2d865c55b7ee9392c0fd2009e0131a2811492173c25e9f5a0/pysfn-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbe377c1df30a672f1a1d2655fe6ea39056ec6551a00a32d920d59846b37be25",
          "md5": "6153f196739fb5e76893c2169aa4289b",
          "sha256": "9f1e69e4d2bdaf849b079b18343b2d95c032210ec339946f5ecca06a30ad8b28"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6153f196739fb5e76893c2169aa4289b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19759,
        "upload_time": "2022-11-26T16:39:56",
        "upload_time_iso_8601": "2022-11-26T16:39:56.303149Z",
        "url": "https://files.pythonhosted.org/packages/fb/e3/77c1df30a672f1a1d2655fe6ea39056ec6551a00a32d920d59846b37be25/pysfn-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1128c265eed7217f35eabf10303f559d9bd08f32c2c9a1cb8f19196a36d7bae6",
          "md5": "f16bedb035bc58cd4734158a3431be7d",
          "sha256": "decd7b08fdbe32fdf6e19fe338be01564c2a8477527406100139206d385f4a1b"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f16bedb035bc58cd4734158a3431be7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20297,
        "upload_time": "2022-12-14T22:54:19",
        "upload_time_iso_8601": "2022-12-14T22:54:19.009784Z",
        "url": "https://files.pythonhosted.org/packages/11/28/c265eed7217f35eabf10303f559d9bd08f32c2c9a1cb8f19196a36d7bae6/pysfn-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d3fd6169e475c5a0beb0e0e5be34824dca6218c35be2ab80ea134bcb56a9ce0",
          "md5": "9b916d8073146d4d1a2a4810e1b6bf49",
          "sha256": "912866d42dd9b03f942bdac4b3831f8978df88e321422b5cfe169a5815ba5a77"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b916d8073146d4d1a2a4810e1b6bf49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 21097,
        "upload_time": "2022-12-19T20:34:41",
        "upload_time_iso_8601": "2022-12-19T20:34:41.264483Z",
        "url": "https://files.pythonhosted.org/packages/3d/3f/d6169e475c5a0beb0e0e5be34824dca6218c35be2ab80ea134bcb56a9ce0/pysfn-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45b8359dd20dc1c8916fb248f01e33c8b82a650a0975e3a7b8b2c6e309aadbd5",
          "md5": "4a4aa2a77d157b7bfb759ecc5ea48967",
          "sha256": "03ef49dec85929258884ababb052e4bd06ef43963a7e0c2ef366c31ec0b7307d"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "4a4aa2a77d157b7bfb759ecc5ea48967",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 22834,
        "upload_time": "2022-12-19T20:34:42",
        "upload_time_iso_8601": "2022-12-19T20:34:42.951362Z",
        "url": "https://files.pythonhosted.org/packages/45/b8/359dd20dc1c8916fb248f01e33c8b82a650a0975e3a7b8b2c6e309aadbd5/pysfn-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bee819728528a8700637923acda2460a2cbd7d30018e1835c71d934ff65b9055",
          "md5": "667d9118198219c96c107048719de03e",
          "sha256": "33a42941e3b3e79b416cf063246f440a7e9855f9b661fbf42beed832e82353fb"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "667d9118198219c96c107048719de03e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 21716,
        "upload_time": "2022-12-26T21:39:13",
        "upload_time_iso_8601": "2022-12-26T21:39:13.198468Z",
        "url": "https://files.pythonhosted.org/packages/be/e8/19728528a8700637923acda2460a2cbd7d30018e1835c71d934ff65b9055/pysfn-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50af3344e6823db5d2eb937b6ecbaf53b5da924cc5376fd5cad6d926f92566f2",
          "md5": "a4cd9e0b778b0bec4305973d0e7e3682",
          "sha256": "d55fcea6eda57fc228cd867fc47118ac67f727a892a27722fd8c132c42ce407c"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a4cd9e0b778b0bec4305973d0e7e3682",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 23222,
        "upload_time": "2022-12-26T21:39:14",
        "upload_time_iso_8601": "2022-12-26T21:39:14.669817Z",
        "url": "https://files.pythonhosted.org/packages/50/af/3344e6823db5d2eb937b6ecbaf53b5da924cc5376fd5cad6d926f92566f2/pysfn-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b54e9f7ca277538fd5c20bec80c22d3018719fa6c0fc803d6a09e878c1ef32b",
          "md5": "dd095ed59215a99a7b9dd7f5f9fd76eb",
          "sha256": "7f7766492d35c8e5cff14c7fdfa10c6d9e5d129351d809273f968201a99808dc"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd095ed59215a99a7b9dd7f5f9fd76eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 22281,
        "upload_time": "2022-12-28T23:19:48",
        "upload_time_iso_8601": "2022-12-28T23:19:48.463482Z",
        "url": "https://files.pythonhosted.org/packages/6b/54/e9f7ca277538fd5c20bec80c22d3018719fa6c0fc803d6a09e878c1ef32b/pysfn-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1d7e595c87f66ee7b126ffb44fbc4efd5e06a7e9aece6bc85070b7476877879",
          "md5": "94c165747c225333d8d81f39f5232016",
          "sha256": "32048a0a7986c754d0e9d0da926adc5afc431d0c9b343a2afe2e69816ebb38cd"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "94c165747c225333d8d81f39f5232016",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 23774,
        "upload_time": "2022-12-28T23:19:49",
        "upload_time_iso_8601": "2022-12-28T23:19:49.977446Z",
        "url": "https://files.pythonhosted.org/packages/f1/d7/e595c87f66ee7b126ffb44fbc4efd5e06a7e9aece6bc85070b7476877879/pysfn-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ca2cafa64496156fbfa177d9b762224948077e2e3601c3559bda7ce0bfbe03e",
          "md5": "7130050b3ea50780f5ec9b77160612f3",
          "sha256": "c68da1043fc5794b395cb785d0bd2433bcdae5e6d0ea21b98f8894de68108455"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7130050b3ea50780f5ec9b77160612f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 22455,
        "upload_time": "2023-01-05T01:02:09",
        "upload_time_iso_8601": "2023-01-05T01:02:09.194562Z",
        "url": "https://files.pythonhosted.org/packages/1c/a2/cafa64496156fbfa177d9b762224948077e2e3601c3559bda7ce0bfbe03e/pysfn-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d75f6beaadb471e52d7ea823a6a62ae80f3ebbbd33faf4d897eb931c1f71b872",
          "md5": "03dae96fb9b758645be822765957d74a",
          "sha256": "53b4dc80d2c1981261b41d5297dc68896428a56902db04c6c5beec32494fa000"
        },
        "downloads": -1,
        "filename": "pysfn-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "03dae96fb9b758645be822765957d74a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 24054,
        "upload_time": "2023-01-05T01:02:10",
        "upload_time_iso_8601": "2023-01-05T01:02:10.820814Z",
        "url": "https://files.pythonhosted.org/packages/d7/5f/6beaadb471e52d7ea823a6a62ae80f3ebbbd33faf4d897eb931c1f71b872/pysfn-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32f1733cf7246f891330187df1c7e3759c6dbaacbadab3adc461a08fc6e6ceb2",
        "md5": "af7044c1daf48fb054833189c3acf170",
        "sha256": "6a0f2a5c0055487878839c47c1e6880e4962b48e20269d7fdd2ab98db97230eb"
      },
      "downloads": -1,
      "filename": "pysfn-0.1.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "af7044c1daf48fb054833189c3acf170",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 21956,
      "upload_time": "2023-02-13T19:26:24",
      "upload_time_iso_8601": "2023-02-13T19:26:24.985262Z",
      "url": "https://files.pythonhosted.org/packages/32/f1/733cf7246f891330187df1c7e3759c6dbaacbadab3adc461a08fc6e6ceb2/pysfn-0.1.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ec4966323d4855df5d9adcb57cee9e82efb16ecd3968e808b5185737bf295a8",
        "md5": "d2b8540b6d71b6b129b65319f0f3a972",
        "sha256": "d0a5f971728faac89e378809b81f2ea2724265d7988a97fd2a99f899116bd241"
      },
      "downloads": -1,
      "filename": "pysfn-0.1.11.tar.gz",
      "has_sig": false,
      "md5_digest": "d2b8540b6d71b6b129b65319f0f3a972",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 23448,
      "upload_time": "2023-02-13T19:26:26",
      "upload_time_iso_8601": "2023-02-13T19:26:26.803007Z",
      "url": "https://files.pythonhosted.org/packages/8e/c4/966323d4855df5d9adcb57cee9e82efb16ecd3968e808b5185737bf295a8/pysfn-0.1.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}