{
  "info": {
    "author": "David Montero Loaiza",
    "author_email": "dml.mont@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<p align=\"center\">\n  <a href=\"https://github.com/davemlz/spyndex\"><img src=\"https://raw.githubusercontent.com/davemlz/spyndex/main/docs/_static/spyndex.png\" alt=\"spyndex\"></a>\n</p>\n<p align=\"center\">\n    <em><a href=\"https://github.com/davemlz/awesome-ee-spectral-indices\" target=\"_blank\">\n    Awesome Spectral Indices</a> in Python:</em>\n</p>\n<p align=\"center\">\n    <b><a href=\"https://github.com/numpy/numpy\" target=\"_blank\">\n    Numpy</a> | <a href=\"https://github.com/pandas-dev/pandas\" target=\"_blank\">\n    Pandas</a> | <a href=\"https://github.com/geopandas/geopandas\" target=\"_blank\">\n    GeoPandas</a> | <a href=\"https://github.com/pydata/xarray\" target=\"_blank\">\n    Xarray</a> | <a href=\"https://github.com/google/earthengine-api\" target=\"_blank\">\n    Earth Engine</a> | <a href=\"https://github.com/microsoft/planetary-computer-sdk-for-python\" target=\"_blank\">\n    Planetary Computer</a> | <a href=\"https://docs.dask.org/en/latest/\" target=\"_blank\">\n    Dask</a> </b>\n</p>\n<p align=\"center\">\n<a href='https://pypi.python.org/pypi/spyndex'>\n    <img src='https://img.shields.io/pypi/v/spyndex.svg' alt='PyPI' />\n</a>\n<a href='https://anaconda.org/conda-forge/spyndex'>\n    <img src='https://img.shields.io/conda/vn/conda-forge/spyndex.svg' alt='conda-forge' />\n</a>\n<a href='https://spyndex.readthedocs.io/en/latest/?badge=latest'>\n    <img src='https://readthedocs.org/projects/spyndex/badge/?version=latest' alt='Documentation Status' />\n</a>\n<a href=\"https://github.com/davemlz/spyndex/actions/workflows/tests.yml\" target=\"_blank\">\n    <img src=\"https://github.com/davemlz/spyndex/actions/workflows/tests.yml/badge.svg\" alt=\"Tests\">\n</a>\n<a href=\"https://github.com/davemlz/spyndex/actions/workflows/update_awesome_spectral_indices.yml\" target=\"_blank\">\n    <img src=\"https://github.com/davemlz/spyndex/actions/workflows/update_awesome_spectral_indices.yml/badge.svg\" alt=\"Awesome Spectral Indices\">\n</a>\n<a href=\"https://opensource.org/licenses/MIT\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/License-MIT-blue.svg\" alt=\"License\">\n</a>\n<a href=\"https://github.com/sponsors/davemlz\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/GitHub%20Sponsors-Donate-ff69b4.svg\" alt=\"GitHub Sponsors\">\n</a>\n<a href=\"https://www.buymeacoffee.com/davemlz\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/Buy%20me%20a%20coffee-Donate-ff69b4.svg\" alt=\"Buy me a coffee\">\n</a>\n<a href=\"https://ko-fi.com/davemlz\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/kofi-Donate-ff69b4.svg\" alt=\"Ko-fi\">\n</a>\n<a href=\"https://twitter.com/dmlmont\" target=\"_blank\">\n    <img src=\"https://img.shields.io/twitter/follow/dmlmont?style=social\" alt=\"Twitter\">\n</a>\n<a href=\"https://github.com/psf/black\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" alt=\"Black\">\n</a>\n<a href=\"https://pycqa.github.io/isort/\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336\" alt=\"isort\">\n</a>\n</p>\n\n---\n\n**GitHub**: [https://github.com/davemlz/spyndex](https://github.com/davemlz/spyndex)\n\n**Documentation**: [https://spyndex.readthedocs.io/](https://spyndex.readthedocs.io/)\n\n**PyPI**: [https://pypi.org/project/spyndex/](https://pypi.org/project/spyndex/)\n\n**Conda-forge**: [https://anaconda.org/conda-forge/spyndex](https://anaconda.org/conda-forge/spyndex)\n\n**Tutorials**: [https://spyndex.readthedocs.io/en/latest/tutorials.html](https://spyndex.readthedocs.io/en/latest/tutorials.html)\n\n---\n\n## Overview\n\nThe [Awesome Spectral Indices](https://github.com/davemlz/awesome-spectral-indices) is a standardized ready-to-use curated list of spectral indices\nthat can be used as expressions for computing spectral indices in remote sensing applications. The list was born initially to supply spectral \nindices for [Google Earth Engine](https://earthengine.google.com/) through [eemont](https://github.com/davemlz/eemont) and \n[spectral](https://github.com/davemlz/spectral), but given the necessity to compute spectral indices for other object classes outside the Earth \nEngine ecosystem, a new package was required.\n\nSpyndex is a python package that uses the spectral indices from the *Awesome Spectral Indices* list and creates an expression evaluation method that is\ncompatible with python object classes that support [overloaded operators](https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types)\n(e.g. [numpy.ndarray](https://github.com/numpy/numpy), [pandas.Series](https://github.com/pandas-dev/pandas),\n[xarray.DataArray](https://github.com/pydata/xarray)).\n\nSome of the `spyndex` features are listed here:\n\n- Access to Spectral Indices from the Awesome Spectral Indices list.\n- Multiple Spectral Indices computation.\n- Kernel Indices computation.\n- Parallel processing.\n- Compatibility with a lot of python objects!\n\nCheck the simple usage of spyndex here:\n\n```python\nimport spyndex\nimport numpy as np\nimport xarray as xr\n\nN = np.random.normal(0.6,0.10,10000)\nR = np.random.normal(0.1,0.05,10000)\n\nda = xr.DataArray(\n    np.array([N,R]).reshape(2,100,100),\n    dims = (\"band\",\"x\",\"y\"),\n    coords = {\"band\": [\"NIR\",\"Red\"]}\n)\n\nidx = spyndex.computeIndex(\n    index = [\"NDVI\",\"SAVI\"],\n    params = {\n        \"N\": da.sel(band = \"NIR\"),\n        \"R\": da.sel(band = \"Red\"),\n        \"L\": 0.5\n    }\n)\n```\n\nBands can also be passed as keywords arguments:\n\n```python\nidx = spyndex.computeIndex(\n    index = [\"NDVI\",\"SAVI\"],\n    N = da.sel(band = \"NIR\"),\n    R = da.sel(band = \"Red\"),\n    L = 0.5\n)\n```\n\nAnd indices can be computed from their class:\n\n```python\nidx = spyndex.indices.NDVI.compute(\n    N = da.sel(band = \"NIR\"),\n    R = da.sel(band = \"Red\"),\n)\n```\n\n\n## How does it work?\n\nAny python object class that supports overloaded operators can be used with spyndex methods.\n\n---\n\n*\"Hey... what do you mean by 'overloaded operators'?\"*\n\n---\n\nThat's the million dollars' question! An object class that supports overloaded operators is the one that allows you to compute mathematical \noperations using common operators (`+`, `-`, `/`, `*`, `**`) like `a + b`, `a + b * c` or `(a - b) / (a + b)`. You know the last one, right? That's \nthe formula of the famous [NDVI](https://doi.org/10.1016/0034-4257(79)90013-0).\n\nSo, if you can use the overloaded operators with an object class, you can use that class with [spyndex](https://github.com/davemlz/spyndex)!\n\n> BE CAREFUL! Not all overloaded operators work as mathematical operators. In a `list` object class, the addition operator (`+`) concatenates two objects instead of performing an addition operation! So you must convert the `list` into a `numpy.ndarray` before using spyndex!\n\nHere is a little list of object classes that support mathematical overloaded operators:\n\n- `float` (Python Built-in type) or `numpy.float*` (with [numpy](https://github.com/numpy/numpy))\n- `int` (Python Built-in type) or `numpy.int*` (with [numpy](https://github.com/numpy/numpy))\n- `numpy.ndarray` (with [numpy](https://github.com/numpy/numpy))\n- `pandas.Series` (with [pandas](https://github.com/pandas-dev/pandas) or [geopandas](https://github.com/geopandas/geopandas))\n- `xarray.DataArray` (with [xarray](https://github.com/pydata/xarray))\n- `ee.Image` (with [earthengine-api](https://github.com/google/earthengine-api) and [eemont](https://github.com/davemlz/eemont))\n- `ee.Number` (with [earthengine-api](https://github.com/google/earthengine-api) and [eemont](https://github.com/davemlz/eemont))\n\nAnd wait, there is more! If objects that support overloaded operatores can be used in spyndex, that means that you can work in **parallel**\nwith [dask](https://docs.dask.org/en/latest/)!\n\nHere is the list of the dask objects that you can use with spyndex:\n\n- `dask.Array` (with [dask](https://docs.dask.org/en/latest/))\n- `dask.Series` (with [dask](https://docs.dask.org/en/latest/))\n\nThis means that you can actually use spyndex in a lot of processes! For example, you can download a Sentinel-2 image with\n[sentinelsat](https://github.com/sentinelsat/sentinelsat), open and read it with [rasterio](https://github.com/mapbox/rasterio) and then compute \nthe desired spectral indices with [spyndex](https://github.com/davemlz/spyndex). Or you can search through the Landsat-8 STAC in the \n[Planetary Computer](https://planetarycomputer.microsoft.com/) ecosystem using [pystac-client](https://github.com/stac-utils/pystac-client),\nconvert it to an `xarray.DataArray` with [stackstac](https://github.com/gjoseph92/stackstac) and then compute spectral indices using\n[spyndex](https://github.com/davemlz/spyndex) in parallel with [dask](https://docs.dask.org/en/latest/)! Amazing, right!?\n\n## Installation\n\nInstall the latest version from PyPI:\n\n```\npip install spyndex\n```\n\nUpgrade spyndex by running:\n\n```\npip install -U spyndex\n```\n\nInstall the latest version from conda-forge:\n\n```\nconda install -c conda-forge spyndex\n```\n\nInstall the latest dev version from GitHub by running:\n\n```\npip install git+https://github.com/davemlz/spyndex\n```\n\n## Features\n\n### Exploring Spectral Indices\n\nSpectral Indices from the Awesome Spectral Indices list can be accessed through\n`spyndex.indices`. This is a `Box` object where each one of the indices in the list\ncan be accessed as well as their [attributes](https://github.com/davemlz/awesome-ee-spectral-indices#attributes):\n\n```python\nimport spyndex\n\n# All indices\nspyndex.indices\n\n# NDVI index\nspyndex.indices[\"NDVI\"]\n\n# Or with dot notation\nspyndex.indices.NDVI\n\n# Formula of the NDVI\nspyndex.indices[\"NDVI\"][\"formula\"]\n\n# Or with dot notation\nspyndex.indices.NDVI.formula\n\n# Reference of the NDVI\nspyndex.indices[\"NDVI\"][\"reference\"]\n\n# Or with dot notation\nspyndex.indices.NDVI.reference\n```\n\n### Default Values\n\nSome Spectral Indices require constant values in order to be computed. Default values\ncan be accessed through `spyndex.constants`. This is a `Box` object where each one\nof the [constants](https://github.com/davemlz/awesome-spectral-indices#expressions) can be\naccessed:\n\n```python\nimport spyndex\n\n# All constants\nspyndex.constants\n\n# Canopy Background Adjustment\nspyndex.constants[\"L\"]\n\n# Or with dot notation\nspyndex.constants.L\n\n# Default value\nspyndex.constants[\"L\"][\"default\"]\n\n# Or with dot notation\nspyndex.constants.L.default\n```\n\n### Band Parameters\n\nThe standard band parameters description can be accessed through `spyndex.bands`. This is \na `Box` object where each one of the [bands](https://github.com/davemlz/awesome-spectral-indices#expressions) \ncan be accessed:\n\n```python\nimport spyndex\n\n# All bands\nspyndex.bands\n\n# Blue band\nspyndex.bands[\"B\"]\n\n# Or with dot notation\nspyndex.bands.B\n```\n\n### One (or more) Spectral Indices Computation\n\nUse the `computeIndex()` method to compute as many spectral indices as you want!\nThe `index` parameter receives the spectral index or a list of spectral indices to\ncompute, while the `params` parameter receives a dictionary with the\n[required parameters](https://github.com/davemlz/awesome-ee-spectral-indices#expressions)\nfor the spectral indices computation.\n\n```python\nimport spyndex\nimport xarray as xr\nimport matplotlib.pyplot as plt\nfrom rasterio import plot\n\n# Open a dataset (in this case a xarray.DataArray)\nsnt = spyndex.datasets.open(\"sentinel\")\n\n# Scale the data (remember that the valid domain for reflectance is [0,1])\nsnt = snt / 10000\n\n# Compute the desired spectral indices\nidx = spyndex.computeIndex(\n    index = [\"NDVI\",\"GNDVI\",\"SAVI\"],\n    params = {\n        \"N\": snt.sel(band = \"B08\"),\n        \"R\": snt.sel(band = \"B04\"),\n        \"G\": snt.sel(band = \"B03\"),\n        \"L\": 0.5\n    }\n)\n\n# Plot the indices (and the RGB image for comparison)\nfig, ax = plt.subplots(2,2,figsize = (10,10))\nplot.show(snt.sel(band = [\"B04\",\"B03\",\"B02\"]).data / 0.3,ax = ax[0,0],title = \"RGB\")\nplot.show(idx.sel(index = \"NDVI\"),ax = ax[0,1],title = \"NDVI\")\nplot.show(idx.sel(index = \"GNDVI\"),ax = ax[1,0],title = \"GNDVI\")\nplot.show(idx.sel(index = \"SAVI\"),ax = ax[1,1],title = \"SAVI\")\n```\n\n<p align=\"center\">\n  <a href=\"https://github.com/davemlz/spyndex\"><img src=\"https://raw.githubusercontent.com/davemlz/spyndex/main/docs/_static/sentinel.png\" alt=\"sentinel spectral indices\"></a>\n</p>\n\n### Kernel Indices Computation\n\nUse the `computeKernel()` method to compute the required kernel for kernel indices like\nthe kNDVI! The `kernel` parameter receives the kernel to compute, while the `params` \nparameter receives a dictionary with the\n[required parameters](https://github.com/davemlz/awesome-ee-spectral-indices#expressions)\nfor the kernel computation (e.g., `a`, `b` and `sigma` for the RBF kernel).\n\n```python\nimport spyndex\nimport xarray as xr\nimport matplotlib.pyplot as plt\nfrom rasterio import plot\n\n# Open a dataset (in this case a xarray.DataArray)\nsnt = spyndex.datasets.open(\"sentinel\")\n\n# Scale the data (remember that the valid domain for reflectance is [0,1])\nsnt = snt / 10000\n\n# Compute the kNDVI and the NDVI for comparison\nidx = spyndex.computeIndex(\n    index = [\"NDVI\",\"kNDVI\"],\n    params = {\n        # Parameters required for NDVI\n        \"N\": snt.sel(band = \"B08\"),\n        \"R\": snt.sel(band = \"B04\"),\n        # Parameters required for kNDVI\n        \"kNN\" : 1.0,\n        \"kNR\" : spyndex.computeKernel(\n            kernel = \"RBF\",\n            params = {\n                \"a\": snt.sel(band = \"B08\"),\n                \"b\": snt.sel(band = \"B04\"),\n                \"sigma\": snt.sel(band = [\"B08\",\"B04\"]).mean(\"band\")\n            }),\n    }\n)\n\n# Plot the indices (and the RGB image for comparison)\nfig, ax = plt.subplots(1,3,figsize = (15,15))\nplot.show(snt.sel(band = [\"B04\",\"B03\",\"B02\"]).data / 0.3,ax = ax[0],title = \"RGB\")\nplot.show(idx.sel(index = \"NDVI\"),ax = ax[1],title = \"NDVI\")\nplot.show(idx.sel(index = \"kNDVI\"),ax = ax[2],title = \"kNDVI\")\n```\n\n<p align=\"center\">\n  <a href=\"https://github.com/davemlz/spyndex\"><img src=\"https://raw.githubusercontent.com/davemlz/spyndex/main/docs/_static/kNDVI.png\" alt=\"sentinel kNDVI\"></a>\n</p>\n\n### A `pandas.DataFrame`? Sure!\n\nNo matter what kind of python object you're working with, it can be used with `spyndex` as long as it supports mathematical overloaded operators! \n\n```python\nimport spyndex\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Open a dataset (in this case a pandas.DataFrame)\ndf = spyndex.datasets.open(\"spectral\")\n\n# Compute the desired spectral indices\nidx = spyndex.computeIndex(\n    index = [\"NDVI\",\"NDWI\",\"NDBI\"],\n    params = {\n        \"N\": df[\"SR_B5\"],\n        \"R\": df[\"SR_B4\"],\n        \"G\": df[\"SR_B3\"],\n        \"S1\": df[\"SR_B6\"]\n    }\n)\n\n# Add the land cover column to the result\nidx[\"Land Cover\"] = df[\"class\"]\n\n# Create a color palette for plotting\ncolors = [\"#E33F62\",\"#3FDDE3\",\"#4CBA4B\"]\n\n# Plot a pairplot to check the indices behaviour\nplt.figure(figsize = (15,15))\ng = sns.PairGrid(idx,hue = \"Land Cover\",palette = sns.color_palette(colors))\ng.map_lower(sns.scatterplot)\ng.map_upper(sns.kdeplot,fill = True,alpha = .5)\ng.map_diag(sns.kdeplot,fill = True)\ng.add_legend()\nplt.show()\n```\n\n<p align=\"center\">\n  <a href=\"https://github.com/davemlz/spyndex\"><img src=\"https://raw.githubusercontent.com/davemlz/spyndex/main/docs/_static/spectral.png\" alt=\"landsat spectral indices\"></a>\n</p>\n\n### Parallel Processing\n\nParallel processing is possible with `spyndex` and `dask`! You can use `dask.array` or `dask.dataframe` objects to compute spectral indices with spyndex!\nIf you're using `xarray`, you can also define a chunk size and work in parallel!\n\n```python\nimport spyndex\nimport numpy as np\nimport dask.array as da\n\n# Define the array shape\narray_shape = (10000,10000)\n\n# Define the chunk size\nchunk_size = (1000,1000)\n\n# Create a dask.array object\ndask_array = da.array([\n    da.random.normal(0.6,0.10,array_shape,chunks = chunk_size),\n    da.random.normal(0.1,0.05,array_shape,chunks = chunk_size)\n])\n\n# \"Compute\" the desired spectral indices\nidx = spyndex.computeIndex(\n    index = [\"NDVI\",\"SAVI\"],\n    params = {\n        \"N\": dask_array[0],\n        \"R\": dask_array[1],\n        \"L\": 0.5\n    }\n)\n\n# Since dask works in lazy mode,\n# you have to tell it that you want to compute the indices!\nidx.compute()\n```\n\n### Plotting Spectral Indices\n\nAll posible values of a spectral index can be visualized using `spyndex.plot.heatmap()`! This is a module that doesn't require data,\njust specify the index, the bands, and BOOM! Heatmap of all the possible values of the index!\n\n```python\nimport spyndex\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Define subplots grid\nfig, ax = plt.subplots(1,2,figsize = (20,8))\n\n# Plot the NDVI with the Red values on the x-axis and the NIR on the y-axis\nax[0].set_title(\"NDVI heatmap with default parameters\")\nspyndex.plot.heatmap(\"NDVI\",\"R\",\"N\",ax = ax[0])\n\n# Keywords arguments can be passed for sns.heatmap()\nax[1].set_title(\"NDVI heatmap with seaborn keywords arguments\")\nspyndex.plot.heatmap(\"NDVI\",\"R\",\"N\",annot = True,cmap = \"Spectral\",ax = ax[1])\n\nplt.show()\n```\n\n<p align=\"center\">\n  <a href=\"https://github.com/davemlz/spyndex\"><img src=\"https://raw.githubusercontent.com/davemlz/spyndex/main/docs/_static/heatmap2.png\" alt=\"heatmap\"></a>\n</p>\n\n## License\n\nThe project is licensed under the MIT license.\n\n## Contributing\n\nCheck the [contributing page](https://spyndex.readthedocs.io/en/latest/contributing.html).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/awesome-spectral-indices/spyndex",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spyndex",
    "package_url": "https://pypi.org/project/spyndex/",
    "platform": null,
    "project_url": "https://pypi.org/project/spyndex/",
    "project_urls": {
      "Homepage": "https://github.com/awesome-spectral-indices/spyndex"
    },
    "release_url": "https://pypi.org/project/spyndex/0.4.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Awesome Spectral Indices in Python",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17268809,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3878f41d17271b55581f3ee111b6588c3808075ca24e2de92d0d91edee8c213a",
          "md5": "a3a44482db7043f79c842def53f48f17",
          "sha256": "8ef1fa9df3671cadd6e1d8ab70a770b78fe54ea511c4737654e14e0865a84a9e"
        },
        "downloads": -1,
        "filename": "spyndex-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a3a44482db7043f79c842def53f48f17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 714510,
        "upload_time": "2021-09-21T19:38:52",
        "upload_time_iso_8601": "2021-09-21T19:38:52.628793Z",
        "url": "https://files.pythonhosted.org/packages/38/78/f41d17271b55581f3ee111b6588c3808075ca24e2de92d0d91edee8c213a/spyndex-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "674f4c5eccf3ee7b0187f05a4506a6fd9dfe506efa9a2788784cc0659cdd7d32",
          "md5": "4055811fd4cfc7fb5af86bd13f0eb77d",
          "sha256": "e023d8b3293fcbd5d29fcff5a6963e3d20b0e2a08cd06399fe3129332c81e817"
        },
        "downloads": -1,
        "filename": "spyndex-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4055811fd4cfc7fb5af86bd13f0eb77d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 714859,
        "upload_time": "2021-10-07T19:09:19",
        "upload_time_iso_8601": "2021-10-07T19:09:19.630747Z",
        "url": "https://files.pythonhosted.org/packages/67/4f/4c5eccf3ee7b0187f05a4506a6fd9dfe506efa9a2788784cc0659cdd7d32/spyndex-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d324b2849dce28e95b641d9c1951a378e3cbfee437eef791c0e15687fed8da02",
          "md5": "16db15760d28e01c6b7de763078300e6",
          "sha256": "e7cd7aa15da76ee91182d0442034f39133b2b73a9d0ef80750144df387496d36"
        },
        "downloads": -1,
        "filename": "spyndex-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "16db15760d28e01c6b7de763078300e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 714933,
        "upload_time": "2021-10-18T08:45:22",
        "upload_time_iso_8601": "2021-10-18T08:45:22.951369Z",
        "url": "https://files.pythonhosted.org/packages/d3/24/b2849dce28e95b641d9c1951a378e3cbfee437eef791c0e15687fed8da02/spyndex-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37b594d51b8a11c4acce10e9d8e361b023dc8ce3eee93fe6f2134a442aff1ac3",
          "md5": "8a0168bec9d82bae070bb7766cf7ecea",
          "sha256": "254b72d21e0754eb8e64f38875e1cd5e760713ac3dc5b1440d349610ca2c2a76"
        },
        "downloads": -1,
        "filename": "spyndex-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8a0168bec9d82bae070bb7766cf7ecea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 715507,
        "upload_time": "2021-12-23T14:27:53",
        "upload_time_iso_8601": "2021-12-23T14:27:53.176886Z",
        "url": "https://files.pythonhosted.org/packages/37/b5/94d51b8a11c4acce10e9d8e361b023dc8ce3eee93fe6f2134a442aff1ac3/spyndex-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9f0a4d3e2c331051ba860763041d4ecacd1c7033a069d005f225ed78701ca4c",
          "md5": "f990824038d926d69eb7ecdf8b53c0c5",
          "sha256": "5f1e4ebcd37e1baf40e9305019a4a9bc9552dfdf7ea6c542d9ed0d1f030bfcf0"
        },
        "downloads": -1,
        "filename": "spyndex-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f990824038d926d69eb7ecdf8b53c0c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 720624,
        "upload_time": "2022-03-06T15:02:17",
        "upload_time_iso_8601": "2022-03-06T15:02:17.415992Z",
        "url": "https://files.pythonhosted.org/packages/b9/f0/a4d3e2c331051ba860763041d4ecacd1c7033a069d005f225ed78701ca4c/spyndex-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d32dbfa660a508900523b34addfcd64b49ea55ecb76d99e3d1ffb91da3bbaca1",
          "md5": "a19d0d8081c478bebcd449ded6988a40",
          "sha256": "137374e36c24ecbd76d6e23cb87afc004828727be0f74e171c399b8b85a31f17"
        },
        "downloads": -1,
        "filename": "spyndex-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a19d0d8081c478bebcd449ded6988a40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 724644,
        "upload_time": "2022-06-02T13:26:50",
        "upload_time_iso_8601": "2022-06-02T13:26:50.017033Z",
        "url": "https://files.pythonhosted.org/packages/d3/2d/bfa660a508900523b34addfcd64b49ea55ecb76d99e3d1ffb91da3bbaca1/spyndex-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d01c36f8ad15e59b14ddce2b011cdfe1f039643504bd769095dc85bc5677042d",
          "md5": "f734fa4c16c4aa6fd2c1f2b796ce05db",
          "sha256": "b2041ef72dda33ece858ace99c7f6b9fa360ecbdd29c2db6d345f1b2705be8a6"
        },
        "downloads": -1,
        "filename": "spyndex-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f734fa4c16c4aa6fd2c1f2b796ce05db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 725607,
        "upload_time": "2022-10-08T12:28:42",
        "upload_time_iso_8601": "2022-10-08T12:28:42.507477Z",
        "url": "https://files.pythonhosted.org/packages/d0/1c/36f8ad15e59b14ddce2b011cdfe1f039643504bd769095dc85bc5677042d/spyndex-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ddbaf3b6bcf502a578c79323398eee977a5a31f79568bc2de49684ed7dabdd2",
          "md5": "9b87e5d98674ace63459bde2534eaa1d",
          "sha256": "11d1ddcfad41cefaa09f29e6566e7d0df76bd9a64dca4af4a09bdbeb9b4a24a8"
        },
        "downloads": -1,
        "filename": "spyndex-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9b87e5d98674ace63459bde2534eaa1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 726360,
        "upload_time": "2023-01-23T14:53:20",
        "upload_time_iso_8601": "2023-01-23T14:53:20.650304Z",
        "url": "https://files.pythonhosted.org/packages/1d/db/af3b6bcf502a578c79323398eee977a5a31f79568bc2de49684ed7dabdd2/spyndex-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffd2c4ee270aeaea39c3fc73dcfa6d3f1fb6b83a2c6c4507e5d41f06b9853259",
          "md5": "aa83036ab677a2ab2296d9e6b06206d7",
          "sha256": "80cb3f3ed43abbdd0c67d9952131ba278daee5b000da5295839b72f8067e01c0"
        },
        "downloads": -1,
        "filename": "spyndex-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aa83036ab677a2ab2296d9e6b06206d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 727234,
        "upload_time": "2023-03-13T09:55:06",
        "upload_time_iso_8601": "2023-03-13T09:55:06.439097Z",
        "url": "https://files.pythonhosted.org/packages/ff/d2/c4ee270aeaea39c3fc73dcfa6d3f1fb6b83a2c6c4507e5d41f06b9853259/spyndex-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ffd2c4ee270aeaea39c3fc73dcfa6d3f1fb6b83a2c6c4507e5d41f06b9853259",
        "md5": "aa83036ab677a2ab2296d9e6b06206d7",
        "sha256": "80cb3f3ed43abbdd0c67d9952131ba278daee5b000da5295839b72f8067e01c0"
      },
      "downloads": -1,
      "filename": "spyndex-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "aa83036ab677a2ab2296d9e6b06206d7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 727234,
      "upload_time": "2023-03-13T09:55:06",
      "upload_time_iso_8601": "2023-03-13T09:55:06.439097Z",
      "url": "https://files.pythonhosted.org/packages/ff/d2/c4ee270aeaea39c3fc73dcfa6d3f1fb6b83a2c6c4507e5d41f06b9853259/spyndex-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}