{
  "info": {
    "author": "Yotta",
    "author_email": "xiaoz987@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Simple Torch\n`implement by numpy`\n\n\n## autograd\n###  tensor\n  Implement: Basic computing between tensors,also,recording depedency between tensors and grad of tensors.\n### function\n  Implement: Activation function.There is only tanh currently.\n### parameter\n  Implement: Quick create random tensors with requires_grad=True.\n### module\n  Implement: Recording of all parameters\n###  optim\n  Implement: Optimizing for module.\n\n## tests\n  Test for autograd function\n<br>\n\n#  example\n## fizz_buzz\n\n```python\nimport numpy as np\nfrom typing import List\nfrom autograd import Tensor, Parameter, Module\nfrom autograd.optim import SGD\nfrom autograd.function import tanh\n\n\"\"\"\nprint the numbers 1 to 100,\nexcept  \n    if the number is divisible by 3 print \"fizz\"\n    if the number is divisible by 5 print \"fizz\"\n    if the number is divisible by 15 print \"fizz_buzz\"\n\n\"\"\"\n\n\ndef binary_encode(x: int) -> List[int]:\n    return [x >> i & 1 for i in range(10)]\n\n\ndef fizz_buzz_encode(x: int) -> List[int]:\n    if x % 15 == 0:\n        return [0, 0, 0, 1]\n    elif x % 5 == 0:\n        return [0, 0, 1, 0]\n    elif x % 3 == 0:\n        return [0, 1, 0, 0]\n    else:\n        return [1, 0, 0, 0]\n\n\nx_train = Tensor([binary_encode(x) for x in range(101, 1024)])\ny_train = Tensor([fizz_buzz_encode(x) for x in range(101, 1024)])\n\n\nclass FizzBuzzModule(Module):\n    def __init__(self, num_hidden: int = 50) -> None:\n        self.w1 = Parameter(10, num_hidden)\n        self.b1 = Parameter(num_hidden)\n\n        self.w2 = Parameter(num_hidden, 4)\n        self.b2 = Parameter(4)\n\n    def predict(self, in_puts: Tensor):\n        # inputs (batch_size,10)\n        x1 = inputs @ self.w1 + self.b1  # (batch_size,num_hidden)\n        x2 = tanh(x1)\n        x3 = x2 @ self.w2 + self.b2  # (batch_size,4)\n        return x3\n\n\noptimizer = SGD(lr=0.001)\nbatch_size = 32\nmodule = FizzBuzzModule()\n\nstarts = np.arange(0, x_train.shape[0], batch_size)\nfor epoch in range(10000):\n    epoch_loss = 0.0\n\n    np.random.shuffle(starts)\n    for start in starts:\n        end = start + batch_size\n\n        module.zero_grad()\n        inputs = x_train[start:end]\n\n        predicted = module.predict(inputs)\n        actual = y_train[start:end]\n        errors = predicted - actual\n        loss = (errors * errors).sum()\n\n        loss.backward()\n        epoch_loss += loss.data\n\n        optimizer.step(module)\n    print(epoch, epoch_loss)\n\nnum_correct = 0\nfor x in range(1, 101):\n    inputs = Tensor([binary_encode(x)])\n    predicted = module.predict(inputs)[0]\n    predicted_idx = np.argmax(predicted.data)\n    actual_idx = np.argmax(fizz_buzz_encode(x))\n    labels = [str(x), \"fizz\", \"buzz\", \"fizz_buzz\"]\n\n    if predicted_idx == actual_idx:\n        num_correct += 1\n    print(x, labels[predicted_idx], labels[actual_idx])\n\nprint(num_correct,\"/100\")\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Yottaxx/YottaTorch",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Torch-Yottaxx",
    "package_url": "https://pypi.org/project/Torch-Yottaxx/",
    "platform": "",
    "project_url": "https://pypi.org/project/Torch-Yottaxx/",
    "project_urls": {
      "Homepage": "https://github.com/Yottaxx/YottaTorch"
    },
    "release_url": "https://pypi.org/project/Torch-Yottaxx/0.1.3/",
    "requires_dist": [
      "numpy",
      "pytest"
    ],
    "requires_python": ">=3.6",
    "summary": "a simple autograd library",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7792769,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16f530c107adb965b85fd770dad8a35ff29f56d9620df6055e4b4357ebddc652",
          "md5": "25d1332ffbba9d191c74f6f9cf950969",
          "sha256": "4a54ec3c7283c4de6f569b57243d596fc44c0996faccc0b6d66a72ff436ecf49"
        },
        "downloads": -1,
        "filename": "Torch_Yottaxx-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25d1332ffbba9d191c74f6f9cf950969",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8519,
        "upload_time": "2020-07-25T10:21:07",
        "upload_time_iso_8601": "2020-07-25T10:21:07.382588Z",
        "url": "https://files.pythonhosted.org/packages/16/f5/30c107adb965b85fd770dad8a35ff29f56d9620df6055e4b4357ebddc652/Torch_Yottaxx-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "481605850ab351876fdd38647f23af6ec5c35f707ba12f70b2777c8bfaa52748",
          "md5": "07abdb82def98e1b6ae2cbc64d6997c3",
          "sha256": "59d986e1ec017f1674d319738a113f6955f2dac620e5c08bfafedd6f2509f73d"
        },
        "downloads": -1,
        "filename": "Torch-Yottaxx-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "07abdb82def98e1b6ae2cbc64d6997c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4571,
        "upload_time": "2020-07-25T10:21:10",
        "upload_time_iso_8601": "2020-07-25T10:21:10.549998Z",
        "url": "https://files.pythonhosted.org/packages/48/16/05850ab351876fdd38647f23af6ec5c35f707ba12f70b2777c8bfaa52748/Torch-Yottaxx-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd96e8992009d4e20cad2221a0dc228a0ecd2102035dfcd350ca60d991c2bbea",
          "md5": "e3e65bac5d5f45a4dbae396ecb5e1d60",
          "sha256": "855f38b2bb8a99866f02237db75d48d4689274695210a0d7e9a51d86c4a782f2"
        },
        "downloads": -1,
        "filename": "Torch_Yottaxx-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3e65bac5d5f45a4dbae396ecb5e1d60",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8836,
        "upload_time": "2020-07-25T10:29:06",
        "upload_time_iso_8601": "2020-07-25T10:29:06.046777Z",
        "url": "https://files.pythonhosted.org/packages/fd/96/e8992009d4e20cad2221a0dc228a0ecd2102035dfcd350ca60d991c2bbea/Torch_Yottaxx-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bde7b13fc9dbb03512b4b78aedf104d5c64246181542f77971d09d6920031bae",
          "md5": "92206ff65336fe1c122f6b8662f1d510",
          "sha256": "5a0a77535275d8076f665b41279b275eaea289cf40f645903734179b64350af5"
        },
        "downloads": -1,
        "filename": "Torch-Yottaxx-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "92206ff65336fe1c122f6b8662f1d510",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4802,
        "upload_time": "2020-07-25T10:29:07",
        "upload_time_iso_8601": "2020-07-25T10:29:07.351261Z",
        "url": "https://files.pythonhosted.org/packages/bd/e7/b13fc9dbb03512b4b78aedf104d5c64246181542f77971d09d6920031bae/Torch-Yottaxx-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e473bc804b5efa7eeecdfe0decc30c12ed806042b14264cbc713f4c48a6f498",
          "md5": "f0337cea1af10b94d292b2e0f18d8031",
          "sha256": "a19386c136e2f879ceb30b6552d1f6c1ea26979cfa456f5452f11a2afeccbacc"
        },
        "downloads": -1,
        "filename": "Torch_Yottaxx-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0337cea1af10b94d292b2e0f18d8031",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11324,
        "upload_time": "2020-07-27T03:09:25",
        "upload_time_iso_8601": "2020-07-27T03:09:25.203292Z",
        "url": "https://files.pythonhosted.org/packages/2e/47/3bc804b5efa7eeecdfe0decc30c12ed806042b14264cbc713f4c48a6f498/Torch_Yottaxx-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d5cb89bd6ece38abc77553d39026c0bc22a8515b14abe144fc35ab17402d5eb",
          "md5": "4472fb6c8a639821d459826c41cca280",
          "sha256": "beda0d6763b0acbaaed7af3b0c9791be70988d46bac4b859df3c3e54b106dbf2"
        },
        "downloads": -1,
        "filename": "Torch-Yottaxx-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4472fb6c8a639821d459826c41cca280",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6428,
        "upload_time": "2020-07-27T03:09:27",
        "upload_time_iso_8601": "2020-07-27T03:09:27.697869Z",
        "url": "https://files.pythonhosted.org/packages/0d/5c/b89bd6ece38abc77553d39026c0bc22a8515b14abe144fc35ab17402d5eb/Torch-Yottaxx-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e473bc804b5efa7eeecdfe0decc30c12ed806042b14264cbc713f4c48a6f498",
        "md5": "f0337cea1af10b94d292b2e0f18d8031",
        "sha256": "a19386c136e2f879ceb30b6552d1f6c1ea26979cfa456f5452f11a2afeccbacc"
      },
      "downloads": -1,
      "filename": "Torch_Yottaxx-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f0337cea1af10b94d292b2e0f18d8031",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11324,
      "upload_time": "2020-07-27T03:09:25",
      "upload_time_iso_8601": "2020-07-27T03:09:25.203292Z",
      "url": "https://files.pythonhosted.org/packages/2e/47/3bc804b5efa7eeecdfe0decc30c12ed806042b14264cbc713f4c48a6f498/Torch_Yottaxx-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d5cb89bd6ece38abc77553d39026c0bc22a8515b14abe144fc35ab17402d5eb",
        "md5": "4472fb6c8a639821d459826c41cca280",
        "sha256": "beda0d6763b0acbaaed7af3b0c9791be70988d46bac4b859df3c3e54b106dbf2"
      },
      "downloads": -1,
      "filename": "Torch-Yottaxx-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "4472fb6c8a639821d459826c41cca280",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6428,
      "upload_time": "2020-07-27T03:09:27",
      "upload_time_iso_8601": "2020-07-27T03:09:27.697869Z",
      "url": "https://files.pythonhosted.org/packages/0d/5c/b89bd6ece38abc77553d39026c0bc22a8515b14abe144fc35ab17402d5eb/Torch-Yottaxx-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}