{
  "info": {
    "author": "Cykrt Chan",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# 10daysWeb\r\n**A just-for-learning web framework that can be developed in 10 days.**\r\n\r\n![PyPI](https://img.shields.io/pypi/pyversions/10daysweb.svg) ![PyPI](https://img.shields.io/pypi/status/10daysweb.svg) ![PyPI](https://img.shields.io/pypi/v/10daysweb.svg)\r\n\r\n# 啰嗦\r\n出于某些原因，我需要一个自己开发的轮子，大约只有十天时间。\r\n\r\n于是我打算开发一个python web框架，这是我一直想做却又未完成的事。\r\n\r\n我打算每天迭代，一遍写一遍查阅资料，记录新的想法和发现。\r\n\r\n这样如果有谁与我处境相似，这个项目也许能够有所帮助。\r\n\r\n最好能用成品再搭个博客什么的。\r\n\r\n即使没有成功，也不会一无所获。\r\n\r\n我们开始吧。\r\n\r\n## Day 1\r\n**万事开头难，相信我不是唯一一个在项目开始时感到无从下手的人。**\r\n\r\n首先我下载了热门框架Flask的0.1版本的源码，三百余行的代码已经包含了一个web框架所必要的全部功能，还附带了一个使用示例。[如何下载最早的commit代码](#如何下载最早的commit代码)\r\n\r\n对于我要实现的第一个最简单版本来说，flask仍然过于复杂了，我只提炼出`route`这个关键部件在第一版中实现。\r\n\r\n`Route`用来管理一个web应用具体响应哪些路径和方法。通过装饰器，框架在启动时注册所有的用户函数，并在符合条件时自动调用。\r\n\r\n    @testApp.route('/', methods=['GET'])\r\n    def hello():\r\n        return 'hello world'\r\n\r\n而`Rule`则具体表示某个需要被响应的路径，它主要由`url`, `methods`和`endpoint`组成。\r\n\r\n`methods`包含一系列HTTP Method，表示要处理的请求类型。而`endpoint`则是实际产生返回内容的`Callable`对象，可以是函数或者类。\r\n\r\n关于http包含哪些method，以及后续我们需要参考的报文格式和状态码，参见[RFC 2616](#https://tools.ietf.org/html/rfc2616)。\r\n\r\n现在我们还缺少一段代码，用于监听和收发http报文，python3.4以后加入的asyncio提供了这个功能，而[官方文档](#http://asyncio.readthedocs.io)恰好给了我们一个极简的示例。\r\n\r\n`asyncio.start_server`需要三个基本参数，收到请求时的自动调用的`client_connected_cb`，以及需要监听的地址和端口。\r\n\r\n`client_connected_cb`则需要支持两个参数，`reader`和`writer`，份别用于读取请求报文和回写响应报文。\r\n\r\n我在`client_connected_cb`中添加了简易的获取请求的路径的代码，用于和注册好的应用函数匹配。\r\n\r\n同样我也已经定义了包含所有Http method的宏，不过还没有与请求进行匹配。\r\n\r\n这样我们就得到了一个可以运行的''Web框架''，目前只能算是prototype，不过已经足够让我们印出那句世纪名言了。\r\n\r\n    Hello World!\r\n\r\n## Day 2\r\n**我们有了一个原型，但很多方面亟待完善**\r\n\r\n我使用了一个开源第三方库来解析http报文，并实现了`Request`和`Response`来抽象请求。\r\n\r\n我从rfc文档中摘取了http的状态码，和methods一起放在`utils.py`中。\r\n\r\n尝试定义了一个异常，初步的设向是它可以让框架的使用者随时使用异常直接返回http的错误状态，`content`则是为了支持自定义的错误页面，但这部分仍不确定，也许我会使用`@error_handler`的形式来提供自定义异常时的行为。\r\n\r\n添加了log，但在我的终端中还没有输出，待解决。\r\n\r\n我使用了标准库`asyncio`，因为我希望这个框架是支持异步的，调整后的`handle`方法提现了处理一个请求的基本思路，但它看起来仍然很糟糕，对于异步我还未完全理清思路。\r\n\r\n## Day 3\r\n\r\n在代码方面，今天的改动并不大。\r\n\r\n梳理了`handle`方法的逻辑, 我强制规定用户函数必须是协程，但日后也必须提供数据库，文件读写相关的异步封装API，否则框架仍然不是`真*异步`。\r\n\r\n调整了流读取报文的处理策略，交由第三方解析库来判断报文是否结束。这方面并不用太过纠结，因为真正部署时讲会有nginx/apache之流替我们打理。\r\n\r\n之后的主要工作：\r\n\r\n - 完成`Debug模式`，实现自动重加载用户函数\r\n - 添加静态文件路由和模式匹配路由支持\r\n - 引入模板引擎及其异步调用封装\r\n\r\n## Day 4\r\n\r\n添加了动态url匹配支援，现在可以在以如下形式匹配路径:\r\n\r\n    @app.route('/<name>', methods=['GET'])\r\n    async def show_name(request, name):\r\n        return Response(content=f'hello {name}')\r\n\r\n思考以后感觉静态文件路由完全可以由用户自行添加动态匹配来支持，即使不行还有web服务器来做，于是决定先放下这部分。\r\n\r\n添加了`errorhandler`装饰器，现在可以通过它自定义异常时的行为和返回报文\r\n\r\n调整了异常捕获机制，现在在找不到对应的用户方法时，能够正确的抛出404异常，而在用户方法中非预期中异常，则统一作为500状态处理\r\n\r\n## Day 5 & 6\r\n\r\n加入了`run_before`装饰器，用于在运行启动服务器前的初始化代码，默认传入事件循环loop参数\r\n\r\n把这个~~丢人~~框架上传到了pip，现在可以通过`pip install 10daysweb`安装使用\r\n\r\n尝试写一个todolist应用作为演示，康了半天前端觉得有些仓促，决定接入~~Telegram Bot~~微信小程序\r\n\r\n加入了unitest，初步编写了一个url匹配的测试样例\r\n\r\n## Day 7\r\n\r\n新增信号装饰器，初步想法是用于服务器启动前和结束后初始化和关闭数据库连接池\r\n\r\n    @app.signal(type='run_before_start')\r\n    def foo(loop):\r\n        '''init database connection pool'''\r\n\r\n增加了对应的未知信号类型异常，微信小程序api编写中。\r\n\r\n\r\n## 如何下载最早的commit代码\r\n\r\n作为一个知名的开源项目，Flask在github已经积累了数千此提交。\r\n\r\n最可恨的是，github在Commit列表页面竟然没有提供一个按页跳转的功能。\r\n\r\n下面一个不是很优雅，但确实更快的方法\r\n\r\n首先在本地`git clone`下目标项目\r\n\r\n使用`--reverse`参数倒置结果，拿到提交历史上最早的commit id\r\n\r\n    git log --reverse\r\n\r\n在github上随意打开一个commit，替换掉url中的id即可。\r\n\r\n哦，你还需要点一下`Browse files`",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bace1996/10daysWeb",
    "keywords": "web framework async",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "10daysweb",
    "package_url": "https://pypi.org/project/10daysweb/",
    "platform": "",
    "project_url": "https://pypi.org/project/10daysweb/",
    "project_urls": {
      "Homepage": "https://github.com/bace1996/10daysWeb"
    },
    "release_url": "https://pypi.org/project/10daysweb/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Async web framework for learning",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3870894,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fda1bc4f0eb401e78e52f7f904619a8f85f0cda3bacdb6e14e2eab76b768344",
          "md5": "f5d31c335ddfc6eb4ea22c271085c87c",
          "sha256": "79a33eb5e840c64aa10009aba7e97c84b5ebe9681745592ca3e59fe213051087"
        },
        "downloads": -1,
        "filename": "10daysweb-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f5d31c335ddfc6eb4ea22c271085c87c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8428,
        "upload_time": "2018-05-14T12:44:21",
        "upload_time_iso_8601": "2018-05-14T12:44:21.301740Z",
        "url": "https://files.pythonhosted.org/packages/0f/da/1bc4f0eb401e78e52f7f904619a8f85f0cda3bacdb6e14e2eab76b768344/10daysweb-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f225ec6db4c1165e0f053af19508eae10bfe4adfd22bf9c62e06cb6891263c74",
          "md5": "5728e09771e99f12bd6ed5dd1f1ff580",
          "sha256": "8951038309881735fa73e2c453c49186b7df68ac12f4c73778d43c44d41efc78"
        },
        "downloads": -1,
        "filename": "10daysweb-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5728e09771e99f12bd6ed5dd1f1ff580",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8848,
        "upload_time": "2018-05-15T14:19:19",
        "upload_time_iso_8601": "2018-05-15T14:19:19.873748Z",
        "url": "https://files.pythonhosted.org/packages/f2/25/ec6db4c1165e0f053af19508eae10bfe4adfd22bf9c62e06cb6891263c74/10daysweb-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "338333398d521f3d4764a60dcc1d5a8faf797eb0cab2e5da5a48bb84b7cd9652",
          "md5": "c3730fefd1f85e6c54bdf59135320d99",
          "sha256": "c3b9c1e47dd9f47824afae07744215f118ae3d384f9a62c209d5061d8ab41cbb"
        },
        "downloads": -1,
        "filename": "10daysweb-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c3730fefd1f85e6c54bdf59135320d99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9246,
        "upload_time": "2018-05-16T14:44:12",
        "upload_time_iso_8601": "2018-05-16T14:44:12.776193Z",
        "url": "https://files.pythonhosted.org/packages/33/83/33398d521f3d4764a60dcc1d5a8faf797eb0cab2e5da5a48bb84b7cd9652/10daysweb-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdf40da767e9a78143cdb40f5bc763fbfdbe016cc5832d5b7fddfd04a4689504",
          "md5": "cfa601ebda54ef50abf3af90516bede6",
          "sha256": "64ff7cdd9bf0b34590cf87a230fa4407f155a4feb33f381881958a591c0c9dd3"
        },
        "downloads": -1,
        "filename": "10daysweb-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cfa601ebda54ef50abf3af90516bede6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9247,
        "upload_time": "2018-05-17T03:51:06",
        "upload_time_iso_8601": "2018-05-17T03:51:06.419186Z",
        "url": "https://files.pythonhosted.org/packages/cd/f4/0da767e9a78143cdb40f5bc763fbfdbe016cc5832d5b7fddfd04a4689504/10daysweb-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cdf40da767e9a78143cdb40f5bc763fbfdbe016cc5832d5b7fddfd04a4689504",
        "md5": "cfa601ebda54ef50abf3af90516bede6",
        "sha256": "64ff7cdd9bf0b34590cf87a230fa4407f155a4feb33f381881958a591c0c9dd3"
      },
      "downloads": -1,
      "filename": "10daysweb-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "cfa601ebda54ef50abf3af90516bede6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9247,
      "upload_time": "2018-05-17T03:51:06",
      "upload_time_iso_8601": "2018-05-17T03:51:06.419186Z",
      "url": "https://files.pythonhosted.org/packages/cd/f4/0da767e9a78143cdb40f5bc763fbfdbe016cc5832d5b7fddfd04a4689504/10daysweb-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}