{
  "info": {
    "author": "CoDeX authors",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# CoDeX\n\nCoDeX contains learned data compression tools for JAX.\n\nYou can use this library to build your own ML models with end-to-end optimized\ndata compression built in. It's useful to find storage-efficient representations\nof your data (images, features, examples, etc.) while only sacrificing a small\nfraction of model performance.\n\nFor a more in-depth introduction from a classical data compression perspective,\nconsider our [paper on nonlinear transform\ncoding](https://arxiv.org/abs/2007.03034), or watch @jonycgn's [talk on learned\nimage compression](https://www.youtube.com/watch?v=x_q7cZviXkY). For an\nintroduction to lossy data compression from a machine learning perspective, take\na look at @yiboyang's [review paper](https://arxiv.org/abs/2202.06533).\n\n## Documentation & getting help\n\nPlease post all questions or comments on\n[Discussions](https://github.com/google/codex/discussions). Only file\n[Issues](https://github.com/google/codex/issues) for actual bugs or feature\nrequests. On Discussions, you may get a faster answer, and you help other people\nfind the question or answer more easily later.\n\n## Installation\n\nTo install CoDeX via `pip`, run the following command:\n\n```bash\npip install jax-codex\n```\n\nTo test that the installation works correctly, you can run the unit tests with:\n\n```bash\npython -m codex.all_tests\n```\n\nOnce the command finishes, you should see a message ```13 passed in 2.76s``` or\nsimilar in the last line.\n\n## Usage\n\nWe recommend importing the library from your Python code as follows:\n\n```python\nimport codex as cdx\n```\n\n## Citation\n\nIf you use this library for research purposes, please cite:\n```\n@software{codex_github,\n  author = \"Ballé, Johannes and Hwang, Sung Jin and Agustsson, Eirikur\",\n  title = \"{CoDeX}: Learned Data Compression in {JAX}\",\n  url = \"http://github.com/google/codex\",\n  version = \"0.0.1\",\n  year = \"2022\",\n}\n```\nIn the above BibTeX entry, names are top contributors sorted by number of\ncommits. Please adjust version number and year according to the version that was\nactually used.\n\nNote that this is not an officially supported Google product.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "compression,data-compression,machine-learning,deep-learning",
    "license": "",
    "maintainer": "",
    "maintainer_email": "Johannes Ballé <jballe@google.com>",
    "name": "jax-codex",
    "package_url": "https://pypi.org/project/jax-codex/",
    "platform": null,
    "project_url": "https://pypi.org/project/jax-codex/",
    "project_urls": {
      "homepage": "https://github.com/google/codex",
      "repository": "https://github.com/google/codex"
    },
    "release_url": "https://pypi.org/project/jax-codex/0.0.1/",
    "requires_dist": [
      "flax ~= 0.6",
      "jax ~= 0.3"
    ],
    "requires_python": ">=3.7",
    "summary": "COders and DEcoders for jaX.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15448020,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acef202f912a255d2ad7ba73216fb56cc09ccc1c0dabc91f4fa6ce11d362eedd",
          "md5": "75a072a9508a77b717b838ba5672b37e",
          "sha256": "2805a311ff860537dfd240c28f337505045fc8e1622722a53ea156d4daa8bec2"
        },
        "downloads": -1,
        "filename": "jax_codex-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75a072a9508a77b717b838ba5672b37e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19412,
        "upload_time": "2022-10-18T12:10:30",
        "upload_time_iso_8601": "2022-10-18T12:10:30.274002Z",
        "url": "https://files.pythonhosted.org/packages/ac/ef/202f912a255d2ad7ba73216fb56cc09ccc1c0dabc91f4fa6ce11d362eedd/jax_codex-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "acef202f912a255d2ad7ba73216fb56cc09ccc1c0dabc91f4fa6ce11d362eedd",
        "md5": "75a072a9508a77b717b838ba5672b37e",
        "sha256": "2805a311ff860537dfd240c28f337505045fc8e1622722a53ea156d4daa8bec2"
      },
      "downloads": -1,
      "filename": "jax_codex-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "75a072a9508a77b717b838ba5672b37e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 19412,
      "upload_time": "2022-10-18T12:10:30",
      "upload_time_iso_8601": "2022-10-18T12:10:30.274002Z",
      "url": "https://files.pythonhosted.org/packages/ac/ef/202f912a255d2ad7ba73216fb56cc09ccc1c0dabc91f4fa6ce11d362eedd/jax_codex-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}