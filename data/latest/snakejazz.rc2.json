{
  "info": {
    "author": "Martin Chalela",
    "author_email": "tinchochalela@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Games/Entertainment",
      "Topic :: Multimedia :: Sound/Audio",
      "Topic :: Multimedia :: Video"
    ],
    "description": "<!--\n*** Thanks for checking out the Best-README-Template. If you have a suggestion\n*** that would make this better, please fork the repo and create a pull request\n*** or simply open an issue with the tag \"enhancement\".\n*** Thanks again! Now go create something AMAZING! :D\n***\n***\n***\n*** To avoid retyping too much info. Do a search and replace for the following:\n*** github_username, repo_name, twitter_handle, email, project_title, project_description\n-->\n\n\n\n<!-- PROJECT SHIELDS -->\n<!--\n*** I'm using markdown \"reference style\" links for readability.\n*** Reference links are enclosed in brackets [ ] instead of parentheses ( ).\n*** See the bottom of this document for the declaration of the reference variables\n*** for contributors-url, forks-url, etc. This is an optional, concise syntax you may use.\n*** https://www.markdownguide.org/basic-syntax/#reference-style-links\n-->\n[![PyPI version](https://badge.fury.io/py/snakejazz.svg)](https://badge.fury.io/py/snakejazz)\n[![Documentation Status](https://readthedocs.org/projects/snakejazz/badge/?version=latest)](https://snakejazz.readthedocs.io/en/latest/?badge=latest)\n[![Build Status](https://travis-ci.com/mchalela/SnakeJazz.svg?branch=master)](https://travis-ci.com/mchalela/SnakeJazz)\n[![Coverage Status](https://coveralls.io/repos/github/mchalela/SnakeJazz/badge.svg)](https://coveralls.io/github/mchalela/SnakeJazz)\n[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n[![Python 3.6+](https://img.shields.io/badge/python-3.6+-blue.svg)](https://www.python.org/downloads/release/python-370/)\n\n\n\n<!-- PROJECT LOGO -->\n<br />\n<p align=\"center\">\n  <a href=\"https://github.com/mchalela/SnakeJazz\">\n    <img src=\"res/snakejazz.png\" alt=\"Logo\" width=\"175\" height=\"175\">\n  </a>\n\n  <h3 align=\"center\">SnakeJazz</h3>\n\n  <p align=\"center\">\n    Decorators for sound reproduction\n    <br />\n    <a href=\"https://snakejazz.readthedocs.io\"><strong>Explore the docs »</strong></a>\n    <br />\n    <br />\n    <a href=\"#basic-usage\">View Demo</a>\n    ·\n    <a href=\"https://github.com/mchalela/SnakeJazz/issues\">Report Bug</a>\n    ·\n    <a href=\"https://github.com/mchalela/SnakeJazz/issues\">Request Feature</a>\n  </p>\n</p>\n\n\n\n<!-- TABLE OF CONTENTS -->\n<details close>\n  <summary><b>Table of Contents</b></summary>\n  <ol>\n    <li>\n      <a href=\"#about-the-project\">About The Project</a>\n    </li>\n    <li>\n      <a href=\"#getting-started\">Getting Started</a>\n      <ul>\n        <li><a href=\"#standard-installation\">Standard Installation</a></li>\n        <li><a href=\"#development-install\">Development Install</a></li>\n      </ul>\n    </li>\n    <li><a href=\"#basic-usage\">Basic Usage</a></li>\n    <li><a href=\"#roadmap\">Sounds</a></li>\n    <li><a href=\"#contributing\">Contributing</a></li>\n    <li><a href=\"#license\">License</a></li>\n    <li><a href=\"#author\">Author</a></li>\n    <li><a href=\"#acknowledgements\">Acknowledgements</a></li>\n  </ol>\n</details>\n\n\n\n<!-- ABOUT THE PROJECT -->\n## About The Project\n\nSnakeJazz provides decorators to let you listen to the running status of your ~~Snake~~ Python functions. Most definitly inspired by Rick and Morty :wink: \n\nThese are the decorators:\n\n - `snakejazz.zzz`:\n    You can choose to reproduce a sound at the moment your function starts to excecute, when it finishes or when an error occurs. A different sound for each event can be given. \n\n - `snakejazz.www`:\n    Exactly the same as zzz, but you can specify youtube links and the audio will be downloaded.\n\n - `snakejazz.rattle`:\n    Rattle from start to finish. This will loop the sound until your function ends. You can either give a local path or a youtube link.\n\nAll three of them can be used directly to run with the default configuration. But you can also give some custom sounds for a more enjoyable moment.\n\n<!-- GETTING STARTED -->\n## Getting Started\n\nThere are two simple steps to have SnakeJazz running on you python scripts.\n\n### Prerequisites\n\nSnakeJazz works with ffmpeg library for audio processing. To install it simply run:\n* apt\n  ```console\n  sudo apt update\n  sudo apt install ffmpeg\n  ```\n\n\n* dnf\n  ```console\n  sudo dnf install ffmpeg\n  ```\n\nYou will also need a nice set of headphones to run SnakeJazz. :headphones:\n\n### Installation\n\n1. Standard Installation\n   ```console\n   pip install snakejazz\n   ```\n\n\n2. Development Install\n   ```console\n   git clone https://github.com/mchalela/SnakeJazz.git\n   cd SnakeJazz\n   pip install -e .\n   ```\n\n\n<!-- USAGE EXAMPLES -->\n## Basic Usage\n\nLet's say you have a function that takes some time to compute. Just plug-in the decorator of your preference and you're good to go!\n\n```python\nimport time\nimport snakejazz\n\n@snakejazz.rattle\ndef wait(t):\n    \"\"\"Some function to simulate computing time.\"\"\"\n    time.sleep(t)\n    return\n\n# Put on your headphones and run it!\nwait(22)\n```\nThe `rattle` decorator will play a sound in loop until your function ends.\n\n\nNow let's say you want to be notified if an error occurs during the execution of your function.\n```python\nimport time\nimport snakejazz\n\n@snakejazz.zzz(when_error=True)\ndef wait(t):\n    \"\"\"Some function to simulate computing time.\"\"\"\n    time.sleep(t)\n    raise ValueError('Something went wrong')\n    return\n\n# Put on your headphones and run it!\nwait(3)\n```\n\n\n\n<!-- SOUNDS -->\n## Sounds\nFor the moment SnakeJazz comes with one pack of 33 free sounds called Rhodesmas (available here: [link](https://freesound.org/people/rhodesmas/packs/17958/)). You can listen to them with the function snakejazz.play_sound. Just run this code:\n```python\n\nimport snakejazz\n\nfor sound, path in snakejazz.sounds.RHODESMAS.items():\n    print(f'Playing {sound}')\n    snakejazz.play_sound(path)\n```\n\n\n<!-- CONTRIBUTING -->\n## Contributing\n\nThis is an open source project made to be shared. Any contributions you make are **greatly appreciated**.\n\n1. Fork the Project\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\n5. Open a Pull Request\n\n\n<!-- LICENSE -->\n## License\n\nDistributed under the MIT License. See `LICENSE` for more information.\n\n\n<!-- AUTHOR -->\n## Author\n\nMartin Chalela - email: tinchochalela@gmail.com\n\nProject Link: [https://github.com/mchalela/SnakeJazz](https://github.com/mchalela/SnakeJazz)\n\n\n\n<!-- ACKNOWLEDGEMENTS -->\n## Acknowledgements\n\n* <div>Rhodesmas sounds created by <a href=\"https://freesound.org/people/rhodesmas/\" title=\"rhodesmas\">rhodesmas</a> from <a href=\"https://freesound.org/people/rhodesmas/packs/17958/\" title=\"Freesound\">Freesound</a>.</div>\n\n\n* <div>Snake and Saxophone icons: Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>.</div>",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mchalela/SnakeJazz",
    "keywords": "snakejazz,snake,jazz,decorator,sound,music",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "snakejazz",
    "package_url": "https://pypi.org/project/snakejazz/",
    "platform": "",
    "project_url": "https://pypi.org/project/snakejazz/",
    "project_urls": {
      "Homepage": "https://github.com/mchalela/SnakeJazz"
    },
    "release_url": "https://pypi.org/project/snakejazz/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Decorators for sound reproduction.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8830798,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0066fe83737f386db5ea32a65c175ecf580796951b1f41c364cb063d987d43d",
          "md5": "5dc6186b06c4bca266baf2dc02052052",
          "sha256": "412fad663ad331b1dce0f76768b2064fe84d06fc479a162d9ebc3e0fb6176826"
        },
        "downloads": -1,
        "filename": "snakejazz-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5dc6186b06c4bca266baf2dc02052052",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6154355,
        "upload_time": "2020-11-28T03:39:22",
        "upload_time_iso_8601": "2020-11-28T03:39:22.382308Z",
        "url": "https://files.pythonhosted.org/packages/c0/06/6fe83737f386db5ea32a65c175ecf580796951b1f41c364cb063d987d43d/snakejazz-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "052b785968ab45ee2eb13e16c3a01b3ba2c57359bd4af727a63ed57f2e931568",
          "md5": "0e0bb3ff6914dc40fd070f37ae77bedf",
          "sha256": "27d72f02654e7cf8d20e370b2bce08263eb1d24253d8fe3d01544209f764108c"
        },
        "downloads": -1,
        "filename": "snakejazz-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e0bb3ff6914dc40fd070f37ae77bedf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6255643,
        "upload_time": "2020-12-06T01:08:51",
        "upload_time_iso_8601": "2020-12-06T01:08:51.512818Z",
        "url": "https://files.pythonhosted.org/packages/05/2b/785968ab45ee2eb13e16c3a01b3ba2c57359bd4af727a63ed57f2e931568/snakejazz-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "052b785968ab45ee2eb13e16c3a01b3ba2c57359bd4af727a63ed57f2e931568",
        "md5": "0e0bb3ff6914dc40fd070f37ae77bedf",
        "sha256": "27d72f02654e7cf8d20e370b2bce08263eb1d24253d8fe3d01544209f764108c"
      },
      "downloads": -1,
      "filename": "snakejazz-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0e0bb3ff6914dc40fd070f37ae77bedf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6255643,
      "upload_time": "2020-12-06T01:08:51",
      "upload_time_iso_8601": "2020-12-06T01:08:51.512818Z",
      "url": "https://files.pythonhosted.org/packages/05/2b/785968ab45ee2eb13e16c3a01b3ba2c57359bd4af727a63ed57f2e931568/snakejazz-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}