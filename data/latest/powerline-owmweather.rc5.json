{
  "info": {
    "author": "DeepSpace2",
    "author_email": "deepspace2@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Topic :: Terminals"
    ],
    "description": "![PyPI](https://img.shields.io/pypi/v/powerline-owmweather?color=blue&logo=python&logoColor=green&style=plastic)\n[![Downloads](http://pepy.tech/badge/powerline-owmweather)](http://pepy.tech/count/powerline-owmweather)\n\n# powerline-owmweather ðŸŒ¦\n\n![Example 1](readme-images/screenshot1.png?raw=true)\n\nA light-hearted [Powerline](https://github.com/powerline/powerline) segment for fetching and showing the weather in the current location (either by IP geolocation or by setting a location, see [Configuration](#configuration) below).\n\n**Keep in mind that powerline_owmweather is in early, rapid development stage so its API/configuration format may change.**\n\n- [Motivation](#motivation)\n- [Requirements](#requirements)\n- [Installation](#installation)\n- [Activiation](#activiation)\n- [Configuration and Customization](#configuration-and-customization)\n- [Changelog](#changelog)\n- [TODO](#todo)\n\n## Motivation\n\nThe built-in weather segment is using Yahoo Weather API which is no longer available so I decided to create an almost drop-in replacement using [OpenWeather](https://openweathermap.org/).\n\n## Requirements\n\n - [Powerline](https://github.com/powerline/powerline)\n - A (free) [OpenWeather](https://openweathermap.org/) account and API key with the \"Current Weather Data\" plan enabled.\n\n## Installation\n\n```\npip install powerline-owmweather\n```\n\n## Activiation\n\nThe very minimum required to activate the segment is to add the following to your theme JSON:\n\n```\n{\n   \"function\": \"powerline_owmweather.weather\",\n   \"args\": {\n       \"openweathermap_api_key\": API_KEY\n   }\n}\n```\n\nand the following to your colorscheme JSON (the colors can be customized):\n\n```\n\"groups\": {\n      ...,\n      \"owmweather\": {\n          \"fg\": \"gray9\",\n          \"bg\": \"gray2\",\n          \"attrs\": []\n    }\n}\n```\n\n## Configuration and Customization\n\nThe following optional `args` are available:\n\n| Argument | Type | Description | Default\n| --- | --- | --- | --- |\n| `post_condition` | string | String to append after `condition` | \"\" |\n| `post_humidity` | string | String to append after `humidity` | \"\" |\n| `post_location` | string | String to append after `location` | \"\" |\n| `post_temp` | string | String to append after `temp` | \"\" |\n| `pre_condition` | string | String to prepend before `condition` | \" \" |\n| `pre_humidity` | string | String to prepend before `humidity` | \" \" |\n| `pre_location` | string | String to prepend before `location` | \" \" |\n| `pre_temp` | string | String to prepend before `temp` | \" \" |\n| `condition_as_icon` | boolean | If `true`, condition will be displayed as an icon (if one of known conditions).<br>If `false` condition will be displayed as a string | `true` |\n| `humidity_format` | string | A Python format string that accepts `humidity` as an argument | `\"{humidity:.0f}\"` |\n| `location_query` | string | Location in format CITY, 2-LETTERS-COUNTRY-CODE | Retrived using IP geolocation | \n| `show `| string | Comma-separated string specifies what data to show.<br>Can include `\"condition\"`, `\"humidity\"`, `\"location\"`, `\"temp\"`.<br>See [Highlight Groups](#highlight-groups) | `\"temp\"` |\n| `temp_format` | string | A Python format string that accepts `temp` as an argument | `\"{temp:.0f}\"` |\n| `ttl_in_minutes` | integer | Time in minutes for which location and weather are cached.<br>**Warning: The lower the value the slower your terminal will be** | 60 |\n| `units` | string | Temperature units.<br>Should be one of `\"C\"`, `\"F\"`, `\"K\"` | `\"C\"` |\n\n### Highlight Groups\n\nEvery data in `\"show\"` is displayed in its own segment with its own highlight group, meaning it can be styled independently in your colorscheme JSON. Each highlight group is composed of `owmweather_{data_name}`, for example:\n\n```\n\"owmweather_condition\": {\n    \"fg\": \"gray6\",\n    \"bg\": \"gray3\",\n    \"attrs\": []\n},\n\"owmweather_temp\": {\n    \"fg\": \"gray9\",\n    \"bg\": \"gray2\",\n    \"attrs\": []\n}\n```\n\n`\"pre_{data_name}\"` and `\"post_{data_name}\"` can also be customized using `\"owmweather_pre_{data_name}\"` and `\"owmweather_post_{data_name}\"` highlight groups.\n\nIf a specific highlight group is not defined then the style of `\"owmweather\"` group will be used.\n\n## Changelog\n\n### 0.4 - Nov. 3 2020\n* '%' is no longer in the default humidity_format\n* Added pre_data and post_data arguments and highlight groups\n* Added ability to show location\n\n### 0.3 - Nov. 1 2020\n* Added ability to display humidity\n\n### 0.2 - Nov. 1 2020\n* Added ability to display temperature, condition\n* Added ability to display condition as either icons or strings\n\n### 0.1.1 - Oct. 31 2020\n* Fixed a bug that prevented setting a custom `ttl_in_minutes`\n* Added debug logs\n\n### 0.1.0 - Oct. 31 2020\nInitial release\n\n## TODO\n\n - [x] Support icons\n - [x] Support weather description (\"cloudy\", \"windy\", etc)\n - [ ] Support configurable information to display:\n   - [x] Temperature\n   - [x] Condition\n   - [ ] Wind speed/direction\n   - [x] Humidity\n   - [ ] Pressure\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DeepSpace2/powerline-owmweather",
    "keywords": "powerline weather segment terminal cli",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "powerline-owmweather",
    "package_url": "https://pypi.org/project/powerline-owmweather/",
    "platform": "",
    "project_url": "https://pypi.org/project/powerline-owmweather/",
    "project_urls": {
      "Homepage": "https://github.com/DeepSpace2/powerline-owmweather"
    },
    "release_url": "https://pypi.org/project/powerline-owmweather/0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Powerline segment for fetching and showing the weather in the current location",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8567568,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dca558d1f1cd16aba1414784add51bb1a47ed803ba4d67329106a3fa226eccea",
          "md5": "4f823fd103355eab875e43c2a898e80d",
          "sha256": "72a50454f792f106bde5bdfcf9ce367d1836767be7ba90fd3fc21d0ca575a20b"
        },
        "downloads": -1,
        "filename": "powerline_owmweather-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f823fd103355eab875e43c2a898e80d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3301,
        "upload_time": "2020-10-31T23:39:59",
        "upload_time_iso_8601": "2020-10-31T23:39:59.872642Z",
        "url": "https://files.pythonhosted.org/packages/dc/a5/58d1f1cd16aba1414784add51bb1a47ed803ba4d67329106a3fa226eccea/powerline_owmweather-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbc2aa08f9122c20f472ba44988d6a0364ead8b298f658275b9ea899851f0303",
          "md5": "7f2f932a67b4953513ab82d58d0ff722",
          "sha256": "c8850b5c9f02f2ac038c4f0d4e5ebf494f610674008bfde5360ada2881c2bc35"
        },
        "downloads": -1,
        "filename": "powerline_owmweather-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f2f932a67b4953513ab82d58d0ff722",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3362,
        "upload_time": "2020-11-01T00:24:18",
        "upload_time_iso_8601": "2020-11-01T00:24:18.324803Z",
        "url": "https://files.pythonhosted.org/packages/fb/c2/aa08f9122c20f472ba44988d6a0364ead8b298f658275b9ea899851f0303/powerline_owmweather-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fde2572e4455cc1199e0dd81d4e460efa83387e16964f1cd222b35e3b07c9bc",
          "md5": "e07f89a9646ba7f375ac2c86241c2326",
          "sha256": "b18d7ab3e51103e7c7985ce647b082b696d90b8879ea39d72104e17b5eb4a5af"
        },
        "downloads": -1,
        "filename": "powerline_owmweather-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e07f89a9646ba7f375ac2c86241c2326",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5587,
        "upload_time": "2020-11-01T14:23:59",
        "upload_time_iso_8601": "2020-11-01T14:23:59.026782Z",
        "url": "https://files.pythonhosted.org/packages/9f/de/2572e4455cc1199e0dd81d4e460efa83387e16964f1cd222b35e3b07c9bc/powerline_owmweather-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9297274dcfb03d055d2e629ea00e6e4841a6ff9d1ef59036a3549e031b650ce3",
          "md5": "72ed55470ca392f8051dba7c2275c7d3",
          "sha256": "a1da6ba8e2df3e775b95b07a488a2fc5d254e65b29c1e663b333419effc9d685"
        },
        "downloads": -1,
        "filename": "powerline_owmweather-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72ed55470ca392f8051dba7c2275c7d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5756,
        "upload_time": "2020-11-01T16:42:24",
        "upload_time_iso_8601": "2020-11-01T16:42:24.075604Z",
        "url": "https://files.pythonhosted.org/packages/92/97/274dcfb03d055d2e629ea00e6e4841a6ff9d1ef59036a3549e031b650ce3/powerline_owmweather-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b239d85615ac2e7a7db424251357b8b9ba104054a7855ca4cd8ddd0166c658f",
          "md5": "e68d0fbe65a211afadffb5cb7a3b9eb5",
          "sha256": "3e5a97e23290b481ddc24e248a1779c91270bb347f828fb0cdac3e4246d0fcab"
        },
        "downloads": -1,
        "filename": "powerline_owmweather-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e68d0fbe65a211afadffb5cb7a3b9eb5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6099,
        "upload_time": "2020-11-03T04:04:08",
        "upload_time_iso_8601": "2020-11-03T04:04:08.683925Z",
        "url": "https://files.pythonhosted.org/packages/2b/23/9d85615ac2e7a7db424251357b8b9ba104054a7855ca4cd8ddd0166c658f/powerline_owmweather-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b239d85615ac2e7a7db424251357b8b9ba104054a7855ca4cd8ddd0166c658f",
        "md5": "e68d0fbe65a211afadffb5cb7a3b9eb5",
        "sha256": "3e5a97e23290b481ddc24e248a1779c91270bb347f828fb0cdac3e4246d0fcab"
      },
      "downloads": -1,
      "filename": "powerline_owmweather-0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e68d0fbe65a211afadffb5cb7a3b9eb5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6099,
      "upload_time": "2020-11-03T04:04:08",
      "upload_time_iso_8601": "2020-11-03T04:04:08.683925Z",
      "url": "https://files.pythonhosted.org/packages/2b/23/9d85615ac2e7a7db424251357b8b9ba104054a7855ca4cd8ddd0166c658f/powerline_owmweather-0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}