{
  "info": {
    "author": "Edward Wong",
    "author_email": "eternal.edward1997@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "## taew\n\nthis is a package that targets at technical analysis using Elliott wave.\ncurrently providing python implementation for back tracking elliott wave\nbase on the method and Matlab code on the paper [ **Profitability of Elliott Waves and Fibonacci Retracement Levels in the Foreign Exchange Market\n ** ](http://arno.uvt.nl/show.cgi?fid=131569)\n\n### motivation\nsince there are no opensource elliott wave labelling package. to facilitate the private project that me and my friend currently working on, this library is created.\n\n### installation\n```\npip install taew\n```\n\n### list of main method\n\nlisted methods are for the labelling of elliott wave\n\n```python\ndef Alternative_ElliottWave_label_upward(data:list[number])->list[dict]:\n    #identify full elliott impulse wave from a list of price, the wave will fits the fibonacci retracement and also fibonacci timezone for upward impulse wave\n\ndef Alternative_ElliottWave_label_downward(data:list[number])->list[dict]:\n    #identify full elliott impulse wave from a list of price, the wave will fits the fibonacci retracement and also fibonacci timezone for downward impulse wave\n\ndef Traditional_ElliottWave_label_upward(data:list[number])->list[dict]:\n    #identify full elliott impulse wave from a list of price, the wave will fits the fibonacci retracement for upward impulse wave\n\ndef Traditional_ElliottWave_label_downward(data:list[number])->list[dict]:\n    #identify full elliott impulse wave from a list of price, the wave will fits the fibonacci retracement for downward impulse wave\n\ndef Practical_ElliottWave3_label_upward(data:list[number])->list[dict]:\n    #identify the first 2 wave of all the candidate upward elliott wave from the data, good predictor of 3rd upward impulse wave\n\ndef Practical_ElliottWave3_label_downward(data:list[number])->list[dict]:\n    #identify the first 3 wave of all the candidate downward elliott wave from the data, good predictor of 4th upward impulse wave\n\ndef Practical_ElliottWave5_label_upward(data:list[number])->list[dict]:\n    #identify the first 4 wave of all the candidate upward elliott wave from the data, good predictor of 5tth upward impulse wave\n\n```\n### list of helper method\nlisted methods are for helping the identification of the labelling, if you try to create your own application of elliott wave labelling, this may help you\n\n```python\ndef wave2_fibonacci_check(wave2_end, wave1_start, wave1_end):\n    # check whether wave 2 satisfy principal of fibonacci retracement\ndef wave3_fibonacci_check(wave3_end, wave2_start, wave2_end):\n    # check whether wave 3 satisfy principal of fibonacci retracement\ndef wave4_fibonacci_check(wave4_end, wave3_start, wave3_end):\n    # check whether wave 4 satisfy principal of fibonacci retracement\ndef wave5_fibonacci_check(wave5_end, wave1_start, wave1_end, wave3_start, wave3_end, wave4_end):\n    #check whether wave 5 satisfy principal of fibonacci retracement\ndef diff(data:list[number])->list[number]:\n    #similar to diff in matlab, for nth num in list return nth - n-1th \ndef otherThan(data:list[any], otherthan=any)->list[bool]:\n    #similar to ~= in matlab means if list item=otherthan, output list on that pos will be false otherwise will be true\ndef trimming(data:list[number], determineArray:list[bool])->list[number]:\n    #trim out data base on the determine array\n```\n### example usage\n\n#### demo code\n```python\nimport pandas as pd\nimport numpy as np\nimport taew\nimport pandas_datareader.data as web\nimport datetime\n\nstart = datetime.datetime(2019, 1, 1)\nend = datetime.datetime(2020, 1, 27)\n\nSP500 = web.DataReader(['sp500'], 'fred', start, end)\n\nhaha=taew.Alternative_ElliottWave_label_upward(np.array(SP500[['sp500']].values , dtype=np.double).flatten(order='C'))\nprint(haha)\n```\n#### expected output\n```python\n'''\n6555\nsuccessfully filter out candidate wave\n6519\nsuccessfully filter out candidate wave 12\n11210\nsuccessfully filter out candidate wave123\n8566\nsuccessfully filter out candidate wave1234\n70380\nsuccessfully filter out candidate wave12345\n\n[{'x': [2447.89, 2796.11, 2743.07, 2917.52, 2870.72, 2954.18],\n  'z': [2, 39, 48, 87, 92, 122],\n  'searchIndex': 48},\n {'x': [2447.89, 2796.11, 2743.07, 2917.52, 2811.87, 2954.18],\n  'z': [2, 39, 48, 87, 94, 122],\n  'searchIndex': 48},...]\n'''\n```\n####explaination of output\n\nfrom the matlab code of original paper it first extract the high point and low point of the price curve. after that performing pattern recognization. However it makes an assumption that the array of high and low point that resemble elliott wave are all in a row. This is not the case in actual market. therefore his code fails to recognize Elliott wave in real markets. Even it can, it requires denoise or filterring with SMA or EMA.\n\nthis code does not use his approach. it uses a iterative approach to first identify all possible wave 1 in the graph then find valid wave 2 and repeatedly until wave 5 has found.although the computation time is long, it can shows elliott wave of different sizes. Denoise and filter are not required.\n\nfor each main method, it returns a list of dict, each dict is an Elliott wave identified.\n\n* 'x' : price level of all elliot wave point\n* 'z' : position(a.k.a. index) of price level in the list of data\n* searchIndex: maynot be useful for user, but useful for the stepwise algorithm to keep track of what to search next in its internal list\n\n\n### disclaimer\nthis library does not guarentee correct identification of all elliott wave, user use this to earn money from any market should bear their own risk. Author will not bear any risk(s) or benefit(s) if user of this library lose any money or earn any money respectively\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "taew",
    "package_url": "https://pypi.org/project/taew/",
    "platform": "",
    "project_url": "https://pypi.org/project/taew/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/taew/0.0.3/",
    "requires_dist": null,
    "requires_python": ">= 3.7",
    "summary": "",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10293826,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bc30f339de10061f14f283d8fc13feaf4c96d778b47bf3c5028b4c9f84d3d07",
          "md5": "73f420e1fbbc52ee4d46a2e242d380a8",
          "sha256": "ce2adc02134d95410c28649646476f551eeba8d066bfa6e1b195ce0d6dd26fff"
        },
        "downloads": -1,
        "filename": "taew-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73f420e1fbbc52ee4d46a2e242d380a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.7",
        "size": 6742,
        "upload_time": "2021-05-08T08:31:32",
        "upload_time_iso_8601": "2021-05-08T08:31:32.382486Z",
        "url": "https://files.pythonhosted.org/packages/2b/c3/0f339de10061f14f283d8fc13feaf4c96d778b47bf3c5028b4c9f84d3d07/taew-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97585be258db2dfaa6a7ae7dbb232d513b8c58d1658c63f7c5e49465e8a69e3f",
          "md5": "c54f278676daf2e63dbec3f3ec461093",
          "sha256": "4f3fd681337d8ed2900485bd2e7b7ad1e55f88e13beb786845841193463756dd"
        },
        "downloads": -1,
        "filename": "taew-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c54f278676daf2e63dbec3f3ec461093",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.7",
        "size": 8473,
        "upload_time": "2021-05-08T08:31:34",
        "upload_time_iso_8601": "2021-05-08T08:31:34.018446Z",
        "url": "https://files.pythonhosted.org/packages/97/58/5be258db2dfaa6a7ae7dbb232d513b8c58d1658c63f7c5e49465e8a69e3f/taew-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82a8bde10a507ada5b36d3c9eb43caf0eb35d403c6429d70b90c7cb667818f1f",
          "md5": "cdf277765853b0c5ac5a46ec9238c9d3",
          "sha256": "8763beb0ba44987fcd425fa517b7244cf00463b7a5ec38d406c9419800fca80d"
        },
        "downloads": -1,
        "filename": "taew-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cdf277765853b0c5ac5a46ec9238c9d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.7",
        "size": 9451,
        "upload_time": "2021-05-08T08:46:45",
        "upload_time_iso_8601": "2021-05-08T08:46:45.190887Z",
        "url": "https://files.pythonhosted.org/packages/82/a8/bde10a507ada5b36d3c9eb43caf0eb35d403c6429d70b90c7cb667818f1f/taew-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e575a3185e335d5e600cf24ba13699949f37b37daf54f1be5357b878cdafc061",
          "md5": "ef337e1e8d99e5d7b3fbc1fba3bc12ca",
          "sha256": "17ddbd6d3e2312eb91912575f294d8113019bbbdcff31e6f48d333702bf11f43"
        },
        "downloads": -1,
        "filename": "taew-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ef337e1e8d99e5d7b3fbc1fba3bc12ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.7",
        "size": 8466,
        "upload_time": "2021-05-08T08:46:46",
        "upload_time_iso_8601": "2021-05-08T08:46:46.842783Z",
        "url": "https://files.pythonhosted.org/packages/e5/75/a3185e335d5e600cf24ba13699949f37b37daf54f1be5357b878cdafc061/taew-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01cc1c54de607c26d03ff6b65f5218a153862328906ff09e0857b2125c2275aa",
          "md5": "efc350ce90deb289157f1dd84d3229ce",
          "sha256": "59b5df68cfae098418003bcc6608b94cadbebd86e6531e40d8e75f361aedd463"
        },
        "downloads": -1,
        "filename": "taew-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "efc350ce90deb289157f1dd84d3229ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.7",
        "size": 9457,
        "upload_time": "2021-05-08T08:49:38",
        "upload_time_iso_8601": "2021-05-08T08:49:38.359964Z",
        "url": "https://files.pythonhosted.org/packages/01/cc/1c54de607c26d03ff6b65f5218a153862328906ff09e0857b2125c2275aa/taew-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e1c6e19b15a19d2b3d01f19ff8e0145bd0e65f02829f2aedd81a1598ae28809",
          "md5": "219a89cdd3f0eb41509bcbb328bc2a5b",
          "sha256": "e1bbb3b089a06eaf83455589dfd55ede984efc693d84c1615a599d871033322e"
        },
        "downloads": -1,
        "filename": "taew-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "219a89cdd3f0eb41509bcbb328bc2a5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.7",
        "size": 8464,
        "upload_time": "2021-05-08T08:49:40",
        "upload_time_iso_8601": "2021-05-08T08:49:40.439883Z",
        "url": "https://files.pythonhosted.org/packages/8e/1c/6e19b15a19d2b3d01f19ff8e0145bd0e65f02829f2aedd81a1598ae28809/taew-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "01cc1c54de607c26d03ff6b65f5218a153862328906ff09e0857b2125c2275aa",
        "md5": "efc350ce90deb289157f1dd84d3229ce",
        "sha256": "59b5df68cfae098418003bcc6608b94cadbebd86e6531e40d8e75f361aedd463"
      },
      "downloads": -1,
      "filename": "taew-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "efc350ce90deb289157f1dd84d3229ce",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">= 3.7",
      "size": 9457,
      "upload_time": "2021-05-08T08:49:38",
      "upload_time_iso_8601": "2021-05-08T08:49:38.359964Z",
      "url": "https://files.pythonhosted.org/packages/01/cc/1c54de607c26d03ff6b65f5218a153862328906ff09e0857b2125c2275aa/taew-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e1c6e19b15a19d2b3d01f19ff8e0145bd0e65f02829f2aedd81a1598ae28809",
        "md5": "219a89cdd3f0eb41509bcbb328bc2a5b",
        "sha256": "e1bbb3b089a06eaf83455589dfd55ede984efc693d84c1615a599d871033322e"
      },
      "downloads": -1,
      "filename": "taew-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "219a89cdd3f0eb41509bcbb328bc2a5b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.7",
      "size": 8464,
      "upload_time": "2021-05-08T08:49:40",
      "upload_time_iso_8601": "2021-05-08T08:49:40.439883Z",
      "url": "https://files.pythonhosted.org/packages/8e/1c/6e19b15a19d2b3d01f19ff8e0145bd0e65f02829f2aedd81a1598ae28809/taew-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}