{
  "info": {
    "author": "4teamwork AG",
    "author_email": "mailto:info@4teamwork.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Plone",
      "Framework :: Plone :: 4.1",
      "Framework :: Plone :: 4.2",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Introduction\n============\n\n``ftw.mopage`` provides a plone xml interface for the moPage CMS of\nanthrazit.\n\nThe package registers tree views:\n\n- mopage_news.xml\n- mopage_events.xml\n- mopage_geolocations.xml\n\nIf you call a view, a new xml will be generated on the filesystem and\nwill be downloaded.\n\n\nRequirements\n============\n\nThe package is compatible with `Plone`_ 4.x.\n\n\nInstalling\n==========\n\nAdd ``ftw.mopage`` to your buildout configuration:\n\n::\n\n  [instance]\n  eggs =\n    ftw.mopage\n\n\nMarker Interfaces\n=================\n\n- IMopageExporter\n\n - IMopageEvent\n\n - IMopageGeolocation\n\n - IMopageNews\n\n\nAdapters Interfaces\n===================\n\n- IMopageObjectLookup (context, request)\n\n - IMopageEventObjectLookup\n\n - IMopageNewsObjectLookup\n\n - IMopageGeolocationObjectLookup\n\n\n- IMopageDataProvider (context, request)\n\n - IMopageGeolocationDataProvider\n\n - IMopageEventDataProvider\n\n - IMopageNewsDataProvider\n\n- IMopageDataValidator (context, request, dataprovider)\n\n - IMopageGeolocationDataValidator\n\n - IMopageEventDataValidator\n\n - IMopageNewsDataValidator\n\n- IMopageXMLGenerator (context, request)\n\n - IMopageGeolocationXMLGenerator\n\n - IMopageEventXMLGenerator\n\n - IMopageNewsXMLGenerator\n\n\nImplementation\n==============\n\nIf you call export view, the following steps will be execute in the given\norder:\n\n\nGet Objects\n-----------\n\n1. Get MopageObjectLookup multiadapter\n2. Call get_brains method of MopageObjectLookup\n\nGet Data\n--------\n\n3. Get MopageDataProvider multiadapter with every object\n4. Call get_data method of MopageDataProviders\n\nValidate Data\n-------------\n\n5. Get MopageDataValidator multiadapter of every objects dataprovider\n6. Call validate method of MopageDataValidator\n\nAbort or Continue\n-----------------\n\n7. If the MopageDataValidator raises an error, we abort the export\n8. If the MopageDataValidator validation is valid, we continue exporting data\n\nCreate the xml string\n---------------------\n\n9. Get MopageXMLGenerator multiadapter\n10. Call generate_xml_string method of MopageXMLGenerator\n\nReturn the string\n-----------------\n\n11. Return the xml string as xml download file\n\n\nUsage\n=====\n\nYou need to mark your content types as MopageExporters.\n\nTo get the data of a MopageExporter, you need to override the specific\nMopageDataProvider to implement the dataexport.\n\n\nMark new content type as a specific MopageExporter\n--------------------------------------------------\n\n::\n\n\n    >>> from zope.interface import implements\n    >>> from Products.ATContentTypes.content.file import ATFile\n    >>> from ftw.mopage.interfaces import IMopageNews\n\n\n    >>> class File(ATFile):\n    ...     implements(IFile, IMopageNews)\n\n\nMark existing content type as a specific MopageExporter\n-------------------------------------------------------\n\nconfigure.zcml:\n\n::\n\n\n    <configure\n        xmlns=\"http://namespaces.zope.org/zope\"\n        xmlns:five=\"http://namespaces.zope.org/five\">\n\n        <five:implements\n            class=\"Products.ATContentTypes.content.file.ATFile\"\n            interface=\"ftw.mopage.interfaces.IMopageNews\"\n        />\n\n    </configure>\n\n\nOverride specific MopageDataProvider\n------------------------------------\n\nconfigure.zcml:\n\n::\n\n\n    <configure\n        xmlns=\"http://namespaces.zope.org/zope\">\n\n         <adapter\n           for=\"ftw.mopage.interfaces.IMopageNews\n                example.customization.browser.interfaces.IExampleCustomizatio\"\n           factory=\".data_provider.NewsDataProvider\"\n           provides=\"ftw.mopage.interfaces.IMopageNewsDataProvider\"\n          />\n\n    </configure>\n\n\ndata_provider.py:\n\n::\n\n\n    >>> from ftw.mopage.data_provider import MopageNewsDataProvider\n\n\n    >>> class NewsDataProvider(MopageNewsDataProvider):\n\n    ...     def get_data(self):\n    ...\n    ...         data = {\n    ...             'id': 'Ã¤xx',\n    ...             'titel': 'abc123',\n    ...             'textmobile': 'abc123',\n    ...             'datumvon': 'abc123',\n    ...             'mutationsdatum': 'abc123',\n    ...         }\n    ...\n    ...         return data\n\n\nAdditional information\n======================\n\nIn the docs-directory you find the official moPage interface documentation\non Anthrazit-side.\n\n\nLinks\n-----\n\n- Github: https://github.com/4teamwork/ftw.mopage\n- Issues: https://github.com/4teamwork/ftw.mopage/issues\n- Pypi: http://pypi.python.org/pypi/ftw.mopage\n- Continuous integration: https://jenkins.4teamwork.ch/search?q=ftw.mopage\n\n\nCopyright\n=========\n\nThis package is copyright by `4teamwork <http://www.4teamwork.ch/>`_.\n\n``ftw.mopage`` is licensed under GNU General Public License, version 2.\n\n.. _Plone: http://www.plone.org/\n\nChangelog\n=========\n\n1.0 (2016-11-01)\n----------------\n\n- Initial release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/4teamwork/ftw.mopage",
    "keywords": "",
    "license": "GPL2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ftw.mopage",
    "package_url": "https://pypi.org/project/ftw.mopage/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/ftw.mopage/",
    "project_urls": {
      "Homepage": "https://github.com/4teamwork/ftw.mopage"
    },
    "release_url": "https://pypi.org/project/ftw.mopage/1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Provides moPage integration for Plone.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15221398,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "528869b6cf489556aab7bb21d795ab8b4fc37295e7c0334a7039f48f5f5b5ae4",
          "md5": "7079cb3892e62c837207c2f323c3af2a",
          "sha256": "eef0277bc6ec17b33c11db717ff41db71a14d63b1b763ed70b3c0f3c4f2a9221"
        },
        "downloads": -1,
        "filename": "ftw.mopage-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7079cb3892e62c837207c2f323c3af2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 316267,
        "upload_time": "2016-11-01T09:16:44",
        "upload_time_iso_8601": "2016-11-01T09:16:44.230148Z",
        "url": "https://files.pythonhosted.org/packages/52/88/69b6cf489556aab7bb21d795ab8b4fc37295e7c0334a7039f48f5f5b5ae4/ftw.mopage-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "528869b6cf489556aab7bb21d795ab8b4fc37295e7c0334a7039f48f5f5b5ae4",
        "md5": "7079cb3892e62c837207c2f323c3af2a",
        "sha256": "eef0277bc6ec17b33c11db717ff41db71a14d63b1b763ed70b3c0f3c4f2a9221"
      },
      "downloads": -1,
      "filename": "ftw.mopage-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7079cb3892e62c837207c2f323c3af2a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 316267,
      "upload_time": "2016-11-01T09:16:44",
      "upload_time_iso_8601": "2016-11-01T09:16:44.230148Z",
      "url": "https://files.pythonhosted.org/packages/52/88/69b6cf489556aab7bb21d795ab8b4fc37295e7c0334a7039f48f5f5b5ae4/ftw.mopage-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}