{
  "info": {
    "author": "10mohi6",
    "author_email": "10.mohi.6.y@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Office/Business :: Financial :: Investment"
    ],
    "description": "# stock-backtest\n\n[![PyPI](https://img.shields.io/pypi/v/stock-backtest)](https://pypi.org/project/stock-backtest/)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![codecov](https://codecov.io/gh/10mohi6/stock-backtest-python/branch/main/graph/badge.svg?token=ODOV9LETK1)](https://codecov.io/gh/10mohi6/stock-backtest-python)\n[![Build Status](https://travis-ci.com/10mohi6/stock-backtest-python.svg?branch=main)](https://travis-ci.com/10mohi6/stock-backtest-python)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/stock-backtest)](https://pypi.org/project/stock-backtest/)\n[![Downloads](https://pepy.tech/badge/stock-backtest)](https://pepy.tech/project/stock-backtest)\n\nstock-backtest is a python library for stock technical analysis backtest on Python 3.7 and above.\n\n\n## Installation\n\n    $ pip install stock-backtest\n\n## Usage\n\n### basic run\n```python\nfrom stock_backtest import Backtest\n\nclass MyBacktest(Backtest):\n    def strategy(self):\n        fast_ma = self.sma(period=5)\n        slow_ma = self.sma(period=25)\n        # golden cross\n        self.sell_exit = self.buy_entry = (fast_ma > slow_ma) & (\n            fast_ma.shift() <= slow_ma.shift()\n        )\n        # dead cross\n        self.buy_exit = self.sell_entry = (fast_ma < slow_ma) & (\n            fast_ma.shift() >= slow_ma.shift()\n        )\n\nMyBacktest(\"AAPL\").run()\n```\n![AAPL--.png](https://raw.githubusercontent.com/10mohi6/stock-backtest-python/main/tests/AAPL--.png)\n\n### advanced run\n```python\nfrom stock_backtest import Backtest\nfrom pprint import pprint\n\nclass MyBacktest(Backtest):\n    def strategy(self):\n        rsi = self.rsi(period=10)\n        ema = self.ema(period=20)\n        atr = self.atr(period=20)\n        lower = ema - atr\n        upper = ema + atr\n        self.buy_entry = (rsi < 30) & (self.df.C < lower)\n        self.sell_entry = (rsi > 70) & (self.df.C > upper)\n        self.sell_exit = ema > self.df.C\n        self.buy_exit = ema < self.df.C\n\nbt = MyBacktest(\n    \"AAPL\",  # ticker\n    shares=100,  # number of shares (default=1)\n    start=\"2010-01-01\",  # start date (default=\"\")\n    end=\"2020-01-01\",  # end date (default=\"\")\n    data_dir=\"data\",  # data directory (default=.)\n)\npprint(bt.run(), sort_dicts=False)\n```\n```python\n{'total profit': -2779.465,\n 'total trades': 102,\n 'win rate': 66.667,\n 'profit factor': 0.641,\n 'maximum drawdown': 3147.5,\n 'recovery factor': -0.883,\n 'riskreward ratio': 0.321,\n 'sharpe ratio': -0.085,\n 'average return': -68.929,\n 'stop loss': 0,\n 'take profit': 0}\n```\n![AAPL-2010-01-01-2020-01-01.png](https://raw.githubusercontent.com/10mohi6/stock-backtest-python/main/tests/AAPL-2010-01-01-2020-01-01.png)\n\n\n## Supported indicators\n- Simple Moving Average 'sma'\n- Exponential Moving Average 'ema'\n- Moving Average Convergence Divergence 'macd'\n- Relative Strenght Index 'rsi'\n- Bollinger Bands 'bbands'\n- Stochastic Oscillator 'stoch'\n- Average True Range 'atr'\n\n## Strategy examples\n### MACD\n```python\nclass MyBacktest(Backtest):\n    def strategy(self):\n        macd, signal = self.macd(fast_period=12, slow_period=26, signal_period=9)\n        self.sell_exit = self.buy_entry = (macd > signal) & (\n            macd.shift() <= signal.shift()\n        )\n        self.buy_exit = self.sell_entry = (macd < signal) & (\n            macd.shift() >= signal.shift()\n        )\n```\n### Bollinger Bands\n```python\nclass MyBacktest(Backtest):\n    def strategy(self):\n        upper, mid, lower = self.bbands(period=20, band=2)\n        self.sell_exit = self.buy_entry = (upper > self.df.C) & (\n            upper.shift() <= self.df.C.shift()\n        )\n        self.buy_exit = self.sell_entry = (lower < self.df.C) & (\n            lower.shift() >= self.df.C.shift()\n        )\n```\n### Stochastic\n```python\nclass MyBacktest(Backtest):\n    def strategy(self):\n        k, d = self.stoch(k_period=5, d_period=3)\n        self.sell_exit = self.buy_entry = (\n            (k > 20) & (d > 20) & (k.shift() <= 20) & (d.shift() <= 20)\n        )\n        self.buy_exit = self.sell_entry = (\n            (k < 80) & (d < 80) & (k.shift() >= 80) & (d.shift() >= 80)\n        )\n```\n### Moving average divergence rate\n```python\nclass MyBacktest(Backtest):\n    def strategy(self):\n        sma = self.sma(period=20)\n        ratio = (self.df.C - sma) / sma * 100\n        self.sell_exit = self.buy_entry = ratio > -5 & (ratio.shift() <= -5)\n        self.buy_exit = self.sell_entry = ratio < 5 & (ratio.shift() >= 5)\n```\n### Momentum\n```python\nclass MyBacktest(Backtest):\n    def strategy(self):\n        mom = self.df.C - self.df.C.shift(10)\n        self.sell_exit = self.buy_entry = mom > 0 & (mom.shift() <= 0)\n        self.buy_exit = self.sell_entry = mom < 0 & (mom.shift() >= 0)\n```\n### Donchian Channels\n```python\nclass MyBacktest(Backtest):\n    def strategy(self):\n        high = self.df.H.rolling(20).max()\n        low = self.df.L.rolling(20).min()\n        self.sell_exit = self.buy_entry = (high > self.df.C) & (\n            high.shift() <= self.df.C\n        )\n        self.buy_exit = self.sell_entry = (low < self.df.C) & (\n            low.shift() >= self.df.C\n        )\n```\n### Relative Vigor Index\n```python\nclass MyBacktest(Backtest):\n    def rvi(\n        self, *, period: int = 10, price: str = \"C\"\n    ) -> Tuple[pd.DataFrame, pd.DataFrame]:\n        co = self.df.C - self.df.O\n        n = (co + 2 * co.shift(1) + 2 * co.shift(2) + co.shift(3)) / 6\n        hl = self.df.H - self.df.L\n        d = (hl + 2 * hl.shift(1) + 2 * hl.shift(2) + hl.shift(3)) / 6\n        rvi = n.rolling(period).mean() / d.rolling(period).mean()\n        signal = (rvi + 2 * rvi.shift(1) + 2 * rvi.shift(2) + rvi.shift(3)) / 6\n        return rvi, signal\n\n    def strategy(self):\n        rvi, signal = self.rvi(period=5)\n        self.sell_exit = self.buy_entry = (rvi > signal) & (\n            rvi.shift() <= signal.shift()\n        )\n        self.buy_exit = self.sell_entry = (rvi < signal) & (\n            rvi.shift() >= signal.shift()\n        )\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/10mohi6/stock-backtest-python",
    "keywords": "stock python backtest technical analysis trading strategy",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stock-backtest",
    "package_url": "https://pypi.org/project/stock-backtest/",
    "platform": "",
    "project_url": "https://pypi.org/project/stock-backtest/",
    "project_urls": {
      "Homepage": "https://github.com/10mohi6/stock-backtest-python"
    },
    "release_url": "https://pypi.org/project/stock-backtest/0.1.1/",
    "requires_dist": [
      "pandas",
      "yfinance",
      "matplotlib"
    ],
    "requires_python": ">=3.7.0",
    "summary": "stock-backtest is a python library         for stock technical analysis backtest on Python 3.7 and above.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10319218,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "998394d9c1e3a3239b681c897eb4ccc92f730f1802bbbc0c8a228e9473d002fb",
          "md5": "277104f107e7377f6d2932d5a12ad68d",
          "sha256": "67d2c62159956bbdb59416f00b843e75af6c4490dd7849fd8620a46a930b9dca"
        },
        "downloads": -1,
        "filename": "stock_backtest-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "277104f107e7377f6d2932d5a12ad68d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 5362,
        "upload_time": "2021-05-08T17:00:26",
        "upload_time_iso_8601": "2021-05-08T17:00:26.719250Z",
        "url": "https://files.pythonhosted.org/packages/99/83/94d9c1e3a3239b681c897eb4ccc92f730f1802bbbc0c8a228e9473d002fb/stock_backtest-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39a3a7f0faafda7cd8d8d4bf03657363d19198c1bfbf7e068b9693d18bffc4ac",
          "md5": "f10922a4127a4750b6eae296efd9c5ab",
          "sha256": "a090bc86292bd0879ad7df14dd6d2b946fe4933c02a1c580d3fb3dc95d1af6c2"
        },
        "downloads": -1,
        "filename": "stock-backtest-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f10922a4127a4750b6eae296efd9c5ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 5888,
        "upload_time": "2021-05-08T17:00:28",
        "upload_time_iso_8601": "2021-05-08T17:00:28.368434Z",
        "url": "https://files.pythonhosted.org/packages/39/a3/a7f0faafda7cd8d8d4bf03657363d19198c1bfbf7e068b9693d18bffc4ac/stock-backtest-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91b99fd9bb25b786a1ed7b1a9780551cf605705c6351eae7279eef70c4a10101",
          "md5": "0a470eb68a8dec2f44b907959972985c",
          "sha256": "1062d6a116aa2baf2ed0e83bad16e18890cda6d792edd7af8c89918d2caa8a40"
        },
        "downloads": -1,
        "filename": "stock_backtest-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a470eb68a8dec2f44b907959972985c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 5962,
        "upload_time": "2021-05-11T06:29:24",
        "upload_time_iso_8601": "2021-05-11T06:29:24.615441Z",
        "url": "https://files.pythonhosted.org/packages/91/b9/9fd9bb25b786a1ed7b1a9780551cf605705c6351eae7279eef70c4a10101/stock_backtest-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ea00656a39548977e02984a4cc24120fb3e091adada118743e75d82951080ee",
          "md5": "c049a9bb7e452b02d9b5bf3b857d09cc",
          "sha256": "abdbf8b64cc3b78798e92a0431264e3fa57d0200c38d4c1222d4c20fbfd658be"
        },
        "downloads": -1,
        "filename": "stock-backtest-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c049a9bb7e452b02d9b5bf3b857d09cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 7145,
        "upload_time": "2021-05-11T06:29:26",
        "upload_time_iso_8601": "2021-05-11T06:29:26.464165Z",
        "url": "https://files.pythonhosted.org/packages/6e/a0/0656a39548977e02984a4cc24120fb3e091adada118743e75d82951080ee/stock-backtest-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "91b99fd9bb25b786a1ed7b1a9780551cf605705c6351eae7279eef70c4a10101",
        "md5": "0a470eb68a8dec2f44b907959972985c",
        "sha256": "1062d6a116aa2baf2ed0e83bad16e18890cda6d792edd7af8c89918d2caa8a40"
      },
      "downloads": -1,
      "filename": "stock_backtest-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a470eb68a8dec2f44b907959972985c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.0",
      "size": 5962,
      "upload_time": "2021-05-11T06:29:24",
      "upload_time_iso_8601": "2021-05-11T06:29:24.615441Z",
      "url": "https://files.pythonhosted.org/packages/91/b9/9fd9bb25b786a1ed7b1a9780551cf605705c6351eae7279eef70c4a10101/stock_backtest-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6ea00656a39548977e02984a4cc24120fb3e091adada118743e75d82951080ee",
        "md5": "c049a9bb7e452b02d9b5bf3b857d09cc",
        "sha256": "abdbf8b64cc3b78798e92a0431264e3fa57d0200c38d4c1222d4c20fbfd658be"
      },
      "downloads": -1,
      "filename": "stock-backtest-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c049a9bb7e452b02d9b5bf3b857d09cc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0",
      "size": 7145,
      "upload_time": "2021-05-11T06:29:26",
      "upload_time_iso_8601": "2021-05-11T06:29:26.464165Z",
      "url": "https://files.pythonhosted.org/packages/6e/a0/0656a39548977e02984a4cc24120fb3e091adada118743e75d82951080ee/stock-backtest-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}