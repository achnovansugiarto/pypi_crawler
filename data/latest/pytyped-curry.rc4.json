{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Printing"
    ],
    "description": "# pytyped-curry\r\n Function currying that can be statically typed.\r\n\r\nFunctional tool for currying a function. Currying a function makes\r\nthe function callable multiple times before the function is actually\r\nran. Use `curry(n)(func)` or `@curry(n)` to transform a function into\r\na curried function which takes `n` calls before running.\r\n\r\n## Imports\r\n\r\n```python\r\nfrom pytyped_curry import curry\r\nfrom pytyped_curry import decorator  # python >= 3.9\r\n```\r\n\r\n## Example\r\n\r\n```python\r\n# Transform the function into a curried function that takes\r\n# two function calls before running.\r\n@curry(2)\r\ndef add(x: int, y: int) -> int:\r\n    return x + y\r\n\r\n# Add needs to be called twice to be ran.\r\nadd(2)(3)  # 5\r\n\r\n# Partial evaluation is easy.\r\nincrement = add(1)\r\n\r\nincrement(5)  # 6\r\n\r\n# The two arguments accept multiple forms.\r\nadd(x=2)(y=3)\r\nadd(y=3)(x=2)\r\nadd(2, 3)()\r\nadd()(2, 3)\r\n```\r\n\r\n## For Decorators\r\n\r\nOften times writing decorators requires writing several nested functions.\r\nThis is often a hassle, and in many cases completely unnecessary due to\r\ncurrying.\r\n\r\nNote: `reveal_type` is ran using `mypy`.\r\n\r\n```python\r\nfrom typing import Callable, TypeVar\r\n\r\nT = typing.TypeVar(\"T\")\r\nRT = typing.TypeVar(\"RT\")\r\n\r\n@curry(2, ...)\r\ndef decorator(func: Callable[[T], RT], x: T) -> RT:\r\n    print(\"Start\")\r\n    y = func(x)\r\n    print(\"Finished\")\r\n    return y\r\n\r\nreveal_type(decorator)\r\n\"\"\"\r\ndef (def (T`-1) -> RT`-2) -> def (T`-1) -> RT`-2\r\n\"\"\"\r\n\r\n@decorator\r\ndef increment(x: int) -> int:\r\n    return x + 1\r\n\r\nreveal_type(increment)\r\n\"\"\"\r\ndef (builtins.int) -> builtins.int\r\n\"\"\"\r\n\r\n@curry(3, ...)\r\ndef rate_limit(timeout: float, func: Callable[[T], RT], x: T) -> RT:\r\n    time.sleep(timeout)\r\n    return func(x)\r\n\r\nreveal_type(rate_limit)\r\n\"\"\"\r\ndef (builtins.float) -> (def (T`-1) -> RT`-2) -> def (T`-1) -> RT`-2\r\n\"\"\"\r\n\r\n@rate_limit(5)\r\ndef request_data(name: str) -> int:\r\n    return len(name)\r\n\r\nreveal_type(request_data)\r\n\"\"\"\r\ndef (builtins.str) -> builtins.int\r\n\"\"\"\r\n```\r\n\r\n## Documentation\r\n\r\n*New in Python 3.9*\r\n\r\nDoc-strings can be applied to arbitrary objects at runtime for runtime use\r\nwith the `help(...)` function. A few additional pieces of metadata are also\r\naccessible at runtime to provide clearer documentation, such as the name of\r\nthe result.\r\n\r\n```python\r\n@curry(3)\r\ndef add(x: int, y: int, z: int) -> int:\r\n    \"\"\"Returns add(x)(y)(z) = x + y + z.\"\"\"\r\n    return x + y + z\r\n\r\nhelp(add)\r\n\"\"\"\r\nHelp on Curried in module __main__:\r\n\r\nadd = curry(3)(add(x: int, y: int, z: int) -> int)\r\n    Returns add(x)(y)(z) = x + y + z.\r\n\r\n\"\"\"\"\r\n\r\nhelp(add(1))\r\n\"\"\"\r\nHelp on Curried in module __main__:\r\n\r\nadd(1) = curry(2)(add(x: int, y: int, z: int) -> int, 1)\r\n    Returns add(x)(y)(z) -> x + y + z.\r\n\r\n\"\"\"\r\n\r\nhelp(add(1)(2))\r\n\"\"\"\r\nHelp on Curried in module __main__:\r\n\r\nadd(1, 2) = curry(1)(add(x: int, y: int, z: int) -> int, 1, 2)\r\n    Returns add(x)(y)(z) -> x + y + z.\r\n\r\n\"\"\"\r\n\r\nadd(1)(2)(3)  # 6\r\n```\r\n\r\n## Type-Hinting\r\n\r\n*New in Python 3.8*\r\n\r\nType-hints for curried functions are nigh impossible in the general case, as\r\ncan be seen by the last example. However, this doesn't stop us from enabling\r\ntyping in many common use-cases. Curried functions are hinted as functions\r\nwhich take any arguments but take `n` calls, up to `n = 3` for Python <\r\n(3, 11) and up to `n = 4` otherwise. Although the arguments are not\r\npreserved, the final return type is.\r\n\r\nNote: `reveal_type` is ran using `mypy`.\r\n\r\n```python\r\n@curry(2)\r\ndef add(x: int, y: int) -> int:\r\n    return x + y\r\n\r\nreveal_type(add)\r\n\"\"\"\r\ndef (*Any, **Any) -> def (*Any, **Any) -> builtins.int\r\n\"\"\"\r\n```\r\n\r\nFor Python < (3, 11), one can also use `curry(n, ...)` to hint the curried\r\nfunction as taking exactly `1` positional argument per call, up to `n = 3`.\r\n\r\n```python\r\n@curry(2, ...)\r\ndef add(x: int, y: int) -> int:\r\n    return x + y\r\n\r\nreveal_type(add)\r\n\"\"\"\r\ndef (builtins.int) -> def (builtins.int) -> builtins.int\r\n\"\"\"\r\n```\r\n\r\nFor Python >= (3, 11), one can also use `curry(n, ...)` to hint the curried\r\nfunction as taking exactly `1` positional argument per call, up to `n = 3`,\r\nexcept for the last call. Notice that the `y` parameter is preserved as a\r\npositional-or-keyword parameter.\r\n\r\n```python\r\n@curry(2, ...)\r\ndef add(x: int, y: int) -> int:\r\n    return x + y\r\n\r\nreveal_type(add)\r\n\"\"\"\r\ndef (builtins.int) -> def (y: builtins.int) -> builtins.int\r\n\"\"\"\r\n```\r\n\r\nFor more precise hinting, one must use `typing.cast` around the currying\r\nfunction.\r\n\r\n```python\r\nfrom typing import Protocol, overload\r\n\r\n\r\nclass AddEmpty(Protocol):\r\n\r\n    def __call__(self) -> int:\r\n        ...\r\n\r\n\r\nclass AddX(Protocol):\r\n\r\n    def __call__(self, x: int) -> int:\r\n        ...\r\n\r\n\r\nclass AddY(Protocol):\r\n\r\n    def __call__(self, y: int) -> int:\r\n        ...\r\n\r\n\r\nclass Add(Protocol):\r\n\r\n    @typing.overload\r\n    def __call__(self, x: int, y: int) -> AddEmpty:\r\n        ...\r\n\r\n    @typing.overload\r\n    def __call__(self, x: int) -> AddY:\r\n        ...\r\n\r\n    @typing.overload\r\n    def __call__(self, *, y: int) -> AddX:\r\n        ...\r\n\r\n    def __call__(self, x, y):\r\n        ...\r\n\r\n\r\n@typing.cast(Add, curry(2))\r\ndef add(x: int, y: int) -> int:\r\n    return x + y\r\n\r\nreveal_type(add)\r\n\"\"\"\r\n__main__.Add\r\n\"\"\"\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "pretty,print,format,indent,dataclass",
    "license": "mit",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytyped-curry",
    "package_url": "https://pypi.org/project/pytyped-curry/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytyped-curry/",
    "project_urls": {
      "Bug Tracker": "https://github.com/SimpleArt/pytyped-curry/issues",
      "Repository": "https://github.com/SimpleArt/pytyped-curry"
    },
    "release_url": "https://pypi.org/project/pytyped-curry/1.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Function currying that can be statically typed.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17101390,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22af3f82b19ba04a195e1763efea133e44e28bf25ae18e03b98593fa387bd319",
          "md5": "57c5fea27e996ee57ea1d52c6f3c50a0",
          "sha256": "eb092a4664139b051e1f4601d82e30be9705adc98df8a984297faa4469b717a4"
        },
        "downloads": -1,
        "filename": "pytyped_curry-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57c5fea27e996ee57ea1d52c6f3c50a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 12999,
        "upload_time": "2023-02-07T05:29:44",
        "upload_time_iso_8601": "2023-02-07T05:29:44.547828Z",
        "url": "https://files.pythonhosted.org/packages/22/af/3f82b19ba04a195e1763efea133e44e28bf25ae18e03b98593fa387bd319/pytyped_curry-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7114fc81a2646f095cede2213ae5e9cd0500349a32d7dc36e15251f39ded28bf",
          "md5": "ec3b6f33a2e389f7ff34d4c0d4b27a5f",
          "sha256": "71adb4b6430e3268c07cc70a9769cd5ca0bccfb988c9bc50260bdd7b0847951b"
        },
        "downloads": -1,
        "filename": "pytyped-curry-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ec3b6f33a2e389f7ff34d4c0d4b27a5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6507,
        "upload_time": "2023-02-07T05:29:46",
        "upload_time_iso_8601": "2023-02-07T05:29:46.924858Z",
        "url": "https://files.pythonhosted.org/packages/71/14/fc81a2646f095cede2213ae5e9cd0500349a32d7dc36e15251f39ded28bf/pytyped-curry-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d77b44fab200a7e2949c86d66d2bd1a8c5662edbdad6cbd466ff218282845c0b",
          "md5": "ab9f041e64887bc19d13b0f27b2f82e8",
          "sha256": "491d1563daf6c9b83049d40067589210182a6351127b998b06f0ef8158cd94ef"
        },
        "downloads": -1,
        "filename": "pytyped_curry-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab9f041e64887bc19d13b0f27b2f82e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 14602,
        "upload_time": "2023-02-07T06:05:49",
        "upload_time_iso_8601": "2023-02-07T06:05:49.634341Z",
        "url": "https://files.pythonhosted.org/packages/d7/7b/44fab200a7e2949c86d66d2bd1a8c5662edbdad6cbd466ff218282845c0b/pytyped_curry-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "485d87744fae4924a423ea8a0a78daa18fc2d1bb19cb5f691087c8027fae77cf",
          "md5": "108a356b4c5cd2cfdb00a39dadd56fa5",
          "sha256": "16ff31762101c93ba15f0cd36801d64ddaf33d961c22165ffd9a70290f4b33f9"
        },
        "downloads": -1,
        "filename": "pytyped-curry-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "108a356b4c5cd2cfdb00a39dadd56fa5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8024,
        "upload_time": "2023-02-07T06:05:52",
        "upload_time_iso_8601": "2023-02-07T06:05:52.057896Z",
        "url": "https://files.pythonhosted.org/packages/48/5d/87744fae4924a423ea8a0a78daa18fc2d1bb19cb5f691087c8027fae77cf/pytyped-curry-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64341da2b4f01afc131f518fb3a2ef34047e9667bcf19aece657321eb7c71e3e",
          "md5": "37c88dc7c0e6632449c1b2d2dd8d2367",
          "sha256": "fba88a96ca74df3149bc77290fba2f825572e4bccd6ed2bd65372a6fad8b79fc"
        },
        "downloads": -1,
        "filename": "pytyped_curry-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37c88dc7c0e6632449c1b2d2dd8d2367",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 14628,
        "upload_time": "2023-02-07T13:52:08",
        "upload_time_iso_8601": "2023-02-07T13:52:08.979399Z",
        "url": "https://files.pythonhosted.org/packages/64/34/1da2b4f01afc131f518fb3a2ef34047e9667bcf19aece657321eb7c71e3e/pytyped_curry-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d00afec7bd46375944ac6bb951502e7d9565dba75be9a7c9a559916d4c5cd56",
          "md5": "1961b45c1038c16d13356514e2e579d2",
          "sha256": "2e5529b560b54aacbe824310d7f11fa14f2989d89b48bfef8a0b57f17279b850"
        },
        "downloads": -1,
        "filename": "pytyped-curry-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1961b45c1038c16d13356514e2e579d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8022,
        "upload_time": "2023-02-07T13:52:10",
        "upload_time_iso_8601": "2023-02-07T13:52:10.761432Z",
        "url": "https://files.pythonhosted.org/packages/8d/00/afec7bd46375944ac6bb951502e7d9565dba75be9a7c9a559916d4c5cd56/pytyped-curry-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24547cad62c998921a955d9e3af5d8bd560d03c1c7c6b9c88c9ed0c60d77bc6a",
          "md5": "081a809267dcdf675ea38c6b7970abe1",
          "sha256": "61a692b698c631a5ffd586dcb371cde0dc06ca4f69c07d07effbab2df8a3411e"
        },
        "downloads": -1,
        "filename": "pytyped_curry-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "081a809267dcdf675ea38c6b7970abe1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 15515,
        "upload_time": "2023-02-28T21:06:51",
        "upload_time_iso_8601": "2023-02-28T21:06:51.780022Z",
        "url": "https://files.pythonhosted.org/packages/24/54/7cad62c998921a955d9e3af5d8bd560d03c1c7c6b9c88c9ed0c60d77bc6a/pytyped_curry-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "439088564b0cf5da9556f73008b931650091201449a083ff5b57577862d94d9f",
          "md5": "686818c3b0dede5ca150dd92dc057741",
          "sha256": "bd7877443c6f6a92f4496903497371dc65700f88412aab5fef59bb36f14b19a0"
        },
        "downloads": -1,
        "filename": "pytyped-curry-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "686818c3b0dede5ca150dd92dc057741",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8726,
        "upload_time": "2023-02-28T21:06:53",
        "upload_time_iso_8601": "2023-02-28T21:06:53.676160Z",
        "url": "https://files.pythonhosted.org/packages/43/90/88564b0cf5da9556f73008b931650091201449a083ff5b57577862d94d9f/pytyped-curry-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24547cad62c998921a955d9e3af5d8bd560d03c1c7c6b9c88c9ed0c60d77bc6a",
        "md5": "081a809267dcdf675ea38c6b7970abe1",
        "sha256": "61a692b698c631a5ffd586dcb371cde0dc06ca4f69c07d07effbab2df8a3411e"
      },
      "downloads": -1,
      "filename": "pytyped_curry-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "081a809267dcdf675ea38c6b7970abe1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 15515,
      "upload_time": "2023-02-28T21:06:51",
      "upload_time_iso_8601": "2023-02-28T21:06:51.780022Z",
      "url": "https://files.pythonhosted.org/packages/24/54/7cad62c998921a955d9e3af5d8bd560d03c1c7c6b9c88c9ed0c60d77bc6a/pytyped_curry-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "439088564b0cf5da9556f73008b931650091201449a083ff5b57577862d94d9f",
        "md5": "686818c3b0dede5ca150dd92dc057741",
        "sha256": "bd7877443c6f6a92f4496903497371dc65700f88412aab5fef59bb36f14b19a0"
      },
      "downloads": -1,
      "filename": "pytyped-curry-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "686818c3b0dede5ca150dd92dc057741",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 8726,
      "upload_time": "2023-02-28T21:06:53",
      "upload_time_iso_8601": "2023-02-28T21:06:53.676160Z",
      "url": "https://files.pythonhosted.org/packages/43/90/88564b0cf5da9556f73008b931650091201449a083ff5b57577862d94d9f/pytyped-curry-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}