{
  "info": {
    "author": "Nicolas Wagner",
    "author_email": "nicolas_wagner@gmx.de",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Super Selfish\nA unified Pytorch framework for image-based self-supervised learning. The technical report can be found at https://arxiv.org/abs/2012.02706.\n\nIf you use this framework in one of your projects please consider to cite \n\n```\n@misc{wagner2020superselfish,\n      title={Super-Selfish: Self-Supervised Learning on Images with PyTorch}, \n      author={Nicolas Wagner and Anirban Mukhopadhyay},\n      year={2020},\n      eprint={2012.02706},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}\n```\n\n\n## Algorithms\nCurrently support of 13 algorithms that can be run in parallel on one node of GPUs:\n### Patch-based\n- ExemplarNet https://arxiv.org/abs/1406.6909  \n  We use the stronger set of augmentations used in CPC and do not use gradient-based patch sampling as this does not seem to be neccessary.\n  We always process full images but apply scaling and translation.\n- RotateNet https://arxiv.org/abs/1803.07728 \n- Jigsaw Puzzle https://arxiv.org/abs/1603.09246  \n  We apply random cropping within each patch to avoid border signals.  \n  3x3 jigsaw too complicated for easy dataset, per default 2x2.  \n  Jigsaw processed at once for performance and simplicity.\n### Predictive\n- Denoising Autoencoder https://www.cs.toronto.edu/~larocheh/publications/icml-2008-denoising-autoencoders.pdf\n- Context Autencoder https://arxiv.org/pdf/1604.07379.pdf  \n  We use the Random Block technique that randomly erases multiple small rectangles.\n- SplitBrain Autoencoder https://arxiv.org/pdf/1611.09842.pdf  \n  We use the classification architecture but do not restrict the predictiction to in gamut values.\n### Generative\n- BiGAN https://arxiv.org/pdf/1605.09782.pdf  \n  Not parallel.\n### Contrastive\n- Instance Discrimination https://arxiv.org/pdf/1805.01978.pdf  \n  (Memory Bank, We made it Augmentation Task with CPC Augs, Only Projection head, 1 Backbone, Temperature)\n- Contrastive Predictive Coding (V2) https://arxiv.org/pdf/1905.09272.pdf  \n  (Batchwise, Future Prediction Task with augmentation, Target and Projection head, 1 Backbone, No Temperature)\n- Momentum Contrast (V2) https://arxiv.org/pdf/2003.04297.pdf  \n  (Queue, Augmentation Task, Projection Head, 1 Backbone and Momentum Encoder, Temperature)\n  LayerNorm instead of ShuffledBN (on todo list)\n- Contrastive Multiview Coding https://arxiv.org/pdf/1906.05849.pdf  \n  (Memory Bank, Augmentation Task (We use CPC Aufs), Multimodal,Target and Projection head, 2 Backbones, No Temperature)\n  Features Only from L channel as in theory, the embeddings should be close anyway\n- Boostrap Your Own Latent (CL via BN) https://arxiv.org/pdf/2006.07733.pdf  \n  (No negatives, Augmentation task, Target and Projection head, 2 Backbones,No Temperature)\n- PIRL https://arxiv.org/abs/1912.01991  \n  (Memory Bank, Augmentation + Jigsaw Task, Target and Projection Head, 1 Backbone, Temperature)  \n  Jigsaw processed at once for performance and simplicity.\n\n## Usage\n### Requirements\nTested with  \nCUDA 11.0 and Ubuntu 18.04  \ntorch 1.7.0 torchvision 0.8.1   \nscikit-image 0.17.2  \nelasticdeform 0.4.6  \ntqdm 4.51.0  \nscipy 1.5.4  \ncolorama 0.4.4  \n\nPer default Super Selfish stores network parameters in the folder \"store\" in your directory and looks for a \"dataset\" folder.\n\n### Install\n```python\npip install super-selfish\n```\n\n### Training\nFor usage examples of all algorithms see test.py file.  \nBe aware that pretext difficulty has to be adapted to your task and dataset.  \nFurther, contrastive methods mostly rely on enourmus batch sizes and mostly need a Multi-GPU setup.\nMomentum Contrast typically also works with small batch sizes due to the queued structure.\n<br><br>\nTraining is as easy as:\n```python\n\n# Choose supervisor\nsupervisor = RotateNetSupervisor(train_dataset) # .to('cuda')\n\n# supervisor = RotateNetSupervisor(train_dataset)\n# supervisor = ExemplarNetSupervisor(train_dataset)\n# supervisor = JigsawNetSupervisor(train_dataset)\n# supervisor = DenoiseNetSupervisor(train_dataset)\n# supervisor = ContextNetSupervisor(train_dataset)\n# supervisor = BiGanSupervisor(train_dataset)\n# supervisor = SplitBrainNetSupervisor(train_dataset)\n# supervisor = ContrastivePredictiveCodingSupervisor(train_dataset)\n# supervisor = MomentumContrastSupervisor(train_dataset)\n# supervisor = BYOLSupervisor(train_dataset)\n# supervisor = InstanceDiscriminationSupervisor(train_dataset)\n# supervisor = ContrastiveMultiviewCodingSupervisor(train_dataset)\n# supervisor = PIRLSupervisor(train_dataset)\n\n# Start training\nsupervisor.supervise(lr=1e-3, epochs=50,\n                     batch_size=64, name=\"store/base\", pretrained=False)\n\n```\n### Feature Extraction and Transfer\nThe model is automatically stored if the training ends after the given number of epochs or the user manualy interrupts the training process.  \nIf not directly reused in the same run, any model can be loaded with:\n\n```python\nsupervisor = RotateNetSupervisor().load(name=\"store/base\")\n```\nThe feature extractor is retrieved using:\n```python\n# Returns the backbone network i.e. nn.Module\nbackbone_network = supervisor.get_backbone()\n```\nIf you want to easily add new prediction head you can create a CombinedNet:\n```python\nCombinedNet(backbone_network, nn.Module(...)) \n```\n\n### Flexibility\nAlthough training is as easy as writing two lines of code, Super Selfish provides maximum flexibility. Any supervisor can be directly initialized with the corresponding hyperparameters. By default, the hyperparameters from the respective paper are used. Similiarily, the backbone architecture as well as prediction heads are by default those of the papers but can be customized as follows:\n```python\nsupervisor = RotateNetSupervisor(train_dataset, backbone=nn.Module(...), predictor=nn.Module(...)) # .to('cuda')\n```\nFor individual parameters see Algorithms.  \n\nThe training can be governed by the learning rate, the used optimizer, the batch size, wether to shuffle training data, and a learning rate schedule. Polyak averaging is soon to be added.\n```python\ndef supervise(self, lr=1e-3, optimizer=torch.optim.Adam, epochs=10, batch_size=32, shuffle=True,\n                  num_workers=0, name=\"store/base\", pretrained=False, lr_scheduler=lambda optimizer: torch.optim.lr_scheduler.StepLR(optimizer, step_size=100, gamma=1.0))\n```\nThe supervise method of any Superviser is splitted into 5 parts such that functionalities can be easily updated/changed through overloading.\n```python\n# Loading of pretrained weights and models\ndef _load_pretrained(self, name, pretrained)\n# Initialization of training specific objects\ndef _init_data_optimizer(self, optimizer, batch_size, shuffle, num_workers, collate_fn, lr, lr_scheduler)\n# Wraps looping over epochs, batches. Takes care of visualizations and logging.\ndef _epochs(self, epochs, train_loader, optimizer, lr_scheduler)\n# Implements one run of a model and other forward calculations\ndef _forward(self, data)\n# Takes care of updating the modle, lr scheduler, ...\ndef _update(self, loss, optimizer, lr_scheduler)\n```\nThe full documentation is available at: TODO\n\n## Remarks\n- Super Selfish is constructed to work out of the box on 225x225 images but can be adapted to other resolutions with minor effort. An adaptive design is to follow soon.\n- If not precisley stated in a paper, we use the CPC image augmentations. Some augmentations or implementation details may be different to the original papers as we aim for a comparable unified framework.\n- We use an EfficientNet https://github.com/lukemelas/EfficientNet-PyTorch implementation as the defaul backbone/feature extractor. We use a customized version that can be switched from batch norm to layer norm.\n- Please feel free to open an issue regarding bugs and/or other algorithms that should be added.\n\n## TODOs\n- Multi node support, ShuffledBN\n- Refactor old datasets, GANSupervisor\n- Polyak Averaging\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nwWag/Super-Selfish",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "super-selfish",
    "package_url": "https://pypi.org/project/super-selfish/",
    "platform": "",
    "project_url": "https://pypi.org/project/super-selfish/",
    "project_urls": {
      "Homepage": "https://github.com/nwWag/Super-Selfish"
    },
    "release_url": "https://pypi.org/project/super-selfish/0.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A self-supervision PyTorch framework",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8932887,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d49d2ad8c95eaad434f293d1a021599a46b1a2eae86470cf23663128b5a3e8ce",
          "md5": "e2bbef03b132c8f12b79f66f4be48671",
          "sha256": "4476e8a324f2c344851783b777c174d64f619af8976b87de4c0a35f057904820"
        },
        "downloads": -1,
        "filename": "super_selfish-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2bbef03b132c8f12b79f66f4be48671",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34178,
        "upload_time": "2020-11-13T15:36:05",
        "upload_time_iso_8601": "2020-11-13T15:36:05.909264Z",
        "url": "https://files.pythonhosted.org/packages/d4/9d/2ad8c95eaad434f293d1a021599a46b1a2eae86470cf23663128b5a3e8ce/super_selfish-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea4d9021fac6a794226f543d29ec27965b9c8edb92e231e87785343cf05a895a",
          "md5": "640475c4db5d31bde9aee01e6d6c403a",
          "sha256": "0012917e448286e61b029a3c6c110823cb2e7a8c88d562c338e70f345e9cb48b"
        },
        "downloads": -1,
        "filename": "super-selfish-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "640475c4db5d31bde9aee01e6d6c403a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32572,
        "upload_time": "2020-11-13T15:36:07",
        "upload_time_iso_8601": "2020-11-13T15:36:07.031025Z",
        "url": "https://files.pythonhosted.org/packages/ea/4d/9021fac6a794226f543d29ec27965b9c8edb92e231e87785343cf05a895a/super-selfish-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d4ed148acde43fe6a405db5fe0d23f6cfd58e121a65b38c38b75745a890f8ae",
          "md5": "bca4bc07619f97c6260027a796b3a790",
          "sha256": "d30e3fbb855012b8b422a5b9b1a58aa8a626296876332f270313686fe12c3785"
        },
        "downloads": -1,
        "filename": "super_selfish-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bca4bc07619f97c6260027a796b3a790",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34706,
        "upload_time": "2020-12-03T08:14:20",
        "upload_time_iso_8601": "2020-12-03T08:14:20.931273Z",
        "url": "https://files.pythonhosted.org/packages/4d/4e/d148acde43fe6a405db5fe0d23f6cfd58e121a65b38c38b75745a890f8ae/super_selfish-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1e0c0b5c6c78a17e3bb787c4d64c14bc1d207bbeaaf342c969b15eca988395b",
          "md5": "dd6e590b466d20a2f8f6967fd0b2e99b",
          "sha256": "e6951b0501f7d58aee36b7a02fd8e44ac25d4fd1781b2158eba1ab775b20861d"
        },
        "downloads": -1,
        "filename": "super-selfish-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dd6e590b466d20a2f8f6967fd0b2e99b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33248,
        "upload_time": "2020-12-03T08:14:22",
        "upload_time_iso_8601": "2020-12-03T08:14:22.712161Z",
        "url": "https://files.pythonhosted.org/packages/f1/e0/c0b5c6c78a17e3bb787c4d64c14bc1d207bbeaaf342c969b15eca988395b/super-selfish-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fccd715892087287ed41c41527732bdc9d939ab2f3417495728797a99b51c92",
          "md5": "df52fe2021ed3b2556a6daf93db8e905",
          "sha256": "40bb3eae355aa04a6e5aee5f6e500421ba3246f09524d83f1a35e9c78f0f1aee"
        },
        "downloads": -1,
        "filename": "super_selfish-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df52fe2021ed3b2556a6daf93db8e905",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34713,
        "upload_time": "2020-12-03T08:18:52",
        "upload_time_iso_8601": "2020-12-03T08:18:52.391309Z",
        "url": "https://files.pythonhosted.org/packages/2f/cc/d715892087287ed41c41527732bdc9d939ab2f3417495728797a99b51c92/super_selfish-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32ac6772e91bc2f0ff84ac8240dcb584ef9f3aafc548da3014adf5bbb80c662a",
          "md5": "f629fe6d9f3d1c40bdc98d9ef5699736",
          "sha256": "56a8e72ca4cf8a7883c91b0cbeb18c532a9f01e5fae3b863426928e548b5da44"
        },
        "downloads": -1,
        "filename": "super-selfish-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f629fe6d9f3d1c40bdc98d9ef5699736",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33263,
        "upload_time": "2020-12-03T08:18:54",
        "upload_time_iso_8601": "2020-12-03T08:18:54.005680Z",
        "url": "https://files.pythonhosted.org/packages/32/ac/6772e91bc2f0ff84ac8240dcb584ef9f3aafc548da3014adf5bbb80c662a/super-selfish-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0682b744a659c1b07758d0aeeb56d2957449706944cb603aae5984394ca0ff1",
          "md5": "cfaec808f841b6813395ae27cf3a70c3",
          "sha256": "3452bea0cb5ab0aaaf48c6f6262e490b1c907193c403651d6ac79cecb69e9daa"
        },
        "downloads": -1,
        "filename": "super_selfish-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cfaec808f841b6813395ae27cf3a70c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34728,
        "upload_time": "2020-12-03T09:08:57",
        "upload_time_iso_8601": "2020-12-03T09:08:57.323382Z",
        "url": "https://files.pythonhosted.org/packages/e0/68/2b744a659c1b07758d0aeeb56d2957449706944cb603aae5984394ca0ff1/super_selfish-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e1f455c249df402c31342cdcd6e0d64a94de96358e210f03b167aba8478dc7b",
          "md5": "48cc4d79e9b93fb825bc745ef0d39d2c",
          "sha256": "c80293abdb3195194fe98718559d786fcb0d899075b5d9c570d31db34b5465ec"
        },
        "downloads": -1,
        "filename": "super-selfish-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "48cc4d79e9b93fb825bc745ef0d39d2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33311,
        "upload_time": "2020-12-03T09:08:58",
        "upload_time_iso_8601": "2020-12-03T09:08:58.530147Z",
        "url": "https://files.pythonhosted.org/packages/4e/1f/455c249df402c31342cdcd6e0d64a94de96358e210f03b167aba8478dc7b/super-selfish-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f61e7c5fa1ecb116f679301ea38f11d4bb0a629ffdc7fdbb35168e2d933699ef",
          "md5": "75b707c798d296a264952f373a65151d",
          "sha256": "614326f047df4c2f8d43c60c57c678fd675defbbccc1623f792fe7e311cb8849"
        },
        "downloads": -1,
        "filename": "super_selfish-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75b707c798d296a264952f373a65151d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35430,
        "upload_time": "2020-12-04T14:42:54",
        "upload_time_iso_8601": "2020-12-04T14:42:54.467573Z",
        "url": "https://files.pythonhosted.org/packages/f6/1e/7c5fa1ecb116f679301ea38f11d4bb0a629ffdc7fdbb35168e2d933699ef/super_selfish-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba3b6ca67772854682a14b820cbe937316c98f32859aa6bd138b4a2f246a1833",
          "md5": "d9bd6a161b91bbf724b197de57b1c23f",
          "sha256": "857f58aa1fb32aa326a75427dd030a70cd8f7a94d22fdf767301de47c5bc02a8"
        },
        "downloads": -1,
        "filename": "super-selfish-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d9bd6a161b91bbf724b197de57b1c23f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34085,
        "upload_time": "2020-12-04T14:42:55",
        "upload_time_iso_8601": "2020-12-04T14:42:55.999254Z",
        "url": "https://files.pythonhosted.org/packages/ba/3b/6ca67772854682a14b820cbe937316c98f32859aa6bd138b4a2f246a1833/super-selfish-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43b2fa281e2a37c7b7dfa1b19bc2207b5e090e3e12402a95742b9d5efc7943ac",
          "md5": "d61ff192688c8faa5605db6499a38cfd",
          "sha256": "85add8c1436922c753215f4538c41a63d5bbf40a878c03fbecc5549163d19dfe"
        },
        "downloads": -1,
        "filename": "super_selfish-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d61ff192688c8faa5605db6499a38cfd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35683,
        "upload_time": "2020-12-18T12:29:26",
        "upload_time_iso_8601": "2020-12-18T12:29:26.154512Z",
        "url": "https://files.pythonhosted.org/packages/43/b2/fa281e2a37c7b7dfa1b19bc2207b5e090e3e12402a95742b9d5efc7943ac/super_selfish-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2d4eeef3966e625473650add810369ffc74040efc60f04d1d9bfb487833c251",
          "md5": "78440bac040600f107724700d6f3ba31",
          "sha256": "505b538cd20aff880f9fb123362c52ee5b45a0a97716307554fd1ed660234f4d"
        },
        "downloads": -1,
        "filename": "super-selfish-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "78440bac040600f107724700d6f3ba31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34656,
        "upload_time": "2020-12-18T12:29:27",
        "upload_time_iso_8601": "2020-12-18T12:29:27.573558Z",
        "url": "https://files.pythonhosted.org/packages/f2/d4/eeef3966e625473650add810369ffc74040efc60f04d1d9bfb487833c251/super-selfish-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43b2fa281e2a37c7b7dfa1b19bc2207b5e090e3e12402a95742b9d5efc7943ac",
        "md5": "d61ff192688c8faa5605db6499a38cfd",
        "sha256": "85add8c1436922c753215f4538c41a63d5bbf40a878c03fbecc5549163d19dfe"
      },
      "downloads": -1,
      "filename": "super_selfish-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d61ff192688c8faa5605db6499a38cfd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 35683,
      "upload_time": "2020-12-18T12:29:26",
      "upload_time_iso_8601": "2020-12-18T12:29:26.154512Z",
      "url": "https://files.pythonhosted.org/packages/43/b2/fa281e2a37c7b7dfa1b19bc2207b5e090e3e12402a95742b9d5efc7943ac/super_selfish-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2d4eeef3966e625473650add810369ffc74040efc60f04d1d9bfb487833c251",
        "md5": "78440bac040600f107724700d6f3ba31",
        "sha256": "505b538cd20aff880f9fb123362c52ee5b45a0a97716307554fd1ed660234f4d"
      },
      "downloads": -1,
      "filename": "super-selfish-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "78440bac040600f107724700d6f3ba31",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 34656,
      "upload_time": "2020-12-18T12:29:27",
      "upload_time_iso_8601": "2020-12-18T12:29:27.573558Z",
      "url": "https://files.pythonhosted.org/packages/f2/d4/eeef3966e625473650add810369ffc74040efc60f04d1d9bfb487833c251/super-selfish-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}