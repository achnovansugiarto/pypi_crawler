{
  "info": {
    "author": "mandrewcito",
    "author_email": "anbaalo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# SignalR core client\r\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg?logo=paypal&style=flat-square)](https://www.paypal.me/mandrewcito/1)\r\n![Pypi](https://img.shields.io/pypi/v/signalrcore.svg)\r\n[![Downloads](https://pepy.tech/badge/signalrcore/month)](https://pepy.tech/project/signalrcore/month)\r\n[![Downloads](https://pepy.tech/badge/signalrcore)](https://pepy.tech/project/signalrcore)\r\n![Issues](https://img.shields.io/github/issues/mandrewcito/signalrcore.svg)\r\n![Open issues](https://img.shields.io/github/issues-raw/mandrewcito/signalrcore.svg)\r\n![codecov.io](https://codecov.io/github/mandrewcito/signalrcore/coverage.svg?branch=master)\r\n\r\n![logo alt](https://raw.githubusercontent.com/mandrewcito/signalrcore/master/docs/img/logo_temp.128.svg.png)\r\n\r\n\r\n# Links \r\n\r\n* [Dev to posts with library examples and implementation](https://dev.to/mandrewcito/singlar-core-python-client-58e7)\r\n\r\n* [Pypi](https://pypi.org/project/signalrcore/)\r\n\r\n* [Wiki - This Doc](https://mandrewcito.github.io/signalrcore/)\r\n\r\n# Develop\r\n\r\nTest server will be avaiable in [here](https://github.com/mandrewcito/signalrcore-containertestservers) and docker compose is required.\r\n\r\n```bash\r\ngit clone https://github.com/mandrewcito/signalrcore-containertestservers\r\ncd signalrcore-containertestservers\r\ndocker-compose up\r\ncd ../signalrcore\r\nmake tests\r\n```\r\n\r\n## Known Issues\r\n\r\nIssues related with closing sockets are inherited from the websocket-client library. Due to these problems i can't update the library to versions higher than websocket-client 0.54.0. \r\nI'm working to solve it but for now its patched (Error number 1. Raises an exception, and then exception is treated for prevent errors). \r\nIf I update the websocket library I fall into error number 2, on local machine I can't reproduce it but travis builds fail (sometimes and randomly :()\r\n* [1. Closing socket error](https://github.com/slackapi/python-slackclient/issues/171)\r\n* [2. Random errors closing socket](https://github.com/websocket-client/websocket-client/issues/449)\r\n\r\n# A Tiny How To\r\n\r\n## Connect to a server without auth\r\n\r\n```python\r\nhub_connection = HubConnectionBuilder()\\\r\n    .with_url(server_url)\\\r\n    .configure_logging(logging.DEBUG)\\\r\n    .with_automatic_reconnect({\r\n        \"type\": \"raw\",\r\n        \"keep_alive_interval\": 10,\r\n        \"reconnect_interval\": 5,\r\n        \"max_attempts\": 5\r\n    }).build()\r\n```\r\n## Connect to a server with auth\r\n\r\nlogin_function must provide auth token\r\n\r\n```python\r\nhub_connection = HubConnectionBuilder()\\\r\n            .with_url(server_url,\r\n            options={\r\n                \"access_token_factory\": login_function,\r\n                \"headers\": {\r\n                    \"mycustomheader\": \"mycustomheadervalue\"\r\n                }\r\n            })\\\r\n            .configure_logging(logging.DEBUG)\\\r\n            .with_automatic_reconnect({\r\n                \"type\": \"raw\",\r\n                \"keep_alive_interval\": 10,\r\n                \"reconnect_interval\": 5,\r\n                \"max_attempts\": 5\r\n            }).build()\r\n```\r\n### Unauthorized errors\r\nA login function must provide an error controller if authorization fails. When connection starts, if authorization fails exception will be propagated.\r\n\r\n```python\r\n    def login(self):\r\n        response = requests.post(\r\n            self.login_url,\r\n            json={\r\n                \"username\": self.email,\r\n                \"password\": self.password\r\n                },verify=False)\r\n        if response.status_code == 200:\r\n            return response.json()[\"token\"]\r\n        raise requests.exceptions.ConnectionError()\r\n\r\n    hub_connection.start()   # this code will raise  requests.exceptions.ConnectionError() if auth fails\r\n```\r\n## Configure logging\r\n\r\n```python\r\nHubConnectionBuilder()\\\r\n    .with_url(server_url,\r\n    .configure_logging(logging.DEBUG)\r\n    ...\r\n```\r\n## Configure socket trace\r\n```python \r\nHubConnectionBuilder()\\\r\n    .with_url(server_url,\r\n    .configure_logging(logging.DEBUG, socket_trace=True) \r\n    ... \r\n ```\r\n## Configure your own handler\r\n```python\r\n import logging\r\nhandler = logging.StreamHandler()\r\nhandler.setLevel(logging.DEBUG)\r\nhub_connection = HubConnectionBuilder()\\\r\n    .with_url(server_url, options={\"verify_ssl\": False}) \\\r\n    .configure_logging(logging.DEBUG, socket_trace=True, handler=handler)\r\n    ...\r\n ```\r\n## Configuring reconnection\r\nAfter reaching max_attempts an exeption will be thrown and on_disconnect event will be fired.\r\n```python\r\nhub_connection = HubConnectionBuilder()\\\r\n    .with_url(server_url)\\\r\n    ...\r\n    .build()\r\n```\r\n## Configuring additional headers\r\n```python\r\nhub_connection = HubConnectionBuilder()\\\r\n            .with_url(server_url,\r\n            options={\r\n                \"headers\": {\r\n                    \"mycustomheader\": \"mycustomheadervalue\"\r\n                }\r\n            })\r\n            ...\r\n            .build()\r\n```\r\n## Configuring additional querystring parameters\r\n```python\r\nserver_url =\"http.... /?myquerystringparam=134&foo=bar\"\r\nconnection = HubConnectionBuilder()\\\r\n            .with_url(server_url,\r\n            options={\r\n            })\\\r\n            .build()\r\n```\r\n## Congfiguring skip negotiation\r\n```python\r\nhub_connection = HubConnectionBuilder() \\\r\n        .with_url(\"ws://\"+server_url, options={\r\n            \"verify_ssl\": False,\r\n            \"skip_negotiation\": False,\r\n            \"headers\": {\r\n            }\r\n        }) \\\r\n        .configure_logging(logging.DEBUG, socket_trace=True, handler=handler) \\\r\n        .build()\r\n\r\n```\r\n## Configuring ping(keep alive)\r\n\r\nkeep_alive_interval sets the seconds of ping message\r\n\r\n```python\r\nhub_connection = HubConnectionBuilder()\\\r\n    .with_url(server_url)\\\r\n    .configure_logging(logging.DEBUG)\\\r\n    .with_automatic_reconnect({\r\n        \"type\": \"raw\",\r\n        \"keep_alive_interval\": 10,\r\n        \"reconnect_interval\": 5,\r\n        \"max_attempts\": 5\r\n    }).build()\r\n```\r\n## Configuring logging\r\n```python\r\nhub_connection = HubConnectionBuilder()\\\r\n    .with_url(server_url)\\\r\n    .configure_logging(logging.DEBUG)\\\r\n    .with_automatic_reconnect({\r\n        \"type\": \"raw\",\r\n        \"keep_alive_interval\": 10,\r\n        \"reconnect_interval\": 5,\r\n        \"max_attempts\": 5\r\n    }).build()\r\n```\r\n\r\n## Configure messagepack\r\n\r\n```python\r\nfrom signalrcore.protocol.messagepack_protocol import MessagePackHubProtocol\r\n\r\nHubConnectionBuilder()\\\r\n            .with_url(self.server_url, options={\"verify_ssl\":False})\\\r\n                ... \r\n            .with_hub_protocol(MessagePackHubProtocol())\\\r\n                ...\r\n            .build()\r\n```\r\n## Events\r\n\r\n### On Connect / On Disconnect\r\non_open - fires when connection is opened and ready to send messages\r\non_close - fires when connection is closed\r\n```python\r\nhub_connection.on_open(lambda: print(\"connection opened and handshake received ready to send messages\"))\r\nhub_connection.on_close(lambda: print(\"connection closed\"))\r\n\r\n```\r\n### On Hub Error (Hub Exceptions ...)\r\n```\r\nhub_connection.on_error(lambda data: print(f\"An exception was thrown closed{data.error}\"))\r\n```\r\n### Register an operation \r\nReceiveMessage - signalr method\r\nprint - function that has as parameters args of signalr method\r\n```python\r\nhub_connection.on(\"ReceiveMessage\", print)\r\n```\r\n## Sending messages\r\nSendMessage - signalr method\r\nusername, message - parameters of signalrmethod\r\n```python\r\n    hub_connection.send(\"SendMessage\", [username, message])\r\n```\r\n\r\n## Sending messages with callback\r\nSendMessage - signalr method\r\nusername, message - parameters of signalrmethod\r\n```python\r\n    send_callback_received = threading.Lock()\r\n    send_callback_received.acquire()\r\n    self.connection.send(\r\n        \"SendMessage\", # Method\r\n        [self.username, self.message], # Params\r\n        lambda m: send_callback_received.release()) # Callback\r\n    if not send_callback_received.acquire(timeout=1):\r\n        raise ValueError(\"CALLBACK NOT RECEIVED\")\r\n```\r\n\r\n## Requesting streaming (Server to client)\r\n```python\r\nhub_connection.stream(\r\n            \"Counter\",\r\n            [len(self.items), 500]).subscribe({\r\n                \"next\": self.on_next,\r\n                \"complete\": self.on_complete,\r\n                \"error\": self.on_error\r\n            })\r\n```\r\n## Client side Streaming\r\n```python\r\nfrom signalrcore.subject import  Subject\r\n\r\nsubject = Subject()\r\n\r\n# Start Streaming\r\nhub_connection.send(\"UploadStream\", subject)\r\n\r\n# Each iteration\r\nsubject.next(str(iteration))\r\n\r\n# End streaming\r\nsubject.complete()\r\n```\r\n\r\n# Full Examples\r\n\r\nExamples will be avaiable [here](https://github.com/mandrewcito/signalrcore/tree/master/test/examples)\r\nIt were developed using package from [aspnet core - SignalRChat](https://codeload.github.com/aspnet/Docs/zip/master) \r\n\r\n## Chat example\r\nA mini example could be something like this:\r\n\r\n```python\r\nimport logging\r\nimport sys\r\nfrom signalrcore.hub_connection_builder import HubConnectionBuilder\r\n\r\n\r\ndef input_with_default(input_text, default_value):\r\n    value = input(input_text.format(default_value))\r\n    return default_value if value is None or value.strip() == \"\" else value\r\n\r\n\r\nserver_url = input_with_default('Enter your server url(default: {0}): ', \"wss://localhost:44376/chatHub\")\r\nusername = input_with_default('Enter your username (default: {0}): ', \"mandrewcito\")\r\nhandler = logging.StreamHandler()\r\nhandler.setLevel(logging.DEBUG)\r\nhub_connection = HubConnectionBuilder()\\\r\n    .with_url(server_url, options={\"verify_ssl\": False}) \\\r\n    .configure_logging(logging.DEBUG, socket_trace=True, handler=handler) \\\r\n    .with_automatic_reconnect({\r\n            \"type\": \"interval\",\r\n            \"keep_alive_interval\": 10,\r\n            \"intervals\": [1, 3, 5, 6, 7, 87, 3]\r\n        }).build()\r\n\r\nhub_connection.on_open(lambda: print(\"connection opened and handshake received ready to send messages\"))\r\nhub_connection.on_close(lambda: print(\"connection closed\"))\r\n\r\nhub_connection.on(\"ReceiveMessage\", print)\r\nhub_connection.start()\r\nmessage = None\r\n\r\n# Do login\r\n\r\nwhile message != \"exit()\":\r\n    message = input(\">> \")\r\n    if message is not None and message != \"\" and message != \"exit()\":\r\n        hub_connection.send(\"SendMessage\", [username, message])\r\n\r\nhub_connection.stop()\r\n\r\nsys.exit(0)\r\n\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dcmeglio/signalrcore",
    "keywords": "signalr core client 3.1",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "signalrcoreplus",
    "package_url": "https://pypi.org/project/signalrcoreplus/",
    "platform": null,
    "project_url": "https://pypi.org/project/signalrcoreplus/",
    "project_urls": {
      "Homepage": "https://github.com/dcmeglio/signalrcore"
    },
    "release_url": "https://pypi.org/project/signalrcoreplus/0.10.3/",
    "requires_dist": [
      "requests (>=2.22.0)",
      "websocket-client (==1.4.2)",
      "msgpack (==1.0.2)"
    ],
    "requires_python": "",
    "summary": "A Python SignalR Core client(json and messagepack), with invocation auth and two way streaming. Compatible with azure / serverless functions. Also with automatic reconnect and manually reconnect.",
    "version": "0.10.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16251322,
  "releases": {
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "781ba9e758dd8387a6b0555323e47aa0767c1344326f19db330c6c41ec58685d",
          "md5": "7a3414aef4680300cad4398732a42fa1",
          "sha256": "fc995e2d9ced2cf6f4c76f188dbfcf9da0c10674b2e3b0d7b3971453454bb9a0"
        },
        "downloads": -1,
        "filename": "signalrcoreplus-0.10.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a3414aef4680300cad4398732a42fa1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35622,
        "upload_time": "2022-12-29T18:15:22",
        "upload_time_iso_8601": "2022-12-29T18:15:22.649995Z",
        "url": "https://files.pythonhosted.org/packages/78/1b/a9e758dd8387a6b0555323e47aa0767c1344326f19db330c6c41ec58685d/signalrcoreplus-0.10.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5edfa91801db18f473a8173f6b413912ae3079e408f19584ecb34f181086c79",
          "md5": "d88a6fb569c6e0d64a40a241617660af",
          "sha256": "3fb0d5142245bded996381e675409328bb207c7798847e6c28fd9f9f65bef21e"
        },
        "downloads": -1,
        "filename": "signalrcoreplus-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d88a6fb569c6e0d64a40a241617660af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24544,
        "upload_time": "2022-12-29T18:15:24",
        "upload_time_iso_8601": "2022-12-29T18:15:24.764406Z",
        "url": "https://files.pythonhosted.org/packages/f5/ed/fa91801db18f473a8173f6b413912ae3079e408f19584ecb34f181086c79/signalrcoreplus-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fe7b076a7b18327d30ce5a7128e16f0dcf2b976adc0629ebc9e0494e9634be7",
          "md5": "7c7f6faa32f522f7bf9abe20dd86e3a4",
          "sha256": "1bc5e0694f441cb2d68503a89643cfababfcf42502a0b7fa2c3a3823ae9413ff"
        },
        "downloads": -1,
        "filename": "signalrcoreplus-0.10.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c7f6faa32f522f7bf9abe20dd86e3a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35902,
        "upload_time": "2022-12-29T18:20:21",
        "upload_time_iso_8601": "2022-12-29T18:20:21.997821Z",
        "url": "https://files.pythonhosted.org/packages/0f/e7/b076a7b18327d30ce5a7128e16f0dcf2b976adc0629ebc9e0494e9634be7/signalrcoreplus-0.10.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37cfdf17994dcda9824d42261fe213246b89094fe3d613d87838e0f767de8d25",
          "md5": "8d436f33caf6cfe23dc52ec2b130a90b",
          "sha256": "067b18a07be47a5ce3f061bc1bb4c6fa98264e563fa5b0bba3a64852ecaf21e2"
        },
        "downloads": -1,
        "filename": "signalrcoreplus-0.10.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8d436f33caf6cfe23dc52ec2b130a90b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24535,
        "upload_time": "2022-12-29T18:20:24",
        "upload_time_iso_8601": "2022-12-29T18:20:24.938431Z",
        "url": "https://files.pythonhosted.org/packages/37/cf/df17994dcda9824d42261fe213246b89094fe3d613d87838e0f767de8d25/signalrcoreplus-0.10.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3e70ed78b5a76b4271550f8dedc63aaf0076527b297ae9a9ff7737b272ac3a1",
          "md5": "77fcee1a7e377d352d8993827143f140",
          "sha256": "4e3a72a26bc19c344e41d4c626409ce1a143de92f90b150e83a1775510259631"
        },
        "downloads": -1,
        "filename": "signalrcoreplus-0.10.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77fcee1a7e377d352d8993827143f140",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35879,
        "upload_time": "2022-12-29T18:25:48",
        "upload_time_iso_8601": "2022-12-29T18:25:48.357931Z",
        "url": "https://files.pythonhosted.org/packages/b3/e7/0ed78b5a76b4271550f8dedc63aaf0076527b297ae9a9ff7737b272ac3a1/signalrcoreplus-0.10.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47216af50438e7bcab85a720bbf470afb576ac9292d8290b5cce6f0195bcb717",
          "md5": "5dd610f47ab843be24467ab592da8873",
          "sha256": "b896ce68982c3054c71cab54a6ade62e98913a47bfb2f9341c07bc8183b2cf9f"
        },
        "downloads": -1,
        "filename": "signalrcoreplus-0.10.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5dd610f47ab843be24467ab592da8873",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24618,
        "upload_time": "2022-12-29T18:25:51",
        "upload_time_iso_8601": "2022-12-29T18:25:51.843104Z",
        "url": "https://files.pythonhosted.org/packages/47/21/6af50438e7bcab85a720bbf470afb576ac9292d8290b5cce6f0195bcb717/signalrcoreplus-0.10.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80b918a33fe78904501987e00699838c5269f67bf5f6ebadbdb1b863682779ea",
          "md5": "74c71146c5e04350323825fca194fc41",
          "sha256": "87c69c629cadc30c63d55fb7d15bbcf601ce240a763d816d64f3b4bb2dea4ae9"
        },
        "downloads": -1,
        "filename": "signalrcoreplus-0.10.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74c71146c5e04350323825fca194fc41",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35912,
        "upload_time": "2022-12-29T19:15:41",
        "upload_time_iso_8601": "2022-12-29T19:15:41.194684Z",
        "url": "https://files.pythonhosted.org/packages/80/b9/18a33fe78904501987e00699838c5269f67bf5f6ebadbdb1b863682779ea/signalrcoreplus-0.10.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64ea5498299c0832a581b068c7e7cb86dc4ef580b61f414dbef010acf84f9cfd",
          "md5": "6e2abd2171d84bfc7341925f5e62ee7d",
          "sha256": "3bdc1697d240d01150e0dfd58d7f10158620842e55b6a552decef78b6eb38d5d"
        },
        "downloads": -1,
        "filename": "signalrcoreplus-0.10.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6e2abd2171d84bfc7341925f5e62ee7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24619,
        "upload_time": "2022-12-29T19:15:45",
        "upload_time_iso_8601": "2022-12-29T19:15:45.562414Z",
        "url": "https://files.pythonhosted.org/packages/64/ea/5498299c0832a581b068c7e7cb86dc4ef580b61f414dbef010acf84f9cfd/signalrcoreplus-0.10.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80b918a33fe78904501987e00699838c5269f67bf5f6ebadbdb1b863682779ea",
        "md5": "74c71146c5e04350323825fca194fc41",
        "sha256": "87c69c629cadc30c63d55fb7d15bbcf601ce240a763d816d64f3b4bb2dea4ae9"
      },
      "downloads": -1,
      "filename": "signalrcoreplus-0.10.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "74c71146c5e04350323825fca194fc41",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 35912,
      "upload_time": "2022-12-29T19:15:41",
      "upload_time_iso_8601": "2022-12-29T19:15:41.194684Z",
      "url": "https://files.pythonhosted.org/packages/80/b9/18a33fe78904501987e00699838c5269f67bf5f6ebadbdb1b863682779ea/signalrcoreplus-0.10.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64ea5498299c0832a581b068c7e7cb86dc4ef580b61f414dbef010acf84f9cfd",
        "md5": "6e2abd2171d84bfc7341925f5e62ee7d",
        "sha256": "3bdc1697d240d01150e0dfd58d7f10158620842e55b6a552decef78b6eb38d5d"
      },
      "downloads": -1,
      "filename": "signalrcoreplus-0.10.3.tar.gz",
      "has_sig": false,
      "md5_digest": "6e2abd2171d84bfc7341925f5e62ee7d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24619,
      "upload_time": "2022-12-29T19:15:45",
      "upload_time_iso_8601": "2022-12-29T19:15:45.562414Z",
      "url": "https://files.pythonhosted.org/packages/64/ea/5498299c0832a581b068c7e7cb86dc4ef580b61f414dbef010acf84f9cfd/signalrcoreplus-0.10.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}