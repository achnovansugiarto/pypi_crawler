{
  "info": {
    "author": "Braden Kronheim",
    "author_email": "brkronheim@davidson.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# TensorBNN\nThis package contains code which can be used to train Bayesian Neural Networks using Hamiltonian Monte Carlo sampling as proposed by Radford Neal in his thesis \"Bayesian Learning for Neural Networks\" along with added features. The package is written in python3 and uses the packages `Tensorflow` and `Tensorflow-Probability` as the framework for the implementation. \n\nFor detailed information about this implementation, please see our paper on the arXiv: [TensorBNN: Bayesian Inference for Neural Networks using Tensorflow](https://arxiv.org/abs/2009.14393)\n\n## Dependencies\nAll python code written here is in python3. The code is dependent upon the packages `numpy`, `emcee`,`tensorflow`, `tensorflow-probability`, and `scipy`.\n\nThe package, along with `numpy`, `emcee`, and  `scipy`, can be installed via\n\n```\npip install tensorBNN\n```\n\nTensorFlow and TensorFlow-probability must be instaled separately. The TensorFlow version should be the most recent (2.3 at the moment). Using a 1.x version will not work, and neither will older versions of 2. It is also highly recomended that this code be run on a gpu due to its high computational complexity. TensorFlow for the gpu can be installed with the command:\n\n```\npip install tensorflow-gpu\n```\n\nIn order to be compatible with this version of tensorflow, the most recent version of tensorflow-probability (0.11) must be installed. This is done with the following command:\n\n```\npip install tensorflow-probability\n```\n\n\n## Usage\n\nIn order to use this code you must import network, Dense Layer,an activation such as Relu, and a likelihood such as the Gaussian likelihood. This can be done as follows:\n\n```\nfrom tensorBNN.layer import DenseLayer\nfrom tensorBNN.network import network\nfrom tensorBNN.activationFunctions import Relu\nfrom tensorBNN.likelihood import GaussianLikelihood\n```\n\nNext, it is highly convenient to turn off the deprecation warnings. These are all from tensorflow, tensorflow-probability, and numpy intereacting with tensorflow, so it isn't something easily fixed and there are a lot of warnings. These are turned off with:\n\n```\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\nwarnings.filterwarnings(\"ignore\", category=UserWarning)\n```\n\nThe other important setup task is determining whether or not to seed the random number generator before training. Please note that if you are using a gpu then there will always be some randomness which cannot be removed. To set all cpu random numbers use these lines of code:\n\n```\nimport os\n\nimport numpy as np\nimport random as rn\nimport tensorflow as tf\n\nos.environ[\"PYTHONHASHSEED\"] = \"0\"\nnp.random.seed(42)\nrn.seed(12345)\ntf.random.set_seed(3)\n```\n\nMoving on to the actual use of this code, start with the declaration of a network object:\n\n```\nneuralNet = network.network(dtype, inputDims, trainX, trainY, validationX, validationY, mean, sd)\n```\n\nThe paramaters are described as follows:\n* dtype: data type for Tensors\n* inputDims: dimension of input vector\n* trainX: the training data input, shape is n by inputDims\n* trainY: the training data output\n* validateX: the validation data input, shape is n by inputDims\n* validateY: the validation data output\n* mean: the mean used to scale trainY and validateY\n* sd: standard deviation used to scale trainY and validateY\n\nNext, add all of the desired layers and activation functions as follows:\n\n```\nneuralNet.add(DenseLayer(inputDims, outputDims, seed=seed, dtype=tf.float32))\nneuralNet.add(Relu())\n```\n\nFor added control, especially when using pre-trained networks it is possible to feed pretrained weights, biases, and values for the activation functions. This can be done as follows:\n\n```\nneuralNet.add(DenseLayer(inputDims,outputDims, weights=weights, biases=biases, seed=seed, dtype=dtype))\nneuralNet.add(SquarePrelu(width, alpha=alpha**(0.5), activation=activation, dtype=dtype))\n```\n\nThe paramater inputDims is the output shape of the layer before, and the width is the ouput shape of the layers itself. The seed is used for seeding the random number generator. Currently, only ReLU is supported for easy predictions off of saved networks. The other activation functions can be used, but they will require more custom code to predict from saved networks.\n\nNext, the Markov Chain Monte Carlo algorithm must be initialized. This can be done as follows:\n\n```\nneuralNet.setupMCMC(self, stepSize, stepMin, stepMax, stepNum, leapfrog, leapMin,\n                    leapMax, leapStep, hyperStepSize, hyperLeapfrog, burnin,\n                    cores, averagingSteps=2, a=4, delta=0.1):\n```\n\nThe paramaters are described as follows:\n* stepSize: the starting step size for the weights and biases\n* stepMin: the minimum step size\n* stepMax: the maximum step size\n* stepNum: the number of step sizes in grid\n* leapfrog: number of leapfrog steps for weights and biases\n* leapMin: the minimum number of leapfrog steps\n* leapMax: the maximum number of leapfrog steps\n* leapStep: the step in number of leapfrog for search grid\n* hyperStepSize: the starting step size for the hyper parameters\n* hyperLeapfrog: leapfrog steps for hyper parameters\n* cores: number of cores to use\n* averaginSteps: number of averaging steps\n* a: constant, 4 in paper\n* delta: constant, 0.1 in paper\n\nThis code uses the adaptive Hamlitonain Monte Carlo described in \"Adaptive Hamiltonian and Riemann Manifold Monte Carlo Samplers\" by Wang, Mohamed, and de Freitas. In accordance with this paper there are a few more paramaters that can be adjusted, though it is recomended that their default values are kept.\n\nAfter initializaing the HMC, we must declare the likelihood that we want to use as well as any metrics. This can be accomplished through the following code:\n\n```\n# Declare Gaussian Likelihood with sd of 0.1\nlikelihood =  GaussianLikelihood(sd = 0.1)\nmetricList = [ #Declare metrics\n    SquaredError(mean = 0, sd = 1, scaleExp = False),\n    PercentError(mean = 10, sd = 2, scaleExp = True)]\n```\n\n\nThe last thing to do is actually tell the model to start learning this is done with the following command:\n\n```\nnetwork.train(\n        epochs, # epochs to train for\n        samplingStep, # increment between network saves\n        likelihood,\n        metricList = metricList,\n        folderName = \"Regression\", \n        # Name of folder for saved networks\n        networksPerFile=50)\n        # Number of networks saved per file\n```\n\nThe arguments have the following meanings:\n\n* Epochs: Number of training cycles\n* samplingStep: Epochs between sampled networks\n* likelihood: The likelihood function used to evaluate the prediction \n              we defined previously\n* startSigma: Starting standard deviation for likelihood function\n              for regression models\n* folderName: name of folder for saved networks\n* networksPerFile: number of networks saved in a given file\n\nOnce the network has trained, which may take a while, the saved networks can be loaded and then used to make predictions using the following code:\n\n```\nfrom TensorBNN.predictor import predictor \n\nnetwork = predictor(filePath,\n                    dtype = dtype, \n                    # data type used by network\n                    customLayerDict={\"dense2\": Dense2},\n                    # A dense layer with a different \n                    # hyperprior\n                    likelihood = Likelihood)\n                    # The likelihood function is required to  \n                    # calculate the probabilities for \n                    # re-weighting\n\ninitialResults = network.predict(inputData, skip, dtype)\n```\n\nThe variable filePath is the directory from which the networks are being loaded, inputData is the normalized data for which predictions should be made, and dtype is the data type to be used for predictions. The customLayerDict is a dictionary holding the names and objects for any user defined layers. Likelihood is the likelihood function used to train the model.\n\nThe variable initialResults will be a list of numpy arrays, each numpy array corresponding to the predcitions from a single network in the BNN. The skip variable instructs the predictor to only use every n networks, where n=skip\n\nAdditionally, the predictor function allows for the calculation of the autocorrelation between different networks, as well as the autocorrelation length through:\n\n```\nautocorrelations = network.autocorrelation(testData, nMax)\nautocorrelations = network.autoCorrelationLength(testData, nMax)\n```\nHere, the autocorrelation is calculated based on the predictions of the different BNNs, and the results are averaged over the test data. nMax provides the largest lag value for the autocorrelation. These calculations are done with emcee.\n\n\nFinally, the predictor object can calculate new weights for the different networks if they were given new priors. These priors take the form of new Layer objects which must be referenced in an architecture file. The reweighting function call looks like this:\n\n```\nweights = network.reweight(                                            \n                    trainX, # training input\n                    trainY, # training output\n                    skip = 10, # Use every 10 saved networks\n                    architecture = \"architecture2.txt\")\n                    # New architecture file\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://alpha-davidson.github.io/TensorBNN/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tensorBNN",
    "package_url": "https://pypi.org/project/tensorBNN/",
    "platform": "",
    "project_url": "https://pypi.org/project/tensorBNN/",
    "project_urls": {
      "Homepage": "https://alpha-davidson.github.io/TensorBNN/"
    },
    "release_url": "https://pypi.org/project/tensorBNN/0.12.3/",
    "requires_dist": [
      "emcee (>=3.0.2)",
      "scipy (>=1.4.1)"
    ],
    "requires_python": "<3.8.0",
    "summary": "A Bayesian Neural Network implementation in TensorFlow",
    "version": "0.12.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8628876,
  "releases": {
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d25f6fd23c1de870c75943d2c2e9176908f4c96423995da6100634a42c58e7e",
          "md5": "98fa650068da232be91ef4cdf7a5c603",
          "sha256": "a5d6642fe5d68d45e025dfb86a6fd505309659c4e3d1ad44c859e1dba9c23490"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.10.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98fa650068da232be91ef4cdf7a5c603",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8.0",
        "size": 25017,
        "upload_time": "2020-09-22T12:56:21",
        "upload_time_iso_8601": "2020-09-22T12:56:21.348352Z",
        "url": "https://files.pythonhosted.org/packages/0d/25/f6fd23c1de870c75943d2c2e9176908f4c96423995da6100634a42c58e7e/tensorBNN-0.10.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b2954e3dd4b0550b3462693e852c664434041c6a95f021ba9bd2da09bfb0d19",
          "md5": "986a17f46e007e526136d19ee338022c",
          "sha256": "613ddb877613d76146a9237bb230cfedb7818875cb27e44f37d4670014cc4e51"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "986a17f46e007e526136d19ee338022c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8.0",
        "size": 23753,
        "upload_time": "2020-09-22T12:56:22",
        "upload_time_iso_8601": "2020-09-22T12:56:22.400322Z",
        "url": "https://files.pythonhosted.org/packages/8b/29/54e3dd4b0550b3462693e852c664434041c6a95f021ba9bd2da09bfb0d19/tensorBNN-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7aaa240807db23bf8b004ef7d418897f7ada08f36600cfe86588beee2ed84622",
          "md5": "f7e426bc5a845b8d18c758d48d0c2bd0",
          "sha256": "bbf43f5f339fe9efee57d7e02648df848de30609b9f2236d1928b9a2c722f42e"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7e426bc5a845b8d18c758d48d0c2bd0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8.0",
        "size": 25157,
        "upload_time": "2020-09-27T02:03:38",
        "upload_time_iso_8601": "2020-09-27T02:03:38.376040Z",
        "url": "https://files.pythonhosted.org/packages/7a/aa/240807db23bf8b004ef7d418897f7ada08f36600cfe86588beee2ed84622/tensorBNN-0.11.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ffa1d2baaf635dc30ca985379ebe273707b241e52f504d623b95b98d37ae579",
          "md5": "fc7ba2640f7b247fd78dd32a76d62548",
          "sha256": "90aef8ca05c52c6d7501b5f570cf3a37f153e5a9fda87d4096db49feba836761"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fc7ba2640f7b247fd78dd32a76d62548",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8.0",
        "size": 23966,
        "upload_time": "2020-09-27T02:03:39",
        "upload_time_iso_8601": "2020-09-27T02:03:39.591564Z",
        "url": "https://files.pythonhosted.org/packages/0f/fa/1d2baaf635dc30ca985379ebe273707b241e52f504d623b95b98d37ae579/tensorBNN-0.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae710c9a33522ca131abfed5ec376648cba005b2664b409f99afd0f33c21be5f",
          "md5": "34cf58a125d01d2a8ae5f51f37c90446",
          "sha256": "a0c96780c3a91f51bdcacb2e66633a082d1a3e950c15f7405d9443d4eb915b1c"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34cf58a125d01d2a8ae5f51f37c90446",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8.0",
        "size": 25120,
        "upload_time": "2020-09-27T02:21:47",
        "upload_time_iso_8601": "2020-09-27T02:21:47.578079Z",
        "url": "https://files.pythonhosted.org/packages/ae/71/0c9a33522ca131abfed5ec376648cba005b2664b409f99afd0f33c21be5f/tensorBNN-0.11.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71760696bff508ab95b612d3b3fa3844f6aa90f4d60933670098ada1b566e865",
          "md5": "cc799734c31dd52beb26418ff3d928f1",
          "sha256": "6c9b2a6399e543e48dade3be8bb8bce720f7ceefede2d07d414d1d6b1b5aa773"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cc799734c31dd52beb26418ff3d928f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8.0",
        "size": 23949,
        "upload_time": "2020-09-27T02:21:48",
        "upload_time_iso_8601": "2020-09-27T02:21:48.497796Z",
        "url": "https://files.pythonhosted.org/packages/71/76/0696bff508ab95b612d3b3fa3844f6aa90f4d60933670098ada1b566e865/tensorBNN-0.11.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fae343833a9bda581f96a61d50167a7dcf783ecea3b694973a8e2bf49b762fa9",
          "md5": "128b23561744f60dbdb8c3ca83dfc123",
          "sha256": "aa050e4de84dfb2735845f3ce9aa8a688da2d44c1256a86116aaa95069eae95b"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "128b23561744f60dbdb8c3ca83dfc123",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8.0",
        "size": 25137,
        "upload_time": "2020-09-27T02:43:13",
        "upload_time_iso_8601": "2020-09-27T02:43:13.770561Z",
        "url": "https://files.pythonhosted.org/packages/fa/e3/43833a9bda581f96a61d50167a7dcf783ecea3b694973a8e2bf49b762fa9/tensorBNN-0.11.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "859ebfe070b02f4eab174fff3b68f698f8e49bd835b948cb5c63263a43305739",
          "md5": "1eb224480c9d7d630bba922dc53aa305",
          "sha256": "f00d3dfbeb881eb02950f480427f403ce423aa5a1b4aab632a5a0e4bbbbdb4bd"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1eb224480c9d7d630bba922dc53aa305",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8.0",
        "size": 23981,
        "upload_time": "2020-09-27T02:43:14",
        "upload_time_iso_8601": "2020-09-27T02:43:14.690487Z",
        "url": "https://files.pythonhosted.org/packages/85/9e/bfe070b02f4eab174fff3b68f698f8e49bd835b948cb5c63263a43305739/tensorBNN-0.11.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dabc0b8e45ce8e07744319158cc31dd872128e27ffa9b341457873d3a92ac894",
          "md5": "6557e4aa230a8a66ed7bb9d531512bc1",
          "sha256": "cbc636a249c73c39a5dc282947db9cf231db2003b40b7a81d0d4d50fbc19d709"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6557e4aa230a8a66ed7bb9d531512bc1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8.0",
        "size": 25118,
        "upload_time": "2020-09-27T03:11:48",
        "upload_time_iso_8601": "2020-09-27T03:11:48.759521Z",
        "url": "https://files.pythonhosted.org/packages/da/bc/0b8e45ce8e07744319158cc31dd872128e27ffa9b341457873d3a92ac894/tensorBNN-0.11.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b01c93f3edd31990ed057325e20817c2a95cc56a49695e87f737a6065ca98b50",
          "md5": "701f3012c27c08c3271d848aef880398",
          "sha256": "25e75e0738c9bef52e898431f351998ab811d2edeb5e427f5ba693388cf8db3a"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.3.tar.gz",
        "has_sig": false,
        "md5_digest": "701f3012c27c08c3271d848aef880398",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8.0",
        "size": 23955,
        "upload_time": "2020-09-27T03:11:49",
        "upload_time_iso_8601": "2020-09-27T03:11:49.951897Z",
        "url": "https://files.pythonhosted.org/packages/b0/1c/93f3edd31990ed057325e20817c2a95cc56a49695e87f737a6065ca98b50/tensorBNN-0.11.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "327ffee25348d49eda5123291f458bba556ab573a87f32c8fd28e3aed6466eba",
          "md5": "658811452328cc0fee325cd3f4b2c41b",
          "sha256": "ee4bb92a25345c68eab5e33f054733f86bcf352e578d1e7a84ebe7db00f40db3"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "658811452328cc0fee325cd3f4b2c41b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8.0",
        "size": 25230,
        "upload_time": "2020-10-04T02:07:22",
        "upload_time_iso_8601": "2020-10-04T02:07:22.053587Z",
        "url": "https://files.pythonhosted.org/packages/32/7f/fee25348d49eda5123291f458bba556ab573a87f32c8fd28e3aed6466eba/tensorBNN-0.11.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "330380843692bdfeec3285e267226a1839355658338bfd31e0a00bf57cde16b2",
          "md5": "046a39739c6f506fded3f05c66f19b33",
          "sha256": "830d052e1783b15f6fef714872a13f46d527430604fab499bfc8dcdd7ea3bc2a"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.4.tar.gz",
        "has_sig": false,
        "md5_digest": "046a39739c6f506fded3f05c66f19b33",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8.0",
        "size": 24082,
        "upload_time": "2020-10-04T02:07:23",
        "upload_time_iso_8601": "2020-10-04T02:07:23.218781Z",
        "url": "https://files.pythonhosted.org/packages/33/03/80843692bdfeec3285e267226a1839355658338bfd31e0a00bf57cde16b2/tensorBNN-0.11.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58e3d54fc789faa15b45f366fd541c79d2dbcbcc388b5bd6de88341d4167c3d9",
          "md5": "69806677c4003e0e55678b27e69d5a81",
          "sha256": "5c98d2620b531f09652f276425e926b83aaa3c2525406662fafcf3fd4ddf0806"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69806677c4003e0e55678b27e69d5a81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8.0",
        "size": 25230,
        "upload_time": "2020-10-04T02:28:42",
        "upload_time_iso_8601": "2020-10-04T02:28:42.324220Z",
        "url": "https://files.pythonhosted.org/packages/58/e3/d54fc789faa15b45f366fd541c79d2dbcbcc388b5bd6de88341d4167c3d9/tensorBNN-0.11.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0f64d1383034e1456626eaf9a6a6e116469d57398ac4efb41022074c8564e80",
          "md5": "9c59a28479549f3cb200c1213e6e80e5",
          "sha256": "e24a1323aa35c4d5f9a0d317de9096c72c960bdef0a0f64e1c4fe266f908282d"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9c59a28479549f3cb200c1213e6e80e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8.0",
        "size": 24082,
        "upload_time": "2020-10-04T02:28:43",
        "upload_time_iso_8601": "2020-10-04T02:28:43.372916Z",
        "url": "https://files.pythonhosted.org/packages/e0/f6/4d1383034e1456626eaf9a6a6e116469d57398ac4efb41022074c8564e80/tensorBNN-0.11.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4e3f6b1857bc9056e1fea5a25f822d619a5459221b45196b4dbbeffe005fc9d",
          "md5": "f97216a30fd06ff4a2166747f3d30aa2",
          "sha256": "bf6e64096ac3c82a4794cc7961b86153194c22e6b908e8edb61bf356764a1945"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f97216a30fd06ff4a2166747f3d30aa2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8.0",
        "size": 25234,
        "upload_time": "2020-10-04T17:20:09",
        "upload_time_iso_8601": "2020-10-04T17:20:09.332081Z",
        "url": "https://files.pythonhosted.org/packages/d4/e3/f6b1857bc9056e1fea5a25f822d619a5459221b45196b4dbbeffe005fc9d/tensorBNN-0.11.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69831dc233b88d477fa7e6a85128ec5901e6f7d8fc0a94b94178a766bcc83078",
          "md5": "c981c4988ae392d28cb854e0abcbf58a",
          "sha256": "6371d6f19d6ceca3bcb28a55fbeb687b5978d5021c1f4831b1e3b04042ba7fcc"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.11.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c981c4988ae392d28cb854e0abcbf58a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8.0",
        "size": 24088,
        "upload_time": "2020-10-04T17:20:10",
        "upload_time_iso_8601": "2020-10-04T17:20:10.602367Z",
        "url": "https://files.pythonhosted.org/packages/69/83/1dc233b88d477fa7e6a85128ec5901e6f7d8fc0a94b94178a766bcc83078/tensorBNN-0.11.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26889832849ed61ec06b44ada32a0aa48d54fc264b13d94c6a108f4e4ce3b6b3",
          "md5": "be6368eada76851a79b9ebb3d152cded",
          "sha256": "34178bf0570dc55a47159a733b2f6f360d600f0d00c33b00273f7af25ab93b4f"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.12.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be6368eada76851a79b9ebb3d152cded",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8.0",
        "size": 25474,
        "upload_time": "2020-10-22T02:47:36",
        "upload_time_iso_8601": "2020-10-22T02:47:36.199608Z",
        "url": "https://files.pythonhosted.org/packages/26/88/9832849ed61ec06b44ada32a0aa48d54fc264b13d94c6a108f4e4ce3b6b3/tensorBNN-0.12.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5ac93198177733e4d743c15e77db73bdf7d5f85078fd8ede3c0a169b20f7075",
          "md5": "078cd7025af9419bdb5b447b2692b15f",
          "sha256": "a16915d5eb44f0046a0754f9acf5063812d4c23c9d1c8ca9ce8a982733ae7b83"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.12.0.tar.gz",
        "has_sig": false,
        "md5_digest": "078cd7025af9419bdb5b447b2692b15f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8.0",
        "size": 24284,
        "upload_time": "2020-10-22T02:47:37",
        "upload_time_iso_8601": "2020-10-22T02:47:37.339486Z",
        "url": "https://files.pythonhosted.org/packages/a5/ac/93198177733e4d743c15e77db73bdf7d5f85078fd8ede3c0a169b20f7075/tensorBNN-0.12.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23a6d5ec742161a972de9a0ba151b6e220800e7dcb250b6c28381a910f1906ae",
          "md5": "854b92607a2ed864492e4a7ac2a935cd",
          "sha256": "161b25fd852526f56cc7fca8e610867dbce63e78599c43eccc8b7de92a5d1a83"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.12.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "854b92607a2ed864492e4a7ac2a935cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8.0",
        "size": 25744,
        "upload_time": "2020-10-22T02:51:17",
        "upload_time_iso_8601": "2020-10-22T02:51:17.555570Z",
        "url": "https://files.pythonhosted.org/packages/23/a6/d5ec742161a972de9a0ba151b6e220800e7dcb250b6c28381a910f1906ae/tensorBNN-0.12.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4f0266740feba2a811f19e0542e9d3c8014bc286e3f84fcc228b9867003982b",
          "md5": "220e0dc7f8fc03764e1ffff13c024f60",
          "sha256": "0a151c01d7d0f54cc2b8bb1f4beb4b169c295abd74e47250e992a5acd7a32001"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.12.1.tar.gz",
        "has_sig": false,
        "md5_digest": "220e0dc7f8fc03764e1ffff13c024f60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8.0",
        "size": 24797,
        "upload_time": "2020-10-22T02:51:18",
        "upload_time_iso_8601": "2020-10-22T02:51:18.508094Z",
        "url": "https://files.pythonhosted.org/packages/f4/f0/266740feba2a811f19e0542e9d3c8014bc286e3f84fcc228b9867003982b/tensorBNN-0.12.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9c0e2504e7cc94caaecf8a024bee955b4eef510be00f90effbc2cee7520d109",
          "md5": "23e4c402dc586affa7cc919c4857c553",
          "sha256": "69cf8ef3a904b7675a3338650b35b30c35f89abb6e830240eb0badf99b076c73"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.12.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23e4c402dc586affa7cc919c4857c553",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8.0",
        "size": 25691,
        "upload_time": "2020-11-11T01:49:54",
        "upload_time_iso_8601": "2020-11-11T01:49:54.863156Z",
        "url": "https://files.pythonhosted.org/packages/d9/c0/e2504e7cc94caaecf8a024bee955b4eef510be00f90effbc2cee7520d109/tensorBNN-0.12.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0f817008ca63ce64125f9b4105bc07dac6d723efcfe3d0c487e4b39205d1007",
          "md5": "f92c52ac8a98604b598d2f426b830ec9",
          "sha256": "3c998af9528adbe95588002a6e509c08e62b88b9323c5139f30c59392d3973bf"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.12.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f92c52ac8a98604b598d2f426b830ec9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8.0",
        "size": 24686,
        "upload_time": "2020-11-11T01:49:55",
        "upload_time_iso_8601": "2020-11-11T01:49:55.882116Z",
        "url": "https://files.pythonhosted.org/packages/f0/f8/17008ca63ce64125f9b4105bc07dac6d723efcfe3d0c487e4b39205d1007/tensorBNN-0.12.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f3e9847567c89efb60e82ab8fec537a32b276f5eb5640805405621442b9a030",
          "md5": "5d666c17e9d74b721d41c29a3dcbc8f3",
          "sha256": "e3a17c78f53a8cd5c1fedca32a7558ad81ad0234624d32d9bc1106d418652996"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.12.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d666c17e9d74b721d41c29a3dcbc8f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8.0",
        "size": 25682,
        "upload_time": "2020-11-11T02:01:59",
        "upload_time_iso_8601": "2020-11-11T02:01:59.860954Z",
        "url": "https://files.pythonhosted.org/packages/3f/3e/9847567c89efb60e82ab8fec537a32b276f5eb5640805405621442b9a030/tensorBNN-0.12.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b810d90f550cee13c9976a087e5f1e4643deba953fc666130e13cbf95e966df4",
          "md5": "1e9925ba7a9f411e8e2b29b4a207737f",
          "sha256": "00c706273aadf7f14ebb8327cbec0f0b4fe670f26bba3d25b474246b6f314bd5"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.12.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1e9925ba7a9f411e8e2b29b4a207737f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8.0",
        "size": 24690,
        "upload_time": "2020-11-11T02:02:01",
        "upload_time_iso_8601": "2020-11-11T02:02:01.031212Z",
        "url": "https://files.pythonhosted.org/packages/b8/10/d90f550cee13c9976a087e5f1e4643deba953fc666130e13cbf95e966df4/tensorBNN-0.12.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5aeaa2a13743d832c9332c24721eb4db0e898a91a40d5eaff5f34711d29f26c4",
          "md5": "6352de303c64fa836be964f30ca971d0",
          "sha256": "b300057f6f8ff2780060400ef1cbb1dbc0f77eaafcfb81ca4d7913147b8e0018"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6352de303c64fa836be964f30ca971d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.8.0",
        "size": 20763,
        "upload_time": "2020-06-12T17:19:14",
        "upload_time_iso_8601": "2020-06-12T17:19:14.133698Z",
        "url": "https://files.pythonhosted.org/packages/5a/ea/a2a13743d832c9332c24721eb4db0e898a91a40d5eaff5f34711d29f26c4/tensorBNN-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2da7b349c9f97a585fe83e2cb5bcca0ca41ace5242a92a04ffbbcdf7c4432d6e",
          "md5": "a774a6efbcacc8dd09b42d7aaf074d25",
          "sha256": "f19c1cdf9ffad729f0f1e3d2ac65bbb66a0a961f4ae8d9395acd49103aa15c1f"
        },
        "downloads": -1,
        "filename": "tensorBNN-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a774a6efbcacc8dd09b42d7aaf074d25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.8.0",
        "size": 17441,
        "upload_time": "2020-06-12T17:19:16",
        "upload_time_iso_8601": "2020-06-12T17:19:16.013824Z",
        "url": "https://files.pythonhosted.org/packages/2d/a7/b349c9f97a585fe83e2cb5bcca0ca41ace5242a92a04ffbbcdf7c4432d6e/tensorBNN-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f3e9847567c89efb60e82ab8fec537a32b276f5eb5640805405621442b9a030",
        "md5": "5d666c17e9d74b721d41c29a3dcbc8f3",
        "sha256": "e3a17c78f53a8cd5c1fedca32a7558ad81ad0234624d32d9bc1106d418652996"
      },
      "downloads": -1,
      "filename": "tensorBNN-0.12.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5d666c17e9d74b721d41c29a3dcbc8f3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "<3.8.0",
      "size": 25682,
      "upload_time": "2020-11-11T02:01:59",
      "upload_time_iso_8601": "2020-11-11T02:01:59.860954Z",
      "url": "https://files.pythonhosted.org/packages/3f/3e/9847567c89efb60e82ab8fec537a32b276f5eb5640805405621442b9a030/tensorBNN-0.12.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b810d90f550cee13c9976a087e5f1e4643deba953fc666130e13cbf95e966df4",
        "md5": "1e9925ba7a9f411e8e2b29b4a207737f",
        "sha256": "00c706273aadf7f14ebb8327cbec0f0b4fe670f26bba3d25b474246b6f314bd5"
      },
      "downloads": -1,
      "filename": "tensorBNN-0.12.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1e9925ba7a9f411e8e2b29b4a207737f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<3.8.0",
      "size": 24690,
      "upload_time": "2020-11-11T02:02:01",
      "upload_time_iso_8601": "2020-11-11T02:02:01.031212Z",
      "url": "https://files.pythonhosted.org/packages/b8/10/d90f550cee13c9976a087e5f1e4643deba953fc666130e13cbf95e966df4/tensorBNN-0.12.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}