{
  "info": {
    "author": "Patrick Leser",
    "author_email": "patrick.e.leser@nasa.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "SMCPy - **S**equential **M**onte **C**arlo with **Py**thon \r\n==========================================================================\r\n[![Build Status](https://travis-ci.com/nasa/SMCPy.svg?branch=master)](https://travis-ci.com/nasa/SMCPy) &nbsp;[![Coverage Status](https://coveralls.io/repos/github/nasa/SMCPy/badge.svg?branch=master)](https://coveralls.io/github/nasa/SMCPy?branch=master)\r\n\r\n\r\n## Description\r\nSMCPy is an open-source package for performing uncertainty quantification using\r\na parallelized sequential Monte Carlo sampler.\r\n\r\n## Key Features\r\n* Alternative to Markov chain Monte Carlo for Bayesian inference problems\r\n* Unbiased estimation of marginal likelihood for Bayesian model selection\r\n* Parallelization through either numpy vectorization or mpi4py\r\n\r\n# Quick Start\r\n\r\n## Installation\r\nTo install SMCPy, use pip.\r\n```sh\r\npip install smcpy\r\n```\r\n\r\n## Overview\r\nTo operate the code, the user supplies a computational model built in Python\r\n3.6+, defines prior distributions for each of the model parameters to be\r\nestimated, and provides data to be used for probabilistic model calibration. SMC\r\nsampling of the parameter posterior distribution can then be conducted with ease\r\nthrough instantiation of a sampler class and a call to the sample() method.\r\n\r\nThe two primary sampling algorithms implemented in this package are MPI-enabled\r\nversions of those presented in the following articles, respectively:\r\n> Nguyen, Thi Le Thu, et al. \"Efficient sequential Monte-Carlo samplers for Bayesian\r\n> inference.\" IEEE Transactions on Signal Processing 64.5 (2015): 1305-1319.\r\n[Link to Article](https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7339702) | [BibTeX Reference](https://scholar.googleusercontent.com/scholar.bib?q=info:L7AZJvppx1MJ:scholar.google.com/&output=citation&scisdr=CgUT24-FENXorVVNYK0:AAGBfm0AAAAAXYJIeK1GJKW947imCXoXAkfc7yZjQ7Oo&scisig=AAGBfm0AAAAAXYJIeNYSGEVCrlauowP6jMwVMHB_blTp&scisf=4&ct=citation&cd=-1&hl=en)\r\n\r\n\r\n> Buchholz, Alexander, Nicolas Chopin, and Pierre E. Jacob. \"Adaptive tuning of\r\n> hamiltonian monte carlo within sequential monte carlo.\" Bayesian Analysis\r\n> 1.1 (2021): 1-27.\r\n[Link to Article](https://projecteuclid.org/journals/bayesian-analysis/advance-publication/Adaptive-Tuning-of-Hamiltonian-Monte-Carlo-Within-Sequential-Monte-Carlo/10.1214/20-BA1222.full) | [BibTeX Reference](https://scholar.googleusercontent.com/scholar.bib?q=info:wkjyyAN3q3UJ:scholar.google.com/&output=citation&scisdr=CgUA1gUaENXokaHu_K0:AAGBfm0AAAAAYXbr5K0e7EUBTRYw-hgqrmqC-G0ghzIo&scisig=AAGBfm0AAAAAYXbr5FfqGNe5PbrfGSvhMKzBoUbwdXDH&scisf=4&ct=citation&cd=-1&hl=en)\r\n\r\nThe first is a simple likelihood tempering approach in which the tempering\r\nsequence is fixed and user-specified\r\n([FixedSampler](https://github.com/nasa/SMCPy/blob/8b7813106de077c80992ba37d2d85944d6cce40c/smcpy/samplers.py#L44)).\r\nThe second is an adaptive approach that chooses the tempering steps based on a\r\ntarget effective sample size ([AdaptiveSampler](https://github.com/nasa/SMCPy/blob/8b7813106de077c80992ba37d2d85944d6cce40c/smcpy/samplers.py#L92)).\r\n\r\nThis software was funded by and developed under the High Performance Computing\r\nIncubator (HPCI) at NASA Langley Research Center.\r\n\r\n## Example Usage\r\n\r\n```python\r\nimport numpy as np\r\n\r\nfrom scipy.stats import uniform\r\n\r\nfrom spring_mass_model import SpringMassModel\r\nfrom smcpy.utils.plotter import plot_pairwise\r\nfrom smcpy import AdaptiveSampler, VectorMCMC, VectorMCMCKernel\r\n\r\n\r\n# Load data\r\nstd_dev = 0.5\r\ndisplacement_data = np.genfromtxt('noisy_data.txt')\r\n\r\n# Define prior distributions & MCMC kernel\r\npriors = [uniform(0, 10), uniform(0, 10)]\r\nvector_mcmc = VectorMCMC(model.evaluate, displacement_data, priors, std_dev)\r\nmcmc_kernel = VectorMCMCKernel(vector_mcmc, param_order=('K', 'g'))\r\n\r\n# SMC sampling\r\nsmc = AdaptiveSampler(mcmc_kernel)\r\nstep_list, mll_list = smc.sample(num_particles=500, num_mcmc_samples=5, target_ess=0.8)\r\n\r\n# Display results\r\nprint(f'parameter means = {step_list[-1].compute_mean()}')\r\nplot_pairwise(step_list[-1].params, step_list[-1].weights, save=True,\r\n              param_labels=['K', 'g'])\r\n```\r\n\r\nThe above code produces probabilistic estimates of K, the spring stiffness\r\ndivided by mass, and g, the gravitational constant on some unknown planet.\r\nThese estimates are in the form of weighted particles and can be visualized by\r\nplotting the pairwise weights as shown below. The mean of each parameter is\r\nmarked by the dashed red line. The true values for this example were K = 1.67\r\nand g = 4.62. More details can be found in the [spring mass\r\nexample](https://github.com/nasa/SMCPy/blob/main/examples/spring_mass/run_example.py). To run this model in\r\nparallel using MPI, the MCMC kernel just needs to be built with the\r\nParallelMCMC class in place of VectorMCMC. More details can be found in the\r\n[MPI example](https://github.com/nasa/SMCPy/blob/main/examples/mpi_example/run_example.py).\r\n\r\n<p align=\"center\">\r\n<img src=\"https://github.com/nasa/SMCPy/blob/main/examples/spring_mass/spring_mass_smc_example.png\" width=\"400\" alt=\"Pairwise plot\"/>\r\n</p>\r\n\r\nTo run this model in parallel using MPI, the MCMC kernel just needs to be built\r\nwith the ParallelMCMC class in place of VectorMCMC. More details can be found\r\nin the MPI example (smcpy/examples/mpi_example/).\r\n\r\nTests\r\n-----\r\n\r\nClone the repo and move into the package directory:\r\n\r\n```sh\r\ngit clone https://github.com/nasa/SMCPy.git\r\ncd SMCPy\r\n```\r\n\r\nInstall requirements necessary to use SMCPy:\r\n\r\n```sh\r\npip install -r requirements.txt\r\n```\r\n\r\nOptionally, if you'd like to use the MPI-enabled parallel sampler, install the\r\nassociated requirements:\r\n\r\n```sh\r\npip install -r requirements_optional.txt\r\n```\r\n\r\nAdd SMCPy to your Python path. For example:\r\n\r\n```sh\r\nexport PYTHONPATH=\"$PYTHONPATH:/path/to/smcpy\"\r\n```\r\n\r\nRun the tests to ensure proper installation:\r\n\r\n```sh\r\npytest tests\r\n```\r\n\r\n## Contributing\r\n1.  Fork (<https://github.com/nasa/SMCPy/fork>)\r\n2.  Create your feature branch (`git checkout -b feature/fooBar`)\r\n3.  Commit your changes (`git commit -am 'Add some fooBar'`)\r\n4.  Push to the branch (`git push origin feature/fooBar`)\r\n5.  Create a Pull Request\r\n\r\n# Development\r\nNASA Langley Research Center <br /> \r\nHampton, Virginia <br /> \r\n\r\nThis software was funded by and developed under the High Performance Computing Incubator (HPCI) at NASA Langley Research Center. <br /> \r\n\r\n## Authors\r\n* Patrick Leser\r\n* Michael Wang\r\n\r\n# License\r\nNotices:\r\nCopyright 2018 United States Government as represented by the Administrator of\r\nthe National Aeronautics and Space Administration. No copyright is claimed in\r\nthe United States under Title 17, U.S. Code. All Other Rights Reserved.\r\n \r\nDisclaimers\r\nNo Warranty: THE SUBJECT SOFTWARE IS PROVIDED \"AS IS\" WITHOUT ANY WARRANTY OF\r\nANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED\r\nTO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY\r\nIMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR\r\nFREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR\r\nFREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM TO THE\r\nSUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER, CONSTITUTE AN\r\nENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT OF ANY RESULTS,\r\nRESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY OTHER APPLICATIONS\r\nRESULTING FROM USE OF THE SUBJECT SOFTWARE.  FURTHER, GOVERNMENT AGENCY\r\nDISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING THIRD-PARTY SOFTWARE, IF\r\nPRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES IT \"AS IS.\"\r\n \r\nWaiver and Indemnity:  RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS AGAINST THE\r\nUNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY\r\nPRIOR RECIPIENT.  IF RECIPIENT'S USE OF THE SUBJECT SOFTWARE RESULTS IN ANY\r\nLIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING FROM SUCH USE,\r\nINCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S\r\nUSE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE\r\nUNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY\r\nPRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW.  RECIPIENT'S SOLE REMEDY FOR\r\nANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL TERMINATION OF THIS\r\nAGREEMENT.\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nasa/SMCPy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "smcpy",
    "package_url": "https://pypi.org/project/smcpy/",
    "platform": null,
    "project_url": "https://pypi.org/project/smcpy/",
    "project_urls": {
      "Homepage": "https://github.com/nasa/SMCPy"
    },
    "release_url": "https://pypi.org/project/smcpy/0.1.5/",
    "requires_dist": null,
    "requires_python": "~=3.4",
    "summary": "A package for performing uncertainty quantification using a parallelized sequential Monte Carlo sampler.",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16639119,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5939fcb762dc3835f7250bbd88044c785558d4b6716ad12439c34519c0f06cd2",
          "md5": "69ba934561ce0ad9697931960b93a222",
          "sha256": "fe447709f8b6ed06a00ccadaf0e04ed0ddabb2f106067f2015773d8a0992798b"
        },
        "downloads": -1,
        "filename": "smcpy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "69ba934561ce0ad9697931960b93a222",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.4",
        "size": 32163,
        "upload_time": "2022-11-03T18:24:48",
        "upload_time_iso_8601": "2022-11-03T18:24:48.918995Z",
        "url": "https://files.pythonhosted.org/packages/59/39/fcb762dc3835f7250bbd88044c785558d4b6716ad12439c34519c0f06cd2/smcpy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83452b7f0cd3d093638d95d7ff6f8fd818ee4d2e79fc01ec01138eee3bca221e",
          "md5": "05a3823bbe0c06e42b48b50e32ca8bfd",
          "sha256": "4fc94d1ee18aa37eedb9c9f53b5ee3229e56fa1f4d73b0851690ff38d3e12934"
        },
        "downloads": -1,
        "filename": "smcpy-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "05a3823bbe0c06e42b48b50e32ca8bfd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.4",
        "size": 32190,
        "upload_time": "2022-11-03T18:39:39",
        "upload_time_iso_8601": "2022-11-03T18:39:39.929253Z",
        "url": "https://files.pythonhosted.org/packages/83/45/2b7f0cd3d093638d95d7ff6f8fd818ee4d2e79fc01ec01138eee3bca221e/smcpy-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00169d3b950a30a3e2bc5cf137d1d3a22cae4bb47079d09cd5c74b88f54c6b39",
          "md5": "c08f9b0401cff60c353fc2833e108bcc",
          "sha256": "d94c945f2deed1ced6298d86a41ef25de646d2f7fb28d470d302727b74896ca0"
        },
        "downloads": -1,
        "filename": "smcpy-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c08f9b0401cff60c353fc2833e108bcc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.4",
        "size": 32196,
        "upload_time": "2022-11-03T18:41:11",
        "upload_time_iso_8601": "2022-11-03T18:41:11.189627Z",
        "url": "https://files.pythonhosted.org/packages/00/16/9d3b950a30a3e2bc5cf137d1d3a22cae4bb47079d09cd5c74b88f54c6b39/smcpy-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a933fc5ec4af9a9db2339150dfbb69f9b34c6ed621dbeaafdb2a98c1e10a95f",
          "md5": "10a6ad7b8863aa6858268b07d5b84bdd",
          "sha256": "21df7995cf36eb6b6862897e998c902d915e1ebb59ca7b076b1cb7a832850eeb"
        },
        "downloads": -1,
        "filename": "smcpy-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "10a6ad7b8863aa6858268b07d5b84bdd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.4",
        "size": 32199,
        "upload_time": "2022-11-03T18:51:22",
        "upload_time_iso_8601": "2022-11-03T18:51:22.968587Z",
        "url": "https://files.pythonhosted.org/packages/4a/93/3fc5ec4af9a9db2339150dfbb69f9b34c6ed621dbeaafdb2a98c1e10a95f/smcpy-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa0ec8b0acd80586bc56aeb60706eb18e45acd3c805445451fb94fda84049c85",
          "md5": "5a77a792de0491f24e53b17a621b0e0c",
          "sha256": "aefe61a3376a7ec2dca838f7c9741a3e0c15985b55ef51f5e2576eb5019c49ca"
        },
        "downloads": -1,
        "filename": "smcpy-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5a77a792de0491f24e53b17a621b0e0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.4",
        "size": 32341,
        "upload_time": "2023-01-31T19:50:05",
        "upload_time_iso_8601": "2023-01-31T19:50:05.069263Z",
        "url": "https://files.pythonhosted.org/packages/fa/0e/c8b0acd80586bc56aeb60706eb18e45acd3c805445451fb94fda84049c85/smcpy-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa0ec8b0acd80586bc56aeb60706eb18e45acd3c805445451fb94fda84049c85",
        "md5": "5a77a792de0491f24e53b17a621b0e0c",
        "sha256": "aefe61a3376a7ec2dca838f7c9741a3e0c15985b55ef51f5e2576eb5019c49ca"
      },
      "downloads": -1,
      "filename": "smcpy-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "5a77a792de0491f24e53b17a621b0e0c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.4",
      "size": 32341,
      "upload_time": "2023-01-31T19:50:05",
      "upload_time_iso_8601": "2023-01-31T19:50:05.069263Z",
      "url": "https://files.pythonhosted.org/packages/fa/0e/c8b0acd80586bc56aeb60706eb18e45acd3c805445451fb94fda84049c85/smcpy-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}