{
  "info": {
    "author": "SLAC National Accelerator Laboratory - Bennet Meyers",
    "author_email": "bennetm@stanford.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# pv-system-profiler\n### Estimating PV array location and orientation from real-world power datasets.\n\n<table>\n<tr>\n  <td>Latest Release</td>\n  <td>\n    <a href=\"https://pypi.org/project/pv-system-profiler/\">\n        <img src=\"https://img.shields.io/pypi/v/pv-system-profiler.svg\" alt=\"latest release\" />\n    </a>\n    <a href=\"https://anaconda.org/slacgismo/pv-system-profiler\">\n        <img src=\"https://anaconda.org/slacgismo/pv-system-profiler/badges/version.svg\" />\n    </a>\n    <a href=\"https://anaconda.org/slacgismo/pv-system-profiler\">\n        <img src=\"https://anaconda.org/slacgismo/pv-system-profiler/badges/latest_release_date.svg\" />\n    </a>\n</tr>\n<tr>\n  <td>License</td>\n  <td>\n    <a href=\"https://github.com/slacgismo/pv-system-profiler/blob/master/LICENSE\">\n        <img src=\"https://img.shields.io/pypi/l/pv-system-profiler.svg\" alt=\"license\" />\n    </a>\n</td>\n</tr>\n<tr>\n  <td>Build Status</td>\n  <td>\n    <a href=\"https://app.circleci.com/pipelines/github/slacgismo/pv-system-profiler\">\n        <img src=\"https://circleci.com/gh/slacgismo/pv-system-profiler.svg?style=svg\" alt=\"CircleCi build status\" />\n    </a>\n  </td>\n</tr>\n<tr>\n    <td>Code Quality</td>\n    <td>\n        <a href=\"https://lgtm.com/projects/g/slacgismo/pv-system-profiler/context:python\">\n            <img alt=\"Language grade: Python\" src=\"https://img.shields.io/lgtm/grade/python/g/slacgismo/pv-system-profiler.svg?logo=lgtm&logoWidth=18\"/>\n        </a>\n        <a href=\"https://lgtm.com/projects/g/slacgismo/pv-system-profiler/alerts/\">\n            <img alt=\"Total alerts\" src=\"https://img.shields.io/lgtm/alerts/g/slacgismo/pv-system-profiler.svg?logo=lgtm&logoWidth=18\"/>\n        </a>\n    </td>\n</tr>\n<tr>\n    <td>Publications</td>\n    <td>\n      <a href=\"https://zenodo.org/badge/latestdoi/183074637\">\n        <img src=\"https://zenodo.org/badge/183074637.svg\" alt=\"DOI\">\n      </a>\n    </td>\n</tr>\n<tr>\n    <td>PyPI Downloads</td>\n    <td>\n        <a href=\"https://pepy.tech/project/pv-system-profiler\">\n            <img src=\"https://img.shields.io/pypi/dm/pv-system-profiler\" alt=\"PyPI downloads\" />\n        </a>\n    </td>\n</tr>\n<tr>\n    <td>Conda Downloads</td>\n    <td>\n        <a href=\"https://anaconda.org/slacgismo/pv-system-profiler\">\n            <img src=\"https://anaconda.org/slacgismo/pv-system-profiler/badges/downloads.svg\" alt=\"conda-forge downloads\" />\n        </a>\n    </td>\n</tr>\n</table>\n\n## Install & Setup\n\n#### 1) Recommended: Set up `conda` environment with provided `.yml` file\n\nWe recommend setting up a fresh Python virtual environment in which to use `pv-system-profiler`. We recommend using the [Conda](https://docs.conda.io/projects/conda/en/latest/index.html) package management system, and creating an environment with the environment configuration file named `pvi-user.yml`, provided in the top level of this repository. This will install the `statistical-clear-sky` and `solar-data-tools` packages as well.\n\nCreating the env:\n\n```bash\n$ conda env create -f pvi-user.yml\n```\n\nStarting the env:\n\n```bash\n$ conda activate pvi_user\n```\n\nStopping the env\n\n```bash\n$ conda deactivate\n```\n\nAdditional documentation on setting up the Conda environment is available [here](https://github.com/slacgismo/pvinsight-onboarding/blob/main/README.md).\n\n\n#### 2) PIP Package\n\n```sh\n$ pip install pv-system-profiler\n```\n\nAlternative: Clone repo from GitHub\n\nMimic the pip package by setting up locally.\n\n```bash\n$ pip install -e path/to/root/folder\n```\n\n#### 3) Anaconda Package\n\n```sh\n$ conda install -c slacgismo pv-system-profiler\n```\n\n## Solver Dependencies\n\nRefer to [solar-data-tools](https://github.com/slacgismo/solar-data-tools) documentation to get more info about solvers being used.\n\n## Usage / Run Scripts\n### Serial run\nThe `parameter_estimation_script.py` script creates a report of all systems based on the `csv` files with the system signals located in a given folder.\nThe script takes all input parameters as `kwargs`. The example below illustrates the use of report_script:\n```shell\npython 'repository location of run script'/parameter_estimation_script.py report None all \ns3://s3_bucket_with_signals/ 'repeating_part_of label' /home/results.csv True False \nFalse False s3://'s3_path_to_file_containing_metadata/metadata.csv' None s3\n```\nIn the example above the full path to `parameter_estimation_script.py` is specified to run a\n`report`. The script allows to provide a `csv` file with list of sites to be analyzed. In this case no list is provided \nand therefore the `kwarg` `None` is entered. The script also allows to run an analysis on the first `n_files` containing \ninput signals in the `s3` repository. In this, case the `all` `kwarg` specifies that all input signals are to be analyzed. \nIn this example, all `csv` files containing the input signals are located in the `s3` bucket with the name \n`s3://s3_bucket_with_signals/`. Usually these `csv` files are of the form `ID_repeating_part_of_label.csv`, for example:\n`1_composite_10.csv`, `2_composite_10.csv`, where `_composite_10` is the repeating part of the label. The repeating part \nof the label is either None or a string as in the example above. Next, an absolute path to the desired location of the \nresults file is provided, in this case `/home/results.csv`. The two following `kwargs` are type Boolean and are used to set the \nvalues of the `correct_tz` and `fix_shifts` pipeline `kwargs`. The next  `kwarg`,  `check_json` is also Boolean. It \nis used to indicate if  there is a `json` file present in `s3://s3_bucket_with_signals/` with additional site information \nthat is  to be analyzed. The next Boolean `kwarg` is used to set the `convert_to_ts` `kwarg` when instantiating the data \nhandler.  The next `kawrg` contains the full path to the `csv` file containing site metadata, here called `metadata.csv`. \nThe information that this file should contain varies depending on the `estimation` to be performed. This file is \noptional and the `kwarg` can be set to `None`. For the case of a `report`, a `csv` file with columns labeled `site`, \n`system` and `gmt_offset` and their respective values need to be provided. Alternatively, if the `gmt_offset` `kwarg`, \nthe next `kwarg` (in the example above set to `None`), has a numeric \nvalue different to `None`, all sites will use that single value when running the report. For the case of the `report` \nestimation, the metadata file should contain `site`, `system` and `gmt_offset` columns with the respective\nvalues for each system. For the case of the `longitude` estimation, the metadata file should contain `site`, `system` \nand `latitude` columns with the respective values for each system. For the case of the `tilt_azimuth` estimation, the \nmetadata file should contain `site`, `system`, `gmt_offset`, `estimated_longitude` and `estimated_latitude`, `tilt`, \n`azimuth` columns and with the respective values for each system. Additionally, if a manual inspection for time shifts \nwas performed, another \ncolumn labeled `time_shift_manual` having a zero for systems with no time shift and ones for systems with time shift\nmay be included. If a `time_shift_manual` column is included, it will be used to determine whether the `fix_dst()` \nmethod is run after instantiating the data handler. The next `karg is` `gmt_offset` and in this case it is set to None. \nThe last kwarg corresponds to the `data_source`. In this case the value is `s3` since files with the input signals are\nlocated in an `s3` bucket.\n ## Partitioned run\nA script that runs the site report, the longitude, latitude and tilt and azimuth scripts using a number of prescribed \nAmazon Web Services (AWS), instances is provided. The script reads the folder containing the system signals and \npartitions these signals to run in  a `n` user prescribed AWS instances in parallel. Here is an example shell command \nfor a partitioned run:\n```shell\npython 'repository location of run script'/run_partition_script.py parameter_estimation_script.py report None all \ns3://s3_bucket_with_signals/ 'repeating_part_of label' /home/results.csv True False \nFalse False s3://'s3_path_to_file_containing_metadata/metadata.csv' None s3\n'repository location of run script'/parameter_estimation_script.py pvi-dev my_instance\n ```\nwhere the individual value of each kwarg are defined in run_partition_script.py. This script takes the same inputs as\nthe `parameter_estimation_script.py` plus three additional parameters. Note that the first kwarg is the partitioning \nscript repository location of run script `/run_partition_script.py parameter_estimation_script.py`. The estimation run\nscript `/parameter_estimation_script.p` is specified as the third to last kwarg. The second to last kwarg is the conda\nenviroment to be used to run the estimation, in this case `pvi-dev`. The last kwarg is the name of the AWS instances to\nbe used to run `run_partition_script.py`, in this case `my_instance`. Previous to running this command it is necessary to create `n` identical AWS \ninstances that correspond to the number of desired partitions. These instances need to have the same \n`Name='instance name'` AWS tag. The simplest way to accomplish this is by parting from an AWS  image of a  previously \nconfigured instance. This image needs to have all the  repositories and conda environments that \nwould be  needed in a serial run. Once each partitioned run is finished, results will be automatically collected in the \nlocal folder where `run_partition_script.py` was run. \n## Unit tests\n\nIn order to run unit tests:\n```\npython -m unittest -v\n```\n\n## Test Coverage\n\nIn order to view the current test coverage metrics:\n```\ncoverage run --source pvsystemprofiler -m unittest discover && coverage html\nopen htmlcov/index.html\n```\n\n## Versioning\n\nWe use [Semantic Versioning](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/slacgismo/pv-system-profiler/tags).\n\n## License\n\nThis project is licensed under the BSD 2-Clause License - see the [LICENSE](LICENSE) file for details\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/slacgismo/pv-system-profiler",
    "keywords": "solar pv photovoltaic",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pv-system-profiler",
    "package_url": "https://pypi.org/project/pv-system-profiler/",
    "platform": "",
    "project_url": "https://pypi.org/project/pv-system-profiler/",
    "project_urls": {
      "Bug Reports": "https://github.com/slacgismo/pv-system-profiler/issues",
      "Homepage": "https://github.com/slacgismo/pv-system-profiler"
    },
    "release_url": "https://pypi.org/project/pv-system-profiler/0.1.4/",
    "requires_dist": [
      "urllib3",
      "numpy (>=1.19.2)",
      "cvxpy (>=1.1.0)",
      "pykml",
      "pandas",
      "haversine",
      "matplotlib",
      "scipy",
      "scikit-learn",
      "jupyter",
      "boto3",
      "solar-data-tools",
      "check-manifest ; extra == 'dev'"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11716129,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76df4dd7234ba46a1323819bd0e29b25bc949bc7759e1f406f7e0a7f2093b038",
          "md5": "1df3bfb3253fb95cd27f9f7f9d6fa88f",
          "sha256": "6c8ef43ae0e24880ae0f9a56af5b96596b7a8dbe686e1689a8feda76d57cc3f6"
        },
        "downloads": -1,
        "filename": "pv_system_profiler-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1df3bfb3253fb95cd27f9f7f9d6fa88f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 57648,
        "upload_time": "2021-08-24T18:06:08",
        "upload_time_iso_8601": "2021-08-24T18:06:08.271594Z",
        "url": "https://files.pythonhosted.org/packages/76/df/4dd7234ba46a1323819bd0e29b25bc949bc7759e1f406f7e0a7f2093b038/pv_system_profiler-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf374bed01be1e92ab9b82363a9e99429f7fbe1cbb817101f759431c1dd4b4ce",
          "md5": "70a7af71961cf9fdc31f6d0d8d5c69e2",
          "sha256": "21a48903b2767c812c587a46d2d3550daca9abde407a7bc1e153fff1b9f5139c"
        },
        "downloads": -1,
        "filename": "pv-system-profiler-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "70a7af71961cf9fdc31f6d0d8d5c69e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 37769,
        "upload_time": "2021-08-24T18:06:10",
        "upload_time_iso_8601": "2021-08-24T18:06:10.758786Z",
        "url": "https://files.pythonhosted.org/packages/cf/37/4bed01be1e92ab9b82363a9e99429f7fbe1cbb817101f759431c1dd4b4ce/pv-system-profiler-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "366e8b9a3cf6ba1253e08d924a6ae57c45b144a128209f33364a655a726b89bc",
          "md5": "d7aa6ce80b6d2e9b40216e5b59ae915b",
          "sha256": "3cc8d8995ddef1cb84ae004db27aaf777fe7ba4b374a2ea33a79a1e21e79948f"
        },
        "downloads": -1,
        "filename": "pv_system_profiler-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7aa6ce80b6d2e9b40216e5b59ae915b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 57644,
        "upload_time": "2021-08-24T20:44:23",
        "upload_time_iso_8601": "2021-08-24T20:44:23.550783Z",
        "url": "https://files.pythonhosted.org/packages/36/6e/8b9a3cf6ba1253e08d924a6ae57c45b144a128209f33364a655a726b89bc/pv_system_profiler-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22cdc1585f9db5cd0f3a9af8039afa0d15fefcc6a09beca65f49cdd0eed67983",
          "md5": "90751074c8ac80a441d32565804521a7",
          "sha256": "9826181fe64d40732feeae94a978f47471f655f82a58305dd656a3d22b3564ba"
        },
        "downloads": -1,
        "filename": "pv-system-profiler-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "90751074c8ac80a441d32565804521a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 37767,
        "upload_time": "2021-08-24T20:44:25",
        "upload_time_iso_8601": "2021-08-24T20:44:25.154999Z",
        "url": "https://files.pythonhosted.org/packages/22/cd/c1585f9db5cd0f3a9af8039afa0d15fefcc6a09beca65f49cdd0eed67983/pv-system-profiler-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0520fe9b492c5b5173851649d05460184de9083438d5b4eb0ebb288bd0bbfe87",
          "md5": "d57e5ca4398c6d7cf39ca6be67ac2cba",
          "sha256": "26f6ec5bc3e0fe422e177e619deb45f6891ec6e9e8e405838fd711feb3f1be09"
        },
        "downloads": -1,
        "filename": "pv_system_profiler-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d57e5ca4398c6d7cf39ca6be67ac2cba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 55034,
        "upload_time": "2021-10-13T19:31:32",
        "upload_time_iso_8601": "2021-10-13T19:31:32.674692Z",
        "url": "https://files.pythonhosted.org/packages/05/20/fe9b492c5b5173851649d05460184de9083438d5b4eb0ebb288bd0bbfe87/pv_system_profiler-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8164c413717dee381839c28849df61812f4f28437fc68f04f49e067a56d994cc",
          "md5": "a2a850abaafeebbbd76c6144b894cb2e",
          "sha256": "f8b0123ac0196d3d098f1bb0e903c7ef025b015cf40410b3597b80003ffb5da3"
        },
        "downloads": -1,
        "filename": "pv-system-profiler-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a2a850abaafeebbbd76c6144b894cb2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 39029,
        "upload_time": "2021-10-13T19:31:35",
        "upload_time_iso_8601": "2021-10-13T19:31:35.034384Z",
        "url": "https://files.pythonhosted.org/packages/81/64/c413717dee381839c28849df61812f4f28437fc68f04f49e067a56d994cc/pv-system-profiler-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c8ae28038dac418b0fe2b2f54ad1f7ce97da32d5b0b997ffbb5524fa230cefe",
          "md5": "fee6ac06e83d006e61bac1482287be6d",
          "sha256": "5d01d07baa3eabb11eaf8603113842848cd34320b0dbde72772e22028de30799"
        },
        "downloads": -1,
        "filename": "pv_system_profiler-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fee6ac06e83d006e61bac1482287be6d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 56119,
        "upload_time": "2021-10-13T19:44:25",
        "upload_time_iso_8601": "2021-10-13T19:44:25.179992Z",
        "url": "https://files.pythonhosted.org/packages/1c/8a/e28038dac418b0fe2b2f54ad1f7ce97da32d5b0b997ffbb5524fa230cefe/pv_system_profiler-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ae57fb343c5a65d6670330cd912eb4956fa3011ef204d97d33f84fb3c6d9878",
          "md5": "db32be094f8def1a21fae1f1ab7a928e",
          "sha256": "b16af8fabc38d9243693920441f077d0f78e1e49f53b0279218d291b0c755af0"
        },
        "downloads": -1,
        "filename": "pv-system-profiler-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "db32be094f8def1a21fae1f1ab7a928e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 39547,
        "upload_time": "2021-10-13T19:44:26",
        "upload_time_iso_8601": "2021-10-13T19:44:26.930227Z",
        "url": "https://files.pythonhosted.org/packages/1a/e5/7fb343c5a65d6670330cd912eb4956fa3011ef204d97d33f84fb3c6d9878/pv-system-profiler-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c8ae28038dac418b0fe2b2f54ad1f7ce97da32d5b0b997ffbb5524fa230cefe",
        "md5": "fee6ac06e83d006e61bac1482287be6d",
        "sha256": "5d01d07baa3eabb11eaf8603113842848cd34320b0dbde72772e22028de30799"
      },
      "downloads": -1,
      "filename": "pv_system_profiler-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fee6ac06e83d006e61bac1482287be6d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 56119,
      "upload_time": "2021-10-13T19:44:25",
      "upload_time_iso_8601": "2021-10-13T19:44:25.179992Z",
      "url": "https://files.pythonhosted.org/packages/1c/8a/e28038dac418b0fe2b2f54ad1f7ce97da32d5b0b997ffbb5524fa230cefe/pv_system_profiler-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ae57fb343c5a65d6670330cd912eb4956fa3011ef204d97d33f84fb3c6d9878",
        "md5": "db32be094f8def1a21fae1f1ab7a928e",
        "sha256": "b16af8fabc38d9243693920441f077d0f78e1e49f53b0279218d291b0c755af0"
      },
      "downloads": -1,
      "filename": "pv-system-profiler-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "db32be094f8def1a21fae1f1ab7a928e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 39547,
      "upload_time": "2021-10-13T19:44:26",
      "upload_time_iso_8601": "2021-10-13T19:44:26.930227Z",
      "url": "https://files.pythonhosted.org/packages/1a/e5/7fb343c5a65d6670330cd912eb4956fa3011ef204d97d33f84fb3c6d9878/pv-system-profiler-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}