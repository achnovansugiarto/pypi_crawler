{
  "info": {
    "author": "Komal Thareja",
    "author_email": "kthare10@renci.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Table of contents\n\n - [Description](#descr)\n - [Installation](#install)\n   - [Mobius Client](#mbclient)\n     - [Usage](#usage1)\n   - [K8s Client](#k8sclient)\n     - [Usage](#k8susage)\n     - [Examples](#k8sexamples)\n   - [Condor Client](#condorclient)\n     - [Usage](#usage2)   \n   - [Json Data](#json)\n   - [Certificates](#certs)\n   - [Mobius Client Examples](#mobius_client_examples)\n     - [Create a workflow](#createworkflow)\n     - [Create a compute node in a workflow](#createcompute)\n     - [Create a stitch port in a workflow](#createstitchport)\n     - [Get status of a workflow](#getworkflow)\n     - [Delete a workflow](#deleteworkflow)\n     - [List workflows](#listworkflow)\n   - [Condor Client Examples](#condor_client_examples)\n     - [Create a condor cluster](#create)\n     - [Get status of condor cluster](#get)\n     - [Delete condor cluster](#delete)\n     - [List workflows](#list)\n \n# <a name=\"descr\"></a>Description\nThe Mobius API is a Python library that simplifies the native cloud interfaces for various clouds such as FABRIC, \nChameleon and adds many additional capabilities that are commonly used to create experiments.\n\nThe easiest way to get started using Mobius API is to use the example shown below.\n\n```\n    # Create a controller obect\n    # Default slice name is picked up from the config file\n    controller = Controller(config_file_location=\"./config.yml\")\n    # User specified slice name is used to identify the resources\n    #controller = Controller(config_file_location=\"./config.yml\", slice_name=\"test-slice\")\n    # Provision the resources as specified in the configuration file\n    controller.create()\n    # Get the provisioned resources\n    resources = controller.get_resources()\n    # Print the resources provisioned\n    for r in resources:\n        print(r)\n        print(r.list_nodes())\n```\n\nUser is expected to provide a config file `config.yml` containing their credentials and resource parameters. Template\n`mobius/config/config_template.yml` can be used to create a `config.yml`. Please find below the list of the parameters \nthat must be updated.\n\n- Update the SSH public and private key files to be used for the provisioned VMs/Bare Metals\n```\nruntime:\n  slice-private-key-location: /Users/kthare10/.ssh/id_rsa\n  slice-public-key-location: /Users/kthare10/.ssh/id_rsa.pub\n```\n- Update FABRIC credentials\n  - Location of the user's FABRIC tokens\n  - User's Bastion User name\n  - User's Fabric Bastion Private Key\n  - User's Project Id\n```\nfabric:\n  token-location: /Users/kthare10/renci/code/fabric/notebooks/tokens.json\n  bastion-user-name: kthare10_0011904101\n  bastion-key-location: /Users/kthare10/.ssh/fabric-bastion\n  project_id: b9847fa1-13ef-49f9-9e07-ae6ad06cda3f\n```\n\n- Update Chameleon credentials\n  - UserName\n  - Password\n  - Key Pair\n  - Project Name\n  - Project Id\n```\nchameleon:\n  user: kthare10\n  password: \n  key_pair: kthare10\n  project_name: CH-822154\n  project_id:\n    tacc: a400724e818d40cbba1a5c6b5e714462\n    uc: ae76673270164b048b59d3bd30676721\n    kvm: a400724e818d40cbba1a5c6b5e714462\n    edge:\n```\n- Update the resource counts\n  - Set count to 0 or more depending on where the resources should be provisioned.\n  - Copy and add more resource blocks if resources are needed at additional sites\n  - Change other parameters as needed\n```\nresources:\n    - resource:\n        type: VM\n        site: RENC # use FABRIC.RANDOM to choose a random site instead\n        count: 1\n        image: default_rocky_8\n        nic_model: NIC_Basic # NIC_Basic(SRIOV), NIC_ConnectX_5 => 25GB, NIC_ConnectX_6 => 100GB\n        name_prefix: node\n        network:\n          type: IPv6 # Allowed values IPv4 or IPv6\n        flavor:\n          cores: 2\n          ram: 8\n          disk: 10\n\n    - resource:\n        type: Baremetal\n        site: KVM@TACC\n        count: 1\n        image: CC-CentOS8\n        network:\n          type: sharednet1\n        name_prefix: node\n        flavor:\n          name: m1.large\n```\n\n# <a name=\"install\"></a>Installation\nYou can install using the following command\n```\npip install mobius-py\n```\n\n## Requirements:\nRequires python 3.9 or above version\n\n# CLI\nMobius Python API also provides following CLI interface as well.\n- Mobius Client\n- Condor Client\n- K8s Client\n\nDetails about the CLI interface can be found below.\n\n## <a name=\"mbclient\"></a>Mobius Client\nMobius client to trigger Moobius REST commands.\n\n### <a name=\"usage1\"></a>Usage\n```\nusage: mobius_client.py [-h] [-s SITE] [-m MOBIUSHOST] -o OPERATION -w\n                        WORKFLOWID [-d DATA] [-r RESOURCETYPE] [-t TARGET]\n\nPython client to provision cloud resources by invoking Mobius REST Commands.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SITE, --site SITE  Site\n  -m MOBIUSHOST, --mobiushost MOBIUSHOST\n                        Mobius Host e.g. http://localhost:8080/mobius\n  -o OPERATION, --operation OPERATION\n                        Operation allowed values: post|get|delete; post -\n                        provision workflow or compute or storage or\n                        stitchport; get - get a workflow; delete - delete a\n                        workflow\n  -w WORKFLOWID, --workflowId WORKFLOWID\n                        workflowId\n  -d DATA, --data DATA  data, JSON data to send; if not specified; default\n                        data is used; only used with post; must not be\n                        specified if target is indicated; must be specified\n                        for stitchport\n  -r RESOURCETYPE, --resourcetype RESOURCETYPE\n                        resourcetype allowed values:\n                        workflow|compute|storage|stitchport; only used with\n                        post; must be specified\n  -t TARGET, --target TARGET\n                        target hostname of the server to which to attach\n                        storage; only used with resourcetype storage\n```\n## <a name=\"k8sclient\"></a>K8s Client\nPython client to provision K8s and Kube Edge Cluster by invoking various Mobius REST APIs on different clouds.\n\n### <a name=\"k8susage\"></a>Usage\n```\nusage: k8s_client.py [-h] [-s1 EXOGENISITE] [-s2 CHAMELEONSITE]\n                     [-s3 JETSTREAMSITE] [-s4 MOCSITE] [-n1 EXOWORKERS]\n                     [-n2 CHWORKERS] [-n3 JTWORKERS] [-n4 MOCWORKERS]\n                     [-c COMETHOST] [-t CERT] [-k KEY] [-m MOBIUSHOST] -o\n                     OPERATION [-w WORKFLOWID] [-i1 EXOIPSTART]\n                     [-i2 CHIPSTART] [-i3 JTIPSTART] [-i4 MOCIPSTART]\n                     [-l LEASEEND] [-d1 EXODATADIR] [-d2 CHDATADIR]\n                     [-d3 JTDATADIR] [-d4 MOCDATADIR] [-kh KAFKAHOST]\n\nPython client to create Condor cluster using mobius. Uses master.json,\nsubmit.json and worker.json for compute requests present in data directory\nspecified. Currently only supports provisioning compute resources. Other\nresources can be provisioned via mobius_client. Creates COMET contexts for\nChameleon resources and thus enables exchanging keys and hostnames within\nworkflow\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s1 EXOGENISITE, --exogenisite EXOGENISITE\n                        Exogeni Site at which resources must be provisioned;\n                        must be specified for create operation\n  -s2 CHAMELEONSITE, --chameleonsite CHAMELEONSITE\n                        Chameleon Site at which resources must be provisioned;\n                        must be specified for create operation\n  -s3 JETSTREAMSITE, --jetstreamsite JETSTREAMSITE\n                        Jetstream Site at which resources must be provisioned;\n                        must be specified for create operation\n  -s4 MOCSITE, --mocsite MOCSITE\n                        Mass Open Cloud Site at which resources must be\n                        provisioned; must be specified for create operation\n  -n1 EXOWORKERS, --exoworkers EXOWORKERS\n                        Number of workers to be provisioned on Exogeni; must\n                        be specified for create operation\n  -n2 CHWORKERS, --chworkers CHWORKERS\n                        Number of workers to be provisioned on Chameleon; must\n                        be specified for create operation\n  -n3 JTWORKERS, --jtworkers JTWORKERS\n                        Number of workers to be provisioned on Jetstream; must\n                        be specified for create operation\n  -n4 MOCWORKERS, --mocworkers MOCWORKERS\n                        Number of workers to be provisioned on Mass Open\n                        Cloud; must be specified for create operation\n  -c COMETHOST, --comethost COMETHOST\n                        Comet Host default(https://comet-\n                        hn1.exogeni.net:8111/) used only for provisioning\n                        resources on chameleon\n  -t CERT, --cert CERT  Comet Certificate default(certs/client.pem); used only\n                        for provisioning resources on chameleon\n  -k KEY, --key KEY     Comet Certificate key default(certs/client.key); used\n                        only for provisioning resources on chameleon\n  -m MOBIUSHOST, --mobiushost MOBIUSHOST\n                        Mobius Host e.g. http://localhost:8080/mobius\n  -o OPERATION, --operation OPERATION\n                        Operation allowed values: create|get|delete|list|add\n  -w WORKFLOWID, --workflowId WORKFLOWID\n                        workflowId\n  -i1 EXOIPSTART, --exoipStart EXOIPSTART\n                        Exogeni Start IP Address of the range of IPs to be\n                        used for VMs; 1st IP is assigned to master and\n                        subsequent IPs are assigned to submit node and\n                        workers; can be specified for create operation\n  -i2 CHIPSTART, --chipStart CHIPSTART\n                        Chameleon Start IP Address of the range of IPs to be\n                        used for VMs; 1st IP is assigned to master and\n                        subsequent IPs are assigned to submit node and\n                        workers; can be specified for create operation\n  -i3 JTIPSTART, --jtipStart JTIPSTART\n                        Jetstream Start IP Address of the range of IPs to be\n                        used for VMs; 1st IP is assigned to master and\n                        subsequent IPs are assigned to submit node and\n                        workers; can be specified for create operation\n  -i4 MOCIPSTART, --mocipStart MOCIPSTART\n                        Mass Open Cloud Start IP Address of the range of IPs\n                        to be used for VMs; 1st IP is assigned to master and\n                        subsequent IPs are assigned to submit node and\n                        workers; can be specified for create operation\n  -l LEASEEND, --leaseEnd LEASEEND\n                        Lease End Time; can be specified for create operation\n  -d1 EXODATADIR, --exodatadir EXODATADIR\n                        Exogeni Data directory where to look for master.json,\n                        submit.json and worker.json; must be specified for\n                        create operation\n  -d2 CHDATADIR, --chdatadir CHDATADIR\n                        Chameleon Data directory where to look for\n                        master.json, submit.json and worker.json; must be\n                        specified for create operation\n  -d3 JTDATADIR, --jtdatadir JTDATADIR\n                        Jetstream Data directory where to look for\n                        master.json, submit.json and worker.json; must be\n                        specified for create operation\n  -d4 MOCDATADIR, --mocdatadir MOCDATADIR\n                        Mass Open Cloud Data directory where to look for\n                        master.json, submit.json and worker.json; must be\n                        specified for create operation\n  -kh KAFKAHOST, --kafkahost KAFKAHOST\n                        Kafka Host - monitoring server; must be specified for\n                        delete operation\n```\n### <a name=\"k8sexamples\"></a>K8s Example\n#### Provision K8s cluster on Exogeni\nUser can provision Kubernetes and Kube Edge cluster on Exogeni as below:\n```\npython3 k8s_client.py -s1 'Exogeni:UFL (Gainesville, FL USA) XO Rack'  -d1 ./flynet/exogeni/ -l `date -v +2d +%s` -o create -w flynet2 -n1 2 -i1 192.168.125.10\n```\n\n#### Provision K8s cluster on Chameleon\nNOTE: Additional Configuration is required in docker/application.properties file for Chameleon KVM. Please check README in docker directory.\n##### User can provision Kubernetes and Kube Edge cluster on Chameleon KVM as below:\n```\npython3 k8s_client.py -s2 'Chameleon:KVM@TACC'  -d2 ./flynet/chameleon/ -l `date -v +2d +%s` -o create -w flynet-chameleon -n2 2 -i2 192.168.125.10\n```\n#### Provision Hybrid K8s Cluster\n- Provision Kubernetes and Kube Edge cluster on Chameleon Baremetal\n- Provision Drone and BaseStation on Exogeni\n```\npython3 k8s_client.py -s2 'Chameleon:CHI@UC'  -d2 ./flynet/chameleon-exo/ -s1 'Exogeni:UFL (Gainesville, FL USA) XO Rack'  -d1 ./flynet/exogeni-drone/  -l `date -v +2d +%s` -o create -w flynet-hybrid -n2 1 -i2 192.168.135.10 -n1 0 -i1 192.168.130.10\n```\n\n## <a name=\"condor\"></a>Condor Client\nPython client to create Condor clusters by invoking various supported Mobius REST commands.\n\n### <a name=\"usage2\"></a>Usage\n```\nusage: condor_client.py [-h] [-s1 EXOGENISITE] [-s2 CHAMELEONSITE]\n                        [-s3 JETSTREAMSITE] [-s4 MOSSITE] [-n1 EXOWORKERS]\n                        [-n2 CHWORKERS] [-n3 JTWORKERS] [-n4 MOSWORKERS]\n                        [-c COMETHOST] [-t CERT] [-k KEY] [-m MOBIUSHOST] -o\n                        OPERATION -w WORKFLOWID [-i1 EXOIPSTART]\n                        [-i2 CHIPSTART] [-i3 JTIPSTART] [-i4 MOSIPSTART]\n                        [-l LEASEEND] [-d1 EXODATADIR] [-d2 CHDATADIR]\n                        [-d3 JTDATADIR] [-d4 MOSDATADIR] [-kh KAFKAHOST]\n\nPython client to create Condor cluster using mobius. Uses master.json,\nsubmit.json and worker.json for compute requests present in data directory\nspecified. Currently only supports provisioning compute resources. Other\nresources can be provisioned via mobius_client. Creates COMET contexts for\nChameleon resources and thus enables exchanging keys and hostnames within\nworkflow\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s1 EXOGENISITE, --exogenisite EXOGENISITE\n                        Exogeni Site at which resources must be provisioned;\n                        must be specified for create operation\n  -s2 CHAMELEONSITE, --chameleonsite CHAMELEONSITE\n                        Chameleon Site at which resources must be provisioned;\n                        must be specified for create operation\n  -s3 JETSTREAMSITE, --jetstreamsite JETSTREAMSITE\n                        Jetstream Site at which resources must be provisioned;\n                        must be specified for create operation\n  -s4 MOSSITE, --mossite MOSSITE\n                        Mass Open Cloud Site at which resources must be\n                        provisioned; must be specified for create operation\n  -n1 EXOWORKERS, --exoworkers EXOWORKERS\n                        Number of workers to be provisioned on Exogeni; must\n                        be specified for create operation\n  -n2 CHWORKERS, --chworkers CHWORKERS\n                        Number of workers to be provisioned on Chameleon; must\n                        be specified for create operation\n  -n3 JTWORKERS, --jtworkers JTWORKERS\n                        Number of workers to be provisioned on Jetstream; must\n                        be specified for create operation\n  -n4 MOSWORKERS, --mosworkers MOSWORKERS\n                        Number of workers to be provisioned on Mass Open\n                        Cloud; must be specified for create operation\n  -c COMETHOST, --comethost COMETHOST\n                        Comet Host default(https://comet-\n                        hn1.exogeni.net:8111/) used only for provisioning\n                        resources on chameleon\n  -t CERT, --cert CERT  Comet Certificate default(certs/inno-\n                        hn_exogeni_net.pem); used only for provisioning\n                        resources on chameleon\n  -k KEY, --key KEY     Comet Certificate key default(certs/inno-\n                        hn_exogeni_net.key); used only for provisioning\n                        resources on chameleon\n  -m MOBIUSHOST, --mobiushost MOBIUSHOST\n                        Mobius Host e.g. http://localhost:8080/mobius\n  -o OPERATION, --operation OPERATION\n                        Operation allowed values: create|get|delete\n  -w WORKFLOWID, --workflowId WORKFLOWID\n                        workflowId\n  -i1 EXOIPSTART, --exoipStart EXOIPSTART\n                        Exogeni Start IP Address of the range of IPs to be\n                        used for VMs; 1st IP is assigned to master and\n                        subsequent IPs are assigned to submit node and\n                        workers; can be specified for create operation\n  -i2 CHIPSTART, --chipStart CHIPSTART\n                        Chameleon Start IP Address of the range of IPs to be\n                        used for VMs; 1st IP is assigned to master and\n                        subsequent IPs are assigned to submit node and\n                        workers; can be specified for create operation\n  -i3 JTIPSTART, --jtipStart JTIPSTART\n                        Jetstream Start IP Address of the range of IPs to be\n                        used for VMs; 1st IP is assigned to master and\n                        subsequent IPs are assigned to submit node and\n                        workers; can be specified for create operation\n  -i4 MOSIPSTART, --mosipStart MOSIPSTART\n                        Mass Open Cloud Start IP Address of the range of IPs\n                        to be used for VMs; 1st IP is assigned to master and\n                        subsequent IPs are assigned to submit node and\n                        workers; can be specified for create operation\n  -l LEASEEND, --leaseEnd LEASEEND\n                        Lease End Time; can be specified for create operation\n  -d1 EXODATADIR, --exodatadir EXODATADIR\n                        Exogeni Data directory where to look for master.json,\n                        submit.json and worker.json; must be specified for\n                        create operation\n  -d2 CHDATADIR, --chdatadir CHDATADIR\n                        Chameleon Data directory where to look for\n                        master.json, submit.json and worker.json; must be\n                        specified for create operation\n  -d3 JTDATADIR, --jtdatadir JTDATADIR\n                        Jetstream Data directory where to look for\n                        master.json, submit.json and worker.json; must be\n                        specified for create operation\n  -d4 MOSDATADIR, --mosdatadir MOSDATADIR\n                        Mass Open Cloud Data directory where to look for\n                        master.json, submit.json and worker.json; must be\n                        specified for create operation\n  -kh KAFKAHOST, --kafkahost KAFKAHOST\n                        Kafka Host - monitoring server; must be specified for\n                        delete operation    \n```\n### <a name=\"json\"></a>JSON Data\nJson Data for Master, Submit and Worker Nodes is read from Mobius/python/data directory.\n\n### <a name=\"certs\"></a>Certificates\nExample Comet Certficates are present in Mobius/python/certs directory.\n\n### <a name=\"mobius_client_examples\"></a>Mobius Client Examples\n#### <a name=\"createworkflow\"></a>Create a workflow\n```\npython3 mobius_client.py -o post -r workflow -w abcd-1234\n```\n#### <a name=\"createcompute\"></a>Create a compute node in a workflow\nThe following example also shows IP address assignment controlled by user.\n```\npython3 mobius_client.py -o post -r compute -w abcd-1234 -d '{\n    \"site\":\"Exogeni:UH (Houston, TX USA) XO Rack\",\n    \"cpus\":\"4\",\n    \"gpus\":\"0\",\n    \"ramPerCpus\":\"3072\",\n    \"diskPerCpus\":\"19200\",\n    \"hostNamePrefix\":\"master\",\n    \"ipAddress\": \"172.16.0.1\",\n    \"coallocate\":\"true\",\n    \"imageUrl\":\"http://geni-images.renci.org/images/kthare10/mobius/mb-centos-7/mb-centos-7.xml\",\n    \"imageName\":\"mb-centos-7\",\n    \"imageHash\":\"2dc5f35c91712845f9b6fec6bad1f6f33c64df39\",\n    \"leaseEnd\":\"1557733832\",\n    \"postBootScript\":\"curl http://geni-images.renci.org/images/cwang/Condor/scripts/exogeni-scripts/master.sh -o /root/master.sh; sh /root/master.sh\"\n}'\n\npython3 mobius_client.py -o post -r compute -w abcd-1234 -f ../mobius/test/computeMaster.json\n```\n#### <a name=\"createstitchport\"></a>Create a stitch port in a workflow\n```\npython3 mobius_client.py -o post -w abcd-1234 -r stitchPort -d '{\n     \"target\":\"master0\",\n     \"portUrl\":\"http://geni-orca.renci.org/owl/uhNet.rdf#UHNet/IBM/G8052/TengigabitEthernet/1/1/ethernet\",\n     \"tag\":\"2001\",\n     \"stitchIP\": \"72.16.0.1\",\n     \"bandwidth\":\"10000000\"\n}'\n\npython3 mobius_client.py -o post -w abcd-1234 -r stitchPort -f ../mobius/test/stitch.json\n```\n#### <a name=\"getworkflow\"></a>Get status of a workflow\n```\npython3 mobius_client.py -o get -w abcd-1234\n```\n#### <a name=\"deleteworkflow\"></a>Delete a workflow\n```\npython3 mobius_client.py -o delete -w abcd-1234\n```\n#### <a name=\"listworkflow\"></a>List workflows\n```\npython3 mobius_client.py -o get\n```\n\n### <a name=\"condor_client_examples\"></a>Condor Client Examples\n#### <a name=\"create\"></a>Create a condor cluster\nCreate a condor cluster with 1 master, 1 submit and 1 worker node. \nNOTE: Comet context for each node is created and neuca tools are also installed on each node. This results in hostnames and keys to be exchanged between all nodes in condor cluster\n\n##### Chameleon:\n- Master, Worker, Submit and Storage nodes on Chameleon (if json for either of the nodes is not present they are not instantiated)\n```\npython3 condor_client.py  -s2 Chameleon:CHI@UC -d2 ./chameleon/ -l `date -v +2d +%s` -i2 \"192.168.100.5\" -o create -w abcd-1114 -n2 1\n```\n##### Chameleon(with Monitoring and Stitching to Exogeni):\n```\npython3 condor_client.py  -s2 Chameleon:CHI@UC -d2 ./chameleon_mon/ -l `date -v +2d +%s` -i2 \"192.168.100.5\" -o create -w ch-abcd-1114 -n2 1\n```\n\nNOTE: Start IP address passed via -i2 should match the network specified in JSON for the nodes.\n##### Exogeni\n- Master, Worker, Submit and Storage nodes on Exogeni (if json for either of the nodes is not present they are not instantiated)\n- Stitch.json if present in the directory would be used to stitch\n```\npython3 condor_client.py -s1 'Exogeni:UH (Houston, TX USA) XO Rack'  -d1 ./exogeni/ -l `date -v +2d +%s` -i1 \"172.16.0.1\" -o create -w abcd-1114 -n1 1\n```\n##### Exogeni(with Monitoring)\n```\npython3 condor_client.py -s1 'Exogeni:UFL (Gainesville, FL USA) XO Rack'  -d1 ./exogeni_mon/ -l `date -v +2d +%s` -i1 \"172.16.0.1\" -o create -w abcd-1114 -n1 1\n```\n##### MOC\n- Master, Worker nodes on MOC\n```\npython3 condor_client.py -o create -w casa-moc-test -s4 'Mos:moc-kzn' -d4 ./moc-casa/ -i4 \"192.158.100.4\" -l `date -v +2d +%s`  -n4 1\n```\n\n##### Hybrid Model: \n- Master, Worker and Storage nodes on Exogeni\n- Storage node stitched to UNT and Chameleon\n- Storage node acts a forwarder to transfer traffic from Exogeni to Chameleon and viceversa\n- Storage node acts a forwarder to transfer traffic from UNT to Exogeni and viceversa\n###### Submit and Master node running together\n```\npython3 condor_client.py -s1 'Exogeni:UH (Houston, TX USA) XO Rack'  -d1 ./hybrid/exogeni-casa/ -s2 Chameleon:CHI@UC -d2 ./hybrid/chameleon-casa/ -l `date -v +2d +%s` -i1 \"172.16.0.1\" -i2 \"192.168.10.5\" -o create -w abcd-1114 -n1 1 -n2 1\n```\n###### Separate submit node\n```\npython3 condor_client.py -s1 'Exogeni:UH (Houston, TX USA) XO Rack'  -d1 ./hybrid/exogeni/ -s2 Chameleon:CHI@UC -d2 ./hybrid/chameleon/ -l `date -v +2d +%s` -i1 \"172.16.0.1\" -i2 \"192.168.10.5\" -o create -w abcd-1114 -n1 1 -n2 1\n```\n###### Submit and Master node running together with monitoring enabled\n```\npython3 condor_client.py -s1 'Exogeni:UH (Houston, TX USA) XO Rack'  -d1 ./hybrid/exogeni-casa-mon/ -s2 Chameleon:CHI@UC -d2 ./hybrid/chameleon-casa-mon/ -l `date -v +2d +%s` -i1 \"172.16.0.1\" -i2 \"192.168.10.5\" -o create -w abcd-1114 -n1 1 -n2 1\n```\n```\npython3 condor_client.py -s1 'Exogeni:UFL (Gainesville, FL USA) XO Rack'  -d1 ./hybrid/exogeni-casa-mon/ -s2 Chameleon:CHI@TACC -d2 ./hybrid/chameleon-casa-mon/ -l `date -v +2d +%s` -i1 \"172.16.0.1\" -i2 \"192.168.10.5\" -o create -w abcd-1114 -n1 0 -n2 1\n```\n###### Submit and Master node running together with monitoring and sdx enabled\n```\npython3 condor_client.py -s1 'Exogeni:UFL (Gainesville, FL USA) XO Rack'  -d1 ./hybrid/exogeni-casa-mon-sdx/ -s2  Chameleon:CHI@TACC -d2 ./hybrid/chameleon-casa-mon-sdx/ -l `date -v +2d +%s` -i1 \"192.168.20.2\" -i2 \"192.168.10.6\" -o create -w abcd-1114 -n1 0 -n2 1\n```\n\nNOTE: Start IP address passed via -i2 should match the network specified in JSON for the nodes.\nNOTE: Nodes for hybrid model on exogeni if instantitaed on UH rack, chameleon nodes should be instantiated on UC as stitchport from UH rack to Chameleon TACC site is not allowed \n\n##### Cluster spanning 4 clouds\n- Master and submit node on Exogeni\n- Worker on Chameleon, Jetstream and Mass Open Cloud\n```\npython3 condor_client.py -o create -w merit-w1 -s1 'Exogeni:UH (Houston, TX USA) XO Rack'  -d1 ./merit/exogeni/ -s2 Chameleon:CHI@UC -d2 ./merit/chameleon/ -s3 'Jetstream:TACC' -d3 ./merit/jetstream/ -s4 'Mos:moc-kzn' -d4 ./merit/mos/ -l `date -v +2d +%s` -n1 1 -n2 1 -n3 1 -n4 1\n```\n##### Multiple Clusters in a single workflow spanning Exogeni and Chameleon with VSDX and Qos applied\nMobius containers should be brought up using the following command:\n```\ndocker-compose -f docker-compose_sdx.yml up -d\n```\n \nNote: Please update docker/docker-compose_sdx.yml and docker/config/sdx.conf to point to appropriate SSH files before bringing up the container. Mobius doesn’t control the lease of the sdx slice so it should be extended from the Flukes if it needs to stay up for more than 1 day.\n \nSuch a configuration can be created by using the following two commands.\n \n###### Creating the 1st cluster\nMAC:\n```\npython3 condor_client.py -s1 'Exogeni:UMass (UMass Amherst, MA, USA) XO Rack'  -d1 ./hybrid/multi-subnet/exogeni-casa-mon-sdx/  -s2  'Chameleon:CHI@UC' -d2 ./hybrid/multi-subnet/subnet1/chameleon-casa-mon-sdx/ -l `date -v +2d +%s` -i1 \"192.168.10.3\"  -i2 \"192.168.30.6\" -o create -w abcd-1114 -n1 0 -n2 1\n```\nLinux:\n```\npython3 condor_client.py -s1 'Exogeni:UMass (UMass Amherst, MA, USA) XO Rack'  -d1 ./hybrid/multi-subnet/exogeni-casa-mon-sdx/  -s2  'Chameleon:CHI@UC' -d2 ./hybrid/multi-subnet/subnet1/chameleon-casa-mon-sdx/ -l `date -d \"+2days\" +%s` -i1 \"192.168.10.3\"  -i2 \"192.168.30.6\" -o create -w abcd-1114 -n1 0 -n2 1\n\n```\n###### Adding the 2nd cluster to the workflow\nMAC:\n```\npython3 condor_client.py -s2  'Chameleon:CHI@UC' -d2 ./hybrid/multi-subnet/subnet2/chameleon-casa-mon-sdx/ -l `date -v +2d +%s` -i2 \"192.168.40.6\" -o add -w abcd-1114 -n2 1\n```\nLINUX:\n```\npython3 condor_client.py -s2  'Chameleon:CHI@UC' -d2 ./hybrid/multi-subnet/subnet2/chameleon-casa-mon-sdx/ -l `date -d \"+2days\" +%s` -i2 \"192.168.40.6\" -o add -w abcd-1114 -n2 1\n```\n\nCluster will look like ![this](../mobius/plantuml/images/vsdx-qos.png)\n#### <a name=\"get\"></a>Get status of condor cluster\n```\npython3 condor_client.py -o get -w abcd-1114\n```\n\n#### <a name=\"delete\"></a>Delete condor cluster\n```\npython3 condor_client.py -o delete -w abcd-1114 \n```\n#### <a name=\"list\"></a>List workflows\n```\npython3 condor_client.py -o list\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RENCI-NRIG/Mobius",
    "keywords": "Mobius Framework,Cloud,FABRIC,Chameleon,MOC",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mobius-py",
    "package_url": "https://pypi.org/project/mobius-py/",
    "platform": null,
    "project_url": "https://pypi.org/project/mobius-py/",
    "project_urls": {
      "Homepage": "https://github.com/RENCI-NRIG/Mobius"
    },
    "release_url": "https://pypi.org/project/mobius-py/1.1/",
    "requires_dist": [
      "requests",
      "kafka-python",
      "paramiko",
      "PyYAML (==5.4)",
      "fabrictestbed-extensions (==1.2)",
      "python-chi"
    ],
    "requires_python": ">=3.7",
    "summary": "Mobius Framework",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14070215,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32c5466756898c91356fa2fd63168eda2f51581c2ededa50c8c6f0335812db20",
          "md5": "0fd3b138d1ee135faf88da1749fb9a05",
          "sha256": "46f2891ddb1ba50635f6e30414f32240c7412b1eacdb662cd6e1f5289140de1d"
        },
        "downloads": -1,
        "filename": "mobius_py-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0fd3b138d1ee135faf88da1749fb9a05",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 56372,
        "upload_time": "2022-06-03T21:42:27",
        "upload_time_iso_8601": "2022-06-03T21:42:27.958113Z",
        "url": "https://files.pythonhosted.org/packages/32/c5/466756898c91356fa2fd63168eda2f51581c2ededa50c8c6f0335812db20/mobius_py-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8f5a8cbfbe6c33d5a90e39dac745b2cac9d257f048c03a75da52a1f4bb14f51",
          "md5": "02bf688d353a1a2aaf7eb57833f7363a",
          "sha256": "47f0282c111f1c50617e5561d554c67a8f9214ae9cfa204fbba5b784b8543c3f"
        },
        "downloads": -1,
        "filename": "mobius-py-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "02bf688d353a1a2aaf7eb57833f7363a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 43841,
        "upload_time": "2022-06-03T21:42:30",
        "upload_time_iso_8601": "2022-06-03T21:42:30.521327Z",
        "url": "https://files.pythonhosted.org/packages/b8/f5/a8cbfbe6c33d5a90e39dac745b2cac9d257f048c03a75da52a1f4bb14f51/mobius-py-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "315be2783e035cc758aff4c1ea9522de398439ce24aacedb9eef8b31138b8735",
          "md5": "8005194dcd52c4a23df3c0bb1f6cdc52",
          "sha256": "fc37ab2edebd3c2e388c72dc6443b84b22c605262457fc08df9635f20254ab7a"
        },
        "downloads": -1,
        "filename": "mobius_py-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8005194dcd52c4a23df3c0bb1f6cdc52",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 57187,
        "upload_time": "2022-06-08T14:05:30",
        "upload_time_iso_8601": "2022-06-08T14:05:30.126048Z",
        "url": "https://files.pythonhosted.org/packages/31/5b/e2783e035cc758aff4c1ea9522de398439ce24aacedb9eef8b31138b8735/mobius_py-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36b4e56c4e3988aefa297d4ccc98123ed3eb5239950ff9374c11dcbdcbe055ce",
          "md5": "a370ced301867f918e8b3fef9223e3c0",
          "sha256": "779bcaf6fa438fe941fceb44ab5326d091d9e522bde4f0444747daf717a4209f"
        },
        "downloads": -1,
        "filename": "mobius-py-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a370ced301867f918e8b3fef9223e3c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 44603,
        "upload_time": "2022-06-08T14:05:32",
        "upload_time_iso_8601": "2022-06-08T14:05:32.055589Z",
        "url": "https://files.pythonhosted.org/packages/36/b4/e56c4e3988aefa297d4ccc98123ed3eb5239950ff9374c11dcbdcbe055ce/mobius-py-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "315be2783e035cc758aff4c1ea9522de398439ce24aacedb9eef8b31138b8735",
        "md5": "8005194dcd52c4a23df3c0bb1f6cdc52",
        "sha256": "fc37ab2edebd3c2e388c72dc6443b84b22c605262457fc08df9635f20254ab7a"
      },
      "downloads": -1,
      "filename": "mobius_py-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8005194dcd52c4a23df3c0bb1f6cdc52",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 57187,
      "upload_time": "2022-06-08T14:05:30",
      "upload_time_iso_8601": "2022-06-08T14:05:30.126048Z",
      "url": "https://files.pythonhosted.org/packages/31/5b/e2783e035cc758aff4c1ea9522de398439ce24aacedb9eef8b31138b8735/mobius_py-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "36b4e56c4e3988aefa297d4ccc98123ed3eb5239950ff9374c11dcbdcbe055ce",
        "md5": "a370ced301867f918e8b3fef9223e3c0",
        "sha256": "779bcaf6fa438fe941fceb44ab5326d091d9e522bde4f0444747daf717a4209f"
      },
      "downloads": -1,
      "filename": "mobius-py-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a370ced301867f918e8b3fef9223e3c0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 44603,
      "upload_time": "2022-06-08T14:05:32",
      "upload_time_iso_8601": "2022-06-08T14:05:32.055589Z",
      "url": "https://files.pythonhosted.org/packages/36/b4/e56c4e3988aefa297d4ccc98123ed3eb5239950ff9374c11dcbdcbe055ce/mobius-py-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}