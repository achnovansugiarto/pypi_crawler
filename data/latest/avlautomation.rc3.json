{
  "info": {
    "author": "jj-foster",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# AVL Automation\r\nSurrey Team Peryton Heron IMechE UAS 2022 AVL automation program. Enables automatic tail sizing based on input aircraft geometry, and investigation of dihedral angle effects on stability and aerodynamic performance. \r\n\r\nA lose wrapping of the vortex lattice method [AVL](https://web.mit.edu/drela/Public/web/avl/) provides a means of scripting these tools.\r\n\r\nThe tail sizing segment has been validated against 2 flying UAVs and, given the CG is in the right place, suggests perfectly stable tail configurations.\r\n\r\n## Usage\r\n> pip install avlautomation\r\n\r\nAutomation module selection can then be done by:\r\n> py -m avlautomation.avlautomation\r\n\r\nAdd -h cmd argument for help.\r\n\r\nThe following are required in the same directory as the config file you specify in the command line (see /example):\r\n- avl.exe (https://web.mit.edu/drela/Public/web/avl/)\r\n- Config files (aero, dihedral, and tail).\r\n- Input plane .avl file (see https://web.mit.edu/drela/Public/web/avl/avl_doc.txt for info (xflr5 can export AVL compatible files).\r\n- aerofoil .dat files\r\n\r\nNote that config files must be input with their full directory e.g. ```py -m avlautomation.avlautomation tail -c ./tail.config``` not ```tail.config```\r\n\r\nSome sample scripts (undocumented) for control surface sizing and tail mass are given in /scripts.\r\n\r\nIf you get a seemingly random error it's likely because your input .avl plane file is formatted incorrectly. Raise an issue containing the .avl file and your config file(s) and I'll either fix the code or tell you how to fix your inputs :)\r\n\r\n## Tail Sizing\r\n- Suggests tail configurations based on input geometry to achieve a desired static margin.\r\n- Works for convensional & V-tail configurations.\r\n- Can be run in reverse i.e. input tail dimensions & output optimal CG location\r\n- Anslysis considers only the horizontal tail plane (if convensional tail is selected). Vertical tail plane should be sized independently based on rudder and yaw stability requirements (a vertical tale will be generated but only based on a given vertical tail volume coefficient).\r\n\r\nThe program will generate tail configurations between limits given in the .config file and use AVL to calculate the neutral point of each. It then fits a parametric curve to the datapoints and gives you a nice graph like the one below and interpolates a curve of possible tail configurations.\r\n\r\n![image](https://user-images.githubusercontent.com/79290428/209408913-acb4153b-cd75-48df-861c-d916c2c78f4c.png)\r\n**Fig. 1 - Static margins for tail areas and moment arms of tail configurations assessed.**\r\n\r\n![image](https://user-images.githubusercontent.com/79290428/209408978-c282e850-d69b-4f93-8b3c-6ce1826b8365.png)\r\n**Fig. 2 - Curves of tail configurations with static margins of 0.2.**\r\n\r\nThe main 3 variables to consider when sizing the horizontal tail for longitudinal static stability are: tail moment arm, tail plane area, and CG position. In short, increasing the moment arm and area increase the longitudinal stability of the aircraft for a given CG because it moves the neutral point away from the CG. The neutral point is the point where, if the CG was placed on it, $C_M/\\alpha=0$. Static margin $SM=\\frac{x_{np}-x_{cg}}{MAC}$ and should be around 0.1 to 0.3.\r\n\r\n![image](https://user-images.githubusercontent.com/79290428/179372590-fcfc5e14-8e66-4287-8e49-efd22b70ba7f.png)\r\n\r\n**Fig. 3 - $C_M/\\alpha$ curves for stable, neutral and unstable aircraft.**\r\n\r\nThe tail moment arm is likely restricted in some way because of structural constraints so there is a balance between the tail area and moment arm. Something that would be nice to add to the tail sizing program is calculating the required angle of incidence on the horizontal tail for a desired trim angle, but this can be done fairly easily within AVL itself given a bit of setup in the plane.avl file.\r\n\r\n## Dihedral\r\n- Generates wing configurations with varying dihedral angle with a set spanwise dihedral location. \r\n- Runs aero analysis, generating Cl and Cd polars, and relevant stability derivatives.\r\n- AVL solution becomes very unstable as dihedral span location approaches tail sections in y.\r\n- It would be nice to show the effect on dutch roll and roll subsidence modes but AVL is difficult to get to work with dynamic stability analyses.\r\n\r\n![image](https://user-images.githubusercontent.com/79290428/179610350-5d2b92fd-5ed4-42a4-81e1-4591e40f4666.png)\r\n\r\n**Fig. 4 - Dihedral angle effect on $C_L$, $C_D$, and stability derivatives.**\r\n\r\n## Aero:\r\n- Generate some quick aerodynamic coefficient polars, stability derivatives, and eigenmode frequencies and dampings for a range of angles of attack.\r\n- Used in dihedral.py for calculating aerodynamic effect of dihedral angle.\r\n\r\n## Limitations:\r\nAVL is a vortex lattice method meaning it's good for early conceptual design and sizing but is not reliable for complete aerodynamic profiling and design because of the limitations of potential flow theory: \r\n- Flow seperation and stall are not predicted;\r\n- No wake rollup is applied so tip losses are not well predicted;\r\n- Wing/fuselage interactions are not captured;\r\n- Solution is adversely affected if surfaces are placed directly downstream of the other due to trailing vortices influencing control points.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Team-Peryton/AVL-automation",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "avlautomation",
    "package_url": "https://pypi.org/project/avlautomation/",
    "platform": null,
    "project_url": "https://pypi.org/project/avlautomation/",
    "project_urls": {
      "Homepage": "https://github.com/Team-Peryton/AVL-automation"
    },
    "release_url": "https://pypi.org/project/avlautomation/1.0.2/",
    "requires_dist": [
      "numpy",
      "scipy",
      "pandas",
      "matplotlib",
      "tqdm"
    ],
    "requires_python": ">=3.9",
    "summary": "Automation tools for vortex lattice method, AVL",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16205783,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99d0309062e3c9b011e9ca612d45b2add96cfc6754bbeeb352142d5322824b2a",
          "md5": "0c598bcd4d5e6d0a70de0ed1d05ecb83",
          "sha256": "85e508653b969504c9ef7967bd970044edacf8fbef507fd37505aa10101fe8b0"
        },
        "downloads": -1,
        "filename": "avlautomation-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c598bcd4d5e6d0a70de0ed1d05ecb83",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 4324,
        "upload_time": "2022-12-23T23:05:29",
        "upload_time_iso_8601": "2022-12-23T23:05:29.065857Z",
        "url": "https://files.pythonhosted.org/packages/99/d0/309062e3c9b011e9ca612d45b2add96cfc6754bbeeb352142d5322824b2a/avlautomation-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc1f3628521e4e64ec5844884c4d78de53963ac0244a50543f53cea8b826768b",
          "md5": "801ce5c70038cd8b95171b29a5a16dae",
          "sha256": "e639ba5f33b355e15caf528d4b70fd65f57fe5faf5881faf32d4dccbb8a41aa4"
        },
        "downloads": -1,
        "filename": "avlautomation-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "801ce5c70038cd8b95171b29a5a16dae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 4333,
        "upload_time": "2022-12-23T23:05:30",
        "upload_time_iso_8601": "2022-12-23T23:05:30.405099Z",
        "url": "https://files.pythonhosted.org/packages/bc/1f/3628521e4e64ec5844884c4d78de53963ac0244a50543f53cea8b826768b/avlautomation-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2b952bcc4da2488bf5d1eb9696e277ec3390b014ff67474098e67724c3cfbaf",
          "md5": "15a7baf853bccf88802fab16a4143962",
          "sha256": "483ad8af0d4acf456b247d25d342600ce5b34232deb0bacafc1c1a8602d220c1"
        },
        "downloads": -1,
        "filename": "avlautomation-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15a7baf853bccf88802fab16a4143962",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 4317,
        "upload_time": "2022-12-23T23:06:44",
        "upload_time_iso_8601": "2022-12-23T23:06:44.022095Z",
        "url": "https://files.pythonhosted.org/packages/e2/b9/52bcc4da2488bf5d1eb9696e277ec3390b014ff67474098e67724c3cfbaf/avlautomation-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "979bffc5f36171e79c817b4b5191ae6acccc74cf7e0bca1a01c3467c6c223bad",
          "md5": "e124de0d124a333aec7970865d7a0b0e",
          "sha256": "b28255959539f809683c80b2a9552eb317b2d11ba789517a419f587c51a055d6"
        },
        "downloads": -1,
        "filename": "avlautomation-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e124de0d124a333aec7970865d7a0b0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 4316,
        "upload_time": "2022-12-23T23:06:45",
        "upload_time_iso_8601": "2022-12-23T23:06:45.903788Z",
        "url": "https://files.pythonhosted.org/packages/97/9b/ffc5f36171e79c817b4b5191ae6acccc74cf7e0bca1a01c3467c6c223bad/avlautomation-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eeece8bf68e37ef4614eba470308269dc7b2e0f49e032488877f3c04fceeed33",
          "md5": "1e51713951e479d1516a502d40694b11",
          "sha256": "f12202a5158467b7237472aebe00e3bf653b3461ea7d412d8185f22119a48d5b"
        },
        "downloads": -1,
        "filename": "avlautomation-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e51713951e479d1516a502d40694b11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 18872,
        "upload_time": "2022-12-24T16:20:01",
        "upload_time_iso_8601": "2022-12-24T16:20:01.880633Z",
        "url": "https://files.pythonhosted.org/packages/ee/ec/e8bf68e37ef4614eba470308269dc7b2e0f49e032488877f3c04fceeed33/avlautomation-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26f16f200d96b6566600ef7577e1e117506116493151bf88b971e303cd5d4092",
          "md5": "c6bc3ffde6120bcdd569c590b68df356",
          "sha256": "8ebb540f0f3e90620fee5a65a8d46797566b3db688c637abe7a90d32a0f76bea"
        },
        "downloads": -1,
        "filename": "avlautomation-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c6bc3ffde6120bcdd569c590b68df356",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 18615,
        "upload_time": "2022-12-24T16:20:04",
        "upload_time_iso_8601": "2022-12-24T16:20:04.838984Z",
        "url": "https://files.pythonhosted.org/packages/26/f1/6f200d96b6566600ef7577e1e117506116493151bf88b971e303cd5d4092/avlautomation-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eeece8bf68e37ef4614eba470308269dc7b2e0f49e032488877f3c04fceeed33",
        "md5": "1e51713951e479d1516a502d40694b11",
        "sha256": "f12202a5158467b7237472aebe00e3bf653b3461ea7d412d8185f22119a48d5b"
      },
      "downloads": -1,
      "filename": "avlautomation-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1e51713951e479d1516a502d40694b11",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 18872,
      "upload_time": "2022-12-24T16:20:01",
      "upload_time_iso_8601": "2022-12-24T16:20:01.880633Z",
      "url": "https://files.pythonhosted.org/packages/ee/ec/e8bf68e37ef4614eba470308269dc7b2e0f49e032488877f3c04fceeed33/avlautomation-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26f16f200d96b6566600ef7577e1e117506116493151bf88b971e303cd5d4092",
        "md5": "c6bc3ffde6120bcdd569c590b68df356",
        "sha256": "8ebb540f0f3e90620fee5a65a8d46797566b3db688c637abe7a90d32a0f76bea"
      },
      "downloads": -1,
      "filename": "avlautomation-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c6bc3ffde6120bcdd569c590b68df356",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 18615,
      "upload_time": "2022-12-24T16:20:04",
      "upload_time_iso_8601": "2022-12-24T16:20:04.838984Z",
      "url": "https://files.pythonhosted.org/packages/26/f1/6f200d96b6566600ef7577e1e117506116493151bf88b971e303cd5d4092/avlautomation-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}