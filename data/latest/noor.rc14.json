{
  "info": {
    "author": "Ali Gholami Rudi",
    "author_email": "aligrudi@users.sourceforge.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: X11 Applications :: GTK",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Religion"
    ],
    "description": "=============================\n Noor, A python Quran viewer\n=============================\n\n\nOverview\n========\n\nNoor_ is a small Quran viewer written in Python_.  It shows the\ntranslation of each aya, if specified, right after it.  These are the\ninterfaces that come with noor:\n\n===========   ===================================================\nInterface     Description\n===========   ===================================================\nnoorgtk       Uses PyGtk_ library\nnoorhtmls     Outputs quran in html files in the output directory\nnoorcgi       Can be used as a CGI script in web servers\nnoortxt       Outputs a sura to a text file\n===========   ===================================================\n\n.. _Noor: http://noor.sf.net/\n.. _PyGTK: http://www.pygtk.org/\n.. _Python: http://www.python.org/\n\n\nNew Features\n============\n\n* copy current aya/translation to clipboard\n* support for vi-like marks\n\nGetting Started\n===============\n\nnoorgtk\n-------\n\nFor using the GTK interface you need to install Python_ and PyGTK_\n(they are installed by default in some linux distributions like\nUbuntu).  You can start it by running ``noorgtk.pyw`` script either\nfrom the command line or by double clicking it in the extracted\nfolder.  That is, no installation is necessary.\n\nBut if you like, you can run ``python setup.py install`` to install\nNoor.  After that you'll be able to run ``noorgtk.pyw`` in the terminal\nfrom any location.\n\nnoorhtmls\n---------\n\nThe noorhtmls interface can be used to output quran in html files in a\ndirectory.  All you should do is to run::\n\n  noorhtmls.py output_folder\n\nThe ``index.html`` file will contain the list of suras and\n``001.html`` through ``114.html`` files will contain the suras.  Note\nthat the configuration specified in the ``~/.noor`` file is considered\nwhen generating the pages.\n\nnoorcgi\n-------\n\nInstalling the CGI script, ``noorcgi.py``, is like installing any\nother CGI script.  You probably have to copy it to the ``cgi-bin``\ndirectory of your web server.  But before that you should either\ninstall noor as described in the noorgtk_ section or change the line\nin ``noorcgi.py`` file which looks like::\n\n  # Add noor to the python path if its not installed:\n  sys.path.append('/noor/extracted/folder/')\n\nto point to the folder in which you've extracted noor.  Note that if\nyou want to use the CGI interface you no longer need to install\nPyGTK_.\n\n\nNoorgtk Tutorial\n================\n\nAfter starting ``noorgtk`` as described above, you'll be asked to\nselect a sura to view.  (Use ``gtk.ask_sura_at_start`` config or give\na command line argument to skip that).\n\nNow you see the sura you've chosen.  Use up and down keys to move the\ntext.  Press ``a`` key; you'll be asked to enter an aya number.  After\npressing enter you'll be moved to that aya.\n\nNow press ``c``.  A dialog pops up in which you can select a sura.\n\nPress ``s`` this time; Noor will ask you to insert a sura number to\ngo to.  Also ``J`` (that is capital j) moves you to the start of a\njuz.\n\nNow press ``C-M-n`` or ``C-j`` (whichever you're most comfortable\nwith).  Noor will show the next sura.  Likewise ``C-M-p`` or ``C-k``\ncan be used for previous sura.\n\nSome commands need an integer argument, such as goto aya, goto the\npage before aya, goto sura and goto juz.  If you type a number before\nusing these commands, that number will be assumed to be the argument\nand Noor *won't* ask the number in a dialog.\n\nNote that many of Noor commands can be done in more than one way and\nhave more than one key-binding.  See the `noorgtk keys`_ and try its\ncommands.\n\nAlso you can tell noorgtk to start from a sura and aya using command\nline arguments.  For instance ``noorgtk.pyw 100 3`` goes to the third\naya of the 100th sura.\n\n\nAdding Translations\n===================\n\nYou can edit the ``~/.noor`` file::\n\n  [common]\n  translation = /path/to/translation/file\n\nThe translation file can be in two formats.  It can be either a zip\nfile in the same format as Zekr_ translation files which can be\nobtained from http://siahe.com/zekr/resources.html or it can be a\nutf-8 text file with translation of each aya in one line.\n\n.. _Zekr: http://siahe.com/zekr\n\n\nChanging Font\n=============\n\nYou can change the GTK or html fonts in ``~/.noor`` file::\n\n  [gtk]\n  font = me_quran 23\n  translation_font = Dejavu Sans Mono size:14 fgcolor:#001100 fgcolor:#DDDDFF\n\n  [html]\n  font = me_quran 6 fgcolor:554444\n  translation_font = Dejavu Sans Mono 4 fgcolor:444455\n\nA font has face, size, fgcolor and bgcolor attributes.  These\nattributes can be set using ``attr:value`` format where ``attr`` is\nattribute name.  The old format still works; that is ``myfont 16`` is\nthe same as ``myfont size:16`` and also the same as ``face:myfont\nsize:16``.\n\n\nNotes\n=====\n\nYou can add notes to suras and ayas.  You can use ``gtk.show_notes``\nvariable to enable this feature; add this to your ``~/.noor``::\n\n  [gtk]\n  show_notes = 1\n\nWhen enabled, notes panel is shown right above the status bar.\n\nUsing ``A`` key (that is ``shift-a``), moves the focus to ``notes``\npanel (you can also use the mouse).  You can use ``N`` to toggle note\npanel visibility.\n\nNotes are saved in ``gtk.notes_dir`` directory (``~/.noornotes``, by\ndefault) when either the focus moves out of notes panel or when you\npress ``C-s``.  Notes are saved in:\n\n* notes for kth sura will be written in ``k.txt``\n* notes for the kth aya of jth sura will be written in ``j-k.txt``\n\n\nChanging The Language\n=====================\n\nYou can change the language of noorgtk dialogs and noorhtmls pages;\nfor instance::\n\n  [common]\n  lang = en\n\nwill use English.  The value of ``common.lang`` config should be a two\nletter symbol of a language.  Currently Arabic (``ar``), English\n(``en``), Farsi (``fa``) and Pashto (``ps``) are supported.  If you\nlike, you can translate noor to other languages (ask the mailing list\nif you need help).\n\n\nPlaying Recitation\n==================\n\nYou can use ``gtk.play_aya`` and ``gtk.play_sura`` to play sura and\naya recitation.  For instance::\n\n  [gtk]\n  play_aya = mplayer -noconsolecontrols /path/to/folder/${sura}${aya}.mp3\n\n``${sura}`` and ``${aya}`` are replaced with zero filled sura and aya\nnumber.\n\nYou can also ask noor to follow ayas; that is when the player finishes\nwith zero return value noor goes to the next aya.  For this to work\nyou need to set the ``gtk.follow_ayas`` option::\n\n  [gtk]\n  follow_ayas = 1\n\nYou can use the ``K`` key to stop following ayas.\n\n\nHiding Noorgtk Parts\n====================\n\nYou can hide most GUI parts of noorgtk.  For instance::\n\n  [gtk]\n  menu_bar = 0\n  status_bar = 0\n  toolbar = 0\n  scrollbar = 0\n  task_pane = 0\n  show_notes = 0\n  hide_buttons = 1\n\nWill hide things like menu bar, status bar and toolbar.\n\n\nNoorgtk Keys\n============\n\nThese keys can be used in the GTK interface.  Note that ``C-`` stands\nfor control key, ``M-`` for alt key, ``S-`` for shift key and ``C-M``\nfor control and alt key pressed together.  For instance ``C-n`` means\npressing ``n`` key while holding the control key.\n\n=============================  ============================\nAction                         Keys\n=============================  ============================\nmove down                      down, j, C-n, C-f, C-d\nmove up                        up, k, C-p, C-b, C-d\nnext page                      page-down, space, C-v\nprevious page                  page-up, S-space, M-v\nsura start                     home, C-a\nsura end                       end, C-e\n\nnext sura                      C-M-n, C-j\nchoose sura                    c\nprevious sura                  C-M-p, C-k\n\nnext aya                       n\nprevious aya                   p\ncurrent aya                    .\n\ncopy aya                       y\ncopy aya translation           Y\n\nappend digit to number         digits; [0-9]\nclear number                   escape, C-g\ngoto n-th aya                  a, return, M-g, G\ngoto the page before n-th aya  b, S-return, M-G\ngoto n-th sura                 s, C-return, C-M-g, s\ngoto n-th juz start            J, C-M-return, C-M-G\n\nback                           C-[, M-left\nforward                        C-], M-right\n\nadd bookmark                   B\njump to bookmark               M\n\nadd mark                       m\njump to mark                   ', `\n\nfullscreen                     f, F11\nsearch forward                 /, C-s\nsearch backwards               ?, C-r\n\nstop the player                K\n\ntoggle notes                   N\nwrite note                     A\n\nabout                          r\nquit                           q\n=============================  ============================\n\nNote ``n`` here means the number typed so far.  Actually by pressing\ndigits you prefix commands.  For instance pressing ``2`` followed by\n``1`` and followed by ``C-M-return``, you tell noor to go to the start\nof the 21st juz.\n\nIf no prefix is typed for prefixed commands, noor will ask it in a\ndialog.\n\n\nConfiguration File\n==================\n\nYou can specify configuration options in ``~/.noor`` file.  See the\nend of ``noor/uihelpers.py`` file for the default contents of\n``~/.noor`` file (the default ``~/.noor`` will be created if it does\nnot exist).\n\nNote that ``html`` section of the config file is applied to both\n*noorcgi* and *noorhtmls* interfaces.\n\n\nBookmarks\n=========\n\nNoor supports aya bookmarks.  When you add a bookmark, the location\nand its name is saved so that you can jump to that location from the\n``list bookmarks`` dialog.\n\nNoor saves bookmarks in a ``~/.noor.bmk`` by default.  You can change\nthat by using ``gtk.bookmark_file`` option.  Each line of this file\ncan contain a bookmark like::\n\n  sura_number:aya_number bookmark_name\n\nYou can edit this file manually to change them.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://noor.sf.net/",
    "keywords": null,
    "license": "GNU GPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "noor",
    "package_url": "https://pypi.org/project/noor/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/noor/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://noor.sf.net/"
    },
    "release_url": "https://pypi.org/project/noor/1.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A python Quran viewer",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 92412,
  "releases": {
    "0.1": [],
    "0.2": [],
    "0.3": [],
    "0.4": [],
    "0.5": [],
    "0.6": [],
    "0.7": [],
    "0.8": [],
    "0.8.1": [],
    "0.8.2": [],
    "0.9": [],
    "1.0": [],
    "1.1": [],
    "1.2": []
  },
  "urls": [],
  "vulnerabilities": []
}