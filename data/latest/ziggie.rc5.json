{
  "info": {
    "author": "Nathan Geffen",
    "author_email": "nathan@simhub.online",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Medical Science Apps."
    ],
    "description": "# Ziggie macro modelling\n\nZiggie is a Python package for infectious disease modelling.\n\nThe macro module facilitates compartmental modelling using difference equations,\nor macro models.\n\n## Quick start\n\nZiggie requires Python 3.5 or later.\n\nFirst install it:\n\n```bash\npip install ziggie\n```\n\nHere's Python code to create and run a simple SIR model\n\n```Python\nfrom ziggie import macro\n\n# Simple SIR model with susceptible population of 1 million and\n# one infection. Effective contact rate per day is 0.6 and the\n# infection duration is ten days.\n\nsimple = {\n    'name': 'Simple model',\n    'compartments': {\n        'S': 1000000, # Susceptible\n        'I': 1,       # Infectious\n        'R': 0        # Recovered\n    },\n    'transitions': {\n        # (sometimes called beta in the literature)\n        'S_I': 0.6, # Effective contact rate\n        'I_R': 0.1  # Recovery rate per day\n    },\n}\n\n# Make a list of outputs with the results\n# which by default are printed out every 50 days and\n# at the beginning and end of the simulation.\n# Each entry in the results table is an updated model\n# For a particular day.\nresults = macro.simulate([simple])\nprint(\"Final day's results\")\nprint(results[-1])\n\n# Flatten the final day's results into a table\ntable = macro.modelList_to_table(results[-1])\nprint(\"Time series table\")\nprint(table)\n\n# Put all the results into a CSV file\nmacro.series_to_csv(results, \"my_csv_file.csv\")\n\n# Run model and create CSV in one step\nmacro.series_to_csv(macro.simulate([simple]), \"my_csv_file.csv\")\n\n```\n\nThe output is:\n\n```Python\nFinal day's results\n[{'name': 'Simple model', 'compartments': {'S': 65525.67886409458, 'I': 1.5383929100326267e-07, 'R': 56934475.32113576}, 'transitions': {'S_I': 0.6, 'I_R': 0.1}, 'parameters': {'from': 0, 'to': 365, 'record_frequency': 50, 'reduce_infectivity': 1.0, 'asymptomatic_infectiousness': 1.0, 'treatment_infectiousness': 1.0, 'noise': 0.0, 'discrete': False, 'record_first': True, 'record_last': True, 'transition_funcs': {'S_I': <function delta_S_I at 0x7fa842cdb8b0>, 'S_E': <function delta_S_I at 0x7fa842cdb8b0>, 'S_I1': <function delta_S_I1 at 0x7fa84651e5e0>, 'S_E1': <function delta_S_I1 at 0x7fa84651e5e0>, 'B_S': <function delta_birth_X at 0x7fa84651e3a0>, 'default': <function delta_X_Y at 0x7fa846519310>}, 'before_funcs': [], 'after_funcs': []}, 'iteration': 365}]\nTime series table\n[['iter', 'name_0', 'S', 'I', 'R'], [0, 'Simple model', 57000000, 1, 0], [50, 'Simple model', 2200495.449318898, 28345727.9672264, 26453777.583454713], [100, 'Simple model', 66701.56917131442, 167716.11455651774, 56765583.316272154], [150, 'Simple model', 65531.91780545574, 898.2457754223102, 56933570.83641911], [200, 'Simple model', 65525.71227208052, 4.810125157065176, 56934470.477602795], [250, 'Simple model', 65525.67904299378, 0.025758303410947692, 56934475.29519872], [300, 'Simple model', 65525.67886505151, 0.00013793615973905623, 56934475.32099703], [350, 'Simple model', 65525.67886409864, 7.38650518227673e-07, 56934475.32113517], [365, 'Simple model', 65525.67886409458, 1.5383929100326267e-07, 56934475.32113576]]\n```\n\nYou can also open one of the generated CSV files in your favourite spreadsheet program.\n\nIt's also easy to use with numpy. In the above example the table variable\nconsists of string and floats. Numpy arrays really only make sense if they're\nnumbers, so we'll chop off the strings before conversion.. Here's a continuation\nof the above example:\n\n```Python\nimport numpy\n\ntable_float = [t[2:] for t in table[1:]]\nprint(numpy.array(table_float))\n\n```\n\nThe output should be:\n\n```Python\narray([[5.70000000e+07, 1.00000000e+00, 0.00000000e+00],\n       [2.20049545e+06, 2.83457280e+07, 2.64537776e+07],\n       [6.67015692e+04, 1.67716115e+05, 5.67655833e+07],\n       [6.55319178e+04, 8.98245775e+02, 5.69335708e+07],\n       [6.55257123e+04, 4.81012516e+00, 5.69344705e+07],\n       [6.55256790e+04, 2.57583034e-02, 5.69344753e+07],\n       [6.55256789e+04, 1.37936160e-04, 5.69344753e+07],\n       [6.55256789e+04, 7.38650518e-07, 5.69344753e+07],\n       [6.55256789e+04, 1.53839291e-07, 5.69344753e+07]])\n```\n\n## Transitions\n\nA transition name consists of two compartment names separated by an\nunderscore. There are default transition functions, depending on the\ncompartments involved, which you can override by including a 'parameters'\ndictionary in your model, and then overriding entries in its 'transition_funcs' sub-dictionary.\n\nThis is what the default *transition_funcs* dictionary looks like:\n\n```Python\n    'transition_funcs': {\n        'S_I': delta_S_I,\n        'S_E': delta_S_I,\n        'S_I1': delta_S_I1,\n        'S_E1': delta_S_I1,\n        'B_S': delta_birth_X,\n        'default': delta_X_Y\n    }\n```\n\nThe transition function to execute is looked up in this dictionary. If it's not\nfound the function specified by 'default' is executed.\n\nFor most transitions, a proportion of the \"from\" compartment is moved\nto the \"to\" compartment. The delta_X_Y function takes care of this.\n\nBut for new infections you almost always want a standard SIR-like equation such\nas this:\n\ndelta = susceptibles * number of contacts per iteration *\n                       risk of infection per contact *\n                       total number of infectious individuals /\n                       total population\n\nsusceptibles -= delta\ninfectious (or exposed) individuals += delta\n\nTwo functions are provided to deal with this: the very simple delta_S_I\nand the more sophisticated (but slower) delta_S_I1.\n\nThe delta_SI1 calculates the total number of infectious individuals by adding\nall the compartments starting with an *I* as well as all compartments starting\nwith an *A* (asymptomatic individuals) and *T* (treated individuals). Moreover\nthe infectiousness of the asymptomatic individuals is multiplied by the\nparameter *asymptomatic_infectiousness* and the infectiousness of treated\nindividuals by *treatment_infectiousness* (both default to 1).\n\n## Compartment names which have meaning\n\nSome of the compartment name prefixes are meaningful, in that the code might\nmake assumptions about the compartment. A compartment name generally starts with\none of these meaningful prefixes and then a unique identifier. E.g. I1, I2, I3\nor I4 for various stages of infectiousness.\n\n- S - Susceptible  (See delta_S_I and delta_S_I1)\n- E - Exposed  (See delta_S_I and delta_S_I1)\n- I - Infectious (See delta_S_I and delta_S_I1)\n- A - Asymptomatic (See delta_S_I1 and asymptomatic_infectiousness)\n- T - On treatment (See delta_S_I1 and treatment_infectiousness)\n- N - Population size. Strictly reserved. Do not prefix any compartment N.\n- D - Dead (not included in totalling N)\n- B - Birth (not included in totalling N)\n- R - Recovered\n- M - Maternal immunity\n- V - Vaccinated\n\nYou can also prefix a compartment name with any other letter.\n\n## Noise\n\nYou can also add noise to your model so that it is stochastic. We add a\n'parameters' key to our model, and within the parameters, we add a 'noise'\nkey. Like so:\n\n```Python\n {\n    'name': 'Simple model',\n    'compartments': {\n        'S': 57000000,\n        'I': 1,\n        'R': 0\n    },\n    'transitions': {\n        'S_I': 0.6,\n        'I_R': 0.1\n    },\n    'parameters': {\n        'noise': 0.05\n    }\n}\n```\n\nNow every transition calculation is multipled by a uniform random number in the\nrange [1-0.05, 1+0.05].\n\n## Parameters\n\nBesides 'noise' there are many other parameters that can be modified\ndirectly. These are the default parameters:\n\n```Python\n{\n    # The model is executed from iteration 'from' to iteration 'to' - 1.\n    'from': 0,\n    'to': 365,\n    # The results are recorded every 'record_frequency' iterations. Set\n    # to 1 if you want to record the output of every iteration.\n    'record_frequency': 50,  # Write results every X iterations\n    # Multiply S_E or S_I by X every iteration if reduce_infectivity\n    # function executed. This is useful for modelling heterogeneity, i.e. the\n    # fact that usually the most susceptible people get infected earliest in an\n    # epidemic\n    'reduce_infectivity': 1.0,\n    # If you have multiple infectiousness compartments including\n    # asymptomatic and treatment compartments, you can\n    'asymptomatic_infectiousness': 1.0,\n    'treatment_infectiousness': 1.0,\n    # Add stochastic noise to transitions\n    'noise': 0.0,\n    # Round all transition calculations to round numbers (not tested yet)\n    'discrete': False,\n    # Include the initial state of the model in the results\n    'record_first': True,\n    # Include the final state of the model in the results.\n    # If record_frequency is 1 or divides into the \"to\" parameter,\n    # you probably want to set this to False.\n    'record_last': True,\n    # The transition functions\n    'transition_funcs': {\n        'S_I': delta_S_I,\n        'S_E': delta_S_I,\n        'S_I1': delta_S_I1,\n        'S_E1': delta_S_I1,\n        'B_S': delta_birth_X,\n        'default': delta_X_Y\n    },\n    # Any functions specified here are executed for each model before\n    # each iteration\n    'before_funcs': [],\n    # Any functions specified here are executed for each model after\n    # each iteration\n    'after_funcs': [],\n}\n```\n\n## More sophisticated example\n\nLet's say we want to model the Covid-19 epidemic in South Africa.\n\nOur model world might like this:\n\n- We have three distinct geographies: (1) urban areas with formal housing (2)\n  urban areas with informal housing and (3) rural areas.\n- Each area has three distinct age groups: (1) 0-24 years old, (2) 25-54, and\n  (3) 55 and older.\n- People start off (S)usceptible. Upon being infected they are (E)xposed. They\n  transition from (E)xposed to either (A)symptomatic or infectious with mild\n  symptoms(Im). Asymptomatic people transition to (R)ecovered. Infectious with\n  mild symptoms transition to infectious with critical symptoms (Ic) and then\n  either to (R)ecovered or (D)eath.\n- After each iteration, there is a bit of migration between the three\n  geographies.\n\nThe source code file ziggie/samples.py contains a class called MacroModels\nwhich contains a method called corona that implements this. Here it is:\n\n```Python\nfrom copy import deepcopy\nfrom ziggie import macro\n\ndef corona(self):\n    parameters = {\n        'to': 365,\n        'record_frequency': 1,\n        'record_last': False,\n        'noise': 0.1,\n        'asymptomatic_infectiousness': 0.75,\n        'reduce_infectivity': 0.999,\n        'after_funcs': [macro.reduce_infectivity, ],\n        'transition_funcs': {\n            'S_E': macro.delta_S_I1,\n        }\n    }\n\n    parameters_rural = deepcopy(parameters)\n    parameters_rural['after_funcs'] = [macro.reduce_infectivity,\n                                       mix_models, ]\n    return [\n        {\n            'name': 'Urban informal',\n            'parameters': parameters,\n            'transitions': {\n                'S_E': 0.4,\n                'E_A': 0.125,\n                'E_Im': 0.125,\n                'Im_Ic': 0.2,\n                'Ic_R': 0.2,\n                'A_R': 0.2\n            },\n            'groups': [\n                {\n                    'name': '0-24',\n                    'transitions': {\n                        'E_A': 0.25,\n                        'E_Im': 0.01,\n                        'Ic_D': 0.002\n                    },\n                    'compartments': {\n                        'S': 2100000,\n                        'E': 10,\n                        'Im': 0,\n                        'Ic': 0,\n                        'A': 0,\n                        'R': 0,\n                        'D': 0\n                    }\n                },\n                {\n                    'name': '25-54',\n                    'transitions': {\n                        'Ic_D': 0.0032\n                    },\n                    'compartments': {\n                        'S': 2100000,\n                        'E': 0,\n                        'Im': 0,\n                        'Ic': 0,\n                        'A': 0,\n                        'R': 0,\n                        'D': 0\n                    }\n                },\n                {\n                    'name': '55-',\n                    'transitions': {\n                        'Ic_D': 0.032\n                    },\n                    'compartments': {\n                        'S': 600000,\n                        'E': 0,\n                        'Im': 0,\n                        'Ic': 0,\n                        'A': 0,\n                        'R': 0,\n                        'D': 0\n                    }\n                }\n            ]\n        },\n        {\n            'name': 'Urban formal',\n            'parameters': parameters,\n            'transitions': {\n                'S_E': 0.3,\n                'E_A': 0.125,\n                'E_Im': 0.125,\n                'Im_Ic': 0.2,\n                'Ic_R': 0.2,\n                'A_R': 0.2\n            },\n            'groups': [\n                {\n                    'name': '0-24',\n                    'transitions': {\n                        'E_A': 0.25,\n                        'E_Im': 0.01,\n                        'Ic_D': 0.002\n                    },\n                    'compartments': {\n                        'S': 16940000,\n                        'E': 10,\n                        'Im': 0,\n                        'Ic': 0,\n                        'A': 0,\n                        'R': 0,\n                        'D': 0\n                    }\n                },\n                {\n                    'name': '25-54',\n                    'transitions': {\n                        'Ic_D': 0.003\n                    },\n                    'compartments': {\n                        'S': 16940000,\n                        'E': 0,\n                        'Im': 0,\n                        'Ic': 0,\n                        'A': 0,\n                        'R': 0,\n                        'D': 0\n                    }\n                },\n                {\n                    'name': '55-',\n                    'transitions': {\n                        'Ic_D': 0.03\n                    },\n                    'compartments': {\n                        'S': 4620000,\n                        'E': 0,\n                        'Im': 0,\n                        'Ic': 0,\n                        'A': 0,\n                        'R': 0,\n                        'D': 0\n                    }\n                }\n            ]\n        },\n        {\n            'name': 'Rural',\n            'parameters': parameters_rural,\n            'transitions': {\n                'S_E': 0.27,\n                'E_A': 0.125,\n                'E_Im': 0.125,\n                'Im_Ic': 0.2,\n                'Ic_R': 0.2,\n                'A_R': 0.2\n            },\n            'groups': [\n                {\n                    'name': '0-24',\n                    'transitions': {\n                        'E_A': 0.25,\n                        'E_Im': 0.01,\n                        'Ic_D': 0.002\n                    },\n                    'compartments': {\n                        'S': 7260000,\n                        'E': 10,\n                        'Im': 0,\n                        'Ic': 0,\n                        'A': 0,\n                        'R': 0,\n                        'D': 0\n                    }\n                },\n                {\n                    'name': '25-54',\n                    'transitions': {\n                        'Ic_D': 0.0035\n                    },\n                    'compartments': {\n                        'S': 7260000,\n                        'E': 0,\n                        'Im': 0,\n                        'Ic': 0,\n                        'A': 0,\n                        'R': 0,\n                        'D': 0\n                    }\n                },\n                {\n                    'name': '55-',\n                    'transitions': {\n                        'Ic_D': 0.035\n                    },\n                    'compartments': {\n                        'S': 2000000,\n                        'E': 0,\n                        'Im': 0,\n                        'Ic': 0,\n                        'A': 0,\n                        'R': 0,\n                        'D': 0\n                    }\n                }\n\n            ]\n        }\n    ]\n\nm = corona()\nresults = macro.simulate(m)\nprint(\"Number of results:\", len(results)) # Outputs 366\nprint(\"Number of models:\", len(results[-1])) # Outputs 3\ntotals = [macro.calc_totals(results[-1][i])\n          for i in range(len(results[-1]))\nprint(macro.sum_totals(totals))\n```\n\nThe output is something like this:\n\n```\nNumber of results: 366\nNumber of models: 3\n{'N': 59685873.7194506, 'S': 47387513.37539025, 'E': 283059.79850507394, 'Im': 108802.85166144818, 'Ic': 106605.46023480814, 'A': 264806.9195997677, 'R': 11535085.314059254, 'D': 134156.28054939664}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nathangeffen/ziggie",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ziggie",
    "package_url": "https://pypi.org/project/ziggie/",
    "platform": "",
    "project_url": "https://pypi.org/project/ziggie/",
    "project_urls": {
      "Homepage": "https://github.com/nathangeffen/ziggie"
    },
    "release_url": "https://pypi.org/project/ziggie/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Infectious disease modelling package",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7577820,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3d598ac6a59d21e60e7440e8c51ec4569ef6ff9c827f8056f54d4d64e825224",
          "md5": "d34fdd64519e627072a3a179dd66a83d",
          "sha256": "3cdf220fbd3bf4ec713cbad3fd44adecdb4a7a8a35bd15bbc54056073abe3064"
        },
        "downloads": -1,
        "filename": "ziggie-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d34fdd64519e627072a3a179dd66a83d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 45347,
        "upload_time": "2020-06-27T13:03:24",
        "upload_time_iso_8601": "2020-06-27T13:03:24.472620Z",
        "url": "https://files.pythonhosted.org/packages/f3/d5/98ac6a59d21e60e7440e8c51ec4569ef6ff9c827f8056f54d4d64e825224/ziggie-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7f084d3168adae6aa52b63d927c9c47a14d991b251b407e29eaccd24fb944c0",
          "md5": "131d4327009383e30ede5c3d1ed0df8f",
          "sha256": "93e8835b56ea82e11622702e85421008593f519144d8168bbf4207d1c7616328"
        },
        "downloads": -1,
        "filename": "ziggie-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "131d4327009383e30ede5c3d1ed0df8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 15977,
        "upload_time": "2020-06-27T13:03:26",
        "upload_time_iso_8601": "2020-06-27T13:03:26.324454Z",
        "url": "https://files.pythonhosted.org/packages/d7/f0/84d3168adae6aa52b63d927c9c47a14d991b251b407e29eaccd24fb944c0/ziggie-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aba93da28b70a67e7c7f842a0a288152a709fc067fa4c7b76e78b3ad78311d24",
          "md5": "5aebe3413b220da651f8949d60aa8af4",
          "sha256": "5b28a0b5e07f6ec43af2d14d6bf04f0adc0b526d1c797160f8399665ea079aa2"
        },
        "downloads": -1,
        "filename": "ziggie-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5aebe3413b220da651f8949d60aa8af4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 48986,
        "upload_time": "2020-06-27T13:47:05",
        "upload_time_iso_8601": "2020-06-27T13:47:05.990790Z",
        "url": "https://files.pythonhosted.org/packages/ab/a9/3da28b70a67e7c7f842a0a288152a709fc067fa4c7b76e78b3ad78311d24/ziggie-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c91b0df976a73883cd7d0034d7b7d4ee2ba7c91ebbde3cbed7b60444097ad2e",
          "md5": "605598d15f5b351f634c430f6b6cd289",
          "sha256": "1ddc9ea04126149407df13eaf62375b0dddd0115f0d206aa0fcc71851b0638b9"
        },
        "downloads": -1,
        "filename": "ziggie-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "605598d15f5b351f634c430f6b6cd289",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 15983,
        "upload_time": "2020-06-27T13:47:07",
        "upload_time_iso_8601": "2020-06-27T13:47:07.433693Z",
        "url": "https://files.pythonhosted.org/packages/8c/91/b0df976a73883cd7d0034d7b7d4ee2ba7c91ebbde3cbed7b60444097ad2e/ziggie-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb315a86a09bf531929ba79bcb47494910506967d1c1218add5e42d914c2921f",
          "md5": "ef078670e6eccdcec442f1b16cb54e33",
          "sha256": "edf9dac523d9bf8a72bd1ef99bb734831c009a56d79e784904814f707699ab42"
        },
        "downloads": -1,
        "filename": "ziggie-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef078670e6eccdcec442f1b16cb54e33",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 52030,
        "upload_time": "2020-06-27T21:27:03",
        "upload_time_iso_8601": "2020-06-27T21:27:03.906627Z",
        "url": "https://files.pythonhosted.org/packages/bb/31/5a86a09bf531929ba79bcb47494910506967d1c1218add5e42d914c2921f/ziggie-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fb7405d70f27bb67aed5ffbf8208e0f320a8d635d3d601100ecac3888dc52a9",
          "md5": "62166a3b87afad376972276b7dcdefac",
          "sha256": "8b38edf2495d99bbc0e5f0ca37470b7f3f0b085d7c1641658a024734760db93c"
        },
        "downloads": -1,
        "filename": "ziggie-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "62166a3b87afad376972276b7dcdefac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 22001,
        "upload_time": "2020-06-27T21:27:06",
        "upload_time_iso_8601": "2020-06-27T21:27:06.836074Z",
        "url": "https://files.pythonhosted.org/packages/2f/b7/405d70f27bb67aed5ffbf8208e0f320a8d635d3d601100ecac3888dc52a9/ziggie-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2f5d47c8b593a1aaf8d4f7bd8767116e846744957656a0e8dc6e0d74ab00387",
          "md5": "ce48fa42608058d3ccf92e0d2c5fe2af",
          "sha256": "17f0baee898a6ba39df8aad45a594ebf552050fd02e4521ff3b0ca22b002ab40"
        },
        "downloads": -1,
        "filename": "ziggie-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce48fa42608058d3ccf92e0d2c5fe2af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 52027,
        "upload_time": "2020-06-27T21:32:33",
        "upload_time_iso_8601": "2020-06-27T21:32:33.868973Z",
        "url": "https://files.pythonhosted.org/packages/a2/f5/d47c8b593a1aaf8d4f7bd8767116e846744957656a0e8dc6e0d74ab00387/ziggie-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "384059523632a363a6d4650578ef1824e6198d44c5482561eb63256f6547b99e",
          "md5": "840c17ad6e37d59ecacc83c0cd5b127f",
          "sha256": "4021c4383bec69b6440a50fa0013a25378a5b2eddc08d388e151f0c9b0c93e68"
        },
        "downloads": -1,
        "filename": "ziggie-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "840c17ad6e37d59ecacc83c0cd5b127f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 22007,
        "upload_time": "2020-06-27T21:32:35",
        "upload_time_iso_8601": "2020-06-27T21:32:35.922810Z",
        "url": "https://files.pythonhosted.org/packages/38/40/59523632a363a6d4650578ef1824e6198d44c5482561eb63256f6547b99e/ziggie-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "132bc7132afcc6f34f920d73253dc9bea55e22f16fd5bd9241358e195709184a",
          "md5": "4201703675d0de896e864ee2e5b6ad18",
          "sha256": "42b54b055f67dcd7273b1b647260ca377d3523446d99cf418cb7dbc72581b90d"
        },
        "downloads": -1,
        "filename": "ziggie-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4201703675d0de896e864ee2e5b6ad18",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 52018,
        "upload_time": "2020-06-27T21:40:14",
        "upload_time_iso_8601": "2020-06-27T21:40:14.054388Z",
        "url": "https://files.pythonhosted.org/packages/13/2b/c7132afcc6f34f920d73253dc9bea55e22f16fd5bd9241358e195709184a/ziggie-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "652bfd954c803db6d12f80fc7a03c64b1a7a3678051c3fa6f4f18336d6e0c83d",
          "md5": "efc45ae6380f0f55237f94f88738596f",
          "sha256": "6e9516ce327eebeceb92db32c455709d1b631cbcdfc0f27bd4317c044084b31e"
        },
        "downloads": -1,
        "filename": "ziggie-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "efc45ae6380f0f55237f94f88738596f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 21982,
        "upload_time": "2020-06-27T21:40:16",
        "upload_time_iso_8601": "2020-06-27T21:40:16.344413Z",
        "url": "https://files.pythonhosted.org/packages/65/2b/fd954c803db6d12f80fc7a03c64b1a7a3678051c3fa6f4f18336d6e0c83d/ziggie-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "132bc7132afcc6f34f920d73253dc9bea55e22f16fd5bd9241358e195709184a",
        "md5": "4201703675d0de896e864ee2e5b6ad18",
        "sha256": "42b54b055f67dcd7273b1b647260ca377d3523446d99cf418cb7dbc72581b90d"
      },
      "downloads": -1,
      "filename": "ziggie-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4201703675d0de896e864ee2e5b6ad18",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 52018,
      "upload_time": "2020-06-27T21:40:14",
      "upload_time_iso_8601": "2020-06-27T21:40:14.054388Z",
      "url": "https://files.pythonhosted.org/packages/13/2b/c7132afcc6f34f920d73253dc9bea55e22f16fd5bd9241358e195709184a/ziggie-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "652bfd954c803db6d12f80fc7a03c64b1a7a3678051c3fa6f4f18336d6e0c83d",
        "md5": "efc45ae6380f0f55237f94f88738596f",
        "sha256": "6e9516ce327eebeceb92db32c455709d1b631cbcdfc0f27bd4317c044084b31e"
      },
      "downloads": -1,
      "filename": "ziggie-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "efc45ae6380f0f55237f94f88738596f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 21982,
      "upload_time": "2020-06-27T21:40:16",
      "upload_time_iso_8601": "2020-06-27T21:40:16.344413Z",
      "url": "https://files.pythonhosted.org/packages/65/2b/fd954c803db6d12f80fc7a03c64b1a7a3678051c3fa6f4f18336d6e0c83d/ziggie-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}