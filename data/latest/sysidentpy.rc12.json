{
  "info": {
    "author": "Wilson Rocha Lacerda Junior",
    "author_email": "wilsonrljr@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<p align=\"center\">\n<img src=\"images/sysidentpy-logo.svg\" width=\"640\" height=\"320\" />\n</p>\n\n[![DOI](https://img.shields.io/badge/DOI-10.21105%2Fjoss.02384-%23FF7800)](https://joss.theoj.org/papers/10.21105/joss.02384)\n[![PyPI version](https://img.shields.io/pypi/v/sysidentpy?color=%23ff7800)](https://pypi.org/project/sysidentpy/)\n[![License](https://img.shields.io/pypi/l/sysidentpy?color=%23FF7800)](https://opensource.org/licenses/BSD-3-Clause)\n[![openissues](https://img.shields.io/github/issues/wilsonrljr/sysidentpy?color=%23FF7800)](https://github.com/wilsonrljr/sysidentpy/issues)\n[![issuesclosed](https://img.shields.io/github/issues-closed-raw/wilsonrljr/sysidentpy?color=%23FF7800)](https://github.com/wilsonrljr/sysidentpy/issues)\n[![downloads](https://img.shields.io/pypi/dm/sysidentpy?color=%23FF7800)](https://pypi.org/project/sysidentpy/)\n[![python](https://img.shields.io/pypi/pyversions/sysidentpy?color=%23FF7800)](https://pypi.org/project/sysidentpy/)\n[![status](https://img.shields.io/pypi/status/sysidentpy?color=%23FF7800)](https://pypi.org/project/sysidentpy/)\n[![discord](https://img.shields.io/discord/711610087700955176?color=%23FF7800&label=discord)](https://discord.gg/7afBSzU4)\n[![contributors](https://img.shields.io/github/contributors/wilsonrljr/sysidentpy?color=%23FF7800)](https://github.com/wilsonrljr/sysidentpy/graphs/contributors)\n[![forks](https://img.shields.io/github/forks/wilsonrljr/sysidentpy?style=social)](https://github.com/wilsonrljr/sysidentpy/network/members)\n[![stars](https://img.shields.io/github/stars/wilsonrljr/sysidentpy?style=social)](https://github.com/wilsonrljr/sysidentpy/stargazers)\n\n\n## What is SysIdentPy?\n\nSysIdentPy is an open-source Python module for System Identification using **NARMAX** models built on top of **numpy** and is distributed under the 3-Clause BSD license. SysIdentPy provides an easy-to-use and  flexible framework for building Dynamical Nonlinear Models for time series and dynamic systems.\n\nCheck our [documentation](https://sysidentpy.org)!\n\n## How do I install SysIdentPy?\n\nThe easiest way to get SysIdentPy running is to install it using ``pip``\n``` console\npip install sysidentpy\n```\n\n### Requirements\n\nSysIdentPy requires:\n\n- Python (>= 3.7)\n- NumPy (>= 1.9.2) for all numerical algorithms\n- Matplotlib >= 3.3.2 for static plotting and visualizations\n- Pytorch (>=1.7.1) for building feed-forward neural networks\n\n| Platform | Status |\n| --------- | -----:|\n| Linux | ok |\n| Windows | ok |\n| macOS | ok |\n\nA few examples require pandas >= 0.18.0. However, it is not required to use SysIdentPy.\n\n## What are the main features of SysIdentPy?\n\n| Feature | What is this? |\n|----------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| NARMAX philosophy | You can build variations of NARMAX models like NARX, NAR, NARMA, NFIR, ARMA, ARX, AR, and others. |\n| Model Structure Selection | Easy-to-use methods to select the best terms to build your models, including FROLS and MetaMSS and several combinations with parameter estimation techniques to select the model terms. |\n| Basis Function | You can use different basis functions to build your models. You can set linear and nonlinear basis functions and ensemble them to get custom NARMAX models. |\n| Parameter Estimation | More than 15 methods to estimate the model parameters and test different structure selection scenarios. |\n| Model Simulation | You can reproduce results from papers easily with SimulateNARMAX class. Moreover, you can test published models with different parameter estimation methods and compare the performance. |\n| Neural NARX | You can use SysIdentPy with Pytorch to create custom neural NARX models architectures which support all the optimizers and loss functions from Pytorch. |\n| General Estimators | You can use estimators from packages like scikit-learn, Catboost, and many other compatible interfaces and composition tools, to create NARMAX models. |\n\n## Why does SysIdentPy exist?\n\nSysIdentPy aims to be a free and open source package to help the community to design NARMAX models. More than that, be a free and robust alternative to one of the most used tools to build NARMAX models, which is the Matlab's System Identification Toolbox.\n\nThe project is actively maintained by Wilson R. L. Junior and looking for contributors.\n\n## How do I use sysIdentPy?\n\nThe [SysIdentPy documentation](https://sysidentpy.org) includes 20 examples to help get you started:\n- Typical \"Hello World\" example, for an [entry-level description of the main SysIdentPy concepts](https://sysidentpy.org/examples/basic_steps/)\n- A dedicated section focusing on SysIdentPy features, like model structure selection algorithms, basis functions, parameter estimation, and more.\n- A dedicated section focusing on use cases using SysIdentPy with real world datasets. Besides, there is some brief comparisons and benchmarks against other time series tools, like Prophet, Neural Prophet, ARIMA, and more.  \n\n\n### Examples\n```python\nfrom torch import nn\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sysidentpy.metrics import root_relative_squared_error\nfrom sysidentpy.utils.generate_data import get_siso_data\n\n\n# Generate a dataset of a simulated dynamical system\nx_train, x_valid, y_train, y_valid = get_siso_data(\n  n=1000,\n  colored_noise=False,\n  sigma=0.001,\n  train_percentage=80\n)\n```\n\n#### Building Polynomial NARX models with FROLS algorithm\n\n```python\nfrom sysidentpy.model_structure_selection import FROLS\nfrom sysidentpy.basis_function import Polynomial\nfrom sysidentpy.utils.display_results import results\nfrom sysidentpy.utils.plotting import plot_residues_correlation, plot_results\nfrom sysidentpy.residues.residues_correlation import compute_residues_autocorrelation\nfrom sysidentpy.residues.residues_correlation import compute_cross_correlation\n\nbasis_function=Polynomial(degree=2)\nmodel = FROLS(\n  order_selection=True,\n  n_info_values=10,\n  extended_least_squares=False,\n  ylag=2,\n  xlag=2,\n  info_criteria='aic',\n  estimator='least_squares',\n  basis_function=basis_function\n)\nmodel.fit(X=x_train, y=y_train)\nyhat = model.predict(X=x_valid, y=y_valid)\nrrse = root_relative_squared_error(y_valid, yhat)\nprint(rrse)\nr = pd.DataFrame(\n\tresults(\n\t\tmodel.final_model, model.theta, model.err,\n\t\tmodel.n_terms, err_precision=8, dtype='sci'\n\t\t),\n\tcolumns=['Regressors', 'Parameters', 'ERR'])\nprint(r)\n\t\nRegressors     Parameters        ERR\n0        x1(k-2)     0.9000  0.95556574\n1         y(k-1)     0.1999  0.04107943\n2  x1(k-1)y(k-1)     0.1000  0.00335113\n\nplot_results(y=y_valid, yhat=yhat, n=1000)\nee = compute_residues_autocorrelation(y_valid, yhat)\nplot_residues_correlation(data=ee, title=\"Residues\", ylabel=\"$e^2$\")\nx1e = compute_cross_correlation(y_valid, yhat, x2_val)\nplot_residues_correlation(data=x1e, title=\"Residues\", ylabel=\"$x_1e$\")\n```\n![polynomial](./examples/figures/polynomial_narmax.png)\n\n#### NARX Neural Network\n```python\nfrom sysidentpy.neural_network import NARXNN\nfrom sysidentpy.basis_function import Polynomial\nfrom sysidentpy.utils.plotting import plot_residues_correlation, plot_results\nfrom sysidentpy.residues.residues_correlation import compute_residues_autocorrelation\nfrom sysidentpy.residues.residues_correlation import compute_cross_correlation\n\nclass NARX(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.lin = nn.Linear(4, 10)\n        self.lin2 = nn.Linear(10, 10)\n        self.lin3 = nn.Linear(10, 1)\n        self.tanh = nn.Tanh()\n\n    def forward(self, xb):\n        z = self.lin(xb)\n        z = self.tanh(z)\n        z = self.lin2(z)\n        z = self.tanh(z)\n        z = self.lin3(z)\n        return z\n\nbasis_function=Polynomial(degree=1)\n\nnarx_net = NARXNN(\n  net=NARX(),\n  ylag=2,\n  xlag=2,\n  basis_function=basis_function,\n  model_type=\"NARMAX\",\n  loss_func='mse_loss',\n  optimizer='Adam',\n  epochs=200,\n  verbose=False,\n  optim_params={'betas': (0.9, 0.999), 'eps': 1e-05} # optional parameters of the optimizer\n)\n\nnarx_net.fit(X=x_train, y=y_train)\nyhat = narx_net.predict(X=x_valid, y=y_valid)\nplot_results(y=y_valid, yhat=yhat, n=1000)\nee = compute_residues_autocorrelation(y_valid, yhat)\nplot_residues_correlation(data=ee, title=\"Residues\", ylabel=\"$e^2$\")\nx1e = compute_cross_correlation(y_valid, yhat, x_valid)\nplot_residues_correlation(data=x1e, title=\"Residues\", ylabel=\"$x_1e$\")\n```\n![neural](/examples/figures/narx_network.png)\n\n#### Catboost-narx\n```python\nfrom catboost import CatBoostRegressor\nfrom sysidentpy.general_estimators import NARX\nfrom sysidentpy.basis_function import Polynomial\nfrom sysidentpy.utils.plotting import plot_residues_correlation, plot_results\nfrom sysidentpy.residues.residues_correlation import compute_residues_autocorrelation\nfrom sysidentpy.residues.residues_correlation import compute_cross_correlation\n\n\nbasis_function=Polynomial(degree=1)\n\ncatboost_narx = NARX(\n  base_estimator=CatBoostRegressor(\n    iterations=300,\n    learning_rate=0.1,\n    depth=6),\n  xlag=2,\n  ylag=2,\n  basis_function=basis_function,\n  fit_params={'verbose': False}\n)\n\ncatboost_narx.fit(X=x_train, y=y_train)\nyhat = catboost_narx.predict(X=x_valid, y=y_valid)\nplot_results(y=y_valid, yhat=yhat, n=1000)\nee = compute_residues_autocorrelation(y_valid, yhat)\nplot_residues_correlation(data=ee, title=\"Residues\", ylabel=\"$e^2$\")\nx1e = compute_cross_correlation(y_valid, yhat, x_valid)\nplot_residues_correlation(data=x1e, title=\"Residues\", ylabel=\"$x_1e$\")\n```\n![catboost](/examples/figures/catboost_narx.png)\n\n#### Catboost without NARX configuration\n\nThe following is the Catboost performance without the NARX configuration.\n\n\n```python\n\ndef plot_results_tmp(y_valid, yhat):\n    _, ax = plt.subplots(figsize=(14, 8))\n    ax.plot(y_valid[:200], label='Data', marker='o')\n    ax.plot(yhat[:200], label='Prediction', marker='*')\n    ax.set_xlabel(\"$n$\", fontsize=18)\n    ax.set_ylabel(\"$y[n]$\", fontsize=18)\n    ax.grid()\n    ax.legend(fontsize=18)\n    plt.show()\n\ncatboost = CatBoostRegressor(\n  iterations=300,\n  learning_rate=0.1,\n  depth=6\n)\ncatboost.fit(x_train, y_train, verbose=False)\nplot_results_tmp(y_valid, catboost.predict(x_valid))\n```\n![catboost](/examples/figures/catboost.png)\n\nThe examples directory has several Jupyter notebooks with tutorials of how to use the package and some specific applications of sysidentpy. Try it out!\n\n## Communication\n\n- Discord server: https://discord.gg/8eGE3PQ\n\n  [![discord](https://img.shields.io/discord/711610087700955176?color=%23FF7800&label=discord)](https://discord.gg/7afBSzU4)\n\n\n- Website: http://sysidentpy.org\n\n## Citation\n[![DOI](https://img.shields.io/badge/DOI-10.21105%2Fjoss.02384-%23FF7800)](https://joss.theoj.org/papers/10.21105/joss.02384)\n\nIf you use SysIdentPy on your project, please [drop me a line](mailto:wilsonrljr@outlook.com).\n\nIf you use SysIdentPy on your scientific publication, we would appreciate citations to the following paper:\n\n- Lacerda et al., (2020). SysIdentPy: A Python package for System Identification using NARMAX models. Journal of Open Source Software, 5(54), 2384, https://doi.org/10.21105/joss.02384\n\n```\n@article{Lacerda2020,\n  doi = {10.21105/joss.02384},\n  url = {https://doi.org/10.21105/joss.02384},\n  year = {2020},\n  publisher = {The Open Journal},\n  volume = {5},\n  number = {54},\n  pages = {2384},\n  author = {Wilson Rocha Lacerda Junior and Luan Pascoal Costa da Andrade and Samuel Carlos Pessoa Oliveira and Samir Angelo Milani Martins},\n  title = {SysIdentPy: A Python package for System Identification using NARMAX models},\n  journal = {Journal of Open Source Software}\n}\n```\n\n## Inspiration\n\nThe documentation and structure (even this section) is openly inspired by sklearn, einsteinpy, and many others as we used (and keep using) them to learn.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "NARMAX,NARX,system identification,machine learning",
    "license": "BSD 3-Clause License Copyright (c) 2019, Wilson Rocha; Luan Pascoal; Samuel Oliveira; Samir Martins All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
    "maintainer": "",
    "maintainer_email": "Wilson Rocha Lacerda Junior <wilsonrljr@outlook.com>",
    "name": "sysidentpy",
    "package_url": "https://pypi.org/project/sysidentpy/",
    "platform": null,
    "project_url": "https://pypi.org/project/sysidentpy/",
    "project_urls": {
      "changelog": "https://github.com/wilsonrljr/sysidentpy/blob/master/CHANGELOG",
      "documentation": "http://sysidentpy.org/",
      "homepage": "http://sysidentpy.org",
      "repository": "https://github.com/wilsonrljr/sysidentpy"
    },
    "release_url": "https://pypi.org/project/sysidentpy/0.2.1/",
    "requires_dist": [
      "numpy (>=1.19.2)",
      "scipy (>=1.7.0)",
      "matplotlib (>=3.3.2)",
      "torch (>=1.7.1) ; extra == 'all'",
      "pytest (<7.0.0,>=6.2.4) ; extra == 'dev'",
      "pytest-cov (<4.0.0,>=2.12.0) ; extra == 'dev'",
      "flake8 (<4.0.0,>=3.8.3) ; extra == 'dev'",
      "black (==22.3.0) ; extra == 'dev'",
      "isort (<6.0.0,>=5.0.6) ; extra == 'dev'",
      "scikit-learn ; extra == 'dev'",
      "mkdocs (<2.0.0,>=1.1.2) ; extra == 'doc'",
      "mkdocs-material (<9.0.0,>=8.1.4) ; extra == 'doc'",
      "mdx-include (<2.0.0,>=1.4.1) ; extra == 'doc'",
      "mkdocs-markdownextradata-plugin (<0.3.0,>=0.1.7) ; extra == 'doc'",
      "typer (<0.5.0,>=0.4.1) ; extra == 'doc'",
      "pyyaml (<7.0.0,>=5.3.1) ; extra == 'doc'",
      "mkdocstrings[python] ; extra == 'doc'",
      "mkdocs-redirects ; extra == 'doc'",
      "mkdocs-minify-plugin ; extra == 'doc'",
      "mkdocs-glightbox ; extra == 'doc'",
      "mkdocs-jupyter ; extra == 'doc'",
      "jinja2 (==3.0.3) ; extra == 'doc'"
    ],
    "requires_python": "<=3.10,>=3.7",
    "summary": "A Python Package For System Identification Using NARMAX Models",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14935162,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d45a6ced63ec4a7d597b56b1e60927696b8373c96f6ca3e841ef0ba339afc4ae",
          "md5": "4d09d1c94cfac02df4aabc5248d04e4d",
          "sha256": "cc69d776a02a0082a76ede98054edce8a3b9a60e84e04a9558935684a55a1799"
        },
        "downloads": -1,
        "filename": "sysidentpy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4d09d1c94cfac02df4aabc5248d04e4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24651,
        "upload_time": "2020-05-18T23:25:53",
        "upload_time_iso_8601": "2020-05-18T23:25:53.101002Z",
        "url": "https://files.pythonhosted.org/packages/d4/5a/6ced63ec4a7d597b56b1e60927696b8373c96f6ca3e841ef0ba339afc4ae/sysidentpy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b39b20dde4808c7f81badaecd84f112edd161f989b94f1dc84401acda6c49ae2",
          "md5": "420e7b8034e12bc56f7f604cea3a27ad",
          "sha256": "29bdc737612a12b2bff730adc1a5531c792b5b7ed52de1b3be9e33062c65a59d"
        },
        "downloads": -1,
        "filename": "sysidentpy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "420e7b8034e12bc56f7f604cea3a27ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24521,
        "upload_time": "2020-05-19T00:44:49",
        "upload_time_iso_8601": "2020-05-19T00:44:49.066554Z",
        "url": "https://files.pythonhosted.org/packages/b3/9b/20dde4808c7f81badaecd84f112edd161f989b94f1dc84401acda6c49ae2/sysidentpy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "377a86ecca1d8dda611a44ea50791db909e103e09a18a464c7119800fdf93d71",
          "md5": "86083f30f5efbd794ee40a589d24eb18",
          "sha256": "12b27da2f462c4c839dd3c46793c3217073c90017893a4a43fa506944c044cfa"
        },
        "downloads": -1,
        "filename": "sysidentpy-0.1.1rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "86083f30f5efbd794ee40a589d24eb18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24541,
        "upload_time": "2020-05-19T00:30:31",
        "upload_time_iso_8601": "2020-05-19T00:30:31.020144Z",
        "url": "https://files.pythonhosted.org/packages/37/7a/86ecca1d8dda611a44ea50791db909e103e09a18a464c7119800fdf93d71/sysidentpy-0.1.1rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24f8b5d69800c197131c7d69068ee10b2563699100bd43805026179ddac36e0d",
          "md5": "7d35fca388968dabbd71c984c13edc1b",
          "sha256": "5addcef482844def643382d6691a0d1fedaa28198887215eda0d9e622c1e3046"
        },
        "downloads": -1,
        "filename": "sysidentpy-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7d35fca388968dabbd71c984c13edc1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29892,
        "upload_time": "2020-12-06T23:17:38",
        "upload_time_iso_8601": "2020-12-06T23:17:38.932717Z",
        "url": "https://files.pythonhosted.org/packages/24/f8/b5d69800c197131c7d69068ee10b2563699100bd43805026179ddac36e0d/sysidentpy-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2c9f23ead63b4a33e1e2a60a72a79d6def746f7eafe324c13408f4bd74dc8d4",
          "md5": "779f053f3fc96cbf4a406d16f435a013",
          "sha256": "4b63b5d34c1e14b313f9e0d4616b06fa0d92cc6b10a994f428dbd64ab891f1d7"
        },
        "downloads": -1,
        "filename": "sysidentpy-0.1.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "779f053f3fc96cbf4a406d16f435a013",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36229,
        "upload_time": "2021-01-13T01:49:23",
        "upload_time_iso_8601": "2021-01-13T01:49:23.702201Z",
        "url": "https://files.pythonhosted.org/packages/d2/c9/f23ead63b4a33e1e2a60a72a79d6def746f7eafe324c13408f4bd74dc8d4/sysidentpy-0.1.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b95bb78c4a51b32d3f66c41b68b3e7e18b26efba59b7815af558d191909d3a0",
          "md5": "da21d5ceab382f8de8c9dc22f5101cac",
          "sha256": "255397a760cd775a63b1b792542d13b499926ab7a698b4f8c5421613f114b3b8"
        },
        "downloads": -1,
        "filename": "sysidentpy-0.1.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "da21d5ceab382f8de8c9dc22f5101cac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 21478710,
        "upload_time": "2021-03-14T21:24:49",
        "upload_time_iso_8601": "2021-03-14T21:24:49.135295Z",
        "url": "https://files.pythonhosted.org/packages/8b/95/bb78c4a51b32d3f66c41b68b3e7e18b26efba59b7815af558d191909d3a0/sysidentpy-0.1.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0afba729bc47fa3d98d26e9e1c1d2efae9d4c0580bb245ce971af10cc9cb38c",
          "md5": "0dfb03c5004c48be1083eac818d473f2",
          "sha256": "f5de0c1d8f72b7e0d4679fe9fc3f998d8f631d0ad1594512c1e39c563a796d55"
        },
        "downloads": -1,
        "filename": "sysidentpy-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0dfb03c5004c48be1083eac818d473f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 21479349,
        "upload_time": "2021-09-23T01:09:15",
        "upload_time_iso_8601": "2021-09-23T01:09:15.763690Z",
        "url": "https://files.pythonhosted.org/packages/d0/af/ba729bc47fa3d98d26e9e1c1d2efae9d4c0580bb245ce971af10cc9cb38c/sysidentpy-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6e308227126513d1fdbe3a0955c1ce64559bfd2ae5fcf59147a8c3128624eff",
          "md5": "8fb5f7c88a02239b9c1894ba871c2299",
          "sha256": "ab7341fdd955b160f5a4fb5b0621fbebac0be3bc2fc76cda0a416194328bb780"
        },
        "downloads": -1,
        "filename": "sysidentpy-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "8fb5f7c88a02239b9c1894ba871c2299",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 42806737,
        "upload_time": "2021-10-16T20:52:45",
        "upload_time_iso_8601": "2021-10-16T20:52:45.436885Z",
        "url": "https://files.pythonhosted.org/packages/a6/e3/08227126513d1fdbe3a0955c1ce64559bfd2ae5fcf59147a8c3128624eff/sysidentpy-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97f7048d8bac1ea9a2a9e9de5857cdb81660b8253e05ce4114ec3e14a0a65772",
          "md5": "a3d24f36bf00b43a6ac78684f57f322b",
          "sha256": "162bc84fd253b6b1de3ce6a0cc4e1fd73c51c6f28e52e09934a6fdd876742dde"
        },
        "downloads": -1,
        "filename": "sysidentpy-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "a3d24f36bf00b43a6ac78684f57f322b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 42845313,
        "upload_time": "2021-10-23T22:46:19",
        "upload_time_iso_8601": "2021-10-23T22:46:19.481994Z",
        "url": "https://files.pythonhosted.org/packages/97/f7/048d8bac1ea9a2a9e9de5857cdb81660b8253e05ce4114ec3e14a0a65772/sysidentpy-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "affff043493f382c8b422b4c95a24b63478a57ed649c82b44cb61b37e41d4320",
          "md5": "caa6defc4c4ba074205bb3a2246234e2",
          "sha256": "478ba4fb466156739fed3dc4c8fad1faf7c448bf498576888e6e14424261fe65"
        },
        "downloads": -1,
        "filename": "sysidentpy-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "caa6defc4c4ba074205bb3a2246234e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 44723321,
        "upload_time": "2022-03-05T19:01:45",
        "upload_time_iso_8601": "2022-03-05T19:01:45.239895Z",
        "url": "https://files.pythonhosted.org/packages/af/ff/f043493f382c8b422b4c95a24b63478a57ed649c82b44cb61b37e41d4320/sysidentpy-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a3e448a7a9759c1a8e7449bde8fcb1c4ea7c23b07bd1eb60c56ee7c7d27bd92",
          "md5": "25f4c4a6b3f0f648529446fc5bef454f",
          "sha256": "d1fddcca73ec496c7bb43adf23c2c659dc15aaa25d59a1f69ea480a7b634acc5"
        },
        "downloads": -1,
        "filename": "sysidentpy-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "25f4c4a6b3f0f648529446fc5bef454f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 43006263,
        "upload_time": "2022-06-17T20:11:48",
        "upload_time_iso_8601": "2022-06-17T20:11:48.167965Z",
        "url": "https://files.pythonhosted.org/packages/9a/3e/448a7a9759c1a8e7449bde8fcb1c4ea7c23b07bd1eb60c56ee7c7d27bd92/sysidentpy-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12fffa171efa1e465b7a45838cc11a8f05fb2272dbab49d8943a5fcb9ebcb1d1",
          "md5": "99c4f803105e80c77101c01b787dd02a",
          "sha256": "2e52e1c4fca377d9645afa5e730cb02e283a3c6c46175f0ab37407375a3e23de"
        },
        "downloads": -1,
        "filename": "sysidentpy-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99c4f803105e80c77101c01b787dd02a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<=3.10,>=3.7",
        "size": 92904,
        "upload_time": "2022-08-30T12:46:58",
        "upload_time_iso_8601": "2022-08-30T12:46:58.878781Z",
        "url": "https://files.pythonhosted.org/packages/12/ff/fa171efa1e465b7a45838cc11a8f05fb2272dbab49d8943a5fcb9ebcb1d1/sysidentpy-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "176e719e1988785346c494f72cabeb37ba68797a2b3d0a8f2b1c9ae07035e7f2",
          "md5": "0481cd4e37efd5efff32974a416fc116",
          "sha256": "900595e22a66d4e0feb6943274552f896b69614186d7d458c27bc3136732d4dd"
        },
        "downloads": -1,
        "filename": "sysidentpy-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0481cd4e37efd5efff32974a416fc116",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<=3.10,>=3.7",
        "size": 37197426,
        "upload_time": "2022-08-30T12:47:04",
        "upload_time_iso_8601": "2022-08-30T12:47:04.561735Z",
        "url": "https://files.pythonhosted.org/packages/17/6e/719e1988785346c494f72cabeb37ba68797a2b3d0a8f2b1c9ae07035e7f2/sysidentpy-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12fffa171efa1e465b7a45838cc11a8f05fb2272dbab49d8943a5fcb9ebcb1d1",
        "md5": "99c4f803105e80c77101c01b787dd02a",
        "sha256": "2e52e1c4fca377d9645afa5e730cb02e283a3c6c46175f0ab37407375a3e23de"
      },
      "downloads": -1,
      "filename": "sysidentpy-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "99c4f803105e80c77101c01b787dd02a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "<=3.10,>=3.7",
      "size": 92904,
      "upload_time": "2022-08-30T12:46:58",
      "upload_time_iso_8601": "2022-08-30T12:46:58.878781Z",
      "url": "https://files.pythonhosted.org/packages/12/ff/fa171efa1e465b7a45838cc11a8f05fb2272dbab49d8943a5fcb9ebcb1d1/sysidentpy-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "176e719e1988785346c494f72cabeb37ba68797a2b3d0a8f2b1c9ae07035e7f2",
        "md5": "0481cd4e37efd5efff32974a416fc116",
        "sha256": "900595e22a66d4e0feb6943274552f896b69614186d7d458c27bc3136732d4dd"
      },
      "downloads": -1,
      "filename": "sysidentpy-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0481cd4e37efd5efff32974a416fc116",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<=3.10,>=3.7",
      "size": 37197426,
      "upload_time": "2022-08-30T12:47:04",
      "upload_time_iso_8601": "2022-08-30T12:47:04.561735Z",
      "url": "https://files.pythonhosted.org/packages/17/6e/719e1988785346c494f72cabeb37ba68797a2b3d0a8f2b1c9ae07035e7f2/sysidentpy-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}