{
  "info": {
    "author": "Marko Ristin",
    "author_email": "marko@ristin.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: FastAPI",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "*****************\nFastAPI-icontract\n*****************\n\n.. image:: https://github.com/mristin/fastapi-icontract/actions/workflows/ci.yml/badge.svg\n    :target: https://github.com/mristin/fastapi-icontract/actions/workflows/ci.yml\n    :alt: Continuous integration\n\n.. image:: https://coveralls.io/repos/github/mristin/fastapi-icontract/badge.svg?branch=master\n    :target: https://coveralls.io/github/mristin/fastapi-icontract?branch=main\n    :alt: Test coverage\n\n.. image:: https://badge.fury.io/py/fastapi-icontract.svg\n    :target: https://badge.fury.io/py/fastapi-icontract\n    :alt: PyPI - version\n\n.. image:: https://img.shields.io/pypi/pyversions/fastapi-icontract.svg\n    :alt: PyPI - Python Version\n\nFastAPI-icontract is a `FastAPI`_ extension for design-by-contract which leverages\n`icontract`_ to allow you to specify and enforce code contracts in your\n`FastAPI endpoints`_.\n\n.. _FastAPI: https://fastapi.tiangolo.com/\n.. _icontract: https://github.com/Parquery/icontract\n.. _FastAPI endpoints: https://fastapi.tiangolo.com/tutorial/first-steps/\n\nDepending on how you set it up, FastAPI-icontract will:\n\n* automatically **enforce** the contracts during testing or in production,\n* automatically add the contracts to your **OpenAPI specification**, and\n* render the **Swagger UI** with a specialized contracts plugin for nicer visualization.\n\nBenefits of Adding Contracts to Your API\n========================================\n\nEnforcing code contracts in your FastAPI development opens up new venues for approaches\nto more `systematic design`_ at the API level:\n\n.. _systematic design: https://cacm.acm.org/blogs/blog-cacm/227928-why-not-program-right/fulltext\n\n* Contracts are an important **part of the specification**.\n\n  Unlike human language, contracts written in code are unambiguous.\n* Contracts are **automatically verifiable**.\n\n  Your clients can rest assured that you actually run them.\n  FastAPI-icontract will specify precisely which contracts are run in production and\n  which were only verified during testing.\n* Contracts provide **deeper testing**.\n\n  If you have a mesh of microservices that you need to test in conjunction,\n  turn on all the contracts and test against your *client's* data instead of your own\n  limited unit test data.\n* Contracts specified in code allow for automatic **client-side** verification.\n\n  Thus you can signal formally to the client up-front what you expect\n  (using pre-conditions), while the client can verify what to expect back from you\n  (using post-conditions).\n* Contracts are **not just for input validation**.\n\n  Though you can use contracts for input validation as well, FastAPI already allows you\n  to specify how you want your `input verified`_.\n  Contracts, on the other hand, really shine when you want to specify relations\n  *between* the endpoints.\n* Contracts allow for **automatic test generation**.\n\n  Tools for property-based testing such as `Schemathesis`_ can automatically generate\n  test data and verify that your API works as expected.\n  Post-conditions are an easy way to define your properties to be tested.\n\n  There is an ongoing discussion with the authors of the `Schemathesis`_ how to\n  integrate it with tools which generate data based on contracts such as\n  `icontract-hypothesis`_.\n* Contracts open up **a wider ecosystem for analysis**.\n\n  When you decorate the endpoints with contracts, you can immediately use analysis\n  tools such as `CrossHair`_ to analyze your code and find bugs.\n\n  (Though this only makes sense for really stateless, purely functional endpoints.)\n\n.. _input verified: https://fastapi.tiangolo.com/tutorial/query-params-str-validations/\n.. _Schemathesis: https://github.com/schemathesis/schemathesis\n.. _icontract-hypothesis: https://github.com/mristin/icontract-hypothesis\n.. _CrossHair: https://github.com/pschanely/CrossHair\n\nTeaser\n======\n\nThe full documentation is available at: `fastapi-icontract.readthedocs.io`_.\n\n.. _fastapi-icontract.readthedocs.io: https://fastapi-icontract.readthedocs.io\n\nThe following example is meant to invite you to further explore the extension.\n\n.. code-block:: python\n\n    from typing import Optional, List, Any\n\n    from fastapi import FastAPI\n    from pydantic import BaseModel\n    import asyncstdlib as a\n\n    from fastapi_icontract import (\n        require, snapshot, ensure,\n        wrap_openapi_with_contracts,\n        set_up_route_for_docs_with_contracts_plugin\n    )\n\n    app = FastAPI()\n\n    @app.get(\"/has_author\", response_model=bool)\n    async def has_author(identifier: str):\n        \"\"\"Check if the author exists in the database.\"\"\"\n        ...\n\n    @app.get(\"/categories\", response_model=List[str])\n    async def get_categories():\n        \"\"\"Retrieve the list of available categories.\"\"\"\n        ...\n\n    class Book(BaseModel):\n        identifier: str\n        author: str\n\n    @app.get(\"/has_category\", response_model=bool)\n    async def has_category(identifier: str):\n        \"\"\"Check if the author exists in the database.\"\"\"\n        ...\n\n    @app.get(\"/books_in_category\", response_model=List[Book])\n    @require(\n        has_category, status_code=404, description=\"The category must exist.\"\n    )\n    @ensure(\n        lambda result: a.all(a.await_each(has_author(book.author) for book in result)),\n        description=\"One ore more authors of the resulting books do not exist.\"\n    )\n    async def books_in_category(category: str) -> Any:\n        \"\"\"Retrieve the books of the given category from the database.\"\"\"\n        ...\n\n    @app.get(\"/has_book\", response_model=bool)\n    async def has_book(book_id: str) -> Any:\n        \"\"\"Check whether the book exists.\"\"\"\n        ...\n\n    @app.get(\"/book_count\", response_model=int)\n    async def book_count() -> Any:\n        \"\"\"Count the available books.\"\"\"\n        ...\n\n    @app.post(\"/upsert_book\")\n    @snapshot(lambda book: has_book(book.identifier), name=\"has_book\")\n    @snapshot(lambda: book_count(), name=\"book_count\")\n    @ensure(lambda book: has_book(book.identifier))\n    @ensure(\n        lambda book, OLD: a.apply(\n            lambda a_book_count: (\n                    OLD.book_count + 1 == a_book_count if not OLD.has_book\n                    else OLD.book_count == a_book_count),\n            book_count()))\n    async def add_book(book: Book) -> None:\n        ...\n\n    # Include contracts in /openapi.json\n    wrap_openapi_with_contracts(app=app)\n\n    # Include swagger-ui-plugin-contracts in /doc\n    set_up_route_for_docs_with_contracts_plugin(app=app)\n\nVersioning\n==========\nWe follow `Semantic Versioning`_.\nThe version X.Y.Z indicates:\n\n* X is the major version (backward-incompatible),\n* Y is the minor version (backward-compatible), and\n* Z is the patch version (backward-compatible bug fix).\n\n.. _Semantic Versioning: http://semver.org/spec/v1.0.0.html\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mristin/fastapi-icontract",
    "keywords": "design-by-contract contracts automatic testing property-based",
    "license": "License :: OSI Approved :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastapi-icontract",
    "package_url": "https://pypi.org/project/fastapi-icontract/",
    "platform": "",
    "project_url": "https://pypi.org/project/fastapi-icontract/",
    "project_urls": {
      "Homepage": "https://github.com/mristin/fastapi-icontract"
    },
    "release_url": "https://pypi.org/project/fastapi-icontract/0.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Specify contracts for FastAPI endpoints.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12719671,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9128685d7be8b1c7b8a3f1a50190d7fc43802fd981b985aac88a65a811c96350",
          "md5": "c1533d9d54db1987cdae4faa5fe58a6a",
          "sha256": "0834e1ca969386fabd7a8754aa4c30bd17a53f2efbfa45c3e2858b16b63a878e"
        },
        "downloads": -1,
        "filename": "fastapi-icontract-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c1533d9d54db1987cdae4faa5fe58a6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13632,
        "upload_time": "2021-02-26T23:09:38",
        "upload_time_iso_8601": "2021-02-26T23:09:38.881908Z",
        "url": "https://files.pythonhosted.org/packages/91/28/685d7be8b1c7b8a3f1a50190d7fc43802fd981b985aac88a65a811c96350/fastapi-icontract-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd125dcc712b4281475a3d510dbbbd9928ef7ce969763678b00be14eb0b0c8cc",
          "md5": "1c8575931e4f1e0769daeb6e8008b4d8",
          "sha256": "ec8129eb077fec8ea543d66135106217af12dfcadc0171b0a6fd6dee2e4ca954"
        },
        "downloads": -1,
        "filename": "fastapi-icontract-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1c8575931e4f1e0769daeb6e8008b4d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13508,
        "upload_time": "2021-03-06T20:59:11",
        "upload_time_iso_8601": "2021-03-06T20:59:11.581393Z",
        "url": "https://files.pythonhosted.org/packages/bd/12/5dcc712b4281475a3d510dbbbd9928ef7ce969763678b00be14eb0b0c8cc/fastapi-icontract-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f10aa1aeb22d29ced2ffa15c153dd195ab8a649a7904d1da822cdce1b9b91093",
          "md5": "52dc96957dce44be61d22106079238d6",
          "sha256": "e793c3a6c8ba2b8fc7536134ddce809f70cc136842780bfdf88880a23fac2538"
        },
        "downloads": -1,
        "filename": "fastapi-icontract-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "52dc96957dce44be61d22106079238d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13081,
        "upload_time": "2022-01-28T09:00:39",
        "upload_time_iso_8601": "2022-01-28T09:00:39.961447Z",
        "url": "https://files.pythonhosted.org/packages/f1/0a/a1aeb22d29ced2ffa15c153dd195ab8a649a7904d1da822cdce1b9b91093/fastapi-icontract-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebf76aab0a0ce9831a75db49c2b24a8aa9b210aa9b0d29208e775ed991d05c95",
          "md5": "d78423e79cfbdef1630b8be48b6ee688",
          "sha256": "7ea96598b7e6d53d0045b7e2f26c937434e8ff9e112f22753758394f016b0afe"
        },
        "downloads": -1,
        "filename": "fastapi-icontract-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d78423e79cfbdef1630b8be48b6ee688",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16118,
        "upload_time": "2022-01-28T09:58:45",
        "upload_time_iso_8601": "2022-01-28T09:58:45.104913Z",
        "url": "https://files.pythonhosted.org/packages/eb/f7/6aab0a0ce9831a75db49c2b24a8aa9b210aa9b0d29208e775ed991d05c95/fastapi-icontract-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ebf76aab0a0ce9831a75db49c2b24a8aa9b210aa9b0d29208e775ed991d05c95",
        "md5": "d78423e79cfbdef1630b8be48b6ee688",
        "sha256": "7ea96598b7e6d53d0045b7e2f26c937434e8ff9e112f22753758394f016b0afe"
      },
      "downloads": -1,
      "filename": "fastapi-icontract-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "d78423e79cfbdef1630b8be48b6ee688",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16118,
      "upload_time": "2022-01-28T09:58:45",
      "upload_time_iso_8601": "2022-01-28T09:58:45.104913Z",
      "url": "https://files.pythonhosted.org/packages/eb/f7/6aab0a0ce9831a75db49c2b24a8aa9b210aa9b0d29208e775ed991d05c95/fastapi-icontract-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}