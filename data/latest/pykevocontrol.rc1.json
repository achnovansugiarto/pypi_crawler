{
  "info": {
    "author": "Tristan Caulfield",
    "author_email": "tcaulfld@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "==========\npykevoplus3\n==========\n\nThis is a Python3 fork of the original module for controlling Kwikset Kevo locks written by CSeelye.\n\nPer Cseelye:\n\nKwikset does not provide an official API for their Kevo locks; I reverse\nengineered this module from the mykevo.com web app.\n\nTo use this module you will need to have a `Kevo Plus`_ installed and a\nregistered account on `mykevo.com`_. You will need your mykevo.com\ncredentials to use this module.\n\nThis module is published to `pypi`_ so you can install it simply via ``pip install pykevoplus``\n\nUsage\n=====\n\nThe ``Kevo.GetLocks()`` function will attempt to scrape the mykevo.com web\nsite to find your locks; as of this writing it can find all of your\nlocks, but scraping the HTML might break at any time if Kwikset changes\nthe website.\n\n.. code:: python\n\n    from pykevoplus import Kevo\n    locks = Kevo.GetLocks(\"username@email.com\", \"password123\")\n    for lock in locks:\n        print(repr(lock))\n\nOutput::\n\n    KevoLock(name=Front Door, id=cca7cd1d-c1d5-43ce-a087-c73b974b3529, state=Locked)\n    KevoLock(name=Back Door, id=c60130cd-8139-4688-8ba3-199276a65ad6, state=Locked)\n\nA better way is to explicitly instantiate a ``KevoLock`` object using the\nUUID of the lock. You can get the lock IDs manually by logging into\nmykevo.com, click Details for the lock, click Settings, the lock ID is\non the right.\n\n.. code:: python\n\n    from pykevoplus import KevoLock\n    lock = KevoLock.FromLockID(\"cca7cd1d-c1d5-43ce-a087-c73b974b3529\", \"username@email.com\", \"password123\")\n\nLocking and Unlocking\n'''''''''''''''''''''\n\n.. code:: python\n\n    from pykevoplus import KevoLock\n    lock = KevoLock.FromLockID(lock_id, username, password)\n    lock.Unlock()\n    print(lock.GetBoltState())\n    lock.Lock()\n    print(lock.GetBoltState())\n\nOutput::\n\n    Unlocked\n    Locked\n\nMultiple operations in the same session\n'''''''''''''''''''''''''''''''''''''''\n\nThe ``KevoLockSession`` context manager allows you to perform multiple\noperations on a lock with a single auth session\n\n.. code:: python\n\n    from pykevoplus import KevoLock, KevoLockSession\n    lock = KevoLock.FromLockID(lock_id, username, password)\n    with KevoLockSession(lock):\n        lock.Unlock()\n        lock.Lock()\n\nKnown Issues\n============\n\n* Error handling is extremely basic and needs much more work. Communication errors as well as lock bolt errors need to be addressed\n* Alpha support for Python3\n\n\n\n.. _Kevo Plus: http://www.kwikset.com/kevo/plus\n.. _mykevo.com: mykevo.com\n.. _pypi: https://pypi.python.org/pypi/pykevoplus",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bahnburner/pykevoplus",
    "keywords": "kevo kwikset",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pykevocontrol",
    "package_url": "https://pypi.org/project/pykevocontrol/",
    "platform": "",
    "project_url": "https://pypi.org/project/pykevocontrol/",
    "project_urls": {
      "Homepage": "https://github.com/bahnburner/pykevoplus"
    },
    "release_url": "https://pypi.org/project/pykevocontrol/2.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Control Kwikset Kevo locks",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3094052,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af01135a2d894d843079a88c1da8b05296aa24a2b6b9a76e496d49b25ef0f1f4",
          "md5": "8842f59603828f9c1e910f9cd70ffa45",
          "sha256": "7d47be38cee04dba9a958723a97417ac321c66c5421597e4b13592610516c7d2"
        },
        "downloads": -1,
        "filename": "pykevocontrol-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8842f59603828f9c1e910f9cd70ffa45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4767,
        "upload_time": "2017-08-13T17:37:57",
        "upload_time_iso_8601": "2017-08-13T17:37:57.671967Z",
        "url": "https://files.pythonhosted.org/packages/af/01/135a2d894d843079a88c1da8b05296aa24a2b6b9a76e496d49b25ef0f1f4/pykevocontrol-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af01135a2d894d843079a88c1da8b05296aa24a2b6b9a76e496d49b25ef0f1f4",
        "md5": "8842f59603828f9c1e910f9cd70ffa45",
        "sha256": "7d47be38cee04dba9a958723a97417ac321c66c5421597e4b13592610516c7d2"
      },
      "downloads": -1,
      "filename": "pykevocontrol-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8842f59603828f9c1e910f9cd70ffa45",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4767,
      "upload_time": "2017-08-13T17:37:57",
      "upload_time_iso_8601": "2017-08-13T17:37:57.671967Z",
      "url": "https://files.pythonhosted.org/packages/af/01/135a2d894d843079a88c1da8b05296aa24a2b6b9a76e496d49b25ef0f1f4/pykevocontrol-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}