{
  "info": {
    "author": "RhythmLian",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SockServer\n\nA very tiny RPC framework, with ability to perform basic type checks.\n\n## Screenshot\n\n![demo](https://cos.rhythmlian.cn/ImgBed/0ba3cba4b129c1cfaea588a5821415ad.png)\n\n## Install\n\n```shell\npip3 install sockserver -U\n```\n\n## Usage\n\n```python\nfrom SockServer import SockServer\n\nserver = SockServer(8000, workers=8)\n\n\n@server.register()\ndef hello(who: str):\n    \"\"\"\n    :param who:\n    :return:\n    \"\"\"\n    if who == \"me\":\n        return {\n            \"status\": False,\n            \"result\": \"you are not allowed to say hello to yourself\",\n        }\n    return {\"status\": True, \"result\": \"hello \" + who.strip()}\n\n\nif __name__ == '__main__':\n    server.start()\n```\n\n### Support [Qpro](https://github.com/Rhythmicc/QuickProject) Template\n\n```shell\nQpro create <server_name>\n\n# Choose \"内置模板 / Inner Template\" -> \"SockServer\"\n```\n\n## Client Lib for `C`\n\n- Install Client LIB\n\n```shell\nmkdir -p /usr/local/include/SockClient\ncp Client/utils/* /usr/local/include/SockClient/\n```\n\n- Usage\n\n```C\n#include <SockClient/SockClient.h>\n#include <SockClient/cJSON.h>\n\nint main(int argc, char **argv)\n{\n    /*\n    * 服务端地址与端口，请自行修改\n    ! 由于SockClient不具备域名解析功能，因此需要使用IP地址\n    ! 如果服务端在本机，请使用 127.0.0.1\n    */\n    struct sockaddr_in *server_addr = default_addr(\"10.64.128.99\", 8080);\n\n    /*\n     * 构建JSON对象，用于存储API调用的函数名与参数\n     * 数据形如: {\"func\": argv[1], \"argv\": [argv[2], argv[3], ...]}\n     */\n    cJSON *post_json = cJSON_CreateObject();\n    cJSON_AddStringToObject(post_json, \"func\", argv[1]);\n    cJSON *argvs_json = cJSON_CreateArray();\n    for (int i = 2; i < argc; i++)\n    {\n        cJSON_AddItemToArray(argvs_json, cJSON_CreateString(argv[i]));\n    }\n    cJSON_AddItemToObject(post_json, \"argv\", argvs_json);\n\n    /*\n     * 用于存储服务器返回的数据，SockString 是一个字符串链表，用于动态存储大量数据\n     */\n    SockString_t recv_buf = SockString_NewString();\n    char post_buf[BUFFER_SIZE];\n\n    cJSON_PrintPreallocated(post_json, post_buf, BUFFER_SIZE, 0); // * 将JSON对象转换为字符串\n\n    /*\n     * 调用API，将post_buf中的数据发送到服务器，服务器返回的数据存储在recv_buf中\n     */\n    call_api(server_addr, post_buf, recv_buf);\n\n    cJSON_Delete(post_json); // * 释放JSON对象\n\n    char *recv_string = SockString_ToCharArray(recv_buf); // * 将SockString转换为字符串\n    cJSON *recv_json = cJSON_Parse(recv_string);          // * 将字符串转换为JSON对象\n    free(recv_string);                                    // * 释放字符串\n    SockString_Delete(recv_buf);                          // * 释放SockString\n\n    cJSON_Print(recv_json); // * 打印收到的JSON对象\n\n    if (cJSON_IsFalse(cJSON_GetObjectItem(recv_json, \"status\")))\n    {\n        /*\n         * 如果服务器返回的status为false，则说明调用API失败\n         */\n        printf(\"Error: %s\\n\", cJSON_GetObjectItem(recv_json, \"result\")->valuestring);\n        return 1;\n    }\n\n    /*\n     * 如果服务器返回的status为true，则说明调用API成功\n     * 读取result字段，根据其类型进行处理\n     */\n    cJSON *result = cJSON_GetObjectItem(recv_json, \"result\");\n    if (result->type == cJSON_String)\n    {\n        printf(\"%s\\n\", result->valuestring);\n    }\n    else if (result->type == cJSON_Number)\n    {\n        printf(\"%d\\n\", result->valueint);\n    }\n    else if (result->type == cJSON_Array)\n    {\n        for (int i = 0; i < cJSON_GetArraySize(result); i++)\n        {\n            cJSON *item = cJSON_GetArrayItem(result, i);\n            if (item->type == cJSON_String)\n            {\n                printf(\"%s\\n\", item->valuestring);\n            }\n            else if (item->type == cJSON_Number)\n            {\n                printf(\"%d\\n\", item->valueint);\n            }\n        }\n    }\n\n    free(server_addr); // * 释放服务器地址\n    return 0;\n}\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Rhythmicc/SockServer",
    "keywords": "Socket Server with ThreadPool",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SockServer",
    "package_url": "https://pypi.org/project/SockServer/",
    "platform": null,
    "project_url": "https://pypi.org/project/SockServer/",
    "project_urls": {
      "Homepage": "https://github.com/Rhythmicc/SockServer"
    },
    "release_url": "https://pypi.org/project/SockServer/0.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Socket Server with ThreadPool",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17010186,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "657ca2e6e645a0369cf0f3e3301aa5586242f0e9425f6bd418486c18efcb1a11",
          "md5": "975ccb960855f0e53d9d05f1f443ed79",
          "sha256": "ef3286cbcf1afd48f119466ef98240b93ff22237aa6d2bf32d20c147961855d9"
        },
        "downloads": -1,
        "filename": "SockServer-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "975ccb960855f0e53d9d05f1f443ed79",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4644,
        "upload_time": "2021-06-12T02:38:05",
        "upload_time_iso_8601": "2021-06-12T02:38:05.749093Z",
        "url": "https://files.pythonhosted.org/packages/65/7c/a2e6e645a0369cf0f3e3301aa5586242f0e9425f6bd418486c18efcb1a11/SockServer-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4be5a0ed20a61492e94a4376ded7048caa1e37e6176e302477d8c32dd7c9e82",
          "md5": "194d2c27790f2be3b0db711761fe7a07",
          "sha256": "98c1adeed67e43b9f66e0499c7ac8a4f45444e82c6624944070b51e475e5d6e2"
        },
        "downloads": -1,
        "filename": "SockServer-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "194d2c27790f2be3b0db711761fe7a07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4657,
        "upload_time": "2021-06-12T02:55:18",
        "upload_time_iso_8601": "2021-06-12T02:55:18.655276Z",
        "url": "https://files.pythonhosted.org/packages/f4/be/5a0ed20a61492e94a4376ded7048caa1e37e6176e302477d8c32dd7c9e82/SockServer-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e3e33c0f33e987094365bd7f6d637ab3d94fc1863216e82e5fc5f1f6233850f",
          "md5": "2d1f1c0e90f489fc42c50283b91aa099",
          "sha256": "676317a165a7e78ba774551f69f21c6e4c850309176f2279a913ccef40fe2df7"
        },
        "downloads": -1,
        "filename": "SockServer-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2d1f1c0e90f489fc42c50283b91aa099",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4874,
        "upload_time": "2023-02-24T03:35:16",
        "upload_time_iso_8601": "2023-02-24T03:35:16.216888Z",
        "url": "https://files.pythonhosted.org/packages/4e/3e/33c0f33e987094365bd7f6d637ab3d94fc1863216e82e5fc5f1f6233850f/SockServer-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1333507620936231dc1c9c775bd57eac8afdb4e215ae4f6e182de3dfc2d39d2",
          "md5": "ab90381a0cd123ce75290cba3d5fcede",
          "sha256": "e6f596b2da117f3e8a54cfb6899d4b006e7bcb625e95cd1118459ac2736e30c2"
        },
        "downloads": -1,
        "filename": "SockServer-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ab90381a0cd123ce75290cba3d5fcede",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5567,
        "upload_time": "2023-02-24T11:50:34",
        "upload_time_iso_8601": "2023-02-24T11:50:34.044910Z",
        "url": "https://files.pythonhosted.org/packages/b1/33/3507620936231dc1c9c775bd57eac8afdb4e215ae4f6e182de3dfc2d39d2/SockServer-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b1333507620936231dc1c9c775bd57eac8afdb4e215ae4f6e182de3dfc2d39d2",
        "md5": "ab90381a0cd123ce75290cba3d5fcede",
        "sha256": "e6f596b2da117f3e8a54cfb6899d4b006e7bcb625e95cd1118459ac2736e30c2"
      },
      "downloads": -1,
      "filename": "SockServer-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "ab90381a0cd123ce75290cba3d5fcede",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5567,
      "upload_time": "2023-02-24T11:50:34",
      "upload_time_iso_8601": "2023-02-24T11:50:34.044910Z",
      "url": "https://files.pythonhosted.org/packages/b1/33/3507620936231dc1c9c775bd57eac8afdb4e215ae4f6e182de3dfc2d39d2/SockServer-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}