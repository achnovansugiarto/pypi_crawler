{
  "info": {
    "author": "Lightyears",
    "author_email": "1MLightyears@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[toc]\n\n# Clarisse\n\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/clarisse?style=plastic)![PyPI](https://img.shields.io/pypi/v/clarisse?style=plastic)\n\n:cn::<a href=\"./README_zh-cn.md\">说明文档</a>\n\nClarisse is a light-weighted Python function GUI framework.\n\nWith at least one single line of code, you can easily create a user-friendly GUI for your code(or a part of your code), yet not make other changes!\n\n### TL;DR\n\nIf you have a function like\n\n```python\ndef func(arg1,arg2:int,arg3:str=\"have a try\")->bool:\n    ...\n```\n\nTo give a GUI to a function like above, simply:\n\n```python\nfrom clarisse import Clarisse\n\n@Clarisse()\ndef func(arg1,arg2:int,arg3:str=\"have a try\")->bool:\n    ...\n```\n\nIt's done.\n\nAny time when `func()` is called, a GUI will be showed, allowing user to manually input/modify/check the arguments about to be given to the original`func()` and get executed.\n\n```python\n@Clarisse()\ndef func(arg1,arg2:int,arg3:str=\"have a try\") -> bool:\n    \"\"\"This is only a ***test*** function\\\\\n    but enough to show what clarisse do!\"\"\"\n    print(\"arg1 is {0}\".format(arg1))\n    print(arg3.upper())\n    return arg2>10\n\nprint(func(\"this is clarisse output\",0))\n```\n\n<img src=\"./img/img1.png\">\n\n##### Clarisse understands your need! \n\nIn the example above, `func()` still returns the original `bool` type value as if not modified(decorated); the arguments given when calling `func()` will be default values of them and be shown on the GUI.\n\n##### Clarisse provides you plenty of choices!\n\nYou can run `func()` multiple times ( by clicking the `Run` button ) and check the output in the output dialog provided, and close the window to \"confirm\" the last result as your final run.\n\n### Installation\n\n```bash\n#pip install clarisse\n```\n\nClarisse uses PySide2 as its backend GUI framework.\n\nClarisse works well on Python 3.9.1 .\n\n### Customization\n\n1. After using `@Clarisse()`, there are two ways to set the default value/ placeholder text for arguments : the `def` header of the function, the arguments' value when calling the function. The later way is prior than the former way.\n2. The window could also be modified by giving arguments to `@Clarisse`.\n   1. `margin` is the distance from the widgets to the edge of window;\n   2. `vert_spacing` is the distance between widgets;\n   3. `description` is the introduction of the function as a default(`func.__doc__`), but could also be customized to any other words you like;\n   4. `args_desc` is a list of string, each is used to replace the description label of an argument.\n   5. `args_kwdesc` is similar with `args_desc`, but description label are given as a `dict` like  `{[argument name]:[argument description]}`.\n3. Clarisse has a good compatibility with PyInstaller. You can set Clarisse as an interface of your command-line program, pack it through PyInstaller and distribute the binary file.\n\n##### Typing\n\nClarisse choose widgets for arguments based on their types. \n\nNote that if a type is not supported by Clarisse, it'll use an `ClrsUnknown` type to mark the argument. In that case the value would be shown/edited/passed in `str`.\n\n| argument types | Clarisse widgets   | example                    |\n| -------------- | ------------------ | -------------------------- |\n| `int`          | spin box           | <img src=\"./img/arg1.png\"> |\n| `float`        | spin box for float | <img src=\"./img/arg2.png\"> |\n| `str`          | line edit box      | <img src=\"./img/arg3.png\"> |\n| `bool`         | check box          | <img src=\"./img/arg4.png\"> |\n| `list`         | text edit box      | <img src=\"./img/arg5.png\"> |\n| `dict`         | table              | <img src=\"./img/arg6.png\"> |\n\n##### Attention\n\n- if you used `typing.List[a_type,...]` , Clarisse will call a `a_type.__init__(arg_text:str)` to give an `a_type`object to the function, make sure you have appropriate constructor;\n\n- if you used `typing.Dict[key_type,value_type,...]` , Clarisse will call `key_type.__init__(key_text:str)`and `value_type.__init__(value_text:str)` to give an `{key_type:value_type}`dict to the function, make sure you have appropriate constructor.\n\n##### Examples\n\n```python\n@Clarisse(\n    margin=10,\n    vert_spacing=10,\n    description=\"\"\"another description. \\\\\n         Note that this description is <font color=#ff0000>prior</font> than \\\\\n         func.\\_\\_doc\\_\\_ .\"\"\")\ndef func(arg1,arg2:int,arg3:str=\"have a try\") -> bool:\n    \"\"\"This is only a ***test*** function\\\\\n    but enough to show what clarisse do!\"\"\"\n    print(\"arg1 is {0}\".format(arg1))\n    print(arg3.upper())\n    return arg2>10\n\nprint(func(\"this is clarisse output\",0))\n```\n\n<img src=\"./img/img2.png\" style=\"zoom : 80%\">\n\n```python\n@Clarisse(args_desc=(\"This is arg1\",\"This is arg2, label warps if it is too long\"),args_kwdesc={\"arg3\":\"an example to show args_kwdesc\"})\ndef func(arg1,arg2:int,arg3:str=\"have a try\") -> bool:\n    \"\"\"This is only a ***test*** function\\\\\n    but enough to show what clarisse do!\"\"\"\n    print(\"arg1 is {0}\".format(arg1))\n    print(arg3.upper())\n    return arg2>10\n\nprint(func())\n# actually doesn't need parameters when calling,\n# but need to be given before Run is clicked.\n```\n\n<img src=\"./img/img3.png\" style=\"zoom : 65%\">\n\n### Well done, but...\n\n*Why not gooey?*\n\n<a href=\"https://github.com/chriskiehl/Gooey\">Gooey</a> is an outstanding and all-around framework for almost all kinds of python programs, but it\n\n- needs code modifications;\n- you have to implement an `ArgumentParser` : sad story for `fire` and `click` users :cry:\n- works only for command line entrance;\n- ~~I failed to learn it - the doc of gooey is too too much for a non-native speaker like me :sob:~~\n\nOf course I advise you to choose gooey if you're familiar to it and need deep customization, but if you only need a light-weight, pain-less, quick-deployment GUI framework, maybe Clarisse is an alternative!\n\n### ...and, Future!\n\n- [ ] Add more layouts, make them available to get changed;\n- [ ] Apply QSS(CSS-like) style sheets for widgets to make them look better;\n- [ ] Support classes;\n- [ ] Add more supported types;\n\n......\n\n### Acknowledgements\n\nThanks to the <a href=\"https://github.com/google/python-fire/\">fire</a> library that inspired me the idea;\n\nThanks to the <a href=\"https://github.com/google/latexify_py/\">latexify_py</a> module that gives me the idea of interface and the lessons of  python syntax analyzing and the usage of  `inspect`;~~hey dude I also contributed to latexify_py that's a really handy module go star it~~\n\nThanks to <a href=\"https://www.fanfiction.net/u/1596712/Hieronym\">@Hieronym</a>, for the splendid fanfiction *<a href=\"https://www.fanfiction.net/s/7406866/1/To-the-Stars\">To The Stars</a>* ~~the best fanfiction space opera I've ever read~~, which gives the name of this module.\n\n\n\n1MLightyears\n\n20201215\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/1MLightyears/clarisse",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "clarisse",
    "package_url": "https://pypi.org/project/clarisse/",
    "platform": "",
    "project_url": "https://pypi.org/project/clarisse/",
    "project_urls": {
      "Homepage": "https://github.com/1MLightyears/clarisse"
    },
    "release_url": "https://pypi.org/project/clarisse/0.0.3/",
    "requires_dist": [
      "PySide2"
    ],
    "requires_python": ">=3.6",
    "summary": "A light-weighted GUI framework for Python programs.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8945904,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d5997f7de43ef83f8b970e55a192becd1fda93e66308cd2d377599503a490c5",
          "md5": "611f40beef362b5dca8e82a6b31ed253",
          "sha256": "a2c7e489eb2189bec564042a0747ec47870f5835171a695783b60ed22b3eb815"
        },
        "downloads": -1,
        "filename": "clarisse-0.0.1-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "611f40beef362b5dca8e82a6b31ed253",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14565,
        "upload_time": "2020-12-15T08:23:03",
        "upload_time_iso_8601": "2020-12-15T08:23:03.934808Z",
        "url": "https://files.pythonhosted.org/packages/0d/59/97f7de43ef83f8b970e55a192becd1fda93e66308cd2d377599503a490c5/clarisse-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c91f94c2efe0fc8eab11e1710cfe9d57bebb605f1a4b5165a2c2c8fb7f37d27",
          "md5": "c7a935c75f7405038a5f9262adcd959b",
          "sha256": "924c0bd160d970bc7bd9733427c1df9de6cd7821b7225f36d0705fe301659c6a"
        },
        "downloads": -1,
        "filename": "clarisse-0.0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "c7a935c75f7405038a5f9262adcd959b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8480,
        "upload_time": "2020-12-15T08:23:05",
        "upload_time_iso_8601": "2020-12-15T08:23:05.838467Z",
        "url": "https://files.pythonhosted.org/packages/7c/91/f94c2efe0fc8eab11e1710cfe9d57bebb605f1a4b5165a2c2c8fb7f37d27/clarisse-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3f2aaf6e5b410db75fdd5b0e31f16fa599399a23bb7d753a635dd20d3a8541d",
          "md5": "82b846183d8a89cd1e4389d387caf369",
          "sha256": "ef5c691092286739f51e7cf272bca58e8c18b672cd0ac6c7622831ecf7f82bbd"
        },
        "downloads": -1,
        "filename": "clarisse-0.0.2-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "82b846183d8a89cd1e4389d387caf369",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15522,
        "upload_time": "2020-12-15T12:53:44",
        "upload_time_iso_8601": "2020-12-15T12:53:44.046148Z",
        "url": "https://files.pythonhosted.org/packages/c3/f2/aaf6e5b410db75fdd5b0e31f16fa599399a23bb7d753a635dd20d3a8541d/clarisse-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7058fdc098ab6d6e5e7e9b57043cc653f04594042fac9308cf9f5d414626cb5f",
          "md5": "df6329c1ef51feaae40aafff457ffda4",
          "sha256": "81060e1af0148d06ae7f1da79b2aa22ad6a5e248fd70657b5b07da3d3bb3997b"
        },
        "downloads": -1,
        "filename": "clarisse-0.0.2.tar.gz",
        "has_sig": true,
        "md5_digest": "df6329c1ef51feaae40aafff457ffda4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9636,
        "upload_time": "2020-12-15T12:53:45",
        "upload_time_iso_8601": "2020-12-15T12:53:45.839764Z",
        "url": "https://files.pythonhosted.org/packages/70/58/fdc098ab6d6e5e7e9b57043cc653f04594042fac9308cf9f5d414626cb5f/clarisse-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e878a1e1895b39bc07898781418ab9b4d2048a7bb0a892e30df5ea3ad0562090",
          "md5": "71bb53f47456b8c242b57c67ec004456",
          "sha256": "b01eee69be8cddb1e929d5ebe3e2161d5c8eef52ceffc6728889e3b3eef44a5b"
        },
        "downloads": -1,
        "filename": "clarisse-0.0.3-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "71bb53f47456b8c242b57c67ec004456",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16607,
        "upload_time": "2020-12-20T13:19:08",
        "upload_time_iso_8601": "2020-12-20T13:19:08.984059Z",
        "url": "https://files.pythonhosted.org/packages/e8/78/a1e1895b39bc07898781418ab9b4d2048a7bb0a892e30df5ea3ad0562090/clarisse-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b36bf381c7c9009a1c803a3488390211017d10d2dd82d0067ced33697ef4366",
          "md5": "fe4267f362fb445ef247ff072fb2cca2",
          "sha256": "a7d3fa86c9ffca893a1879b306942163d0ae48ee580d80f4b4b193750353f34a"
        },
        "downloads": -1,
        "filename": "clarisse-0.0.3.tar.gz",
        "has_sig": true,
        "md5_digest": "fe4267f362fb445ef247ff072fb2cca2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10370,
        "upload_time": "2020-12-20T13:19:11",
        "upload_time_iso_8601": "2020-12-20T13:19:11.024180Z",
        "url": "https://files.pythonhosted.org/packages/2b/36/bf381c7c9009a1c803a3488390211017d10d2dd82d0067ced33697ef4366/clarisse-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e878a1e1895b39bc07898781418ab9b4d2048a7bb0a892e30df5ea3ad0562090",
        "md5": "71bb53f47456b8c242b57c67ec004456",
        "sha256": "b01eee69be8cddb1e929d5ebe3e2161d5c8eef52ceffc6728889e3b3eef44a5b"
      },
      "downloads": -1,
      "filename": "clarisse-0.0.3-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "71bb53f47456b8c242b57c67ec004456",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 16607,
      "upload_time": "2020-12-20T13:19:08",
      "upload_time_iso_8601": "2020-12-20T13:19:08.984059Z",
      "url": "https://files.pythonhosted.org/packages/e8/78/a1e1895b39bc07898781418ab9b4d2048a7bb0a892e30df5ea3ad0562090/clarisse-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b36bf381c7c9009a1c803a3488390211017d10d2dd82d0067ced33697ef4366",
        "md5": "fe4267f362fb445ef247ff072fb2cca2",
        "sha256": "a7d3fa86c9ffca893a1879b306942163d0ae48ee580d80f4b4b193750353f34a"
      },
      "downloads": -1,
      "filename": "clarisse-0.0.3.tar.gz",
      "has_sig": true,
      "md5_digest": "fe4267f362fb445ef247ff072fb2cca2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10370,
      "upload_time": "2020-12-20T13:19:11",
      "upload_time_iso_8601": "2020-12-20T13:19:11.024180Z",
      "url": "https://files.pythonhosted.org/packages/2b/36/bf381c7c9009a1c803a3488390211017d10d2dd82d0067ced33697ef4366/clarisse-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}