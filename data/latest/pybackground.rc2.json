{
  "info": {
    "author": "Yi Zhang",
    "author_email": "yizhang.dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# PyBackground\n\nPyBackground is\n\n* a lightweight scheduler that runs tasks in the background\n* written in [Python (3.7+) Standard Library](https://docs.python.org/3.7/library/)\n\n\n\nPyBackground supports to\n\n* execute tasks using thread pool\n* run in the background (or foreground)\n* use `@task` decorator to define task\n\n\n\n## Quickstart\n\nDefine your functions:\n\n```python\nimport time\n\ndef now(cost=1):\n    time.sleep(cost)\n    print( time.strftime('%Y-%m-%d %H:%M:%S %Z', time.localtime()) )\n\ndef utcnow(cost=1):\n    time.sleep(cost)\n    print( time.strftime('%Y-%m-%d %H:%M:%S %Z', time.gmtime()) )\n```\n\nCreate a PyBackground scheduler and start executing your functions:\n\n```python\nimport pybackground\n\nsched = pybackground.BackgroundScheduler()\nsched.start(now, args=(1,))\nsched.start(utcnow, args=(1,))\n```\n\nShutdown the scheduler:\n\n```python\nsched.shutdown(wait=True)\n```\n\n\n\n### Handle with the infinite loops\n\nLet's work based on `now(cost)` as an example:\n\n```python\nimport pybackground\n\nsched = pybackground.BackgroundScheduler()\nprint(sched.stopped)\n\ndef timer(interval=3):\n    while not sched.stopped:\n        now()\n\nsched.start(timer, args=(3,))\n```\n\n`timer(interval)` then runs forever in a seperate thread. When you'd like to terminate it, shutdown the scheduler as usual:\n\n```python\nsched.shutdown(wait=True)\n```\n\n\n\n### Play with the `@task` decorator\n\nUse `@task` decorator to define your functions and start executing them, scheduling `now(cost)` and `utcnow(cost)` as an example:\n\n```python\nimport pybackground\n\nsched = pybackground.BackgroundScheduler()\n\nimport time\n\n@pybackground.task(sched)\ndef now(cost=1):\n    time.sleep(cost)\n    print( time.strftime('%Y-%m-%d %H:%M:%S %Z', time.localtime()) )\n\nnow.start(cost=1)\n\n@pybackground.task(sched)\ndef utcnow(cost=1):\n    time.sleep(cost)\n    print( time.strftime('%Y-%m-%d %H:%M:%S %Z', time.gmtime()) )\n\nutcnow.start(cost=1)\n```\n\nShutdown the scheduler in normal way:\n\n```python\nsched.shutdown(wait=True)\n```\n\n\n\n### Install PyBackground\n\n```bash\n$ pip install pybackground\n```\n\n\n\n## Documentation\n\n### `BackgroundScheduler`/`BlockingScheduler`\n\n```python\nclass pybackground.BackgroundScheduler/BlockingScheduler(max_worker=<num_cpu_cores>)\n```\n\n`max_worker` is set for `ThreadPoolExecutor`, default value is the number of CPU cores.\n\n* `stopped`\n\n  The scheduler is stopped or not, `True` (default) or `False`.\n\n* `latest_id`\n\n  The latest task id, which may be useful for `pybackground.BlockingScheduler`. \n\n* `task`\n\n  The task id, `Task` object (`collections.namedtuple('Task', 'fn, args, kwargs')`) dictionary, `{}` as default.\n\n* `future`\n\n  The task id, [`Future`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future) object dictionary, `{}` as default.\n\n* `start(fn, args=(), kwargs={})`\n\n  Let scheduler start executing your function using thread pool in the background (or foreground). It returns corresponding task id.\n\n* `shutdown(wait=True)`\n\n  Shutdown the scheduler.\n\n\n\n### `task`\n\n```python\nclass pybackground.task(scheduler)\n```\n\n* Use `@task` decorator to define your functions and start executing them:\n\n  ```python\n  @task(scheduler)\n  def fn(args, kwargs):\n      pass\n\n  fn.start(*args, **kwargs)\n  ```\n\n  `fn.start(*args, **kwargs)` is equivaluent to `sheduler.start(fn, args, kwargs)` using normal function definition.\n\n\n\n## Related Projects\n\n* [APScheduler](https://github.com/agronholm/apscheduler) ([apscheduler.readthedocs.org](http://apscheduler.readthedocs.org))\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/yzhang-dev/PyBackground",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yzhang-dev/PyBackground",
    "keywords": "background-jobs,background-thread,tasks,background",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyBackground",
    "package_url": "https://pypi.org/project/PyBackground/",
    "platform": "",
    "project_url": "https://pypi.org/project/PyBackground/",
    "project_urls": {
      "Download": "https://github.com/yzhang-dev/PyBackground",
      "Homepage": "https://github.com/yzhang-dev/PyBackground"
    },
    "release_url": "https://pypi.org/project/PyBackground/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A lightweight scheduler that runs tasks in the background",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8902421,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ff72fd9fd7d095b6cd7562ece57c58ea9b6576580ecd5fb0917ded46ab1880d",
          "md5": "f0f33099228e977fb7ebe06597b762ff",
          "sha256": "3d12e509370c2d737ffa4c563020bf81584a500412c3d20f689d5c2206cba677"
        },
        "downloads": -1,
        "filename": "PyBackground-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0f33099228e977fb7ebe06597b762ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5014,
        "upload_time": "2020-12-13T07:25:25",
        "upload_time_iso_8601": "2020-12-13T07:25:25.838897Z",
        "url": "https://files.pythonhosted.org/packages/8f/f7/2fd9fd7d095b6cd7562ece57c58ea9b6576580ecd5fb0917ded46ab1880d/PyBackground-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc19b731ffcaa6b7d665fb1da53aebf8f5d4972a4fb6caab04980a41a552da13",
          "md5": "21690e972b0d634453c6b352b14118a3",
          "sha256": "52537f7a2787d91dde9f781687588697b34ad63fc9288d425c39afc879f57b07"
        },
        "downloads": -1,
        "filename": "PyBackground-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "21690e972b0d634453c6b352b14118a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4959,
        "upload_time": "2020-12-15T07:47:43",
        "upload_time_iso_8601": "2020-12-15T07:47:43.788901Z",
        "url": "https://files.pythonhosted.org/packages/dc/19/b731ffcaa6b7d665fb1da53aebf8f5d4972a4fb6caab04980a41a552da13/PyBackground-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "476826195c3f8870de985ddc5fe20ecc857c91965fb31939b05348e3e99ca5d8",
          "md5": "6f7226a9edeb54524af4963f957f451a",
          "sha256": "a8025039a4236253e045a7e87af1013098412d068151b29ea3ad6f38c83b3650"
        },
        "downloads": -1,
        "filename": "PyBackground-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6f7226a9edeb54524af4963f957f451a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3580,
        "upload_time": "2020-12-15T07:47:45",
        "upload_time_iso_8601": "2020-12-15T07:47:45.094070Z",
        "url": "https://files.pythonhosted.org/packages/47/68/26195c3f8870de985ddc5fe20ecc857c91965fb31939b05348e3e99ca5d8/PyBackground-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc19b731ffcaa6b7d665fb1da53aebf8f5d4972a4fb6caab04980a41a552da13",
        "md5": "21690e972b0d634453c6b352b14118a3",
        "sha256": "52537f7a2787d91dde9f781687588697b34ad63fc9288d425c39afc879f57b07"
      },
      "downloads": -1,
      "filename": "PyBackground-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "21690e972b0d634453c6b352b14118a3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4959,
      "upload_time": "2020-12-15T07:47:43",
      "upload_time_iso_8601": "2020-12-15T07:47:43.788901Z",
      "url": "https://files.pythonhosted.org/packages/dc/19/b731ffcaa6b7d665fb1da53aebf8f5d4972a4fb6caab04980a41a552da13/PyBackground-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "476826195c3f8870de985ddc5fe20ecc857c91965fb31939b05348e3e99ca5d8",
        "md5": "6f7226a9edeb54524af4963f957f451a",
        "sha256": "a8025039a4236253e045a7e87af1013098412d068151b29ea3ad6f38c83b3650"
      },
      "downloads": -1,
      "filename": "PyBackground-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6f7226a9edeb54524af4963f957f451a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 3580,
      "upload_time": "2020-12-15T07:47:45",
      "upload_time_iso_8601": "2020-12-15T07:47:45.094070Z",
      "url": "https://files.pythonhosted.org/packages/47/68/26195c3f8870de985ddc5fe20ecc857c91965fb31939b05348e3e99ca5d8/PyBackground-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}