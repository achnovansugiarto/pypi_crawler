{
  "info": {
    "author": "Martin Turoci",
    "author_email": "martin.turoci@h2o.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Topic :: Communications :: Chat",
      "Topic :: Database",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Widget Sets",
      "Topic :: System :: Distributed Computing"
    ],
    "description": "# H2O Lightwave\n\nH2O Lightwave is a lightweight, pure-Python version of [H2O Wave](https://wave.h2o.ai/) that can be embedded in popular async web frameworks like FastAPI, Starlette, etc.\n\nIn other words, H2O Lightwave works without the Wave server.\n\nThe integration consists of 2 steps:\n\n* Add Wave's web assets directory to your framework's static file handler.\n* Add a WebSocket handler, and use `wave_serve()` to connect Wave to your web UI.\n\nThat's it. You can now render UI elements using pure Python. Lightwave aims to be as minimal as possible and only provides:\n\n* A simple way to render your UI.\n* A simple way of getting the UI inputs (like button clicks, dropdown values etc.)\n* Minimal state management.\n\nNothing more, nothing less.\n\nExample FastAPI integration:\n\n```py\nfrom fastapi import FastAPI, WebSocket, WebSocketDisconnect\nfrom fastapi.staticfiles import StaticFiles\nfrom h2o_lightwave import Q, ui, wave_serve\nfrom h2o_lightwave_web import web_directory\n\n\n# Lightwave callback function.\nasync def serve(q: Q):\n    # Paint our UI on the first page visit.\n    if not q.client.initialized:\n        # Create a local state.\n        q.client.count = 0\n        # Add a \"card\" with a text and a button\n        q.page['hello'] = ui.form_card(box='1 1 2 2', items=[\n            ui.text_xl('Hello world'),\n            ui.button(name='counter', label=f'Current count: {q.client.count}'),\n        ])\n        q.client.initialized = True\n\n    # Handle counter button click.\n    if q.args.counter:\n        # Increment the counter.\n        q.client.count += 1\n        # Update the counter button.\n        q.page['hello'].items[1].button.label = f'Current count: {q.client.count}'\n\n    # Send the UI changes to the browser.\n    await q.page.save()\n\n\n# Run: uvicorn hello_fastapi:app.\n# FastAPI boilerplate.\napp = FastAPI()\n\n\n# FastAPI: WebSocket must be registered before index.html handler.\n@app.websocket(\"/_s/\")\nasync def ws(ws: WebSocket):\n    try:\n        await ws.accept()\n        await wave_serve(serve, ws.send_text, ws.receive_text)\n        await ws.close()\n    except WebSocketDisconnect:\n        print('Client disconnected')\n\napp.mount(\"/\", StaticFiles(directory=web_directory, html=True), name=\"/\")\n```\n\nWe also recommend reading the [blog post](https://medium.com/@unusualcode/h2o-lightwave-building-web-uis-with-fastapi-and-python-88a915383490) and other [integration examples](https://github.com/h2oai/wave/tree/master/py/h2o_lightwave/examples).\n\n## Installation\n\n```bash\npip install \"h2o-lightwave[web]\"\n```\n\nLightwave requires websockets to function properly. Not all libraries come with them out of the box so you might need to install them additionally. For example, Starlette & FastAPI requires\n\n```bash\npip install websockets\n```\n\nto be able to expose websocket handlers. This might differ from framework to framework.\n\n## Widgets\n\nAll available widgets can be found [here](https://wave.h2o.ai/docs/widgets/overview). We are working on separate docs for Lightwave.\n\n## Using Lightwave within an existing HTML page\n\nLightwave can also be used only for certain parts of your HTML pages, e.g. for charts. In addition to the integration steps above:\n\n* Use the `get_web_files` function which HTML links to scripts and styles for you to inject into your existing HTML.\n* Render a `div` with an id `wave-root` (`<div id='wave-root'></div>`) into which you want Lightwave to render.\n* Render a parent container for `wave-root` that has `position: relative` and has some dimensions attached.\n\n```html\n{# index_template.html #}\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Document</title>\n  <!-- Scripts and stylesheets required for Wave to work properly. -->\n  {{ wave_files }}\n</head>\n<style>\n  /* Must have position: relative and some size specified (e.g. height, flexbox, absolute positioning etc.). */\n  .wave-container {\n    position: relative;\n    height: 800px;\n  }\n</style>\n\n<!-- Websocket URL can be changed if needed. Defaults to \"/_s/\". -->\n<body data-wave-socket-url=\"/custom_socket/\">\n  <noscript>You need to enable JavaScript to run this app.</noscript>\n  <div class=\"wave-container\">\n    <!-- Wave renders here. -->\n    <div id=\"wave-root\"></div>\n  </div>\n</body>\n\n</html>\n```\n\n## Configuration\n\nBy default, Lightwave tries to connect to websocket route at `/_s/`. This can be configured by adding a `data-wave-socket-url` attribute on the HTML body element (`<body data-wave-socket-url='/my_socket_url/'>`).\n\n## Links\n\n* Website: [https://wave.h2o.ai/](https://wave.h2o.ai/)\n* Releases: [https://pypi.org/project/h2o-wave/](https://pypi.org/project/h2o-wave/)\n* Code: [https://github.com/h2oai/wave](https://github.com/h2oai/wave)\n* Issue tracker: [https://github.com/h2oai/wave/issues](https://github.com/h2oai/wave/issues)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://h2o.ai/products/h2o-wave",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "h2o-lightwave",
    "package_url": "https://pypi.org/project/h2o-lightwave/",
    "platform": null,
    "project_url": "https://pypi.org/project/h2o-lightwave/",
    "project_urls": {
      "Documentation": "https://wave.h2o.ai/",
      "Homepage": "https://h2o.ai/products/h2o-wave",
      "Issues": "https://github.com/h2oai/wave/issues",
      "Source": "https://github.com/h2oai/wave"
    },
    "release_url": "https://pypi.org/project/h2o-lightwave/0.25.2/",
    "requires_dist": [
      "h2o-lightwave-web (==0.25.2) ; extra == 'web'"
    ],
    "requires_python": ">=3.7.1",
    "summary": "H2O Wave Python driver for integration with arbitrary python web frameworks.",
    "version": "0.25.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17332447,
  "releases": {
    "0.24.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b54931cd9adc759e6ab01a55f904db95bd7a611f60b782e0a3cc8c475806a6b",
          "md5": "d6d1e25db12d0f84961a1db58e1dddf0",
          "sha256": "9a82d0eabe6a343f7c46b619593854048b3b80dcf4de83981fb98ebc590f042e"
        },
        "downloads": -1,
        "filename": "h2o_lightwave-0.24.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d6d1e25db12d0f84961a1db58e1dddf0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1",
        "size": 118679,
        "upload_time": "2023-02-24T17:53:41",
        "upload_time_iso_8601": "2023-02-24T17:53:41.873907Z",
        "url": "https://files.pythonhosted.org/packages/4b/54/931cd9adc759e6ab01a55f904db95bd7a611f60b782e0a3cc8c475806a6b/h2o_lightwave-0.24.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.25.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbbd61bc96d6ad0520cfb42a8a33222e797b6a8b996853da6bfca07e6c1a3617",
          "md5": "3f10050aaffcd57b33f5e64617dc909f",
          "sha256": "5c18e0af9eda825b14ded3b62e421d84b55db5fcd90d69a2c9bf0a0dcfe4fa4f"
        },
        "downloads": -1,
        "filename": "h2o_lightwave-0.25.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f10050aaffcd57b33f5e64617dc909f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1",
        "size": 119242,
        "upload_time": "2023-03-02T12:21:54",
        "upload_time_iso_8601": "2023-03-02T12:21:54.656294Z",
        "url": "https://files.pythonhosted.org/packages/cb/bd/61bc96d6ad0520cfb42a8a33222e797b6a8b996853da6bfca07e6c1a3617/h2o_lightwave-0.25.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.25.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3da105018f0f453dec52bb9a1d09609f079fffed8c84a02bb3797405e1ba680",
          "md5": "8672947c097394951050c52092fb3781",
          "sha256": "89476509b14e3341e96303b5432431bbe2e45a5180e9ff64452a7b8b790950d9"
        },
        "downloads": -1,
        "filename": "h2o_lightwave-0.25.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8672947c097394951050c52092fb3781",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1",
        "size": 119330,
        "upload_time": "2023-03-13T08:50:26",
        "upload_time_iso_8601": "2023-03-13T08:50:26.236332Z",
        "url": "https://files.pythonhosted.org/packages/c3/da/105018f0f453dec52bb9a1d09609f079fffed8c84a02bb3797405e1ba680/h2o_lightwave-0.25.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.25.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd47f19386931669e2015f022bbbd2f6b5ed3caf19bf58dae02d4b8684c1837c",
          "md5": "be1bae9ad739b67cd85b4dda847e4135",
          "sha256": "f9ef0b6b1192fc75b96233a2cb8c886a0b8f5f8f2c29ac36c47c139807ad8d26"
        },
        "downloads": -1,
        "filename": "h2o_lightwave-0.25.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be1bae9ad739b67cd85b4dda847e4135",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1",
        "size": 119329,
        "upload_time": "2023-03-17T09:58:14",
        "upload_time_iso_8601": "2023-03-17T09:58:14.326527Z",
        "url": "https://files.pythonhosted.org/packages/bd/47/f19386931669e2015f022bbbd2f6b5ed3caf19bf58dae02d4b8684c1837c/h2o_lightwave-0.25.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd47f19386931669e2015f022bbbd2f6b5ed3caf19bf58dae02d4b8684c1837c",
        "md5": "be1bae9ad739b67cd85b4dda847e4135",
        "sha256": "f9ef0b6b1192fc75b96233a2cb8c886a0b8f5f8f2c29ac36c47c139807ad8d26"
      },
      "downloads": -1,
      "filename": "h2o_lightwave-0.25.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "be1bae9ad739b67cd85b4dda847e4135",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.1",
      "size": 119329,
      "upload_time": "2023-03-17T09:58:14",
      "upload_time_iso_8601": "2023-03-17T09:58:14.326527Z",
      "url": "https://files.pythonhosted.org/packages/bd/47/f19386931669e2015f022bbbd2f6b5ed3caf19bf58dae02d4b8684c1837c/h2o_lightwave-0.25.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}