{
  "info": {
    "author": "Barnabás Pőcze",
    "author_email": "pobrn@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Topic :: System :: Hardware :: Hardware Drivers",
      "Topic :: Utilities"
    ],
    "description": "# What is it?\n`ite8291r3-ctl` is a userspace driver for the ITE 8291 (rev 0.03) RGB keyboard backlight controller.\n\n\n# Disclaimer\n**This software is in early stages of developement. Futhermore, to quote GPL: Everything is provided as is. There is no warranty for the program, to the extent permitted by applicable law.**\n\n**This software is licensed under the GNU General Public License v2.0**\n\n\n# Compatibility\nThe following devices have been reported to work:\n\n| idVendor | idProduct | bcdDevice |             manufacturer             |      product      |\n|----------|-----------|-----------|--------------------------------------|-------------------|\n| 048d     | 6004      | 0.03      | Integrated Technology Express, Inc.  | ITE Device(8291)  |\n| 048d     | ce00      | 0.03      | Integrated Technology Express, Inc.  | ITE Device(8291)  |\n\nIf you believen your device should be supported, but it is not, please open an issue. You can run `ite8291r3-ctl query --devices` to see the supported devices found in the system. Alternatively, you can use `lsusb -d 048d:`.\n\n\n# Dependencies\n### Required\n* [`Python 3.6`](https://python.org) or above\n* [`pyusb`](https://github.com/pyusb/pyusb) *(and thus one of the backend that it supports, e.g. [`libusb`](https://libusb.info))*\n### Optional\n#### for the `screen` mode\n* [`python-xlib`](https://pypi.org/project/python-xlib) Python package\n* [`Pillow`](https://pypi.org/project/Pillow) Python package\n\n\n# Features\n## Current\n* Support for built-in effects\n* Monocolor mode\n* Color palette management\n* Per-key RGB colors\n* Animations\n* Coloring the keyboard according to what is on screen **[exprimental, Linux+Xorg only]**\n* Querying parts of the controller state\n\n## TO-DO\n* User interface for instructing the controller to save changes\n* Modify timeout\n* A more sane way of assigning colors to specific keys\n* Possibly a GUI\n* Coloring the keyboard based on audio\n\n\n# How to install\n## Using PIP\nThe simplest way to install is to use `pip`:\n```\npip install ite8291r3-ctl\n```\n\n*Note:* This will not download anything from the `assets` directory, it only installs the program. You will have to download them manually if you want to try them out.\n\n*Note:* If you want to install for all users, run `pip` as root.\n\n## Manually\n### Downloading\nIf you have `git` installed:\n```\ngit clone https://github.com/pobrn/ite8291r3-ctl\n```\n\nIf you don't, then you can download it [here](https://github.com/pobrn/ite8291r3-ctl/archive/master.zip).\n\n### Installing\nAfter downloading the files, open the directory in a terminal, and run `pip install .` (or `pip install .[mode-screen]` if you want the optional dependencies for the `screen` mode). If you have multiple Python versions installed, specify one that satisfies the requirements.\n\n\n# How to use\n## Running it without installation\nIt is possible to run the utility without installation. Open the directory in a terminal, then run `python -m ite8291r3_ctl`. In this case you need to install the dependencies manually. `pip install -r requirements.txt` to install the required `pyusb` package. If you want to try the `screen` mode, you need to install the optional dependencies as well.\n\n## Accessing the USB device\nBy default you need *root* privileges if you want to use this utility. As noted [here](https://github.com/rodgomesc/avell-unofficial-control-center/issues/45) and [here](https://aur.archlinux.org/cgit/aur.git/tree/10-ite-backlight.rules?h=ite-backlight), you can create a `udev` rule to allow everyone on your system to access this particular USB device, and thus you won't need to run the program as `root`.\n\nIf you want to do that, create a file `/etc/udev/rules.d/99-ite8291.rules`:\n```\nSUBSYSTEMS==\"usb\", ATTRS{idVendor}==\"048d\", ATTRS{idProduct}==\"ce00\", MODE:=\"0666\"\n```\n\nor you can make it accessible only for a given group if you don't want anyone to have access to it:\n```\nSUBSYSTEMS==\"usb\", ATTRS{idVendor}==\"048d\", ATTRS{idProduct}==\"ce00\", GROUP=\"name_of_the_group\", MODE:=\"0660\"\n```\n\nafter creating the file, run `sudo udevadm control --reload`, then `sudo udevadm trigger`. Or reboot.\n\n## Subcommands\nUse `ite8291r3-ctl -h` to get a list of subcommands. Use `ite8291r3 <subcommand> -h` to get the help for a given subcommand. Use `ite8291r3-ctl --device <bus>/<addr>` to select a device to control, if the device is not specified, the first available will be used.\n### off\nTurns off the keyboard backlight.\n\n*Example:*\n```\nite8291r3-ctl off\n```\n___\n### brightness\nChanges the keyboard backlight brightness. The argument must be an integer between 0 and 50 (inclusive). Zero is no backlight, 50 is the brightest.\n\n*Example:*\n```\nite8291r3-ctl brightness 33\n```\n___\n### test-pattern\n```\nite8291r3-ctl test-pattern\n```\n**[for testing]** Shows a test pattern. It takes 10 seconds to run. It will turn off all key backlighting once it is finished.\n\n___\n### freeze\n**[for testing, potentially unsafe]** Changes the speed of the current effect to 11 (one above the maximum). This appears to stop the effect (which are animated).\n\n*Example:*\n```\nite8291r3-ctl freeze\n```\n\n___\n### effect\nChanges the current effect. You can specify the following properties for effects:\n| property   | possible values       | note                               | default |\n|------------|-----------------------|------------------------------------|---------|\n| speed      | integer from 0 to 10  | 0 is fastest, 10 is slowest        | 5       |\n| brightness | integer from 0 to 50  | 0 is no backlight, 50 is brightest | 25      |\n| color      | *see help*            | -                                  | random  |\n| direction  | left, right, up, down | -                                  | left    |\n| reactive   | -                     | -                                  | no      |\n\n*Example:*\n```\nite8291r3-ctl effect wave -s 0 -d up\n// enable 'wave' effect with speed 0 (fastest) and bottom-up direction\n\nite8291r3-ctl effect rainbow -b 50\n// enable rainbow effect with brightness 50 (max)\n\nite8291r3-ctl effect aurora -s 2 -c red -r\n// enable reactive 'aurora' effect with speed 2 and color red\n```\n\n*Help*:\n```\npositional arguments:\n  {breathing,wave,random,rainbow,ripple,marquee,raindrop,aurora,fireworks}\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s, --speed SPEED\n                        Speed of the effect.\n  -b, --brightness BRIGHTNESS\n                        Brightness of the effect.\n  -c, --color {none,red,orange,yellow,green,blue,teal,purple,random}\n                        Color of the effect.\n  -d, --direction {none,right,left,up,down}\n                        Direction of the effect.\n  -r, --reactive        Specify if you want the effect to be reactive.\n```\n\n*Note:* If you specify `random` for color value, then all colors in the palette will be used in some fashion (depending on the effect).\n\n*Note:* Do **not** use `none` for *direction* or *color*, because nothing will show up.\n\n*Note:* Not all effects support all properties. You will get an error message if you try to use an unsupported property. See the *Effect property support matrix* section for more info.\n\n*Note:* The color names might be misleading. `red` actually refers to the first color in the palette, `orange` to the second, and so on. If you modify the palette, and then set the color for an effect, you might not get what you expect.\n\n*Note:* Enabling an effect will change the brightness. If not specified, the default value (25) will be applied.\n\n___\n### monocolor\nChanges the color of the keyboard to a single color which may be specified as an RGB code or a predefined name. For the list of color names see `ite8291r3-ctl monocolor -h`.\n\n*Example:*\n```\nite8291r3-ctl monocolor -b 5 --name white\n// set the backlight color to white and the brightness to 5 (very low)\n\nite8291r3-ctl monocolor --rgb 255,45,23\n// change the backlight to color (255, 45, 23)\n```\n*Note:* If you don't specify the brightness, it will not be changed.\n*Note:* No whitespaces are allowed in the RGB color code. `--rgb 255, 45, 23` is invalid and will be rejected.\n\n___\n### palette\nManages the color palette on the device.\n\n*Example:*\n```\nite8291r3-ctl palette --restore\n// restores the palette to the default values\n\nite8291r3-ctl palette --set-color 3 255,13,14\n// sets the 3rd color of the palette to (255, 13, 14)\n\nite8291r3-ctl palette --random\n// sets all color to something randomly generated\n```\n\n*Note:* The index specified for `--set-color` must lie between 1 and 7 (inclusive).\n\n___\n### mode\n**[experimental]** Enables one of the interactive modes. There is only a single mode available at the moment: `screen`, and it only works on Linux, with Xorg. You also need to install `python-xlib` and `Pillow` Python pacakges. You can install them by installing the utility with `pip install ite8291r3_ctl[mode-screen]`.\n\nThe `screen` mode takes a screenshot every 0.2 seconds of your screen, downsizes it to 16x6, and lights up the backlight LEDs according to the colors on the picture. [This video](https://www.youtube.com/watch?v=3VZthcTSBrI) is perfect for trying it out. The colors are not cleared after exiting, so I guess this is also a way to set the desired colors if you don't want to spend time with the more robust way described in the following section.\n\n*Example:*\n```\nite8291r3-ctl mode --screen\n// take screenshots of the whole screen and color according to that\n\nite8291r3-ctl mode --screen 1000,1000,200,300\n// take screenshots of the rectangle whose top left corner is at (1000, 1000) and has a width of 200 and height of 300\n```\n\n*Note:* You can exit by pressing `Ctrl+C` (or seding `SIGINT` to the process).\n\n*Demo (video by [VJ Loops](https://www.youtube.com/channel/UCo-cAdBNbXbWF5e_efkof7Q))*:\n\n![screen mode demo](https://i.imgur.com/qYapxwf.gif)\n\n___\n### anim\nPlays an animation from a file. The name might be a bit misleading, because this is actually the facility of the program that allows you to set the color values on a per key basis. Read the README file in `assets/animatins` to see how animations may be made. It is a bit cumbersome, I am aware, however, a better way has yet to be found. The animation may be read from the standard input, so you can programatically generate it.\n\n*Example:*\n```\nite8291r3-ctl anim --file test_anim_file --loop 3\n// read animation from 'anin_test_file' and loop it three times\n\nite8291r3-ctl anim --loop\n// read animation from the standard input and loop it indefinitely\n```\n\n*Note:* If looping is required, then the whole file must be read into memory.\n\n___\n### query\nQueries the controller.\n\n*Example:*\n```\nite8291r3-ctl query --fw-version\n// prints the controller firmware version as X.Y.Z.W\n\nite8291r3-ctl query --brightness\n// prints the current brightness\n\nite8291r3-ctl query --state\n// prints the current state of the keyboard backlight: \"on\" or \"off\"\n\nite8291r3-ctl query --devices\n// prints the list of supported devices found in the system\n```\n\n*Note:* This information may be useful if you want to use it in a script.\n\n\n# Effect property support matrix\nThis matrix shows which effects support which properties.\n\n| effect    | speed | color | direction | reactivity |\n|-----------|-------|-------|-----------|------------|\n| breathing | yes   | yes   | -         | -          |\n| wave      | yes   | -     | yes       | -          |\n| random    | yes   | yes   | -         | yes        |\n| rainbow   | -     | -     | -         | -          |\n| ripple    | yes   | yes   | -         | yes        |\n| marquee   | yes   | -     | -         | -          |\n| raindrop  | yes   | yes   | -         | -          |\n| aurora    | yes   | yes   | -         | yes        |\n| fireworks | yes   | yes   | -         | yes        |\n\n*Note:* brightness may be specified for all currently supported effects.\n\n\n# Contribution\nAll contribution is welcome. If you find a bug, typo, or have a feature request, do not hestitate to report it on the [*Issues*](https://github.com/pobrn/ite8291r3-ctl/issues) page (but please do a search first, maybe someone has already reported it). If you have an addition to the software and you want it to be inclueded, open a [*pull request*](https://github.com/pobrn/ite8291r3-ctl/pulls).\n\n\n# Acknowledgements\n[`aucc`](https://github.com/rodgomesc/avell-unofficial-control-center), [`ite-backlight`](https://github.com/hexagonal-sun/ite-backlight), and [*Project Starbeat*](https://github.com/kirainmoe/tongfang-hackintosh-utility) have been incredily useful in gaining insight into how this controller works, without them, this program would not have been created.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pobrn/ite8291r3-ctl",
    "keywords": "ITE,ITE8291,RGB,keyboard,backlight,linux",
    "license": "GPLv2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ite8291r3-ctl",
    "package_url": "https://pypi.org/project/ite8291r3-ctl/",
    "platform": "",
    "project_url": "https://pypi.org/project/ite8291r3-ctl/",
    "project_urls": {
      "Bug Reports": "https://github.com/pobrn/ite8291r3-ctl/issues",
      "Homepage": "https://github.com/pobrn/ite8291r3-ctl",
      "Source": "https://github.com/pobrn/ite8291r3-ctl"
    },
    "release_url": "https://pypi.org/project/ite8291r3-ctl/0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "ITE 8291 (rev 0.03) userspace driver",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8447058,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed7f635e1615f8cabe33b824745020eaf1e961158a32200d0c48102f5faa89fa",
          "md5": "d3302b043ceb00a0f970f8eae20d7489",
          "sha256": "ee0e819eab8c3c307139a1fbbc0349430b868523193db015e785a18dd1770c52"
        },
        "downloads": -1,
        "filename": "ite8291r3-ctl-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d3302b043ceb00a0f970f8eae20d7489",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17475,
        "upload_time": "2020-07-15T18:00:33",
        "upload_time_iso_8601": "2020-07-15T18:00:33.830889Z",
        "url": "https://files.pythonhosted.org/packages/ed/7f/635e1615f8cabe33b824745020eaf1e961158a32200d0c48102f5faa89fa/ite8291r3-ctl-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb3a0cefc4b5571dcf5d31fbd9908cf3cbed59397e3667eac844a3b1e09cdcb9",
          "md5": "b31d589ce5d0f8878af44ea713a4db18",
          "sha256": "b76bd3f261171bec74347750da8c25d34f7acf5020091012a667c5833ce4dd9f"
        },
        "downloads": -1,
        "filename": "ite8291r3-ctl-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b31d589ce5d0f8878af44ea713a4db18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17502,
        "upload_time": "2020-07-23T11:03:27",
        "upload_time_iso_8601": "2020-07-23T11:03:27.907416Z",
        "url": "https://files.pythonhosted.org/packages/cb/3a/0cefc4b5571dcf5d31fbd9908cf3cbed59397e3667eac844a3b1e09cdcb9/ite8291r3-ctl-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "604f7a6fd9736b0fb20f391395e36704cb34843b83fc3b70987e565eea5527fe",
          "md5": "b4fd1003d94d66a0b63c777407aa3b32",
          "sha256": "d8645a478c552fde378f5a81fee32e1be6e8987698a8c40e6947234bd5be9532"
        },
        "downloads": -1,
        "filename": "ite8291r3-ctl-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b4fd1003d94d66a0b63c777407aa3b32",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17836,
        "upload_time": "2020-10-19T14:37:59",
        "upload_time_iso_8601": "2020-10-19T14:37:59.100044Z",
        "url": "https://files.pythonhosted.org/packages/60/4f/7a6fd9736b0fb20f391395e36704cb34843b83fc3b70987e565eea5527fe/ite8291r3-ctl-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "604f7a6fd9736b0fb20f391395e36704cb34843b83fc3b70987e565eea5527fe",
        "md5": "b4fd1003d94d66a0b63c777407aa3b32",
        "sha256": "d8645a478c552fde378f5a81fee32e1be6e8987698a8c40e6947234bd5be9532"
      },
      "downloads": -1,
      "filename": "ite8291r3-ctl-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b4fd1003d94d66a0b63c777407aa3b32",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17836,
      "upload_time": "2020-10-19T14:37:59",
      "upload_time_iso_8601": "2020-10-19T14:37:59.100044Z",
      "url": "https://files.pythonhosted.org/packages/60/4f/7a6fd9736b0fb20f391395e36704cb34843b83fc3b70987e565eea5527fe/ite8291r3-ctl-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}