{
  "info": {
    "author": "",
    "author_email": "aprilahijriyan <hijriyan23@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# certpy\n\n> Self-signed SSL certificate generator :closed_lock_with_key:\n\nThis tool is an experiment to learn _\"How to create a self-signed certificate\"_.\n\n## Installation\n\nWith `pip`:\n\n```\npip install certpy\n```\n\nInstall from source (you need to install [python-pdm](https://pdm.fming.dev/latest/) first):\n\n```\ngit clone https://github.com/aprilahijriyan/certpy.git\ncd certpy\npdm install\n```\n\n## Usage\n\nCertPy provides a workflow file, which will be used to instruct the creation of the certificate.\n\n> The workflow file name is `certpy.yml` (you cannot change the file name or extension to `.yaml`) and the workflow file must be in the directory you are working in.\n\nHere's an example of a workflow:\n\n```yml\n# Save it as certpy.yml in the current directory.\ncertificate_age: &age\n  days: 365\n\ncertificates:\n  kuli:\n    type: ca\n    distinguished_name:\n      countryName: ID\n      stateOrProvinceName: Indonesia\n      localityName: Jawa Barat\n      organizationName: Kuli Dev\n      organizationalUnitName: OSS\n      commonName: Kuli Dev Root CA\n      emailAddress: null\n    age: *age\n    hash: sha256\n    overwrite: true\n\n  server:\n    type: server\n    distinguished_name:\n      commonName: Server\n    ca_file: kuli\n    age: *age\n    hash: sha256\n    san:\n      ip:\n        - 192.168.18.203\n      dns:\n        - ca.example.com\n    overwrite: true\n\n  client:\n    type: client\n    distinguished_name:\n      commonName: Client\n    ca_file: kuli\n    age: *age\n    hash: sha256\n    overwrite: true\n```\n\nThen, create a CertPy environment (this is to hold all certificates created by CertPy).\n\n```sh\n# this will create a `~/.certpy` directory and create a default `Root CA` certificate stored in `~/.certpy/ca/certs/rootCA.pem`.\ncertpy ca init\n```\n\nNow you can create your own certificate from the workflow file!\n\n```\n$ certpy create\n                                  'kuli' Root CA\n┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n┃ CA File                               ┃ CA Key                                  ┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩\n│ /home/april/.certpy/ca/certs/kuli.pem │ /home/april/.certpy/ca/private/kuli.key │\n└───────────────────────────────────────┴─────────────────────────────────────────┘\n                                     'server' Certificate\n┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n┃ Cert File                                   ┃ Cert Key                                      ┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩\n│ /home/april/.certpy/server/certs/server.pem │ /home/april/.certpy/server/private/server.key │\n└─────────────────────────────────────────────┴───────────────────────────────────────────────┘\n                                     'client' Certificate\n┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n┃ Cert File                                   ┃ Cert Key                                      ┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩\n│ /home/april/.certpy/client/certs/client.pem │ /home/april/.certpy/client/private/client.key │\n└─────────────────────────────────────────────┴───────────────────────────────────────────────┘\n```\n\nYou can verify the self-signed certificate, using the command:\n\n```\n$ openssl verify -verbose -CAfile /home/april/.certpy/ca/certs/kuli.pem /home/april/.certpy/server/certs/server.pem\n/home/april/.certpy/server/certs/server.pem: OK\n```\n\nAll certificates generated by CertPy will be stored in the `~/.certpy` directory. And each type of certificate is stored in a different directory.\n\n* For `Root CA` stored in `~/.certpy/ca`.\n* For `Server Certificate` stored in `~/.certpy/server`.\n* For `Client Certificate` stored in `~/.certpy/client`.\n\nIn the directory `~/.certpy/{ca,server,client}` there are 2 directories.\n\n* The `certs` directory is used to store certificates.\n* The `private` directory is used to store certificate keys.\n\n\n## Workflow structure details\n\n* About `certificates` in workflow file\n\n    It contains the definition of certificate.\n    In CertPy only supports `Root CA`, `Server` and `Client` certificate types.\n\n    Each type of certificate has a different data structure. Read more below...\n\n* About `Root CA` Certificate\n\n  The structure for `Root CA` is as follows:\n\n  * `type`: set to `ca` to mark if this is a **Root CA** certificate. (**required**)\n  * `distinguished_name`: (`object`, **required**)\n\n      * `countryName`: Country Code (e.g. `ID`) (**optional**)\n      * `stateOrProvinceName`: State (e.g. `Indonesia`) (**optional**)\n      * `localityName`: Province (e.g. `Jawa Barat`) (**optional**)\n      * `organizationName`: Organization Name (e.g. `Kuli Dev`) (**optional**)\n      * `organizationalUnitName`: Organization Unit Name (e.g. `OSS`) (**optional**)\n      * `commonName`: Common Name (e.g. `Kuli Dev Root CA`) (**required**)\n      * `emailAddress`: Email address (e.g. `your@company.com`) (**optional**)\n  * `age`: (`object`, **required**)\n\n      You must fill in one of the fields below. For example fill `days` with `365` (which is a certificate valid in 1 year)\n\n      * `days`\n      * `seconds`\n      * `microseconds`\n      * `milliseconds`\n      * `minutes`\n      * `hours`\n      * `weeks`\n\n  * `hash`: See https://www.pyopenssl.org/en/latest/api/crypto.html#digest-names (**required**)\n  * `overwrite`: If it is set to `true` it will overwrite the old certificate with the new one. By default, if the certificate already exists it will be skipped. (`bool`, **optional**)\n\n* About `Server` Certificate\n\n  Its structure is the same as `Root CA`.\n\n  However, there is a slight addition to the `Server` certificate. Here's a list of the new fields in the `server` certificate:\n\n  * `ca_file`: (`str` or `array`, **required**)\n\n    The CA file is required to sign certificates for `server` or `client`.\n\n    - If it is `str`, it will use the `Root CA` certificate from the workflow file.\n    - If using `array`, must have 2 items. For example index `0` is `CA File` and index `1` is `CA Key`.\n\n  * `san`: (`object`, **required**)\n\n    * `ip`: IP address list (`array`)\n    * `dns`: Domain name list (`array`)\n\n  > Note: the certificate must be marked with `type: server` if you want to create a certificate for `Server`.\n\n* About `Client` Certificate\n\n  Its structure is the same as `Server Certificate`.\n\n  However, on the client certificate it doesn't have a `san` field.\n\n  > Note: the certificate must be marked with `type: client` if you want to create a certificate for `Client`.\n\n## Related projects\n\nCertPy is heavily inspired by the following tools:\n\n* [mkcert](https://github.com/FiloSottile/mkcert)\n* [step-cli](https://smallstep.com/)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "certpy",
    "package_url": "https://pypi.org/project/certpy/",
    "platform": null,
    "project_url": "https://pypi.org/project/certpy/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/certpy/0.1.1/",
    "requires_dist": [
      "PyYAML>=6.0",
      "pyOpenSSL>=22.1.0",
      "rich>=10.11.0",
      "typer>=0.6.1"
    ],
    "requires_python": ">=3.7",
    "summary": "Self-signed SSL certificate generator",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15635035,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c9b243b8e374cca2e038b9d34722b44db428ba995e23c754bf9fb2c917ff039",
          "md5": "08a575c423b77fa4693533e68cc545cb",
          "sha256": "aba251006cb649b13f64a42710959988cf1fea3aa927a74635a0ba59803c2ff3"
        },
        "downloads": -1,
        "filename": "certpy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08a575c423b77fa4693533e68cc545cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8971,
        "upload_time": "2022-11-03T00:01:20",
        "upload_time_iso_8601": "2022-11-03T00:01:20.789705Z",
        "url": "https://files.pythonhosted.org/packages/9c/9b/243b8e374cca2e038b9d34722b44db428ba995e23c754bf9fb2c917ff039/certpy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74c3df2dd90e81d3f255b2486c3a122aa284e78ce67747de56ae60054c87bd7f",
          "md5": "b7ea8b1fa91fa9ef1532d834a467bccb",
          "sha256": "ee878e2f1524a05156713a13c8054f096fa4397d6d864c8150d53c924386b108"
        },
        "downloads": -1,
        "filename": "certpy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b7ea8b1fa91fa9ef1532d834a467bccb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9627,
        "upload_time": "2022-11-03T00:01:22",
        "upload_time_iso_8601": "2022-11-03T00:01:22.657946Z",
        "url": "https://files.pythonhosted.org/packages/74/c3/df2dd90e81d3f255b2486c3a122aa284e78ce67747de56ae60054c87bd7f/certpy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d2fa36476fe466ecc68ec86fce2465e24dd11aacfbc08b982047c39024452d4",
          "md5": "733afd3e374c7cd5bb51d2bf864f51ea",
          "sha256": "5b81f4e384a9e3c8d4d4f93c2c3ef65e29c28c06d3be9590932844a4df7e7ce6"
        },
        "downloads": -1,
        "filename": "certpy-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "733afd3e374c7cd5bb51d2bf864f51ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9004,
        "upload_time": "2022-11-03T01:23:02",
        "upload_time_iso_8601": "2022-11-03T01:23:02.030699Z",
        "url": "https://files.pythonhosted.org/packages/1d/2f/a36476fe466ecc68ec86fce2465e24dd11aacfbc08b982047c39024452d4/certpy-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "184a9874e757a981947c1dd7063853a07836c7abcc37f7df1c3fa926fc290711",
          "md5": "775669ca9afe6f02029b0453815403c5",
          "sha256": "dc9572fb02b830e906c04a9cad543be3f454f50db77320519587168128bbfe45"
        },
        "downloads": -1,
        "filename": "certpy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "775669ca9afe6f02029b0453815403c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9688,
        "upload_time": "2022-11-03T01:23:04",
        "upload_time_iso_8601": "2022-11-03T01:23:04.410045Z",
        "url": "https://files.pythonhosted.org/packages/18/4a/9874e757a981947c1dd7063853a07836c7abcc37f7df1c3fa926fc290711/certpy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d2fa36476fe466ecc68ec86fce2465e24dd11aacfbc08b982047c39024452d4",
        "md5": "733afd3e374c7cd5bb51d2bf864f51ea",
        "sha256": "5b81f4e384a9e3c8d4d4f93c2c3ef65e29c28c06d3be9590932844a4df7e7ce6"
      },
      "downloads": -1,
      "filename": "certpy-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "733afd3e374c7cd5bb51d2bf864f51ea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9004,
      "upload_time": "2022-11-03T01:23:02",
      "upload_time_iso_8601": "2022-11-03T01:23:02.030699Z",
      "url": "https://files.pythonhosted.org/packages/1d/2f/a36476fe466ecc68ec86fce2465e24dd11aacfbc08b982047c39024452d4/certpy-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "184a9874e757a981947c1dd7063853a07836c7abcc37f7df1c3fa926fc290711",
        "md5": "775669ca9afe6f02029b0453815403c5",
        "sha256": "dc9572fb02b830e906c04a9cad543be3f454f50db77320519587168128bbfe45"
      },
      "downloads": -1,
      "filename": "certpy-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "775669ca9afe6f02029b0453815403c5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9688,
      "upload_time": "2022-11-03T01:23:04",
      "upload_time_iso_8601": "2022-11-03T01:23:04.410045Z",
      "url": "https://files.pythonhosted.org/packages/18/4a/9874e757a981947c1dd7063853a07836c7abcc37f7df1c3fa926fc290711/certpy-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}