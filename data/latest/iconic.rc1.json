{
  "info": {
    "author": "Dean Montgomery",
    "author_email": "montgomery.dean97@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "======\niconic\n======\n\n.. image:: https://img.shields.io/github/workflow/status/monty5811/iconic/CI/main?style=for-the-badge\n   :target: https://github.com/monty5811/iconic/actions?workflow=CI\n\n.. image:: https://img.shields.io/codecov/c/github/monty5811/iconic/main?style=for-the-badge\n   :target: https://app.codecov.io/gh/monty5811/iconic\n\n.. image:: https://img.shields.io/pypi/v/iconicicons.svg?style=for-the-badge\n   :target: https://pypi.org/project/iconicicons/\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg?style=for-the-badge\n   :target: https://github.com/psf/black\n\n.. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white&style=for-the-badge\n   :target: https://github.com/pre-commit/pre-commit\n   :alt: pre-commit\n\nUse `iconic.app icons <https://iconic.app/>`__ in your Django and Jinja templates.\n\nRequirements\n------------\n\nPython 3.6 to 3.9 supported.\n\nDjango 2.2 to 3.2 supported.\n\n----\n\nThis was forked from `adamchainz/heroicons <https://github.com/adamchainz/heroicons>`\n\n**Are your tests slow?**\nCheck out Adam's book `Speed Up Your Django Tests <https://gumroad.com/l/suydt>`__ which covers loads of best practices so you can write faster, more accurate tests.\n\n----\n\nUsage\n-----\n\nThe ``iconic`` package supports both Django templates and Jinja2 templates.\nFollow the appropriate guide below.\n\nDjango templates\n~~~~~~~~~~~~~~~~\n\n1. Install with ``python -m pip install iconic[django]``.\n\n2. Add to your ``INSTALLED_APPS``:\n\n   .. code-block:: python\n\n       INSTALLED_APPS = [\n           ...,\n           'iconic',\n           ...,\n       ]\n\nNow in your templates you can load the template library with:\n\n.. code-block:: django\n\n    {% load iconic %}\n\nThis provides a tag to render ``<svg>`` icons: ``iconic_icon``.\nThe tags take these arguments:\n\n* ``name``, positional: the name of the icon to use.\n  You can see the icon names on the `iconic.app grid <https://iconic.app/>`__.\n\n* ``size``, keyword: an integer that will be used for the width and height attributes of the output ``<svg>`` tag.\n  Defaults to the icons’ designed size: ``24``.\n\n* Any number of keyword arguments.\n  These will be added as HTML attributes to the output ``<svg>`` tag.\n  Underscores in attribute names will be replaced with dashes, allowing you to define e.g. ``data-`` attributes.\n\nFor example, to render an outline “announcement” icon, at 48x48, with some extra CSS classes and a data attribute “controller”, you would write:\n\n.. code-block:: django\n\n    {% iconic_icon \"announcement\" size=48 class=\"h-4 w-4 inline\" data_controller=\"academia\" %}\n\nJinja templates\n~~~~~~~~~~~~~~~\n\n1. Install with ``python -m pip install iconic[jinja]``.\n\n2. Adjust your Jinja ``Environment`` to add the global function ``iconic``, imported from ``iconic.jinja``.\n   For example:\n\n   .. code-block:: python\n\n       from iconic.jinja import iconic_icon\n       from jinja2 import Environment\n\n       env = Environment()\n       env.globals.update(\n           {\n               \"iconic_icon\": iconic_icon,\n           }\n       )\n\nNow in your templates you can call those two functions, which render ``<svg>`` icons corresponding to the two icon styles in the set.\nThe functions take these arguments:\n\n* ``name``, positional: the name of the icon to use.\n  You can see the icon names on the `iconic.app grid <https://iconic.app/>`__.\n\n* ``size``, keyword: an integer that will be used for the width and height attributes of the output ``<svg>`` tag.\n  Defaults to the icons’ designed size: ``24``.\n\n* Any number of keyword arguments.\n  These will be added as HTML attributes to the output ``<svg>`` tag.\n  Underscores in attribute names will be replaced with dashes, allowing you to define e.g. ``data-`` attributes.\n\nFor example, to render an outline “announcement” icon, at 48x48, with some extra CSS classes and a data attribute “controller”, you would write:\n\n.. code-block:: jinja\n\n    {% iconic(\"announcement\", size=48, class=\"h-4 w-4 inline\", data_controller=\"academia\") %}\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/monty5811/iconic",
    "keywords": "Django Jinja",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "iconic",
    "package_url": "https://pypi.org/project/iconic/",
    "platform": "",
    "project_url": "https://pypi.org/project/iconic/",
    "project_urls": {
      "Changelog": "https://github.com/monty5811/iconic/blob/main/HISTORY.rst",
      "Homepage": "https://github.com/monty5811/iconic",
      "Twitter": "https://twitter.com/monty5811"
    },
    "release_url": "https://pypi.org/project/iconic/1.0.0/",
    "requires_dist": [
      "importlib-resources ; python_version < \"3.7\"",
      "django (>=2.2) ; extra == 'django'",
      "jinja2 (>=2.8) ; extra == 'jinja'"
    ],
    "requires_python": ">=3.6",
    "summary": "Use iconic.app icons in your Django and Jinja templates.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10956561,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a6abd235c3457e50d10d2498d49b2d27f74fdba76bc16e54b533e43e124263c",
          "md5": "6f278c191ce5b86f243b05b0a8375137",
          "sha256": "620c7f29ba689c7e93a5d5a48a608d2a9c054ecbe8c0693b52c086bfd248d2d7"
        },
        "downloads": -1,
        "filename": "iconic-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f278c191ce5b86f243b05b0a8375137",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 66084,
        "upload_time": "2021-07-20T13:06:19",
        "upload_time_iso_8601": "2021-07-20T13:06:19.238190Z",
        "url": "https://files.pythonhosted.org/packages/8a/6a/bd235c3457e50d10d2498d49b2d27f74fdba76bc16e54b533e43e124263c/iconic-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef645ab6fbe9dec5a467e0195907e96993605c460f15dd3723a1254784d1cebd",
          "md5": "7d8530194963d993bad40ddef87cb549",
          "sha256": "8f43b33f191fcdc947d2adaef1cc91fe0c21a2da378621409da695112bfe9fb7"
        },
        "downloads": -1,
        "filename": "iconic-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7d8530194963d993bad40ddef87cb549",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69056,
        "upload_time": "2021-07-20T13:06:20",
        "upload_time_iso_8601": "2021-07-20T13:06:20.716110Z",
        "url": "https://files.pythonhosted.org/packages/ef/64/5ab6fbe9dec5a467e0195907e96993605c460f15dd3723a1254784d1cebd/iconic-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a6abd235c3457e50d10d2498d49b2d27f74fdba76bc16e54b533e43e124263c",
        "md5": "6f278c191ce5b86f243b05b0a8375137",
        "sha256": "620c7f29ba689c7e93a5d5a48a608d2a9c054ecbe8c0693b52c086bfd248d2d7"
      },
      "downloads": -1,
      "filename": "iconic-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6f278c191ce5b86f243b05b0a8375137",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 66084,
      "upload_time": "2021-07-20T13:06:19",
      "upload_time_iso_8601": "2021-07-20T13:06:19.238190Z",
      "url": "https://files.pythonhosted.org/packages/8a/6a/bd235c3457e50d10d2498d49b2d27f74fdba76bc16e54b533e43e124263c/iconic-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef645ab6fbe9dec5a467e0195907e96993605c460f15dd3723a1254784d1cebd",
        "md5": "7d8530194963d993bad40ddef87cb549",
        "sha256": "8f43b33f191fcdc947d2adaef1cc91fe0c21a2da378621409da695112bfe9fb7"
      },
      "downloads": -1,
      "filename": "iconic-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7d8530194963d993bad40ddef87cb549",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 69056,
      "upload_time": "2021-07-20T13:06:20",
      "upload_time_iso_8601": "2021-07-20T13:06:20.716110Z",
      "url": "https://files.pythonhosted.org/packages/ef/64/5ab6fbe9dec5a467e0195907e96993605c460f15dd3723a1254784d1cebd/iconic-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}