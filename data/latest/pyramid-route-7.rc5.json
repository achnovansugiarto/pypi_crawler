{
  "info": {
    "author": "Jonathan Vanasco",
    "author_email": "jonathan@findmeon.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Pyramid",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "Route 7\n=======\n\n.. image:: https://github.com/jvanasco/pyramid_route_7/workflows/Python%20package/badge.svg\n        :alt: Build Status\n\n`pyramid_route_7` extends pyramid's routing to have provide a macro syntax that can be easier to maintain on larger projects.\n\nIt works through a ridiculously simple mechanism -- when calling `add_route_7` instead of `add_route`, the package expands the macros in the route declaration, then immediately calls pyramid's own `add_route`.\n\nUsage\n=====\n\nThere are two main patterns supported by `pyramid_route_7`:\n\nroute_kvpattern\n---------------\n\nA `kvpattern` ties a key to a pattern.\nThe macro is invoked by the key, and generates both the key and pattern.\n\nHere is a canonical example:\n\n.. code-block:: python\n\n    config.add_route_7_kvpattern(\"year\", r\"\\d\\d\\d\\d\")\n    config.add_route_7_kvpattern(\"month\", r\"\\d\\d\")\n    config.add_route_7_kvpattern(\"day\", r\"\\d\\d\")\n    config.add_route_7(\"ymd\", \"/{@year}/{@month}/{@day}\")\n\nthis will result in route_7 generating the following route:\n\n.. code-block:: python\n\n    config.add_route(\"ymd\",  r\"/{year:\\d\\d\\d\\d}/{month:\\d\\d}/{day:\\d\\d}\")\n\nnote that they syntax for expanding a route_kvpattern is\n\n.. code-block:: shell\n\n\t@ key\n    [at-sign] key\n\n\nroute_pattern\n-------------\nA `pattern` represents a reusable regex.\nThe macro is invoked by the pattern_name, and generates only the pattern regex.\n\nHere is a canonical example:\n\n.. code-block:: python\n\n    config.add_route_7_pattern(\"d4\", r\"\\d\\d\\d\\d\")\n    config.add_route_7_pattern(\"d2\", r\"\\d\\d\")\n    config.add_route_7(\"ymd\", r\"/{year|d4}/{month|d2}/{day|d2}\")\n\nthis will result in route_7 generating the following route:\n\n.. code-block:: python\n\n    config.add_route_7(\"ymd\",  r\"/{year:\\d\\d\\d\\d}/{month:\\d\\d}/{day:\\d\\d}\")\n\nnote that they syntax for expanding a route_pattern is\n\n.. code-block:: shell\n\n    key [pipe] pattern\n\nwhile the syntax for a route is\n\n.. code-block:: shell\n\n    key [colon] regex\n\n\nWarnings\n========\n\nIf an second pattern identical to a first pattern is added, this package will\nnot raise an exception on the second add.\n\nHowever, this mimics the behavior of Pyramid itself, which allows for multiple\nconflicting routes to be added without raising an error.\n\nA future version may warn or raise exceptions on conflicting routes.\n\n\nFAQ:\n====\n\nQ: Why this package?\n--------------------\n\nIn larger applications (dozens of routes), it's not uncommon to see lots of patterns re-used.\n\nThis package was designed to consolidate the patterns in one place so they can be centrally managed and upgraded over time.\n\n\nQ: Why the name \"route_7\"?\n--------------------------\nA: Two reasons:\n* It makes it trivial to implement on existing projects by replacing `add_route` with `add_route_7`, and vice-versa\n* \"The Lurid Traversal of Route 7\" by Hoover, might... just might... be the best album on Dischord records. (http://www.dischord.com/release/089/lurid-traversal-of-rte-7)\n\n\nQ: Any integration tips?\n------------------------\n\nBy default the package will emit logging activity on how it upgrades routes (expands macros) to the default logger.  If you have any troubles, that will help!\n\nA very fast way to integrate routes is just using find & replace.\n\nStep 1 - Define Macros\n______________________\n\nBefore you declare your first route like this:\n\n.. code-block:: python\n\n    config.add_route(\"main\", \"/\")\n    config.add_route(\"foo\", \"/foo\")\n    config.add_route(\"foo_paginated\", r\"/foo/{page:\\d+}\")\n\nYou should include the package and define some macros\n\n.. code-block:: python\n\n    # incude pyramid_route_7 and define our routes/macros\n    config.include(\"pyramid_route_7\")\n    config.add_route_7_kvpattern(\"page\", r\"\\d+\")\n\n\t # okay, go!\n\t config.add_route(\"main\", \"/\")\n\t config.add_route(\"foo\", \"/foo\")\n\t config.add_route(\"foo_paginated\", r\"/foo/{page:\\d+}\")\n\nStep 2 - Just use find & replace in a couple of passes\n______________________________________________________\n\nFirst, replace `config.add_route` with `config.add_route_7`:\n\n.. code-block:: python\n\n\t# incude pyramid_route_7 and define our routes/macros\n\tconfig.include(\"pyramid_route_7\")\n\tconfig.add_route_7_kvpattern(\"page\", r\"\\d+\")\n\n    # okay, go!\n    # config.add_route(\"main\", \"/\")\n \tconfig.add_route_7(\"main\", \"/\")\n    # config.add_route(\"foo\", \"/foo\")\n    config.add_route_7(\"foo\", \"/foo\")\n    # config.add_route(\"foo_paginated\", r\"/foo/{page:\\d+}\")\n    config.add_route_7(\"foo_paginated\", r\"/foo/{page:\\d+}\")\n\nThen find/replace your macros:\n\n.. code-block:: python\n\n\t# incude pyramid_route_7 and define our routes/macros\n\tconfig.include(\"pyramid_route_7\")\n\tconfig.add_route_7_kvpattern(\"page\", r\"\\d+\")\n\n\t# okay, go!\n    config.add_route_7(\"main\", \"/\")\n    config.add_route_7(\"foo\", \"/foo\")\n    # config.add_route_7(\"foo_paginated\", r\"/foo/{page:\\d+}\")\n    config.add_route_7(\"foo_paginated\", \"/foo/{@page}\")\n\nBecause `add_route_7` simply expands registered macros and passes the result to Pyramid's own `add_route`,\nyou can just run it on every declared route.  The performance hit is only at startup\nand is incredibly minimal (it's really just a regex).",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jvanasco/pyramid_route_7",
    "keywords": "web pyramid routing routes",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyramid-route-7",
    "package_url": "https://pypi.org/project/pyramid-route-7/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyramid-route-7/",
    "project_urls": {
      "Homepage": "https://github.com/jvanasco/pyramid_route_7"
    },
    "release_url": "https://pypi.org/project/pyramid-route-7/0.3.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "micro-templating extensions to Pyramid routing",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9881916,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6763ec218543aee2d5f7f838d008316d9e745756ef50a771f4df9c7844f72d4",
          "md5": "0dac34c5fffb545385ba9ba1992d548e",
          "sha256": "f4182d6324fc2e233c924ce40e2024f7ed57675dc9278f83d3b9ffddf49c43cb"
        },
        "downloads": -1,
        "filename": "pyramid_route_7-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0dac34c5fffb545385ba9ba1992d548e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2471,
        "upload_time": "2015-10-01T18:59:52",
        "upload_time_iso_8601": "2015-10-01T18:59:52.278903Z",
        "url": "https://files.pythonhosted.org/packages/f6/76/3ec218543aee2d5f7f838d008316d9e745756ef50a771f4df9c7844f72d4/pyramid_route_7-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85f4aa5e659152a2b7ab785e6808f1c086a18aabf1387c6f23c49e6a1023cbfe",
          "md5": "ff25f8f7efdd27e5c243573e273f90f4",
          "sha256": "c6fa7c2ce353a20341f9502013cf1833a2baf10a47477fba2f4ab722bc64269a"
        },
        "downloads": -1,
        "filename": "pyramid_route_7-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ff25f8f7efdd27e5c243573e273f90f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2467,
        "upload_time": "2015-11-14T02:49:41",
        "upload_time_iso_8601": "2015-11-14T02:49:41.311778Z",
        "url": "https://files.pythonhosted.org/packages/85/f4/aa5e659152a2b7ab785e6808f1c086a18aabf1387c6f23c49e6a1023cbfe/pyramid_route_7-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a37c87a4f54b134a023e9d9b817dea38fb435686384e66d25aa3e82d80d2ad2",
          "md5": "2ee89e51da6fbb7b4711c623dec0cf19",
          "sha256": "e43556cf9ff12fa286ff2532e4ee3fdadc644347d440375faf7346d830644236"
        },
        "downloads": -1,
        "filename": "pyramid_route_7-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2ee89e51da6fbb7b4711c623dec0cf19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3874,
        "upload_time": "2019-04-28T23:51:13",
        "upload_time_iso_8601": "2019-04-28T23:51:13.779219Z",
        "url": "https://files.pythonhosted.org/packages/5a/37/c87a4f54b134a023e9d9b817dea38fb435686384e66d25aa3e82d80d2ad2/pyramid_route_7-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc8af4f29ba92511c279d667976bbfae0c4e6c63376a0948e15204c831de1781",
          "md5": "fe391e2c8b2c2d03c77218434826d7ad",
          "sha256": "f5514f2f83f8bf6d93f941cf6a8e49b6dc15ab4067be20b4b8b032f4df300ef6"
        },
        "downloads": -1,
        "filename": "pyramid_route_7-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fe391e2c8b2c2d03c77218434826d7ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6217,
        "upload_time": "2020-10-19T20:37:30",
        "upload_time_iso_8601": "2020-10-19T20:37:30.005861Z",
        "url": "https://files.pythonhosted.org/packages/bc/8a/f4f29ba92511c279d667976bbfae0c4e6c63376a0948e15204c831de1781/pyramid_route_7-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf07bd20c93a69360b80612d0c073e99db867874fda0ac05c8c0eac7d2a9eb2c",
          "md5": "68b0a38cc85134e0c32912f3e8874d3d",
          "sha256": "a41bea314e7e67de491c27a0961f94acb5da1485bf0835615fa1b26ab83d58f5"
        },
        "downloads": -1,
        "filename": "pyramid_route_7-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "68b0a38cc85134e0c32912f3e8874d3d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7799,
        "upload_time": "2021-03-25T20:50:52",
        "upload_time_iso_8601": "2021-03-25T20:50:52.807074Z",
        "url": "https://files.pythonhosted.org/packages/cf/07/bd20c93a69360b80612d0c073e99db867874fda0ac05c8c0eac7d2a9eb2c/pyramid_route_7-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf07bd20c93a69360b80612d0c073e99db867874fda0ac05c8c0eac7d2a9eb2c",
        "md5": "68b0a38cc85134e0c32912f3e8874d3d",
        "sha256": "a41bea314e7e67de491c27a0961f94acb5da1485bf0835615fa1b26ab83d58f5"
      },
      "downloads": -1,
      "filename": "pyramid_route_7-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "68b0a38cc85134e0c32912f3e8874d3d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7799,
      "upload_time": "2021-03-25T20:50:52",
      "upload_time_iso_8601": "2021-03-25T20:50:52.807074Z",
      "url": "https://files.pythonhosted.org/packages/cf/07/bd20c93a69360b80612d0c073e99db867874fda0ac05c8c0eac7d2a9eb2c/pyramid_route_7-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}