{
  "info": {
    "author": "Esref Yigitbasi",
    "author_email": "esrefyigitbasi.dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Django Json Rest\n=================\n\nDjango Json Rest is a Django app that provides a simple way to json rest api. It is a simple and easy to use.\nPython 3.0+ is required. Django 1.8+ is required.\n\nFeatures\n--------\n* Api view\n* Response\n* Serializer\n* Lazy response\n* Rate limit\n* Blacklist\n* Token Authentication\n* Permission\n* Pagination\n\nInstallation\n------------\n\n::\n\n    pip install djangojr\n\n\nAdd ``djangojr.token`` and ``djangojr.ratelimit`` to your ``INSTALLED_APPS`` setting\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        'djangojr.token',\n        'djangojr.ratelimit',\n        ...\n    )\n\nToken Authentication\n--------------------\n``Authorization : asdqwe5423asdqwe23asasd`` like this header is required for token authentication.\n\nExample\n--------\n\n.. code:: python\n\n    from djangojr.authentication import token_authentication\n    from djangojr.permissions import has_permission, has_group\n    from djangojr.pagenation import pagenation\n    from djangojr.ratelimit.utils import ForIp, ForUser, RateTime, Block\n    from djangojr.serializer import JsonSerializer, api_view\n    from djangojr.rate_limit import rate_limit\n    from django.contrib.auth.models import User\n    from itertools import chain\n\n\n    def model_to_dict(instance, fields=None, exclude=None):\n        opts = instance._meta\n        data = dict()\n        for f in chain(opts.concrete_fields, opts.private_fields, opts.many_to_many):\n            if fields is not None and f.name not in fields:\n                continue\n            if exclude and f.name in exclude:\n                continue\n            else:\n                data[f.name] = f.value_from_object(instance)\n        return data\n\n\n    class ExampleSerializer(JsonSerializer):\n\n        model = User\n\n        def get_fields(self):\n            fields = self.model.objects.all()\n            # self.DATA is validated data\n            data, page_info = pagenation(\n                fields, self.DATA[\"page\"], page_size=10, start=1)\n            data = list(map(lambda x: model_to_dict(x), data))\n            data = dict(data=data, page_info=page_info)\n            return self.http_200_ok(data=data)\n\n\n    @api_view(['POST'])  # GET, POST, PUT, DELETE, PATCH\n    @token_authentication(authentication=True)\n    @has_permission(permissions=['add_user'])  # write permission codename\n    @has_group(groups=['admin'])  # write group name\n    # RateTime and Block support day, hour, minute, second\n    @rate_limit(model=ForUser, rate_time=RateTime(count=10, hour=1), block=Block(active=True, minute=5))\n    def get_fields_api(request):\n        serializer = ExampleSerializer(data=request.body)\n        # serializer.MODEL support str int float bool list dict set tuple and \"ANY\"\n        serializer.MODEL = {'name': str, \"number\": int, \"page\": int}  # define api fields and type\n        serializer.OPTIONS = {\"number\": [1, 2, 3, 4]}  # set options for field\n        serializer.MAX_LENGTH = {\"name\": 10}  # set max length for field\n        serializer.UNDEFINED_FIELD = False  # if True, undefined field will be ignored\n        if serializer.is_valid():\n            return serializer.get_fields()\n        return serializer.http_404_not_found()\n\n\n    def example(value, arg):\n        ...\n        # do something\n\n\n    @api_view(['POST'])\n    @token_authentication(authentication=True)\n    @rate_limit(model=ForIp, rate_time=RateTime(count=5, hour=2, minute=15), block=Block(active=True, day=1, hour=2, second=30))\n    def get_fields_api(request):\n        serializer = ExampleSerializer(data=request.body)\n        serializer.MODEL = {\"foo\": str, \"numbers\": list}\n        serializer.UNDEFINED_FIELD = True\n        if serializer.is_valid():\n            serializer.lazy_response(function=example, parametes=(\n                serializer.DATA[\"foo\"], serializer.DATA[\"numbers\"]), data={})\n        return serializer.http_404_not_found()\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/esrefyigitbasi-dev/django_json_rest",
    "keywords": "django restframework djangojr json parse response request api wrapper lazyresponse ratelimit pagination permissions token authentication",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djangojr",
    "package_url": "https://pypi.org/project/djangojr/",
    "platform": null,
    "project_url": "https://pypi.org/project/djangojr/",
    "project_urls": {
      "Homepage": "https://github.com/esrefyigitbasi-dev/django_json_rest"
    },
    "release_url": "https://pypi.org/project/djangojr/1.0.5/",
    "requires_dist": [
      "djangorestframework"
    ],
    "requires_python": "",
    "summary": "Django app to json rest api provide api views, serializer, rate limit, pagination, authentication, permission,lazy response,blacklist etc.",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16001898,
  "releases": {
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4db2456f9bcc74ab87d656964200a58dbac865d4c2ebc7335c6856d57e69bf6",
          "md5": "30f64a16da6dac36a72abf57012d4bac",
          "sha256": "98b8e05299b76608c5ad72d332ec76928b114eaaa10641725c690734c7f49304"
        },
        "downloads": -1,
        "filename": "djangojr-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30f64a16da6dac36a72abf57012d4bac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12693,
        "upload_time": "2022-12-06T00:31:10",
        "upload_time_iso_8601": "2022-12-06T00:31:10.687845Z",
        "url": "https://files.pythonhosted.org/packages/a4/db/2456f9bcc74ab87d656964200a58dbac865d4c2ebc7335c6856d57e69bf6/djangojr-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4008c8450f5285adbd46633c48d73154aabbe17fb62c3ff96e7c291f0588d208",
          "md5": "0b7adba9349752976311e94ac7b8f10e",
          "sha256": "edc4bf0d1bf13464805d888d43482b8de634758b0cd84c8e94ca876e01daf334"
        },
        "downloads": -1,
        "filename": "djangojr-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0b7adba9349752976311e94ac7b8f10e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11088,
        "upload_time": "2022-12-06T00:31:13",
        "upload_time_iso_8601": "2022-12-06T00:31:13.347604Z",
        "url": "https://files.pythonhosted.org/packages/40/08/c8450f5285adbd46633c48d73154aabbe17fb62c3ff96e7c291f0588d208/djangojr-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4db2456f9bcc74ab87d656964200a58dbac865d4c2ebc7335c6856d57e69bf6",
        "md5": "30f64a16da6dac36a72abf57012d4bac",
        "sha256": "98b8e05299b76608c5ad72d332ec76928b114eaaa10641725c690734c7f49304"
      },
      "downloads": -1,
      "filename": "djangojr-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "30f64a16da6dac36a72abf57012d4bac",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12693,
      "upload_time": "2022-12-06T00:31:10",
      "upload_time_iso_8601": "2022-12-06T00:31:10.687845Z",
      "url": "https://files.pythonhosted.org/packages/a4/db/2456f9bcc74ab87d656964200a58dbac865d4c2ebc7335c6856d57e69bf6/djangojr-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4008c8450f5285adbd46633c48d73154aabbe17fb62c3ff96e7c291f0588d208",
        "md5": "0b7adba9349752976311e94ac7b8f10e",
        "sha256": "edc4bf0d1bf13464805d888d43482b8de634758b0cd84c8e94ca876e01daf334"
      },
      "downloads": -1,
      "filename": "djangojr-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "0b7adba9349752976311e94ac7b8f10e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11088,
      "upload_time": "2022-12-06T00:31:13",
      "upload_time_iso_8601": "2022-12-06T00:31:13.347604Z",
      "url": "https://files.pythonhosted.org/packages/40/08/c8450f5285adbd46633c48d73154aabbe17fb62c3ff96e7c291f0588d208/djangojr-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}