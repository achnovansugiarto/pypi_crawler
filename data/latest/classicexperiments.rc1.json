{
  "info": {
    "author": "Jan Philip Göpfert",
    "author_email": "janphilip@gopfert.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: The Unlicense (Unlicense)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# Classic Experiments\n\nPersistent and reproducible experimental pipelines for Machine Learning.\n\n## Installation\n\n```\npip install classicexperiments\n```\n\n## Example Usage\nWe want to compare several classifiers with respect to a number of datasets.\nWe simply load the datasets and define a number of `Estimator` instances.\n```python\nimport sklearn.ensemble\nimport sklearn.neighbors\nimport sklearn.neural_network\nimport sklearn.preprocessing\nimport sklearn.tree\nfrom classicdata import (\n    USPS,\n    ImageSegmentation,\n    Ionosphere,\n    LetterRecognition,\n    MagicGammaTelescope,\n    PenDigits,\n    RobotNavigation,\n)\n\nfrom classicexperiments import Estimator, Evaluation, Experiment\n\n# Prepare datasets.\ndatasets = [\n    Ionosphere(),\n    LetterRecognition(),\n    MagicGammaTelescope(),\n    PenDigits(),\n    RobotNavigation(),\n    ImageSegmentation(),\n    USPS(),\n]\n\n# Prepare estimators.\nestimators = [\n    Estimator(\n        name=\"Dummy\",\n        estimator_class=sklearn.dummy.DummyClassifier,\n        parameters={},\n    ),\n    Estimator(\n        name=\"5-nn\",\n        estimator_class=sklearn.neighbors.KNeighborsClassifier,\n        parameters={\"n_neighbors\": 5},\n    ),\n    Estimator(\n        name=\"Tree\",\n        estimator_class=sklearn.tree.DecisionTreeClassifier,\n        parameters={},\n    ),\n    Estimator(\n        name=\"Forest\",\n        estimator_class=sklearn.ensemble.AdaBoostClassifier,\n        parameters={},\n    ),\n    Estimator(\n        name=\"MLP\",\n        estimator_class=sklearn.neural_network.MLPClassifier,\n        parameters={},\n    ),\n    Estimator(\n        name=\"KernelSVM\",\n        estimator_class=sklearn.svm.SVC,\n        parameters={\"kernel\": \"sigmoid\"},\n    ),\n]\n\n# Prepare experiments.\nexperiments = [\n    Experiment(\n        dataset=dataset,\n        estimator=estimator,\n        estimation_function=sklearn.model_selection.cross_val_score,\n        parameters={},\n        scaler=sklearn.preprocessing.StandardScaler(),\n    )\n    for estimator in estimators\n    for dataset in datasets\n]\n\n# Prepare evaluation.\nevaluation = Evaluation(experiments=experiments, base_dir=\"evaluation\")\n\n# Run evaluation.\nevaluation.run()\n\n# Present results.\nevaluation.present(table_format=\"github\")\n```\nResults are automatically stored, and we end up with a tidy table.\n\n| Dataset            | Dummy        | 5-nn         | Tree             | Forest           | MLP              | KernelSVM    |\n|--------------------|--------------|--------------|------------------|------------------|------------------|--------------|\n| Ionosphere         | 0.64 ±0.0036 | 0.83 ±0.0388 | 0.86 ±0.0491     | **0.91 ±0.0549** | 0.90 ±0.0405     | 0.84 ±0.0630 |\n| Letter Recognition | 0.04 ±0.0001 | 0.94 ±0.0022 | 0.88 ±0.0051     | 0.26 ±0.0356     | **0.95 ±0.0044** | 0.47 ±0.0119 |\n| Pen Digits         | 0.10 ±0.0000 | 0.99 ±0.0022 | 0.96 ±0.0048     | 0.43 ±0.1198     | **0.99 ±0.0017** | 0.74 ±0.0067 |\n| Robot Navigation   | 0.40 ±0.0001 | 0.77 ±0.0563 | **0.98 ±0.0140** | 0.80 ±0.0365     | 0.87 ±0.0472     | 0.48 ±0.0272 |\n| Segmentation       | 0.14 ±0.0000 | 0.92 ±0.0505 | 0.94 ±0.0334     | 0.48 ±0.0700     | **0.95 ±0.0362** | 0.75 ±0.0914 |\n| Telescope          | 0.65 ±0.0001 | 0.81 ±0.0060 | 0.82 ±0.0046     | 0.84 ±0.0050     | **0.87 ±0.0050** | 0.65 ±0.0043 |\n| USPS               | 0.17 ±0.0003 | 0.96 ±0.0030 | 0.88 ±0.0088     | 0.55 ±0.0898     | **0.97 ±0.0049** | 0.88 ±0.0053 |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jangop/classicexperiments",
    "keywords": "machine learning",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "classicexperiments",
    "package_url": "https://pypi.org/project/classicexperiments/",
    "platform": "",
    "project_url": "https://pypi.org/project/classicexperiments/",
    "project_urls": {
      "Bug Reports": "https://github.com/jangop/classicexperiments/issues",
      "Homepage": "https://github.com/jangop/classicexperiments",
      "Source": "https://github.com/jangop/classicexperiments"
    },
    "release_url": "https://pypi.org/project/classicexperiments/0.1.0a1/",
    "requires_dist": [
      "loguru",
      "scikit-learn",
      "numpy",
      "appdirs",
      "tabulate",
      "more-termcolor",
      "classicdata",
      "tqdm",
      "check-manifest ; extra == 'dev'",
      "black ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "coverage ; extra == 'test'",
      "pytest ; extra == 'test'",
      "black ; extra == 'test'",
      "pylint ; extra == 'test'"
    ],
    "requires_python": ">=3.9, <4",
    "summary": "Persistent and reproducible experimental pipelines for Machine Learning",
    "version": "0.1.0a1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12797848,
  "releases": {
    "0.1.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1af93b0630e23619a2aef09d98b94a3cf774c7934a8adae37c00ffaffea9065e",
          "md5": "e08b63a067aeea6cc689a7ebac9354e6",
          "sha256": "325539df08144743e1684f5b0931876cd5b105cafa3b6805589a5b0165bee98c"
        },
        "downloads": -1,
        "filename": "classicexperiments-0.1.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e08b63a067aeea6cc689a7ebac9354e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9, <4",
        "size": 6329,
        "upload_time": "2022-02-05T20:11:44",
        "upload_time_iso_8601": "2022-02-05T20:11:44.677475Z",
        "url": "https://files.pythonhosted.org/packages/1a/f9/3b0630e23619a2aef09d98b94a3cf774c7934a8adae37c00ffaffea9065e/classicexperiments-0.1.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd657f9c49df7aaab5f05c56010ef49583b1b86ade976828526947a40e8f7bf9",
          "md5": "bafd1f7ba5480214e20e18e73885d529",
          "sha256": "b9b442ccba3b53568e4c01a098e9e462360c5746cf34ec513454124f49b4830d"
        },
        "downloads": -1,
        "filename": "classicexperiments-0.1.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "bafd1f7ba5480214e20e18e73885d529",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9, <4",
        "size": 6824,
        "upload_time": "2022-02-05T20:11:46",
        "upload_time_iso_8601": "2022-02-05T20:11:46.395849Z",
        "url": "https://files.pythonhosted.org/packages/fd/65/7f9c49df7aaab5f05c56010ef49583b1b86ade976828526947a40e8f7bf9/classicexperiments-0.1.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1af93b0630e23619a2aef09d98b94a3cf774c7934a8adae37c00ffaffea9065e",
        "md5": "e08b63a067aeea6cc689a7ebac9354e6",
        "sha256": "325539df08144743e1684f5b0931876cd5b105cafa3b6805589a5b0165bee98c"
      },
      "downloads": -1,
      "filename": "classicexperiments-0.1.0a1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e08b63a067aeea6cc689a7ebac9354e6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9, <4",
      "size": 6329,
      "upload_time": "2022-02-05T20:11:44",
      "upload_time_iso_8601": "2022-02-05T20:11:44.677475Z",
      "url": "https://files.pythonhosted.org/packages/1a/f9/3b0630e23619a2aef09d98b94a3cf774c7934a8adae37c00ffaffea9065e/classicexperiments-0.1.0a1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd657f9c49df7aaab5f05c56010ef49583b1b86ade976828526947a40e8f7bf9",
        "md5": "bafd1f7ba5480214e20e18e73885d529",
        "sha256": "b9b442ccba3b53568e4c01a098e9e462360c5746cf34ec513454124f49b4830d"
      },
      "downloads": -1,
      "filename": "classicexperiments-0.1.0a1.tar.gz",
      "has_sig": false,
      "md5_digest": "bafd1f7ba5480214e20e18e73885d529",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9, <4",
      "size": 6824,
      "upload_time": "2022-02-05T20:11:46",
      "upload_time_iso_8601": "2022-02-05T20:11:46.395849Z",
      "url": "https://files.pythonhosted.org/packages/fd/65/7f9c49df7aaab5f05c56010ef49583b1b86ade976828526947a40e8f7bf9/classicexperiments-0.1.0a1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}