{
  "info": {
    "author": "ArtFab",
    "author_email": "auz.tin@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Integrity Check\n\nThis package is the python version of a cross-language api for runtime internal tests. \n\n# How to use\nInstall the package (pip install integrity-check)\n\nAt the top of one of your python source code files put\n`from integrity_check import Integrity`\n\nthen you can do things like:\n\n`Integrity.check(a == b, \"expected {} to be same as {}\", a, b)`  \nor  \n`Integrity.check(a == b, a, b)`  \nor even just  \n`Integrity.check(a == b)`\n\nThe main function is `check`, but the full list of functions is:\n```\n    check(condition, *msg)\n    checkNotNone(test, *msg)\n    checkIsBool(test, *msg)\n    checkIsBoolOrNone(test, *msg)\n    checkIsString(test, *msg)\n    checkIsStringOrNone(test, *msg)\n    checkStringNotNoneOrEmpty(test, *msg)\n    checkIsValidNumber(test, *msg)\n    checkIsValidNumberOrNone(test, *msg)\n    checkIsFunction(test, *msg)\n    checkIsFunctionOrNone(test, *msg)\n\n    fail(*msg)\n```\nIn all cases the *msg parameters work like this:\n\n`check*(test)` - the exception will contain a default message  \n`check*(test, var1)` - the message will be just the string representaiton of var1  \n`check*(test, var1, var2, ... varN)` - the message will be the string representaitons of the vars in the format \"var1, var2, ..., varN\"  \n`check*(test, \"the vars are {} {}\", var1, var2)` - the message will substitute the string representations of va1, var2 into the {}  \n`check*(test, var1, var2, \" and {} \", var3)` - the message will be \"var1, var2 and var3\"  \n\nthere can be as many message parameters as you like.\nNote that if a variable is a string and happens to contain {} then it will be used in subsequent substitutions. \n\n# Example\n\n```\nfrom integrity_check import Integrity\n\ndef myComplicatedFunction(aNumber, callback, aName):\n    Integrity.checkIsValidNumberOrNone(aNumber)\n    Integrity.checkIsFunction(callback)\n    Integrity.checkStringNotNoneOrEmpty(aName)\n\n    handle = callback(aName)\n    Integrity.checkNotNone(handle, \"expected valid handle, aName was {}\", aName)\n\n    diameter = someOtherFunction(handle)\n    Integrity.check(diameter >= 0, \"expected non-negative diameter, was {}\", diameter)\n```\n\n# What are the advantages of using Integrity?\n\n## Consistent api across languages\nIf you jump around from one language to another, it is nice to have a consistent way of testing your assumptions regardless of what language you are in. For example:\n\nPython: `Integrity.check(a == b, \"some text {}\", a)`  \nJavaScript: `Integrity.check(a == b, \"some text {}\", a)`  \nC#: `Integrity.Check(a == b, \"some text {}\", a)`  \n\nThere are minor consession made to language conventions. For example, in c# the function names are capitalised.\n\n## Delayed and safe string building\nThe components of the message string are only used if the integrity check fails. This means that the execution time of the check is minimised. The building of the string is guarenteed not to error.\n\n## Compact format\nIf you did not use Integrity (or similar), and wrote the check out by hand, it would look something like:\n```\nif(a != b):\n\traise ValueError(\"some text \" + str(a))\n```\nnote that there is potentional for the creation of the message within ValueError(~) to cause a problem, if, for example, the developer forgot to put str() around an int.\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ArtFab/integrity-py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "integrity-check",
    "package_url": "https://pypi.org/project/integrity-check/",
    "platform": "",
    "project_url": "https://pypi.org/project/integrity-check/",
    "project_urls": {
      "Homepage": "https://github.com/ArtFab/integrity-py"
    },
    "release_url": "https://pypi.org/project/integrity-check/1.3.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A replacement for assert",
    "version": "1.3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8289204,
  "releases": {
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6164fd2cc036f331c3571cf545351210e6139d8ec0c7ec039cc957e6f5a591b8",
          "md5": "41e91527d545b9ed3492b687eafc496d",
          "sha256": "5b14d6acae1b9c763a0969b711adc173be3895a58f2b085f78e3c5629c864cfa"
        },
        "downloads": -1,
        "filename": "integrity_check-1.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41e91527d545b9ed3492b687eafc496d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4080,
        "upload_time": "2020-09-26T13:41:43",
        "upload_time_iso_8601": "2020-09-26T13:41:43.297259Z",
        "url": "https://files.pythonhosted.org/packages/61/64/fd2cc036f331c3571cf545351210e6139d8ec0c7ec039cc957e6f5a591b8/integrity_check-1.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80ef106297f689f58baf8a71e44c613fe9a20ab5353cebbafeb1f2c3edf4f1ec",
          "md5": "177cb82b974f4142dccbd87daf09d760",
          "sha256": "1eaa9f6832718d7e5a98f6df7dbba8be28007aad860df7b8bfecdec0d3f0503c"
        },
        "downloads": -1,
        "filename": "integrity-check-1.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "177cb82b974f4142dccbd87daf09d760",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2871,
        "upload_time": "2020-09-26T13:41:46",
        "upload_time_iso_8601": "2020-09-26T13:41:46.184019Z",
        "url": "https://files.pythonhosted.org/packages/80/ef/106297f689f58baf8a71e44c613fe9a20ab5353cebbafeb1f2c3edf4f1ec/integrity-check-1.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0043d2c5b8ecd74e2b225c723ea4807b7a156064e822dff6c6d89b35b1b509bc",
          "md5": "2cee0cda25d8f6fcef95d93ce529874c",
          "sha256": "5fe0f6223236c8d03a52f99b7c7190dd076a9e665d863cdb4eff861f5347ec1e"
        },
        "downloads": -1,
        "filename": "integrity_check-1.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cee0cda25d8f6fcef95d93ce529874c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5273,
        "upload_time": "2020-09-26T16:45:15",
        "upload_time_iso_8601": "2020-09-26T16:45:15.688128Z",
        "url": "https://files.pythonhosted.org/packages/00/43/d2c5b8ecd74e2b225c723ea4807b7a156064e822dff6c6d89b35b1b509bc/integrity_check-1.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2774f8b2bfc6d349e3b7167910c68d202b595be1cab44e5acf9da6464521446e",
          "md5": "78e6560e7d9bc281ea3094fed483b42c",
          "sha256": "20805e3c0e5e1fed0c358467f5352ce15650ac88d52a6acb307edadf2b0211e2"
        },
        "downloads": -1,
        "filename": "integrity-check-1.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "78e6560e7d9bc281ea3094fed483b42c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4326,
        "upload_time": "2020-09-26T16:45:16",
        "upload_time_iso_8601": "2020-09-26T16:45:16.800386Z",
        "url": "https://files.pythonhosted.org/packages/27/74/f8b2bfc6d349e3b7167910c68d202b595be1cab44e5acf9da6464521446e/integrity-check-1.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b6ca60acec80d2ab31587d0ac1883f1cd00708bb014da83b91a1d7f39f4218b",
          "md5": "637631e47758c624e759628f45f0a055",
          "sha256": "73a0c5654a44937ed091fef88085b8debe375afc833f0728b934dfac9fb4fa83"
        },
        "downloads": -1,
        "filename": "integrity_check-1.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "637631e47758c624e759628f45f0a055",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5345,
        "upload_time": "2020-09-28T12:54:07",
        "upload_time_iso_8601": "2020-09-28T12:54:07.954610Z",
        "url": "https://files.pythonhosted.org/packages/9b/6c/a60acec80d2ab31587d0ac1883f1cd00708bb014da83b91a1d7f39f4218b/integrity_check-1.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18b3015b8d40700dce9d1d4db09d0aa73ab83a946173d464cbf256614572658e",
          "md5": "4aa87bd2a9a91325cb0364980518ecbf",
          "sha256": "549bb5a08c3d363a1cad3b51ed7270249b6846cab12be0882e15aa29f17562fe"
        },
        "downloads": -1,
        "filename": "integrity-check-1.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4aa87bd2a9a91325cb0364980518ecbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4384,
        "upload_time": "2020-09-28T12:54:08",
        "upload_time_iso_8601": "2020-09-28T12:54:08.927584Z",
        "url": "https://files.pythonhosted.org/packages/18/b3/015b8d40700dce9d1d4db09d0aa73ab83a946173d464cbf256614572658e/integrity-check-1.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b6ca60acec80d2ab31587d0ac1883f1cd00708bb014da83b91a1d7f39f4218b",
        "md5": "637631e47758c624e759628f45f0a055",
        "sha256": "73a0c5654a44937ed091fef88085b8debe375afc833f0728b934dfac9fb4fa83"
      },
      "downloads": -1,
      "filename": "integrity_check-1.3.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "637631e47758c624e759628f45f0a055",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5345,
      "upload_time": "2020-09-28T12:54:07",
      "upload_time_iso_8601": "2020-09-28T12:54:07.954610Z",
      "url": "https://files.pythonhosted.org/packages/9b/6c/a60acec80d2ab31587d0ac1883f1cd00708bb014da83b91a1d7f39f4218b/integrity_check-1.3.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18b3015b8d40700dce9d1d4db09d0aa73ab83a946173d464cbf256614572658e",
        "md5": "4aa87bd2a9a91325cb0364980518ecbf",
        "sha256": "549bb5a08c3d363a1cad3b51ed7270249b6846cab12be0882e15aa29f17562fe"
      },
      "downloads": -1,
      "filename": "integrity-check-1.3.4.tar.gz",
      "has_sig": false,
      "md5_digest": "4aa87bd2a9a91325cb0364980518ecbf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4384,
      "upload_time": "2020-09-28T12:54:08",
      "upload_time_iso_8601": "2020-09-28T12:54:08.927584Z",
      "url": "https://files.pythonhosted.org/packages/18/b3/015b8d40700dce9d1d4db09d0aa73ab83a946173d464cbf256614572658e/integrity-check-1.3.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}