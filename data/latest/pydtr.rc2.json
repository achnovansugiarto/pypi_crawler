{
  "info": {
    "author": "fullflu",
    "author_email": "k.takayama0902@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# pydtr\n\n[![CircleCI](https://circleci.com/gh/fullflu/pydtr.svg?style=shield)](https://app.circleci.com/pipelines/github/fullflu/pydtr)\n[![codecov](https://codecov.io/gh/fullflu/pydtr/branch/master/graph/badge.svg)](https://codecov.io/gh/fullflu/pydtr)\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\n\n\n## Description\n\nThis is a python library to conduct a dynamic treatment regime ([DTR](https://en.wikipedia.org/wiki/Dynamic_treatment_regime)), `pydtr`.\n\nA DTR is a paradigm that attempts to select optimal treatments adaptively for individual patients.\n\nPydtr enables you to implement DTR methods easily by using sklearn-based interfaces.\n\n|                Method                 |  Single binary treatment   |  Multiple treatments  |    Multinomial treatment   |  Continuous treatment  |  Modeling flexibility  |  Interpretability  |\n| ---- | ---- | ---- | ---- | ---- | ---- | ---- | \n|  IqLearnReg <br> (with sklearn)      |  :white_check_mark:   |   :white_check_mark:  |   :white_check_mark: <br>(with pipeline)  |    |   :white_check_mark: <br>(with arbitrary regression models)  |       |\n|  IqLearnReg <br> (with statsmodels)  |  :white_check_mark:   |   :white_check_mark:  |   :white_check_mark:       |    | limited to OLS   |    :white_check_mark: <br>(with confidence intervals)  |\n| GEstimation | WIP | | WIP | WIP | WIP | WIP |\n\n`IqLearnReg` means a regression method of iterative q-learning.\n\nWhen there are categorical independent variables and you use a sklearn model as a regression function, you need to encode the categorical variables before using the model.\n\nWe recommend to encode categorical variables by `category_encoders` and combine the encoders with the sklearn model by `sklearn.pipeline`.\n\nG-estimation, a famous method of DTR, is now unavailable.\n\n## Requirements\n\n- python>=3.6\n- pandas>=1.1.2\n- scikit-learn>=0.23.2\n- numpy>=1.19.2\n- statsmodels>=0.12.0\n\n## Installation\n\n### From pypi\n\n```\npip install pydtr\n```\n\n### From source\n\n```\ngit clone https://github.com/fullflu/pydtr.git\ncd pydtr\npython setup.py install\n```\n\n## Usage\n\n### Iterative Q Learning (IqLearnReg)\n\nYou need to import libraries and prepare data.\n\n```python\n# import\nimport numpy as np\nimport pandas as pd\nfrom sklearn.ensemble import RandomForestRegressor\n\nfrom pydtr.iqlearn.regression import IqLearnReg\n\n# create sample dataframe\nn = 10\nthres = int(n / 2)\ndf = pd.DataFrame()\ndf[\"L1\"] = np.arange(n)\ndf[\"A1\"] = [0, 1] * int(n / 2)\ndf[\"A2\"] = [0] * int(n / 2) + [1] * int(n / 2)\ndf[\"Y1\"] = np.zeros(n)\ndf[\"Y2\"] = np.zeros(n)\n```\n\nYou can use sklearn-based models.\n\n```python\n# set model info\nmodel_info = [\n    {\n        \"model\": RandomForestRegressor(),\n        \"action_dict\": {\"A1\": [0, 1]},\n        \"feature\": [\"L1\", \"A1\"],\n        \"outcome\": \"Y1\"\n    },\n    {\n        \"model\": RandomForestRegressor(),\n        \"action_dict\": {\"A2\": [0, 1]},\n        \"feature\": [\"L1\", \"A1\", \"Y1\", \"A2\"],\n        \"outcome\": \"Y2\"\n    }\n]\n# fit model\ndtr_model = IqLearnReg(\n    n_stages=2,\n    model_info=model_info\n)\ndtr_model.fit(df)\n\n# predict optimal atcions\nopt_action_stage_1 = dtr_model.predict(df, 0)\nopt_action_stage_2 = dtr_model.predict(df, 1)\nopt_action_all_stages = dtr_model.predict_all_stages(df)\n```\n\nYou can also use statsmodels-based models.\n\n```python\n# set model info\nmodel_info = [\n    {\n        \"model\": \"p_outcome ~ L1 * A1\",\n        \"action_dict\": {\"A1\": [0, 1]},\n        \"feature\": [\"L1\", \"A1\"],\n        \"outcome\": \"Y1\"\n    },\n    {\n        \"model\": \"p_outcome ~ L1 + A1 + Y1 * A2\",\n        \"action_dict\": {\"A2\": [0, 1]},\n        \"feature\": [\"L1\", \"A1\", \"Y1\", \"A2\"],\n        \"outcome\": \"Y2\"\n    }\n]\n# fit model\ndtr_model = IqLearnReg(\n    n_stages=2,\n    model_info=model_info\n)\ndtr_model.fit(df)\n\n# predict optimal atcions\nopt_action_stage_1 = dtr_model.predict(df, 0)\nopt_action_stage_2 = dtr_model.predict(df, 1)\nopt_action_all_stages = dtr_model.predict_all_stages(df)\n```\n\nPlease see [examples](https://github.com/fullflu/pydtr/blob/master/examples/) to get more information.\n\n## Authors\n\n- [@fullflu](https://github.com/fullflu) \n\n## Contributors\n\nPlease feel free to create issues or to send pull-requests!\n\nIf all checkes have passed in pull-requests, I will merge and release them.\n\n## License\n\n[BSD](https://github.com/fullflu/pydtr/blob/master/LICENSE)\n\n\n## Structure\n\n```\n├── .circleci\n│   ├── config.yml\n├── .github\n│   ├── CODEOWNERS\n├── LICENSE\n├── MANIFEST.IN\n├── Makefile\n├── README.md\n├── examples\n│   ├── ...several notebooks...\n├── setup.cfg\n├── setup.py\n├── src\n│   ├── pydtr\n│   │   ├── __init__.py\n│   │   └── iqlearn\n│   │       ├── __init__.py\n│   │       ├── base.py\n│   │       └── regression.py\n└── tests\n    ├── test_iqlearn_sklearn_predict.py\n    └── test_iqlearn_sm_predict.py\n```\n\n## References\n\n- Chakraborty, B, Moodie, EE. *Statistical Methods for Dynamic Treatment Regimes.* Springer, New York, 2013.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fullflu/pydtr",
    "keywords": "dynamic treatment regimes,reinforcement learning,dtr",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydtr",
    "package_url": "https://pypi.org/project/pydtr/",
    "platform": "",
    "project_url": "https://pypi.org/project/pydtr/",
    "project_urls": {
      "Homepage": "https://github.com/fullflu/pydtr"
    },
    "release_url": "https://pypi.org/project/pydtr/0.0.2/",
    "requires_dist": [
      "pandas (>=1.1.2)",
      "scikit-learn (>=0.23.2)",
      "numpy (>=1.19.2)",
      "statsmodels (>=0.12.0)"
    ],
    "requires_python": "",
    "summary": "Python library of Dynamic Treatment Regimes",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8495361,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23cc8be452ab8e34906bd57b6942750c82815d136dcfb3bbab4c8fe74ddc0230",
          "md5": "5de8a5fe55d928a3b3e6e675a99b0d30",
          "sha256": "b56ab548dfa0cc013788cfe1f70c88b6b59b0d9b23af2a5a615f8f1af0f99dfd"
        },
        "downloads": -1,
        "filename": "pydtr-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5de8a5fe55d928a3b3e6e675a99b0d30",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7036,
        "upload_time": "2020-09-24T14:36:12",
        "upload_time_iso_8601": "2020-09-24T14:36:12.632489Z",
        "url": "https://files.pythonhosted.org/packages/23/cc/8be452ab8e34906bd57b6942750c82815d136dcfb3bbab4c8fe74ddc0230/pydtr-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "296632c72c49a004122236932250168a4d07993ce70fe35887bf9a151bac9e87",
          "md5": "8159ce8c5e2c031e9a99e11f06f144c9",
          "sha256": "c1b74298f5f681174366a4ebf5f3e86ffb3c59925098ccfe4df51b31aff09e86"
        },
        "downloads": -1,
        "filename": "pydtr-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8159ce8c5e2c031e9a99e11f06f144c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5788,
        "upload_time": "2020-09-24T14:36:16",
        "upload_time_iso_8601": "2020-09-24T14:36:16.325947Z",
        "url": "https://files.pythonhosted.org/packages/29/66/32c72c49a004122236932250168a4d07993ce70fe35887bf9a151bac9e87/pydtr-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8dbbcf0e8e193608f2594e82b10ddfb3f25316c4fcf5e100ea8c9bf750f3bb2b",
          "md5": "31918ee5f84d0f00063604d0909bf9ba",
          "sha256": "71550b82ad888834ca8c2591665e103e04d1a11719b406375797494f763bbf1e"
        },
        "downloads": -1,
        "filename": "pydtr-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "31918ee5f84d0f00063604d0909bf9ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7218,
        "upload_time": "2020-10-25T12:33:52",
        "upload_time_iso_8601": "2020-10-25T12:33:52.424036Z",
        "url": "https://files.pythonhosted.org/packages/8d/bb/cf0e8e193608f2594e82b10ddfb3f25316c4fcf5e100ea8c9bf750f3bb2b/pydtr-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b06c04f7e7117483975a3295dbbd7e7dea1574ab060c84f1f4c18bce546a3fa",
          "md5": "05f868eed40018538e7dc5d91dc59e6a",
          "sha256": "63203b3a85e50e8f4a77c3b2a49528669f29af030d9a44e8f119ad050cb94be2"
        },
        "downloads": -1,
        "filename": "pydtr-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "05f868eed40018538e7dc5d91dc59e6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6018,
        "upload_time": "2020-10-25T12:33:53",
        "upload_time_iso_8601": "2020-10-25T12:33:53.380551Z",
        "url": "https://files.pythonhosted.org/packages/6b/06/c04f7e7117483975a3295dbbd7e7dea1574ab060c84f1f4c18bce546a3fa/pydtr-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8dbbcf0e8e193608f2594e82b10ddfb3f25316c4fcf5e100ea8c9bf750f3bb2b",
        "md5": "31918ee5f84d0f00063604d0909bf9ba",
        "sha256": "71550b82ad888834ca8c2591665e103e04d1a11719b406375797494f763bbf1e"
      },
      "downloads": -1,
      "filename": "pydtr-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "31918ee5f84d0f00063604d0909bf9ba",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7218,
      "upload_time": "2020-10-25T12:33:52",
      "upload_time_iso_8601": "2020-10-25T12:33:52.424036Z",
      "url": "https://files.pythonhosted.org/packages/8d/bb/cf0e8e193608f2594e82b10ddfb3f25316c4fcf5e100ea8c9bf750f3bb2b/pydtr-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b06c04f7e7117483975a3295dbbd7e7dea1574ab060c84f1f4c18bce546a3fa",
        "md5": "05f868eed40018538e7dc5d91dc59e6a",
        "sha256": "63203b3a85e50e8f4a77c3b2a49528669f29af030d9a44e8f119ad050cb94be2"
      },
      "downloads": -1,
      "filename": "pydtr-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "05f868eed40018538e7dc5d91dc59e6a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6018,
      "upload_time": "2020-10-25T12:33:53",
      "upload_time_iso_8601": "2020-10-25T12:33:53.380551Z",
      "url": "https://files.pythonhosted.org/packages/6b/06/c04f7e7117483975a3295dbbd7e7dea1574ab060c84f1f4c18bce546a3fa/pydtr-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}