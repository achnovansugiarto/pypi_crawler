{
  "info": {
    "author": "Marcell Vazquez-Chanlatte",
    "author_email": "mvc@linux.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "Past MTL Monitors\n=================\nA library for creating past metric temporal logic monitors.\n\n[![Build Status](https://cloud.drone.io/api/badges/mvcisback/past-mtl-monitors/status.svg)](https://cloud.drone.io/mvcisback/past-mtl-monitors)\n[![Documentation Status](https://readthedocs.org/projects/past-mtl-monitors/badge/?version=latest)](https://past-mtl-monitors.readthedocs.io/en/latest/?badge=latest)\n[![codecov](https://codecov.io/gh/mvcisback/past-mtl-monitors/branch/master/graph/badge.svg)](https://codecov.io/gh/mvcisback/past-mtl-monitors)\n[![PyPI version](https://badge.fury.io/py/past-mtl-monitors.svg)](https://badge.fury.io/py/past-mtl-monitors)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n\n<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again -->\n**Table of Contents**\n\n- [Past MTL Monitors](#past-mtl-monitors)\n- [Installation](#installation)\n- [Usage](#usage)\n\n<!-- markdown-toc end -->\n\n\n# Installation\n\nIf you just need to use `past-mtl-monitors`, you can just run:\n\n`$ pip install past-mtl-monitors`\n\nFor developers, note that this project uses the\n[poetry](https://poetry.eustace.io/) python package/dependency\nmanagement tool. Please familarize yourself with it and then\nrun:\n\n`$ poetry install`\n\n# Usage\n\nThe primary entry point to the `past-mtl-monitors` package is the\n`atom` function. This exposes a monitor factory which can be combined\nwith other monitor factories to create complex property monitors.\n\nUnder the hood, these monitor factories are just wrappers around\npython coroutines that expect a `(time, val)` pair, where time is a\n`float` and `val` is a mapping from strings to robustness values\n(`float`).\n\n**Note** `past-mtl-monitors` only implements a quantitative semantics\nwhere a value greater than 0 implies sat and a value less than 0\nimplies unsat.\n\nThus if one would like to use Boolean semantics, use `1` for `True` and\n`-1` for `False`.\n\n```python\nfrom past_mtl_monitors import atom\n\nx, y, z = atom('x'), atom('y'), atom('z')\n\n# Monitor that historically, x has been equal to y.\nmonitor = (x == y).hist().monitor()\n\n#                    time         values\nassert monitor.send((0    , {'x': 1, 'y': 1}))  ==  1   # sat\nassert monitor.send((1.1  , {'x': 1, 'y': -1})) == -1   # unsat\nassert monitor.send((1.5  , {'x': 1, 'y': 1}))  == -1   # unsat\n\nmonitor2 = x.once().monitor()  # Monitor's x's maximum value.\nassert monitor2.send((0 , {'x': -10, 'y': 1})) == -10\nassert monitor2.send((0 , {'x': 100, 'y': 2})) == 100\nassert monitor2.send((0 , {'x': -100, 'y': -1})) == 100\n\n# Monitor that x & y have been true since the last\n# time that z held for 3 time units.\nmonitor3 = (x & y).since(z.hist(0, 3)).monitor()\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mvcisback/past-mtl-monitors",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "past-mtl-monitors",
    "package_url": "https://pypi.org/project/past-mtl-monitors/",
    "platform": "",
    "project_url": "https://pypi.org/project/past-mtl-monitors/",
    "project_urls": {
      "Homepage": "https://github.com/mvcisback/past-mtl-monitors",
      "Repository": "https://github.com/mvcisback/past-mtl-monitors"
    },
    "release_url": "https://pypi.org/project/past-mtl-monitors/0.1.0/",
    "requires_dist": [
      "attrs (>=19.3.0,<20.0.0)",
      "intervaltree (>=3.0.2,<4.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "A library for creating past metric temporal logic monitors.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6655879,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c46218ea3acb5eba0009e482c0eb53114a3b25a351f97d78fc21b1f68cadf6f9",
          "md5": "db599a82dc1e1dda88a2ebe9567edf22",
          "sha256": "11b5061cb21b2862a18ea82f616b52ce32bf293555dd10ab86d27a47ba3f6c25"
        },
        "downloads": -1,
        "filename": "past_mtl_monitors-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db599a82dc1e1dda88a2ebe9567edf22",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 5153,
        "upload_time": "2020-02-18T20:37:12",
        "upload_time_iso_8601": "2020-02-18T20:37:12.360761Z",
        "url": "https://files.pythonhosted.org/packages/c4/62/18ea3acb5eba0009e482c0eb53114a3b25a351f97d78fc21b1f68cadf6f9/past_mtl_monitors-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "834b0cef4a6dc41559f60416bb4e3c6a7c1dee2174fc397b0d6e92545141b9df",
          "md5": "4720eb07325851ebfd268a6a98f2bba9",
          "sha256": "dbe655037361903f2d963e81d20caab5ff1e61a345a0bf9a488004d01909abb7"
        },
        "downloads": -1,
        "filename": "past-mtl-monitors-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4720eb07325851ebfd268a6a98f2bba9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5045,
        "upload_time": "2020-02-18T20:37:09",
        "upload_time_iso_8601": "2020-02-18T20:37:09.866195Z",
        "url": "https://files.pythonhosted.org/packages/83/4b/0cef4a6dc41559f60416bb4e3c6a7c1dee2174fc397b0d6e92545141b9df/past-mtl-monitors-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c46218ea3acb5eba0009e482c0eb53114a3b25a351f97d78fc21b1f68cadf6f9",
        "md5": "db599a82dc1e1dda88a2ebe9567edf22",
        "sha256": "11b5061cb21b2862a18ea82f616b52ce32bf293555dd10ab86d27a47ba3f6c25"
      },
      "downloads": -1,
      "filename": "past_mtl_monitors-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "db599a82dc1e1dda88a2ebe9567edf22",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 5153,
      "upload_time": "2020-02-18T20:37:12",
      "upload_time_iso_8601": "2020-02-18T20:37:12.360761Z",
      "url": "https://files.pythonhosted.org/packages/c4/62/18ea3acb5eba0009e482c0eb53114a3b25a351f97d78fc21b1f68cadf6f9/past_mtl_monitors-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "834b0cef4a6dc41559f60416bb4e3c6a7c1dee2174fc397b0d6e92545141b9df",
        "md5": "4720eb07325851ebfd268a6a98f2bba9",
        "sha256": "dbe655037361903f2d963e81d20caab5ff1e61a345a0bf9a488004d01909abb7"
      },
      "downloads": -1,
      "filename": "past-mtl-monitors-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4720eb07325851ebfd268a6a98f2bba9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 5045,
      "upload_time": "2020-02-18T20:37:09",
      "upload_time_iso_8601": "2020-02-18T20:37:09.866195Z",
      "url": "https://files.pythonhosted.org/packages/83/4b/0cef4a6dc41559f60416bb4e3c6a7c1dee2174fc397b0d6e92545141b9df/past-mtl-monitors-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}