{
  "info": {
    "author": "GSchutz",
    "author_email": "guilherme@gschutz.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Le Board (beta)\n===============\n\nLe Board, a simple leaderboard generator for ranking your\nalgorithms experiments.\n\nInstall\n=======\n\nInstall with ``pip`` and configure with ``init``, linking a Google\naccount is the recommended choice.\n\n.. code-block:: bash\n\n    $ pip install leboard\n    $ leboard init\n\nsketch of ``leboard init``\n------------------------------\n\n..\n\nChoose an option for Data Handler (1):\n\n1) Google Firebase (recommended)\n2) Local file system (no shared options)\n\n\nif option 1)\n------------\n\n..\n\n* Create a Firebase project at https://console.firebase.google.com/\n* Get the gcloud credential at https://console.cloud.google.com/iam-admin/serviceaccounts/project\n* Access the page Database -> activate the Firestore database\n\n\nif option 2)\n------------\n\n..\n\n* Choose a path to store your boards (~/.leboard):\n\n\nUsage\n=====\n\n.. code-block:: python\n\n    import leboard\n    \n    letask = leboard.TaskBoard(\"MNIST\")\n    \n    # other members will have access to the MNIST task too\n    # (restrict a members definition only when a task is set)\n    letask.members([\"rob@gmail.com\", \"jane@mail.com\"])\n    \n    # do your stuff\n    # ...\n    \n    experiment = letask.Entry()\n    \n    experiment.set(\"accuracy\", accuracy)\n    experiment.set(\"loss\", loss)\n    experiment.set(\"parameters\", params, hide=True)\n    experiment.set(\"confusion_image\", confusion_image)\n    \n    # commit will save to DataHandler available/configured\n    # (proposed is local simple file storage, and shared google firebase)\n    experiment.commit()\n    \nLeaderboard\n-----------\n\nShow all experiments with links to detailed resources,\nthis can open a page hosted in firebase.\n\n\n* keep experiment data in order of creation\n\n.. code-block:: python\n\n    letask.leaderboard(\"MNIST\", \"accuracy\")\n\nAdvanced?\n=========\n\nResource Typing?\n----------------\n\nEntry can have different types, this can be usefull for\nhandling resources like image, or HTML pages, to show and\ninteract with them.\n\n.. code-block:: python\n\n    from leboard import types as lbt\n    \n    experiment.set(\"accuracy\", accuracy)\n    experiment.set(\"loss\", loss)\n    experiment.set(\"confusion_image\", lbt.Image(confusion_image))\n    experiment.set(\"notebook_html\", lbt.HTML(notebook_html))\n    \n\nCommitting an ``Entry`` could automatically save a copy of\nthe current notebook state to the ``DataHandler``.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/GSchutz/leboard/archive/0.1.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GSchutz/leboard",
    "keywords": "leaderboard",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "leboard",
    "package_url": "https://pypi.org/project/leboard/",
    "platform": "",
    "project_url": "https://pypi.org/project/leboard/",
    "project_urls": {
      "Download": "https://github.com/GSchutz/leboard/archive/0.1.1.tar.gz",
      "Homepage": "https://github.com/GSchutz/leboard"
    },
    "release_url": "https://pypi.org/project/leboard/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Le Board, a simple leaderboard generator for ranking your algorithms experiments",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3762583,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4261e0d9db908096c46a900b45adafd315dbbd61a3068eb2f5f10124b79ecc91",
          "md5": "7280781f2402b46723dfa9a32a93fc75",
          "sha256": "918ae91a9eb53523964f6f023a3473adcfdaf69775ebb0f954fb4c7fc6ff78a6"
        },
        "downloads": -1,
        "filename": "leboard-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7280781f2402b46723dfa9a32a93fc75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5874,
        "upload_time": "2018-04-13T17:31:45",
        "upload_time_iso_8601": "2018-04-13T17:31:45.489521Z",
        "url": "https://files.pythonhosted.org/packages/42/61/e0d9db908096c46a900b45adafd315dbbd61a3068eb2f5f10124b79ecc91/leboard-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4261e0d9db908096c46a900b45adafd315dbbd61a3068eb2f5f10124b79ecc91",
        "md5": "7280781f2402b46723dfa9a32a93fc75",
        "sha256": "918ae91a9eb53523964f6f023a3473adcfdaf69775ebb0f954fb4c7fc6ff78a6"
      },
      "downloads": -1,
      "filename": "leboard-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7280781f2402b46723dfa9a32a93fc75",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5874,
      "upload_time": "2018-04-13T17:31:45",
      "upload_time_iso_8601": "2018-04-13T17:31:45.489521Z",
      "url": "https://files.pythonhosted.org/packages/42/61/e0d9db908096c46a900b45adafd315dbbd61a3068eb2f5f10124b79ecc91/leboard-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}