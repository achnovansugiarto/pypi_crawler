{
  "info": {
    "author": "Vincent Maillol",
    "author_email": "vincent.maillol@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: aiohttp",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "Aiohttp pydantic - Aiohttp View to validate and parse request\n=============================================================\n\n.. image:: https://cloud.drone.io/api/badges/Maillol/aiohttp-pydantic/status.svg\n  :target: https://cloud.drone.io/Maillol/aiohttp-pydantic\n  :alt: Build status for master branch\n\n.. image:: https://img.shields.io/pypi/v/aiohttp-pydantic\n  :target: https://img.shields.io/pypi/v/aiohttp-pydantic\n  :alt: Latest PyPI package version\n\n.. image:: https://codecov.io/gh/Maillol/aiohttp-pydantic/branch/main/graph/badge.svg\n  :target: https://codecov.io/gh/Maillol/aiohttp-pydantic\n  :alt: codecov.io status for master branch\n\nAiohttp pydantic is an `aiohttp view`_ to easily parse and validate request.\nYou define using the function annotations what your methods for handling HTTP verbs expects and Aiohttp pydantic parses the HTTP request\nfor you, validates the data, and injects that you want as parameters.\n\n\nFeatures:\n\n- Query string, request body, URL path and HTTP headers validation.\n- Open API Specification generation.\n\n\nHow to install\n--------------\n\n.. code-block:: bash\n\n    $ pip install aiohttp_pydantic\n\nExample:\n--------\n\n.. code-block:: python3\n\n    from typing import Optional\n\n    from aiohttp import web\n    from aiohttp_pydantic import PydanticView\n    from pydantic import BaseModel\n\n    # Use pydantic BaseModel to validate request body\n    class ArticleModel(BaseModel):\n        name: str\n        nb_page: Optional[int]\n\n\n    # Create your PydanticView and add annotations.\n    class ArticleView(PydanticView):\n\n        async def post(self, article: ArticleModel):\n            return web.json_response({'name': article.name,\n                                      'number_of_page': article.nb_page})\n\n        async def get(self, with_comments: bool=False):\n            return web.json_response({'with_comments': with_comments})\n\n\n    app = web.Application()\n    app.router.add_view('/article', ArticleView)\n    web.run_app(app)\n\n\n.. code-block:: bash\n\n    $ curl -X GET http://127.0.0.1:8080/article?with_comments=a\n    [\n      {\n        \"in\": \"query string\",\n        \"loc\": [\n          \"with_comments\"\n        ],\n        \"msg\": \"value could not be parsed to a boolean\",\n        \"type\": \"type_error.bool\"\n      }\n    ]\n\n    $ curl -X GET http://127.0.0.1:8080/article?with_comments=yes\n    {\"with_comments\": true}\n\n    $ curl -H \"Content-Type: application/json\" -X post http://127.0.0.1:8080/article --data '{}'\n    [\n      {\n        \"in\": \"body\",\n        \"loc\": [\n          \"name\"\n        ],\n        \"msg\": \"field required\",\n        \"type\": \"value_error.missing\"\n      }\n    ]\n\n    $ curl -H \"Content-Type: application/json\" -X post http://127.0.0.1:8080/article --data '{\"name\": \"toto\", \"nb_page\": \"3\"}'\n    {\"name\": \"toto\", \"number_of_page\": 3}\n\nAPI:\n----\n\nInject Path Parameters\n~~~~~~~~~~~~~~~~~~~~~~\n\nTo declare a path parameter, you must declare your argument as a `positional-only parameters`_:\n\n\nExample:\n\n.. code-block:: python3\n\n    class AccountView(PydanticView):\n        async def get(self, customer_id: str, account_id: str, /):\n            ...\n\n    app = web.Application()\n    app.router.add_get('/customers/{customer_id}/accounts/{account_id}', AccountView)\n\nInject Query String Parameters\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo declare a query parameter, you must declare your argument as a simple argument:\n\n\n.. code-block:: python3\n\n    class AccountView(PydanticView):\n        async def get(self, customer_id: Optional[str] = None):\n            ...\n\n    app = web.Application()\n    app.router.add_get('/customers', AccountView)\n\n\nA query string parameter is generally optional and we do not want to force the user to set it in the URL.\nIt's recommended to define a default value. It's possible to get a multiple value for the same parameter using\nthe List type\n\n.. code-block:: python3\n\n    from typing import List\n    from pydantic import Field\n\n    class AccountView(PydanticView):\n        async def get(self, tags: List[str] = Field(default_factory=list)):\n            ...\n\n    app = web.Application()\n    app.router.add_get('/customers', AccountView)\n\n\nInject Request Body\n~~~~~~~~~~~~~~~~~~~\n\nTo declare a body parameter, you must declare your argument as a simple argument annotated with `pydantic Model`_.\n\n\n.. code-block:: python3\n\n    class Customer(BaseModel):\n        first_name: str\n        last_name: str\n\n    class CustomerView(PydanticView):\n        async def post(self, customer: Customer):\n            ...\n\n    app = web.Application()\n    app.router.add_view('/customers', CustomerView)\n\nInject HTTP headers\n~~~~~~~~~~~~~~~~~~~\n\nTo declare a HTTP headers parameter, you must declare your argument as a `keyword-only argument`_.\n\n\n.. code-block:: python3\n\n    class CustomerView(PydanticView):\n        async def get(self, *, authorization: str, expire_at: datetime):\n            ...\n\n    app = web.Application()\n    app.router.add_view('/customers', CustomerView)\n\n\n.. _positional-only parameters: https://www.python.org/dev/peps/pep-0570/\n.. _pydantic Model: https://pydantic-docs.helpmanual.io/usage/models/\n.. _keyword-only argument: https://www.python.org/dev/peps/pep-3102/\n\nAdd route to generate Open Api Specification (OAS)\n--------------------------------------------------\n\naiohttp_pydantic provides a sub-application to serve a route to generate Open Api Specification\nreading annotation in your PydanticView. Use *aiohttp_pydantic.oas.setup()* to add the sub-application\n\n.. code-block:: python3\n\n    from aiohttp import web\n    from aiohttp_pydantic import oas\n\n\n    app = web.Application()\n    oas.setup(app)\n\nBy default, the route to display the Open Api Specification is /oas but you can change it using\n*url_prefix* parameter\n\n\n.. code-block:: python3\n\n    oas.setup(app, url_prefix='/spec-api')\n\nIf you want generate the Open Api Specification from specific aiohttp sub-applications.\non the same route, you must use *apps_to_expose* parameter.\n\n\n.. code-block:: python3\n\n    from aiohttp import web\n    from aiohttp_pydantic import oas\n\n    app = web.Application()\n    sub_app_1 = web.Application()\n    sub_app_2 = web.Application()\n\n    oas.setup(app, apps_to_expose=[sub_app_1, sub_app_2])\n\n\nYou can change the title or the version of the generated open api specification using\n*title_spec* and *version_spec* parameters:\n\n\n.. code-block:: python3\n\n    oas.setup(app, title_spec=\"My application\", version_spec=\"1.2.3\")\n\n\nAdd annotation to define response content\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe module aiohttp_pydantic.oas.typing provides class to annotate a\nresponse content.\n\nFor example *r200[List[Pet]]* means the server responses with\nthe status code 200 and the response content is a List of Pet where Pet will be\ndefined using a pydantic.BaseModel\n\nThe docstring of methods will be parsed to fill the descriptions in the\nOpen Api Specification.\n\n\n.. code-block:: python3\n\n    from aiohttp_pydantic import PydanticView\n    from aiohttp_pydantic.oas.typing import r200, r201, r204, r404\n\n\n    class Pet(BaseModel):\n        id: int\n        name: str\n\n\n    class Error(BaseModel):\n        error: str\n\n\n    class PetCollectionView(PydanticView):\n        async def get(self) -> r200[List[Pet]]:\n            \"\"\"\n            Find all pets\n\n            Tags: pet\n            \"\"\"\n            pets = self.request.app[\"model\"].list_pets()\n            return web.json_response([pet.dict() for pet in pets])\n\n        async def post(self, pet: Pet) -> r201[Pet]:\n            \"\"\"\n            Add a new pet to the store\n\n            Tags: pet\n            Status Codes:\n                201: The pet is created\n            \"\"\"\n            self.request.app[\"model\"].add_pet(pet)\n            return web.json_response(pet.dict())\n\n\n    class PetItemView(PydanticView):\n        async def get(self, id: int, /) -> Union[r200[Pet], r404[Error]]:\n            \"\"\"\n            Find a pet by ID\n\n            Tags: pet\n            Status Codes:\n                200: Successful operation\n                404: Pet not found\n            \"\"\"\n            pet = self.request.app[\"model\"].find_pet(id)\n            return web.json_response(pet.dict())\n\n        async def put(self, id: int, /, pet: Pet) -> r200[Pet]:\n            \"\"\"\n            Update an existing pet\n\n            Tags: pet\n            Status Codes:\n                200: successful operation\n            \"\"\"\n            self.request.app[\"model\"].update_pet(id, pet)\n            return web.json_response(pet.dict())\n\n        async def delete(self, id: int, /) -> r204:\n            self.request.app[\"model\"].remove_pet(id)\n            return web.Response(status=204)\n\n\nGroup parameters\n----------------\n\nIf your method has lot of parameters you can group them together inside one or several Groups.\n\n\n.. code-block:: python3\n\n    from aiohttp_pydantic.injectors import Group\n\n    class Pagination(Group):\n        page_num: int = 1\n        page_size: int = 15\n\n\n    class ArticleView(PydanticView):\n\n        async def get(self, page: Pagination):\n            articles = Article.get(page.page_num, page.page_size)\n            ...\n\n\nThe parameters page_num and page_size are expected in the query string, and\nset inside a Pagination object passed as page parameter.\n\nThe code above is equivalent to:\n\n\n.. code-block:: python3\n\n    class ArticleView(PydanticView):\n\n        async def get(self, page_num: int = 1, page_size: int = 15):\n            articles = Article.get(page_num, page_size)\n            ...\n\n\nYou can add methods or properties to your Group.\n\n\n.. code-block:: python3\n\n    class Pagination(Group):\n        page_num: int = 1\n        page_size: int = 15\n\n        @property\n        def num(self):\n            return self.page_num\n\n        @property\n        def size(self):\n            return self.page_size\n\n        def slice(self):\n            return slice(self.num, self.size)\n\n\n    class ArticleView(PydanticView):\n\n        async def get(self, page: Pagination):\n            articles = Article.get(page.num, page.size)\n            ...\n\n\nCustom Validation error\n-----------------------\n\nYou can redefine the on_validation_error hook in your PydanticView\n\n.. code-block:: python3\n\n    class PetView(PydanticView):\n\n        async def on_validation_error(self,\n                                      exception: ValidationError,\n                                      context: str):\n            errors = exception.errors()\n            for error in errors:\n                error[\"in\"] = context  # context is \"body\", \"headers\", \"path\" or \"query string\"\n                error[\"custom\"] = \"your custom field ...\"\n            return json_response(data=errors, status=400)\n\n\nDemo\n----\n\nHave a look at `demo`_ for a complete example\n\n.. code-block:: bash\n\n    git clone https://github.com/Maillol/aiohttp-pydantic.git\n    cd aiohttp-pydantic\n    pip install .\n    python -m demo\n\nGo to http://127.0.0.1:8080/oas\n\nYou can generate the OAS in a json or yaml file using the aiohttp_pydantic.oas command:\n\n.. code-block:: bash\n\n    python -m aiohttp_pydantic.oas demo.main\n\n.. code-block:: bash\n\n    $ python3 -m aiohttp_pydantic.oas  --help\n    usage: __main__.py [-h] [-b FILE] [-o FILE] [-f FORMAT] [APP [APP ...]]\n\n    Generate Open API Specification\n\n    positional arguments:\n      APP                   The name of the module containing the asyncio.web.Application. By default the variable named\n                            'app' is loaded but you can define an other variable name ending the name of module with :\n                            characters and the name of variable. Example: my_package.my_module:my_app If your\n                            asyncio.web.Application is returned by a function, you can use the syntax:\n                            my_package.my_module:my_app()\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -b FILE, --base-oas-file FILE\n                            A file that will be used as base to generate OAS\n      -o FILE, --output FILE\n                            File to write the output\n      -f FORMAT, --format FORMAT\n                            The output format, can be 'json' or 'yaml' (default is json)\n\n\n.. _demo: https://github.com/Maillol/aiohttp-pydantic/tree/main/demo\n.. _aiohttp view: https://docs.aiohttp.org/en/stable/web_quickstart.html#class-based-views\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Maillol/aiohttp-pydantic",
    "keywords": "aiohttp,pydantic,annotations,validation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiohttp-pydantic",
    "package_url": "https://pypi.org/project/aiohttp-pydantic/",
    "platform": null,
    "project_url": "https://pypi.org/project/aiohttp-pydantic/",
    "project_urls": {
      "Homepage": "https://github.com/Maillol/aiohttp-pydantic"
    },
    "release_url": "https://pypi.org/project/aiohttp-pydantic/1.12.2/",
    "requires_dist": [
      "aiohttp",
      "pydantic (>=1.7)",
      "swagger-ui-bundle",
      "pytest (==6.1.2) ; extra == 'ci'",
      "pytest-aiohttp (==0.3.0) ; extra == 'ci'",
      "pytest-cov (==2.10.1) ; extra == 'ci'",
      "readme-renderer (==29.0) ; extra == 'ci'",
      "codecov (==2.1.11) ; extra == 'ci'",
      "twine (==3.4.2) ; extra == 'ci'",
      "pytest (==6.1.2) ; extra == 'test'",
      "pytest-aiohttp (==0.3.0) ; extra == 'test'",
      "pytest-cov (==2.10.1) ; extra == 'test'",
      "readme-renderer (==29.0) ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "Aiohttp View using pydantic to validate request body and query sting regarding method annotations.",
    "version": "1.12.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14730523,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41efd9476ff0a843f8ac7a4a2c9ea93672f6fdf9290535a388d6faf11169a973",
          "md5": "75baf9fae4636cf2adc46cd5a1af1a9f",
          "sha256": "2a09c804a30a38c1802bca8a92b6601911e1d2c3f665131eca9c7f228ffb1ff7"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75baf9fae4636cf2adc46cd5a1af1a9f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3333,
        "upload_time": "2020-10-04T10:55:52",
        "upload_time_iso_8601": "2020-10-04T10:55:52.149339Z",
        "url": "https://files.pythonhosted.org/packages/41/ef/d9476ff0a843f8ac7a4a2c9ea93672f6fdf9290535a388d6faf11169a973/aiohttp_pydantic-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edae00f80f090b50bcfce7dd119b8d2e6a6fef74bd6242cffffd72fb3dd9ca42",
          "md5": "30e31729f4b27519af77496c4fca93b1",
          "sha256": "ba47bbfebd31a08ef27b2623662c8359b488e340f39d0ec76e591c65e0f3dcc8"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30e31729f4b27519af77496c4fca93b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4794,
        "upload_time": "2020-10-10T16:01:22",
        "upload_time_iso_8601": "2020-10-10T16:01:22.364347Z",
        "url": "https://files.pythonhosted.org/packages/ed/ae/00f80f090b50bcfce7dd119b8d2e6a6fef74bd6242cffffd72fb3dd9ca42/aiohttp_pydantic-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c744eab878203ae5d503a8728fa1ff37dfd87cb9f8167b3cc5dca5c388751b7a",
          "md5": "db88f1462ab040fc58d99421e79025f3",
          "sha256": "89ab7047ac8215d988b888fcffc1555f9b194b4dc908f0366c338946dc180c1a"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db88f1462ab040fc58d99421e79025f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11107,
        "upload_time": "2020-10-25T19:58:05",
        "upload_time_iso_8601": "2020-10-25T19:58:05.490809Z",
        "url": "https://files.pythonhosted.org/packages/c7/44/eab878203ae5d503a8728fa1ff37dfd87cb9f8167b3cc5dca5c388751b7a/aiohttp_pydantic-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42dbe4105636b707b0570ff9e2ad57415bb54fd7dcedb42807b379a4781bb808",
          "md5": "3de56e62e6d0984eab878360a648b4e1",
          "sha256": "8d88dd69140d547e97b8f621fea6b48087c1a67b0000bb3daff8205c0febd0f4"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.10.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3de56e62e6d0984eab878360a648b4e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 25289,
        "upload_time": "2021-07-26T07:06:58",
        "upload_time_iso_8601": "2021-07-26T07:06:58.919467Z",
        "url": "https://files.pythonhosted.org/packages/42/db/e4105636b707b0570ff9e2ad57415bb54fd7dcedb42807b379a4781bb808/aiohttp_pydantic-1.10.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.10.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b27ad5ad2cfdbb6c7cc12b49c716cffed7bfbdd88529b23e8c87c540a37d2897",
          "md5": "3af0ac7735b3dca0baf858b5032bc29d",
          "sha256": "14bdad697cbefc92832262fe9754bccfa163c9861bce0848c22ddeb711ae7f27"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.10.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3af0ac7735b3dca0baf858b5032bc29d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 25316,
        "upload_time": "2021-08-04T07:07:29",
        "upload_time_iso_8601": "2021-08-04T07:07:29.854080Z",
        "url": "https://files.pythonhosted.org/packages/b2/7a/d5ad2cfdbb6c7cc12b49c716cffed7bfbdd88529b23e8c87c540a37d2897/aiohttp_pydantic-1.10.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "631e17d7d0e29c5bd96f1faa603f0e09b58d7ad8ad09c3e3455a8cbe7d694410",
          "md5": "1d07548b9335ef196ae9f7fd9a40cb53",
          "sha256": "d8b4b99fa15dc8785f4a472dbedac7fe56000952d3c1c33d5c4b4498f858fa21"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.11.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d07548b9335ef196ae9f7fd9a40cb53",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 18632,
        "upload_time": "2021-08-22T13:18:26",
        "upload_time_iso_8601": "2021-08-22T13:18:26.265777Z",
        "url": "https://files.pythonhosted.org/packages/63/1e/17d7d0e29c5bd96f1faa603f0e09b58d7ad8ad09c3e3455a8cbe7d694410/aiohttp_pydantic-1.11.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.12.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0704d9a685dfef4ef2aadea7a0a87a5dad81a5147849e5e73fcffd067127d4a",
          "md5": "f3e844bea6d4cbde8c416757bb9b1b81",
          "sha256": "efeb56db194f33ee6e4a6b742bc8726fabc96b27b658e1f9e9b90e898c926a30"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.12.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3e844bea6d4cbde8c416757bb9b1b81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19928,
        "upload_time": "2021-10-01T06:44:15",
        "upload_time_iso_8601": "2021-10-01T06:44:15.094921Z",
        "url": "https://files.pythonhosted.org/packages/d0/70/4d9a685dfef4ef2aadea7a0a87a5dad81a5147849e5e73fcffd067127d4a/aiohttp_pydantic-1.12.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.12.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3b45c2c7a6c15ea3299842d914e76118839fef628154e51646e2109cdf4b07c",
          "md5": "efb30662cd2953b6717e25d47ab965e3",
          "sha256": "3160db41b20bde752fe27f92a519ceea8665c376ef0d954ba6c9de025b37f8d4"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.12.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "efb30662cd2953b6717e25d47ab965e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20040,
        "upload_time": "2022-02-06T04:07:56",
        "upload_time_iso_8601": "2022-02-06T04:07:56.410242Z",
        "url": "https://files.pythonhosted.org/packages/c3/b4/5c2c7a6c15ea3299842d914e76118839fef628154e51646e2109cdf4b07c/aiohttp_pydantic-1.12.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.12.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "420627af49cb819254404a81aeef6796eb7fd96cd045730cfb3eceec44be69f4",
          "md5": "3a49f7c95f92c80465f0670fec1b808e",
          "sha256": "49d6bd41880b02ece91c6e59108cdca0d503dbb2f8e04efbe638bd4f02b40aed"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.12.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a49f7c95f92c80465f0670fec1b808e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19964,
        "upload_time": "2022-08-11T15:14:10",
        "upload_time_iso_8601": "2022-08-11T15:14:10.876265Z",
        "url": "https://files.pythonhosted.org/packages/42/06/27af49cb819254404a81aeef6796eb7fd96cd045730cfb3eceec44be69f4/aiohttp_pydantic-1.12.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3222e20cc6ea7fcbb6838d6d54c1d4a5f009d14f02096d680937abd19ee843e",
          "md5": "4354df016b2ca5268b8c2a8f0466b1a7",
          "sha256": "433513e02a9ad86109ee56d587681edda95b7a832c6f689316ca1e0b095fcbd3"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4354df016b2ca5268b8c2a8f0466b1a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 13096,
        "upload_time": "2020-10-30T19:27:35",
        "upload_time_iso_8601": "2020-10-30T19:27:35.296858Z",
        "url": "https://files.pythonhosted.org/packages/f3/22/2e20cc6ea7fcbb6838d6d54c1d4a5f009d14f02096d680937abd19ee843e/aiohttp_pydantic-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7ab46837ebb10ee97d15e4a0e32869707e9e518d4d80fd2589b58b6936a2f88",
          "md5": "188bcd73c6f3d16075c8475e436ab97c",
          "sha256": "5f8b4d35454bf2d43704f0edb887b350fa4270d84bc0014172c97b36ad959b0b"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "188bcd73c6f3d16075c8475e436ab97c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 15489,
        "upload_time": "2020-11-01T18:49:24",
        "upload_time_iso_8601": "2020-11-01T18:49:24.739156Z",
        "url": "https://files.pythonhosted.org/packages/a7/ab/46837ebb10ee97d15e4a0e32869707e9e518d4d80fd2589b58b6936a2f88/aiohttp_pydantic-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "523918f549ffd45ef2bf5534ef522df9ef2b50c4641be3d688f591c30fa1e4fe",
          "md5": "0751998c587876555c8ce202ef5902d6",
          "sha256": "117ae824838e1a579643084635b48fbf267b7d0967939780fb3640f172b741d6"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0751998c587876555c8ce202ef5902d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16038,
        "upload_time": "2020-11-03T12:41:24",
        "upload_time_iso_8601": "2020-11-03T12:41:24.321157Z",
        "url": "https://files.pythonhosted.org/packages/52/39/18f549ffd45ef2bf5534ef522df9ef2b50c4641be3d688f591c30fa1e4fe/aiohttp_pydantic-1.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0188f975fdc85e7bc9eb3467e65e42c16e14ec0f50ea62da08d0d8766e952685",
          "md5": "6ef654cd96391164cd71824d63d82a42",
          "sha256": "97c48bc7209c50781e99ceb4b5c760ff6c298304685778b97adecbcb40fb799a"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ef654cd96391164cd71824d63d82a42",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16323,
        "upload_time": "2020-11-15T13:50:02",
        "upload_time_iso_8601": "2020-11-15T13:50:02.379993Z",
        "url": "https://files.pythonhosted.org/packages/01/88/f975fdc85e7bc9eb3467e65e42c16e14ec0f50ea62da08d0d8766e952685/aiohttp_pydantic-1.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7f0942ded2c5193d53314f3e51b9d1a897e4ad79650b7ce2dd8b4abe5ee56d4",
          "md5": "b07639c96246839a28c0b23e33f7290b",
          "sha256": "8263858973cf093d72efd39ddc5e51eb4aaaf731176b376e5e11e410b0598489"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b07639c96246839a28c0b23e33f7290b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19105,
        "upload_time": "2020-11-21T17:35:47",
        "upload_time_iso_8601": "2020-11-21T17:35:47.126334Z",
        "url": "https://files.pythonhosted.org/packages/e7/f0/942ded2c5193d53314f3e51b9d1a897e4ad79650b7ce2dd8b4abe5ee56d4/aiohttp_pydantic-1.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87c4d49994ff1dc65fa781d4c6233277dd1f029a240ec36adf9f05955a7f0c70",
          "md5": "7b4bd2309c7a2c5eef1f365bc86a4c27",
          "sha256": "68b52ed2b0cc8e937389225292b90a9575fb3988a6e26ce1c466d07f63591836"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b4bd2309c7a2c5eef1f365bc86a4c27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19480,
        "upload_time": "2020-11-28T11:48:28",
        "upload_time_iso_8601": "2020-11-28T11:48:28.868227Z",
        "url": "https://files.pythonhosted.org/packages/87/c4/d49994ff1dc65fa781d4c6233277dd1f029a240ec36adf9f05955a7f0c70/aiohttp_pydantic-1.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "361e38f4990a354336b8cbb6b6f30461c27e05bff8648e1c8247b43f9be35ceb",
          "md5": "e4576fe8bb67a6e005fd5b36d9e46bb6",
          "sha256": "88f2d3a2f83c3eb62889c51f0a358e5fc2a7cbdb39a4af707c12920987c30f53"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4576fe8bb67a6e005fd5b36d9e46bb6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19997,
        "upload_time": "2020-11-28T19:04:18",
        "upload_time_iso_8601": "2020-11-28T19:04:18.277729Z",
        "url": "https://files.pythonhosted.org/packages/36/1e/38f4990a354336b8cbb6b6f30461c27e05bff8648e1c8247b43f9be35ceb/aiohttp_pydantic-1.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d26c5ba3fb8e9afe0007b9b460949a7fcaaaefff32e4b6ecea48b11b288cede",
          "md5": "c7ab17ee9efe012e6e24d71fc0d76fee",
          "sha256": "6913c656a3a8a764e68c7b72adad802feb357941fa31409bc3a7f923b0e614a6"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c7ab17ee9efe012e6e24d71fc0d76fee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 23378,
        "upload_time": "2020-12-20T16:51:16",
        "upload_time_iso_8601": "2020-12-20T16:51:16.128594Z",
        "url": "https://files.pythonhosted.org/packages/9d/26/c5ba3fb8e9afe0007b9b460949a7fcaaaefff32e4b6ecea48b11b288cede/aiohttp_pydantic-1.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf22cc498604c0fd71be9cdef8528fa5e3948da02ffc79c55411aba37d2ae3a4",
          "md5": "e7a1a07d66dfec03d0296b8168735199",
          "sha256": "e25ad74a22640330b4573d9bc17456776e1c411133f5f8dd034f4edff111da85"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.7.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7a1a07d66dfec03d0296b8168735199",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 23521,
        "upload_time": "2021-02-27T07:18:03",
        "upload_time_iso_8601": "2021-02-27T07:18:03.912600Z",
        "url": "https://files.pythonhosted.org/packages/cf/22/cc498604c0fd71be9cdef8528fa5e3948da02ffc79c55411aba37d2ae3a4/aiohttp_pydantic-1.7.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c32204f1a24326555a7350080ed5389035b10aa4d818291c371395706c7163ea",
          "md5": "4d6d2199057c7834ab1bc77d95c27118",
          "sha256": "089f8b6efb22cac7004eb2c01ded42e1ea8eff53d3d1b73d71e5512eaec417d1"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d6d2199057c7834ab1bc77d95c27118",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 23733,
        "upload_time": "2021-03-05T20:57:01",
        "upload_time_iso_8601": "2021-03-05T20:57:01.240809Z",
        "url": "https://files.pythonhosted.org/packages/c3/22/04f1a24326555a7350080ed5389035b10aa4d818291c371395706c7163ea/aiohttp_pydantic-1.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95dff9b1b36b00c07666d53254bebfc2f3aee4aab2aeee15bb4f747f170949b8",
          "md5": "594dd1342d0b127ec17509088f8a632d",
          "sha256": "f596f371928ef3c4dce294581ef93a714799452dd56976400cb0e0ceaaae5dab"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "594dd1342d0b127ec17509088f8a632d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 24143,
        "upload_time": "2021-03-27T11:51:19",
        "upload_time_iso_8601": "2021-03-27T11:51:19.739388Z",
        "url": "https://files.pythonhosted.org/packages/95/df/f9b1b36b00c07666d53254bebfc2f3aee4aab2aeee15bb4f747f170949b8/aiohttp_pydantic-1.8.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db87061016e6268a2b475b6eed614e5bee9a15c35a23f1d00a076a6892335a22",
          "md5": "98566a443bcffce50777d77ed7a956ee",
          "sha256": "530347e1b500d309c1818671c280ce09b1237941179758123a35b398ab8f13de"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98566a443bcffce50777d77ed7a956ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 24678,
        "upload_time": "2021-04-04T12:06:48",
        "upload_time_iso_8601": "2021-04-04T12:06:48.061631Z",
        "url": "https://files.pythonhosted.org/packages/db/87/061016e6268a2b475b6eed614e5bee9a15c35a23f1d00a076a6892335a22/aiohttp_pydantic-1.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "278c11f36aa609a5e781e865d5266ff0bff535275a7afd308e4c4c48393c3343",
          "md5": "9a9fe61da34abdcbd9dd5769f502e825",
          "sha256": "94a1565397fb499add3b233e88a442586d22b7d4d40434fb663b1bcc56a74850"
        },
        "downloads": -1,
        "filename": "aiohttp_pydantic-1.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a9fe61da34abdcbd9dd5769f502e825",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 24928,
        "upload_time": "2021-07-15T05:34:53",
        "upload_time_iso_8601": "2021-07-15T05:34:53.089028Z",
        "url": "https://files.pythonhosted.org/packages/27/8c/11f36aa609a5e781e865d5266ff0bff535275a7afd308e4c4c48393c3343/aiohttp_pydantic-1.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "420627af49cb819254404a81aeef6796eb7fd96cd045730cfb3eceec44be69f4",
        "md5": "3a49f7c95f92c80465f0670fec1b808e",
        "sha256": "49d6bd41880b02ece91c6e59108cdca0d503dbb2f8e04efbe638bd4f02b40aed"
      },
      "downloads": -1,
      "filename": "aiohttp_pydantic-1.12.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3a49f7c95f92c80465f0670fec1b808e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 19964,
      "upload_time": "2022-08-11T15:14:10",
      "upload_time_iso_8601": "2022-08-11T15:14:10.876265Z",
      "url": "https://files.pythonhosted.org/packages/42/06/27af49cb819254404a81aeef6796eb7fd96cd045730cfb3eceec44be69f4/aiohttp_pydantic-1.12.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}