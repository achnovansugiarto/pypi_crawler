{
  "info": {
    "author": "Leo Ertuna",
    "author_email": "leo.ertuna@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<p align=\"center\">\n  <a href=\"https://github.com/JPLeoRX/omoide-cache\"><img src=\"https://raw.githubusercontent.com/JPLeoRX/omoide-cache/master/logo_400x400.png\" alt=\"Omoide Cache\"></a>\n</p>\n\n# Omoide Cache - Simple in-memory cache solution\nCaching doesn't need to be hard anymore. With just a few lines of code **Omoide Cache** will instantly bring your Python services to the next level!\n\n---\n\n**Released Library**: [PyPI](https://pypi.org/project/omoide-cache/)\n\n**Source Code**: [GitHub](https://github.com/JPLeoRX/omoide-cache)\n\n**Tutorial №1**: [my blog](https://tekleo.net/blog/omoide-cache-introduction-quick-and-easy-caching-in-python) or [Medium](https://medium.com/@leo.ertuna/omoide-cache-introduction-quick-and-easy-caching-in-python-13389b41bbfd) \n\n---\n\n# Description\nThis is a robust, highly tunable and easy-to-integrate in-memory cache solution written in pure Python, with no dependencies.\n\nIt is designed to be a method level cache, wrapping around a single class method, using method call arguments as cache key and storing its return value. \n\nCustomizable to suit your specific use-case, provides various expiry and refresh options.\n\nVery user-friendly, super easy to integrate with a simple decorator (i.e. annotation, for those coming from Java), no need to add complicated logic into your code, just use `@omoide_cache()` on top of any method in your services. It will auto-generate a cache for your method with default settings. You can further adjust these settings through decorator parameters.\n\n### When to use?\n- You got a heavy call to the data source, where the data is read way more often than it is updated.\n- You have CPU intensive computation logic, that takes a few seconds to complete, but can is frequently called with same input parameters.\n\n### When not to use?\n- On methods that are not expected to be frequently called with the same arguments (e.g. image processing / OCR / ML models with image inputs)\n- On methods that return new values each time they are called, even with the same arguments.\n- When you expect argument objects or returned objects to take-up a lot of memory. Cache will quickly eat up your ram if you don't setup expiry modes properly.\n- Functions that are declared outside of class is a no go.  \n\nFair warning - this project is in the earliest stage of its lifecycle, there will be a lot of improvement and bug fixes in the future. All suggestions and bug reports are highly welcome!\n\n# Installation\n\n## Normal installation\n```bash\npip install omoide-cache\n```\n\n## Development installation\n```bash\ngit clone https://github.com/jpleorx/omoide-cache.git\ncd omoide-cache\npip install --editable .\n```\n\n# Examples\n#### 1 - Basic usage example\n```python\nimport time\nfrom omoide_cache import omoide_cache\n\n\n# A class where cache was added to a simulated long running method\nclass ExampleService:\n    @omoide_cache()\n    def time_consuming_method(self, x: int) -> int:\n        time.sleep(2.0)\n        return x * x\n\n\nservice = ExampleService()\n\n# The first call will execute real logic and store the result in cache\nservice.time_consuming_method(1)\n\n# The second call will get results from cache\nservice.time_consuming_method(1)\n```\n\n#### 2 - Example with size limit\nHere we add a cache that will drop an item least frequently accessed when the cache becomes too large.\n```python\nimport time\nfrom omoide_cache import omoide_cache, ExpireMode\n\n\nclass ExampleService:\n    @omoide_cache(max_allowed_size=10, size_expire_mode=ExpireMode.ACCESS_COUNT_BASED)\n    def time_consuming_method(self, x: int) -> int:\n        time.sleep(2.0)\n        return x * x\n```\n\n#### 3 - Example with timed expiry\nHere the cache will automatically remove items that were last accessed more than 2 minutes ago.\n```python\nimport time\nfrom omoide_cache import omoide_cache\n\n\nclass ExampleService:\n    @omoide_cache(expire_by_access_duration_s=120)\n    def time_consuming_method(self, x: int) -> int:\n        time.sleep(2.0)\n        return x * x\n```\nAlternatively we can remove items that were computed more than 2 minutes ago.\n```python\nimport time\nfrom omoide_cache import omoide_cache\n\n\nclass ExampleService:\n    @omoide_cache(expire_by_computed_duration_s=120)\n    def time_consuming_method(self, x: int) -> int:\n        time.sleep(2.0)\n        return x * x\n```\n\n#### 4 - Example with async refresh\nHere the cache will asynchronously refresh items that were computed more than 2 minutes ago. Attempt to refresh will be performed every 10 seconds.\n```python\nimport time\nfrom omoide_cache import omoide_cache, RefreshMode\n\n\nclass ExampleService:\n    @omoide_cache(refresh_duration_s=120, refresh_period_s=10, refresh_mode=RefreshMode.INDEPENDENT)\n    def time_consuming_method(self, x: int) -> int:\n        time.sleep(2.0)\n        return x * x\n```\n\n# Known bugs\n* You need to use the decorator with parentheses all the time, even when you don't specify any arguments, so use `@omoide_cache()`, but not `@omoide_cache`. I honestly have no fucking idea why there's this weird behaviour in decorators, will do my best to fix it in future updates.\n\n# Links\nIn case you’d like to check my other work or contact me:\n* [Personal website](https://tekleo.net/)\n* [GitHub](https://github.com/jpleorx)\n* [PyPI](https://pypi.org/user/JPLeoRX/)\n* [DockerHub](https://hub.docker.com/u/jpleorx)\n* [Articles on Medium](https://medium.com/@leo.ertuna)\n* [LinkedIn (feel free to connect)](https://www.linkedin.com/in/leo-ertuna-14b539187/)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/omoide-cache/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jpleorx/omoide-cache",
    "keywords": "cache,decorator,annotation,in-memory",
    "license": "Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "omoide-cache",
    "package_url": "https://pypi.org/project/omoide-cache/",
    "platform": null,
    "project_url": "https://pypi.org/project/omoide-cache/",
    "project_urls": {
      "Download": "https://pypi.org/project/omoide-cache/",
      "Homepage": "https://github.com/jpleorx/omoide-cache"
    },
    "release_url": "https://pypi.org/project/omoide-cache/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Robust, highly tunable and easy-to-integrate in-memory cache solution written in pure Python, with no dependencies.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14325170,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78a7f3eeedd4e3721b294805dcb72a2866316bc1cc71baac2e369c83676cf536",
          "md5": "05331e10dc6bcb8c1b880d9d1b6211ab",
          "sha256": "c0c0ff7d96181e0618e4f5f042563c1cf133da9b56e270160e3ae56df7cce508"
        },
        "downloads": -1,
        "filename": "omoide_cache-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05331e10dc6bcb8c1b880d9d1b6211ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25468,
        "upload_time": "2021-08-01T00:47:17",
        "upload_time_iso_8601": "2021-08-01T00:47:17.907940Z",
        "url": "https://files.pythonhosted.org/packages/78/a7/f3eeedd4e3721b294805dcb72a2866316bc1cc71baac2e369c83676cf536/omoide_cache-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72a0a84b0148b5c3fa7db6ad055057e977b7a20bb14526c8b63b766a37ee7fd5",
          "md5": "a7f1653f7f45a3f0ce0e94a9a3b6bdac",
          "sha256": "bb9271ac055b3c099c4fa34542fa235930d511b86018a4341ba3265e00159923"
        },
        "downloads": -1,
        "filename": "omoide-cache-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7f1653f7f45a3f0ce0e94a9a3b6bdac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19816,
        "upload_time": "2021-08-01T00:47:20",
        "upload_time_iso_8601": "2021-08-01T00:47:20.536460Z",
        "url": "https://files.pythonhosted.org/packages/72/a0/a84b0148b5c3fa7db6ad055057e977b7a20bb14526c8b63b766a37ee7fd5/omoide-cache-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc152309bf5c2c8fd8e2ea2520e8863c8c5b56c9d3312cf3af70477b3a7b9423",
          "md5": "8ec80397c47d5770d125758429e96278",
          "sha256": "f008933f406e120084ab7edda487fd46929e5788b207cb5d47c72823770b40da"
        },
        "downloads": -1,
        "filename": "omoide_cache-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ec80397c47d5770d125758429e96278",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24486,
        "upload_time": "2021-08-01T00:58:27",
        "upload_time_iso_8601": "2021-08-01T00:58:27.814716Z",
        "url": "https://files.pythonhosted.org/packages/bc/15/2309bf5c2c8fd8e2ea2520e8863c8c5b56c9d3312cf3af70477b3a7b9423/omoide_cache-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b26c5641ce20fef8116523bb096be25bbd342dc0b6d94cb2a3d01871cc5c756",
          "md5": "cfa31adf3e814dd67ade276b2d0415b4",
          "sha256": "4a7b36444ba6b2a409cf792922beca442ba1a731f1daa83b02ef1057e118ffeb"
        },
        "downloads": -1,
        "filename": "omoide-cache-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cfa31adf3e814dd67ade276b2d0415b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20781,
        "upload_time": "2021-08-01T00:58:29",
        "upload_time_iso_8601": "2021-08-01T00:58:29.454789Z",
        "url": "https://files.pythonhosted.org/packages/9b/26/c5641ce20fef8116523bb096be25bbd342dc0b6d94cb2a3d01871cc5c756/omoide-cache-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c90853dba5edb5bca62225df5b41150c44f56dccc816f1ed10a878b01e0ba2e6",
          "md5": "b6a622293ac775143493d5ae7b678d87",
          "sha256": "693f902e85c053328d4d131b16bcaf0e5ee3f9609caae51a08fc30bb4134e71d"
        },
        "downloads": -1,
        "filename": "omoide_cache-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6a622293ac775143493d5ae7b678d87",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24810,
        "upload_time": "2021-09-28T22:34:36",
        "upload_time_iso_8601": "2021-09-28T22:34:36.488967Z",
        "url": "https://files.pythonhosted.org/packages/c9/08/53dba5edb5bca62225df5b41150c44f56dccc816f1ed10a878b01e0ba2e6/omoide_cache-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cb76bc160dbc2fa99e12977935de7ab05efd43e8cef6a8e86e21e770badf576",
          "md5": "177837f3b21f078797f4a18da605ba38",
          "sha256": "c7d51dc048373860e7a261c57c5590d46359674c0c48b172fccf99bbd4ffcf57"
        },
        "downloads": -1,
        "filename": "omoide-cache-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "177837f3b21f078797f4a18da605ba38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21186,
        "upload_time": "2021-09-28T22:34:39",
        "upload_time_iso_8601": "2021-09-28T22:34:39.148428Z",
        "url": "https://files.pythonhosted.org/packages/4c/b7/6bc160dbc2fa99e12977935de7ab05efd43e8cef6a8e86e21e770badf576/omoide-cache-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f960f9c1719a3d11b4f120ab69f2a5de7069394c86fb748fc2b1cd92ff535be",
          "md5": "f5aa59b29f1cb7e3a8bae5863f2d2a04",
          "sha256": "b686685c08e66667c9b89a7895bee6f5ba42be4023e266a0ea38563fcaa2b4e7"
        },
        "downloads": -1,
        "filename": "omoide_cache-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5aa59b29f1cb7e3a8bae5863f2d2a04",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29609,
        "upload_time": "2022-07-03T23:03:09",
        "upload_time_iso_8601": "2022-07-03T23:03:09.534100Z",
        "url": "https://files.pythonhosted.org/packages/6f/96/0f9c1719a3d11b4f120ab69f2a5de7069394c86fb748fc2b1cd92ff535be/omoide_cache-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ad9f7aae0095603a30df0de63c033b0f9f4ebc626dff61ccd57a0d5fceaf69b",
          "md5": "617b45c148c09b5c0de345868cd5986d",
          "sha256": "24ed0fc7581b982b7a5d30a673e55abff7876b41459aaa9e6ed8e8fd9473ac64"
        },
        "downloads": -1,
        "filename": "omoide-cache-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "617b45c148c09b5c0de345868cd5986d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23422,
        "upload_time": "2022-07-03T23:03:11",
        "upload_time_iso_8601": "2022-07-03T23:03:11.986182Z",
        "url": "https://files.pythonhosted.org/packages/1a/d9/f7aae0095603a30df0de63c033b0f9f4ebc626dff61ccd57a0d5fceaf69b/omoide-cache-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f960f9c1719a3d11b4f120ab69f2a5de7069394c86fb748fc2b1cd92ff535be",
        "md5": "f5aa59b29f1cb7e3a8bae5863f2d2a04",
        "sha256": "b686685c08e66667c9b89a7895bee6f5ba42be4023e266a0ea38563fcaa2b4e7"
      },
      "downloads": -1,
      "filename": "omoide_cache-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f5aa59b29f1cb7e3a8bae5863f2d2a04",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 29609,
      "upload_time": "2022-07-03T23:03:09",
      "upload_time_iso_8601": "2022-07-03T23:03:09.534100Z",
      "url": "https://files.pythonhosted.org/packages/6f/96/0f9c1719a3d11b4f120ab69f2a5de7069394c86fb748fc2b1cd92ff535be/omoide_cache-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ad9f7aae0095603a30df0de63c033b0f9f4ebc626dff61ccd57a0d5fceaf69b",
        "md5": "617b45c148c09b5c0de345868cd5986d",
        "sha256": "24ed0fc7581b982b7a5d30a673e55abff7876b41459aaa9e6ed8e8fd9473ac64"
      },
      "downloads": -1,
      "filename": "omoide-cache-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "617b45c148c09b5c0de345868cd5986d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23422,
      "upload_time": "2022-07-03T23:03:11",
      "upload_time_iso_8601": "2022-07-03T23:03:11.986182Z",
      "url": "https://files.pythonhosted.org/packages/1a/d9/f7aae0095603a30df0de63c033b0f9f4ebc626dff61ccd57a0d5fceaf69b/omoide-cache-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}