{
  "info": {
    "author": "Frank S. Hestvik",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n# flagrs\n\nThis is an experimental project parallel to my\n[PyNTL](https://gitlab.com/franksh/pyntl) project where I attempt to reimplement\nparts from my `flagmining` library as CPython extension code in Rust.\n\nIs designed to be fast. Uses the `rug` library as a lightweight wrapper around\nGMP.\n\nDue to some lacking functionality in `rust-cpython==0.6.0` it depends on my own\nfork of said project, so you probably won't be able to compile it.\n\n# ZZ : â„¤\n\n## Normal Integer Operations\n\n### `x+y -> n`, `x-y -> n`, `x*y -> n`\n\nNormal addition, subtraction, and multiplication.\n\n### `x//y -> q`, `x%y -> r`, `divmod(x,y) -> (q,r)`\n\nIntegers act Euclidean.\n\n### `x**e`, `pow(x,e)`\n\nNormal exponentiation. `e` must be a natural number (i.e. non-negative integer).\n\n### `bool(x)`, `x.__bool__() -> bool`\n\nNumbers are true if they're non-zero.\n\n### `n.sqrt() -> (w,r)`\n\nFloored integer square root with remainder. `w*w + r == n`.\n\n### `n.root(d) -> (w,r)`\n\nFloored integer `d`th root with remainder. `w**d + r == n`.\n\n### `-x`\n\nNegation.\n\n### `abs(x)`\n\nAbsolute value.\n\n### `x.sign() -> s`\n\nThe sign (also called signum) of `x` (-1, 0, or 1).\n\n\n## Bitwise Operations\n\n### `x|y`, `x&y`, `x^y`\n\nBitwise OR, AND, and XOR.\n\n### `~x`\nBitwise negation, acting as if the integer had infinite width. Equivalent to `-x-1`.\n\n### `x<<i`, `x>>i`\nBit shifts (can be negative).\n\n### `n.nbits() -> c`\nNumber of bits needed to represent the absolute value of `n`.\n\nA synonym for `n.bit_length()` or `len(n)`.\n\n### `n.weight() -> c`\nNumber of bits set in the absolute value of `n`.\n\n### `n.truncate(bits, [signed=False])`\n\nTruncate `n` to the given number of bits. Negative numbers are treated as if\nthey're in two's-complement form for the given bit width.\n\nIf `signed` is `True` the resulting bits will be re-interpreted as a signed\nvalue and so the result might be negative.\n\n### `n.next_bit() -> b`\n\nNext power-of-two bigger than `n`.\n\n### `list(n) -> [bool...]`.\n\nIntegers also function implicitly as a list of bits, from least significant to most significant.\n\n``` python-console\n>>> list(ZZ(256+16+1))\n[True, False, False, False, True, False, False, False, True]\n```\n\n### `n[i] -> bool`\nChecks bit `i` (0-indexed).\n\n### `n[i:j] -> v`\n\nReturns a number with the bits set in the slice.\n\nMorally equivalent to `(n>>i) % (1<<j-i)` but supports full slice syntax, including negative numbers.\n\nTODO: `rust-cpython` doesn't have PySlice objects!\n\n## Representation\n\n### `str(x) -> str`, `x.__repr__()`\nNumber in base-10 as a text string.\n\n### `x.nbytes() -> l`\nNumber of bytes needed to represent the number. For positive numbers this is\nequivalent to `(x.nbits() + 7)//8`. Negative numbers might require an extra\nbit (see `x.bytes()`).\n\n### `x.bytes([order='big']) -> bytes`\nInterprets the number as base-256 and returns the digits as a bytestring.\n\nNegative numbers are treated as if they're in two's complement representation\nof the minimum bit width that will successfully represent them, so `-128`\ngives `b'\\x80'` and `-129` gives `b'\\xff\\x7f'`.\n\n### `x.digits(base) -> [d...]`\nYields a list of digits in base `base`. The base can be negative, but must have a magnitude of 2 or more.\n\n## Modular Arithmetic\n\n### `n.inv_mod(m) -> r`\nReturns $1/n \\pmod m$.\n\n### `pow(x,e,m)`\nExponentiation under a modulus. `e` can be negative if `gcd(x,m) == 1`.\n\n### `a.kronecker(n) -> k`\n\nKronecker symbol $$(\\frac{a}{n})$$. For primes it corresponds to the Legendre symbol.\n\n### `m.M -> <ZMod type>`\n\nAccess to the modular numbers using the given number as modulus. See below for `ZMod`.\n\n``` python-console\n>>> F = ZZ(13).M\n>>> F(3) * 5\n(2)\n```\n\n## Factors\n\n### `n.gcd(m...) -> g`\nReturns the GCD of `n` with all arguments.\n\n### `n.egcd(m) -> (g,x,y)`\nExtended GCD yielding BeÌzout coefficients. `x*n + m*y == g`.\n\n### `n.lcm(m...) -> m`\nReturns the LCM of `n` with all arguments.\n\n### `n.is_prime([reps=25]) -> bool`\nTrivial divisors, then Baille-PSW, then $(reps-24)$ rounds of Miller-Rabin.\n\n### `n.next_prime() -> p`\nReturns the next prime larger than `n`.\n\n### `n.make_odd() -> (q,e)`\nReturns the odd part and exponent of 2 in `n`. `2**e * q == n`\n\n### `n.small_factors([upto=0x100000]) -> (q,[(p,e)...])`\nFactors out all primes smaller than `upto`.\n\nReturns the remaining factor `q` and a list of primes and their multiplicity.\n\n### `x.factor_pollard(upto)`\n...\n### `x.factor_fermat(s, e)`\n...\n\n\n# ZMod : â„¤_n\n\nRepresents the residue ring (or field) of integers under a given modulus. The\nnormal arithmetic works as expected. In cases where a field is required for the\noperation to be well-defined, the code will simply assume the user knows what\nthey're doing and operate under the assumption that it is (i.e. that the modulus\nis prime).\n\n### `x/y -> z`\n\nNormal division works as expected:\n\n``` python-console\n>>> F = ZMod(17)\n>>> F(5)/2\n(11)\n>>> F(11)*2\n(5)\n```\n\n### `x**e -> y`\n\nExponentiation also works as expected:\n\n``` python-console\n>>> ZMod(17179)(2)**0xdeadcafe\n(14537)\n```\n\n### `p.EC(a,b) -> <EC type>`\n\nAccess to the additive group of an Elliptic Curve using this modulus.\n\n# EC : Ellipic Curves\n\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/franksh/flagrs/",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flagrs",
    "package_url": "https://pypi.org/project/flagrs/",
    "platform": "",
    "project_url": "https://pypi.org/project/flagrs/",
    "project_urls": {
      "Homepage": "https://gitlab.com/franksh/flagrs/",
      "Source Code": "https://gitlab.com/franksh/flagrs/"
    },
    "release_url": "https://pypi.org/project/flagrs/0.1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Rust Number Theory",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11489331,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "856449c193fb624fcb3e6e64315049930e0a8043d0a887c90e05da6618f1ccc6",
          "md5": "696787af8c8535ec512b50944d904456",
          "sha256": "eba54d0337d56650fca22975eaf1fe5f8b0183e4de2acf84a31aec9b85466b21"
        },
        "downloads": -1,
        "filename": "flagrs-0.1.0-cp37-cp37m-manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "696787af8c8535ec512b50944d904456",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 374349,
        "upload_time": "2021-09-16T17:53:25",
        "upload_time_iso_8601": "2021-09-16T17:53:25.299959Z",
        "url": "https://files.pythonhosted.org/packages/85/64/49c193fb624fcb3e6e64315049930e0a8043d0a887c90e05da6618f1ccc6/flagrs-0.1.0-cp37-cp37m-manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1504748c0ee2b95a7fe5fe7640d3312d828faa472693a4ec4838473caa18d269",
          "md5": "7a2f3a5c6429e18a5d167085155c6653",
          "sha256": "d3ae8e709394e2fa1fd07b6f60419fca36129f22e377ec4eb28740ba032f2ac9"
        },
        "downloads": -1,
        "filename": "flagrs-0.1.0-cp38-cp38-manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "7a2f3a5c6429e18a5d167085155c6653",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 374343,
        "upload_time": "2021-09-16T17:53:27",
        "upload_time_iso_8601": "2021-09-16T17:53:27.748136Z",
        "url": "https://files.pythonhosted.org/packages/15/04/748c0ee2b95a7fe5fe7640d3312d828faa472693a4ec4838473caa18d269/flagrs-0.1.0-cp38-cp38-manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ac711643680d07731dc5e91348cffb46c7a9ec14c08383316775c3c3541a2cc",
          "md5": "57f7197b75c924f5b6fdc6d8f4cb6a53",
          "sha256": "dd6f48542e35c1e1b4fe1b864ef5733255dfd1fb5ada762c9b721686038e8dbe"
        },
        "downloads": -1,
        "filename": "flagrs-0.1.0-cp39-cp39-manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "57f7197b75c924f5b6fdc6d8f4cb6a53",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 374348,
        "upload_time": "2021-09-16T17:53:29",
        "upload_time_iso_8601": "2021-09-16T17:53:29.878788Z",
        "url": "https://files.pythonhosted.org/packages/4a/c7/11643680d07731dc5e91348cffb46c7a9ec14c08383316775c3c3541a2cc/flagrs-0.1.0-cp39-cp39-manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c6af35f1584acad8b94fc3e713e7aedb1a830c3f0ac7a20b4a338e657f6bb54",
          "md5": "9e75085730a909262822ffb55d8b56af",
          "sha256": "4a9171987fd0dbdbea8b7229f768454d4e487e81cb36fd550a335405031200e9"
        },
        "downloads": -1,
        "filename": "flagrs-0.1.2-cp37-cp37m-manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "9e75085730a909262822ffb55d8b56af",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 391140,
        "upload_time": "2021-09-17T00:58:11",
        "upload_time_iso_8601": "2021-09-17T00:58:11.484937Z",
        "url": "https://files.pythonhosted.org/packages/9c/6a/f35f1584acad8b94fc3e713e7aedb1a830c3f0ac7a20b4a338e657f6bb54/flagrs-0.1.2-cp37-cp37m-manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27277a39ab043d7c0105b67c4ee86da441ee9360cf9c9b980fc4e42be0a461ae",
          "md5": "b59389430c07f42ceb0570a2a6b97e89",
          "sha256": "8b8299d83ea30c98a30bdb1682cb7133f1e23bb500e9a91b37039a0b35dc1235"
        },
        "downloads": -1,
        "filename": "flagrs-0.1.2-cp38-cp38-manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "b59389430c07f42ceb0570a2a6b97e89",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 391138,
        "upload_time": "2021-09-17T00:58:13",
        "upload_time_iso_8601": "2021-09-17T00:58:13.362406Z",
        "url": "https://files.pythonhosted.org/packages/27/27/7a39ab043d7c0105b67c4ee86da441ee9360cf9c9b980fc4e42be0a461ae/flagrs-0.1.2-cp38-cp38-manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "887727628d8e9d49502a3352cd2829bca8d523a27abc9b302b74227f4da47916",
          "md5": "80c951c15a86bbd7d4dd69c0e0bd4f9b",
          "sha256": "b384e51012a356ec0d6e10f975a998e6a27ebde63297adb48037ab65d48f92c4"
        },
        "downloads": -1,
        "filename": "flagrs-0.1.2-cp39-cp39-manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "80c951c15a86bbd7d4dd69c0e0bd4f9b",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 391147,
        "upload_time": "2021-09-17T00:58:15",
        "upload_time_iso_8601": "2021-09-17T00:58:15.145631Z",
        "url": "https://files.pythonhosted.org/packages/88/77/27628d8e9d49502a3352cd2829bca8d523a27abc9b302b74227f4da47916/flagrs-0.1.2-cp39-cp39-manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "610a790e6adf47aac99f322b96881f29cb929015a3b43ea13635716eaa22e734",
          "md5": "c73d8a48300eef4f92966ef21abdf1da",
          "sha256": "7be1530e6597233aac6c9b37d7ea5520f068902b1157681e7492c13605aa504e"
        },
        "downloads": -1,
        "filename": "flagrs-0.1.4-cp37-cp37m-manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "c73d8a48300eef4f92966ef21abdf1da",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 414829,
        "upload_time": "2021-09-19T04:44:07",
        "upload_time_iso_8601": "2021-09-19T04:44:07.797116Z",
        "url": "https://files.pythonhosted.org/packages/61/0a/790e6adf47aac99f322b96881f29cb929015a3b43ea13635716eaa22e734/flagrs-0.1.4-cp37-cp37m-manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d838fe6ba7e35e1ced27a7906af166c3a6066dd8bc4c0f2d0e7c346796259c0b",
          "md5": "75d77dc6d7b12de532461c24fdede627",
          "sha256": "001550bd5e2be348b238eb9be733f1a03598e33fdd5dc2defbcad887c0332dda"
        },
        "downloads": -1,
        "filename": "flagrs-0.1.4-cp38-cp38-manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "75d77dc6d7b12de532461c24fdede627",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 414816,
        "upload_time": "2021-09-19T04:44:09",
        "upload_time_iso_8601": "2021-09-19T04:44:09.954118Z",
        "url": "https://files.pythonhosted.org/packages/d8/38/fe6ba7e35e1ced27a7906af166c3a6066dd8bc4c0f2d0e7c346796259c0b/flagrs-0.1.4-cp38-cp38-manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b66ed51494a0b0e68f1b6ffaf59cc83755f936f0d7ca836c454a4dd59a19c27",
          "md5": "a195f79a5305fb38699a3da6b3028070",
          "sha256": "959e34f890bae63624880b94dd62a12afc68070d155c71ea5ec07b72419b77d7"
        },
        "downloads": -1,
        "filename": "flagrs-0.1.4-cp39-cp39-manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "a195f79a5305fb38699a3da6b3028070",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 414863,
        "upload_time": "2021-09-19T04:44:12",
        "upload_time_iso_8601": "2021-09-19T04:44:12.203282Z",
        "url": "https://files.pythonhosted.org/packages/0b/66/ed51494a0b0e68f1b6ffaf59cc83755f936f0d7ca836c454a4dd59a19c27/flagrs-0.1.4-cp39-cp39-manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "610a790e6adf47aac99f322b96881f29cb929015a3b43ea13635716eaa22e734",
        "md5": "c73d8a48300eef4f92966ef21abdf1da",
        "sha256": "7be1530e6597233aac6c9b37d7ea5520f068902b1157681e7492c13605aa504e"
      },
      "downloads": -1,
      "filename": "flagrs-0.1.4-cp37-cp37m-manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "c73d8a48300eef4f92966ef21abdf1da",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 414829,
      "upload_time": "2021-09-19T04:44:07",
      "upload_time_iso_8601": "2021-09-19T04:44:07.797116Z",
      "url": "https://files.pythonhosted.org/packages/61/0a/790e6adf47aac99f322b96881f29cb929015a3b43ea13635716eaa22e734/flagrs-0.1.4-cp37-cp37m-manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d838fe6ba7e35e1ced27a7906af166c3a6066dd8bc4c0f2d0e7c346796259c0b",
        "md5": "75d77dc6d7b12de532461c24fdede627",
        "sha256": "001550bd5e2be348b238eb9be733f1a03598e33fdd5dc2defbcad887c0332dda"
      },
      "downloads": -1,
      "filename": "flagrs-0.1.4-cp38-cp38-manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "75d77dc6d7b12de532461c24fdede627",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": null,
      "size": 414816,
      "upload_time": "2021-09-19T04:44:09",
      "upload_time_iso_8601": "2021-09-19T04:44:09.954118Z",
      "url": "https://files.pythonhosted.org/packages/d8/38/fe6ba7e35e1ced27a7906af166c3a6066dd8bc4c0f2d0e7c346796259c0b/flagrs-0.1.4-cp38-cp38-manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b66ed51494a0b0e68f1b6ffaf59cc83755f936f0d7ca836c454a4dd59a19c27",
        "md5": "a195f79a5305fb38699a3da6b3028070",
        "sha256": "959e34f890bae63624880b94dd62a12afc68070d155c71ea5ec07b72419b77d7"
      },
      "downloads": -1,
      "filename": "flagrs-0.1.4-cp39-cp39-manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "a195f79a5305fb38699a3da6b3028070",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": null,
      "size": 414863,
      "upload_time": "2021-09-19T04:44:12",
      "upload_time_iso_8601": "2021-09-19T04:44:12.203282Z",
      "url": "https://files.pythonhosted.org/packages/0b/66/ed51494a0b0e68f1b6ffaf59cc83755f936f0d7ca836c454a4dd59a19c27/flagrs-0.1.4-cp39-cp39-manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}