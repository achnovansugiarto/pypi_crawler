{
  "info": {
    "author": "KawanSoft",
    "author_email": "contact@kawansoft.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Database",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "![GitHub top language](https://img.shields.io/github/languages/top/kawansoft/aceql-http-client-python) \r\n![GitHub issues](https://img.shields.io/github/issues/kawansoft/aceql-http-client-python) \r\n\r\n![PyPI - Downloads](https://img.shields.io/pypi/dm/aceql)\r\n![GitHub](https://img.shields.io/github/license/kawansoft/aceql-http-client-python) \r\n\r\n![PyPI](https://img.shields.io/pypi/v/aceql)\r\n![PyPI - Implementation](https://img.shields.io/pypi/implementation/aceql)\r\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/aceql)\r\n![PyPI - Format](https://img.shields.io/pypi/format/aceql)\r\n![PyPI - Status](https://img.shields.io/pypi/status/aceql)\r\n\r\n![GitHub last commit (branch)](https://img.shields.io/github/last-commit/kawansoft/aceql-http-client-python/master) \r\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/945858b13a75453c9701f7fe195ec0d7)](https://www.codacy.com/gh/kawansoft/aceql-http-client-python?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=kawansoft/aceql-http-client-python&amp;utm_campaign=Badge_Grade)\r\n![GitHub contributors](https://img.shields.io/github/contributors/kawansoft/aceql-http-client-python)\r\n\r\n# AceQL HTTP \r\n\r\n## Python Client SDK v5.7.2 - User Guide \r\n\r\n## March 2, 2023\r\n\r\n<img src=\"https://docs.aceql.com/img/AceQL-Schema-min.jpg\" alt=\"AceQL Draw\"/>\r\n\r\n   * [Fundamentals](#fundamentals)\r\n      * [License](#license)\r\n      * [Python Versions &amp; DB-API 2.0](#python-versions--db-api-20)\r\n      * [AceQL Server side compatiblity](#aceql-server-side-compatiblity)\r\n      * [Installation](#installation)\r\n      * [Data transport](#data-transport)\r\n      * [Best practices for fast response time](#best-practices-for-fast-response-time)\r\n      * [Datatypes](#datatypes)\r\n   * [Usage](#usage)\r\n      * [Quickstart](#quickstart)\r\n      * [Handling Exceptions](#handling-exceptions)\r\n         * [The error type](#the-error-type)\r\n         * [Most common AceQL server messages](#most-common-aceql-server-messages)\r\n         * [HTTP Status Codes](#http-status-codes)\r\n      * [Advanced Usage](#advanced-usage)\r\n         * [Managing NULL values](#managing-null-values)\r\n            * [Setting NULL values](#setting-null-values)\r\n            * [Reading NULL values](#reading-null-values)\r\n         * [Transactions](#transactions)\r\n         * [Proxies](#proxies)\r\n         * [Timeouts](#timeouts)\r\n         * [BLOB management](#blob-management)\r\n            * [BLOB creation](#blob-creation)\r\n            * [BLOB reading](#blob-reading)\r\n            * [Managing BLOB upload progress](#managing-blob-upload-progress)\r\n         * [Calling AceQL Java stored procedures](#calling-aceql-java-stored-procedures)\r\n         * [Using outer authentication without a password  and with an AceQL Session ID](#using-outer-authentication-without-a-password-and-with-an-aceql-session-id)\r\n      * [Using the Metadata Query API](#using-the-metadata-query-api)\r\n         * [Downloading database schema into a file](#downloading-database-schema-into-a-file)\r\n         * [Accessing remote database main properties](#accessing-remote-database-main-properties)\r\n         * [Getting Details of Tables and Columns](#getting-details-of-tables-and-columns)\r\n\r\n\r\n# Fundamentals\r\n\r\nThis document describes how to use the AceQL SDK / module and gives some details about how it operates with the AceQL Server side.\r\n\r\nThe AceQL SDK / module allows you to wrap the [AceQL HTTP APIs](https://github.com/kawansoft/aceql-http/blob/master/aceql-http-user-guide-api.md)  to access remote SQL databases and/or SQL databases in the cloud by simply including standard Python SQL calls in your code, just like you would do for any local database. There is zero learning curve and usage is straightforward.\r\n\r\nThe AceQL Server operation is described in [AceQL HTTP Server Installation and Configuration Guide](https://github.com/kawansoft/aceql-http/blob/master/README.md), whose content is sometimes referred to in his User Guide.\r\n\r\nOn the remote side, like the AceQL Server access to the SQL database using Java JDBC, we will sometimes use the JDBC terminology (ResultSet, etc.) in this document. Nevertheless, knowledge of Java or JDBC is *not* a requirement.\r\n\r\n## License\r\n\r\nThe SDK is licensed with the liberal [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0) license.\r\n\r\n## Python Versions & DB-API 2.0\r\n\r\nThe module supports Python 3.7â€“3.11.\r\n\r\nThe module provides a SQL interface compliant with the DB-API 2.0 specification described by [**PEP 249**](https://www.python.org/dev/peps/pep-0249).\r\n\r\n## AceQL Server side compatiblity\r\n\r\nThis  SDK version requires AceQL HTTP server side v12.2+.  \r\n\r\n## Installation\r\n\r\n`pip install aceql`\r\n\r\n## Data transport\r\n\r\nHTTP requests parameters are transported in UTF-8 format and JSON format is used for data and class  transport\r\n\r\nAll requests are streamed:\r\n\r\n- Output requests (from the client side)  are streamed directly from the socket to the server to avoid buffering any     content body\r\n- Input responses (for the client side)   are streamed directly from the socket to the server to efficiently read     the response body\r\n\r\nLarge content (query results, Blobs/Clobs, etc.) is transferred using files. It is never loaded in memory. Streaming techniques are always used to read and write this content.\r\n\r\n## Best practices for fast response time\r\n\r\nEvery HTTP exchange between the client and server side is time-consuming, because the HTTP call is synchronous and waits for the server's response\r\n\r\nTry to avoid coding SQL calls inside loops, as this can reduce execution speed. Each SQL call will send an http request and wait for the response from the server.\r\n\r\nNote that AceQL is optimized as much as possible. A SELECT call returning a huge data volume will not consume memory on the server or client side:  AceQL uses input stream and output stream I/O for data  transfer.\r\n\r\nServer JDBC ResultSet retrieval is as fast as possible :\r\n\r\n- The ResultSet creation is done once on the server by the executeQuery.\r\n\r\n\r\n- The rows are all dumped at once on the servlet output stream by the server\r\n\r\n\r\n- The client side gets the ResultSet content as a file.\r\n\r\nAll data reading commands are executed locally on the client side with forward-only reading.\r\n\r\n**It is highly recommended to always use  `Cursor.executemany`  with autocommit off when you have many rows to INSERT or UPDATE.**\r\n\r\n## Datatypes\r\n\r\nThe main server side JDBC data types for columns are supported:\r\n\r\n`Boolean`, `Blob/Clob`, `Integer`, `Short`, `Double`,  `Float`, `BigDecimal`, `Long`, `String`, `Date`, `Time`, and `Timestamp`.\r\n\r\nNote that the AceQL module does not allow you to specify data types to use; data types are implicitly chosen by the module.\r\n\r\nParameter values are automatically converted to their SQL equivalent. The following Python types can thus be sent to remote server without any problem:\r\n\r\n| Python type / class                         | SQL type                                     |\r\n| ------------------------------------------- | -------------------------------------------- |\r\n| Tuple  (None, SqlNullType.&lt;SQL_TYPE&gt;) | NULL                                         |\r\n| str                                         | CHAR, VARCHAR                                |\r\n| int                                         | INTEGER, or BIGINT,  <br />depending on size |\r\n| bool                                        | BIT, BOOL                                    |\r\n| float                                       | REAL                                         |\r\n| date                                        | DATE                                         |\r\n| datetime                                    | TIMESTAMP                                    |\r\n| time                                        | TIME                                         |\r\n| File Object                                 | BLOB                                         |\r\n\r\nNULL and BLOB types are explained in Advanced Usage.\r\n\r\nThis is how SQL types are converted to Python types by default:\r\n\r\n| SQL type                                        | Python type / class |\r\n| ----------------------------------------------- | ------------------- |\r\n| NULL                                            | None                |\r\n| CHAR, VARCHAR                                   | str                 |\r\n| TINYINT, INTEGER                                | int                 |\r\n| BIGINT                                          | int                 |\r\n| BOOL, BIT                                       | bool                |\r\n| DATE                                            | date                |\r\n| DECIMAL, DOUBLE_PRECISION, FLOAT, NUMERIC, REAL | float               |\r\n| TIMESTAMP                                       | datetime            |\r\n| TIME                                            | time                |\r\n| BLOB                                            | Response stream     |\r\n\r\n# Usage\r\n\r\n## Quickstart\r\n\r\nTo use the module, just create a `Connection` object that represents the database:\r\n\r\n```python\r\nimport aceql\r\n\r\n# URL of the AceQL server, Remote SQL database name & authentication info\r\nurl = \"https://www.acme.com:9443/aceql\"\r\ndatabase = \"sampledb\"\r\nusername = \"user1\"\r\npassword = \"password1\"\r\n\r\nconnection = aceql.connect(url=url, username=username, password=password, database=database)\r\n```\r\n\r\nThe alternate syntax with parameters in the URL is supported:\r\n\r\n```python\r\nurl=\"https://www.acme.com:9443/aceql?username=user1&password=password1&database=sampledb\"\r\nconnection = aceql.connect(url=url)\r\n```\r\n\r\nThe schema of the database is here:  [sampledb](https://docs.aceql.com/rest/soft/7.0/src/sampledb_other_databases.txt)\r\n\r\nOnce you have a `Connection`, you can create a `Cursor` object and call its `execute()` method to perform SQL commands.\r\n\r\nFollowing sample shows how to insert 3 new customers using prepared statements:\r\n\r\n```python\r\nsql = \"insert into customer values (?, ?, ?, ?, ?, ?, ?, ?)\"\r\nparams = (1, 'Sir', 'John', 'Smith I', '1 Madison Ave', 'New York',\r\n          'NY 10010', '+1 212-586-7001')\r\ncursor.execute(sql, params)\r\nrows_inserted = cursor.rowcount\r\n\r\nsql = \"insert into customer values (?, ?, ?, ?, ?, ?, ?, ?)\"\r\nparams = (2, 'Sir', 'William', 'Smith II', '1 Madison Ave', 'New York',\r\n          'NY 10010', '+1 212-586-7002')\r\ncursor.execute(sql, params)\r\nrows_inserted += cursor.rowcount\r\n\r\nsql = \"insert into customer values (?, ?, ?, ?, ?, ?, ?, ?)\"\r\nparams = (3, 'Sir', 'William', 'Smith III', '1 Madison Ave', 'New York',\r\n          'NY 10010', '+1 212-586-7003')\r\ncursor.execute(sql, params)\r\nrows_inserted += cursor.rowcount\r\n\r\nprint(\"rows inserted: \" + str(rows_inserted))\r\n```\r\n\r\nwhich returns:\r\n\r\n```bash\r\nrows inserted: 3\r\n```\r\n\r\nThe `cursor.execute()`  sends the SQL order and the parameters to the server who executes it on.\r\n\r\nWe view the first inserted customer:\r\n\r\n```python\r\nsql = \"select * from customer where customer_id = ?\"\r\nparams = (1,)\r\ncursor.execute(sql, params)\r\nrow = cursor.fetchone()\r\nprint (row)\r\n```\r\n\r\nwhich returns:\r\n\r\n```bash\r\n(1, 'Sir ', 'John', 'Smith', '1 Madison Ave', 'New York', 'NY 10010  ', '+1 212-586-7000')\r\n```\r\n\r\nThe remote result set is downloaded into a file that is read line per line at each `Cursor.fetchone()` call.\r\n\r\nWe have access to the name and type of each column:\r\n\r\n```python\r\nfor desc in cursor.description:\r\n    print(desc[0] + \", \" + desc[1])\r\n```\r\n\r\nWhich returns:\r\n\r\n```\r\ncustomer_id, INTEGER\r\ncustomer_title, CHAR\r\nfname, VARCHAR\r\nlname, VARCHAR\r\naddressline, VARCHAR\r\ntown, VARCHAR\r\nzipcode, CHAR\r\nphone, VARCHAR\r\n```\r\n\r\nIt's recommended to close the `Cursor` at end of SELECT usage in order to release  the underlying file stream and delete the associated temp file:\r\n\r\n```python\r\ncursor.close()\r\n```\r\n\r\nWe view now all the customers and apply good practice to force the closing of `Cursor`:\r\n\r\n```python\r\nwith closing(connection.cursor()) as cursor:\r\n    sql = \"select * from customer where customer_id >= ? order by customer_id\"\r\n    params = (1,)\r\n    cursor.execute(sql, params)\r\n    print(\"rows: \" + str(cursor.rowcount))\r\n\r\n    rows = cursor.fetchall()\r\n\r\n    for row in rows:\r\n        print(row)\r\n```\r\n\r\nWhich returns:\r\n\r\n```bash\r\n(1, 'Sir ', 'John', 'Smith', '1 Madison Ave', 'New York', 'NY 10010  ', '+1 212-586-7001')\r\n(2, 'Sir ', 'William', 'Smith II', '1 Madison Ave', 'New York', 'NY 10010  ', '+1 212-586-7002')\r\n(3, 'Sir ', 'William', 'Smith III', '1 Madison Ave', 'New York', 'NY 10010  ', '+1 212-586-7003')\r\nrows: 3\r\n```\r\n\r\nAt end of our session, it is highly recommended to close the `Connection`:\r\n\r\n```python\r\n# Make sure connection is always closed in order to close and release\r\n# server connection into the pool:\r\nconnection.close()\r\n```\r\n\r\n## Handling Exceptions\r\n\r\nExcept for `TypeError`, Exceptions thrown are always an instance of `Error`\r\n\r\nThe `Error` contains 5 pieces of information:\r\n\r\n| Info             | Description                              |\r\n| :--------------- | :--------------------------------------- |\r\n| Reason           | The error message. Retrieved with `reason` property. |\r\n| Error Type       | See below for description. Retrieved with `error_type` property. |\r\n| Exception        | The original `Exception` that is the cause, if any. Retrieved with  `cause` property. |\r\n| Http Status Code | See below for description. Retrieved with `http_status_code` property. |\r\n| Server Exception | The Java Exception Stack Trace thrown on server side,  if any. Retrieved with `remote_stack_trace` property. |\r\n\r\n### The error type\r\n\r\nThe error type allows you to get the type of error, and where the error occurred. It is retrieved with the `Error.error_type` property.\r\n\r\n| Error Type  Value | Description                              |\r\n| :---------------: | :--------------------------------------- |\r\n|         0         | The error occurred locally on the client side.   See `http_status_code` property for more info.  Typical cases: no Internet connection, proxy  authentication required. |\r\n|         1         | The error is due to a JDBC Exception.  It was raised by the remote JDBC Driver and is rerouted  by AceQL as is.  The JDBC error message is accessible via `reason` property.  Typical case: an error in the SQL statement.  <br />Examples: wrong table or column name. |\r\n|         2         | The error was raised by the AceQL Server.  This means that the AceQL Server expected a value or  parameter that was not sent by the client side.  Typical cases: misspelling in URL parameter, missing  required request parameters,  JDBC  Connection expiration, etc.  The detailed error message is accessible via `reason` property.  See below for most common AceQL Server error  messages. |\r\n|         3         | The AceQL Server forbade the execution of the SQL  statement for a security reason.  For security reasons, `reason` property gives access to voluntarily vague  details. |\r\n|         4         | The AceQL Server is on failure and raised an  unexpected Java Exception.  The stack track is included and accessible via `remote_stack_trace` property. |\r\n\r\n###  Most common AceQL server messages\r\n\r\n| AceQL Sever  Error Messages   (Error.error_type  = 2)        |\r\n| ------------------------------------------------------------ |\r\n| AceQL main  servlet not found in path                        |\r\n| An error occurred  during Blob download                      |\r\n| An error occurred  during Blob upload                        |\r\n| Blob directory  defined in DatabaseConfigurator.getBlobDirectory() does not exist |\r\n| Connection is  invalidated (probably expired)                |\r\n| Database does not  exist                                     |\r\n| Invalid blob_id.  Cannot be used to create a file            |\r\n| Invalid blob_id.  No Blob corresponding to blob_id           |\r\n| Invalid  session_id                                          |\r\n| Invalid username  or password                                |\r\n| No action found  in request                                  |\r\n| Unable to get a  Connection                                  |\r\n| Unknown SQL  action or not supported by software             |\r\n\r\n### HTTP Status Codes\r\n\r\nThe HTTP Status Code is accessible with the `Error.http_status_code` property. The HTTP Status Code is 200 (OK) on successful completion calls.\r\n\r\nWhen an error occurs:\r\n\r\n- If error type is 0, the HTTP Status Code is returned by the client side and may take all possible values in a malformed HTTP call.\r\n\r\n- If error type is > 0, the HTTP Status Code can take one the following values returned by the server side:\r\n\r\n\r\n\r\n| HTTP  Status Code            | Description                              |\r\n| ---------------------------- | ---------------------------------------- |\r\n| 400  (BAD REQUEST)           | Missing element in URL path<br />Missing request parameters<br />All JDBC errors raised by the remote JDBC  Driver |\r\n| 401  (UNAUTHORIZED)          | Invalid username or password in connect<br />Invalid session_id<br />The AceQL Server forbade the execution of  the SQL statement for security reasons |\r\n| 404 (NOT_FOUND)              | BLOB directory does not exist on server<br />BLOB file not found on server |\r\n| 500  (INTERNAL_SERVER_ERROR) | The AceQL Server is on failure and raised  an unexpected Java Exception |\r\n\r\n## Advanced Usage\r\n\r\n### Managing NULL values\r\n\r\n#### Setting NULL values\r\n\r\n`NULL` values are handled in a specific way, because the remote server must know the type of the `NULL` value.\r\n\r\nTo create a `NULL` value parameter, create a tuple of 2 elements:\r\n\r\n- First value is `None`.\r\n- Second value is a one of the `SqlNullType` constants that defines the type of the parameter.\r\n\r\nThis 2 elements tuple is then inserted in the tuple of the prepared statement parameters:\r\n\r\n```python\r\nsql = \"insert into customer values (?, ?, ?, ?, ?, ?, ?, ?)\"\r\nparams = (4, 'Sir', 'William', 'Smith IV', '1 Madison Ave',\r\n          'New York', 'NY 10010', (None, SqlNullType.VARCHAR))\r\ncursor.execute(sql, params)\r\n```\r\n\r\n#### Reading NULL values\r\n\r\nA `NULL` column value is returned as `None`:\r\n\r\n```python\r\nsql = \"select * from customer_3 where customer_id = ? order by customer_id\"\r\nparams = (4,)\r\ncursor.execute(sql, params)\r\nrow = cursor.fetchone()\r\nprint (row)\r\n```\r\n\r\nExecution will return:\r\n\r\n```python\r\n(4, 'Sir ', 'William', 'Smith IV', '1 Madison Ave', 'New York', 'NY 10010  ', None)\r\n```\r\n\r\nIn this AceQL module version: there is no difference for string columns between a real NULL in the database and the ''NULL\" string.\r\n\r\n### Transactions\r\n\r\nTransactions are supported by the module. Because the remote server executes JDBC code, client code must follow the JDBC requirement to set the auto commit mode to false prior executing a transaction.\r\n\r\nThis is done with `Cursor.set_auto_commit(False)`. It is good practice to always reset auto commit mode to true at end of your transactions. Not that it auto commit mode state is undefined when a `Connection` is created with `aceql.connect()` call.\r\n\r\nTransaction example:\r\n\r\n```python\r\n# To do prior transaction\r\nself.connection.set_auto_commit(False)\r\n\r\ncursor = self.connection.cursor()\r\n\r\ntry:\r\n    # Create a Customer\r\n    sql = \"insert into customer values (?, ?, ?, ?, ?, ?, ?, ?)\"\r\n    params = (customer_id, 'Sir', 'John', 'Smith', '1 Madison Ave',\r\n              'New York', 'NY 10010', '+1 212-586-7000')\r\n    cursor.execute(sql, params)\r\n\r\n    # Create an Order for this Customer\r\n    sql = \"insert into orderlog values ( ?, ?, ?, ?, ?, ?, ?, ?, ? )\"\r\n\r\n    the_datetime = datetime.now()\r\n    the_date = the_datetime.date()\r\n\r\n    # (None, SqlNullType.BLOB) means to set the jpeg_image BLOB\r\n    # column to NULL on server:\r\n    params = (customer_id, item_id, \"Item Description\", 9999,\r\n              the_date, the_datetime, (None, SqlNullType.BLOB), 1, 2)\r\n    cursor.execute(sql, params)\r\n\r\n    self.connection.commit()\r\nexcept Error as e:\r\n    print(e)\r\n    self.connection.rollback()\r\n    raise e\r\nfinally:\r\n    self.connection.set_auto_commit(True) # Good practice\r\n    cursor.close()\r\n```\r\n\r\n### Proxies\r\n\r\nThe AceQL module support proxies, using  the [proxy](https://requests.readthedocs.io/en/master/user/advanced/#proxies) syntax of [Requests](https://requests.readthedocs.io/en/master/) The aceql module uses Requests for HTTP communications with the remote server. All options of a new AceQL connection are passed with the `ConnectionOptions` wrapper.\r\n\r\n```python\r\nimport aceql\r\nfrom aceql import ConnectionOptions\r\n\r\n# URL of the AceQL server, Remote SQL database name & authentication info\r\nurl = \"https://www.acme.com:9443/aceql\"\r\ndatabase = \"sampledb\"\r\nusername = \"user1\"\r\npassword = \"password1\"\r\n\r\nproxies = {\r\n    'http': 'http://10.10.1.10:3128',\r\n    'https': 'http://10.10.1.10:1080',\r\n}\r\n\r\n# We use the ConnectionOptions wrapper class to pass the proxies\r\nconnection_options = ConnectionOptions(proxies=proxies)\r\nconnection = aceql.connect(url=url, username=username, password=password, database=database,\r\n                           connection_options=connection_options)\r\n```\r\n\r\nAuthenticated proxies are supported.  Just create an `aceql.ProxyAuth`  instance and pass it to `aceql.connect()` with the `ConnectionOptions` wrapper.\r\n\r\n```python\r\nimport aceql\r\nfrom aceql import ConnectionOptions\r\nfrom aceql import ProxyAuth\r\nfrom samples import my_proxy\r\n\r\n# URL of the AceQL server, Remote SQL database name & authentication info\r\nurl = \"https://www.acme.com:9443/aceql\"\r\ndatabase = \"sampledb\"\r\nusername = \"user1\"\r\npassword = \"password1\"\r\n\r\nproxies = {\r\n    \"http\": \"http://localhost:8081\",\r\n}\r\n\r\n# Get the proxy credentials with our own application methods\r\nproxy_username = my_proxy.get_username()\r\nproxy_password = my_proxy.get_password()\r\n\r\n# The AceQL ProxyAuth class allows to define the proxy credentials\r\nauth = ProxyAuth(proxy_username, proxy_password)\r\n\r\n# We use the ConnectionOptions wrapper class to pass both the proxies & the auth\r\nconnection_options = ConnectionOptions(proxies=proxies, auth=auth)\r\nconnection = aceql.connect(url=url, username=username, password=password, database=database,\r\n                           connection_options=connection_options)\r\n```\r\n\r\nThe AceQL module uses  [requests-toolbelt](https://pypi.python.org/pypi/requests-toolbelt)  for authenticated proxy management.\r\n\r\n### Timeouts\r\n\r\nUse the `timeout` parameter of `ConnectionOptions` to pass a timeout value  in the  [Requests Timeouts](https://requests.readthedocs.io/en/master/user/advanced/#timeouts) format.\r\n\r\nIf no timeout is specified explicitly, requests do not time out.  \r\n\r\n```python\r\nconnection_options = ConnectionOptions(timeout=10)\r\nconnection = aceql.connect(url=url, username=username, password=password, database=database,\r\n                           connection_options=connection_options)\r\n```\r\n\r\n### BLOB management\r\n\r\nThe AceQL module supports BLOB creation and reading. Methods are implemented using streaming techniques to keep low memory consumption. CLOBs are not supported in this version.\r\n\r\n#### BLOB creation\r\n\r\nBLOB creation is supported by passing a tuple with a File Object as parameter of a prepared statement:\r\n\r\n```python\r\nsql = \"insert into orderlog values ( ?, ?, ?, ?, ?, ?, ?, ?, ? )\"\r\n\r\nfilename = os.getcwd() + sep + \"item_1_image.png\"\r\nfd = open(filename, \"rb\") # File will be closed by AceQL\r\nblob_tuple = (fd, )\r\n\r\nparams = (1, 1, \"Item 1 Description\", 9999,\r\n          datetime.now() , datetime.now().date(), blob_tuple, 1, 2)\r\ncursor.execute(sql, params)\r\n```\r\n\r\n#### BLOB reading\r\n\r\nBLOB reading is supported through `Cursor.get_blob_stream(column_index`). The stream can then be read with a `for` loop that iterates on the `respsonse`, using syntax provided by [Requests](https://requests.readthedocs.io/en/master/user/quickstart/#raw-response-content):\r\n\r\n```python\r\nsql = \"select customer_id, item_id, jpeg_image from orderlog \" \\\r\n      \"where customer_id = ? and item_id = ?\"\r\nparams = (1, 1)\r\ncursor.execute(sql, params)\r\nrow = cursor.fetchone()\r\n\r\n# You can get BLOB length if you want to use a progress indicator\r\nblob_length = cursor.get_blob_length(2)\r\nprint(\"blob length: \" + str(blob_length))\r\n\r\n# Get the stream to the remote BLOB\r\nresponse = cursor.get_blob_stream(2)\r\n\r\n# Download is streamed and writen into filename\r\nfilename = os.path.expanduser(\"~\") + sep + \"jpeg_image.jpg\"\r\nwith open(filename, 'wb') as fd:\r\n    for chunk in response.iter_content(chunk_size=2048):\r\n        fd.write(chunk)\r\n\r\nstat_info = os.stat(filename)\r\nprint(\"file length: \" + str(stat_info.st_size))\r\n```\r\n\r\n#### Managing BLOB upload progress\r\n\r\nYou may want to give your users a progress bar when uploading BLOBs.\r\n\r\nThe `ProgressIndicator.Percent` property allows you to get the current percent of upload. Value will be incremented automatically during upload.\r\n\r\nTo activate the update mechanism:\r\n\r\n1/ Set the long BLOB length along the File Object in the tuple of the BLOB prepared statement parameter:\r\n\r\n```python\r\nfile_length = os.stat(filename).st_size\r\n\r\nfd = open(filename, \"rb\")\r\nblob_tuple = (fd, file_length)\r\n```\r\n\r\n2/ Create your `ProgressIndicator` instance and enter it to the `Connection` instance before the `Cursor.execute(sql,  params)` call :\r\n\r\n```python\r\nprogress_indicator = ProgressIndicator()\r\nconnection.set_progress_indicator(progress_indicator)\r\n```\r\n\r\nYou then can read `ProgressIndicator.percent` property in your watching thread.\r\n\r\nCode sample:\r\n\r\n```python\r\nwith closing(connection.cursor()) as cursor:\r\n    filename = os.getcwd() + sep + \"item_1_image.jpg\"\r\n    file_length = os.stat(filename).st_size\r\n\r\n    fd = open(filename, \"rb\")\r\n    blob_tuple = (fd, file_length)\r\n\r\n    progress_indicator = ProgressIndicator()\r\n    connection.set_progress_indicator(progress_indicator)\r\n\r\n    sql = \"insert into orderlog values ( ?, ?, ?, ?, ?, ?, ?, ?, ? )\"\r\n\r\n    params = (1, 1, \"Item 1 Description\", 9999,\r\n              datetime.now() , datetime.now().date(),\r\n              blob_tuple, 1, 2)\r\n    \r\n    # cursor.execute() uploads BLOB by chunks and increments \r\n    # ProgressIndicator.percent property\r\n    cursor.execute(sql, params)\r\n```\r\n\r\n### Calling AceQL Java stored procedures\r\n\r\nThe AceQL client SDK allows executing a remote server Java class that implements the AceQL Server\r\n\r\n`org.kawanfw.sql.api.server.executor.ServerQueryExecutor` interface and that returns the rows of the SELECT.\r\n\r\nSee the `org.kawanfw.sql.api.server.executor.ServerQueryExecutor` [Javadoc](https://docs.aceql.com/rest/soft/11.0/javadoc/org/kawanfw/sql/api/server/executor/ServerQueryExecutor.html).\r\n\r\nThe usage on the client side is straightforward with the `Cursor.ExecuteServerQueryAsync()` method:\r\n\r\n```python\r\nserver_query_executor_class_name = \"com.mycompany.MyServerQueryExecutor\"\r\nmy_parameters = [1]\r\n\r\ncursor.execute_server_query(server_query_executor_class_name, my_parameters)\r\nprint(\"cursor.rowcount    : \" + str(cursor.rowcount))\r\nrows = cursor.fetchall()\r\n\r\nprint(\"fetchall:\")\r\nfor row in rows:\r\n    print(row)\r\n\r\ncursor.close()\r\n```\r\n\r\n### Using outer authentication without a password and with an AceQL Session ID\r\n\r\nSome working environments (Intranet, etc.) require that the client user authenticates himself without a password. Thus, it is not possible for this users to authenticate though the AceQL client SDK.\r\n\r\nIn this case, you may use directly the native HTTP [login](https://github.com/kawansoft/aceql-http/blob/master/aceql-http-user-guide-api.md#login) API to authenticate the users and retrieve the `session_id` returned by the API. Just pass the value of the `session_id` to the `ConnectionOptions` instance, along with a `None` `password` to `connect`.\r\n\r\n```python\r\nimport aceql\r\nfrom aceql import ConnectionOptions\r\nfrom samples import my_session_id_builder\r\n\r\n# URL of the AceQL server, Remote SQL database name & authentication info without password\r\nurl = \"https://www.acme.com:9443/aceql\"\r\ndatabase = \"sampledb\"\r\nusername = \"user1\"\r\n\r\n# Our application will get the session_id to use\r\nsession_id = my_session_id_builder.get_session_id_from_login_api()\r\n\r\n# We use the ConnectionOptions wrapper to tell to use session_id instead of a password\r\nconnection_options = ConnectionOptions(session_id=session_id)\r\nconnection = aceql.connect(url=url, username=username, password=None, database=database,\r\n                           connection_options=connection_options)\r\n```\r\n\r\n## Using the Metadata Query API \r\n\r\nThe metadata API allows:\r\n\r\n- downloading a remote database schema\r\n  in HTML or text format,\r\n- to get a remote database main properties,\r\n- to get the list of tables, \r\n- to get the details of each table. \r\n\r\nIt also allows wrapping remote tables, columns, indexes, etc. into\r\neasy to use provided Python classes: Table, Index, Column, etc.\r\n\r\nFirst step is to get an instance of `RemoteDatabaseMetaData`:\r\n\r\n```python\r\nremote_database_meta_data = RemoteDatabaseMetaData(connection)\r\n```\r\n\r\n### Downloading database schema into a file\r\n\r\nDownloading a schema into a  `File` is done through the `db_schema_download(filename)` method. See the `RemoteDatabaseMetaData` documentation:\r\n\r\n```python\r\nfilename = os.path.expanduser(\"~\") + os.sep + \"db_schema.html\"\r\nremote_database_meta_data.db_schema_download(filename)\r\n```\r\n\r\nSee an example of the built HTML schema:  [db_schema.out.html](https://docs.aceql.com/rest/soft/11.0/src/db_schema.out.html)\r\n\r\n### Accessing remote database main properties\r\n\r\nThe `JdbcDatabaseMetaData` class wraps instance the main value retrieved by a remote server JDBC call to `java.sql.Connection.getMetaData()`:\r\n\r\n```python\r\njdbc_meta_data = remote_database_meta_data.get_jdbc_database_meta_data()\r\nprint(\"Major Version: \" + str(jdbc_meta_data.getJDBCMajorVersion))\r\nprint(\"Minor Version: \" + str(jdbc_meta_data.getJDBCMinorVersion))\r\nprint(\"IsReadOnly   : \" + str(jdbc_meta_data.isReadOnly))\r\n```\r\n\r\n### Getting Details of Tables and Columns\r\n\r\nSee the `RemoteDatabaseMetaData` documentation:\r\n\r\n```python\r\nprint(\"Print the column details of each table:\")\r\nfor table_name in table_names:\r\n    table = remote_database_meta_data.get_table(table_name)\r\n\r\n    print()\r\n    print(\"Columns of table: \" + table_name)\r\n    for column in table.columns:\r\n        print(column)\r\n```\r\n\r\n____________\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kawansoft/aceql-py",
    "keywords": "DATABASE SQL HTTP CLIENT-SERVER",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aceql",
    "package_url": "https://pypi.org/project/aceql/",
    "platform": null,
    "project_url": "https://pypi.org/project/aceql/",
    "project_urls": {
      "Homepage": "https://github.com/kawansoft/aceql-py"
    },
    "release_url": "https://pypi.org/project/aceql/5.7.2/",
    "requires_dist": [
      "requests (<3.0.0,>=2.18.4)",
      "requests-toolbelt (>=0.8.0)",
      "pytz (>=2017.3)",
      "marshmallow",
      "marshmallow-dataclass",
      "ijson"
    ],
    "requires_python": "",
    "summary": "Python 3 Client toolkit for easy access of remote SQL databases managed with AceQL HTTP.",
    "version": "5.7.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17130979,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83a1d8314a3bdac17d1f23ada8d955c442e5c4e743444127093d7e7b1bcc957e",
          "md5": "e98b5aa94b17dbaf86d789e3dfb0bdc2",
          "sha256": "c7d7b3153f019c685e0290a0a385b5135f099e11e177e44e36a09145790ef2c9"
        },
        "downloads": -1,
        "filename": "aceql-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e98b5aa94b17dbaf86d789e3dfb0bdc2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23237,
        "upload_time": "2017-12-29T21:16:15",
        "upload_time_iso_8601": "2017-12-29T21:16:15.385787Z",
        "url": "https://files.pythonhosted.org/packages/83/a1/d8314a3bdac17d1f23ada8d955c442e5c4e743444127093d7e7b1bcc957e/aceql-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7741665bd7066923cde774d227bf8e65e9507b99b95c57f6a04011c4f6fca709",
          "md5": "64847fc19904e5b8d6ca109ac970d277",
          "sha256": "d7dc5d1d13cfc88ea5798d1763ff665d48246d9d12ac20ad55bbc958c1bac9f7"
        },
        "downloads": -1,
        "filename": "aceql-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "64847fc19904e5b8d6ca109ac970d277",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24263,
        "upload_time": "2018-03-07T18:07:35",
        "upload_time_iso_8601": "2018-03-07T18:07:35.261094Z",
        "url": "https://files.pythonhosted.org/packages/77/41/665bd7066923cde774d227bf8e65e9507b99b95c57f6a04011c4f6fca709/aceql-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e693d1a3dafd31dd7805b7b5cd7c8a681a196627490089ec9192432369e240b",
          "md5": "d14b63b5614b627411c7e4885da53f6e",
          "sha256": "7f093b67c9e4a0387f75f4f2e2c108feac1a53add37aef7862299c82f7dcc2a7"
        },
        "downloads": -1,
        "filename": "aceql-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d14b63b5614b627411c7e4885da53f6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30644,
        "upload_time": "2020-01-11T11:27:47",
        "upload_time_iso_8601": "2020-01-11T11:27:47.738096Z",
        "url": "https://files.pythonhosted.org/packages/1e/69/3d1a3dafd31dd7805b7b5cd7c8a681a196627490089ec9192432369e240b/aceql-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4db2bc66b42416763baa5881357eba79b61d5c9b101c01e31ee1759423ab3b23",
          "md5": "6c909cd0101e5ba3235455915c332594",
          "sha256": "b5a9828b1227ba36cc012e429be38339541f3ffe6964e146b46e6de1017c20d7"
        },
        "downloads": -1,
        "filename": "aceql-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6c909cd0101e5ba3235455915c332594",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30731,
        "upload_time": "2020-01-11T14:29:39",
        "upload_time_iso_8601": "2020-01-11T14:29:39.285645Z",
        "url": "https://files.pythonhosted.org/packages/4d/b2/bc66b42416763baa5881357eba79b61d5c9b101c01e31ee1759423ab3b23/aceql-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91f47a105f8f66fcc05647ffc1af78e856cb366b2b2c7541d893672616075c40",
          "md5": "80e830ace66dcc6dd5bb676d2d27daf2",
          "sha256": "e7bbbcb231cb31c3f720e0ac1467684b90cfe9973431be651483f9df031c43ea"
        },
        "downloads": -1,
        "filename": "aceql-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "80e830ace66dcc6dd5bb676d2d27daf2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40143,
        "upload_time": "2020-04-19T10:34:03",
        "upload_time_iso_8601": "2020-04-19T10:34:03.273373Z",
        "url": "https://files.pythonhosted.org/packages/91/f4/7a105f8f66fcc05647ffc1af78e856cb366b2b2c7541d893672616075c40/aceql-3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16cd483e3e971d926d020ec5c25827e058be2d4034cd59bcc6ddeeaa9cc53aa4",
          "md5": "3395574b6842d6b2da0aa077cb64dc81",
          "sha256": "2464532731bc0fd8654a3b37898d2cafb285de954584c236764f7ea7e918b42f"
        },
        "downloads": -1,
        "filename": "aceql-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3395574b6842d6b2da0aa077cb64dc81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50121,
        "upload_time": "2020-04-20T19:59:48",
        "upload_time_iso_8601": "2020-04-20T19:59:48.169058Z",
        "url": "https://files.pythonhosted.org/packages/16/cd/483e3e971d926d020ec5c25827e058be2d4034cd59bcc6ddeeaa9cc53aa4/aceql-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31a079db3c4c51e17aecfc948f04a109bf195a6615ccf6f89e10c99689248144",
          "md5": "d3df4764d38686266d54a128d528faf2",
          "sha256": "282cf419a2a26469de52e32c8e6e72c8aae18a91146c8436c9889b1b9e9e9f2d"
        },
        "downloads": -1,
        "filename": "aceql-3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d3df4764d38686266d54a128d528faf2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 52639,
        "upload_time": "2020-06-03T11:15:26",
        "upload_time_iso_8601": "2020-06-03T11:15:26.683996Z",
        "url": "https://files.pythonhosted.org/packages/31/a0/79db3c4c51e17aecfc948f04a109bf195a6615ccf6f89e10c99689248144/aceql-3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f3c768636216b7636250e73c210fd197fdfb2ed84376be1cda6ba03595a0c11",
          "md5": "3c9aa1d504db966dc0459bba1c6c0cfc",
          "sha256": "9601c29f3c7d4ce56ca7069e0eee666597ce3a9c4f31796584a2e6012518be0e"
        },
        "downloads": -1,
        "filename": "aceql-3.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3c9aa1d504db966dc0459bba1c6c0cfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 52829,
        "upload_time": "2020-06-09T10:36:38",
        "upload_time_iso_8601": "2020-06-09T10:36:38.642574Z",
        "url": "https://files.pythonhosted.org/packages/9f/3c/768636216b7636250e73c210fd197fdfb2ed84376be1cda6ba03595a0c11/aceql-3.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee2f188ff423ddfa63c72e798fdf048096ea450d145e90dbf269fbbdd39966e6",
          "md5": "9f033c3efd3d69d3635f49904f8cef60",
          "sha256": "bd17e989436ac3cc30038d4c2b896d612f0bdb7d771c2adfa8cd0deec29dabcd"
        },
        "downloads": -1,
        "filename": "aceql-3.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f033c3efd3d69d3635f49904f8cef60",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 77390,
        "upload_time": "2020-07-17T11:25:25",
        "upload_time_iso_8601": "2020-07-17T11:25:25.339719Z",
        "url": "https://files.pythonhosted.org/packages/ee/2f/188ff423ddfa63c72e798fdf048096ea450d145e90dbf269fbbdd39966e6/aceql-3.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afbfd7851b767fd0b5bb06a0268b8b40c11004101d6b0d9b7e579effcc29ca77",
          "md5": "662cdfea0e6e4c5b1ae40e9abb9e5285",
          "sha256": "58a834a8c3c0dd68c2ae5c2a40da23838dacb2a341408dc42257dbb1a718cbd1"
        },
        "downloads": -1,
        "filename": "aceql-3.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "662cdfea0e6e4c5b1ae40e9abb9e5285",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54271,
        "upload_time": "2020-07-17T11:25:26",
        "upload_time_iso_8601": "2020-07-17T11:25:26.966779Z",
        "url": "https://files.pythonhosted.org/packages/af/bf/d7851b767fd0b5bb06a0268b8b40c11004101d6b0d9b7e579effcc29ca77/aceql-3.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "254fa2863af2973739e2139958b469d9bda2efd4eb8f873fc12f9c99ae7b0b52",
          "md5": "3ee56552961efed6aa925436e7141eef",
          "sha256": "82495bd3063c6795bdce790b953da9c31b79b1524bc4aaabc3ada2684ffb3cbb"
        },
        "downloads": -1,
        "filename": "aceql-3.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ee56552961efed6aa925436e7141eef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 77324,
        "upload_time": "2020-07-21T15:48:13",
        "upload_time_iso_8601": "2020-07-21T15:48:13.090781Z",
        "url": "https://files.pythonhosted.org/packages/25/4f/a2863af2973739e2139958b469d9bda2efd4eb8f873fc12f9c99ae7b0b52/aceql-3.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06ff2afae6c17896b7d9cb3595119c83e7bf1c0789e112c8c5945380153413d9",
          "md5": "90e409f7dfbbdd4c6434fb817c1d6a69",
          "sha256": "6f58e585b15c9c257ff193ba908214d3a9c1752536feeeaaf6b8adf9235f89ee"
        },
        "downloads": -1,
        "filename": "aceql-3.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "90e409f7dfbbdd4c6434fb817c1d6a69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54253,
        "upload_time": "2020-07-21T15:47:14",
        "upload_time_iso_8601": "2020-07-21T15:47:14.465291Z",
        "url": "https://files.pythonhosted.org/packages/06/ff/2afae6c17896b7d9cb3595119c83e7bf1c0789e112c8c5945380153413d9/aceql-3.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3670a1d4d0b95829dc88a7189b98b88d46685be2534431546ee8df31f8b9937a",
          "md5": "d0b09fc0aa0649f69394e1c01abe275d",
          "sha256": "ef1b87fb6e787cbf7e7b52a49ffb4884541a94cb356a9603f16c8acb5cfbb982"
        },
        "downloads": -1,
        "filename": "aceql-3.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d0b09fc0aa0649f69394e1c01abe275d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 77525,
        "upload_time": "2020-07-28T15:09:31",
        "upload_time_iso_8601": "2020-07-28T15:09:31.702783Z",
        "url": "https://files.pythonhosted.org/packages/36/70/a1d4d0b95829dc88a7189b98b88d46685be2534431546ee8df31f8b9937a/aceql-3.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a316a194e8dc3fe4a152ced10c76fe8a7a4a5188d29949603ca2697da69ce0db",
          "md5": "639adee82804d853ed356856009b679f",
          "sha256": "96f791d176fca0dc247e4e20e27d5ebf310e8d5f34b5a79cfa4e378a18c2984a"
        },
        "downloads": -1,
        "filename": "aceql-3.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "639adee82804d853ed356856009b679f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54506,
        "upload_time": "2020-07-28T15:09:38",
        "upload_time_iso_8601": "2020-07-28T15:09:38.350777Z",
        "url": "https://files.pythonhosted.org/packages/a3/16/a194e8dc3fe4a152ced10c76fe8a7a4a5188d29949603ca2697da69ce0db/aceql-3.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5922bd4aec39753967611c38b3b55afe226a3bb2ea6221959e4635df55d002dd",
          "md5": "43abbc419c6dd383c79f553280581c08",
          "sha256": "142e6ea186aa2b8237429c1ca90c35e8a295f13cefed522fc960c102f6ac267f"
        },
        "downloads": -1,
        "filename": "aceql-3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "43abbc419c6dd383c79f553280581c08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 77732,
        "upload_time": "2020-11-11T14:07:03",
        "upload_time_iso_8601": "2020-11-11T14:07:03.605375Z",
        "url": "https://files.pythonhosted.org/packages/59/22/bd4aec39753967611c38b3b55afe226a3bb2ea6221959e4635df55d002dd/aceql-3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae6284afdb1dcfe847096bdd9080aacd05090ed9aa0bc23fda99f0a9ebc11d1f",
          "md5": "89dc2537e44d3071b120c046f2238e16",
          "sha256": "fa2af61dc335a2a50674caaf74f9d7214f42fb99e5c635038bd2879613f771c2"
        },
        "downloads": -1,
        "filename": "aceql-3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "89dc2537e44d3071b120c046f2238e16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54731,
        "upload_time": "2020-11-11T14:07:04",
        "upload_time_iso_8601": "2020-11-11T14:07:04.850377Z",
        "url": "https://files.pythonhosted.org/packages/ae/62/84afdb1dcfe847096bdd9080aacd05090ed9aa0bc23fda99f0a9ebc11d1f/aceql-3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8b3096e769440d508db4e1a68634a060b8d5b4b2e0e372f301497913a034860",
          "md5": "38135ac01f1977c3d346795d80378bed",
          "sha256": "3bc5f2a8a796238f41ed028fb169f48828ee6aa60bc24153f8ebd195a31c16b5"
        },
        "downloads": -1,
        "filename": "aceql-4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "38135ac01f1977c3d346795d80378bed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 63678,
        "upload_time": "2021-04-14T17:00:32",
        "upload_time_iso_8601": "2021-04-14T17:00:32.867956Z",
        "url": "https://files.pythonhosted.org/packages/f8/b3/096e769440d508db4e1a68634a060b8d5b4b2e0e372f301497913a034860/aceql-4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c42d47c32d0b75e59ee3675679a7cbc45063f4f9cb967d8deb497ea76462433",
          "md5": "241e3973e0fe50ac42ab3fd7949ab5ab",
          "sha256": "0f44c2d0942d7576fe8bb8c7f65be79d62313b499b7a50f736bf416b6f6be568"
        },
        "downloads": -1,
        "filename": "aceql-4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "241e3973e0fe50ac42ab3fd7949ab5ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50998,
        "upload_time": "2021-04-14T17:00:35",
        "upload_time_iso_8601": "2021-04-14T17:00:35.470513Z",
        "url": "https://files.pythonhosted.org/packages/8c/42/d47c32d0b75e59ee3675679a7cbc45063f4f9cb967d8deb497ea76462433/aceql-4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fa004bb9fff09e3f4e5b1f441447360733cfec91a17c1ab4f4b51d3dca898c1",
          "md5": "3232f500550b2a08131dc1e57fb766d3",
          "sha256": "53f500241a0e09e3edd7e29ddfaab0455813a3f6c52c9fcd1935357c9d00d63e"
        },
        "downloads": -1,
        "filename": "aceql-4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3232f500550b2a08131dc1e57fb766d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 64939,
        "upload_time": "2021-05-04T16:22:24",
        "upload_time_iso_8601": "2021-05-04T16:22:24.173739Z",
        "url": "https://files.pythonhosted.org/packages/3f/a0/04bb9fff09e3f4e5b1f441447360733cfec91a17c1ab4f4b51d3dca898c1/aceql-4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21b37f5b15d329caebdfefd818ee9796e998493bd7dac000726c42d625ed1945",
          "md5": "84e72782bf656137374b060661423dbf",
          "sha256": "721c3e322965d1082aa124b809c815085a807841f8ee695d7d7164abca9cd4bf"
        },
        "downloads": -1,
        "filename": "aceql-4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "84e72782bf656137374b060661423dbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51939,
        "upload_time": "2021-05-04T16:22:27",
        "upload_time_iso_8601": "2021-05-04T16:22:27.179425Z",
        "url": "https://files.pythonhosted.org/packages/21/b3/7f5b15d329caebdfefd818ee9796e998493bd7dac000726c42d625ed1945/aceql-4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab1d3d787c06fabe696c70abfb30240db0f2912c4da517071802cdd6d1af110f",
          "md5": "2dadc65f60e9878bb84342ed415af9d1",
          "sha256": "210634ef57d6a790a128bcabffe624de27b20327835ce2577f415707e423478c"
        },
        "downloads": -1,
        "filename": "aceql-4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2dadc65f60e9878bb84342ed415af9d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 65118,
        "upload_time": "2021-06-10T11:18:12",
        "upload_time_iso_8601": "2021-06-10T11:18:12.508750Z",
        "url": "https://files.pythonhosted.org/packages/ab/1d/3d787c06fabe696c70abfb30240db0f2912c4da517071802cdd6d1af110f/aceql-4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd553148a7f41ca61d5065ecd1cd4c69c1a48ddb3a564007b3a37ef358d27972",
          "md5": "eef3c914dd1613fbc42af4a3552b3f6e",
          "sha256": "2edc5f7d4742373bb9567ebedd6309afb2de2be2efdc05922e6b5fda517ac93a"
        },
        "downloads": -1,
        "filename": "aceql-4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eef3c914dd1613fbc42af4a3552b3f6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 55958,
        "upload_time": "2021-06-10T11:18:14",
        "upload_time_iso_8601": "2021-06-10T11:18:14.103279Z",
        "url": "https://files.pythonhosted.org/packages/dd/55/3148a7f41ca61d5065ecd1cd4c69c1a48ddb3a564007b3a37ef358d27972/aceql-4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee89cad75cb3e75e51ea7cc1aa2dcb8a02f724f78a3d32c20394c1c270950d45",
          "md5": "b36c680189f76463a27e8e673514d282",
          "sha256": "77c73937ec41cd809a6ff0b689fab438aabad2f41ee0b4611ec5adf2d4130407"
        },
        "downloads": -1,
        "filename": "aceql-4.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b36c680189f76463a27e8e673514d282",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 65143,
        "upload_time": "2021-07-20T08:39:32",
        "upload_time_iso_8601": "2021-07-20T08:39:32.984275Z",
        "url": "https://files.pythonhosted.org/packages/ee/89/cad75cb3e75e51ea7cc1aa2dcb8a02f724f78a3d32c20394c1c270950d45/aceql-4.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b9f3da71baaa08815e17cfdf6ae3fde38c447479e904799939bc4c36049c6e0",
          "md5": "ec0d02c151839987a60477f8b066e6fd",
          "sha256": "25568a6d0a6ae6060184364be04726e14d924e4905add53bd39401fd43414499"
        },
        "downloads": -1,
        "filename": "aceql-4.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ec0d02c151839987a60477f8b066e6fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 55984,
        "upload_time": "2021-07-20T08:39:34",
        "upload_time_iso_8601": "2021-07-20T08:39:34.689181Z",
        "url": "https://files.pythonhosted.org/packages/6b/9f/3da71baaa08815e17cfdf6ae3fde38c447479e904799939bc4c36049c6e0/aceql-4.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "516d6579513d39877f287132f26807f7e19cd5ba0f483477c96f02a44c951dcf",
          "md5": "2aca696e9eec3fe7c9f1bc7360ea7834",
          "sha256": "a598326c5a3ea2e83433b14f7f673cefd04cf8ff6546233ca33c01db545e7a10"
        },
        "downloads": -1,
        "filename": "aceql-4.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2aca696e9eec3fe7c9f1bc7360ea7834",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 65153,
        "upload_time": "2021-08-02T09:46:34",
        "upload_time_iso_8601": "2021-08-02T09:46:34.069485Z",
        "url": "https://files.pythonhosted.org/packages/51/6d/6579513d39877f287132f26807f7e19cd5ba0f483477c96f02a44c951dcf/aceql-4.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83d3e329ef927d832de86caa6c5999df8b65035806b684214f9f0605e3c5e836",
          "md5": "0cde47dcf4f5c8b8c2cbcb39f5736633",
          "sha256": "f234ea12d3713c2e00ce27ea1986a667b3965dd07d86112f76d8b7a9ef7965c1"
        },
        "downloads": -1,
        "filename": "aceql-4.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0cde47dcf4f5c8b8c2cbcb39f5736633",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 55984,
        "upload_time": "2021-08-02T09:46:36",
        "upload_time_iso_8601": "2021-08-02T09:46:36.648593Z",
        "url": "https://files.pythonhosted.org/packages/83/d3/e329ef927d832de86caa6c5999df8b65035806b684214f9f0605e3c5e836/aceql-4.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fc67065d6ccec93fd845cf283e0520d9a6f75aa08f7edc969a5a86e637c28e8",
          "md5": "79d55840a1f87617db6509e9e40a9688",
          "sha256": "caea365d06c152c25ad16d176bf439ae2d87a2bb57fafdd37925560fcfb1bbff"
        },
        "downloads": -1,
        "filename": "aceql-5.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79d55840a1f87617db6509e9e40a9688",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 69213,
        "upload_time": "2021-09-01T22:13:48",
        "upload_time_iso_8601": "2021-09-01T22:13:48.514798Z",
        "url": "https://files.pythonhosted.org/packages/9f/c6/7065d6ccec93fd845cf283e0520d9a6f75aa08f7edc969a5a86e637c28e8/aceql-5.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59bdcb4c511e0ee9e701c03ae47bd6f6a6bb4c5c86875f44de1b3c04befe9b54",
          "md5": "8dcfceb68d8abfb1253b26ac84cb5f27",
          "sha256": "de0e7b4d0475302553355e2f2fd9be63031f4011fca3544fe029400cf2244b98"
        },
        "downloads": -1,
        "filename": "aceql-5.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8dcfceb68d8abfb1253b26ac84cb5f27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50787,
        "upload_time": "2021-09-01T22:13:50",
        "upload_time_iso_8601": "2021-09-01T22:13:50.847543Z",
        "url": "https://files.pythonhosted.org/packages/59/bd/cb4c511e0ee9e701c03ae47bd6f6a6bb4c5c86875f44de1b3c04befe9b54/aceql-5.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39cddbc5ee256977788b207a0e6d203f22f326f5d474b8852828ba28ab35a833",
          "md5": "fa63fbf6cfdcfef9e6492745842cedbc",
          "sha256": "d67733db542fab891ec1bc7341e9b7a77bcb1cd0c271660ffdeb9f7606f955a6"
        },
        "downloads": -1,
        "filename": "aceql-5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa63fbf6cfdcfef9e6492745842cedbc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 69263,
        "upload_time": "2021-11-04T19:00:39",
        "upload_time_iso_8601": "2021-11-04T19:00:39.269289Z",
        "url": "https://files.pythonhosted.org/packages/39/cd/dbc5ee256977788b207a0e6d203f22f326f5d474b8852828ba28ab35a833/aceql-5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1cafa2cdbb96dc248ab8895c7a0cc5a3f25e7a5faad53569d49272cdf7c854b",
          "md5": "ae3dfd74907992f4cc820da2d58b6809",
          "sha256": "17ff8d5a2d240641c8ce0d2b78009a6d5eedf6e35acf8dc63faabec4eaa53dff"
        },
        "downloads": -1,
        "filename": "aceql-5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ae3dfd74907992f4cc820da2d58b6809",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50865,
        "upload_time": "2021-11-04T19:00:40",
        "upload_time_iso_8601": "2021-11-04T19:00:40.822756Z",
        "url": "https://files.pythonhosted.org/packages/c1/ca/fa2cdbb96dc248ab8895c7a0cc5a3f25e7a5faad53569d49272cdf7c854b/aceql-5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e55b99618a81cb55b455f404da9529e783b72f8fa79a537d449bb16b0a250318",
          "md5": "1526de2ef1c88193a8c07c61daa6962e",
          "sha256": "1123781bc0f5beee25bd78c9e73822627c07fc38417de61c631d3a8e21967bb0"
        },
        "downloads": -1,
        "filename": "aceql-5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1526de2ef1c88193a8c07c61daa6962e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 82035,
        "upload_time": "2021-12-03T14:11:49",
        "upload_time_iso_8601": "2021-12-03T14:11:49.007468Z",
        "url": "https://files.pythonhosted.org/packages/e5/5b/99618a81cb55b455f404da9529e783b72f8fa79a537d449bb16b0a250318/aceql-5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d7e15b5a970b44df3299e2685b5553d34bf09e6803ae275292482581e73df36",
          "md5": "44484f268de863356a62d09793d7917e",
          "sha256": "06371137ecad82595c182edbc7c403e58e27433f76d3f3d65d640f8597ede8c2"
        },
        "downloads": -1,
        "filename": "aceql-5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "44484f268de863356a62d09793d7917e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53248,
        "upload_time": "2021-12-03T14:11:50",
        "upload_time_iso_8601": "2021-12-03T14:11:50.519150Z",
        "url": "https://files.pythonhosted.org/packages/0d/7e/15b5a970b44df3299e2685b5553d34bf09e6803ae275292482581e73df36/aceql-5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "455750513f1892716d427853df41888678f3d1ffdc9017932c4e7ffea98aae00",
          "md5": "a1a78641812c893ba36bd1c5b175ab47",
          "sha256": "fbbf4d527dd81c42a198fc32dfb489b6266a353b935548e406adeabaf5789d67"
        },
        "downloads": -1,
        "filename": "aceql-5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a1a78641812c893ba36bd1c5b175ab47",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 85934,
        "upload_time": "2022-02-08T20:38:52",
        "upload_time_iso_8601": "2022-02-08T20:38:52.538478Z",
        "url": "https://files.pythonhosted.org/packages/45/57/50513f1892716d427853df41888678f3d1ffdc9017932c4e7ffea98aae00/aceql-5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb11e4425b164aed9d448ca8fd76a7f79ffe30ba122e0cabc04fac0985601d42",
          "md5": "303d4850ff0d2c05a196d626cd150363",
          "sha256": "94689426ed2e80c93789c5c17b072a26b8c633657428383da4b8ab49900491b1"
        },
        "downloads": -1,
        "filename": "aceql-5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "303d4850ff0d2c05a196d626cd150363",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 55364,
        "upload_time": "2022-02-08T20:38:54",
        "upload_time_iso_8601": "2022-02-08T20:38:54.704427Z",
        "url": "https://files.pythonhosted.org/packages/cb/11/e4425b164aed9d448ca8fd76a7f79ffe30ba122e0cabc04fac0985601d42/aceql-5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7960a7df93f37ebfe4763d10c20b04c2b8ebfb469cc45b2fb7e477814311bdf7",
          "md5": "59097bcade036c83dfe7cf59de443026",
          "sha256": "6cf1f6e885070788efc685abf306482950f3eac40723bb13b9e92395486853ea"
        },
        "downloads": -1,
        "filename": "aceql-5.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59097bcade036c83dfe7cf59de443026",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 87347,
        "upload_time": "2022-04-15T21:26:36",
        "upload_time_iso_8601": "2022-04-15T21:26:36.386279Z",
        "url": "https://files.pythonhosted.org/packages/79/60/a7df93f37ebfe4763d10c20b04c2b8ebfb469cc45b2fb7e477814311bdf7/aceql-5.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61eb4d97e3dbf5dbacc5626a74f4f8585ad293c0937c44d9e5ba7c915a57c6e7",
          "md5": "4e8d682175d4db80ba4cef38aecbee26",
          "sha256": "f31bc9470d2a89eef2aa3bc2e3cc904a19c2f06e39c75ee2d1ab2f623dc6e077"
        },
        "downloads": -1,
        "filename": "aceql-5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4e8d682175d4db80ba4cef38aecbee26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 56085,
        "upload_time": "2022-04-15T21:26:38",
        "upload_time_iso_8601": "2022-04-15T21:26:38.637803Z",
        "url": "https://files.pythonhosted.org/packages/61/eb/4d97e3dbf5dbacc5626a74f4f8585ad293c0937c44d9e5ba7c915a57c6e7/aceql-5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfaf520067c2af139d5ca7722ad31400d6ea9fe11bdd3a6c75d5d98c4c98cda2",
          "md5": "360aa38a9d6a01d49529a34231aad929",
          "sha256": "d845898aef573cec10649d1eff7f2092dcf2d595a15f368a1a26232532691bf7"
        },
        "downloads": -1,
        "filename": "aceql-5.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "360aa38a9d6a01d49529a34231aad929",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 87525,
        "upload_time": "2022-06-13T16:33:33",
        "upload_time_iso_8601": "2022-06-13T16:33:33.689515Z",
        "url": "https://files.pythonhosted.org/packages/df/af/520067c2af139d5ca7722ad31400d6ea9fe11bdd3a6c75d5d98c4c98cda2/aceql-5.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2b65e7f702ab0347b42c6e0c623af3d8f5a576fa9943e3eff445d583e41b209",
          "md5": "6752b3115b968b4130ba143da4391f58",
          "sha256": "b63314f4827e9bbeded0150f968bb3d713e7701e1723298dd5bdc86e6ebd0307"
        },
        "downloads": -1,
        "filename": "aceql-5.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6752b3115b968b4130ba143da4391f58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 56327,
        "upload_time": "2022-06-13T16:33:36",
        "upload_time_iso_8601": "2022-06-13T16:33:36.483494Z",
        "url": "https://files.pythonhosted.org/packages/c2/b6/5e7f702ab0347b42c6e0c623af3d8f5a576fa9943e3eff445d583e41b209/aceql-5.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5885cff2f128ae47642b8272f972f74f68ab99ba262f384e5e83430ff6e538e7",
          "md5": "09c384570bb1e988aef9e3143fc3e9c8",
          "sha256": "e47d5bf6119ad3f02cfe410a9b33ea72d69ead9fad7a3857d96180155990c9ed"
        },
        "downloads": -1,
        "filename": "aceql-5.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09c384570bb1e988aef9e3143fc3e9c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 91147,
        "upload_time": "2022-11-28T11:33:31",
        "upload_time_iso_8601": "2022-11-28T11:33:31.728788Z",
        "url": "https://files.pythonhosted.org/packages/58/85/cff2f128ae47642b8272f972f74f68ab99ba262f384e5e83430ff6e538e7/aceql-5.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34b45b4c1576bb6c0e82d599d03a6a2fdea919a226521155ea228b1769467f5c",
          "md5": "dd8fe15d9e344e7dc5d6576bce96cf2e",
          "sha256": "2ceae6493e0c1acf9c1f81d643ec2925829a0cc48500d7ea3d469676cd6396eb"
        },
        "downloads": -1,
        "filename": "aceql-5.6.tar.gz",
        "has_sig": false,
        "md5_digest": "dd8fe15d9e344e7dc5d6576bce96cf2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 57773,
        "upload_time": "2022-11-28T11:33:34",
        "upload_time_iso_8601": "2022-11-28T11:33:34.916317Z",
        "url": "https://files.pythonhosted.org/packages/34/b4/5b4c1576bb6c0e82d599d03a6a2fdea919a226521155ea228b1769467f5c/aceql-5.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "091225cbf59ac1445709ff2e4a7d87c28aa2b8ee97e53a9ba65ec7c108612fa6",
          "md5": "8c97307b7d27197799e3ab005dc74c08",
          "sha256": "8c37a78128ba6392a350c31eb06377ba26ebd04036ca680e9112d53381962c92"
        },
        "downloads": -1,
        "filename": "aceql-5.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c97307b7d27197799e3ab005dc74c08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 91159,
        "upload_time": "2022-12-12T12:59:21",
        "upload_time_iso_8601": "2022-12-12T12:59:21.699595Z",
        "url": "https://files.pythonhosted.org/packages/09/12/25cbf59ac1445709ff2e4a7d87c28aa2b8ee97e53a9ba65ec7c108612fa6/aceql-5.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "643acef3ab3a06a44f26b01cc80ba5538c4b6fa1cb32cfbc666111baff340847",
          "md5": "8989ab969f7d7d27948d6d20a6375ad5",
          "sha256": "9ee0527e07b0d16663a12e7aff6e1db65126f1f0fb55a622c42d301c37dd2b22"
        },
        "downloads": -1,
        "filename": "aceql-5.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8989ab969f7d7d27948d6d20a6375ad5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 57839,
        "upload_time": "2022-12-12T12:59:24",
        "upload_time_iso_8601": "2022-12-12T12:59:24.422783Z",
        "url": "https://files.pythonhosted.org/packages/64/3a/cef3ab3a06a44f26b01cc80ba5538c4b6fa1cb32cfbc666111baff340847/aceql-5.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d17fe9be531ba0d6f7a5ae56897bef6d73a4642589ab4680183998bb1b0b570",
          "md5": "543acbab4035e758128afc52d434be5f",
          "sha256": "0aa67cff9ee2360b9b654ff58009018f856d55c4d292a6008f7c99586dbd9eca"
        },
        "downloads": -1,
        "filename": "aceql-5.7.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "543acbab4035e758128afc52d434be5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 93113,
        "upload_time": "2023-03-02T17:28:45",
        "upload_time_iso_8601": "2023-03-02T17:28:45.748980Z",
        "url": "https://files.pythonhosted.org/packages/5d/17/fe9be531ba0d6f7a5ae56897bef6d73a4642589ab4680183998bb1b0b570/aceql-5.7.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be2c8ad2f2442200deb25253a4d5dc7c72314f992c9eb59aebd2a6249a2a2a16",
          "md5": "9dbd997d5f4ef7275997d4d82a635d6b",
          "sha256": "fd841e5398e52ad5690a555f3c4c57add1370ca3c4c48f2ae59038d4b48776d0"
        },
        "downloads": -1,
        "filename": "aceql-5.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9dbd997d5f4ef7275997d4d82a635d6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58314,
        "upload_time": "2023-03-02T17:28:48",
        "upload_time_iso_8601": "2023-03-02T17:28:48.905002Z",
        "url": "https://files.pythonhosted.org/packages/be/2c/8ad2f2442200deb25253a4d5dc7c72314f992c9eb59aebd2a6249a2a2a16/aceql-5.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d17fe9be531ba0d6f7a5ae56897bef6d73a4642589ab4680183998bb1b0b570",
        "md5": "543acbab4035e758128afc52d434be5f",
        "sha256": "0aa67cff9ee2360b9b654ff58009018f856d55c4d292a6008f7c99586dbd9eca"
      },
      "downloads": -1,
      "filename": "aceql-5.7.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "543acbab4035e758128afc52d434be5f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 93113,
      "upload_time": "2023-03-02T17:28:45",
      "upload_time_iso_8601": "2023-03-02T17:28:45.748980Z",
      "url": "https://files.pythonhosted.org/packages/5d/17/fe9be531ba0d6f7a5ae56897bef6d73a4642589ab4680183998bb1b0b570/aceql-5.7.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be2c8ad2f2442200deb25253a4d5dc7c72314f992c9eb59aebd2a6249a2a2a16",
        "md5": "9dbd997d5f4ef7275997d4d82a635d6b",
        "sha256": "fd841e5398e52ad5690a555f3c4c57add1370ca3c4c48f2ae59038d4b48776d0"
      },
      "downloads": -1,
      "filename": "aceql-5.7.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9dbd997d5f4ef7275997d4d82a635d6b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 58314,
      "upload_time": "2023-03-02T17:28:48",
      "upload_time_iso_8601": "2023-03-02T17:28:48.905002Z",
      "url": "https://files.pythonhosted.org/packages/be/2c/8ad2f2442200deb25253a4d5dc7c72314f992c9eb59aebd2a6249a2a2a16/aceql-5.7.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}