{
  "info": {
    "author": "Tony (Muhammad) Yousefnezhad",
    "author_email": "<myousefnezhad@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# easyX: a simple Python library for saving complex data structure based on HDF5\n\nThis library enables you to save a Python dictionary with a complex structure to a single file. We have tested this library to save files in size 150 GB — i.e., you need a computer with 155 GB memory. \n\nThe procedure is simple. The library tries to save homogeneous tensors by using the regular algorithm that is used for [Hierarchical Data Format 5 (HDF5)](https://en.wikipedia.org/wiki/Hierarchical_Data_Format). We will store them in a group called \"raw.\" If the dictionary has other complex structures — such as another dictionary or nonhomogeneous tensors — the library will first dump the bytes of data from memory and encode it in a [base64](https://en.wikipedia.org/wiki/Base64) format. The encoded data will be stored as a vector in a group called \"binary.\" This library is originally developed for the [easy fMRI project](https://easyfmri.learningbymachine.com/) — a toolbox for analyzing [task-based fMRI](https://en.wikipedia.org/wiki/Functional_magnetic_resonance_imaging) datasets.\n\nWe have tested this library on Python 3.7 and above.\n\n## How to install?\n\n### Using pip\nYou simply install it using our `pip` package.\n```bash\npip install easyx\n```\n\n### Using source file\nYou only need to copy the `easyx/easyX.py` to your project. You can use `git` for downloading this library, as well:\n```bash\ngit clone https://gitlab.com/myousefnezhad/easyx.git\n```\n\nYou need to install the related libraries from the `requirements.txt` file:\n```bash\npip install -r requirements.txt\n```\nThis file includes `numpy`, `h5py`.\n\n\n## How to use it?\nYou will keep all variables in the form of a dictionary in Python. \n\nAs an example, we have created a sample data:\n\n```python\ndata = {\"a\": np.array([[1, 2, 5, 8], [2., 4, 1, 6]]),\n\t\t \"b\": [[1], [2, 4]],\n\t\t \"c\": [[1, 20], [7, 4]],\n\t\t \"d\": \"Hi There\",\n\t\t \"e\": [\"A\", \"B\"],\n\t\t \"f\": [[\"a\", \"b\"], [\"c\", \"d\"]],\n\t\t \"h\": np.random.rand(100, 1000)\n\t\t}\n```\n\nHere, we have the dictionary `data` that includes different shapes of variables.\n\n### Saving a dictionary into a file\nYou can use following commands for saving a dictionary in a file:\n```python\n# Import easyX Library\nfrom easyx import easyX\n# Create an object from easyX class\nezx = easyX()\n# Change this one with the PATH you need to save your data\nfname = \"/tmp/a.ezx\"  \n# Here, `data` is the example dictionary, you may replace it with yours\nezx.save(data, fname=fname) \n```\n\n### Loading a data file into a dictionary\nYou can use following commands for loading a data file into a dictionary:\n```python\n# Import easyX Library\nfrom easyx import easyX\n# Create an object from easyX class\nezx = easyX()\n# Change this one with the PATH you need to save your data\nfname = \"/tmp/a.ezx\"  \n# Data will be recovered in the `data` dictionary\ndata = ezx.load(fname=fname) \n```\n\n### Loading the data structures (keys) from a data file into a dictionary\nYou can use following commands for loading the data structures (keys) from a data file into a dictionary:\n```python\n# Import easyX Library\nfrom easyx import easyX\n# Create an object from easyX class\nezx = easyX()\n# Change this one with the PATH you need to save your data\nfname = \"/tmp/a.ezx\"\n# Keys will be recovered in the `keys` dictionary\nkeys = ezx.load_keys(fname=fname) \n```\n\nFor support and feedback, please contact us: [info@yousefnezhad.com](mailto:info@yousefnezhad.com).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/myousefnezhad/easyx",
    "keywords": "python,big data,HDF5,data storage,nonhomogeneous data structure",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easyx",
    "package_url": "https://pypi.org/project/easyx/",
    "platform": null,
    "project_url": "https://pypi.org/project/easyx/",
    "project_urls": {
      "Homepage": "https://github.com/myousefnezhad/easyx"
    },
    "release_url": "https://pypi.org/project/easyx/1.1.0/",
    "requires_dist": [
      "numpy",
      "h5py"
    ],
    "requires_python": "",
    "summary": "A library for storing big data",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14505017,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c4bdc3d5a20ab679566adb6bcb9c03a408625a91087b53e9f4cee5ca6e202fa",
          "md5": "b2e33fc57fd16b7446db4957eef77ce9",
          "sha256": "fafcfa1ec9b7ea256867277183a4bec76c55070d948b7c0f7c844d7e95067b8b"
        },
        "downloads": -1,
        "filename": "easyx-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2e33fc57fd16b7446db4957eef77ce9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5651,
        "upload_time": "2022-07-21T12:10:40",
        "upload_time_iso_8601": "2022-07-21T12:10:40.272948Z",
        "url": "https://files.pythonhosted.org/packages/7c/4b/dc3d5a20ab679566adb6bcb9c03a408625a91087b53e9f4cee5ca6e202fa/easyx-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8488f45b6a7bd3b1cfa672c392829a7fd9b6e6f330b5c268102578b1df91078e",
          "md5": "d5dd20dc12d5634142915ee991e49778",
          "sha256": "8af911bb4c544eabe68847c64fe4bd3863cd603007820d2f7ba29d1b2aebab7f"
        },
        "downloads": -1,
        "filename": "easyx-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d5dd20dc12d5634142915ee991e49778",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4954,
        "upload_time": "2022-07-21T12:10:42",
        "upload_time_iso_8601": "2022-07-21T12:10:42.225995Z",
        "url": "https://files.pythonhosted.org/packages/84/88/f45b6a7bd3b1cfa672c392829a7fd9b6e6f330b5c268102578b1df91078e/easyx-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c4bdc3d5a20ab679566adb6bcb9c03a408625a91087b53e9f4cee5ca6e202fa",
        "md5": "b2e33fc57fd16b7446db4957eef77ce9",
        "sha256": "fafcfa1ec9b7ea256867277183a4bec76c55070d948b7c0f7c844d7e95067b8b"
      },
      "downloads": -1,
      "filename": "easyx-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b2e33fc57fd16b7446db4957eef77ce9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5651,
      "upload_time": "2022-07-21T12:10:40",
      "upload_time_iso_8601": "2022-07-21T12:10:40.272948Z",
      "url": "https://files.pythonhosted.org/packages/7c/4b/dc3d5a20ab679566adb6bcb9c03a408625a91087b53e9f4cee5ca6e202fa/easyx-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8488f45b6a7bd3b1cfa672c392829a7fd9b6e6f330b5c268102578b1df91078e",
        "md5": "d5dd20dc12d5634142915ee991e49778",
        "sha256": "8af911bb4c544eabe68847c64fe4bd3863cd603007820d2f7ba29d1b2aebab7f"
      },
      "downloads": -1,
      "filename": "easyx-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d5dd20dc12d5634142915ee991e49778",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4954,
      "upload_time": "2022-07-21T12:10:42",
      "upload_time_iso_8601": "2022-07-21T12:10:42.225995Z",
      "url": "https://files.pythonhosted.org/packages/84/88/f45b6a7bd3b1cfa672c392829a7fd9b6e6f330b5c268102578b1df91078e/easyx-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}