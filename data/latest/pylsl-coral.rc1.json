{
  "info": {
    "author": "Christian Kothe",
    "author_email": "christiankothe@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: System :: Networking"
    ],
    "description": "# pylsl for Google Coral\n\nThis project is a clone of [pylsl](https://github.com/labstreaminglayer/liblsl-Python) with an added `liblsl.so` compiled on the Google Coral.\n\n[![Build status](https://ci.appveyor.com/api/projects/status/ggouc09585l2518i/branch/master?svg=true)](https://ci.appveyor.com/project/cboulay/liblsl-python/branch/master)\n[![PyPI version](https://badge.fury.io/py/pylsl.svg)](https://badge.fury.io/py/pylsl)\n\nThis is the Python interface to the [Lab Streaming Layer (LSL)](https://github.com/sccn/labstreaminglayer).\nLSL is an overlay network for real-time exchange of time series between applications,\nmost often used in research environments. LSL has clients for many other languages\nand platforms that are compatible with each other.\n\nLet us know if you encounter any bugs (ideally using the issue tracker on\nthe GitHub project).\n\n# Installation\n\n## Prerequisites\n\nOn all non-Windows platforms and for some Windows-Python combinations, you must first obtain a liblsl shared library:\n\n* On many platforms it can be installed with `conda install -c conda-forge liblsl`\n* Additionally, on Mac it can be installed with `brew install labstreaminglayer/tap/lsl`\n* You might be able to find the appropriate liblsl shared object (*.so on Linux, *.dylib on MacOS, or *.dll on Windows) from the [liblsl release page](https://github.com/sccn/liblsl/releases).\n* Otherwise you might try to clone liblsl and use its `standalone_compilation_linux.sh` script (works on raspberry pi).\n\n## Prepared distributions\n\nInstall from [pypi](https://pypi.org/project/pylsl/)\nusing [pip](https://pip.pypa.io/en/stable/installing/): `pip install pylsl`\n\nFor several distributions, the pip distribution ships with lsl.dll. For every other case, liblsl must be installed somewhere on the PATH (see Prerequisites above) or downloaded and copied somewhere on the search path. We recommend you copy it to the pylsl installed module path's `lib` subfolder. i.e. `{path/to/env/}site-packages/pylsl/lib`. Use `python -m site` to find the \"site-packages\" path.\n(use `cp -L` on platforms that use symlinks)\n\n## Self-built\n\n* Download the pylsl source: `git clone https://github.com/labstreaminglayer/liblsl-Python.git && cd liblsl-Python`  \n* Copy the shared object (see Prerequisites above) into `liblsl-Python/pylsl/lib`.\n* From the `liblsl-Python` working directory, run `pip install .`.\n    * Note: You can use `pip install -e .` to install while keeping the files in-place. This is convenient for developing pylsl.\n\n# Usage\n\nSee the examples in pylsl/examples. Note that these can be run directly from the commandline with (e.g.) `python -m pylsl.examples.{name-of-example}`.\n\nYou can get a list of the examples with `python -c \"import pylsl.examples; help(pylsl.examples)\"`\n\n# For maintainers\n\n## Continuous Integration\n\npylsl uses continuous integration and distribution.\n\nWhenever a new commit is pushed, AppVeyor prepares several files. First it prepares the source wheels -- this is useful on any platform & Python version that does not have a specific binary distribution. Then it prepares the binary wheels; it downloads liblsl from its releases page, copies it to the package, then builds wheels for distribution. This process is repeated for several variants of Windows and Mac.\n\nIn addition, whenever a new `git tag` is used on a commit that is pushed to the master branch, the CI systems will deploy the wheels to pypi.\n\n### Linux Binaries Deprecated\n\nWe recently stopped building binary wheels for Linux. In practice, the `manylinux` dependencies were often incompatible with real systems.\n\nWhen we did make manylinux distributions, these relied on special liblsl builds that are not automatically pushed to the liblsl releases page. Special pipelines needed to be run manually on [Azure](https://dev.azure.com/labstreaminglayer/liblsl), then the artifacts uploaded to the release page. The Azure pipelines config remains in the liblsl repo in case it is needed again (unlikely). \n\n## Manual Distribution\n\n1. Manual way:\n    1. `rm -Rf build dist *.egg-info`\n    1. `python setup.py sdist bdist_wheel`\n    1. Additional steps on Linux:\n        * `auditwheel repair dist/*.whl -w dist`\n        * `rm dist/*-linux_x86_64.whl`\n    1. `twine upload dist/*`\n1. For conda\n    1. build liblsl: `conda build ../liblsl/`\n    1. `conda build .`\n\n# Known Issues with Multithreading on Linux\n\n* At least for some versions of pylsl , is has been reported that running on Linux one cannot call ``pylsl`` functions from a thread that is not the main thread. This has been reported to cause access violations, and can occur during pulling from an inlet, and also from accessing an inlets info structure in a thread.\n* Recent tests with mulithreading (especially when safeguarding library calls with locks) using Python 3.7.6. with pylsl 1.14 on Linux Mint 20 suggest that this issue is solved, or at least depends on your machine. See https://github.com/labstreaminglayer/liblsl-Python/issues/29\n\n# Acknowledgments\n\nPylsl was primarily written by Christian Kothe while at Swartz Center for Computational Neuroscience, UCSD. The LSL project was funded by the Army Research Laboratory under Cooperative Agreement Number W911NF-10-2-0022 as well as through NINDS grant 3R01NS047293-06S1. pylsl is maintained primarily by Chadwick Boulay. Thanks for contributions, bug reports, and suggestions go to Bastian Venthur, David Medine, Clemens Brunner, and Matthew Grivich.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/labstreaminglayer/liblsl-Python",
    "keywords": "networking lsl lab streaming layer labstreaminglayer data acquisition",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pylsl-coral",
    "package_url": "https://pypi.org/project/pylsl-coral/",
    "platform": null,
    "project_url": "https://pypi.org/project/pylsl-coral/",
    "project_urls": {
      "Homepage": "https://github.com/labstreaminglayer/liblsl-Python"
    },
    "release_url": "https://pypi.org/project/pylsl-coral/0.1.15.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python interface to the Lab Streaming Layer",
    "version": "0.1.15.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13287641,
  "releases": {
    "0.1.15.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92f6eb6738f91da7be68727b62b151159e22e4e78edbd58424019a19c98b36a1",
          "md5": "9bcdee6ca3494f5709b8d696d50e563e",
          "sha256": "b0991801bb4999b8411e033bccc94bbffdd140e9a72a2a02214db7451c7aab7f"
        },
        "downloads": -1,
        "filename": "pylsl_coral-0.1.15.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9bcdee6ca3494f5709b8d696d50e563e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 525987,
        "upload_time": "2022-03-24T22:46:16",
        "upload_time_iso_8601": "2022-03-24T22:46:16.347882Z",
        "url": "https://files.pythonhosted.org/packages/92/f6/eb6738f91da7be68727b62b151159e22e4e78edbd58424019a19c98b36a1/pylsl_coral-0.1.15.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fadbb0018e071be530a27ad04af989d89cc50a5ceb315fa1adb2b3d6d8971909",
          "md5": "deadec4785adddf6645545fd9332baf5",
          "sha256": "54906bb058673051afaef50422cbb3bfcffc7c729660a3ede45bf7680d3aeaaf"
        },
        "downloads": -1,
        "filename": "pylsl-coral-0.1.15.0.tar.gz",
        "has_sig": false,
        "md5_digest": "deadec4785adddf6645545fd9332baf5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 523966,
        "upload_time": "2022-03-24T22:46:18",
        "upload_time_iso_8601": "2022-03-24T22:46:18.570561Z",
        "url": "https://files.pythonhosted.org/packages/fa/db/b0018e071be530a27ad04af989d89cc50a5ceb315fa1adb2b3d6d8971909/pylsl-coral-0.1.15.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92f6eb6738f91da7be68727b62b151159e22e4e78edbd58424019a19c98b36a1",
        "md5": "9bcdee6ca3494f5709b8d696d50e563e",
        "sha256": "b0991801bb4999b8411e033bccc94bbffdd140e9a72a2a02214db7451c7aab7f"
      },
      "downloads": -1,
      "filename": "pylsl_coral-0.1.15.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9bcdee6ca3494f5709b8d696d50e563e",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 525987,
      "upload_time": "2022-03-24T22:46:16",
      "upload_time_iso_8601": "2022-03-24T22:46:16.347882Z",
      "url": "https://files.pythonhosted.org/packages/92/f6/eb6738f91da7be68727b62b151159e22e4e78edbd58424019a19c98b36a1/pylsl_coral-0.1.15.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fadbb0018e071be530a27ad04af989d89cc50a5ceb315fa1adb2b3d6d8971909",
        "md5": "deadec4785adddf6645545fd9332baf5",
        "sha256": "54906bb058673051afaef50422cbb3bfcffc7c729660a3ede45bf7680d3aeaaf"
      },
      "downloads": -1,
      "filename": "pylsl-coral-0.1.15.0.tar.gz",
      "has_sig": false,
      "md5_digest": "deadec4785adddf6645545fd9332baf5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 523966,
      "upload_time": "2022-03-24T22:46:18",
      "upload_time_iso_8601": "2022-03-24T22:46:18.570561Z",
      "url": "https://files.pythonhosted.org/packages/fa/db/b0018e071be530a27ad04af989d89cc50a5ceb315fa1adb2b3d6d8971909/pylsl-coral-0.1.15.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}