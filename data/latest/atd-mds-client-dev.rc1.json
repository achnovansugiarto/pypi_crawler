{
  "info": {
    "author": "City of Austin",
    "author_email": "transportation.data@austintexas.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: Public Domain",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# atd-mds-client\nA Python utility to interact data endpoints compliant with the [Mobility Data Specification](https://github.com/openmobilityfoundation/mobility-data-specification/tree/master/provider), as designed by the Open Mobility Foundation.\n\nThis client was inspired by the [City of Santa Monica MDS Provider Client](https://github.com/CityofSantaMonica/mds-provider).\n\n## Installation\n\nInstall the library:\n\n```python\npip install atd-mds-client\n```\n\nOr the development branch:\n```python\npip install atd-mds-client-dev\n```\n\n## Getting started\n\n```python\n# Import standard libraies:\nimport json\nfrom datetime import datetime\n\n# Import the MDS Library:\nfrom mds import *\n\n# Provider Configuration\nprovider_configuration = {\n    # Authentication type: \"OAuth\", \"Bearer\", \"Basic\" or \"Custom\"\n    \"auth_type\": \"Bearer\",\n    # If you have a Bearer authentication, provide the token:\n    \"token\": \"...secret...token...here\",\n    # Provide the URL endpoint of the provider:\n    \"mds_api_url\": \"https://mds.your-scooter-company.com/api/endpoint/v1\",\n    # (Optional) The Provider ID\n    \"provider_id\": \"...mds...provider...id\",\n    # Any additional HTTP Headers:\n    \"headers\": {\n        \"App-Version\": \"3.0.0\"\n    },\n    # Any additional settings:\n    \"time_format\": \"unix\",\n    \"delay\": 1, # Delay in seconds per http request\n    \"max_attempts\": 3, # Max attempts if the http request fails\n    \"paging\": True, # Enable/Disable pagination\n    \"timeout\": 10, # Maximum time allowed for an HTTP request in seconds\n    \"version\": \"0.3.0\", # MDS Version: \"0.2.0\", \"0.3.0\" or \"0.4.0\" or remove for custom driver\n}\n\n# Builds a time-zone aware date time range\nmy_time = MDSTimeZone(\n    date_time_now=datetime(2020, 1, 1, 20), # Either Now or any date as specified by datetime, becomes end_time\n    offset=3600,             # Subtract 1 hour from date_time_now and becomes start_time\n    time_zone=\"US/Central\",  # US/Central\n)\n\n # Initialize the MDS Client\nmds_client = MDSClient(config=provider_configuration, provider=\"amazing scooters\")\n\n# Get trips\ntrips = mds_client.get_trips(\n    # First the start time for the query\n    start_time=my_time.get_time_start(\n        utc=True, # Transforms local time into UTC\n        unix=True # Transforms format from ISO into Unix Epoch time\n    ),\n    # Now the end time:\n    end_time=my_time.get_time_end(\n        utc=True, # Transforms local time into UTC\n        unix=True # Transforms format from ISO into Unix Epoch time\n    )\n)\n\nprint(json.dumps(trips))\n```\n\n# CD/CI\n\nWe make use of CircleCI for our deployments, you can see the build script in the `.circleci` folder in this repo. The basic process consists of a couple steps:\n\n1. Generate basic variables based on the current branch\n2. Change the package name based on the current branch\n3. Builds the package\n4. Deploys with twine \n\n**In short, the only way to deploy a package is to change it's version number manually in `setup.py`.** If the changes were made in the master branch, the deployment will go into production, for the dev branch, a postfix will be added to the name of the package before it is deployed to pypi. \n\n# Development\n\nWe currently have two branches: master and dev. The master branch is used in production, our dev is meant for development and testing. \n\n### Dev & Master Postfix\n\nFor the dev branch, the build script will attach a post fix `\"-dev\"` to the package name specified in `setup.py`. For example, in the dev branch file `setup.py` we see the package name is `name=\"atd-mds-client\"` and the current version was `0.0.X`, if you were to change the version number and commit to the dev branch, the deployment script will deploy to pypi as `atd-mds-client-dev` with the new version.\n\n### Pull Requests & Local Development\n\nPull requests are ignored by the CD/CI pipeline, meaning they do not get built. If you need a package built for dev testing:\n\n- Test your script locally\n- Create a PR against the dev branch, make sure you change the version number in setup.py\n- Merge your PR branch to the dev branch\n\nHow about local development?\n\nAt the moment, local development is open-ended. You may use any python mechanism or style when including source python packages in your development and local tests.\n\n# License\n\nThe package is distributed under the GPL 3.0 license.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cityofaustin/atd-mds-client/tree/atd-mds-client",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "atd-mds-client-dev",
    "package_url": "https://pypi.org/project/atd-mds-client-dev/",
    "platform": "",
    "project_url": "https://pypi.org/project/atd-mds-client-dev/",
    "project_urls": {
      "Homepage": "https://github.com/cityofaustin/atd-mds-client/tree/atd-mds-client"
    },
    "release_url": "https://pypi.org/project/atd-mds-client-dev/0.0.3/",
    "requires_dist": [
      "requests",
      "pytz"
    ],
    "requires_python": "",
    "summary": "A Python utility to interact data endpoints compliant with the Mobility Data Specification, as designed by the Open Mobility Foundation",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7646720,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e52a4a32907d84731e24cc1a291bd5c6d7df04fa93ac06bff1d9cccc58cda790",
          "md5": "0a523d72399115bd39cb4918770fb6b9",
          "sha256": "25c8c14ca743eec07b988bd6b528e2a432ef89a95464fa28a80d5b3e4397934d"
        },
        "downloads": -1,
        "filename": "atd_mds_client_dev-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a523d72399115bd39cb4918770fb6b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28622,
        "upload_time": "2020-01-28T20:58:35",
        "upload_time_iso_8601": "2020-01-28T20:58:35.668698Z",
        "url": "https://files.pythonhosted.org/packages/e5/2a/4a32907d84731e24cc1a291bd5c6d7df04fa93ac06bff1d9cccc58cda790/atd_mds_client_dev-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d57c1adcdd0fbe955d7d6f76f39bb0badb15dcfd22b1d1e8d93dada6d05dcea",
          "md5": "519898bb75c0e576ff04f11724335a60",
          "sha256": "0cc170de1aae94a475cfc3e5932c4b86d7215ae92dfcb679423d325a0d908519"
        },
        "downloads": -1,
        "filename": "atd-mds-client-dev-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "519898bb75c0e576ff04f11724335a60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10234,
        "upload_time": "2020-01-28T20:58:38",
        "upload_time_iso_8601": "2020-01-28T20:58:38.060422Z",
        "url": "https://files.pythonhosted.org/packages/4d/57/c1adcdd0fbe955d7d6f76f39bb0badb15dcfd22b1d1e8d93dada6d05dcea/atd-mds-client-dev-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e52a4a32907d84731e24cc1a291bd5c6d7df04fa93ac06bff1d9cccc58cda790",
        "md5": "0a523d72399115bd39cb4918770fb6b9",
        "sha256": "25c8c14ca743eec07b988bd6b528e2a432ef89a95464fa28a80d5b3e4397934d"
      },
      "downloads": -1,
      "filename": "atd_mds_client_dev-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a523d72399115bd39cb4918770fb6b9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28622,
      "upload_time": "2020-01-28T20:58:35",
      "upload_time_iso_8601": "2020-01-28T20:58:35.668698Z",
      "url": "https://files.pythonhosted.org/packages/e5/2a/4a32907d84731e24cc1a291bd5c6d7df04fa93ac06bff1d9cccc58cda790/atd_mds_client_dev-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d57c1adcdd0fbe955d7d6f76f39bb0badb15dcfd22b1d1e8d93dada6d05dcea",
        "md5": "519898bb75c0e576ff04f11724335a60",
        "sha256": "0cc170de1aae94a475cfc3e5932c4b86d7215ae92dfcb679423d325a0d908519"
      },
      "downloads": -1,
      "filename": "atd-mds-client-dev-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "519898bb75c0e576ff04f11724335a60",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10234,
      "upload_time": "2020-01-28T20:58:38",
      "upload_time_iso_8601": "2020-01-28T20:58:38.060422Z",
      "url": "https://files.pythonhosted.org/packages/4d/57/c1adcdd0fbe955d7d6f76f39bb0badb15dcfd22b1d1e8d93dada6d05dcea/atd-mds-client-dev-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}