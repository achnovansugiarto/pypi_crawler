{
  "info": {
    "author": "Adam Streck, Tom L. Kaufmann",
    "author_email": "adam.streck@mdc-berlin.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# PyFish\n\n\n[![PyPI](https://img.shields.io/pypi/v/pyfish?color=green)](https://pypi.org/project/pyfish/)\n[![Conda](https://img.shields.io/conda/v/bioconda/pyfish?color=green)](https://anaconda.org/bioconda/pyfish)\n\nPyFish is a Python 3 package for creation of [Fish (Muller) plots](https://en.wikipedia.org/wiki/Muller_plot) like the one below.\n\n### Primary features\n* polynomial interpolation\n* curve smoothing\n* high performance\n* works with low and high density data\n\nPyFish can be used either as a stand-alone tool or as a plotting library.\n\n<img src=\"https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/fish.png\" width=\"600\" />\n\n## Installation\n\nPyFish requires Python >= 3.8\n\nThe package can be installed using Conda (from the bioconda channel)\n\n`conda install -c bioconda pyfish`\n\nor Pip\n\n`pip install pyfish`.\n\n\n\n## Input\n\nThe program takes two tables:\n* one describing the size of individual subgroups at given points in time, referred to as _populations_,\n* one describing the parent-child relationships between the subgroups, referred to as _parent tree_.\n\n### Populations\n\nPopulations table has the schema `(Id: +int, Step: +int, Pop: +int)`, where:\n* `Id` is a numerical identifier of a subgroup`,\n* `Step` is a natural ordinal describing the logical time when the population is measured,\n* `Pop` is the size of the population of the subgroup at the given step.\n\nAn example populations table:\n\n| Id  | Step | Pop |\n|-----|------|-----|\n| 0   | 0    | 100 |\n| 0   | 1    | 40  |\n| 0   | 2    | 20  |\n| 0   | 3    | 0   |\n| 1   | 0    | 10  |\n| 1   | 3    | 50  |\n| 1   | 5    | 100 |\n| 2   | 4    | 20  |\n| 2   | 5    | 50  |\n| 3   | 0    | 10  |\n| 3   | 1    | 20  |\n| 3   | 5    | 10  |\n\n### Parent Tree\n\nParent tree has the schema `(ParentId: +int, ChildId: +int)`, where:\n* `ParentId` is an id matching the population table,\n* `ChildId` is an id matching the population table describing the direct progeny of the parent.\n\nAn example parent tree:\n\n| ParentId | ChildId | \n|----------|---------|\n| 0        | 1       |\n| 1        | 2       |\n| 0        | 3       | \n\n**Note: there must be exactly one node in the parent tree that has no parent. This is the root (0 in the example above).**\n\n\n## Tool \n\nWe provide example data. From the root folder of the project call: \n\n`pyfish tests/populations.csv tests/parent_tree.csv out.png`\n\nThis will create a plot called `out.png` in the folder.  \n\nAdditional execution parameters are described below.\n\n## Library\n\nThe populations and parent_tree tables can be constructed directly as dataframes.\n\nThe library contains three public functions:\n\n* `process_data` Takes the input data and parameters and creates data suitable for plotting. \nAdditional arguments match the parameters as described below.\n* `setup_figure` Resizes the figure and adds labels for axes.  \n* `fish_plot` Calls the plotting function on the input parameters.\n\n### Example:\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nfrom pyfish import fish_plot, process_data, setup_figure\n\npopulations = np.array([[0, 0, 100], [0, 1, 40], [0, 2, 20], [0, 3, 0], [1, 0, 10], [1, 3, 50], \n    [1, 5, 100], [2, 4, 20], [2, 5, 50], [3, 0, 10], [3, 1, 20], [3, 5, 10]])\nparent_tree = np.array([[0, 1], [1, 2], [0, 3]])\npopulations_df = pd.DataFrame(populations, columns=[\"Id\", \"Step\", \"Pop\"])\nparent_tree_df = pd.DataFrame(parent_tree, columns=[\"ParentId\", \"ChildId\"])\ndata = process_data(populations_df, parent_tree_df)\nsetup_figure()\nfish_plot(*data)\nplt.show()\n```\n\nCalling the above code displays the following image:\n\n<img src=\"https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/test.png\" width=\"350\" />\n\n## Parameters\n\n### `-a, --absolute`\n\nPlots absolute population counts at each step.\n\n| Base                          | --absolute                       |\n|-------------------------------|----------------------------------|\n| ![Base plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/base.png) | ![Absolute plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/abs.png) |\n\n### `-I, --interpolate int`\n\nFills in missing values by interpolation by a polynomial of the given degree. \nIf a value is not given, each population is set to 0 at the first and last step.\n\n| Base                          | --interpolate 2                                |\n|-------------------------------|------------------------------------------------|\n| ![Base plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/test.png) | ![Interpolated plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/interpolation.png) |\n\n### `-S, --smooth float`\n\nSmoothing of the graph using Gaussian filter. \nThe parameter value is the standard deviation of the kernel. \nThe bigger the population the bigger the value should be.\n\n**NOTE: If the population values are sparse, using smoothing without interpolation might lead to misleading population sizes.**\n\n| Base                          | --smooth 50                         |\n|-------------------------------|-------------------------------------|\n| ![Base plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/base.png) | ![Smoothed plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/smooth.png) |\n\n### `-F, --first int+`, `-L, --last int+`\n\nOnly limits the steps to the range `[first, last]` inclusive.\n\n| Base                          | --first 4000 --last 4500           |\n|-------------------------------|------------------------------------|\n| ![Base plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/base.png) | ![Smoothed plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/bound.png) |\n\n### `-M, --cmap string`\n\nUse the specified [matplotlib colormap](https://matplotlib.org/stable/tutorials/colors/colormaps.html). \n\nDefault colormap is rainbow.\n\n| Base                          | --cmap viridis                   |\n|-------------------------------|----------------------------------|\n| ![Base plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/base.png) | ![Smoothed plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/map.png) |\n\n### `-C, --color_by string`\n\nColor the ids based on a separate column in the populations.csv file.\nIt will select the first value of the column per id, so the value should be constant for all entries with the same id.\n\nBest combined with a sequential colormap using `--cmap`\n\n| Base                          | --color-by Feature --cmap viridis |\n|-------------------------------|-----------------------------------|\n| ![Base plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/base.png) | ![Smoothed plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/color_by.png) |\n\n\n### `-R, --seed int+`\n\nSpecifies the seed for the randomization of colors.\n\n| Base                          | --seed 2022                       |\n|-------------------------------|-----------------------------------|\n| ![Base plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/base.png) | ![Smoothed plot](https://bytebucket.org/schwarzlab/pyfish/raw/main/doc/seed.png) |\n\n### `-W, --width int+`, `-H, --height int+`\n\nSpecifies the dimensions for the output image. The size is including the axes' labels.\n\n## Citation\nPlease cite as: *Adam Streck, Tom L Kaufmann, Roland F Schwarz, SMITH: Spatially Constrained Stochastic Model for Simulation of Intra-Tumour Heterogeneity, Bioinformatics, 2023; https://doi.org/10.1093/bioinformatics/btad102*\n\n## Contact\nEmail questions, feature requests and bug reports to Adam Streck, `adam.streck@mdc-berlin.de`.\n\n## License\nPyFish is available under the MIT License.\n\n## Development\nTo actively develop the package, we recommend to install pyfish in development mode using pip `pip install -e . --user`.\nIn order to run the main routine from the command line without installing it first, run `python -m pyfish.main -- tests/populations.csv tests/parent_tree.csv out.png`.\n\nTo trigger testing, run `pytest -v .`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/schwarzlab/pyfish",
    "keywords": "plot genomics visualization",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyfish",
    "package_url": "https://pypi.org/project/pyfish/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyfish/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/schwarzlab/pyfish"
    },
    "release_url": "https://pypi.org/project/pyfish/1.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Plotting tool for evolutionary population dynamics. Creates a Fish (Muller) plot.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17278676,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c4d35c10008a1eab19c52f32fe8554edf8228b73ef6f4295485caf2825a3be8",
          "md5": "a9387c7e2db1c0c0a88e62ef20fcf8dc",
          "sha256": "c73f12d8813135b7c754e1257234b3c7d5c77c629699e9e65f487aee09f1553b"
        },
        "downloads": -1,
        "filename": "pyfish-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9387c7e2db1c0c0a88e62ef20fcf8dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8646,
        "upload_time": "2022-02-11T16:39:08",
        "upload_time_iso_8601": "2022-02-11T16:39:08.323817Z",
        "url": "https://files.pythonhosted.org/packages/5c/4d/35c10008a1eab19c52f32fe8554edf8228b73ef6f4295485caf2825a3be8/pyfish-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4de42ab7de3f91ca46583bc66841081c2cb286e8e51c539928a31330d1614480",
          "md5": "7d41424cd4bb5074f1c750153e46b781",
          "sha256": "2d1d814b0dcdcc5da3522310787ce5e12ec8b9d2600f0f632316cc0e295ca217"
        },
        "downloads": -1,
        "filename": "pyfish-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7d41424cd4bb5074f1c750153e46b781",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 794360,
        "upload_time": "2022-02-11T16:39:11",
        "upload_time_iso_8601": "2022-02-11T16:39:11.379200Z",
        "url": "https://files.pythonhosted.org/packages/4d/e4/2ab7de3f91ca46583bc66841081c2cb286e8e51c539928a31330d1614480/pyfish-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26d190f48995d4ebc82bd1b4fa1666819bf26dc9753cc14e2e16c6e33f25ab88",
          "md5": "9499ccecbe58104df2f75485e7f49f2b",
          "sha256": "d325eb17486a15f1d59e2de2624930488a14fe4d855c0f2cf54ee4685299bff3"
        },
        "downloads": -1,
        "filename": "pyfish-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9499ccecbe58104df2f75485e7f49f2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 8732,
        "upload_time": "2022-04-26T15:40:41",
        "upload_time_iso_8601": "2022-04-26T15:40:41.470998Z",
        "url": "https://files.pythonhosted.org/packages/26/d1/90f48995d4ebc82bd1b4fa1666819bf26dc9753cc14e2e16c6e33f25ab88/pyfish-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9d67a9d457e24833bceaaadb39012d103e6622a23b1f00c41d51288bb3e8cf4",
          "md5": "46831e0cabfe45cbb3e6bfac30b0231e",
          "sha256": "920691067c5cf3002246ade0173c9090e48b1ecf7f44a1ef22bb32e1880f0eb5"
        },
        "downloads": -1,
        "filename": "pyfish-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "46831e0cabfe45cbb3e6bfac30b0231e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 8706,
        "upload_time": "2023-02-07T14:31:45",
        "upload_time_iso_8601": "2023-02-07T14:31:45.025919Z",
        "url": "https://files.pythonhosted.org/packages/e9/d6/7a9d457e24833bceaaadb39012d103e6622a23b1f00c41d51288bb3e8cf4/pyfish-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b9c9191ed3490739c366fddf185e5055262e3bf477a7e7f041efdd2669eb535",
          "md5": "8e82187927761adf7badb300c5ffe571",
          "sha256": "ce4985baf6e4b1f6721b85c46d61ee5c7b79ba8b5e402a312048df6353252a0d"
        },
        "downloads": -1,
        "filename": "pyfish-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8e82187927761adf7badb300c5ffe571",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 8972,
        "upload_time": "2023-03-14T00:29:41",
        "upload_time_iso_8601": "2023-03-14T00:29:41.267928Z",
        "url": "https://files.pythonhosted.org/packages/6b/9c/9191ed3490739c366fddf185e5055262e3bf477a7e7f041efdd2669eb535/pyfish-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b9c9191ed3490739c366fddf185e5055262e3bf477a7e7f041efdd2669eb535",
        "md5": "8e82187927761adf7badb300c5ffe571",
        "sha256": "ce4985baf6e4b1f6721b85c46d61ee5c7b79ba8b5e402a312048df6353252a0d"
      },
      "downloads": -1,
      "filename": "pyfish-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "8e82187927761adf7badb300c5ffe571",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 8972,
      "upload_time": "2023-03-14T00:29:41",
      "upload_time_iso_8601": "2023-03-14T00:29:41.267928Z",
      "url": "https://files.pythonhosted.org/packages/6b/9c/9191ed3490739c366fddf185e5055262e3bf477a7e7f041efdd2669eb535/pyfish-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}