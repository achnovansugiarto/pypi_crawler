{
  "info": {
    "author": "Bertrand Neron",
    "author_email": "bneron@pasteur.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "Counter RnAseq Window\n=====================\n\n[![build status](https://gitlab.pasteur.fr/bneron/craw/badges/master/build.svg)](https://gitlab.pasteur.fr/bneron/craw/commits/master)\n[![coverage report](https://gitlab.pasteur.fr/bneron/craw/badges/master/coverage.svg)](http://bneron.pages.pasteur.fr/craw/htmlcov/index.html)\n[![docs](https://img.shields.io/badge/doc-master-blue.svg)](http://bneron.pages.pasteur.fr/craw/)\n[![license](https://img.shields.io/badge/license-GPLv3-blue.svg)](https://opensource.org/licenses/GPL-3.0)\n[![pypi](https://img.shields.io/badge/pypy-releases-blue.svg)](https://pypi.python.org/pypi/craw)\n\n\nThere are 3 ways to use craw:\n* by install the standalone python scripts\n* by using docker image\n* by using singularity image\n\nInstallation\n============\n\nRequirements\n------------\n\n- python >= 3.5\n- psutil >= 5.6\n- pysam == 0.15.2\n- pandas >= 0.24\n- scipy >= 0.16.1\n- numpy >= 1.16\n- matplotlib >= 3.0\n- pillow >= 5.4\n\n\nFrom package\n------------\n\nusing pip\n\n`pip install craw`\n\nif you use virtualenv do not forget to configure the matplotlib backend\n\n##### Notes for MacOS\n    \nOn MacOS install python > 3 from image on http://python.org . \nThen install craw using pip \n\n    pip3 install craw\n\ncraw will be installed in `/Library/Framework/Python.Framework/Version/3.6/`\nSo if you want to use directly craw_coverage and craw_htmp just create a symbolic linc like this\n\n    ln -s /Library/Framework/Python.Framework/Version/3.6/bin/craw_coverage /usr/local/bin/craw_coverage\n    ln -s /Library/Framework/Python.Framework/Version/3.6/bin/craw_htmp /usr/local/bin/craw_htmp\n\nThe craw documentation (html and pdf) is located in /Library/Framework/Python.Framework/Version/3.6/share/craw/\n\nFrom repository\n---------------\n\nclone the project and install with the setup.py\n\n    git clone https://gitlab.pasteur.fr/bneron/craw.git\n\n    cd craw\n\n    python3 setup.py sdist\n    pip3 install dist/craw-master-devxxxxx.tar.gz\n\n\n### Testing my installation\n\n\nThe release come from with some unit and functional tests.\nto test if everything work fine.\n\n    cd craw\n    python3 tests/run_tests.py -vv\n\nThis step is only available from the sources (a *clone* of the repository or a *tarball* release). \nYou **cannot** perform tests if you installed craw from pypi (*pip install craw*)\n\nUsing Docker Image\n==================\n\nDocker images are available. The two scripts are accessible through the sub-command `coverage` or `htmp`.\nFor instance to use the latest version of craw_htmp::\n\n    docker pull c3bi/craw\n    docker run -v$PWD:/root -it c3bi/craw coverage --bam foo.bam --annot foo.annot --ref-col 'Position' --before 3 --after 5 --out foo.cov\n    docker run -v$PWD:/root -it c3bi/craw htmp --size raw --out foo.png  foo.cov\n\n.. note::\n    In docker the interactive htmp output is not available.\n    So you must specify the --out option\n\n\nUsing Singularity Image\n=======================\n\nSingularity images are available. The two scripts are accessible through the sub-command `coverage` or `htmp`.\nFor instance to use the latest version of craw_htmp::\n\n    singularity pull --name craw shub://c3bi/craw\n    ./craw coverage --bam foo.bam --annot foo.annot --ref-col 'Position' --before 3 --after 5 --out foo.cov\n    ./craw htmp --size raw --out foo.png  foo.cov\n\n.. note::\n    instead of Docker images, in Singularity images the interactive output is available.\nQuickstart\n==========\n\nA detailed documentation is available \n    \n* online: [![docs](https://img.shields.io/badge/doc-master-blue.svg)](http://bneron.pages.pasteur.fr/craw/)\n* installed along craw in INSTALL_DIR/share/craw/doc/(html|pdf) \n\n\nInputs / Outputs\n================\n\n\ncraw_coverage\n-------------\n\n### Inputs\n\n#### bam file\n\n*craw_coverage* need a file of alignment reads called bam file.\na bam file is a short DNA sequence read alignments in the Binary Alignment/Map format (.bam).\n*craw_coverage* needs also the corresponding index file (bai). The index file must be located beside the bam file\nwith the same name instead to have the *.bam* extension it end by *.bai* extension.\nIf you have not  the index file you have to create it.\n\nTo index a bam file you need samtools. The command line is\n\n    samtools index file.bam\n\nFor more explanation see http://www.htslib.org/doc/ .\n\n#### wig file\n\n*craw_coverage* can compute coverage also from wig file\nsee https://wiki.nci.nih.gov/display/tcga/wiggle+format+specification and\nhttp://genome.ucsc.edu/goldenPath/help/wiggle.html .\nfor format specifications. Compare d to these specifications\ncraw support coverages on both strands. the positive coverages scores\nare on the forward strand whereas the negative ones are on the reverse strand.\n\n    track type=wiggle_0 name=\"demo\" color=96,144,246 altColor=96,144,246 autoScale=on  graphType=bar\n    variableStep chrom=chrI span=1\n    72      12.0000\n    73      35.0000\n    74      70.0000\n    75      127.0000\n    ...\n    72      -88.0000\n    73      -42.0000\n    74      -12.0000\n    75      -1.0000\n\nIn the example above the coverage on the Chromosome I for the positions 72, 73, 74, 75 \nare 12, 35, 70, 127 on the forward strand and 88, 42, 12, 1 on the reverse strand.\n\nThe --bam and --wig options are mutually exclusive but one of these option is required.\n\n#### annotation file\n\nThe annotation file is a `tsv` file. It's mean that it is a text file with value separated by tabulation (not spaces).\nThe first line of the file must be the name of the columns\nthe other lines the values. Each line represent a row.\n\n    name    gene    chromosome      strand  Position\n    YEL072W RMD6    chrV    +       14415\n    YEL071W DLD3    chrV    +       17845\n    YEL070W DSF1    chrV    +       21097\n\n\nAll lines starting with '#' character will be ignored.\n\n    # This is the annotation file for Wild type\n    # bla bla ...\n    name    gene    chromosome      strand  Position\n    YEL072W RMD6    chrV    +       14415\n    YEL071W DLD3    chrV    +       17845\n    YEL070W DSF1    chrV    +       21097\n\n\nmandatory columns\n\n\nThere is 3 mandatory columns in the annotation file.\n\ncolumns with fixed name\n\ntwo with a fixed name:\n\n* **strand** indicate on which strand is located the region of interest. \n  The authorized values for this columns are +/- , 1/-1 or for/rev.\n* **chromosome** the chromosome name where is located the region of interest.\n\ncolumns with variable name\n\n\nIn addition of these two columns the column to define the position of reference is mandatory too, but the name of this\ncolumn can be specified by the user. If it's not craw_coverage will use a column name 'position'.\n\nIf we want to compute coverage on variable window size, 2 extra columns whose name must be specified by the user by the following option:\n\n* \\-\\-start-col to define the beginning of the window (this position is included in the window)\n* \\-\\-stop-col to define the end of the window (this position is included in the window)\n\n\n    name    gene    type    chromosome      strand  annotation_start        annotation_end  has_transcript  transcription_end       transcription_start\n    YEL072W RMD6    gene    chrV    1       13720   14415   1       14745   13569\n    YEL071W DLD3    gene    chrV    1       16355   17845   1       17881   16177\n    YEL070W DSF1    gene    chrV    1       19589   21097   1       21197   19539\n\n\n\n    craw_coverage --bam file.bam --annot annot.txt --ref-col annotation_start --start-col annotation_start --stop-col annotation_end\n\n\nThe position of reference must be between start and end.\nThe authorized values are positive integers.\n\n\nThe position of reference can be used to define the reference and the start ot the end of the window.\n\n     craw_coverage --bam file.bam --annot annot.txt --ref-col annotation_start --start-col annotation_start --stop-col annotation_end\n\nAll other columns are not necessary but will be reported as is in the coverage file.\n\n\n\nOutputs\n-------\n\n#### coverage_file\n\n\nIt's a `tsv` file with all columns found in annotation file plus the result of coverage position by position centered\non the reference position define for each line. for instance \n\n    craw_coverage -bam=../data/craw_data_test/WTE1.bam --annot=../data/craw_data_test/annotations.txt\n    --ref-col=annotation_start --before=0  --after=2000\n\nIn the command line above, the column '0' correspond to the annotation_start position the column '1' to annotation_start + 1\non so on until '2000' (here we display only the first 3 columns of the coverage).\n\n    # Running Counter RnAseq Window\n    # Version: craw NOT packaged, it should be a development version | Python 3.4\n    # With the following arguments:\n    # --after=2000\n    # --annot=../data/craw_data_test/annotations.txt\n    # --bam=../data/craw_data_test/WTE1.bam\n    # --before=0\n    # --output=WTE1_0+2000.new.cov\n    # --qual-thr=15\n    # --ref-col=annotation_start\n    # --suffix=cov\n    sense   name    gene    type    chromosome      strand  annotation_start        annotation_end  has_transcript  transcription_end       transcription_start     0       1       2\n    S       YEL072W RMD6    gene    chrV    +       13720   14415   1       14745   13569   7       7       7\n    AS      YEL072W RMD6    gene    chrV    +       13720   14415   1       14745   13569   0       0       0\n    S       YEL071W DLD3    gene    chrV    +       16355   17845   1       17881   16177   31      33      33\n\n\nThe line starting with '#' are comments and will be ignored for further processing.\nBut in traceability/reproducibility concern, in the comments `craw_coverage` indicate\nthe version of the program and the arguments used for this experiment.\n\n\n\ncraw_htmp\n=========\n\nInputs\n------\n\nsee craw_coverage output\n\nOutputs\n-------\n\nThe default output of *craw_htmp* (if --out is omitted) is graphical window on the screen.\nThe figure display on the screen can be saved using the window menu.\nIt is also possible to generate directly a image file in various format by specifying the --out option.\nThe output format will be deduced form the filename extension provide to --out option.\n\n  --out foo.jpeg  for jpeg image or --out foo.png  for png image\n\nThe supported format vary in function of the matplotlib backend used (see ).\n\nIf --size raw is used 2 files will be generated one for the sense and the other for the antisense.\nIf --out is not specified it will be the name of the coverage file without extension and the format will be png.\n \n   craw_htmp foo_bar.cov --size raw \n\nwill produce *foo_bar.sense.png* and *foo_bar.antisense.png*\n\n   craw_htmp foo_bar.cov --size raw --out Xyzzy.jpeg\n   \nwill produce *Xyzzy.sense.jpeg* and *Xyzzy.antisense.jpeg*\n   \n   \n\nCommand line options\n--------------------\n\nThere is many options for each craw scripts to have an exhaustive list of options use --help option\n or read the manual (html or pdf)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.pasteur.fr/bneron/craw",
    "keywords": "bioinformatics,RNAseq,coverage",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "craw",
    "package_url": "https://pypi.org/project/craw/",
    "platform": "Unix",
    "project_url": "https://pypi.org/project/craw/",
    "project_urls": {
      "Homepage": "https://gitlab.pasteur.fr/bneron/craw"
    },
    "release_url": "https://pypi.org/project/craw/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Counter RNA seq Window is a package which aim to compute and visualize the coverage of RNA seq experiment.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5102460,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ce0f7ff4d31aa279afa8bacbfaf34461d3210a24ba7b510afddf51a28df5918",
          "md5": "b9533e392953453b87c342cfa770979d",
          "sha256": "bff117291c6096ecbd20762c428e4ab3062697a8855009fa05184d2c42519074"
        },
        "downloads": -1,
        "filename": "craw-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b9533e392953453b87c342cfa770979d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2289551,
        "upload_time": "2017-07-03T15:00:22",
        "upload_time_iso_8601": "2017-07-03T15:00:22.675289Z",
        "url": "https://files.pythonhosted.org/packages/2c/e0/f7ff4d31aa279afa8bacbfaf34461d3210a24ba7b510afddf51a28df5918/craw-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b66ec6f0a69b2859c1ebb39b67a7c5a80e9d5ef1971e6359468d83bcd26ebb14",
          "md5": "00b33849d2a852ba1777fbbb128a66ab",
          "sha256": "3dfdc4cdf343fd5ff349b7907adcff2712f3cc2bb4481830c872e44d5c72a681"
        },
        "downloads": -1,
        "filename": "craw-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "00b33849d2a852ba1777fbbb128a66ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2022715,
        "upload_time": "2019-04-05T07:54:27",
        "upload_time_iso_8601": "2019-04-05T07:54:27.672033Z",
        "url": "https://files.pythonhosted.org/packages/b6/6e/c6f0a69b2859c1ebb39b67a7c5a80e9d5ef1971e6359468d83bcd26ebb14/craw-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3046cac238d1461d92fd02272b9fa08ecba761fc4cf6a844beea3e7f8be70800",
          "md5": "748d5befb122f6b9134c5b8082fa03fd",
          "sha256": "24239289bdf1061fcfa7a5f3e5c74760ceb6283bf77880ed7f0edfde67ff5c7e"
        },
        "downloads": -1,
        "filename": "craw-1.0.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "748d5befb122f6b9134c5b8082fa03fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2553920,
        "upload_time": "2017-07-03T15:16:45",
        "upload_time_iso_8601": "2017-07-03T15:16:45.051761Z",
        "url": "https://files.pythonhosted.org/packages/30/46/cac238d1461d92fd02272b9fa08ecba761fc4cf6a844beea3e7f8be70800/craw-1.0.0b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b66ec6f0a69b2859c1ebb39b67a7c5a80e9d5ef1971e6359468d83bcd26ebb14",
        "md5": "00b33849d2a852ba1777fbbb128a66ab",
        "sha256": "3dfdc4cdf343fd5ff349b7907adcff2712f3cc2bb4481830c872e44d5c72a681"
      },
      "downloads": -1,
      "filename": "craw-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "00b33849d2a852ba1777fbbb128a66ab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 2022715,
      "upload_time": "2019-04-05T07:54:27",
      "upload_time_iso_8601": "2019-04-05T07:54:27.672033Z",
      "url": "https://files.pythonhosted.org/packages/b6/6e/c6f0a69b2859c1ebb39b67a7c5a80e9d5ef1971e6359468d83bcd26ebb14/craw-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}