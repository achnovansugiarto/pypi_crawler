{
  "info": {
    "author": "Zenaro Stefano (mario33881)",
    "author_email": "mariortgasd@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# SISWRAPPER\n\n![Siswrapper](https://github.com/mario33881/siswrapper/workflows/Siswrapper/badge.svg)\n\nSiswrapper is a **wrapper for [SIS](https://jackhack96.github.io/logic-synthesis/sis.html)**, the tool for synthesis and optimization of sequential circuits.\n\nSiswrapper enables developers to code scripts that embeds SIS in any way.\n\n> Read this README in: \n>\n> |[English](https://github.com/mario33881/siswrapper/blob/main/README.md)|[Italiano](https://github.com/mario33881/siswrapper/blob/main/readmes/README.it.md)|\n> |-|-|\n\n<p align=\"center\">\n    <img height=\"150px\" alt=\"logo\" src=\"https://raw.githubusercontent.com/mario33881/siswrapper/main/images/logo.svg\">\n</p>\n\n<br>\n\n<br>\n\n\n> **Disclaimer:**\n>\n> I'm not affiliated with the SIS developers in any way.\n>\n> The aim of this library is to enable the developers to use SIS via the Python programming language.\n\n## Index\n* [Description](#description)\n* [Requirements](#requirements)\n* [Installation](#installation)\n* [Usage](#usage)\n* [Changelog](#changelog)\n* [Author](#author)\n\n## Description ![](https://i.imgur.com/wMdaLI0.png)\nThis library enables the developer\nto **control SIS via Python** using an istance of the ```siswrapper.Siswrapper``` class.\n\nThis is possible thanks to **pexpect**,\na Python library that can easily be used\nto control interactive shells by spawning and connecting to their process.\n\n[Go to the index](#index)\n\n## Requirements ![](https://i.imgur.com/H3oBumq.png)\n* Unix-like OS\n    > pexpect doesn't have all its features on Windows and SIS works best on linux OSes\n* Python 3\n* the pexpect library for Python: control interactive shells via Python\n* SIS, set in the path environment variable (callable with the ```sis``` command): the tool for synthesis and optimization of sequential circuits\n    > You can [download it here](https://jackhack96.github.io/logic-synthesis/sis.html)\n\n[Go to the index](#index)\n\n## Installation\nYou can install this library by:\n\n* (Easiest) Running the following pip command:\n\n    ```\n    pip install siswrapper\n    ```\n\n* Build the python wheel file using the following command:\n\n    ```\n    python3 setup.py bdist_wheel\n    ```\n\n    And install the wheel by executing this command:\n\n    ```\n    pip install siswrapper-<version>-py3-none-any.whl\n    ```\n    > ```<version>``` is siswrapper's version\n\n[Go to the index](#index)\n\n## Usage\nAfter siswrapper's installation you can import siswrapper\ninside a script or inside the interpreter.\n\n```python\nimport siswrapper\n```\n\nNow you can instance an object from the ```siswrapper.Siswrapper()``` class:\n\n```python\nsis = siswrapper.Siswrapper()\n```\n\nThis instruction spawns a SIS process using pexpect.\n\nFrom now on it is possible to execute sis commands using Python:\n\n```python\nsis.stop()  # stop SIS session\n\nsis.start() # start SIS session\n            # > Executed automatically after the siswrapper.Siswrapper() instance creation\n            # > (might be useful if you have closed SIS before using sis.stop())\n\npath = \"file.blif\"\nsis.read_blif(path)  # reads a blif file\n\nsis.simulate(\"010010\") # executes a simulation\n                       # > No need for spaces between each input !!\n\n# optimize the circuit using the rugged script\nsis.script_rugged()\n\n# execute a command that is not \n# directly supported by this library:\nsis.exec(\"help\")\n\n# try to execute a command and parse the output\n# without calling directly the correct method (simulate() in this case)\n# > In case parsed_exec() can't find the right method to call, exec() is called as a fallback\nsis.parsed_exec(\"simulate 00 10 11\")\n\n# save the circuit to a new file\nsis.write_blif(\"optimized.blif\")\n\n# if necessary it is possible to interact with SIS' shell\nsis.interact()\n```\n\nAll the methods return a dictionary with:\n* a success exit status (which can be False or True)\n* errors list (empty if there were no errors)\n* warnings list (empty if there were no warnings, only on some commands that can return warnings)\n* stdout of the command (None if the command returns nothing)\n* parsed output of the SIS command (on some commands that return data)\n\n[Go to the index](#index)\n\n## Changelog ![](https://i.imgur.com/SDKHpak.png)\n**2021-09-05 1.2.2:** <br>\n### Fixes\n* Commands that show paginated output don't timeout anymore\n    > An example of command that shows paginated output is the ```help read_blif``` command.\n* The ```exec()``` method didn't collect the ```wait_end_command()``` method's errors properly\n\n**2021-03-16 1.2.1:** <br>\n### Fixes\n* the ```print_stats``` method failed the print_stats command output parsing when the circuit had 10000 literals/states or more\n\n**2021-03-16 1.2.0:** <br>\n### Features\n* Added ```bsis_script``` command. Its accepted parameters are:\n    * ```fsm_autoencoding_area```, useful for FSM circuits: minimizes states, automatically encodes states, optimizes area and maps the circuit by area (synch library)\n        > Executed commands: ```state_minimize stamina```, ```state_assign jedi```, ```source script.rugged```, ```read_library synch.genlib```, ```map -m 0 -W -s```\n    * ```fsm_autoencoding_delay```, useful for FSM circuits: minimizes states, automatically encodes states, optimizes delay and maps the circuit by delay (synch library)\n        > Executed commands: ```state_minimize stamina```, ```state_assign jedi```, ```reduce_depth```, ```source script.rugged```, ```read_library synch.genlib```, ```map -n 1 -W -s```\n    * ```fsm_area```, useful for FSM circuits: minimizes states, uses manual states encoding, optimizes area and maps the circuit by area (synch library)\n        > Executed commands: ```state_minimize stamina```, ```stg_to_network```, ```source script.rugged```, ```read_library synch.genlib```, ```map -m 0 -W -s```\n    * ```fsm_delay```, useful for FSM circuits: minimizes states, uses manual states encoding, optimizes delay and maps the circuit by delay (synch library)\n        > Executed commands: ```state_minimize stamina```, ```stg_to_network```, ```reduce_depth```, ```source script.rugged```, ```read_library synch.genlib```, ```map -n 1 -W -s```\n    * ```lgate_area_mcnc```, useful for combinational circuits: optimizes area and maps the circuit by area (mcnc library)\n        > Executed commands: ```source script.rugged```, ```read_library mcnc.genlib```, ```map -m 0 -W -s```\n    * ```lgate_delay_mcnc```, useful for combinational circuits: optimizes delay and maps the circuit by delay (mcnc library)\n        > Executed commands: ```reduce_depth```, ```source script.rugged```, ```read_library mcnc.genlib```, ```map -n 1 -W -s```\n    * ```lgate_area_synch```, useful for combinational circuits: optimizes area and maps the circuit by area (synch library)\n        > Executed commands: ```source script.rugged```, ```read_library synch.genlib```, ```map -m 0 -W -s```\n    * ```lgate_delay_synch```, useful for combinational circuits: optimizes delay and maps the circuit by delay (synch library)\n        > Executed commands: ```reduce_depth```, ```source script.rugged```, ```read_library synch.genlib```, ```map -n 1 -W -s```\n    * ```fsmd_area```, useful for FSMD circuits (circuits which include datapaths and an FSM): optimizes area and maps the circuit by area (synch library)\n        > Executed commands: ```source script.rugged```, ```read_library synch.genlib```, ```map -m 0 -W -s```\n    * ```fsmd_delay```, useful for FSMD circuits (circuits which include datapaths and an FSM): optimizes delay and maps the circuit by delay (synch library)\n        > Executed commands: ```reduce_depth```, ```source script.rugged```, ```read_library synch.genlib```, ```map -n 1 -W -s```\n\n    > This command also shows which command is executed and the statistics after some commands\n\n    > Partial and full results are written to new BLIF files.\n\n    > WARNING! These commands are executed in this order, thus does NOT guarantee the best result: multi-level minimization is not perfect!\n    > to obtain better results you should try to execute these commands manually in a diffent order (try also to execute them more than once)\n* Now this library verifies if the stg_to_network command is successful\n\n### Fixes\n* Now the ```write_eqn``` method is executed when ```write_eqn``` is passed to the ```parsed_output()``` method.\n    > Before this fix the ```write_blif``` method was executed instead of the correct method\n* If you call the ```write_eqn``` and ```write_blif``` method without parameters the output doesn't contain the command.\n* When SIS is not installed the error message shows exactly what the problem is\n* Can't execute the rugged script if no file as been read with a read command\n* When you execute a read command, this library calls the ```reset``` method to close the SIS session and \n  open a new session inside the folder of the input file\n    > This \"fixes\" the \".search x file not found\" error when you try to read a file that is in another folder and contains the .search keyword.\n    >\n    > This error was normal but not intuitive (because the imported file was present inside the same folder as the input file but not inside the current folder).\n    > It was the original SIS behaviour.\n\n**2021-01-09 1.1.1:** <br>\n### Fixes/features\n* ```simulate()``` is executed by ```parsed_output()```\neven with not correct input (non \"0\" and/or \"1\" chars)\nand with the abbreviated command ```sim```\n* ```simulate()``` and ```print_stats()``` can manage FSM outputs (fix:```TypeError: 'NoneType' object is not subscriptable```)\n\n### Known bugs\n* ```write_blif``` command/method is executed when ```write_eqn``` is passed to the ```parsed_output()``` method.\n* When SIS is not installed the error message is incomplete (not easily understandable)\n\n**2021-01-04 1.1.0:** <br>\n### Added features\n* Added the ```parsed_output()``` method:\n  it reads a command and automatically calls the best method\n  to parse the output of that command. \n\n  If the command is not recognized it falls back to the ```exec()``` method.\n\n### Changes\n* The ```simulate()``` method now returns a string with the outputs (not space between each output):\n    > there was no reason to calculate sums, subtractions, ... from the output\n    > so the string type makes more sense\n\n### Fixes\n* Now the ```exec()``` knows how to treat the ```quit``` \n  and ```exit``` commands without raising Exceptions.\n\n**2020-11-14 1.0.0:** <br>\nFirst commit\n\n[Go to the index](#index)\n\n## Author ![](https://i.imgur.com/ej4EVF6.png)\n[Stefano Zenaro (mario33881)](https://github.com/mario33881)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mario33881/siswrapper",
    "keywords": "SIS BLIF siswrapper wrapper development",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "siswrapper",
    "package_url": "https://pypi.org/project/siswrapper/",
    "platform": "",
    "project_url": "https://pypi.org/project/siswrapper/",
    "project_urls": {
      "Homepage": "https://github.com/mario33881/siswrapper"
    },
    "release_url": "https://pypi.org/project/siswrapper/1.2.2/",
    "requires_dist": [
      "pexpect (==4.8.0)"
    ],
    "requires_python": ">=3",
    "summary": "A Python wrapper for SIS",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11369260,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de4075747a8612f2acf449b3d3665f47fcc9f65d135195fba82df0735099073a",
          "md5": "e2be53203cc1471a9a633a6d53bd12b8",
          "sha256": "163994daa9138af9c2cdd355d5f839fd06bd216b3c38d216213d08a341883350"
        },
        "downloads": -1,
        "filename": "siswrapper-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2be53203cc1471a9a633a6d53bd12b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 6954,
        "upload_time": "2021-01-03T17:31:02",
        "upload_time_iso_8601": "2021-01-03T17:31:02.552985Z",
        "url": "https://files.pythonhosted.org/packages/de/40/75747a8612f2acf449b3d3665f47fcc9f65d135195fba82df0735099073a/siswrapper-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df90a63fe14d3593967e1bdc1bea23636f1a86b3888a6a2e9d1cf002eaa3a9ee",
          "md5": "5f2acafe32bb82f8005dc56baf544f4c",
          "sha256": "58716f1791591b9e6dfb267193268b3b88e1754a66921def5dbda64587dc20cd"
        },
        "downloads": -1,
        "filename": "siswrapper-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f2acafe32bb82f8005dc56baf544f4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 8840,
        "upload_time": "2021-01-04T11:23:23",
        "upload_time_iso_8601": "2021-01-04T11:23:23.782673Z",
        "url": "https://files.pythonhosted.org/packages/df/90/a63fe14d3593967e1bdc1bea23636f1a86b3888a6a2e9d1cf002eaa3a9ee/siswrapper-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17df972c7ad447cd9f01e51901b4dacee4397407c96e630cece026ffcfc4c37e",
          "md5": "94057f023fc5ce27284e88658a63b3f0",
          "sha256": "89986344d70e315411621fdfe2cd06864149e351edc33e26e4d46252f9873ea6"
        },
        "downloads": -1,
        "filename": "siswrapper-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94057f023fc5ce27284e88658a63b3f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 9288,
        "upload_time": "2021-01-09T16:50:26",
        "upload_time_iso_8601": "2021-01-09T16:50:26.161060Z",
        "url": "https://files.pythonhosted.org/packages/17/df/972c7ad447cd9f01e51901b4dacee4397407c96e630cece026ffcfc4c37e/siswrapper-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92d64d91f26bfa693aaf9a33fdc94d2e6472b838ae5d9a2be0845cd971562ef4",
          "md5": "936b67b07402693f73e7dee974b9125d",
          "sha256": "40d415bd453f0383cb44571c42d7b8d8335f654351388cd804b1717375dfffb0"
        },
        "downloads": -1,
        "filename": "siswrapper-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "936b67b07402693f73e7dee974b9125d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 12807,
        "upload_time": "2021-03-16T14:03:30",
        "upload_time_iso_8601": "2021-03-16T14:03:30.894727Z",
        "url": "https://files.pythonhosted.org/packages/92/d6/4d91f26bfa693aaf9a33fdc94d2e6472b838ae5d9a2be0845cd971562ef4/siswrapper-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5469ef8a2e130670d9f7686af018570fa13188976c4c63f91b15e6357f390ce9",
          "md5": "b3c7fde2982c1894dc1849ffed57c6bd",
          "sha256": "90d678f1e7083d8ca4a3dde1753de67fc0043c4e9ec0d779408ff0ef3e41bac4"
        },
        "downloads": -1,
        "filename": "siswrapper-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b3c7fde2982c1894dc1849ffed57c6bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 16135,
        "upload_time": "2021-03-16T14:03:31",
        "upload_time_iso_8601": "2021-03-16T14:03:31.887821Z",
        "url": "https://files.pythonhosted.org/packages/54/69/ef8a2e130670d9f7686af018570fa13188976c4c63f91b15e6357f390ce9/siswrapper-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7eaf957b2a8c8b439ea64d7a1eed2f359ea264dc434b35ce53640126e6e1b2fd",
          "md5": "6ada4a91301487396bb075b8bdb08e6f",
          "sha256": "facf5813c9be6799bbf4c65763ac018aa3c40f532667c76cf02a526a9fd2da75"
        },
        "downloads": -1,
        "filename": "siswrapper-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ada4a91301487396bb075b8bdb08e6f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 12853,
        "upload_time": "2021-03-16T21:32:35",
        "upload_time_iso_8601": "2021-03-16T21:32:35.739767Z",
        "url": "https://files.pythonhosted.org/packages/7e/af/957b2a8c8b439ea64d7a1eed2f359ea264dc434b35ce53640126e6e1b2fd/siswrapper-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c8cc29a8ee07efd546579d9f796e6285c3779a2ed52791230d55512df5ec1cd",
          "md5": "5f5ef23b8d551009cfce92099732e7ce",
          "sha256": "aa33c8ed3fbe0dc854dbe382e742685e549bcd2d5b18384a1b7963e56d5e42d4"
        },
        "downloads": -1,
        "filename": "siswrapper-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f5ef23b8d551009cfce92099732e7ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 16225,
        "upload_time": "2021-03-16T21:32:36",
        "upload_time_iso_8601": "2021-03-16T21:32:36.766998Z",
        "url": "https://files.pythonhosted.org/packages/3c/8c/c29a8ee07efd546579d9f796e6285c3779a2ed52791230d55512df5ec1cd/siswrapper-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4486c74e1ee84f51614bc93eb1d697a2386ab1749475b4ef86c61210573f10ee",
          "md5": "e82bacc0c47277e1923535301e4af38c",
          "sha256": "74710aa73c733fcc93850eec26e098f01a247adc3f52cdd7b342faeec8d3e0eb"
        },
        "downloads": -1,
        "filename": "siswrapper-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e82bacc0c47277e1923535301e4af38c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 12519,
        "upload_time": "2021-09-05T12:18:36",
        "upload_time_iso_8601": "2021-09-05T12:18:36.000513Z",
        "url": "https://files.pythonhosted.org/packages/44/86/c74e1ee84f51614bc93eb1d697a2386ab1749475b4ef86c61210573f10ee/siswrapper-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e20807ec7d5d33e7be50be9d12ba26cdbe36df066142be50d105e3855e24c528",
          "md5": "3acd80672834d8a714a8b52df84bb125",
          "sha256": "0d16196c66cb8700a1d1f6200ac9ac418634aa0b6e76d0a420ba44c707e4d2ea"
        },
        "downloads": -1,
        "filename": "siswrapper-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3acd80672834d8a714a8b52df84bb125",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 16304,
        "upload_time": "2021-09-05T12:18:36",
        "upload_time_iso_8601": "2021-09-05T12:18:36.999346Z",
        "url": "https://files.pythonhosted.org/packages/e2/08/07ec7d5d33e7be50be9d12ba26cdbe36df066142be50d105e3855e24c528/siswrapper-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4486c74e1ee84f51614bc93eb1d697a2386ab1749475b4ef86c61210573f10ee",
        "md5": "e82bacc0c47277e1923535301e4af38c",
        "sha256": "74710aa73c733fcc93850eec26e098f01a247adc3f52cdd7b342faeec8d3e0eb"
      },
      "downloads": -1,
      "filename": "siswrapper-1.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e82bacc0c47277e1923535301e4af38c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 12519,
      "upload_time": "2021-09-05T12:18:36",
      "upload_time_iso_8601": "2021-09-05T12:18:36.000513Z",
      "url": "https://files.pythonhosted.org/packages/44/86/c74e1ee84f51614bc93eb1d697a2386ab1749475b4ef86c61210573f10ee/siswrapper-1.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e20807ec7d5d33e7be50be9d12ba26cdbe36df066142be50d105e3855e24c528",
        "md5": "3acd80672834d8a714a8b52df84bb125",
        "sha256": "0d16196c66cb8700a1d1f6200ac9ac418634aa0b6e76d0a420ba44c707e4d2ea"
      },
      "downloads": -1,
      "filename": "siswrapper-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3acd80672834d8a714a8b52df84bb125",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 16304,
      "upload_time": "2021-09-05T12:18:36",
      "upload_time_iso_8601": "2021-09-05T12:18:36.999346Z",
      "url": "https://files.pythonhosted.org/packages/e2/08/07ec7d5d33e7be50be9d12ba26cdbe36df066142be50d105e3855e24c528/siswrapper-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}