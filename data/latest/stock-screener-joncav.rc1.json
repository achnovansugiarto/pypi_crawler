{
  "info": {
    "author": "Jon Cavallie Mester",
    "author_email": "jonmester3@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Stock-scanner\nStock-scanner is a Python3 package aimed at facilitating the rapid development of custom stock scanners/screeners. The goal is for it to be a sort of framework which easily lets users swap different modules at their own discretion.\n\n## Example code\nUsing a pre-written Condition:\n\n```python\nfrom stock_screener import Stock\nfrom stock_screener.scanner import BasicScanner\nfrom stock_screener.condition.Above150And200SMA import Above150And200SMA\nfrom stock_screener.data_fetcher import YahooDataFetcher\n\nuniverse = 'nasdaq'\npath = f'./{universe}'\n\nprint(\"Looking for stocks above the 150 and 200 day SMA.\")\n\ndata_fetcher = YahooDataFetcher(universe, path)\nconditions = [ Above150And200SMA ]\n\ncandidates = (\n            BasicScanner(conditions, data_fetcher)\n                .loadData()\n                .getCandidates()\n)\n\nprint(list(map(lambda x: x.getTicker(), candidates)))\n```\nWriting a custom Condition:\n```python\nfrom stock_screener import Stock\nfrom stock_screener.condition import Condition\nfrom stock_screener.scanner.BasicScanner import BasicScanner\nfrom stock_screener.data_fetcher.YahooDataFetcher import YahooDataFetcher\n\nuniverse = 'nasdaq'\npath = f'./{universe}'\n\n# Has the stock consolidated?\nclass Consolidating(Condition):\n    def __init__(self, stock: Stock) -> None:\n        \"\"\"\n        Always call super in the constructor.\n        \"\"\"\n        super().__init__(stock)\n\n        # We will look from the last close to 10 days back\n        window = 10\n        try:\n            # Find the max and min closes in this window\n            self.max_close = stock.getClose()[-window:].max()\n            self.min_close = stock.getClose()[-window:].min()\n        except IndexError:\n            return False\n\n    def fulfilled(self) -> bool:\n        \"\"\"\n        If the difference between them is less than 3%\n        we consider the stock consolidated\n        \"\"\"\n        return self.min_close > (self.max_close * 0.97)\n\nprint(\"Looking for consolidated stocks.\")\n\ndata_fetcher = YahooDataFetcher(universe, path)\nconditions = [ Above150And200SMA, Consolidating ]\ncandidates = (\n            BasicScanner(conditions, data_fetcher)\n                .loadData()\n                .getCandidates()\n)\n\nprint(list(map(lambda x: x.getTicker(), candidates)))\n```\n\n## Interfaces\n\nTo achieve this goal of modularity, the framework has a few different interfaces you need to implement when writing your own extensions. They are:\n\n- DataFetcher - an interface for downloading stock data and saving it locally.\n- DataReader - an interface for reading stock data files.\n- Condition - an interface for checking whether a stock fulfills a condition.\n- Validator - an interface for deciding whether a stock should be returned as a candidate from the scan or not, given the conditions it fulfills.\n- Scanner - an interface for the \"main engine\" of the scan.\n\nA general outline of the use of these interfaces could look as such:\n\n1. Use a DataFetcher to download stock data.\n2. Use a DataReader to load the stock data into memory.\n3. Give a Validator a set of Conditions to see if the stock should be returned from the scan or not.\n\nThis process usually all takes place in a Scanner.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pypa/sampleproject",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stock-screener-joncav",
    "package_url": "https://pypi.org/project/stock-screener-joncav/",
    "platform": "",
    "project_url": "https://pypi.org/project/stock-screener-joncav/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pypa/sampleproject/issues",
      "Homepage": "https://github.com/pypa/sampleproject"
    },
    "release_url": "https://pypi.org/project/stock-screener-joncav/0.0.12/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A Python framework for building stock scanners/screeners.",
    "version": "0.0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11123274,
  "releases": {
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8461a34454c7bee03665cf430b1f913b1930c6454a4d80da4b58131d03ff6559",
          "md5": "1aae465fa248d831e90b8e452138d502",
          "sha256": "7287eb7d5ee2966109d36c158b6e22ba265c37a2457d2c8348dd76d0ec6985bf"
        },
        "downloads": -1,
        "filename": "stock_screener_joncav-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1aae465fa248d831e90b8e452138d502",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16174,
        "upload_time": "2021-08-08T15:56:53",
        "upload_time_iso_8601": "2021-08-08T15:56:53.787588Z",
        "url": "https://files.pythonhosted.org/packages/84/61/a34454c7bee03665cf430b1f913b1930c6454a4d80da4b58131d03ff6559/stock_screener_joncav-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05eb78b2b1a7fdbc5e14129a212db6a5513b646ab0b60484c36bd7897a8d8949",
          "md5": "2a5fd7e696d646c6081c7e2ec6be7d93",
          "sha256": "4f70da9078c784bde466a4301485c66835b8b52a84e62b50fc444153824ed9b3"
        },
        "downloads": -1,
        "filename": "stock-screener-joncav-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "2a5fd7e696d646c6081c7e2ec6be7d93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10182,
        "upload_time": "2021-08-08T15:56:55",
        "upload_time_iso_8601": "2021-08-08T15:56:55.525038Z",
        "url": "https://files.pythonhosted.org/packages/05/eb/78b2b1a7fdbc5e14129a212db6a5513b646ab0b60484c36bd7897a8d8949/stock-screener-joncav-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8461a34454c7bee03665cf430b1f913b1930c6454a4d80da4b58131d03ff6559",
        "md5": "1aae465fa248d831e90b8e452138d502",
        "sha256": "7287eb7d5ee2966109d36c158b6e22ba265c37a2457d2c8348dd76d0ec6985bf"
      },
      "downloads": -1,
      "filename": "stock_screener_joncav-0.0.12-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1aae465fa248d831e90b8e452138d502",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 16174,
      "upload_time": "2021-08-08T15:56:53",
      "upload_time_iso_8601": "2021-08-08T15:56:53.787588Z",
      "url": "https://files.pythonhosted.org/packages/84/61/a34454c7bee03665cf430b1f913b1930c6454a4d80da4b58131d03ff6559/stock_screener_joncav-0.0.12-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05eb78b2b1a7fdbc5e14129a212db6a5513b646ab0b60484c36bd7897a8d8949",
        "md5": "2a5fd7e696d646c6081c7e2ec6be7d93",
        "sha256": "4f70da9078c784bde466a4301485c66835b8b52a84e62b50fc444153824ed9b3"
      },
      "downloads": -1,
      "filename": "stock-screener-joncav-0.0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "2a5fd7e696d646c6081c7e2ec6be7d93",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10182,
      "upload_time": "2021-08-08T15:56:55",
      "upload_time_iso_8601": "2021-08-08T15:56:55.525038Z",
      "url": "https://files.pythonhosted.org/packages/05/eb/78b2b1a7fdbc5e14129a212db6a5513b646ab0b60484c36bd7897a8d8949/stock-screener-joncav-0.0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}