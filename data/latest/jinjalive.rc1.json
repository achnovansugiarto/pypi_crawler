{
  "info": {
    "author": "Marlysys",
    "author_email": "rsaikali@marlysys.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development",
      "Topic :: Utilities"
    ],
    "description": "=======================\nJinjaLive documentation\n=======================\n\nWelcome to JinjaLive documentation!\n\nJinjaLive is a project created by Marlysys.\n\nJinjaLive can be used to test your Jinja templates.\nIt renders a Jinja template with given variables to a rendered output. As simple as that !\n\n.. contents::\n\n\nInstallation\n============\n\nJinjaLive is available on ``pip``:\n\n.. code-block:: bash\n\n    pip install jinjalive\n\nUsage\n=====\n\nCommand-line usage\n------------------\n\nGiven a context file and a template file, JinjaLive will generate the output file:\n\n.. code-block:: bash\n\n    jinjalive -cf <context_file> -tf <template_file> -of <output_file>\n\nWeb application\n---------------\n\nLaunch the JinjaLive server with:\n\n.. code-block:: bash\n\n    jinjalive-server\n\nOpen your browser to ``http://<your_ip_address>:8888``\n\nTests\n=====\n\nJinjaLive embeds unittests to ensure both functionnalities coverage but also Python code quality.\n\nThe test suite can be launched with ``tox``:\n\n.. code-block:: bash\n\n    cd jinjalive\n    sudo pip install -r test-requirements.txt\n    tox\n\n\nApache configuration (optional)\n===============================\n\nIf you want to serve the JinjaLive web application behind Apache, please use WSGI.\n\n.. code-block:: bash\n\n    sudo apt-get update\n    sudo apt-get install apache2 libapache2-mod-wsgi\n    sudo a2enmod wsgi\n    \nHere is a sample Apache virtualhost:\n\n.. code-block:: apacheconf\n\n    <VirtualHost *:80>\n\n        WSGIDaemonProcess jinjalive threads=5\n        WSGIScriptAlias /jinja /usr/local/lib/python2.7/dist-packages/jinjalive/jinjalive.wsgi\n    \n        <Directory /usr/local/lib/python2.7/dist-packages/jinjalive>\n            WSGIProcessGroup jinjalive\n            WSGIApplicationGroup %{GLOBAL}\n            WSGIScriptReloading On\n            Require all granted\n        </Directory>\n    \n        ErrorLog ${APACHE_LOG_DIR}/jinjalive.error.log\n        CustomLog ${APACHE_LOG_DIR}/jinjalive.access.log combined\n    \n    </VirtualHost>\n\nYour JinjaLive web application is now available under ``http://<your_ip_address>/jinja``.\n\nContributing\n============\n\nRequirements\n------------\n\nJinjaLive needs the following requirements:\n\n- `Python <https://www.python.org/>`_.\n- `Bower <http://bower.io/#install-bower>`_.\n\nNowadays, ``python`` should ever be present on your system, but ``bower`` usually requires proper installation.\n\n``bower`` requires ``nodejs``. Here is the full procedure to install bower for Ubuntu:\n\n.. code-block:: bash\n\n    sudo apt-get update\n    sudo apt-get install nodejs npm\n    sudo npm install -g bower\n    sudo ln -s /usr/bin/nodejs /usr/bin/node\n    \nGo to project directory:\n\n.. code-block:: bash\n\n    cd jinjalive\n\nInstall bower requirements:\n\n.. code-block:: bash\n\n    bower install\n\nInstall Python requirements and JinjaLive package with a virtualenv:\n\n.. code-block:: bash\n\n    mkvirtualenv jinjalive\n    pip install -r requirements.txt\n    python setup.py develop",
    "description_content_type": null,
    "docs_url": "https://pythonhosted.org/jinjalive/",
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.marlysys.com",
    "keywords": null,
    "license": "Apache",
    "maintainer": null,
    "maintainer_email": null,
    "name": "jinjalive",
    "package_url": "https://pypi.org/project/jinjalive/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/jinjalive/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://www.marlysys.com"
    },
    "release_url": "https://pypi.org/project/jinjalive/0.2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "JinjaLive: Jinja rendering made easy",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2007426,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03b785864dddddb16c42319c8e5fa0e25838dccf8593b02a222e944370dffe4b",
          "md5": "642c3ec8e67f9b78a09e2223b138abe6",
          "sha256": "0c11980a4dd916d0ab04a9114c66102d68566ad7bfa31a6ed0b7f108a51f184d"
        },
        "downloads": -1,
        "filename": "jinjalive-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "642c3ec8e67f9b78a09e2223b138abe6",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "requires_python": null,
        "size": 3326541,
        "upload_time": "2016-03-14T16:43:21",
        "upload_time_iso_8601": "2016-03-14T16:43:21.214935Z",
        "url": "https://files.pythonhosted.org/packages/03/b7/85864dddddb16c42319c8e5fa0e25838dccf8593b02a222e944370dffe4b/jinjalive-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "113245892b9ce10a0b6f79f99038c9238bf81b9d23469da061aad23f4beb1f19",
          "md5": "395b6ec0cee889b334b9a219ae7303d6",
          "sha256": "11a68c40906e68fbd3afd30dba14ccf8ca13c7ac48610dac1f5da8927844f700"
        },
        "downloads": -1,
        "filename": "jinjalive-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "395b6ec0cee889b334b9a219ae7303d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3359223,
        "upload_time": "2016-03-14T16:43:10",
        "upload_time_iso_8601": "2016-03-14T16:43:10.224779Z",
        "url": "https://files.pythonhosted.org/packages/11/32/45892b9ce10a0b6f79f99038c9238bf81b9d23469da061aad23f4beb1f19/jinjalive-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03b785864dddddb16c42319c8e5fa0e25838dccf8593b02a222e944370dffe4b",
        "md5": "642c3ec8e67f9b78a09e2223b138abe6",
        "sha256": "0c11980a4dd916d0ab04a9114c66102d68566ad7bfa31a6ed0b7f108a51f184d"
      },
      "downloads": -1,
      "filename": "jinjalive-0.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "642c3ec8e67f9b78a09e2223b138abe6",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 3326541,
      "upload_time": "2016-03-14T16:43:21",
      "upload_time_iso_8601": "2016-03-14T16:43:21.214935Z",
      "url": "https://files.pythonhosted.org/packages/03/b7/85864dddddb16c42319c8e5fa0e25838dccf8593b02a222e944370dffe4b/jinjalive-0.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "113245892b9ce10a0b6f79f99038c9238bf81b9d23469da061aad23f4beb1f19",
        "md5": "395b6ec0cee889b334b9a219ae7303d6",
        "sha256": "11a68c40906e68fbd3afd30dba14ccf8ca13c7ac48610dac1f5da8927844f700"
      },
      "downloads": -1,
      "filename": "jinjalive-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "395b6ec0cee889b334b9a219ae7303d6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3359223,
      "upload_time": "2016-03-14T16:43:10",
      "upload_time_iso_8601": "2016-03-14T16:43:10.224779Z",
      "url": "https://files.pythonhosted.org/packages/11/32/45892b9ce10a0b6f79f99038c9238bf81b9d23469da061aad23f4beb1f19/jinjalive-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}