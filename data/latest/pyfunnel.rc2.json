{
  "info": {
    "author": "A. Gautier",
    "author_email": "agautier@lbl.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: C",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering",
      "Topic :: Utilities"
    ],
    "description": "# pyfunnel\n\n[![Build Status](https://travis-ci.org/lbl-srg/funnel.svg?branch=master)](https://travis-ci.org/lbl-srg/funnel)\n\nA cross-platform C-based software for comparing two `(x, y)` data sets given tolerances in `x` and `y` directions.\n\n## Principles\n\n### Overall\n\nA so-called funnel is generated around the reference `(x, y)` data points.\nThe funnel is sized according to the absolute or relative tolerance in\nboth `x` and `y` directions.\nThe algorithm then checks if any test data points are inside the funnel,\nand reports these points in the file `errors.csv` in the output directory.\nFour other files are stored in the output directory: reference data points,\ntest data points, lower bounds and upper bounds of the funnel.\n\nOne potential application is to validate the development of building\nHVAC control sequences. By comparing data curves from real operation with\ndata curves from simulation, one can verify if the control sequences\nhave been implemented such that they produce a similar control response\nthan a simulation model that is considered to be the original specification.\n\n![Funnel Plot](https://github.com/lbl-srg/funnel/raw/master/img/plot_image.svg)\n\n\n### Method to Compute the Funnel\n\nThe funnel is computed as follows.\n\n  1. Tolerance areas (based on L1-norm) are built around each reference data point.\n\n     * The tolerance parameters correspond to the half-width and half-height of the\n    tolerance areas. They default to 0.\n\n     * When using `atolx` and `atoly`, the tolerance is considered as absolute\n    (same unit as `x` and `y`).\n\n     * When using `ltolx` and `ltoly`, the tolerance is considered relative\n    to the local value of `x` and `y`.\n\n     * When using `rtolx` and `rtoly`, the tolerance is considered relative\n    to the range of `x` and `y`. This option is available mainly for compatibility with\n    the algorithm implemented in [csv-compare](https://github.com/modelica-tools/csv-compare)\n    for relative comparison. It should be used with caution.\n\n  2. The algorithm selects which corners of the tolerance rectangles\n  are used to build the envelopes based on the change in the derivative sign at\n  each reference point.\n\n  3. Intersection boundary points are computed when a selected corner\n  happens not to be in the logical order with the next one on the `x` scale\n  (i.e., at a local extremum).\n  New envelopes are then built encompassing all boundary points, and points strictly\n  within the envelopes are dropped.\n\nThe comparison then simply consists of interpolating the upper and lower envelopes\nat the `x` test values and comparing the yielded `y_up` and `y_low` values with the `y` test values.\nBy convention, the error is `max(0, y - y_up) - min(0, y - y_low)` and hence it is always positive.\n\n## How to Run\n\n### System Requirements\n\nThe software is tested on the following platforms.\n\n  * Linux x64\n  * Windows x64\n  * macOS\n\nA Python binding is available to access the library. It is compatible with Python 2 and 3.\n\n### Installing\n\nThe Python binding is delivered as a package named `pyfunnel`, available on PyPI.\n\nFor development, additional dependencies are needed and can be installed with\n\n`pip install -r requirements.txt`\n\n### Main Functions\n\nThe software is primarily intended to be used by means of a Python binding.\nThe package `pyfunnel` provides the following functions.\n\n  * `compareAndReport`: calls `funnel` binary with list-like objects as `x`, `y` reference and test values.\n    Outputs `errors.csv`, `lowerBound.csv`, `upperBound.csv`, `reference.csv`, `test.csv`\n    into the output directory (`./results` by default).\n\n  * `plot_funnel`: plots `funnel` results stored in the directory which path is provided as argument.\n    Displays plot in default browser. See function docstring for further details.\n\nThe module `pyfunnel.py` can also be run with the following command line interface.\n\n```\nusage: pyfunnel.py [-h] --reference REFERENCE --test TEST [--output OUTPUT] [--atolx ATOLX] [--atoly ATOLY] [--ltolx LTOLX] [--ltoly LTOLY] [--rtolx RTOLX] [--rtoly RTOLY]\n\nRun funnel binary from terminal.\n\nOutput `errors.csv`, `lowerBound.csv`, `upperBound.csv`, `reference.csv`, `test.csv` into the output directory (`./results` by default).\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --output OUTPUT       Path of directory to store output data\n  --atolx ATOLX         Absolute tolerance along x axis\n  --atoly ATOLY         Absolute tolerance along y axis\n  --ltolx LTOLX         Relative tolerance along x axis (relatively to the local value)\n  --ltoly LTOLY         Relative tolerance along y axis (relatively to the local value)\n  --rtolx RTOLX         Relative tolerance along x axis (relatively to the range)\n  --rtoly RTOLY         Relative tolerance along y axis (relatively to the range)\n\nrequired named arguments:\n  --reference REFERENCE\n                        Path of CSV file with reference data\n  --test TEST           Path of CSV file with test data\n\nFull documentation at https://github.com/lbl-srg/funnel\n```\n\n### Example\n\nFrom a Python shell with `./tests/test_bin` as the current working directory, run\n\n```python\n>>> import pandas as pd\n>>> import pyfunnel\n>>> ref = pd.read_csv('trended.csv')\n>>> test = pd.read_csv('simulated.csv')\n>>> pyfunnel.compareAndReport(xReference=ref.iloc(axis=1)[0], yReference=ref.iloc(axis=1)[1],\n... xTest=test.iloc(axis=1)[0], yTest=test.iloc(axis=1)[1], atolx=0.002, atoly=0.002)\n>>> pyfunnel.plot_funnel('results')\n```\nOr from a terminal with `./tests/test_bin` as the current working directory, run\n```\n$ python ../../pyfunnel/pyfunnel.py --reference trended.csv --test simulated.csv --atolx 0.002 --atoly 0.002\n```\n\n## Build from Source\n\n### System Requirements\n\nThe cross-platform build system relies on CMake version `3.11.*`.\n\nThe distributed binaries are built with Microsoft Visual Studio C/C++ compiler\n(Windows), Clang (macOS) and GCC (Linux).\n\n### Procedure\n\nTo compile, link and install, from the top-level directory, run the following commands\n\n```\nmkdir build\ncd build\ncmake ..                           (add `-A x64` on Windows to compile in 64 bits)\ncmake --build . --target install   (add `--config Release` on Windows)\n```\n\nTo run the tests, from `./build` run\n\n```\nctest                               (add `-C Release` on Windows)\n```\n\n## License\n\nModified 3-clause BSD, see `LICENSE.txt`.\n\n## Copyright\n\nSee `COPYRIGHT.txt`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lbl-srg/funnel",
    "keywords": "",
    "license": "3-clause BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyfunnel",
    "package_url": "https://pypi.org/project/pyfunnel/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyfunnel/",
    "project_urls": {
      "Homepage": "https://github.com/lbl-srg/funnel"
    },
    "release_url": "https://pypi.org/project/pyfunnel/0.3.0/",
    "requires_dist": [
      "six (>=1.11)"
    ],
    "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
    "summary": "Comparison tool for two (x, y) data sets given tolerances in x and y directions",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10141776,
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cceb0cd2f80d9df1adb5d05d56b91573071dd4ac4d25a14065b0d3e90fab363a",
          "md5": "a69083e456d91ac373df44d6522911b2",
          "sha256": "458110a85c66a54b466d93151d1a9ed01b6a5784e6456906007144f59858475f"
        },
        "downloads": -1,
        "filename": "pyfunnel-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a69083e456d91ac373df44d6522911b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
        "size": 52515,
        "upload_time": "2020-06-22T17:59:54",
        "upload_time_iso_8601": "2020-06-22T17:59:54.733302Z",
        "url": "https://files.pythonhosted.org/packages/cc/eb/0cd2f80d9df1adb5d05d56b91573071dd4ac4d25a14065b0d3e90fab363a/pyfunnel-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d00bb1e8d92b873f4e059c99de60686d5b35441b41f6a351636f43d82018d1b1",
          "md5": "764a0d40d2cf1b55dd01c355d1296ef6",
          "sha256": "3e87937b6d9b61c7e11b00b50c88fce2c3b8e6f2d2b4a0c42c0e1fe19214f541"
        },
        "downloads": -1,
        "filename": "pyfunnel-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "764a0d40d2cf1b55dd01c355d1296ef6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
        "size": 53881,
        "upload_time": "2020-06-22T17:59:55",
        "upload_time_iso_8601": "2020-06-22T17:59:55.970413Z",
        "url": "https://files.pythonhosted.org/packages/d0/0b/b1e8d92b873f4e059c99de60686d5b35441b41f6a351636f43d82018d1b1/pyfunnel-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca5f23b3712897cd116bfd736ed145bf664957a42b614b5729cb45b506cf3486",
          "md5": "94d12404d4b2944ef00b869c3edb31b7",
          "sha256": "1bb7bec7faf7b3cb5839d61101e490145885ca19e596d1c75b300a8ca8518c3a"
        },
        "downloads": -1,
        "filename": "pyfunnel-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94d12404d4b2944ef00b869c3edb31b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
        "size": 55827,
        "upload_time": "2021-03-24T00:29:52",
        "upload_time_iso_8601": "2021-03-24T00:29:52.914986Z",
        "url": "https://files.pythonhosted.org/packages/ca/5f/23b3712897cd116bfd736ed145bf664957a42b614b5729cb45b506cf3486/pyfunnel-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71a435bfdb16feca392b642f8cc766231b6dc363e5dbb2041e3e2874aad57801",
          "md5": "e136af2e92d873ea8b7dcbe5dddceff3",
          "sha256": "68256e82ecaa3832741dbf5f9c9a3420fcdb6b0c646406169e6c728ad1d47c6c"
        },
        "downloads": -1,
        "filename": "pyfunnel-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e136af2e92d873ea8b7dcbe5dddceff3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
        "size": 58517,
        "upload_time": "2021-03-24T00:29:54",
        "upload_time_iso_8601": "2021-03-24T00:29:54.081355Z",
        "url": "https://files.pythonhosted.org/packages/71/a4/35bfdb16feca392b642f8cc766231b6dc363e5dbb2041e3e2874aad57801/pyfunnel-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca5f23b3712897cd116bfd736ed145bf664957a42b614b5729cb45b506cf3486",
        "md5": "94d12404d4b2944ef00b869c3edb31b7",
        "sha256": "1bb7bec7faf7b3cb5839d61101e490145885ca19e596d1c75b300a8ca8518c3a"
      },
      "downloads": -1,
      "filename": "pyfunnel-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "94d12404d4b2944ef00b869c3edb31b7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
      "size": 55827,
      "upload_time": "2021-03-24T00:29:52",
      "upload_time_iso_8601": "2021-03-24T00:29:52.914986Z",
      "url": "https://files.pythonhosted.org/packages/ca/5f/23b3712897cd116bfd736ed145bf664957a42b614b5729cb45b506cf3486/pyfunnel-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71a435bfdb16feca392b642f8cc766231b6dc363e5dbb2041e3e2874aad57801",
        "md5": "e136af2e92d873ea8b7dcbe5dddceff3",
        "sha256": "68256e82ecaa3832741dbf5f9c9a3420fcdb6b0c646406169e6c728ad1d47c6c"
      },
      "downloads": -1,
      "filename": "pyfunnel-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e136af2e92d873ea8b7dcbe5dddceff3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
      "size": 58517,
      "upload_time": "2021-03-24T00:29:54",
      "upload_time_iso_8601": "2021-03-24T00:29:54.081355Z",
      "url": "https://files.pythonhosted.org/packages/71/a4/35bfdb16feca392b642f8cc766231b6dc363e5dbb2041e3e2874aad57801/pyfunnel-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}