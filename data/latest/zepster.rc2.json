{
  "info": {
    "author": "Steven Hand",
    "author_email": "zepster@datasciguy.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Topic :: Database"
    ],
    "description": "<!--\nCopyright 2020 Cisco Systems, Inc. and its affiliates.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License\n-->\n\n# Zepster: Model-Driven Engineering Toolset for Data\n\nZepster implements \n[Model-Driven Engineering (MDE)](https://en.wikipedia.org/wiki/Model-driven_engineering)\nfor data.  It creates a consistent\nset of data-related artifacts to drive development with \n- better alignment among business stakeholders and developers\n- fewer bugs\n- increased productivity\n\n## Summary\n\nZepster lets you:\n\n- Use \n[Entity-Relationship Modeling](https://en.wikipedia.org/wiki/Entityâ€“relationship_model)\nto describe entitites, attributes, and the relationships between entities in an\n[Entity-Relationship Diagram (ERD)](http://www2.cs.uregina.ca/~bernatja/crowsfoot.html)\n- Convert ERDs into Entity-Relationship Markup Language (ERML) files\n- Generate data-related files from the ERML, such as:\n  - Relational database schema\n  - Database catalog\n  - Python enum definitions\n\n## Details\n\n### Entity-Relationship Modeling Using yEd Graph Editor\n\nFirst, create an ERD for your business use case, using \n[yEd](https://www.yworks.com/products/yed) \ngraph editor.\nThe yEd application is free and is available for MacOS, Linux, and Windows.\n\nWith yEd you can create a diagram that shows\n- business entities\n- their attributes\n- how entities are related to each other\n\nThe resulting diagram is saved as a \n[GraphML](http://graphml.graphdrawing.org/index.html)\nfile, which is an industry-standard format for graphs.\n\n### Generate Entity-Relationship Markup Language (ERML) File\n\nNext, generate an Entity-Relationship Markup Language (ERML) file from the\nsaved GraphML diagram file.  To do this, use the ```generml``` script:\n\n```\nUsage: generml.py [OPTIONS]\n\n  Read an Entity-Relationship diagram created by the yEd graph editor and\n  convert it into Entity-Relationship Markup Language\n\n  References:\n  yEd - https://www.yworks.com/products/yed\n  GraphML - http://graphml.graphdrawing.org/index.html\n\nOptions:\n  --input TEXT    Input GraphML file (default is standard input, also\n                  represented by a dash \"-\")\n  --output TEXT   Output ERML file (default is standard output, also\n                  represented by a dash \"-\")\n  --overwrite     If specified, overwrite the output file if it already exists\n  --logging TEXT  Set logging to the specified level: NOTSET, DEBUG, INFO,\n                  WARNING, ERROR, CRITICAL\n  --help          Show this message and exit.\n```\n\nThe ERML is an intermediate language that decouples downstream tools (such\nas the relational database schema generator) from\nthe specific graph editor tool (yEd).  In theory, any tool that creates\nERML can serve as an input source for generating downstream files.\n\nAfter generating the ERML file, you can generate a number of things, described below.\n\n### Generate SQL Relational Database Schema Definitions\n\nNext, you can generate the schema definitions that define the tables for \na relational database, using SQL.  To do this, use the ```genschema``` script:\n\n```\nUsage: genschema.py [OPTIONS]\n\n  Read an Entity-Relationship Markup Language file and write a database\n  schema SQL file\n\nOptions:\n  --input TEXT    Input Entity-Relationship Markup Language file (default is\n                  standard input, also represented by a dash \"-\")\n  --output TEXT   Output schema definition file (default is standard output,\n                  also represented by a dash \"-\")\n  --overwrite     If specified, overwrite the output file if it already exists\n  --logging TEXT  Set logging to the specified level: NOTSET, DEBUG, INFO,\n                  WARNING, ERROR, CRITICAL\n  --dialect TEXT  Set the database dialect: (currently only \"crdb\")\n  --help          Show this message and exit.\n```\n\n### Generate Database Catalog Using Markdown\n\nYou can also generate a database catalog to document the database for users.\nThe catalog is created using GitHub-flavored\n[Markdown](https://en.wikipedia.org/wiki/Markdown)\nformat.  To do this, use the ```gencatalog``` script:\n\n```\nUsage: gencatalog.py [OPTIONS]\n\n  Read an Entity-Relationship Markup Language\n  file and write a data catalog output file\n\nOptions:\n  --input TEXT    Input Entity-Relationship Markup Language file (default is\n                  standard input, also represented by a dash \"-\")\n  --output TEXT   Output catalog file (default is standard output, also\n                  represented by a dash \"-\")\n  --overwrite     If specified, overwrite the output file if it already exists\n  --logging TEXT  Set logging to the specified level: NOTSET, DEBUG, INFO,\n                  WARNING, ERROR, CRITICAL\n  --format TEXT   Set the catalog format: (currently only \"md\")\n  --help          Show this message and exit.\n```\n\n### Generate Python Enum Definitions\n\nYou can also generate Python enum definitions from the ERML file.  This can\nreduce application bugs.  To do this, use the ```genpyenums``` script:\n\n```\nUsage: genpyenums.py [OPTIONS]\n\n  Generate Python enum declarations from an Entity-Relationship Markup\n  Language (ERML) file\n\nOptions:\n  --input TEXT    Input Entity-Relationship Markup Language file (default is\n                  standard input, also represented by a dash \"-\")\n  --output TEXT   Output schema definition file (default is standard output,\n                  also represented by a dash \"-\")\n  --overwrite     If specified, overwrite the output file if it already exists\n  --logging TEXT  Set logging to the specified level: NOTSET, DEBUG, INFO,\n                  WARNING, ERROR, CRITICAL\n  --help          Show this message and exit.\n```\n\n---\n\nCopyright 2020 Cisco Systems, Inc. and its affiliates.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");  \nyou may not use this file except in compliance with the License.  \nYou may obtain a copy of the License at  \n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software  \ndistributed under the License is distributed on an \"AS IS\" BASIS,  \nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  \nSee the License for the specific language governing permissions and  \nlimitations under the License  \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cisco/zepster",
    "keywords": "database data er entity relationship diagram model modeling MDE",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zepster",
    "package_url": "https://pypi.org/project/zepster/",
    "platform": "",
    "project_url": "https://pypi.org/project/zepster/",
    "project_urls": {
      "Homepage": "https://github.com/cisco/zepster"
    },
    "release_url": "https://pypi.org/project/zepster/0.1.1/",
    "requires_dist": [
      "cardinality",
      "click",
      "jsonschema",
      "loguru",
      "PyYAML",
      "toposort"
    ],
    "requires_python": "",
    "summary": "Generate data-related artifacts from an Entity-Relationship diagram",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8584959,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a68b6ff6f7bccb6222187e1aae5ffd3f7dd48a014eead587140c12b84f24f49",
          "md5": "5586d1e5b32e497e4fe00310071893a4",
          "sha256": "3adef53569032e50cd9952bd41bf9114272501fb12b054056b9d76145397e732"
        },
        "downloads": -1,
        "filename": "zepster-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5586d1e5b32e497e4fe00310071893a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25812,
        "upload_time": "2020-11-05T05:18:09",
        "upload_time_iso_8601": "2020-11-05T05:18:09.230522Z",
        "url": "https://files.pythonhosted.org/packages/9a/68/b6ff6f7bccb6222187e1aae5ffd3f7dd48a014eead587140c12b84f24f49/zepster-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ae44ec44a7e5ace10c897c12df2bb003f08c4f05ccaac929e012e292383c612",
          "md5": "8eac35d3face9cc4bb19564c06022381",
          "sha256": "c9a971ccad66c2d3db7a7e55e9bf6e05f3a71869b1411d955775db47a5f93e50"
        },
        "downloads": -1,
        "filename": "zepster-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8eac35d3face9cc4bb19564c06022381",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18994,
        "upload_time": "2020-11-05T05:18:13",
        "upload_time_iso_8601": "2020-11-05T05:18:13.930785Z",
        "url": "https://files.pythonhosted.org/packages/8a/e4/4ec44a7e5ace10c897c12df2bb003f08c4f05ccaac929e012e292383c612/zepster-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01c390062bfdd19f4f9bb7cef3d7106910afc0996b6e5f0566f3d346da517046",
          "md5": "fba2513e42a9a1e57052edd25b6266ed",
          "sha256": "4a28f0721f21a8e29505ced23623d83187bf1e5cd1593fa5b1213f2e3fa18568"
        },
        "downloads": -1,
        "filename": "zepster-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fba2513e42a9a1e57052edd25b6266ed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25834,
        "upload_time": "2020-11-05T05:18:11",
        "upload_time_iso_8601": "2020-11-05T05:18:11.804038Z",
        "url": "https://files.pythonhosted.org/packages/01/c3/90062bfdd19f4f9bb7cef3d7106910afc0996b6e5f0566f3d346da517046/zepster-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "756d4f215f78b698f0ad7ea774b0ceb1a8fc7a1461d054323dd8e03fb4e554e2",
          "md5": "b35ea94f267bf308b86d1b13ace6d29c",
          "sha256": "b3324b9f5b98c4b13f87089a6d0df540fa23f79f540dbe352c17a29da51ac009"
        },
        "downloads": -1,
        "filename": "zepster-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b35ea94f267bf308b86d1b13ace6d29c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18998,
        "upload_time": "2020-11-05T05:18:12",
        "upload_time_iso_8601": "2020-11-05T05:18:12.724013Z",
        "url": "https://files.pythonhosted.org/packages/75/6d/4f215f78b698f0ad7ea774b0ceb1a8fc7a1461d054323dd8e03fb4e554e2/zepster-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "01c390062bfdd19f4f9bb7cef3d7106910afc0996b6e5f0566f3d346da517046",
        "md5": "fba2513e42a9a1e57052edd25b6266ed",
        "sha256": "4a28f0721f21a8e29505ced23623d83187bf1e5cd1593fa5b1213f2e3fa18568"
      },
      "downloads": -1,
      "filename": "zepster-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fba2513e42a9a1e57052edd25b6266ed",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 25834,
      "upload_time": "2020-11-05T05:18:11",
      "upload_time_iso_8601": "2020-11-05T05:18:11.804038Z",
      "url": "https://files.pythonhosted.org/packages/01/c3/90062bfdd19f4f9bb7cef3d7106910afc0996b6e5f0566f3d346da517046/zepster-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "756d4f215f78b698f0ad7ea774b0ceb1a8fc7a1461d054323dd8e03fb4e554e2",
        "md5": "b35ea94f267bf308b86d1b13ace6d29c",
        "sha256": "b3324b9f5b98c4b13f87089a6d0df540fa23f79f540dbe352c17a29da51ac009"
      },
      "downloads": -1,
      "filename": "zepster-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b35ea94f267bf308b86d1b13ace6d29c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18998,
      "upload_time": "2020-11-05T05:18:12",
      "upload_time_iso_8601": "2020-11-05T05:18:12.724013Z",
      "url": "https://files.pythonhosted.org/packages/75/6d/4f215f78b698f0ad7ea774b0ceb1a8fc7a1461d054323dd8e03fb4e554e2/zepster-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}