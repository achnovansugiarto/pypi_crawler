{
  "info": {
    "author": "Juan Carlos",
    "author_email": "whoami0jc@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Non-Blocking-Http-Logging-Handler\n\n\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n![Python Versions](https://img.shields.io/badge/Python-3.8%20%7C%203.9%20%7C%203.10%20%7C%203.11-blue)\n\nThis library provides a non-blocking http logging handler for python 3.8+ that can be used to send logs to a logging \nservice in a non-blocking way via http requests in a very simple way.\n\n## Installation\n\n```bash\npip install non-blocking-http-logging-handler\n```\n\n## Basic Usage\n\n```python\nimport logging\n\nfrom non_blocking_http_handler.handler import NonBlockingHttpHandler\n\nhttpHandler = NonBlockingHttpHandler(\n    url='http://localhost:5000/logs',\n    max_workers=10,\n    max_retries=3\n)\n\nlog = logging.getLogger()\nlog.setLevel(logging.DEBUG)  # set level to DEBUG to see all logs\nlog.addHandler(httpHandler)\n```\n\nThe complete example is available in the examples folder in the file `basic_usage.py`.\n\n### Parameters explanation\n\n- `url`: The url of the logging service.\n- `max_workers`: The maximum number of workers that will be used to send logs to the logging service.\n- `max_retries`: The maximum number of retries that will be done if the request fails.\n- `extra`: A dictionary with extra fields that will be added to the log (explained below).\n\n### Output format\n\nThe output format of the logs is a json with the following fields:\n- `level`: The level of the log.\n- `message`: The message of the log.\n- `file`: The file name of the log.\n- `line`: The line number of the log.\n- `timestamp`: The timestamp of the log.\n- the extra fields that you may have added to the log.\n\nfor example:\n\n```json\n{\n    \"level\": \"INFO\",\n    \"message\": \"This is a log\",\n    \"file\": \"basic_usage.py\",\n    \"line\": 10,\n    \"timestamp\": \"2021-10-10 10:10:10\"\n}\n```\n\n## Add extra fields to the log\n\nIn same cases you may want to add extra fields to the log, for example, \nif you are using a logging handler to send logs to a logging service, \nyou may want to add the service name to the log or the ip.\n\nFor this purpose, you can use the `extra` parameter of the `NonBlockingHttpHandler` class.\n\n```python\nimport logging\nimport socket  # for get hostname amd ip\n\nfrom non_blocking_http_handler.handler import NonBlockingHttpHandler\n\nhttpHandler = NonBlockingHttpHandler(\n    url='http://localhost:5000/logs',\n    max_workers=5,\n    max_retries=3,\n    extra={\n        'hostname': socket.gethostname()\n    }\n)\n\nlog = logging.getLogger()\nlog.setLevel(logging.DEBUG)  # set level to DEBUG to see all logs\nlog.addHandler(httpHandler)\n```\n\nThe complete example is available in the examples folder in the file `extra_fields.py`.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/whoami-jc/non-blocking-http-logging-handler",
    "keywords": "",
    "license": "License :: OSI Approved :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Non-Blocking-Http-Logging-Handler",
    "package_url": "https://pypi.org/project/Non-Blocking-Http-Logging-Handler/",
    "platform": null,
    "project_url": "https://pypi.org/project/Non-Blocking-Http-Logging-Handler/",
    "project_urls": {
      "Homepage": "https://github.com/whoami-jc/non-blocking-http-logging-handler"
    },
    "release_url": "https://pypi.org/project/Non-Blocking-Http-Logging-Handler/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python logging handler that sends log records to a HTTP server in a non-blocking way.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16992740,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "424782686df60feb779a568ea4b8a437156e2c0e4be1054dc257520255759551",
          "md5": "5364ddafadfa353248e98243cef2aa35",
          "sha256": "7ac13c2552804ed05908ac1d4ad30d2b37c13efa6f45feabf2307a5cb2da6916"
        },
        "downloads": -1,
        "filename": "Non-Blocking-Http-Logging-Handler-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5364ddafadfa353248e98243cef2aa35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4414,
        "upload_time": "2023-02-12T19:45:45",
        "upload_time_iso_8601": "2023-02-12T19:45:45.663507Z",
        "url": "https://files.pythonhosted.org/packages/42/47/82686df60feb779a568ea4b8a437156e2c0e4be1054dc257520255759551/Non-Blocking-Http-Logging-Handler-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff6e776d85e82c504eaee13e866d478781df47eedbeca697d6233b48db1c9ed4",
          "md5": "fb324547955d026ee17192e0465f8a59",
          "sha256": "f44de58e1ac404bdf9a0754ab3c137b314e1d6eb420cc7a51b16747ff5961f1e"
        },
        "downloads": -1,
        "filename": "Non-Blocking-Http-Logging-Handler-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "fb324547955d026ee17192e0465f8a59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4548,
        "upload_time": "2023-02-23T12:28:11",
        "upload_time_iso_8601": "2023-02-23T12:28:11.074401Z",
        "url": "https://files.pythonhosted.org/packages/ff/6e/776d85e82c504eaee13e866d478781df47eedbeca697d6233b48db1c9ed4/Non-Blocking-Http-Logging-Handler-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff6e776d85e82c504eaee13e866d478781df47eedbeca697d6233b48db1c9ed4",
        "md5": "fb324547955d026ee17192e0465f8a59",
        "sha256": "f44de58e1ac404bdf9a0754ab3c137b314e1d6eb420cc7a51b16747ff5961f1e"
      },
      "downloads": -1,
      "filename": "Non-Blocking-Http-Logging-Handler-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "fb324547955d026ee17192e0465f8a59",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4548,
      "upload_time": "2023-02-23T12:28:11",
      "upload_time_iso_8601": "2023-02-23T12:28:11.074401Z",
      "url": "https://files.pythonhosted.org/packages/ff/6e/776d85e82c504eaee13e866d478781df47eedbeca697d6233b48db1c9ed4/Non-Blocking-Http-Logging-Handler-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}