{
  "info": {
    "author": "v7a",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# wtforms field factory\nCreate fields on-the-fly at form construction time.\n\n## Why?\nIn order to e.g. translate field labels depending on the request without relying on global state.\nAdditionally, you can conditionally exclude fields. This avoids dodgy workarounds needed when e.g.\nhaving a form field that is not relevant or feasible to pass during unit testing.\n\n## How?\nLet's look at a use case where a field label must change depending on the locale(s) of the request:\n```python\nfrom gettext import translation\nfrom typing import List\nfrom wtforms_field_factory import field, Form, DefaultMeta\nfrom wtforms import StringField\n\nclass MyMeta(DefaultMeta):\n    def __init__(self, ordered_locales: List[str]):\n        self.ordered_locales = ordered_locales\n\n    @property\n    def locales(self):\n        # translate messages within wtforms depending on the request's locale(s)\n        return self.ordered_locales\n\nclass MyBaseForm(Form):\n    def __init__(self, ordered_locales: List[str], **kwargs):\n        self.ordered_locales = ordered_locales\n        super().__init__(meta=MyMeta(ordered_locales), **kwargs)\n\n    @field(name=\"name\")\n    def name_field(self):\n        _ = translation(\"default\", languages=self.ordered_locales)\n        return StringField(label=_(\"Name\"))\n```\nThe example above will not only translate the name field's label but also internal wtforms messages\nsuch as field errors.\n\nIn cases where an external function is responsible for creating the field (useful for reusing field\nfactories) or if you want to precompute certain objects (e.g. the GNUTranslations object), the\nfollowing can be done:\n\n```python\n@field(name=\"name\")\ndef name_field(_cls, _):  # since the associated attribute is bound, we need the class type as first arg\n    return StringField(label=_(\"Name\"))\n\nclass MyBaseForm(Form):\n    some_class_attribute = name_field # to make Form actually discover this factory\n\n    def __init__(self, ordered_locales: List[str], **kwargs):\n        self.set_factory_args(translation(\"default\", languages=self.ordered_locales))\n        super().__init__(meta=MyMeta(ordered_locales), **kwargs)\n```\nJust use whatever method you find best. There is not \"one\" correct way of achieving your goal here.\nThe important part is that you now have an explicit contract and do not rely on global state.\n\n\n## Contributing\nBefore committing, run the following and check if it succeeds:\n```sh\npip install --user -r requirements-dev.txt && \\\nblack wtforms_field_factory.py && \\\npylint wtforms_field_factory.py && \\\npytest && \\\ncoverage report --fail-under=100\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/v7a/wtforms-field-factory",
    "keywords": "wtforms,field,factory,on-the-fly",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wtforms-field-factory",
    "package_url": "https://pypi.org/project/wtforms-field-factory/",
    "platform": "",
    "project_url": "https://pypi.org/project/wtforms-field-factory/",
    "project_urls": {
      "Homepage": "https://github.com/v7a/wtforms-field-factory",
      "Source": "https://github.com/v7a/wtforms-field-factory",
      "Tracker": "https://github.com/v7a/wtforms-field-factory/issues"
    },
    "release_url": "https://pypi.org/project/wtforms-field-factory/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7319456,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51f2e248787b47aa8f44ee8cd34883502bd87d45f0ec03ed073508cc195493e4",
          "md5": "f2c98a387415c71a9585ddba12d5edc5",
          "sha256": "7bbc364fcc88ad4aa6ccc464fd4ef4bcac793f5b81165ac0b6cceb88d4b1d82e"
        },
        "downloads": -1,
        "filename": "wtforms-field-factory-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f2c98a387415c71a9585ddba12d5edc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3865,
        "upload_time": "2020-05-25T13:38:48",
        "upload_time_iso_8601": "2020-05-25T13:38:48.867682Z",
        "url": "https://files.pythonhosted.org/packages/51/f2/e248787b47aa8f44ee8cd34883502bd87d45f0ec03ed073508cc195493e4/wtforms-field-factory-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51f2e248787b47aa8f44ee8cd34883502bd87d45f0ec03ed073508cc195493e4",
        "md5": "f2c98a387415c71a9585ddba12d5edc5",
        "sha256": "7bbc364fcc88ad4aa6ccc464fd4ef4bcac793f5b81165ac0b6cceb88d4b1d82e"
      },
      "downloads": -1,
      "filename": "wtforms-field-factory-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f2c98a387415c71a9585ddba12d5edc5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3865,
      "upload_time": "2020-05-25T13:38:48",
      "upload_time_iso_8601": "2020-05-25T13:38:48.867682Z",
      "url": "https://files.pythonhosted.org/packages/51/f2/e248787b47aa8f44ee8cd34883502bd87d45f0ec03ed073508cc195493e4/wtforms-field-factory-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}