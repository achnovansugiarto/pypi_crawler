{
  "info": {
    "author": "Red Hat Insights",
    "author_email": "support@redhat.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# receptor-catalog\nReceptor Catalog Worker Plugin\n\nThis plugin allows the receptor node to send HTTP **GET** and **POST** requests\nto Ansible Tower.\n\nThe config file on the receptor for this plugin should have the following values defined in the receptor.conf\n\n```\n[plugin_receptor_catalog]\ndebug=True\nusername=admin\npassword=******\nurl=https://your_ansible_tower/\nverify_ssl=False\n```\n\nThe payload supported by the plugin contains\n\n 1. **method:** GET|POST\n 2. **href_slug**: the href to the resource or collection e.g api/v2/job_templates/\n 3. **accept_encoding** *{Optional}*: gzip\n 4. **fetch_all_pages** *{Optional}*: True|False \n 5. **params**: Extra query or post parameters as a hash/dictionary\n 6. **apply_filter** *{Optional}*: A JMESPath search string to limit the amount of data that is returned. The filter can be specified as a hash/dictionary or as a string. The hash is used when filtering responses from a list call when the response contains an array of objects. The string filter is used when dealing with a single object.\n\n\nThe response payload coming back will have the following keys\n\n 1. **status**: The HTTP Status code\n 2. **body**:  The response body received from the Ansible Tower\n       if Accept-Encoding was gzip, the body will be compressed and\n       the caller would have to uncompress the data. The first 2 bytes\n       of the payload can be checked to see if the data has been gzip\n       compressed. A valid gzip'ed buffer would start with ***0x1f 0x8B*** \n\nTo install the plugin in your local dev environment\n\n**python setup.py install**\n\nTo run the tests\n\n**python setup.py test**\n\n\n**Filtering Examples**\n\nFilters are based on JMESPath which allows us to search and filter out sections of JSON.\nhttps://jmespath.org\n\n\nWhen fetching an array of objects you have to specific the filter as a dictionary with the key name containing the name of the attribute.\ne.g\n**apply_filter** ={results=**'results[].{catalog_id:id, url:url,created:created,name:name, modified:modified, playbook:playbook}'**}\n\nHere we are filtering the **results** key so we have to specify the filter as a dictionary. The plugin will swap out the contents of the key with the filtered results.\nThe filtered response will contain\n```\n\n{\n\n\"count\": 28,\n\n\"next\": \"/api/v2/job_templates/?page=2\",\n\n\"previous\": null,\n\n\"results\": [\n\n{\n\n\"catalog_id\": 5,\n\n\"url\": \"/api/v2/job_templates/5/\",\n\n\"created\": \"2019-05-29T15:17:05.466994Z\",\n\n\"name\": \"Demo Job Template\",\n\n\"modified\": \"2019-05-29T15:17:05.467018Z\",\n\n\"playbook\": \"hello_world.yml\"\n\n},\n\n{\n\n\"catalog_id\": 58,\n\n\"url\": \"/api/v2/job_templates/58/\",\n\n\"created\": \"2020-03-06T21:56:55.134663Z\",\n\n\"name\": \"Ephemeral Template\",\n\n\"modified\": \"2020-03-06T22:15:15.655800Z\",\n\n\"playbook\": \"hello_world.yml\"\n\n},\n```\n\nWhen a single object needs to be filtered we specify the filter as a string\n\napply_filter = **'{id:id, url:url, name:name, description:descripti  on, playbook:playbook}'**\n\nThe response contains\n```\n{\n\n\"id\": 6565,\n\n\"url\": \"/api/v2/jobs/6565/\",\n\n\"name\": \"Hello World\",\n\n\"description\": \"Test Description\",\n\n\"playbook\": \"hello_world.yml\"\n\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mkanoor/receptor-catalog",
    "keywords": "",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "receptor-catalog",
    "package_url": "https://pypi.org/project/receptor-catalog/",
    "platform": "",
    "project_url": "https://pypi.org/project/receptor-catalog/",
    "project_urls": {
      "Homepage": "https://github.com/mkanoor/receptor-catalog"
    },
    "release_url": "https://pypi.org/project/receptor-catalog/0.6.3/",
    "requires_dist": [
      "aiohttp",
      "jmespath",
      "pytest ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "black ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Receptor plugin to communicate with Ansible Tower API",
    "version": "0.6.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7499721,
  "releases": {
    "0.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52af1f78a29198c4a0aae48c8f4dc85e1bff0776916968de0fac5ae676b0c0e7",
          "md5": "4a32fbbb4e994dd31d7a04b1d021018d",
          "sha256": "549fe94941a9131b704ad381135909df794d4a1857333e95d76e195374bacc0c"
        },
        "downloads": -1,
        "filename": "receptor_catalog-0.6.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a32fbbb4e994dd31d7a04b1d021018d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9329,
        "upload_time": "2020-06-17T19:00:59",
        "upload_time_iso_8601": "2020-06-17T19:00:59.866553Z",
        "url": "https://files.pythonhosted.org/packages/52/af/1f78a29198c4a0aae48c8f4dc85e1bff0776916968de0fac5ae676b0c0e7/receptor_catalog-0.6.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2719b765a87b4ac7b9c01c0ec4dca5e416ce7a793eaee4c928d897f39c30395a",
          "md5": "4a430579d18f7dd9436ab8fa34685d8c",
          "sha256": "ffa10395a4ff13a7b3777288b158f0a75ac6c041873eca8abb8ee5431410ae03"
        },
        "downloads": -1,
        "filename": "receptor-catalog-0.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4a430579d18f7dd9436ab8fa34685d8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9039,
        "upload_time": "2020-06-17T19:01:02",
        "upload_time_iso_8601": "2020-06-17T19:01:02.062808Z",
        "url": "https://files.pythonhosted.org/packages/27/19/b765a87b4ac7b9c01c0ec4dca5e416ce7a793eaee4c928d897f39c30395a/receptor-catalog-0.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "52af1f78a29198c4a0aae48c8f4dc85e1bff0776916968de0fac5ae676b0c0e7",
        "md5": "4a32fbbb4e994dd31d7a04b1d021018d",
        "sha256": "549fe94941a9131b704ad381135909df794d4a1857333e95d76e195374bacc0c"
      },
      "downloads": -1,
      "filename": "receptor_catalog-0.6.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4a32fbbb4e994dd31d7a04b1d021018d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9329,
      "upload_time": "2020-06-17T19:00:59",
      "upload_time_iso_8601": "2020-06-17T19:00:59.866553Z",
      "url": "https://files.pythonhosted.org/packages/52/af/1f78a29198c4a0aae48c8f4dc85e1bff0776916968de0fac5ae676b0c0e7/receptor_catalog-0.6.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2719b765a87b4ac7b9c01c0ec4dca5e416ce7a793eaee4c928d897f39c30395a",
        "md5": "4a430579d18f7dd9436ab8fa34685d8c",
        "sha256": "ffa10395a4ff13a7b3777288b158f0a75ac6c041873eca8abb8ee5431410ae03"
      },
      "downloads": -1,
      "filename": "receptor-catalog-0.6.3.tar.gz",
      "has_sig": false,
      "md5_digest": "4a430579d18f7dd9436ab8fa34685d8c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9039,
      "upload_time": "2020-06-17T19:01:02",
      "upload_time_iso_8601": "2020-06-17T19:01:02.062808Z",
      "url": "https://files.pythonhosted.org/packages/27/19/b765a87b4ac7b9c01c0ec4dca5e416ce7a793eaee4c928d897f39c30395a/receptor-catalog-0.6.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}