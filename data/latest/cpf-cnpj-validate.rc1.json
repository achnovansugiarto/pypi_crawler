{
  "info": {
    "author": "André França",
    "author_email": "rsp.assistencia@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Pycpfcnpj\n=======\n\nDescription\n-----------\nPython module for brazilian register numbers for persons (CPF) and companies (CNPJ). If want this validation in your web application, please check [my tiny web component](https://github.com/matheuscas/wc-input-cpf-cnpj) that does exactly that. ;)\n\n**Python 3 ready!**\n\n[![Build Status](https://travis-ci.org/matheuscas/pycpfcnpj.png?branch=master)](https://travis-ci.org/matheuscas/pycpfcnpj)\n[![codecov](https://codecov.io/gh/matheuscas/pycpfcnpj/branch/master/graph/badge.svg)](https://codecov.io/gh/matheuscas/pycpfcnpj)\n[![PyPI version](https://badge.fury.io/py/pycpfcnpj.svg)](https://badge.fury.io/py/pycpfcnpj)\n![Python versions](https://img.shields.io/pypi/pyversions/pycpfcnpj)\n\n\n\n#### Related projects\n- [Pycnpj-crawler](https://github.com/matheuscas/pycnpj-crawler): Python module that crawls data for a given CNPJ on the government website of each state (please check the supported states).\n-  Library forked from [pycpfcnpj](https://github.com/matheuscas/pycpfcnpj)\n- The main purpose of the fork was to add mask for cpf or cnpj from int or string.\n\n\n### How to install\nNow you can install this module with pip! Yeah! :D\n\n```\npip install cpf-cnpj-validate\n```\n\n### Quick Start\nTo use pycpfcnpj is simples like as every python module should be!\n\n```python\nfrom pycpfcnpj import cpfcnpj\ncpf_number = '11144477735'\nmasked_cpf_number = '111.444.777-35'\ncnpj_number = '11444777000161'\nmasked_cnpj_number = '11.444.777/0001-61'\n\nprint cpfcnpj.validate(cpf_number)\nprint cpfcnpj.validate(masked_cpf_number)\nprint cpfcnpj.validate(cnpj_number)\nprint cpfcnpj.validate(masked_cnpj_number)\n\nExpected output:\n>>>True\n>>>True\n>>>True\n>>>True\n```\nSimple like that. =)\n\nYou can use, as well, the cpf and cnpj packages. The cpfcnpj is like a Facade to the other modules. Make yourself confortable.\n\nOh, fork and contribute either if you want to.\n\nObs.: There is no dependencies.\n\nOh, and before I forget, You can generate, only and only for test purposes, a CPF or CNPJ number using the 'gen' module. Easy like above:\n\n```python\nfrom pycpfcnpj import gen\ngen.cpf()\ngen.cnpj()\n\nExpected output:\n>>> 49384063495\n>>> 20788274885880\n```\n\nAnd you also can generate CPF or CǸPJ with punctuation marks. :)\n\n```python\nfrom pycpfcnpj import gen\ngen.cpf_with_punctuation()\ngen.cnpj_with_punctuation()\n\nExpected output:\n>>> 048.891.866-97\n>>> 63.212.638/0361-35\n```\n\nAnd you also can format a cpf or cnpj number with valid mask\n\n```python\nfrom pycpfcnpj import mask\nonly_number_cnpj: str = \"63212638036135\"\nwith_mask_cnpj: str = mask.mask_cpf_cnpj(only_number_cnpj)\nonly_number_cpf: int = 4889186697\nwith_mask_cpf: str = mask.mask_cpf_cnpj(only_number_cpf)\nprint(with_mask_cnpj)\nprint(with_mask_cpf)\n\nExpected output:\n>>> 63.212.638/0361-35\n>>> 048.891.866-97\n```\nHave fun!\n\nIn portuguese:\n--------------\n\nMódulo python para validar números de CPF e CNPJ.\n\n### Como instalar:\nAgora você pode instalar o pycpfcnpj usando o pip!\\m/\n\n```\npip install cpf-cnpj-validate\n```\n\n#### Projetos relacionados\n- [Pycnpj-crawler](https://github.com/matheuscas/pycnpj-crawler)\n\n### Como usar\n```python\nfrom pycpfcnpj import cpfcnpj\ncpf_number = '11144477735'\nmasked_cpf_number = '111.444.777-35'\ncnpj_number = '11444777000161'\nmasked_cnpj_number = '11.444.777/0001-61'\n\nprint cpfcnpj.validate(cpf_number)\nprint cpfcnpj.validate(cpf_number_mascara)\nprint cpfcnpj.validate(cnpj_number)\nprint cpfcnpj.validate(cnpj_number_mascara)\n\nExpected output:\n>>>True\n>>>True\n>>>True\n>>>True\n```\n\nSimples assim! Você também pode usar os pacotes internos que tratam em separado os números de CPF e CNPJ. O módulo 'cpfcnpj' é um tipo de interface para os módulos mais especificos e se encarrega de saber quando você está passando um CPF ou um CNPJ.\n\nFique à vontade em contribuir com o projeto ou da maneira que quiser. Ah, sim: pure python (sem dependências ;) ).\n\nAh, e antes que eu me esqueça, você pode gerar, só e apenas somente para fins de teste, um número de CPF ou CNPJ utilizando o módulo 'gen'. Fácil como acima:\n\n```python\nfrom pycpfcnpj import gen\ngen.cpf()\ngen.cnpj()\n\nExpected output:\n>>> 49384063495\n>>> 20788274885880\n```\n\nE você também pode gerar CPF ou CNPJ com pontuação :)\n\n```python\nfrom pycpfcnpj import gen\ngen.cpf_with_punctuation()\ngen.cnpj_with_punctuation()\n\nExpected output:\n>>> 048.891.866-97\n>>> 63.212.638/0361-35\n```\n\n\nDivirta-se!\n\nChangelog\n-----------\n1.6.0\n- Remove python 2.7 support\n- Add python 3.8 support\n\n1.1\n- Handles CPF and CNPJ numbers with punctuation marks.\n\n1.2\n- Use `sys` rather than `six` to check python's version and keeps this project 100% free of dependencies.\n\n1.3\n- Generate CPF and CNPJ numbers with punctuation marks.\n\n1.4\n- Adding support to unicode values.\n\n1.5\n- Better CPF and CNPJ generation\n\n1.5.1\n- Use regex to remove punctuation\n\n\nLog de mudanças\n-----------\n1.6.0\n- Remove suporte para python 2.7\n- Adiciona suporte para python 3.8\n\n1.1\n- Trata números de CPF e CPNJ com sinais de pontuação\n\n1.2\n- Uso do `sys` em vez do `six` para verificar a versão do Python e evitando o uso de libs terceiras\n\n1.3\n- Gera números de CPF e CNPJ com pontuação.\n\n1.4\n- Suporte a unicode.\n\n1.5\n- Geração de CPF e CNPJ mais eficiente.\n\n1.5.1\n- Regex para remover a pontuação.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/andrersp/pycpfcnpj",
    "keywords": "cpf cnpj validation generation mask",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cpf-cnpj-validate",
    "package_url": "https://pypi.org/project/cpf-cnpj-validate/",
    "platform": null,
    "project_url": "https://pypi.org/project/cpf-cnpj-validate/",
    "project_urls": {
      "Homepage": "https://github.com/andrersp/pycpfcnpj"
    },
    "release_url": "https://pypi.org/project/cpf-cnpj-validate/1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python module for brazilian register numbers for persons (CPF) and companies (CNPJ) and mask generator to string or int CPF/CNPJ.",
    "version": "1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13340163,
  "releases": {
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c2a82dd91fc434db68c716856e7f43a2f6ccb5213f6918d9c01f2e6db86e8c0",
          "md5": "eef0e7aaf9b94a3999390b27169ec134",
          "sha256": "e30e125a1c4d4749b80e7f87ea192ccbcfbafb6c85b27833ecffc41da9df47ff"
        },
        "downloads": -1,
        "filename": "cpf_cnpj_validate-1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eef0e7aaf9b94a3999390b27169ec134",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11084,
        "upload_time": "2022-03-29T23:27:12",
        "upload_time_iso_8601": "2022-03-29T23:27:12.420251Z",
        "url": "https://files.pythonhosted.org/packages/2c/2a/82dd91fc434db68c716856e7f43a2f6ccb5213f6918d9c01f2e6db86e8c0/cpf_cnpj_validate-1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "991a77fc2502bba9153c557dd93d04f465d33acbfb350bad2952721eb2f04cc9",
          "md5": "90c535f2d49b86270f54165086ca79e3",
          "sha256": "611dfc08bf3c1c040ce47294d1c04e77e12b6b2d4e1029cc7a5ee2d2079c0ece"
        },
        "downloads": -1,
        "filename": "cpf_cnpj_validate-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "90c535f2d49b86270f54165086ca79e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7853,
        "upload_time": "2022-03-29T23:27:13",
        "upload_time_iso_8601": "2022-03-29T23:27:13.908957Z",
        "url": "https://files.pythonhosted.org/packages/99/1a/77fc2502bba9153c557dd93d04f465d33acbfb350bad2952721eb2f04cc9/cpf_cnpj_validate-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c2a82dd91fc434db68c716856e7f43a2f6ccb5213f6918d9c01f2e6db86e8c0",
        "md5": "eef0e7aaf9b94a3999390b27169ec134",
        "sha256": "e30e125a1c4d4749b80e7f87ea192ccbcfbafb6c85b27833ecffc41da9df47ff"
      },
      "downloads": -1,
      "filename": "cpf_cnpj_validate-1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eef0e7aaf9b94a3999390b27169ec134",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11084,
      "upload_time": "2022-03-29T23:27:12",
      "upload_time_iso_8601": "2022-03-29T23:27:12.420251Z",
      "url": "https://files.pythonhosted.org/packages/2c/2a/82dd91fc434db68c716856e7f43a2f6ccb5213f6918d9c01f2e6db86e8c0/cpf_cnpj_validate-1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "991a77fc2502bba9153c557dd93d04f465d33acbfb350bad2952721eb2f04cc9",
        "md5": "90c535f2d49b86270f54165086ca79e3",
        "sha256": "611dfc08bf3c1c040ce47294d1c04e77e12b6b2d4e1029cc7a5ee2d2079c0ece"
      },
      "downloads": -1,
      "filename": "cpf_cnpj_validate-1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "90c535f2d49b86270f54165086ca79e3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7853,
      "upload_time": "2022-03-29T23:27:13",
      "upload_time_iso_8601": "2022-03-29T23:27:13.908957Z",
      "url": "https://files.pythonhosted.org/packages/99/1a/77fc2502bba9153c557dd93d04f465d33acbfb350bad2952721eb2f04cc9/cpf_cnpj_validate-1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}