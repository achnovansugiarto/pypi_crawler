{
  "info": {
    "author": "Applied Brain Research",
    "author_email": "info@appliedbrainresearch.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: Free for non-commercial use",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": ".. image:: https://img.shields.io/travis/com/nengo/pytorch-spiking/master.svg\n  :target: https://travis-ci.com/nengo/pytorch-spiking\n  :alt: Travis-CI build status\n\n.. image:: https://img.shields.io/codecov/c/github/nengo/pytorch-spiking/master.svg\n  :target: https://codecov.io/gh/nengo/pytorch-spiking\n  :alt: Test coverage\n\n**************\nPyTorchSpiking\n**************\n\nPyTorchSpiking provides tools for training and running spiking neural networks\ndirectly within the PyTorch framework. The main feature is\n``pytorch_spiking.SpikingActivation``, which can be used to transform\nany activation function into a spiking equivalent. For example, we can translate a\nnon-spiking model, such as\n\n.. code-block:: python\n\n    torch.nn.Sequential(\n        torch.nn.Linear(5, 10),\n        torch.nn.ReLU(),\n    )\n\ninto the spiking equivalent:\n\n.. code-block:: python\n\n    torch.nn.Sequential(\n        torch.nn.Linear(5, 10),\n        pytorch_spiking.SpikingActivation(torch.nn.ReLU()),\n    )\n\nModels with SpikingActivation layers can be optimized and evaluated in the same way as\nany other PyTorch model. They will automatically take advantage of PyTorchSpiking's\n\"spiking aware training\": using the spiking activations on the forward pass and the\nnon-spiking (differentiable) activation function on the backwards pass.\n\nPyTorchSpiking also includes various tools to assist in the training of spiking models,\nsuch as `filtering layers\n<https://www.nengo.ai/pytorch-spiking/reference.html#module-pytorch_spiking.modules>`_.\n\nIf you are interested in building and optimizing spiking neuron models, you may also\nbe interested in `NengoDL <https://www.nengo.ai/nengo-dl>`_. See\n`this page <https://www.nengo.ai/pytorch-spiking/nengo-dl-comparison.html>`_ for a\ncomparison of the different use cases supported by these two packages.\n\n**Documentation**\n\nCheck out the `documentation <https://www.nengo.ai/pytorch-spiking/>`_ for\n\n- `Installation instructions\n  <https://www.nengo.ai/pytorch-spiking/installation.html>`_\n- `More detailed example introducing the features of PyTorchSpiking\n  <https://www.nengo.ai/pytorch-spiking/examples/spiking-fashion-mnist.html>`_\n- `API reference <https://www.nengo.ai/pytorch-spiking/reference.html>`_\n\nRelease history\n===============\n\n.. Changelog entries should follow this format:\n\n   version (release date)\n   ----------------------\n\n   **section**\n\n   - One-line description of change (link to GitHub issue/PR)\n\n.. Changes should be organized in one of several sections:\n\n   - Added\n   - Changed\n   - Fixed\n   - Deprecated\n   - Removed\n\n0.1.0 (September 9, 2020)\n-------------------------\n\nInitial release\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.nengo.ai/pytorch-spiking",
    "keywords": "",
    "license": "Free for non-commercial use",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytorch-spiking",
    "package_url": "https://pypi.org/project/pytorch-spiking/",
    "platform": "",
    "project_url": "https://pypi.org/project/pytorch-spiking/",
    "project_urls": {
      "Homepage": "https://www.nengo.ai/pytorch-spiking"
    },
    "release_url": "https://pypi.org/project/pytorch-spiking/0.1.0/",
    "requires_dist": [
      "numpy (>=1.16.0)",
      "torch (>=1.0.0)",
      "jupyter (>=1.0.0) ; extra == 'all'",
      "matplotlib (>=2.0.0) ; extra == 'all'",
      "nbsphinx (>=0.3.5) ; extra == 'all'",
      "nengo-sphinx-theme (>=1.2.1) ; extra == 'all'",
      "numpydoc (>=0.6.0) ; extra == 'all'",
      "sphinx (>=3.0.0) ; extra == 'all'",
      "torchvision (>=0.7.0) ; extra == 'all'",
      "pylint (>=1.9.2) ; extra == 'all'",
      "pytest (>=3.6.0) ; extra == 'all'",
      "pytest-allclose (>=1.0.0) ; extra == 'all'",
      "pytest-cov (>=2.6.0) ; extra == 'all'",
      "pytest-rng (>=1.0.0) ; extra == 'all'",
      "pytest-xdist (>=1.16.0) ; extra == 'all'",
      "jupyter (>=1.0.0) ; extra == 'docs'",
      "matplotlib (>=2.0.0) ; extra == 'docs'",
      "nbsphinx (>=0.3.5) ; extra == 'docs'",
      "nengo-sphinx-theme (>=1.2.1) ; extra == 'docs'",
      "numpydoc (>=0.6.0) ; extra == 'docs'",
      "sphinx (>=3.0.0) ; extra == 'docs'",
      "torchvision (>=0.7.0) ; extra == 'docs'",
      "pylint (>=1.9.2) ; extra == 'tests'",
      "pytest (>=3.6.0) ; extra == 'tests'",
      "pytest-allclose (>=1.0.0) ; extra == 'tests'",
      "pytest-cov (>=2.6.0) ; extra == 'tests'",
      "pytest-rng (>=1.0.0) ; extra == 'tests'",
      "pytest-xdist (>=1.16.0) ; extra == 'tests'"
    ],
    "requires_python": ">=3.5",
    "summary": "Spiking neuron integration for PyTorch",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8683590,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95d7f576cf8ccc7d9d48949ad9e70df4c1fd8a6f82cb3f33d405009d5ca4d8da",
          "md5": "9f18ab9cbadd98eab38e9840a39d1c8d",
          "sha256": "2cd1b84f6b0c018144757aed97ecda1db9f5ee3e2d2188c1f86b426adc84cbd7"
        },
        "downloads": -1,
        "filename": "pytorch_spiking-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f18ab9cbadd98eab38e9840a39d1c8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 10846,
        "upload_time": "2020-09-09T15:28:07",
        "upload_time_iso_8601": "2020-09-09T15:28:07.291312Z",
        "url": "https://files.pythonhosted.org/packages/95/d7/f576cf8ccc7d9d48949ad9e70df4c1fd8a6f82cb3f33d405009d5ca4d8da/pytorch_spiking-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f01dd0bd88ad304e673b6c6dcf241ea553fd9e220be93a12d330e96376fdfb6f",
          "md5": "55224c401be1d1f0acbd1452b3037011",
          "sha256": "233ec5eab820762e638d1d37e540814047fb31557431a7393f9916d1bbe36230"
        },
        "downloads": -1,
        "filename": "pytorch-spiking-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "55224c401be1d1f0acbd1452b3037011",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 30019,
        "upload_time": "2020-09-09T15:28:09",
        "upload_time_iso_8601": "2020-09-09T15:28:09.680115Z",
        "url": "https://files.pythonhosted.org/packages/f0/1d/d0bd88ad304e673b6c6dcf241ea553fd9e220be93a12d330e96376fdfb6f/pytorch-spiking-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95d7f576cf8ccc7d9d48949ad9e70df4c1fd8a6f82cb3f33d405009d5ca4d8da",
        "md5": "9f18ab9cbadd98eab38e9840a39d1c8d",
        "sha256": "2cd1b84f6b0c018144757aed97ecda1db9f5ee3e2d2188c1f86b426adc84cbd7"
      },
      "downloads": -1,
      "filename": "pytorch_spiking-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9f18ab9cbadd98eab38e9840a39d1c8d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 10846,
      "upload_time": "2020-09-09T15:28:07",
      "upload_time_iso_8601": "2020-09-09T15:28:07.291312Z",
      "url": "https://files.pythonhosted.org/packages/95/d7/f576cf8ccc7d9d48949ad9e70df4c1fd8a6f82cb3f33d405009d5ca4d8da/pytorch_spiking-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f01dd0bd88ad304e673b6c6dcf241ea553fd9e220be93a12d330e96376fdfb6f",
        "md5": "55224c401be1d1f0acbd1452b3037011",
        "sha256": "233ec5eab820762e638d1d37e540814047fb31557431a7393f9916d1bbe36230"
      },
      "downloads": -1,
      "filename": "pytorch-spiking-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "55224c401be1d1f0acbd1452b3037011",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 30019,
      "upload_time": "2020-09-09T15:28:09",
      "upload_time_iso_8601": "2020-09-09T15:28:09.680115Z",
      "url": "https://files.pythonhosted.org/packages/f0/1d/d0bd88ad304e673b6c6dcf241ea553fd9e220be93a12d330e96376fdfb6f/pytorch-spiking-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}