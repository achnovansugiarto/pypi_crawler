{
  "info": {
    "author": "Jason DiBiase",
    "author_email": "dibiasej3@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# PyValuation\n\n\n\nA library for stock and portfolio valuation.\n\nThis was originally made to help aid in my own stock valuation approach but I wanted to allow others to utilize this code as well.\n\nThe library is made up of four basic parent classes that inherent from two child classes.\n\nThe four parent classes are DCF, Valuation, RelativeValue and PortfolioValuation and the two child classes are FinancialData and ValuationCharts.\n\n\n\n## Installation\n\n>pip install PyValuation\n\n\n\n## Get started\n\n\n\n### FinancialData\n\n\n\nThe child class FinancialData is used for calculating numerous stock valuation metrics. These valuation metrics include Price to Earnings, Price to Sales, Return on Capital, company margins and others.\n\n\n\nFinancialData class also acts as a parent class and inherents the FinancialStatements child class.\n\n\n\nThe FinancialStatements child class uses two methods to pull companies Income Statements, Balance Sheets and Cash Flow Statements. The first method is a basic call to the yfinance modules respective get_financials, get_balancesheet, get_cashflow functions. The second method FinancialStatements uses is a webscrapping version where we utilize BeautifulSoup from the bs4 module to pull the companies financial statements from yahoo finance directly.\n\n\n\nHow to pull specific financial statments using both methods.\n\n\n\n1) yfinance module\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.FinancialData('TICKER')\n\n\n\nstock.balancesheet()\n\n```\n\n\n\n2) BeautifulSoup\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.FinancialData('TICKER')\n\n\n\nstock.soupbalancesheet()\n\n```\n\n\n\nFinancialData's main method is the input function used to calculate multiple valuation metrics and inputs for a discounted cash flow model.\n\n\n\nHow to use FinancialData's input function.\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.FinancialData('TICKER')\n\n\n\nstock._inputs()\n\n```\n\n\n\nThe inputs function will return a dictonary of valutaion metrics including the following, Retention Ratio's, Reinvestment Rate, Cost of Equity, Return on Capital and others.\n\n\n\n### ValuationCharts\n\n\n\nValuationCharts is another child class that calculates valuation metrics and plots them over time. This is useful for analyzing how specific company metrics change during certain market periods.\n\n\n\nValuationCharts relies on the bs4 module to web scrape historical shares outstanding. The historical shares outstanding is used in numerous other calculations like calculating and plotting a historical price to earnings ratio.\n\n\n\nHow to use Valuation charts\n\n\n\n1) Plotting shares outstanding over time.\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.ValuationCharts('TICKER')\n\n\n\nstock.sharesoutstanding_chart()\n\n```\n\n\n\n2) Plotting basic valuation metric over time\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.ValuationCharts('TICKER')\n\n\n\nstock.pb_chart()\n\n```\n\n\n\n### Valuation\n\n\n\nThe Valuation class acts as a parent class to ValuationCharts so it has multiple plotting capabilities within it. Valuation also calculates multiple valuation metrics but displays them using print statements in a more visually pleasing manner.\n\n\n\nThe Valuation classes main methods are credit_score, cogp and undervalue spotting.\n\n\n\n1) credit_score\n\n\n\nThe credit_score method uses the modified Altman's Z-score to calculate a make shift credit score and uses a print statement to display the stock in questions credit score compared to what its potential credit rating would be.\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.Valuation('TICKER')\n\n\n\nstock.credit_score()\n\n``` \n\n\n\n2) cogp\n\n\n\ncogp or core operating growth profile is a useful metric for calculting the cash generating power of a company. The cogp method calculates the operating cushion and subtracts that from the working capital to revenue percentage to get the core operating growth profile.\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.Valuation('TICKER')\n\n\n\nstock.cogp()\n\n```\n\n\n\n3) undervalue_spotting\n\n\n\nThe undervalue_spotting method calculates numeroud valuation metrics and uses print statements to display them in a way that is easy to read and compare in order to spot if a company is traditionaly undervalued.\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.Valuation('TICKER')\n\n\n\nstock.undervalue_spotting()\n\n``` \n\n\n\n### DCF\n\n\n\nThe DCF class is used for dicounted cash flow modeling of a company. The DCF class has methods current_cashflows, growth_rates, projected_cashflows, intrinsic_value and outside_spread.\n\n\n\nWe will use the outside_spread as an example.\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.DCF('TICKER')\n\n\n\nstock.outside_spread()\n\n```\n\n\n\nWe can also specify the inputs for the free cash flow equity and free cash flow to the firm that will be used\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.DCF('TICKER')\n\n\n\nstock.outside_spread(10000000000, 10000000000)\n\n\n\n```\n\n\n\n### RelativeValue\n\n\n\nThe RelativeValue class does similar calculations as the Valuation class but on a larger scale. The RelativeValue class uses a csv that has a list of S&P 500 company tickers and there respective industries in order to calculate multiple metrics for the specific industry as a whole.\n\n\n\nThere is also a market_share function that calculates the total revenue of an idustry and then plots pie charts and bar charts showing all the companies revenue as a percent of the total industries revenue.\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.RelativeValue('TICKER')\n\n\n\nstock.market_share()\n\n```\n\n\n\n### PortfolioValuation\n\n\n\nThe PortfolioValuation class is used to evaluate an investors portfolio. The class takes as parameters a start date and end date, cash in the portfolio and uses the keyword arguments functionality of python for a user to input any amount of tickers as the keys and the quantity of shares as the value.\n\n\n\nThe PortfolioValuation class has methods portfolio_performance, asset_allocation and efficient_frontier.\n\n\n\n1) portfolio_performance\n\n\n\nThe portfolio_performance method uses the pandas_datareader module to pull the stock prices of the given tickers for the specified time period then calculates and plots the cumulative return of the aggregated portfolio.\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.PortfolioValuation(start, end, TICKER = Quantity)\n\n\n\nstock.portfolio_performance()\n\n```\n\n\n\n2) asset_allocation\n\n\n\nThe asset_allocation method visualises the holding in the portfolio as a percent of the aggregate capital in the portfolio as a pie chart.\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.PortfolioValuation(start, end, TICKER = Quantity)\n\n\n\nstock.asset_allocation()\n\n``` \n\n\n\n3) efficient_frontier\n\n\n\nThe efficient_frontier module takes as parameters a lower bound and upper bound for a target return level, and also takes in as an optional parameter the volatility of a portfolio along the effecient frontier.\n\n\n\nThe method returns a graph of the effecient frontier and if given the volatility parameter the method returns the weights of the optimal portfolio.\n\n\n\n```\n\nimport PyValuation as pv\n\n\n\nstock = pv.PortfolioValuation(start, end, TICKER = Quantity)\n\n\n\nstock.efficient_frontier(.1, .3)\n\n``` \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://PyValuation.readthedocs.io/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyValuation",
    "package_url": "https://pypi.org/project/PyValuation/",
    "platform": null,
    "project_url": "https://pypi.org/project/PyValuation/",
    "project_urls": {
      "Homepage": "https://PyValuation.readthedocs.io/"
    },
    "release_url": "https://pypi.org/project/PyValuation/0.1.2/",
    "requires_dist": [
      "numpy",
      "yfinance",
      "pandas",
      "bs4",
      "requests",
      "numpy-financial",
      "matplotlib",
      "seaborn",
      "pandas-datareader",
      "datetime",
      "plotly"
    ],
    "requires_python": "",
    "summary": "Demo library",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15503477,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "647c5d862c05ec78b1a6c2c3b712bfdbd116c64e09e23454be541d9dbb0ccd8c",
          "md5": "d28144629c0d1aa579e0cf1a97c67235",
          "sha256": "a303d941aaecbd93ad173d582d7842e9a71f0fd1649a3bbe423c7af3aa28be1e"
        },
        "downloads": -1,
        "filename": "PyValuation-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d28144629c0d1aa579e0cf1a97c67235",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21104,
        "upload_time": "2022-10-23T18:32:14",
        "upload_time_iso_8601": "2022-10-23T18:32:14.361133Z",
        "url": "https://files.pythonhosted.org/packages/64/7c/5d862c05ec78b1a6c2c3b712bfdbd116c64e09e23454be541d9dbb0ccd8c/PyValuation-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6506a91b729e46e43019bccdccf46ca3aee55199b4b9ee6866b914b97b3f7743",
          "md5": "be1f9d0cb1ac3034a03d6bae491b00af",
          "sha256": "a8f5f18ac69f3b4965fb993dd6cacd670852f1cffe046ecee0beda31ea4bfa6f"
        },
        "downloads": -1,
        "filename": "PyValuation-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "be1f9d0cb1ac3034a03d6bae491b00af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20793,
        "upload_time": "2022-10-23T18:32:16",
        "upload_time_iso_8601": "2022-10-23T18:32:16.326894Z",
        "url": "https://files.pythonhosted.org/packages/65/06/a91b729e46e43019bccdccf46ca3aee55199b4b9ee6866b914b97b3f7743/PyValuation-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "881cc576ac3b233809a606da59f601c900e628a9548e819aefd0937bc9e03ef2",
          "md5": "8525a024c9ad200d208a92020755c13b",
          "sha256": "01e1d394bf621f44969df75c32855c412ea8ec246808ed911b8522e35531f557"
        },
        "downloads": -1,
        "filename": "PyValuation-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8525a024c9ad200d208a92020755c13b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 72576,
        "upload_time": "2022-10-23T21:04:18",
        "upload_time_iso_8601": "2022-10-23T21:04:18.524604Z",
        "url": "https://files.pythonhosted.org/packages/88/1c/c576ac3b233809a606da59f601c900e628a9548e819aefd0937bc9e03ef2/PyValuation-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36c462a60dc9d3f26a3a49b5234f1cb2b7c250ec367b8a1313081c06a80b5ba4",
          "md5": "cf408637f243b404b65a737f92e8ca28",
          "sha256": "768c1b539490c84b5dccb5138e2872ae7b2a8211bb0cbec8e32488fffc01f449"
        },
        "downloads": -1,
        "filename": "PyValuation-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cf408637f243b404b65a737f92e8ca28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6097878,
        "upload_time": "2022-10-23T21:04:24",
        "upload_time_iso_8601": "2022-10-23T21:04:24.701688Z",
        "url": "https://files.pythonhosted.org/packages/36/c4/62a60dc9d3f26a3a49b5234f1cb2b7c250ec367b8a1313081c06a80b5ba4/PyValuation-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72458d546de07232d3be3076deaa5ac9e0da9a0d132902905fb54620b86ed99b",
          "md5": "f943e517e75c0b59c0e9dc60b368ecb6",
          "sha256": "73f0f9a96d5cc8cdf1df552063f121eed5aa58e403f949715a13cdc5a9756502"
        },
        "downloads": -1,
        "filename": "PyValuation-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f943e517e75c0b59c0e9dc60b368ecb6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 72586,
        "upload_time": "2022-10-23T21:11:09",
        "upload_time_iso_8601": "2022-10-23T21:11:09.054131Z",
        "url": "https://files.pythonhosted.org/packages/72/45/8d546de07232d3be3076deaa5ac9e0da9a0d132902905fb54620b86ed99b/PyValuation-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd6a1a5e92899c61d3eed3e30946fb171e6dbd8fe2e5d2f5c971f18a06510a8f",
          "md5": "32cc0b330867db228f53ce843ed5cbb4",
          "sha256": "2fa4d0fbd7690a7a9e168513bed4e088d16bf23079704b425de86f114a5eac94"
        },
        "downloads": -1,
        "filename": "PyValuation-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "32cc0b330867db228f53ce843ed5cbb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2995531,
        "upload_time": "2022-10-23T21:11:14",
        "upload_time_iso_8601": "2022-10-23T21:11:14.411283Z",
        "url": "https://files.pythonhosted.org/packages/cd/6a/1a5e92899c61d3eed3e30946fb171e6dbd8fe2e5d2f5c971f18a06510a8f/PyValuation-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "72458d546de07232d3be3076deaa5ac9e0da9a0d132902905fb54620b86ed99b",
        "md5": "f943e517e75c0b59c0e9dc60b368ecb6",
        "sha256": "73f0f9a96d5cc8cdf1df552063f121eed5aa58e403f949715a13cdc5a9756502"
      },
      "downloads": -1,
      "filename": "PyValuation-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f943e517e75c0b59c0e9dc60b368ecb6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 72586,
      "upload_time": "2022-10-23T21:11:09",
      "upload_time_iso_8601": "2022-10-23T21:11:09.054131Z",
      "url": "https://files.pythonhosted.org/packages/72/45/8d546de07232d3be3076deaa5ac9e0da9a0d132902905fb54620b86ed99b/PyValuation-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd6a1a5e92899c61d3eed3e30946fb171e6dbd8fe2e5d2f5c971f18a06510a8f",
        "md5": "32cc0b330867db228f53ce843ed5cbb4",
        "sha256": "2fa4d0fbd7690a7a9e168513bed4e088d16bf23079704b425de86f114a5eac94"
      },
      "downloads": -1,
      "filename": "PyValuation-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "32cc0b330867db228f53ce843ed5cbb4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2995531,
      "upload_time": "2022-10-23T21:11:14",
      "upload_time_iso_8601": "2022-10-23T21:11:14.411283Z",
      "url": "https://files.pythonhosted.org/packages/cd/6a/1a5e92899c61d3eed3e30946fb171e6dbd8fe2e5d2f5c971f18a06510a8f/PyValuation-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}