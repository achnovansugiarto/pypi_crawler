{
  "info": {
    "author": "Boris Pelakh",
    "author_email": "boris.pelakh@semanticarts.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ontology-toolkit\n\nMaintain version and dependency info in RDF ontologies.\n\n## Installation\n\n## Easy Install \n\nTo install the most recent released version of the toolkit use `pip install onto-tool`. \n\n## Development Install\n\nTo experiment with unreleased features currently in development, clone this repo and navigate to the installed directory.  Run `python -m setup install`, which\nwill install the `onto_tool` command and all its dependencies into your environment.\n\n```\n$ onto_tool -h\nusage: onto_tool [-h] [-k] [-v] {update,export,bundle,graphic} ...\n\nOntology toolkit.\n\npositional arguments:\n  {update,export,bundle,graphic}\n                        sub-command help\n    update              Update versions and dependencies\n    export              Export ontology\n    bundle              Bundle ontology for release\n    graphic             Create PNG graphic and dot file from OWL files or SPARQL Endpoint\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -k, --insecure        Allow insecure server connections when using SSL\n  -v, --version         Report onto-tool version and exit\n```\n\n## Sub-Commands\n\n### Update\n\nThe `update` sub-command modifies ontology version and dependency information\n```\n$ onto_tool update -h\nusage: onto_tool update [-h] [-f {xml,turtle,nt} | -i] [--debug] [-o OUTPUT]\n                        [-b [{all,strict}]] [--retain-definedBy]\n                        [--versioned-definedBy] [-v SET_VERSION]\n                        [--version-info [VERSION_INFO]]\n                        [-d DEPENDENCY VERSION]\n                        [ontology [ontology ...]]\n\npositional arguments:\n  ontology              Ontology file or directory containing OWL files\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f {xml,turtle,nt}, --format {xml,turtle,nt}\n                        Output format\n  -i, --in-place        Overwrite each input file with update, preserving\n                        format\n  --debug               Emit verbose debug output\n  -o OUTPUT, --output OUTPUT\n                        Path to output file. Will be ignored if --in-place is\n                        specified.\n  -b [{all,strict}], --defined-by [{all,strict}]\n                        Add rdfs:isDefinedBy to every resource defined. If the\n                        (default) \"strict\" argument is provided, only\n                        owl:Class, owl:ObjectProperty, owl:DatatypeProperty,\n                        owl:AnnotationProperty and owl:Thing entities will be\n                        annotated. If \"all\" is provided, every entity that has\n                        any properties other than rdf:type will be annotated.\n                        Will override any existing rdfs:isDefinedBy\n                        annotations on the affected entities unless --retain-\n                        definedBy is specified.\n  -v SET_VERSION, --set-version SET_VERSION\n                        Set the version of the defined ontology\n  --version-info [VERSION_INFO]\n                        Adjust versionInfo, defaults to \"Version X.x.x\"\n  -d DEPENDENCY VERSION, --dependency-version DEPENDENCY VERSION\n                        Update the import of DEPENDENCY to VERSION\n```\n\n### Export\n\nThe `export` sub-command will transform the ontology into the desired format, and remove version information, as required by tools such as Top Braid Composer.\n```\nusage: onto_tool export [-h] [-f {xml,turtle,nt} | -c CONTEXT] [--debug]\n                        [-o OUTPUT] [-s] [-m IRI VERSION] [-b [{all,strict}]]\n                        [--retain-definedBy] [--versioned-definedBy]\n                        [ontology [ontology ...]]\n\npositional arguments:\n  ontology              Ontology file or directory containing OWL files\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f {xml,turtle,nt}, --format {xml,turtle,nt}\n                        Output format\n  -c CONTEXT, --context CONTEXT\n                        Export as N-Quads in CONTEXT.\n  --debug               Emit verbose debug output\n  -o OUTPUT, --output OUTPUT\n                        Path to output file.\n  -s, --strip-versions  Remove versions from imports.\n  -m IRI VERSION, --merge IRI VERSION\n                        Merge all inputs into a single ontology with the given\n                        IRI and version\n  -b [{all,strict}], --defined-by [{all,strict}]\n                        Add rdfs:isDefinedBy to every resource defined. If the\n                        (default) \"strict\" argument is provided, only\n                        owl:Class, owl:ObjectProperty, owl:DatatypeProperty,\n                        owl:AnnotationProperty and owl:Thing entities will be\n                        annotated. If \"all\" is provided, every entity that has\n                        any properties other than rdf:type will be annotated.\n  --retain-definedBy    When merging ontologies, retain existing values of\n                        rdfs:isDefinedBy\n```\n\n### Graphic\n\nThe `graphic` sub-command will create either \n* a comprehensive diagram showing ontology modules together with classes, object properties and individuals\n  together with the path of imports, or (if the 'wee' option is selected) a simple diagram of the ontology\n  import hierarchy, or\n* a diagram of the use of classes and object and data properties in a triple store or local ontology files.\n\nGraphics are exported both as ```png``` files and also as a ```dot``` file.  This ```dot``` file can be used with Graphviz or with web tools such as [Dot Viewer](http://www.semantechs.co.uk/turtle-editor-viewer/)\n\n```\nusage: onto_tool graphic [-h] [-e ENDPOINT] [--schema | --data]\n                         [--single-ontology-graphs] [--debug] [-o OUTPUT]\n                         [--show-shacl]\n                         [--link-concentrator-threshold LINK_CONCENTRATOR_THRESHOLD]\n                         [--instance-limit INSTANCE_LIMIT]\n                         [--predicate-threshold PREDICATE_THRESHOLD]\n                         [--include [INCLUDE [INCLUDE ...]] |\n                         --include-pattern [INCLUDE_REGEX [INCLUDE_REGEX ...]]\n                         | --exclude [EXCLUDE [EXCLUDE ...]] |\n                         --exclude-pattern\n                         [EXCLUDE_REGEX [EXCLUDE_REGEX ...]]] [-v VERSION]\n                         [-w [WEE [WEE ...]]]\n                         [--label-language LABEL_LANGUAGE]\n                         [--hide [HIDE [HIDE ...]]] [--no-image] [-t TITLE]\n                         [ontology [ontology ...]]\n\npositional arguments:\n  ontology              Ontology file, directory or name pattern\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -e ENDPOINT, --endpoint ENDPOINT\n                        URI of SPARQL endpoint to use to gather data\n  --schema              Generate ontology import graph (default)\n  --data                Analyze instances for types and links\n  --single-ontology-graphs\n                        If specified in combination with --endpoint when\n                        generating a schema graph, assume that every ontology\n                        is in its own named graph in the triple store.\n                        Otherwise rdfs:isDefinedBy will be used to locate\n                        entities defined by each ontology.\n  --debug               Emit verbose debug output\n  -o OUTPUT, --output OUTPUT\n                        Output directory for generated graphics\n  --show-shacl          Attempts to discover which classes and properties have\n                        corresponding SHACL shapes and colors them green on\n                        the graph. This detection relies on the presence of\n                        sh:targetClass targeting, and can be confused by\n                        complex logical shapes or Advanced SHACL features such\n                        as SPARQL queries.\n  --link-concentrator-threshold LINK_CONCENTRATOR_THRESHOLD\n                        When the number links originating from the same class\n                        that share a single predicate exceed this threshold\n                        (default 10), use more compact display. Setting the\n                        value to 0 disables this behavior.\n  -v VERSION, --version VERSION\n                        Version to place in graphic\n  -w [WEE [WEE ...]], --wee [WEE [WEE ...]]\n                        For ontologies matching the patterns specified, only\n                        render the name and import information. If no patterns\n                        are specified, applies to all ontologies.\n  --label-language LABEL_LANGUAGE\n                        In case entities have labels in multiple languages,\n                        select either the specified language (default: en) or\n                        a non-lanugage label.\n  --hide [HIDE [HIDE ...]]\n                        When visualizing data, hide classes and properties\n                        matching the regexpatterns specified with this option.\n  --no-image            Do not generate PNG image, only .dot output.\n  -t TITLE, --title TITLE\n                        Title to use for graph. If not supplied, the repo URI\n                        will be used if graphing an endpoint, or 'Gist' if\n                        graphing local files.\n\nSampling Limits:\n  --instance-limit INSTANCE_LIMIT\n                        Specify a limit on how many triples to consider that\n                        use any one predicate to find (default 500000). This\n                        option may result in an incomplete version of the\n                        diagram, missing certain links.\n  --predicate-threshold PREDICATE_THRESHOLD\n                        Ignore predicates which occur fewer than\n                        PREDICATE_THRESHOLD times (default 10)\n\nFilters (only one can be used):\n  --include [INCLUDE [INCLUDE ...]]\n                        If specified for --schema, only ontologies matching\n                        the specified URIs will be shown in full detail. If\n                        specified with --data, only triples in the named\n                        graphs mentioned will be considered (this also\n                        excludes any triples in the default graph).\n  --include-pattern [INCLUDE_REGEX [INCLUDE_REGEX ...]]\n                        If specified for --schema, only ontologies matching\n                        the specified URI pattern will be shown in full\n                        detail. If specified with --data, only triples in the\n                        named graphs matching the pattern will be considered\n                        (this also excludes any triples in the default graph).\n                        For large graphs this option is significantly slower\n                        than using --include.\n  --exclude [EXCLUDE [EXCLUDE ...]]\n                        If specified for --schema, ontologies matching the\n                        specified URIs will be omitted from the graph. If\n                        specified with --data, triples in the named graphs\n                        mentioned will be excluded (this also excludes any\n                        triples in the default graph).\n  --exclude-pattern [EXCLUDE_REGEX [EXCLUDE_REGEX ...]]\n                        If specified for --schema, ontologies matching the\n                        specified URI pattern will be omitted from the graph.\n                        If specified with --data, triples in the named graphs\n                        matching the pattern will be ignored (this also\n                        excludes any triples in the default graph). For large\n                        graphs this option is significantly slower than using\n                        --exclude.\n```\n\n### Bundle\n\nThe `bundle` sub-command supports creating an ontology deployment containing both RDF and non-RDF artifacts for delivery or web hosting.\n\n```\n$ onto_tool bundle -h\nusage: onto_tool bundle [-h] [--debug] [-v VARIABLE VALUE] bundle\n\npositional arguments:\n  bundle                JSON or YAML bundle definition\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --debug               Emit verbose debug output\n  -v VARIABLE VALUE, --variable VARIABLE VALUE\n                        Set value of VARIABLE to VALUE\n```\n\nThe bundle definition is either YAML or JSON, and contains the following sections:\n\n#### Variable definition\n\n```yaml\nvariables:\n  name: \"gist\"\n  version: \"X.x.x\"\n  input: \".\"\n  rdf-toolkit: \"{input}/tools/rdf-toolkit.jar\"\n  output: \"{name}{version}_webDownload\"\n```\nVariables are initialized with the default values provided, but can be overriden via the `--variable` command line option.\nValues can reference other values using the `{name}` template syntax.\n\n#### Tool definition\n\nAll tools require a `name` by which they are referenced in `transform` actions. Three different tool types are supported:\n* Java tools (`type: \"Java\"`) require a path to the executable Jar file specified via the `jar` option,\n  and a list of `arguments` that will be applied to each file processed.\n  The `inputFile` and `outputFile` variables will be bound during execution, but other variables can be\n  used to construct the arguments.\n  tools:\n  ```yaml\n  - name: \"serializer\"\n    type: \"Java\"\n    jar: \"{rdf-toolkit}\"\n    arguments:\n      - \"-tfmt\"\n      - \"rdf-xml\"\n      - \"-sdt\"\n      - \"explicit\"\n      - \"-dtd\"\n      - \"-ibn\"\n      - \"-s\"\n      - \"{inputFile}\"\n      - \"-t\"\n      - \"{outputFile}\"\n  ```\n* Shell tools (`type: \"shell\"`) execute a command specified via\n  a list of `arguments` that will be applied to each file processed.\n  The `inputFile` and `outputFile` variables will be bound during execution, but other variables can be\n  used to construct the arguments.\n  tools:\n  ```yaml\n    tools:\n    - name: \"java_version\"\n      type: \"shell\"\n      arguments:\n        - \"java\"\n        - \"-version\"\n  ```\n* SPARQL tools apply a SPARQL Update query to each input file and serialize the resulting graph into the \n  output file. RDF format is preserved unless overridden with the `format` option. If the query is specified\n  inline, template substitution will be applied to it, so bundle variables can be used, but double braces\n  (`{{` instead of `{`, `}}` instead of `}`) have to be used to escape actual braces.\n  ```yaml\n    - name: \"add-language-en\"\n      type: \"sparql\"\n      query: >\n        prefix skos: <http://www.w3.org/2004/02/skos/core#>\n        DELETE {{\n          ?subject skos:prefLabel ?nolang .\n        }}\n        INSERT {{\n          ?subject skos:prefLabel ?withlang\n        }}\n        where {{\n          ?subject skos:prefLabel ?nolang .\n          FILTER(lang(?nolang) = '')\n          BIND(STRLANG(?nolang, '{lang}') as ?withlang)\n        }}\n  ```\n\n#### Actions\n\nActions are executed in the order they are listed. Each action must have an `action` attribute,\nand any action can contain a `message` attribute, the contents of which will be\nemitted as a `INFO`-level log message prior to the execution of the action.\n\n##### Basic File Manipulation\n- `mkdir`, which requires a `directory` attribute to specify the path of the directory to be created \n  (only if it doesn't already exist)\n- `copy`, which copies files into the bundle, and supports the following arguments:\n  - `source`, `target` and `includes` - if `includes` is not present, `source` and `target` are both\n    assumed to be file paths to a single file. If `includes` is provided, `source` and `target` are \n    assumed to be directories, and each member of the `includes` list a glob pattern inside the\n    `source` directory.\n  - `rename` - If provided, must contain `from` and `to` attributes. When specified, each file\n    is renamed as it is copied, where `from` is treated as a Python regular expression\n    applied to the base name of the source file, and `to` is the substitution string which\n    replaces it in the name of the target file. Backreferences are available for capturing groups, e.g.\n    ```yaml\n      rename:\n        from: \"(.*)\\\\.owl\"\n        to: \"\\\\g<1>{version}.owl\"\n    ```\n    will add a version number to the base name of each `.owl` file. Further documentation on\n    Python regular expression replace functionality can be found\n    [here](https://docs.python.org/3/howto/regex.html#search-and-replace).\n  - `replace` - If provided, must contain `from` and `to` attributes. When specified, each file\n    is processed after being copied, and each instance of the `from` pattern is replaced\n    with `to` string in the file contents. Python regular expression syntax and backreferences are\n    supported as shown in the `rename` documentation.\n- `move`, which moves files according the provided options, which are identical to the ones supported\n  by `copy`.\n\n##### RDF Transformation\n\n- `definedBy`, which inspects each input file to identify a single defined ontology, and then\n  adds a `rdfs:isDefinedBy` property to every `owl:Class`, `owl:ObjectProperty`, `owl:DatatypeProperty`\n  and `owl:AnnotationProperty` defined in the file referencing the identified ontology. Existing\n  `rdfs:isDefinedBy` values are removed prior to the addition. Input and output file specification\n  options are identical to those used by the `copy` action.\n- `export`, which functions similarly to the command-line export functionality, gathering one or\n  more input ontologies and exporting them as a single file, with some optional transformations,\n  depending on the following specified options:\n  - `source`, `target` and `includes` - if `includes` is not present, `source` is\n    assumed to be the path to a single file. If `includes` is provided, `source` is \n    assumed to be a directory, and each member of the `includes` list a glob pattern inside the\n    `source` directory. `target` is always treated as a single file path.\n  - `merge` - if provided, it must have two mandatory fields, `iri` and `version`. In this case, all\n    ontologies declared in the input files are removed, and a single new ontologies, specified by the \n    `iri` is created, using `version` to build `owl:versionInfo` and `owl:versionIRI`. Any imports on\n    the removed ontologies which are not satisfied internally are transferred to the new ontology.\n  - `definedBy` - has two possible values, `strict` and `all`. If provided, a `rdfs:isDefinedBy` is\n    added to all non-blank node subjects in the exported RDF linking them to the ontology defined in the\n    combined graph. If more that one ontology is defined, the export will fail. If `strict` is specified,\n    only classes and properties will be annotated, whereas `all` does not filter by type.\n  - `retainDefinedBy` - by default, `definedBy` will override any existing `rdfs:definedBy` annotations,\n    but if this option is provided, existing annotations will be left in place.\n  - `format` - One of `turtle`, `xml`, or `nt` (N-Triples), specifies the output format for the export.\n    The default output format is `turtle`.\n  - `context` - If provided, generates a N-Quads export with the `context` argument as the name of the\n    graph. When this option is present, the value of `format` is ignored.\n  - `compress` - when this is `true`, the output is `gzip`-ed.\n- `transform`, which applies the specified tool to a set of input files, and supports the following\n  arguments:\n  - `tool`, which references the `name` of a tool which must be defined in the `tools` section.\n  - `source`, `target` and `includes`, which function just like they do for the `copy` and `move`\n    actions, with each input and output path bound into the `inputFile` and `outputFile` variables\n    before the tool arguments are interpreted.\n  - `replace` and `rename`, which are applied after the tool invocation, and work as described above.\n- `sparql` reads RDF files provided via the `source` and `includes` options and executes a SPARQL\n  query on the resulting combined graph.\n    * If the `query` option is a valid file path, the query is read from that file,\n      otherwise the contents of the `query` option are interpreted as the query.\n    * `SELECT` query results are stored in the file specified via `target` as a CSV.\n    * RDF results from a `CONSTRUCT` query are\n  stored as either Turtle, RDF/XML or N-Triples, depending on the `format` option (`turtle`, `xml`, or `nt`).\n      Update queries will alter the input data in place, and the resulting\n      graph will be output in the specified format.\n    * `UPDATE` queries executed on local files will modify the in-memory graph and then serialize the\n      resulting graph to the `target`.\n    * The default functionality is to combine all RDF sources specified via `includes`\n      and execute queries on the resulting graph. However, if `eachFile: true` is added,\n      all queries will be applied to each source file separately, and will produce a \n      separate output file. In this case, `target` will be treated as a directory, and\n      the `rename` option should be used when needed to construct the output file names. For example, the following\n      action extracts the labels out of each RDF file into a separate CSV with matching names:\n      ```yaml\n      - action: 'sparql'\n        message: \"Multi-file processing with SELECT\"\n        eachFile: true\n        source: '{input}'\n        includes:\n          - '*_ontology.ttl'\n        target: \"{output}/each/select\"\n        rename:\n          from: \"(.*)\\\\.ttl\"\n          to: \"\\\\g<1>.csv\"\n        query: >\n          prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n          prefix skos: <http://www.w3.org/2004/02/skos/core#>\n          select ?label\n          WHERE {{\n            ?s rdfs:label ?label .\n          }} order by ?label\n      ```\n    * As an alternative to operating on local RDF specified via 'source', a query can\n      be executed on a triple store by specifying an `endpoint`, which must\n      contain a `query_uri`, and can optionally specify `user`/`password` which will\n      authenticate via HTTP basic authentication. Update queries will modify the\n      triple store directly, and a separate `update_uri` can be specified\n      for databases which require it.\n\n\n##### Utility Actions\n- `markdown` transforms a `.md` file referenced in `source` into an HTML output specified in `target`.\n- `graph` reads RDF files provided via the `source` and `includes` options and generates a graphical\n  representation of the ontology, as in the `graphic` sub-command described above. Both `.dot` and\n  `.png` outputs are written to the directory specified in the `target` option, and `title` and \n  `version` attributes configure the title on the generated graph. If `compact` is specified as\n  `True`, a concise graph including only ontology names and imports is generated.\n\n##### Validation\nThe `verify` action reads RDF files provided via the `source` and `includes` options and performs validation on the\nresulting combined graph. If the validation fails, the bundle process exits with a non-zero status and\ndoes not execute subsequent actions. The type of verification performed depends on the \nvalue of the `type` option:\n* If `type` is `select`, one or more SPARQL `SELECT` queries are executed against the graph, and the\n  first query to return a non-empty result will terminate the bundle. The results of the query will\n  be output to the log, and also written as CSV to a file path specified by the `target` option, if\n  provided. Queries can be specified in one of two ways (only one can be present):\n  * If the `query` option is a valid file path, the query is read from that file,\n    otherwise the contents of the `query` option are interpreted as the query, e.g.\n    ```yaml\n    query: >\n      prefix skos: <http://www.w3.org/2004/02/skos/core#>\n      select ?unlabeled where {{\n        ?unlabeled a ?type .\n        filter not exists {{ ?unlabeled skos:prefLabel ?label }}\n      }}\n    ```\n  * If `queries` is provided, a list of queries will be built from the `source` and `includes`\n    sub-options. The queries will be executed in order specified. If `stopOnFail` is omitted or\n    is `true`, the first  query that produces a failing result will cause `verify` to abort. If\n    `stopOnFail` is `false`, all queries will be executed regardless of failures, and the value\n    of `target` is treated as a directory where the results of _each_ failing query will be written.\n    ```yaml\n      - action: 'verify'\n        type: 'select'\n        source: '{input}'\n        includes:\n          - 'verify_data.ttl'\n        target: '{output}/verify_select_results'\n        stopOnFail: false\n        queries:\n          source: '{input}'\n          includes:\n            - 'verify_*_select_query.rq'\n    ```\n* If `type` is `ask`, one or more SPARQL `ASK` queries will be executed. Queries are\n  specified similarly to the `select` validation. Unless `stopOnFail` is set to `false`, the first\n  query producing a result that does not match the required `expected` option, the bundle will terminate.\n  For example:\n  ```yaml\n  actions:\n    - action: 'verify'\n      type: 'ask'\n      source: '{input}'\n      includes:\n        - 'verify_data.ttl'\n      queries:\n        source: '{input}'\n        includes:\n          - '*_ask_query.rq'\n      expected: false\n  ```\n* If `type` is `shacl`, a SHACL shape graph will be constructed from the file specified via the `shapes`\n  option (which must have a `source`, and optionally `includes`), with the bundle terminating only if\n  any `sh:Violation` results are present, unless the `failOn` option specifies otherwise.`\n  The report is emitted to the log, and saved as Turtle to the path specified in the `target` option if it's provided.\n  For example:\n  ```yaml\n  - action: 'verify'\n    type: 'shacl'\n    inference: 'rdfs'\n    source: '{input}'\n    includes:\n      - 'verify_data.ttl'\n    target: '{output}/verify_shacl_errors.ttl'\n    failOn: \"warning\"\n    shapes:\n      source: '{input}/verify_shacl_shapes.ttl'\n  ```\n  If the `inference` option is provided, the reasoner will be run on the graph prior\n  to applying the SHACL rules. The valid values are:\n    * `rdfs`,\n    * `owlrl`,\n    * `both`, or\n    * `none` (default).\n* If `type` is `construct`, the queries are expected to `CONSTRUCT` a [SHACL ValidationReport](https://www.w3.org/TR/shacl/#validation-report).\n  The validation will be considered as a failure if the resulting graph is non-empty. `target`,\n  `stopOnFail` and `query`/`queries` are handled same as `select` validation, and `failOn` is used to determine which\n  violations will terminate execution.\n* Validation can be performed against a SPARQL endpoint instead of local RDF\n  data by specifying `endpoint` instead of `source`/`includes`. `endpoint` must\n  contain a `query_uri`, and can optionally specify `user`/`password` which will\n  authenticate via HTTP basic authentication. For example:\n  ```\n  - action: 'verify'\n    type: 'construct'\n    endpoint:\n      query_uri: 'https://my.endpoint.com/sparql'\n      user: 'test-user'\n      password: 'test-user'\n    target: '{output}/verify_construct_results'\n    stopOnFail: false\n    query: '{input}/verify_via_construct.rq'\n  ```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/semanticarts/ontology-toolkit",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "onto-tool",
    "package_url": "https://pypi.org/project/onto-tool/",
    "platform": null,
    "project_url": "https://pypi.org/project/onto-tool/",
    "project_urls": {
      "Homepage": "https://github.com/semanticarts/ontology-toolkit"
    },
    "release_url": "https://pypi.org/project/onto-tool/1.7.2/",
    "requires_dist": [
      "SPARQLWrapper (>=1.8.5)",
      "jinja2",
      "jsonschema (>=3.2.0)",
      "markdown",
      "mdx-smartypants",
      "pydot",
      "pyparsing (==2.4.7)",
      "pyshacl (~=0.17.0)",
      "pyyaml",
      "rdflib (~=6.0.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Ontology Maintenance and Release Tool",
    "version": "1.7.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13482298,
  "releases": {
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fc1c6c72f3f74bb570d59d5c808137966ea8f99f9e6618461616bec0669322e",
          "md5": "3c5ebe4be124bc68ed654377634e4706",
          "sha256": "c5e9ae3f6f0854ec4e85742540515f8c8ac645c0c616619c1fbaf97f049cdd51"
        },
        "downloads": -1,
        "filename": "onto_tool-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c5ebe4be124bc68ed654377634e4706",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 42375,
        "upload_time": "2021-06-29T19:15:29",
        "upload_time_iso_8601": "2021-06-29T19:15:29.075837Z",
        "url": "https://files.pythonhosted.org/packages/0f/c1/c6c72f3f74bb570d59d5c808137966ea8f99f9e6618461616bec0669322e/onto_tool-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f2369a3456b6c04a9ad76835bc368f6e5ebe270bac13031cdfca51d993bb278",
          "md5": "74bd31c0b4dec02f31e13349d7e5ed79",
          "sha256": "de3e83ac98e9f3443ea552c5636f115c5cf5db024304a5e9a9471e217be07080"
        },
        "downloads": -1,
        "filename": "onto_tool-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "74bd31c0b4dec02f31e13349d7e5ed79",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 39736,
        "upload_time": "2021-06-29T19:15:31",
        "upload_time_iso_8601": "2021-06-29T19:15:31.276788Z",
        "url": "https://files.pythonhosted.org/packages/0f/23/69a3456b6c04a9ad76835bc368f6e5ebe270bac13031cdfca51d993bb278/onto_tool-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1aa9b2f4a2feeb3e20086d92b7feea0d10308cf386a959e70d893f5b2473c3e7",
          "md5": "8e86e00012c61dedc0bce6b4f87171dc",
          "sha256": "b37ab9f957b567075bfe0bba9fadd7d3ae28505dd73173a0786480d03a4815f5"
        },
        "downloads": -1,
        "filename": "onto_tool-1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e86e00012c61dedc0bce6b4f87171dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 41283,
        "upload_time": "2021-07-14T14:24:52",
        "upload_time_iso_8601": "2021-07-14T14:24:52.988470Z",
        "url": "https://files.pythonhosted.org/packages/1a/a9/b2f4a2feeb3e20086d92b7feea0d10308cf386a959e70d893f5b2473c3e7/onto_tool-1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a16ec952dd3890c631f66feae9bf2aa37ea744dfd2c016c5412f609a0d979666",
          "md5": "e2088f7bb736a63723272251c6c2ffae",
          "sha256": "63e5c4f0ce8efb99488ecdf2fd1a7ba0c4a75d7c0e8120cfbcbbdb6c8363f40c"
        },
        "downloads": -1,
        "filename": "onto_tool-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e2088f7bb736a63723272251c6c2ffae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 43859,
        "upload_time": "2021-07-14T14:24:54",
        "upload_time_iso_8601": "2021-07-14T14:24:54.565450Z",
        "url": "https://files.pythonhosted.org/packages/a1/6e/c952dd3890c631f66feae9bf2aa37ea744dfd2c016c5412f609a0d979666/onto_tool-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ec967c0157bc4ab69fc116c9f307e11147af726a5fe24671f0576a6330df96c",
          "md5": "12e3616ea3e393c1d1504ad1c4226105",
          "sha256": "dfd2eabdd1338d9ac46794237231a4ac6217dc19435007d25fb240afa24a86b3"
        },
        "downloads": -1,
        "filename": "onto_tool-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12e3616ea3e393c1d1504ad1c4226105",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 45380,
        "upload_time": "2021-08-26T15:55:50",
        "upload_time_iso_8601": "2021-08-26T15:55:50.195915Z",
        "url": "https://files.pythonhosted.org/packages/6e/c9/67c0157bc4ab69fc116c9f307e11147af726a5fe24671f0576a6330df96c/onto_tool-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "baea8fe188868d0aa41286dc13a0f3ac9b4b307c303f91e948e9c029cd496d10",
          "md5": "69ebd703f775ccb89f34d186ca00791a",
          "sha256": "a8bacf16fd0c51b75dfdec55faa139d2f4fcdfd50491677663c9ede246fbebe3"
        },
        "downloads": -1,
        "filename": "onto_tool-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "69ebd703f775ccb89f34d186ca00791a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 47638,
        "upload_time": "2021-08-26T15:55:51",
        "upload_time_iso_8601": "2021-08-26T15:55:51.854976Z",
        "url": "https://files.pythonhosted.org/packages/ba/ea/8fe188868d0aa41286dc13a0f3ac9b4b307c303f91e948e9c029cd496d10/onto_tool-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "475b9ab22cf19f9a6f6d3317ae3d634918b286f95022d36e35636fcf5d922c6f",
          "md5": "9fc52f59f169d2563484586929bf41da",
          "sha256": "8b16f618e9c65863b5a076d46a1b39eb2da572aa0abec453368519b75cf6a229"
        },
        "downloads": -1,
        "filename": "onto_tool-1.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9fc52f59f169d2563484586929bf41da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 45427,
        "upload_time": "2021-09-05T18:26:57",
        "upload_time_iso_8601": "2021-09-05T18:26:57.536233Z",
        "url": "https://files.pythonhosted.org/packages/47/5b/9ab22cf19f9a6f6d3317ae3d634918b286f95022d36e35636fcf5d922c6f/onto_tool-1.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d28075661ed380734b919d1d33ef60e764d1b12436cdbcc35fd64d182eed9e8",
          "md5": "7c29f523263aff754adde9a809738cad",
          "sha256": "4c75d2a27eef32a1118688cec6949e63307812a90bf373c0d85f8479c03b8dad"
        },
        "downloads": -1,
        "filename": "onto_tool-1.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7c29f523263aff754adde9a809738cad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 47682,
        "upload_time": "2021-09-05T18:26:58",
        "upload_time_iso_8601": "2021-09-05T18:26:58.497273Z",
        "url": "https://files.pythonhosted.org/packages/4d/28/075661ed380734b919d1d33ef60e764d1b12436cdbcc35fd64d182eed9e8/onto_tool-1.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9766b942e16299427d9b74b335af43dd6c97faf2367ea84f9d5ff2e4b8185b5",
          "md5": "ce74baa9a537b628d7c04f6cd444e6ec",
          "sha256": "db317359678a602187950f4844118ac91cb44bd67bdef028d9a20055fcb2ecfc"
        },
        "downloads": -1,
        "filename": "onto_tool-1.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce74baa9a537b628d7c04f6cd444e6ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 45456,
        "upload_time": "2021-09-14T03:13:33",
        "upload_time_iso_8601": "2021-09-14T03:13:33.211420Z",
        "url": "https://files.pythonhosted.org/packages/f9/76/6b942e16299427d9b74b335af43dd6c97faf2367ea84f9d5ff2e4b8185b5/onto_tool-1.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d9d0c180148cbf21f99c53341646671fa1554e344ad25e96d4000384fa583a6",
          "md5": "5c089ad7b54bc9113174003ae7190839",
          "sha256": "e8b7196de14e20cdc719c8610fbd26d69807e87cd24d69df1d8c6f00c3b01543"
        },
        "downloads": -1,
        "filename": "onto_tool-1.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5c089ad7b54bc9113174003ae7190839",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 47715,
        "upload_time": "2021-09-14T03:13:34",
        "upload_time_iso_8601": "2021-09-14T03:13:34.495528Z",
        "url": "https://files.pythonhosted.org/packages/7d/9d/0c180148cbf21f99c53341646671fa1554e344ad25e96d4000384fa583a6/onto_tool-1.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ce2161cfca251588e3944caecd63297a5d0fb2578a02fc71518bb3d6d3b7de7",
          "md5": "8f92cb6087b4361e201ec07245014ae7",
          "sha256": "d36e60622452349fa3e6a8264a31528447cba240eb4956336d46fa7a86a24d88"
        },
        "downloads": -1,
        "filename": "onto_tool-1.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f92cb6087b4361e201ec07245014ae7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 49912,
        "upload_time": "2021-10-14T19:15:59",
        "upload_time_iso_8601": "2021-10-14T19:15:59.328949Z",
        "url": "https://files.pythonhosted.org/packages/4c/e2/161cfca251588e3944caecd63297a5d0fb2578a02fc71518bb3d6d3b7de7/onto_tool-1.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6598830a04a99dd302e9f3d87e9ce647a2353c97c8f114f2d11a5ce8ce97e638",
          "md5": "d71427b427aabae55cfa119d04465bc6",
          "sha256": "fc810e2452eab37e7879c88e88ed13710a3a4bacd95c0e732dc9ad6ee0c59164"
        },
        "downloads": -1,
        "filename": "onto_tool-1.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d71427b427aabae55cfa119d04465bc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 51469,
        "upload_time": "2021-10-14T19:16:02",
        "upload_time_iso_8601": "2021-10-14T19:16:02.293639Z",
        "url": "https://files.pythonhosted.org/packages/65/98/830a04a99dd302e9f3d87e9ce647a2353c97c8f114f2d11a5ce8ce97e638/onto_tool-1.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1d4c8a5e083feab0a9dbd9840445323c3154c937f247d5e0aefa5ba54ccde5a",
          "md5": "59f2b503a367f5a552c7c6cbdc75f2ab",
          "sha256": "6987cd41c262b2fd8944cc87de27086b5daebfc6c731ed165cf5d44e0a9ada6b"
        },
        "downloads": -1,
        "filename": "onto_tool-1.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59f2b503a367f5a552c7c6cbdc75f2ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 50412,
        "upload_time": "2021-10-19T11:21:41",
        "upload_time_iso_8601": "2021-10-19T11:21:41.914031Z",
        "url": "https://files.pythonhosted.org/packages/d1/d4/c8a5e083feab0a9dbd9840445323c3154c937f247d5e0aefa5ba54ccde5a/onto_tool-1.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70715d425015136996d437d6f5981a7383afe3e1fc0a32b66b2f89fc9cd53682",
          "md5": "e5a4040e8cb9d257f9e66da3006ae002",
          "sha256": "e4434da9d74fefe296ee1eee78a0879d31d546aa9095f3fa7e6acf475e5092fd"
        },
        "downloads": -1,
        "filename": "onto_tool-1.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e5a4040e8cb9d257f9e66da3006ae002",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 52035,
        "upload_time": "2021-10-19T11:21:43",
        "upload_time_iso_8601": "2021-10-19T11:21:43.789226Z",
        "url": "https://files.pythonhosted.org/packages/70/71/5d425015136996d437d6f5981a7383afe3e1fc0a32b66b2f89fc9cd53682/onto_tool-1.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa060033afab55823067600df3100236d2b1ba7976e67405bf7c0cbcba1a3f46",
          "md5": "a10a62c9ada9c73e18faa6ca85d9bf32",
          "sha256": "d0ff4c946d94a97ac2864bf9b67e8c012efaa81ca4933fed0ab7d74cbffac749"
        },
        "downloads": -1,
        "filename": "onto_tool-1.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a10a62c9ada9c73e18faa6ca85d9bf32",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 50828,
        "upload_time": "2021-12-02T17:35:59",
        "upload_time_iso_8601": "2021-12-02T17:35:59.734625Z",
        "url": "https://files.pythonhosted.org/packages/aa/06/0033afab55823067600df3100236d2b1ba7976e67405bf7c0cbcba1a3f46/onto_tool-1.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7d7e6c5f5085e9e360c911b5c5d253f43629922cf5fc9f8496c07fd48a385f4",
          "md5": "464c70340dbbb0d86e2534d1e20ca42f",
          "sha256": "fb9d33c8419dc4005440ac7688872b2bec32aba5c1ea43b84b805f1f3b031bb5"
        },
        "downloads": -1,
        "filename": "onto_tool-1.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "464c70340dbbb0d86e2534d1e20ca42f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 52370,
        "upload_time": "2021-12-02T17:36:01",
        "upload_time_iso_8601": "2021-12-02T17:36:01.432427Z",
        "url": "https://files.pythonhosted.org/packages/c7/d7/e6c5f5085e9e360c911b5c5d253f43629922cf5fc9f8496c07fd48a385f4/onto_tool-1.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b9c81744aef9b9c8e2c5bb407603980ad1fece5b8f48b794755a89f4eaa0ea9",
          "md5": "4fc4f7bf1c47ad0d33e62cb030133464",
          "sha256": "7cbdb3be7fc4ba54f2696a819196a7143cb8c13ccab632b446893b926cb2c47a"
        },
        "downloads": -1,
        "filename": "onto_tool-1.7.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4fc4f7bf1c47ad0d33e62cb030133464",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 50874,
        "upload_time": "2022-04-11T21:47:07",
        "upload_time_iso_8601": "2022-04-11T21:47:07.187041Z",
        "url": "https://files.pythonhosted.org/packages/8b/9c/81744aef9b9c8e2c5bb407603980ad1fece5b8f48b794755a89f4eaa0ea9/onto_tool-1.7.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a31704f7a593b444790ab5d2e38233e88cdeaf23ed9455c2a1f3a0970bfba22",
          "md5": "7b3698f3f69c1f72ee7fb308cc6d8bcc",
          "sha256": "d4cb6a02eeab6eab1eaac83affc8dc75c094e216c3ce704b7d4a6793ad6ee303"
        },
        "downloads": -1,
        "filename": "onto_tool-1.7.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b3698f3f69c1f72ee7fb308cc6d8bcc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 50885,
        "upload_time": "2022-04-11T21:51:02",
        "upload_time_iso_8601": "2022-04-11T21:51:02.351189Z",
        "url": "https://files.pythonhosted.org/packages/7a/31/704f7a593b444790ab5d2e38233e88cdeaf23ed9455c2a1f3a0970bfba22/onto_tool-1.7.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f6baf34ae8ff1a09ab1113efd1c850833360d98b701426ba04730c8553d5b32",
          "md5": "01d8fc5d3dfccf949647a955a52d3898",
          "sha256": "0702bb1dd780d0b14b352ba2e70acf5b3009f4c82ce04001309f5149b91bb271"
        },
        "downloads": -1,
        "filename": "onto_tool-1.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "01d8fc5d3dfccf949647a955a52d3898",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 51274,
        "upload_time": "2022-04-11T21:47:09",
        "upload_time_iso_8601": "2022-04-11T21:47:09.274959Z",
        "url": "https://files.pythonhosted.org/packages/9f/6b/af34ae8ff1a09ab1113efd1c850833360d98b701426ba04730c8553d5b32/onto_tool-1.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b9c81744aef9b9c8e2c5bb407603980ad1fece5b8f48b794755a89f4eaa0ea9",
        "md5": "4fc4f7bf1c47ad0d33e62cb030133464",
        "sha256": "7cbdb3be7fc4ba54f2696a819196a7143cb8c13ccab632b446893b926cb2c47a"
      },
      "downloads": -1,
      "filename": "onto_tool-1.7.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4fc4f7bf1c47ad0d33e62cb030133464",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 50874,
      "upload_time": "2022-04-11T21:47:07",
      "upload_time_iso_8601": "2022-04-11T21:47:07.187041Z",
      "url": "https://files.pythonhosted.org/packages/8b/9c/81744aef9b9c8e2c5bb407603980ad1fece5b8f48b794755a89f4eaa0ea9/onto_tool-1.7.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a31704f7a593b444790ab5d2e38233e88cdeaf23ed9455c2a1f3a0970bfba22",
        "md5": "7b3698f3f69c1f72ee7fb308cc6d8bcc",
        "sha256": "d4cb6a02eeab6eab1eaac83affc8dc75c094e216c3ce704b7d4a6793ad6ee303"
      },
      "downloads": -1,
      "filename": "onto_tool-1.7.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7b3698f3f69c1f72ee7fb308cc6d8bcc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 50885,
      "upload_time": "2022-04-11T21:51:02",
      "upload_time_iso_8601": "2022-04-11T21:51:02.351189Z",
      "url": "https://files.pythonhosted.org/packages/7a/31/704f7a593b444790ab5d2e38233e88cdeaf23ed9455c2a1f3a0970bfba22/onto_tool-1.7.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f6baf34ae8ff1a09ab1113efd1c850833360d98b701426ba04730c8553d5b32",
        "md5": "01d8fc5d3dfccf949647a955a52d3898",
        "sha256": "0702bb1dd780d0b14b352ba2e70acf5b3009f4c82ce04001309f5149b91bb271"
      },
      "downloads": -1,
      "filename": "onto_tool-1.7.2.tar.gz",
      "has_sig": false,
      "md5_digest": "01d8fc5d3dfccf949647a955a52d3898",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 51274,
      "upload_time": "2022-04-11T21:47:09",
      "upload_time_iso_8601": "2022-04-11T21:47:09.274959Z",
      "url": "https://files.pythonhosted.org/packages/9f/6b/af34ae8ff1a09ab1113efd1c850833360d98b701426ba04730c8553d5b32/onto_tool-1.7.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}