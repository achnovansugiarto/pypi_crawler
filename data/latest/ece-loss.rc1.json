{
  "info": {
    "author": "Jonas Teuwen",
    "author_email": "j.teuwen@nki.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "============================\nExclusive Cross-Entropy Loss\n============================\n\n.. image:: https://img.shields.io/pypi/v/ece_loss.svg\n        :alt: PyPI - Latest release\n        :target: https://pypi.python.org/pypi/ece_loss\n\n.. image:: https://img.shields.io/github/license/NKI-AI/ece_loss.svg\n        :alt: GitHub - Repository license\n        :target: https://github.com/NKI-AI/ece_loss/blob/main/LICENSE\n\nA `PyTorch <http://pytorch.org/>`__ implementation of the Exclusive Cross Entropy Loss.\n\n* Free software: `Apache 2.0 license <https://github.com/NKI-AI/ece_loss/blob/main/LICENSE>`__ (please cite our work if you use it)\n\nFeatures\n--------\n\n* Perform sparse-shot learning from non-exhaustively annotated datasets\n* Plug-n-play components of Binary Exclusive Cross-Entropy and Exclusive Cross-entropy as substitutes for the original Cross-entropy pytorch functions\n* 1-2 changes in lines of code for Exclusive cross-entropy loss compared to native pytorch cross-entropy\n* Simple and modular loss class for problem personalisation if needed\n* Example training code provided for a simple segmentation case\n\n\nExamples\n--------\n\nSee here for the simplest example in a converged training state\n\n.. code-block:: python\n\n    import ExclusiveCrossEntropyLoss\n\n    loss = ExclusiveCrossEntropyLoss()\n    input = torch.randn(2, 3, requires_grad=True)\n    target = torch.empty(2, dtype=torch.long).random_(3)\n    output = loss(input, target)\n\nFor setting the epoch state during training the `set_epoch` must be used for the annealing functions as\n\n.. code-block:: python\n\n    import ExclusiveCrossEntropyLoss\n\n    # Epoch `loss.epoch` is initialised at zero. Can be changed by `ExclusiveCrossEntropyLoss(epoch=epoch)`\n    loss = ExclusiveCrossEntropyLoss()\n\n    # Updates the current epoch. The loss value for the unallabelled samples depends heavily on the current state\n    #     because the background sampling and threshold annealing function decide how much of the background class\n    #     to incorporate into the loss and how strict the exclusivity condition should be.\n    loss.set_epoch(100)\n\n    input = torch.randn(2, 3, requires_grad=True)\n    target = torch.empty(2, dtype=torch.long).random_(3)\n    output = loss(input, target)\n    # Alternatively, epoch can be given as an optional argument as `loss(input, target, epoch=epoch)`\n\n\nBe default, sigmoid annealing functions are used for both the (negative) background sampling and the exclusivity condition. If a different annealing is required then this can be changed by\n\n.. code-block:: python\n\n    import ExclusiveCrossEntropyLoss\n    annealing_funct = lambda epoch, threshold: threshold  # For no annealing\n    loss = ExclusiveCrossEntropyLoss(exclusivity_threshold_annealing=annealing_funct, background_sampling_annealing=annealing_funct)\n\n\nFor switching off the exclusivity condition, or adjusting the other parameters of the exclusive loss this can be done by\n\n.. code-block:: python\n\n    import ExclusiveCrossEntropyLoss\n    loss = ExclusiveCrossEntropyLoss(exclusivity_threshold=1,\n                                     background_sampling_threshold=1,\n                                     exclusivity_threshold_annealing=lambda epoch, threshold: threshold,\n                                     background_sampling_annealing=lambda epoch, threshold: threshold,\n                                     focal_loss_parameters=(1, 0),\n                                    )\n\nLastly and very importantly, the samples that are considered as unlabelled must be defined. By default the multiclass exlusive cross entropy (ExclusiveCrossEntropyLoss) defines unlabelled samples as the ones with targets equal to zero; as defined by the `zeroth_label_as_unannotated` function.\n\nFor the binary loss (BCELoss, BCEWithLogitsLoss), this is switched off and assumes all input as unlabelled, as defined by the `_identity_mapping_single_input_torch_ones` inner function.\n\nIf custom unlabelled sample mapping is required this can be adjusted by setting the unannotated_mapping variable as\n\n.. code-block:: python\n\n    import ExclusiveCrossEntropyLoss\n    loss = ExclusiveCrossEntropyLoss()\n\n    loss.set_unannotated_mapping(lambda targets: targets == 1)  # For the background class being assigned integer 1\n\n\nA proof of concept is provided for the TNBC dataset in the examples directory with the necessary code to use the exclusive cross-entropy loss in a segmentation task.\n\n\nInstall\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.. code::\n\n    pip install -e .\n\n\nUse the loss\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    import ExclusiveCrossEntropyLoss\n    loss = ExclusiveCrossEntropyLoss()\n    output = loss(input, target)  # just as in the ordinary CrossEntropyLoss\n\nFor more specific usages the exclusive configuration can be adjusted by:\n\n.. code-block:: python\n\n    loss = ExclusiveCrossEntropyLoss(exclusivity_threshold= 0.5,\n                                     background_sampling_threshold = 0.5,\n                                     exclusivity_threshold_annealing = annealing_function,\n                                     background_sampling_annealing = annealing_function,\n                                     focal_loss_parameters = (0.2, 0.1)\n                                    )  # indicating the default values and a general annealing_function\n\nRun PyTorch Experiments\n-----------------------\n\nAfter installing ECE run:\n\n.. code::\n\n    python train_tnbc [--seed] [--lr] [--loss] [--train_path] [--train_path] [--eval_path] [--test_path] [--epochs] [--batch_size] [--device]\n\n* Available values for ``--loss`` are ``ece`` and ``ce`` for exclusive cross-entropy and cross-entropy respectively.\n* Use the ``--device`` flag to set device either ``cuda`` to train on the GPU or ``cpu`` to train on the CPU.\n\nThe simple segmentation task on TNBC on the lisa surf sara cluster, using a GTX1080-ti GPU the results are:\n\n+------------+-----------------+---------------------------+\n|   DICE     |  Cross-entropy  |  Exclusive Cross-Entropy  |\n+============+=================+===========================+\n| TNBC @30%  |       0.78      |            0.78           |\n+------------+-----------------+---------------------------+\n| TNBC @30%  |       0.08      |            0.41           |\n+------------+-----------------+---------------------------+\n\nCitation\n--------\n\n`Panteli, A., Teuwen, J., Horlings, H. and Gavves, E.; Sparse-shot Learning with Exclusive Cross-Entropy for ExtremelyMany Localisations; Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV), 2021, pp. 2813-2823 <https://openaccess.thecvf.com/content/ICCV2021/html/Panteli_Sparse-Shot_Learning_With_Exclusive_Cross-Entropy_for_Extremely_Many_Localisations_ICCV_2021_paper.html>`__\n\nIf you use our code, please cite:\n\n.. code::\n\n    @InProceedings{Panteli_2021_ICCV,\n        author    = {Panteli, Andreas and Teuwen, Jonas and Horlings, Hugo and Gavves, Efstratios},\n        title     = {Sparse-Shot Learning With Exclusive Cross-Entropy for Extremely Many Localisations},\n        booktitle = {Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV)},\n        month     = {October},\n        year      = {2021},\n        pages     = {2813-2823}\n    }\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NKI-AI/ece_loss",
    "keywords": "ece_loss",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ece-loss",
    "package_url": "https://pypi.org/project/ece-loss/",
    "platform": "",
    "project_url": "https://pypi.org/project/ece-loss/",
    "project_urls": {
      "Homepage": "https://github.com/NKI-AI/ece_loss"
    },
    "release_url": "https://pypi.org/project/ece-loss/1.0.0/",
    "requires_dist": [
      "torch (~=1.9.0)",
      "setuptools (~=58.0.4)",
      "numpy (~=1.21.2) ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "black ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "tox ; extra == 'dev'",
      "pillow (~=8.4.0) ; extra == 'example'",
      "matplotlib (~=3.4.3) ; extra == 'example'"
    ],
    "requires_python": ">=3.8",
    "summary": "",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12126207,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5b4231251a7ee9647d0d9b6b49687babff6399459ee5e3d5f8996f9446915cd",
          "md5": "f1401f1ba5615f5dc76773c9f6837ab7",
          "sha256": "4ff3270324490f2e4fa790e4df5aa473ba5d4b396944f2344e229d2a1d032936"
        },
        "downloads": -1,
        "filename": "ece_loss-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1401f1ba5615f5dc76773c9f6837ab7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 12231,
        "upload_time": "2021-11-25T20:56:32",
        "upload_time_iso_8601": "2021-11-25T20:56:32.384210Z",
        "url": "https://files.pythonhosted.org/packages/a5/b4/231251a7ee9647d0d9b6b49687babff6399459ee5e3d5f8996f9446915cd/ece_loss-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fd31fe777a1fab36e10858709061089851ec3cdc5d920552d46dd210a882313",
          "md5": "241425963597f29ef3351ddf70018ab1",
          "sha256": "b0aa8885e61f081f15f9e7b55d8c132d7fb425b4d00f31866a4e9a9d42348247"
        },
        "downloads": -1,
        "filename": "ece_loss-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "241425963597f29ef3351ddf70018ab1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16557,
        "upload_time": "2021-11-25T20:56:34",
        "upload_time_iso_8601": "2021-11-25T20:56:34.186644Z",
        "url": "https://files.pythonhosted.org/packages/3f/d3/1fe777a1fab36e10858709061089851ec3cdc5d920552d46dd210a882313/ece_loss-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5b4231251a7ee9647d0d9b6b49687babff6399459ee5e3d5f8996f9446915cd",
        "md5": "f1401f1ba5615f5dc76773c9f6837ab7",
        "sha256": "4ff3270324490f2e4fa790e4df5aa473ba5d4b396944f2344e229d2a1d032936"
      },
      "downloads": -1,
      "filename": "ece_loss-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f1401f1ba5615f5dc76773c9f6837ab7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 12231,
      "upload_time": "2021-11-25T20:56:32",
      "upload_time_iso_8601": "2021-11-25T20:56:32.384210Z",
      "url": "https://files.pythonhosted.org/packages/a5/b4/231251a7ee9647d0d9b6b49687babff6399459ee5e3d5f8996f9446915cd/ece_loss-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3fd31fe777a1fab36e10858709061089851ec3cdc5d920552d46dd210a882313",
        "md5": "241425963597f29ef3351ddf70018ab1",
        "sha256": "b0aa8885e61f081f15f9e7b55d8c132d7fb425b4d00f31866a4e9a9d42348247"
      },
      "downloads": -1,
      "filename": "ece_loss-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "241425963597f29ef3351ddf70018ab1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 16557,
      "upload_time": "2021-11-25T20:56:34",
      "upload_time_iso_8601": "2021-11-25T20:56:34.186644Z",
      "url": "https://files.pythonhosted.org/packages/3f/d3/1fe777a1fab36e10858709061089851ec3cdc5d920552d46dd210a882313/ece_loss-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}