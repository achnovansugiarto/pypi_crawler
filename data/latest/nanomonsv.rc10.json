{
  "info": {
    "author": "Yuichi Shiraishi",
    "author_email": "friend1ws@gamil.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# nanomonsv\n\n[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n[![Build Status](https://travis-ci.com/friend1ws/nanomonsv.svg?branch=master)](https://travis-ci.com/friend1ws/nanomonsv.svg?branch=master&status=started)\n\n## Introduction\n\nnanomonsv is a software for detecting somatic structural variationsã€€ from paired (tumor and matched control) cancer genome sequence data. nanomonsv is presented in the following preprint. **When you use nanomonsv or any resource of this repository, please kindly site this preprint**.\n\nPrecise characterization of somatic structural variations and mobile element insertions from paired long-read sequencing data with nanomonsv, Shiraishi et al., bioRxiv, 2020, [[link]](https://www.biorxiv.org/content/10.1101/2020.07.22.214262v1)\n\n## Dependency\n\n### For basic use (`parse`, `get` command)\n\n### Binary programs\n\n[htslib](http://www.htslib.org/), [mafft](https://mafft.cbrc.jp/alignment/software/), [racon](https://github.com/isovic/racon)(optional from ver. 0.3.0. However, we recommend to use this option. Add --use_racon option when you perfrom get command.)\n\n### Python\nPytnon (tested with >=3.6), pysam, numpy, parasail\n\n> [SSW Library](https://github.com/mengyao/Complete-Striped-Smith-Waterman-Library) (This became optional since version 0.2.0. We have changed the main engine of Smith-Waterman algorithm to parasail.)\n\n\n### For advanced use (`insert_classify` command)\n[bwa](https://github.com/lh3/bwa), [minimap2](https://github.com/lh3/minimap2), [bedtools](https://bedtools.readthedocs.io/en/latest/), [RepeatMasker](http://www.repeatmasker.org/)\n\n## Preparation\n\n### For basic use (`parse`, `get` command)\n\n#### Install software and add them to the PATH\n\nnanomonsv uses, `tabix`, `bgzip` (which ar part of HTSlib projects) and `mafft` inside the program,\nassuming those are installed, and the paths are already added to the running environment.\n\n> ##### For use of SSW Library\n> Since version 0.2.0, nanomonsv can be executed without SSW Library. When users want to use SSW Library, create the libssw.so and add the path to the LD_LIBRARY_PATH environment variable. Please refer the **How to use the Python wrapper ssw_lib.py** section in the [SSW Library](https://github.com/mengyao/Complete-Striped-Smith-Waterman-Library) repository page.\n\n###### For use of racon\nSince version 0.3.0, we support racon for the step where generating consensus sequence and get single-base resolution breakpoints. racon may become the default instead of mafft in the future.\n\n\n### For advanced use (`insert_classify` command)\n`bwa`, `minimap2`, `bedtools` and `RepeatMasker` are required to be installed and these pathese are added to the running environment.\n\n\n### Input file\n\nnanomonsv accept the BAM file aligned by `minimap2`. \n\n\n### Control panel\nStarting with version 0.5.0, the use of the control panel is supported. \nIn this software, supporting reads for SVs are collected for multiple samples other than the target sample, \nand such reads are removed as common noise (or those derived from common SVs) in the `get` stage. \nThis strategy is expected to exclude many false positives as well as improve computational cost.\n\nWe have prepared the command to create control panels from the user's own sequencing data.\nIn addition, for users who do not have sufficient sequencing data that can serve as a control panel (or just do not have time for processing), \nwe prepared a control panel that has been created using the 30 Nanopore sequencing data from the [Human Pangenome Reference Consortium](https://humanpangenome.org/),\nwhich you can download by the following command:\n\n```\nwget https://ncc-gap-pub.s3.ap-northeast-1.amazonaws.com/nanomonsv/control_panel/hprc_year1_data_freeze_nanopore_minimap2_2_24_merge_control.tar.gz\n```\n\nThis control panel is made by aligning 30 Nanopore sequencing data to the GRCh38 reference genome (obtained from [here](https://console.cloud.google.com/storage/browser/genomics-public-data/resources/broad/hg38/v0;tab=objects)) with minimap2 version 2.24. \n**When you use these control panels and publish, do not forget to credit to [HPRC](https://github.com/human-pangenomics/HG002_Data_Freeze_v1.0#citations)!**\n\n\n## Quickstart\n\n1. Install all the prerequisite software and install nanomonsv.\n```\npip install nanomonsv (--user)\n```\n\n2. Prepare the reference genome for the test data (here, we show the path to Genomic Data Commons reference genome).\n```\nwget https://api.gdc.cancer.gov/data/254f697d-310d-4d7d-a27b-27fbf767a834 -O GRCh38.d1.vd1.fa.tar.gz\ntar xvf GRCh38.d1.vd1.fa.tar.gz\n```\n\n3. Parse the putative structural variation supporting reads of the test data.\n```\nnanomonsv parse tests/resource/bam/test_tumor.bam output/test_tumor\nnanomonsv parse tests/resource/bam/test_ctrl.bam output/test_ctrl\n```\n\n4. Get the final result.\n```\nnanomonsv get output/test_tumor tests/resource/bam/test_tumor.bam GRCh38.d1.vd1.fa --control_prefix output/test_ctrl --control_bam tests/resource/bam/test_ctrl.bam\n```\n\nYou will see the result file named `test_tumor.nanomonsv.result.txt`.\n\n## Realistic example sequencing data\n\nThe Oxford Nanopore Sequencing data used in the bioRxiv paper is available through the public sequence repository service (BioProject ID: PRJDB10898):\n- COLO829: [tumor](https://www.ncbi.nlm.nih.gov/sra/DRX248304[accn]), [control](https://www.ncbi.nlm.nih.gov/sra/DRX248305[accn])\n- H2009: [tumor](https://www.ncbi.nlm.nih.gov/sra/DRX248308[accn]), [control](https://www.ncbi.nlm.nih.gov/sra/DRX248309[accn])\n- HCC1954: [tumor](https://www.ncbi.nlm.nih.gov/sra/DRX248306[accn]), [control](https://www.ncbi.nlm.nih.gov/sra/DRX248307[accn])\n\nThe results of nanomonsv for the above data are available [here](https://github.com/friend1ws/nanomonsv/tree/master/misc/example).\nWhen you perform nanomonsv to the above data and have experienced errors, please report to us.\nAlso, please kindly cite the [bioRxiv paper](https://www.biorxiv.org/content/10.1101/2020.07.22.214262v1) when you use these data.\n\n## Commands\n\n### parse\n\nThis step parses all the supporting reads of putative somatic SVs.\n\n```\nnanomonsv parse [-h] [--debug]\n                [--split_alignment_check_margin SPLIT_ALIGNMENT_CHECK_MARGIN]\n                [--minimum_breakpoint_ambiguity MINIMUM_BREAKPOINT_AMBIGUITY]\n                bam_file output_prefix\n```\n- **bam_file**: Path to input indexed BAM file\n- **output_prefix**: Output file prefix\n\nSee the help (`nanomonsv parse -h`) for other options.\n\nAfter successful completion, you will find supporting reads stratified by deletions, insertions, and rearrangements: \n({output_prefix}.deletion.sorted.bed.gz, {output_prefix}.insertion.sorted.bed.gz, {output_prefix}.rearrangement.sorted.bedpe.gz, and {output_prefix}.bp_info.sorted.bed.gz and their indexes (.tbi files). \n\n\n### get\n\nThis step gets the SV result from the parsed supporting reads data obtained above.\n\n```\nnanomonsv get [-h] [--control_prefix CONTROL_PREFIX]\n              [--control_bam CONTROL_BAM]\n              [--min_tumor_variant_read_num MIN_TUMOR_VARIANT_READ_NUM]\n              [--min_tumor_VAF MIN_TUMOR_VAF]\n              [--max_control_variant_read_num MAX_CONTROL_VARIANT_READ_NUM]\n              [--max_control_VAF MAX_CONTROL_VAF]\n              [--cluster_margin_size CLUSTER_MARGIN_SIZE]\n              [--median_mapQ_thres MEDIAN_MAPQ_THRES]\n              [--max_overhang_size_thres MAX_OVERHANG_SIZE_THRES]\n              [--var_read_min_mapq VAR_READ_MIN_MAPQ] [--use_ssw_lib] [--use_racon]\n              [--threads THREADS] [--processes PROCESSES] \n              [--sort_option SORT_OPTION] [--debug]\n              tumor_prefix tumor_bam reference.fa\n ```\n - **tumor_prefix**: Prefix to the tumor data set in the parse step\n - **tumor_bam**: Path to input indexed BAM file\n - **reference.fa**: Path to reference genome used for the alignment\n \nThis software can generate a list of SVs without specifying the matched control.\nBut we have not tested the performance of the approach just using tumor sample, and strongly recommend using the matched control data.\nEven when only tumor sample is available, we still recommend using dummy control sample (collected from other person's tissue).\n- **control_prefix**: Prefix to the matched control data set in the parse step\n- **control_bam**: Path to the matched control BAM file\n\nWhen you use the control panel (recommended!), use the following argument.\n- **control_panel_prefix**: Prefix of non-matched control panel data processed in merge_control step.\n\nAfter successful execution, you will be able to find the result file names as {tumor_prefix}.nanomonsv.result.txt.\nSee the help (`nanomonsv get -h`) for other options. \n\nWhen you want to change the engine of Smith-Waterman algorithm to SSW Library, specify `--use_ssw_lib` option,\nthough we do not generally recommend this.\n\nAlso, we basically recommend using `--use_racon` option. This will slightly improve the identification of single-base resolution breakpoint, \nand polishing of inserted sequences. \n\nAlso, we have prepared the script (misc/post_fileter.py) for filtering the result.\nPlease see the [wiki page](https://github.com/friend1ws/nanomonsv/wiki/How-to-filter-nanomonsv-result).\nFor output files of the version 0.4.0 and later, some filtering has already been performed (see the [wiki page](https://github.com/friend1ws/nanomonsv/wiki/How-to-understand-nanomonsv-result-filtering)). \n\nFrom the version 0.4.0, we will also provide the VCF format result files.\n\n#### result\n\n* **Chr_1**: Chromosome for the 1st breakpoint\n* **Pos_1**: Coordinate for the 1st breakpoint\n* **Dir_1**: Direction of the 1st breakpoint\n* **Chr_2**: Chromosome for the 2nd breakpoint\n* **Pos_2**: Coordinate for the 2nd breakpoint\n* **Dir_2**: Direction of the 2nd breakpoint\n* **Inserted_Seq**: Inserted nucleotides within the breakpoints\n* **SV_ID**: Identifier of SVs (originally comming from cluster of SV supporting reads)\n* **Checked_Read_Num_Tumor**: Total number of reads in the tumor used for the validation alignment step\n* **Supporting_Read_Num_Tumor**: Total number of variant reads in the tumor determined in the validation alignment step\n* **Checked_Read_Num_Control**: Total number of reads in the normal used for the validation alignment step\n* **Supporting_Read_Num_Control**: Total number of variant reads in the matched control determined in the validation alignment step\n* **Is_Filter**: Filter status. PASS if this SV has passed all the filters\n\n\n### merge_control\n\nThis command merges non-matched control panel supporting reads obtained by performing `parse` command.\n\n```\nnanomonsv merge_control [-h] prefix_list_file output_prefix\n```\n\n- **prefix_list_file**: The list of output_prefix generated at the above `parse` stage. \n- **output_prefix**: Prefix to the merged control supporting reads. \n\n\n### insert_classify\n\nThis command classifies the long insertions into several mobile element insertions (still in alpha version).\nThis does not yet support VCF format, but we will do so in the near future.\n\n```\nnanomonsv insert_classify [-h] [--grc] [--genome_id {hg19,hg38,mm10}]\n                          [--debug]\n                          sv_list_file output_file reference.fa\n```\n- **sv_list_file**: SV list file obtained in the get step\n- **output_file**: Path to the output file for this command\n- **reference.fa**: Path to the reference genome\n- **genome_id**: The type of reference genome. Choose from hg19 and hg38 (default is hg38). This is used for selecting LINE1 database.\n\n#### result\n\n* **Insert_Type**: Type of insertion (Solo_L1, Partnered_L1, Orphan_L1, Alu, SVA, PSD)\n* **Is_Inversion**: Type of inverted form for Solo LINE1 insertion (Simple, Inverted, Other)\n* **L1_Raito**: The match rate with LINE1 sequences for the inserted sequences\n* **Alu_Ratio**: The match rate with Alu sequences for the inserted sequences\n* **SVA_Ratio**: The match rate with SVA sequences for the inserted sequences\n* **RMSK_Info**: Summary information of RepeatMasker\n* **Alignment_Info**: Alignment information to the human genome\n* **Inserted_Pos**: Inserted position (appears only when the inserted sequence is aligned near the other insertion and implicated to be the tandem duplication or nested LINE1 transduction).\n* **Is_PolyA_T**: Extracted poly-A or poly-T sequences\n* **Target_Site_Duplication**: Nucleotides of target site duplications\n* **L1_Source_Info**: Inferred source site of LINE1 transduction\n* **PSD_Gene**: Processed pseudogene name\n* **PSD_Overlap_Ratio**: The match rate with the pseudogene\n* **PDS_Exon_Num**: The number of pseudogene exons matched with the inserted sequence\n\n\n### validate\n\nThis command, which is part of the procedures of `get` command, \nperforms validation of the candidate SVs by alignment of tumor and matched control BAM files.\nThis may be helpful for the evaluation of SV tools of the short-read platform\nwhen pairs of short-read and long-read sequencing data are available.\nThis is still in alpha version.\n\n```\nnanomonsv validate [-h] [--control_bam CONTROL_BAM]\n                   [--var_read_min_mapq VAR_READ_MIN_MAPQ] [--debug]\n                   sv_list_file tumor_bam output reference.fa\n```\n- **sv_list_file**: SV candidate list file (similar format with the result file by `get` command. \nBut only from **Chr_1** to **Inserted_Seq** columns are necessary.\n- **output_file**: Path to the output file\n- **reference.fa**: Path to the reference genome                          \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/friend1ws/nanomonsv",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nanomonsv",
    "package_url": "https://pypi.org/project/nanomonsv/",
    "platform": null,
    "project_url": "https://pypi.org/project/nanomonsv/",
    "project_urls": {
      "Homepage": "https://github.com/friend1ws/nanomonsv"
    },
    "release_url": "https://pypi.org/project/nanomonsv/0.5.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python tools for detecting structural variation from nanopore sequence data",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14291148,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98c856e1b52cb06b80fee5343f236287736108317813f030eba3dcf93e221ff9",
          "md5": "0982e72dac9265a25605f038bb7c7b99",
          "sha256": "663ae38643f269f3a86a23453093f1e2def4a6be649c5a7459a5462e70906c2f"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0982e72dac9265a25605f038bb7c7b99",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 503909,
        "upload_time": "2020-09-13T00:20:56",
        "upload_time_iso_8601": "2020-09-13T00:20:56.208905Z",
        "url": "https://files.pythonhosted.org/packages/98/c8/56e1b52cb06b80fee5343f236287736108317813f030eba3dcf93e221ff9/nanomonsv-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a0a8ca5cd1f3cffbee8f9351d29868b279589b045615586c8ba34978261ee89",
          "md5": "72e012c2b84f83d003da5b10e6c3db4f",
          "sha256": "d33b1b240978af7e455b7696abc5f998fd503dbdc6a3800f6c99efc143843eab"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "72e012c2b84f83d003da5b10e6c3db4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 492694,
        "upload_time": "2020-09-13T00:20:57",
        "upload_time_iso_8601": "2020-09-13T00:20:57.581727Z",
        "url": "https://files.pythonhosted.org/packages/6a/0a/8ca5cd1f3cffbee8f9351d29868b279589b045615586c8ba34978261ee89/nanomonsv-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86c27875348ad082d536efc388fb6fac2e6cc8860da5a4df7226646e31360f18",
          "md5": "f8de8aa9be116f88570f6707fe2dfc15",
          "sha256": "e1b3f57d8ac46982010d6fc5c74b8e1e735513a5cde24f8f658650bd1874f242"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.2.0b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8de8aa9be116f88570f6707fe2dfc15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 503811,
        "upload_time": "2020-09-12T08:36:35",
        "upload_time_iso_8601": "2020-09-12T08:36:35.123939Z",
        "url": "https://files.pythonhosted.org/packages/86/c2/7875348ad082d536efc388fb6fac2e6cc8860da5a4df7226646e31360f18/nanomonsv-0.2.0b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "602f6a86517466677525216473caa779a32411d0cfdf993a98db1f78d06994e5",
          "md5": "7315549ed8ac0d038fdec23576892f49",
          "sha256": "931cc755139d42cc4f699e916728810992defb93de54864bb4f95dff3ee5f088"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.2.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "7315549ed8ac0d038fdec23576892f49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 492534,
        "upload_time": "2020-09-12T08:36:37",
        "upload_time_iso_8601": "2020-09-12T08:36:37.763418Z",
        "url": "https://files.pythonhosted.org/packages/60/2f/6a86517466677525216473caa779a32411d0cfdf993a98db1f78d06994e5/nanomonsv-0.2.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac1de136a4f2c99217dc97c964ed57f0e5293a4357dc63861491db2ddad25e2a",
          "md5": "ce925807e8f8635249018f6a141a6235",
          "sha256": "ed523c14020f9d0a81a3dae05e1c549b41ab7caf99fa3d40f414e48d60e34745"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.2.0b2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce925807e8f8635249018f6a141a6235",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 503829,
        "upload_time": "2020-09-12T14:42:42",
        "upload_time_iso_8601": "2020-09-12T14:42:42.917546Z",
        "url": "https://files.pythonhosted.org/packages/ac/1d/e136a4f2c99217dc97c964ed57f0e5293a4357dc63861491db2ddad25e2a/nanomonsv-0.2.0b2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "186ceefa4e71663b56b41fcc686be2661022da9570820d4b158e3c00666e608b",
          "md5": "233fae7f971e8b1d52ca9c7b4269a96b",
          "sha256": "993b8c9ca8d187788bfa7313d808a1a95ff927c123d71c9e9a2f19a0b278d19b"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.2.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "233fae7f971e8b1d52ca9c7b4269a96b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 492521,
        "upload_time": "2020-09-12T14:42:44",
        "upload_time_iso_8601": "2020-09-12T14:42:44.387327Z",
        "url": "https://files.pythonhosted.org/packages/18/6c/eefa4e71663b56b41fcc686be2661022da9570820d4b158e3c00666e608b/nanomonsv-0.2.0b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0b3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43d02f35010f5238ee752950d2045d4272eb0586c4a9bd1d4edd0976cd743b1d",
          "md5": "5e998a4eb96083220fd213d91cb4a597",
          "sha256": "af9d6df96ad8b0c093ffa061ec387ddbc63acc9a96d6011b3fe533d0f4b93825"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.2.0b3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e998a4eb96083220fd213d91cb4a597",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 503817,
        "upload_time": "2020-09-12T15:06:09",
        "upload_time_iso_8601": "2020-09-12T15:06:09.423688Z",
        "url": "https://files.pythonhosted.org/packages/43/d0/2f35010f5238ee752950d2045d4272eb0586c4a9bd1d4edd0976cd743b1d/nanomonsv-0.2.0b3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ab224335e5cac284d0b23fe89d01c134f88c2728ea22aa318e6c3e14fd5923a",
          "md5": "5a3bf46cbda788b4bf2deab9df8fc498",
          "sha256": "ef959e9e8476a9d3182efe4db3ebad19d209219084031909729fceb06b49f31b"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.2.0b3.tar.gz",
        "has_sig": false,
        "md5_digest": "5a3bf46cbda788b4bf2deab9df8fc498",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 492489,
        "upload_time": "2020-09-12T15:06:10",
        "upload_time_iso_8601": "2020-09-12T15:06:10.794609Z",
        "url": "https://files.pythonhosted.org/packages/3a/b2/24335e5cac284d0b23fe89d01c134f88c2728ea22aa318e6c3e14fd5923a/nanomonsv-0.2.0b3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6205e322748ed7a6385b77d806086968503631349583a804f894bc163618bc7",
          "md5": "5b198f1630c5affc3ae08d19dd155599",
          "sha256": "60c30b67d806fac731eb67ed5cfb2db3abd1ea735d6fcc2f2bcb82ecd70438bd"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b198f1630c5affc3ae08d19dd155599",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 519769,
        "upload_time": "2021-01-25T02:53:42",
        "upload_time_iso_8601": "2021-01-25T02:53:42.963498Z",
        "url": "https://files.pythonhosted.org/packages/c6/20/5e322748ed7a6385b77d806086968503631349583a804f894bc163618bc7/nanomonsv-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6c38a109548e162a81c53ad13a14ace41560d56b09af751065db7c6f3d5ae91",
          "md5": "a3758e87dfbed7874028319eea49c679",
          "sha256": "1254595821bf0fb8b1649c697460ac781f1e149a9d37e06a45ef624e6428058b"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a3758e87dfbed7874028319eea49c679",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 505867,
        "upload_time": "2021-01-25T02:53:44",
        "upload_time_iso_8601": "2021-01-25T02:53:44.666072Z",
        "url": "https://files.pythonhosted.org/packages/e6/c3/8a109548e162a81c53ad13a14ace41560d56b09af751065db7c6f3d5ae91/nanomonsv-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e766c8bbf6feaf08a3ede4a0e56aafccb07a145741a9df4f5f3bbfbca9717a45",
          "md5": "14cad10b58a0a32df20b2f95f5bc446d",
          "sha256": "9242ee898c9166b7b7b52e49af892bb4b614ce8be78f838952217b90b0733363"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14cad10b58a0a32df20b2f95f5bc446d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 528264,
        "upload_time": "2021-03-17T09:04:00",
        "upload_time_iso_8601": "2021-03-17T09:04:00.476060Z",
        "url": "https://files.pythonhosted.org/packages/e7/66/c8bbf6feaf08a3ede4a0e56aafccb07a145741a9df4f5f3bbfbca9717a45/nanomonsv-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4da179916ab642904fddc77eee57387c0b5df3c99b6061f2ac7f797ffd212d3",
          "md5": "efadbe4ab6f26ecaf5da577207f8425f",
          "sha256": "54904923017398aeb09266b68d27edce4490bb244998c191f0a43cdba5532bb8"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "efadbe4ab6f26ecaf5da577207f8425f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 513028,
        "upload_time": "2021-03-17T09:04:01",
        "upload_time_iso_8601": "2021-03-17T09:04:01.786405Z",
        "url": "https://files.pythonhosted.org/packages/f4/da/179916ab642904fddc77eee57387c0b5df3c99b6061f2ac7f797ffd212d3/nanomonsv-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc5c9b0a333fa811a928e889de64211ee16e94444be4c5a65486e892e28745a6",
          "md5": "702bce8a741308f7bcbba3271d324a39",
          "sha256": "a27a8be2cecb85df70b2f132954242da370eea197b1f2a4efcaecbdbe775d906"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.4.0b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "702bce8a741308f7bcbba3271d324a39",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 527374,
        "upload_time": "2021-02-23T06:11:43",
        "upload_time_iso_8601": "2021-02-23T06:11:43.446781Z",
        "url": "https://files.pythonhosted.org/packages/fc/5c/9b0a333fa811a928e889de64211ee16e94444be4c5a65486e892e28745a6/nanomonsv-0.4.0b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0cc11a5284b555de40a6b8434cb0e376d512ce99908a2cde3b1291691f34700",
          "md5": "0d7a5fb965b6ffe9c01fed9f265327d2",
          "sha256": "f48c921d9f4a98d5f9c2ff22416830569210bc4687d34797b2e15c73fb44e3aa"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.4.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "0d7a5fb965b6ffe9c01fed9f265327d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 512061,
        "upload_time": "2021-02-23T06:11:45",
        "upload_time_iso_8601": "2021-02-23T06:11:45.742780Z",
        "url": "https://files.pythonhosted.org/packages/b0/cc/11a5284b555de40a6b8434cb0e376d512ce99908a2cde3b1291691f34700/nanomonsv-0.4.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9401b058a48c94ef25fa011a5c0a08b09d210b83b4927820395f546d29d35bf6",
          "md5": "544d235ee158dc93ef981e9c126cb4e0",
          "sha256": "eabeb3034df7d19e5f305260f9aa5fc3b32de56ea54659ee96230124eaf34dfa"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.4.0b2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "544d235ee158dc93ef981e9c126cb4e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 528293,
        "upload_time": "2021-03-09T11:45:59",
        "upload_time_iso_8601": "2021-03-09T11:45:59.465678Z",
        "url": "https://files.pythonhosted.org/packages/94/01/b058a48c94ef25fa011a5c0a08b09d210b83b4927820395f546d29d35bf6/nanomonsv-0.4.0b2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3331bfa9a016b29480dc07accf15d2bfb1ccc846c442680e872f97094de58305",
          "md5": "10b27dc8e9b17753c2b7194596cb43aa",
          "sha256": "ea3b8a89bd9d5bc7a251aed8574c900d558aee7169d4cc4b3cf0b5f4c66e1022"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.4.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "10b27dc8e9b17753c2b7194596cb43aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 513026,
        "upload_time": "2021-03-09T11:46:00",
        "upload_time_iso_8601": "2021-03-09T11:46:00.982491Z",
        "url": "https://files.pythonhosted.org/packages/33/31/bfa9a016b29480dc07accf15d2bfb1ccc846c442680e872f97094de58305/nanomonsv-0.4.0b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0787b26f1ff2e850ca19ea236e6f61bdcd2476b34f3cef50d710945ffa454d66",
          "md5": "6a45887f0a7aee88c596dfa9f998e7cb",
          "sha256": "5caac6370b6a775cd7e8aa7d07d4fd1f404595238f0829a088b9458d8b03cc9d"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a45887f0a7aee88c596dfa9f998e7cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 532729,
        "upload_time": "2022-06-30T01:34:30",
        "upload_time_iso_8601": "2022-06-30T01:34:30.913133Z",
        "url": "https://files.pythonhosted.org/packages/07/87/b26f1ff2e850ca19ea236e6f61bdcd2476b34f3cef50d710945ffa454d66/nanomonsv-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25cce7730b3c34d262d00eabdefd2c5fb4f7fe189eb308fd8986a69c1975d919",
          "md5": "785c385de14c746822485f73e9025924",
          "sha256": "84eb148ddefeecae55079de1ae090f1f1808ca40a2ff6a1819cb34dd6a62a0e7"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "785c385de14c746822485f73e9025924",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 527933,
        "upload_time": "2022-06-30T01:34:32",
        "upload_time_iso_8601": "2022-06-30T01:34:32.817565Z",
        "url": "https://files.pythonhosted.org/packages/25/cc/e7730b3c34d262d00eabdefd2c5fb4f7fe189eb308fd8986a69c1975d919/nanomonsv-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "985763fdd2b1aabeef1963bd3d7c9275d2f07c483ce0ca39a570c86eec02975c",
          "md5": "491ac2eabafd8601d54866363d9908be",
          "sha256": "d61d8e223f16e7205f53b47bcca31fef9e672aafdecf2eb6ad5fde375c315c73"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.5.0b2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "491ac2eabafd8601d54866363d9908be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 532764,
        "upload_time": "2022-06-24T10:10:51",
        "upload_time_iso_8601": "2022-06-24T10:10:51.176220Z",
        "url": "https://files.pythonhosted.org/packages/98/57/63fdd2b1aabeef1963bd3d7c9275d2f07c483ce0ca39a570c86eec02975c/nanomonsv-0.5.0b2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0967cc66666ed48a2034c5b56f9cf7e0a66deac7ad90dfec88deb42d07eb7f85",
          "md5": "6ef9939292cda3b75096e8100f106d49",
          "sha256": "9afb4437bd819606d8845f417433a7a52bd28735390c040a0f8d85cb1f3d5fdf"
        },
        "downloads": -1,
        "filename": "nanomonsv-0.5.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "6ef9939292cda3b75096e8100f106d49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 527951,
        "upload_time": "2022-06-24T10:10:53",
        "upload_time_iso_8601": "2022-06-24T10:10:53.205723Z",
        "url": "https://files.pythonhosted.org/packages/09/67/cc66666ed48a2034c5b56f9cf7e0a66deac7ad90dfec88deb42d07eb7f85/nanomonsv-0.5.0b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0787b26f1ff2e850ca19ea236e6f61bdcd2476b34f3cef50d710945ffa454d66",
        "md5": "6a45887f0a7aee88c596dfa9f998e7cb",
        "sha256": "5caac6370b6a775cd7e8aa7d07d4fd1f404595238f0829a088b9458d8b03cc9d"
      },
      "downloads": -1,
      "filename": "nanomonsv-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6a45887f0a7aee88c596dfa9f998e7cb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 532729,
      "upload_time": "2022-06-30T01:34:30",
      "upload_time_iso_8601": "2022-06-30T01:34:30.913133Z",
      "url": "https://files.pythonhosted.org/packages/07/87/b26f1ff2e850ca19ea236e6f61bdcd2476b34f3cef50d710945ffa454d66/nanomonsv-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25cce7730b3c34d262d00eabdefd2c5fb4f7fe189eb308fd8986a69c1975d919",
        "md5": "785c385de14c746822485f73e9025924",
        "sha256": "84eb148ddefeecae55079de1ae090f1f1808ca40a2ff6a1819cb34dd6a62a0e7"
      },
      "downloads": -1,
      "filename": "nanomonsv-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "785c385de14c746822485f73e9025924",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 527933,
      "upload_time": "2022-06-30T01:34:32",
      "upload_time_iso_8601": "2022-06-30T01:34:32.817565Z",
      "url": "https://files.pythonhosted.org/packages/25/cc/e7730b3c34d262d00eabdefd2c5fb4f7fe189eb308fd8986a69c1975d919/nanomonsv-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}