{
  "info": {
    "author": "Leo Kosta",
    "author_email": "kostaleonard@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# dogwood\n\nLeo's PhD repository.\n\n## Installation and setup\n\n```bash\npip install dogwood\n```\n\n### API tokens\n\nSome functionality requires the use of API keys that should be set up according to site instructions.\n\n* [Kaggle](https://www.kaggle.com/docs/api): Used to download datasets for model pretraining.\n\n## Motivation\n\nBuilding on past knowledge should be the default behavior of every neural network, regardless of architecture or\nlearning task. Engineers and researchers waste significant time and computational resources trying to reproduce the\nresults of already-published models, even when working on identical architectures and tasks. When a developer creates a\nnew model, it should automatically set its parameters to maximize performance based on known models and tasks. If\narchitecture and task are nearly identical, then the performance of the model should be at least as good as the previous\nbest model; if the architecture and/or task differ significantly, then the model should distill knowledge from past runs\nto achieve superior performance.\n\nTraining a model from scratch is still a valid strategy for some applications, but such a regime should be the result of\na developer's explicit decision to deviate from transfer-learning-by-default.\n\n**Vision: Unless a developer specifically decides to train from scratch, every new model should be at least as good as\nthe previous best performing model of similar, but not necessarily identical, architecture.**\n\n## Literature review\n\nFor a complete list of references used, please see the [project literature review](literature/README.md).\n\n## Usage\n\n**Note: This project is still in development, so not all of the functionality shown below may yet be implemented.**\n\n### Setting the weights for an arbitrary model on an arbitrary task\n\nWe would like to set the weights of a new model of arbitrary architecture to maximize its accuracy on an arbitrary\ndataset. We use `dogwood.get_pretrained_model(model, X_train, y_train)` to find the best weights for the given\narchitecture and learning task based on a store of trained models, including popular ones like VGG, BERT, and StyleGAN.\n\n```python\nimport numpy as np\nfrom tensorflow.keras.models import Model\nimport dogwood\n\n\ndef get_my_dataset() -> tuple[tuple[np.ndarray, np.ndarray],\n                              tuple[np.ndarray, np.ndarray]]:\n    # Your code here to return arbitrary (X_train, y_train), (X_test, y_test).\n    pass\n\n\ndef get_my_model() -> Model:\n    # Your code here to return a model with arbitrary architecture.\n    pass\n\n\n(X_train, y_train), (X_test, y_test) = get_my_dataset()\nmodel = get_my_model()\nprint(f'Accuracy on arbitrary task/model before pretraining: '\n      f'{model.evaluate(X_test, y_test)}') # Accuracy: 0.5\nmodel = dogwood.get_pretrained_model(model, X_train, y_train)\nprint(f'Accuracy on arbitrary task/model after pretraining: '\n      f'{model.evaluate(X_test, y_test)}') # Accuracy: 0.9\n```\n\nOutput:\n\n```\nAccuracy on arbitrary task/model before pretraining: 0.5\nAccuracy on arbitrary task/model after pretraining: 0.9\n```\n\n### Adding a trained model to the pretraining pool\n\nBy default, `dogwood` transfers weights from popular open source models, but we can also add models to the pool to make\nlearning on similar models/tasks even faster. Notice that this time we call\n`pool.get_pretrained_model(model, X_train, y_train)` instead of `dogwood.get_pretrained_model(model, X_train, y_train)`.\nThe behavior of both is identical, but explicitly declaring the `PretrainingPool` object allows us to set its directory\nto wherever we would like to keep our trained models.\n\n```python\npool = dogwood.PretrainingPool(dirname='/path/to/my/pretraining/dir')\n(X_train, y_train), (X_test, y_test) = get_my_dataset()\nmodel = get_my_model()\nmodel = pool.get_pretrained_model(model, X_train, y_train)\nprint(f'Accuracy when pretrained on default models: '\n      f'{model.evaluate(X_test, y_test)}') # Accuracy: 0.9\nmodel.fit(X_train, y_train, epochs=10)\nprint(f'Accuracy after fine-tuning: '\n      f'{model.evaluate(X_test, y_test)}') # Accuracy: 0.95\npool.add_model(model, X_train, y_train)\nmodel = get_my_model()\nmodel = pool.get_pretrained_model(model, X_train, y_train)\nprint(f'Accuracy when pretrained on new models: '\n      f'{model.evaluate(X_test, y_test)}') # Accuracy: 0.95\n```\n\nOutput:\n\n```\nAccuracy when pretrained on default models: 0.9\nAccuracy after fine-tuning: 0.95\nAccuracy when pretrained on new models: 0.95\n```\n\n### Intended workflow for model prototyping\n\nWith the above functionality to load the best weights from pretrained models and add our own models to the pool, we can\ndesign a model prototyping workflow that significantly reduces the cost in time and compute of training new model\narchitectures.\n\n```python\n# Create the model pool and dataset.\npool = dogwood.PretrainingPool(dirname='/path/to/my/pretraining/dir')\n(X_train, y_train), (X_test, y_test) = get_my_dataset()\n\n# Prototype the first model.\n# Weights are set based on default open source pretrained models.\nprototype_model_1 = Model(\n    # Arbitrary architecture here.\n)\nprototype_model_1 = pool.get_pretrained_model(\n    prototype_model_1, X_train, y_train)\nprototype_model_1.fit(X_train, y_train, epochs=10)\npool.add_model(prototype_model_1, X_train, y_train)\n\n# Prototype the second model.\n# Weights are set from default models and all previously trained models.\n# Training to high accuracy is much faster.\nprototype_model_2 = Model(\n    # Arbitrary architecture here.\n)\nprototype_model_2 = pool.get_pretrained_model(\n    prototype_model_2, X_train, y_train)\nprototype_model_2.fit(X_train, y_train, epochs=10)\npool.add_model(prototype_model_2, X_train, y_train)\n\n# Prototype the third model.\n# ...\n```\n\n### Limitations\n\n`dogwood.get_pretrained_model(model, X_train, y_train)` can only make `model` as performant as its architecture allows.\nIf `model` has an architecture that is inherently unsuited to its task, `dogwood` cannot make it achieve exceptional\nresults.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kostaleonard/dogwood",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dogwood",
    "package_url": "https://pypi.org/project/dogwood/",
    "platform": null,
    "project_url": "https://pypi.org/project/dogwood/",
    "project_urls": {
      "Bug Tracker": "https://github.com/kostaleonard/dogwood/issues",
      "Homepage": "https://github.com/kostaleonard/dogwood"
    },
    "release_url": "https://pypi.org/project/dogwood/0.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Leo's PhD repository.",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13531944,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a31e40ffd7cca5ec62cd025d8f0208d17b486658dfdc68d91c6d96b68264a229",
          "md5": "2a1076b091b8e71ec0c99c7c92182ffe",
          "sha256": "271e3500b87e981c2a5da178ec7161d44ab3c96508a4e6557f1882e73719d8f6"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a1076b091b8e71ec0c99c7c92182ffe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2634,
        "upload_time": "2022-02-19T00:42:28",
        "upload_time_iso_8601": "2022-02-19T00:42:28.667622Z",
        "url": "https://files.pythonhosted.org/packages/a3/1e/40ffd7cca5ec62cd025d8f0208d17b486658dfdc68d91c6d96b68264a229/dogwood-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c9fe3ebbe645f06cacb0f01a190d57b5f968b0ad725c175f87ff22e7a30d235",
          "md5": "175d7b67e93883ffd5ddadd3c40be656",
          "sha256": "5bf7b3e939a24ecb88f6604bb7157dc8a1252ae391dccae73e854c4e38b3709d"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "175d7b67e93883ffd5ddadd3c40be656",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2064,
        "upload_time": "2022-02-19T00:42:30",
        "upload_time_iso_8601": "2022-02-19T00:42:30.685840Z",
        "url": "https://files.pythonhosted.org/packages/4c/9f/e3ebbe645f06cacb0f01a190d57b5f968b0ad725c175f87ff22e7a30d235/dogwood-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6153494b7236bb7dfd7b522a7aa47d8bea61f446475454814826aa9422ae7f6",
          "md5": "4699fc75e71e8869bbfb4fe1466dbc14",
          "sha256": "176875686ab6e21286b37e9a490f916c9501b78a8995421f088ac18b83c465a9"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4699fc75e71e8869bbfb4fe1466dbc14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2633,
        "upload_time": "2022-02-19T00:45:15",
        "upload_time_iso_8601": "2022-02-19T00:45:15.855863Z",
        "url": "https://files.pythonhosted.org/packages/e6/15/3494b7236bb7dfd7b522a7aa47d8bea61f446475454814826aa9422ae7f6/dogwood-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0013694088eb8c0b8d94b791f75e1feba31bc066e87fd68ad0edcf59775c6f9c",
          "md5": "42c5ec8dd840ef224b0cd19ead16df95",
          "sha256": "762c963079f96d0775f8f3793aea0c2d1f38e9900070de1ae84d10af84a72a36"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "42c5ec8dd840ef224b0cd19ead16df95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2059,
        "upload_time": "2022-02-19T00:45:17",
        "upload_time_iso_8601": "2022-02-19T00:45:17.906622Z",
        "url": "https://files.pythonhosted.org/packages/00/13/694088eb8c0b8d94b791f75e1feba31bc066e87fd68ad0edcf59775c6f9c/dogwood-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf67ef11f5faaabfc6ad3c1a555a0dfd58b4205f8806e7f59cd9d7e6e10c0a6a",
          "md5": "b7d5cff11462ceaba2076a41027ac2b9",
          "sha256": "26e8375e264f3a49e34c2495857ffd6dae41eb4ee192740a37e621f53f8b018d"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7d5cff11462ceaba2076a41027ac2b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2633,
        "upload_time": "2022-02-19T11:53:06",
        "upload_time_iso_8601": "2022-02-19T11:53:06.721369Z",
        "url": "https://files.pythonhosted.org/packages/cf/67/ef11f5faaabfc6ad3c1a555a0dfd58b4205f8806e7f59cd9d7e6e10c0a6a/dogwood-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5110b887dbda5903409f6091c9c30f058343ead9601728827c78e33e687a00c",
          "md5": "e8c06fb4c2a08aedfbd669a1d386beb7",
          "sha256": "065f70c6f3d0b18d34d8ddec594f80701750f3f85af8ec75eb40572be254b13c"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e8c06fb4c2a08aedfbd669a1d386beb7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2052,
        "upload_time": "2022-02-19T11:53:08",
        "upload_time_iso_8601": "2022-02-19T11:53:08.052841Z",
        "url": "https://files.pythonhosted.org/packages/d5/11/0b887dbda5903409f6091c9c30f058343ead9601728827c78e33e687a00c/dogwood-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e01c439a85eb6a09177d698d767efcd52e90da2eca876217bd9fb17e9add771",
          "md5": "c849d2e6ff9f754d84579040002d026c",
          "sha256": "826c4809bed60f3d6711389e982fe51ed27d9dc5d0946e345997b8d893545452"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c849d2e6ff9f754d84579040002d026c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6356,
        "upload_time": "2022-03-05T15:46:16",
        "upload_time_iso_8601": "2022-03-05T15:46:16.921549Z",
        "url": "https://files.pythonhosted.org/packages/2e/01/c439a85eb6a09177d698d767efcd52e90da2eca876217bd9fb17e9add771/dogwood-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5894f99fd7479d72baf413f5820c308aa5fbaabfb2c1ee6f730dbd432800b263",
          "md5": "7e33679a0b960ce6a10d806d192eeafb",
          "sha256": "619c7c7ca4eb0d79742eec276ca81765799a63d2b5ca477d4d5c8c812225fcee"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7e33679a0b960ce6a10d806d192eeafb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5745,
        "upload_time": "2022-03-05T15:46:17",
        "upload_time_iso_8601": "2022-03-05T15:46:17.914056Z",
        "url": "https://files.pythonhosted.org/packages/58/94/f99fd7479d72baf413f5820c308aa5fbaabfb2c1ee6f730dbd432800b263/dogwood-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4d3dfbb862bb05061a1bcebd705336b5af6cd6b7aebb8c463c65c625f72339c",
          "md5": "f8c79afb447507fa443bfbb52230471e",
          "sha256": "d1e1ccdc2b597e3dc05e9f248bc97e0d378b38fa2f9d85f538ce751bc7820e6e"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8c79afb447507fa443bfbb52230471e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14212,
        "upload_time": "2022-03-30T16:30:28",
        "upload_time_iso_8601": "2022-03-30T16:30:28.983028Z",
        "url": "https://files.pythonhosted.org/packages/d4/d3/dfbb862bb05061a1bcebd705336b5af6cd6b7aebb8c463c65c625f72339c/dogwood-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd2883ca0604097ab8d47210c26b19ebe0d80a0ffd35c43bb3acc3da4042b8ed",
          "md5": "45914e2f09d71cf731e3d082bf211379",
          "sha256": "b0715f4a271ec5c0d9fccbb3014ef9d60e3f4ab530ce04010c7868d3051d7a5e"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "45914e2f09d71cf731e3d082bf211379",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14061,
        "upload_time": "2022-03-30T16:30:30",
        "upload_time_iso_8601": "2022-03-30T16:30:30.949905Z",
        "url": "https://files.pythonhosted.org/packages/fd/28/83ca0604097ab8d47210c26b19ebe0d80a0ffd35c43bb3acc3da4042b8ed/dogwood-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ccb223559ad241efcaa436d2105910a1ca9c73cba39724d270819e7410b165e",
          "md5": "2abeea36e2b969ce2f798dd71ec32501",
          "sha256": "c43f066c707b24b6f8f7d91f917bbdeb8fe73e7737b39d8117da595a93488f76"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2abeea36e2b969ce2f798dd71ec32501",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15606,
        "upload_time": "2022-04-10T15:51:35",
        "upload_time_iso_8601": "2022-04-10T15:51:35.973126Z",
        "url": "https://files.pythonhosted.org/packages/6c/cb/223559ad241efcaa436d2105910a1ca9c73cba39724d270819e7410b165e/dogwood-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53e3ef0b6a3c3a97924b913a9085467ce09e6b77bb0dfdeb6414c7ddf78f4eb6",
          "md5": "eab3f2de0e413cf37e4d863a57005bab",
          "sha256": "163783535254318215f8d3663562ca7d7be7e3f916068b91fd8c4c9d7c244310"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "eab3f2de0e413cf37e4d863a57005bab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15124,
        "upload_time": "2022-04-10T15:51:38",
        "upload_time_iso_8601": "2022-04-10T15:51:38.114443Z",
        "url": "https://files.pythonhosted.org/packages/53/e3/ef0b6a3c3a97924b913a9085467ce09e6b77bb0dfdeb6414c7ddf78f4eb6/dogwood-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11f9afaedbcf7eaf048555f1c81653a257e276232cc330457866e03e61a6bde2",
          "md5": "553d2be8b0f3be48eedce1822e94d564",
          "sha256": "c746c6565185c3dbcb924fc28289fbad29df20a7856a3d2d6fa25b26b5ce8b53"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "553d2be8b0f3be48eedce1822e94d564",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17861,
        "upload_time": "2022-04-16T11:32:03",
        "upload_time_iso_8601": "2022-04-16T11:32:03.899447Z",
        "url": "https://files.pythonhosted.org/packages/11/f9/afaedbcf7eaf048555f1c81653a257e276232cc330457866e03e61a6bde2/dogwood-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb6679f5d2da39dc33f7068b791fca2f2b46e16960f2deacc87092196a4c2492",
          "md5": "38628d54d8fa04105654d2cf9794f994",
          "sha256": "69e40d15e53931c848816188a4d370f353ab042b182e3abf4249c8e431d4c973"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "38628d54d8fa04105654d2cf9794f994",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17304,
        "upload_time": "2022-04-16T11:32:05",
        "upload_time_iso_8601": "2022-04-16T11:32:05.251217Z",
        "url": "https://files.pythonhosted.org/packages/cb/66/79f5d2da39dc33f7068b791fca2f2b46e16960f2deacc87092196a4c2492/dogwood-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47055ddd3d03c9b414f296503e412182393aaebdacdffc053211633bdfaa4199",
          "md5": "b5edd4e048003d85adba3aa98ae21a0e",
          "sha256": "01071b9bc042f711ab747adbfb705e6bfd140105bd1c63107139b582cfd767fe"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5edd4e048003d85adba3aa98ae21a0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17947,
        "upload_time": "2022-04-16T13:04:41",
        "upload_time_iso_8601": "2022-04-16T13:04:41.265979Z",
        "url": "https://files.pythonhosted.org/packages/47/05/5ddd3d03c9b414f296503e412182393aaebdacdffc053211633bdfaa4199/dogwood-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a4e9372e6fc70d06a741fd88af34118ec6117015d4e03e15a748b20749db769",
          "md5": "2ebee133338ca4d137d76fb0047ec3af",
          "sha256": "8082a822535a988824c3a9276af0b97d5953467cbd814a2dd0849268e4c1e780"
        },
        "downloads": -1,
        "filename": "dogwood-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "2ebee133338ca4d137d76fb0047ec3af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17450,
        "upload_time": "2022-04-16T13:04:42",
        "upload_time_iso_8601": "2022-04-16T13:04:42.836820Z",
        "url": "https://files.pythonhosted.org/packages/9a/4e/9372e6fc70d06a741fd88af34118ec6117015d4e03e15a748b20749db769/dogwood-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47055ddd3d03c9b414f296503e412182393aaebdacdffc053211633bdfaa4199",
        "md5": "b5edd4e048003d85adba3aa98ae21a0e",
        "sha256": "01071b9bc042f711ab747adbfb705e6bfd140105bd1c63107139b582cfd767fe"
      },
      "downloads": -1,
      "filename": "dogwood-0.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b5edd4e048003d85adba3aa98ae21a0e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17947,
      "upload_time": "2022-04-16T13:04:41",
      "upload_time_iso_8601": "2022-04-16T13:04:41.265979Z",
      "url": "https://files.pythonhosted.org/packages/47/05/5ddd3d03c9b414f296503e412182393aaebdacdffc053211633bdfaa4199/dogwood-0.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a4e9372e6fc70d06a741fd88af34118ec6117015d4e03e15a748b20749db769",
        "md5": "2ebee133338ca4d137d76fb0047ec3af",
        "sha256": "8082a822535a988824c3a9276af0b97d5953467cbd814a2dd0849268e4c1e780"
      },
      "downloads": -1,
      "filename": "dogwood-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "2ebee133338ca4d137d76fb0047ec3af",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17450,
      "upload_time": "2022-04-16T13:04:42",
      "upload_time_iso_8601": "2022-04-16T13:04:42.836820Z",
      "url": "https://files.pythonhosted.org/packages/9a/4e/9372e6fc70d06a741fd88af34118ec6117015d4e03e15a748b20749db769/dogwood-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}