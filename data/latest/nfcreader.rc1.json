{
  "info": {
    "author": "Ian Edwards Agoritsa Spirakis",
    "author_email": "ian.edwardsm@gmail.com, agoritsa.spirakis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "=========\nnfcreader\n=========\n\n\n.. image:: https://img.shields.io/pypi/v/nfcreader.svg\n        :target: https://pypi.python.org/pypi/nfcreader\n\n.. image:: https://img.shields.io/travis/EDWIAN004@myuct.ac.za/nfcreader.svg\n        :target: https://travis-ci.com/EDWIAN004@myuct.ac.za/nfcreader\n\n.. image:: https://readthedocs.org/projects/nfcreader/badge/?version=latest\n        :target: https://nfcreader.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\n\n\nPython API for CR95HF NFC reader to run on the Pi Zero. Used as a python wrapper for the existing C API provided for the CR95HF module by STMicroelectronics. However, it was found to be lacking for Linux users, as well as difficult to compile and run compared to a Python API. \n\n\n* Free software: MIT license\n* Documentation: https://nfcreader.readthedocs.io.\n\nAbstract\n--------\nUse case scenario for demonstrator application: Student access to venues.\nThe aim was to provide better support for the CR95HF's use for the Raspberry Pi in Python3, via an API.\nA demonstrator application was created for showing the uses of the API for an access control use case: https://github.com/IanEdwards99/CR95HF_Demo_App\n\nFeatures\n--------\n- USB Connect\n- Protocol Select\n- Send Receive\n- ResetSPI\n- Field Off\n- Send IRQ Pulse\n- Send NSS Pulse\n- STCmd Command\n- Initiate\n- ResetToReady\n- MCUrev\n- Echo\n- Idn (Get ID number of CR95HF module)\n- GetPinInterfaceState\n- Reading from NFC tag\n- Writing to NFC tag\n- IDLE for tag\n- Scan and Write\n- Tag detection and hunting\n- Clearing NFC tag\n- Read entire contents of all registers from tag\n- Extract payload\n- Prepare for writing and reading with dec/hex/string conversion functions.\n\nInstallation\n------------\npip install the file from PyUp, or clone this git repo and \"make install\".\nIt is important to install 3 dependancies to use the CR95HF with its C library and development board:\n\n- \"sudo apt-get install build-essential\"\n- \"sudo apt-get install g++\"\n- \"sudo apt-get install libusb-1.0-0-dev\"\n- Navigate to ./nfcreader/nfcreader/src and run \"make\" to compile a libCR95HF.so file for your current architecture.\n\nLastly, add libCR95HF.so, found in the src folder, to your environment variable. If your program still fails, copy it to your /lib and /usr/lib folders in your root directory.\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n=======\nHistory\n=======\n\n0.1.0 (2020-09-15)\n------------------\n\n* First release on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/EDWIAN004@myuct.ac.za/nfcreader",
    "keywords": "nfcreader",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nfcreader",
    "package_url": "https://pypi.org/project/nfcreader/",
    "platform": "",
    "project_url": "https://pypi.org/project/nfcreader/",
    "project_urls": {
      "Homepage": "https://github.com/EDWIAN004@myuct.ac.za/nfcreader"
    },
    "release_url": "https://pypi.org/project/nfcreader/0.1.0/",
    "requires_dist": [
      "Click (>=7.0)"
    ],
    "requires_python": ">=3.5",
    "summary": "Python API for NFC reader to run on the Pi Zero.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8608574,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3167f597dc90605e5c86b0815ee7bbd16f9e6d789f72a4a8e9b65c01052c44f5",
          "md5": "0a3a9637b019c61c697ff3e0932357e9",
          "sha256": "15a2754131980c6dc0dcfe7d9f955197eebe2bc5afd97c0587ba4b9763598e6f"
        },
        "downloads": -1,
        "filename": "nfcreader-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a3a9637b019c61c697ff3e0932357e9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 7124,
        "upload_time": "2020-11-08T17:07:01",
        "upload_time_iso_8601": "2020-11-08T17:07:01.274781Z",
        "url": "https://files.pythonhosted.org/packages/31/67/f597dc90605e5c86b0815ee7bbd16f9e6d789f72a4a8e9b65c01052c44f5/nfcreader-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d38ea2233834460d22820be14d1107e808538324ee3b340b733619fe34160e17",
          "md5": "c636876ac7b5d239d37be8d8897e5a63",
          "sha256": "354ec36b356ebb05758760a24cd126fcb6a6941fd0309002c35a30d1dd6a3103"
        },
        "downloads": -1,
        "filename": "nfcreader-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c636876ac7b5d239d37be8d8897e5a63",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 13423,
        "upload_time": "2020-11-08T17:07:12",
        "upload_time_iso_8601": "2020-11-08T17:07:12.346779Z",
        "url": "https://files.pythonhosted.org/packages/d3/8e/a2233834460d22820be14d1107e808538324ee3b340b733619fe34160e17/nfcreader-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3167f597dc90605e5c86b0815ee7bbd16f9e6d789f72a4a8e9b65c01052c44f5",
        "md5": "0a3a9637b019c61c697ff3e0932357e9",
        "sha256": "15a2754131980c6dc0dcfe7d9f955197eebe2bc5afd97c0587ba4b9763598e6f"
      },
      "downloads": -1,
      "filename": "nfcreader-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a3a9637b019c61c697ff3e0932357e9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.5",
      "size": 7124,
      "upload_time": "2020-11-08T17:07:01",
      "upload_time_iso_8601": "2020-11-08T17:07:01.274781Z",
      "url": "https://files.pythonhosted.org/packages/31/67/f597dc90605e5c86b0815ee7bbd16f9e6d789f72a4a8e9b65c01052c44f5/nfcreader-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d38ea2233834460d22820be14d1107e808538324ee3b340b733619fe34160e17",
        "md5": "c636876ac7b5d239d37be8d8897e5a63",
        "sha256": "354ec36b356ebb05758760a24cd126fcb6a6941fd0309002c35a30d1dd6a3103"
      },
      "downloads": -1,
      "filename": "nfcreader-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c636876ac7b5d239d37be8d8897e5a63",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 13423,
      "upload_time": "2020-11-08T17:07:12",
      "upload_time_iso_8601": "2020-11-08T17:07:12.346779Z",
      "url": "https://files.pythonhosted.org/packages/d3/8e/a2233834460d22820be14d1107e808538324ee3b340b733619fe34160e17/nfcreader-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}