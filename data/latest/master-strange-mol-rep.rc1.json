{
  "info": {
    "author": "",
    "author_email": "Stiv Llenga <stiv.llenga@h-its.org>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# master_strange_mol_rep\n\nStiv Llenga (a.k.a. Master Strange) created this simple package to assist master students and other researchers who are working on generating molecular representations and manipulating arrays in various forms. For more information, please contact the author via email (stiv.llenga@h-its.org)\n\nThe following information describes the purpose and how to use the functions included with msc_strange_mol_rep:\n\n## a) Generating SOAP representation :\n\n   Please read this paper if you need to refresh your memory on what SOAP representation is : (https://doi.org/10.48550/arXiv.1209.3140).\n   \n   Command:\n   \n####   ARRAY = create_soap(path,rcut_i=8,processors=1)\n   \n   INPUT:\n   \n   * --path       -> (Str) The full path to your xyz files;\n   \n   * --rcut_i     -> (Float) Cutoff radius in Angstrom (Ã…);\n   \n   * --processors -> (Int) The total number of processors.\n   \n   OUTPUT:\n   \n   * ARRAY -> The SOAP ndarray. The length of the longest molecular SOAP array is used to pad all of the molecular SOAP. \n  \n   Comments:\n   \n   This command generates SOAP representations for all molecules in the path-specified directory.\n   The xyz format is required for molecular structures. \n\n## b) Generating Coulomb Matrix representation :\n\n   Please read this paper if you need to refresh your memory on what CM representation is : (https://doi:10.1103/PhysRevLett.108.058301).\n\n   Command:\n   \n####   ARRAY = create_cm(path, processors=1)\n   \n   INPUT:\n   \n   * --path       -> (Str) The full path to your xyz files;\n   \n   * --processors -> (Int) The total number of processors.\n   \n   OUTPUT:\n   \n   * ARRAY -> The CM ndarray. For all molecules, the coulomb matrix is flattened and the length of the longest molecular CM array is used to pad all of the molecular CM.\n   \n   Comments:\n   \n   This command generates CM representations for all molecules in the path-specified directory.\n   The xyz format is required for molecular structures.\n\n\n## c) Generating the Spectrum of London and Axillrod-Teller-Muto potential (SLATM) representation :\n\n   Please read this paper if you need to refresh your memory on what SLATM representation is : (https://arxiv.org/pdf/1807.04259.pdf).\n\n   Command:\n   \n####   ARRAY = create_slatm(path)\n   \n   INPUT:\n   \n   * --path -> (Str) The full path to your xyz files\n   \n   OUTPUT:\n   \n   * ARRAY -> The SLATM ndarray. The length of the longest molecular SLATM array is used to pad all of the molecular arrays.\n   \n   Comments:\n   \n   This command generates SLATM representations for all molecules in the path-specified directory.\n   The xyz format is required for molecular structures.\n   \n## d) Generating the MIBOC representation (Only for CCC) :\n\n   Command:\n   \n####   ARRAY = create_MIBOC(path,basis_set='def2-TZVP', charge=0, spin=0)\n   \n   INPUT:\n   \n   * --path      -> (Str) The full path to your xyz files;\n   \n   * --basis_set -> (Str) The basis set you want to use;\n   \n   * --charge    -> (Int) The system's charge;\n   \n   * --spin      -> (Int) The system's spin (Nr_spin_alpha - Nr_spin_beta).\n   \n   OUTPUT:\n   \n   * ARRAY -> The MIBOC ndarray. The length of the longest molecular MIBOC array is used to pad all of the molecular arrays.\n   \n   Comments:\n   \n   This command generates MIBOC representations for all molecules in the path-specified directory.\n   The xyz format is required for molecular structures. Please use the number of electrons with spin up minus electrons with spin down when calculating the spin (not 2S+1).\n\n## e) Generating the molecular QR representation (Only for CCC) :\n\n   Command:\n   \n####   create_qr(array,path)\n   \n   INPUT:\n   \n   * --array -> (Str) An array of molecular representations;\n   \n   * --path  -> (Str) The location on your computer where the QR images will be saved. \n   \n   OUTPUT:\n   \n   All QR images are saved locally. \n   \n   Comments:\n   \n   This command generates QR representations for all molecules arrays (any of them) and saves the results in the path specified. \n   \n## f) Dimension reduction by Principal Component Analysis:\n\n   Command:\n   \n####   pca = dim_red(data,nr_dim=2)\n   \n   INPUT:\n   \n   * --data   -> (Str) The ndarray array whose dimensions should be reduced (for example, N*m array); \n   * --nr_dim -> (Int) The total number of final dimensions (2 or 3).\n   \n   OUTPUT:\n   \n   * --pca -> The new low-dimensional arrays (for example, N*2 or N*3 array)\n   \n   Comments:\n   \n   This command can be used to reduce the dimensionality of an array.\n\n## g) Making arrays of same size:\n\n   i) Command:\n  \n#### new_array = zero_pad_inner(array)\n      \nINPUT:\n      \n   * --array -> (ndarray or list) The ndarray whose components are not all of the same size.\n      \nOUTPUT:\n      \n   * --new_array -> The ndarray whose components are all of the same size.\n      \nComments:\n   \n   Adjusts the sizes of all of an ndarray's elements to fix the dimensions of the array. \n   \n  ii) Command:\n   \n#### new_array = zero_pad_two_ndarrays(big_array,small_array)\n   \nINPUT:\n      \n   * --big_array   -> The N*m-dimensional ndarray;\n   \n   * --small_array -> The ndarray with dimensions N*b, where b < m.\n   \nOUTPUT:\n      \n   * --new_array -> The modified small array with N*m dimensions. \n   \nComments:\n   \n   When two arrays must be the same size for various reasons, this command changes the smaller array's size to match that of the larger array. \n\n## h) Cosine similarity analysis:\n\n   Command:\n   \n#### similarity = cosine_similarity(array_one,array_two)\n   \n   INPUT:\n   \n   * --array_one -> (array) The first ndarray;\n   * --array_two -> (array) The second ndarray.\n   \n   OUTPUT:\n   \n   * --similarity -> The similarity of array_one and array_two.\n   \n   Comments:\n   \n   Returns an ndarray containing the similarities of each array. \n\n\n## i) Set up the necessary dependencies:\n\n   Command:\n   \n#### install_dependencies()\n\n\n## j) Add in the necessary libraries:\n\n   Command:\n   \n#### define_modules()\n\n\nHOW TO USE IT:\n\n#### a) Install the package (pip install msc-strange-mol-rep==0.0.1)\n\n#### b) Import mol_rep (from msc_strange_mol_rep import mol_rep)\n\n#### c) Use the functions inside mol_rep (mol_rep.#)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) [2022] [Stiv Llenga]  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "master-strange-mol-rep",
    "package_url": "https://pypi.org/project/master-strange-mol-rep/",
    "platform": null,
    "project_url": "https://pypi.org/project/master-strange-mol-rep/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/master-strange-mol-rep/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Stiv Llenga (Master Strange) created this simple package to assist master students and other researchers who are working on generating molecular representations and manipulating arrays in various forms.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15042335,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66836b7ab7ed838afe1c077a3785b1455ccf14bd66b20a7205db077f8278c44a",
          "md5": "5726d62c2af73748dd2d682b886e6ddd",
          "sha256": "642e5ce1946c6b4131490c1f10f7343d140dca9df59ae7c4b713f48d592f9aa9"
        },
        "downloads": -1,
        "filename": "master_strange_mol_rep-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5726d62c2af73748dd2d682b886e6ddd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6804,
        "upload_time": "2022-09-09T09:55:35",
        "upload_time_iso_8601": "2022-09-09T09:55:35.546540Z",
        "url": "https://files.pythonhosted.org/packages/66/83/6b7ab7ed838afe1c077a3785b1455ccf14bd66b20a7205db077f8278c44a/master_strange_mol_rep-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe83b63f3accf5b51899e3bae1e542147681e5f4c58f5a29efd4075474964f61",
          "md5": "4f9f07de626a790c404a02a10b595fe1",
          "sha256": "c8c6fe79c2ac83330e61250a67e69346d53ae17bfd4b2968281c272ae58f0d29"
        },
        "downloads": -1,
        "filename": "master_strange_mol_rep-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4f9f07de626a790c404a02a10b595fe1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5115,
        "upload_time": "2022-09-09T09:55:38",
        "upload_time_iso_8601": "2022-09-09T09:55:38.114046Z",
        "url": "https://files.pythonhosted.org/packages/fe/83/b63f3accf5b51899e3bae1e542147681e5f4c58f5a29efd4075474964f61/master_strange_mol_rep-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66836b7ab7ed838afe1c077a3785b1455ccf14bd66b20a7205db077f8278c44a",
        "md5": "5726d62c2af73748dd2d682b886e6ddd",
        "sha256": "642e5ce1946c6b4131490c1f10f7343d140dca9df59ae7c4b713f48d592f9aa9"
      },
      "downloads": -1,
      "filename": "master_strange_mol_rep-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5726d62c2af73748dd2d682b886e6ddd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6804,
      "upload_time": "2022-09-09T09:55:35",
      "upload_time_iso_8601": "2022-09-09T09:55:35.546540Z",
      "url": "https://files.pythonhosted.org/packages/66/83/6b7ab7ed838afe1c077a3785b1455ccf14bd66b20a7205db077f8278c44a/master_strange_mol_rep-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe83b63f3accf5b51899e3bae1e542147681e5f4c58f5a29efd4075474964f61",
        "md5": "4f9f07de626a790c404a02a10b595fe1",
        "sha256": "c8c6fe79c2ac83330e61250a67e69346d53ae17bfd4b2968281c272ae58f0d29"
      },
      "downloads": -1,
      "filename": "master_strange_mol_rep-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4f9f07de626a790c404a02a10b595fe1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 5115,
      "upload_time": "2022-09-09T09:55:38",
      "upload_time_iso_8601": "2022-09-09T09:55:38.114046Z",
      "url": "https://files.pythonhosted.org/packages/fe/83/b63f3accf5b51899e3bae1e542147681e5f4c58f5a29efd4075474964f61/master_strange_mol_rep-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}