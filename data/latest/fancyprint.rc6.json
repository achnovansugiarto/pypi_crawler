{
  "info": {
    "author": "",
    "author_email": "MU <iammu@duck.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1 align=\"center\">Fancy Print</h1>\n<h3 align=\"center\">An aesthetic replacement to print()</h3>\n\n<hr>\n\n<h6 align=\"center\"><b>Development Status:</b> Early Development/Usable</h6>\n<p align=\"center\">\n  <a href=\"https://pypi.org/project/fancyprint/\">\n\t<img src=\"https://img.shields.io/pypi/v/fancyprint?color=blue&label=PyPI&logo=python&logoColor=white&style=for-the-badge\" alt=\"PyPI\">\n  </a>\n</p>\n\n# About\n\nFancyPrint is a python package, making it easier for developers to get beautiful CLI with responsiveness in regards to terminal size.\n\n# Usage\n\n## Installing FancyPrint\n\nTo install fancyprint use the following command:\n```bash\npip install fancyprint\n```\nThis will install all dependencies needed as well.\n\n## Getting Started\n\nTo start using Fancy Print, first import it.\n```python\nimport fancyprint\n```\nThis will import all the necessary functions required.\n\n### Basics\n\n#### Printing\n\nThe ``pretty_print()`` function is for printing text to the terminal. Here is an example:\n```python\npretty_print(\"This is some text\", align=Align.LEFT)\n```\n![img_2.png](Images/PrinterPreview.png)\nIt is using the default preset, which can be changed by using presets or changing argument values.\nThere are two ways one customize and use it, and they can be\nused interchangeably:\n- Using presets (recommended)\n- Using keyword arguments\n\n##### Using Presets\nPresets allow you to customize the printer and the separator, and they can be *local* presets or *global* presets.\nPresets are local when they are created for one part only(i.e Printer) and are global when they can be used anywhere\n(both in the Separator and the Printer). \n\n###### Using Local Presets\nThere are two types of local presets you can use:\n- PrinterPreset\n- SeparatorPreset\n\n**PrinterPreset**\n<br>\n<br>\nThe ``PrinterPreset`` is used to customize the ``pretty_print()`` function. To use it, you need to import it first.\nHere is an example of declaring a ``PrinterPreset``:\n```python\nfrom fancyprint.ftypes import PrinterPreset\nfrom fancyprint.ftypes import Color\n\nmy_custom_printer_preset = PrinterPreset(\n    delimiter_left=\"<\",\n    delimiter_left_color=Color.RED,\n    \n    delimiter_right=\">\",\n    delimiter_right_color=Color.RED,\n    \n    delimiter_space_amount=10,\n    delimiter_space_symbol=\" \",\n    \n    hyphenation=False\n)\n```\nHere's the preset in action:\n```python\n[...]\npretty_print(\"Hi this is some text\", preset=my_custom_printer_preset)\n```\nThis will print the following:\n![img.png](Images/PrinterPreset01.png)\nThat looks awful right now. That is because we have a custom printer preset, but the separator is using\nthe default preset. Let's make it more good-looking by using a custom separator preset!\n\n**SeparatorPreset**\n<br>\n<br>\nThe ``SeperatorPreset`` is used to customize the separator, whether it is used alone or with the printer. To use it, it\nneeds to be imported first. Here is an example of declaring one:\n```python\nfrom fancyprint.ftypes import SeparatorPreset, Color\n\nmy_custom_separator_preset = SeparatorPreset(\n    delimiter_left=\"<\",\n    delimiter_left_color=Color.RED,\n    \n    delimiter_right=\">\",\n    delimiter_right_color=Color.RED,\n    \n    delimiter_space_symbol=\" \",\n    delimiter_space_amount=10,\n    \n    separator_symbol=\"-\",\n    separator_color=Color.BLUE,\n)\n```\nNow let's use this preset, in the previous example:\n```python\n[...]\npretty_print(\"Hi, this is some text!\", preset=my_custom_printer_preset, separator_preset=my_custom_separator_preset)\n```\nThe above will print the following:\n![img.png](Images/PrinterCustomPreset.png)\nIt's starting to look good now, but since we are going to use one preset everywhere, *in this example*,\nwe should create a global preset.\n\n###### Using the Global Preset\nThe ``Preset`` class is used to create a global preset, and can be given to both the separator and the printer, which\nmakes it useful if the whole program is to follow a simple theme. To use it you need to import the ``Preset``, along\nwith the local presets, which make it easy to declare a global Preset. Here's an example of declaring a global preset,\nusing our previously declared local presets:\n```python\n[...]\nfrom fancyprint.ftypes import Preset\n\nglobal_preset = Preset(\n    printer_preset=my_custom_printer_preset,\n    separator_preset=my_custom_separator_preset,\n)\n```\nThe previous example, but with a global preset would like:\n```python\n[...]\npretty_print(\"Hi, this is some text!\", preset=global_preset, separator_preset=global_preset)\n```\nThis will print:\n![img_1.png](Images/PrinterCustomPreset02.png)\n\n#### Using Keyword Arguments\nIf you want to have different customizations, you could use presets, but if you only want to change some aspects of the\nprinter, you might want to use the function's keyword arguments instead. Here's a list of available customizations you \ncan do with arguments:\n- align | Align(Enum): Changes the alignment of the text\n- delimiter_left | str: Symbol for the left delimiter\n- delimiter_left_color | Color: Color for the left delimiter\n- enable_left_delimiter | bool: Whether to print the left delimiter or not\n- delimiter_right | str: Symbol for the right delimiter\n- delimiter_right_color | Color: Color to be used for the right delimiter\n- enable_right_delimiter | bool: Whether to print the right delimiter\n- delimiter_space_amount | int: Amount of space to print after/before the delimiters\n- delimiter_space_symbol | str: Symbol to be used for the delimiter space (\" \" is the default and is useful for most cases)\n- separator_left_delimiter | str: Symbol for the left delimiter of the separators\n- separator_left_delimiter_color | Color: Color for the left delimiters of the separators\n- enable_left_separator_delimiter | bool: Whether to print the left delimiter in the separators\n- separator_right_delimiter | str: Symbol for the right delimiter of the separators\n- separator_right_delimiter_color | Color: Color for the right separator delimiters\n- enable_right_separator_delimiter | bool: Whether to print the right delimiter in the separators\n- separator_symbol | str: Symbol for the separator\n- separator_color | Color: Color for the separator symbol\n- enable_separator_symbol | bool: Whether to print the separator symbol, if false then \" \" will be printed\n- separator_delimiter_space_amount | int: Amount of delimiter space in the separator\n- separator_delimiter_space_symbol | str: Symbol for the delimiter space in the separator\n- enable_back_separator | bool: Whether to print the back separator\n- enable_front_separator | bool: Whether to print the front separator\n- test_mode | bool: If you want to mess with the alignment calculations\n- testing_terminal_width | int: Artificial terminal width to use, for testing or for making something beautiful ;)\n\n##### Alignment\nThere are three alignment options available at the moment. They are left, right and center. To use alignments, you need \nto import the Align enum from the ftypes subpackage. Here are examples of using the different alignments:\n```python\n[...]\nfrom fancyprint.ftypes import Align\n\npretty_print(\"Hi, this is some text!\", align=Align.LEFT)\npretty_print(\"Hi, this is some text!\", align=Align.CENTER)\npretty_print(\"Hi, this is some text!\", align=Align.RIGHT)\n```\nThe above gives the following results:\n![img_3.png](Images/PrinterAlignmentPreview.png)\nDoesn't look too nice, let's remove some separators:\n```python\n[...]\n\npretty_print(\"Hi, this is some text!\", align=Align.LEFT)\npretty_print(\"Hi, this is some text!\", align=Align.CENTER, enable_back_separator=False)\npretty_print(\"Hi, this is some text!\", align=Align.RIGHT, enable_back_separator=False)\n```\n![img_5.png](Images/PrinterAlignmentPreview02.png)\nMuch better. You might also want some \"padding\", which is called \"delimiter space\" in the function. Let's add some\ndelimiter space to the print statements!\n```python\n[...]\n\npretty_print(\"Hi, this is some text!\", align=Align.LEFT, delimiter_space_amount=10)\npretty_print(\"Hi, this is some text!\", align=Align.CENTER, enable_back_separator=False, delimiter_space_amount=10)\npretty_print(\"Hi, this is some text!\", align=Align.RIGHT, enable_back_separator=False, delimiter_space_amount=10)\n```\n![img_6.png](Images/PrinterAlignmentPreview03.png)\nEverything looks good to this point. But you might want to see where the spaces are. You might do something like this:\n```python\n[...]\npretty_print(\"Hi, this is some text!\", align=Align.LEFT, delimiter_space_amount=10, delimiter_space_symbol=\"=\")\npretty_print(\"Hi, this is some text!\", align=Align.CENTER, enable_back_separator=False, delimiter_space_amount=10, delimiter_space_symbol=\"=\")\npretty_print(\"Hi, this is some text!\", align=Align.RIGHT, enable_back_separator=False, delimiter_space_amount=10, delimiter_space_symbol=\"=\")\n```\n![img_7.png](Images/PrinterAlignmentPreview04.png)\n#### Separation\nOther than being used in the print function, you can also use the ``separater_line()`` function to print a separator line.\nAs in like in printing, you can also use the separator with both a preset or keyword arguments. We already covered the\nseparator preset in [Using Local Presets](#using-local-presets), so it will not be in this section. \nThe following keyword arguments are available for customizations:\n- preset | Preset, SeparatorPreset: If you want to use a preset\n- delimiter_left | str: Symbol for the left delimiter\n- delimiter_left_color | Color: Color for the left delimiter\n- enable_left_delimiter | bool: Whether to print the left delimiter\n- delimiter_right | str: Symbol for the right delimiter\n- delimiter_right_color | Color: Color for the right delimiter\n- enable_delimiter_right | bool: Whether to print the right delimiter\n- delimiter_space_amount | int: Amount of delimiter space to print\n- delimiter_space_symbol | str: Symbol for the delimiter space\n- separator_symbol | str: Symbol for the seperator\n- separator_color | Color: Color for the separator\n- enable_separator | bool: Whether to print the separator symbol, else \" \" will be used\n- test_mode | bool: Whether to use test mode\n- testing_terminal_width | int: Artificial terminal width for testing or for making separator more customized ;)\n\nHere's an example of using the separate_line() function:\n```python\nfrom fancyprint.printer import separate_line\n\nseparate_line(delimiter_left=\"(\", separator_symbol=\"*\")\n```\nThis will print:\n![img_8.png](Images/SeparatorPreview.png)\nIt looks pretty bad, but remember making a preset is recommended for most cases.\n\n# Contributing\nThanks for considering contributing to Fancy Print. You can read Contributing.md for further information!\n\n<hr>\nRemember to keep your apps fancy ;)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fancyprint",
    "package_url": "https://pypi.org/project/fancyprint/",
    "platform": null,
    "project_url": "https://pypi.org/project/fancyprint/",
    "project_urls": {
      "Bug Tracker": "https://github.com/IamMU/Fancy-Print/issues",
      "Homepage": "https://github.com/IamMU/Fancy-Print"
    },
    "release_url": "https://pypi.org/project/fancyprint/0.1.5/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A aesthetic replacement to print()",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15580030,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08b12037b17b04e1a4c8298a34afa05e9d280ce68abccea7b8ee8c948ab4dea5",
          "md5": "29581783711c455bfd4889d22fd98859",
          "sha256": "4dbb72ab8fd5b779f83dacd0ebec0b5bca78c9c542d9f77eaa089ec1af49323f"
        },
        "downloads": -1,
        "filename": "fancyprint-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29581783711c455bfd4889d22fd98859",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8907,
        "upload_time": "2022-10-07T20:10:39",
        "upload_time_iso_8601": "2022-10-07T20:10:39.828214Z",
        "url": "https://files.pythonhosted.org/packages/08/b1/2037b17b04e1a4c8298a34afa05e9d280ce68abccea7b8ee8c948ab4dea5/fancyprint-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c9e94ec16fdcfbb2b6244692e029e22cc0ffd85aaf5e38b33cb7d4eb935175a",
          "md5": "a4fbe8b921ba1b9e7724cc68c65d6d6f",
          "sha256": "f008c35795b2d60990f81321e78df430d2bd951ae9003d47fbd4ff1633c807fc"
        },
        "downloads": -1,
        "filename": "fancyprint-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a4fbe8b921ba1b9e7724cc68c65d6d6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8656,
        "upload_time": "2022-10-07T20:10:41",
        "upload_time_iso_8601": "2022-10-07T20:10:41.771293Z",
        "url": "https://files.pythonhosted.org/packages/7c/9e/94ec16fdcfbb2b6244692e029e22cc0ffd85aaf5e38b33cb7d4eb935175a/fancyprint-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c952deea9d8b85cc8414a958ac586d178a139e5be8fa9294be638a12bc3a9b8",
          "md5": "d39e61df4ea4460d8e5448c5fe494e8e",
          "sha256": "08333496d641924b4bc5969eed76277458ef4f5bf887fb69d3a55f45b57ac992"
        },
        "downloads": -1,
        "filename": "fancyprint-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d39e61df4ea4460d8e5448c5fe494e8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4592,
        "upload_time": "2022-10-09T12:29:29",
        "upload_time_iso_8601": "2022-10-09T12:29:29.478110Z",
        "url": "https://files.pythonhosted.org/packages/0c/95/2deea9d8b85cc8414a958ac586d178a139e5be8fa9294be638a12bc3a9b8/fancyprint-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6c3f293d71d9aa4c8c0d73176750b07671b0eb647900dc4e6a3e8ba90b4114a",
          "md5": "682211e9633ad59d91733fa1b654c3cc",
          "sha256": "111624c09dac4d9e60eb937c3edb7a2fa7efc56b2e16ff0624bee03dec736770"
        },
        "downloads": -1,
        "filename": "fancyprint-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "682211e9633ad59d91733fa1b654c3cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4150,
        "upload_time": "2022-10-09T12:29:30",
        "upload_time_iso_8601": "2022-10-09T12:29:30.551483Z",
        "url": "https://files.pythonhosted.org/packages/b6/c3/f293d71d9aa4c8c0d73176750b07671b0eb647900dc4e6a3e8ba90b4114a/fancyprint-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "220ba4bef43f3239c2ce3982de917f1808980288ad0470cf01edc45449e8a535",
          "md5": "d306fa575421c63c7f9ac13bf5e028da",
          "sha256": "bbcd731f4a93419753fcaabbde97e6fe2d3767a2ac0a6952f8fcb6b30fcce8d6"
        },
        "downloads": -1,
        "filename": "fancyprint-0.1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d306fa575421c63c7f9ac13bf5e028da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13327,
        "upload_time": "2022-10-28T21:25:12",
        "upload_time_iso_8601": "2022-10-28T21:25:12.502122Z",
        "url": "https://files.pythonhosted.org/packages/22/0b/a4bef43f3239c2ce3982de917f1808980288ad0470cf01edc45449e8a535/fancyprint-0.1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c83c2ef6367aeadc661209e98d3488a55faca4ccec8c022ab92f7dc86cbe5cde",
          "md5": "f6a47d2f003e6c4ee4b132550ecc1e60",
          "sha256": "94e3de1ec2773954e0f166dfc5a70277ec1506314865a3a6d99d61191e6c9412"
        },
        "downloads": -1,
        "filename": "fancyprint-0.1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f6a47d2f003e6c4ee4b132550ecc1e60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10709,
        "upload_time": "2022-10-28T21:25:15",
        "upload_time_iso_8601": "2022-10-28T21:25:15.242435Z",
        "url": "https://files.pythonhosted.org/packages/c8/3c/2ef6367aeadc661209e98d3488a55faca4ccec8c022ab92f7dc86cbe5cde/fancyprint-0.1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c82add338a6d7a3dc9000cfbd4248481a09191750fd3fa086f4db8c450b8d6ff",
          "md5": "0e31ac9af779b9870acc5e04d033bdc9",
          "sha256": "1ae55695680686b03a2064fe53921349f08e9bafc7f670cfaa9ccd0145c9e711"
        },
        "downloads": -1,
        "filename": "fancyprint-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e31ac9af779b9870acc5e04d033bdc9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11745,
        "upload_time": "2022-10-28T21:31:26",
        "upload_time_iso_8601": "2022-10-28T21:31:26.679829Z",
        "url": "https://files.pythonhosted.org/packages/c8/2a/dd338a6d7a3dc9000cfbd4248481a09191750fd3fa086f4db8c450b8d6ff/fancyprint-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f966b301b6cb9dec59c1951d10ccaca89a26b78ed85d3fce883df22016b60997",
          "md5": "44427a3f620fda8649b9e2a0de157d15",
          "sha256": "cc6c10857ec30a9eaef3d7395da01a8c9d8834a20de18c4676373e46d1ad0df4"
        },
        "downloads": -1,
        "filename": "fancyprint-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "44427a3f620fda8649b9e2a0de157d15",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9790,
        "upload_time": "2022-10-28T21:31:27",
        "upload_time_iso_8601": "2022-10-28T21:31:27.883745Z",
        "url": "https://files.pythonhosted.org/packages/f9/66/b301b6cb9dec59c1951d10ccaca89a26b78ed85d3fce883df22016b60997/fancyprint-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed6eb00277b36fda7c482d410d83f853bf69f347c8955a627eceeeba74053ecd",
          "md5": "e2522b06809f012b74aba5814f2756f8",
          "sha256": "17d494a23fd447db131a71cabbf0a0bae006fe721615d41faeda1f505c9946d1"
        },
        "downloads": -1,
        "filename": "fancyprint-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2522b06809f012b74aba5814f2756f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13522,
        "upload_time": "2022-10-29T14:28:39",
        "upload_time_iso_8601": "2022-10-29T14:28:39.832924Z",
        "url": "https://files.pythonhosted.org/packages/ed/6e/b00277b36fda7c482d410d83f853bf69f347c8955a627eceeeba74053ecd/fancyprint-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3939106057f687e97c78ce7a0e139e425f6f7faf4c8b7f9edc451bc3349ce57",
          "md5": "d08d040d64265a92e9835e2c97ab407a",
          "sha256": "633fd2919eed23019b930c6758cebd7e1fc4edf5d887ae8087371e685c7cacc6"
        },
        "downloads": -1,
        "filename": "fancyprint-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d08d040d64265a92e9835e2c97ab407a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13260,
        "upload_time": "2022-10-29T14:28:41",
        "upload_time_iso_8601": "2022-10-29T14:28:41.230751Z",
        "url": "https://files.pythonhosted.org/packages/b3/93/9106057f687e97c78ce7a0e139e425f6f7faf4c8b7f9edc451bc3349ce57/fancyprint-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7c0754dd54c8769f2a88e46ffc5d01000023bd7eb972b25e42491b4515466cc",
          "md5": "90d84fff2147cb4a739ec344274a0d59",
          "sha256": "2f1d9eeb5d5be0c1e89fe61ee2b6e4cadbf77658947bc33c830780c4b9df9de4"
        },
        "downloads": -1,
        "filename": "fancyprint-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90d84fff2147cb4a739ec344274a0d59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13524,
        "upload_time": "2022-10-29T18:20:53",
        "upload_time_iso_8601": "2022-10-29T18:20:53.638204Z",
        "url": "https://files.pythonhosted.org/packages/c7/c0/754dd54c8769f2a88e46ffc5d01000023bd7eb972b25e42491b4515466cc/fancyprint-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93e34b605660503cfbff177495940238eaa511e477de80bcd97d7a0b47282749",
          "md5": "e4c1e200e0b78edd0a01df32ff05bffc",
          "sha256": "c5b2344bed7cb68c8e21d9f2d0ae45aa5d864a3c6a7170fbe62a11f3e8a555b7"
        },
        "downloads": -1,
        "filename": "fancyprint-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e4c1e200e0b78edd0a01df32ff05bffc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13260,
        "upload_time": "2022-10-29T18:20:55",
        "upload_time_iso_8601": "2022-10-29T18:20:55.255897Z",
        "url": "https://files.pythonhosted.org/packages/93/e3/4b605660503cfbff177495940238eaa511e477de80bcd97d7a0b47282749/fancyprint-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7c0754dd54c8769f2a88e46ffc5d01000023bd7eb972b25e42491b4515466cc",
        "md5": "90d84fff2147cb4a739ec344274a0d59",
        "sha256": "2f1d9eeb5d5be0c1e89fe61ee2b6e4cadbf77658947bc33c830780c4b9df9de4"
      },
      "downloads": -1,
      "filename": "fancyprint-0.1.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "90d84fff2147cb4a739ec344274a0d59",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 13524,
      "upload_time": "2022-10-29T18:20:53",
      "upload_time_iso_8601": "2022-10-29T18:20:53.638204Z",
      "url": "https://files.pythonhosted.org/packages/c7/c0/754dd54c8769f2a88e46ffc5d01000023bd7eb972b25e42491b4515466cc/fancyprint-0.1.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93e34b605660503cfbff177495940238eaa511e477de80bcd97d7a0b47282749",
        "md5": "e4c1e200e0b78edd0a01df32ff05bffc",
        "sha256": "c5b2344bed7cb68c8e21d9f2d0ae45aa5d864a3c6a7170fbe62a11f3e8a555b7"
      },
      "downloads": -1,
      "filename": "fancyprint-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "e4c1e200e0b78edd0a01df32ff05bffc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13260,
      "upload_time": "2022-10-29T18:20:55",
      "upload_time_iso_8601": "2022-10-29T18:20:55.255897Z",
      "url": "https://files.pythonhosted.org/packages/93/e3/4b605660503cfbff177495940238eaa511e477de80bcd97d7a0b47282749/fancyprint-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}