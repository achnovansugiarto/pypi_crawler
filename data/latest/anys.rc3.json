{
  "info": {
    "author": "John Thorvald Wodder II",
    "author_email": "anys@varonathe.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Testing",
      "Topic :: Software Development :: Testing :: Unit",
      "Typing :: Typed"
    ],
    "description": ".. image:: http://www.repostatus.org/badges/latest/active.svg\n    :target: http://www.repostatus.org/#active\n    :alt: Project Status: Active — The project has reached a stable, usable\n          state and is being actively developed.\n\n.. image:: https://github.com/jwodder/anys/workflows/Test/badge.svg?branch=master\n    :target: https://github.com/jwodder/anys/actions?workflow=Test\n    :alt: CI Status\n\n.. image:: https://codecov.io/gh/jwodder/anys/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/jwodder/anys\n\n.. image:: https://img.shields.io/pypi/pyversions/anys.svg\n    :target: https://pypi.org/project/anys/\n\n.. image:: https://img.shields.io/github/license/jwodder/anys.svg\n    :target: https://opensource.org/licenses/MIT\n    :alt: MIT License\n\n`GitHub <https://github.com/jwodder/anys>`_\n| `PyPI <https://pypi.org/project/anys/>`_\n| `Issues <https://github.com/jwodder/anys/issues>`_\n| `Changelog <https://github.com/jwodder/anys/blob/master/CHANGELOG.md>`_\n\n``anys`` provides matchers for pytest_-style assertions.  What's a \"matcher,\"\nyou say?  Well, say you're writing a unit test and you want to assert that a\ngiven object contains the correct values.  Normally, you'd just write:\n\n.. code:: python\n\n    assert foo == {\n        \"widgets\": 42,\n        \"name\": \"Alice\",\n        \"subfoo\": {\n            \"created_at\": \"2021-06-24T18:41:59Z\",\n            \"name\": \"Bob\",\n            \"widgets\": 23,\n        }\n    }\n\nBut wait!  What if the value of ``foo[\"subfoo\"][\"created_at\"]`` can't be\ndetermined in advance, but you still need to check that it's a valid timestamp?\nYou'd have to compare everything in ``foo`` other than that one field to the\nexpected values and then separately check the timestamp field for validity.\nThis is where matchers come in: they're magic objects that compare equal to any\n& all values that meet given criteria.  For the case above, ``anys`` allows you\nto just write:\n\n.. code:: python\n\n    from anys import ANY_DATETIME_STR\n\n    assert foo == {\n        \"widgets\": 42,\n        \"name\": \"Alice\",\n        \"subfoo\": {\n            \"created_at\": ANY_DATETIME_STR,\n            \"name\": \"Bob\",\n            \"widgets\": 23,\n        }\n    }\n\nand the assertion will do what you mean.\n\n.. _pytest: https://docs.pytest.org\n\nInstallation\n============\n``anys`` requires Python 3.6 or higher.  Just use `pip <https://pip.pypa.io>`_\nfor Python 3 (You have pip, right?) to install it::\n\n    python3 -m pip install anys\n\n\nAPI\n===\n\n``anys`` provides the following classes & constants for matching against values\nmeeting certain criteria.  Matching is performed by comparing a value against\nan ``anys`` matcher with ``==``, either directly or as a result of comparing\ntwo larger structures with ``==``.\n\nIf a comparison raises a ``TypeError`` or ``ValueError`` (say, because you\nevaluated ``42 == AnyMatch(r'\\d+')``, which tries to match a regex against an\ninteger), the exception is suppressed, and the comparison evaluates to\n``False``; all other exceptions are propagated out.\n\n``anys`` matchers can be combined using the ``&`` operator to produce new\nmatchers that require both operands to succeed; for example, ``AnyGT(23) &\nAnyLT(42)`` will match any number between 23 and 42, exclusive, and nothing\nelse.\n\n``anys`` matchers can be combined using the ``|`` operator to produce new\nmatchers that require at least one of the operands to succeed; for example,\n``ANY_INT | ANY_STR`` will match any value that is an ``int`` or a ``str``.\n\nClasses\n-------\n\nNote that, unless stated otherwise, ``anys`` class constructors cannot take\n``anys`` matchers as arguments.\n\n.. code:: python\n\n    AnyContains(key: Any, /)\n\nA matcher that matches any value for which ``key in value`` is true.  If\n``key`` is an ``anys`` matcher, ``value == AnyContains(key)`` will instead be\nevaluated by iterating through the elements of ``value`` and checking whether\nany match ``key``.\n\n.. code:: python\n\n    AnyFullmatch(pattern: Union[AnyStr, re.Pattern[AnyStr]], /)\n\nA matcher that matches any string ``s`` for which ``re.fullmatch(pattern, s)``\nsucceeds\n\n.. code:: python\n\n    AnyFunc(func: Callable, /)\n\nA matcher that matches any value ``x`` for which ``func(x)`` is true.  If\n``func(x)`` raises a ``TypeError`` or ``ValueError``, it will be suppressed,\nand ``x == AnyFunc(func)`` will evaluate to ``False``.  All other exceptions\nare propagated out.\n\n.. code:: python\n\n    AnyGE(bound: Any, /)\n\nA matcher that matches any value greater than or equal to ``bound``\n\n.. code:: python\n\n    AnyGT(bound: Any, /)\n\nA matcher that matches any value greater than ``bound``\n\n.. code:: python\n\n    AnyIn(iterable: Iterable, /)\n\nA matcher that matches any value that equals or matches an element of\n``iterable`` (which may contain ``anys`` matchers).  Note that, if ``iterable``\nis a string, only individual characters in the string will match; to match\nsubstrings, use ``AnySubstr()`` instead.\n\n.. code:: python\n\n    AnyInstance(classinfo, /)\n\nA matcher that matches any value that is an instance of ``classinfo``.\n``classinfo`` can be either a type or a tuple of types (or, starting in Python\n3.10, a ``Union`` of types).\n\nA number of pre-composed ``AnyInstance()`` values are provided as constants for\nyour convenience; see \"Constants_\" below.\n\n.. code:: python\n\n    AnyLE(bound: Any, /)\n\nA matcher that matches any value less than or equal to ``bound``\n\n.. code:: python\n\n    AnyLT(bound: Any, /)\n\nA matcher that matches any value less than ``bound``\n\n.. code:: python\n\n    AnyMatch(pattern: Union[AnyStr, re.Pattern[AnyStr]], /)\n\nA matcher that matches any string ``s`` for which ``re.match(pattern, s)``\nsucceeds\n\n.. code:: python\n\n    AnySearch(pattern: Union[AnyStr, re.Pattern[AnyStr]], /)\n\nA matcher that matches any string ``s`` for which ``re.search(pattern, s)``\nsucceeds\n\n.. code:: python\n\n    AnySubstr(s: AnyStr, /)\n\nA matcher that matches any substring of ``s``\n\n.. code:: python\n\n    AnyWithAttrs(mapping: Mapping, /)\n\nA matcher that matches any object ``obj`` such that ``getattr(obj, k) == v``\nfor all ``k,v`` in ``mapping.items()``.\n\nThe values (but not the keys) of ``mapping`` can be ``anys`` matchers.\n\n.. code:: python\n\n    AnyWithEntries(mapping: Mapping, /)\n\nA matcher that matches any object ``obj`` such that ``obj[k] == v`` for all\n``k,v`` in ``mapping.items()``.\n\nThe values (but not the keys) of ``mapping`` can be ``anys`` matchers.\n\n.. code:: python\n\n    Maybe(arg: Any, /)\n\nA matcher that matches ``None`` and any value that equals or matches ``arg``\n(which can be an ``anys`` matcher)\n\n.. code:: python\n\n    Not(arg: Any, /)\n\nA matcher that matches anything that does not equal or match ``arg`` (which can\nbe an ``anys`` matcher)\n\nConstants\n---------\n\nThe following constants match values of the given type:\n\n- ``ANY_BOOL``\n- ``ANY_BYTES``\n- ``ANY_COMPLEX``\n- ``ANY_DATE`` — Matches ``date`` instances.  You may not be aware, but\n  ``datetime`` is a subclass of ``date``, and so this also matches\n  ``datetime``\\s.  If you only want to match actual ``date``\\s, use\n  ``ANY_STRICT_DATE``.\n- ``ANY_DATETIME``\n- ``ANY_DICT``\n- ``ANY_FLOAT``\n- ``ANY_INT``\n- ``ANY_ITERABLE``\n- ``ANY_ITERATOR``\n- ``ANY_LIST``\n- ``ANY_MAPPING``\n- ``ANY_NUMBER``\n- ``ANY_SEQUENCE``\n- ``ANY_SET``\n- ``ANY_STR``\n- ``ANY_STRICT_DATE`` — Matches any instance of ``date`` that is not an\n  instance of ``datetime``\n- ``ANY_TUPLE``\n\nThe following constants match `aware or naïve`__ ``datetime`` or ``time``\nvalues:\n\n__ https://docs.python.org/3/library/datetime.html#aware-and-naive-objects\n\n- ``ANY_AWARE_DATETIME``\n- ``ANY_AWARE_TIME``\n- ``ANY_NAIVE_DATETIME``\n- ``ANY_NAIVE_TIME``\n\nThe following constants match ISO 8601-style date, time, & datetime strings.\n\"Aware\" matchers require timezone information, while \"naïve\" matchers forbid\nit.\n\n- ``ANY_AWARE_DATETIME_STR``\n- ``ANY_AWARE_TIME_STR``\n- ``ANY_DATETIME_STR``\n- ``ANY_DATE_STR``\n- ``ANY_NAIVE_DATETIME_STR``\n- ``ANY_NAIVE_TIME_STR``\n- ``ANY_TIME_STR``\n\nOther constants:\n\n- ``ANY_FALSY`` — Matches anything considered false\n- ``ANY_TRUTHY`` — Matches anything considered true\n\nNote: If you're after a matcher that matches absolutely everything, Python\nalready provides that as the `unittest.mock.ANY`__ constant.\n\n__ https://docs.python.org/3/library/unittest.mock.html#any\n\nCaveat: Custom Classes\n======================\n\nWhen a well-behaved class defines an ``__eq__`` method, it will only test\nagainst values of the same class, returning ``NotImplemented`` for other types,\n[1]_ which signals Python to evaluate ``x == y`` by instead calling ``y``'s\n``__eq__`` method.  Thus, when comparing an ``anys`` matcher against an\ninstance of a well-behaved class, the matcher can be on either the left or the\nright of the ``==``.  All of the classes in the Python standard library are\nwell-behaved, as are classes that don't define ``__eq__`` methods, but some\ncustom classes in third-party code are not well-behaved.  In order to\nsuccessfully compare an ``anys`` matcher against an ill-behaved class, the\nmatcher must be on the **left** side of the ``==`` operator; if it is on the\nright, only the custom class's ``__eq__`` method will be consulted, which\nusually means that the comparison will always evaluate to false.\n\n.. [1] In order to work their magic, ``anys`` matchers do not follow this rule,\n       and so they are not well-behaved.  \"Do as I say, not as I do,\" as they\n       say.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jwodder/anys",
    "keywords": "comparison,matchers,pytest,testing,unit test",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "anys",
    "package_url": "https://pypi.org/project/anys/",
    "platform": "",
    "project_url": "https://pypi.org/project/anys/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jwodder/anys/issues",
      "Homepage": "https://github.com/jwodder/anys",
      "Source Code": "https://github.com/jwodder/anys"
    },
    "release_url": "https://pypi.org/project/anys/0.2.1/",
    "requires_dist": [
      "Deprecated (~=1.2)"
    ],
    "requires_python": "~=3.6",
    "summary": "Matchers for pytest",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11636604,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16c3614fb610e5014c39be266c96e0689b3c7a3276e76f5ad98b97a9d74c1eef",
          "md5": "b8bdfe6165153698f75769fabc0faebe",
          "sha256": "1fe39a053bba4f77ac88d4db17785971eeefd8069d258f060bf10b35ef7df368"
        },
        "downloads": -1,
        "filename": "anys-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8bdfe6165153698f75769fabc0faebe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 9173,
        "upload_time": "2021-06-24T22:52:07",
        "upload_time_iso_8601": "2021-06-24T22:52:07.792623Z",
        "url": "https://files.pythonhosted.org/packages/16/c3/614fb610e5014c39be266c96e0689b3c7a3276e76f5ad98b97a9d74c1eef/anys-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35d3ca2a4b3003ad88b7ea60a3382d0ca550ab319e830e081edb482c50065b70",
          "md5": "04926f063d4f3e286b63e2de14fcd8fc",
          "sha256": "0ac8aad1f8d47c41ce279ff7351d0bbd8fa78b871b40cbfbf896b04727ed9064"
        },
        "downloads": -1,
        "filename": "anys-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "04926f063d4f3e286b63e2de14fcd8fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 16736,
        "upload_time": "2021-06-24T22:52:08",
        "upload_time_iso_8601": "2021-06-24T22:52:08.964303Z",
        "url": "https://files.pythonhosted.org/packages/35/d3/ca2a4b3003ad88b7ea60a3382d0ca550ab319e830e081edb482c50065b70/anys-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1041a970ff804bd4975c0d5211c68f2b99ce74509b6072de8c3c8c715734154f",
          "md5": "9e6609ae532a23b770d78eda6d4262e6",
          "sha256": "7c5465222c3526c8b81d0654120a35893b2e5a0fd0d1cde91e0a388409e316a9"
        },
        "downloads": -1,
        "filename": "anys-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e6609ae532a23b770d78eda6d4262e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 9592,
        "upload_time": "2021-06-30T20:43:06",
        "upload_time_iso_8601": "2021-06-30T20:43:06.111642Z",
        "url": "https://files.pythonhosted.org/packages/10/41/a970ff804bd4975c0d5211c68f2b99ce74509b6072de8c3c8c715734154f/anys-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61fc21aefa42b00cdda19539d35070e227728a3793badcdccb87078fdef05a3a",
          "md5": "c2c2c184d43737f126d553d22f0951c0",
          "sha256": "cf8ca25b948ce0c6455d5eb40160334543ed818cdf51e5c3337020ec87bb25c0"
        },
        "downloads": -1,
        "filename": "anys-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c2c2c184d43737f126d553d22f0951c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 17799,
        "upload_time": "2021-06-30T20:43:07",
        "upload_time_iso_8601": "2021-06-30T20:43:07.734294Z",
        "url": "https://files.pythonhosted.org/packages/61/fc/21aefa42b00cdda19539d35070e227728a3793badcdccb87078fdef05a3a/anys-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7410f0a4b9e36a6742cae1009c090d3c551f9c0f7b4eefca763fce97452e483a",
          "md5": "b5029b3928d2e183f0d81cdb0ed94646",
          "sha256": "b946ff447008d00125a2c437fb06f06aaad006ea798127efc2cae7dd217402b2"
        },
        "downloads": -1,
        "filename": "anys-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5029b3928d2e183f0d81cdb0ed94646",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 9595,
        "upload_time": "2021-10-05T19:28:26",
        "upload_time_iso_8601": "2021-10-05T19:28:26.076430Z",
        "url": "https://files.pythonhosted.org/packages/74/10/f0a4b9e36a6742cae1009c090d3c551f9c0f7b4eefca763fce97452e483a/anys-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "408081f88a0a678b387bc85376c914c2843a42c548aa4ab0161f5e1d8647f73c",
          "md5": "bd44b1ef71c6577e6ab0a434eb348916",
          "sha256": "f32e16ead49b0a96c530fe43aa4e69ffa68df1fd63042866a994618a08ae9725"
        },
        "downloads": -1,
        "filename": "anys-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bd44b1ef71c6577e6ab0a434eb348916",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 17850,
        "upload_time": "2021-10-05T19:28:27",
        "upload_time_iso_8601": "2021-10-05T19:28:27.287789Z",
        "url": "https://files.pythonhosted.org/packages/40/80/81f88a0a678b387bc85376c914c2843a42c548aa4ab0161f5e1d8647f73c/anys-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7410f0a4b9e36a6742cae1009c090d3c551f9c0f7b4eefca763fce97452e483a",
        "md5": "b5029b3928d2e183f0d81cdb0ed94646",
        "sha256": "b946ff447008d00125a2c437fb06f06aaad006ea798127efc2cae7dd217402b2"
      },
      "downloads": -1,
      "filename": "anys-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b5029b3928d2e183f0d81cdb0ed94646",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.6",
      "size": 9595,
      "upload_time": "2021-10-05T19:28:26",
      "upload_time_iso_8601": "2021-10-05T19:28:26.076430Z",
      "url": "https://files.pythonhosted.org/packages/74/10/f0a4b9e36a6742cae1009c090d3c551f9c0f7b4eefca763fce97452e483a/anys-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "408081f88a0a678b387bc85376c914c2843a42c548aa4ab0161f5e1d8647f73c",
        "md5": "bd44b1ef71c6577e6ab0a434eb348916",
        "sha256": "f32e16ead49b0a96c530fe43aa4e69ffa68df1fd63042866a994618a08ae9725"
      },
      "downloads": -1,
      "filename": "anys-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bd44b1ef71c6577e6ab0a434eb348916",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.6",
      "size": 17850,
      "upload_time": "2021-10-05T19:28:27",
      "upload_time_iso_8601": "2021-10-05T19:28:27.287789Z",
      "url": "https://files.pythonhosted.org/packages/40/80/81f88a0a678b387bc85376c914c2843a42c548aa4ab0161f5e1d8647f73c/anys-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}