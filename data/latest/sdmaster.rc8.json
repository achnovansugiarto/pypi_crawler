{
  "info": {
    "author": "Mike Wang",
    "author_email": "wml816@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Stock Data Master\nStock Data Master (or SDM) is a library to provide utility functions for stock analysis, including the following:\n* Load stock data from API data provider via Restful API request\n* Cleanup the data from response and save it to either SQLite database or CSV file\n* Load saved data into a unified format and validate on different levels\n* Simulate the market with data loaded, and evaluate the performance of the strategy defined by yourself\n* Defines some popular candlestick patterns and other common calculations such as RSI\n\n## Requirement\n* Python: >= 3.5\n* pandas\n* plotly\n* matplotlib\n* numpy\n* pytz\n\n## Installation\nSimply run:\n\n`pip install sdmaster`\n\n## Usage\n\n### API Request from provider\nThis library simplify the process of calling an stock data provider API endpoints to get the stock data you want. It \nmanages the API endpoint, authentication, date format, response parsing, etc., allowing users to only make one call to \ndownload the stock data from any provider supported in a united format for following tasks .\n\nCurrently SDM only supports three markets: NASDAQ, NYSE, and TSX (depends on the API data provider).\n\nTo make use of this function, you would need to first create an object for the specific API provider with your personal \ntoken, the market you want to operate on, and optionally your response format. Currently only json format is supported.\n\nExample:\n```\nfrom sdm.api.iex_cloud import IEXCloudAPI\n\niex_caller = IEXCloudAPI('YOUR_TOKEN', 'nasdaq')\nmsft_raw_data = iex_caller.get_daily_historical_per_symbol(symbol='MSFT')\nnasdaq_raw_data = iex_caller.get_daily_historical_all()\n```\n\nThe following methods of requesting data are supported:\n* `get_daily_historical_per_symbol(symbol)`: return the daily historical data for a symbol\n* `get_daily_historical_all()`: return the daily historical data for all symbols within the market\n* `get_symbol_list()`: return the list of all symbols\n* `get_previous_day_closing()`: return the previous closing price in the market.\n* `get_realtime_quote_per_symbol(symbol)` : return the real-time quote for specified symbol\n* `get_realtime_quote_all()` : return the real-time quote for all symbols in the market\n\n\nThe following API providers are supported:\n\n#### IEX Cloud\n\nOfficial documentation: https://iexcloud.io/docs/api/#symbols\n\nLimitations:\n* No support for TSX\n\n#### Financial Modeling Prep (FMP)\n\nOfficial documentation: https://financialmodelingprep.com/developer/docs/\n\nLimitations:\n* None\n\n\n### Save/Load Data to/from file\nThis function allows user to save the data you downloaded from API providers to a file on disk. Currently only \nSQLite and CSV formats are supported. If no file type specified, SQLite will be chosen by default.\n\n#### CSV\nTo save historical/realtime quote data into a csv file, you can call the save_data() method in StockDataMaster similar\nto the sample code below.\n\n```\nfrom sdm.api.fmp import FMPAPI\nfrom sdm.master import StockDataMaster\n\nfmp = FMPAPI(\"YOUR_TOKEN\", \"nasdaq\")\nmsft_data = fmp.get_daily_historical_per_symbol(\"MSFT\")\nsdm = StockDataMaster(file_path=\"/usr/local/data/sdm\", file_type=\"csv\")\nsdm.save_data(data=msft_data, file_name=\"nasdaq_historical.csv\", data_type=\"historical\")\nall_nasdaq_data = fmp.get_daily_historical_all()\nsdm.save_data(data=all_nasdaq_data, file_name=\"nasdaq_historical.csv\", data_type=\"historical\")\n```\n\nSimilarly, you can load the data from a csv file saved by SDM previously:\n```\nhistorical_data = sdm.load_data(file_name=\"nasdaq_historical.csv\", data_type=\"historical\")\nrealtime_data = sdm.load_data(file_name=\"nyse_realtime_quote.csv\", data_type=\"realtime\")\n```\nNotice that you can load data from your own CSV files as well, even if they are not generated by SDM. As long as there \nis a column named **symbol** representing the symbol of the stock, and a column named **datetime** representing the datetime\nof the data record. Then you can load it into SDM data with your own datetime format like below:\n```\nown_data = sdm.load_data(file_name=\"my_own_data.csv\", data_type=\"historical\", csv_datetime_format=\"%Y-%m-%d %H:%M:%S\")\n```\n\n**Benefits**:\n- Most widely used data format by data providers\n- Can immediately see what is inside the file\n- Allow you to load data from csv file of other sources\n- Able to work closely with many other python frameworks such as pandas\n\n**Limitations**:\n- Must be loaded as a whole. Not ideal when you only need a portion of the data in the file\n- Not able to mix data with different data columns in one file\n\n**Best Use Case**: \n- If you need to share the file with others\n- If you only need to save the file and use other frameworks for further analysis\n- If you need to load historical data from another source in csv formaat\n\n#### SQLite\nThe data is saved in a SQLite databse file with three columns: symbol, timestamp of the record, and a json string representing \nthe data record. To save and load by SQLite is very similar to csv, with only file_type changed. notice that you can \nmix historical and realtime data in one SQLite db file, but there cannot be two records of the same symbol and \ntimestamp since their combination is used as the primary key.\n```\nfmp = FMPAPI(\"YOUR_TOKEN\", \"nasdaq\")\nsdm = StockDataMaster(file_path=\"/usr/local/data/sdm\", file_type=\"sql\")\nmsft_data = fmp.get_daily_historical_per_symbol(\"MSFT\")\nsdm.save_data(data=msft_data, file_name=\"nasdaq_data.db\", data_type=\"historical\")\nall_nasdaq_quote_data = fmp.get_realtime_quote_all()\nsdm.save_data(data=all_nasdaq_quote_data, file_name=\"nasdaq_data.db\", data_type=\"realtime\")\n```\n**Benefits**:\n- Able to quickly load only a subset of symbols and date range from a huge database.\n- Able to mix different kinds of data record format into one file\n\n**Limitations**:\n- Need to use online tool or write queries to peek the content in the sql file\n- Can only load db files generated by SDM\n\n**Best Use Cases**:\n- If you are going to use SDM for loading/saving/simulating duties\n- If you would like to dump all the historical data into one big file, and load subset of data subsequently for \n  analysis, such as data from Jan 1 2010 to Dec 31, 2020, or all the data for AAPL, etc.  \n\n#### Data Validation Levels\nWhen loading data from files, you need to provide a validation level (default as level 2 if not provided). The levels \nare explained as below:\n* Level 0: no validation rules will be applied\n* Level 1: all the basic columns (open, close, high, low, volume) must have a positive float/integer number as the value\n* Level 2: Including all level 1 validation rules, while also verify that **min** must be lower than or equal to both \n  open and close, while **max** must be higher than or equal to both open and close\n* Level 3: Including all level 2 validation rules, while also check if there is a gap in the stock data of any symbol \n  (considering market open days), or if there is a data record on a day that the market is supposed to be closed\n  \n### Simulation\nYou can perform a simulation using historical data and your algorithm to see how effective your strategy would work. \nExapmle: \n\n```\nfrom sdm.master import StockDataMaster\nfrom sdm.simulation.market import Market\nfrom sdm.simulation.trader import Trader\nfrom sdm.simulation.transaction import Transaction\nfrom sdm.simulation.performance import get_trader_performance_metrics\n\nimport datetime as dt\n\n# First we need to load some historical data to begin with. You need to have your own dataset file here\nstart_date = dt.datetime(2010, 1, 5)\nend_date = dt.datetime(2013, 12, 31)\nsdm = StockDataMaster(file_path=\"/usr/local\", file_type=\"sql\", data_type=\"historical\")\ntsx_data = sdm.load_data(file_name=\"tsx_data.db\",  start_date=start_date, end_date=end_date)\n\nsdm.validate_data(tsx_data, market=\"tsx\")\n\n# Create the market object which will save all the historical data\ntsx_market = Market(tsx_data, \"tsx\", start_date, end_date)\n\n# We need to define our strategy algorithm here in a function. It is a generator yielding a transaction\ndef my_algorithm(market_data_cumulative, current_day, position, cash, transaction_history, real_time_price, clf=None):\n    # This generator function should be using the cumulative stock market data, your positions, your transaction\n    # history, and the realtime market price to determine whether you want to buy or sell, and if yes yield a \n    # transaction object, which will be processed by the market. An example yield can be found below\n    \n    # yield Transaction(-1, \"AAPL\", 10, 100.00, dt.datetime(2011, 5, 20))\n    return []\n    \n# Create a trader with the initial funds and strategy function and add to the market. Note that you can have multiple \n# traders added to the same market, with different strategies or funds\nsmall_trader = Trader(strategy_function=my_algorithm, \n                      init_fund=10000, \n                      start_date=start_date, \n                      end_date=end_date, \n                      name=\"Small Trader with less funds\")\ntsx_market.add_trader(small_trader)\nbig_trader = Trader(strategy_function=my_algorithm, \n                    init_fund=1000000, \n                    start_date=start_date, \n                    end_date=end_date, \n                    name=\"Big Trader with more funds\")\ntsx_market.add_trader(big_trader)\n\n# Start the simulation\nwhile not tsx_market.is_the_end():\n    tsx_market.trade_and_forward()\n    \n# Evaluate the performance of the trader\nsmall_trader.log_assets()\nbig_trader.log_assets()\nget_trader_performance_metrics(small_trader) # this line will throw exception because you don't have any transaction\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RedrumSherlock/stockdatamaster",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sdmaster",
    "package_url": "https://pypi.org/project/sdmaster/",
    "platform": null,
    "project_url": "https://pypi.org/project/sdmaster/",
    "project_urls": {
      "Homepage": "https://github.com/RedrumSherlock/stockdatamaster"
    },
    "release_url": "https://pypi.org/project/sdmaster/1.0.7/",
    "requires_dist": [
      "pandas",
      "plotly",
      "matplotlib",
      "numpy",
      "pytz"
    ],
    "requires_python": ">=3.5",
    "summary": "Stock Data Master",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14824772,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "822810e85433eecf914f44d9a0b1e0b5b2177c9b7b7bbc5cbcd8f429474f9274",
          "md5": "c15313e88262693568a09eff0374f7f6",
          "sha256": "9f470c2478136e4d534b3c6ea31a3fe961b9216af5dac45a695015fa49d0bf02"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c15313e88262693568a09eff0374f7f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 33599,
        "upload_time": "2022-02-28T04:14:24",
        "upload_time_iso_8601": "2022-02-28T04:14:24.345175Z",
        "url": "https://files.pythonhosted.org/packages/82/28/10e85433eecf914f44d9a0b1e0b5b2177c9b7b7bbc5cbcd8f429474f9274/sdmaster-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d61e310d400bf125dd9e6cabd3b12d578e5c4637c28bb954de833d6e7061a5cd",
          "md5": "5346ccac5bf741b718de6677fe73c6c4",
          "sha256": "eb38de160292f4acead0b8298fbc3b1302e6fd66e99c9441504f170628d60913"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5346ccac5bf741b718de6677fe73c6c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 27974,
        "upload_time": "2022-02-28T04:14:26",
        "upload_time_iso_8601": "2022-02-28T04:14:26.009783Z",
        "url": "https://files.pythonhosted.org/packages/d6/1e/310d400bf125dd9e6cabd3b12d578e5c4637c28bb954de833d6e7061a5cd/sdmaster-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8eba98f109ce2083547cab801066cda8bb87b3d00bc453a9b1bd7a4204942b9",
          "md5": "d77eea350af3232535cfdfcdfad38567",
          "sha256": "bec5acdea02fe6668dc15752b42e367ced5ccbe7bfd173b43074dbead5b1ec8c"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d77eea350af3232535cfdfcdfad38567",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 33642,
        "upload_time": "2022-02-28T04:55:28",
        "upload_time_iso_8601": "2022-02-28T04:55:28.302435Z",
        "url": "https://files.pythonhosted.org/packages/e8/eb/a98f109ce2083547cab801066cda8bb87b3d00bc453a9b1bd7a4204942b9/sdmaster-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c071fbb96cb681f1a6e552ca583bc594d43917c6b6b2a606f8bc47fd06f77664",
          "md5": "378771a6f1f309cb514ca2595c1f7e2c",
          "sha256": "428a568d3b673dcda9f370c0bbe92c843c4fce7396969013817412425074758b"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "378771a6f1f309cb514ca2595c1f7e2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 28056,
        "upload_time": "2022-02-28T04:55:29",
        "upload_time_iso_8601": "2022-02-28T04:55:29.696427Z",
        "url": "https://files.pythonhosted.org/packages/c0/71/fbb96cb681f1a6e552ca583bc594d43917c6b6b2a606f8bc47fd06f77664/sdmaster-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3b05d47ad7067cb08788cb9e7e98dccb74ada0967d25c23bcf653fbb60eb2f7",
          "md5": "97a69be138962b84694b6584db80f2d2",
          "sha256": "8add00667ffd8fad2fb867b049daabfc737acc9500b368c9a4ae71b1cdcaa927"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97a69be138962b84694b6584db80f2d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 37106,
        "upload_time": "2022-03-01T03:40:10",
        "upload_time_iso_8601": "2022-03-01T03:40:10.026974Z",
        "url": "https://files.pythonhosted.org/packages/e3/b0/5d47ad7067cb08788cb9e7e98dccb74ada0967d25c23bcf653fbb60eb2f7/sdmaster-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bb8d88b0be66803046ebea14470c255d004bc545e97ec53cd92c94499a05813",
          "md5": "2df823fe6c2aa740f4b401b1defe87a6",
          "sha256": "88f07ae704028e8c1f6cdd8cb3f3bd5d783fbf2ef3fc77f1d8d8bf71bb20d0b4"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2df823fe6c2aa740f4b401b1defe87a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 31681,
        "upload_time": "2022-03-01T03:40:11",
        "upload_time_iso_8601": "2022-03-01T03:40:11.290903Z",
        "url": "https://files.pythonhosted.org/packages/3b/b8/d88b0be66803046ebea14470c255d004bc545e97ec53cd92c94499a05813/sdmaster-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b64f0b0231cd97376aa13982d87111d47e411992b6ef549312f6befe5f048a4",
          "md5": "25d533fd05d64fe0822ea20435fa0368",
          "sha256": "db0f1f79db2f7081d0267a0dc328fb4818c9a44a63ce4a0c0bec852cc7aa3687"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25d533fd05d64fe0822ea20435fa0368",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 37952,
        "upload_time": "2022-03-08T04:31:47",
        "upload_time_iso_8601": "2022-03-08T04:31:47.358613Z",
        "url": "https://files.pythonhosted.org/packages/7b/64/f0b0231cd97376aa13982d87111d47e411992b6ef549312f6befe5f048a4/sdmaster-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6603841d28008f6259eba0ae4aa276f14670bf9961a74c72dca230cdcd700a14",
          "md5": "13ad86ec10bac3c3594e84b7b1fff4d8",
          "sha256": "cfb763fa009c30eb6b1f42c5954d1929591dcc448c84263628e2e98635971c9a"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "13ad86ec10bac3c3594e84b7b1fff4d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 32454,
        "upload_time": "2022-03-08T04:31:48",
        "upload_time_iso_8601": "2022-03-08T04:31:48.971938Z",
        "url": "https://files.pythonhosted.org/packages/66/03/841d28008f6259eba0ae4aa276f14670bf9961a74c72dca230cdcd700a14/sdmaster-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05415903bad39e8a06be2dfbecf41994caa7eadc553f5f8e53ff72bb325acaa1",
          "md5": "84d085b930e0d6604fb3d5a18f15734f",
          "sha256": "9b95c1b6b3124ebaf6b4d56089723b5ae01ed3ffa63cbeb27da1f853a10d8508"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84d085b930e0d6604fb3d5a18f15734f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 37986,
        "upload_time": "2022-06-21T02:22:29",
        "upload_time_iso_8601": "2022-06-21T02:22:29.316195Z",
        "url": "https://files.pythonhosted.org/packages/05/41/5903bad39e8a06be2dfbecf41994caa7eadc553f5f8e53ff72bb325acaa1/sdmaster-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7594dd617b39b962d04e333a19c353efe07068f332a3c8ad0f698bba823a669e",
          "md5": "cc860c0e06b1585e59a6a5caedb2d19c",
          "sha256": "62af533baadec256aff2abee6bea7d56303a262b18928f55109cdf29e7b7b63f"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cc860c0e06b1585e59a6a5caedb2d19c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 32503,
        "upload_time": "2022-06-21T02:22:30",
        "upload_time_iso_8601": "2022-06-21T02:22:30.965402Z",
        "url": "https://files.pythonhosted.org/packages/75/94/dd617b39b962d04e333a19c353efe07068f332a3c8ad0f698bba823a669e/sdmaster-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5b89b27696c9ca538ae86a27de65a098fff1908dd9ee606cf1bb127d30cb700",
          "md5": "2e342953f0e6fdae2b647e8bc1a086dd",
          "sha256": "f4fc6a45bd1b042a022ca589ca63e47f6dcaf01c2bb93a0ada505d977748fc10"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e342953f0e6fdae2b647e8bc1a086dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 38041,
        "upload_time": "2022-07-04T03:46:28",
        "upload_time_iso_8601": "2022-07-04T03:46:28.768368Z",
        "url": "https://files.pythonhosted.org/packages/d5/b8/9b27696c9ca538ae86a27de65a098fff1908dd9ee606cf1bb127d30cb700/sdmaster-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c478d0a8db03ca6a56e4ac39adc3469dc21f14e0da1229ca5983d59334292e4",
          "md5": "81c3c6e3c91c13f1b2e739e6688fdb3b",
          "sha256": "f1a84ea88f83e699696addb41ab464f51653ed58cba2be861b4ee837eff66e10"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "81c3c6e3c91c13f1b2e739e6688fdb3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 32574,
        "upload_time": "2022-07-04T03:46:31",
        "upload_time_iso_8601": "2022-07-04T03:46:31.212897Z",
        "url": "https://files.pythonhosted.org/packages/9c/47/8d0a8db03ca6a56e4ac39adc3469dc21f14e0da1229ca5983d59334292e4/sdmaster-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b48f618375eeb63a7f3d72000ee08644c9518dc5628a421332a0b2b336eacbb5",
          "md5": "a37c74f31ef131eb28034343122204d6",
          "sha256": "66d5f8afe839c79e0fd53cf1903b6b5aac552c9454a1c3c732bcc890021bb337"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a37c74f31ef131eb28034343122204d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 38050,
        "upload_time": "2022-07-18T02:18:16",
        "upload_time_iso_8601": "2022-07-18T02:18:16.999085Z",
        "url": "https://files.pythonhosted.org/packages/b4/8f/618375eeb63a7f3d72000ee08644c9518dc5628a421332a0b2b336eacbb5/sdmaster-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90c1e0b4d593fbe9ced615f0abe9c0ccbea810bfa23df2bd7ae6a6f63a0ac718",
          "md5": "7954355172559e2e2a1077c58d07e89d",
          "sha256": "7acde31c64c617a97c59e90d3e21121d13bc9edfce0c739be20fbacb8a40c196"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7954355172559e2e2a1077c58d07e89d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 32572,
        "upload_time": "2022-07-18T02:18:19",
        "upload_time_iso_8601": "2022-07-18T02:18:19.512297Z",
        "url": "https://files.pythonhosted.org/packages/90/c1/e0b4d593fbe9ced615f0abe9c0ccbea810bfa23df2bd7ae6a6f63a0ac718/sdmaster-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47947e3057fa2febf865d47757555ed38bb645f9ef646cbe3c80081e376665c1",
          "md5": "b530fdbe474dd680efcfaf81e857e672",
          "sha256": "532769dcbb86d113d137d9e9838bee3c15d16bad9c4646292763812209b0ee6b"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b530fdbe474dd680efcfaf81e857e672",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 38179,
        "upload_time": "2022-08-21T02:31:30",
        "upload_time_iso_8601": "2022-08-21T02:31:30.637311Z",
        "url": "https://files.pythonhosted.org/packages/47/94/7e3057fa2febf865d47757555ed38bb645f9ef646cbe3c80081e376665c1/sdmaster-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63f1a3396171e94239af48627d01d9e5ff68d1cf505d25e58150b2703b49f8bb",
          "md5": "659919b8fe3e623131d8c99bfea204e2",
          "sha256": "79b9b26aa12a4a55ff2c750f70155c259839ac2c8fbe638dfc8f32c9f2cdae8d"
        },
        "downloads": -1,
        "filename": "sdmaster-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "659919b8fe3e623131d8c99bfea204e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 32699,
        "upload_time": "2022-08-21T02:31:32",
        "upload_time_iso_8601": "2022-08-21T02:31:32.567504Z",
        "url": "https://files.pythonhosted.org/packages/63/f1/a3396171e94239af48627d01d9e5ff68d1cf505d25e58150b2703b49f8bb/sdmaster-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47947e3057fa2febf865d47757555ed38bb645f9ef646cbe3c80081e376665c1",
        "md5": "b530fdbe474dd680efcfaf81e857e672",
        "sha256": "532769dcbb86d113d137d9e9838bee3c15d16bad9c4646292763812209b0ee6b"
      },
      "downloads": -1,
      "filename": "sdmaster-1.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b530fdbe474dd680efcfaf81e857e672",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 38179,
      "upload_time": "2022-08-21T02:31:30",
      "upload_time_iso_8601": "2022-08-21T02:31:30.637311Z",
      "url": "https://files.pythonhosted.org/packages/47/94/7e3057fa2febf865d47757555ed38bb645f9ef646cbe3c80081e376665c1/sdmaster-1.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "63f1a3396171e94239af48627d01d9e5ff68d1cf505d25e58150b2703b49f8bb",
        "md5": "659919b8fe3e623131d8c99bfea204e2",
        "sha256": "79b9b26aa12a4a55ff2c750f70155c259839ac2c8fbe638dfc8f32c9f2cdae8d"
      },
      "downloads": -1,
      "filename": "sdmaster-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "659919b8fe3e623131d8c99bfea204e2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 32699,
      "upload_time": "2022-08-21T02:31:32",
      "upload_time_iso_8601": "2022-08-21T02:31:32.567504Z",
      "url": "https://files.pythonhosted.org/packages/63/f1/a3396171e94239af48627d01d9e5ff68d1cf505d25e58150b2703b49f8bb/sdmaster-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}