{
  "info": {
    "author": "Nina Di Cara",
    "author_email": "ninadicara@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": ".. image:: https://github.com/DynamicGenetics/Spotify-Rehydrator/blob/main/docs/image.png?raw=true\n  :width: 400\n  :alt: Spotify Rehydrator\n\n\n.. |GPLv3 license| image:: https://img.shields.io/badge/License-GPLv3-blue.svg\n   :target: http://perso.crans.org/besson/LICENSE.html\n\n\nRecreate a full dataset of audio features of songs downloaded through Spotify's\n`download my data <https://support.spotify.com/us/article/data-rights-and-privacy-settings/>`_ facility.  \n\nThis requires the files named ``StreamingHistory{n}.json`` where ``{n}`` represents the file number that starts at 0, and goes up to however many files were retrieved.  \n\n\nQuick start\n==============\nExtended documentation is `available on ReadTheDocs <https://spotify-rehydrator.readthedocs.io>`_. An example of using the package to rehydrate a folder of json files is::\n\n  # main.py\n  from spotifyrehydrator import Rehydrator\n  import os\n  import pathlib\n\n  if __name__ == \"__main__\":\n      Rehydrator(\n          os.path.join(pathlib.Path(__file__).parent.absolute(), \"input\"),\n          os.path.join(pathlib.Path(__file__).parent.absolute(), \"output\"),\n          client_id=os.getenv(\"SPOTIFY_CLIENT_ID\"),\n          client_secret=os.getenv(\"SPOTIFY_CLIENT_SECRET\"),\n      ).run(return_all=True)\n\n\nRun takes boolean arguments for ``audio_features`` and ``artist info``, or for ``return_all`` which then returns both. These will determine how much information is retrieved to make up\nthe full dataset that is saved into the output folder. \n\nHow it works\n=============\n#. The files for each person are read from the specified input folder.  \n#. The name and artist provided are searched with the Spotify API. The first result is taken to be the track, and the track ID is recorded.   \n#. Additional information is searched on other endpoints if ``audio_features``, ``artist info`` or ``return_all`` were set to ``True``.\n#. The matched track ID and audio features are saved as one **tab delimited** ``.tsv`` file per person into the specified output folder. \n\nGood to know\n===============\n* Not all tracks can be retreived from the API. In our experience about 5% of tracks cannot be found on the API. These will have a value of NONE in the output files. \n* There is not a guaranteed match between the first returned item in a search and the track you want. Comparing msPlayed with the track length is a good way to test this since msPlayed should not exceed the track length. \n\n\nP.S. Thanks to `Pixel perfect <https://www.flaticon.com/authors/pixel-perfect>`_ for the title `icon <https://www.flaticon.com/>`_. ðŸ™‚ \n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DynamicGenetics/Spotify-Rehydrator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spotifyrehydrator",
    "package_url": "https://pypi.org/project/spotifyrehydrator/",
    "platform": "",
    "project_url": "https://pypi.org/project/spotifyrehydrator/",
    "project_urls": {
      "Bug Tracker": "https://github.com/DynamicGenetics/Spotify-Rehydrator/issues",
      "Homepage": "https://github.com/DynamicGenetics/Spotify-Rehydrator"
    },
    "release_url": "https://pypi.org/project/spotifyrehydrator/0.1.0/",
    "requires_dist": [
      "spotipy (>=2.16)",
      "alive-progress (>=1.6)",
      "pandas (>=1.2)",
      "simplejson (>=3.17)"
    ],
    "requires_python": ">=3.6",
    "summary": "A convenience package for creating datasets of track features from self-requested Spotify data.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9912824,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fadea6d5f81782d0cbbabd562dd5be3de096ded211df93ec10d083e3b2958c7",
          "md5": "fb04f4d30beed675c5300775d029b16b",
          "sha256": "24cae29630c5be531604b160f73d3e6696d4902298a6237d5aa4ba01f57fcb2f"
        },
        "downloads": -1,
        "filename": "spotifyrehydrator-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb04f4d30beed675c5300775d029b16b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19481,
        "upload_time": "2021-03-28T12:01:53",
        "upload_time_iso_8601": "2021-03-28T12:01:53.018670Z",
        "url": "https://files.pythonhosted.org/packages/7f/ad/ea6d5f81782d0cbbabd562dd5be3de096ded211df93ec10d083e3b2958c7/spotifyrehydrator-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2a1c14aa09b13d93db99f4b4fad635285525d24e69d38f5169d305a1a0535dd",
          "md5": "2de04cc281481aba58f6999fdbdc46df",
          "sha256": "d11ecf25e444f30961dd3e7bd08263616b5b3d3fd6ce18a1e65198d3a7dedb07"
        },
        "downloads": -1,
        "filename": "spotifyrehydrator-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2de04cc281481aba58f6999fdbdc46df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8372,
        "upload_time": "2021-03-28T12:01:54",
        "upload_time_iso_8601": "2021-03-28T12:01:54.236848Z",
        "url": "https://files.pythonhosted.org/packages/c2/a1/c14aa09b13d93db99f4b4fad635285525d24e69d38f5169d305a1a0535dd/spotifyrehydrator-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27d808416d85ad9469abb8e9002e3a6fa65c7d086c53c2654b66980ee3e5113a",
          "md5": "26453659663bf8b28f66d9981507b1f9",
          "sha256": "cfa9fc23edced7ba2c6683a10a9be507a6a7f44c5fd89592c09375680c6ccd78"
        },
        "downloads": -1,
        "filename": "spotifyrehydrator-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26453659663bf8b28f66d9981507b1f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25922,
        "upload_time": "2021-03-29T13:40:24",
        "upload_time_iso_8601": "2021-03-29T13:40:24.641051Z",
        "url": "https://files.pythonhosted.org/packages/27/d8/08416d85ad9469abb8e9002e3a6fa65c7d086c53c2654b66980ee3e5113a/spotifyrehydrator-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02227d9d8aa35921853558775293f7a541bc73277f8551c05f5caf499100e92a",
          "md5": "041c0561bd0b9c378fd6039b95dfb3f9",
          "sha256": "d2f619294e86b980e037a933fa999256d9ad2ac79536f32e0425e89e68c4ee56"
        },
        "downloads": -1,
        "filename": "spotifyrehydrator-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "041c0561bd0b9c378fd6039b95dfb3f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10659,
        "upload_time": "2021-03-29T13:40:26",
        "upload_time_iso_8601": "2021-03-29T13:40:26.061845Z",
        "url": "https://files.pythonhosted.org/packages/02/22/7d9d8aa35921853558775293f7a541bc73277f8551c05f5caf499100e92a/spotifyrehydrator-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27d808416d85ad9469abb8e9002e3a6fa65c7d086c53c2654b66980ee3e5113a",
        "md5": "26453659663bf8b28f66d9981507b1f9",
        "sha256": "cfa9fc23edced7ba2c6683a10a9be507a6a7f44c5fd89592c09375680c6ccd78"
      },
      "downloads": -1,
      "filename": "spotifyrehydrator-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "26453659663bf8b28f66d9981507b1f9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 25922,
      "upload_time": "2021-03-29T13:40:24",
      "upload_time_iso_8601": "2021-03-29T13:40:24.641051Z",
      "url": "https://files.pythonhosted.org/packages/27/d8/08416d85ad9469abb8e9002e3a6fa65c7d086c53c2654b66980ee3e5113a/spotifyrehydrator-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "02227d9d8aa35921853558775293f7a541bc73277f8551c05f5caf499100e92a",
        "md5": "041c0561bd0b9c378fd6039b95dfb3f9",
        "sha256": "d2f619294e86b980e037a933fa999256d9ad2ac79536f32e0425e89e68c4ee56"
      },
      "downloads": -1,
      "filename": "spotifyrehydrator-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "041c0561bd0b9c378fd6039b95dfb3f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10659,
      "upload_time": "2021-03-29T13:40:26",
      "upload_time_iso_8601": "2021-03-29T13:40:26.061845Z",
      "url": "https://files.pythonhosted.org/packages/02/22/7d9d8aa35921853558775293f7a541bc73277f8551c05f5caf499100e92a/spotifyrehydrator-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}