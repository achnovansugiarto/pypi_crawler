{
  "info": {
    "author": "aptend",
    "author_email": "aptend@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Text Processing",
      "Topic :: Utilities"
    ],
    "description": "# Leezy ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/leezy?style=plastic) ![PyPI](https://img.shields.io/pypi/v/leezy?style=plastic)\n\n\n给Python的LeetCode刷题工具，在本地管理你的一题多解🍖🍗🥩\n\n\n## Install\n\n在终端执行：\n```shell\n$ pip install leezy\n```\n\n## Examples\n\n0. 设置工作目录\n```shell\n$ leezy config --add core.workdir <DIR>\n```\n例如`leezy config --add core.workdir D:\\leetcode`\n\n1. 拉取题目\n\n\n```shell\n$ leezy pull 1\n```\n\n\n在`workdir`下生成如下目录和文件\n```\n$ tree\n.\n└── 001 - Two Sum\n    ├── 001.html # 题目描述，在浏览器或者其他html预览器中查看\n    └── 001_two-sum.py # solution模板，在这里编辑解法\n```\n\n```python\n# 001_two-sum.py(initial)\nfrom leezy import Solution, solution\n\n\nclass Q001(Solution):  # 继承Solution\n    @solution    # 被solution装饰的函数将参与最后的结果输出或测试\n    def twoSum(self, nums, target):\n        pass\n\n\ndef main():\n    q = Q001()\n    q.add_case(q.case([2, 7, 11, 15], 9)) # 添加自己的测试用例\n    q.run()\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n2. 尝试死磕多种解法\n```python\n# 001_two-sum.py(modified)\nfrom leezy import Solution, solution\n\n\nclass Q001(Solution):\n    @solution\n    def twoSum(self, nums, target):\n        for i,x in enumerate(nums):\n            for j, y in enumerate(nums[i+1:], i+1):\n                if x + y == target:\n                    return [i, j]\n\n    @solution\n    def twoSum_sort(self, nums, target):\n        L, i, j = len(nums), 0, len(nums)-1\n        sorted_i = sorted(range(L), key=nums.__getitem__)\n        while i < j:\n            s = nums[sorted_i[i]] + nums[sorted_i[j]]\n            if s > target:\n                j -= 1\n            elif s < target:\n                i += 1\n            else:\n                return [sorted_i[i], sorted_i[j]]\n\n    @solution\n    def twoSum_hash(self, nums, target):\n        hash_table = {}\n        for i, x in enumerate(nums):\n            another = target - x\n            if x in hash_table:\n                return [hash_table[x], i]\n            else:\n                hash_table[another] = i\n\n\ndef main():\n    q = Q001()\n    q.add_case(q.case([3, 2, 4], 6))\n    q.add_case(q.case([3,3], 6))\n    q.add_case(q.case([2, 7, 11, 15], 9))\n    q.add_case(q.case([2, 7, 11, 15], 17))\n    q.add_case(q.case([2, 7, 11, 15], 26))\n    q.run()\n\n\nif __name__ == \"__main__\":\n    main()\n\n```\n\n3. 运行/查看结果\n```shell\n$ leezy run 1\n+----------+----------+---------------+---------------+\n|          |  twoSum  |  twoSum_sort  |  twoSum_hash  |\n+==========+==========+===============+===============+\n|  case 0  |  [1, 2]  |  [1, 2]       |  [1, 2]       |\n+----------+----------+---------------+---------------+\n|  case 1  |  [0, 1]  |  [0, 1]       |  [0, 1]       |\n+----------+----------+---------------+---------------+\n|  case 2  |  [0, 1]  |  [0, 1]       |  [0, 1]       |\n+----------+----------+---------------+---------------+\n|  case 3  |  [0, 3]  |  [0, 3]       |  [0, 3]       |\n+----------+----------+---------------+---------------+\n|  case 4  |  [2, 3]  |  [2, 3]       |  [2, 3]       |\n+----------+----------+---------------+---------------+\n```\n\n4. 执行测试\n\n在添加测试用例时，可以使用`assert_equal`添加期望的输出，这类测试用例将自动生成测试代码。\n```python\n# 001_two-sum.py(modified, testcase-added)\n\n...\n\ndef main():\n    q = Q001()\n    q.add_case(q.case([3, 2, 4], 6))\n    q.add_case(q.case([3,3], 6))\n    q.add_case(q.case([2, 7, 11, 15], 9).assert_equal([0, 1]))\n    q.add_case(q.case([2, 7, 11, 15], 17).assert_equal([0, 3]))\n    q.add_case(q.case([2, 7, 11, 15], 26).assert_equal([2, 3]))\n    q.run()\n```\n\n运行后，为3个 solution 各自运行3个测试，总共通过9个\n```shell\n$ leezy run 1\n+----------+----------+-----------+\n|          |  twoSum  |  two_sum  |\n+==========+==========+===========+\n|  case 0  |  [1, 2]  |  [1, 2]   |\n+----------+----------+-----------+\n|  case 1  |  [0, 1]  |  [0, 1]   |\n+----------+----------+-----------+\n.........                                                                   [100%]\n9 passed in 0.09s\n```\n\n此外，测试用例支持`assert_true_with(fn)`，传入自定义测试函数。比如第1054题，要求结果数组相邻的两个数不相等，因此可以构建如下的测试函数\n\n```python\nfrom itertools import chain\nfrom collections import Counter\n\n\nclass Q1054(Solution):\n    @solution\n    def rearrangeBarcodes(self, barcodes):\n        # 452ms 92.03%\n        N = len(barcodes)\n        idx = chain(range(0, N, 2), range(1, N, 2))\n        counter = Counter(barcodes)\n        ans = [0] * N\n        for x, cnt in counter.most_common():\n            for _ in range(cnt):\n                ans[next(idx)] = x\n        return ans\n\n\ndef main():\n    q = Q1054()\n\n    def check(A):\n        return all(x != nx for x, nx in zip(A, A[1:])\n\n    q.add_case(q.case([1, 1, 1, 2, 2, 2]).assert_true_with(check))\n    q.add_case(q.case([1, 2, 2, 2, 5]).assert_true_with(check))\n    q.add_case(q.case([1, 1, 1, 1, 2, 2, 3, 3]).assert_true_with(check))\n    q.run()\n```\n\n5. 提交解法\n\n提交第一题的第三个解法\n\n```shell\n$ leezy submit 3@1\nIs it OK to submit function 'twoSum'?\n\nclass Solution:\n    def twoSum(self, nums, target):  \n        hash_table = {}\n        for i, x in enumerate(nums): \n            another = target - x\n            if x in hash_table:\n                return [hash_table[x], i]\n            else:\n                hash_table[another] = i\n\n> [Yes/No]? y\n----------------Accepted!----------------\n  time used & rank: 40 ms faster than 93.07%\nmemory used & rank: 14.9 MB less than 6.25%\n\nmore helpful links:\n    https://leetcode-cn.com/submissions/detail/55171676\n    https://leetcode.com/problems/two-sum/discuss/\n\n```\n\n## Why leezy?\n\nleezy名字来自于leetcode和lazy的组合。懒惰就是生产力。\n\n\n\n如果你有以下标签所描述的倾向，leezy可能会给你一些参考：\n\n【第一遍刷Leetcode】【使用本地编辑器】【愿意尝试一题多解】【少些重复print、测试用例】\n\n还可以通过下面的问题进一步了解为什么要使用leezy\n\n- 为什么不在线刷题？\n\n    首先，因为是第一次做题，希望把重点放在解题本身，环境就使用自己习惯的就好。\n\n    其次，在线run code的速度不稳定，不适合初期的debug。\n\n    最后，在本地记录解法，管理起来更直接，离线也可以随时搜索复习。\n\n    如果是第n遍刷题了，直接上web更方便。\n\n- leezy的核心是什么？\n\n    少写print，少写重复测试用例。和上面提到的标签所暗示的那样，做题大概率不能一次成功，需要在本地用自己的测试用例反复运行，打印结果，修改。当使用多个解法时，又需要重复这些工作。所以一次性写完这些重复的print、测试用例就是leezy最平常且简单的目的\n\n- 和其他刷题工具有什么区别？\n\n    其他的刷题工具，典型的有基于CLI的[leetcode-cli](https://github.com/skygragon/leetcode-cli), 基于VSCode的[leetcode for vscode](https://marketplace.visualstudio.com/items?itemName=shengchen.vscode-leetcode)(也基于leetcode-cli)，都支持完整的刷题流程：用户登录、题目拉取、编写、测试、提交、查看统计数据。本质是把网页版的功能在用另一套接口进行实现。\n\n    leezy虽然也可以登录、拉取、测试以及提交，但相比上述工具，leezy对题目拉取后，**模板文件不再和网页上提供的模板一致，更方便实现一题多解的本地调试**。\n\n\n\n\n## More things\n\n### 命令行\n\n使用`leezy [command]`完成拉取题目及设置相关操作\n```\nusage: leezy [options] COMMAND\n\nManage your Python solutions better\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -V, --version  show program's version number and exit\n  --zone ZONE    'cn' or 'us', default is 'cn'\n  --dir DIR      assign a temporary workdir for this session\n  -v             verbose, use multiple -vv... to show more log\n\nCOMMANDS:\n  use 'leezy <COMMAND> -h' to see more\n\n  -⭐-\n    show         show basic info of problems\n    pull         pull problems to local files\n    run          run your solutions, see outputs or test them\n    submit       submit your solution to leetcode\n    plot         show a heatmap of your all accepted solutions\n    config       manage global configs\n```\n\n其中config支持git风格的属性配置，目前的可配置项为：\n\n\n| name                     | description                                                  | default  |\n| ------------------------ | ------------------------------------------------------------ | -------- |\n| table.max_col_width      | 表格列的最大宽度                                             | 40字符   |\n| table.max_content_length | 每个单元格支持的最长内容长度，超过部分将被截断(-1表示不截断) | 100字符  |\n| core.workdir             | 刷题目录，每次pull、run都将基础该目录                        | 当前目录 |\n| core.zone                | 刷题网站版本，中国区还是美区                                   | cn       |\n| log.level                | 日志等级                                                     | warning  |\n\n---\n\n\n### 辅助类\n\n针对使用链表或者树结构的题目，也提供了和网页版类似的基础类型，初始化的参数也和网页版保持一致。\n\n从`leezy.assists`中导入\n\n```python\nfrom leezy.assists import TreeNode, ListNode\n\nt = TreeNode.make_tree([1, 2, 3, 4, 5, None, 6])\nprint(type(t)) # <class 'leezy.assists.TreeNode'>\nprint(t)       # Tree(1-2-3-4-5-None-6)\nprint(t.left)  # Tree(2-4-5)\nprint(t.right) # Tree(3-None-6)\n\n\nl = ListNode.make_linked_list([1, 2, 3, 4, 5])\nprint(type(l)) # <class 'leezy.assists.ListNode'>\nprint(l)       # 1->2->3->4->5\nprint(l.next)  # 2->3->4->5\n```\n\n现在支持的类型:\n\n- TreeNode\n- ListNode\n\n\n\n除了手动使用`make_tree`, `make_linkedlist`构造，还提供了TreeContext，LinkedListContext，将`add_case`传入的集合类型参数自动构造为树或链表。省得每次添加测试用例都要写`make_*`函数\n\n```python\nfrom leezy import Solution, solution\nfrom leezy.assists import TreeContext # 导入TreeContext\n\n\nclass Q700(Solution):\n    @solution\n    def searchBST(self, root, val):\n        if root is None:\n            return\n        if root.val > val:\n            return self.searchBST(root.left, val)\n        elif root.val < val:\n            return self.searchBST(root.right, val)\n        else:\n            return root\n\n    @solution\n    def search(self, root, val):\n        while root:\n            if root.val > val:\n                root = root.left\n            elif root.val < val:\n                root = root.right\n            else:\n                return root\n        return None\n\n\ndef main():\n    q = Q700()\n    q.set_context(TreeContext)  # 设置TreeContex\n    q.add_case(q.case([4, 2, 7, 1, 3], 2)) # 这里传入的列表自动会被转化为Tree\n    q.run()\n```\n\n为了进一步简化，`pull`命令支持--context选项\n```\n$ leezy pull --context tree 700 701\n```\n\n这样700、701题的源文件自动添加好TreeContext\n\n---\n\n更多功能和限制说明，待更新\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aptend/leezy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "leezy",
    "package_url": "https://pypi.org/project/leezy/",
    "platform": "",
    "project_url": "https://pypi.org/project/leezy/",
    "project_urls": {
      "Homepage": "https://github.com/aptend/leezy"
    },
    "release_url": "https://pypi.org/project/leezy/0.5.3/",
    "requires_dist": [
      "requests (>=2.18.0)",
      "pytest (>=5.1.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "leezy: leetcode helper for the lazy",
    "version": "0.5.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7059407,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c6f5a6fa7893cab8ab9949418acc631bbe73211edb89e87e53b9daa5b4e096f",
          "md5": "4c13b1d95ece046637842c6a4275ffd6",
          "sha256": "3de30d8cd04df3e04eb2edb081999efd32f4f03eb84956e1c9f5eca98a29bcdf"
        },
        "downloads": -1,
        "filename": "leezy-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c13b1d95ece046637842c6a4275ffd6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22314,
        "upload_time": "2020-01-08T02:55:43",
        "upload_time_iso_8601": "2020-01-08T02:55:43.411378Z",
        "url": "https://files.pythonhosted.org/packages/3c/6f/5a6fa7893cab8ab9949418acc631bbe73211edb89e87e53b9daa5b4e096f/leezy-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "318cfab3307eb8a0b4b8a7d4eb990c55dff477c18b85513e7601b71e16602b48",
          "md5": "257d06e8877592036e60eb716e4f3e5d",
          "sha256": "8f8c3cc231a16b1dd5baf82bad8feaddb9c481d6533c45ae5652c55f630abf92"
        },
        "downloads": -1,
        "filename": "leezy-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "257d06e8877592036e60eb716e4f3e5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19211,
        "upload_time": "2020-01-08T02:55:46",
        "upload_time_iso_8601": "2020-01-08T02:55:46.178041Z",
        "url": "https://files.pythonhosted.org/packages/31/8c/fab3307eb8a0b4b8a7d4eb990c55dff477c18b85513e7601b71e16602b48/leezy-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26574e75db09f2c6404952a1eed7189d5c4f8b947b455ab1c161825ab892cf18",
          "md5": "ad8104b654c21dfef82eee90d1a8d6df",
          "sha256": "83834ed4b2a00b24f3426e2f42975d919dc87ad2eac20999f61519e77bef1928"
        },
        "downloads": -1,
        "filename": "leezy-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad8104b654c21dfef82eee90d1a8d6df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22318,
        "upload_time": "2020-01-08T03:17:44",
        "upload_time_iso_8601": "2020-01-08T03:17:44.436656Z",
        "url": "https://files.pythonhosted.org/packages/26/57/4e75db09f2c6404952a1eed7189d5c4f8b947b455ab1c161825ab892cf18/leezy-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51f4419812efaad31fd131990828039804c5cb53b851287a3bd6cd003e37dc66",
          "md5": "87b8556cb668c28b2f42e7002efbb614",
          "sha256": "9793392ae65f2cec014004e694d92cb125dc3c7229611426169fb7ac455a0e98"
        },
        "downloads": -1,
        "filename": "leezy-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "87b8556cb668c28b2f42e7002efbb614",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19222,
        "upload_time": "2020-01-08T03:17:46",
        "upload_time_iso_8601": "2020-01-08T03:17:46.445255Z",
        "url": "https://files.pythonhosted.org/packages/51/f4/419812efaad31fd131990828039804c5cb53b851287a3bd6cd003e37dc66/leezy-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc8b192e47fab48ec18c7ce59a5f0845c1538b728e6d5f95158831478fc9f22a",
          "md5": "1db09d02c296744508e26480ace03905",
          "sha256": "8e20a3e7c14b893950f36bf20ced86a4836a840e8811d44f52b1e46a2a8aa8dc"
        },
        "downloads": -1,
        "filename": "leezy-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1db09d02c296744508e26480ace03905",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21609,
        "upload_time": "2020-01-17T09:06:42",
        "upload_time_iso_8601": "2020-01-17T09:06:42.570999Z",
        "url": "https://files.pythonhosted.org/packages/bc/8b/192e47fab48ec18c7ce59a5f0845c1538b728e6d5f95158831478fc9f22a/leezy-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cde7fc20e94062e453e310d8c56f19f568b44f5afe654ed727828c619a9c295b",
          "md5": "4312dcc1f638b0d1e6c4c3703e51f5c1",
          "sha256": "1bd30bed90bd6c29ee9c1a5aa48478dd61588c64530ac1e44d83b8d9c5b8bec9"
        },
        "downloads": -1,
        "filename": "leezy-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4312dcc1f638b0d1e6c4c3703e51f5c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19651,
        "upload_time": "2020-01-17T09:06:44",
        "upload_time_iso_8601": "2020-01-17T09:06:44.043099Z",
        "url": "https://files.pythonhosted.org/packages/cd/e7/fc20e94062e453e310d8c56f19f568b44f5afe654ed727828c619a9c295b/leezy-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7082a6ac11f1495dacf82f395a772e405915dc822f1c065143352ce85237a89f",
          "md5": "ae5f13749d551bdb7da6b0994e480b13",
          "sha256": "c27454b89873942f8ab654925c63a8347d5a0e657889204e2918215f3ccf2cfe"
        },
        "downloads": -1,
        "filename": "leezy-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae5f13749d551bdb7da6b0994e480b13",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22462,
        "upload_time": "2020-01-25T08:49:06",
        "upload_time_iso_8601": "2020-01-25T08:49:06.346589Z",
        "url": "https://files.pythonhosted.org/packages/70/82/a6ac11f1495dacf82f395a772e405915dc822f1c065143352ce85237a89f/leezy-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52e8e03eda0eb3eaa176c7eb623f8832a53ba489631a8cc0ba347be8916eb73f",
          "md5": "9f1c8551c3f8d2b5d490f64cd4e63c06",
          "sha256": "e8e77106ee4b34c1a89c3fcfccae758a6f1a3379e6a05fc7faab1a161b83bf57"
        },
        "downloads": -1,
        "filename": "leezy-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9f1c8551c3f8d2b5d490f64cd4e63c06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20329,
        "upload_time": "2020-01-25T08:49:08",
        "upload_time_iso_8601": "2020-01-25T08:49:08.186307Z",
        "url": "https://files.pythonhosted.org/packages/52/e8/e03eda0eb3eaa176c7eb623f8832a53ba489631a8cc0ba347be8916eb73f/leezy-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efce4f9c3f5111b9f99ab414fca400c92fd6daa9d499b14c9ce83cb7d476c930",
          "md5": "5bd8736bf1c0d72922e6551d2147cfe9",
          "sha256": "acef29be43485a6bc84ff14347a7a256c5bcab9721b04f90383b27c239b5c0bb"
        },
        "downloads": -1,
        "filename": "leezy-0.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bd8736bf1c0d72922e6551d2147cfe9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22462,
        "upload_time": "2020-02-19T06:03:26",
        "upload_time_iso_8601": "2020-02-19T06:03:26.082905Z",
        "url": "https://files.pythonhosted.org/packages/ef/ce/4f9c3f5111b9f99ab414fca400c92fd6daa9d499b14c9ce83cb7d476c930/leezy-0.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c29da753f0b0982e0d97d9a4ff67e3723f39abb9ebdaa5150805de8edf5eb3e",
          "md5": "f5370ebbb32842c5b1e78cddf9dfa2ed",
          "sha256": "4cacdb41595bacf5c0a1f532d2bdcebd876f187a300207879034fb014bb65251"
        },
        "downloads": -1,
        "filename": "leezy-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f5370ebbb32842c5b1e78cddf9dfa2ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20173,
        "upload_time": "2020-02-19T06:03:27",
        "upload_time_iso_8601": "2020-02-19T06:03:27.439169Z",
        "url": "https://files.pythonhosted.org/packages/0c/29/da753f0b0982e0d97d9a4ff67e3723f39abb9ebdaa5150805de8edf5eb3e/leezy-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a728f1f0db4e7427e8ec0d1d5ee6b61bb6922aa844397fc1aa88116f94ae3ada",
          "md5": "6fc6d2f739b6fdf7841984cb1c12fd0e",
          "sha256": "b755ef52fb8a7dc16dfa98a06902581d34ab4c0a41235f2223e459e6a0bc75c6"
        },
        "downloads": -1,
        "filename": "leezy-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6fc6d2f739b6fdf7841984cb1c12fd0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 32458,
        "upload_time": "2020-04-05T09:58:03",
        "upload_time_iso_8601": "2020-04-05T09:58:03.394211Z",
        "url": "https://files.pythonhosted.org/packages/a7/28/f1f0db4e7427e8ec0d1d5ee6b61bb6922aa844397fc1aa88116f94ae3ada/leezy-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc9d291fde44509bdcfe31bb18ef9771b6c172b54174813cadd178f21bfe6d32",
          "md5": "1b0d013cda7fc59a4f18fba1f994b035",
          "sha256": "95479b065b4f9d54502d07802418a82d78451377b79a0d03558aff51f756a43c"
        },
        "downloads": -1,
        "filename": "leezy-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1b0d013cda7fc59a4f18fba1f994b035",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30163,
        "upload_time": "2020-04-05T09:58:09",
        "upload_time_iso_8601": "2020-04-05T09:58:09.936587Z",
        "url": "https://files.pythonhosted.org/packages/cc/9d/291fde44509bdcfe31bb18ef9771b6c172b54174813cadd178f21bfe6d32/leezy-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f05eed02a13aec29a55b142ed5744a7e022c606c3329ca850ef03aabe8048074",
          "md5": "271c8a38070347d05b0aefe09aa71e23",
          "sha256": "93864411f0c373419b4455a1dd35d23bf83db3aba1e5411acf6293a11c3e3504"
        },
        "downloads": -1,
        "filename": "leezy-0.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "271c8a38070347d05b0aefe09aa71e23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 32595,
        "upload_time": "2020-04-20T11:32:40",
        "upload_time_iso_8601": "2020-04-20T11:32:40.476258Z",
        "url": "https://files.pythonhosted.org/packages/f0/5e/ed02a13aec29a55b142ed5744a7e022c606c3329ca850ef03aabe8048074/leezy-0.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3473dab0736ac91187656816ce7efe2b0e52ad9651d92c59834d5baf96d53aa3",
          "md5": "33d484650a700f179468e606be20fd9d",
          "sha256": "deecf6d75300e34a52311b98ebcc7609b4aef8be5e835dc9991ced701c755156"
        },
        "downloads": -1,
        "filename": "leezy-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "33d484650a700f179468e606be20fd9d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34152,
        "upload_time": "2020-04-20T11:32:41",
        "upload_time_iso_8601": "2020-04-20T11:32:41.676463Z",
        "url": "https://files.pythonhosted.org/packages/34/73/dab0736ac91187656816ce7efe2b0e52ad9651d92c59834d5baf96d53aa3/leezy-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f05eed02a13aec29a55b142ed5744a7e022c606c3329ca850ef03aabe8048074",
        "md5": "271c8a38070347d05b0aefe09aa71e23",
        "sha256": "93864411f0c373419b4455a1dd35d23bf83db3aba1e5411acf6293a11c3e3504"
      },
      "downloads": -1,
      "filename": "leezy-0.5.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "271c8a38070347d05b0aefe09aa71e23",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 32595,
      "upload_time": "2020-04-20T11:32:40",
      "upload_time_iso_8601": "2020-04-20T11:32:40.476258Z",
      "url": "https://files.pythonhosted.org/packages/f0/5e/ed02a13aec29a55b142ed5744a7e022c606c3329ca850ef03aabe8048074/leezy-0.5.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3473dab0736ac91187656816ce7efe2b0e52ad9651d92c59834d5baf96d53aa3",
        "md5": "33d484650a700f179468e606be20fd9d",
        "sha256": "deecf6d75300e34a52311b98ebcc7609b4aef8be5e835dc9991ced701c755156"
      },
      "downloads": -1,
      "filename": "leezy-0.5.3.tar.gz",
      "has_sig": false,
      "md5_digest": "33d484650a700f179468e606be20fd9d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 34152,
      "upload_time": "2020-04-20T11:32:41",
      "upload_time_iso_8601": "2020-04-20T11:32:41.676463Z",
      "url": "https://files.pythonhosted.org/packages/34/73/dab0736ac91187656816ce7efe2b0e52ad9651d92c59834d5baf96d53aa3/leezy-0.5.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}