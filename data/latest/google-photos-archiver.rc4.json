{
  "info": {
    "author": "Scott Ouellette",
    "author_email": "scottx611x@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# google-photos-archiver\n[![CircleCI](https://circleci.com/gh/scottx611x/google-photos-archiver.svg?style=svg&circle-token=54dbe16b5fd34bb8c3a646a479b75f640e1c18b5)](https://circleci.com/gh/scottx611x/google-photos-archiver/tree/main)\n[![codecov](https://codecov.io/gh/scottx611x/google-photos-archiver/branch/main/graph/badge.svg?token=KGmF8LIaY4)](https://codecov.io/gh/scottx611x/google-photos-archiver)\n[![PyPI version](https://badge.fury.io/py/google-photos-archiver.svg)](https://badge.fury.io/py/google-photos-archiver)\n\n* [What?](#what)\n* [Why?](#why)\n* [How?](#how)\n* [Development Pre\\-reqs](#development-pre-reqs)\n  * [Optional Reqs](#optional-reqs)\n* [Getting Started](#getting-started)\n  * [Google Oauth Setup](#google-oauth-setup)\n  * [First Run](#first-run)\n  * [Development Usage](#development-usage)\n  * [\\.\\.\\. with Docker](#-with-docker)\n  * [General Usage](#general-usage)\n  * [Running tests](#running-tests)\n* [Examples](#examples)\n  * [Specify a different download location](#specify-a-different-download-location)\n  * [Download from specific dates (with wildcard support)](#download-from-specific-dates-with-wildcard-support)\n  * [Download Albums and their MediaItems only](#download-albums-and-their-mediaitems-only)\n  * [Download Path Hierarchy](#download-path-hierarchy)\n\n[comment]: <> (Created with https://github.com/ekalinin/github-markdown-toc.go)\n[comment]: <> (brew install github-markdown-toc && cat ./README.md | gh-md-toc)\n\n## What?\n`google-photos-archiver` aims to provide a simple, fast, extensible interface to be able to back up one's Google Photos to a location of their choosing.\n\nI've drawn inspiration from projects such as: https://github.com/mholt/timeliner & https://github.com/gilesknap/gphotos-sync but wanted to cut my teeth in this domain and see what I could come up with myself.\n\n## Why?\n\nI wanted a tool (of my own creation) which could easily provide a copy of mine and my partner's Google Photos libraries, and keep said copy up to date over time.\n\nIn reality I've mainly just needed a distraction from the vicious cycle of wake, work, Netflix, sleep, and I thought it was high time to do a little side project.\n\n## How?\n\n### Development Pre-reqs\n\n- `docker`\n\n... Or\n\n- `python==3.8`\n- [poetry](https://python-poetry.org/docs/#installation) `>=1.0.0`\n\n#### Optional Reqs\n- [pre-commit](https://pre-commit.com/#install)\n  - Run `pre-commit install`\n\n### Getting Started\n\n#### Google Oauth Setup\nThese instructions will help you set up Google OAuth2 client credentials so you can start using `google-photos-archiver`\n\n- While logged into your Google account navigate to [Create a New Project](https://console.developers.google.com/projectcreate)\n- Create one, and switch to using it with the UI dropdown\n- Navigate to `APIs & Services` click on `+ Enable APIs and services`, and enable the `Photos Library API`\n- Navigate back to `APIs & Services` and click on `Credentials`\n- Click on `+ Create Credentials > OAuth client ID`\n- Configure an OAuth consent screen. You can just fill out the required fields and hit Save.\n  - Click `Add Or Remove Scopes` and manually add scope: `https://www.googleapis.com/auth/photoslibrary.readonly`\n  - Accept remaining defaults, save through and return to `Credentials`\n- Click on `+ Create Credentials > OAuth client ID`\n- Make a `\"Desktop App\"`\n- Congrats!, you now have a Client ID and Client Secret\n- Download the associated `client_secret.json` file and make note of its location as we'll be providing it's path to `google-photos-archiver`\n\n#### First Run\nA browser window will be opened during the initial OAuth flow. After successfully authenticating once, a refresh token will be stored for future use (See: `--refresh-token-path`) and will omit the need to reauthenticate.\n\n#### Development Usage\n```\n$ git clone git@github.com:scottx611x/google-photos-archiver.git\n$ poetry install\n$ poetry run google-photos-archiver --help\n```\n\n#### ... with Docker\n\n> Note that some more Docker volume mounting will be warranted here if you want to specify a different path to download to etc.\n> Ref: https://docs.docker.com/storage/volumes\n\n```\n$ docker build . -t google-photos-archiver\n$ docker run -v $PWD:/app/ google-photos-archiver  --help\n```\n\n#### General Usage\n\n```\n$ pip install google-photos-archiver\n$ google-photos-archiver --help\n```\n\n#### Running tests\n```\n$ poetry run pytest\n```\n\n### Examples\n\n#### Specify a different download location\n```\n$ google-photos-archiver archive-media-items --download-path /Volumes/my-big-hdd/downloaded_media\n```\n\n#### Download from specific dates (with wildcard support)\n```\n$ google-photos-archiver archive-media-items --date-filter 2020/*/*,2021/8/22\n$ google-photos-archiver archive-media-items --date-range-filter 2019/8/22-2020/8/22\n```\n\n#### Download Albums and their MediaItems only\n```\n$ google-photos-archiver archive-media-items --albums-only\n```\n\n#### Download Path Hierarchy\n```\n$ tree /<download_path>/downloaded_media/ | head\n/<download_path>/downloaded_media/\n├── 2021\n│ └── 1\n│     ├── 1\n│     │ └── a.jpg\n│     └── 2\n│         └── b.mov\n├── 2020\n│ ├── 1\n│ │ └── 2\n│ │     └── c.jpg\n│ └── 2\n│     └── 3\n│         └── d.jpg\n└── albums\n    └── Album A\n        └── <symlink /<download_path>/downloaded_media/2021/1/1/a.jpg >\n...\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/scottx611x/google-photos-archiver",
    "keywords": "Google Photos,Photo Backup,Media Arcvhival,Data Backup",
    "license": "MIT",
    "maintainer": "Scott Ouellette",
    "maintainer_email": "scottx611x@gmail.com",
    "name": "google-photos-archiver",
    "package_url": "https://pypi.org/project/google-photos-archiver/",
    "platform": "",
    "project_url": "https://pypi.org/project/google-photos-archiver/",
    "project_urls": {
      "Homepage": "https://github.com/scottx611x/google-photos-archiver"
    },
    "release_url": "https://pypi.org/project/google-photos-archiver/0.2.1/",
    "requires_dist": [
      "requests (==2.25.1)",
      "click (==7.1.2)",
      "google-auth-oauthlib (>=0.4.2,<0.5.0)"
    ],
    "requires_python": ">=3.8.0,<4.0.0",
    "summary": "Archives the contents of your Google Photos library to disk",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10296539,
  "releases": {
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "217d5978a6eac2bb93c3c683fa55d72bd969193dbbb0bff1df1868f6d98b25e4",
          "md5": "40b9515f3dd5d85c22f7275b9f21a1a0",
          "sha256": "ee5031e8b34b4a940c2d49a10d43d347b50160852dd5dbff48b22b19baa85995"
        },
        "downloads": -1,
        "filename": "google_photos_archiver-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40b9515f3dd5d85c22f7275b9f21a1a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0,<4.0.0",
        "size": 14892,
        "upload_time": "2021-01-31T21:15:50",
        "upload_time_iso_8601": "2021-01-31T21:15:50.787268Z",
        "url": "https://files.pythonhosted.org/packages/21/7d/5978a6eac2bb93c3c683fa55d72bd969193dbbb0bff1df1868f6d98b25e4/google_photos_archiver-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b844c821a7fbd91badc575adea6d8febbc0bd5c0424eda0014654135b85bb6b9",
          "md5": "e25031d58abecbf14405a5f878295fb3",
          "sha256": "9a52daceac5596dcfc7f205333f9a3079bf92870f30bcd70b68dd8574226b617"
        },
        "downloads": -1,
        "filename": "google-photos-archiver-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e25031d58abecbf14405a5f878295fb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0,<4.0.0",
        "size": 14242,
        "upload_time": "2021-01-31T21:15:49",
        "upload_time_iso_8601": "2021-01-31T21:15:49.615226Z",
        "url": "https://files.pythonhosted.org/packages/b8/44/c821a7fbd91badc575adea6d8febbc0bd5c0424eda0014654135b85bb6b9/google-photos-archiver-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "654d8cdb7c797047561f2ca2b5043969e9b29afdfbfa8b3256740167f3208627",
          "md5": "32af42f0c93e4db5a5c444b9d58fe456",
          "sha256": "03769b0a6e77d42fa4cbff1867265bc1fa3dae5966e87d01bdadc2c7920be260"
        },
        "downloads": -1,
        "filename": "google_photos_archiver-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32af42f0c93e4db5a5c444b9d58fe456",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0,<4.0.0",
        "size": 14892,
        "upload_time": "2021-01-31T21:29:28",
        "upload_time_iso_8601": "2021-01-31T21:29:28.629385Z",
        "url": "https://files.pythonhosted.org/packages/65/4d/8cdb7c797047561f2ca2b5043969e9b29afdfbfa8b3256740167f3208627/google_photos_archiver-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "335f3f03d930db204b2f11b2fbe2c824cd9cbd82739c3d7303ed6109a40d0ad8",
          "md5": "7759afe3ff60b5cf12dbde58d98f3f79",
          "sha256": "028ae5361cc7310e0038d4d7c42e9ad266466387c4086ac45ff7870c48a28453"
        },
        "downloads": -1,
        "filename": "google-photos-archiver-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "7759afe3ff60b5cf12dbde58d98f3f79",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0,<4.0.0",
        "size": 14250,
        "upload_time": "2021-01-31T21:29:27",
        "upload_time_iso_8601": "2021-01-31T21:29:27.452311Z",
        "url": "https://files.pythonhosted.org/packages/33/5f/3f03d930db204b2f11b2fbe2c824cd9cbd82739c3d7303ed6109a40d0ad8/google-photos-archiver-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "874bd4f8aaebf4f3a4d081ea78e499d8cacefd952caefe377535deb2e59bfe9f",
          "md5": "28501aed52adcb3e900fb4248b45775d",
          "sha256": "f2f5fcb7c1c4c1370ec0aa5d3bced5be6cf918e8239fecfd3c6281461ace7319"
        },
        "downloads": -1,
        "filename": "google_photos_archiver-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28501aed52adcb3e900fb4248b45775d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0,<4.0.0",
        "size": 15990,
        "upload_time": "2021-02-09T01:11:09",
        "upload_time_iso_8601": "2021-02-09T01:11:09.201784Z",
        "url": "https://files.pythonhosted.org/packages/87/4b/d4f8aaebf4f3a4d081ea78e499d8cacefd952caefe377535deb2e59bfe9f/google_photos_archiver-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "875704cd27e3c7f20104ce9cc4e2a43f2115d2fa0d5a12b4277ebcbdec1f28a2",
          "md5": "950a87ef077eb348e2479a5c4f193acc",
          "sha256": "c86061419af0d174aafc8f805d66190d75476bf815ddf233940dfb118ca43661"
        },
        "downloads": -1,
        "filename": "google-photos-archiver-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "950a87ef077eb348e2479a5c4f193acc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0,<4.0.0",
        "size": 14715,
        "upload_time": "2021-02-09T01:11:08",
        "upload_time_iso_8601": "2021-02-09T01:11:08.322263Z",
        "url": "https://files.pythonhosted.org/packages/87/57/04cd27e3c7f20104ce9cc4e2a43f2115d2fa0d5a12b4277ebcbdec1f28a2/google-photos-archiver-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b6588c196510bfdb246eb147118282bd776e0052b6dd62d3da9f5c219d9d9dc",
          "md5": "1aec9e646de6d0d73dbcde0edc57ed7b",
          "sha256": "bad687eece0fca23068ff2e51c15c2e285ba7554ca6e05b013a478d711c76372"
        },
        "downloads": -1,
        "filename": "google_photos_archiver-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1aec9e646de6d0d73dbcde0edc57ed7b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0,<4.0.0",
        "size": 16344,
        "upload_time": "2021-05-08T19:57:22",
        "upload_time_iso_8601": "2021-05-08T19:57:22.637228Z",
        "url": "https://files.pythonhosted.org/packages/1b/65/88c196510bfdb246eb147118282bd776e0052b6dd62d3da9f5c219d9d9dc/google_photos_archiver-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75f6f939337e91e8a35bffaf80bb6cded2ac60d16e2a766dd66699e6492530bb",
          "md5": "514e662f1ec699a4a69809cf9ee63197",
          "sha256": "0bf55bef0f2a4a9fa08b2d119a2a414f93246d3d24877e9c65d986d984602ee3"
        },
        "downloads": -1,
        "filename": "google-photos-archiver-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "514e662f1ec699a4a69809cf9ee63197",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0,<4.0.0",
        "size": 15018,
        "upload_time": "2021-05-08T19:57:21",
        "upload_time_iso_8601": "2021-05-08T19:57:21.302130Z",
        "url": "https://files.pythonhosted.org/packages/75/f6/f939337e91e8a35bffaf80bb6cded2ac60d16e2a766dd66699e6492530bb/google-photos-archiver-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b6588c196510bfdb246eb147118282bd776e0052b6dd62d3da9f5c219d9d9dc",
        "md5": "1aec9e646de6d0d73dbcde0edc57ed7b",
        "sha256": "bad687eece0fca23068ff2e51c15c2e285ba7554ca6e05b013a478d711c76372"
      },
      "downloads": -1,
      "filename": "google_photos_archiver-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1aec9e646de6d0d73dbcde0edc57ed7b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.0,<4.0.0",
      "size": 16344,
      "upload_time": "2021-05-08T19:57:22",
      "upload_time_iso_8601": "2021-05-08T19:57:22.637228Z",
      "url": "https://files.pythonhosted.org/packages/1b/65/88c196510bfdb246eb147118282bd776e0052b6dd62d3da9f5c219d9d9dc/google_photos_archiver-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75f6f939337e91e8a35bffaf80bb6cded2ac60d16e2a766dd66699e6492530bb",
        "md5": "514e662f1ec699a4a69809cf9ee63197",
        "sha256": "0bf55bef0f2a4a9fa08b2d119a2a414f93246d3d24877e9c65d986d984602ee3"
      },
      "downloads": -1,
      "filename": "google-photos-archiver-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "514e662f1ec699a4a69809cf9ee63197",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.0,<4.0.0",
      "size": 15018,
      "upload_time": "2021-05-08T19:57:21",
      "upload_time_iso_8601": "2021-05-08T19:57:21.302130Z",
      "url": "https://files.pythonhosted.org/packages/75/f6/f939337e91e8a35bffaf80bb6cded2ac60d16e2a766dd66699e6492530bb/google-photos-archiver-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}