{
  "info": {
    "author": "Michael Moser",
    "author_email": "moser.michael@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Text Processing"
    ],
    "description": "\n# KWCHECKER a verifier and sanitizer for python kwargs parameters\n\n\n\n\n![exploits of a mom ](https://www.explainxkcd.com/wiki/images/5/5f/exploits_of_a_mom.png \"Exploits of a mom\") also see [explain-xkcd]( https://www.explainxkcd.com/wiki/index.php/327:_Exploits_of_a_Mom ) \n\n(fun fact: email addresses can have a apostrophe in them - so that O'Connell will be happy, however that's not a problem, as the sign is allowed only in the first part of the address, and you can't have spaces in the address either. Still: better use sql prepared statements, to be on the safe side)\n\nThe kwchecker package simplifies validation & sanitation of python kwargs parameter, your can define most validations declaratively, in a map.\nSee the following example, where the validator definitions are passed to the ```kwchecker.KwArgsChecker``` constructor.\n\n```\n        def func_to_test(**kwargs):\n            checker = kwchecker.KwArgsChecker(required={\n                    \"first_name\": (\n                        str,\n                        kwchecker.no_regex_validator(\"^\\s*$\", \"Error: empty first name\"),\n                        kwchecker.strip_leading_trailing_space(),\n                        kwchecker.capitalize_first_letter(),\n                    ),\n                    \"last_name\": (\n                        str,\n                        kwchecker.no_regex_validator(r\"^\\s*$\", \"Error: empty last name\"),\n                        kwchecker.strip_leading_trailing_space(),\n                        kwchecker.capitalize_first_letter(),\n                    ),\n\n                    \"title\" : str,\n\n                    \"email\" : kwchecker.email_validator(),\n\n                    \"phone\" : (\n                        kwchecker.regex_validator(r\"^[0-9\\+\\-,\\ \\(\\)#]*$\", \"not a vald phone number\")\n                        )\n                }, opt={\n                    \"mood\": kwchecker.int_range_validator(0, 10),\n                    \"plan\": str\n                })\n\n            checker.validate(kwargs)\n\n```\nThe constructor has two arguments ```required``` receives the definition for mandatory parameters passed via kwargs, ```opt``` receives definitions of optional parameters.\nAn errror is triggered, if an actual parameter in kwargs does not appear in any of these definitions.] The constructor also has an optional ```sanitize_db``` parameter, if set to True then this will removes all ap ' and \" characters.\n\nEach allowed parameter name appears as a key in the dictionary arguments. The value of the entry defines the actual validation/sanitation.\nA type value will check, if the supplied argument is of the requested type\n\n```\"title\" : str``` - this will check if the kwargs parameter ```title``` is of type string.\n\nA funcion value will be either a validation function, or a sanitier function.\n\n```\"email\" : kwchecker.email_validator()``` - this validates that the ```email``` parameter in kwargs is a valid email address. Note that function ```email_validator``` is being called here, as it returns a closure. Most of the verifiers can take additional arguments, like an error message that overrides the default one, therefore I kept with this convention for all validators and sanitizer functions, in order to make it consistent.\n\nYou may pass a tuple of values that are either types or functions. see\n\n```\n\"last_name\": (\n    str,\n    kwchecker.no_regex_validator(r\"^\\s*$\", \"Error: empty last name\"),\n    kwchecker.strip_leading_trailing_space(),\n    kwchecker.capitalize_first_letter(),\n)\n```\nThe action for the kwargs ```last_name``` parameter will first verify that parameter to be of type string, then it will verify, that the value is not an empty string ```kwchecker.no_regex_validator(r\"^\\s*$\", \"Error: empty last name\")```, then it will strip the leading and trailing whitespaces ```kwchecker.strip_leading_trailing_space()```, and capitalize the first letter of the value ```kwchecker.capitalize_first_letter()```\n\n### validation/modifier action on all parameters\n\nYou can add actions on all parameters with the ```on_all_pre``` and ```on_all_post``` parameters. ```on_all_pre`` defines checks and validators that are run before any of the validators defined for any one of the parameters. ```on_all_post``` defines checks and validators that are run after any one of the validators defined for any one of the parameters.\n\nHere is an example that users ```on_all_post```, to strip leading and trailing spaces on all string values.\n\n```\n        def func_to_test(**kwargs):\n            checker = kwchecker.KwArgsChecker(required={\n                    \"first_name\": (\n                        str,\n                        kwchecker.no_regex_validator(\"^\\s*$\", \"Error: empty first name\"),\n                    ),\n                    \"last_name\": (\n                        str,\n                        kwchecker.no_regex_validator(r\"^\\s*$\", \"Error: empty last name\"),\n                                            ),\n\n                    \"title\" : str,\n\n                    \"email\" : kwchecker.email_validator(),\n\n                    \"phone\" : (\n                        kwchecker.regex_validator(r\"^[0-9\\+\\-,\\ \\(\\)#]*$\", \"not a vald phone number\")\n                        )\n                },\n                on_all_post = (kwchecker.strip_leading_trailing_space(), kwchecker.capitalize_first_letter()) \n            )\n\n            checker.validate(kwargs)\n\n```\n\n\n## Installation instructions\n\n```pip install kwchecker```\n\nAlso see the project here [kwchecker](https://pypi.org/project/kwchecker/)\n\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MoserMichael/kwchecker",
    "keywords": "utility",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kwchecker",
    "package_url": "https://pypi.org/project/kwchecker/",
    "platform": "",
    "project_url": "https://pypi.org/project/kwchecker/",
    "project_urls": {
      "Homepage": "https://github.com/MoserMichael/kwchecker"
    },
    "release_url": "https://pypi.org/project/kwchecker/1.1.0/",
    "requires_dist": [
      "validate-email (==1.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "A declarative verifier and sanitizer for python kwargs parameters.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11967439,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87aec2c63adaa6ce5e078c38dc0ada854a7fa5cec64a59790a1ce3c526bf64d2",
          "md5": "ab61160a2b18589af1b4b09c9daff739",
          "sha256": "801f4fb881f0c4511544b1f6c8b430ecd1a25206eab095c6751e27e01a3326cd"
        },
        "downloads": -1,
        "filename": "kwchecker-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab61160a2b18589af1b4b09c9daff739",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5081,
        "upload_time": "2021-11-03T03:38:48",
        "upload_time_iso_8601": "2021-11-03T03:38:48.931854Z",
        "url": "https://files.pythonhosted.org/packages/87/ae/c2c63adaa6ce5e078c38dc0ada854a7fa5cec64a59790a1ce3c526bf64d2/kwchecker-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54c55d9e502fa838ebdf61cd1bc1fe64f314c0b676995d0b3f5f20b5cc1340ef",
          "md5": "e2437211a31fb86f50ea5a9f7922ac96",
          "sha256": "d567c04c4daf233929c885fde186366cf9fa6f59b6c6ab971ec46aa8c1964e22"
        },
        "downloads": -1,
        "filename": "kwchecker-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e2437211a31fb86f50ea5a9f7922ac96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5481,
        "upload_time": "2021-11-03T03:38:50",
        "upload_time_iso_8601": "2021-11-03T03:38:50.870809Z",
        "url": "https://files.pythonhosted.org/packages/54/c5/5d9e502fa838ebdf61cd1bc1fe64f314c0b676995d0b3f5f20b5cc1340ef/kwchecker-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bcddc56ee778df4a8160a8877e3488b7dbb0ac89a91cabd72e5cbadd26da778",
          "md5": "8af06bfe749ffcf96dc516fbc0ac8798",
          "sha256": "741e95d062c6b57c6129beb21f872b256e2b3e937e72e386396ae83d9cc44e9b"
        },
        "downloads": -1,
        "filename": "kwchecker-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8af06bfe749ffcf96dc516fbc0ac8798",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5098,
        "upload_time": "2021-11-03T03:44:50",
        "upload_time_iso_8601": "2021-11-03T03:44:50.468452Z",
        "url": "https://files.pythonhosted.org/packages/2b/cd/dc56ee778df4a8160a8877e3488b7dbb0ac89a91cabd72e5cbadd26da778/kwchecker-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be26abeb3cec828957f3ea684fdbeb687ae4cf60293849774d4435e09efb8634",
          "md5": "d9ddf3ba055f3a87ce905df8939c5012",
          "sha256": "442482b364ecab4a28b9db469aa45244a5ff7aa0d45c723355373750961a423b"
        },
        "downloads": -1,
        "filename": "kwchecker-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d9ddf3ba055f3a87ce905df8939c5012",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5517,
        "upload_time": "2021-11-03T03:44:52",
        "upload_time_iso_8601": "2021-11-03T03:44:52.295760Z",
        "url": "https://files.pythonhosted.org/packages/be/26/abeb3cec828957f3ea684fdbeb687ae4cf60293849774d4435e09efb8634/kwchecker-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3eadff472993ec1e9bd67366bce7c7a03c80629095ceccf9f4ddec23e67d3383",
          "md5": "b2e4f5c46b339a7e88cb912d891e9b06",
          "sha256": "5e9e2394c018029abfa18b8effd17555b3eeaf21c746baa411d1edd75d0fd21d"
        },
        "downloads": -1,
        "filename": "kwchecker-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2e4f5c46b339a7e88cb912d891e9b06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5098,
        "upload_time": "2021-11-03T03:48:10",
        "upload_time_iso_8601": "2021-11-03T03:48:10.306812Z",
        "url": "https://files.pythonhosted.org/packages/3e/ad/ff472993ec1e9bd67366bce7c7a03c80629095ceccf9f4ddec23e67d3383/kwchecker-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7000f463c040f37f19924722cfccd091e4e44f5d4b1e4f2395d5a9c5f1e1885e",
          "md5": "27f54afb5b92aff65c0951ff0efffdb3",
          "sha256": "134e08af703821f5243f7431ef3a4e314586622df9521888e8e0e61d539fd7a5"
        },
        "downloads": -1,
        "filename": "kwchecker-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "27f54afb5b92aff65c0951ff0efffdb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5505,
        "upload_time": "2021-11-03T03:48:12",
        "upload_time_iso_8601": "2021-11-03T03:48:12.513525Z",
        "url": "https://files.pythonhosted.org/packages/70/00/f463c040f37f19924722cfccd091e4e44f5d4b1e4f2395d5a9c5f1e1885e/kwchecker-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "799acda1845b2cc24c2bb4da0b06c0ee50869ea7b4074472bb6c555b7a678c3a",
          "md5": "2b1baca5436e40b2ff8a8de06449d145",
          "sha256": "593d3c67b174381300c81a7b575144ebf81a2d57b25048b2c5db15a90a8192a2"
        },
        "downloads": -1,
        "filename": "kwchecker-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b1baca5436e40b2ff8a8de06449d145",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5559,
        "upload_time": "2021-11-03T08:55:30",
        "upload_time_iso_8601": "2021-11-03T08:55:30.813534Z",
        "url": "https://files.pythonhosted.org/packages/79/9a/cda1845b2cc24c2bb4da0b06c0ee50869ea7b4074472bb6c555b7a678c3a/kwchecker-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ad043d42c81d1846a9e752ed529ded0bc97c6184df9d48d0061fd085c66172d",
          "md5": "a3f6bb28c224af1a431f8fd3486ac5eb",
          "sha256": "e68dce6cbe4318239d0516ce79c4a0833f9aef358935ce8e79c9e67381b2fc9e"
        },
        "downloads": -1,
        "filename": "kwchecker-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a3f6bb28c224af1a431f8fd3486ac5eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6111,
        "upload_time": "2021-11-03T08:55:32",
        "upload_time_iso_8601": "2021-11-03T08:55:32.160481Z",
        "url": "https://files.pythonhosted.org/packages/9a/d0/43d42c81d1846a9e752ed529ded0bc97c6184df9d48d0061fd085c66172d/kwchecker-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfa00c7e75566fc9deb6368e341c9c9841a5471dfd88255059931ecd0ea04b89",
          "md5": "1e622c2295c03e514129ec3c7fb12ac0",
          "sha256": "5307624199e8d26b530c0ed1dea90c436bf870a1dba1e3a18da0b6379ba9e95c"
        },
        "downloads": -1,
        "filename": "kwchecker-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e622c2295c03e514129ec3c7fb12ac0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5663,
        "upload_time": "2021-11-03T09:13:19",
        "upload_time_iso_8601": "2021-11-03T09:13:19.320397Z",
        "url": "https://files.pythonhosted.org/packages/cf/a0/0c7e75566fc9deb6368e341c9c9841a5471dfd88255059931ecd0ea04b89/kwchecker-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79ef2ce8b49dceb58ff3bdc39875f8e66b436a853c067dbfafb8c3f72e526af1",
          "md5": "ff71731b7cb0da6cfdd2e4869c8adbeb",
          "sha256": "4d6fc7bdd49cefab29d4fc14fa1c90379bf65abe843a143c9745f81fa274a325"
        },
        "downloads": -1,
        "filename": "kwchecker-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ff71731b7cb0da6cfdd2e4869c8adbeb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6265,
        "upload_time": "2021-11-03T09:13:20",
        "upload_time_iso_8601": "2021-11-03T09:13:20.352188Z",
        "url": "https://files.pythonhosted.org/packages/79/ef/2ce8b49dceb58ff3bdc39875f8e66b436a853c067dbfafb8c3f72e526af1/kwchecker-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c0f3fe647fbd79939d1b4b8c5ff0ef082be086c4bda171f241f77f63388923b",
          "md5": "12dedb9f752fb80dab42a98c569313b8",
          "sha256": "89bb72f372f8d4e5351f07d981800c841edc4a4b6ae55a25ca68920a50a5230b"
        },
        "downloads": -1,
        "filename": "kwchecker-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12dedb9f752fb80dab42a98c569313b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5953,
        "upload_time": "2021-11-09T01:37:51",
        "upload_time_iso_8601": "2021-11-09T01:37:51.890215Z",
        "url": "https://files.pythonhosted.org/packages/5c/0f/3fe647fbd79939d1b4b8c5ff0ef082be086c4bda171f241f77f63388923b/kwchecker-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed81560ce545a7e495221343a4fdb50c9f4af42f56026fc265842f1547792aa4",
          "md5": "d8d1d2768910c987456f01d8015290a6",
          "sha256": "4cf18a50c4b17cbe3d040e3c6300a7d0b57d8ca1340b267c49a8aa4dcb6e1e6d"
        },
        "downloads": -1,
        "filename": "kwchecker-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d8d1d2768910c987456f01d8015290a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7652,
        "upload_time": "2021-11-09T01:37:53",
        "upload_time_iso_8601": "2021-11-09T01:37:53.348626Z",
        "url": "https://files.pythonhosted.org/packages/ed/81/560ce545a7e495221343a4fdb50c9f4af42f56026fc265842f1547792aa4/kwchecker-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c0f3fe647fbd79939d1b4b8c5ff0ef082be086c4bda171f241f77f63388923b",
        "md5": "12dedb9f752fb80dab42a98c569313b8",
        "sha256": "89bb72f372f8d4e5351f07d981800c841edc4a4b6ae55a25ca68920a50a5230b"
      },
      "downloads": -1,
      "filename": "kwchecker-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12dedb9f752fb80dab42a98c569313b8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5953,
      "upload_time": "2021-11-09T01:37:51",
      "upload_time_iso_8601": "2021-11-09T01:37:51.890215Z",
      "url": "https://files.pythonhosted.org/packages/5c/0f/3fe647fbd79939d1b4b8c5ff0ef082be086c4bda171f241f77f63388923b/kwchecker-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed81560ce545a7e495221343a4fdb50c9f4af42f56026fc265842f1547792aa4",
        "md5": "d8d1d2768910c987456f01d8015290a6",
        "sha256": "4cf18a50c4b17cbe3d040e3c6300a7d0b57d8ca1340b267c49a8aa4dcb6e1e6d"
      },
      "downloads": -1,
      "filename": "kwchecker-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d8d1d2768910c987456f01d8015290a6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7652,
      "upload_time": "2021-11-09T01:37:53",
      "upload_time_iso_8601": "2021-11-09T01:37:53.348626Z",
      "url": "https://files.pythonhosted.org/packages/ed/81/560ce545a7e495221343a4fdb50c9f4af42f56026fc265842f1547792aa4/kwchecker-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}