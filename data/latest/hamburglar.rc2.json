{
  "info": {
    "author": "Adam Musciano",
    "author_email": "amusciano@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "## The Hamburglar\n\n<p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/7833164/51336290-29a79600-1a52-11e9-96a1-beac9207fdab.gif\"></img>\n</p>\n\n\n## Setup\n\nThere are 2 versions of hamburglar, full and lite. The main branch is the full version, and hamburglar lite is on a separate branch.\n\n**Hamburglar**\n\nFull fledged scraping tool for artifact retrieval from multiple sources. There are some dependencies, so install them first: \n\n`pip3 install -r requirements.txt`\n\nHamburglar also has the option of checking against file signatures during a hexdump. It will get skipped if not set up. To get it working, you will need to first create the database and a user:\n\n```sql\nCREATE DATABASE \nCREATE USER 'hamman'@'localhost' IDENTIFIED BY 'deadbeef';\nGRANT ALL PRIVILEGES ON fileSign.signatures TO 'hamman'@'localhost';\n```\n\nThen, run magic_sig_scraper. This can be run on a cronjob to regularly update it, or just run it once:\n\n`python3 magic_sig_scraper.py`\n\n**Hamburglar Lite**\n\nMultithreaded and recursive directory scraping script. Stores useful information with the filepath and finding. Hamburglar lite will never require external packages, and will always remain as a single script. Setup is as simple as requesting the file and using it:\n\n`wget https://raw.githubusercontent.com/needmorecowbell/Hamburglar/hamburglar-lite/hamburglar-lite.py`\n\nThis is designed to be quickly downloaded and executed on a machine.\n\n\n## Operation\n\n```\nusage: hamburglar.py [-h] [-g] [-x] [-v] [-w] [-i] [-o FILE] [-y YARA] path\n\npositional arguments:\n  path                  path to directory, url, or file, depending on flag\n                        used\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -g, --git             sets hamburglar into git mode\n  -x, --hexdump         give hexdump of file\n  -v, --verbose         increase output verbosity\n  -w, --web             sets Hamburgler to web request mode, enter url as path\n  -i, --ioc             uses iocextract to parse contents\n  -o FILE, --out FILE   write results to FILE\n  -y YARA, --yara YARA  use yara ruleset for checking\n```\n\n\n**Directory Traversal**\n\n- `python3 hamburglar.py ~/Directory/`\n    - This will recursively scan for files in the given directory, then analyzes each file for a variety of findings using regex filters\n\n**Single File Analysis**\n\n- `python3 hamburglar.py ~/Directory/file.txt`\n    - This will recursively scan for files in the given directory, then analyzes each file for a variety of findings using regex filters\n\n**YARA Rule Based Analysis**\n- `python3 hamburglar.py -y rules/ ~/Directory`\n    - This will compile the yara rule files in the rules directory and then check them against every item in Directory.\n\n**Git Scraping Mode**\n\n- `python3 hamburglar.py -g https://www.github.com/needmorecowbell/Hamburglar`\n    - Adding `-y <rulepath>` will allow the repo to be scraped using yara rules\n\n**Web Request Mode**\n\n- `python3 hamburglar.py -w https://google.com`\n    - Adding a `-w` to hamburgler.py tells the script to handle the path as a url. \n    - Currently this does not spider the page, it just analyzes the requested html content\n\n**IOC Extraction**\n- `python3 hamburglar.py -w -i https://pastebin.com/SYisR95m`\n    - Adding a `-i` will use iocextract to extract any ioc's from the requested url\n    \n**Hex Dump Mode**\n\n- `python3 hamburglar.py -x ~/file-to-dump`\n    - This just does a hex dump and nothing more right now -- could be piped into a file\n    - This will eventually be used for binary analysis\n    \n**Tips**\n\n- Adding `-v` will set the script into verbose mode, and `-h` will show details of available arguments\n- Adding `-o FILENAME` will set the results filename, this is especially useful in scripting situations where you might want multiple results tables (ie github repo spidering)\n\n## Settings\n\n- `whitelistOn`: turns on or off whitelist checking\n- `maxWorkers`: number of worker threads to run concurrently when reading file stack \n- `whitelist`: list of files or directories to exclusively scan for (if whitelistOn=True)\n- `blacklist`: list of files, extensions, or directories to block in scan\n- `regexList`: dictionary of regex filters with filter type as the key\n\n## The Hamburglar can find\n\n- ipv4 addresses (public and local)\n- emails\n- private keys\n- urls\n- ioc's (using iocextract)\n- cryptocurrency addresses\n- anything you can imagine using regex filters and yara rules\n\n## Example output:\n\n```json\n{\n    \"/home/adam/Dev/test/email.txt\": {\n        \"emails\": \"{'testingtesting@gmail.com'}\"\n    },\n    \"/home/adam/Dev/test/email2.txt\": {\n        \"emails\": \"{'loall@gmail.com'}\"\n    },\n    \"/home/adam/Dev/test/ips.txt\": {\n        \"ipv4\": \"{'10.0.11.2', '192.168.1.1'}\"\n    },\n    \"/home/adam/Dev/test/test2/email.txt\": {\n        \"emails\": \"{'ntested4@gmail.com', 'ntested@gmail.com'}\"\n    },\n    \"/home/adam/Dev/test/test2/ips.txt\": {\n        \"ipv4\": \"{'10.0.11.2', '192.168.1.1'}\"\n    },\n    \"/home/adam/Dev/test/test2/links.txt\": {\n        \"site\": \"{'http://login.web.com'}\"\n    }\n}\n```\n## Contributions ##\n\n- Please contribute! If there's an error let me know -- even better if you can fix it :)\n\n- A big thank you to anyone who has helped:\n\n  - [adi928](https://github.com/adi928)\n  - [jaeger-2601](https://github.com/jaeger-2601)\n  - [tijko](https://github.com/tijko)\n  - [joanbono](https://github.com/joanbono) and [Xumeiquer](https://github.com/Xumeiquer) for the rules from [yara-forensics](https://github.com/Xumeiquer/yara-forensics)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/needmorecowbell/Hamburglar",
    "keywords": "Forensics,Static File Analysis",
    "license": "GNU",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hamburglar",
    "package_url": "https://pypi.org/project/hamburglar/",
    "platform": "",
    "project_url": "https://pypi.org/project/hamburglar/",
    "project_urls": {
      "Homepage": "https://github.com/needmorecowbell/Hamburglar"
    },
    "release_url": "https://pypi.org/project/hamburglar/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "command line tool to collect useful information from urls, directories, and files",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6646232,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3fe0563840d54732cdd9b011dcf5fbb4608197683d98ca2a3bc09af2672ccb6",
          "md5": "9a4675df3c74e0c2249749150265c7e4",
          "sha256": "bae1d6d880b7b9665b6d3c8ca1e69811492ccd8ac97c830ee72cf43012ece31a"
        },
        "downloads": -1,
        "filename": "hamburglar-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9a4675df3c74e0c2249749150265c7e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28757,
        "upload_time": "2020-02-17T14:00:40",
        "upload_time_iso_8601": "2020-02-17T14:00:40.458986Z",
        "url": "https://files.pythonhosted.org/packages/c3/fe/0563840d54732cdd9b011dcf5fbb4608197683d98ca2a3bc09af2672ccb6/hamburglar-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db8efeaf899a58e1fc36aec89771ba3d55cd0364e64788f3b21a4a1a30af3121",
          "md5": "1e9bddb93549b8227b66a2c1a52a39d9",
          "sha256": "bd459e99dcb6ecf7feb7cc430005775036606ff51908930189a8ca3ca1afa6da"
        },
        "downloads": -1,
        "filename": "hamburglar-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1e9bddb93549b8227b66a2c1a52a39d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28708,
        "upload_time": "2020-02-17T14:05:36",
        "upload_time_iso_8601": "2020-02-17T14:05:36.433072Z",
        "url": "https://files.pythonhosted.org/packages/db/8e/feaf899a58e1fc36aec89771ba3d55cd0364e64788f3b21a4a1a30af3121/hamburglar-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db8efeaf899a58e1fc36aec89771ba3d55cd0364e64788f3b21a4a1a30af3121",
        "md5": "1e9bddb93549b8227b66a2c1a52a39d9",
        "sha256": "bd459e99dcb6ecf7feb7cc430005775036606ff51908930189a8ca3ca1afa6da"
      },
      "downloads": -1,
      "filename": "hamburglar-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1e9bddb93549b8227b66a2c1a52a39d9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28708,
      "upload_time": "2020-02-17T14:05:36",
      "upload_time_iso_8601": "2020-02-17T14:05:36.433072Z",
      "url": "https://files.pythonhosted.org/packages/db/8e/feaf899a58e1fc36aec89771ba3d55cd0364e64788f3b21a4a1a30af3121/hamburglar-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}