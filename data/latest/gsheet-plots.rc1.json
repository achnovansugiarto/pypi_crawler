{
  "info": {
    "author": "abhishek pratap singh",
    "author_email": "abhisheklumiamicro@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# gsheetplots_\n\n>gheetplot is small wrapper around  [Google Sheet API](https://developers.google.com/sheets/) ,[Pandas](https://pandas.pydata.org/) and [Matplotlib](https://matplotlib.org/) provide **access** to [Google Sheet](https://docs.google.com/spreadsheets/u/0/) and help to plot graph with desired axis by user .\n\n\nTo access [Google Sheet](https://developers.google.com/sheets/) one need to [Turn_on_the_API ](#Quickstart)  , download service credinatial JSON file and use ``read_spreadsheet()`` to read spreadsheet and underneath it takes the help of [gspread](https://gspread.readthedocs.io/en/latest/) ,[ServiceAccountCredentials](https://oauth2client.readthedocs.io/en/latest/source/oauth2client.service_account.html) to create connection with [Google Sheet API](https://developers.google.com/sheets/api)  and function convert it into a dataframe which can be used data analysis .\n\n\n## Table of contents\n\n\n* [Link](#Link)\n* [Installation](#screenshots)\n* [Quickstart](#Quickstart)\n* [Languages_and_API](#Languages_and_API)\n* [See_Also](#See_Also)\n* [Contact](#contact)\n* [License](#License)\n\n\n## Link\n\n\n\n- [X] GitHub : https://github.com/abhii1/Sheetplot\n- [x] PyPi :\n- [x] Documention : https://github.com/abhii1/Sheetplot\n- [x] Download : https://github.com/abhii1/Sheetplot\n\n\n## Installation\n\n\nThis package runs under ``Python 3.5+ `` ,use [pip](https://pip.pypa.io/en/stable/)  to install\n\n\n     pip install gsheetplot\n\n This will install gsheetplot module you need to install [gspread](https://gspread.readthedocs.io/en/latest/)\n\n Requirements: ``Python 2.7+ or Python 3+``\n ```sh\npip install gspread\n\n```\nyou  need install oauth2client to use  [ServiceAccountCredentials](https://oauth2client.readthedocs.io/en/latest/source/oauth2client.service_account.html)\n\n ```sh\npip install oauth2client\n\n```\n\n## Quickstart\n\n\nLog into the [Google Developers console](https://console.developers.google.com/) with the google account whose spreadsheets you want to access . Create(or select) a project and enable the **Drive APP** and **Sheet API** under (**Google Apps APIs**).\n\nSteps for turn on API\n\n1__ [Go to google API console](https://console.developers.google.com/)\n\n2__  create new project\n\n3__ Click Enable API. Search for and enable the Google Drive API.\n\n4__ Create credentials for a Web Server to access Application Data.\n\n5__ Name the service account and grant it a Project Role of Editor.\n\n6__ Download the JSON file\n 7__ Copy the JSON file to your code directory and rename it to client_secret.json\n\n                              this some how its looklike\n\n\n                              {\n\n                              \"type\": \"service_account\",\n\n                              \"project_id\": \"spreadsheet-291117\",\n\n                              \"private_key_id\":_________________,\n\n                              \"private_key\":  _______ here will be some key,\n\n                              \"client_email\": \"________________,\n\n                              \"client_id\": __________________________,\n\n                              [auth_uri](\"https://accounts.google.com/o/oauth2/auth\"),\n\n                              [token_uri](\"https://oauth2.googleapis.com/token\"),\n\n                              [auth_provider_x509_cert_url](\"https://www.googleapis.com/oauth2/v1/certs\"),\n\n                              [client_x509_cert_url](https://www.googleapis.com/robot/v1/metadata/x509/spreadsheet%40spreadsheet-291117.iam.gserviceaccount.com\"),\n\n                              }\n\n 8__ if you spread sheet is private then you have give drop client_email of JSON file to share with client file\n\n\n Create a object to acces member function and convert into dataframe\n\n ```Python\n\n #import libary\nfrom plotgraph import GET\n\n #url of the spreadsheet\nconnection_url='https://docs.google.com/spreadsheets/d/1077QfadB_V_Nl8-jomsb62RYyrs0_Is-IGlVRl8QF2I/edit?usp=sharing'\n\n#servicecrendiatl JSON file\ndriveouth_json='spreadsheetouth.json'\n\n#creating a object to access member function\n>>> dataframeObj=GET.read_sheet_to_dataframe(connection_url,driveouth_json)\n\n#converting to dataframe\ndataframe=dataframeobj.read_spreadsheet()\n\n\n```\n\nOption for user input\n\n```python\n\n#tuple for X axis and y axis\nX,Y=dataframe.select_axis()\n\n```\n\nplot graph with user input\n\n```python\n#input from user\n>>> X,Y=dataframe.select_axis()\n\n#calling plot function\n\nplot=r.plot_chart(g,X,Y,'line',imagename='test')\n\n\n```\n\nyou can provide range of data example from (200,500)\n\n```python\n\nplot=r.plot_chart(g,X,Y,'line',range=(200,500),imagename='test')\n\n```\nimagename is name of image that will saved in system you can make empty also\n\n```python\n\nplot=r.plot_chart(g,X,Y,'line')\n\n```\n\ndiffrent kind of plot\n\n```python\n\n#plot kde\nplot=r.plot_chart(g,X,Y,'kde')\n\n```\n\n\n## Languages_and_API\n\n\n[<img src=\"https://pluralsight.imgix.net/paths/python-7be70baaac.png?w=70\" width=\"150\" height=\"140\">](https://www.python.org/)\n\n[<img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSsIK2jA5rNj9I7ttMIgAReruBAkUKOPVRr6g&usqp=CAU\" width=\"150\" height=\"140\">](https://developers.google.com/drive)\n\n[<img src=\"https://api.framer.com/store/assets/aroagb/google-sheet-component/artwork.png?ZDg0MzF\" width=\"150\" height=\"140\">](https://developers.google.com/sheets/api)\n\n\n\n## See_also\n\n\n* [Google Sheets API]( https://developers.google.com/sheets/) : Read, write, and format data in Sheets. The latest version of the Sheets API lets developers programmatically\n\n* [Pandas](https://pandas.pydata.org/) : pandas is a software library written for the Python programming language for data manipulation and analysis\n\n* [gspread](https://gspread.readthedocs.io/en/latest/) : Python wrapper, currently using the XML-based ``legacy v3 API`` example ``Jupyter notebook`` using gspread_ to fetch a sheet into a pandas DataFrame\n\n* [matplotlib](https://matplotlib.org/) : Matplotlib is a plotting library for the Python programming language and its numerical mathematics extension NumPy\n\n\n\n\n## Contact\n\n\nCreated by Abhishek pratap singh\n\n[<img src=\"https://cdns.iconmonstr.com/wp-content/assets/preview/2012/240/iconmonstr-linkedin-3.png\" width=\"42\" height=\"42\">](https://www.linkedin.com/in/abhishek-pratap-singh-44a96816b/)\n\n[<img src=\"https://9to5google.com/wp-content/uploads/sites/4/2016/08/gmail-logo.png?w=1280\" width=\"42\" height=\"42\">](abhisheklumiamicro@gmail.com)\n\n\n## License\n\nThis package is distributed under the `MIT license`_.# gsheetplot\n\n>gheetplot is small wrapper around  [Google Sheet API](https://developers.google.com/sheets/) ,[Pandas](https://pandas.pydata.org/) and [Matplotlib](https://matplotlib.org/) provide **access** to [Google Sheet](https://docs.google.com/spreadsheets/u/0/) and help to plot graph with desired axis by user .\n\n\nTo access [Google Sheet](https://developers.google.com/sheets/) one need to [Turn_on_the_API ](#Quickstart)  , download service credinatial JSON file and use ``read_spreadsheet()`` to read spreadsheet and underneath it takes the help of [gspread](https://gspread.readthedocs.io/en/latest/) ,[ServiceAccountCredentials](https://oauth2client.readthedocs.io/en/latest/source/oauth2client.service_account.html) to create connection with [Google Sheet API](https://developers.google.com/sheets/api)  and function convert it into a dataframe which can be used data analysis .\n\n\n## Table of contents\n\n\n* [Link](#Link)        \n* [Installation](#screenshots)\n* [Quickstart](#Quickstart)\n* [Languages_and_API](#Languages_and_API)\n* [See_Also](#See_Also)\n* [Contact](#contact)\n* [License](#License)\n\n\n## Link\n\n\n\n- [X] GitHub :\n- [x] PyPi:\n- [x] Documention:\n- [x] Download\n\n\n## Installation\n\n\nThis package runs under ``Python 3.5+ `` ,use [pip](https://pip.pypa.io/en/stable/)  to install\n\n\n     pip install gsheetplot\n\n This will install gsheetplot module you need to install [gspread](https://gspread.readthedocs.io/en/latest/)\n\n Requirements: ``Python 2.7+ or Python 3+``\n ```sh\npip install gspread\n\n```\nyou  need install oauth2client to use  [ServiceAccountCredentials](https://oauth2client.readthedocs.io/en/latest/source/oauth2client.service_account.html)\n\n ```sh\npip install oauth2client\n\n```\n\n## Quickstart\n\n\nLog into the [Google Developers console](https://console.developers.google.com/) with the google account whose spreadsheets you want to access . Create(or select) a project and enable the **Drive APP** and **Sheet API** under (**Google Apps APIs**).\n\nSteps for turn on API\n\n1__ [Go to google API console](https://console.developers.google.com/)\n\n2__  create new project\n\n3__ Click Enable API. Search for and enable the Google Drive API.\n\n4__ Create credentials for a Web Server to access Application Data.\n\n5__ Name the service account and grant it a Project Role of Editor.\n\n6__ Download the JSON file\n 7__ Copy the JSON file to your code directory and rename it to client_secret.json\n\n                              this some how its looklike\n\n\n                              {\n\n                              \"type\": \"service_account\",\n\n                              \"project_id\": \"spreadsheet-291117\",\n\n                              \"private_key_id\":_________________,\n\n                              \"private_key\":  _______ here will be some key,\n\n                              \"client_email\": \"________________,\n\n                              \"client_id\": __________________________,\n\n                              [auth_uri](\"https://accounts.google.com/o/oauth2/auth\"),\n\n                              [token_uri](\"https://oauth2.googleapis.com/token\"),\n\n                              [auth_provider_x509_cert_url](\"https://www.googleapis.com/oauth2/v1/certs\"),\n\n                              [client_x509_cert_url](https://www.googleapis.com/robot/v1/metadata/x509/spreadsheet%40spreadsheet-291117.iam.gserviceaccount.com\"),\n\n                              }\n\n 8__ if you spread sheet is private then you have give drop client_email of JSON file to share with client file\n\n\n Create a object to acces member function and convert into dataframe\n\n ```Python\n\n #import libary\n >>> from gsheetplot import GET\n\n #url of the spreadsheet\nconnection_url='https://docs.google.com/spreadsheets/d/1077QfadB_V_Nl8-jomsb62RYyrs0_Is-IGlVRl8QF2I/edit?usp=sharing'\n\n#servicecrendiatl JSON file\ndriveouth_json='spreadsheetouth.json'\n\n#creating a object to access member function\n>>> dataframeObj=GET.read_sheet_to_dataframe(connection_url,driveouth_json)\n\n#converting to dataframe\ndataframe=dataframeobj.read_spreadsheet()\n\n\n```\n\nOption for user input\n\n```python\n\n#tuple for X axis and y axis\nX,Y=dataframe.select_axis()\n\n```\n\nplot graph with user input\n\n```python\n#input from user\n>>> X,Y=dataframe.select_axis()\n\n#calling plot function\n\nplot=r.plot_chart(g,X,Y,'line',imagename='test')\n\n\n```\n\nyou can provide range of data example from (200,500)\n\n```python\n\nplot=r.plot_chart(g,X,Y,'line',range=(200,500),imagename='test')\n\n```\nimagename is name of image that will saved in system you can make empty also\n\n```python\n\nplot=r.plot_chart(g,X,Y,'line')\n\n```\n\ndiffrent kind of plot\n\n```python\n\n#plot kde\nplot=r.plot_chart(g,X,Y,'kde')\n\n```\n\n\n## Languages_and_API\n\n\n[<img src=\"https://pluralsight.imgix.net/paths/python-7be70baaac.png?w=70\" width=\"150\" height=\"140\">](https://www.python.org/)\n\n[<img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSsIK2jA5rNj9I7ttMIgAReruBAkUKOPVRr6g&usqp=CAU\" width=\"150\" height=\"140\">](https://developers.google.com/drive)\n\n[<img src=\"https://api.framer.com/store/assets/aroagb/google-sheet-component/artwork.png?ZDg0MzF\" width=\"150\" height=\"140\">](https://developers.google.com/sheets/api)\n\n\n\n## See_also\n\n\n*[Google Sheets API]( https://developers.google.com/sheets/) help you to under stand how enable API\n\n*[Pandas](https://pandas.pydata.org/) for more information in data manupulations and other feature\n\n*[gspread](https://gspread.readthedocs.io/en/latest/)Python wrapper, currently using the XML-based ``legacy v3 API`` example ``Jupyter notebook`` using gspread_ to fetch a sheet into a pandas DataFrame\n\n*[matplotlib](https://matplotlib.org/) it will provide helpfull feature to change title,label ,color etc of graph\n\n*[ServiceAccountCredentials](https://oauth2client.readthedocs.io/en/latest/source/oauth2client.service_account.html) it will help to understand about connection of API in python\n\n\n\n## Contact\n\n\nCreated by Abhishek pratap singh\n\n[<img src=\"https://cdns.iconmonstr.com/wp-content/assets/preview/2012/240/iconmonstr-linkedin-3.png\" width=\"42\" height=\"42\">](https://www.linkedin.com/in/abhishek-pratap-singh-44a96816b/)\n\n[<img src=\"https://9to5google.com/wp-content/uploads/sites/4/2016/08/gmail-logo.png?w=1280\" width=\"42\" height=\"42\">](abhisheklumiamicro@gmail.com)\n\n\n## License\n\nThis package is distributed under the `MIT license`_.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/abhii1/gsheetplot",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gsheet-plots",
    "package_url": "https://pypi.org/project/gsheet-plots/",
    "platform": "",
    "project_url": "https://pypi.org/project/gsheet-plots/",
    "project_urls": {
      "Homepage": "https://github.com/abhii1/gsheetplot"
    },
    "release_url": "https://pypi.org/project/gsheet-plots/0.0.0/",
    "requires_dist": [
      "gspread",
      "oauth2client"
    ],
    "requires_python": ">=3.6",
    "summary": "gsheet will help to create your connection between google sheet and python through API and help to plot graph by you choice",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8382238,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c35e2fcad624bdb6848e5b77b77fee4427c4b7d6e792baa7863a7e0e518a4bd9",
          "md5": "a3e9ee95065556195d4effc596265e49",
          "sha256": "c96ffd45f7a2431a433293ca2de6ca626c9da978876e8c5f8743a246dc6b5728"
        },
        "downloads": -1,
        "filename": "gsheet_plots-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3e9ee95065556195d4effc596265e49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7329,
        "upload_time": "2020-10-10T11:30:28",
        "upload_time_iso_8601": "2020-10-10T11:30:28.633463Z",
        "url": "https://files.pythonhosted.org/packages/c3/5e/2fcad624bdb6848e5b77b77fee4427c4b7d6e792baa7863a7e0e518a4bd9/gsheet_plots-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccbcb7df104e0e22a82b3ec26816bad31a7733e53fa2880e6dae8a4dbb4d917f",
          "md5": "f54d0724c3df34a11eee075f477c308e",
          "sha256": "61de34d834ff8dced26005842f30edb83b83e953243a643680f1de0075214a3d"
        },
        "downloads": -1,
        "filename": "gsheet_plots-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f54d0724c3df34a11eee075f477c308e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7013,
        "upload_time": "2020-10-10T11:30:32",
        "upload_time_iso_8601": "2020-10-10T11:30:32.510253Z",
        "url": "https://files.pythonhosted.org/packages/cc/bc/b7df104e0e22a82b3ec26816bad31a7733e53fa2880e6dae8a4dbb4d917f/gsheet_plots-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c35e2fcad624bdb6848e5b77b77fee4427c4b7d6e792baa7863a7e0e518a4bd9",
        "md5": "a3e9ee95065556195d4effc596265e49",
        "sha256": "c96ffd45f7a2431a433293ca2de6ca626c9da978876e8c5f8743a246dc6b5728"
      },
      "downloads": -1,
      "filename": "gsheet_plots-0.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a3e9ee95065556195d4effc596265e49",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7329,
      "upload_time": "2020-10-10T11:30:28",
      "upload_time_iso_8601": "2020-10-10T11:30:28.633463Z",
      "url": "https://files.pythonhosted.org/packages/c3/5e/2fcad624bdb6848e5b77b77fee4427c4b7d6e792baa7863a7e0e518a4bd9/gsheet_plots-0.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ccbcb7df104e0e22a82b3ec26816bad31a7733e53fa2880e6dae8a4dbb4d917f",
        "md5": "f54d0724c3df34a11eee075f477c308e",
        "sha256": "61de34d834ff8dced26005842f30edb83b83e953243a643680f1de0075214a3d"
      },
      "downloads": -1,
      "filename": "gsheet_plots-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f54d0724c3df34a11eee075f477c308e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7013,
      "upload_time": "2020-10-10T11:30:32",
      "upload_time_iso_8601": "2020-10-10T11:30:32.510253Z",
      "url": "https://files.pythonhosted.org/packages/cc/bc/b7df104e0e22a82b3ec26816bad31a7733e53fa2880e6dae8a4dbb4d917f/gsheet_plots-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}