{
  "info": {
    "author": "Frank Falor",
    "author_email": "ffalorjr@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Flask-GithubApplication\n\n![PyPI - Downloads](https://img.shields.io/pypi/dm/Flask-GithubApplication) [![CodeQL](https://github.com/ffalor/flask-githubapplication/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/ffalor/flask-githubapplication/actions/workflows/codeql-analysis.yml)\n\nFlask extension for rapid Github app development in Python, in the spirit of [probot](https://probot.github.io/)\n\nGitHub Apps help automate GitHub workflows. Examples include preventing merging of pull requests with \"WIP\" in the title or closing stale issues and pull requests.\n\n## Getting Started\n\n### Installation\n\nTo install Flask-GitHubApplication:\n\n`pip install flask-githubapplication`\n\n### Create GitHub App\n\nFollow GitHub's docs on [creating a github app](https://developer.github.com/apps/building-github-apps/creating-a-github-app/).\n\n> You can, in principle, register any type of payload to be sent to the app!\n\nOnce you do this, please note down the GitHub app Id, the GitHub app secret, and make sure to [create a private key](https://docs.github.com/en/developers/apps/authenticating-with-github-apps#generating-a-private-key) for it! These three elements are **required** to run your app.\n\n#### Build the Flask App\n\nThe GithubApp package has a decorator, `@on`, that will allow you to register events, and actions, to specific functions.\nFor instance,\n\n```python\n@github_app.on('issues.opened')\ndef cruel_closer():\n    #do stuff here\n```\n\nWill trigger whenever the app receives a Github payload with the `X-Github-Event` header set to `issues`, and an `action` field in the payload field containing `opened`\n\nFollowing this logic, you can make your app react in a unique way for every combination of event and action. Refer to the Github documentation for all the details about events and the actions they support, as well as for sample payloads for each.\nYou can also have something like\n\n```python\n@github_app.on('issues')\ndef issue_tracker():\n    #do stuff here\n```\n\nThe above function will do `stuff here` for _every_ `issues` event received. This can be useful for specific workflows, to bring developers in early.\n\nInside the function, you can access the received request via the conveniently named `request` variable. You can access its payload by simply getting it: `request.payload`\n\nYou can find a complete example (containing this cruel_closer function), in the samples folder of this repo. It is a fully functioning flask Github App.\n\n#### Run it locally\n\nFor quick iteration, you can set up your environment as follows:\n\n```bash\nEXPORT GITHUBAPP_SECRET=False # this will circumvent request verification\nEXPORT FLASK_APP=/path/to/your/flask/app.py # the file does not need to be named app.py! But it has to be the python file that instantiates the Flask app. For instance, samples/cruel_closer/app.py\n```\n\nThis will make your flask application run in debug mode. This means that, as you try sending payloads and tweak functions, fix issues, etc., as soon as you save the python code, the flask application will reload itself and run the new code immediately.\nOnce that is in place, run your github app\n\n```bash\nflask run\n```\n\nNow, you can send requests! The port is 5000 by default but that can also be overridden. Check `flask run --help` for more details. Anyway! Now, on to sending test payloads!\n\n```bash\ncurl -H \"X-GitHub-Event: <your_event>\" -H \"Content-Type: application/json\" -X POST -d @./path/to/payload.json http://localhost:5000\n```\n\n#### Install your GitHub App\n\n**Settings** > **Applications** > **Configure**\n\n> If you were to install the cruel closer app, any repositories that you give the GitHub app access to will cruelly close all new issues, be careful.\n\n#### Deploy your GitHub App\n\nBear in mind that you will need to run the app _somewhere_. It is possible, and fairly easy, to host the app in something like Kubernetes, or simply containerised, in a machine somewhere. You will need to be careful to expose the flask app port to the outside world so the app can receive the payloads from Github. The deployed flask app will need to be reachable from the same URL you set as the `webhook url`. However, this is getting a little bit into Docker/Kubernetes territory so we will not go too deep.\n\n## Usage\n\n### `GitHubApp` Instance Attributes\n\n`payload`: In the context of a hook request, a Python dict representing the hook payload (raises a `RuntimeError`\noutside a hook context).\n\n`installation_token`: The token used to authenticate as the app installation. This can be used to call api's not supported by `GhApi` like [Github's GraphQL API](https://docs.github.com/en/graphql/reference)\n\n### `GithubApp` Instance Methods\n\n`client`: a [GhApi](https://ghapi.fast.ai/) client authenticated as the app installation (raises a `RuntimeError` inside a hook context without a valid request)\n\n## Configuration\n\n`GITHUBAPP_ID`: GitHub app ID as an int (required). Default: None\n\n`GITHUBAPP_KEY`: Private key used to sign access token requests as bytes or utf-8 encoded string (required). Default: None\n\n`GITHUBAPP_SECRET`: Secret used to secure webhooks as bytes or utf-8 encoded string (required). Set to `False` to disable\nverification.\n\n`GITHUBAPP_URL`: URL of GitHub instance (used for GitHub Enterprise) as a string. Default: None\n\n`GITHUBAPP_ROUTE`: Path used for GitHub hook requests as a string. Default: '/'\n\nYou can find an example on how to init all these config variables in the [cruel_closer sample app](./samples/cruel_closer)\n\n#### Cruel Closer\n\nThe cruel*closer sample app will use information of the received payload (which is received every time an issue is opened), will \\_find* said issue and **close it** without regard.\n\n## Credits:\n\nMuch of this project originated from [flask-github](https://github.com/bradshjg/flask-githubapp). It currently uses [Github3.py](https://github3py.readthedocs.io/en/master/) which was missing many endpoints and lacked good documentation.\n\nThis version will be using [GhApi](https://ghapi.fast.ai/) instead since it has 100% api coverage.\n\nDue to the breaking nature and downstream effects of this changes, a new project was created.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ffalor/flask-githubapplication",
    "keywords": "",
    "license": "GNU3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Flask-GitHubApplication",
    "package_url": "https://pypi.org/project/Flask-GitHubApplication/",
    "platform": "",
    "project_url": "https://pypi.org/project/Flask-GitHubApplication/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ffalor/flask-githubapplicatio/issues",
      "Homepage": "https://github.com/ffalor/flask-githubapplication"
    },
    "release_url": "https://pypi.org/project/Flask-GitHubApplication/1.2.0/",
    "requires_dist": [
      "flask (==2.0.1)",
      "ghapi (==0.1.19)",
      "requests (==2.22.0)",
      "pyjwt[crypto] (==2.1.0)"
    ],
    "requires_python": "",
    "summary": "Flask extension for creating Github Apps",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11226726,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f1a57e4247f55114866e02e5cb0a0e4b1c1ec7e304f1b8f3d8301ed39647ff0",
          "md5": "08d5b53372b85f508d630c3828fa1a71",
          "sha256": "8c755189b4157f2ad5715f0e5585665553252ce0aa3f2c8d0c9548ab9ed2fe7e"
        },
        "downloads": -1,
        "filename": "Flask_GitHubApplication-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08d5b53372b85f508d630c3828fa1a71",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20358,
        "upload_time": "2021-08-19T20:41:12",
        "upload_time_iso_8601": "2021-08-19T20:41:12.630782Z",
        "url": "https://files.pythonhosted.org/packages/3f/1a/57e4247f55114866e02e5cb0a0e4b1c1ec7e304f1b8f3d8301ed39647ff0/Flask_GitHubApplication-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89046dfdce58b478bbaa1454e4bd1e77dc03989d8447c526aafc4d5e803d1a11",
          "md5": "c42e12aa29c931a24e2fa0ddbf629d39",
          "sha256": "a97e6a8d5f5942d4d897ac83dc944485e4ff0413eded4c8542d5e210bb135a41"
        },
        "downloads": -1,
        "filename": "Flask-GitHubApplication-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c42e12aa29c931a24e2fa0ddbf629d39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19730,
        "upload_time": "2021-08-19T20:41:13",
        "upload_time_iso_8601": "2021-08-19T20:41:13.516739Z",
        "url": "https://files.pythonhosted.org/packages/89/04/6dfdce58b478bbaa1454e4bd1e77dc03989d8447c526aafc4d5e803d1a11/Flask-GitHubApplication-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41f47d645d6df257a2ba5dbd97ca4fe42b9d982917075c79e8729f1ed089e875",
          "md5": "585f608b93670aaf46079246f9a63625",
          "sha256": "8495a3b86fdf944de695946148b100b0c3b0e278435a4e41eb19259590842dc0"
        },
        "downloads": -1,
        "filename": "Flask_GitHubApplication-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "585f608b93670aaf46079246f9a63625",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20387,
        "upload_time": "2021-08-19T21:35:39",
        "upload_time_iso_8601": "2021-08-19T21:35:39.338785Z",
        "url": "https://files.pythonhosted.org/packages/41/f4/7d645d6df257a2ba5dbd97ca4fe42b9d982917075c79e8729f1ed089e875/Flask_GitHubApplication-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9f14ec384e9a0df40abc02eef4a60f88fb2fe6a92c3a7ea7b79cde053e3a61a",
          "md5": "419c16af52f62f55312a5589d8fc6d04",
          "sha256": "0bba1e5288905d6ea54f88026c306e68c3296311bc8ee00fa37ef531c53f82f8"
        },
        "downloads": -1,
        "filename": "Flask-GitHubApplication-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "419c16af52f62f55312a5589d8fc6d04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19771,
        "upload_time": "2021-08-19T21:35:41",
        "upload_time_iso_8601": "2021-08-19T21:35:41.022775Z",
        "url": "https://files.pythonhosted.org/packages/d9/f1/4ec384e9a0df40abc02eef4a60f88fb2fe6a92c3a7ea7b79cde053e3a61a/Flask-GitHubApplication-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41f47d645d6df257a2ba5dbd97ca4fe42b9d982917075c79e8729f1ed089e875",
        "md5": "585f608b93670aaf46079246f9a63625",
        "sha256": "8495a3b86fdf944de695946148b100b0c3b0e278435a4e41eb19259590842dc0"
      },
      "downloads": -1,
      "filename": "Flask_GitHubApplication-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "585f608b93670aaf46079246f9a63625",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20387,
      "upload_time": "2021-08-19T21:35:39",
      "upload_time_iso_8601": "2021-08-19T21:35:39.338785Z",
      "url": "https://files.pythonhosted.org/packages/41/f4/7d645d6df257a2ba5dbd97ca4fe42b9d982917075c79e8729f1ed089e875/Flask_GitHubApplication-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d9f14ec384e9a0df40abc02eef4a60f88fb2fe6a92c3a7ea7b79cde053e3a61a",
        "md5": "419c16af52f62f55312a5589d8fc6d04",
        "sha256": "0bba1e5288905d6ea54f88026c306e68c3296311bc8ee00fa37ef531c53f82f8"
      },
      "downloads": -1,
      "filename": "Flask-GitHubApplication-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "419c16af52f62f55312a5589d8fc6d04",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19771,
      "upload_time": "2021-08-19T21:35:41",
      "upload_time_iso_8601": "2021-08-19T21:35:41.022775Z",
      "url": "https://files.pythonhosted.org/packages/d9/f1/4ec384e9a0df40abc02eef4a60f88fb2fe6a92c3a7ea7b79cde053e3a61a/Flask-GitHubApplication-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}