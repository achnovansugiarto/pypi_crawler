{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# injectool\n\n[![example branch parameter](https://github.com/eumis/injectool/actions/workflows/ci.yml/badge.svg?branch=dev)](https://github.com/eumis/injectool/actions/workflows/ci.yml?query=branch%3Adev++)\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/9945bfa38f9845e68c7dfcd8d02048cb)](https://www.codacy.com/gh/eumis/injectool/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=eumis/injectool&amp;utm_campaign=Badge_Grade)\n[![Codacy Badge](https://app.codacy.com/project/badge/Coverage/9945bfa38f9845e68c7dfcd8d02048cb)](https://www.codacy.com/gh/eumis/injectool/dashboard?utm_source=github.com&utm_medium=referral&utm_content=eumis/injectool&utm_campaign=Badge_Coverage)\n[![image](https://img.shields.io/pypi/v/injectool.svg)](https://python.org/pypi/injectool)\n[![image](https://img.shields.io/pypi/pyversions/injectool.svg)](https://python.org/pypi/injectool)\n[![image](https://img.shields.io/pypi/l/injectool.svg)](https://python.org/pypi/injectool)\n[![Downloads](https://static.pepy.tech/personalized-badge/injectool?period=total&units=international_system&left_color=grey&right_color=orange&left_text=Downloads)](https://pepy.tech/project/injectool)\n\nLightweight dependency injection tool.\n\n## Installation\n\nInstall using pip:\n\n`pip install injectool`\n\n## How to use\n\n### Injecting\n\nhttps://github.com/eumis/injectool/blob/dev/injectool/injection.py\n\n#### resolve()\n```python\nimport injectool\n\ninstance = injectool.resolve(SomeClass)\nfunction = injectool.resolve(some_function)\nvalue = injectool.resolve('some_value')\n```\n\n#### inject decorator\n\n```python\nimport injectool\nfrom typing import Callable\n\nclass DependenciesUser:\n    @injectool.inject(instance=SomeClass)\n    def __init__(self, instance: SomeClass = injectool.In):\n        pass\n\n    @injectool.inject(function=some_function)\n    def some_method(self, function: Callable = injectool.In):\n        pass\n\n@injectool.inject(value='some_value')\ndef use_some_value(value: int = injectool.In):\n    pass\n```\n\n#### dependency decorator\n\n```python\nimport injectool\n\n@injectool.dependency\ndef some_function():\n    return 'some_function'\n\ndef some_function_implementation():\n    return 'some_function implementation'\n\ninjectool.add_singleton(some_function, some_function_implementation)\n\nvalue = some_function() # value: some_function implementation\n```\n\n### Dependencies\n\nhttps://github.com/eumis/injectool/blob/dev/injectool/resolvers.py\n\n#### Singleton\n\n```python\nimport injectool\n\ninjectool.add_singleton('some_value', 54)\nsome_value = injectool.resolve('some_value')\n\ninjectool.add_singleton(SomeClass, SomeClassImplementation())\ninstance: SomeClass = injectool.resolve(SomeClass)\n```\n\n#### Type\n\nNew instance is created for every resolving.\n\n```python\nimport injectool\n\ninjectool.add_type(SomeClass, SomeClassImplementation)\n\ninstance = injectool.resolve(SomeClass)\n```\n\n#### Scoped\n\nOne instance is created per scope.\n\n```python\nimport injectool\n\ninjectool.add_scoped(SomeClass, SomeClassImplementation)\n\nwith injectool.scope():\n    instance1: SomeClass = injectool.resolve(SomeClass)\n\nwith injectool.scope():\n    instance2: SomeClass = injectool.resolve(SomeClass)\n```\n\nDispose method can be passed to add_type method.\nThe method will be called on closing scope.\n\n```python\nimport injectool\n\ndef dispose(instance: SomeClassImplementation):\n    pass\n\ninjectool.add_scoped(SomeClass, SomeClassImplementation, dispose)\n\nwith injectool.scope():\n    injectool.resolve(SomeClass)\n```\n\n#### Thread\n\nOne instance is created per thread.\n\n```python\nimport injectool\nfrom threading import Thread\nfrom concurrent.futures.thread import ThreadPoolExecutor\n\ninjectool.add_per_thread(SomeClass, SomeClassImplementation)\n\none = injectool.resolve(SomeClass)\n\ndef thread_target():\n    two = injectool.resolve(SomeClass)\n\nthread = Thread(target=thread_target)\nthread.start()\n\n\nwith ThreadPoolExecutor(max_workers=1) as executor:\n    future = executor.submit(injectool.resolve, SomeClass)\n    three = future.result()\n```\n\n#### Custom resolver\n\n```python\nimport injectool\n\ninjectool.add('some_value', lambda: 54)\nsome_value = injectool.resolve('some_value')\n\ninjectool.add(SomeClass, lambda: SomeClassImplementation())\ninstance: SomeClass = injectool.resolve(SomeClass)\n```\n\n## How it works\n\nAll dependencies are stored in **Container**.\n\nBasically Container is just a dictionary with **Dependency** used as a key and **Resolver** used as a value.\n\nAny object can be used as **Dependency**.\n\n**Resolver** is function that returns value for a **Dependency**.\n\nhttps://github.com/eumis/injectool/blob/dev/injectool/core.py#L12-37\n<!-- MARKDOWN-AUTO-DOCS:START (CODE:src=./injectool/core.py&lines=12-37) -->\n<!-- The below code snippet is automatically added from ./injectool/core.py -->\n```py\nDependency = Any\nResolver = Callable[[], Any]\n\n\nclass Container:\n    \"\"\"Container for dependencies\"\"\"\n\n    def __init__(self, resolvers: Optional[Dict[Dependency, Resolver]] = None):\n        self._resolvers: Dict[Dependency, Resolver] = {} if resolvers is None else resolvers\n        self.set(Container, lambda: self)\n\n    def set(self, dependency: Dependency, resolve: Resolver):\n        \"\"\"Sets resolver for dependency\"\"\"\n        self._resolvers[dependency] = resolve\n\n    def resolve(self, dependency: Dependency) -> Any:\n        \"\"\"Resolve dependency\"\"\"\n        resolve = self._resolvers.get(dependency)\n        if resolve is None:\n            dependency_name = dependency.__name__ if hasattr(dependency, '__name__') else str(dependency)\n            raise DependencyError(f'Dependency \"{dependency_name}\" is not found')\n        return resolve()\n\n    def copy(self) -> 'Container':\n        \"\"\"returns new container with same dependencies\"\"\"\n        return Container(self._resolvers.copy())\n```\n<!-- MARKDOWN-AUTO-DOCS:END -->\n\n**Default** container is stored as global variable and used by default.\n**Default** container can be changed.\n\nhttps://github.com/eumis/injectool/blob/dev/injectool/core.py#L40-45\n<!-- MARKDOWN-AUTO-DOCS:START (CODE:src=./injectool/core.py&lines=40-45) -->\n<!-- The below code snippet is automatically added from ./injectool/core.py -->\n```py\n_DEFAULT_CONTAINER = Container()\n\ndef set_default_container(container: Container):\n    \"\"\"Sets default container\"\"\"\n    global _DEFAULT_CONTAINER\n    _DEFAULT_CONTAINER = container\n```\n<!-- MARKDOWN-AUTO-DOCS:END -->\n\n**Current** container can be set and used temporary.\nIt's stored in ContextVar so it can be used in asynchronous code.\n\nhttps://github.com/eumis/injectool/blob/dev/injectool/core.py#L48-66\n<!-- MARKDOWN-AUTO-DOCS:START (CODE:src=./injectool/core.py&lines=48-66) -->\n<!-- The below code snippet is automatically added from ./injectool/core.py -->\n```py\n_CURRENT_CONTAINER = ContextVar('dependency_container')\n\ndef get_container() -> Container:\n    \"\"\"Returns current container\"\"\"\n    return _CURRENT_CONTAINER.get(_DEFAULT_CONTAINER)\n\n\n@contextmanager\ndef use_container(container: Optional[Container] = None) -> Generator[Container, None, None]:\n    \"\"\"\n    Uses passed container for registering and resolving dependencies\n    Creates new if container doesn't exist.\n    \"\"\"\n    container = container if container else Container()\n    reset_token = _CURRENT_CONTAINER.set(container)\n    try:\n        yield container\n    finally:\n        _CURRENT_CONTAINER.reset(reset_token)\n```\n<!-- MARKDOWN-AUTO-DOCS:END -->\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2017-present, eumis (Eugen Misievich)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "di,dependency,injection,ioc,inversion of control,inject",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "injectool",
    "package_url": "https://pypi.org/project/injectool/",
    "platform": null,
    "project_url": "https://pypi.org/project/injectool/",
    "project_urls": {
      "Homepage": "https://github.com/eumis/injectool"
    },
    "release_url": "https://pypi.org/project/injectool/3.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Dependency injection tool",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17011044,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc8ae6d674f196af0cdfaebfbb167cc743d03304c61da63ace42b1f8c2bb2e79",
          "md5": "2d0066ed9e4fec2647c87277e38c459c",
          "sha256": "ae8c2d9b04fc24e59b882148c3c2fa6f794d2999e4f2264cbd984f3712bba033"
        },
        "downloads": -1,
        "filename": "injectool-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2d0066ed9e4fec2647c87277e38c459c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3433,
        "upload_time": "2019-05-20T10:09:03",
        "upload_time_iso_8601": "2019-05-20T10:09:03.699689Z",
        "url": "https://files.pythonhosted.org/packages/bc/8a/e6d674f196af0cdfaebfbb167cc743d03304c61da63ace42b1f8c2bb2e79/injectool-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5fb9e9b86797582f40bc16694f80d1a267a855059196cf4e5380514eaa1f6c2",
          "md5": "f644f4ad4f17a246a704e37ae615b352",
          "sha256": "1b3fb471d16435ccb5fd41c42e47ce34bb092d4d8eb9f29f909a8590c02ed970"
        },
        "downloads": -1,
        "filename": "injectool-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f644f4ad4f17a246a704e37ae615b352",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3317,
        "upload_time": "2019-07-17T14:24:06",
        "upload_time_iso_8601": "2019-07-17T14:24:06.190129Z",
        "url": "https://files.pythonhosted.org/packages/b5/fb/9e9b86797582f40bc16694f80d1a267a855059196cf4e5380514eaa1f6c2/injectool-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ce36b63505028113cd05725a0522cdfc2a33b69104e14f7cef17fb2b51592bb",
          "md5": "58326ab5cc70563d5f9a0e8f3a0fb077",
          "sha256": "f06eddbf5c9134417195762e8e5f2c8f6d423062ab63f5bd2340f4641eb6a0a7"
        },
        "downloads": -1,
        "filename": "injectool-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "58326ab5cc70563d5f9a0e8f3a0fb077",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3328,
        "upload_time": "2019-07-17T15:03:13",
        "upload_time_iso_8601": "2019-07-17T15:03:13.113034Z",
        "url": "https://files.pythonhosted.org/packages/6c/e3/6b63505028113cd05725a0522cdfc2a33b69104e14f7cef17fb2b51592bb/injectool-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36ec32863f30947f84d2281b46dfdb0e4ef6e7b7bce04e5d9560d78e0a932ba5",
          "md5": "2632b2288d6174a2d3c46da8465f0b10",
          "sha256": "74d0a4b699efbedd595841b8f91cb5cadacd8fc57076c41ca0dff3f7cf75aac8"
        },
        "downloads": -1,
        "filename": "injectool-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2632b2288d6174a2d3c46da8465f0b10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3442,
        "upload_time": "2019-10-15T07:42:35",
        "upload_time_iso_8601": "2019-10-15T07:42:35.934785Z",
        "url": "https://files.pythonhosted.org/packages/36/ec/32863f30947f84d2281b46dfdb0e4ef6e7b7bce04e5d9560d78e0a932ba5/injectool-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9e647eca53da9542380e1bbbee609ed71452071d0a677e90e4b6231a86a615e",
          "md5": "9c15cbffc052a7a0530902e9df4eca59",
          "sha256": "b396f0768a3947d7987a7a62f4245f17d535e51617236e87ae7c058abc66d54f"
        },
        "downloads": -1,
        "filename": "injectool-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9c15cbffc052a7a0530902e9df4eca59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3452,
        "upload_time": "2019-12-10T15:28:25",
        "upload_time_iso_8601": "2019-12-10T15:28:25.962769Z",
        "url": "https://files.pythonhosted.org/packages/e9/e6/47eca53da9542380e1bbbee609ed71452071d0a677e90e4b6231a86a615e/injectool-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05e76c933f93435bc42b7fb909cc796e9c73f16f33e5ed9cd2d93f3cd3be5aab",
          "md5": "b52c3d05bfd57c7db8dd99855ef1b321",
          "sha256": "77b12685662680df0cda62a75122a4a75af49bb76997f94d96e00cee88f56553"
        },
        "downloads": -1,
        "filename": "injectool-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b52c3d05bfd57c7db8dd99855ef1b321",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3469,
        "upload_time": "2019-12-10T15:41:15",
        "upload_time_iso_8601": "2019-12-10T15:41:15.301912Z",
        "url": "https://files.pythonhosted.org/packages/05/e7/6c933f93435bc42b7fb909cc796e9c73f16f33e5ed9cd2d93f3cd3be5aab/injectool-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f03289853463841e5812d4058bfe0d6fb21a34d1ada827fe689d89add33d2c0",
          "md5": "7198e1b58cac7c412ad16996e3d412b1",
          "sha256": "4f86b645b3e055122fb2202595f30d572b40e38033c8d690ac622e36bde2594f"
        },
        "downloads": -1,
        "filename": "injectool-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7198e1b58cac7c412ad16996e3d412b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3472,
        "upload_time": "2020-04-30T12:55:49",
        "upload_time_iso_8601": "2020-04-30T12:55:49.178449Z",
        "url": "https://files.pythonhosted.org/packages/3f/03/289853463841e5812d4058bfe0d6fb21a34d1ada827fe689d89add33d2c0/injectool-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b3aab6b007464f99150b5280911d46465840ee95a62470bd3fe90cd473f9007",
          "md5": "aea04038147118d159d51ee1bdea8df5",
          "sha256": "2d2b089415a9033adc1c0ed9a287a89ca1f46413fcaf105cea58e44c4896bfa8"
        },
        "downloads": -1,
        "filename": "injectool-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "aea04038147118d159d51ee1bdea8df5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3481,
        "upload_time": "2020-05-22T14:31:56",
        "upload_time_iso_8601": "2020-05-22T14:31:56.199886Z",
        "url": "https://files.pythonhosted.org/packages/4b/3a/ab6b007464f99150b5280911d46465840ee95a62470bd3fe90cd473f9007/injectool-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a44ef7315b2eca72843be9633d2b183fad2401907f0bd8e07df0904014fdc28",
          "md5": "b8322fd64488bdb828758518bc8f7d65",
          "sha256": "a7ef6f7a9efb82720db18ead536e9efad5f448eab1393691a30b36b0af725d5c"
        },
        "downloads": -1,
        "filename": "injectool-2.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8322fd64488bdb828758518bc8f7d65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5288,
        "upload_time": "2022-11-14T16:32:07",
        "upload_time_iso_8601": "2022-11-14T16:32:07.290490Z",
        "url": "https://files.pythonhosted.org/packages/8a/44/ef7315b2eca72843be9633d2b183fad2401907f0bd8e07df0904014fdc28/injectool-2.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57ce0ec0eeab12057c764d231a91260126c3cc66fb332045333027b3ec64a018",
          "md5": "8d09182ab24a30b5739a9aa639cde513",
          "sha256": "29ed596cbc860ab33a13800a485153685741f05364d329f3bd222828a000df86"
        },
        "downloads": -1,
        "filename": "injectool-2.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8d09182ab24a30b5739a9aa639cde513",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4489,
        "upload_time": "2022-11-14T16:32:09",
        "upload_time_iso_8601": "2022-11-14T16:32:09.081077Z",
        "url": "https://files.pythonhosted.org/packages/57/ce/0ec0eeab12057c764d231a91260126c3cc66fb332045333027b3ec64a018/injectool-2.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b58b82a375d5d1013a782f57efcd5fe7254431bd5d002814984de7224144103",
          "md5": "a522540f1f999ca40147ad2dad5d8931",
          "sha256": "0ab39621e00156cea1231b8b24e6de1d777df40223c47db88a581cff086b4181"
        },
        "downloads": -1,
        "filename": "injectool-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a522540f1f999ca40147ad2dad5d8931",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7270,
        "upload_time": "2023-02-24T13:13:17",
        "upload_time_iso_8601": "2023-02-24T13:13:17.882321Z",
        "url": "https://files.pythonhosted.org/packages/8b/58/b82a375d5d1013a782f57efcd5fe7254431bd5d002814984de7224144103/injectool-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32a9a29716f2427ddf43ef3d72503c7b8aa436b24941565f64d2f1697f448886",
          "md5": "4a0dfc37897f94ba51b17dda0182f0d2",
          "sha256": "b84c327f2fed7b2857309e9157344e70e8c73e1a95dba6be024f34c1e5f00a6d"
        },
        "downloads": -1,
        "filename": "injectool-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4a0dfc37897f94ba51b17dda0182f0d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6340,
        "upload_time": "2023-02-24T13:13:19",
        "upload_time_iso_8601": "2023-02-24T13:13:19.366215Z",
        "url": "https://files.pythonhosted.org/packages/32/a9/a29716f2427ddf43ef3d72503c7b8aa436b24941565f64d2f1697f448886/injectool-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b58b82a375d5d1013a782f57efcd5fe7254431bd5d002814984de7224144103",
        "md5": "a522540f1f999ca40147ad2dad5d8931",
        "sha256": "0ab39621e00156cea1231b8b24e6de1d777df40223c47db88a581cff086b4181"
      },
      "downloads": -1,
      "filename": "injectool-3.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a522540f1f999ca40147ad2dad5d8931",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7270,
      "upload_time": "2023-02-24T13:13:17",
      "upload_time_iso_8601": "2023-02-24T13:13:17.882321Z",
      "url": "https://files.pythonhosted.org/packages/8b/58/b82a375d5d1013a782f57efcd5fe7254431bd5d002814984de7224144103/injectool-3.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32a9a29716f2427ddf43ef3d72503c7b8aa436b24941565f64d2f1697f448886",
        "md5": "4a0dfc37897f94ba51b17dda0182f0d2",
        "sha256": "b84c327f2fed7b2857309e9157344e70e8c73e1a95dba6be024f34c1e5f00a6d"
      },
      "downloads": -1,
      "filename": "injectool-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4a0dfc37897f94ba51b17dda0182f0d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6340,
      "upload_time": "2023-02-24T13:13:19",
      "upload_time_iso_8601": "2023-02-24T13:13:19.366215Z",
      "url": "https://files.pythonhosted.org/packages/32/a9/a29716f2427ddf43ef3d72503c7b8aa436b24941565f64d2f1697f448886/injectool-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}