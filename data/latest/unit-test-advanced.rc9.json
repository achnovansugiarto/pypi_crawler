{
  "info": {
    "author": "Rood Repo",
    "author_email": "roodrepo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Unit Test Advanced\n==========\n\n### *The Python Unit Test Toolkit*\n\nUnit Test Advanced is the Python testing toolkit for programmable execution plans. It makes it easy to write, test and scale complex applications and libraries.\n\nThis package gives you the flexibility to use the production code to run the tests, assert results at any time within the code, and inject custom data. Lightweight with no dependencies, it is compatible with any framework such as Django or Flask.\n\n\n## Features\n\n- Program multiple execution plans\n- Pass values from one step to another\n- No code duplication; use production code to run tests\n- Inject custom data\n- Auto-create execution plans from the relationship between all tests\n\n## Advantages\n\n- Highly flexible\n- Lightweight and independent\n- Open-source\n- Real use cases\n- Support & documentation\n\n## Authors\n\n- Rudy Fernandez\n\n## Install\nThe easiest way to install the Unit Test Advanced library is to use a package manager:\n`pip install unit-test-advanced`\n\n\n## Prepare the tests\n\nExamples can be found [here](https://github.com/roodrepo/unit_test_advanced/tree/v0-dev/examples)\n\n### Create a test class\n\n```python\nfrom unit_test_advanced.UnitTestAction import UnitTestAction\nimport os, sys\n\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\n\nsys.path.append(BASE_DIR)\nfrom step1 import run as step1_run\n\t\t\nclass step1_checkFileExist_success(UnitTestAction):\n\t\n    # Function to execute to run the action to test. \n\ttrigger = step1_run # NOT step1_run()\n\t\n\tdef final_check(self):\n\t\tif os.path.exists(f'{BASE_DIR}/{FILE_NAME}') == False:\n\t\t\traise BaseException(f'The file {FILE_NAME} is missing')\n\n```\n\n### Main attributes of a test class\n\n| Attribute  | Type | Required | Info |\n|:-:|:-:|:-:|:-|\n| `init_params`  | dict  | no | *Kwargs to pass to the test-class when instantiated* |\n| `trigger_params`  | dict  | no | *Kwargs to pass to trigger when executed* |\n| `trigger`  | function  | no | *Action to execute to run the action to test.* |\n| `dependencies`  | list  | no | *Previous test-classes required to run the current test (Ns-1)* |\n| `children`  | list  | no | *Next test-classes to run after the current test (Ns+1)* |\n| `memory`  | dict  | no | *Passing values from one test action to the next ones within the same execution plan* |\n| `finalCheck`  | method  | no | *Final method called when the action is complete* |\n\n**Make sure not to execute function while passing it to \"trigger\":**\n`trigger = step1_run`\n**NOT**\n`trigger = step1_run(*args, **kwargs)`\n\n#### Create relationships\n```python\n\nclass relationExample_lvl1_1:\n\tchildren = ['scenarios.relationExample_lvl2_1', 'scenarios.relationExample_lvl2_2']\n\nclass relationExample_lvl1_2:\n\tchildren           = ['scenarios.relationExample_lvl1_2']\n\t\n\t\n\t\nclass relationExample_lvl2_1:\n\tdependencies  = [relationExample_lvl1_1, relationExample_lvl1_2]\n\tchildren           = ['scenarios.relationExample_lvl3_1']\n\nclass relationExample_lvl2_2:\n\tdependencies = [relationExample_lvl1_1]\n\t\n\t\n\t\n# Extending the class \"UnitTestAction\" gives more features such as accessing the memory attribute\nclass relationExample_lvl3_1(UnitTestAction):\n\tdependencies = [relationExample_lvl2_1]\n\t\n\t\tdef __init__(self, **kwargs):\n\t\t\tsuper().__init__(**kwargs)\n```\n\n### Value assertation\nExtend your unit test class with the package of your choice\n```python\nfrom django.test import TestCase\nfrom unit_test_advanced.UnitTestAction import UnitTestAction\nimport os, sys\n\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\n\nsys.path.append(BASE_DIR)\nfrom step1 import run as step1_run\n\t\t\nclass step1_checkFileExist_success(UnitTestAction, TestCase):\n\t\n\ttrigger = step1_run\n\t\n\tdef final_check(self):\n\t\tself.assertEqual(os.path.exists(f'{BASE_DIR}/{FILE_NAME}'), True)\n```\nIn case you use the **\\_\\_init\\_\\_** method, do not forget to initialize the parents \n```python\ndef __init__(self, *args, **kwargs):\n\t\tsuper().__init__(*args, **kwargs)\n\t\t# your code here\n```\n\n### Execute scenarios\n```python\nfrom unit_test_advanced.UnitTest import UnitTest\n\nUT = UnitTest(\n    is_enabled              = True,  # Default is False. MUST be set to true here when we run the unit tests\n    parent_execution_plan   = 'all', # Default is 'all'. Accepted values are 'all', 'main', or 'random'\n    children_execution_plan = 'all', # Default is 'all'. Accepted values are 'all', 'main', or 'random'\n    count_limit_identify_infinite_loop = 2, # Default is 2\n    verbose                 = True, # Default is False\n)\n\nUT.execute([\n    # When a single test-class is passed, the relationship tree will get build based on the settings \"parent_execution_plan\" and \"children_execution_plan\"\n    relationExample_lvl1_1,\n    # A list of unit test classes\n    [\n        relationExample_lvl1_1,\n        relationExample_lvl1_2,\n    ],\n])\n```\n\n### UnitTest methods\n\n| Attribute | Description |\n|:-:|:-|\n| `__init__`  | *Init the settings*  |\n| `updateSettings`  | *Update the settings* |\n| `override`  | *Inject data in the function triggered by the test-class* |\n| `returnValue`  | *Used when overriding a single value* |\n| `preparePlans`  | *Preparing all scenarios according to the settings and list passed* |\n| `getExecutionPlans`  | *Get all the execution plans prepared* |\n| `resetExecutionPlans`  | *Reset all the prepared execution plans* |\n| `execute`  | *Execute all the unit tests from the list* |\n\n#### \\_\\_init\\_\\_ and updateSettings\n| Argument | Type | Default | Description |\n|:-:|:-:|:-:|:-|\n| `is_enabled` | bool | False | *Set to \"True\" **only** when used to run the unit tests* |\n| `parent_execution_plan` | str | all | *Algorithm to create the branches from on the \"dependencies\" side. Accepted values are \"all\", \"main\", and \"random\"* |\n| `children_execution_plan` | str | all | *Algorithm to create the branches from on the \"children\" side. Accepted values are \"all\", \"main\", and \"random\"* |\n| `count_limit_identify_infinite_loop` | int | 2 | *Max amount of a test-class execution within an execution plan* |\n| `verbose` | bool | False | *Display information while running* |\n\nExecution plan algorithms:\n- **all**: All possible execution plans are prepared\n- **main**: If multiple dependencies or children, the algorithm select the first one\n- **random** : If multiple dependencies or children, the algorithm randomly select a path\n\n#### override\n| Argument | Type | Default | Description |\n|:-:|:-:|:-:|:-|\n| `id` | bool |  | *Method to execute within the test-class to override the original function* |\n| `function` | str |  | *Function to execute if the \"id\" method is not found within the test-class* |\n| `*args` |  |  | *Arguments passed to the function or the \"id\" method* |\n| `**kwargs` |  |  | *Arguments passed to the function or the \"id\" method* |\n\n#### returnValue\n| Argument | Type | Default | Description |\n|:-:|:-:|:-:|:-|\n| `value` |  |  | *Return the value passed* |\n\n#### preparePlans\n| Argument | Type | Default | Description |\n|:-:|:-:|:-:|:-|\n| `list_unit_tests` | list | [] | *Prepare all the execution plans from the list* |\n\n#### getExecutionPlans\nDoes not have any attribute\n\n#### resetExecutionPlans\nDoes not have any attribute\n\n#### execute\n| Argument | Type | Default | Description |\n|:-:|:-:|:-:|:-|\n| `list_unit_tests` | list | None | *Execute the prepared unit tests. The method \"preparePlans\" is not required if the list of plans is passed here.* |\n\n## Prepare actions\n#### With decorators\n```python\nfrom unit_test_advanced.functools import initUT\n\n@initUT\ndef run():\n\tpass\n\nif __name__ == '__main__':\n\trun()\n```\n\n**If you need to inject custom data within the function, it needs to accept the parameter UT**\n\n```python\nfrom unit_test_advanced.functools import initUT\n\n@initUT\ndef run(UT):\n\tpass\n\nif __name__ == '__main__':\n\trun()\n```\n\n#### Without decorators\n```python\nfrom unit_test_advanced.UnitTest import UnitTest\n\n# For each entry point, the function must accept the parameter UT\ndef run(UT = None):\n\tUT = UT if type(UT) == type(UnitTest) else UnitTest()\n\nif __name__ == '__main__':\n\trun()\n```\n\n#### With another parameter name\n```python\nfrom unit_test_advanced.functools import initUT\nfrom unit_test_advanced.UnitTest import UnitTest\n\n# Default value is 'UT'\n@initUT\ndef test1(UT, a, b):\n\tprint('test1: ', type(UT), a, b)\n\n# Looking for the parameter with the type UnitTest\n@initUT\ndef test2(UT_other_name: UnitTest, a, b):\n\tprint('test2: ', type(UT_other_name), a, b)\n\t\n# Explicitly state the name\n@initUT('UT_other_name')\ndef test3(UT_other_name, a, b):\n\tprint('test3: ', type(UT_other_name), UT_other_name._parent_execution_plan, a, b)\n\nif __name__ == '__main__':\n    test1(1, 2)\n    test2(1, 2)\n    test3(1, 2)\n    test3( UnitTest(parent_execution_plan= 'child'), 1, 2)\n    test3(UT_other_name= 'value is passed', a= 1, b= 2)\n```\n\n\n## My first unit test\nIn production, you have two actions triggered serially: [Step1](https://github.com/roodrepo/unit_test_advanced/blob/v0-dev/examples/step1.py) and [Step2](https://github.com/roodrepo/unit_test_advanced/blob/v0-dev/examples/step2.py).\nFor this example, we will keep things simple:\n\n| Action | Result | Verification  |\n|:-:|:-:|:-:|\n| `python step1.py` | File \"myfile.txt\" created | Does the file \"myfile.txt\" exist? |\n| `python step2.py` | Add response of a fake API call in the file | Does the file contains the string \"result\"? |\n\nWhen executing the file step2.py, the script prints out the content of the file at the end: *File content after executing step2.py: \"{\"result\": \"success\"}\"*\n\n#### Unit test for Step1\n```python\nimport os\nfrom step1 import run as step1_run\n\nclass step1_checkFileExist_success:\n\t\n\t# Function to execute to run the action to test\n\ttrigger = step1_run\n\n\tdef finalCheck(self):\n\t\n\t\tBASE_DIR = os.path.dirname(os.path.abspath(__file__))\n\t\tFILE_NAME = 'myfile.txt'\n\t\t\n\t\tif os.path.exists(f'{BASE_DIR}/{FILE_NAME}') == False:\n\t\t\traise BaseException(f'The file {FILE_NAME} is missing')\n```\n\n#### Unit test for Step2\n```python\nimport os\nfrom step2 import run as step2_run\n\nclass step2_NoOverride:\n\t\n\ttrigger = step2_run\n\t\n\tdef finalCheck(self):\n\t\t\n\t\tBASE_DIR = os.path.dirname(os.path.abspath(__file__))\n\t\tFILE_NAME = 'myfile.txt'\n\t\t\n\t\tf = open(f'{BASE_DIR}/{FILE_NAME}', 'r')\n\t\tif 'result' not in f.read():\n\t\t\traise BaseException(f'Content invalid')\n```\n\n#### Execution plans file\nThe actual example file can be found [here](https://github.com/roodrepo/unit_test_advanced/blob/v0-dev/examples/unit_tests_example0.py)\n\n----\n\n##### [Scenario 1](https://github.com/roodrepo/unit_test_advanced/blob/v0-dev/examples/unit_tests_example0_1.py): Test passed\n```python\nfrom unit_test_advanced.UnitTest import UnitTest\nimport os, sys\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\n\nsys.path.append(BASE_DIR)\n\nfrom scenarios import step1_checkFileExist_success, step2_NoOverride\n\n\ndef run():\n\tUT = UnitTest(\n\t\tis_enabled              = True,  # Default is False. MUST be set to true here when we run the unit tests\n\t)\n\t\n\tUT.execute([\n\t\t# A list of unit test classes\n\t\t[\n\t\t\tstep1_checkFileExist_success,\n\t\t\tstep2_NoOverride,\n\t\t],\n\t])\n\t\n\nif __name__ == '__main__':\n\trun()\n```\n`python unit_tests_example0_1.py`\n> File content after executing step1.py: \"\"\n> File content after executing step2.py: \"{\"result\": \"success\"}\"\n\n----\n\n##### [Scenario 2](https://github.com/roodrepo/unit_test_advanced/blob/v0-dev/examples/unit_tests_example0_2.py): Override data & test passed\n```python\nfrom unit_test_advanced.UnitTest import UnitTest\nimport os, sys\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\n\nsys.path.append(BASE_DIR)\n\nfrom scenarios import step1_checkFileExist_success, step2_overrideDataExample\n\n\ndef run():\n\tUT = UnitTest(\n\t\tis_enabled              = True,  # Default is False. MUST be set to true here when we run the unit tests\n\t)\n\t\n\tUT.execute([\n\t\t# A list of unit test classes\n\t\t[\n\t\t\tstep1_checkFileExist_success,\n\t\t\tstep2_overrideDataExample,\n\t\t],\n\t])\n\t\n\nif __name__ == '__main__':\n\trun()\n```\n`python unit_tests_example0_2.py`\n> File content after executing step1.py: \"\"\n> File content after executing step2.py: \"{\"result\": \"**ok** \"}\"\n\n----\n\n#### [Scenario 3](https://github.com/roodrepo/unit_test_advanced/blob/v0-dev/examples/unit_tests_example0_3.py): Override data & test failed\n```python\nfrom unit_test_advanced.UnitTest import UnitTest\nimport os, sys\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\n\nsys.path.append(BASE_DIR)\n\nfrom scenarios import step1_checkFileExist_success, step2_Override_fail\n\n\ndef run():\n\tUT = UnitTest(\n\t\tis_enabled              = True,  # Default is False. MUST be set to true here when we run the unit tests\n\t)\n\t\n\tUT.execute([\n\t\t# A list of unit test classes\n\t\t[\n\t\t\tstep1_checkFileExist_success,\n\t\t\tstep2_Override_fail,\n\t\t],\n\t])\n\t\n\nif __name__ == '__main__':\n\trun()\n```\n`python unit_tests_example0_3.py`\n> File content after executing step1.py: \"\"\n> File content after executing step2.py: \"**{\"code\": 200}**\"\n> BaseException: Invalid API response\n\n## More scenarios\n#### [Scenario 4](https://github.com/roodrepo/unit_test_advanced/blob/v0-dev/examples/unit_tests_example0_4.py): override a value\n#### [Scenario 5](https://github.com/roodrepo/unit_test_advanced/blob/v0-dev/examples/unit_tests_example1.py): multiple execution plans\n#### [Scenario 6](https://github.com/roodrepo/unit_test_advanced/blob/v0-dev/examples/unit_tests_example2.py): create execution plans automatically based on dependencies\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/roodrepo/unit_test_advanced",
    "keywords": "unit-test,inject data,test driven development",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "unit-test-advanced",
    "package_url": "https://pypi.org/project/unit-test-advanced/",
    "platform": null,
    "project_url": "https://pypi.org/project/unit-test-advanced/",
    "project_urls": {
      "Homepage": "https://github.com/roodrepo/unit_test_advanced"
    },
    "release_url": "https://pypi.org/project/unit-test-advanced/0.1.8/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Program execution plans for unit testing and inject custom data",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13554125,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd84e5153c5f496a017cd6fc4fddf5f603acd9a105bd88aea93bc278d35baf3f",
          "md5": "54abe273f8f69fa4d48433818d500e60",
          "sha256": "cf9fe9d7d50037ce6af5ea4d7876000a3dcfb1c1a29062bae7000c287c29c11e"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54abe273f8f69fa4d48433818d500e60",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10980,
        "upload_time": "2022-02-15T03:59:35",
        "upload_time_iso_8601": "2022-02-15T03:59:35.150062Z",
        "url": "https://files.pythonhosted.org/packages/cd/84/e5153c5f496a017cd6fc4fddf5f603acd9a105bd88aea93bc278d35baf3f/unit_test_advanced-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "612423bf9fa71daea0f6e8e54661f61726cf28de3f6d6b86010c2c75d476f118",
          "md5": "7b8f34935fa4e0de9393b822fc97b98d",
          "sha256": "3982126dd4ef0b766c9bea4ee288405d92677f6a6e4edb76b6e4120628e22c44"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7b8f34935fa4e0de9393b822fc97b98d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8163,
        "upload_time": "2022-02-15T03:59:39",
        "upload_time_iso_8601": "2022-02-15T03:59:39.564841Z",
        "url": "https://files.pythonhosted.org/packages/61/24/23bf9fa71daea0f6e8e54661f61726cf28de3f6d6b86010c2c75d476f118/unit_test_advanced-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04c4b94a39b7d2202928a6213bd71ebc015dcbf63d25c356b9a581b86f100b93",
          "md5": "b6437f587f2ad6c41736a4f3be682b03",
          "sha256": "616ea989352194c29347a301ced89757c4540a2b67e5a97aee103163b59778b3"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6437f587f2ad6c41736a4f3be682b03",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17850,
        "upload_time": "2022-02-15T03:59:37",
        "upload_time_iso_8601": "2022-02-15T03:59:37.715323Z",
        "url": "https://files.pythonhosted.org/packages/04/c4/b94a39b7d2202928a6213bd71ebc015dcbf63d25c356b9a581b86f100b93/unit_test_advanced-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8b49a7c5c37e3a39f1e35f0b3e8a244bec0c796e6219eadb167ccbdfc2e6f2f",
          "md5": "7f75ac7a5aa062ab32d3d970fae54c2b",
          "sha256": "16e9448ad83ff9f18e2eb0bd83bd513ced096764efd27412ece4420c81e1ef5e"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7f75ac7a5aa062ab32d3d970fae54c2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14153,
        "upload_time": "2022-02-15T03:59:41",
        "upload_time_iso_8601": "2022-02-15T03:59:41.128748Z",
        "url": "https://files.pythonhosted.org/packages/b8/b4/9a7c5c37e3a39f1e35f0b3e8a244bec0c796e6219eadb167ccbdfc2e6f2f/unit_test_advanced-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "243a157424b13085c7ac4670fd2c9ceae722c811d82311f86c71a3b4dfe17659",
          "md5": "9243d0cc1ac88358e40f19ee9dc4ba7f",
          "sha256": "6c608a223bbf7eb7595a32c2fae2ce03e50ef27db8c23e9ff13b3a27352dd395"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9243d0cc1ac88358e40f19ee9dc4ba7f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17914,
        "upload_time": "2022-02-15T06:21:29",
        "upload_time_iso_8601": "2022-02-15T06:21:29.715389Z",
        "url": "https://files.pythonhosted.org/packages/24/3a/157424b13085c7ac4670fd2c9ceae722c811d82311f86c71a3b4dfe17659/unit_test_advanced-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "435ef4a0809eea25735081c43c3be79758f1d10a31be62d9fdad3ad616f60c53",
          "md5": "1bbd5ab1761c53d7647257356154ac3c",
          "sha256": "2cd682516d831571fa40fc5b5d1d3f9118a41fd9997d8077a2ee4ad648446c55"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1bbd5ab1761c53d7647257356154ac3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14253,
        "upload_time": "2022-02-15T06:21:31",
        "upload_time_iso_8601": "2022-02-15T06:21:31.128533Z",
        "url": "https://files.pythonhosted.org/packages/43/5e/f4a0809eea25735081c43c3be79758f1d10a31be62d9fdad3ad616f60c53/unit_test_advanced-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2db56a8ebff5a49f5049ba703cbdc82f8038560f8b32c4ae2c8064656f0c5e5f",
          "md5": "b8e1fb6a7c6bfde0b26abc0bfc4299ae",
          "sha256": "c27f6b97631a077f3653b69088f4c72793ce58a5c151cad99953981cd5dd1d8b"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8e1fb6a7c6bfde0b26abc0bfc4299ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17916,
        "upload_time": "2022-02-15T06:52:05",
        "upload_time_iso_8601": "2022-02-15T06:52:05.337253Z",
        "url": "https://files.pythonhosted.org/packages/2d/b5/6a8ebff5a49f5049ba703cbdc82f8038560f8b32c4ae2c8064656f0c5e5f/unit_test_advanced-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "042f70b6c207907289ec29c4314726aabd3a0f91bba4aa658a3ee2f3c99cc729",
          "md5": "b42a4923011ee21b8e3cac42f32f01f7",
          "sha256": "d9da09dc0afc66bd70fde50d04348c8d9b243c17b0e59d2ccee176bfe224c88c"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b42a4923011ee21b8e3cac42f32f01f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14256,
        "upload_time": "2022-02-15T06:52:06",
        "upload_time_iso_8601": "2022-02-15T06:52:06.857640Z",
        "url": "https://files.pythonhosted.org/packages/04/2f/70b6c207907289ec29c4314726aabd3a0f91bba4aa658a3ee2f3c99cc729/unit_test_advanced-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a30fb665237da8004f5f5d0289ed10e6bdb0b639d97a7aa7c37f8ee6839f897f",
          "md5": "73baac02848372ac957f225a9c359fdc",
          "sha256": "de4eadeb80ce6a6e89643430145241db35c3d17c3c86c6dfc99048d0925bffab"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73baac02848372ac957f225a9c359fdc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17917,
        "upload_time": "2022-02-15T08:05:18",
        "upload_time_iso_8601": "2022-02-15T08:05:18.053084Z",
        "url": "https://files.pythonhosted.org/packages/a3/0f/b665237da8004f5f5d0289ed10e6bdb0b639d97a7aa7c37f8ee6839f897f/unit_test_advanced-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "517fce909d5e74a16f10fcf3ed5eb878f9d0a0e06d75e4dcc31716c29b0db6e2",
          "md5": "b2372cc7cb3ce02b1c49b5b8e06491bd",
          "sha256": "ca32a11a43c05d7134ceae9cda8e44c493f2bef425851c61a509af928f454979"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b2372cc7cb3ce02b1c49b5b8e06491bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14262,
        "upload_time": "2022-02-15T08:05:19",
        "upload_time_iso_8601": "2022-02-15T08:05:19.657555Z",
        "url": "https://files.pythonhosted.org/packages/51/7f/ce909d5e74a16f10fcf3ed5eb878f9d0a0e06d75e4dcc31716c29b0db6e2/unit_test_advanced-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "615913d05450f31bb802c31e12a2a305eeafe6615de1dfdf2c24fa707569ba3b",
          "md5": "01ca78bff8dfb0d550c7cf804b1f2d0b",
          "sha256": "ce4d7376a747af27436d7ea2c275e7f563f5acf2553bd4d05d4c02ca53131981"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01ca78bff8dfb0d550c7cf804b1f2d0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18837,
        "upload_time": "2022-04-10T09:55:36",
        "upload_time_iso_8601": "2022-04-10T09:55:36.470617Z",
        "url": "https://files.pythonhosted.org/packages/61/59/13d05450f31bb802c31e12a2a305eeafe6615de1dfdf2c24fa707569ba3b/unit_test_advanced-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21dea0a8f2211982bbd31baedf57037b4c7b40813db526b5a34da4f1d7e9b28b",
          "md5": "69589b6c8498708eb97aec59aaaaaa2f",
          "sha256": "152f58c69c7ba41ef3582fbc44135165ded0b1ff02e14fded9667956bf738c32"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "69589b6c8498708eb97aec59aaaaaa2f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15178,
        "upload_time": "2022-04-10T09:55:38",
        "upload_time_iso_8601": "2022-04-10T09:55:38.328832Z",
        "url": "https://files.pythonhosted.org/packages/21/de/a0a8f2211982bbd31baedf57037b4c7b40813db526b5a34da4f1d7e9b28b/unit_test_advanced-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f6b928f9a82716e010770e4f8cc8422cffa9f2d2d3b271fefab511e0bbb5712",
          "md5": "3ccc154cbc48aa10836a089e38e81258",
          "sha256": "56ecf2a09c05ddf69074598df94923c2a8cff2cedb17a6977619d39cb97b5bd4"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ccc154cbc48aa10836a089e38e81258",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18839,
        "upload_time": "2022-04-19T07:42:50",
        "upload_time_iso_8601": "2022-04-19T07:42:50.292726Z",
        "url": "https://files.pythonhosted.org/packages/3f/6b/928f9a82716e010770e4f8cc8422cffa9f2d2d3b271fefab511e0bbb5712/unit_test_advanced-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ec929172d195316accedc3048723692e01da1f56396278486e2f91b36eac56f",
          "md5": "c2d8bfe2a355160702dc7b9b436d48df",
          "sha256": "b2a36b63f4ebecdd14e6fdf08785458f8db7f6ca3b53072a542af288a63ae2f5"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c2d8bfe2a355160702dc7b9b436d48df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15179,
        "upload_time": "2022-04-19T07:42:51",
        "upload_time_iso_8601": "2022-04-19T07:42:51.941587Z",
        "url": "https://files.pythonhosted.org/packages/2e/c9/29172d195316accedc3048723692e01da1f56396278486e2f91b36eac56f/unit_test_advanced-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d46d3cf0a1b7cc1e1b3f6b2332ca2682ffa2f8ca569a2017d99a8dbd0ed3cb5d",
          "md5": "201d8a6ee536a4cc8a97692c3336e372",
          "sha256": "6ce1789c706b777a0c8004b63ddfef52b2ad50b850716596c6d4c38f596e0893"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "201d8a6ee536a4cc8a97692c3336e372",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18850,
        "upload_time": "2022-04-19T08:03:40",
        "upload_time_iso_8601": "2022-04-19T08:03:40.039701Z",
        "url": "https://files.pythonhosted.org/packages/d4/6d/3cf0a1b7cc1e1b3f6b2332ca2682ffa2f8ca569a2017d99a8dbd0ed3cb5d/unit_test_advanced-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b35719aec4613a70120cd1837be992facf0a6e867c8d9887875245d2ec248df4",
          "md5": "9bdf58ce31173689132645c09866789c",
          "sha256": "4bc955656049bd01cfb437d780366064409396b8c81c3410330150385e998e9c"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "9bdf58ce31173689132645c09866789c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15193,
        "upload_time": "2022-04-19T08:03:41",
        "upload_time_iso_8601": "2022-04-19T08:03:41.456287Z",
        "url": "https://files.pythonhosted.org/packages/b3/57/19aec4613a70120cd1837be992facf0a6e867c8d9887875245d2ec248df4/unit_test_advanced-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e21f7c4d2fcf33b1eefe8c9b6be0bf304c17b6e0ff9cbd316ad30c7a3ee3bfd",
          "md5": "0efb7c5e44652956c59acfd29be97370",
          "sha256": "2932b3318a823ffbd17a6e338277b042a0d405797a91cef16deee1b1030e4ac4"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0efb7c5e44652956c59acfd29be97370",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18910,
        "upload_time": "2022-04-19T09:57:56",
        "upload_time_iso_8601": "2022-04-19T09:57:56.285825Z",
        "url": "https://files.pythonhosted.org/packages/5e/21/f7c4d2fcf33b1eefe8c9b6be0bf304c17b6e0ff9cbd316ad30c7a3ee3bfd/unit_test_advanced-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bdae2a19b05e358115a627d5744c9b1eb434eaa0144cabb85ded5f82133a104",
          "md5": "9e520cd5717edb7631caeffce2014903",
          "sha256": "b6f8d179e23e0aa27426de9bb49895a2002d8b24849a7c6a730ce2c81cd6d41e"
        },
        "downloads": -1,
        "filename": "unit_test_advanced-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "9e520cd5717edb7631caeffce2014903",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15306,
        "upload_time": "2022-04-19T09:57:58",
        "upload_time_iso_8601": "2022-04-19T09:57:58.097443Z",
        "url": "https://files.pythonhosted.org/packages/0b/da/e2a19b05e358115a627d5744c9b1eb434eaa0144cabb85ded5f82133a104/unit_test_advanced-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5e21f7c4d2fcf33b1eefe8c9b6be0bf304c17b6e0ff9cbd316ad30c7a3ee3bfd",
        "md5": "0efb7c5e44652956c59acfd29be97370",
        "sha256": "2932b3318a823ffbd17a6e338277b042a0d405797a91cef16deee1b1030e4ac4"
      },
      "downloads": -1,
      "filename": "unit_test_advanced-0.1.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0efb7c5e44652956c59acfd29be97370",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 18910,
      "upload_time": "2022-04-19T09:57:56",
      "upload_time_iso_8601": "2022-04-19T09:57:56.285825Z",
      "url": "https://files.pythonhosted.org/packages/5e/21/f7c4d2fcf33b1eefe8c9b6be0bf304c17b6e0ff9cbd316ad30c7a3ee3bfd/unit_test_advanced-0.1.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0bdae2a19b05e358115a627d5744c9b1eb434eaa0144cabb85ded5f82133a104",
        "md5": "9e520cd5717edb7631caeffce2014903",
        "sha256": "b6f8d179e23e0aa27426de9bb49895a2002d8b24849a7c6a730ce2c81cd6d41e"
      },
      "downloads": -1,
      "filename": "unit_test_advanced-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "9e520cd5717edb7631caeffce2014903",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 15306,
      "upload_time": "2022-04-19T09:57:58",
      "upload_time_iso_8601": "2022-04-19T09:57:58.097443Z",
      "url": "https://files.pythonhosted.org/packages/0b/da/e2a19b05e358115a627d5744c9b1eb434eaa0144cabb85ded5f82133a104/unit_test_advanced-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}