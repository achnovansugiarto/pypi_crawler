{
  "info": {
    "author": "Jon Falkenstein",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# README\n\n## What is this?\n`sceptre-sam-handler` is a TemplateHandler for Sceptre (versions 2.7 and up) that lets you use an\nAWS SAM template (and its associated project) as a stack's template.\n\nThis template handler will run `sam build` and then `sam package` from the indicated SAM Template's\ndirectory in order to compile and generate a CloudFormation-ready template. Additionally, if you\ndefine your SAM template with a `.j2` extension, you can utilize [Jinja2 templating syntax and logic](\nhttps://jinja.palletsprojects.com/en/3.1.x/templates/) to render the SAM template prior to the build.\n\n**By using the SAM Handler, you are letting SAM build your application, compile a SAM template, and\nupload artifacts to S3, and then using Sceptre to actually do the deployment of the template to a stack.**\nIn other words, by using this handler with Sceptre, _you skip ever using `sam deploy`; It's not needed_.\nYou also shouldn't need a sam config file with deployment defaults, since you'll be using Sceptre to\ndeploy rather than SAM.\n\nBy using this handler, you can now use SAM templates with all your favorite Sceptre commands, like\n`launch`, `validate`, `generate`, and `diff` (along with all the rest)!\n\n## How to install sceptre-sam-handler\n\nSimply `pip install scepre-sam-handler`. **Additionally, you need SAM CLI installed and accessible** on\nthe PATH for the handler to invoke as a subprocess.\n\nThere are three main ways you can install SAM CLI:\n* You can follow [AWS's own documentation](\nhttps://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html)\non how to install SAM for your operating system. (Note: at least on Linux, this requires the ability\nto use `sudo`; If you need to install SAM where permissions escalation is not possible, this won't\nwork.)\n* You can use [pipx](https://github.com/pypa/pipx) to install `aws-sam-cli` into an isolated virtual\nenvironment where it can have exclusive claim to its dependency versions. This can be done without\nprivilege escalations.\n* If you want to install `aws-sam-cli` along with this handler using `pip`, you can use the \"extra\"\nlike `pip install sceptre-sam-handler[sam]`. However, **using pip to install SAM is generally not\nrecommended, according to SAM's own documentation.** This can lead to dependency conflicts, since\nSAM CLI is particular about dependency versions.\n\n## How to use sceptre-sam-handler\n\nThe template \"type\" for this handler is `sam`. There are two file extensions supported by this\nhandler:\n* `.yaml`: Use this for a \"normal\" SAM template according to the SAM specification. This template\nwill be directly sent to the SAM CLI for building and packaging.\n* `.j2`: Use this if you need to use [Jinja2 templating syntax and logic](\nhttps://jinja.palletsprojects.com/en/3.1.x/templates/) in order to render a SAM template, such as\nto interpolate values into the template prior to building it. See the section below on Jinja SAM\ntemplates for more details.\n\nThis handler takes several arguments, two of which are required.\n\n### Arguments:\n* `path` (string, required): The path **from the current working directory** (NOT the\nproject path) to the SAM Template. The path _must_ end in either \".yaml\" or \".j2\".\n* `artifact_bucket_name` (string, required): The bucket name where artifacts should be uploaded to\non S3 during the packaging process. If your project has a `template_bucket_name`, you can set this\nto `{{ template_bucket_name }}`.\n* `artifact_prefix` (string, optional): The prefix to apply to artifacts uploaded to S3. This can be\nthe project's `{{ template_key_prefix }}`.\n* `build_args` (dict, optional): Additional key/value pairs to supply to `sam build`. For\nflag-type arguments that have no value, set the value to \"True\".\n* `package_args` (dict, optional): Additional key/value pairs to apply to `sam package`. The\nsame is true here as for `build_args` for flag-type arguments.\n* `skip_jinja_cleanup` (bool): Can be set to True to retain the jinja file after processing. This\ncan be used to troubleshoot issues.\n\n### How does this handler work?\n\nWhen using _only_ sam CLI (not Sceptre) to deploy using `sam deploy`, SAM CLI effectively performs\n3 steps:\n\n1. SAM CLI builds the all the various resources special SAM resources, resolving dependencies. These would\ninclude Lambda functions and Lambda layers. It copies any locally-referenced files and resolves any\ndependencies into a directory called `.aws-sam`. This is the same behavior as running `sam build`.\n2. SAM CLI then transforms all SAM template URIs that reference local filepaths to S3 keys (among other)\ntransformations it applies, uploads any built artifacts to those s3 keys, and saves the transformed\ntemplate. This is the same behavior as running `sam package`.\n3. SAM CLI finally takes that transformed template (along with a local sam config and any other CLI\narguments) and performs CloudFormation stack create/update with them.\n\nWhen you use Sceptre with this handler, the SAM handler performs steps 1-2 above to create a template\nthat Sceptre can use, **but it does not use SAM to deploy it!**. Instead, Sceptre can use that template\nproduced in step 2 above (via `sam package`) to perform all it's usual commands with all it's usual\nmagic!\n\nIn other words, using this handler lets you use resolvers, put your SAM stack into StackGroups, let\nyou name your stack according to Sceptre's naming conventions, `validate`, `diff`, and more! Basically,\nthe SAM stack can be managed using Sceptre just like any other.\n\n### Default behavior\nSAM commands are invoked using the system shell in a subprocess, with stdout redirected to stderr.\nArtifacts will be uploaded using the `artifact_bucket_name` and `artifact_prefix` arguments, the\n`project_code`, and the Sceptre stack name.\n\nFor example, given an `artifact_bucket_name` of \"bucket\", `artifact_prefix` of \"prefix\", a\n`project_code` of \"project\" and a stack config located at \"config/indigo/sam-application.yaml\", SAM\nartifacts will be uploaded to:\n\n`s3://bucket/prefix/project/indigo/sam-application/sam_artifacts/`\n\nBy default, these will be the sam commands that are run _from the template's directory_:\n```shell\nsam build --cached --template-file [path as absolute path]\nsam package \\\n  --s3-bucket [artifact_bucket_name argument] \\\n  --region [the stack region] \\\n  --s3-prefix [the prefix described above] \\\n  --template-file [path as absolute path]\n```\n\nIf any additional arguments are desired for to be passed to SAM, you can specify those with dicts for\nthe `build_args` and `package_args` template handler arguments. These key/value pairs will\noverride the defaults. For any flag-type arguments, set the value to `True`. If you want to remove\na default argument (such as the `--cached` flag for `sam build`), set the value to `None`.\n\n### IAM and authentication\n\nThis handler uses the stack's connection information to generate AWS environment variables and sets\nthose on the sam process, ensuring that the AWS authentication configuration on the stack config and\nproject is carried over to SAM without any need for additional arguments.\n\nIf you desire to use a different profile or region when invoking `sam package` than what is set on\nthe stack, you should specify \"profile\" and/or \"region\" values for \"package_args\".\n\n**Important:** SAM creates CloudFormation-ready templates via `sam package`, which uploads built\nartifacts to S3 in the process. This means that Sceptre commands that do not normally require S3\nactions (such as `generate`, `validate`, `diff`, and others) will require them when using this\nhandler. You will need to ensure that any user or role executing these commands has proper\npermissions for these operations. For more information on required permissions, see the\n[documentation for SAM permissions](\nhttps://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-permissions.html).\n\n### Jinja SAM Templates\nThe SAM Handler supports using SAM templates that have Jinja logic in them. These Jinja templates\nwill have access to the `sceptre_user_data` just like Jinja templates via the normal file handler\ndo. This can be useful for implementing additional template logic (such as loops and other actions)\nin the template.\n\nIf you need to pass variables into the Jinja template for reference via Jinja syntax,\nyou should pass those variables via `sceptre_user_data`. Remember, resolvers can be used with\n`sceptre_user_data`, so this can be a powerful tool to pre-render your templates or reference values\nin areas that a SAM Template cannot use parameters (such as in Transforms).\n\n### Resolvers in the SAM Handler parameters\nIt's likely that you'll want to use your template_bucket_name as your artifact_bucket_name, so you\ndon't need to have a separate bucket for your sam artifacts. However, since template_bucket_name is\ntechnically a resolvable property that could be set via `!stack_output` on your StackGroup config,\nyou cannot directly reference it in your Stack Config with `{{ template_bucket_name }}` if you defined\nit on the StackGroup Config using a resolver. For more information on _why_ you can't do this, you\nshould read about the [Resolution order of values](\nhttps://docs.sceptre-project.org/3.1.0/docs/stack_config.html#resolution-order-of-values) for Sceptre\nStack Configs on Sceptre's documentation.\n\nNonetheless, the bottom line is this: `{{ template_bucket_name }}` may or may not actually work for\nyou, but `!stack_attr template_bucket_name` will **always** work for you, no matter how you've set\nup your project.\n\n### Example Stack Config (simple .yaml)\n```yaml\n# By using the SAM handler, you let SAM build and package the template and upload artifacts to S3\n# and Sceptre will use the packaged template to create the CloudFormation stack, using the stack\n# config.\ntemplate:\n    type: sam\n    path: path/from/my/cwd/template.yaml\n    # If your template_bucket_name is inherited from your StackGroup as a resolver, you cannot use\n    # {{ template_bucket_name }} to reference it, so you need to use the !stack_attr resolver. But\n    # using !stack_attr will always work for you anyway, so you might as well configure the SAM\n    # handler that way.\n    artifact_bucket_name: !stack_attr template_bucket_name\n    # It makes the most sense to use the same prefix as your template_key_prefix so that your SAM\n    # artifacts are foldered similar to your other templates... but it's not strictly necessary.\n    artifact_prefix: !stack_attr template_key_prefix\n    build_args:\n        use-container: True\n\n# You can use resolvers to pass parameters, just like any other Sceptre stack!\nparameters:\n    long_parameter: !file my/file/path\n    my_template_parameter: !stack_output some/other/stack.yaml::SomeOutput\n\n# The SAM Handler will work with all the other stack parameters you might want to use too!\nprofile: my_profile\niam_role: arn:aws:iam::1111111111:role/My-Deployment-Role\nregion: us-east-1\nstack_tags:\n    SomeTag: SomeValue\n```\n\n### Example Stack Config (Using Jinja2 .j2 template)\n```yaml\ntemplate:\n    type: sam\n    path: path/from/my/cwd/template.j2\n    artifact_bucket_name: !stack_attr template_bucket_name\n    artifact_prefix: !stack_attr template_key_prefix\n\n# Remember, Jinja logic cannot access parameter values; Those are accessed via CloudFormation functions\n# like !Ref and !Sub when the stack is being deployed. If you need values to use with your Jinja logic,\n# use sceptre_user_data instead.\nparameters:\n    my_template_parameter: !stack_output some/other/stack.yaml::SomeOutput\n\n# sceptre_user_data is resolved PRIOR TO building and deploying the template and it is passed to\n# Jinja. So you can use sceptre_user_data to control Jinja logic or render values into the template.\n# And because sceptre_user_data is resolvable, you can use resolvers to pass values and even whole\n# template segments to render into the final SAM template before SAM build is ever invoked.\nsceptre_user_data:\n     template_segmant: !file my/template/segment\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sceptre/sceptre-sam-handler",
    "keywords": "sceptre,sceptre-template-handler,sam,aws,cloudformation",
    "license": "Apache2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sceptre-sam-handler",
    "package_url": "https://pypi.org/project/sceptre-sam-handler/",
    "platform": null,
    "project_url": "https://pypi.org/project/sceptre-sam-handler/",
    "project_urls": {
      "Homepage": "https://github.com/sceptre/sceptre-sam-handler"
    },
    "release_url": "https://pypi.org/project/sceptre-sam-handler/1.0.0/",
    "requires_dist": [
      "sceptre (>=4.0)",
      "aws-sam-cli ; extra == 'sam'",
      "pytest (>=3.2.0) ; extra == 'test'",
      "pyfakefs (>=4.5.0) ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "Packages and renders SAM templates for use",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16829017,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad77efc90a52a7c4f8034f95b52d22146b46fb15100725240d31f96578d057bd",
          "md5": "01d87b62e4e028d259823a009732edda",
          "sha256": "50941d2539dec888149b13991d6f187e800c7a531d0fdfae3ded13b6eba0d303"
        },
        "downloads": -1,
        "filename": "sceptre_sam_handler-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01d87b62e4e028d259823a009732edda",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 11590,
        "upload_time": "2021-11-23T21:28:10",
        "upload_time_iso_8601": "2021-11-23T21:28:10.423219Z",
        "url": "https://files.pythonhosted.org/packages/ad/77/efc90a52a7c4f8034f95b52d22146b46fb15100725240d31f96578d057bd/sceptre_sam_handler-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18c6cb63e32bd5a17d107c3579605477eab7ed9ec87aa89010553db07b32d0ef",
          "md5": "dfc3722e0d8a27f6b7d73deb2360a76e",
          "sha256": "2b9fa2f72d84a8fec5b34190b890d32ed3b5e55f1de14b56341fba7339437923"
        },
        "downloads": -1,
        "filename": "sceptre-sam-handler-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dfc3722e0d8a27f6b7d73deb2360a76e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8695,
        "upload_time": "2021-11-23T21:28:11",
        "upload_time_iso_8601": "2021-11-23T21:28:11.814021Z",
        "url": "https://files.pythonhosted.org/packages/18/c6/cb63e32bd5a17d107c3579605477eab7ed9ec87aa89010553db07b32d0ef/sceptre-sam-handler-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "664e26fb6be3d99a4f3b338c06ec5b1e7c6d42165392e68aa0db71573136f459",
          "md5": "b5d5b30bcc1b486ee4464129950877b8",
          "sha256": "ac858f2ee3da0280c1a7a6a6b73bc7f8bbe2d5a633025f4f8e1c4f4585703d21"
        },
        "downloads": -1,
        "filename": "sceptre_sam_handler-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5d5b30bcc1b486ee4464129950877b8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 11582,
        "upload_time": "2021-12-06T22:16:45",
        "upload_time_iso_8601": "2021-12-06T22:16:45.507566Z",
        "url": "https://files.pythonhosted.org/packages/66/4e/26fb6be3d99a4f3b338c06ec5b1e7c6d42165392e68aa0db71573136f459/sceptre_sam_handler-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6e728d5e11729042a393d16560eff07a7b919ffa76af356460e7cbc27ff76ec",
          "md5": "d65c986522e4ee86f1aa1e2e01564f60",
          "sha256": "c8600f6fb26f270d4a414bccdd4f54232cc614878bf9227399e3b6f58a345b58"
        },
        "downloads": -1,
        "filename": "sceptre-sam-handler-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d65c986522e4ee86f1aa1e2e01564f60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8676,
        "upload_time": "2021-12-06T22:16:46",
        "upload_time_iso_8601": "2021-12-06T22:16:46.771435Z",
        "url": "https://files.pythonhosted.org/packages/e6/e7/28d5e11729042a393d16560eff07a7b919ffa76af356460e7cbc27ff76ec/sceptre-sam-handler-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1dbc4cbd0ede08b4588bbb596aa47315f0141a8f1b2f8588b08db7d6d0227a1",
          "md5": "8f06f7d740987a07d367a68720eb4221",
          "sha256": "f9a53ade91380ca46f35291278fee43fc8a4f25f279a0a463d10dcfcd189303f"
        },
        "downloads": -1,
        "filename": "sceptre_sam_handler-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f06f7d740987a07d367a68720eb4221",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 13642,
        "upload_time": "2022-05-28T20:16:24",
        "upload_time_iso_8601": "2022-05-28T20:16:24.477451Z",
        "url": "https://files.pythonhosted.org/packages/c1/db/c4cbd0ede08b4588bbb596aa47315f0141a8f1b2f8588b08db7d6d0227a1/sceptre_sam_handler-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57089b75e962c37a415982b94fa7703f4f99e60bc6f2b154d08383d3d6676a05",
          "md5": "5214b6bbffac8915e658208f78bc09be",
          "sha256": "a96323a412c39dc8b978e88b023e5525ff75c5bfa1c3b36dd280200838dc0798"
        },
        "downloads": -1,
        "filename": "sceptre-sam-handler-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5214b6bbffac8915e658208f78bc09be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12208,
        "upload_time": "2022-05-28T20:16:25",
        "upload_time_iso_8601": "2022-05-28T20:16:25.805250Z",
        "url": "https://files.pythonhosted.org/packages/57/08/9b75e962c37a415982b94fa7703f4f99e60bc6f2b154d08383d3d6676a05/sceptre-sam-handler-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "023c1497cf33f80131b6ad44b8f4b2f7f750ce97bf15b81b735d99095793a1b2",
          "md5": "2d306db222cdc581ed7996d1e9587f93",
          "sha256": "ffee9b053ee7b248f50f221fb92342af3dff7c103627be4e1dd61cf1523ec726"
        },
        "downloads": -1,
        "filename": "sceptre_sam_handler-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d306db222cdc581ed7996d1e9587f93",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 13753,
        "upload_time": "2022-08-05T15:55:47",
        "upload_time_iso_8601": "2022-08-05T15:55:47.882796Z",
        "url": "https://files.pythonhosted.org/packages/02/3c/1497cf33f80131b6ad44b8f4b2f7f750ce97bf15b81b735d99095793a1b2/sceptre_sam_handler-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c5966a8be88597ea09ceffb62e652d22e56717a3390cc50cd20027fd02b5c13",
          "md5": "f8bdec69bb98420e859ed2c0be2a9094",
          "sha256": "89d7daa85568ad9a2826d89d0840f2a4d00cdec90991f5711f6f11b75c80fb7c"
        },
        "downloads": -1,
        "filename": "sceptre-sam-handler-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f8bdec69bb98420e859ed2c0be2a9094",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12340,
        "upload_time": "2022-08-05T15:55:49",
        "upload_time_iso_8601": "2022-08-05T15:55:49.232587Z",
        "url": "https://files.pythonhosted.org/packages/8c/59/66a8be88597ea09ceffb62e652d22e56717a3390cc50cd20027fd02b5c13/sceptre-sam-handler-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bac19c1bc0a980255175545d249d610047b9a97c46e2cd5ece7f5c02717c5f4f",
          "md5": "313102655b215979bbfe3543977ea40a",
          "sha256": "556be971ecf66c35f00ac14289671927432b418f1710fb92601f35c2d12d954c"
        },
        "downloads": -1,
        "filename": "sceptre_sam_handler-0.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "313102655b215979bbfe3543977ea40a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 13746,
        "upload_time": "2022-12-09T17:04:17",
        "upload_time_iso_8601": "2022-12-09T17:04:17.300328Z",
        "url": "https://files.pythonhosted.org/packages/ba/c1/9c1bc0a980255175545d249d610047b9a97c46e2cd5ece7f5c02717c5f4f/sceptre_sam_handler-0.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8462a65a5e22e8013da8424d224a20c51650914b90e055795462d96521c7159",
          "md5": "b6c974a2203e9a6a87816d472cde2fb2",
          "sha256": "a4805fca3e8663d8a1d6d0c794c6de3de19b54b232274bf30f0c56fddcb97208"
        },
        "downloads": -1,
        "filename": "sceptre-sam-handler-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b6c974a2203e9a6a87816d472cde2fb2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13784,
        "upload_time": "2022-12-09T17:04:19",
        "upload_time_iso_8601": "2022-12-09T17:04:19.057323Z",
        "url": "https://files.pythonhosted.org/packages/c8/46/2a65a5e22e8013da8424d224a20c51650914b90e055795462d96521c7159/sceptre-sam-handler-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "405f79a0e0fdf878c19b628ec175d60d200e2c6bef276325fcd41f10e779588d",
          "md5": "8f13a7473b7e976ff9485fda4794eb5d",
          "sha256": "ba50af0b09807c7dbff6471bb07c4dceda46027d693a7f2db7adf915fba9205b"
        },
        "downloads": -1,
        "filename": "sceptre_sam_handler-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f13a7473b7e976ff9485fda4794eb5d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 13088,
        "upload_time": "2023-02-12T23:16:03",
        "upload_time_iso_8601": "2023-02-12T23:16:03.031698Z",
        "url": "https://files.pythonhosted.org/packages/40/5f/79a0e0fdf878c19b628ec175d60d200e2c6bef276325fcd41f10e779588d/sceptre_sam_handler-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b79bcf26cbefebca5946312f552d3da86629d43b73d4cfa1cc551608c6f83ae1",
          "md5": "372e179b9c98f5b41ed173fcdc6b536d",
          "sha256": "f7ed9f80fe7ed4b6b12ba215152d98661e634429958a40419250e085ae51bcad"
        },
        "downloads": -1,
        "filename": "sceptre-sam-handler-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "372e179b9c98f5b41ed173fcdc6b536d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13146,
        "upload_time": "2023-02-12T23:16:04",
        "upload_time_iso_8601": "2023-02-12T23:16:04.094235Z",
        "url": "https://files.pythonhosted.org/packages/b7/9b/cf26cbefebca5946312f552d3da86629d43b73d4cfa1cc551608c6f83ae1/sceptre-sam-handler-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "405f79a0e0fdf878c19b628ec175d60d200e2c6bef276325fcd41f10e779588d",
        "md5": "8f13a7473b7e976ff9485fda4794eb5d",
        "sha256": "ba50af0b09807c7dbff6471bb07c4dceda46027d693a7f2db7adf915fba9205b"
      },
      "downloads": -1,
      "filename": "sceptre_sam_handler-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8f13a7473b7e976ff9485fda4794eb5d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 13088,
      "upload_time": "2023-02-12T23:16:03",
      "upload_time_iso_8601": "2023-02-12T23:16:03.031698Z",
      "url": "https://files.pythonhosted.org/packages/40/5f/79a0e0fdf878c19b628ec175d60d200e2c6bef276325fcd41f10e779588d/sceptre_sam_handler-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b79bcf26cbefebca5946312f552d3da86629d43b73d4cfa1cc551608c6f83ae1",
        "md5": "372e179b9c98f5b41ed173fcdc6b536d",
        "sha256": "f7ed9f80fe7ed4b6b12ba215152d98661e634429958a40419250e085ae51bcad"
      },
      "downloads": -1,
      "filename": "sceptre-sam-handler-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "372e179b9c98f5b41ed173fcdc6b536d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13146,
      "upload_time": "2023-02-12T23:16:04",
      "upload_time_iso_8601": "2023-02-12T23:16:04.094235Z",
      "url": "https://files.pythonhosted.org/packages/b7/9b/cf26cbefebca5946312f552d3da86629d43b73d4cfa1cc551608c6f83ae1/sceptre-sam-handler-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}