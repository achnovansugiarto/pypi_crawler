{
  "info": {
    "author": "Sebastian Hönel",
    "author_email": "development@hoenel.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Intended Audience :: Education",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "License :: Other/Proprietary License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Topic :: Utilities"
    ],
    "description": "Metrics As Scores\n[![DOI](https://zenodo.org/badge/524333119.svg)](https://zenodo.org/badge/latestdoi/524333119)\n[![status](https://joss.theoj.org/papers/eb549efe6c0111490395496c68717579/status.svg)](https://joss.theoj.org/papers/eb549efe6c0111490395496c68717579)\n[![codecov](https://codecov.io/github/MrShoenel/metrics-as-scores/branch/master/graph/badge.svg?token=HO1GYXVEUQ)](https://codecov.io/github/MrShoenel/metrics-as-scores)\n================\n\n- <a href=\"#usage\" id=\"toc-usage\"><span\n  class=\"toc-section-number\">1</span> Usage</a>\n  - <a href=\"#text-based-user-interface-tui\"\n    id=\"toc-text-based-user-interface-tui\"><span\n    class=\"toc-section-number\">1.1</span> Text-based User Interface\n    (TUI)</a>\n  - <a href=\"#web-application\" id=\"toc-web-application\"><span\n    class=\"toc-section-number\">1.2</span> Web Application</a>\n  - <a href=\"#development-setup\" id=\"toc-development-setup\"><span\n    class=\"toc-section-number\">1.3</span> Development Setup</a>\n    - <a href=\"#setting-up-a-virtual-environment\"\n      id=\"toc-setting-up-a-virtual-environment\"><span\n      class=\"toc-section-number\">1.3.1</span> Setting Up a Virtual\n      Environment</a>\n    - <a href=\"#installing-packages\" id=\"toc-installing-packages\"><span\n      class=\"toc-section-number\">1.3.2</span> Installing Packages</a>\n    - <a href=\"#running-tests\" id=\"toc-running-tests\"><span\n      class=\"toc-section-number\">1.3.3</span> Running Tests</a>\n- <a href=\"#example-usage\" id=\"toc-example-usage\"><span\n  class=\"toc-section-number\">2</span> Example Usage</a>\n  - <a href=\"#concrete-example-using-the-qualitas.class-corpus-dataset\"\n    id=\"toc-concrete-example-using-the-qualitas.class-corpus-dataset\"><span\n    class=\"toc-section-number\">2.1</span> Concrete Example Using the\n    Qualitas.class Corpus Dataset</a>\n  - <a href=\"#concrete-example-using-the-iris-dataset\"\n    id=\"toc-concrete-example-using-the-iris-dataset\"><span\n    class=\"toc-section-number\">2.2</span> Concrete Example Using the Iris\n    Dataset</a>\n  - <a href=\"#diamonds-example\" id=\"toc-diamonds-example\"><span\n    class=\"toc-section-number\">2.3</span> Diamonds Example</a>\n- <a href=\"#datasets\" id=\"toc-datasets\"><span\n  class=\"toc-section-number\">3</span> Datasets</a>\n  - <a href=\"#use-your-own\" id=\"toc-use-your-own\"><span\n    class=\"toc-section-number\">3.1</span> Use Your Own</a>\n  - <a href=\"#known-datasets\" id=\"toc-known-datasets\"><span\n    class=\"toc-section-number\">3.2</span> Known Datasets</a>\n- <a href=\"#personalizing-the-web-application\"\n  id=\"toc-personalizing-the-web-application\"><span\n  class=\"toc-section-number\">4</span> Personalizing the Web\n  Application</a>\n- <a href=\"#references\" id=\"toc-references\">References</a>\n\n------------------------------------------------------------------------\n\n**Please Note**: ***Metrics As Scores*** (`MAS`) changed considerably\nbetween versions\n[**`v1.0.8`**](https://github.com/MrShoenel/metrics-as-scores/tree/v1.0.8)\nand **`v2.x.x`**.\n\nThe current version is `v2.5.0`.\n\nFrom version **`v2.x.x`** it has the following new features:\n\n- [Textual User Interface (TUI)](#text-based-user-interface-tui)\n- Proper documentation and testing\n- New version on PyPI. Install the package and run the command line\n  interface by typing **`mas`**!\n\n[Metrics As Scores\nDemo.](https://user-images.githubusercontent.com/5049151/219892077-58854478-b761-4a3d-9faf-2fe46c122cf5.webm)\n\n------------------------------------------------------------------------\n\nContains the data and scripts needed for the application\n**`Metrics as Scores`**, check out <https://metrics-as-scores.ml/>.\n\nThis package accompanies the paper entitled “*Contextual\nOperationalization of Metrics As Scores: Is My Metric Value Good?*”\n(Hönel et al. 2022). It seeks to answer the question whether or not the\ndomain a software metric was captured in, matters. It enables the user\nto compare domains and to understand their differences. In order to\nanswer the question of whether a metric value is actually good, we need\nto transform it into a **score**. Scores are normalized **and\nrectified** distances, that can be compared in an apples-to-apples\nmanner, across domains. The same metric value might be good in one\ndomain, while it is not in another. To borrow an example from the domain\nof software: It is much more acceptable (or common) to have large\napplications (in terms of lines of code) in the domains of games and\ndatabases than it is for the domains of IDEs and SDKs. Given an *ideal*\nvalue for a metric (which may also be user-defined), we can transform\nobserved metric values to distances from that value and then use the\ncumulative distribution function to map distances to scores.\n\n------------------------------------------------------------------------\n\n# Usage\n\nYou may install Metrics As Scores directly from PyPI. For users that\nwish to\n[**contribute**](https://github.com/MrShoenel/metrics-as-scores/blob/master/CONTRIBUTING.md)\nto Metrics As Scores, a [development setup](#development-setup) is\nrecommended. In either case, after the installation, [**you have access\nto the text-based user interface**](#text-based-user-interface-tui).\n\n``` shell\n# Installation from PyPI:\npip install metrics-as-scores\n```\n\nYou can **bring up the TUI** simply by typing the following after\ninstalling or cloning the repo (see next section for more details):\n\n``` shell\nmas\n```\n\n## Text-based User Interface (TUI)\n\nMetrics As Scores features a text-based command line user interface\n(TUI). It offers a couple of workflows/wizards, that help you to work\nand interact with the application. There is no need to modify any source\ncode, if you want to do one of the following:\n\n- Show Installed Datasets\n- Show List of Known Datasets Available Online That Can Be Downloaded\n- Download and install a known or existing dataset\n- Create Own Dataset to be used with Metrics-As-Scores\n- Fit Parametric Distributions for Own Dataset\n- Pre-generate distributions for usage in the\n  [**Web-Application**](#web-application)\n- Bundle Own dataset so it can be published\n- Run local, interactive Web-Application using a selected dataset\n\n![Metrics As Scores Text-based User Interface\n(TUI).](./TUI.png \"Metrics As Scores Text-based User Interface (TUI).\")\n\n## Web Application\n\nMetrics As Scores’ main feature is perhaps the Web Application. It can\nbe run directly and locally from the TUI using a selected dataset (you\nmay download a known dataset or use your own). The Web Application\nallows to visually inspect each *feature* across all the defined\n*groups*. It feates the PDF/PMF, CDF and CCDF, as well as the PPF for\neach feature in each group. It offers five different principal types of\ndensities: Parametric, Parametric (discrete), Empirical, Empirical\n(discrete), and (approximate) Kernel Density Estimation. The Web\nApplication includes a detailed [Help\nsection](https://metrics-as-scores.ml/#help) that should answer most of\nyour questions.\n\n![Metrics As Scores Interactive Web\n.](./WebApp.png \"Metrics As Scores Interactive Web Appliction.\")\n\n## Development Setup\n\nThis project was developed using and requires Python `>=3.10`. Steps:\n\n1.  Clone the Repository,\n2.  Set up a virtual environment,\n3.  Install packages.\n\n### Setting Up a Virtual Environment\n\nIt is recommended to use a virtual environment. To use a virtual\nenvironment, follow these steps (Windows specific; activation of the\nenvironment might differ).\n\n``` shell\nvirtualenv --python=C:/Python310/python.exe venv # Use specific Python version for virtual environment\nvenv/Scripts/activate\n```\n\nHere is a Linux example that assumes you have Python `3.10` installed\n(this may also require installing `python3.10-venv` and/or\n`python3.10-dev`):\n\n``` shell\npython3.10 -m venv venv\nsource venv/bin/activate # Linux\n```\n\n### Installing Packages\n\nThe project is managed with `Poetry`. To install the required packages,\nsimply run the following.\n\n``` shell\nvenv/Scripts/activate\n# First install Poetry using pip:\n(venv) C:\\metrics-as-scores>pip install poetry\n# Install the projects and its dependencies\n(venv) C:\\metrics-as-scores> poetry install\n```\n\nThe same in Linux:\n\n``` shell\nsource venv/bin/activate # Linux\n(venv) ubuntu@vm:/tmp/metrics-as-scores$ pip install poetry\n(venv) ubuntu@vm:/tmp/metrics-as-scores$ poetry install\n```\n\n### Running Tests\n\nTests are run using `poethepoet`:\n\n``` shell\n# Runs the tests and prints coverage\n(venv) C:\\metrics-as-scores>poe test\n```\n\nYou can also generate coverage reports:\n\n``` shell\n# Writes reports to the local directory htmlcov\n(venv) C:\\metrics-as-scores>poe cov\n```\n\n------------------------------------------------------------------------\n\n# Example Usage\n\n*Metrics As Scores* can be thought of an *interactive*, *multiple-ANOVA*\nanalysis and explorer. The analysis of variance (ANOVA; John M. Chambers\n(2017)) is usually used to analyze the differences among *hypothesized*\ngroup means for a single *feature*. An ANOVA might be used to estimate\nthe goodness-of-fit of a statistical model. Beyond ANOVA, `MAS` seeks to\nanswer the question of whether a sample of a certain quantity (feature)\nis more or less common across groups. For each group, we can determine\nwhat might constitute a common/ideal value, and how distant the sample\nis from that value. This is expressed in terms of a percentile (a\nstandardized scale of `[0,1]`), which we call **score**.\n\n## Concrete Example Using the Qualitas.class Corpus Dataset\n\nThe notebook\n[`notebooks/Example-webapp-qcc.ipynb`](https://github.com/MrShoenel/metrics-as-scores/blob/master/notebooks/Example-webapp-qcc.ipynb)\nholds a concrete example for using the web application to interactively\nobtain **scores**. In this example, we create a hypothetical application\nthat ought to be in the application domain *SDK*. Using a concrete\nmetric, *Number of Packages*, we find out that our hypothetical new SDK\napplication scores poorly for what it is intended to be.\n\nThis example illustrates the point that software metrics, when captured\nout of context, are meaningless (Gil and Lalouche 2016). For example,\ntypical values for complexity metrics are vastly different, depending on\nthe type of application. We find that, for example, applications of type\nSDK have a much lower *expected* complexity compared to Games (`1.9`\nvs. `3.1`) (Hönel et al. 2022). Software metrics are often used in\nsoftware quality models. However, without knowledge of the application’s\ncontext (here: domain), the deduced quality of these models is at least\nmisleading, if not completely off. This becomes apparent if we examine\nhow an application’s complexity scores across certain domains.\n\nSince there are many software metrics that are captured simultaneously,\nwe can also compare domains in their entirety: How many metrics are\nstatistically significantly different from each other? Is there a set of\ndomains that are not distinguishable from each other? Are there metrics\nthat are always different across domains and must be used with care? In\nthis example, we use a known and downloadable dataset (Hönel 2023b). It\nis based on software metrics and application domains of the\n“Qualitas.class corpus” (Terra et al. 2013; Tempero et al. 2010).\n\n## Concrete Example Using the Iris Dataset\n\nThe notebook\n[`notebooks/Example-create-own-dataset.ipynb`](https://github.com/MrShoenel/metrics-as-scores/blob/master/notebooks/Example-create-own-dataset.ipynb)\nholds a concrete example for creating/importing/using one’s own dataset.\nAlthough all necessary steps can be achieved using the **TUI**, this\nnotebook demonstrates a complete example of implementing this in code.\n\n## Diamonds Example\n\nThe diamonds dataset (Wickham 2016) holds prices of over 50,000 round\ncut diamonds. It contains a number attributes for each diamond, such as\nits price, length, depth, or weight. The dataset, however, features\nthree quality attributes: The quality of the cut, the clarity, and the\ncolor. Suppose we are interested in examining properties of diamonds of\nthe highest quality only, across colors. Therefore, we select only those\ndiamonds from the dataset that have an *ideal* cut and the best (*IF*)\nclarity. Now only the color quality gives a context to each diamonds and\nits attributes (i.e., diamonds are now *grouped* by color).\n\nThis constellation now allows us to examine differences across\ndifferently colored diamonds. For example, there are considerable\ndifferences in price. We find that only the group of diamonds of the\nbest color is significantly different from the other groups. This\nexample is available as a downloadable dataset (Hönel 2023c).\n\n------------------------------------------------------------------------\n\n# Datasets\n\nMetrics As Scores can use existing and own datasets. Please keep reading\nto learn how.\n\n## Use Your Own\n\nMetrics As Scores has a built-in wizard that lets you import your own\ndataset! There is another wizard that bundles your dataset so that it\ncan be shared with others. You may [**contribute your\ndataset**](https://github.com/MrShoenel/metrics-as-scores/blob/master/CONTRIBUTING.md)\nso we can add it to the curated list of known datasets (see next\nsection). If you do not have an own dataset, you can use the built-in\nwizard to download any of the known datasets, too!\n\nNote that Metrics As Scores supports you with all tools necessary to\ncreate a publishable dataset. For example, it carries out the common\nstatistical tests:\n\n- ANOVA (John M. Chambers 2017): Analysis of variance of your data\n  across the available groups.\n- Tukey’s Honest Significance Test (TukeyHSD; Tukey (1949)): This test\n  is used to gain insights into the results of an ANOVA test. While the\n  former only allows obtaining the amount of corroboration for the null\n  hypothesis, TukeyHSD performs all pairwise comparisons (for all\n  possible combinations of any two groups).\n- Two-sample T-test: Compares the means of two samples to give an\n  indication whether or not they appear to come from the same\n  distribution. Again, this is useful for comparing groups. Tukey’s test\n  is used to gain insights into the results of an ANOVA test. While the\n  former only allows obtaining the amount of corroboration for the null\n  hypothesis, TukeyHSD performs all pairwise comparisons (for all\n  possible combinations of any two groups).\n\nIt also creates an **automatic report** based on these tests that you\ncan simply render into a PDF using Quarto.\n\nA publishable dataset must contain parametric fits and pre-generated\ndensities (please check the wizard for these two). Metrics As Scores can\nfit approximately **120** continuous and discrete random variables using\n`Pymoo` (Blank and Deb 2020). Note that Metrics As Scores also\nautomatically carries out a number of goodness-of-fit tests. The type of\ntest also depends on the data (for example, not each test is valid for\ndiscrete data, such as the KS two-sample test). These tests are then\nused to select some best fitting random variable for display in the web\napplication.\n\n- Cramér-von Mises- (Cramér 1928) and Kolmogorov–Smirnov one-sample\n  (Stephens 1974) tests: After fitting a distribution, the sample is\n  tested against the fitted parametric distribution. Since the fitted\n  distribution cannot usually accommodate all of the sample’s\n  subtleties, the test will indicate whether the fit is acceptable or\n  not.\n- Cramér-von Mises- (Anderson 1962), Kolmogorov–Smirnov-, and\n  Epps–Singleton (Epps and Singleton 1986) two-sample tests: After\n  fitting, we create a second sample by uniformly sampling from the\n  `PPF`. Then, both samples can be used in these tests. The\n  Epps–Singleton test is also applicable for discrete distributions.\n\n## Known Datasets\n\nThe following is a curated list of known, publicly available datasets\nthat can be used with Metrics As Scores. These datasets can be\ndownloaded using the text-based user interface.\n\n- Metrics and Domains From the Qualitas.class Corpus (Hönel 2023b). 10\n  GB. <https://doi.org/10.5281/zenodo.7633949>.\n- Elisa Spectrophotometer Positive Samples (Hönel 2023a). 266 MB.\n  <https://doi.org/10.5281/zenodo.7633989>.\n- Price, Weight, and Other Properties of Over 1,200 Ideal-Cut and\n  Best-Clarity Diamonds (Hönel 2023c). 508 MB.\n  <https://doi.org/10.5281/zenodo.7647596>.\n- The Iris Flower Data Set (Hönel 2023d). 143 MB.\n  <https://doi.org/10.5281/zenodo.7669645>.\n\n------------------------------------------------------------------------\n\n# Personalizing the Web Application\n\nThe web application *“[Metrics As\nScores](https://metrics-as-scores.ml/)”* is located in the directory\n[`src/metrics_as_scores/webapp/`](https://github.com/MrShoenel/metrics-as-scores/blob/master/src/metrics_as_scores/webapp/).\nThe app itself has three vertical blocks: a header, the interactive\npart, and a footer. Header and footer can be easily edited by modifing\nthe files\n[`src/metrics_as_scores/webapp/header.html`](https://github.com/MrShoenel/metrics-as-scores/blob/master/src/metrics_as_scores/webapp/header.html)\nand\n[`src/metrics_as_scores/webapp/footer.html`](https://github.com/MrShoenel/metrics-as-scores/blob/master/src/metrics_as_scores/webapp/footer.html).\n\nNote that when you create your own dataset, you get to add sections to\nthe header and footer using two HTML fragments. This is recommended over\nmodifying the web application directly.\n\nIf you want to change the title of the application, you will have to\nmodify the file\n[`src/metrics_as_scores/webapp/main.py`](https://github.com/MrShoenel/metrics-as-scores/blob/master/src/metrics_as_scores/webapp/main.py)\nat the very end:\n\n``` python\n# Change this line to your desired title.\ncurdoc().title = \"Metrics As Scores\"\n```\n\n**Important**: If you modify the web application, you must always\nmaintain two links: one to <https://metrics-as-scores.ml/> and one to\nthis repository, that is,\n<https://github.com/MrShoenel/metrics-as-scores>.\n\n# References\n\n<div id=\"refs\" class=\"references csl-bib-body hanging-indent\">\n\n<div id=\"ref-anderson1962\" class=\"csl-entry\">\n\nAnderson, T. W. 1962. “<span class=\"nocase\">On the Distribution of the\nTwo-Sample Cramer-von Mises Criterion</span>.” *The Annals of\nMathematical Statistics* 33 (3): 1148–59.\n<https://doi.org/10.1214/aoms/1177704477>.\n\n</div>\n\n<div id=\"ref-pymoo2020\" class=\"csl-entry\">\n\nBlank, Julian, and Kalyanmoy Deb. 2020. “Pymoo: Multi-Objective\nOptimization in Python.” *IEEE Access* 8: 89497–509.\n<https://doi.org/10.1109/ACCESS.2020.2990567>.\n\n</div>\n\n<div id=\"ref-cramer1928\" class=\"csl-entry\">\n\nCramér, Harald. 1928. “On the Composition of Elementary Errors.”\n*Scandinavian Actuarial Journal* 1928 (1): 13–74.\n<https://doi.org/10.1080/03461238.1928.10416862>.\n\n</div>\n\n<div id=\"ref-epps1986\" class=\"csl-entry\">\n\nEpps, T. W., and Kenneth J. Singleton. 1986. “An Omnibus Test for the\nTwo-Sample Problem Using the Empirical Characteristic Function.”\n*Journal of Statistical Computation and Simulation* 26 (3-4): 177–203.\n<https://doi.org/10.1080/00949658608810963>.\n\n</div>\n\n<div id=\"ref-gil2016software\" class=\"csl-entry\">\n\nGil, Joseph Yossi, and Gal Lalouche. 2016. “When Do Software Complexity\nMetrics Mean Nothing? - When Examined Out of Context.” *J. Object\nTechnol.* 15 (1): 2:1–25. <https://doi.org/10.5381/jot.2016.15.5.a2>.\n\n</div>\n\n<div id=\"ref-dataset_elisa\" class=\"csl-entry\">\n\nHönel, Sebastian. 2023a. “Metrics As Scores Dataset: Elisa\nSpectrophotometer Positive Samples.” Zenodo.\n<https://doi.org/10.5281/zenodo.7633989>.\n\n</div>\n\n<div id=\"ref-dataset_qcc\" class=\"csl-entry\">\n\n———. 2023b. “<span class=\"nocase\">Metrics As Scores Dataset: Metrics and\nDomains From the Qualitas.class Corpus</span>.” Zenodo.\n<https://doi.org/10.5281/zenodo.7633949>.\n\n</div>\n\n<div id=\"ref-dataset_diamonds-ideal-if\" class=\"csl-entry\">\n\n———. 2023c. “<span class=\"nocase\">Metrics As Scores Dataset: Price,\nWeight, and Other Properties of Over 1,200 Ideal-Cut and Best-Clarity\nDiamonds</span>.” Zenodo. <https://doi.org/10.5281/zenodo.7647596>.\n\n</div>\n\n<div id=\"ref-dataset_iris\" class=\"csl-entry\">\n\n———. 2023d. “Metrics As Scores Dataset: The Iris Flower Data Set.”\nZenodo. <https://doi.org/10.5281/zenodo.7669664>.\n\n</div>\n\n<div id=\"ref-honel2022qrs\" class=\"csl-entry\">\n\nHönel, Sebastian, Morgan Ericsson, Welf Löwe, and Anna Wingkvist. 2022.\n“Contextual Operationalization of Metrics as Scores: Is My Metric Value\nGood?” In *22nd IEEE International Conference on Software Quality,\nReliability and Security, QRS 2022, Guangzhou, China, December 5-9,\n2022*, 333–43. IEEE. <https://doi.org/10.1109/QRS57517.2022.00042>.\n\n</div>\n\n<div id=\"ref-chambers2017\" class=\"csl-entry\">\n\nJohn M. Chambers, Richard M. Heiberger, Anne E. Freeny. 2017. “Analysis\nof Variance; Designed Experiments.” In *Statistical Models in S*, edited\nby John M. Chambers and Trevor J. Hastie, 1st ed. Routledge.\n<https://doi.org/10.1201/9780203738535>.\n\n</div>\n\n<div id=\"ref-stephens1974\" class=\"csl-entry\">\n\nStephens, M. A. 1974. “EDF Statistics for Goodness of Fit and Some\nComparisons.” *Journal of the American Statistical Association* 69\n(347): 730–37. <https://doi.org/10.1080/01621459.1974.10480196>.\n\n</div>\n\n<div id=\"ref-tempero2010qualitas\" class=\"csl-entry\">\n\nTempero, Ewan D., Craig Anslow, Jens Dietrich, Ted Han, Jing Li, Markus\nLumpe, Hayden Melton, and James Noble. 2010. “The Qualitas Corpus: A\nCurated Collection of Java Code for Empirical Studies.” In *17th Asia\nPacific Software Engineering Conference, APSEC 2010, Sydney, Australia,\nNovember 30 - December 3, 2010*, edited by Jun Han and Tran Dan Thu,\n336–45. IEEE Computer Society. <https://doi.org/10.1109/APSEC.2010.46>.\n\n</div>\n\n<div id=\"ref-terra2013qcc\" class=\"csl-entry\">\n\nTerra, Ricardo, Luis Fernando Miranda, Marco Túlio Valente, and Roberto\nda Silva Bigonha. 2013. “Qualitas.class Corpus: A Compiled Version of\nthe Qualitas Corpus.” *ACM SIGSOFT Softw. Eng. Notes* 38 (5): 1–4.\n<https://doi.org/10.1145/2507288.2507314>.\n\n</div>\n\n<div id=\"ref-tukey1949anova\" class=\"csl-entry\">\n\nTukey, John W. 1949. “Comparing Individual Means in the Analysis of\nVariance.” *Biometrics* 5 (2): 99–114.\n<http://www.jstor.org/stable/3001913>.\n\n</div>\n\n<div id=\"ref-ggplot2\" class=\"csl-entry\">\n\nWickham, Hadley. 2016. *<span class=\"nocase\">ggplot2</span>: Elegant\nGraphics for Data Analysis*. Springer-Verlag New York.\n<https://ggplot2.tidyverse.org>.\n\n</div>\n\n</div>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mrshoenel/metrics-as-scores",
    "keywords": "distribution fitting,statistical tests,context-dependent,metrics,quality,score",
    "license": "Dual-licensed under GNU General Public License v3 (GPLv3) and closed-source",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metrics-as-scores",
    "package_url": "https://pypi.org/project/metrics-as-scores/",
    "platform": null,
    "project_url": "https://pypi.org/project/metrics-as-scores/",
    "project_urls": {
      "Homepage": "https://github.com/mrshoenel/metrics-as-scores",
      "Repository": "https://github.com/mrshoenel/metrics-as-scores/issues"
    },
    "release_url": "https://pypi.org/project/metrics-as-scores/2.5.0/",
    "requires_dist": [
      "bokeh (>=2.4.3,<3.0.0)",
      "joblib (>=1.2.0,<2.0.0)",
      "jupyterlab (>=3.4.7,<4.0.0)",
      "matplotlib (>=3.6.0,<4.0.0)",
      "ptvsd (>=4.3.2,<5.0.0)",
      "pymoo (>=0.6.0,<0.7.0)",
      "scipy (>=1.9.1,<2.0.0)",
      "statsmodels (>=0.13.2,<0.14.0)",
      "StrEnum (>=0.4.8,<0.5.0)",
      "tqdm (>=4.64.1,<5.0.0)",
      "Sphinx (>=5.3.0,<6.0.0)",
      "sphinx-rtd-theme (>=1.1.1,<2.0.0)",
      "toml (>=0.10.2,<0.11.0)",
      "rich (>=13.3.1,<14.0.0)",
      "questionary (>=1.10.0,<2.0.0)",
      "tabulate (>=0.9.0,<0.10.0)",
      "scikit-learn (>=1.2.1,<2.0.0)",
      "nptyping (>=2.4.1,<3.0.0)",
      "pytest-cov (>=4.0.0,<5.0.0)",
      "poethepoet (>=0.18.1,<0.19.0)",
      "wget (>=3.2,<4.0)",
      "myst-parser (>=1.0.0,<2.0.0)"
    ],
    "requires_python": ">=3.10,<3.12",
    "summary": "Interactive web application, tool- and analysis suite for approximating, exploring, understanding, and sampling from conditional distributions.",
    "version": "2.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17256285,
  "releases": {
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "984a607ed2e2ccc748f1096a0ff4efab72dfb4307ac01149c9e575f64bc78399",
          "md5": "7860df909c7934f373b58c42efe42eab",
          "sha256": "3369924d09067e66d8315ae275bea9bc4e55900168c273c1d0bafaea53eb250d"
        },
        "downloads": -1,
        "filename": "metrics_as_scores-1.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7860df909c7934f373b58c42efe42eab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<3.12",
        "size": 127200,
        "upload_time": "2022-10-03T14:30:41",
        "upload_time_iso_8601": "2022-10-03T14:30:41.143461Z",
        "url": "https://files.pythonhosted.org/packages/98/4a/607ed2e2ccc748f1096a0ff4efab72dfb4307ac01149c9e575f64bc78399/metrics_as_scores-1.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b96649fd51b2eff84ae1c5c8fcaf3cb603243a9c80210f98eaf6a428adcbccdd",
          "md5": "ec40a7216fa206b3aad975eb356a8b4d",
          "sha256": "6ad38cb157730670a2f69917430e6ba81d8a107e64d5968063f0ba14c16be206"
        },
        "downloads": -1,
        "filename": "metrics-as-scores-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "ec40a7216fa206b3aad975eb356a8b4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<3.12",
        "size": 126203,
        "upload_time": "2022-10-03T14:30:39",
        "upload_time_iso_8601": "2022-10-03T14:30:39.251097Z",
        "url": "https://files.pythonhosted.org/packages/b9/66/49fd51b2eff84ae1c5c8fcaf3cb603243a9c80210f98eaf6a428adcbccdd/metrics-as-scores-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db815d19bf9040f919d607031e9fcbb81c4b673b2495eaafe92e2547f60ac27e",
          "md5": "b9401bb557af9d3e561adc17e18b83d0",
          "sha256": "3777a94b57d499bfbb492b0d817e4e062efd9f980fab2244bba3cc3e91e7db41"
        },
        "downloads": -1,
        "filename": "metrics_as_scores-2.5.0-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "b9401bb557af9d3e561adc17e18b83d0",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.10,<3.12",
        "size": 181832,
        "upload_time": "2023-03-11T22:49:26",
        "upload_time_iso_8601": "2023-03-11T22:49:26.794630Z",
        "url": "https://files.pythonhosted.org/packages/db/81/5d19bf9040f919d607031e9fcbb81c4b673b2495eaafe92e2547f60ac27e/metrics_as_scores-2.5.0-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a938f1096786017d275f5b081acaba54f13812be0fea7c2f0930f1fa7d1101f6",
          "md5": "f36dd184abeaa58ae80b241c022b912a",
          "sha256": "701f603848471b8e5f932c2b2b59c4f4182846b664b43a2cfdc43e282c20aff3"
        },
        "downloads": -1,
        "filename": "metrics_as_scores-2.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f36dd184abeaa58ae80b241c022b912a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<3.12",
        "size": 171492,
        "upload_time": "2023-03-11T22:49:28",
        "upload_time_iso_8601": "2023-03-11T22:49:28.915513Z",
        "url": "https://files.pythonhosted.org/packages/a9/38/f1096786017d275f5b081acaba54f13812be0fea7c2f0930f1fa7d1101f6/metrics_as_scores-2.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db815d19bf9040f919d607031e9fcbb81c4b673b2495eaafe92e2547f60ac27e",
        "md5": "b9401bb557af9d3e561adc17e18b83d0",
        "sha256": "3777a94b57d499bfbb492b0d817e4e062efd9f980fab2244bba3cc3e91e7db41"
      },
      "downloads": -1,
      "filename": "metrics_as_scores-2.5.0-cp310-cp310-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "b9401bb557af9d3e561adc17e18b83d0",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.10,<3.12",
      "size": 181832,
      "upload_time": "2023-03-11T22:49:26",
      "upload_time_iso_8601": "2023-03-11T22:49:26.794630Z",
      "url": "https://files.pythonhosted.org/packages/db/81/5d19bf9040f919d607031e9fcbb81c4b673b2495eaafe92e2547f60ac27e/metrics_as_scores-2.5.0-cp310-cp310-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a938f1096786017d275f5b081acaba54f13812be0fea7c2f0930f1fa7d1101f6",
        "md5": "f36dd184abeaa58ae80b241c022b912a",
        "sha256": "701f603848471b8e5f932c2b2b59c4f4182846b664b43a2cfdc43e282c20aff3"
      },
      "downloads": -1,
      "filename": "metrics_as_scores-2.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f36dd184abeaa58ae80b241c022b912a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<3.12",
      "size": 171492,
      "upload_time": "2023-03-11T22:49:28",
      "upload_time_iso_8601": "2023-03-11T22:49:28.915513Z",
      "url": "https://files.pythonhosted.org/packages/a9/38/f1096786017d275f5b081acaba54f13812be0fea7c2f0930f1fa7d1101f6/metrics_as_scores-2.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}