{
  "info": {
    "author": "",
    "author_email": "Ichinga Samuel <ichingasamuel@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# aiomql\r\n![GitHub](https://img.shields.io/github/license/ichinga-samuel/aiomql?style=plastic)\r\n![GitHub issues](https://img.shields.io/github/issues/ichinga-samuel/aiomql?style=plastic)\r\n![PyPI](https://img.shields.io/pypi/v/aiomql)\r\n![GitHub Workflow Status](https://img.shields.io/github/workflow/status/ichinga-samuel/aiomql/Push)\r\n![Libraries.io dependency status for GitHub repo](https://img.shields.io/librariesio/github/ichinga-samuel/aiomql)\r\n\r\n## Installation\r\n```bash\r\npip install aiomql\r\n```\r\n\r\n## Key Features\r\n- Asynchronous Python Library For MetaTrader 5\r\n- Build bots for trading in different financial markets using a bot factory\r\n- Use threadpool or proccesspool executors to run multiple strategies on multiple instruments concurrently\r\n- Record and keep track of trades and strategies in csv files.\r\n- Utility classes for using the MetaTrader 5 Library\r\n- Sample Pre-Built strategies\r\n\r\n## Simple Usage as an Async MetaTrader5 Libray\r\n```python\r\nimport asyncio\r\n\r\n# import the class\r\nfrom aiomql import MetaTrader\r\nfrom aiomql import Account, Terminal\r\nfrom aiomql import TimeFrame, OrderType\r\n\r\n\r\nasync def main():\r\n    # Initialize Terminal\r\n    terminal = Terminal()\r\n    mt5 = MetaTrader()\r\n    await mt5.initialize()\r\n\r\n    # create Account\r\n    account = Account(account_number=30371334, password=\"nwa0#anaEze\", server=\"Deriv-Demo\")\r\n\r\n    # login with account\r\n    await account.login()\r\n\r\n    # connection status with the account.connected property\r\n    res = \"Login Successful\" if account.connected else \"Unable to login into account\"\r\n    print(res)\r\n\r\n    # set account properties\r\n    account.risk = 0.10  # percentage of account equity to risk i.e 10%\r\n    account.risk_to_reward = 3\r\n\r\n    # get symbols available for the account if login was successful\r\n    if account.connected:\r\n        symbols = await mt5.symbols_get()\r\n        print(symbols)\r\n\r\n    # print timeframe constant for five minutes\r\n    print(TimeFrame.M5)\r\n    await terminal.shutdown()\r\n\r\n\r\nasyncio.run(main())\r\n```\r\n## As a Bot Building FrameWork using a Prebuilt Strategy\r\n```python\r\nimport logging\r\n\r\nfrom aiomql import Bot\r\nfrom aiomql.lib import ForexMarket, FingerTrap\r\n\r\nfmt = \"%(asctime)s : %(message)s\"\r\n\r\nlogging.basicConfig(filename='example.log', format=fmt, level=logging.DEBUG)\r\n\r\nmarket = ForexMarket()\r\nbot = Bot(market=market)\r\n\r\n# Finger strategy on all instruments in the forex markets\r\nbot.add_strategy_all(strategy=FingerTrap)\r\nbot.execute()\r\n# This assumes that a mt5.json config file with account_number, password and server keys is available\r\n```\r\n\r\nsee [docs](https://github.com/Ichinga-Samuel/aiomql/tree/master/docs)\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "MetaTrader5,Asynchronous,Algorithmic Trading,Trading Bot",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiomql",
    "package_url": "https://pypi.org/project/aiomql/",
    "platform": null,
    "project_url": "https://pypi.org/project/aiomql/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Ichinga-Samuel/aiomql/issues",
      "Homepage": "https://github.com/Ichinga-Samuel/aiomql"
    },
    "release_url": "https://pypi.org/project/aiomql/1/",
    "requires_dist": [
      "MetaTrader5 (>=5.0.37)",
      "pandas (>=1.5.0)",
      "pandas-ta (>=0.3.14b0)"
    ],
    "requires_python": ">=3.10",
    "summary": "Asynchronous MetaTrader5 library and Bot Builder",
    "version": "1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16995366,
  "releases": {
    "1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e20b135e4bcba02cc89961dabf4f930895e68a18329979b5125e693ba0758317",
          "md5": "9f94d1fb2de45346b2a37a5eac3a4332",
          "sha256": "3fabd67e1ffa3112c406531b7d8639ee9378e859d3b676dc5967bb6c56e44bb5"
        },
        "downloads": -1,
        "filename": "aiomql-1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f94d1fb2de45346b2a37a5eac3a4332",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 44381,
        "upload_time": "2023-02-23T16:04:05",
        "upload_time_iso_8601": "2023-02-23T16:04:05.790801Z",
        "url": "https://files.pythonhosted.org/packages/e2/0b/135e4bcba02cc89961dabf4f930895e68a18329979b5125e693ba0758317/aiomql-1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee9f6d2ca71c79431a5fa7fde9f41adc39da459370c3b5b0d89f9ba5c18c935b",
          "md5": "a6506c10b583097070c5345d3bc8b05f",
          "sha256": "cb9a52a620c6c497a810edf453b1f752199043373b4a409838ffb34876a529a5"
        },
        "downloads": -1,
        "filename": "aiomql-1.tar.gz",
        "has_sig": false,
        "md5_digest": "a6506c10b583097070c5345d3bc8b05f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 37738,
        "upload_time": "2023-02-23T16:04:08",
        "upload_time_iso_8601": "2023-02-23T16:04:08.487557Z",
        "url": "https://files.pythonhosted.org/packages/ee/9f/6d2ca71c79431a5fa7fde9f41adc39da459370c3b5b0d89f9ba5c18c935b/aiomql-1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e20b135e4bcba02cc89961dabf4f930895e68a18329979b5125e693ba0758317",
        "md5": "9f94d1fb2de45346b2a37a5eac3a4332",
        "sha256": "3fabd67e1ffa3112c406531b7d8639ee9378e859d3b676dc5967bb6c56e44bb5"
      },
      "downloads": -1,
      "filename": "aiomql-1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9f94d1fb2de45346b2a37a5eac3a4332",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 44381,
      "upload_time": "2023-02-23T16:04:05",
      "upload_time_iso_8601": "2023-02-23T16:04:05.790801Z",
      "url": "https://files.pythonhosted.org/packages/e2/0b/135e4bcba02cc89961dabf4f930895e68a18329979b5125e693ba0758317/aiomql-1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee9f6d2ca71c79431a5fa7fde9f41adc39da459370c3b5b0d89f9ba5c18c935b",
        "md5": "a6506c10b583097070c5345d3bc8b05f",
        "sha256": "cb9a52a620c6c497a810edf453b1f752199043373b4a409838ffb34876a529a5"
      },
      "downloads": -1,
      "filename": "aiomql-1.tar.gz",
      "has_sig": false,
      "md5_digest": "a6506c10b583097070c5345d3bc8b05f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 37738,
      "upload_time": "2023-02-23T16:04:08",
      "upload_time_iso_8601": "2023-02-23T16:04:08.487557Z",
      "url": "https://files.pythonhosted.org/packages/ee/9f/6d2ca71c79431a5fa7fde9f41adc39da459370c3b5b0d89f9ba5c18c935b/aiomql-1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}