{
  "info": {
    "author": "Richard de Vos",
    "author_email": "rdevos72@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "===============\nfhs_xmltv_tools\n===============\n\nVersion\n-------\n\n0.1.14\n\nFor changes see changelog_\n\n.. _changelog: https://github.com/foxhunt72/fhs-xmltv-tools/blob/main/CHANGELOG.md\n\nIntro\n-----\n\nI wanted to know more about the xmltv_ xml file i downloaded for my iptv and i wanted to know how it all worked.\nSo i am starting to create my own tools\n\nYou can do the following things with your xmltv file\n\n- list the channels inside\n- analyse-programs, show channels with first start time and last stop time\n- you can cleanup your xmltv file, remove all except of the list of channels that you want to have\n- you can join to xmltv files to one\n- change the timezone of a time in the programs\n- search for a program in a xmltv\n- search for a program in sql\n- save program data to a sql database\n\nI also created a program to handle m3u8 files with iptv channels, see iptv_ or pipiptv_\n\nAnd automate and chain all the staps using a `yaml command`_ task file.\n\nBut the tool is getting more advanced every day, so use it, you can find the source_ on github.\n\nSee pypi: https://pypi.org/project/fhs-xmltv-tools/ or github https://github.com/foxhunt72/fhx-xmltv-tools\n\nClean up xmltv files, with only the channels you want and even join multiple together,\nalso easy if you need to change timezone from one of the files.\n\nYou can use this with every program that needs some xmltv file, like tvheadend_, kodi_, nextpvr_ etc.\n\n\n.. _xmltv: http://wiki.xmltv.org\n.. _tvheadend: https://tvheadend.org\n.. _kodi: https://kodi.tv\n.. _nextpvr: https://www.nextpvr.com\n.. _source: https://github.com/foxhunt72/fhs-xmltv-tools\n.. _iptv: https://github.com/foxhunt72/fhs-iptv-tools\n.. _pipiptv: https://pypi.org/project/fhs-iptv-tools\n\n\nUsage\n-----\n\n- fhs-xmltv-tools interactive\n- fhs-xmltv-tools `analyse-programs`_ --xmltv-file <xml_file>\n- fhs-xmltv-tools `list-channels`_ --xmltv-file <xml_file\n- fhs-xmltv-tools `channel-details`_ --xmltv-file <xml_file> [--channel-id <channel_id>] [--index <index>]\n- fhs-xmltv-tools `join-xml-files`_ --xmltv-file <xml_file> --xmltv-file-add <xml_file2> --xmltv-out <xmltv_out>\n- fhs-xmltv-tools `search-program`_ --xmltv-file <xml_file> --search <regex to program name to search>\n- fhs-xmltv-tools `write-xmlfile-channels`_ <channel_file> --xmltv-file <xml_file> --xmltv-out <xml_out)>\n- fhs-xmltv-tools `xmltv-to-sql`_ --xmltv-file <xml_file> [--sqltype <sqltype> --sqlconnect <sqlconnect>\n- fhs-xmltv-tools `search-program-sql`_  [--sqltype <sqltype> --sqlconnect <sqlconnect> --search <regex to program name to search>\n\nAnd the best option, i think to automate your xml needs\n\n- fhs-xmltv-tools `run-tasks`_ --yaml-command <yaml_command_file>\n\nSee the `yaml command`_ file in Examples.\n\nOffcourse this are only the basic options use the --help to see all the extra options\n\n.. _`example-proef`:\n\nInstallation\n------------\n\n.. code-block:: bash\n\n  git clone https://github.com/foxhunt72/fhs-xmltv-tools\n  cd fhs-xmltv-tools\n  pip3 install .\n\n  pipx install fhs_xmltv_tools\n  pipx install fhs_xmltv_tools[all]\n  phpx install fhs_xmltv_tools[sqlite]\n  or\n  pip3 install fhs_xmltv_tools\n  pip3 install fhs_xmltv_tools[all]\n  pip3 install fhs_xmltv_tools[sqlite]\n\nScripts yaml example\n~~~~~~~~~~~~~~~~~~~~\n\n.. _`yaml command`:\n\nThis is a simpel yaml task file.\nChange the url etc.\n\nAnd run it with\n\n.. code-block:: bash\n   \n   fhs-xmltv-tools run-tasks --yaml-command <yaml_command_file>\n\nYaml task file.\n\n\n.. code-block:: yaml\n\n  tasks:\n    - name: download tvxml file\n      command: execute_command\n      execute: \"wget -4 https://download_url_xmltv.xml.gz -O - | gzip -d >/tmp/test.xml && mv -f /tmp/test.xml tv.epg.xml\"\n      shell: true\n      tags: update\n    - name: load xmltv file\n      command: loadxml\n      file: tv.epg.xml\n      store: tv\n    - name: analyse_programs\n      title: tv_programs\n      command: analyse_programs\n      store: tv\n    - name: clean up tv\n      command: keep_channels\n      store: tv\n      channels:\n        - RTL4.nl\n        - RTL5.nl\n    - name: change timezone\n      command: change_timezone\n      search: \" +0000\"\n      replace: \" +0200\"\n      store: tv\n    - name: load xmltv  file\n      command: loadxml\n      file: tv20220924_21.xmltv\n      store: xmltv\n    - name: clean up xmltv\n      command: only_channels\n      store: xmltv\n      channels:\n        - AnimalPlanet.dk\n        - fox9knin.us\n    - name: add xmltv to tv\n      command: add\n      store: tv\n      add_store: xmltv\n    - name: save tv file\n      command: savexml\n      file: /tmp/new_tv.xml\n      store: tv\n    - name: save sql\n      command: savesql\n      sqlconnect: /tmp/new_tv.db\n      store: tv\n\nCommands explained\n~~~~~~~~~~~~~~~~~~\n\n.. _`analyse-programs`:\n\nanalyse-program\n***************\n\nThis functions will read a xmltv file and give a list of all channels with a per channel a start and stop time.\n\nAs options you have:\n\n- --xmltv-file <xmltv_file_to_read>    or use environt varialbe   fhs_xmltv_file\n- --force-color                        force use of color in output (for example to save to file)\n- --no-color                           use no color in output\n\nSee help output of command with --help\n\n.. code-block:: bash\n\n fhs-xmltv-tools analyse-programs --help | cat\n                                                                                                                                                                                    \n Usage: fhs-xmltv-tools analyse-programs [OPTIONS]                                                                                                                                  \n                                                                                                                                                                                    \n Analyse channels xml.                                                                                                                                                              \n Args:     force_color: force color in pipeline for example     xmltv_file: xmltv file to use                                                                                       \n                                                                                                                                                                                    \n ╭─ Options ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n │ *  --xmltv-file                   TEXT  read xmltv file [env var: fhs_xmltv_file] [default: None] [required]                                                                     │\n │    --force-color    --no-color          force color in pipelines [default: no-color]                                                                                             │\n │    --help                               Show this message and exit.                                                                                                              │\n ╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n\nExample usage\n\n.. code-block:: bash\n\n  # download a tvguide for example us\n  wget -4 https://iptv-org.github.io/epg/guides/us/tvguide.com.epg.xml.gz -O - | gzip -d >tvguide.com.epg.xml\n\n  fhs-xmltv-tools analyse-programs --xmltv-file tvguide.com.epg.xml\n  \n  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓\n  ┃ Id                            ┃ start time           ┃ end time             ┃ programs ┃\n  ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━┩\n  │ ABCEast.us                    │ 20221006000000 +0000 │ 20221008000000 +0000 │       38 │\n  │ AEEast.us                     │ 20221006000000 +0000 │ 20221008000000 +0000 │       54 │\n  │ AMCEast.us                    │ 20221006000000 +0000 │ 20221008020000 +0000 │       39 │\n  │ AnimalPlanetEast.us           │ 20221006000000 +0000 │ 20221008000000 +0000 │       48 │\n  │ BBCAmericaEast.us             │ 20221006000000 +0000 │ 20221008010000 +0000 │       35 │\n  │ BETEast.us                    │ 20221006000000 +0000 │ 20221008000000 +0000 │       69 │\n  \n\n  .. _`list-channels`:\n\n\nlist-channels\n*************\n  \nThis functions will read a xmltv file and give a list of all channels with a per channel a index, id and channel name\n\nAs options you have:\n\n- --xmltv-file <xmltv_file_to_read>    or use environt varialbe   fhs_xmltv_file\n- --force-color                        force use of color in output (for example to save to file)\n- --no-color                           use no color in output\n- --ignore-empty-id                    don't display channels without a id\n\nExample usage\n\n.. code-block:: bash\n\n  # download a tvguide for example us\n  wget -4 https://iptv-org.github.io/epg/guides/us/tvguide.com.epg.xml.gz -O - | gzip -d >tvguide.com.epg.xml\n\n  fhs-xmltv-tools list-channels --xmltv-file tvguide.com.epg.xml\n  ┏━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n  ┃ Index ┃ Id                            ┃ Channel                      ┃\n  ┡━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩\n  │     1 │ ABCEast.us                    │ ABC East                     │\n  │     2 │ AEEast.us                     │ A&E East                     │\n  │     3 │ AMCEast.us                    │ AMC East                     │\n  │     4 │ AnimalPlanetEast.us           │ Animal Planet East           │\n  │     5 │ BBCAmericaEast.us             │ BBC America East             │\n  │     6 │ BETEast.us                    │ BET East                     │\n  │     7 │ BravoEast.us                  │ Bravo East                   │\n\n\n  .. _`channel-details`:\n\n\nchannel-details\n***************\n  \nList the channel info from a xmltv file\n\nAs options you have:\n\n- --xmltv-file <xmltv_file_to_read>    or use environt varialbe   fhs_xmltv_file\n- --index <indexnr>                    display the channel with index nr, see output of `list-channels`_\n- --channelid                          display the channel with channel id, see output of `list-channels`_\n\n\n\nExample usage\n\n.. code-block:: bash\n\n  # download a tvguide for example us\n  wget -4 https://iptv-org.github.io/epg/guides/us/tvguide.com.epg.xml.gz -O - | gzip -d >tvguide.com.epg.xml\n\n  fhs-xmltv-tools channel-details --xmltv-file tvguide.com.epg.xml --index 1\n  Channel(display_name=[DisplayName(content=['ABC East'], lang=None)],\n        icon=[Icon(src='https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/ABC-2021-LOGO.svg/512px-ABC-2021-LOGO.svg.png',\n                   width=None,\n                   height=None)],\n        url=['https://tvguide.com'],\n        id='ABCEast.us')\n\n.. _`join-xml-files`:\n\njoin-xml-files\n**************\n\nJoin 2 xml files to one xml file.\n\nAs options you have\n\n.. code-block:: bash\n\n  fhs-xmltv-tools join-xml-files --help\n                                                                                                           \n  Usage: fhs-xmltv-tools join-xml-files [OPTIONS]                                                           \n                                                                                                           \n   Join 2 xml files and write them out as 1 xml.                                                             \n   Args:     xmltv_file: xmltv file to use     xmltv_file_add: xmltv file to use     xmltv_out: write xmltv  \n   file     force_color: force color in pipeline for example                                                 \n                                                                                                           \n  ╭─ Options ───────────────────────────────────────────────────────────────────────────────────────────────╮\n  │ *  --xmltv-file                      TEXT  read xmltv file [env var: fhs_xmltv_file] [default: None]    │\n  │                                            [required]                                                   │\n  │ *  --xmltv-file-add                  TEXT  read xmltv file [env var: fhs_xmltv_file] [default: None]    │\n  │                                            [required]                                                   │\n  │ *  --xmltv-out                       TEXT  write xmltv file [env var: fhs_xmltv_out] [default: None]    │\n  │                                            [required]                                                   │\n  │    --force-color       --no-color          force color in pipelines [default: no-color]                 │\n  │    --help                                  Show this message and exit.                                  │\n  ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n\nAs a example\n\n.. code-block:: bash\n\n # download a tvguide for example us\n wget -4 https://iptv-org.github.io/epg/guides/us/tvguide.com.epg.xml.gz -O - | gzip -d >tvguide.com.epg.xml\n wget -4 https://iptv-org.github.io/epg/guides/yt/canalplus-reunion.com.epg.xml.gz -O - | gzip -d >canalplus-reunion.com.epg.xml\n  \n fhs-xmltv-tools join-xml-files --xmltv-file tvguide.com.epg.xml --xmltv-file-add canalplus-reunion.com.epg.xml --xmltv-out out.xml\n \n.. _`search-program`:\n \nsearch-program\n************** \n\nSearch a program in a xmltv-file\n\n.. code-block:: bash\n\n fhs-xmltv-tools search-program --help\n                                                                                                           \n Usage: fhs-xmltv-tools search-program [OPTIONS]                                                           \n                                                                                                           \n Search program in xml.                                                                                    \n Args:     search: string or regex to search     force_color: force color in pipeline for example          \n force_case: normal search is case insensitive but with this option force case sensitive     xmltv_file:   \n xmltv file to use                                                                                         \n                                                                                                           \n╭─ Options ───────────────────────────────────────────────────────────────────────────────────────────────╮\n│ *  --search                                TEXT  regex search [default: None] [required]                │\n│ *  --xmltv-file                            TEXT  read xmltv file [env var: fhs_xmltv_file]              │\n│                                                  [default: None] [required]                             │\n│    --force-color             --no-color          force color in pipelines [default: no-color]           │\n│    --force-case-sensitive                                                                               │\n│    --help                                        Show this message and exit.                            │\n╰─────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n\n.. _`write-xmlfile-channels`:\n\nwrite-xmlfile-channels\n**********************\n\nCleanup xmltv file by only writing the channels to a new files that you listed in a file.\n\n.. code-block:: bash\n\n fhs-xmltv-tools write-xmlfile-channels --help                                                                                                           \n Usage: fhs-xmltv-tools write-xmlfile-channels [OPTIONS] CHANNEL_FILE                                      \n                                                                                                           \n Write xmlfile with only used channels to xml.                                                             \n Args:     channel_file: file with channels one per line     xmltv_file: xmltv file to use     xmltv_out:  \n write xmltv file     force_color: force color in pipeline for example                                     \n                                                                                                           \n ╭─ Arguments ─────────────────────────────────────────────────────────────────────────────────────────────╮\n │ *    channel_file      TEXT  [default: None] [required]                                                 │\n ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n ╭─ Options ───────────────────────────────────────────────────────────────────────────────────────────────╮\n │ *  --xmltv-file                   TEXT  read xmltv file [env var: fhs_xmltv_file] [default: None]       │\n │                                         [required]                                                      │\n │ *  --xmltv-out                    TEXT  write xmltv file [env var: fhs_xmltv_out] [default: None]       │\n │                                         [required]                                                      │\n │    --force-color    --no-color          force color in pipelines [default: no-color]                    │\n │    --help                               Show this message and exit.                                     │\n ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n\nchannel_file is a text one with one channel id on every line\n\n.. _`run-tasks`:\n\nrun-tasks\n*********\n\nRunning all the automation you want for xmltv files, task for task using a \n\nUsage:\n\n.. code-block:: bash\n\n fhs-xmltv-tools run-tasks --help\n                                                                                                                              \n Usage: fhs-xmltv-tools run-tasks [OPTIONS]                                                                                   \n                                                                                                                              \n Run tasks in yaml file.                                                                                                      \n Args:     yaml_command: xmltv file to use     force_color: force color in pipeline for example     include_tag: tags from    \n task to include     exclude_tag: exclude tasks with this tag                                                                 \n                                                                                                                              \n ╭─ Options ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n │ *  --yaml-command                  TEXT  read yaml file [env var: fhs_xmltv_yaml] [default: None] [required]               │\n │    --force-color     --no-color          force color in pipelines [default: no-color]                                      │\n │    --include-tag                   TEXT  [default: None]                                                                   │\n │    --exclude-tag                   TEXT  [default: None]                                                                   │\n │    --help                                Show this message and exit.                                                       │\n ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n\n\n.. _`xmltv-to-sql`:\n\nsave-xmlfile-to-sql\n********************\n\nWrite the program data to a sql locaton (like sqlite), that way you can search in programs\nfor longer times, the search options will come soon.\n\n.. code-block:: bash\n\n fhs-xmltv-tools xmltv-to-sql --help                                                                                                           \n Usage: fhs-xmltv-tools xmltv-to-sql [OPTIONS]\n\n Xmltv to sql (using sqlalchemy).\n Args:     force_color: force color in pipeline for example     xmltv_file: xmltv file to use\n sqltype: sqltype type sqlite or sqlalchemy     sqlconnect: connect string, this is the filepath is\n using sqltype = sqlite\n\n ╭─ Options ─────────────────────────────────────────────────────────────────────────────────────────────╮\n │ *  --xmltv-file                   TEXT  read xmltv file [env var: fhs_xmltv_file] [default: None]     │\n │                                         [required]                                                    │\n │    --sqltype                      TEXT  sqltype for now, (default) sqlite or sqlalchemy               │\n │                                         [default: sqlite]                                             │\n │ *  --sqlconnect                   TEXT  sqlconnect how to connect. [default: None] [required]         │\n │    --force-color    --no-color          force color in pipelines [default: no-color]                  │\n │    --help                               Show this message and exit.                                   │\n ╰───────────────────────────────────────────────────────────────────────────────────────────────────────╯\n\n\nsqlconnect is the file name if using sqlite\n\n.. _`search-program-sql`:\n\nsearch-program-sql\n******************\n\nSearch a program in a sql datebase.\n\n\nYou can find a example yaml_ file in the source and also some extra documentation in the examples_ directory.\n\n.. _yaml: https://github.com/foxhunt72/fhs-xmltv-tools/raw/main/Examples/tasks_example.yml\n.. _examples: https://github.com/foxhunt72/fhs-xmltv-tools/tree/main/Examples\n\nRequirements\n^^^^^^^^^^^^\n- typer[all]\n- py-xmltv\n- pyyaml\n\n\n\n\nCompatibility\n-------------\n\n\nLicence\n-------\nMIT Licencse\n\nAuthors\n-------\nRichard de Vos\n\n`fhs_xmltv_tools` was written by `Richard de Vos <rdevos72@gmail.com>`_.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/foxhunt72/fhs-xmltv-tools",
    "keywords": "",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fhs-xmltv-tools",
    "package_url": "https://pypi.org/project/fhs-xmltv-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/fhs-xmltv-tools/",
    "project_urls": {
      "Homepage": "https://github.com/foxhunt72/fhs-xmltv-tools"
    },
    "release_url": "https://pypi.org/project/fhs-xmltv-tools/0.1.14/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "xmltv tools",
    "version": "0.1.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16200963,
  "releases": {
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ceecf8f971e85d8154a62469f83956732ff9dd5a64606740adddaeb8662f555c",
          "md5": "f7fff49eacefbeb2f820535620605892",
          "sha256": "779e223b6626822ccadaafaf585f06ea99d4e4a023dcec121b9b02aa9cb0c894"
        },
        "downloads": -1,
        "filename": "fhs-xmltv-tools-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "f7fff49eacefbeb2f820535620605892",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22909,
        "upload_time": "2022-10-12T21:08:37",
        "upload_time_iso_8601": "2022-10-12T21:08:37.087686Z",
        "url": "https://files.pythonhosted.org/packages/ce/ec/f8f971e85d8154a62469f83956732ff9dd5a64606740adddaeb8662f555c/fhs-xmltv-tools-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d0994beb91e282df1f4f1d2ce86c38380a2d7d3e7eb10e3a0be4cf3b591c1d3",
          "md5": "ad4f62fd03b949d7da12c36c8a8dc699",
          "sha256": "45f9aa528779ad3fac13d03787b6a21ab98df1ce74bea70b5235d11feca4e2dd"
        },
        "downloads": -1,
        "filename": "fhs-xmltv-tools-0.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "ad4f62fd03b949d7da12c36c8a8dc699",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23180,
        "upload_time": "2022-10-16T21:06:32",
        "upload_time_iso_8601": "2022-10-16T21:06:32.499777Z",
        "url": "https://files.pythonhosted.org/packages/6d/09/94beb91e282df1f4f1d2ce86c38380a2d7d3e7eb10e3a0be4cf3b591c1d3/fhs-xmltv-tools-0.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e6fee113e8b1206d94f677e52fa8061f4cb8c066bb6ddb506e83dc0484afc2f",
          "md5": "940851506d2b2254ecddafb85864ad9a",
          "sha256": "501b0ea380b2d412f1dad8a606a274db275099e06f05f945028201c788e4bd37"
        },
        "downloads": -1,
        "filename": "fhs-xmltv-tools-0.1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "940851506d2b2254ecddafb85864ad9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23624,
        "upload_time": "2022-10-17T19:28:39",
        "upload_time_iso_8601": "2022-10-17T19:28:39.144084Z",
        "url": "https://files.pythonhosted.org/packages/5e/6f/ee113e8b1206d94f677e52fa8061f4cb8c066bb6ddb506e83dc0484afc2f/fhs-xmltv-tools-0.1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74c2cdeed59953ef206f1c597278facfd3ad056bd5e2ebaf56e89d8bfe7087d1",
          "md5": "d81e310a1dbdb61c9a6a1238dcd98b04",
          "sha256": "f85662f7f61a2d5eae640c243cf24d106760f1ef7d0a6088d8503fd52e8db1eb"
        },
        "downloads": -1,
        "filename": "fhs-xmltv-tools-0.1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "d81e310a1dbdb61c9a6a1238dcd98b04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27179,
        "upload_time": "2022-11-16T22:06:40",
        "upload_time_iso_8601": "2022-11-16T22:06:40.048322Z",
        "url": "https://files.pythonhosted.org/packages/74/c2/cdeed59953ef206f1c597278facfd3ad056bd5e2ebaf56e89d8bfe7087d1/fhs-xmltv-tools-0.1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f006f532f8bc1063c1c3b86ca7725cfe98a4b4def59449fea3a01c93fb194e60",
          "md5": "b49d587170274a108fb13e54c5605c6b",
          "sha256": "39d265b6e4a6fc20d270ee3b064e5344fea087795a6a5d4d2123e59b0ea1d20e"
        },
        "downloads": -1,
        "filename": "fhs-xmltv-tools-0.1.14.tar.gz",
        "has_sig": false,
        "md5_digest": "b49d587170274a108fb13e54c5605c6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28126,
        "upload_time": "2022-12-23T22:14:13",
        "upload_time_iso_8601": "2022-12-23T22:14:13.454072Z",
        "url": "https://files.pythonhosted.org/packages/f0/06/f532f8bc1063c1c3b86ca7725cfe98a4b4def59449fea3a01c93fb194e60/fhs-xmltv-tools-0.1.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96ec8b97dd8860fbc5c46845297e26f2a3aabb287e36491bc09f61af0743a6b7",
          "md5": "b1e0209aba4224ba4ea8b9ff2955a886",
          "sha256": "3418533aed0d19be781765630b7acbf6b0bdcf38549b248aa9b887d6747d98da"
        },
        "downloads": -1,
        "filename": "fhs-xmltv-tools-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b1e0209aba4224ba4ea8b9ff2955a886",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10822,
        "upload_time": "2022-09-29T20:49:30",
        "upload_time_iso_8601": "2022-09-29T20:49:30.533225Z",
        "url": "https://files.pythonhosted.org/packages/96/ec/8b97dd8860fbc5c46845297e26f2a3aabb287e36491bc09f61af0743a6b7/fhs-xmltv-tools-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35985b3f1dc444bc63ddbf023d869de722b06bb9f553b74740ffebfc98938774",
          "md5": "90e906bd61cb09dd54c4130eedb99d35",
          "sha256": "83a4c8b921aecfe302596b0fa764654d351f51147ce3193a4d61c68682240702"
        },
        "downloads": -1,
        "filename": "fhs-xmltv-tools-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "90e906bd61cb09dd54c4130eedb99d35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10799,
        "upload_time": "2022-09-29T20:53:39",
        "upload_time_iso_8601": "2022-09-29T20:53:39.808063Z",
        "url": "https://files.pythonhosted.org/packages/35/98/5b3f1dc444bc63ddbf023d869de722b06bb9f553b74740ffebfc98938774/fhs-xmltv-tools-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a42d1a6f1a1b5b5bd2b51741f7e92567fb8cddeb183eac5e3df2ddbef8dc8a4e",
          "md5": "6db4e7cc70416746545aaca3e832242e",
          "sha256": "9673952bd5b4cccfcc742cf585d3042b9219beb489425bb69f46cfc7cc105dea"
        },
        "downloads": -1,
        "filename": "fhs-xmltv-tools-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6db4e7cc70416746545aaca3e832242e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11130,
        "upload_time": "2022-10-02T21:39:10",
        "upload_time_iso_8601": "2022-10-02T21:39:10.757406Z",
        "url": "https://files.pythonhosted.org/packages/a4/2d/1a6f1a1b5b5bd2b51741f7e92567fb8cddeb183eac5e3df2ddbef8dc8a4e/fhs-xmltv-tools-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0cb1e47df4c6a45bff4111f44dca5b4b963562a828db02a8a774a9318714139",
          "md5": "b688cadb14e83f7fd1fd3e6c105087a1",
          "sha256": "6ec8549806554de6eda7691cba55289bea346741144b6731d2613dfa7fa5b940"
        },
        "downloads": -1,
        "filename": "fhs-xmltv-tools-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b688cadb14e83f7fd1fd3e6c105087a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12556,
        "upload_time": "2022-10-04T21:55:11",
        "upload_time_iso_8601": "2022-10-04T21:55:11.175684Z",
        "url": "https://files.pythonhosted.org/packages/d0/cb/1e47df4c6a45bff4111f44dca5b4b963562a828db02a8a774a9318714139/fhs-xmltv-tools-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ba57d7eecaa7aeab3576d37bef8d59d662e28cbc7b2bb3f6ed898a2fe239703",
          "md5": "9ef2256bc987fc5ddb7d30190de77dc1",
          "sha256": "47bb5d3a35610ddd354d121699d93d65edaba798cbe75c8d5f98524b32658eb6"
        },
        "downloads": -1,
        "filename": "fhs-xmltv-tools-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "9ef2256bc987fc5ddb7d30190de77dc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19412,
        "upload_time": "2022-10-07T09:26:34",
        "upload_time_iso_8601": "2022-10-07T09:26:34.682010Z",
        "url": "https://files.pythonhosted.org/packages/1b/a5/7d7eecaa7aeab3576d37bef8d59d662e28cbc7b2bb3f6ed898a2fe239703/fhs-xmltv-tools-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f9e364ac42db95c07274df2d0739f80089bd1e211230b6eaa454a8c9edd71cc",
          "md5": "a19e0095fc5aec59a19d736c87e342fe",
          "sha256": "9f9cea3a84e43bb84d615b49b0c92b15ffbdd9f87bcc24fb6ebbc62c963b19dd"
        },
        "downloads": -1,
        "filename": "fhs-xmltv-tools-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "a19e0095fc5aec59a19d736c87e342fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20441,
        "upload_time": "2022-10-07T20:41:22",
        "upload_time_iso_8601": "2022-10-07T20:41:22.914942Z",
        "url": "https://files.pythonhosted.org/packages/5f/9e/364ac42db95c07274df2d0739f80089bd1e211230b6eaa454a8c9edd71cc/fhs-xmltv-tools-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cbfefe490a1edb544a4c1b06f40b74b9440aeb2e227491aa8c7b55018c96c8b",
          "md5": "20ee7e8ae27440c99d76e52d8ab5cb0e",
          "sha256": "5dedc981fdc6c4ff6dec9e6c1badd7fb10cab7abaa5b18be1b3998e38a3ec524"
        },
        "downloads": -1,
        "filename": "fhs-xmltv-tools-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "20ee7e8ae27440c99d76e52d8ab5cb0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20473,
        "upload_time": "2022-10-09T21:58:35",
        "upload_time_iso_8601": "2022-10-09T21:58:35.827249Z",
        "url": "https://files.pythonhosted.org/packages/1c/bf/efe490a1edb544a4c1b06f40b74b9440aeb2e227491aa8c7b55018c96c8b/fhs-xmltv-tools-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f006f532f8bc1063c1c3b86ca7725cfe98a4b4def59449fea3a01c93fb194e60",
        "md5": "b49d587170274a108fb13e54c5605c6b",
        "sha256": "39d265b6e4a6fc20d270ee3b064e5344fea087795a6a5d4d2123e59b0ea1d20e"
      },
      "downloads": -1,
      "filename": "fhs-xmltv-tools-0.1.14.tar.gz",
      "has_sig": false,
      "md5_digest": "b49d587170274a108fb13e54c5605c6b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28126,
      "upload_time": "2022-12-23T22:14:13",
      "upload_time_iso_8601": "2022-12-23T22:14:13.454072Z",
      "url": "https://files.pythonhosted.org/packages/f0/06/f532f8bc1063c1c3b86ca7725cfe98a4b4def59449fea3a01c93fb194e60/fhs-xmltv-tools-0.1.14.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}