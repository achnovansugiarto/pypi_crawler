{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# PyIAACSync\n\n## Introduction\ninfrastructure-as-code tools such as Terraform and Palumi gaining popularity and increasingly becoming neceessary to support the principles of Site Reliability Engineering (SRE). \n\nHowever, there are a couple of disadvantages in existing tools in the market:\n- Terraform requires knowledge of golang to be able to sync assets\n- Both Terraform and Paulmi can be quite complex for beginners to manage and maintain\n\nPyIAACSync provides a framework which allows software engineering getting into infrastructure-as-code to easily create and sync assets which they have defined in YAML spec files, in a polled manner (non-event driven). The infrastructue can be `anything` (AWS asset, GCP asset, any SIEM detection rule) that \n\nSoftware engineers need to create the following:\n1. A folder (`iaac_sync_folder`) that contains the specs/configs for the infrastructure to create\n2. A simple asset python file that contains a class describing the asset with the following `static` functions:\n   - validate: to validate whether the spec/config that has been supplied in the \n   - create: to create the asset via the supplied spec/config\n   - delete: to delete that has been supplied via the spec/config\n   - check: to check whether the asset that has been deployed matches the spec/config aka `integrity check`. If not, the asset will be re-created\n\nPlease see `Usage` section that describes the example in more detail\n\n## Install\n\n### via PyPI\n\n```\npython3 -m pip install pyiaacsync\n```\n\n### Manually\nInstall all necessary dependencies as follows:\n```\npython3 -m pip install -r requirements.txt\n```\n\n## Usage\n\n### Structure\nWe will be using the example `example-fileasset` described in the `examples` folder of this repository. Users of this repo can use the files in the `examples` folder (especially `fileasset.py`) to build their own assets with `pyiaacsync.py`.\n\nIn this folder, we have the following objects:\n- `exampleconf`: a folder which contains 3 spec/config files (1 file is in a subfolder) that describe what kind of file to create\n- `fileasset.py`: A python file that contains the fileasset which defines how to `validate` the spec config file, `create` asset from the spec / config file, `delete` the existing asset created from the config file and also `check` if the the created asset is different from the config file\n- `example.py`: the main script which will invoke the creation of assets using pyiaacsync conf file\n\nNote that `pyiaacsync` also has an `args` option available in `__init__` which can be used to provide any additional optional \nparameters as a dict that can be used by the asset class. Uncomment the `random_args` set line in `example.py` to see how it can be used:\n```\n...\n    random_args = {}\n    ## uncomment line below to demonstrate how the random arguments can work\n    #random_args = {'message': 'hello world'}\n```\n\n### Actions\n\n#### init\nThe first steps is to execute `init` which will create a new state file `out-teststate.yaml`:\n```\npython3 example.py -a init\n```\n\nTo force re-creation of the state file even if it exists (NOTE: Beware this will delete the existing state file!):\n```\npython3 example.py -a init -if\n```\n\nWe can also specify an existing state file to use:\n```\npython3 example.py -a init -if -f /tmp/out-teststatefile.yaml\n```\n\n#### validate_configs\n\nTo validate the configs in the spec folder for all existing assets using the `validate` function defined in `fileasset.py` class:\n```\npython3 example.py -a validate_configs\n```\n\n#### sync\n\nTo sync the assets based on the spec/configs folder continuously - this will create the files as per the configs in the folder.\nAny changes made to the files the next time will be reset.\n```\npython3 example.py -a sync\n```\n\nTo sync the assets once only:\n```\npython3 example.py -a sync_once\n```\n\n#### delete_assets\n\nTo delete all existing assets (in this case, all files) and remove the assets from the state file:\n```\npython3 example.py -a delete_assets\n```\n\n## TODO\n- Add unit testing\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/manasmbellani/pyiaacsync",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyiaacsync",
    "package_url": "https://pypi.org/project/pyiaacsync/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyiaacsync/",
    "project_urls": {
      "Homepage": "https://github.com/manasmbellani/pyiaacsync"
    },
    "release_url": "https://pypi.org/project/pyiaacsync/0.4/",
    "requires_dist": [
      "pyyaml"
    ],
    "requires_python": "",
    "summary": "Deploy infrastructure as code via polling",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17379669,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc52bc4e3538e504a0ea0378bd58c2b02c668991944e5484926c2a2bb98c9733",
          "md5": "3f99510593ef6037213f829ea48f7092",
          "sha256": "289dd6c06537d98c116af00e2944b5ed2a5bd15ea0c895911994d2bc8c1c500f"
        },
        "downloads": -1,
        "filename": "pyiaacsync-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f99510593ef6037213f829ea48f7092",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5084,
        "upload_time": "2023-03-17T07:18:05",
        "upload_time_iso_8601": "2023-03-17T07:18:05.316845Z",
        "url": "https://files.pythonhosted.org/packages/fc/52/bc4e3538e504a0ea0378bd58c2b02c668991944e5484926c2a2bb98c9733/pyiaacsync-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fafa40c13b147751ebb0641e203924eff7a859db69c2b843965c22e95283d99",
          "md5": "f5deaf0ad3e2ec2a26dc318605f11882",
          "sha256": "3abb384d7726811f4f535d93086a94bd917b6f03d019e04e65facade462f868f"
        },
        "downloads": -1,
        "filename": "pyiaacsync-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f5deaf0ad3e2ec2a26dc318605f11882",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4957,
        "upload_time": "2023-03-17T07:18:07",
        "upload_time_iso_8601": "2023-03-17T07:18:07.584433Z",
        "url": "https://files.pythonhosted.org/packages/9f/af/a40c13b147751ebb0641e203924eff7a859db69c2b843965c22e95283d99/pyiaacsync-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c31dd7ea598b5efeb08c6f9eaf05a0663d08aec498a798a617dc626a8ecaadd6",
          "md5": "94174d032d60cf06543d2439e5c9263d",
          "sha256": "c6c845d3dca57efd897c0ee2c35a385e4b579b88b80099bab1d2d722afb978ea"
        },
        "downloads": -1,
        "filename": "pyiaacsync-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94174d032d60cf06543d2439e5c9263d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6504,
        "upload_time": "2023-03-17T10:29:22",
        "upload_time_iso_8601": "2023-03-17T10:29:22.988880Z",
        "url": "https://files.pythonhosted.org/packages/c3/1d/d7ea598b5efeb08c6f9eaf05a0663d08aec498a798a617dc626a8ecaadd6/pyiaacsync-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "217926071ff40981f3dc7bf9fe967eb9b2a2f0a466befbc2e8617b475ada7cca",
          "md5": "68f3ebb6cb5c5567cfe718dfa863a678",
          "sha256": "8b6df398761114b68385db7a5d2122657f25ed8bfc95780d23af4a3b7511420b"
        },
        "downloads": -1,
        "filename": "pyiaacsync-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "68f3ebb6cb5c5567cfe718dfa863a678",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5351,
        "upload_time": "2023-03-17T10:29:25",
        "upload_time_iso_8601": "2023-03-17T10:29:25.856158Z",
        "url": "https://files.pythonhosted.org/packages/21/79/26071ff40981f3dc7bf9fe967eb9b2a2f0a466befbc2e8617b475ada7cca/pyiaacsync-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b61cf92b50716dcfbf7007dd1fae3adffddaa2fe24c7b767705753ee2161780b",
          "md5": "b3cc00056baecf241821967fe5c6dddf",
          "sha256": "d61c578f4d3e60f086a2daa77291e9a1fd8bd7fc6194b303f4a2361d49d95b3c"
        },
        "downloads": -1,
        "filename": "pyiaacsync-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3cc00056baecf241821967fe5c6dddf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6545,
        "upload_time": "2023-03-17T10:34:32",
        "upload_time_iso_8601": "2023-03-17T10:34:32.534034Z",
        "url": "https://files.pythonhosted.org/packages/b6/1c/f92b50716dcfbf7007dd1fae3adffddaa2fe24c7b767705753ee2161780b/pyiaacsync-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f607087dac15fcec038c712aadf17157f4702121a4bb3aa2821d144f81b938bd",
          "md5": "6b6ecb673a0e5b99578fc0763250572e",
          "sha256": "a8c36bcfe23ce64221ce06d2c2c129b3bf4ac82f25f2df79904387cfe9ab0bb9"
        },
        "downloads": -1,
        "filename": "pyiaacsync-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6b6ecb673a0e5b99578fc0763250572e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5523,
        "upload_time": "2023-03-17T10:34:34",
        "upload_time_iso_8601": "2023-03-17T10:34:34.808110Z",
        "url": "https://files.pythonhosted.org/packages/f6/07/087dac15fcec038c712aadf17157f4702121a4bb3aa2821d144f81b938bd/pyiaacsync-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62c93f6ff0cc5567f26569a83fc7a54e8bc329b81bf9f00d00d66f67f95c03b5",
          "md5": "b017ccd8e7d94e57fa57bfb4faaf5935",
          "sha256": "bf71d947c0667beab99e5e67479c0911cd821e1a5ce9b77a28e411343f4f7c7b"
        },
        "downloads": -1,
        "filename": "pyiaacsync-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b017ccd8e7d94e57fa57bfb4faaf5935",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6827,
        "upload_time": "2023-03-21T13:38:22",
        "upload_time_iso_8601": "2023-03-21T13:38:22.348816Z",
        "url": "https://files.pythonhosted.org/packages/62/c9/3f6ff0cc5567f26569a83fc7a54e8bc329b81bf9f00d00d66f67f95c03b5/pyiaacsync-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a48f3c0b4955c2667074410e6c0c7ac9be985739c0e5e5d0dfbf91afaac22b74",
          "md5": "b639cf7b82bf2af860cbfcdf0d9b89e1",
          "sha256": "959436651c4ccde5033fd800d7488e622a0488b2dad7a3f23a6e26e2d72270d7"
        },
        "downloads": -1,
        "filename": "pyiaacsync-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b639cf7b82bf2af860cbfcdf0d9b89e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5775,
        "upload_time": "2023-03-21T13:38:24",
        "upload_time_iso_8601": "2023-03-21T13:38:24.314542Z",
        "url": "https://files.pythonhosted.org/packages/a4/8f/3c0b4955c2667074410e6c0c7ac9be985739c0e5e5d0dfbf91afaac22b74/pyiaacsync-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "62c93f6ff0cc5567f26569a83fc7a54e8bc329b81bf9f00d00d66f67f95c03b5",
        "md5": "b017ccd8e7d94e57fa57bfb4faaf5935",
        "sha256": "bf71d947c0667beab99e5e67479c0911cd821e1a5ce9b77a28e411343f4f7c7b"
      },
      "downloads": -1,
      "filename": "pyiaacsync-0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b017ccd8e7d94e57fa57bfb4faaf5935",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6827,
      "upload_time": "2023-03-21T13:38:22",
      "upload_time_iso_8601": "2023-03-21T13:38:22.348816Z",
      "url": "https://files.pythonhosted.org/packages/62/c9/3f6ff0cc5567f26569a83fc7a54e8bc329b81bf9f00d00d66f67f95c03b5/pyiaacsync-0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a48f3c0b4955c2667074410e6c0c7ac9be985739c0e5e5d0dfbf91afaac22b74",
        "md5": "b639cf7b82bf2af860cbfcdf0d9b89e1",
        "sha256": "959436651c4ccde5033fd800d7488e622a0488b2dad7a3f23a6e26e2d72270d7"
      },
      "downloads": -1,
      "filename": "pyiaacsync-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "b639cf7b82bf2af860cbfcdf0d9b89e1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5775,
      "upload_time": "2023-03-21T13:38:24",
      "upload_time_iso_8601": "2023-03-21T13:38:24.314542Z",
      "url": "https://files.pythonhosted.org/packages/a4/8f/3c0b4955c2667074410e6c0c7ac9be985739c0e5e5d0dfbf91afaac22b74/pyiaacsync-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}