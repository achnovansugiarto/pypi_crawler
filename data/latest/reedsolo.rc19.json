{
  "info": {
    "author": "Tomer Filiba",
    "author_email": "tomerfiliba@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 6 - Mature",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT No Attribution License (MIT-0)",
      "License :: OSI Approved :: The Unlicense (Unlicense)",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Cython",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Communications",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: System :: Archiving :: Backup",
      "Topic :: System :: Recovery Tools"
    ],
    "description": "Reed Solomon\n============\n\n|PyPI-Status| |PyPI-Versions| |PyPI-Downloads|\n\n|Build-Status| |Coverage|\n\n|Conda-Forge-Status| |Conda-Forge-Platforms| |Conda-Forge-Downloads|\n\nA pythonic `universal errors-and-erasures Reed-Solomon Codec <http://en.wikipedia.org/wiki/Reed%E2%80%93Solomon_error_correction>`_ to protect your data from errors and bitrot. It includes a pure python implementation and an optional speed-optimized Cython/C extension.\n\nThis is a burst-type implementation, so that it supports any Galois field higher than 2^3, but not binary streams. Burst errors are non-random errors that more often happen on data storage mediums such as hard drives, hence this library is better suited for data storage protection, and less for streams noise correction, although it also works for this purpose but with a bit of overhead (since it works with bytes only, instead of bits).\n\nBased on the wonderful tutorial at `Wikiversity <http://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders>`_, written by \"Bobmath\" and \"LRQ3000\". If you are just starting with Reed-Solomon error correction codes, the Wikiversity article is a good beginner's introduction.\n\n------------------------------------\n\n.. contents:: Table of contents\n   :backlinks: top\n   :local:\n\n\nInstallation\n------------\n\nFor the latest stable release, install with:\n\n.. code:: sh\n\n    pip install --upgrade reedsolo\n\nFor the latest development release (do not use in production!), use:\n\n.. code:: sh\n\n    pip install --upgrade git+https://github.com/tomerfiliba/reedsolomon\n\nIf you have some issues installing through pip, maybe this command may help:\n\n.. code:: sh\n\n    pip install reedsolo --no-binary={reedsolo}\n\nBy default, only a pure-python implementation is installed. If you have Cython and a C++ compiler, a faster cythonized binary can be optionally built with:\n    \n.. code:: sh\n    \n    pip install --upgrade reedsolo --install-option=\"--cythonize\" --verbose\n    \nor locally with:\n\n.. code:: sh\n\n    python setup.py install --cythonize\n\nThe setup.py will then try to build the Cython optimized module ``creedsolo.pyx`` if Cython is installed, which can then be imported as `import creedsolo` instead of `import reedsolo`, with the same features between both modules.\n\nAs an alternative, use `conda <https://docs.conda.io/en/latest/>`_ to install a compiled version for various platforms:\n\n.. code:: sh\n\n    conda install -c conda-forge reedsolo\n\nUsage\n-----\n\nBasic usage with high-level RSCodec class\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    # Initialization\n    >>> from reedsolo import RSCodec, ReedSolomonError\n    >>> rsc = RSCodec(10)  # 10 ecc symbols\n\n    # Encoding\n    # just a list of numbers/symbols:\n    >>> rsc.encode([1,2,3,4])\n    b'\\x01\\x02\\x03\\x04,\\x9d\\x1c+=\\xf8h\\xfa\\x98M'\n    # bytearrays are accepted and the output will be matched:\n    >>> rsc.encode(bytearray([1,2,3,4]))\n    bytearray(b'\\x01\\x02\\x03\\x04,\\x9d\\x1c+=\\xf8h\\xfa\\x98M')\n    # encoding a byte string is as easy:\n    >>> rsc.encode(b'hello world')\n    b'hello world\\xed%T\\xc4\\xfd\\xfd\\x89\\xf3\\xa8\\xaa'\n    # Note: strings of any length, even if longer than the Galois field, will be encoded as well using transparent chunking.\n\n    # Decoding (repairing)\n    >>> rsc.decode(b'hello world\\xed%T\\xc4\\xfd\\xfd\\x89\\xf3\\xa8\\xaa')[0]  # original\n    b'hello world'\n    >>> rsc.decode(b'heXlo worXd\\xed%T\\xc4\\xfdX\\x89\\xf3\\xa8\\xaa')[0]     # 3 errors\n    b'hello world'\n    >>> rsc.decode(b'hXXXo worXd\\xed%T\\xc4\\xfdX\\x89\\xf3\\xa8\\xaa')[0]     # 5 errors\n    b'hello world'\n    >>> rsc.decode(b'hXXXo worXd\\xed%T\\xc4\\xfdXX\\xf3\\xa8\\xaa')[0]        # 6 errors - fail\n    Traceback (most recent call last):\n      ...\n    reedsolo.ReedSolomonError: Too many (or few) errors found by Chien Search for the errata locator polynomial!\n\n**Important upgrade notice for pre-1.0 users:** Note that ``RSCodec.decode()`` returns 3 variables:\n\n    1. the decoded (corrected) message\n    2. the decoded message and error correction code (which is itself also corrected)\n    3. and the list of positions of the errata (errors and erasures)\n\nHere is how to use these outputs:\n\n.. code:: python\n\n    >>> tampered_msg = b'heXlo worXd\\xed%T\\xc4\\xfdX\\x89\\xf3\\xa8\\xaa'\n    >>> decoded_msg, decoded_msgecc, errata_pos = rsc.decode(tampered_msg)\n    >>> print(decoded_msg)  # decoded/corrected message\n    bytearray(b'hello world')\n    >>> print(decoded_msgecc)  # decoded/corrected message and ecc symbols\n    bytearray(b'hello world\\xed%T\\xc4\\xfd\\xfd\\x89\\xf3\\xa8\\xaa')\n    >>> print(errata_pos)  # errata_pos is returned as a bytearray, hardly intelligible\n    bytearray(b'\\x10\\t\\x02')\n    >>> print(list(errata_pos))  # convert to a list to get the errata positions as integer indices\n    [16, 9, 2]\n\nSince we failed to decode with 6 errors with a codec set with 10 error correction code (ecc) symbols, let's try to use a bigger codec, with 12 ecc symbols.\n\n.. code:: python\n\n    >>> rsc = RSCodec(12)  # using 2 more ecc symbols (to correct max 6 errors or 12 erasures)\n    >>> rsc.encode(b'hello world')\n    b'hello world?Ay\\xb2\\xbc\\xdc\\x01q\\xb9\\xe3\\xe2='\n    >>> rsc.decode(b'hello worXXXXy\\xb2XX\\x01q\\xb9\\xe3\\xe2=')[0]         # 6 errors - ok, but any more would fail\n    b'hello world'\n    >>> rsc.decode(b'helXXXXXXXXXXy\\xb2XX\\x01q\\xb9\\xe3\\xe2=', erase_pos=[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16])[0]  # 12 erasures - OK\n    b'hello world'\n\nThis shows that we can decode twice as many erasures (where we provide the location of errors ourselves) than errors (with unknown locations). This is the cost of error correction compared to erasure correction.\n\nTo get the maximum number of errors *or* erasures that can be independently corrected (ie, not simultaneously):\n\n.. code:: python\n\n    >>> maxerrors, maxerasures = rsc.maxerrata(verbose=True)\n    This codec can correct up to 6 errors and 12 erasures independently\n    >>> print(maxerrors, maxerasures)\n    6 12\n\nTo get the maximum number of errors *and* erasures that can be simultaneously corrected, you need to specify the number of errors or erasures you expect:\n\n.. code:: python\n\n    >>> maxerrors, maxerasures = rsc.maxerrata(erasures=6, verbose=True)  # we know the number of erasures, will calculate how many errors we can afford\n    This codec can correct up to 3 errors and 6 erasures simultaneously\n    >>> print(maxerrors, maxerasures)\n    3 6\n    >>> maxerrors, maxerasures = rsc.maxerrata(errors=5, verbose=True)  # we know the number of errors, will calculate how many erasures we can afford\n    This codec can correct up to 5 errors and 2 erasures simultaneously\n    >>> print(maxerrors, maxerasures)\n    5 2\n\nNote that if a chunk has more errors and erasures than the Singleton Bound as calculated by the ``maxerrata()`` method, the codec will try to raise a ``ReedSolomonError`` exception,\nbut may very well not detect any error either (this is a theoretical limitation of error correction codes). In other words, error correction codes are unreliable to detect if a chunk of a message\nis corrupted beyond the Singleton Bound. If you want more reliability in errata detection, use a checksum or hash such as SHA or MD5 on your message, these are much more reliable and have no bounds\non the number of errata (the only potential issue is with collision but the probability is very very low).\n\nNote: to catch a ``ReedSolomonError`` exception, do not forget to import it first with: ``from reedsolo import ReedSolomonError``\n\nTo check if a message is tampered given its error correction symbols, without decoding, use the ``check()`` method:\n\n.. code:: python\n\n    # Checking\n    >> rsc.check(b'hello worXXXXy\\xb2XX\\x01q\\xb9\\xe3\\xe2=')  # Tampered message will return False\n    [False]\n    >> rmes, rmesecc, errata_pos = rsc.decode(b'hello worXXXXy\\xb2XX\\x01q\\xb9\\xe3\\xe2=')\n    >> rsc.check(rmesecc)  # Corrected or untampered message will return True\n    [True]\n    >> print('Number of detected errors and erasures: %i, their positions: %s' % (len(errata_pos), list(errata_pos)))\n    Number of detected errors and erasures: 6, their positions: [16, 15, 12, 11, 10, 9]\n\nBy default, most Reed-Solomon codecs are limited to characters that can be encoded in 256 bits and with a length of maximum 256 characters. But this codec is universal, you can reduce or increase the length and maximum character value by increasing the Galois Field:\n\n.. code:: python\n\n    # To use longer chunks or bigger values than 255 (may be very slow)\n    >> rsc = RSCodec(12, nsize=4095)  # always use a power of 2 minus 1\n    >> rsc = RSCodec(12, c_exp=12)  # alternative way to set nsize=4095\n    >> mes = 'a' * (4095-12)\n    >> mesecc = rsc.encode(mes)\n    >> mesecc[2] = 1\n    >> mesecc[-1] = 1\n    >> rmes, rmesecc, errata_pos = rsc.decode(mesecc)\n    >> rsc.check(mesecc)\n    [False]\n    >> rsc.check(rmesecc)\n    [True]\n\nNote that the ``RSCodec`` class supports transparent chunking, so you don't need to increase the Galois Field to support longer messages, but characters will still be limited to 256 bits (or\nwhatever field you set with ``c_exp``).\n\nLow-level usage via direct access to math functions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you want full control, you can skip the API and directly use the library as-is. Here's how:\n\nFirst you need to init the precomputed tables:\n\n.. code:: python\n\n    >> import reedsolo as rs\n    >> rs.init_tables(0x11d)\n\nPro tip: if you get the error: ValueError: byte must be in range(0, 256), please check that your prime polynomial is correct for your field.\nPro tip2: by default, you can only encode messages of max length and max symbol value = 256. If you want to encode bigger messages,\nplease use the following (where c_exp is the exponent of your Galois Field, eg, 12 = max length 2^12 = 4096):\n\n.. code:: python\n\n    >> prim = rs.find_prime_polys(c_exp=12, fast_primes=True, single=True)\n    >> rs.init_tables(c_exp=12, prim=prim)\n    \nLet's define our RS message and ecc size:\n\n.. code:: python\n\n    >> n = 255  # length of total message+ecc\n    >> nsym = 12  # length of ecc\n    >> mes = \"a\" * (n-nsym)  # generate a sample message\n\nTo optimize, you can precompute the generator polynomial:\n\n.. code:: python\n\n    >> gen = rs.rs_generator_poly_all(n)\n\nThen to encode:\n\n.. code:: python\n\n    >> mesecc = rs.rs_encode_msg(mes, nsym, gen=gen[nsym])\n\nLet's tamper our message:\n\n.. code:: python\n\n    >> mesecc[1] = 0\n\nTo decode:\n\n.. code:: python\n\n    >> rmes, recc, errata_pos = rs.rs_correct_msg(mesecc, nsym, erase_pos=erase_pos)\n\nNote that both the message and the ecc are corrected (if possible of course).\nPro tip: if you know a few erasures positions, you can specify them in a list ``erase_pos`` to double the repair power. But you can also just specify an empty list.\n\nYou can check how many errors and/or erasures were corrected, which can be useful to design adaptive bitrate algorithms:\n\n.. code:: python\n\n    >> print('A total of %i errata were corrected over all chunks of this message.' % len(errata_pos))\n\nIf the decoding fails, it will normally automatically check and raise a ReedSolomonError exception that you can handle.\nHowever if you want to manually check if the repaired message is correct, you can do so:\n\n.. code:: python\n\n    >> rs.rs_check(rmes + recc, nsym)\n\nNote: if you want to use multiple reedsolomon with different parameters, you need to backup the globals and restore them before calling reedsolo functions:\n\n.. code:: python\n\n    >> rs.init_tables()\n    >> global gf_log, gf_exp, field_charac\n    >> bak_gf_log, bak_gf_exp, bak_field_charac = gf_log, gf_exp, field_charac\n\n\nThen at anytime, you can do:\n\n.. code:: python\n\n    >> global gf_log, gf_exp, field_charac\n    >> gf_log, gf_exp, field_charac = bak_gf_log, bak_gf_exp, bak_field_charac\n    >> mesecc = rs.rs_encode_msg(mes, nsym)\n    >> rmes, recc, errata_pos = rs.rs_correct_msg(mesecc, nsym)\n\nThe globals backup is not necessary if you use RSCodec, it will be automatically managed.\n\nRead the sourcecode's comments for more info about how it works, and for the various parameters you can setup if\nyou need to interface with other RS codecs.\n\nExtended description\n--------------------\nThe code of wikiversity is here consolidated into a nice API with exceptions handling.\nThe algorithm can correct up to 2*e+v <= nsym, where e is the number of errors,\nv the number of erasures and nsym = n-k = the number of ECC (error correction code) symbols.\nThis means that you can either correct exactly floor(nsym/2) errors, or nsym erasures\n(errors where you know the position), and a combination of both errors and erasures.\nThis is called the Singleton Bound, and is the maximum/optimal theoretical number\nof erasures and errors any error correction algorithm can correct (although there\nare experimental approaches to go a bit further, named list decoding, not implemented\nhere, but feel free to do pull request!).\nThe code should work on pretty much any reasonable version of python (2.4-3.7),\nbut I'm only testing on 2.7 and 3.7. Python 3.8 should work except for Cython which is\ncurrently incompatible with this version.\n\nThe codec has quite reasonable performances if you either use PyPy on the pure-python\nimplementation (reedsolo.py) or either if you compile the Cython extension creedsolo.pyx\n(which is about 2x faster than PyPy). You can expect encoding rates of several MB/s.\n\nThis library is also thoroughly unit tested so that nearly any encoding/decoding case should be covered.\n\nThe codec is universal, meaning that it can decode any message encoded by another RS encoder\nas long as you provide the correct parameters.\nNote however that if you use higher fields (ie, bigger c_exp), the algorithms will be slower, first because\nwe cannot then use the optimized bytearray() structure but only array.array('i', ...), and also because\nReed-Solomon's complexity is quadratic (both in encoding and decoding), so this means that the longer\nyour messages, the longer it will take to encode/decode (quadratically!).\n\nThe algorithm itself can handle messages of a length up to (2^c_exp)-1 symbols per message (or chunk), including the ECC symbols,\nand each symbol can have a value of up to (2^c_exp)-1 (indeed, both the message length and the maximum\nvalue for one character is constrained by the same mathematical reason). By default, we use the field GF(2^8),\nwhich means that you are limited to values between 0 and 255 (perfect to represent a single hexadecimal\nsymbol on computers, so you can encode any binary stream) and limited to messages+ecc of maximum\nlength 255. However, you can \"chunk\" longer messages to fit them into the message length limit.\nThe ``RSCodec`` class will automatically apply chunking, by splitting longer messages into chunks and\nencode/decode them separately; it shouldn't make a difference from an API perspective (ie, from your POV).\n\nTo use the Cython implementation, you need to ``pip install cython`` and to install a C++ compiler (Microsoft Visual C++ 14.x for Windows and Python 3.10+), read the up-to-date instructions in the `official wiki <https://wiki.python.org/moin/WindowsCompilers>`_. Then you can simply cd to the root of the folder where creedsolo.pyx is, and type ``python setup.py build_ext --inplace --cythonize``. Alternatively, you can generate just the C++ code by typing `cython -3 creedsolo.pyx`. When building a distributable egg or installing the module from source, the Cython module can be transpiled and compiled if both Cython and a C compiler are installed and the ``--cythonize`` flag is supplied to the setup.py, otherwise by default only the pure-python implementation and the `.pyx` cython source code will be included, but the binary won't be in the wheel.\n\nThen, use `import RSCodec from creedsolo` instead of importing from the `reedsolo` module, and finally only feed `bytearray()` objects to the `RSCodec` object. Exclusively using bytearrays is one of the reasons creedsolo is faster than reedsolo. You can convert any string by specifying the encoding: `bytearray(\"Hello World\", \"UTF-8\")`.\n\nNote that there is an inherent limitation of the C implementation which cannot work with higher galois fields than 8 (= characters of max 255 value) because the C implementation only works with bytearrays, and bytearrays only support characters up to 255. If you want to use higher galois fields, you need to use the pure python version, which includes a fake `_bytearray` function that overloads the standard bytearray in case galois fields higher than 8 are used to `init_tables()`, or rewrite the C implementation to use lists instead of bytearrays (which will be MUCH slower so this defeats the purpose and you are better off simply using the pure python version under PyPy - an older version of the C implementation was doing just that, and without bytearrays, all performance gains were lost, hence why the bytearrays were kept despite the limitations).\n\nEdge cases\n-------------\n\nAlthough sanity checks are implemented whenever possible and when they are not too much resource consuming, there are a few cases where messages will not be decoded correctly without raising an exception:\n\n* If an incorrect erasure location is provided, the decoding algorithm will just trust the provided locations and create a syndrome that will be wrong, resulting in an incorrect decoded message. In case reliability is critical, always use the check() method after decoding to check the decoding did not go wrong.\n\n* Reed-Solomon algorithm is limited by the Singleton Bound, which limits not only its capacity to correct errors and erasures relatively to the number of error correction symbols, but also its ability to check if the message can be decoded or not. Indeed, if the number of errors and erasures are greater than the Singleton Bound, the decoder has no way to mathematically know for sure whether there is an error at all, it may very well be a valid message (although not the message you expect, but mathematically valid nevertheless). Hence, when the message is tampered beyond the Singleton Bound, the decoder may raise an exception, but it may also return a mathematically valid but still tampered message. Using the check() method cannot fix that either. To work around this issue, a solution is to use parity or hashing functions in parallel to the Reed-Solomon codec: use the Reed-Solomon codec to repair messages, use the parity or hashing function to check if there is any error. Due to how parity and hashing functions work, they are much less likely to produce a false negative than the Reed-Solomon algorithm. This is a general rule: error correction codes are efficient at correcting messages but not at detecting errors, hashing and parity functions are the adequate tool for this purpose.\n\nRecommended reading\n-------------------\n\n* \"`Reed-Solomon codes for coders <https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders>`_\", free practical beginner's tutorial with Python code examples on WikiVersity. Partially written by one of the authors of the present software.\n* \"Algebraic codes for data transmission\", Blahut, Richard E., 2003, Cambridge university press. `Readable online on Google Books <https://books.google.fr/books?id=eQs2i-R9-oYC&lpg=PR11&ots=atCPQJm3OJ&dq=%22Algebraic%20codes%20for%20data%20transmission%22%2C%20Blahut%2C%20Richard%20E.%2C%202003%2C%20Cambridge%20university%20press.&lr&hl=fr&pg=PA193#v=onepage&q=%22Algebraic%20codes%20for%20data%20transmission%22,%20Blahut,%20Richard%20E.,%202003,%20Cambridge%20university%20press.&f=false>`_. This book was pivotal in helping to understand the intricacies of the universal Berlekamp-Massey algorithm (see figures 7.5 and 7.10).\n\nAuthors\n-------\n\nThis module was conceived and developed by Tomer Filiba in 2012.\n\nIt was further extended and is currently maintained by Stephen Karl Larroque since 2015.\n\nAnd several other contributors helped improve and make it more robust:\n\n|Contributors|\n\nFor a list of all contributors, please see `the GitHub Contributors graph <https://github.com/tomerfiliba/reedsolomon/graphs/contributors>`_ and the `commits history <https://github.com/tomerfiliba/reedsolomon/commits/master>`_.\n\nLicense\n-------\n\nThis software is released under your choice of the Unlicense or the MIT-0 (MIT No Attribution) License. Both licenses are `public-domain-equivalent licenses <https://en.wikipedia.org/wiki/Public-domain-equivalent_license>`_, as intended by the original author Tomer Filiba.\n\n\n.. |PyPI-Status| image:: https://img.shields.io/pypi/v/reedsolo.svg\n   :target: https://pypi.org/project/reedsolo\n.. |PyPI-Versions| image:: https://img.shields.io/pypi/pyversions/reedsolo.svg?logo=python&logoColor=white\n   :target: https://pypi.org/project/reedsolo\n.. |PyPI-Downloads| image:: https://img.shields.io/pypi/dm/reedsolo.svg?label=pypi%20downloads&logo=python&logoColor=white\n   :target: https://pypi.org/project/reedsolo\n.. |Build-Status| image:: https://github.com/tomerfiliba/reedsolomon/actions/workflows/ci-build.yml/badge.svg?event=push\n    :target: https://github.com/tomerfiliba/reedsolomon/actions/workflows/ci-build.yml\n.. |Coverage| image:: https://coveralls.io/repos/tomerfiliba/reedsolomon/badge.svg?branch=master&service=github\n  :target: https://coveralls.io/github/tomerfiliba/reedsolomon?branch=master\n.. |Conda-Forge-Status| image:: https://img.shields.io/conda/vn/conda-forge/reedsolo.svg\n   :target: https://anaconda.org/conda-forge/reedsolo\n.. |Conda-Forge-Platforms| image:: https://anaconda.org/conda-forge/reedsolo/badges/platforms.svg\n   :target: https://anaconda.org/conda-forge/reedsolo\n.. |Conda-Forge-Downloads| image:: https://anaconda.org/conda-forge/reedsolo/badges/downloads.svg\n   :target: https://anaconda.org/conda-forge/reedsolo\n.. |Contributors| image:: https://contrib.rocks/image?repo=tomerfiliba/reedsolomon\n   :target: https://github.com/tomerfiliba/reedsolomon/graphs/contributors\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tomerfiliba/reedsolomon",
    "keywords": "",
    "license": "Public Domain",
    "maintainer": "Stephen Karl Larroque",
    "maintainer_email": "lrq3000@gmail.com",
    "name": "reedsolo",
    "package_url": "https://pypi.org/project/reedsolo/",
    "platform": "any",
    "project_url": "https://pypi.org/project/reedsolo/",
    "project_urls": {
      "Homepage": "https://github.com/tomerfiliba/reedsolomon"
    },
    "release_url": "https://pypi.org/project/reedsolo/1.7.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Pure-Python Reed Solomon encoder/decoder",
    "version": "1.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16453185,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8199572e3e2604111c80b2ae79b4e9ff3967395d9d60fe9d5b5e55a649532f3",
          "md5": "12a842aed5a11d1c9712a179cd2e464b",
          "sha256": "c32e9570d996e975cd8b02f4a1044517aba120b8ff7f74dcbf8d106e3a6ddeb2"
        },
        "downloads": -1,
        "filename": "reedsolo-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "12a842aed5a11d1c9712a179cd2e464b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4041,
        "upload_time": "2012-06-07T22:27:16",
        "upload_time_iso_8601": "2012-06-07T22:27:16.420986Z",
        "url": "https://files.pythonhosted.org/packages/c8/19/9572e3e2604111c80b2ae79b4e9ff3967395d9d60fe9d5b5e55a649532f3/reedsolo-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1266c3680807e02ac92722d91e3c34e27b0411d183014e207a770a2f637e5967",
          "md5": "fb1a12b49fe476877c27a85ccd40dbe2",
          "sha256": "e7b21bf5ae156cb1941f99786d947632731e482a27c15400be9340736c10e1c4"
        },
        "downloads": -1,
        "filename": "reedsolo-0.1.zip",
        "has_sig": false,
        "md5_digest": "fb1a12b49fe476877c27a85ccd40dbe2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8057,
        "upload_time": "2012-06-07T22:27:17",
        "upload_time_iso_8601": "2012-06-07T22:27:17.269540Z",
        "url": "https://files.pythonhosted.org/packages/12/66/c3680807e02ac92722d91e3c34e27b0411d183014e207a770a2f637e5967/reedsolo-0.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e15ab1133de62ccd0e67bcf54545a03964f26c8280f47290bcc87ac6c99bb29",
          "md5": "14e3ec86c2534713729f09f6e509a93f",
          "sha256": "397c28491f28cd31317c77e223df743846231e6d8c4c89240a01bcade328a645"
        },
        "downloads": -1,
        "filename": "reedsolo-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "14e3ec86c2534713729f09f6e509a93f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4299,
        "upload_time": "2012-06-08T13:25:04",
        "upload_time_iso_8601": "2012-06-08T13:25:04.611722Z",
        "url": "https://files.pythonhosted.org/packages/6e/15/ab1133de62ccd0e67bcf54545a03964f26c8280f47290bcc87ac6c99bb29/reedsolo-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adc3fefaa8e91e6d470bc2f2133a96c0aac5ff8c54f545b5de8eb31808e8e825",
          "md5": "8d1d0df3e7a99978ba001b3a79b7923f",
          "sha256": "cef7eb63533ca3553523c35897d1e61a8d8b2a0e8c9735bc52b2116b2a65f8e1"
        },
        "downloads": -1,
        "filename": "reedsolo-0.2.zip",
        "has_sig": false,
        "md5_digest": "8d1d0df3e7a99978ba001b3a79b7923f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8585,
        "upload_time": "2012-06-08T13:25:05",
        "upload_time_iso_8601": "2012-06-08T13:25:05.278330Z",
        "url": "https://files.pythonhosted.org/packages/ad/c3/fefaa8e91e6d470bc2f2133a96c0aac5ff8c54f545b5de8eb31808e8e825/reedsolo-0.2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7fc9a92265c7e8d556d3af1fc023727707385645fa05714bb25817448d6df76",
          "md5": "eda400a679236abe3a78c5cc682ff1bc",
          "sha256": "c11f074c1dc3eee86a7c976a7626e92e933e0b15cc0272654ad3760af0685d7f"
        },
        "downloads": -1,
        "filename": "reedsolo-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "eda400a679236abe3a78c5cc682ff1bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4168,
        "upload_time": "2012-08-09T10:20:05",
        "upload_time_iso_8601": "2012-08-09T10:20:05.036573Z",
        "url": "https://files.pythonhosted.org/packages/b7/fc/9a92265c7e8d556d3af1fc023727707385645fa05714bb25817448d6df76/reedsolo-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3297c570762cf5285c3102c60ea8c56e6a4c9afb26d711841dc7e52f75b27d35",
          "md5": "b9f072c982059150bbc007e823bcd08f",
          "sha256": "a0ea07f90aa5b944c2e67805d6f6bcdc2a77f05d81714a40332edbe2fb26a0c0"
        },
        "downloads": -1,
        "filename": "reedsolo-0.3.win32.exe",
        "has_sig": false,
        "md5_digest": "b9f072c982059150bbc007e823bcd08f",
        "packagetype": "bdist_wininst",
        "python_version": "any",
        "requires_python": null,
        "size": 69061,
        "upload_time": "2012-08-09T10:20:09",
        "upload_time_iso_8601": "2012-08-09T10:20:09.097446Z",
        "url": "https://files.pythonhosted.org/packages/32/97/c570762cf5285c3102c60ea8c56e6a4c9afb26d711841dc7e52f75b27d35/reedsolo-0.3.win32.exe",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "881aabcf86fe9bb1ae7147ca66645e070bde4e1f380022f301a05b7c1473293a",
          "md5": "bfad5a13d5539746638808c927ea6f10",
          "sha256": "fc0795b16a729fb43d452bcdadda82ff90699bdc296b1cb49443570379a8222b"
        },
        "downloads": -1,
        "filename": "reedsolo-0.3.zip",
        "has_sig": false,
        "md5_digest": "bfad5a13d5539746638808c927ea6f10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8502,
        "upload_time": "2012-08-09T10:20:06",
        "upload_time_iso_8601": "2012-08-09T10:20:06.131242Z",
        "url": "https://files.pythonhosted.org/packages/88/1a/abcf86fe9bb1ae7147ca66645e070bde4e1f380022f301a05b7c1473293a/reedsolo-0.3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55e46d216ee63b880d5fdda6334718d91ee78f1e6d262041f8b206e6b6ddcc56",
          "md5": "79d5bf7fabd12a78e3ecebd00771a89f",
          "sha256": "9e0089892f0e0bf78bb02f0623f5cf7a764c39994ae1a1333226af46bec49444"
        },
        "downloads": -1,
        "filename": "reedsolo-1.4.10-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "79d5bf7fabd12a78e3ecebd00771a89f",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 181410,
        "upload_time": "2020-03-01T21:17:43",
        "upload_time_iso_8601": "2020-03-01T21:17:43.211030Z",
        "url": "https://files.pythonhosted.org/packages/55/e4/6d216ee63b880d5fdda6334718d91ee78f1e6d262041f8b206e6b6ddcc56/reedsolo-1.4.10-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c9eb976539d30f3ae1a1d094b7874332088dc31e517b16547de027016d0ad1c",
          "md5": "d3df3faea9a9013d39b4fd09e9165440",
          "sha256": "be9717c4536e8542915908d9af7392ac50107b5cc891028b4bb8cea88f3b1432"
        },
        "downloads": -1,
        "filename": "reedsolo-1.4.10.tar.gz",
        "has_sig": false,
        "md5_digest": "d3df3faea9a9013d39b4fd09e9165440",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 262784,
        "upload_time": "2020-03-01T21:17:45",
        "upload_time_iso_8601": "2020-03-01T21:17:45.999174Z",
        "url": "https://files.pythonhosted.org/packages/1c/9e/b976539d30f3ae1a1d094b7874332088dc31e517b16547de027016d0ad1c/reedsolo-1.4.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f696fa18183ca6fb27ef78b943e0fa3cdfe6f6f1721bbb84ca7e8430eea57ee",
          "md5": "a0ff1274a4ce9194e29945fef9e78814",
          "sha256": "523dd2fad85e0e09b8db7ab261f4f5d43fc3f0b2bd8e668c67de97631671709b"
        },
        "downloads": -1,
        "filename": "reedsolo-1.4.3-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "a0ff1274a4ce9194e29945fef9e78814",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 177153,
        "upload_time": "2020-03-01T18:17:19",
        "upload_time_iso_8601": "2020-03-01T18:17:19.912495Z",
        "url": "https://files.pythonhosted.org/packages/5f/69/6fa18183ca6fb27ef78b943e0fa3cdfe6f6f1721bbb84ca7e8430eea57ee/reedsolo-1.4.3-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be262552a8e3e945ad578c47ab9c8b6b1520d9d1788d17f738efb3b5b97260c2",
          "md5": "a8d628182912684a76eff2caa3d4bda1",
          "sha256": "fb00e6055558ce91d6aa7b83c252611c48253602de08340d3249c0ed7fce2c93"
        },
        "downloads": -1,
        "filename": "reedsolo-1.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a8d628182912684a76eff2caa3d4bda1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 255819,
        "upload_time": "2020-03-01T18:17:21",
        "upload_time_iso_8601": "2020-03-01T18:17:21.815138Z",
        "url": "https://files.pythonhosted.org/packages/be/26/2552a8e3e945ad578c47ab9c8b6b1520d9d1788d17f738efb3b5b97260c2/reedsolo-1.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e35ecd1a791e78d353ce39aae6370a481108d854f7ae9cde5e32719fa25b74d",
          "md5": "6d4b52072f4aa5aa54b12932122a991b",
          "sha256": "c6116d3c1e4afd665e24f5cd72e9771bd6f4aab602f838a25ca041e458d275ca"
        },
        "downloads": -1,
        "filename": "reedsolo-1.4.5-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "6d4b52072f4aa5aa54b12932122a991b",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 177325,
        "upload_time": "2020-03-01T20:01:34",
        "upload_time_iso_8601": "2020-03-01T20:01:34.899360Z",
        "url": "https://files.pythonhosted.org/packages/9e/35/ecd1a791e78d353ce39aae6370a481108d854f7ae9cde5e32719fa25b74d/reedsolo-1.4.5-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "279b852bc7ef3208f37daf06e7e9ce4b5c73efcb7da3ff8121bc4ae845670c1a",
          "md5": "fd3669d786fa77906390d3f6a321d524",
          "sha256": "76e7282568695a08b667b816cbe45e8d8df98c535c19fe8601886f39245d1d43"
        },
        "downloads": -1,
        "filename": "reedsolo-1.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fd3669d786fa77906390d3f6a321d524",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 256232,
        "upload_time": "2020-03-01T20:01:36",
        "upload_time_iso_8601": "2020-03-01T20:01:36.981031Z",
        "url": "https://files.pythonhosted.org/packages/27/9b/852bc7ef3208f37daf06e7e9ce4b5c73efcb7da3ff8121bc4ae845670c1a/reedsolo-1.4.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa7d5e9edb7c043c083d5f6a37a01166921eacc34dd45b955eeab91e61605c47",
          "md5": "61586846867bbaa9377bd12125edae88",
          "sha256": "a323b4f7c8fb40b922c776e8804c95afb990c6f14f05b363bc35d64dd02d263a"
        },
        "downloads": -1,
        "filename": "reedsolo-1.4.6-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "61586846867bbaa9377bd12125edae88",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 177300,
        "upload_time": "2020-03-01T20:14:15",
        "upload_time_iso_8601": "2020-03-01T20:14:15.525467Z",
        "url": "https://files.pythonhosted.org/packages/aa/7d/5e9edb7c043c083d5f6a37a01166921eacc34dd45b955eeab91e61605c47/reedsolo-1.4.6-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a8d6291ea540c741ad1970c964672acc54b673fe6f74cfa246570396b730154",
          "md5": "555dcc1c6fac8e7db85f8568ac324d08",
          "sha256": "97244798e1814d40a4d7bdd52a365fa64a78a0dfffa8b550697a2869b8b03cbe"
        },
        "downloads": -1,
        "filename": "reedsolo-1.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "555dcc1c6fac8e7db85f8568ac324d08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 255268,
        "upload_time": "2020-03-01T20:14:17",
        "upload_time_iso_8601": "2020-03-01T20:14:17.860997Z",
        "url": "https://files.pythonhosted.org/packages/2a/8d/6291ea540c741ad1970c964672acc54b673fe6f74cfa246570396b730154/reedsolo-1.4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ec590c0ad78eb17cce2e1607ff3ece8308b3017dfe49234ff2b273cef4830ba",
          "md5": "36192752dcf995dd1998733612a2dad3",
          "sha256": "fa94147c7addce7783030ba01425bc091a8d26356d86e9969dead33c07f90039"
        },
        "downloads": -1,
        "filename": "reedsolo-1.4.8-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "36192752dcf995dd1998733612a2dad3",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 181265,
        "upload_time": "2020-03-01T21:09:42",
        "upload_time_iso_8601": "2020-03-01T21:09:42.291225Z",
        "url": "https://files.pythonhosted.org/packages/7e/c5/90c0ad78eb17cce2e1607ff3ece8308b3017dfe49234ff2b273cef4830ba/reedsolo-1.4.8-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0f154dd402de9262237749e33425d20f4e6722999a8545da1c553482208eef6",
          "md5": "8ea92d24ad374f02ed9e35f58809affc",
          "sha256": "1207b93906804cc7b6193499ac6384dd25f53509be098cbacf45fae34aefffa4"
        },
        "downloads": -1,
        "filename": "reedsolo-1.4.8.tar.gz",
        "has_sig": false,
        "md5_digest": "8ea92d24ad374f02ed9e35f58809affc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 262387,
        "upload_time": "2020-03-01T21:09:45",
        "upload_time_iso_8601": "2020-03-01T21:09:45.191301Z",
        "url": "https://files.pythonhosted.org/packages/e0/f1/54dd402de9262237749e33425d20f4e6722999a8545da1c553482208eef6/reedsolo-1.4.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44a6c5c971d0aa3824e923e65e64c556eade5058d11c842cdc975948a09b2669",
          "md5": "b3165361343a3ab578668b7ca3776d65",
          "sha256": "e69a85fe2a6af9d178feb77ca33a60f6d25628e7c8905b16a028e0ce737cb349"
        },
        "downloads": -1,
        "filename": "reedsolo-1.4.9-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "b3165361343a3ab578668b7ca3776d65",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 181270,
        "upload_time": "2020-03-01T21:12:28",
        "upload_time_iso_8601": "2020-03-01T21:12:28.906081Z",
        "url": "https://files.pythonhosted.org/packages/44/a6/c5c971d0aa3824e923e65e64c556eade5058d11c842cdc975948a09b2669/reedsolo-1.4.9-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a68d398f446f71f0db7fd848a8d74eb59178f1b12b817c944c6e0d5502e0d3c",
          "md5": "70fa38c70a1e6fed21c43c20c3f05fc3",
          "sha256": "4e3edbe98f110f253b56a3b2e886feb2897534c49f8116884d817384e9f0d778"
        },
        "downloads": -1,
        "filename": "reedsolo-1.4.9.tar.gz",
        "has_sig": false,
        "md5_digest": "70fa38c70a1e6fed21c43c20c3f05fc3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 262397,
        "upload_time": "2020-03-01T21:12:31",
        "upload_time_iso_8601": "2020-03-01T21:12:31.088616Z",
        "url": "https://files.pythonhosted.org/packages/5a/68/d398f446f71f0db7fd848a8d74eb59178f1b12b817c944c6e0d5502e0d3c/reedsolo-1.4.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e89ee3b6f4d71554784d6c020f0a0de6559a4185981e032dd0e2973f0aa1cac2",
          "md5": "6b0d5e65aa0b9f32231db64fe6021faa",
          "sha256": "7eeeb38d5ace05a009a71f7f5daf66500e6ec4f3130dffa36b7317c6d916646f"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "6b0d5e65aa0b9f32231db64fe6021faa",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 185513,
        "upload_time": "2020-03-02T10:23:04",
        "upload_time_iso_8601": "2020-03-02T10:23:04.786783Z",
        "url": "https://files.pythonhosted.org/packages/e8/9e/e3b6f4d71554784d6c020f0a0de6559a4185981e032dd0e2973f0aa1cac2/reedsolo-1.5.0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7c247aaaf8a43ece71ac9c25d08870b8998dc417f610aaa54f54a339b066b33",
          "md5": "45c764ba2359cfd994c23e856f8466c6",
          "sha256": "33d195bc4f8b37b322436e2caf2512997a6eefb66102158c033df9a84d14b54a"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "45c764ba2359cfd994c23e856f8466c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 269086,
        "upload_time": "2020-03-02T10:23:07",
        "upload_time_iso_8601": "2020-03-02T10:23:07.275856Z",
        "url": "https://files.pythonhosted.org/packages/f7/c2/47aaaf8a43ece71ac9c25d08870b8998dc417f610aaa54f54a339b066b33/reedsolo-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ae6d5a0c2d7000dd6272e346e7261fb41e9ae729304ed9447fdd81f256ceeb1",
          "md5": "57e3e7c5388af2d1229313660c75d6c4",
          "sha256": "b875ef7414a14e63f55d4e0757a272fb4282495ec38e65ee3fe927972918a54a"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.0.win-amd64-py3.7.exe",
        "has_sig": false,
        "md5_digest": "57e3e7c5388af2d1229313660c75d6c4",
        "packagetype": "bdist_wininst",
        "python_version": "3.7",
        "requires_python": null,
        "size": 787024,
        "upload_time": "2020-03-02T10:35:33",
        "upload_time_iso_8601": "2020-03-02T10:35:33.799181Z",
        "url": "https://files.pythonhosted.org/packages/9a/e6/d5a0c2d7000dd6272e346e7261fb41e9ae729304ed9447fdd81f256ceeb1/reedsolo-1.5.0.win-amd64-py3.7.exe",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae17d0d1446900c591f19f9c09a6e508126f6612ce85657d01354501f0e66281",
          "md5": "1387d1d7ed4bc569eb1295b0f8b4055a",
          "sha256": "e5be1247bf647170ea5ce52fd53cdaf2a59dac255039d6350360dedcebdb9861"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.1-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "1387d1d7ed4bc569eb1295b0f8b4055a",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 185914,
        "upload_time": "2020-03-02T11:16:08",
        "upload_time_iso_8601": "2020-03-02T11:16:08.017038Z",
        "url": "https://files.pythonhosted.org/packages/ae/17/d0d1446900c591f19f9c09a6e508126f6612ce85657d01354501f0e66281/reedsolo-1.5.1-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68f3c5b6d252e70334d8613caf7b663454565451cae9f3da424e0be2ae7024e0",
          "md5": "78e87e132ab9af1ba8b1553d349f7efe",
          "sha256": "a3338ac360400223013bfa9082113ce171dd12949e43bb9eeacac24173bbfca2"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "78e87e132ab9af1ba8b1553d349f7efe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 270015,
        "upload_time": "2020-03-02T11:16:10",
        "upload_time_iso_8601": "2020-03-02T11:16:10.171852Z",
        "url": "https://files.pythonhosted.org/packages/68/f3/c5b6d252e70334d8613caf7b663454565451cae9f3da424e0be2ae7024e0/reedsolo-1.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a057bd0a70b307e8a4393f740aafb0e27850405a2e58c72c2d1053e017c3c1ad",
          "md5": "b1f82568a83b29efe75233645720cac9",
          "sha256": "f2294da2b632a326b90be865d27d10d9496c6c0c29a4af423adb258382c2864a"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.1.win-amd64-py3.7.exe",
        "has_sig": false,
        "md5_digest": "b1f82568a83b29efe75233645720cac9",
        "packagetype": "bdist_wininst",
        "python_version": "3.7",
        "requires_python": null,
        "size": 788841,
        "upload_time": "2020-03-02T11:16:12",
        "upload_time_iso_8601": "2020-03-02T11:16:12.915002Z",
        "url": "https://files.pythonhosted.org/packages/a0/57/bd0a70b307e8a4393f740aafb0e27850405a2e58c72c2d1053e017c3c1ad/reedsolo-1.5.1.win-amd64-py3.7.exe",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f9955ce0f6d994f139baeb0f5756e0d83897b22736fc8279ff418a6b2b055ee",
          "md5": "23f65f68aa1ce39af552e1df15647a8a",
          "sha256": "eac233e970aa7719fe9a7f76f185294b08415fbfb8b3d8f1436e2b02e03c95df"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.10-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "23f65f68aa1ce39af552e1df15647a8a",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 173173,
        "upload_time": "2022-12-08T22:25:37",
        "upload_time_iso_8601": "2022-12-08T22:25:37.573745Z",
        "url": "https://files.pythonhosted.org/packages/4f/99/55ce0f6d994f139baeb0f5756e0d83897b22736fc8279ff418a6b2b055ee/reedsolo-1.5.10-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ac0a517a7681a25d572e16dacfff8a560f43c8af673c24b22a370993732632e",
          "md5": "899f7cd9170a42c1a84affcc0fcc1c9d",
          "sha256": "ef00d4051eff35e52a152fd368bffa52ea9556bced34435a92c9f2dc6ac4667d"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.10.tar.gz",
        "has_sig": false,
        "md5_digest": "899f7cd9170a42c1a84affcc0fcc1c9d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 277052,
        "upload_time": "2022-12-08T22:25:41",
        "upload_time_iso_8601": "2022-12-08T22:25:41.395258Z",
        "url": "https://files.pythonhosted.org/packages/8a/c0/a517a7681a25d572e16dacfff8a560f43c8af673c24b22a370993732632e/reedsolo-1.5.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f03834ef37f96e230243f86ad0d4b63d95551f61d4e1e8aef52aa35f55151ee1",
          "md5": "2a262eec3b00a2082ed95052b669a748",
          "sha256": "277f8d4fe3fb189332c8d9bcc105d3844f5c7c211b92a5e75364e6f5e99a2a57"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.11-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "2a262eec3b00a2082ed95052b669a748",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 173327,
        "upload_time": "2022-12-08T22:45:22",
        "upload_time_iso_8601": "2022-12-08T22:45:22.253550Z",
        "url": "https://files.pythonhosted.org/packages/f0/38/34ef37f96e230243f86ad0d4b63d95551f61d4e1e8aef52aa35f55151ee1/reedsolo-1.5.11-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac44c686af196f6c1adc7c84e8190259c4974c2e6763898a345b8cbf4c8ac56b",
          "md5": "8aa8ae571eefe60efdc271de36721dc5",
          "sha256": "37c268d9ec86784e2f11d62097b7473c8444ab740c3c127a355f5077460d0097"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.11.tar.gz",
        "has_sig": false,
        "md5_digest": "8aa8ae571eefe60efdc271de36721dc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 277442,
        "upload_time": "2022-12-08T22:45:25",
        "upload_time_iso_8601": "2022-12-08T22:45:25.249447Z",
        "url": "https://files.pythonhosted.org/packages/ac/44/c686af196f6c1adc7c84e8190259c4974c2e6763898a345b8cbf4c8ac56b/reedsolo-1.5.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "943d5f39c14834a6843e2a8ca191782828756df4db23f0c347f03ed2b649899a",
          "md5": "0890a771c46a0e03631122e9a3b6856f",
          "sha256": "dc9a5a505d36d6c2d012a5b8c60b08ddc2b119e50e0bd7f33cd18bac0ea74aae"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.3-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "0890a771c46a0e03631122e9a3b6856f",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 186249,
        "upload_time": "2020-05-04T15:40:58",
        "upload_time_iso_8601": "2020-05-04T15:40:58.129209Z",
        "url": "https://files.pythonhosted.org/packages/94/3d/5f39c14834a6843e2a8ca191782828756df4db23f0c347f03ed2b649899a/reedsolo-1.5.3-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e35f64bbef00d2b33593bae6082dac0112d7e233630ab419ab8ac34ee191d2d2",
          "md5": "01735928f56ee01faba7ea5da511c17f",
          "sha256": "82f02f94eccc3de3c641c55c415e469793c16cec171d7c2203dcffa2833196e0"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "01735928f56ee01faba7ea5da511c17f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 271097,
        "upload_time": "2020-05-04T15:41:00",
        "upload_time_iso_8601": "2020-05-04T15:41:00.015915Z",
        "url": "https://files.pythonhosted.org/packages/e3/5f/64bbef00d2b33593bae6082dac0112d7e233630ab419ab8ac34ee191d2d2/reedsolo-1.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75a05b59fa357674cba1dfb9a8b11bae27356c7733e40ab538fbc922b3aa43cd",
          "md5": "454654c46fea4d0e7f5a1a6daf72fdc7",
          "sha256": "0f5c33c5abcc51808012aa55f40d06bd15273bae2e54ad9879e41d77a73887ed"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.4-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "454654c46fea4d0e7f5a1a6daf72fdc7",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 186295,
        "upload_time": "2020-05-20T06:38:47",
        "upload_time_iso_8601": "2020-05-20T06:38:47.614114Z",
        "url": "https://files.pythonhosted.org/packages/75/a0/5b59fa357674cba1dfb9a8b11bae27356c7733e40ab538fbc922b3aa43cd/reedsolo-1.5.4-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8cbbb2ddbd00c9b4215dd57a2abf7042b0ae222b44522c5eb664a8fd9d786da",
          "md5": "89bb392d10ddc5e3d876a7a9e05d103c",
          "sha256": "b8b25cdc83478ccb06361a0e8fadc27b376a3dfabbb1dc6bb583a998a22c0127"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "89bb392d10ddc5e3d876a7a9e05d103c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 271280,
        "upload_time": "2020-05-20T06:38:49",
        "upload_time_iso_8601": "2020-05-20T06:38:49.952256Z",
        "url": "https://files.pythonhosted.org/packages/c8/cb/bb2ddbd00c9b4215dd57a2abf7042b0ae222b44522c5eb664a8fd9d786da/reedsolo-1.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fc4804f9970ccca1c5a79cd01d8e633a86f059cf6fa1e194eed41ea18539c85",
          "md5": "6f90346393ace82364938c496737cc7d",
          "sha256": "62ade9a1b3c93da3c81ec3398bf6d4850cc9d80210e57332f5f019d733656d7c"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.8-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "6f90346393ace82364938c496737cc7d",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 173181,
        "upload_time": "2022-12-08T22:03:54",
        "upload_time_iso_8601": "2022-12-08T22:03:54.205121Z",
        "url": "https://files.pythonhosted.org/packages/3f/c4/804f9970ccca1c5a79cd01d8e633a86f059cf6fa1e194eed41ea18539c85/reedsolo-1.5.8-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70a3532a7c7d1e417bf632ded24acd6f7384ac585ab9c4a752c6b9d02daa1354",
          "md5": "0c371372815929a1296fa1b72aad7baf",
          "sha256": "2a93056bce41c7e7802536139a6b588ffc0e68b501e80299468ba242b263b4a0"
        },
        "downloads": -1,
        "filename": "reedsolo-1.5.8.tar.gz",
        "has_sig": false,
        "md5_digest": "0c371372815929a1296fa1b72aad7baf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 277076,
        "upload_time": "2022-12-08T22:03:58",
        "upload_time_iso_8601": "2022-12-08T22:03:58.055396Z",
        "url": "https://files.pythonhosted.org/packages/70/a3/532a7c7d1e417bf632ded24acd6f7384ac585ab9c4a752c6b9d02daa1354/reedsolo-1.5.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50c6772d340abc8911d9e989a7cb8df26f1e7af69fb09398e4f75e0e52361b56",
          "md5": "145e1dbbb31f795bc7e2919ef0eb01ae",
          "sha256": "45d7908dc0b14a68723a1eafcca7430fb9885424c309bab7aab10dcfac547de0"
        },
        "downloads": -1,
        "filename": "reedsolo-1.6.0-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "145e1dbbb31f795bc7e2919ef0eb01ae",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 174243,
        "upload_time": "2022-12-09T00:57:40",
        "upload_time_iso_8601": "2022-12-09T00:57:40.280509Z",
        "url": "https://files.pythonhosted.org/packages/50/c6/772d340abc8911d9e989a7cb8df26f1e7af69fb09398e4f75e0e52361b56/reedsolo-1.6.0-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b1028d1492cc82a103bc06f18cb9a9dbb3a9168ab2e4068801fa0aa0c76b231",
          "md5": "b67a04027a1825c63a63b6793ec660a3",
          "sha256": "4e290d3b0a7207ac7aac186790766c752b5fcdf5e0b04dfd260349579052bbac"
        },
        "downloads": -1,
        "filename": "reedsolo-1.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b67a04027a1825c63a63b6793ec660a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 278604,
        "upload_time": "2022-12-09T00:57:43",
        "upload_time_iso_8601": "2022-12-09T00:57:43.329965Z",
        "url": "https://files.pythonhosted.org/packages/9b/10/28d1492cc82a103bc06f18cb9a9dbb3a9168ab2e4068801fa0aa0c76b231/reedsolo-1.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "409a58a0d22376f94b552b34a3f8d367fa8dc34427d5dbaa5d4093120c935b9e",
          "md5": "f4900958d6554e9219f07be49d95a1c8",
          "sha256": "28c72e149b158ce588e23cd392750f8a55f35bd3608447d0dc9c12b68da017eb"
        },
        "downloads": -1,
        "filename": "reedsolo-1.6.1-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "f4900958d6554e9219f07be49d95a1c8",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 170113,
        "upload_time": "2023-01-06T17:25:58",
        "upload_time_iso_8601": "2023-01-06T17:25:58.315635Z",
        "url": "https://files.pythonhosted.org/packages/40/9a/58a0d22376f94b552b34a3f8d367fa8dc34427d5dbaa5d4093120c935b9e/reedsolo-1.6.1-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da4f8b88d7b1cb5ddecc46ad186a51e75144ed0119123c0a4b75a14875aff131",
          "md5": "2069d1efb02da5df1231103d8626e085",
          "sha256": "a7ce6b0efad8df491a70b87b6ab3543e751f7700dc4ac0b12081a456ef634f5d"
        },
        "downloads": -1,
        "filename": "reedsolo-1.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2069d1efb02da5df1231103d8626e085",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 280333,
        "upload_time": "2023-01-06T17:26:00",
        "upload_time_iso_8601": "2023-01-06T17:26:00.421757Z",
        "url": "https://files.pythonhosted.org/packages/da/4f/8b88d7b1cb5ddecc46ad186a51e75144ed0119123c0a4b75a14875aff131/reedsolo-1.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09191bb346c0e581557c88946d2bb979b2bee8992e72314cfb418b5440e383db",
          "md5": "77395a83d2be6defcd1e7d50473b09c7",
          "sha256": "2b6a3e402a1ee3e1eea3f932f81e6c0b7bbc615588074dca1dbbcdeb055002bd"
        },
        "downloads": -1,
        "filename": "reedsolo-1.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77395a83d2be6defcd1e7d50473b09c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 32360,
        "upload_time": "2023-01-17T05:10:17",
        "upload_time_iso_8601": "2023-01-17T05:10:17.652151Z",
        "url": "https://files.pythonhosted.org/packages/09/19/1bb346c0e581557c88946d2bb979b2bee8992e72314cfb418b5440e383db/reedsolo-1.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f761a67338cbecf370d464e71b10e9a31355f909d6937c3a8d6b17dd5d5beb5e",
          "md5": "5bbd7741f915ad67b6d425f93ab9d103",
          "sha256": "c1359f02742751afe0f1c0de9f0772cc113835aa2855d2db420ea24393c87732"
        },
        "downloads": -1,
        "filename": "reedsolo-1.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5bbd7741f915ad67b6d425f93ab9d103",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59723,
        "upload_time": "2023-01-17T05:10:19",
        "upload_time_iso_8601": "2023-01-17T05:10:19.733077Z",
        "url": "https://files.pythonhosted.org/packages/f7/61/a67338cbecf370d464e71b10e9a31355f909d6937c3a8d6b17dd5d5beb5e/reedsolo-1.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "09191bb346c0e581557c88946d2bb979b2bee8992e72314cfb418b5440e383db",
        "md5": "77395a83d2be6defcd1e7d50473b09c7",
        "sha256": "2b6a3e402a1ee3e1eea3f932f81e6c0b7bbc615588074dca1dbbcdeb055002bd"
      },
      "downloads": -1,
      "filename": "reedsolo-1.7.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "77395a83d2be6defcd1e7d50473b09c7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 32360,
      "upload_time": "2023-01-17T05:10:17",
      "upload_time_iso_8601": "2023-01-17T05:10:17.652151Z",
      "url": "https://files.pythonhosted.org/packages/09/19/1bb346c0e581557c88946d2bb979b2bee8992e72314cfb418b5440e383db/reedsolo-1.7.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f761a67338cbecf370d464e71b10e9a31355f909d6937c3a8d6b17dd5d5beb5e",
        "md5": "5bbd7741f915ad67b6d425f93ab9d103",
        "sha256": "c1359f02742751afe0f1c0de9f0772cc113835aa2855d2db420ea24393c87732"
      },
      "downloads": -1,
      "filename": "reedsolo-1.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5bbd7741f915ad67b6d425f93ab9d103",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 59723,
      "upload_time": "2023-01-17T05:10:19",
      "upload_time_iso_8601": "2023-01-17T05:10:19.733077Z",
      "url": "https://files.pythonhosted.org/packages/f7/61/a67338cbecf370d464e71b10e9a31355f909d6937c3a8d6b17dd5d5beb5e/reedsolo-1.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}