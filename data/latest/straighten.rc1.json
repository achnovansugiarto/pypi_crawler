{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Interpolation along multidimensional curves.\n\n## Installation\n\n```bash\ngit clone https://github.com/neuro-ml/straighten.git\ncd straighten\npip install -e .\n```\n\n## Usage\n\nPrepare the interpolator\n\n```python\nfrom straighten import Interpolator\n\ncurve = ...  # a 3d curve\n# `step` is the distance along used to take equidistant points\ninter = Interpolator(curve, step=1)\n```\n\nInterpolate the image\n\n```python\nimage = ...  # a 3d image containing the curve\nstraight = inter.interpolate_along(image, shape=(80, 80))\n# N - is the number of equidistant points along the curve\nprint(straight.shape)  # (N, 80, 80)\n```\n\nMove additional points from the image to the new coordinates system:\n\n```python\n# the shape must be the same as for the straightened image\nlocal = inter.global_to_local(points, shape=(80, 80))\n```\n\nMove points from the new coordinate system back:\n\n```python\noriginal = inter.local_to_global(local, shape=(80, 80))\n```\n\n## Making a local basis\n\nIn order to change the coordinate system we need a local basis along the curve.\n[Frenetâ€“Serret](https://en.wikipedia.org/wiki/Frenet%E2%80%93Serret_formulas) is a good starting point, however, for\ncertain curves it can give unwanted rotations along the tangential vectors.\n\nIf you need a better local basis for your task, you can pass the `get_local_basis` argument in `Interpolator`'s\nconstructor. E.g. see the implementation of [frenet_serret](straighten/curve.py).\n\nFor example, in this [paper](https://arxiv.org/abs/2005.11960) we used the following local basis:\n\n```python\nimport numpy as np\n\n\ndef get_local_basis(grad, *args):\n    grad = grad / np.linalg.norm(grad, axis=1, keepdims=True)\n\n    # the second basis vector must be in the sagittal plane\n    sagittal = grad[:, [0, 2]]\n    second = sagittal[:, ::-1] * [1, -1]\n\n    # choose the right orientation of the basis (avoiding rotations)\n    dets = np.linalg.det(np.stack([sagittal, second], -1))\n    second = second * dets[:, None]\n    second = second / np.linalg.norm(second, axis=1, keepdims=True)\n    second = np.insert(second, 1, np.zeros_like(second[:, 0]), axis=1)\n\n    third = np.cross(second, grad)\n\n    return np.stack([grad, second, third], -1)\n```\n\nwhich yields a much more stable local basis for our particular task.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/neuro-ml/straighten/archive/v0.2.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/neuro-ml/straighten",
    "keywords": "data,version control",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "straighten",
    "package_url": "https://pypi.org/project/straighten/",
    "platform": null,
    "project_url": "https://pypi.org/project/straighten/",
    "project_urls": {
      "Download": "https://github.com/neuro-ml/straighten/archive/v0.2.0.tar.gz",
      "Homepage": "https://github.com/neuro-ml/straighten"
    },
    "release_url": "https://pypi.org/project/straighten/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15035890,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c6be95f2dc556f67b7e3e923ed9cc911d5512c9b35725295415b3981267d9db",
          "md5": "c1be54b66de1f36bc90398a7839e57ba",
          "sha256": "69a4afcbfce9daebe2cb2c54b8a91278d7ac527b88fb40413a542a95c34f664a"
        },
        "downloads": -1,
        "filename": "straighten-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c1be54b66de1f36bc90398a7839e57ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5942,
        "upload_time": "2022-09-08T17:05:06",
        "upload_time_iso_8601": "2022-09-08T17:05:06.483295Z",
        "url": "https://files.pythonhosted.org/packages/7c/6b/e95f2dc556f67b7e3e923ed9cc911d5512c9b35725295415b3981267d9db/straighten-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c6be95f2dc556f67b7e3e923ed9cc911d5512c9b35725295415b3981267d9db",
        "md5": "c1be54b66de1f36bc90398a7839e57ba",
        "sha256": "69a4afcbfce9daebe2cb2c54b8a91278d7ac527b88fb40413a542a95c34f664a"
      },
      "downloads": -1,
      "filename": "straighten-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c1be54b66de1f36bc90398a7839e57ba",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5942,
      "upload_time": "2022-09-08T17:05:06",
      "upload_time_iso_8601": "2022-09-08T17:05:06.483295Z",
      "url": "https://files.pythonhosted.org/packages/7c/6b/e95f2dc556f67b7e3e923ed9cc911d5512c9b35725295415b3981267d9db/straighten-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}