{
  "info": {
    "author": "Alberto Santagostino",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Systemd service handler (servicehandler)\n\n**servicehandler** is a Python library that provides an orchestrator for systemd services. It abstracts services as objects and implements helper methods, wrapping the `systemctl` command\n\nUsing this package does **not** require root permissions, as the service manager used is the one of the current user (the service configuration files are in `/usr/lib/systemd/user/`)\n\n## Description\n\nThe first thing to handle services is to create a **service unit file** (in `/usr/lib/systemd/user/my-service.service`) like the following:\n\n```ini\n[Unit]\nDescription=My service\n\n[Service]\nExecStart=/usr/bin/python3 /home/user/service_script/main.py\nEnvironment=PATH=/bin:/usr/bin:/usr/local/bin\nWorkingDirectory=/home/user/service_script/\n\n[Install]\nWantedBy=multi-user.target\n```\n\nDepending on how you created the service file you may need to provide access to the user through `sudo chmod 644 my-service.service`\n\n### Usage\n\n**Control the state of a service**\n\n```python\nimport servicehandler as sh\n\n# Create a new service handler\nmy_service = sh.ServiceHandler('MyService','my-service.service')\n\n# Check current state\nmy_service.state()\n<ServiceState.STOPPED: 2>\n\n# Start the service\n> my_service.start()\nMyService changed state to ServiceState.RUNNING\n<Response.OK: 1>\n\n# Try to start again the service\n> my_service.start()\n<Response.ALREADY: 2>\n\n# Terminate the service\n> my_service.stop()\nMyService changed state to ServiceState.STOPPED\n<Response.OK: 1>\n\n# Kill the service\n# In this specific case, the unit file was configured with restart=on-failure (automatic restart)\n> my_service.kill()\n<Response.OK: 1>\n```\n\n**Control the enablement_state of a service (whether it starts automatically on system startup)**\n\n```python\n# Check current enablement_state\n> my_service.enablement_state()\n<ServiceEnablementState.DISABLED: 2>\n\n# Enable the service\n> my_service.enable()\nCreated symlink /home/user/.config/systemd/user/multi-user.target.wants/my_service.service â†’ /usr/lib/systemd/user/my_service.service.\nMyService changed enablement state to ServiceEnablementState.ENABLED\n<Response.OK: 1>\n\n# Disable the service\n> my_service.disable()\nRemoved /home/user/.config/systemd/user/multi-user.target.wants/my_service.service.\nMyService changed enablement state to ServiceEnablementState.DISABLED\n<Response.OK: 1>\n```\n\n**Iterate over different services and perform batch operations**\n\n```python\nimport servicehandler as sh\n\nservice_A = sh.ServiceHandler('ServiceA','A-config-file.service')\nservice_B = sh.ServiceHandler('ServiceB','B-config-file.service')\nservice_C = sh.ServiceHandler('ServiceC','C-config-file.service')\n\nservices = [ServiceA, ServiceB, ServiceC]\n\n# Iterate over the services easily\nfor sr in services:\n    if sr.state == sh.ServiceStatus.STOPPED:\n        sr.restart()\n    print(sr)\n```\n\n## Installation\n\n### Install using pip\n\nThis package is available on [PyPI](https://pypi.org/project/servicehandler/) and it can be installed using **pip**:\n\n```\npip install servicehandler\n```\n\n### Build from source\n\nTo build and install the package from source:\n\n```\ngit clone https://github.com/albertosantagostino/systemd-servicehandler\ncd systemd-servicehandler\npython3 setup.py install\n```\n\n## Development history and use cases\n\n### Manage multiple services from a single entry-point\n\nThis library was developed while working on a Telegram bot ~~overlord~~ manager, used to handle other bots (and services) running on the same platform, providing a single point of access to the user\n\nIn this scenario multiple bots run on a headless Raspberry Pi Zero. In order to start them when needed, check their logs and interact with them without opening an SSH session every time, a brand new all-powerful Telegram bot was created, weaponized with this new package\n\n## License\n\nThe package is distributed under the [MIT License](https://opensource.org/licenses/MIT)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/albertosantagostino/systemd-servicehandler",
    "keywords": "Systemd Service Daemon Handler Linux Unix",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "servicehandler",
    "package_url": "https://pypi.org/project/servicehandler/",
    "platform": "",
    "project_url": "https://pypi.org/project/servicehandler/",
    "project_urls": {
      "Homepage": "https://github.com/albertosantagostino/systemd-servicehandler"
    },
    "release_url": "https://pypi.org/project/servicehandler/0.9/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Systemd service handler",
    "version": "0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7569960,
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10563f9c26cfc98e0e7773c559fbc979b8bccbfca40f5cf832e84f504d1c6e6a",
          "md5": "78997f5da87cc477b881864c4598b946",
          "sha256": "a5fac0b9b3f90756c13a5f6c385cbbc5b2d8ba9de497b7824a9a02539cdcc57d"
        },
        "downloads": -1,
        "filename": "servicehandler-0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78997f5da87cc477b881864c4598b946",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7548,
        "upload_time": "2020-06-26T15:38:50",
        "upload_time_iso_8601": "2020-06-26T15:38:50.116800Z",
        "url": "https://files.pythonhosted.org/packages/10/56/3f9c26cfc98e0e7773c559fbc979b8bccbfca40f5cf832e84f504d1c6e6a/servicehandler-0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbdb4a759f2056c001d5b38f1a5d4cd82bdf2b81b8119a70e531f0c31554be07",
          "md5": "8b404a983928b22c3eff8cdd08cd77ee",
          "sha256": "b33eb2b11b2b047217746b698650f97f33b1161f761275fff7978adc39bb95b9"
        },
        "downloads": -1,
        "filename": "servicehandler-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "8b404a983928b22c3eff8cdd08cd77ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6690,
        "upload_time": "2020-06-26T15:38:52",
        "upload_time_iso_8601": "2020-06-26T15:38:52.393374Z",
        "url": "https://files.pythonhosted.org/packages/fb/db/4a759f2056c001d5b38f1a5d4cd82bdf2b81b8119a70e531f0c31554be07/servicehandler-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10563f9c26cfc98e0e7773c559fbc979b8bccbfca40f5cf832e84f504d1c6e6a",
        "md5": "78997f5da87cc477b881864c4598b946",
        "sha256": "a5fac0b9b3f90756c13a5f6c385cbbc5b2d8ba9de497b7824a9a02539cdcc57d"
      },
      "downloads": -1,
      "filename": "servicehandler-0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "78997f5da87cc477b881864c4598b946",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7548,
      "upload_time": "2020-06-26T15:38:50",
      "upload_time_iso_8601": "2020-06-26T15:38:50.116800Z",
      "url": "https://files.pythonhosted.org/packages/10/56/3f9c26cfc98e0e7773c559fbc979b8bccbfca40f5cf832e84f504d1c6e6a/servicehandler-0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fbdb4a759f2056c001d5b38f1a5d4cd82bdf2b81b8119a70e531f0c31554be07",
        "md5": "8b404a983928b22c3eff8cdd08cd77ee",
        "sha256": "b33eb2b11b2b047217746b698650f97f33b1161f761275fff7978adc39bb95b9"
      },
      "downloads": -1,
      "filename": "servicehandler-0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "8b404a983928b22c3eff8cdd08cd77ee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6690,
      "upload_time": "2020-06-26T15:38:52",
      "upload_time_iso_8601": "2020-06-26T15:38:52.393374Z",
      "url": "https://files.pythonhosted.org/packages/fb/db/4a759f2056c001d5b38f1a5d4cd82bdf2b81b8119a70e531f0c31554be07/servicehandler-0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}