{
  "info": {
    "author": "Algolia Team",
    "author_email": "support@algolia.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "<p align=\"center\">\n  <a href=\"https://www.algolia.com\">\n    <img alt=\"Algolia for Django\" src=\"https://raw.githubusercontent.com/algolia/algoliasearch-client-common/master/banners/django.png\" >\n  </a>\n\n  <h4 align=\"center\">The perfect starting point to integrate <a href=\"https://algolia.com\" target=\"_blank\">Algolia</a> within your Django project</h4>\n\n  <p align=\"center\">\n    <a href=\"https://travis-ci.org/algolia/algoliasearch-django\"><img src=\"https://travis-ci.org/algolia/algoliasearch-django.svg?branch=master\" alt=\"Build Status\"></img></a>\n    <a href=\"https://coveralls.io/r/algolia/algoliasearch-django\"><img src=\"https://coveralls.io/repos/algolia/algoliasearch-django/badge.svg?branch=master\" alt=\"Coverage Status\"></img></a>\n    <a href=\"http://badge.fury.io/py/algoliasearch-django\"><img src=\"https://badge.fury.io/py/algoliasearch-django.svg?branch=master\" alt=\"PyPi Version\"></img></a>\n  </p>\n</p>\n\n\n<p align=\"center\">\n  <a href=\"https://www.algolia.com/doc/api-client/getting-started/install/go/\" target=\"_blank\">Documentation</a>  •\n  <a href=\"https://discourse.algolia.com\" target=\"_blank\">Community Forum</a>  •\n  <a href=\"http://stackoverflow.com/questions/tagged/algolia\" target=\"_blank\">Stack Overflow</a>  •\n  <a href=\"https://github.com/algolia/algoliasearch-django/issues\" target=\"_blank\">Report a bug</a>  •\n  <a href=\"https://www.algolia.com/support\" target=\"_blank\">Support</a>\n</p>\n\n## API Documentation\n\nYou can find the full reference on [Algolia's website](https://www.algolia.com/doc/framework-integration/django/).\n\n\n\n1. **[Setup](#setup)**\n    * [Introduction](#introduction)\n    * [Install](#install)\n    * [Setup](#setup)\n    * [Quick Start](#quick-start)\n\n1. **[Commands](#commands)**\n    * [Commands](#commands)\n\n1. **[Search](#search)**\n    * [Search](#search)\n\n1. **[Geo-Search](#geo-search)**\n    * [Geo-Search](#geo-search)\n\n1. **[Tags](#tags)**\n    * [Tags](#tags)\n\n1. **[Options](#options)**\n    * [Custom <code>objectID</code>](#custom-codeobjectidcode)\n    * [Custom index name](#custom-index-name)\n    * [Field Preprocessing and Related objects](#field-preprocessing-and-related-objects)\n    * [Index settings](#index-settings)\n    * [Restrict indexing to a subset of your data](#restrict-indexing-to-a-subset-of-your-data)\n    * [Multiple indices per model](#multiple-indices-per-model)\n    * [Temporarily disable the auto-indexing](#temporarily-disable-the-auto-indexing)\n\n1. **[Aggregators](#aggregators)**\n    * [Aggregators](#aggregators)\n\n1. **[Tests](#tests)**\n    * [Run Tests](#run-tests)\n\n\n\n\n# Setup\n\n\n\n## Introduction\n\nThis package lets you easily integrate the Algolia Search API to your [Django](https://www.djangoproject.com/) project. It's based on the [algoliasearch-client-python](https://github.com/algolia/algoliasearch-client-python) package.\n\nYou might be interested in this sample Django application providing a typeahead.js based auto-completion and Google-like instant search: [algoliasearch-django-example](https://github.com/algolia/algoliasearch-django-example)\n\nCompatible with **Python 3.5+** and **Django 2.2+**\n\n## Install\n\n```sh\npip install algoliasearch-django\n```\n\n## Setup\n\nIn your Django settings, add `algoliasearch_django` to `INSTALLED_APPS` and add these two settings:\n\n```python\nALGOLIA = {\n    'APPLICATION_ID': 'MyAppID',\n    'API_KEY': 'MyApiKey'\n}\n```\n\nThere are several optional settings:\n\n* `INDEX_PREFIX`: prefix all indices. Use it to separate different applications, like `site1_Products` and `site2_Products`.\n* `INDEX_SUFFIX`: suffix all indices. Use it to differentiate development and production environments, like `Location_dev` and `Location_prod`.\n* `AUTO_INDEXING`: automatically synchronize the models with Algolia (default to **True**).\n* `RAISE_EXCEPTIONS`: raise exceptions on network errors instead of logging them (default to **settings.DEBUG**).\n\n## Quick Start\n\nCreate an `index.py` inside each application that contains the models you want to index.\nInside this file, call `algoliasearch.register()` for each of the models you want to index:\n\n```python\n# index.py\n\nimport algoliasearch_django as algoliasearch\n\nfrom .models import YourModel\n\nalgoliasearch.register(YourModel)\n```\n\nBy default, all the fields of your model will be used. You can configure the index by creating a subclass of `AlgoliaIndex` and using the `register` decorator:\n\n```python\n# index.py\n\nfrom algoliasearch_django import AlgoliaIndex\nfrom algoliasearch_django.decorators import register\n\nfrom .models import YourModel\n\n@register(YourModel)\nclass YourModelIndex(AlgoliaIndex):\n    fields = ('name', 'date')\n    geo_field = 'location'\n    settings = {'searchableAttributes': ['name']}\n    index_name = 'my_index'\n\n```\n\n# Commands\n\n## Commands\n\n-   `python manage.py algolia_reindex`: reindex all the registered models. This command will first send all the record to a temporary index and then moves it.\n    -   you can pass `--index` parameter to reindex a given index\n-   `python manage.py algolia_applysettings`: (re)apply the index settings.\n-   `python manage.py algolia_clearindex`: clear the index\n\n# Search\n\n## Search\n\nWe recommend using our [InstantSearch.js library](https://www.algolia.com/doc/guides/building-search-ui/what-is-instantsearch/js/) to build your search\ninterface and perform search queries directly from the end-user browser without going through your server.\n\nHowever, if you want to search from your backend you can use the `raw_search(YourModel, 'yourQuery', request_options)` method.\nIt retrieves the raw JSON answer from the API, and accepts in `request_options` any\n[search parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/).\n\n```python\nfrom algoliasearch_django import raw_search\n\nrequest_options = { \"hitsPerPage\": 5 }\nresponse = raw_search(Contact, \"jim\", request_options)\n```\n\n# Geo-Search\n\n## Geo-Search\n\nUse the `geo_field` attribute to localize your record. `geo_field` should be a callable that returns a tuple (latitude, longitude).\n\n```python\nclass Contact(models.model):\n    name = models.CharField(max_length=20)\n    lat = models.FloatField()\n    lng = models.FloatField()\n\n    def location(self):\n        return (self.lat, self.lng)\n\nclass ContactIndex(AlgoliaIndex):\n    fields = 'name'\n    geo_field = 'location'\n\nalgoliasearch.register(Contact, ContactIndex)\n```\n\n\n\n# Tags\n\n\n\n## Tags\n\nUse the `tags` attributes to add tags to your record. It can be a field or a callable.\n\n```python\nclass ArticleIndex(AlgoliaIndex):\n    tags = 'category'\n```\n\nAt query time, specify `{ tagFilters: 'tagvalue' }` or `{ tagFilters: ['tagvalue1', 'tagvalue2'] }` as search parameters to restrict the result set to specific tags.\n\n\n\n# Options\n\n\n\n## Custom `objectID`\n\nYou can choose which field will be used as the `objectID `. The field should be unique and can\n    be a string or integer. By default, we use the `pk` field of the model.\n\n```python\nclass ArticleIndex(AlgoliaIndex):\n    custom_objectID = 'post_id'\n```\n\n## Custom index name\n\nYou can customize the index name. By default, the index name will be the name of the model class.\n\n```python\nclass ContactIndex(algoliaindex):\n    index_name = 'Enterprise'\n```\n\n## Field Preprocessing and Related objects\n\nIf you want to process a field before indexing it (e.g. capitalizing a `Contact`'s `name`),\nor if you want to index a [related object](https://docs.djangoproject.com/en/1.11/ref/models/relations/)'s\nattribute, you need to define **proxy methods** for these fields.\n\n### Models\n\n```python\nclass Account(models.Model):\n    username = models.CharField(max_length=40)\n    service = models.CharField(max_length=40)\n\nclass Contact(models.Model):\n    name = models.CharField(max_length=40)\n    email = models.EmailField(max_length=60)\n    //...\n    accounts = models.ManyToManyField(Account)\n\n    def account_names(self):\n        return [str(account) for account in self.accounts.all()]\n\n    def account_ids(self):\n        return [account.id for account in self.accounts.all()]\n```\n\n### Index\n\n```python\nfrom algoliasearch_django import AlgoliaIndex\n\nclass ContactIndex(AlgoliaIndex):\n    fields = ('name', 'email', 'company', 'address', 'city', 'county',\n              'state', 'zip_code', 'phone', 'fax', 'web', 'followers', 'account_names', 'account_ids')\n\n    settings = {\n        'searchableAttributes': ['name', 'email', 'company', 'city', 'county', 'account_names',\n        }\n```\n\n- With this configuration, you can search for a `Contact` using its `Account` names\n- You can use the associated `account_ids` at search-time to fetch more data from your\nmodel (you should **only proxy the fields relevant for search** to keep your records' size\nas small as possible)\n\n## Index settings\n\nWe provide many ways to configure your index allowing you to tune your overall index relevancy.\nAll the configuration is explained on [our doc](https://www.algolia.com/doc/api-reference/api-parameters/).\n\n```python\nclass ArticleIndex(AlgoliaIndex):\n    settings = {\n        'searchableAttributes': ['name', 'description', 'url'],\n        'customRanking': ['desc(vote_count)', 'asc(name)']\n    }\n```\n\n## Restrict indexing to a subset of your data\n\nYou can add constraints controlling if a record must be indexed or not. `should_index` should be a\ncallable that returns a boolean.\n\n```python\nclass Contact(models.model):\n    name = models.CharField(max_length=20)\n    age = models.IntegerField()\n\n    def is_adult(self):\n        return (self.age >= 18)\n\nclass ContactIndex(AlgoliaIndex):\n    should_index = 'is_adult'\n```\n\n## Multiple indices per model\n\nIt is possible to have several indices for a single model.\n\n- First, define all your indices that you want for a model:\n\n```python\nfrom django.contrib.algoliasearch import AlgoliaIndex\n\nclass MyModelIndex1(AlgoliaIndex):\n    name = 'MyModelIndex1'\n    ...\n\nclass MyModelIndex2(AlgoliaIndex):\n    name = 'MyModelIndex2'\n    ...\n```\n\n- Then, define a meta model which will aggregate those indices:\n\n```python\nclass MyModelMetaIndex(AlgoliaIndex):\n    def __init__(self, model, client, settings):\n        self.indices = [\n            MyModelIndex1(model, client, settings),\n            MyModelIndex2(model, client, settings),\n        ]\n\n    def raw_search(self, query='', request_options=None):\n        res = {}\n        for index in self.indices:\n            res[index.name] = index.raw_search(query, request_options)\n        return res\n\n    def update_records(self, qs, batch_size=1000, **kwargs):\n        for index in self.indices:\n            index.update_records(qs, batch_size, **kwargs)\n\n    def reindex_all(self, batch_size=1000):\n        for index in self.indices:\n            index.reindex_all(batch_size)\n\n    def set_settings(self):\n        for index in self.indices:\n            index.set_settings()\n\n    def clear_objects(self):\n        for index in self.indices:\n            index.clear_objects()\n\n    def save_record(self, instance, update_fields=None, **kwargs):\n        for index in self.indices:\n            index.save_record(instance, update_fields, **kwargs)\n\n    def delete_record(self, instance):\n        for index in self.indices:\n            index.delete_record(instance)\n```\n\n- Finally, register this `AlgoliaIndex` with your `Model`:\n\n```python\nimport algoliasearch_django as algoliasearch\nalgoliasearch.register(MyModel, MyModelMetaIndex)\n```\n\n## Temporarily disable the auto-indexing\n\nIt is possible to temporarily disable the auto-indexing feature using the `disable_auto_indexing` context decorator:\n\n```python\nfrom algoliasearch_django.decorators import disable_auto_indexing\n\n# Used as a context manager\nwith disable_auto_indexing():\n    MyModel.save()\n\n# Used as a decorator\n@disable_auto_indexing():\nmy_method()\n\n# You can also specifiy for which model you want to disable the auto-indexing\nwith disable_auto_indexing(MyModel):\n    MyModel.save()\n    MyOtherModel.save()\n\n```\n\n# Aggregators\n\nAggregators allow multiple models to be included in a single index.\n\n```python\nimport algoliasearch_django as algoliasearch\nmodels = [...]\nalgoliasearch.register_aggregator(models)\n```\n\nFor more control, `Aggregator` can be subclassed in the same way as `AlgoliaIndex`:\n\n```py\nfrom algoliasearch_django import Aggregator\n\nclass CustomAggregator(Aggregator)\n    index_name = \"MyAggregatorIndex\"\n    ...\n\nmodels = [...]\nalgoliasearch.register_aggregator(models, CustomAggregator)\n```\n\n# Tests\n\n\n\n## Run Tests\n\nTo run the tests, first find your Algolia application id and Admin API key (found on the Credentials page).\n\n```shell\nALGOLIA_APPLICATION_ID={APPLICATION_ID} ALGOLIA_API_KEY={ADMIN_API_KEY} tox\n```\n\n\nTo override settings for some tests, use the [settings method](https://docs.djangoproject.com/en/1.11/topics/testing/tools/#django.test.SimpleTestCase.settings):\n```python\nclass OverrideSettingsTestCase(TestCase):\n    def setUp(self):\n        with self.settings(ALGOLIA={\n            'APPLICATION_ID': 'foo',\n            'API_KEY': 'bar',\n            'AUTO_INDEXING': False\n        }):\n            algolia_engine.reset(settings.ALGOLIA)\n\n    def tearDown(self):\n        algolia_engine.reset(settings.ALGOLIA)\n\n    def test_foo():\n        # ...\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brightnetwork/algoliasearch-django",
    "keywords": "algolia,pyalgolia,search,backend,hosted,cloud,full-text search,faceted search,django",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "brightnetwork-algoliasearch-django",
    "package_url": "https://pypi.org/project/brightnetwork-algoliasearch-django/",
    "platform": null,
    "project_url": "https://pypi.org/project/brightnetwork-algoliasearch-django/",
    "project_urls": {
      "Homepage": "https://github.com/brightnetwork/algoliasearch-django"
    },
    "release_url": "https://pypi.org/project/brightnetwork-algoliasearch-django/3.0.0/",
    "requires_dist": [
      "django (>=3.2)",
      "algoliasearch (<4.0,>=3.0)"
    ],
    "requires_python": "",
    "summary": "Algolia Search integration for Django",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17269881,
  "releases": {
    "1.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8441e1a55b4057f6082ef82325b422f4f4dab52d408186f7e6da0ac40116a7be",
          "md5": "9363b7ca5dfd8b0f8cf46e82b78238e3",
          "sha256": "b74906fe044eed31aa0500f22c2df2b3846fcd899fbac9400f01f7593f7966e6"
        },
        "downloads": -1,
        "filename": "brightnetwork_algoliasearch_django-1.8.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9363b7ca5dfd8b0f8cf46e82b78238e3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21294,
        "upload_time": "2020-07-21T16:28:23",
        "upload_time_iso_8601": "2020-07-21T16:28:23.950285Z",
        "url": "https://files.pythonhosted.org/packages/84/41/e1a55b4057f6082ef82325b422f4f4dab52d408186f7e6da0ac40116a7be/brightnetwork_algoliasearch_django-1.8.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82e26a19cfb7a908cd858ff0b8ab724bcf7f9e095060d56f4c01c1de528c3864",
          "md5": "39a327f3ee45240303292b86adfa4010",
          "sha256": "c4c7413cbacbbfee1b4e5edec1d9558d58e2d190f7f87361ff0d7e911b348155"
        },
        "downloads": -1,
        "filename": "brightnetwork-algoliasearch-django-1.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "39a327f3ee45240303292b86adfa4010",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21551,
        "upload_time": "2020-07-21T16:28:26",
        "upload_time_iso_8601": "2020-07-21T16:28:26.677661Z",
        "url": "https://files.pythonhosted.org/packages/82/e2/6a19cfb7a908cd858ff0b8ab724bcf7f9e095060d56f4c01c1de528c3864/brightnetwork-algoliasearch-django-1.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b9269939f2351ca4791171aed9e4a6ef7e5c6ee7a7e0d06e5ce9e04f9d0b380",
          "md5": "6a1a1738888b2d29c3ca8d917f1e1700",
          "sha256": "a509e91f5fc04b72a5b042a61d2afd07944ec1e393bd79fdbcc8302ec756fe02"
        },
        "downloads": -1,
        "filename": "brightnetwork_algoliasearch_django-1.9.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a1a1738888b2d29c3ca8d917f1e1700",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20823,
        "upload_time": "2020-07-27T14:01:05",
        "upload_time_iso_8601": "2020-07-27T14:01:05.074784Z",
        "url": "https://files.pythonhosted.org/packages/1b/92/69939f2351ca4791171aed9e4a6ef7e5c6ee7a7e0d06e5ce9e04f9d0b380/brightnetwork_algoliasearch_django-1.9.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dab798863289c115e40181f4645f0049e2af19ad6d9954590e567affc3f6b83",
          "md5": "0668876666d3696a672d2c0b7fa555b8",
          "sha256": "8d40565e05b5d86d8bc912ea1f1e959f301dbf1501b6d919acf7ecb54377e0a0"
        },
        "downloads": -1,
        "filename": "brightnetwork-algoliasearch-django-1.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0668876666d3696a672d2c0b7fa555b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21150,
        "upload_time": "2020-07-27T14:01:07",
        "upload_time_iso_8601": "2020-07-27T14:01:07.026780Z",
        "url": "https://files.pythonhosted.org/packages/0d/ab/798863289c115e40181f4645f0049e2af19ad6d9954590e567affc3f6b83/brightnetwork-algoliasearch-django-1.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13b8ca22c5720591230ff7143b5faab254b2441367f0fa9cefa07619ac7688d9",
          "md5": "f155ae0536071dcb0a1eb03898ed616d",
          "sha256": "c7af2ba5fc3243753edfd5ae018376dabca714c73ee3ab27569a6fa8df5f3c99"
        },
        "downloads": -1,
        "filename": "brightnetwork_algoliasearch_django-2.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f155ae0536071dcb0a1eb03898ed616d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20883,
        "upload_time": "2020-07-30T08:32:45",
        "upload_time_iso_8601": "2020-07-30T08:32:45.518999Z",
        "url": "https://files.pythonhosted.org/packages/13/b8/ca22c5720591230ff7143b5faab254b2441367f0fa9cefa07619ac7688d9/brightnetwork_algoliasearch_django-2.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a0f34d9d36614172b255ab4f17deb8a439253d5a3012d5d2e5616bdf6c2071c",
          "md5": "fe93278af4c96c71f08283ac13a1e489",
          "sha256": "d7cf730cdbd144546386105152098460ed17ea43627c30b400f5de697e8441dc"
        },
        "downloads": -1,
        "filename": "brightnetwork-algoliasearch-django-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fe93278af4c96c71f08283ac13a1e489",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21197,
        "upload_time": "2020-07-30T08:32:47",
        "upload_time_iso_8601": "2020-07-30T08:32:47.598800Z",
        "url": "https://files.pythonhosted.org/packages/1a/0f/34d9d36614172b255ab4f17deb8a439253d5a3012d5d2e5616bdf6c2071c/brightnetwork-algoliasearch-django-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cde754ff5cf301b8c658b49b6878fe3b1b22066a0e834eab916a9e78f67bc6f4",
          "md5": "d50b76314bd4dadcf7efb78d940539dd",
          "sha256": "144b577df351e10ec191896e8438546bdef04313f668bfb5278c85ce2339baa3"
        },
        "downloads": -1,
        "filename": "brightnetwork_algoliasearch_django-2.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d50b76314bd4dadcf7efb78d940539dd",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20880,
        "upload_time": "2020-08-04T13:15:55",
        "upload_time_iso_8601": "2020-08-04T13:15:55.970781Z",
        "url": "https://files.pythonhosted.org/packages/cd/e7/54ff5cf301b8c658b49b6878fe3b1b22066a0e834eab916a9e78f67bc6f4/brightnetwork_algoliasearch_django-2.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f3207881b404ce324da380d738b4d808c7637cc7f4b3c198294ed631e2428f0",
          "md5": "2c34e9d79a4d189c335276c210099c7c",
          "sha256": "9f5bd7912f237472969b8da48b99e17fbfe6365c8eb9e58e29a6f5fe5daccd41"
        },
        "downloads": -1,
        "filename": "brightnetwork-algoliasearch-django-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2c34e9d79a4d189c335276c210099c7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21234,
        "upload_time": "2020-08-04T13:15:57",
        "upload_time_iso_8601": "2020-08-04T13:15:57.967208Z",
        "url": "https://files.pythonhosted.org/packages/4f/32/07881b404ce324da380d738b4d808c7637cc7f4b3c198294ed631e2428f0/brightnetwork-algoliasearch-django-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0ed1e6df3fa79d3d25903929a964ae6c5960f442cf418c305d9ee6f41e60511",
          "md5": "c0fac7f13a1b5b7de1d80e2a9414ecc3",
          "sha256": "145d5539a47a9b82ac7706d7e620f95727e103353089fe8e530e23ee3cb661b2"
        },
        "downloads": -1,
        "filename": "brightnetwork_algoliasearch_django-2.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0fac7f13a1b5b7de1d80e2a9414ecc3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20882,
        "upload_time": "2020-08-04T13:16:08",
        "upload_time_iso_8601": "2020-08-04T13:16:08.446763Z",
        "url": "https://files.pythonhosted.org/packages/c0/ed/1e6df3fa79d3d25903929a964ae6c5960f442cf418c305d9ee6f41e60511/brightnetwork_algoliasearch_django-2.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2e33940d53cf5994076aaab360bb0b6ac5441bbbd3c114a46dc5f58c32dce7d",
          "md5": "0e557782857c8e9d63796a96b823762d",
          "sha256": "215ac24b30c540fd5ab58b81c537395cda01c1f1fd4aff1f9772ea125996beed"
        },
        "downloads": -1,
        "filename": "brightnetwork-algoliasearch-django-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0e557782857c8e9d63796a96b823762d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21265,
        "upload_time": "2020-08-04T13:16:10",
        "upload_time_iso_8601": "2020-08-04T13:16:10.646782Z",
        "url": "https://files.pythonhosted.org/packages/f2/e3/3940d53cf5994076aaab360bb0b6ac5441bbbd3c114a46dc5f58c32dce7d/brightnetwork-algoliasearch-django-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e05507a66ca0fe1930dbcc37dbc41f0fe6a4a48d0986a63a1b595b038474b07",
          "md5": "1b05f78663498351df95df9f9504648d",
          "sha256": "02f25aba0e81be9c928d83e34becc8c54e18e62e529bb11bba6892e9aaf0f384"
        },
        "downloads": -1,
        "filename": "brightnetwork_algoliasearch_django-2.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b05f78663498351df95df9f9504648d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20855,
        "upload_time": "2020-09-08T10:40:36",
        "upload_time_iso_8601": "2020-09-08T10:40:36.118936Z",
        "url": "https://files.pythonhosted.org/packages/8e/05/507a66ca0fe1930dbcc37dbc41f0fe6a4a48d0986a63a1b595b038474b07/brightnetwork_algoliasearch_django-2.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83dafc5fbfbffa2403d8ca7e54b094c7350c1955fbbc496fc4869852c42769f0",
          "md5": "0469b460866ecfa5c30799396baa9fb6",
          "sha256": "2d5bbd3194330a8611664eeeb97eb8f3aad3706e25a7493d30b187d21defd7e9"
        },
        "downloads": -1,
        "filename": "brightnetwork-algoliasearch-django-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0469b460866ecfa5c30799396baa9fb6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21286,
        "upload_time": "2020-09-08T10:40:37",
        "upload_time_iso_8601": "2020-09-08T10:40:37.306667Z",
        "url": "https://files.pythonhosted.org/packages/83/da/fc5fbfbffa2403d8ca7e54b094c7350c1955fbbc496fc4869852c42769f0/brightnetwork-algoliasearch-django-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc12d4b97d67ee22b0a2ba4a4aa69449bb640856510790b6fad3084bd83d1c53",
          "md5": "5a5c2d91bb311ab9dd825e17025db8b5",
          "sha256": "f8ca5fc5dd411541a9b13644ff186557495c2e969ef8909b965afa07ddbcc150"
        },
        "downloads": -1,
        "filename": "brightnetwork_algoliasearch_django-2.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a5c2d91bb311ab9dd825e17025db8b5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20855,
        "upload_time": "2021-03-17T10:42:44",
        "upload_time_iso_8601": "2021-03-17T10:42:44.280680Z",
        "url": "https://files.pythonhosted.org/packages/dc/12/d4b97d67ee22b0a2ba4a4aa69449bb640856510790b6fad3084bd83d1c53/brightnetwork_algoliasearch_django-2.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07a8fd9007009e059167fcb23f59ea10610b97b1cf17f5fbe04b879055d62d37",
          "md5": "ed885185f69c3273360f2ff9497c87bf",
          "sha256": "a19f32c02c7a35ce8294c23ff7c487fba412539b05d79492a73bd0e7ad78e662"
        },
        "downloads": -1,
        "filename": "brightnetwork-algoliasearch-django-2.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ed885185f69c3273360f2ff9497c87bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21327,
        "upload_time": "2021-03-17T10:42:45",
        "upload_time_iso_8601": "2021-03-17T10:42:45.348230Z",
        "url": "https://files.pythonhosted.org/packages/07/a8/fd9007009e059167fcb23f59ea10610b97b1cf17f5fbe04b879055d62d37/brightnetwork-algoliasearch-django-2.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdda09d80f6fe36649ec398e171d62f8d25947709e98cb0bdb734ec7299ab609",
          "md5": "a21b3b7f44a0f17b9743687fba3b0d95",
          "sha256": "ae590391e68c7e4d30ca2eff508b61c7330a67248ef30d69e5a8a93e060c5440"
        },
        "downloads": -1,
        "filename": "brightnetwork_algoliasearch_django-2.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a21b3b7f44a0f17b9743687fba3b0d95",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20856,
        "upload_time": "2021-04-13T14:34:37",
        "upload_time_iso_8601": "2021-04-13T14:34:37.099316Z",
        "url": "https://files.pythonhosted.org/packages/cd/da/09d80f6fe36649ec398e171d62f8d25947709e98cb0bdb734ec7299ab609/brightnetwork_algoliasearch_django-2.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ec27a860a0d113faeaefb949af27c5c7e0c434186c8697e3e4d2612f29b4852",
          "md5": "0e08aac3f14358e83cb5c378a8cd15d6",
          "sha256": "1e1bd5f7d855e64ea0786661c93aa3cf1d0bede43ce24bd2ab5037148aa7dd0d"
        },
        "downloads": -1,
        "filename": "brightnetwork-algoliasearch-django-2.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0e08aac3f14358e83cb5c378a8cd15d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21349,
        "upload_time": "2021-04-13T14:34:38",
        "upload_time_iso_8601": "2021-04-13T14:34:38.518545Z",
        "url": "https://files.pythonhosted.org/packages/6e/c2/7a860a0d113faeaefb949af27c5c7e0c434186c8697e3e4d2612f29b4852/brightnetwork-algoliasearch-django-2.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b9e05089950b34c1af7e3dd5fafe68aa84328dff00efde368a14351c5acc950",
          "md5": "3f0d6a1ca74aefe6dda32dd3d25845da",
          "sha256": "73b153436d57d1e41cf84b1d43c7556fd2e632693759840eca35e7d2d4bea7df"
        },
        "downloads": -1,
        "filename": "brightnetwork_algoliasearch_django-2.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f0d6a1ca74aefe6dda32dd3d25845da",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20867,
        "upload_time": "2022-01-31T14:44:38",
        "upload_time_iso_8601": "2022-01-31T14:44:38.068473Z",
        "url": "https://files.pythonhosted.org/packages/2b/9e/05089950b34c1af7e3dd5fafe68aa84328dff00efde368a14351c5acc950/brightnetwork_algoliasearch_django-2.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cfd9fa46ebc41bd31221e0faedeb8ef6de9174325d7063a266c5bc47e6711b7",
          "md5": "ef3b7e471bb188e344c4a2635f096a1a",
          "sha256": "e7ffb2a468740acf59fffa760a9ea42e4ba23672c80671dec89182fddb9f4c24"
        },
        "downloads": -1,
        "filename": "brightnetwork-algoliasearch-django-2.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ef3b7e471bb188e344c4a2635f096a1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20321,
        "upload_time": "2022-01-31T14:44:39",
        "upload_time_iso_8601": "2022-01-31T14:44:39.774880Z",
        "url": "https://files.pythonhosted.org/packages/3c/fd/9fa46ebc41bd31221e0faedeb8ef6de9174325d7063a266c5bc47e6711b7/brightnetwork-algoliasearch-django-2.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1891fd5eac09f484a01997dcc85e04f50b81685a0fae13e0e86fa7ab57c311bf",
          "md5": "9fdc95dd11645ec9f4303f4d26606e5c",
          "sha256": "36fc82928a4e1530cff635351289d1543cd12bc01c125ba16cc6bbd38bd04255"
        },
        "downloads": -1,
        "filename": "brightnetwork_algoliasearch_django-3.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9fdc95dd11645ec9f4303f4d26606e5c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20852,
        "upload_time": "2023-03-13T11:03:15",
        "upload_time_iso_8601": "2023-03-13T11:03:15.601817Z",
        "url": "https://files.pythonhosted.org/packages/18/91/fd5eac09f484a01997dcc85e04f50b81685a0fae13e0e86fa7ab57c311bf/brightnetwork_algoliasearch_django-3.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d58c2fa61aa1fb221806d14b5f690600449c12086ef1b3baf06b3a672d64946",
          "md5": "60be42d4dd6c27e4693fa2bb2ed6213d",
          "sha256": "e192b6502865d4759d63065f6548cc6ada145e70e6611aba854156e26bfe47bf"
        },
        "downloads": -1,
        "filename": "brightnetwork-algoliasearch-django-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "60be42d4dd6c27e4693fa2bb2ed6213d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25648,
        "upload_time": "2023-03-13T11:03:16",
        "upload_time_iso_8601": "2023-03-13T11:03:16.818078Z",
        "url": "https://files.pythonhosted.org/packages/2d/58/c2fa61aa1fb221806d14b5f690600449c12086ef1b3baf06b3a672d64946/brightnetwork-algoliasearch-django-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1891fd5eac09f484a01997dcc85e04f50b81685a0fae13e0e86fa7ab57c311bf",
        "md5": "9fdc95dd11645ec9f4303f4d26606e5c",
        "sha256": "36fc82928a4e1530cff635351289d1543cd12bc01c125ba16cc6bbd38bd04255"
      },
      "downloads": -1,
      "filename": "brightnetwork_algoliasearch_django-3.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9fdc95dd11645ec9f4303f4d26606e5c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 20852,
      "upload_time": "2023-03-13T11:03:15",
      "upload_time_iso_8601": "2023-03-13T11:03:15.601817Z",
      "url": "https://files.pythonhosted.org/packages/18/91/fd5eac09f484a01997dcc85e04f50b81685a0fae13e0e86fa7ab57c311bf/brightnetwork_algoliasearch_django-3.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d58c2fa61aa1fb221806d14b5f690600449c12086ef1b3baf06b3a672d64946",
        "md5": "60be42d4dd6c27e4693fa2bb2ed6213d",
        "sha256": "e192b6502865d4759d63065f6548cc6ada145e70e6611aba854156e26bfe47bf"
      },
      "downloads": -1,
      "filename": "brightnetwork-algoliasearch-django-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "60be42d4dd6c27e4693fa2bb2ed6213d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25648,
      "upload_time": "2023-03-13T11:03:16",
      "upload_time_iso_8601": "2023-03-13T11:03:16.818078Z",
      "url": "https://files.pythonhosted.org/packages/2d/58/c2fa61aa1fb221806d14b5f690600449c12086ef1b3baf06b3a672d64946/brightnetwork-algoliasearch-django-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}