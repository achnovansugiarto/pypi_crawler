{
  "info": {
    "author": "Telly LLC",
    "author_email": "it@gotelly.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "<div>\n  <img alt=\"Telly logo\" src=\"https://avatars.githubusercontent.com/u/111651524?s=200&v=4\"><br>\n</div>\n\n# Telly\n\n### simple, privacy-friendly usage statistics for your open source software\n\n## What is Telly?\n\n**Telly** makes it easy to collect usage statistics and support telemetry for your open source software. For most\npackages, you can start collecting daily active user counts and feature usage statistics with just one line of code.\n\nCritically, Telly can also help you respect the privacy of your users and comply with privacy regulations. Our data\ncollection infrastructure and reporting dashboard are built with Privacy by Design principles, including features like\nend-to-end encryption and differential privacy. While only you can determine if rules like GDPR or CCPA apply to your\nsituation, Telly can help you collect useful data in a responsible way.\n\n### Why is Telly useful?\n\nBuilding open source software is hard. Whether you're a commercial open source company or just sharing a hobby project,\nit can be nearly impossible to answer questions like:\n\n* How many people are actually using my software on a daily basis?\n* Which features or use cases are most popular?\n* Which versions of my software are still actively used?\n* Is anyone using my package on Ubuntu 12.04, Windows 7, or a Raspberry Pi?\n* Which versions or implementations of Python are my users using?\n* Is my software being installed or used from a private repository outside of PyPI?\n\nTelly is designed to make answering these questions possible with minimal effort and without compromising user privacy.\n\n### Why did we build Telly?\n\nWe've been working on open source projects for more than two decades, including prior commercial open source businesses.\nWe're also active users of open source software.\n\nTelly is the tool we wish we'd had as software developers, built in a way that we'd actually accept as software users.\n\n### How do I use Telly?\n\nIntegrating Telly into your project is simple.\n\n1. Add `telly` to your `requirements.txt`, `setup.py`, or via `poetry add telly`.\n2. Configure your data collection account at https://gotelly.io/start.\n3. Copy the line of code from the web app into your project.\n4. Add a notice to your project's README.md that explains how you're using Telly to improve your project.\n\nFor most packages, the change is just one line of code at the bottom of your instrumented module:\n\n```python\nimport sys; import telly; telly.go(sys.modules[__name__], 'my-project-uuid')\n```\n\nThat's it!  As long as your code executes in an environment where egress traffic to https://telly.sh is allowed, data\nwill automatically be collected and visible in your dashboard based on your project's privacy settings.\n\nIf you want to select specific methods or classes for instrumenting, you can also use the following methods:\n\n* `telly.decorate_all_classes(sys.modules[__name__])` - decorate all classes in the module\n* `telly.decorate_all_methods(sys.modules[__name__])` - decorate all methods in the module\n* `telly.decorate(sys.modules[__name__])` - decorate all classes and methods in the module\n* `@count_decorator` with each method\n\n### What data does Telly collect?\n\nTelly can be configured to collect more or less information. Currently, this information is separated into two groups:\n\n#### Level I\n\n* Python Interpreter (implementation, version, environment)\n* Execution Platform (CPU, RAM, OS)\n* Python Package Environment (packages, versions)\n* Aggregate counts of method calls or class invocations (**no argument values ever**)\n\n#### Level II\n\nBy default, Level II information is always salted and hashed.  Values are never directly visible to any humans, and\nTelly only stores values temporarily during each rolling analytics window. This approach, combined with differential\nprivacy techniques for statistics, allows us to estimate quantities the number of unique users and user behavior while \nreducing the likelihood of disclosing personally identifiable information.\n\nLevel II information currently includes:\n* Salted SHA-256 of username\n* Salted SHA-256 of user home path\n* Salted SHA-256 of machine ID\n* Salted SHA-256 of machine hostname\n\nTwo salting methods are currently available and can be set with the `TELLY_SALT_TYPE` environment variable:\n * `random_uuid4`: RFC 4122 UUID4 (`uuid.uuid4()`) **default** \n * `machine_id`: Machine ID (`uuid.getnode()`)\n\nThe `random_uuid4` salt is calculated once and stored in `~/.telly_salt`.  If that path is not writable, such as in \nhighly-restricted execution environments, Telly falls back on machine ID.  The quality of `uuid.uuid4()` varies \nacross different implementations and versions of Python but is considered to be cryptographically secure\nfor salting purposes.\n\nNote: For internal corporate usage of Telly, Level II information can be logged and made visible in the dashboard \nsubject to contract terms.\n\n### Supported languages and geographies\n\n* Telly doesn't just support Python libraries. It's also compatible with Node via `Telly.js` and support for other\n  languages is on the way.\n* Telly lets you choose where data about your users is stored. We currently support fully-isolated environments in the\n  US and EU.\n\n### Sample notice language\n\nIn most circumstances, when you embed Telly in your project, you'll want to add a notice to your README.md that lets\nyour users\nknow what information Telly is collecting and how you're using it to manage your project.\n\nHere are a few examples of notices that you might start from:\n\n**Example 1**\n\n```\nWe want to make our software more useful and reliable.  In order to do that, we're using Telly, a privacy-friendly\nusage statistics and support tool.  Telly may collect basic information about your Python and OS environment, allowing \nus to understand things like which operating systems and Python versions to support.   In some cases, Telly may also\ncollect SHA-256-hashed representations of information that allows us to estimate our unique number of users.  These \nhashes are only used temporarily to assign a temporary ID for aggregate reporting; no plaintext information is ever\ntransmitted or visible to humans and even hashes are only stored during a temporary, rolling analytics window.  \n\nYou can learn more about Telly's privacy functionality here: https://gotelly.io/.  \n\nTo disable Telly's data collection, you can either:\n * set the TELLY_DISABLE environment variable to a truthy value like Y or 1\n * create a file named .telly_disable in your home directory\n```\n\n**Example 2**\n\n```\nThis software may collect information about you and your use of the software, which is shared with our telemetry \npartner, Telly. You can learn more about how we use this information at our website here: [your privacy notice]\n```\n\n### Verifying telly distributions with sigstore\nWe use sigstore to sign telly distributions.  You can use sigstore to verify the module as follows:\n```shell\n$ pip3 install sigstore\n$ python -m sigstore verify telly.py \n```\n\n\n### How does telly work (and when doesn't it)?\nFor Python, Telly works by introspecting your module, decorating classes and methods, incrementing a global counter, \nand then spawning an async process to send the data to Telly when configured.  Telly works in almost all situations \nwhere Python executes, including in a Jupyter notebook, web app, REPL, script, or a module imported from another \nmodule.  For some patterns where atexit methods are not registered, like multiprocessing, manual decoration may be \nrequired to ensure that data is collected.\n\nTelly can also be configured to report data on a periodic basis for long-running jobs or \"permanently-running\" services\nlike those that frequently occur in data science, machine learning, and web application environments.  These settings\ncan be configured by libraries or through the  `TELLY_TIMER`  and `TELLY_TIMER_INTERVAL_SEC` environment variables. \n\nTelly also generally works in situations where signal stuff happens, like when processes are killed or inside an \nIDE or debugger like pdb, VS Code, or PyCharm.  By default, Telly will attempt to log the exit signal sent and return\nsignal handling to any previous handlers.  If you want Telly to only report on normal atexit, you can set the \n`TELLY_EXIT_SIGNAL_ONLY` environment variable to a truthy value..\n\n\n### I'm a user.  Can I see what Telly is logging?\nAbsolutely! Just set `TELLY_SHOW_ME` to a truthy value like `true` or `1` and Telly will print what it transmits like this:\n```\n$ TELLY_SHOW_ME=1 python3 foo.py\n```\n\n### How can I opt in or out of a single project's telemetry?\n\nYou can opt in or out of a single project's telemetry using the telly CLI methods:\n * Opt in: `python3 -m telly optin [project-uuid]`\n * Opt out: `python3 -m telly optout [project-uuid]`\n\nThese commands edit the `.telly_optin` file in your home directory.  You can always edit it manually or \nlist its contents like this: `$ cat ~/.telly_optin`\n\n### How can I enable or disable Telly completely?\n\nIf you want to disable or enable Telly for all projects, you can use the commands below:\n*  Enable: `python3 -m telly enable`\n * Disable: `python3 -m telly disable`\n\nThese commands create or removes the `.telly_disable` file in your home directory.  You can always\ncreate or delete it manually.\n\n### Want to learn more?\nWant to learn more about using Telly? Do you have an idea for new features? Just want to hear our voice?\n\n* Email us: [contact@gotelly.io](mailto:contact@gotelly.io)\n* Join our [Slack](https://gotelly.io/sign-up)\n* Follow us on [Twitter](https://twitter.com/usetelly)\n\n\n### Platform Compatibility\nWe purposefully designed Telly to be compatible across a very broad range of environments.  Telly uses only standard\nPython system libraries that are available in almost all Python implementations.\n\nWe have tested Telly on the following Python implementations:\n\n#### CPython \n * 2.6\n * 2.7\n * 3.4\n * 3.5\n * 3.6\n * 3.7\n * 3.8\n * 3.9\n * 3.10\n * 3.11.0rc2+\n\n#### PyPy\n* 3.6\n* 3.9\n\nWe have also tested Telly on the following operating systems:\n\n#### Ubuntu\n* Ubuntu 16.04 x86: No issues in execution on default python3 and python2.\n* Ubuntu 18.04 x86: No issues in execution on default python3 and python2.\n* Ubuntu 20.04 x86: No issues in execution on default python3.\n* Ubuntu 22.04 x86: No issues in execution on default python3.\n\n#### Windows\n* Windows 10: No issues executing on python 3.10 or anaconda 3.9.\n\n#### MacOS\n* MacOS Catalina (10.15): No issues executing on system python.\n\n#### Alpine\n* 3.4:  No issues in execution with python3 or python2.\n* 3.16: No issues in execution with python3.\n\n#### AWS Linux\n* AWS Linux 5 x86: No issues executing on default python2 or python3.\n* AWS Linux 4 x86: No issues executing on default python2 or python3.\n\n#### Red Hat Linux\n* Red Hat Linux 8 x86: No issues executing on default python2 or python3.\n* Red Hat Linux 6 x86: No issues executing on default python2.\n\n#### SUSE Linux\n* SUSE Linux 12 x86: No issues executing on default python2 or python3.\n\n### History\n\n##### 0.3.0 (2022-08-19)\n * Initial beta release\n\n##### 0.4.0 (2022-08-20)\n * Allow configuration of output level, including complete silence\n * Allow configuration of zlib compression\n * Add reduced timeout and allow configuration\n * Include API version configuration for future-proofing\n * Allow configuration of default collector region for compliance jurisdiction\n\n##### 0.5.0 (2022-08-28)\n * Added async http method for sending data in background\n * Enabled minified and compressed\n * Added default endpoint for new telly.sh collection infrastructure\n\n##### 0.6.0 (2022-08-30)\n * Better signal handling\n * Additional configurability\n * Ability to track multiple projects simultaneously\n * Initial PyPI release\n\n\n##### 0.7.0 (2022-09-01)\n * Fixing Python 2.6 support\n\n##### 0.8.0 (2022-09-02)\n * Simplifying module setup\n * Added UUID4 (default) and machine ID salt options\n * Added TELLY_SHOW_ME\n\n##### 0.9.0 (2022-09-18)\n * Fixed issues with signal handling (e.g., inside Pycharm or Flask apps)\n * Fixed signal handling registration bug on Windows (or other non-POSIX)\n * Fixed bug with os.fsync on Python <2.7\n * Improved signal handling setup\n * Improved error handling for libraries that don't like inspect.getmembers()\n * Implemented periodic reporting via TELLY_TIMER/TELLY_TIMER_INTERVAL_SEC for long-running jobs or services\n * Fixed duplicate reporting where multiple calls could trigger reporting same stats\n * Added .telly_disable to disable behavior \n\n\n#### 0.9.1 (2022-09-21)\n * Change _INTERVAL to _INTERVAL_SEC for clarity and consistency with JS \n\n#### 0.9.2 (2022-10-02)\n * Initial \"real\" pypi release\n\n#### 0.9.3 (2022-11-10)\n * Adding `python3 -m telly optin|optout|enable|disable` commands and updating readme \n * Switching `go()` to decorating methods only for type-handling safety\n * Updating docs for opt in/out and enable/disable\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/telly-llc/",
    "keywords": "telly,telemetry,statistics,privacy,open source,usage",
    "license": "Apache-2.0",
    "maintainer": "Telly LLC",
    "maintainer_email": "",
    "name": "telly",
    "package_url": "https://pypi.org/project/telly/",
    "platform": null,
    "project_url": "https://pypi.org/project/telly/",
    "project_urls": {
      "Homepage": "https://github.com/telly-llc/"
    },
    "release_url": "https://pypi.org/project/telly/0.9.3/",
    "requires_dist": null,
    "requires_python": ">=2.7",
    "summary": "telly - simple, privacy-friendly usage statistics for your open source software",
    "version": "0.9.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15731599,
  "releases": {
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f39eb4742dde6111a6ddb2d1097b140e19357e20ac741ca9980c56627b24034",
          "md5": "d6681e2c7c47b4ec8ec29843ebe324aa",
          "sha256": "6f6cdeeb021e8c570e62137b44b740f7c972fdd5d1bc3785cdbfb5bd6a74400c"
        },
        "downloads": -1,
        "filename": "telly-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d6681e2c7c47b4ec8ec29843ebe324aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 18275,
        "upload_time": "2022-09-29T23:22:56",
        "upload_time_iso_8601": "2022-09-29T23:22:56.106599Z",
        "url": "https://files.pythonhosted.org/packages/0f/39/eb4742dde6111a6ddb2d1097b140e19357e20ac741ca9980c56627b24034/telly-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58c3937e283cb76b879f6284489ddc1c92f85b5d806200f92a38e5fab317cf25",
          "md5": "db4fc7657154d57a36f14ee7c389855d",
          "sha256": "f7eb1061ffe20f1a98b1fc9c107c0d198e001b33afba6264b5da53b836f09834"
        },
        "downloads": -1,
        "filename": "telly-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "db4fc7657154d57a36f14ee7c389855d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 18408,
        "upload_time": "2022-10-02T19:02:48",
        "upload_time_iso_8601": "2022-10-02T19:02:48.125252Z",
        "url": "https://files.pythonhosted.org/packages/58/c3/937e283cb76b879f6284489ddc1c92f85b5d806200f92a38e5fab317cf25/telly-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a87ba30aea4a2def65af2cb867426aef1f8329e845e378367d8035a11c092765",
          "md5": "dcd7a9ab02a23318c7c7688ff952eb6a",
          "sha256": "603f1597778ee7c87ac611fd500d98f894d608e0a9cd764ff7774faf1657ff9e"
        },
        "downloads": -1,
        "filename": "telly-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "dcd7a9ab02a23318c7c7688ff952eb6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 19469,
        "upload_time": "2022-11-11T02:16:11",
        "upload_time_iso_8601": "2022-11-11T02:16:11.325182Z",
        "url": "https://files.pythonhosted.org/packages/a8/7b/a30aea4a2def65af2cb867426aef1f8329e845e378367d8035a11c092765/telly-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a87ba30aea4a2def65af2cb867426aef1f8329e845e378367d8035a11c092765",
        "md5": "dcd7a9ab02a23318c7c7688ff952eb6a",
        "sha256": "603f1597778ee7c87ac611fd500d98f894d608e0a9cd764ff7774faf1657ff9e"
      },
      "downloads": -1,
      "filename": "telly-0.9.3.tar.gz",
      "has_sig": false,
      "md5_digest": "dcd7a9ab02a23318c7c7688ff952eb6a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 19469,
      "upload_time": "2022-11-11T02:16:11",
      "upload_time_iso_8601": "2022-11-11T02:16:11.325182Z",
      "url": "https://files.pythonhosted.org/packages/a8/7b/a30aea4a2def65af2cb867426aef1f8329e845e378367d8035a11c092765/telly-0.9.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}