{
  "info": {
    "author": "Petrov Anton",
    "author_email": "antonp2@yandex.ru",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![codecov](https://codecov.io/gh/dev-petrov/pytest-lazy-fixtures/branch/master/graph/badge.svg)](https://codecov.io/gh/dev-petrov/pytest-lazy-fixtures)\n[![CI](https://github.com/dev-petrov/pytest-lazy-fixtures/workflows/CI/badge.svg)](https://github.com/dev-petrov/pytest-lazy-fixtures/actions/workflows/ci-test.yml)\n[![PyPI version](https://badge.fury.io/py/pytest-lazy-fixtures.svg)](https://badge.fury.io/py/pytest-lazy-fixtures)\n# pytest-lazy-fixtures\n\nUse your fixtures in `@pytest.mark.parametrize`.\n\nThis project was inspired by [pytest-lazy-fixture](https://github.com/TvoroG/pytest-lazy-fixture).\n\nImprovements that have been made in this project: \n1. You can use fixtures in any data structures \n2. You can access the attributes of fixtures \n3. You can use functions in fixtures\n\n\n# Installation\n```shell\npip install pytest-lazy-fixtures\n```\n\n# Usage\n\nTo use your fixtures inside `@pytest.mark.parametrize` you can use `lf` (`lazy_fixture`).\n\n```python\nimport pytest\nfrom pytest_lazy_fixtures import lf\n\n@pytest.fixture()\ndef one():\n    return 1\n\n@pytest.mark.parametrize('arg1,arg2', [('val1', lf('one'))])\ndef test_func(arg1, arg2):\n    assert arg2 == 1\n```\n\n`lf` can be used with any data structures. For example, in the following example, `lf` is used in the dictionary:\n```python\nimport pytest\nfrom pytest_lazy_fixtures import lf\n\n@pytest.fixture()\ndef one():\n    return 1\n\n@pytest.mark.parametrize('arg1,arg2', [('val1', {\"value\": lf('one')})])\ndef test_func(arg1, arg2):\n    assert arg2 == {\"value\": 1}\n```\n\nYou can also specify getting an attribute through a dot:\n```python\nimport pytest\nfrom pytest_lazy_fixtures import lf\n\nclass Entity:\n    def __init__(self, value):\n        self.value = value\n\n@pytest.fixture()\ndef one():\n    return Entity(1)\n\n@pytest.mark.parametrize('arg1,arg2', [('val1', lf('one.value'))])\ndef test_func(arg1, arg2):\n    assert arg2 == 1\n```\n\nAnd there is some useful wrapper called `lfc` (`lazy_fixture_callable`). It can work with any callable and your fixtures, e.g.\n\n```python\nimport pytest\nfrom pytest_lazy_fixtures import lf\n\nclass Entity:\n    def __init__(self, value):\n        self.value = value\n\n    def __str__(self) -> str:\n        return str(self.value)\n\n    def sum(self, value: int) -> int:\n        return self.value + value\n\n@pytest.fixture()\ndef entity():\n    return Entity(1)\n\n@pytest.fixture()\ndef two():\n    return 2\n\n@pytest.fixture()\ndef three():\n    return 3\n\n@pytest.fixture()\ndef entity_format():\n    def _entity_format(entity: Entity):\n        return {\"value\": entity.value}\n\n    return _entity_format\n\n@pytest.mark.parametrize(\n    \"message\",\n    [\n        lfc(\n            \"There is two lazy fixture args, {} and {}! And one kwarg {field}! And also simple value {simple}\".format,\n            lf(\"entity\"),\n            lf(\"two\"),\n            field=lf(\"three\"),\n            simple=\"value\",\n        ),\n    ],\n)\ndef test_lazy_fixture_callable_with_func(message):\n    assert message == \"There is two lazy fixture args, 1 and 2! And one kwarg 3! And also simple value value\"\n\n\n@pytest.mark.parametrize(\"formatted\", [lfc(\"entity_format\", lf(\"entity\"))])\ndef test_lazy_fixture_callable_with_lf(formatted, entity):\n    assert formatted == {\"value\": entity.value}\n\n\n@pytest.mark.parametrize(\"result\", [lfc(\"entity.sum\", lf(\"two\"))])\ndef test_lazy_fixture_callable_with_attr_lf(result):\n    assert result == 3\n```\n\n# Contributing\nContributions are very welcome. Tests can be run with `pytest`.\n\n# License\nDistributed under the terms of the `MIT` license, `pytest-lazy-fixtures` is free and open source software\n\n# Issues\nIf you encounter any problems, please file an issue along with a detailed description.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dev-petrov/pytest-lazy-fixtures",
    "keywords": "tests,pytest,lazy,fixture",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-lazy-fixtures",
    "package_url": "https://pypi.org/project/pytest-lazy-fixtures/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytest-lazy-fixtures/",
    "project_urls": {
      "Homepage": "https://github.com/dev-petrov/pytest-lazy-fixtures",
      "Repository": "https://github.com/dev-petrov/pytest-lazy-fixtures"
    },
    "release_url": "https://pypi.org/project/pytest-lazy-fixtures/1.0.0/",
    "requires_dist": [
      "pytest (>=7.2.1,<8.0.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Allows you to use fixtures in @pytest.mark.parametrize.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17250254,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee5e9b262e4b7cb897702a1b8f07bd874bab1cf8af1e1ef172b2b45deb97925c",
          "md5": "53fc2e13bb1d2ee3eb47e54675068bc3",
          "sha256": "41069ef5b98162fa42c20e97aacf15271e03ff9588422dae8e2a0b748a466bba"
        },
        "downloads": -1,
        "filename": "pytest_lazy_fixtures-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53fc2e13bb1d2ee3eb47e54675068bc3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 5537,
        "upload_time": "2023-03-11T10:19:17",
        "upload_time_iso_8601": "2023-03-11T10:19:17.387744Z",
        "url": "https://files.pythonhosted.org/packages/ee/5e/9b262e4b7cb897702a1b8f07bd874bab1cf8af1e1ef172b2b45deb97925c/pytest_lazy_fixtures-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67bb886468ad73d95659009511adcad02f3448cd1f2472f97f9788d44b856ca1",
          "md5": "c925ca1a8012a789428216696fe8b0ea",
          "sha256": "357c9f0ca2d80ec4060d3efcd428f4091c2da537101703e5009635271205e5d9"
        },
        "downloads": -1,
        "filename": "pytest_lazy_fixtures-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c925ca1a8012a789428216696fe8b0ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 4120,
        "upload_time": "2023-03-11T10:19:18",
        "upload_time_iso_8601": "2023-03-11T10:19:18.798541Z",
        "url": "https://files.pythonhosted.org/packages/67/bb/886468ad73d95659009511adcad02f3448cd1f2472f97f9788d44b856ca1/pytest_lazy_fixtures-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee5e9b262e4b7cb897702a1b8f07bd874bab1cf8af1e1ef172b2b45deb97925c",
        "md5": "53fc2e13bb1d2ee3eb47e54675068bc3",
        "sha256": "41069ef5b98162fa42c20e97aacf15271e03ff9588422dae8e2a0b748a466bba"
      },
      "downloads": -1,
      "filename": "pytest_lazy_fixtures-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "53fc2e13bb1d2ee3eb47e54675068bc3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 5537,
      "upload_time": "2023-03-11T10:19:17",
      "upload_time_iso_8601": "2023-03-11T10:19:17.387744Z",
      "url": "https://files.pythonhosted.org/packages/ee/5e/9b262e4b7cb897702a1b8f07bd874bab1cf8af1e1ef172b2b45deb97925c/pytest_lazy_fixtures-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67bb886468ad73d95659009511adcad02f3448cd1f2472f97f9788d44b856ca1",
        "md5": "c925ca1a8012a789428216696fe8b0ea",
        "sha256": "357c9f0ca2d80ec4060d3efcd428f4091c2da537101703e5009635271205e5d9"
      },
      "downloads": -1,
      "filename": "pytest_lazy_fixtures-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c925ca1a8012a789428216696fe8b0ea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 4120,
      "upload_time": "2023-03-11T10:19:18",
      "upload_time_iso_8601": "2023-03-11T10:19:18.798541Z",
      "url": "https://files.pythonhosted.org/packages/67/bb/886468ad73d95659009511adcad02f3448cd1f2472f97f9788d44b856ca1/pytest_lazy_fixtures-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}