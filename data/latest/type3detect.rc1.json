{
  "info": {
    "author": "Peijin",
    "author_email": "pjer1316@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Type III Radio Burst Automatic Recognition Algorithm\r\n\r\nThe automatic recognition of the Type III radio burst using Hough Transform.\r\n\r\n## Method\r\n\r\n### Read and preprocess the data\r\n\r\nThe nancay data is in the form of binary, we developed a Matlab data driver to read in the data. And use the code [constback_sub](src/matlab/constback_sub.m) to remove the long-term background.\r\n\r\n### Binarization\r\n\r\nUse several ways to transform the flux intensity data into binary. ([LocalMax(matlab)](src/matlab/get_local_max_map.m)) ([LocalMax(Python)](src/python/detectRadioBurst.py))\r\n\r\n### Recognition\r\n\r\nUse the Hough transform to recognize the time and frequency range of the Type III radio burst ([ProcEvent](src/matlab/proc_event.m))\r\n\r\nUpdate: Python implementation with for LOFAR, (src/python)\r\n\r\n![img](img/LOFAR_20220413_135000_LBA_OUTER.fits.jpg)\r\n\r\n\r\n### Identify the backbone\r\n\r\nThe Active Contour Method for the backbone of the radio burst (**ACBone**)\r\n\r\nTake the result of the Hough transform as a initail position and iteratively move the line to find the backbone position. The demo code : ([ACBone-Matlab](src/matlab/active_contour.m), [ACBone-Python](src/python/ACBone.py))\r\n\r\n![img](img/activecontour.GIF)\r\n\r\nEventually, we can obtain the centerline of a Type III radio burst.\r\n\r\n\r\n## Citation\r\n\r\nMake sure to cite the paper if you use the idea or code in this repo: [A type III radio burst automatic analysis system and statistic results for a half solar cycle with Nan√ßay Decameter Array data](https://www.aanda.org/component/article?access=doi&doi=10.1051/0004-6361/201833260#R16) Peijin Zhang. A&A 2018.10\r\n\r\nbibtex:\r\n```\r\n@article{zhang2018type,\r\n  title={A type III radio burst automatic analysis system and statistic results for a half solar cycle with Nan{\\c{c}}ay Decameter Array data},\r\n  author={Zhang, PJ and Wang, Chuan Bing and Ye, Lin},\r\n  journal={Astronomy \\& Astrophysics},\r\n  volume={618},\r\n  pages={A165},\r\n  year={2018},\r\n  publisher={EDP Sciences}\r\n}\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/peijin94/type3detect/archive/refs/heads/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/peijin94/type3detect",
    "keywords": "LOFAR,Solar,radio",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "type3detect",
    "package_url": "https://pypi.org/project/type3detect/",
    "platform": null,
    "project_url": "https://pypi.org/project/type3detect/",
    "project_urls": {
      "Download": "https://github.com/peijin94/type3detect/archive/refs/heads/master.zip",
      "Homepage": "https://github.com/peijin94/type3detect"
    },
    "release_url": "https://pypi.org/project/type3detect/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "tools to process the lofar solar data",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15496745,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d2f94c7421044a3b80bc53c63dabdde0214e97ae5ee5bf66e866f8ddde6dd3b",
          "md5": "f49e6642bbf3674eb219adff48571d06",
          "sha256": "5d4e8c25c0c9e7c8e90f0ea6014be752b9ce51002df759e4755b3adb0d12b6e4"
        },
        "downloads": -1,
        "filename": "type3detect-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f49e6642bbf3674eb219adff48571d06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6672,
        "upload_time": "2022-10-22T17:14:16",
        "upload_time_iso_8601": "2022-10-22T17:14:16.198626Z",
        "url": "https://files.pythonhosted.org/packages/9d/2f/94c7421044a3b80bc53c63dabdde0214e97ae5ee5bf66e866f8ddde6dd3b/type3detect-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d2f94c7421044a3b80bc53c63dabdde0214e97ae5ee5bf66e866f8ddde6dd3b",
        "md5": "f49e6642bbf3674eb219adff48571d06",
        "sha256": "5d4e8c25c0c9e7c8e90f0ea6014be752b9ce51002df759e4755b3adb0d12b6e4"
      },
      "downloads": -1,
      "filename": "type3detect-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f49e6642bbf3674eb219adff48571d06",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6672,
      "upload_time": "2022-10-22T17:14:16",
      "upload_time_iso_8601": "2022-10-22T17:14:16.198626Z",
      "url": "https://files.pythonhosted.org/packages/9d/2f/94c7421044a3b80bc53c63dabdde0214e97ae5ee5bf66e866f8ddde6dd3b/type3detect-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}