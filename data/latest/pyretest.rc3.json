{
  "info": {
    "author": "Albert Buchard",
    "author_email": "albert.buchard@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Pyretest\n\nLibrary to measure test-retest reliability and to estimate adequate sample size using simulated questionnaire responses.\n\nThe library offers an unweighted and weighted of the pooled Cohen's Kappa. \n\nA sampler is also provided to generate a sample of questionnaire responses.\n\nReferences: \n\n- [Cohen, J. (1960). A coefficient of determination for the case of nominal scales. Educational and Psychological Measurement, 20(1), 37-46.](https://en.wikipedia.org/wiki/Cohen%27s_kappa)\n- [De Vries, H., Elliott, M. N., Kanouse, D. E., & Teleki, S. S. (2008). Using pooled kappa to summarize interrater agreement across many items. Field methods, 20(3), 272-282.](https://www.researchgate.net/publication/249629584_Using_Pooled_Kappa_to_Summarize_Interrater_Agreement_across_Many_Items)\n\n### Installation\n\n```\npip install pyretest\n```\n\n### Usage\n\n#### Computing the pooled Cohen's Kappa\n\nComputing the pooled Cohen's Kappa assuming a reliability of 10%.\n```python\n# Import the libraries\nimport numpy as np\nfrom pyretest import pooled_cohen_kappa, sample_questionnaire, Question\n\n# Define a simple questionnaire with 5 questions, each with 4 answers\nquestions = [\n            Question([\"a\", \"b\", \"c\", \"d\"], np.random.rand(4)),\n            Question([\"a\", \"b\", \"c\", \"d\"], np.random.rand(4)),\n            Question([\"a\", \"b\", \"c\", \"d\"], np.random.rand(4)),\n            Question([\"a\", \"b\", \"c\", \"d\"], np.random.rand(4)),\n        ]\n\n# Sample 1000 questionnaire responses twice (e.g. two raters, or two endpoints)\nsamples_a = np.array(sample_questionnaire(questions, n=1000))\nsamples_b = np.array(sample_questionnaire(questions, n=1000))\n\n# Set the reliability to 10% \n# You can also use the function \n#   make_reliable(samples_a, samples_b, reliability=0.1)\nreliability = 0.1\nn_reliable = int(reliability * samples_a.shape[0])\nsamples_a[:n_reliable] = samples_b[:n_reliable]\n\n# Compute the pooled Cohen's Kappa\nk1 = pooled_cohen_kappa(samples_a, samples_b)\nassert abs(k1-reliability) < 0.01\n```\n\n#### Estimate the sample size using bootstrapping\n\n```python\n# Import the libraries\nimport numpy as np\nfrom pyretest import  Question, bootstrap_sample_size_cohen_kappa\n\nquestions = [\n            Question([\"a\", \"b\", \"c\", \"d\", \"e\"], [1 / 5] * 5),\n            Question([\"a\", \"b\", \"c\", \"d\", \"e\"], [1 / 5] * 5),\n            Question([\"a\", \"b\", \"c\", \"d\", \"e\"], [1 / 5] * 5),\n            Question([\"a\", \"b\", \"c\", \"d\", \"e\"], [1 / 5] * 5),\n        ]\n\n# Define power and type I error rate\nbeta = 0.8\nalpha = 0.05\n\n# Assume a reliability of 10%\nreliability = 0.1\n\n# Define the number of bootstrap iterations\nn_bootstrap = 1000\n\n# Define the range of sample sizes to test\nstart_n = 10\nmax_n = 100\nn_step = 10\n\n# Compute the sample size\nresults = bootstrap_sample_size_cohen_kappa(questions,\n                                            max_n=max_n,\n                                            weight_type=None,\n                                            start_n=start_n,\n                                            n_step=n_step,\n                                            reliability=reliability,\n                                            n_bootstrap=n_bootstrap,\n                                            alpha=alpha,\n                                            beta=beta)\nprint('Sample size:', results.sample_size)\nprint('Intermediate results df:', results.df)\n```\n\n#### Use weighted versions\n\nTo use the weighted versions of the previous functions, you need to provide a `weight_type` argument which can either be `\"linear\"` or `\"quadratic\"`. See [these slides](https://folk.ntnu.no/slyderse/Pres24Jan2014.pdf) for more details.\nYou also need to provide a list of Questions.\n\nFor example:\n```python\n# Assuming code from the previous examples\n\nweight_type = \"linear\"\nk1_weighted = pooled_cohen_kappa(samples_a, samples_b, weight_type=weight_type, questions=questions)\n\nweight_type = \"quadratic\"\nresults = bootstrap_sample_size_cohen_kappa(questions,\n                                            max_n=max_n,\n                                            weight_type=weight_type,\n                                            start_n=start_n,\n                                            n_step=n_step,\n                                            reliability=reliability,\n                                            n_bootstrap=n_bootstrap,\n                                            alpha=alpha,\n                                            beta=beta)\n```\n\n#### Note\nThere is a `seed` parameter in the previous functions which can be used to get reproducible samples. \n\nIf you use `sample_questionnaire` to sample manually, do not pass the seed twice or you will get the same results for the samples. \n\nYou can set the seed yourself, with:\n```python\nimport random \nrandom.seed(seed)\n```\n\n\nOr set it only in the first call to `sample_questionnaire`. \n\n\n### Authors\n\n- Albert Buchard\n\n\n#### MIT License\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/albertbuchard/pyretest",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyretest",
    "package_url": "https://pypi.org/project/pyretest/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyretest/",
    "project_urls": {
      "Homepage": "https://github.com/albertbuchard/pyretest"
    },
    "release_url": "https://pypi.org/project/pyretest/1.3/",
    "requires_dist": [
      "numpy",
      "pandas",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "Library to measure test-retest reliability and to estimate adequate sample size using simulated questionnaire responses.",
    "version": "1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13185234,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfc89dfc278b93d8115ebef40f879d8f2efae4d9d08fb481a3e63a9f10516b13",
          "md5": "86313a4102800cb0ee9d787cbc39d8e9",
          "sha256": "a57988b572f83a418e152e54b087c4e271e268f521b18abafae42f33493d629b"
        },
        "downloads": -1,
        "filename": "pyretest-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86313a4102800cb0ee9d787cbc39d8e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8234,
        "upload_time": "2022-03-11T19:12:59",
        "upload_time_iso_8601": "2022-03-11T19:12:59.738981Z",
        "url": "https://files.pythonhosted.org/packages/bf/c8/9dfc278b93d8115ebef40f879d8f2efae4d9d08fb481a3e63a9f10516b13/pyretest-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06de7f161fe770a8caa28ed945c3ddc88bde480d72e42d6c4ea6d6225fb9d5e4",
          "md5": "009bd886c4338ea3a52034d0df44a593",
          "sha256": "fd316fc5875a83b00b6abd04c4e254da590a418b7743fb1e85d3789a74dd27bb"
        },
        "downloads": -1,
        "filename": "pyretest-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "009bd886c4338ea3a52034d0df44a593",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8328,
        "upload_time": "2022-03-11T19:13:01",
        "upload_time_iso_8601": "2022-03-11T19:13:01.779284Z",
        "url": "https://files.pythonhosted.org/packages/06/de/7f161fe770a8caa28ed945c3ddc88bde480d72e42d6c4ea6d6225fb9d5e4/pyretest-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6df38d04d8380b8a3d605ee284b1df90539b142b4a7cb0bf0960e5b5b5a32a5",
          "md5": "5d2e3f700a62b8afa4dd7ae3449a25e5",
          "sha256": "ddfb0d42e0ba581527fb99ba78469f95c48a3e4d8f5b60877208bceaca9aa436"
        },
        "downloads": -1,
        "filename": "pyretest-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d2e3f700a62b8afa4dd7ae3449a25e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8593,
        "upload_time": "2022-03-14T13:09:26",
        "upload_time_iso_8601": "2022-03-14T13:09:26.638311Z",
        "url": "https://files.pythonhosted.org/packages/a6/df/38d04d8380b8a3d605ee284b1df90539b142b4a7cb0bf0960e5b5b5a32a5/pyretest-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "169b07bec8acccd81ea5be3b7e0025b09848c1e6b38ecce8d4f9fc4fd64d1e0e",
          "md5": "d186805c6a58c6ebfe68432a9e57d6fa",
          "sha256": "f0c9b79f81bc6c70c1ac644422a45a26cf286fdfff4ae4410f650980328476fc"
        },
        "downloads": -1,
        "filename": "pyretest-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d186805c6a58c6ebfe68432a9e57d6fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8559,
        "upload_time": "2022-03-14T13:09:28",
        "upload_time_iso_8601": "2022-03-14T13:09:28.792929Z",
        "url": "https://files.pythonhosted.org/packages/16/9b/07bec8acccd81ea5be3b7e0025b09848c1e6b38ecce8d4f9fc4fd64d1e0e/pyretest-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcf010485b48eaeafbba6341da032605c5cfa38d8d471f25fd3215e1a79bfe21",
          "md5": "e148765eb812439fe42902f1384e2578",
          "sha256": "a9e6e341ca2a86a01614b739f3fa970dfd70fbe3ddeaa0f2d9bf5f44fbda6ba7"
        },
        "downloads": -1,
        "filename": "pyretest-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e148765eb812439fe42902f1384e2578",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8609,
        "upload_time": "2022-03-15T18:18:38",
        "upload_time_iso_8601": "2022-03-15T18:18:38.552649Z",
        "url": "https://files.pythonhosted.org/packages/fc/f0/10485b48eaeafbba6341da032605c5cfa38d8d471f25fd3215e1a79bfe21/pyretest-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f394ac8f9b68e014bf07f393008debe4127ad4940a356843e702cfa4fe766e4a",
          "md5": "1816cdd4a0fa2091802059806b54053f",
          "sha256": "dfa898e15ce661b3d91495fa8e8de81df6a5b119e4e4a97a84920d0822817de8"
        },
        "downloads": -1,
        "filename": "pyretest-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1816cdd4a0fa2091802059806b54053f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8566,
        "upload_time": "2022-03-15T18:18:40",
        "upload_time_iso_8601": "2022-03-15T18:18:40.552814Z",
        "url": "https://files.pythonhosted.org/packages/f3/94/ac8f9b68e014bf07f393008debe4127ad4940a356843e702cfa4fe766e4a/pyretest-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcf010485b48eaeafbba6341da032605c5cfa38d8d471f25fd3215e1a79bfe21",
        "md5": "e148765eb812439fe42902f1384e2578",
        "sha256": "a9e6e341ca2a86a01614b739f3fa970dfd70fbe3ddeaa0f2d9bf5f44fbda6ba7"
      },
      "downloads": -1,
      "filename": "pyretest-1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e148765eb812439fe42902f1384e2578",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8609,
      "upload_time": "2022-03-15T18:18:38",
      "upload_time_iso_8601": "2022-03-15T18:18:38.552649Z",
      "url": "https://files.pythonhosted.org/packages/fc/f0/10485b48eaeafbba6341da032605c5cfa38d8d471f25fd3215e1a79bfe21/pyretest-1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f394ac8f9b68e014bf07f393008debe4127ad4940a356843e702cfa4fe766e4a",
        "md5": "1816cdd4a0fa2091802059806b54053f",
        "sha256": "dfa898e15ce661b3d91495fa8e8de81df6a5b119e4e4a97a84920d0822817de8"
      },
      "downloads": -1,
      "filename": "pyretest-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1816cdd4a0fa2091802059806b54053f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8566,
      "upload_time": "2022-03-15T18:18:40",
      "upload_time_iso_8601": "2022-03-15T18:18:40.552814Z",
      "url": "https://files.pythonhosted.org/packages/f3/94/ac8f9b68e014bf07f393008debe4127ad4940a356843e702cfa4fe766e4a/pyretest-1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}