{
  "info": {
    "author": "Daniel Robbins",
    "author_email": "drobbins@funtoo.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "Funtoo Boxer Container Tools\n============================\n\nAuthor: Daniel Robbins <drobbins@funtoo.org>;\nCopyright 2022, Daniel Robbins, Funtoo Solutions, Inc.\n\nLicense\n~~~~~~~\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License.  You may obtain a copy of the\nLicense at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\nCONDITIONS OF ANY KIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations under the License.\n\nOfficial Location\n~~~~~~~~~~~~~~~~~\n\nThe official location for boxer is at:\n\nhttps://github.com/funtoo/boxer\n\nIssues for boxer can be filed as GitHub issues or at https://bugs.funtoo.org,\nusing an account created at https://auth.funtoo.org/new.\n\nIntroduction\n~~~~~~~~~~~~\n\nThis repository contains Funtoo Linux tools for creation of containers\nand/or virtual machine images from Funtoo stage3 tarballs. This tool\nexists so that Funtoo users don't need to search for a magic script\nscattered somewhere on the Internet to create a container -- instead,\nwe now have an official tool to create any kind of image desired, all\nwith a single tool, and is officially supported, maintained and\ndocumented by the Funtoo Linux project. It is my hope that users of\nthis tool will find it to be convenient and trouble-free to use.\n\nCompatibility\n~~~~~~~~~~~~~\n\nThe 1.0.0 release initially supports the following container formats,\nwith more to be added in future releases:\n\n  1. Docker (20.10.17) images\n  2. Singularity (3.8.7) images\n\nThe resultant containers are designed to be long-running and have an\nofficial Funtoo startup process -- in other words, /sbin/init will\nstart, OpenRC will initialize the system, and thus standard Funtoo\nservices such as mail servers can be set up and started using OpenRC,\nOpenRC supervised processes will work correctly, env-update will\nwork correctly, etc.\n\nIn some cases, it will also be possible to use these containers to\nhave a different entrypoint and bypass the official startup process\nof Funtoo Linux and run a specific executable, but to support full\nFuntoo Linux functionality, we will always strive to offer fully-\nfunctional, long-running Funtoo Linux containers will full OpenRC\nsupport as our primary target.\n\nPrerequisites\n~~~~~~~~~~~~~\n\nFor the container system you wish to make images for, you will need\nto have that container system installed locally and your user account\nwill need permission to use it.\n\nIn addition, you will also need Python 3.7 or higher, and the\nSubPop, Jinja2 and PyYAML python modules installed and available.\nThis can be accomplished by installing funtoo-boxer from PyPi via::\n\n  $ pip install funtoo-boxer\n\nor by installing the ``boxer`` Funtoo package under Funtoo Linux\nas follows::\n\n  $ emerge boxer\n\nDirect-From-Git Option\n~~~~~~~~~~~~~~~~~~~~~~\n\nIf you install all necessary dependencies, it's easily possible to\nrun boxer from a live git repository. This can be done as follows::\n\n  $ git clone https://github.com/funtoo/boxer\n  $ cd boxer\n  $ export PYTHONPATH=$(pwd)\n  $ bin/boxer\n\nWhen run from a git repository, the ``tmp`` directory within the\ngit repository will be used as temporary storage for building\ncontainers. When installed as a package, a directory within\n``/var/tmp`` will be used for this purpose.\n\nStarting from Stage3\n~~~~~~~~~~~~~~~~~~~~\n\nThe ``boxer`` utility is designed to always start from a \"stage3\ntarball\" downloaded from https://build.funtoo.org, or built using\nFuntoo's metro build tool. This stage3 will be finalized by boxer\nto make a functioning container for one of the supported targets.\n\nNow, let's look at the different targets supported by boxer and\nhow to use them.\n\nGenerating Docker Containers\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSet up Docker\n-------------\n\nOn a Funtoo Linux system, you will need to set up Docker and start\nthe ``docker`` service, and add your current user to the ``docker``\ngroup if you would like to be able to run ``boxer`` without being\nroot::\n\n  $ sudo emerge app-emulation/docker\n  $ sudo rc-update add docker default\n  $ sudo rc\n  $ sudo usermod -a -G docker $USER\n  <log out, log back in>\n\nCreate a Docker Container\n-------------------------\n\nIf you are in the ``docker`` group, you will now be able to use\ndocker to build a Funtoo container.\n\nWhen generating a Docker container, the container you generate will\nbe added to the local Docker image repository, and the tag specified\nby the ``--tag`` option will be applied to the image, if provided.\nAdditionally, the ``--push`` option can be used to also instruct\nboxer to push the image to Docker Hub.\n\nHere is an example of using boxer to create a Docker container from\na Funtoo stage3, launching it, and entering it and running commands\ninside it::\n\n  $ boxer docker --tag funtoo/boxer-generic_64:2022-06-16 --stage /var/tmp/stage3-generic_64-next-2022-06-16.tar.xz\n  $ docker run -d --name=foobs funtoo/boxer-generic_64:2022-06-16\n  $ docker exec -it foobs /bin/bash\n  03ec0962bada / # ego sync\n  ...\n\nGenerating Singularity Containers\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSet up Singularity\n------------------\n\nOn a Funtoo Linux system, you will simply need to\n``emerge sys-cluster/singularity``. Singularity is a standalone tool\nso it doesn't require a standalone system daemon running like Docker or LXD.\n\nCreate a Singularity Container\n------------------------------\n\nWhen using boxer to generate a Singularity (\"sif format\") container,\nthe container will by default be written to a file named ``stage3-funtoo.sif``\nin the current working directory. Alternatively, the ``--out <filename>``\noption can be used to specify an alternate location and/or name. Additionally,\nthe ``--force`` option can be used to overwrite the target file if it exists.\n\nWhen creating a Singularity container for non-personal or production\nuse, it is recommended to run boxer as root, which will allow for\npermissions, extended attributes and ACLs to be properly preserved within\nthe resultant container rather than being mapped to the user id of the\ncurrently-running user. We will use this method in the following example,\nbelow::\n\n  $ sudo boxer sif --stage /var/tmp/stage3-generic_64-next-2022-06-16.tar.xz --force\n  $ sudo singularity instance start --boot --writable-tmpfs funtoo-stage3.sif f1\n  $ sudo singularity shell instance://f1\n\nAs noted, this documentation demonstrates the use of long-running containers\nthat properly start ``/sbin/init`` as the first process in the container, and\nstart OpenRC so that a fully-functional Funtoo Linux system is available. It\nis also possible to simply execute a binary within the Funtoo environment\nwithout using instances.\n\nStarting Writable Singularity Funtoo Containers\n...............................................\n\nAlso note the use of the ``--writable-tmpfs`` option, above. This allows\nsingularity (which uses a read-only squashfs filesystem by default) to\nwrite inside the container, which allows things like ``sshd``\nto generate its initial host keys, and other important things for official\nFuntoo Linux booting that expect a writable root filesystem. However, this\ntmpfs option is only really suitable for minimal I/O within the container\nand will be exhausted if you perform any significant I/O such as running\n``ego sync``. If you are planning to use the container for more\nsignificant work, such as the running of ``ego sync`` and ``emerge``,\nyou will likely want to create an overlay filesystem of a suitable size\nto allow these actions to complete successfully without filling up the\ntmpfs overlay we used above. Below, we create an overlay of 4096 MiB\nto support writes within our singularity instance::\n\n  $ singularity overlay create --size 4096 ./overlay.img\n  $ sudo singularity instance start --boot --overlay ./overlay.img funtoo-stage3.sif f2\n  $ sudo singularity shell instance://f2\n  Singularity> ego sync\n\nLaunching a Singularity container using this technique will allow the\ninstance to be used as a fully functional Funtoo Linux system -- for\ndevelopment, or other tasks.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://code.funtoo.org/bitbucket/users/drobbins/repos/funtoo-boxer/browse",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "funtoo-boxer",
    "package_url": "https://pypi.org/project/funtoo-boxer/",
    "platform": null,
    "project_url": "https://pypi.org/project/funtoo-boxer/",
    "project_urls": {
      "Homepage": "https://code.funtoo.org/bitbucket/users/drobbins/repos/funtoo-boxer/browse"
    },
    "release_url": "https://pypi.org/project/funtoo-boxer/1.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Funtoo framework for container generation.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15072304,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62a4513036021638c0b74e424de9d22c500c15a16c44d5bf81159d00a88bf26c",
          "md5": "e4a1e23beca92030caf791c25fdfc190",
          "sha256": "99e3bab9b1d380c839bf19001aa30875c512e4d8c573ab405fb65bb4b2c1892a"
        },
        "downloads": -1,
        "filename": "funtoo-boxer-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e4a1e23beca92030caf791c25fdfc190",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14996,
        "upload_time": "2022-09-09T18:46:45",
        "upload_time_iso_8601": "2022-09-09T18:46:45.695233Z",
        "url": "https://files.pythonhosted.org/packages/62/a4/513036021638c0b74e424de9d22c500c15a16c44d5bf81159d00a88bf26c/funtoo-boxer-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "314aa58bc8769dd2df27b27791484b84ad404616eb29e20c0e4aabb9f7589621",
          "md5": "82fd40f5ee130ef209582a7b87d655ed",
          "sha256": "c101f0f9abae0247a1894d261187add7fb7a826583731d453d764be9da90fda7"
        },
        "downloads": -1,
        "filename": "funtoo-boxer-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "82fd40f5ee130ef209582a7b87d655ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15043,
        "upload_time": "2022-09-11T17:08:35",
        "upload_time_iso_8601": "2022-09-11T17:08:35.715403Z",
        "url": "https://files.pythonhosted.org/packages/31/4a/a58bc8769dd2df27b27791484b84ad404616eb29e20c0e4aabb9f7589621/funtoo-boxer-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1900129a4dc3120e27ac8eb617ad0fe61d0f5f3b65e07930e0cd7287c1626b84",
          "md5": "b4c079f226f1cdb02a6a75c45996e046",
          "sha256": "e6dcbe1ea09beaf2892f2e7f58c355d39a9b4c306757e3faf0c88928b97210a2"
        },
        "downloads": -1,
        "filename": "funtoo-boxer-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b4c079f226f1cdb02a6a75c45996e046",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15054,
        "upload_time": "2022-09-11T17:44:12",
        "upload_time_iso_8601": "2022-09-11T17:44:12.574450Z",
        "url": "https://files.pythonhosted.org/packages/19/00/129a4dc3120e27ac8eb617ad0fe61d0f5f3b65e07930e0cd7287c1626b84/funtoo-boxer-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5154a7ccf2a3a3858e83425528fcfc22bbcc0d243efdf054d823211d36f050b5",
          "md5": "840d087abe12ff40794348252400b1f2",
          "sha256": "b69c6abae900fcf149277dfb37045b9901835bf56756f10694346acf701f7988"
        },
        "downloads": -1,
        "filename": "funtoo-boxer-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "840d087abe12ff40794348252400b1f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14949,
        "upload_time": "2022-09-12T22:02:29",
        "upload_time_iso_8601": "2022-09-12T22:02:29.235147Z",
        "url": "https://files.pythonhosted.org/packages/51/54/a7ccf2a3a3858e83425528fcfc22bbcc0d243efdf054d823211d36f050b5/funtoo-boxer-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5154a7ccf2a3a3858e83425528fcfc22bbcc0d243efdf054d823211d36f050b5",
        "md5": "840d087abe12ff40794348252400b1f2",
        "sha256": "b69c6abae900fcf149277dfb37045b9901835bf56756f10694346acf701f7988"
      },
      "downloads": -1,
      "filename": "funtoo-boxer-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "840d087abe12ff40794348252400b1f2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 14949,
      "upload_time": "2022-09-12T22:02:29",
      "upload_time_iso_8601": "2022-09-12T22:02:29.235147Z",
      "url": "https://files.pythonhosted.org/packages/51/54/a7ccf2a3a3858e83425528fcfc22bbcc0d243efdf054d823211d36f050b5/funtoo-boxer-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}