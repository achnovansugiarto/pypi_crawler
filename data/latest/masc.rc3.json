{
  "info": {
    "author": "Santiago Faci",
    "author_email": "santi@arkabytes.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
    ],
    "description": "# masc\n\n<img align=\"left\" height=\"200px\" width=\"200px\" src=\"https://www.arkabytes.com/img/masc.jpg\">\n\nA malware (web) scanner developed during [CyperCamp](http://www.cybercamp.es) Hackathon 2017\n\n## About\n\n[homepage](https://sfaci.github.io/masc)\n\n[PyPI](https://pypi.python.org/pypi/masc)\n\n## Features\n\nAt the moment, there are some features avaiable for any type of website (custom or CMS) and some of them only available for specific\nplatforms:\n\n* Scan any website for malware using OWASP WebMalwareScanner checksum, YARA rules databases and ClamAV engine (if available)\n* Perform some cleaning operations to improve website protection\n* Monitor the website for changes. Details are written in a log file\n* Scan your site to know if it has been infected with some malware\n* List your local backups\n* Logging support\n* Backup your site\n* Restore website\n* Scan for suspect files and compare with a clean installation (for Wordpress and Drupal)\n* Clean up your site to avoid giving extra information to attackers (only available for Wordpress)\n\n## Installation\n\nTo install _masc_ on your computer, simply type 'pip install masc'\n\n### Requirements\n\nFirst of all, notice that this tool is developed under Linux and Mac OSX environments and, at the moment, it has been tested only under these Operating Systems\n\n* Python >= 3\n* Some Python libraries\n  * python-magic\n  * yara-python\n  * watchdog\n  * termcolor\n  * progress\n  * pyclamd\n\n* ClamAV to integrate with its engine (optional but recommended)\n\n#### Notice for Debian users/developers\n\nIn my notebook, after upgrading to Debian testing, masc became to show an error related to Yara\n\n```bash\nOSError: /usr/lib/libyara.so: cannot open shared object file: No such file or directory\n```\n\nAfter trying a lot of solutions I found in the Internet, I realized that this file was located in my computer in \n_/usr/local/lib/python3.5/dist-packages/usr/lib_, so I created a symbolic link from the previous path to _/usr/lib_\n\n```bash\nsanti@zenbook:$ ln -s /usr/local/lib/python3.5/dist-packages/usr/lib/libyara.so /usr/lib/libyara.so\n```\n\nAnd now, masc and Yara library are running with no problems.\n\n#### Notice for MacOS users/developers\n\n_masc_ is developed under Linux but it has been tested under Mac OSX. Anyway, it should run without problems under any Unix-friendly OS. \n\nIn particular, in Mac OSX I have noticed it's neccesary to install\n[Homebrew](https://brew.sh) to use python-magic library properly as _libmagic_. Check first the previous link to the _brew_ homepage and then\nyou will be able to install as I show below:\n\n```bash\nsanti@zenbook:$ brew install libmagic\n```\n\nAlso, in my computer I had to change the first line of the _masc.py_ script. Python3 is installed in _/usr/local/bin_ and it's not \nallowed to create symlinks from _/usr/bin_ \n\nChange the first line in _masc.py_\n\n```bash\n#!/usr/bin/python3\n```\n\nfor this line\n\n```bash\n#!/usr/local/bin/python3\n```\n\nAnyway, you always can run _masc_ using the Python interpreter instead running the script directly:\n\n```bash\nsanti@zenbook:$ python3 masc.py\n```\n\n## Usage\n\n```bash\n\nmasc 0.3 (http://github.com/sfaci/masc)\nusage: masc.py [-h] [-af FILENAME] [--aw STRING] [-cc] [-c] [-l] [-b] [-m]\n               [-n NAME] [-p PATH] [-r] [-s] [-t {wordpress,drupal,custom}]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -af FILENAME, --add-file FILENAME   \n                        Add a suspect file to the dictionary\n  -aw STRING --add-word STRING     \n                        Add a suspect content to the dictionary\n  -cc, --clean-cache        Clean masc cache (cache and logs files, NO backups)\n  -c, --clean-site          Clean up the site (and apply some extra actions to hide information to attackers)\n  -l, --list-backups        List local backups\n  -b, --make-backup         Create a local backup of the current installation\n  -m, --monitor             Monitor site to detect changes\n  -n NAME, --name NAME      Name assigned to the scanned installation\n  -p PATH, --path PATH      Website installation path\n  -r, --rollback            Restore a local backup\n  -s, --scan                Scan website for malware\n  -t {wordpress,drupal,custom}, --site-type {wordpress,drupal,custom}\n                        which type of web you want to scan:: wordpress,\n                        joomla, drupal or magento\n```\n\nThe actions you can perform over a web installation are:\n\n* -s, --scan (with or without the option --clean-site)\n* -r, --rollback (with its options)\n* -m, --monitor (with its options)\n* -b, --make-backup (with its options)\n* -l, --list-backups\n\nAnd you have to consider that if you want to perform some actions over some kind of web installation, it's mandatory to\nspecify the type (-t or --type) and path (-p or --path).\n\nFor instance, if you have a WordPress installation in /var/www/html and you want to scan it entirely:\n\n```\nsanti@zenbook:$ ./masc.py --scan --site-type wordpress --path /var/www/html\n```\n\nAnd if you want to perform clean up actions (to remove some malware, for instance):\n\n```\nsanti@zenbook:$ ./masc.py --scan --site-type wordpress --path /var/www/html --clean-site\n```\n\n## Tests\n\nThere are two samples of hacked websites in the samples zip file:\n\n * **drupal**: clean Drupal installation with some malware scripts. You can use it to make \n your test during development\n * **wordpress**: clean WodPress installation with some malware to test. There is also some security holes such as\n emtpy directories and some permissions wrong to test the extra features implemented to this kind of CMS\n\nIn addition, there is a repository in the Docker Hub to perform tests [masc-wordpress](https://hub.docker.com/r/sfaci/masc-wordpress/)\n\n## Documentation\n\nYou can find a tutorial about how to use _masc_ at the [wiki](https://github.com/sfaci/masc/wiki)\n\n## How to contribute\n\nIf you want to contribute to this project, take a look at the [wiki](https://github.com/sfaci/masc/wiki). \nThere is a section about [How to contribute to this project](https://github.com/sfaci/masc/wiki/How-to-contribute)\n\n## Thanks\n\nThanks to [OWASP WebMalwareScanner](https://wiki.owasp.org/index.php/OWASP_Web_Malware_Scanner_Project) for some ideas \nand the signatures databases with checksums and YARA\nrules (and how to load it to work with). \n\n## Author\n\nSantiago Faci <santi@arkabytes.com>\n\n## Contributors\n\n * Iago Alonso (@ibLeDy)\n * Israel Saeta (@dukebody)\n * Isaac (@isaacvv)\n * Tekiroz (@Tekiroz)\n * Yagueteiro (@Yagueteiro)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sfaci/masc",
    "keywords": "malware scanner security",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "masc",
    "package_url": "https://pypi.org/project/masc/",
    "platform": "",
    "project_url": "https://pypi.org/project/masc/",
    "project_urls": {
      "Homepage": "https://github.com/sfaci/masc"
    },
    "release_url": "https://pypi.org/project/masc/0.3.1/",
    "requires_dist": [
      "watchdog",
      "yara-python",
      "python-magic",
      "termcolor",
      "pyclamd",
      "progress"
    ],
    "requires_python": "",
    "summary": "A malware web scanner",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8553142,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8782f563d36530585be63de4da9216bd41330e2186eb9d49b70579eedc08022",
          "md5": "af00680e0ab954a6af3faee73c2fe183",
          "sha256": "8537dde78d536f72b0ed131334e4dfd6f6766ca82f08e6f180df41ca82dfd200"
        },
        "downloads": -1,
        "filename": "masc-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "af00680e0ab954a6af3faee73c2fe183",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19599191,
        "upload_time": "2017-12-02T16:23:42",
        "upload_time_iso_8601": "2017-12-02T16:23:42.176704Z",
        "url": "https://files.pythonhosted.org/packages/b8/78/2f563d36530585be63de4da9216bd41330e2186eb9d49b70579eedc08022/masc-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "209c0c08e1776fd57f2a25cce5c768d8c1ca69021b82ff5c09dbb919281d6a6c",
          "md5": "f9368f4974b72642225eb7fb00ce7c85",
          "sha256": "1964cc360d9fbfb11334833ea736227c9d8e44f0dd11b21f6864ca0c0fe1582a"
        },
        "downloads": -1,
        "filename": "masc-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f9368f4974b72642225eb7fb00ce7c85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19602415,
        "upload_time": "2017-12-05T00:02:16",
        "upload_time_iso_8601": "2017-12-05T00:02:16.788913Z",
        "url": "https://files.pythonhosted.org/packages/20/9c/0c08e1776fd57f2a25cce5c768d8c1ca69021b82ff5c09dbb919281d6a6c/masc-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "338c53d4b32b112fe211d498f6873b27c1ed10a6dafabf3f92c8244558e44d93",
          "md5": "b0726825e946d1a494f39ddff130b8b8",
          "sha256": "f140386901f1f5e8e41cc1d1ddc7e0dbe1662d25b47a8e0f4f225e8d6cb68e86"
        },
        "downloads": -1,
        "filename": "masc-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0726825e946d1a494f39ddff130b8b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20781848,
        "upload_time": "2020-11-01T12:20:00",
        "upload_time_iso_8601": "2020-11-01T12:20:00.482743Z",
        "url": "https://files.pythonhosted.org/packages/33/8c/53d4b32b112fe211d498f6873b27c1ed10a6dafabf3f92c8244558e44d93/masc-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e087ef352ab7cb72801217037af185cb7e6ef85104e5d1b6658fba8baa815cf0",
          "md5": "f6a9ccadd00cc6f5b8cca7c62db2c3db",
          "sha256": "0508add2531d99ad3da0353de0215102e0e7c1f186aaca3e6026c07459fcbee5"
        },
        "downloads": -1,
        "filename": "masc-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f6a9ccadd00cc6f5b8cca7c62db2c3db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19502016,
        "upload_time": "2020-11-01T12:20:10",
        "upload_time_iso_8601": "2020-11-01T12:20:10.639930Z",
        "url": "https://files.pythonhosted.org/packages/e0/87/ef352ab7cb72801217037af185cb7e6ef85104e5d1b6658fba8baa815cf0/masc-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "338c53d4b32b112fe211d498f6873b27c1ed10a6dafabf3f92c8244558e44d93",
        "md5": "b0726825e946d1a494f39ddff130b8b8",
        "sha256": "f140386901f1f5e8e41cc1d1ddc7e0dbe1662d25b47a8e0f4f225e8d6cb68e86"
      },
      "downloads": -1,
      "filename": "masc-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b0726825e946d1a494f39ddff130b8b8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20781848,
      "upload_time": "2020-11-01T12:20:00",
      "upload_time_iso_8601": "2020-11-01T12:20:00.482743Z",
      "url": "https://files.pythonhosted.org/packages/33/8c/53d4b32b112fe211d498f6873b27c1ed10a6dafabf3f92c8244558e44d93/masc-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e087ef352ab7cb72801217037af185cb7e6ef85104e5d1b6658fba8baa815cf0",
        "md5": "f6a9ccadd00cc6f5b8cca7c62db2c3db",
        "sha256": "0508add2531d99ad3da0353de0215102e0e7c1f186aaca3e6026c07459fcbee5"
      },
      "downloads": -1,
      "filename": "masc-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f6a9ccadd00cc6f5b8cca7c62db2c3db",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19502016,
      "upload_time": "2020-11-01T12:20:10",
      "upload_time_iso_8601": "2020-11-01T12:20:10.639930Z",
      "url": "https://files.pythonhosted.org/packages/e0/87/ef352ab7cb72801217037af185cb7e6ef85104e5d1b6658fba8baa815cf0/masc-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}