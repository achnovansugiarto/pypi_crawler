{
  "info": {
    "author": "Diddi Oskarsson",
    "author_email": "diddi@diddi.se",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyMock\n_Mocking in Python made easy!_\n\n![PyMock](https://github.com/diddi-/pymock/workflows/PyMock/badge.svg)\n\n# Install\nPyMock can be installed with pip\n```bash\n$ pip install python-mock\n```\n**Note**: PyMock require Python version >= 3.7 to work properly.\n\n# How is it different?\n\nThe typical way of mocking in Python is with `MagicMock` or simply `Mock` (https://docs.python.org/3/library/unittest.mock.html).\n```python\ndef test_something():\n    blog = MagicMock()\n    blog.get_post.return_value = Post()\n    assert isinstance(blog.get_post(1), Post)\n```\nWhile this technically work the syntax can be difficult to remember, provides limited\nsupport for when your return values depend on input arguments and even if you're using a decent IDE\nthere is no [_type hinting_](https://www.python.org/dev/peps/pep-0484/) available to help with code completion.\n\n`PyMock` attempts to solve all of these issues by offering a simple syntax and full control over how\nyour mocks should respond in different situations. The same example as above can be written using\nPyMock:\n```python\ndef test_something():\n    blog = PyMock.create(Blog)\n    PyMock.setup(blog.get_post(1)).returns(Post())\n    assert isinstance(blog.get_post(1), Post)\n```\nThe benefits here are many, for example\n* Just by looking at the first line it's very clear what type of object you intend to mock\n* PyMock support setting different return values for different input arguments. In this case\n  it's `blog.get_post(1)` that should return an instance of `Post`, not `blog.get_post(2)` or any\n  other call to the same method.\n* Because PyMock know exactly what the mocked type is, code completion work just as if it were an\nobject of that type.\n\n![Code completion in action](https://raw.githubusercontent.com/diddi-/pymock/master/docs/img/pymock-type-hinting.png)\n\n# Feedback\nPyMock is an early state of development and is likely to contain bugs. Quite possibly lots of them.\nDon't let that hold you back from trying it out and [_let me know_](https://github.com/diddi-/pymock) how it works for you!\nAll kinds of feedback are valuable, good and bad\n* Bug reports\n* Performance\n* Syntax\n* Overall experience\n* Success stories\n* Anything else you want to share :)\n\n# Examples\nBelow are a few examples on how PyMock can be used.\n```python\nfrom unittest import TestCase\n\nfrom pymock import PyMock, Is\n\n\nclass Post:\n    def get_title(self) -> str:\n        pass\n\n\nclass Blog:\n    def get_post(self, id: int) -> Post:\n        pass\n\n\nclass CustomException(Exception):\n    pass\n\n\nclass TestExamples(TestCase):\n\n    def test_return_object(self):\n        post = Post()\n        mock = PyMock.create(Blog)\n        PyMock.setup(mock.get_post(123)).returns(post)\n\n        self.assertEqual(post, mock.get_post(123))\n\n    def test_setup_multiple_values(self):\n        post1 = Post()\n        post2 = Post()\n        mock = PyMock.create(Blog)\n        PyMock.setup(mock.get_post(1)).returns(post1)\n        PyMock.setup(mock.get_post(2)).returns(post2)\n\n        self.assertEqual(post1, mock.get_post(1))\n        self.assertEqual(post2, mock.get_post(2))\n\n    def test_raise_exception(self):\n        mock = PyMock.create(Blog)\n        PyMock.setup(mock.get_post(1)).raises(CustomException())\n\n        with self.assertRaises(CustomException):\n            mock.get_post(1)\n\n    def test_match_instance_type(self):\n        post = Post()\n        mock = PyMock.create(Blog)\n        PyMock.setup(mock.get_post(Is.type(int))).returns(post)\n\n        self.assertEqual(post, mock.get_post(12345))\n\n    def test_recursive_mocking(self):\n        mock = PyMock.create(Blog)\n        PyMock.setup(mock.get_post(123).get_title()).returns(\"PyMock is awesome\")\n\n        self.assertEqual(\"PyMock is awesome\", mock.get_post(123).get_title())\n\n    def test_mock_function(self):\n        def my_function():\n            pass\n        mock = PyMock.create(my_function)\n        PyMock.setup(mock()).returns(\"my_function return value\")\n\n        self.assertEqual(\"my_function return value\", mock())\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/diddi-/pymock",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-mock",
    "package_url": "https://pypi.org/project/python-mock/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-mock/",
    "project_urls": {
      "Homepage": "https://github.com/diddi-/pymock"
    },
    "release_url": "https://pypi.org/project/python-mock/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Mocking in Python made easy",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8945822,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "818176d0bc69485a0266a3cadb39d3a904443124847b54c02f503c6a93f467a3",
          "md5": "87bc31611a540dbb47190831356e798f",
          "sha256": "03f6643032f30482b3393a3b940da6a70d36cafb2194b45b69d805f44fe4f838"
        },
        "downloads": -1,
        "filename": "python_mock-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "87bc31611a540dbb47190831356e798f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7052,
        "upload_time": "2020-12-17T08:14:01",
        "upload_time_iso_8601": "2020-12-17T08:14:01.950562Z",
        "url": "https://files.pythonhosted.org/packages/81/81/76d0bc69485a0266a3cadb39d3a904443124847b54c02f503c6a93f467a3/python_mock-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8e446fb1304f446b31b508905a7f99fd222675452ddda562287be77c849d9da",
          "md5": "e30c0d57855b13f285556cf160ef7530",
          "sha256": "c9a47fa91504fd104be8c38ed35bb1f32dc5d98897adb3d31521b988e35c2038"
        },
        "downloads": -1,
        "filename": "python-mock-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e30c0d57855b13f285556cf160ef7530",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5135,
        "upload_time": "2020-12-17T08:14:03",
        "upload_time_iso_8601": "2020-12-17T08:14:03.348092Z",
        "url": "https://files.pythonhosted.org/packages/d8/e4/46fb1304f446b31b508905a7f99fd222675452ddda562287be77c849d9da/python-mock-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01f558a4b963c30c56b595b3e74d689a1bc454e263de707d4210d00329b55ee5",
          "md5": "238873a30a9abbbf919ac014f5e9482a",
          "sha256": "fefab19e8af652674400b40ef0f87ed5240d942c66b5daa9a9ecca05762cd973"
        },
        "downloads": -1,
        "filename": "python_mock-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "238873a30a9abbbf919ac014f5e9482a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11419,
        "upload_time": "2020-12-20T12:51:29",
        "upload_time_iso_8601": "2020-12-20T12:51:29.228983Z",
        "url": "https://files.pythonhosted.org/packages/01/f5/58a4b963c30c56b595b3e74d689a1bc454e263de707d4210d00329b55ee5/python_mock-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41251755d388fdc86fbab75b6d00d4f01f2992a8c653695c223839a4b03ba722",
          "md5": "0fec0cf54d4055bd13f28cd34d0ad9e4",
          "sha256": "fd3ac877545d4f1e6937d42e6c1c6284e14434b11aaab7c3960892950b0161fc"
        },
        "downloads": -1,
        "filename": "python-mock-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0fec0cf54d4055bd13f28cd34d0ad9e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8334,
        "upload_time": "2020-12-20T12:51:30",
        "upload_time_iso_8601": "2020-12-20T12:51:30.250700Z",
        "url": "https://files.pythonhosted.org/packages/41/25/1755d388fdc86fbab75b6d00d4f01f2992a8c653695c223839a4b03ba722/python-mock-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "01f558a4b963c30c56b595b3e74d689a1bc454e263de707d4210d00329b55ee5",
        "md5": "238873a30a9abbbf919ac014f5e9482a",
        "sha256": "fefab19e8af652674400b40ef0f87ed5240d942c66b5daa9a9ecca05762cd973"
      },
      "downloads": -1,
      "filename": "python_mock-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "238873a30a9abbbf919ac014f5e9482a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11419,
      "upload_time": "2020-12-20T12:51:29",
      "upload_time_iso_8601": "2020-12-20T12:51:29.228983Z",
      "url": "https://files.pythonhosted.org/packages/01/f5/58a4b963c30c56b595b3e74d689a1bc454e263de707d4210d00329b55ee5/python_mock-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41251755d388fdc86fbab75b6d00d4f01f2992a8c653695c223839a4b03ba722",
        "md5": "0fec0cf54d4055bd13f28cd34d0ad9e4",
        "sha256": "fd3ac877545d4f1e6937d42e6c1c6284e14434b11aaab7c3960892950b0161fc"
      },
      "downloads": -1,
      "filename": "python-mock-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "0fec0cf54d4055bd13f28cd34d0ad9e4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 8334,
      "upload_time": "2020-12-20T12:51:30",
      "upload_time_iso_8601": "2020-12-20T12:51:30.250700Z",
      "url": "https://files.pythonhosted.org/packages/41/25/1755d388fdc86fbab75b6d00d4f01f2992a8c653695c223839a4b03ba722/python-mock-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}