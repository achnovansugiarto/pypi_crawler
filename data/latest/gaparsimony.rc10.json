{
  "info": {
    "author": "Millán Santamaría",
    "author_email": "GAparsimony@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# GAparsimony\n\n[![PyPI version](https://badge.fury.io/py/GAparsimony.svg)](https://badge.fury.io/py/GAparsimony)\n[![Documentation Status](https://readthedocs.org/projects/gaparsimony/badge/?version=latest)](https://gaparsimony.readthedocs.io/en/latest/?badge=latest)\n\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=GAparsimony&metric=alert_status)](https://sonarcloud.io/dashboard?id=GAparsimony)\n[![Bugs](https://sonarcloud.io/api/project_badges/measure?project=GAparsimony&metric=bugs)](https://sonarcloud.io/dashboard?id=GAparsimony)\n[![Code Smells](https://sonarcloud.io/api/project_badges/measure?project=GAparsimony&metric=code_smells)](https://sonarcloud.io/dashboard?id=GAparsimony)\n\n\nGAparsimony\n===========\n\n[Documentation](https://gaparsimony.readthedocs.io/en/latest/index.html)\n\nGAparsimony for Python is a package for searching with genetic algorithms (GA) \naccurate parsimonious models by combining feature selection (FS), model\nhyperparameter optimization (HO), and parsimonious model selection\n(PMS). It has R implementation [R GAparsimony](https://github.com/jpison/GAparsimony)\n\nPMS is based on separate cost and complexity evaluations. The best\nindividuals are initially sorted by an error fitness function, and\nafterwards, models with similar costs are rearranged according to model\ncomplexity measurement so as to foster models of lesser complexity. The\nalgorithm can be run sequentially or in parallel.\n\n\nInstallation\n------------\nInstall these packages, [pip](https://pypi.org/project/GAparsimony/):\n``` {.bash}\npip install GAparsimony\n```\nTo install the current development version, you need to clone the repository and run :\n``` {.bash}\npython -m pip install << path to cloned repository >>\n```\n\nHow to use this package\n-----------------------\n\n### Example 1: Classification\n\nThis example shows how to search, for the *Sonar* database, a parsimony\nSVM classificator with **GAparsimony** package.\n\nIn the next step, a fitness function is created using getFitness. This function return a fitness function for the `SVC` model, the `cohen_kappa_score` metric and the predefined `svm` complexity function for SVC models. We set regression to `False` beacause is classification example.\n\nA SVM model is trained with these parameters and the selected input\nfeatures. Finally, *fitness()* returns a vector with three values:\nthe *kappa* statistic obtained with the mean of 10 runs of a 10-fold\ncross-validation process, the *kappa* measured with the test database to\ncheck the model generalization capability, and the model complexity. And the trained model.\n\nThe GA-PARSIMONY process begins defining the range of the SVM parameters\nand their names. Also, *rerank\\_error* can be tuned with different\n*ga\\_parsimony* runs to improve the **model generalization capability**.\nIn this example, *rerank\\_error* has been fixed to 0.001 but other\nvalues could improve the trade-off between model complexity and model\naccuracy. For example, with *rerank\\_error=0.01*, we can be interested \nin obtaining models with a smaller number of inputs with a *gamma* rounded\nto two decimals.\n\n``` {.Python}\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import cohen_kappa_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.datasets import load_wine\n\nfrom GAparsimony import GAparsimony, Population, getFitness\nfrom GAparsimony.util import svm_complexity\n\nwine = load_wine()\nX, y = wine.data, wine.target \nX = StandardScaler().fit_transform(X)\n\n\nrerank_error = 0.001\nparams = {\"C\":{\"range\": (00.0001, 99.9999), \"type\": Population.FLOAT}, \n            \"gamma\":{\"range\": (0.00001,0.99999), \"type\": Population.FLOAT}, \n            \"kernel\": {\"value\": \"poly\", \"type\": Population.CONSTANT}}\n\n\nfitness = getFitness(SVC, cohen_kappa_score, svm_complexity, minimize=False, test_size=0.2, random_state=42, n_jobs=-1)\n\n\nGAparsimony_model = GAparsimony(fitness=fitness,\n                                  params=params,\n                                  features=wine.feature_names,\n                                  keep_history = True,\n                                  rerank_error = rerank_error,\n                                  popSize = 40,\n                                  maxiter = 50, early_stop=10,\n                                  feat_thres=0.90, # Perc selected features in first generation\n                                  feat_mut_thres=0.10, # Prob of a feature to be one in mutation\n                                  seed_ini = 1234)\n```\n\nWith small databases, it is highly recommended to execute\n**GAparsimony** with different seeds in order to find\nthe most important input features and model parameters.\n\nIn this example, one GA optimization is presented with a training database \ncomposed of 60 input features and 167 instances, and a test database with only 41 instances.\nHence, a robust validation metric is necessary. Thus, a repeated cross-validation is performed.\n\nStarts the GA optimizaton process with 40 individuals per generation and\na maximum number of 5 iterations with an early stopping when\nvalidation measure does not increase significantly in 3 generations.\nParallel is activated. In addition, history of each iteration is saved\nin order to use *plot* and *parsimony\\_importance* methods.\n\n``` {.python}\nGAparsimony_model.fit(X, y)\n```\n```\n#output\n\nGA-PARSIMONY | iter = 0\n  MeanVal = 0.8797661  |  ValBest = 0.9410622  |  TstBest = 0.9574468  |ComplexBest = 10000000045.0| Time(min) = 0.1504835  \n\nGA-PARSIMONY | iter = 1\n  MeanVal = 0.9049894  |  ValBest = 0.9456775  |     TstBest = 1.0     |ComplexBest = 11000000044.0| Time(min) = 0.0590165  \n\nGA-PARSIMONY | iter = 2\n  MeanVal = 0.9189347  |  ValBest = 0.9456775  |     TstBest = 1.0     |ComplexBest = 11000000044.0| Time(min) = 0.0520666  \n\nGA-PARSIMONY | iter = 3\n  MeanVal = 0.9270711  |   ValBest = 0.952701  |  TstBest = 0.9568345  |ComplexBest = 10000000043.0| Time(min) = 0.0494999\n\n...\n\nGA-PARSIMONY | iter = 28\n  MeanVal = 0.9370426  |  ValBest = 0.9840488  |  TstBest = 0.9574468  |ComplexBest = 9000000052.0| Time(min) = 0.0497332  \n\nGA-PARSIMONY | iter = 29\n  MeanVal = 0.9363377  |  ValBest = 0.9840488  |  TstBest = 0.9574468  |ComplexBest = 9000000052.0| Time(min) = 0.0467499  \n\nGA-PARSIMONY | iter = 30\n  MeanVal = 0.9204895  |  ValBest = 0.9840488  |  TstBest = 0.9574468  |ComplexBest = 9000000052.0| Time(min) = 0.0500166  \n\nGA-PARSIMONY | iter = 31\n  MeanVal = 0.9466802  |  ValBest = 0.9840488  |  TstBest = 0.9574468  |ComplexBest = 9000000052.0| Time(min) = 0.0481334\n```\n\nsummary() shows the GA initial settings and two solutions: the solution with the best validation score in the whole GA optimization process, and finally, the best parsimonious individual at the last generation.\n\n``` {.python}\nGAparsimony_model.summary()\n```\n``` \n+------------------------------------+\n|             GA-PARSIMONY           |\n+------------------------------------+\n\nGA-PARSIMONY settings:\n Number of Parameters      = 2\n Number of Features        = 13\n Population size           = 40\n Maximum of generations    = 50\n Number of early-stop gen. = 10\n Elitism                   = 8\n Crossover probability     = 0.8\n Mutation probability      = 0.1\n Max diff(error) to ReRank = 0.001\n Perc. of 1s in first popu.= 0.9\n Prob. to be 1 in mutation = 0.1\n\n Search domain =\n                 C    gamma  alcohol  malic_acid  ash  alcalinity_of_ash  \\\nMin_param   0.0001  0.00001      0.0         0.0  0.0                0.0\nMax_param  99.9999  0.99999      1.0         1.0  1.0                1.0\n\n           magnesium  total_phenols  flavanoids  nonflavanoid_phenols  \\\nMin_param        0.0            0.0         0.0                   0.0\nMax_param        1.0            1.0         1.0                   1.0\n\n           proanthocyanins  color_intensity  hue  \\\nMin_param              0.0              0.0  0.0\nMax_param              1.0              1.0  1.0\n\n           od280/od315_of_diluted_wines  proline\nMin_param                           0.0      0.0\nMax_param                           1.0      1.0\n\n\nGA-PARSIMONY results:\n Iterations                = 32\n Best validation score = 0.9840488232315704\n\n\nSolution with the best validation score in the whole GA process =\n\n  fitnessVal fitnessTst complexity         C     gamma alcohol malic_acid ash  \\\n0   0.984049   0.957447      9e+09  0.527497  0.225906       1          1   1\n\n  alcalinity_of_ash magnesium total_phenols flavanoids nonflavanoid_phenols  \\\n0                 1         0             0          1                    0\n\n  proanthocyanins color_intensity hue od280/od315_of_diluted_wines proline\n0               1               0   1                            1       1\n\n\nResults of the best individual at the last generation =\n\n Best indiv's validat.cost = 0.9840488232315704\n Best indiv's testing cost = 0.9574468085106383\n Best indiv's complexity   = 9000000052.0\n Elapsed time in minutes   = 1.705049173037211\n\n\nBEST SOLUTION =\n\n  fitnessVal fitnessTst complexity         C     gamma alcohol malic_acid ash  \\\n0   0.984049   0.957447      9e+09  0.527497  0.225906       1          1   1\n\n  alcalinity_of_ash magnesium total_phenols flavanoids nonflavanoid_phenols  \\\n0                 1         0             0          1                    0\n\n  proanthocyanins color_intensity hue od280/od315_of_diluted_wines proline\n0               1               0   1                            1       1\n```\n\nPlot GA evolution.\n\n``` {.python}\nGAparsimony_model.plot()\n```\n![GA-PARSIMONY Evolution](https://raw.githubusercontent.com/misantam/GAparsimony/main/docs/img/classification_readme.png)\n\nGA-PARSIMONY evolution\n\nShow percentage of appearance for each feature in elitists\n\n``` {.python}\n# Percentage of appearance for each feature in elitists\nGAparsimony_model.importance()\n```\n```\n+--------------------------------------------+\n|                  GA-PARSIMONY              |\n+--------------------------------------------+\n\nPercentage of appearance of each feature in elitists:\n\n  alcohol  ash proline flavanoids alcalinity_of_ash malic_acid  \\\n0     100  100     100        100           99.5968    98.7903\n\n  od280/od315_of_diluted_wines proanthocyanins      hue nonflavanoid_phenols  \\\n0                      98.3871         92.7419  86.6935               28.629\n\n  color_intensity total_phenols magnesium\n0         22.1774       2.41935   2.01613\n```\n\n### Example 2: Regression\n\nThis example shows how to search, for the *Boston* database, a parsimonious\nANN model for regression and with **GAparsimony** package.\n\nIn the next step, a fitness function is created using getFitness. This function return a fitness function for the `Lasso` model, the `mean_squared_error`(RMSE) metric and the predefined `linearModels` complexity function for SVC models. We set regression to `True` beacause is classification example.\n\nA Lasso model is trained with these parameters and the selected input\nfeatures. Finally, *fitness()* returns a vector with three negatives values:\nthe *RMSE* statistic obtained with the mean of 10 runs of a 10-fold\ncross-validation process, the *RMSE* measured with the test database to\ncheck the model generalization capability, and the model complexity. And the trained model.\n\nThe GA-PARSIMONY process begins defining the range of the SVM parameters\nand their names. Also, *rerank\\_error* can be tuned with different\n*ga\\_parsimony* runs to improve the **model generalization capability**.\nIn this example, *rerank\\_error* has been fixed to 0.01 but other\nvalues could improve the trade-off between model complexity and model\naccuracy.\n\nTherefore, PMS considers the most parsimonious model with the lower\nnumber of features. Between two models with the same number of features,\nthe lower sum of the squared network weights will determine the most\nparsimonious model (smaller weights reduce the propagation of disturbances).\n\n\n``` {.python}\nfrom sklearn.linear_model import Lasso\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import mean_squared_error\n\nfrom sklearn.datasets import load_boston\n\nfrom GAparsimony import GAparsimony, Population, getFitness\nfrom GAparsimony.util import linearModels_complexity\n\nboston = load_boston()\nX, y = boston.data, boston.target \nX = StandardScaler().fit_transform(X)\n\n# ga_parsimony can be executed with a different set of 'rerank_error' values\nrerank_error = 0.01\n\nparams = {\"alpha\":{\"range\": (1., 25.9), \"type\": Population.FLOAT}, \n            \"tol\":{\"range\": (0.0001,0.9999), \"type\": Population.FLOAT}}\n\nfitness = getFitness(Lasso, mean_squared_error, linearModels_complexity, minimize=True, test_size=0.2, random_state=42, n_jobs=-1)\n\n\nGAparsimony_model = GAparsimony(fitness=fitness,\n                                params = params, \n                                features = boston.feature_names,\n                                keep_history = True,\n                                rerank_error = rerank_error,\n                                popSize = 40,\n                                maxiter = 5, early_stop=3,\n                                feat_thres=0.90, # Perc selected features in first generation\n                                feat_mut_thres=0.10, # Prob of a feature to be one in mutation\n                                seed_ini = 1234)\n```\n``` {.python}\nGAparsimony_model.fit(X, y)\n```\n```\n#output\n\nGA-PARSIMONY | iter = 0\n MeanVal = -79.1715225 | ValBest = -30.3297649 | TstBest = -29.2466835 |ComplexBest = 13000000021.927263| Time(min) = 0.1092269  \n\nGA-PARSIMONY | iter = 1\n MeanVal = -55.1072918 | ValBest = -30.3251321 | TstBest = -29.2267507 |ComplexBest = 12000000022.088743| Time(min) = 0.0523999  \n\nGA-PARSIMONY | iter = 2\n MeanVal = -34.9396425 | ValBest = -30.3166673 | TstBest = -28.8701544 |ComplexBest = 10000000021.774683| Time(min) = 0.0484501  \n\nGA-PARSIMONY | iter = 3\n MeanVal = -38.6590874 |  ValBest = -30.144799 |  TstBest = -29.321512 |ComplexBest = 11000000022.865057| Time(min) = 0.0440666 \n\n...\n\nGA-PARSIMONY | iter = 21\n MeanVal = -40.5599677 | ValBest = -29.6343625 | TstBest = -29.3245345 |ComplexBest = 5000000023.114235| Time(min) = 0.0442333  \n\nGA-PARSIMONY | iter = 22\n MeanVal = -36.0291598 | ValBest = -29.6343625 | TstBest = -29.3245345 |ComplexBest = 5000000023.114235| Time(min) = 0.0433499  \n\nGA-PARSIMONY | iter = 23\n MeanVal = -36.6950374 | ValBest = -29.6343625 | TstBest = -29.3245345 |ComplexBest = 5000000023.114235|   Time(min) = 0.0441   \n\nGA-PARSIMONY | iter = 24\n MeanVal = -37.4263523 | ValBest = -29.6343625 | TstBest = -29.3245345 |ComplexBest = 5000000023.114235| Time(min) = 0.0420333  \n```\n\nsummary() shows the GA initial settings and two solutions: the solution with the best validation score in the whole GA optimization process, and finally, the best parsimonious individual at the last generation.\n\n``` {.python}\nGAparsimony_model.summary()\n```\n``` \n+------------------------------------+\n|             GA-PARSIMONY           |\n+------------------------------------+\n\nGA-PARSIMONY settings:\n Number of Parameters      = 2\n Number of Features        = 13\n Population size           = 40\n Maximum of generations    = 50\n Number of early-stop gen. = 10\n Elitism                   = 8\n Crossover probability     = 0.8\n Mutation probability      = 0.1\n Max diff(error) to ReRank = 0.01\n Perc. of 1s in first popu.= 0.9\n Prob. to be 1 in mutation = 0.1\n\n Search domain =\n           alpha     tol  CRIM   ZN  INDUS  CHAS  NOX   RM  AGE  DIS  RAD  \\\nMin_param    1.0  0.0001   0.0  0.0    0.0   0.0  0.0  0.0  0.0  0.0  0.0\nMax_param   25.9  0.9999   1.0  1.0    1.0   1.0  1.0  1.0  1.0  1.0  1.0\n\n           TAX  PTRATIO    B  LSTAT\nMin_param  0.0      0.0  0.0    0.0\nMax_param  1.0      1.0  1.0    1.0\n\n\nGA-PARSIMONY results:\n Iterations                = 25\n Best validation score = -29.634144915265725\n\n\nSolution with the best validation score in the whole GA process =\n\n  fitnessVal fitnessTst complexity    alpha       tol CRIM ZN INDUS CHAS NOX  \\\n0   -29.6341   -29.3465      6e+09  1.33747  0.523279    0  0     0    1   0\n\n  RM AGE DIS RAD TAX PTRATIO  B LSTAT\n0  1   1   0   0   0       1  1     1\n\n\nResults of the best individual at the last generation =\n\n Best indiv's validat.cost = -29.634362465548378\n Best indiv's testing cost = -29.324534451958808\n Best indiv's complexity   = 5000000023.114235\n Elapsed time in minutes   = 1.167609703540802\n\n\nBEST SOLUTION =\n\n  fitnessVal fitnessTst complexity    alpha       tol CRIM ZN INDUS CHAS NOX  \\\n0   -29.6344   -29.3245      5e+09  1.33756  0.530282    0  0     0    0   0\n\n  RM AGE DIS RAD TAX PTRATIO  B LSTAT\n0  1   1   0   0   0       1  1     1\n```\n\nPlot GA evolution.\n\n``` {.python}\nGAparsimony_model.plot()\n```\n![GA-PARSIMONY Evolution](https://raw.githubusercontent.com/misantam/GAparsimony/main/docs/img/regression_readme.png)\n\nGA-PARSIMONY evolution\n\nShow percentage of appearance for each feature in elitists\n\n``` {.python}\n# Percentage of appearance for each feature in elitists\nGAparsimony_model.importance()\n```\n```\n+--------------------------------------------+\n|                  GA-PARSIMONY              |\n+--------------------------------------------+\n\nPercentage of appearance of each feature in elitists:\n\n  PTRATIO LSTAT   RM    B      AGE     CHAS      NOX   CRIM      ZN      DIS  \\\n0     100   100  100  100  93.2292  48.9583  48.9583  43.75  28.125  26.5625\n\n       RAD    INDUS      TAX\n0  13.5417  13.0208  8.33333\n```\n\n\n\nReferences\n----------\nF.J. Martinez-de-Pison, J. Ferreiro, E. Fraile, A. Pernia-Espinoza, A comparative study of six model complexity \nmetrics to search for parsimonious models with GAparsimony R Package, Neurocomputing,\nVolume 452, 2021, Pages 317-332, ISSN 0925-2312, [https://doi.org/10.1016/j.neucom.2020.02.135](https://doi.org/10.1016/j.neucom.2020.02.135).\n\nMartinez-de-Pison, F.J., Gonzalez-Sendino, R., Aldama, A., Ferreiro-Cabello, J., Fraile-Garcia, E. Hybrid methodology \nbased on Bayesian optimization and GA-PARSIMONY to search for parsimony models by combining hyperparameter optimization \nand feature selection (2019) Neurocomputing, 354, pp. 20-26. [https://doi.org/10.1016/j.neucom.2018.05.136](https://doi.org/10.1016/j.neucom.2018.05.136).\n\nUrraca R., Sodupe-Ortega E., Antonanzas E., Antonanzas-Torres F., Martinez-de-Pison, F.J. (2017). Evaluation of a \nnovel GA-based methodology for model structure selection: The GA-PARSIMONY. Neurocomputing, Online July 2017. [https://doi.org/10.1016/j.neucom.2016.08.154](https://doi.org/10.1016/j.neucom.2016.08.154).\n\nMartinez-De-Pison, F.J., Gonzalez-Sendino, R., Ferreiro, J., Fraile, E., Pernia-Espinoza, A. GAparsimony: An R \npackage for searching parsimonious models by combining hyperparameter optimization and feature selection (2018) Lecture \nNotes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), \n10870 LNAI, pp. 62-73. [https://doi.org/10.1007/978-3-319-92639-1_6](https://doi.org/10.1007/978-3-319-92639-1_6).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/misantam/GAparsimony",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "Millán Santamaría",
    "maintainer_email": "GAparsimony@gmail.com",
    "name": "GAparsimony",
    "package_url": "https://pypi.org/project/GAparsimony/",
    "platform": "",
    "project_url": "https://pypi.org/project/GAparsimony/",
    "project_urls": {
      "Homepage": "https://github.com/misantam/GAparsimony"
    },
    "release_url": "https://pypi.org/project/GAparsimony/0.0.15/",
    "requires_dist": [
      "numpy",
      "pandas",
      "seaborn",
      "matplotlib",
      "sklearn"
    ],
    "requires_python": ">=3.7",
    "summary": "Combines feature selection, model tuning, and parsimonious model selection with GA optimization. GA selection procedure is based on separate cost and complexity evaluations. Therefore, the best individuals are initially sorted by an error fitness function, and afterwards, models with similar costs are rearranged according to modelcomplexity measurement so as to foster models of lesser complexity. The algorithm can be run sequentially or in parallel.",
    "version": "0.0.15",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12314485,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02e32ae95d78d896884e5b1d499de5e7429c8588885a3a0d001338b849fd3760",
          "md5": "64a41a6516392e78835475b2b2128506",
          "sha256": "fa2c8387923f65708ce3e7427c29b1bd6b1eecad6aa4ccb5f0dd204003d0122f"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "64a41a6516392e78835475b2b2128506",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 45870,
        "upload_time": "2021-07-04T13:33:40",
        "upload_time_iso_8601": "2021-07-04T13:33:40.199903Z",
        "url": "https://files.pythonhosted.org/packages/02/e3/2ae95d78d896884e5b1d499de5e7429c8588885a3a0d001338b849fd3760/GAparsimony-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7819b932cbc4b8d79673f72906eda0dd8c716e9be9a2c7edaf76e7e47ee7da1d",
          "md5": "e9556db3a1246c6d791e1cf4e02a0b1a",
          "sha256": "3c758b256ddf83fedaf957947d97649d39f4a520173ca02fc54ca0c49cfacfec"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "e9556db3a1246c6d791e1cf4e02a0b1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44657,
        "upload_time": "2021-07-04T13:33:41",
        "upload_time_iso_8601": "2021-07-04T13:33:41.362251Z",
        "url": "https://files.pythonhosted.org/packages/78/19/b932cbc4b8d79673f72906eda0dd8c716e9be9a2c7edaf76e7e47ee7da1d/GAparsimony-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc4f5710fac9011ba92a2cf3938a9769f98335e8ba4248e55b73f24e2c645e23",
          "md5": "c7c5f290a615436b16753c6561460bb7",
          "sha256": "4509fc33bc28979c04a8b074d02b844bff45b6290d22c6cd5f8e8b76f24e8022"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c7c5f290a615436b16753c6561460bb7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 45694,
        "upload_time": "2021-09-07T08:42:52",
        "upload_time_iso_8601": "2021-09-07T08:42:52.741850Z",
        "url": "https://files.pythonhosted.org/packages/bc/4f/5710fac9011ba92a2cf3938a9769f98335e8ba4248e55b73f24e2c645e23/GAparsimony-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d08407f22ab002ce49b4de39ee9e724296523c633f741e96f08c78ccf8a06d21",
          "md5": "0adbd1200603786e3a0f84c71e142b5f",
          "sha256": "5360685403267912e5701d8b2fbd0c53f6015bde56fa52f7217df7946ad40e27"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "0adbd1200603786e3a0f84c71e142b5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 44550,
        "upload_time": "2021-09-07T08:42:53",
        "upload_time_iso_8601": "2021-09-07T08:42:53.727150Z",
        "url": "https://files.pythonhosted.org/packages/d0/84/07f22ab002ce49b4de39ee9e724296523c633f741e96f08c78ccf8a06d21/GAparsimony-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e473e77811dadc316095f52ead149378f678348a881111aa2bee5a41e2f7d5b4",
          "md5": "5478dbef426888ae3924219a535908cb",
          "sha256": "6ffdae5f62b903fbf23a9f2e38e0f4e859ba8b5d0590874d61d71258b1cd0879"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5478dbef426888ae3924219a535908cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 45907,
        "upload_time": "2021-11-15T11:23:24",
        "upload_time_iso_8601": "2021-11-15T11:23:24.094581Z",
        "url": "https://files.pythonhosted.org/packages/e4/73/e77811dadc316095f52ead149378f678348a881111aa2bee5a41e2f7d5b4/GAparsimony-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c209cc78cbfe8c3adea724f85d4d23fbdae9626dda0c27af441366e2faec53b7",
          "md5": "085b06f1cf69c750bbd7e38b8fd983c7",
          "sha256": "f28f502a108187904ac80e8680c28763902022f8387df38f4262f287f306bad5"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "085b06f1cf69c750bbd7e38b8fd983c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 44725,
        "upload_time": "2021-11-15T11:23:25",
        "upload_time_iso_8601": "2021-11-15T11:23:25.140350Z",
        "url": "https://files.pythonhosted.org/packages/c2/09/cc78cbfe8c3adea724f85d4d23fbdae9626dda0c27af441366e2faec53b7/GAparsimony-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "117085306eb3e31b6f4ddc42faa142a84dec3b1bca8eedec9055a410e28ac674",
          "md5": "0ad50b208afc5cd07853aa801f03fd69",
          "sha256": "706c54757309a40eba30320807fbfb175d4acb628ec6648095570c38c50d5da1"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ad50b208afc5cd07853aa801f03fd69",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 45906,
        "upload_time": "2021-11-15T21:08:50",
        "upload_time_iso_8601": "2021-11-15T21:08:50.181496Z",
        "url": "https://files.pythonhosted.org/packages/11/70/85306eb3e31b6f4ddc42faa142a84dec3b1bca8eedec9055a410e28ac674/GAparsimony-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2105e2a3fb09ded711f7d0c9a69287eb417f83ab2853411caf4aeef04d7e6b74",
          "md5": "2302321ebe42483a6258083905e18508",
          "sha256": "c53c7128fb94d21b708cac4c218381b77d73eb31fb8e76df9b701c1e053b5f8a"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "2302321ebe42483a6258083905e18508",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 44736,
        "upload_time": "2021-11-15T21:08:51",
        "upload_time_iso_8601": "2021-11-15T21:08:51.756124Z",
        "url": "https://files.pythonhosted.org/packages/21/05/e2a3fb09ded711f7d0c9a69287eb417f83ab2853411caf4aeef04d7e6b74/GAparsimony-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22cb8c72ea0a71f36abf2483fc618824a0fe3ef1200cdd48415ae1674f38fbfc",
          "md5": "16941d26f7ab879c989de5c710474964",
          "sha256": "4819986f71fdb39e21a93f2281afb0b68e0d74efefab6369ab5bfa7deb020077"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16941d26f7ab879c989de5c710474964",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 45947,
        "upload_time": "2021-11-23T17:49:41",
        "upload_time_iso_8601": "2021-11-23T17:49:41.114470Z",
        "url": "https://files.pythonhosted.org/packages/22/cb/8c72ea0a71f36abf2483fc618824a0fe3ef1200cdd48415ae1674f38fbfc/GAparsimony-0.0.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00020d30377aeacd96434a48e5b2446d5103d36adbee7918875255ee489382d3",
          "md5": "ccc6b12531beef8536fd16c7cd208fc1",
          "sha256": "2f8c08a77ae10191ddab41ca1fc138a61b5a52ad60d7e18405076dc3543be2f7"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "ccc6b12531beef8536fd16c7cd208fc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 44816,
        "upload_time": "2021-11-23T17:49:42",
        "upload_time_iso_8601": "2021-11-23T17:49:42.936670Z",
        "url": "https://files.pythonhosted.org/packages/00/02/0d30377aeacd96434a48e5b2446d5103d36adbee7918875255ee489382d3/GAparsimony-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb1a5eb171e340ad46b364932d6c862b61eaeda7959c4951be9c24dc2bca7a30",
          "md5": "c5a57d3ee8838918110cb2ba8a388062",
          "sha256": "727d46d943f61d9b98b369c1ab436d786ca9434d2ac098feac1ec9a931df49d3"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c5a57d3ee8838918110cb2ba8a388062",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 46918,
        "upload_time": "2021-12-15T16:19:41",
        "upload_time_iso_8601": "2021-12-15T16:19:41.758512Z",
        "url": "https://files.pythonhosted.org/packages/bb/1a/5eb171e340ad46b364932d6c862b61eaeda7959c4951be9c24dc2bca7a30/GAparsimony-0.0.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b19d57c7084d159e7fc8567149b9573476013f30fa6b002a6bc64f15087d349c",
          "md5": "654a2662db97f25069a8f45de925493c",
          "sha256": "ef6564288a37e156fcf37696a6b3009985e1de5c0f8bfa144d446012d4030d9f"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "654a2662db97f25069a8f45de925493c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 45743,
        "upload_time": "2021-12-15T16:19:42",
        "upload_time_iso_8601": "2021-12-15T16:19:42.798166Z",
        "url": "https://files.pythonhosted.org/packages/b1/9d/57c7084d159e7fc8567149b9573476013f30fa6b002a6bc64f15087d349c/GAparsimony-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0ed05a5c5aa6676e2867e3de8bffe0a17e72d3931f1f0e4c51250979e8c7ba4",
          "md5": "f79e167914e79548d1286e96dcb86947",
          "sha256": "49f937d4a949101fa2a05fd6b5b14d0085cede956fbabd7feb3dee9966bd4bcd"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f79e167914e79548d1286e96dcb86947",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 45688,
        "upload_time": "2021-06-19T11:34:03",
        "upload_time_iso_8601": "2021-06-19T11:34:03.710788Z",
        "url": "https://files.pythonhosted.org/packages/d0/ed/05a5c5aa6676e2867e3de8bffe0a17e72d3931f1f0e4c51250979e8c7ba4/GAparsimony-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90805142702bef068bd224efce1d82073db2ee48d6d4f462f18e1498793dd751",
          "md5": "d8424fe23b00b233b4101caf26bcc097",
          "sha256": "60f50660e5d3a4475b6cd1d6e4c6e5f905837b74ed5dab7c069c2401342fddde"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d8424fe23b00b233b4101caf26bcc097",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44890,
        "upload_time": "2021-06-19T11:34:05",
        "upload_time_iso_8601": "2021-06-19T11:34:05.211211Z",
        "url": "https://files.pythonhosted.org/packages/90/80/5142702bef068bd224efce1d82073db2ee48d6d4f462f18e1498793dd751/GAparsimony-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55db9ab2fb1e9b37b0023ed3c041845721b761e9c2dc57fb811ede9e5896e639",
          "md5": "652f4ae8609e78061905ef7fe879fa6f",
          "sha256": "0e3ebf1e9410cd5753bc928580e6ef8a133f1f08084e3cab625414e32d5a982c"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "652f4ae8609e78061905ef7fe879fa6f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44820,
        "upload_time": "2021-06-22T17:38:37",
        "upload_time_iso_8601": "2021-06-22T17:38:37.576038Z",
        "url": "https://files.pythonhosted.org/packages/55/db/9ab2fb1e9b37b0023ed3c041845721b761e9c2dc57fb811ede9e5896e639/GAparsimony-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "876f72ad2c7983de79ee7a44118adc911adfc38a5812978dac912b93bd05f56d",
          "md5": "eae8f0be67e76d38969ab97e4c9cfc5a",
          "sha256": "860bfef082bb80ee68e86a7bc1851bbcfe8d3d7f81a50e70dd8d779869476584"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "eae8f0be67e76d38969ab97e4c9cfc5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43655,
        "upload_time": "2021-06-22T17:38:38",
        "upload_time_iso_8601": "2021-06-22T17:38:38.649737Z",
        "url": "https://files.pythonhosted.org/packages/87/6f/72ad2c7983de79ee7a44118adc911adfc38a5812978dac912b93bd05f56d/GAparsimony-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad6f2a3052b61820f67d6af26e03695f4efd4c64d18ff7487ac0369d6b78542c",
          "md5": "b30c996c5f72269212a928cacb29d924",
          "sha256": "722e7033df007a872b344e370075011336128c74860acf4079404e29dead014b"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b30c996c5f72269212a928cacb29d924",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44836,
        "upload_time": "2021-06-22T17:49:29",
        "upload_time_iso_8601": "2021-06-22T17:49:29.674532Z",
        "url": "https://files.pythonhosted.org/packages/ad/6f/2a3052b61820f67d6af26e03695f4efd4c64d18ff7487ac0369d6b78542c/GAparsimony-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ab66c346341beec3d58ba13de61828e617e30d3f895fb58716d4a77341cb65c",
          "md5": "5e4fb6914d329f35fe32d4ae48c45fdd",
          "sha256": "a88fb4cfefd5bc5a3457b3fb87578bfe068f1c022bb9524eca310045d4ef22d1"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "5e4fb6914d329f35fe32d4ae48c45fdd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43656,
        "upload_time": "2021-06-22T17:49:31",
        "upload_time_iso_8601": "2021-06-22T17:49:31.180772Z",
        "url": "https://files.pythonhosted.org/packages/6a/b6/6c346341beec3d58ba13de61828e617e30d3f895fb58716d4a77341cb65c/GAparsimony-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f621d9719caaebee92506f09324369f798007fbeb52c6954febc616df0db8fa",
          "md5": "1e5dcee0848939a2b2205499d8d1d1e5",
          "sha256": "b10ec29569bdc587be56368e16674819e1a9cc371548d9c70ba63028ba9295b5"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e5dcee0848939a2b2205499d8d1d1e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44856,
        "upload_time": "2021-06-22T21:20:05",
        "upload_time_iso_8601": "2021-06-22T21:20:05.891207Z",
        "url": "https://files.pythonhosted.org/packages/5f/62/1d9719caaebee92506f09324369f798007fbeb52c6954febc616df0db8fa/GAparsimony-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3aa87f7aedfd1269d423bdd189a67eeef813b19498f16c4c38ee6195ace5b113",
          "md5": "660972346186c38570fa1f5cbf6607a1",
          "sha256": "a54b5f130e115a0335bd65839773706df981c5da6473fa45439d8d789da4677a"
        },
        "downloads": -1,
        "filename": "GAparsimony-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "660972346186c38570fa1f5cbf6607a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43690,
        "upload_time": "2021-06-22T21:20:07",
        "upload_time_iso_8601": "2021-06-22T21:20:07.277549Z",
        "url": "https://files.pythonhosted.org/packages/3a/a8/7f7aedfd1269d423bdd189a67eeef813b19498f16c4c38ee6195ace5b113/GAparsimony-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb1a5eb171e340ad46b364932d6c862b61eaeda7959c4951be9c24dc2bca7a30",
        "md5": "c5a57d3ee8838918110cb2ba8a388062",
        "sha256": "727d46d943f61d9b98b369c1ab436d786ca9434d2ac098feac1ec9a931df49d3"
      },
      "downloads": -1,
      "filename": "GAparsimony-0.0.15-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c5a57d3ee8838918110cb2ba8a388062",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 46918,
      "upload_time": "2021-12-15T16:19:41",
      "upload_time_iso_8601": "2021-12-15T16:19:41.758512Z",
      "url": "https://files.pythonhosted.org/packages/bb/1a/5eb171e340ad46b364932d6c862b61eaeda7959c4951be9c24dc2bca7a30/GAparsimony-0.0.15-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b19d57c7084d159e7fc8567149b9573476013f30fa6b002a6bc64f15087d349c",
        "md5": "654a2662db97f25069a8f45de925493c",
        "sha256": "ef6564288a37e156fcf37696a6b3009985e1de5c0f8bfa144d446012d4030d9f"
      },
      "downloads": -1,
      "filename": "GAparsimony-0.0.15.tar.gz",
      "has_sig": false,
      "md5_digest": "654a2662db97f25069a8f45de925493c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 45743,
      "upload_time": "2021-12-15T16:19:42",
      "upload_time_iso_8601": "2021-12-15T16:19:42.798166Z",
      "url": "https://files.pythonhosted.org/packages/b1/9d/57c7084d159e7fc8567149b9573476013f30fa6b002a6bc64f15087d349c/GAparsimony-0.0.15.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}