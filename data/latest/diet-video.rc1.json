{
  "info": {
    "author": "javier",
    "author_email": "javiale2000@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Video diet\n\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg?label=license)](https://www.gnu.org/licenses/gpl-3.0) [![Last commit](https://img.shields.io/github/last-commit/hiancdtrsnm/video-diet.svg?style=flat)](https://github.com/hiancdtrsnm/video-diet/commits) [![GitHub commit activity](https://img.shields.io/github/commit-activity/m/hiancdtrsnm/video-diet)](https://github.com/hiancdtrsnm/video-diet/commits) [![Github Stars](https://img.shields.io/github/stars/hiancdtrsnm/video-diet?style=flat&logo=github)](https://github.com/hiancdtrsnm/video-diet) [![Github Forks](https://img.shields.io/github/forks/hiancdtrsnm/video-diet?style=flat&logo=github)](https://github.com/hiancdtrsnm/video-diet) [![Github Watchers](https://img.shields.io/github/watchers/hiancdtrsnm/video-diet?style=flat&logo=github)](https://github.com/hiancdtrsnm/video-diet) [![GitHub contributors](https://img.shields.io/github/contributors/hiancdtrsnm/video-diet)](https://github.com/hiancdtrsnm/video-diet/graphs/contributors)\n\nThis project aims to reduce the spaces of your videos and audios encoding it on `hevc`.\n\n## Why video-diet?\nThe answer is easy. I have a lot old-movies/videos and music/audios taking a lot of space in the hard-drive.\nSo I'm always short on disk space, the by accident discover de `hevc` codec. when i need to shrink a video of `3GB`\nto upload it to `Telegram`, the convertion take my 3GB movie and returned a 300 MB with the same quality ðŸ˜±. So I\ndecided that I would convert all my video and audio files , but they are a lot, so I build this tool for it.\n\nMore info about `hevc`:\n\nhttps://en.wikipedia.org/wiki/High_Efficiency_Video_Coding\n\n\n## Installation\n\n<div class=\"termy\">\n\n```console\n$ pip install video-diet\n```\n\n</div>\n\n## FFMPEG\n\nIn order to run the project you must install `ffmpeg`.\n\n### For Linux\nIn any linux machine you can get it from your favorite package manager.\n\nFor arch:\n```console\nsudo pacman -S ffmpeg\n```\n\nFor Debian/Ubuntu:\n```console\nsudo apt-get install ffmpeg\n```\n\n## For Windows\n\nDownload a windows ffmpeg build here https://ffmpeg.org/download.html. Unzip it and change the folder name to `FFmpeg`. Copy the folder into `C:\\` and then add the path `C:\\FFmpeg\\bin` to the enviroment variables of the system. \n\nTo check correct instalation open a new instance of cmd and type:\n```console\nffmpeg --version`.\n```\n\n## Example\n\n### For a file\n\n```bash\nvideo-diet file test.mp4\n```\nThis option conserve the original file\n\n### For a folder\n```bash\nvideo-diet folder ~/Videos\n```\nThis option replaces the original file for the converted files\n\n#### Ignoring files on the folder\n```bash\nvideo-diet folder ~/Videos --ignore-extension .mp4\n```\nThis option ignores all the .mp4 files on ~/Videos\n\n```bash\nvideo-diet folder ~/Videos --ignore-path ~/Videos/subfolder\n```\nThis option ignores all the files on ~/Videos/subfolder\n\n## AV1 Support\n\nTo use AV1 instead of hevc add --codec av1 to the commnads above and that will use libaom-av1 instad of libx265 to encode the files \n\n## Note\n\nThe video conversion can take some time. Depending on the original video properties; the conversion time can be longer than the video.\n\n## For developers\n\n### You must first install *poetry*\n\nPoetry provides a custom installer that will install `poetry` isolated from the rest of your system by vendorizing its dependencies. This is the recommended way of installing `poetry`.\n\n**osx / linux / bashonwindows install instructions**\n\n`curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python`\n\n**windows powershell install instructions**\n\n`(Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python`\n\nThe installer installs the `poetry` tool to Poetry's `bin` directory. On Unix it is located at `$HOME/.poetry/bin` and on Windows at `%USERPROFILE%\\.poetry\\bin`.\n\nThis directory will be in your `$PATH` environment variable, which means you can run them from the shell without further configuration.\n\n### Then you need to configure the environment\n\nInside the project make `poetry install` and after `poetry shell` for start the virtualenv.\n\nFor testing the code run `video-diet`.\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for more details.\n\nGood luck ðŸ˜‰.\n\nProject Structure based on awesome tutorial by @tiangolo at https://typer.tiangolo.com/tutorial/package\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JavierOramas/video-diet",
    "keywords": "",
    "license": "LGPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "diet-video",
    "package_url": "https://pypi.org/project/diet-video/",
    "platform": "",
    "project_url": "https://pypi.org/project/diet-video/",
    "project_urls": {
      "Homepage": "https://github.com/JavierOramas/video-diet",
      "Repository": "https://github.com/JavierOramas/video-diet"
    },
    "release_url": "https://pypi.org/project/diet-video/0.1.14rc0/",
    "requires_dist": [
      "typer[all] (>=0.3.2,<0.4.0)",
      "ffmpeg-python (>=0.2.0,<0.3.0)",
      "filetype (>=1.0.7,<2.0.0)",
      "ffprobe-python (>=1.0.3,<2.0.0)",
      "enlighten (>=1.6.2,<2.0.0)",
      "wexpect (>=4.0.0,<5.0.0); sys_platform == \"win32\" or platform_system == \"Windows\"",
      "pexpect (>=4.8.0,<5.0.0); sys_platform == \"linux\" or platform_system == \"Linux\"",
      "ansicon (>=1.89.0,<2.0.0); sys_platform == \"win32\" or platform_system == \"Windows\""
    ],
    "requires_python": ">=3.6,<4",
    "summary": "",
    "version": "0.1.14rc0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12819699,
  "releases": {
    "0.1.14rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56c78a1e119b6954fe0a4d56e2ddba472f5c810ec3611c925cb030ecbcbadf7a",
          "md5": "11be2fec6cb6f8959244d369664a63e8",
          "sha256": "4ad45e06e7215d785beb51d0c342346c8b57cfaf8df44886d49860617ddb1048"
        },
        "downloads": -1,
        "filename": "diet_video-0.1.14rc0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11be2fec6cb6f8959244d369664a63e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4",
        "size": 20631,
        "upload_time": "2022-02-07T23:26:38",
        "upload_time_iso_8601": "2022-02-07T23:26:38.245901Z",
        "url": "https://files.pythonhosted.org/packages/56/c7/8a1e119b6954fe0a4d56e2ddba472f5c810ec3611c925cb030ecbcbadf7a/diet_video-0.1.14rc0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53d046125c8a5fb17e5aaa4a865a6d98002a834c6d1ba7b3ca95913ac0d1b66b",
          "md5": "34cd64e8cdf5e8a989a5621f92fbd5b1",
          "sha256": "97f33e4e22f48fc2e9801c248fe88c0e109e0fcdfd53374dcbf0dea130db8fed"
        },
        "downloads": -1,
        "filename": "diet_video-0.1.14rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "34cd64e8cdf5e8a989a5621f92fbd5b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 21403,
        "upload_time": "2022-02-07T23:26:41",
        "upload_time_iso_8601": "2022-02-07T23:26:41.367867Z",
        "url": "https://files.pythonhosted.org/packages/53/d0/46125c8a5fb17e5aaa4a865a6d98002a834c6d1ba7b3ca95913ac0d1b66b/diet_video-0.1.14rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56c78a1e119b6954fe0a4d56e2ddba472f5c810ec3611c925cb030ecbcbadf7a",
        "md5": "11be2fec6cb6f8959244d369664a63e8",
        "sha256": "4ad45e06e7215d785beb51d0c342346c8b57cfaf8df44886d49860617ddb1048"
      },
      "downloads": -1,
      "filename": "diet_video-0.1.14rc0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "11be2fec6cb6f8959244d369664a63e8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4",
      "size": 20631,
      "upload_time": "2022-02-07T23:26:38",
      "upload_time_iso_8601": "2022-02-07T23:26:38.245901Z",
      "url": "https://files.pythonhosted.org/packages/56/c7/8a1e119b6954fe0a4d56e2ddba472f5c810ec3611c925cb030ecbcbadf7a/diet_video-0.1.14rc0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53d046125c8a5fb17e5aaa4a865a6d98002a834c6d1ba7b3ca95913ac0d1b66b",
        "md5": "34cd64e8cdf5e8a989a5621f92fbd5b1",
        "sha256": "97f33e4e22f48fc2e9801c248fe88c0e109e0fcdfd53374dcbf0dea130db8fed"
      },
      "downloads": -1,
      "filename": "diet_video-0.1.14rc0.tar.gz",
      "has_sig": false,
      "md5_digest": "34cd64e8cdf5e8a989a5621f92fbd5b1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4",
      "size": 21403,
      "upload_time": "2022-02-07T23:26:41",
      "upload_time_iso_8601": "2022-02-07T23:26:41.367867Z",
      "url": "https://files.pythonhosted.org/packages/53/d0/46125c8a5fb17e5aaa4a865a6d98002a834c6d1ba7b3ca95913ac0d1b66b/diet_video-0.1.14rc0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}