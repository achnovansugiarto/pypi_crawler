{
  "info": {
    "author": "Gabriel Altay",
    "author_email": "gabriel.altay@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": ".. image:: https://travis-ci.com/galtay/hilbertcurve.svg?branch=develop\n    :target: https://travis-ci.com/galtay/hilbertcurve\n\n.. contents:: Table of Contents\n   :depth: 2\n\n\n============\nIntroduction\n============\n\nThis is a package to convert between one dimensional distance along a\n`Hilbert curve`_, ``h``, and ``n``-dimensional points,\n``(x_0, x_1, ... x_n-1)``.  There are two important parameters,\n\n* ``n`` -- the number of dimensions (must be > 0)\n* ``p`` -- the number of iterations used in constructing the Hilbert curve (must be > 0)\n\nWe consider an ``n``-dimensional `hypercube`_ of side length ``2^p``.\nThis hypercube contains ``2^{n p}`` unit hypercubes (``2^p`` along\neach dimension).  The number of unit hypercubes determine the possible\ndiscrete distances along the Hilbert curve (indexed from 0 to\n``2^{n p} - 1``).\n\n\n==========\nQuickstart\n==========\n\nInstall the package with pip,\n\n.. code-block:: bash\n\n  pip install hilbertcurve\n\nYou can calculate points given distances along a hilbert curve,\n\n.. code-block:: python\n\n  >>> from hilbertcurve.hilbertcurve import HilbertCurve\n  >>> p=1; n=2\n  >>> hilbert_curve = HilbertCurve(p, n)\n  >>> distances = list(range(4))\n  >>> points = hilbert_curve.points_from_distances(distances)\n  >>> for point, dist in zip(points, distances):\n  >>>     print(f'point(h={dist}) = {point}')\n\n  point(h=0) = [0, 0]\n  point(h=1) = [0, 1]\n  point(h=2) = [1, 1]\n  point(h=3) = [1, 0]\n\nYou can also calculate distances along a hilbert curve given points,\n\n.. code-block:: python\n\n  >>> points = [[0,0], [0,1], [1,1], [1,0]]\n  >>> distances = hilbert_curve.distances_from_points(points)\n  >>> for point, dist in zip(points, distances):\n  >>>     print(f'distance(x={point}) = {dist}')\n\n  distance(x=[0, 0]) = 0\n  distance(x=[0, 1]) = 1\n  distance(x=[1, 1]) = 2\n  distance(x=[1, 0]) = 3\n\n=========================\nInputs and Outputs\n=========================\n\nThe ``HilbertCurve`` class has four main public methods.\n\n* ``point_from_distance(distance: int) -> Iterable[int]``\n* ``points_from_distances(distances: Iterable[int], match_type: bool=False) -> Iterable[Iterable[int]]``\n* ``distance_from_point(point: Iterable[int]) -> int``\n* ``distances_from_points(points: Iterable[Iterable[int]], match_type: bool=False) -> Iterable[int]``\n\nArguments that are type hinted with ``Iterable[int]`` have been tested with lists, tuples, and 1-d numpy arrays.\nArguments that are type hinted with ``Iterable[Iterable[int]]`` have been tested with list of lists, tuples of tuples, and 2-d numpy arrays with shape (num_points, num_dimensions). The ``match_type`` key word argument forces the output iterable to match the type of the input iterable. \n\nThe ``HilbertCurve`` class also contains some useful metadata derived from the inputs ``p`` and ``n``. For instance, you can construct a numpy array of random points on the hilbert curve and calculate their distances in the following way,\n\n.. code-block:: python\n\n  >>> from hilbertcurve.hilbertcurve import HilbertCurve\n  >>> p=1; n=2\n  >>> hilbert_curve = HilbertCurve(p, n)\n  >>> num_points = 10_000                                                                                              \n  >>> points = np.random.randint(                                                                                   \n          low=0,                                                                                                    \n          high=hilbert_curve.max_x + 1,                                                                                 \n          size=(num_points, hilbert_curve.n)                                                                        \n      )\n  >>> distances = hilbert_curve.distances_from_points(points)\n  >>> type(distances)\n\n  list\n\n  >>> distances = hilbert_curve.distances_from_points(points, match_type=True)\n  >>> type(distances)\n\n  numpy.ndarray\n\n=========================\nMultiprocessing\n=========================\n\nYou can now take advantage of multiple processes to speed up calculations by using the ``n_procs`` keyword argument when creating an instance of ``HilbertCurve``. \n\n.. code-block:: bash\n\n  n_procs (int): number of processes to use\n      0 = dont use multiprocessing\n     -1 = use all available processes\n      any other positive integer = number of processes to use\n\nA value of 0 will completely avoid using the multiprocessing module while a value of 1 will use the multiprocessing module but with a single process. If you want to take advantage of every thread on your computer use the value -1 and if you want something in the middle use a value between 1 and the number of threads on your computer.  A concrete example starting with the code block above is,\n\n.. code-block:: python\n\n  >>> from hilbertcurve.hilbertcurve import HilbertCurve\n  >>> p=1; n=2\n  >>> hilbert_curve = HilbertCurve(p, n, n_procs=-1)\n  >>> num_points = 100_000                                                                                              \n  >>> points = np.random.randint(                                                                                   \n          low=0,                                                                                                    \n          high=hilbert_curve.max_x + 1,                                                                                 \n          size=(num_points, hilbert_curve.n)                                                                        \n      )\n  >>> distances = hilbert_curve.distances_from_points(points)\n\nThe following methods are able to use multiple cores. \n\n* ``points_from_distances(distances: Iterable[int], match_type: bool=False) -> Iterable[Iterable[int]]``\n* ``distances_from_points(points: Iterable[Iterable[int]], match_type: bool=False) -> Iterable[int]``\n\n\n=========================\n(Absurdly) Large Integers\n=========================\n\nDue to the magic of `arbitrarily large integers in Python`_,\nthese calculations can be done with ... well ... arbitrarily large integers!\n\n.. code-block:: python\n\n  >>> p = 512; n = 10\n  >>> hilbert_curve = HilbertCurve(p, n)\n  >>> ii = 123456789101112131415161718192021222324252627282930\n  >>> point = hilbert_curve.points_from_distances([ii])[0]\n  >>> print(f'point = {point}')\n\n  point = [121075, 67332, 67326, 108879, 26637, 43346, 23848, 1551, 68130, 84004]\n\nThe calculations above represent the 512th iteration of the Hilbert curve in 10 dimensions.\nThe maximum value along any coordinate axis is an integer with 155 digits and the maximum\ndistance along the curve is an integer with 1542 digits.  For comparison,\n`an estimate of the number of atoms in the observable universe`_\nis ``10^{82}`` (i.e. an integer with 83 digits).\n\n=======\nVisuals\n=======\n\n\n.. figure:: https://raw.githubusercontent.com/galtay/hilbertcurve/main/n2_p3.png\n\n   The figure above shows the first three iterations of the Hilbert\n   curve in two (``n=2``) dimensions.  The ``p=1`` iteration is shown\n   in red, ``p=2`` in blue, and ``p=3`` in black.\n   For the ``p=3`` iteration, distances, ``h``, along the curve are\n   labeled from 0 to 63 (i.e. from 0 to ``2^{n p}-1``).  This package\n   provides methods to translate between ``n``-dimensional points and one\n   dimensional distance.  For example, between (``x_0=4, x_1=6``) and\n   ``h=36``.  Note that the ``p=1`` and ``p=2`` iterations have been\n   scaled and translated to the coordinate system of the ``p=3`` iteration.\n\n\nAn animation of the same case in 3-D is available on YouTube.  To watch the video,\nclick the link below.  Once the YouTube video loads, you can right click on it and\nturn \"Loop\" on to watch the curve rotate continuously.\n\n.. figure:: https://img.youtube.com/vi/TfJEJidwkBQ/0.jpg\n\n   3-D Hilbert Curve Animation https://www.youtube.com/watch?v=TfJEJidwkBQ\n\n=========\nReference\n=========\n\nThis module is based on the C code provided in the 2004 article\n\"Programming the Hilbert Curve\" by John Skilling,\n\n* http://adsabs.harvard.edu/abs/2004AIPC..707..381S\n\nI was also helped by the discussion in the following stackoverflow post,\n\n* `mapping-n-dimensional-value-to-a-point-on-hilbert-curve`_\n\nwhich points out a typo in the source code of the paper.  The Skilling code\nprovides two functions ``TransposetoAxes`` and ``AxestoTranspose``.  In this\ncase, Transpose refers to a specific packing of the integer that represents\ndistance along the Hilbert curve (see below for details) and\nAxes refer to the n-dimensional coordinates.  Below is an excerpt from the\ndocumentation of Skilling's code,\n\n::\n\n    //+++++++++++++++++++++++++++ PUBLIC-DOMAIN SOFTWARE ++++++++++++++++++++++++++\n    // Functions: TransposetoAxes  AxestoTranspose\n    // Purpose:   Transform in-place between Hilbert transpose and geometrical axes\n    // Example:   b=5 bits for each of n=3 coordinates.\n    //            15-bit Hilbert integer = A B C D E F G H I J K L M N O is stored\n    //            as its Transpose\n    //                   X[0] = A D G J M                X[2]|\n    //                   X[1] = B E H K N    <------->       | /X[1]\n    //                   X[2] = C F I L O               axes |/\n    //                          high  low                    0------ X[0]\n    //            Axes are stored conveniently as b-bit integers.\n    // Author:    John Skilling  20 Apr 2001 to 11 Oct 2003\n\n============\nChange Log\n============\n\nVersion 2.0\n===========\n\nVersion 2.0 introduces some breaking changes.\n\nAPI Changes\n-----------\n\nPrevious versions transformed a single distance to a vector or a single vector to a distance.\n\n* ``coordinates_from_distance(self, h: int) -> List[int]``\n* ``distance_from_coordinates(self, x_in: List[int]) -> int``\n\nIn version 2.0 coordinates -> point(s) and we add methods to handle multiple distances or multiple points.\nThe `match_type` kwarg forces the output type to match the input type and all functions can handle tuples,\nlists, and ndarrays.\n\n* ``point_from_distance(self, distance: int) -> Iterable[int]``\n* ``points_from_distances(self, distances: Iterable[int], match_type: bool=False) -> Iterable[Iterable[int]]``\n* ``distance_from_point(self, point: Iterable[int]) -> int``\n* ``distances_from_points(self, points: Iterable[Iterable[int]], match_type: bool=False) -> Iterable[int]``\n\n\nMultiprocessing\n---------------\n\nThe methods that handle multiple distances or multiple points can take advantage of multiple cores.\nYou can control this behavior using the `n_procs` kwarg when you create an instance of `HilbertCurve`.\n\n\n\n.. _Hilbert curve: https://en.wikipedia.org/wiki/Hilbert_curve\n.. _hypercube: https://en.wikipedia.org/wiki/Hypercube\n.. _arbitrarily large integers in Python: https://docs.python.org/3.3/library/stdtypes.html#numeric-types-int-float-complex\n.. _an estimate of the number of atoms in the observable universe: https://www.universetoday.com/36302/atoms-in-the-universe\n.. _mapping-n-dimensional-value-to-a-point-on-hilbert-curve: http://stackoverflow.com/questions/499166/mapping-n-dimensional-value-to-a-point-on-hilbert-curve\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/galtay/hilbertcurve",
    "keywords": "fractal space-filling-curves hilbert hilbert-curve python python3",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hilbertcurve",
    "package_url": "https://pypi.org/project/hilbertcurve/",
    "platform": "",
    "project_url": "https://pypi.org/project/hilbertcurve/",
    "project_urls": {
      "Homepage": "https://github.com/galtay/hilbertcurve"
    },
    "release_url": "https://pypi.org/project/hilbertcurve/2.0.5/",
    "requires_dist": [
      "numpy",
      "sphinx ; extra == 'dev'",
      "sphinx-rtd-theme ; extra == 'dev'",
      "sphinx-autodoc-typehints ; extra == 'dev'",
      "pytest ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "Construct Hilbert Curves.",
    "version": "2.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9917263,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70798f7c63284d3bb35eafe9caafbab3429e194726309bde0e03e5cf4958aeb3",
          "md5": "f3c0a45dc2870600187e756b55482108",
          "sha256": "bb5968fdb94000b84b8f80f4e91f0fb448ef028b77ddfc62c37c2d16270e9ca9"
        },
        "downloads": -1,
        "filename": "hilbertcurve-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3c0a45dc2870600187e756b55482108",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 6250,
        "upload_time": "2019-03-03T19:32:25",
        "upload_time_iso_8601": "2019-03-03T19:32:25.427128Z",
        "url": "https://files.pythonhosted.org/packages/70/79/8f7c63284d3bb35eafe9caafbab3429e194726309bde0e03e5cf4958aeb3/hilbertcurve-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d37854cce6c8db1022182316e482d385a388fc69489d894cd9d024963883092",
          "md5": "ff44bfa8158b6d967e163b49edefc8d2",
          "sha256": "b1ddf58f529219d3b76e8b61ed03e2975a724aff4848b720397c7d5601f49521"
        },
        "downloads": -1,
        "filename": "hilbertcurve-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ff44bfa8158b6d967e163b49edefc8d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 5648,
        "upload_time": "2019-03-03T19:32:27",
        "upload_time_iso_8601": "2019-03-03T19:32:27.245249Z",
        "url": "https://files.pythonhosted.org/packages/0d/37/854cce6c8db1022182316e482d385a388fc69489d894cd9d024963883092/hilbertcurve-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "896f25919200d8b3851321738e5e72ff370db3fd7f0d6c13748997aab34d3f80",
          "md5": "9eba2c5c369abee80d54095071033418",
          "sha256": "cb041f40f1b26843ef093d104954c55cf0dba5b6e976371a510432c193ee951d"
        },
        "downloads": -1,
        "filename": "hilbertcurve-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9eba2c5c369abee80d54095071033418",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6395,
        "upload_time": "2019-11-30T22:03:22",
        "upload_time_iso_8601": "2019-11-30T22:03:22.302456Z",
        "url": "https://files.pythonhosted.org/packages/89/6f/25919200d8b3851321738e5e72ff370db3fd7f0d6c13748997aab34d3f80/hilbertcurve-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9be3077a91bc052d926143eaeae3dda0aa3eb494ff3fdfa42ade22582da39ded",
          "md5": "6256eac025adf6746d237083c32a1f1f",
          "sha256": "e105cc5b177e67e8090c40e7e70b0824f03ac74627a7bc4dc8b31e0e2c635e92"
        },
        "downloads": -1,
        "filename": "hilbertcurve-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6256eac025adf6746d237083c32a1f1f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6474,
        "upload_time": "2020-11-11T20:02:09",
        "upload_time_iso_8601": "2020-11-11T20:02:09.071359Z",
        "url": "https://files.pythonhosted.org/packages/9b/e3/077a91bc052d926143eaeae3dda0aa3eb494ff3fdfa42ade22582da39ded/hilbertcurve-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3d10ee30ca7b861c3396759ee47a6dd997806f1c65314b4782518bdc019d6da",
          "md5": "6c75154ad25b6e130ecd35a69b55a771",
          "sha256": "aefc00859c9cdefee1e53b722c33b2091afa18a608a7eedc7ee2acdbf62feb36"
        },
        "downloads": -1,
        "filename": "hilbertcurve-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6c75154ad25b6e130ecd35a69b55a771",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6711,
        "upload_time": "2020-11-11T22:21:04",
        "upload_time_iso_8601": "2020-11-11T22:21:04.453403Z",
        "url": "https://files.pythonhosted.org/packages/b3/d1/0ee30ca7b861c3396759ee47a6dd997806f1c65314b4782518bdc019d6da/hilbertcurve-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d99f2aae105f6da36ab5e2a8075fbc21296b498e394ea3560df15856a8f21fc",
          "md5": "3d548f5e13a5d208c35c1b461c2f03a4",
          "sha256": "f8237ce32e64d7e967cf91ccdddca6ed75bc32f85953e4c85ef6a3070faf3eeb"
        },
        "downloads": -1,
        "filename": "hilbertcurve-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d548f5e13a5d208c35c1b461c2f03a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7897,
        "upload_time": "2020-11-13T01:31:16",
        "upload_time_iso_8601": "2020-11-13T01:31:16.971334Z",
        "url": "https://files.pythonhosted.org/packages/6d/99/f2aae105f6da36ab5e2a8075fbc21296b498e394ea3560df15856a8f21fc/hilbertcurve-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb552c58e5f0aa61e84fbdde8fbf382cfff4d2a935e93e154dab2283c4521adb",
          "md5": "f957976c1c34701dfba3c316bc5445c8",
          "sha256": "ebf19e31f01a68f7483423cf49027582572ce44273543fcf42b30e5122f241a6"
        },
        "downloads": -1,
        "filename": "hilbertcurve-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f957976c1c34701dfba3c316bc5445c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 56626,
        "upload_time": "2020-11-13T01:31:18",
        "upload_time_iso_8601": "2020-11-13T01:31:18.446141Z",
        "url": "https://files.pythonhosted.org/packages/cb/55/2c58e5f0aa61e84fbdde8fbf382cfff4d2a935e93e154dab2283c4521adb/hilbertcurve-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08f66f6b3d7544f6559cac437b5c14460560a96fe41cb8a3094507367ea9e67b",
          "md5": "c7bdc9a851202c6f2cb743149b45da11",
          "sha256": "a5159143fb59691c35c8e7cbea863bd67e7cac615e1268a6b98765d7323da5cd"
        },
        "downloads": -1,
        "filename": "hilbertcurve-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c7bdc9a851202c6f2cb743149b45da11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7908,
        "upload_time": "2020-11-13T01:37:30",
        "upload_time_iso_8601": "2020-11-13T01:37:30.863062Z",
        "url": "https://files.pythonhosted.org/packages/08/f6/6f6b3d7544f6559cac437b5c14460560a96fe41cb8a3094507367ea9e67b/hilbertcurve-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91b68307fc22523a6dff922864b9c3823172b3e58413d5a3edea721c6b30c00d",
          "md5": "34296475e0673c0fdc9f0514579c57b7",
          "sha256": "9b5173179c43b927ae0c4301f1f8d09cdbb1461cc67a8948c6f65e51fd1ed61c"
        },
        "downloads": -1,
        "filename": "hilbertcurve-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "34296475e0673c0fdc9f0514579c57b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 56641,
        "upload_time": "2020-11-13T01:37:32",
        "upload_time_iso_8601": "2020-11-13T01:37:32.109933Z",
        "url": "https://files.pythonhosted.org/packages/91/b6/8307fc22523a6dff922864b9c3823172b3e58413d5a3edea721c6b30c00d/hilbertcurve-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e300fd4cc83483859d51908a0822e75fb52a1b4e9b4a94b67ad254c67a160ce2",
          "md5": "05aeced3fcf34dc3b817abe5a7761960",
          "sha256": "db2e6768176371c891262f15a3e93aeaff28eeb1f881eb651f55fff0ae8b8e28"
        },
        "downloads": -1,
        "filename": "hilbertcurve-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05aeced3fcf34dc3b817abe5a7761960",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7917,
        "upload_time": "2020-11-13T01:42:48",
        "upload_time_iso_8601": "2020-11-13T01:42:48.344481Z",
        "url": "https://files.pythonhosted.org/packages/e3/00/fd4cc83483859d51908a0822e75fb52a1b4e9b4a94b67ad254c67a160ce2/hilbertcurve-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82729b4836791e3f1996fe270755d8c2554d8308aeda01e166dc648a77396e01",
          "md5": "1c86703362a9a6dce4ede171a1e5d5e5",
          "sha256": "a8b7e20a9721b80d9eff623b0b3931c07faa1a8db5fdbd4a4cf35600a7e8ce02"
        },
        "downloads": -1,
        "filename": "hilbertcurve-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1c86703362a9a6dce4ede171a1e5d5e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 56646,
        "upload_time": "2020-11-13T01:42:49",
        "upload_time_iso_8601": "2020-11-13T01:42:49.703187Z",
        "url": "https://files.pythonhosted.org/packages/82/72/9b4836791e3f1996fe270755d8c2554d8308aeda01e166dc648a77396e01/hilbertcurve-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f766fb21a1d3f492c794024eadb468c2bc27f0585efbe46d11f86f2865494db",
          "md5": "3625ab2419b7404687ad47f44e4d4fcc",
          "sha256": "95f5a468ec2b9c1d40697038935e008edda42395ad9453c3eaeb937fd2075062"
        },
        "downloads": -1,
        "filename": "hilbertcurve-2.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3625ab2419b7404687ad47f44e4d4fcc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7919,
        "upload_time": "2020-11-13T01:55:46",
        "upload_time_iso_8601": "2020-11-13T01:55:46.754729Z",
        "url": "https://files.pythonhosted.org/packages/4f/76/6fb21a1d3f492c794024eadb468c2bc27f0585efbe46d11f86f2865494db/hilbertcurve-2.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "720cde79df4902859dda5ce167eec6fa5d721cf26696b71751320ff5e0a485bc",
          "md5": "91eea255bb6bb0469556b814540bf6f2",
          "sha256": "735e2302d19546ad92300b04a8e2e0b04d5b48230a083b1ddc9f0f080679da11"
        },
        "downloads": -1,
        "filename": "hilbertcurve-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "91eea255bb6bb0469556b814540bf6f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 56651,
        "upload_time": "2020-11-13T01:55:48",
        "upload_time_iso_8601": "2020-11-13T01:55:48.093186Z",
        "url": "https://files.pythonhosted.org/packages/72/0c/de79df4902859dda5ce167eec6fa5d721cf26696b71751320ff5e0a485bc/hilbertcurve-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "043b3cd426d2a87248677834699f1e52d14c03f895342cb087197f48371c2399",
          "md5": "6f2eebfad61e3c5ffd54fe644c9ac552",
          "sha256": "aea2599fcb55e814ddb27e6f33ef97dd4a102f992e8f102f203155203204f22a"
        },
        "downloads": -1,
        "filename": "hilbertcurve-2.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f2eebfad61e3c5ffd54fe644c9ac552",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8596,
        "upload_time": "2020-11-13T03:21:09",
        "upload_time_iso_8601": "2020-11-13T03:21:09.442493Z",
        "url": "https://files.pythonhosted.org/packages/04/3b/3cd426d2a87248677834699f1e52d14c03f895342cb087197f48371c2399/hilbertcurve-2.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e5da9f21f841caadc41342988edea40bd561dbbf66f98491d58960512c79996",
          "md5": "e9d63238dd55100ef5c0a07f1cf96caf",
          "sha256": "bad48bf289901e01e4c4ce5df1ef670f0c4d5076d38784c0d24be631b6cbcdcd"
        },
        "downloads": -1,
        "filename": "hilbertcurve-2.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e9d63238dd55100ef5c0a07f1cf96caf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 58647,
        "upload_time": "2020-11-13T03:21:10",
        "upload_time_iso_8601": "2020-11-13T03:21:10.633785Z",
        "url": "https://files.pythonhosted.org/packages/6e/5d/a9f21f841caadc41342988edea40bd561dbbf66f98491d58960512c79996/hilbertcurve-2.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9aceb5b18c87a6f02057fe5b2d0638cac0d097de983f560a53213d94e6352907",
          "md5": "8d37df3c7697ad8e38a3295583f8fadc",
          "sha256": "dbaad510237d3cd4355c189f00e8dbe66a9e66e03af37f9d3f257799292da363"
        },
        "downloads": -1,
        "filename": "hilbertcurve-2.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d37df3c7697ad8e38a3295583f8fadc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8595,
        "upload_time": "2021-03-29T20:43:25",
        "upload_time_iso_8601": "2021-03-29T20:43:25.825177Z",
        "url": "https://files.pythonhosted.org/packages/9a/ce/b5b18c87a6f02057fe5b2d0638cac0d097de983f560a53213d94e6352907/hilbertcurve-2.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f80fe5ca68d4f1533b9b4bda6d354b017aa632830f17a951e715cd2a93104be5",
          "md5": "b79200cb3124f2ac73fd1a5125d8f7ce",
          "sha256": "6a7703d9a2f1fe748c86d86908bf183e7d139b973645e4b2526e10b34e75796d"
        },
        "downloads": -1,
        "filename": "hilbertcurve-2.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b79200cb3124f2ac73fd1a5125d8f7ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 58670,
        "upload_time": "2021-03-29T20:43:27",
        "upload_time_iso_8601": "2021-03-29T20:43:27.794785Z",
        "url": "https://files.pythonhosted.org/packages/f8/0f/e5ca68d4f1533b9b4bda6d354b017aa632830f17a951e715cd2a93104be5/hilbertcurve-2.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9aceb5b18c87a6f02057fe5b2d0638cac0d097de983f560a53213d94e6352907",
        "md5": "8d37df3c7697ad8e38a3295583f8fadc",
        "sha256": "dbaad510237d3cd4355c189f00e8dbe66a9e66e03af37f9d3f257799292da363"
      },
      "downloads": -1,
      "filename": "hilbertcurve-2.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8d37df3c7697ad8e38a3295583f8fadc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8595,
      "upload_time": "2021-03-29T20:43:25",
      "upload_time_iso_8601": "2021-03-29T20:43:25.825177Z",
      "url": "https://files.pythonhosted.org/packages/9a/ce/b5b18c87a6f02057fe5b2d0638cac0d097de983f560a53213d94e6352907/hilbertcurve-2.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f80fe5ca68d4f1533b9b4bda6d354b017aa632830f17a951e715cd2a93104be5",
        "md5": "b79200cb3124f2ac73fd1a5125d8f7ce",
        "sha256": "6a7703d9a2f1fe748c86d86908bf183e7d139b973645e4b2526e10b34e75796d"
      },
      "downloads": -1,
      "filename": "hilbertcurve-2.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "b79200cb3124f2ac73fd1a5125d8f7ce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 58670,
      "upload_time": "2021-03-29T20:43:27",
      "upload_time_iso_8601": "2021-03-29T20:43:27.794785Z",
      "url": "https://files.pythonhosted.org/packages/f8/0f/e5ca68d4f1533b9b4bda6d354b017aa632830f17a951e715cd2a93104be5/hilbertcurve-2.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}