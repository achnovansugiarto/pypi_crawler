{
  "info": {
    "author": "Vino Wan",
    "author_email": "vinowan@tencent.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# 1. 简介\nzmq_ops是Avatar训练框架依赖的一个组件，通过把它集成到tensorflow中，可以使得tensorflow支持在线实时学习和训练。它的主要功能包括：\n\n1. 符合tensorflow io接口标准，能够和tensorflow集成在一起\n2. 提供单向数据传输的PUSH-PULL模式，也支持双向数据传输的REQ-ROUTER模式\n\n# 2. 安装\n\n## 2.1 安装依赖\n```bash\nconda install zeromq\nconda install tensorflow\n```\n## 2.2 从源码安装\n```bash\n# 编译前要设置conda环境路径\nexport CONDA_ENV_PATH=/path/to/conda/env\ncd zmq_ops\npython setup.py install\n```\n## 2.3 二进制安装\n```bash\npip install zmq-ops\n```\n\n# 3. 使用\n\n## 3.1 ZmqReader\nzmq reader主要提供ZMQ中的PUSH-PULL模式中的PULL端，它提供了3个OP：\n\n1. zmq_reader_init(end_point, hwm)：初始化zmq reader\n2. zmq_reader_next(resource, types, shapes)：读取下一组数据\n3. zmq_reader_readable(resource)：判断zmq reader是否可读\n\n## 3.2 ZmqServer\nzmq server主要提供ZMQ中的REQ-ROUTER模式中的ROUTER端，它提供了3个OP\n\n1. zmq_server_init(end_point, hwm)：初始化zmq server\n2. zmq_server_recv_all(resource, types, shapes, min_cnt, max_cnt)：尽量从zmq server多读取数据，最少min_cnt条数据，最多max_cnt条数据，并把数据组成一个batch返回，返回client_id和tensors\n3. zmq_server_send_all(resource, client_id, tensors)：把tensors按照client_id发送给不同的客户端\n\n具体使用案例可以参考zmq_reader_test.py和zmq_server_test.py文件",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zmq-ops",
    "package_url": "https://pypi.org/project/zmq-ops/",
    "platform": "",
    "project_url": "https://pypi.org/project/zmq-ops/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/zmq-ops/0.4.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10017218,
  "releases": {
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b65abe15e7d46140391d9c5a2f576174a9e748e911c37a716cf13dee2637ba5",
          "md5": "b9cc97dc6708729f25acfbd79ccd599c",
          "sha256": "3a459913440faa6cb16d38318c58f12dd87641bdc39abe81e0dde30d47dd3e83"
        },
        "downloads": -1,
        "filename": "zmq_ops-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b9cc97dc6708729f25acfbd79ccd599c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 71028,
        "upload_time": "2021-04-09T11:01:09",
        "upload_time_iso_8601": "2021-04-09T11:01:09.095463Z",
        "url": "https://files.pythonhosted.org/packages/0b/65/abe15e7d46140391d9c5a2f576174a9e748e911c37a716cf13dee2637ba5/zmq_ops-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b65abe15e7d46140391d9c5a2f576174a9e748e911c37a716cf13dee2637ba5",
        "md5": "b9cc97dc6708729f25acfbd79ccd599c",
        "sha256": "3a459913440faa6cb16d38318c58f12dd87641bdc39abe81e0dde30d47dd3e83"
      },
      "downloads": -1,
      "filename": "zmq_ops-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b9cc97dc6708729f25acfbd79ccd599c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 71028,
      "upload_time": "2021-04-09T11:01:09",
      "upload_time_iso_8601": "2021-04-09T11:01:09.095463Z",
      "url": "https://files.pythonhosted.org/packages/0b/65/abe15e7d46140391d9c5a2f576174a9e748e911c37a716cf13dee2637ba5/zmq_ops-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}