{
  "info": {
    "author": "UNKNOWN",
    "author_email": "UNKNOWN",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning"
    ],
    "description": "# HHypermap Supervisor\n\n## Introduction\n\nHHypermap (Harvard Hypermap) Supervisor is a platform that manages OWS, Esri REST, and other types of map service harvesting, and orchestration and maintains uptime statistics for services and layers. Where possible, layers will be cached by MapProxy. It is anticipated that other types of OGC service such as WFS, WCS, WPS, as well as flavors of Esri REST and other web-GIS protocols will eventually be included. The platform is initially being developed to collect and organize map services for Harvard WorldMap, but there is no dependency on WorldMap. HHypermap Supervisor publishes to HHypermap Search (based on Lucene) which provides a fast search and visualization environment for spatio-temporal materials.  The initial funding for HHypermap Supervisor came from a grant to the Center for Geographic Analysis from the National Endowment for the Humanities.   \n\n## Installation\n\n### Running Hypermap on Vagrant\n\nEasiest way to have an HHypermap instance up and running is to use Vagrant.\n\n```\ngit clone git@github.com:cga-harvard/hypermap.git\ncd hypermap/deploy\nvagrant up\n```\n\nWait for the instance to be provisioned (about 3/4 minutes).\n\nThen connect to: 192.168.33.15 and your instance should be up and running.\n\n\n#### Development mode on Vagrant\n\nYou can use the same instance if you are a developer. Just run the Django\nserver in place of nginx and uwsgi:\n\n```\ncd hypermap/deploy\nvagrant ssh\n. /webapps/hypermap/bin/activate\ncd /webapps/hypermap/hypermap/hypermap/\n./manage.py runserver 0.0.0.0:8000\n```\n\nYou can edit the files with your IDE from your host, as the directory\n/webapps/hypermap/hypermap on the guest is synced with your host.\n\nTo run Celery in development mode run the worker process like this (remember to stop the celery process with supervisor before):\n\n```\n./manage.py celery -A hypermap worker -B -l info\n```\n\nTo run unit tests:\n\n```\ncd /webapps/hypermap/hypermap\npaver run_tests\n```\n\nIf you want to run integration tests, you need to create a solr core named 'hypermap_test', and then:\n\n```\ncd /webapps/hypermap/hypermap\npaver run_integration_tests\n```\n\n### Running Hypermap on AWS\n\nMake sure to have the following variables correctly set:\n\n```\nbash-3.2$ echo $ANSIBLE_HOSTS\n/Users/capooti/ec2.py\nbash-3.2$ echo $EC2_INI_PATH\n/Users/capooti/ec2.ini\nbash-3.2$ echo $AWS_ACCESS_KEY_ID\nAKI...\nbash-3.2$ echo $AWS_SECRET_ACCESS_KEY\ndjE...\n```\n\nAlso, set the ssh-agent and make sure it is running correctly:\n\n```\nssh-agent bash\nbash-3.2$ ssh-add ~/.ssh/cga.pem\nbash-3.2$ ssh-add -L\nssh-rsa AAAAB3NzaC1yc2E... /Users/capooti/.ssh/cga.pem\n```\n\nFinally run the playbook:\n\nansible-playbook aws.yml\n\nIf you want to run only a part of the provisioning process use the --tags option:\n\nansible-playbook aws.yml --tags \"uwsgi\"\n\nTo make a new deployment, after committing to git, run:\n\nansible-playbook deploy.yml\n\n\n### Manual Installation\n\nWe will assume that you are installing Hypermap on Ubuntu 14.04 LTS.\n\nFirst, install requirements:\n\n```\nsudo apt-get update\nsudo apt-get install python-dev postgresql postgresql-server-dev-all\nlibjpeg-dev rabbitmq-server\n```\n\nCreate PostgreSQL role and database:\n\n```\nsudo su postgres\npsql\nCREATE USER hypermap WITH superuser PASSWORD 'hypermap';\nCREATE DATABASE hypermap WITH OWNER hypermap;\n```\n\nInstall Hypermap on a virtual environment:\n\n```\nvirtualenv --no-site-packages env\nsource env/bin/activate\npip install --upgrade pip\ngit clone https://github.com/cga-harvard/HHypermap.git\npip install -e HHypermap\n```\n\nYou need to create a settings file named as your username:\n\n```\ncd HHypermap/hypermap\ntouch settings/_yourusername.py\n```\n\nIn _yourusername.py you need to add at least the first line, and then the settings specific for your environment, such as preferences about Celery and Solr:\n\n```\nfrom settings.default import *  # noqa\n\nSITE_URL = 'http://localhost:8000/'\n\nSEARCH_ENABLED = True\nSEARCH_TYPE = 'solr'\nSEARCH_URL = 'http://127.0.0.1:8983/solr/search'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': 'hypermap',\n        'USER': 'hypermap',\n        'PASSWORD': 'hypermap',\n        'HOST': '127.0.0.1',\n        'PORT': '5432',\n    }\n}\n\nSKIP_CELERY_TASK = True\n```\n\nNow synchronize the database:\n\n./manage.py syncdb # create an admin user when requested\n\nNow you should be able to start the development server:\n\n./manage.py runserver\n\n\n## Start using Hypermap\n\nLogin to the home page, http://localhost:8000. It will be empty. You need to add some\nendpoints to Hypermap. So go to the administrative interface:\n\nhttp://localhost:8000/admin/\n\nGo to Service and add a service of WMS type. As a endpoint you can use this one:\nhttp://demo.geonode.org/geoserver/ows?service=wms&version=1.1.1&request=GetCapabilities\n\nAfter saving, Hypermap should be start harvesting the endpoint.\n\nHarvesting will be performed by the Django server if SKIP_CELERY_TASK\n= True, otherwise by Celery. Please note that harvesting operations can be time consuming, so it is better to setup a Celery process if possible.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/cga-harvard/HHypermap",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cga-harvard/HHypermap",
    "keywords": null,
    "license": "See LICENSE file.",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-hhypermap",
    "package_url": "https://pypi.org/project/django-hhypermap/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-hhypermap/",
    "project_urls": {
      "Download": "https://github.com/cga-harvard/HHypermap",
      "Homepage": "https://github.com/cga-harvard/HHypermap"
    },
    "release_url": "https://pypi.org/project/django-hhypermap/0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Use Registry in your django projects.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2165545,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9586dbf6236256f8a678e9a1a6174267c2a00fcf6c9203e71dfd5d513d6fe194",
          "md5": "27053c7e6b8eef56e12160bf9e8f5bc4",
          "sha256": "f51342ccfd6f91077717b998209ddea78718ad95f61218687eb43febec6c169c"
        },
        "downloads": -1,
        "filename": "django-hhypermap-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "27053c7e6b8eef56e12160bf9e8f5bc4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42084,
        "upload_time": "2016-06-13T21:08:30",
        "upload_time_iso_8601": "2016-06-13T21:08:30.152495Z",
        "url": "https://files.pythonhosted.org/packages/95/86/dbf6236256f8a678e9a1a6174267c2a00fcf6c9203e71dfd5d513d6fe194/django-hhypermap-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b02996bc6c7516aaa574a98b30b434d84a4fac9f306db66a7869a6ee0afc9371",
          "md5": "d8bba94880bbc64f1ce1d3fa95051e5f",
          "sha256": "af1212715b454a7da8aa9a1834553f72ef87f17e86d1229e613e85e3b52969d0"
        },
        "downloads": -1,
        "filename": "django-hhypermap-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d8bba94880bbc64f1ce1d3fa95051e5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 433480,
        "upload_time": "2016-06-13T23:29:43",
        "upload_time_iso_8601": "2016-06-13T23:29:43.662775Z",
        "url": "https://files.pythonhosted.org/packages/b0/29/96bc6c7516aaa574a98b30b434d84a4fac9f306db66a7869a6ee0afc9371/django-hhypermap-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b02996bc6c7516aaa574a98b30b434d84a4fac9f306db66a7869a6ee0afc9371",
        "md5": "d8bba94880bbc64f1ce1d3fa95051e5f",
        "sha256": "af1212715b454a7da8aa9a1834553f72ef87f17e86d1229e613e85e3b52969d0"
      },
      "downloads": -1,
      "filename": "django-hhypermap-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d8bba94880bbc64f1ce1d3fa95051e5f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 433480,
      "upload_time": "2016-06-13T23:29:43",
      "upload_time_iso_8601": "2016-06-13T23:29:43.662775Z",
      "url": "https://files.pythonhosted.org/packages/b0/29/96bc6c7516aaa574a98b30b434d84a4fac9f306db66a7869a6ee0afc9371/django-hhypermap-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}