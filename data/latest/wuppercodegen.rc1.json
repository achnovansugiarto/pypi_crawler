{
  "info": {
    "author": "Mark Donszelmann, Jose Valenciano, Jorn Schumacher",
    "author_email": "mark.donszelmann@cern.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "The Wupper Code Generator\n=========================\n\nThe Wupper Code Generator is a tool to generate various files used for the\nimplementation of configuration mechanism of the FELIX interface card\nfirmware. Files that can be generated include:\n\n- A VHDL description of configuration parameters with\n  required datatypes (e.g., a list of VHDL record types).\n- A VHDL file for a register mapping, which relates parameter\n  register to PCIe addresses. This can include write- and read-processes\n  for all configuration registers.\n- A matching C header file, which matches the register mapping described\n  in the previous point to C datastructures which represent the different\n  configuration options.\n- A (partial) OKS schema for the firmware parameters. This still needs to\n  be extended with an OKS schema for the software configuration options. It\n  is yet to be determined how much of the H/W OKS schema can be autogenerated,\n  as not all parameters of the firmware should be configurable using an OKS database.\n- Other use cases are thinkable, e.g., automatic documentation of the parameters,\n  registers, datatypes, etc.\n\nThe Wupper Code Generator tool uses two kinds of inputs:\n\n- A configuration file describing all configuration registers of the firmware, as well\n  their data types, default values, and other relevant information.\n  The format of the input file is YAML.\n- A (set of) template file(s), describing how the output of the tool should\n  look like. `Jinja2 <http://jinja.pocoo.org/>`_ is used as template engine.\n\nAdditionally, the tool automatically generates a unique address for each\nregister. This can be used to assign individual registers to addresses\nin the PCI memory mapping.",
    "description_content_type": null,
    "docs_url": "https://pythonhosted.org/wuppercodegen/",
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pythonhosted.org/wuppercodegen",
    "keywords": "development",
    "license": "APACHE-LICENSE-2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "wuppercodegen",
    "package_url": "https://pypi.org/project/wuppercodegen/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/wuppercodegen/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://pythonhosted.org/wuppercodegen"
    },
    "release_url": "https://pypi.org/project/wuppercodegen/0.5.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "The WUPPER Code Generator",
    "version": "0.5.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1822255,
  "releases": {
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af8fe2a1bddbb47516f3f9e3b0a404e14ad803cf007fd53cad65d69114a9d92e",
          "md5": "b07b8f938ac4f126e2aff1698037886d",
          "sha256": "5ce466ad5bb7c9a80c3e9c328fba00707e1863c4f3932c3b118a8ef9032d7308"
        },
        "downloads": -1,
        "filename": "wuppercodegen-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b07b8f938ac4f126e2aff1698037886d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9289,
        "upload_time": "2015-11-18T09:55:52",
        "upload_time_iso_8601": "2015-11-18T09:55:52.910683Z",
        "url": "https://files.pythonhosted.org/packages/af/8f/e2a1bddbb47516f3f9e3b0a404e14ad803cf007fd53cad65d69114a9d92e/wuppercodegen-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af8fe2a1bddbb47516f3f9e3b0a404e14ad803cf007fd53cad65d69114a9d92e",
        "md5": "b07b8f938ac4f126e2aff1698037886d",
        "sha256": "5ce466ad5bb7c9a80c3e9c328fba00707e1863c4f3932c3b118a8ef9032d7308"
      },
      "downloads": -1,
      "filename": "wuppercodegen-0.5.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b07b8f938ac4f126e2aff1698037886d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9289,
      "upload_time": "2015-11-18T09:55:52",
      "upload_time_iso_8601": "2015-11-18T09:55:52.910683Z",
      "url": "https://files.pythonhosted.org/packages/af/8f/e2a1bddbb47516f3f9e3b0a404e14ad803cf007fd53cad65d69114a9d92e/wuppercodegen-0.5.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}