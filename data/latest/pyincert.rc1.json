{
  "info": {
    "author": "Mateo Contenla",
    "author_email": "mcontenlaf@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Other Audience",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Education",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# <img width=\"30px\" src=\"https://raw.githubusercontent.com/TaconeoMental/PyIncert/main/assets/logo.png\"> PyIncert\nPequeña librería para trabajar con propagación de errores.\n\n## Instalación\nPyIncert se puede instalar directamente desde PyPI usando pip:\n```\npython3 -m pip install pyincert\n```\n\n## Uso\nEn PyIncert se trabaja con los objetos __V__ que representan una tupla de un valor y su error. Los cálculos matemáticos se harán con estos objetos mayoritariamente en reemplazo de las clases numéricas primitivas de Python (int y float). El formato para crear un objeto __V__ es simplemente ```V(Valor, Error)```. Las operaciones disponibles actualmente son: adición, sustracción, multiplicación, divisón, y potenciación. Todas estas se realizan con los operadores nativos de Python correspondientes a cada operación.\n```python\nfrom pyincert import V\n\nvoltaje = V(12, 1.3) # 12V ± 1.3\nresistencia = V(4.3e3, 16) # 4.3e3Ω ± 16\n\n# Operamos normalmente\ncorriente = voltaje / resistencia\nprint(corriente) # 0.0028 ± 0.0003\n\n# Otro ejemplo\npotencia = V(10e3, 24) * V(2.8e-3, 3e-4) ** 2\nprint(potencia) # 0.0784 ± 0.0168\n```\nEn caso de operar con un valor sin error asociado, se puede omitir el uso del objeto __V__ y trabajar directamente con el literal, es decir:\n```python\nV(3, 0) * V(12, 0.1) == V(3) * V(12, 0.1) == 3 * V(12, 0.1) == V(12, 0.1) * 3\n```\n\nNótese que PyIncert toma en cuenta la correlación entre variables al momento de\ncalcular.\n```python\nfrom pyincert import V\n\nx = V(3.14, 1) # 3.14 ± 1\ny = V(3.14, 1)\n\nprint(x / x) # 1.0 ± 0.0\nprint(x / y) # 1.0 ± 0.4504\n\nprint(x * x) # 9.8596 ± 6.28\nprint(x * y) # 9.8596 ± 4.4406\n```\n\n### Errores Relativos\nPyIncert también incluye la clase __ER__ que representa un error relativo. Con este objeto podemos trabajar con valores del tipo ```V ± E%```. Esta puede ser usada creando una instancia de la misma u operando el valor de error con una instancia ya creada usando el operador módulo (%). Para esta última opción, PyIncert ya incluye una instancia de __ER__ llamada __er__.\n```python\nfrom pyincert import V, ER, er\n\nr1 = V(3.3e4, ER(5)) # 3.3e4 ± 5%\n\n# De forma equivalente (y preferible)\nr2 = V(3.3e4, 5%er)\nprint(r2) # 33000.0 ± 1650.0\n\n# Algunas personas me han comentado que han hecho esto:\n_ = er # Así queda más limpio visualmente el error relativo\nr3 = V(3.3e4, 5%_)\n```\n\n### Funciones Matemáticas\nPyIncert incluye un pequeño sub-módulo con algunas funciones matemáticas hechas\npara trabajar con objetos __V__. Estas devuelven un nuevo objeto __V__ con el\nvalor evaluado y el error propagado por la función.\n```python\nfrom pyincert import V\nfrom pyincert.math import sin, radians\n\ntheta = V(180, 1) # 180° ± 1\ntheta_rad = radians(theta)\n\nprint(sin(theta_rad)) # 0.0 ± 0.0175\n```\n\n### Representación\nLa representación de un objeto V es ```Valor ± Error``` y por defecto redondea ambos valores a los primeros 4 decimales. Esto es meramente por temas estéticos, pues la aproximación no se usa al calcular. De todas formas, es posible cambiar la cantidad de decimales mostrados usando el método de clase _cant_dec_ de __V__. En caso de que la consola no soporte Unicode se puede llamar al método de clase _use_unicode_ con el argumento _False_ para que la representación sea ```Valor +/- Error```.\n```python\nfrom pyincert import V, er\nimport math\n\na = V(math.pi, 23%er) # π ± 23%\nprint(a) # 3.1416 ± 0.7226\n\nV.cant_dec(10) # Ahora la representación redondea los valores a los primeros 10 decimales\nV.use_unicode(False) # Ahora se usará \"+/-\" en vez de \"±\"\n\nprint(a) # 3.1415926536 +/- 0.7225663103\n```\n\n## Licencia\nLa librería PyIncert se encuentra publicada bajo la licencia GPLv3.\nPara más información, favor referirse al archivo de [Licencia](https://github.com/TaconeoMental/PyIncert/blob/main/LICENSE)\n\nCopyleft (C) 2021 Mateo Contenla\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TaconeoMental/PyIncert",
    "keywords": "error propagation,Propagation of uncertainty,standard deviation",
    "license": "GNU General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyincert",
    "package_url": "https://pypi.org/project/pyincert/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyincert/",
    "project_urls": {
      "Homepage": "https://github.com/TaconeoMental/PyIncert"
    },
    "release_url": "https://pypi.org/project/pyincert/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Pequeña librería para trabajar con propagación de errores",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10424179,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd18acf702e6550f3a206213bcd0ed62f7e4303d2ceb15ca454015814d9eaf61",
          "md5": "d02513ac3504dcc2453a8214507adb91",
          "sha256": "148bf483e267f522b03e2e8e46238e9ffb030cbf30012df9f8b5d04a8b0f3aad"
        },
        "downloads": -1,
        "filename": "pyincert-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d02513ac3504dcc2453a8214507adb91",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19621,
        "upload_time": "2021-05-21T04:11:17",
        "upload_time_iso_8601": "2021-05-21T04:11:17.150120Z",
        "url": "https://files.pythonhosted.org/packages/fd/18/acf702e6550f3a206213bcd0ed62f7e4303d2ceb15ca454015814d9eaf61/pyincert-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcd9e1090bc51c28999988e78bdfb313a3eb02a71f85e698c44f175652fbec31",
          "md5": "1c96b45eb5756d45155bf899b309b038",
          "sha256": "f89e4b2dfbac61f33ee176b03b2b17d5bfa4857eebb6fae124674354dcd92206"
        },
        "downloads": -1,
        "filename": "pyincert-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1c96b45eb5756d45155bf899b309b038",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6562,
        "upload_time": "2021-05-21T04:11:18",
        "upload_time_iso_8601": "2021-05-21T04:11:18.728841Z",
        "url": "https://files.pythonhosted.org/packages/bc/d9/e1090bc51c28999988e78bdfb313a3eb02a71f85e698c44f175652fbec31/pyincert-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd18acf702e6550f3a206213bcd0ed62f7e4303d2ceb15ca454015814d9eaf61",
        "md5": "d02513ac3504dcc2453a8214507adb91",
        "sha256": "148bf483e267f522b03e2e8e46238e9ffb030cbf30012df9f8b5d04a8b0f3aad"
      },
      "downloads": -1,
      "filename": "pyincert-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d02513ac3504dcc2453a8214507adb91",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19621,
      "upload_time": "2021-05-21T04:11:17",
      "upload_time_iso_8601": "2021-05-21T04:11:17.150120Z",
      "url": "https://files.pythonhosted.org/packages/fd/18/acf702e6550f3a206213bcd0ed62f7e4303d2ceb15ca454015814d9eaf61/pyincert-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcd9e1090bc51c28999988e78bdfb313a3eb02a71f85e698c44f175652fbec31",
        "md5": "1c96b45eb5756d45155bf899b309b038",
        "sha256": "f89e4b2dfbac61f33ee176b03b2b17d5bfa4857eebb6fae124674354dcd92206"
      },
      "downloads": -1,
      "filename": "pyincert-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1c96b45eb5756d45155bf899b309b038",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6562,
      "upload_time": "2021-05-21T04:11:18",
      "upload_time_iso_8601": "2021-05-21T04:11:18.728841Z",
      "url": "https://files.pythonhosted.org/packages/bc/d9/e1090bc51c28999988e78bdfb313a3eb02a71f85e698c44f175652fbec31/pyincert-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}