{
  "info": {
    "author": "Hajime Nakagami",
    "author_email": "nakagami@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Security :: Cryptography"
    ],
    "description": "---------------\ntinytls\n---------------\n\ntinytls is a pure python TLS1.3 protocol wrapper.\n\nAs a result of learning TLS1.3, \nI wrote this as a sample implementation of TLS1.3 client.\n\nBuiltin ssl module (Python3.7+, OpenSSL1.1.1+) can use as TLS1.3 client,\nso there is no advantage to use it especially in Python 3.\n\nRestriction\n+++++++++++++++\n\n- Available TLS1.3 only, not TLS1.2 or under.\n- Support TLS_CHACHA20_POLY1305_SHA256 cipher suite only.\n- Support X25519 key exchange only.\n- It does not verify TLS certificate.\n- Not support `0-RTT`\n- Client certificate authentication is not available.\n\nSupported Python\n+++++++++++++++++++\n\n- Python2.7, 3.5+\n- MicroPython\n\nExample\n++++++++\n\nCPython\n::\n\n   import socket\n   import tinytls\n\n   hostname = \"enabled.tls13.com\"\n\n   sock = socket.create_connection((hostname, 443))\n   with tinytls.wrap_socket(sock) as ssock:\n       ssock.send(\"GET / HTTP/1.1\\r\\nHost:{}\\r\\n\\r\\n\".format(hostname).encode())\n       print(ssock.recv(4096).decode())\n\nMicroPython\n::\n\n   import usocket\n   import tinytls\n\n   hostname = \"enabled.tls13.com\"\n\n   sock = usocket.socket()\n   sock.connect(usocket.getaddrinfo(hostname, 443)[0][-1])\n\n   with tinytls.wrap_socket(sock) as ssock:\n       ssock.send(\"GET / HTTP/1.1\\r\\nHost:{}\\r\\n\\r\\n\".format(hostname).encode())\n       print(ssock.recv(4096).decode())\n\nReference\n++++++++++++++++++++\n\n- https://github.com/tex2e/mako-tls13 (special thanks!)\n- https://datatracker.ietf.org/doc/html/rfc8446\n- https://en.wikipedia.org/wiki/Salsa20#ChaCha_variant\n- https://asecuritysite.com/encryption/python_25519ecdh\n\nCheck the server\n+++++++++++++++++++++++++++++\n\nIf you cannot connect to the server with tinytls,\nuse a command like the following to check if the server can be connected\n\n::\n\n   openssl s_client -tls1_3 -ciphersuites 'TLS_CHACHA20_POLY1305_SHA256' \\\n                                -state -debug -connect enabled.tls13.com:443",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nakagami/tinytls/",
    "keywords": "TLS",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tinytls",
    "package_url": "https://pypi.org/project/tinytls/",
    "platform": null,
    "project_url": "https://pypi.org/project/tinytls/",
    "project_urls": {
      "Homepage": "https://github.com/nakagami/tinytls/"
    },
    "release_url": "https://pypi.org/project/tinytls/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "TLS1.3 protocol wrapper",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13886878,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00b9ae848c1d9cf2cb4dbf99a88b0657ca5e7e41f3dde01b1bf8ac758e20891d",
          "md5": "bdb28d20719cb9b2ba7e58539e13c66c",
          "sha256": "35e7e01a9fb5a2e462ac2b88144bedbe97e0da1e9be9653e8dc34de528af511e"
        },
        "downloads": -1,
        "filename": "tinytls-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bdb28d20719cb9b2ba7e58539e13c66c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12977,
        "upload_time": "2021-11-14T00:56:43",
        "upload_time_iso_8601": "2021-11-14T00:56:43.753225Z",
        "url": "https://files.pythonhosted.org/packages/00/b9/ae848c1d9cf2cb4dbf99a88b0657ca5e7e41f3dde01b1bf8ac758e20891d/tinytls-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50be4f0c09e8e13370eabca46dd8fbadfd56c1bcd65c98ca81c30b0f7d9cc09b",
          "md5": "74babca9dad749ee0cf4a89ac567bb79",
          "sha256": "84716b3f4bb9442dac2e7afe4d7a296b88d507b76e14aba8613dcede9df0ef11"
        },
        "downloads": -1,
        "filename": "tinytls-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "74babca9dad749ee0cf4a89ac567bb79",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12924,
        "upload_time": "2022-05-21T14:23:27",
        "upload_time_iso_8601": "2022-05-21T14:23:27.250562Z",
        "url": "https://files.pythonhosted.org/packages/50/be/4f0c09e8e13370eabca46dd8fbadfd56c1bcd65c98ca81c30b0f7d9cc09b/tinytls-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "50be4f0c09e8e13370eabca46dd8fbadfd56c1bcd65c98ca81c30b0f7d9cc09b",
        "md5": "74babca9dad749ee0cf4a89ac567bb79",
        "sha256": "84716b3f4bb9442dac2e7afe4d7a296b88d507b76e14aba8613dcede9df0ef11"
      },
      "downloads": -1,
      "filename": "tinytls-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "74babca9dad749ee0cf4a89ac567bb79",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12924,
      "upload_time": "2022-05-21T14:23:27",
      "upload_time_iso_8601": "2022-05-21T14:23:27.250562Z",
      "url": "https://files.pythonhosted.org/packages/50/be/4f0c09e8e13370eabca46dd8fbadfd56c1bcd65c98ca81c30b0f7d9cc09b/tinytls-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}