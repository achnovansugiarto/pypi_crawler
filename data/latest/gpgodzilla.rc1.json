{
  "info": {
    "author": "Yiren Zhou",
    "author_email": "yiren.chow@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# gpgodzilla - Large File Encryption with Line Modification\n\n**gpgodzilla** enables developers and data scientists to encrypt and decrypt large and structured files while modifying them using whatever custom functions/methods they want, in memory. It is specifically designed for de-tokenization + encryption of sensitive data such as account numbers and social insurance numbers, where raw data is not allowed to live on the local storage of the system. \n\n## Use Case\nThe files that can be worked with should be structured on a line-by-line basis. For example, each line has some portions that need to be modified in the same way before encryption or after decryption. \n\nOne primary example is for transferring and processing PANs. Provided is a file of customers' PANs that are tokenized. The requirement is to send the encrypted and de-tokenized PANs to the receiver. \n\nHowever, because PANs are highly sensitive, the de-tokenized/raw PANs cannot touch the local storage of the system. Hence, de-tokenization and encryption need to happen in system memory.\n\n## Requirements\nIt is essential to have *GnuPG 2* installed on the system.\n\n## Quick Start\nInstall via pip:\n\n```pip install gpgodzilla```\n\n## Basic Example\nWith the file to manipulate on the local storage, define the path to the file and the path to the processed/manipulated file. *The file to process must exist*. \n\nDefine the recipient of the encrypted file and the manipulation method for each line (ex. de-tokenization method that returns the de-tokenized line).\n\n```python\nfrom gpgodzilla import encrypt_large_file, decrypt_large_file\n\ndef tokenize_foo(line):\n    # The example tokenization\n    # replacing each \"foo\" with \"bar\" before encryption\n    line = line.replace('foo', 'bar')\n    return line\n\ndef detokenize_bar(line):\n    # The example detokenization method\n    # replacing each \"some_token\" with \"cipher\" before encryption\n    line = line.replace('bar', 'foo')\n    return line\n\n# The following code demonstrates a simple use case\n\nfile_to_encrypt = 'test.txt'  # File to manipulate and encrypt\nrecipient = 'john.doe@test.com'  # Email of the recipient (GnuPG), which must exist on the system on which the code is running\noutput_file_encrypt = 'test.pgp'   # path of the encrypted & manipulated file\noutput_file_decrypt = 'original_test.txt' # path of the decrypted file\nencrypt_large_file(recipient, file_to_encrypt, output_file_encrypt, tokenize_foo)\n\n# then, to decrypt the file and detokenize each 'bar' back to 'foo':\ndecrypt_large_file(output_file_encrypt, output_file_decrypt, detokenize_bar, PASSPHRASE)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yirzhou/gpgodzilla",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gpgodzilla",
    "package_url": "https://pypi.org/project/gpgodzilla/",
    "platform": "",
    "project_url": "https://pypi.org/project/gpgodzilla/",
    "project_urls": {
      "Homepage": "https://github.com/yirzhou/gpgodzilla"
    },
    "release_url": "https://pypi.org/project/gpgodzilla/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Modify large text file line by line and encrypt with GnuPG.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7210557,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce78f41d0a33c45735aac7f8bbae06bc7e63ffeff5695a81d072ed4b101a62b9",
          "md5": "3868677799aabfaa95364e4daec184af",
          "sha256": "77fc0dbf8804c515a6b78ec16b44a22c568ed4b59aa026b4616ec809fb440f10"
        },
        "downloads": -1,
        "filename": "gpgodzilla-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3868677799aabfaa95364e4daec184af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4292,
        "upload_time": "2020-05-10T21:18:13",
        "upload_time_iso_8601": "2020-05-10T21:18:13.561739Z",
        "url": "https://files.pythonhosted.org/packages/ce/78/f41d0a33c45735aac7f8bbae06bc7e63ffeff5695a81d072ed4b101a62b9/gpgodzilla-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23664c1eedda9036c440bb58109a68e343bd8baac53a51e6d3c6a4ea2842cc28",
          "md5": "d29481b2cbd2803c8e815c1470d1c422",
          "sha256": "0e747cbdf02a99aba0ad6c6f644543bc4c6a170e2f71556b6e15b27b259660df"
        },
        "downloads": -1,
        "filename": "gpgodzilla-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d29481b2cbd2803c8e815c1470d1c422",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4193,
        "upload_time": "2020-05-10T21:18:15",
        "upload_time_iso_8601": "2020-05-10T21:18:15.891344Z",
        "url": "https://files.pythonhosted.org/packages/23/66/4c1eedda9036c440bb58109a68e343bd8baac53a51e6d3c6a4ea2842cc28/gpgodzilla-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce78f41d0a33c45735aac7f8bbae06bc7e63ffeff5695a81d072ed4b101a62b9",
        "md5": "3868677799aabfaa95364e4daec184af",
        "sha256": "77fc0dbf8804c515a6b78ec16b44a22c568ed4b59aa026b4616ec809fb440f10"
      },
      "downloads": -1,
      "filename": "gpgodzilla-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3868677799aabfaa95364e4daec184af",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4292,
      "upload_time": "2020-05-10T21:18:13",
      "upload_time_iso_8601": "2020-05-10T21:18:13.561739Z",
      "url": "https://files.pythonhosted.org/packages/ce/78/f41d0a33c45735aac7f8bbae06bc7e63ffeff5695a81d072ed4b101a62b9/gpgodzilla-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23664c1eedda9036c440bb58109a68e343bd8baac53a51e6d3c6a4ea2842cc28",
        "md5": "d29481b2cbd2803c8e815c1470d1c422",
        "sha256": "0e747cbdf02a99aba0ad6c6f644543bc4c6a170e2f71556b6e15b27b259660df"
      },
      "downloads": -1,
      "filename": "gpgodzilla-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d29481b2cbd2803c8e815c1470d1c422",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4193,
      "upload_time": "2020-05-10T21:18:15",
      "upload_time_iso_8601": "2020-05-10T21:18:15.891344Z",
      "url": "https://files.pythonhosted.org/packages/23/66/4c1eedda9036c440bb58109a68e343bd8baac53a51e6d3c6a4ea2842cc28/gpgodzilla-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}