{
  "info": {
    "author": "",
    "author_email": "Sasan Barak <s.barak@soton.ac.uk>, Amirabbas Asadi <amir137825@gmail.com>, Mohammad Joshaghani <mjoshaghani10@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MetaTS | Meta-Learning for Global Time Series Forecasting\n![example workflow](https://github.com/amirabbasasadi/metats/actions/workflows/main.yml/badge.svg)\n[![PyPI version fury.io](https://badge.fury.io/py/metats.svg)](https://pypi.python.org/pypi/metats/)\n[![made-with-python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)\n[![GitHub license](https://img.shields.io/github/license/amirabbasasadi/metats.svg)](https://github.com/amirabbasasadi/metats/blob/master/LICENSE)\n![image](https://user-images.githubusercontent.com/8543469/176514410-bf8efea2-fb54-4903-a0ee-169c9595958a.png)\n\n## Features:\n- Generating meta features\n    - Statistical features : TsFresh, User defined features\n    - Automated feature extraction using Deep Unsupervised Learning : Deep AutoEncoder (MLP, LSTM, GRU, ot custom model)\n- Supporting sktime and darts libraries for base-forecasters\n- Providing a Meta-Learning pipeline\n\n## Quick Start\n\n### Installing the package\n```\npip install metats\n```\n\n### Generating a toy dataset by sampling from two different processes\n```python\nfrom metats.datasets import ETSDataset\n\nets_generator = ETSDataset({'A,N,N': 512,\n                            'M,M,M': 512}, length=30, freq=4)\n\ndata, labels = ets_generator.load(return_family=True)\ncolors = list(map(lambda x: (x=='A,N,N')*1, labels))\n```\n\n### Normalizing the time series\n```python\nfrom sklearn.preprocessing import StandardScaler\n\nscaled_data = StandardScaler().fit_transform(data.T)\ndata = scaled_data.T[:, :, None]\n```\n### Checking How data looks like\n```python\nimport matplotlib.pyplot as plt\n_ = plt.plot(data[10, :, 0])\n```\n![image](https://user-images.githubusercontent.com/8543469/176520933-64be6613-c64b-4a6c-baa7-d1c0ca13a7b2.png)\n\n### Generating the meta-features\n#### Statistical features using TsFresh\n```python\nfrom metats.features.statistical import TsFresh\n\nstat_features = TsFresh().transform(data)\n```\n#### Deep Unsupervised Features\n##### Training an AutoEncoder\n```python\nfrom metats.features.unsupervised import DeepAutoEncoder\nfrom metats.features.deep import AutoEncoder, MLPEncoder, MLPDecoder\n\nenc = MLPEncoder(input_size=1, input_length=30, latent_size=8, hidden_layers=(16,))\ndec = MLPDecoder(input_size=1, input_length=30, latent_size=8, hidden_layers=(16,))\n\nae = AutoEncoder(encoder=enc, decoder=dec)\nae_feature = DeepAutoEncoder(auto_encoder=ae, epochs=150, verbose=True)\n\nae_feature.fit(data)\n```\n##### Generating features using the auto-encoder\n```python\ndeep_features = ae_feature.transform(data)\n```\n\n#### Visualizing both statistical and deep meta-features\nDimensionality reduction using UMAP for visualization\n```python\nfrom umap import UMAP\ndeep_reduced = UMAP().fit_transform(deep_features)\nstat_reduced = UMAP().fit_transform(stat_features)\n```\nVisualizing the statistical features:\n```python\nplt.scatter(stat_reduced[:512, 0], stat_reduced[:512, 1], c='#e74c3c', label='ANN')\nplt.scatter(stat_reduced[512:, 0], stat_reduced[512:, 1], c='#9b59b6', label='MMM')\nplt.legend()\nplt.title('TsFresh Meta-Features')\n_ = plt.show()\n```\nAnd similarly the auto encoder's features\n```python\nplt.scatter(deep_reduced[:512, 0], deep_reduced[:512, 1], c='#e74c3c', label='ANN')\nplt.scatter(deep_reduced[512:, 0], deep_reduced[512:, 1], c='#9b59b6', label='MMM')\nplt.legend()\nplt.title('Deep Unsupervised Meta-Features')\n_ = plt.show()\n```\n![image](https://user-images.githubusercontent.com/8543469/176526565-e26cbd0c-2b20-4848-995e-e12632bde8e3.png)\n![image](https://user-images.githubusercontent.com/8543469/176526711-989e1ac3-2af8-4d27-a90d-ea6007594f36.png)\n\n\n\n## Meta-Learning Pipeline\nCreating a meta-learning pipeline with selection strategy:\n```python\nfrom metats.pipeline import MetaLearning\n\npipeline = MetaLearning(method='selection', loss='mse')\n```\nAdding AutoEncoder features:\n```python\nfrom metats.features.unsupervised import DeepAutoEncoder\nfrom metats.features.deep import AutoEncoder, MLPEncoder, MLPDecoder\n\nenc = MLPEncoder(input_size=1, input_length=23, latent_size=8, hidden_layers=(16,))\ndec = MLPDecoder(input_size=1, input_length=23, latent_size=8, hidden_layers=(16,))\n\nae = AutoEncoder(encoder=enc, decoder=dec)\nae_features = DeepAutoEncoder(auto_encoder=ae, epochs=200, verbose=True)\n\npipeline.add_feature(ae_features)\n```\nYou can add as many features as you like:\n```python\nfrom metats.features.statistical import TsFresh\n\nstat_features = TsFresh()\npipeline.add_feature(stat_features)\n```\nAdding two sktime forecaster as base-forecasters\n```python\nfrom sktime.forecasting.naive import NaiveForecaster\nfrom sktime.forecasting.compose import make_reduction\nfrom sklearn.neighbors import KNeighborsRegressor\n\nregressor = KNeighborsRegressor(n_neighbors=1)\nforecaster1 = make_reduction(regressor, window_length=15, strategy=\"recursive\")\n\nforecaster2 = NaiveForecaster() \n\npipeline.add_forecaster(forecaster1)\npipeline.add_forecaster(forecaster2)\n```\nSpecify some meta-learner\n```python\nfrom sklearn.ensemble import RandomForestClassifier\n\npipeline.add_metalearner(RandomForestClassifier())\n```\n\nTraining the pipeline\n```python\npipeline.fit(data, fh=7)\n```\nPrediction for another set of data\n```python\npipeline.predict(data, fh=7)\n```\n\n## About the package\n### Contributors\n- Sasan Barak\n- Amirabbas Asadi\n\n\nWe wish to see your name in the list of contributors, So we are waiting for pull requests!\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "timeseries,metalearning,forecasting,unsupervised learning,deeplearning,machine learning",
    "license": "MIT License  Copyright (c) 2021 Amirabbas Asadi  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metats",
    "package_url": "https://pypi.org/project/metats/",
    "platform": null,
    "project_url": "https://pypi.org/project/metats/",
    "project_urls": {
      "Homepage": "https://drsasanbarak.github.io/metats/"
    },
    "release_url": "https://pypi.org/project/metats/0.2.1/",
    "requires_dist": [
      "torch (>=1.12.1)",
      "umap-learn (>=0.5.3)",
      "darts (>=0.20.0)",
      "lightgbm (>=3.2.1)",
      "matplotlib (>=3.4.2)",
      "numba (>=0.55.1)",
      "numpy (==1.23.5)",
      "pandas (>=1.2.4)",
      "pbr (>=5.11.1)",
      "pdoc (>=12.0.2)",
      "scikit-learn (>=1.0.2)",
      "scipy (>=1.6.3)",
      "seaborn (>=0.11.1)",
      "shap (>=0.40.0)",
      "sktime (>=0.10.0)",
      "tqdm (>=4.60.0)",
      "tsfresh (==0.19.0)",
      "statsforecast (>=1.5.0)",
      "pytest ; extra == 'dev'",
      "pdoc ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Meta-Learning for Time Series Forecasting",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17507932,
  "releases": {
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51c8221c60a3affc00cb51b02a54b766c0149f71322cfc7232f83c12a0558603",
          "md5": "9e428bfcb76b44c79ae89112cda89971",
          "sha256": "2586d9a227a0fe8d39d580fbfcca195e583daa39247d750d4f8ce3b44e557198"
        },
        "downloads": -1,
        "filename": "metats-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e428bfcb76b44c79ae89112cda89971",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14822,
        "upload_time": "2022-06-29T20:48:12",
        "upload_time_iso_8601": "2022-06-29T20:48:12.916360Z",
        "url": "https://files.pythonhosted.org/packages/51/c8/221c60a3affc00cb51b02a54b766c0149f71322cfc7232f83c12a0558603/metats-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f2bd06b0e7b2922630253aa8922bf362ea8efd65609113252c782b55df4046a",
          "md5": "087395a441d0a382618056900df74e78",
          "sha256": "75e0ed9a2e8aa20a6b972151ad14f035bf332745fc44fb6871653a38daabbaa5"
        },
        "downloads": -1,
        "filename": "metats-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "087395a441d0a382618056900df74e78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13697,
        "upload_time": "2022-06-29T20:48:16",
        "upload_time_iso_8601": "2022-06-29T20:48:16.022187Z",
        "url": "https://files.pythonhosted.org/packages/7f/2b/d06b0e7b2922630253aa8922bf362ea8efd65609113252c782b55df4046a/metats-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8dc06b00fb4e27003cd0b2770122bc8e2f6f7ba0bc58cb82b04ca0d6f91c4bed",
          "md5": "353e5d702189827419df21c75a242294",
          "sha256": "b2f4311dd84456603ae3deb222db5988306f73b3c4c8cee536b525040be04202"
        },
        "downloads": -1,
        "filename": "metats-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "353e5d702189827419df21c75a242294",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16649,
        "upload_time": "2023-03-30T09:33:43",
        "upload_time_iso_8601": "2023-03-30T09:33:43.643977Z",
        "url": "https://files.pythonhosted.org/packages/8d/c0/6b00fb4e27003cd0b2770122bc8e2f6f7ba0bc58cb82b04ca0d6f91c4bed/metats-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc0918bf64fd78ab5ac5be95e39b5a6686cc7dc7b95ae6bb50a8bf046eb9d6bf",
          "md5": "8410a181eaa15cfbe7a93d92753a6259",
          "sha256": "edfee59f7d915727fd348c9ee98f195398b6f13a4e0f5d562a89862eb5de82d7"
        },
        "downloads": -1,
        "filename": "metats-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8410a181eaa15cfbe7a93d92753a6259",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16906,
        "upload_time": "2023-03-30T09:33:47",
        "upload_time_iso_8601": "2023-03-30T09:33:47.436691Z",
        "url": "https://files.pythonhosted.org/packages/dc/09/18bf64fd78ab5ac5be95e39b5a6686cc7dc7b95ae6bb50a8bf046eb9d6bf/metats-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca4167430b8b854556a07199f06b7bc444a9f782c9f015c660d6c7dc20071cd4",
          "md5": "cd87eb75b3858794e834e98dcaa29543",
          "sha256": "db2124dcc6034a3d682469b4106750de926ae1066025dbef3576394cfd0915ce"
        },
        "downloads": -1,
        "filename": "metats-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd87eb75b3858794e834e98dcaa29543",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16653,
        "upload_time": "2023-03-30T09:33:45",
        "upload_time_iso_8601": "2023-03-30T09:33:45.581828Z",
        "url": "https://files.pythonhosted.org/packages/ca/41/67430b8b854556a07199f06b7bc444a9f782c9f015c660d6c7dc20071cd4/metats-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df834c9d15851cc5d10d90136a9aa691212cc1fd5dd8dc7840b56ccce58762f0",
          "md5": "120ddafd18251e6dbc172b7b74d97bc9",
          "sha256": "941cc8245be1b5599cd91a2ae5bf88db19a075a0b223387ee8c46c9325b6d27c"
        },
        "downloads": -1,
        "filename": "metats-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "120ddafd18251e6dbc172b7b74d97bc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16896,
        "upload_time": "2023-03-30T09:33:50",
        "upload_time_iso_8601": "2023-03-30T09:33:50.286195Z",
        "url": "https://files.pythonhosted.org/packages/df/83/4c9d15851cc5d10d90136a9aa691212cc1fd5dd8dc7840b56ccce58762f0/metats-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca4167430b8b854556a07199f06b7bc444a9f782c9f015c660d6c7dc20071cd4",
        "md5": "cd87eb75b3858794e834e98dcaa29543",
        "sha256": "db2124dcc6034a3d682469b4106750de926ae1066025dbef3576394cfd0915ce"
      },
      "downloads": -1,
      "filename": "metats-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cd87eb75b3858794e834e98dcaa29543",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16653,
      "upload_time": "2023-03-30T09:33:45",
      "upload_time_iso_8601": "2023-03-30T09:33:45.581828Z",
      "url": "https://files.pythonhosted.org/packages/ca/41/67430b8b854556a07199f06b7bc444a9f782c9f015c660d6c7dc20071cd4/metats-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df834c9d15851cc5d10d90136a9aa691212cc1fd5dd8dc7840b56ccce58762f0",
        "md5": "120ddafd18251e6dbc172b7b74d97bc9",
        "sha256": "941cc8245be1b5599cd91a2ae5bf88db19a075a0b223387ee8c46c9325b6d27c"
      },
      "downloads": -1,
      "filename": "metats-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "120ddafd18251e6dbc172b7b74d97bc9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16896,
      "upload_time": "2023-03-30T09:33:50",
      "upload_time_iso_8601": "2023-03-30T09:33:50.286195Z",
      "url": "https://files.pythonhosted.org/packages/df/83/4c9d15851cc5d10d90136a9aa691212cc1fd5dd8dc7840b56ccce58762f0/metats-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}