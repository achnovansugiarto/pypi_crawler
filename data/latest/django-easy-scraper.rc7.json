{
  "info": {
    "author": "dearopen",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Django Easy Scraper\n\nAn standalone django app that can be used/intigrated with both django and no-django application easily. the scraping mechanism is  on `Regular Expression` and `xpath` which is mean you can use what you are familiar with very easily.\n\nIt requires to install python `requests` modules\n\n\n## Install\n\n`pip install django-easy-scraper`\n\n## Basic Uses\n\nif you use regex:\n```\nfrom django_easy_scraper import scraper\n\nclass ScrapeExampleDotCom(scraper.Scraper):\n\n    regex_fields = {\n        'price': \"Write Your Regex pattern for price here\",\n        'title': \"Write your regex pattern for title here\",\n        # Like above way you can add as much fields/keys as you want\n    }\n\n```\n\nif you use xpath:\n\n```\nfrom django_easy_scraper import scraper\n\nclass ScrapeExampleDotCom(scraper.Scraper):\n\n    xpath_fields = {\n        'price': \"Write Your xpath pattern for price here\",\n        'title': \"Write your xpath pattern for title here\",\n        # Like above way you can add as much fields/keys as you want\n    }\n\n```\n\n\n### Scrape now\n```\nurl = 'www.example.com/bla-bla-details-page/\ndata = ScrapeExampleDotCom.regex_url_scraper(url)\n\nprint(data)\n```\nand the response should look like this if your regex pattern are correct:\n```\n{\n    'price': 4,\n    'title': 'an scraped title',\n}\n```\n\n`regex_url_scraper` method always gives you json response,\n\nSo if you add many regex pattern in `regex_fields`, it will give you response that number of dictionary key with result that you added in that dictionary.\n\n\n# Multiple Sites Scraping together\n\nYou don't need to call different method for different site all the time !! Just call once and scrape all, something fun, right?\n\n### Like you are gonna scrape three sites:\n> www.example.com\n\n> www.exampletwo.com\n\n> www.examplethree.com\n\n\n\nBut how will those site product scrape automatically, it scares you ? \n\n- Wirte Regex pattern for all above site with the fields that you want to scrape:\n\n\n```\nfrom django_easy_scraper import scraper\n\nclass ScrapeExampleDotCom(scraper.Scraper):\n    regex_fields = {\n        'price': \"Write Your Regex pattern for price here\",\n        'title': \"Write your regex pattern for title here\",\n        # Like above way you can add as much fields/keys as you want\n    }\n\nclass ScrapeExampleTwo(scraper.Scraper):\n    regex_fields = {\n        'price': \"Write Your Regex pattern for price here\",\n        'title': \"Write your regex pattern for title here\",\n        # Like above way you can add as much fields/keys as you want\n    }\n\nclass ScrapeExampleThree(scraper.Scraper):\n    regex_fields = {\n        'price': \"Write Your Regex pattern for price here\",\n        'title': \"Write your regex pattern for title here\",\n        # Like above way you can add as much fields/keys as you want\n    }\n\n\n```\n\n\nYou have written regular expression for you all the site you are gonna scrape,\n\nNow it's time use our `Switch` class that will route your script/class based on the site you are gonna scrape? Cool, right ? !!\n\nIt's where the magic really begins:\n\nJust place all your class in the dictionary `switcher`.\n\n\n> Important Note:\n\n`key` name should be domain name, pure domain name, no www or http or slash, dont add anything prefix/suffix\n`value` should be the class of that domain you have written for and place it's method `regex_url_scraper\n\n```\nfrom django_easy_scraper import switch\n\nclass Switch(switch.BaseSwitch):\n    switcher = {\n        'example.com': ScrapeExampleDotCom.regex_url_scraper,\n        'exampletwo.com': ScrapeExampleTwo.regex_url_scraper,\n        'examplethree.com': ScrapeExampleThree.regex_url_scraper,\n    }\n\n```\n\n> If you use xpath, you have pass `xpath_scraper` instead of `regex_url_scraper`\n\nSo you have done routing your script/class based on the url it gets.\n\n### Get response data as python dictionary like above site:\n\n```\nurl = 'Any of site you have written class for the site and added in switch class'\n\nresponse = Switch.get_data(url=url, raise_exception=False)\n\nprint(response) # Will give you an object of data that you trying to scrape\n\n```\n\nSwitch class is giving you facilities to route your scraping class automacally based whatever site link pass to it's `get_data` method.\n\n`get_data` method's `raise_exception` is it handle if you want to raise excepiton when your expected fields not found\n\n\n### Got an issue ?\nPlease open an issue on our github repo: https://github.com/dearopen/django-easy-scraper\n\nDon't forget to star to this project if you like this.\n\nHappy Scraping !!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dearopen/django-easy-scraper",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-easy-scraper",
    "package_url": "https://pypi.org/project/django-easy-scraper/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-easy-scraper/",
    "project_urls": {
      "Homepage": "https://github.com/dearopen/django-easy-scraper"
    },
    "release_url": "https://pypi.org/project/django-easy-scraper/1.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Dango app to scrape web page",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8730795,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a9812e2ef28c0ade9e319b871cf021cc7f12aa6a62c1d103fb1ff3496322945",
          "md5": "9c3bd0cc181e0be7919e5e5b98190db6",
          "sha256": "d200695e020f8dca826c671f7c4d4f86116bb2d152b5f8ec97ba31a6d2a1512a"
        },
        "downloads": -1,
        "filename": "django-easy-scraper-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9c3bd0cc181e0be7919e5e5b98190db6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2969,
        "upload_time": "2020-11-17T08:29:30",
        "upload_time_iso_8601": "2020-11-17T08:29:30.980100Z",
        "url": "https://files.pythonhosted.org/packages/0a/98/12e2ef28c0ade9e319b871cf021cc7f12aa6a62c1d103fb1ff3496322945/django-easy-scraper-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8e00e8ca2fb74ef876004a68522fc56c10a84d1d7e647f12c1254fc735200ba",
          "md5": "7df21050d4fcd1d9fb8090687b6b35a9",
          "sha256": "cb5afcef79614c803c7f8cae11b141a96d674f36284c45fc28b94680f508f1c1"
        },
        "downloads": -1,
        "filename": "django-easy-scraper-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7df21050d4fcd1d9fb8090687b6b35a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3049,
        "upload_time": "2020-11-17T08:35:23",
        "upload_time_iso_8601": "2020-11-17T08:35:23.279513Z",
        "url": "https://files.pythonhosted.org/packages/e8/e0/0e8ca2fb74ef876004a68522fc56c10a84d1d7e647f12c1254fc735200ba/django-easy-scraper-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d376c3a76141267850bfaed826fcd9bf92677aa8bf20c7e723d2e54ebcc8617f",
          "md5": "68a00476643d6e9765f1a24606527a82",
          "sha256": "1b122305bacdc929fd8bba2597e0c3b6c170021eb760508ee62493fc55e0d15d"
        },
        "downloads": -1,
        "filename": "django-easy-scraper-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "68a00476643d6e9765f1a24606527a82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3061,
        "upload_time": "2020-11-17T12:31:24",
        "upload_time_iso_8601": "2020-11-17T12:31:24.038002Z",
        "url": "https://files.pythonhosted.org/packages/d3/76/c3a76141267850bfaed826fcd9bf92677aa8bf20c7e723d2e54ebcc8617f/django-easy-scraper-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14d0d5975871f312aa7d0c14ecfc23e6d1be26ea8867c3d017d57d54785e9db5",
          "md5": "68feb91feff3afcd528c2b915f1669eb",
          "sha256": "6c796ffcdfb6fee775480a76c4fef5e2524ad44971d7f78ef1c56251b4c152c2"
        },
        "downloads": -1,
        "filename": "django-easy-scraper-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "68feb91feff3afcd528c2b915f1669eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4560,
        "upload_time": "2020-11-21T21:59:12",
        "upload_time_iso_8601": "2020-11-21T21:59:12.037593Z",
        "url": "https://files.pythonhosted.org/packages/14/d0/d5975871f312aa7d0c14ecfc23e6d1be26ea8867c3d017d57d54785e9db5/django-easy-scraper-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cc45bed585ebd7b9ce0226e11d034c1abf813518d6632d345295914b0d85458",
          "md5": "e415165ff9929beed8c2b025bfa39b14",
          "sha256": "fb92520e35bea4e9ddb0e4872146b31ece5bc8d821b5f0d6b7e6cb427b6849a1"
        },
        "downloads": -1,
        "filename": "django-easy-scraper-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e415165ff9929beed8c2b025bfa39b14",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4556,
        "upload_time": "2020-11-22T11:57:37",
        "upload_time_iso_8601": "2020-11-22T11:57:37.342579Z",
        "url": "https://files.pythonhosted.org/packages/3c/c4/5bed585ebd7b9ce0226e11d034c1abf813518d6632d345295914b0d85458/django-easy-scraper-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e11bf90f16ea4905c446e6c788382bb5509dda68aea305b1e0211f77f56f6f59",
          "md5": "74ce8264b875bc4b978282b83b4905a2",
          "sha256": "8a959c1c696e11b31acdb18f553ce757c17d87f28795e3f84942cfed1ab80f7c"
        },
        "downloads": -1,
        "filename": "django-easy-scraper-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "74ce8264b875bc4b978282b83b4905a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4764,
        "upload_time": "2020-11-23T18:31:18",
        "upload_time_iso_8601": "2020-11-23T18:31:18.459259Z",
        "url": "https://files.pythonhosted.org/packages/e1/1b/f90f16ea4905c446e6c788382bb5509dda68aea305b1e0211f77f56f6f59/django-easy-scraper-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "531a467ae71ba678f62a254bdf6168d44e38543bbd7a1a58463ec93f60b368c9",
          "md5": "8a6adf69de0ead631535107eccc4bd2a",
          "sha256": "7ab00381aec34073cc5ca135f0680e77f400bfbf94b400e75307aac197a10bef"
        },
        "downloads": -1,
        "filename": "django-easy-scraper-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "8a6adf69de0ead631535107eccc4bd2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4824,
        "upload_time": "2020-11-23T19:06:02",
        "upload_time_iso_8601": "2020-11-23T19:06:02.997022Z",
        "url": "https://files.pythonhosted.org/packages/53/1a/467ae71ba678f62a254bdf6168d44e38543bbd7a1a58463ec93f60b368c9/django-easy-scraper-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "531a467ae71ba678f62a254bdf6168d44e38543bbd7a1a58463ec93f60b368c9",
        "md5": "8a6adf69de0ead631535107eccc4bd2a",
        "sha256": "7ab00381aec34073cc5ca135f0680e77f400bfbf94b400e75307aac197a10bef"
      },
      "downloads": -1,
      "filename": "django-easy-scraper-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "8a6adf69de0ead631535107eccc4bd2a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4824,
      "upload_time": "2020-11-23T19:06:02",
      "upload_time_iso_8601": "2020-11-23T19:06:02.997022Z",
      "url": "https://files.pythonhosted.org/packages/53/1a/467ae71ba678f62a254bdf6168d44e38543bbd7a1a58463ec93f60b368c9/django-easy-scraper-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}