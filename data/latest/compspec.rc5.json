{
  "info": {
    "author": "Vanessa Sochat",
    "author_email": "vsoch@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Operating System :: Unix",
      "Programming Language :: C",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.3",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "# Compspec Python\n\n<p align=\"center\">\n  <img height=\"300\" src=\"https://raw.githubusercontent.com/compspec/spec/main/img/compspec-circle.png\">\n</p>\n\nA compspec (Composition spec) is a specification and model for comparing things. This means\nthat we take an abstract and simple approach to model complex systems as graphs (nodes\nand relaionshps) and then can compare between graphs or extract corpora (groups of facts) to use later. \nCompspec python, the implementation here, is intended to provide a basic Python \nfor using compspec for your own needs.\n\n - [The Spec](https://github.com/compspec/spec): read about the background, concepts, and design of the specification.\n\nConceptually, for a:\n\n - Diff: we will create two graphs and subtract one from the other\n - Composition: we will create one graph and display it\n \n\nAnd the neat thing about this approach is that we can take a larger graph and break\nit into smaller graphs, and test smaller graphs until we hit a result that suggests an incompatibility,\nand stop. Given you are using subgraphs, it means that for some problem space we won't\nget a listing of all the incompatible nodes, but we can be fairly sure that the combination\nwon't work because 1 incompatibility or difference is too much. Of course this design\nand how the graphs are presented and tested can be tweaked for any particular problem space.\n  \n**under development**\n\n## Usage\n\nThe core client here is intended to be used as an API, meaning you can derive\nfacts and relations and then run a model. It is intended for higher level libraries\nto use this module for custom command line parsing of specific domain-oriented entities.\n\n### Install\n\nYou can install locally\n\n```bash\n$ git clone git@github.com:compspec/compspec.git\n$ cd compspec\n$ pip install -e .\n```\n\nor from pypi:\n\n```bash\n$ pip install compspec\n```\n\n### Examples\n\nFor full examples, try running the scripts under [examples](examples) after you install\ncompspec. More complex examples (with DWARF, etc) are coming soon.\n\n - [Creating a basic graph](examples/basic-graph/run.py): (a composition)\n - [Calculating a Diff](examples/basic-diff/run.py): (a difference between two compositions)\n - [Combining Graphs](examples/combine-graphs/run.py)\n - [Calculating a DWARF diff](examples/dwarf): a set of more real world examples\n\n```bash\n$ python examples/basic-graph/run.py\n$ python examples/basic-diff/run.py\n$ python examples/combine-graphs/run.py\n```\nWe also have an example that takes an iterative approach to compare groups:\n\n```bash\n$ python examples/python/tensorflow-module-example.py\n$ python examples/python/tensorflow-function-example.py\n$ python examples/python/tensorflow-example.py\n```\nThat example is best if you are interested in breaking a problem space into\nmultiple graphs.\n\n\n### Additional Functionality\n\nGiven that you have a graph:\n\n```python\nA = Graph()\nfor node_id, name, value in [\n    [\"id0\", \"func\", \"goodbye_world\"],\n    [\"id1\", \"func\", \"hello_world\"],\n    [\"id3\", \"parameter\", \"name\"],\n    [\"id4\", \"default\", \"Squidward\"],\n]:\n    A.new_node(name, value, node_id)\n\nfor fromid, relation, toid in [\n    [\"id1\", \"has\", \"id3\"],\n    [\"id3\", \"has\", \"id4\"],\n    [\"id3\", \"has\", \"id5\"],\n    [\"id1\", \"has\", \"id6\"],\n    [\"id6\", \"has\", \"id7\"],\n]:\n    A.new_relation(fromid, toid, relation)\n```\n\nYou can convert it to a dictionary:\n\n```python\nobj = A.to_dict()\n```\n\nAnd given that loaded (e.g., from json), we can then populate a new graph!\n\n```python\ng = Graph.from_dict(obj)\n```\n\nThese are very simple operations to define graphs, and primarily the work is done\nmanually to create the nodes, relations, and identifiers. It is expected that specific\ndomains that intend to create graphs will load in some object (e.g., a binary file) and \ndo this creation on behalf of the user.\n\n## TODO\n\n- better structure tests/ example ABI cases\n- create compspec.yaml where we can explicitly define kinds of ABI breaks?\n- look into Go library?\n- we need to be able to print out the result (based on graph relationships)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/compspec/compspec",
    "keywords": "diff,comparison,composition,specification,abi,compatibility,symbols",
    "license": "LICENSE",
    "maintainer": "Vanessa Sochat",
    "maintainer_email": "",
    "name": "compspec",
    "package_url": "https://pypi.org/project/compspec/",
    "platform": null,
    "project_url": "https://pypi.org/project/compspec/",
    "project_urls": {
      "Homepage": "https://github.com/compspec/compspec"
    },
    "release_url": "https://pypi.org/project/compspec/0.0.14/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Specification and model for describing and comparing things.",
    "version": "0.0.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13914674,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "463e053fe555f0a5659098427ee67f4024039fb162c97369eac9cac076e3bc76",
          "md5": "fde27f822e0457fa8ea2df039a5f8dfb",
          "sha256": "2574c0ba1e59da47197af8c9e9df077c6223672dea9d7f59b2abd6e5bf5fdab9"
        },
        "downloads": -1,
        "filename": "compspec-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fde27f822e0457fa8ea2df039a5f8dfb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19087,
        "upload_time": "2022-05-09T23:16:26",
        "upload_time_iso_8601": "2022-05-09T23:16:26.239504Z",
        "url": "https://files.pythonhosted.org/packages/46/3e/053fe555f0a5659098427ee67f4024039fb162c97369eac9cac076e3bc76/compspec-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fadcda4d4ab490743c29209068083f904cd7531918d85fdaf9bd1e683960977",
          "md5": "65f295b04646368bdc36cc3e78b048d5",
          "sha256": "c8b9e08ed1e1bbb212c107eb109ed8a50d6c2147b1610507f23ff7142ca6b25a"
        },
        "downloads": -1,
        "filename": "compspec-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "65f295b04646368bdc36cc3e78b048d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19145,
        "upload_time": "2022-05-10T00:15:55",
        "upload_time_iso_8601": "2022-05-10T00:15:55.158809Z",
        "url": "https://files.pythonhosted.org/packages/0f/ad/cda4d4ab490743c29209068083f904cd7531918d85fdaf9bd1e683960977/compspec-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a99f776709d6e1b7924111857473d7ddd20a83d79cbfdf8510ebb42a8899076e",
          "md5": "1598eb0a8199d8064d42d9c71d9b9b1e",
          "sha256": "a74c8e2ac57df68415c7b84f69203e557cc988c4dffffe51e00b671bfadd30fb"
        },
        "downloads": -1,
        "filename": "compspec-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "1598eb0a8199d8064d42d9c71d9b9b1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20576,
        "upload_time": "2022-05-11T02:25:42",
        "upload_time_iso_8601": "2022-05-11T02:25:42.979168Z",
        "url": "https://files.pythonhosted.org/packages/a9/9f/776709d6e1b7924111857473d7ddd20a83d79cbfdf8510ebb42a8899076e/compspec-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da1ac2342bf4bbaeaa6d11a68908b6ec28db3672e8003fd64e8cb6c3038c8c5d",
          "md5": "76042f4a0b33e3ae2a662a4afa5bb8f5",
          "sha256": "919eb39a713060dc131c88e11c8cc3970af1a8c9f79c419092c0fe840de333f0"
        },
        "downloads": -1,
        "filename": "compspec-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "76042f4a0b33e3ae2a662a4afa5bb8f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21581,
        "upload_time": "2022-05-11T06:46:28",
        "upload_time_iso_8601": "2022-05-11T06:46:28.041432Z",
        "url": "https://files.pythonhosted.org/packages/da/1a/c2342bf4bbaeaa6d11a68908b6ec28db3672e8003fd64e8cb6c3038c8c5d/compspec-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "097271f6219db5c24915fedf3e9e4ea2a484800236707e82cf2720af7a13c62c",
          "md5": "fbe240311f841315b015b3e7c0fd7a55",
          "sha256": "09e998b9cd51d879ca941771175557453b1c8c6bab4b44e933b5da491a1f506c"
        },
        "downloads": -1,
        "filename": "compspec-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "fbe240311f841315b015b3e7c0fd7a55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22160,
        "upload_time": "2022-05-23T23:53:56",
        "upload_time_iso_8601": "2022-05-23T23:53:56.724474Z",
        "url": "https://files.pythonhosted.org/packages/09/72/71f6219db5c24915fedf3e9e4ea2a484800236707e82cf2720af7a13c62c/compspec-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "097271f6219db5c24915fedf3e9e4ea2a484800236707e82cf2720af7a13c62c",
        "md5": "fbe240311f841315b015b3e7c0fd7a55",
        "sha256": "09e998b9cd51d879ca941771175557453b1c8c6bab4b44e933b5da491a1f506c"
      },
      "downloads": -1,
      "filename": "compspec-0.0.14.tar.gz",
      "has_sig": false,
      "md5_digest": "fbe240311f841315b015b3e7c0fd7a55",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22160,
      "upload_time": "2022-05-23T23:53:56",
      "upload_time_iso_8601": "2022-05-23T23:53:56.724474Z",
      "url": "https://files.pythonhosted.org/packages/09/72/71f6219db5c24915fedf3e9e4ea2a484800236707e82cf2720af7a13c62c/compspec-0.0.14.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}