{
  "info": {
    "author": "Chad Nelson",
    "author_email": "Chad Nelson <chadbnelson@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![Build status](https://github.com/bibliotechy/dpyla/actions/workflows/python.yaml/badge.svg)\n\n# DPyLA - A Python client for the DPLA API\n#### under active development! \n\n[The DPLA](http://dp.la) (Digital Public Library of America) is an aggregated\ndigital library, archive and museum collections. What really makes it stand\nout is its awesome API. This python library is a wrapper around that API,\nmaking it easier to interact with.\n\nTested and working with Python 3.7, 3.8, 3.9, 3.10.\n\n### Dependencies\nDepends on the awesome [Requests package](http://www.python-requests.org/en/latest/)\n\n####Getting started\n\nFirst, install the module:\n\n```bash\npip install dpla\n```\n\nThen fire up your fave python interpreter and:\n\n```python\n>>> from dpla.api import DPLA\n```\n\nThen create the dpla object with your DPLA API key.\n\n```python\n>>> dpla = DPLA('your-key-here')\n```\n\nIf you don't have a DPLA API key yet, you can\n[follow their instructions](http://dp.la/info/developers/codex/policies/#get-a-key)\nor simply run the following:\n\n```python\n>>> DPLA.new_key(\"your.email.address@here.com\")\n```\n\nAnd then check your email.\n\n\nNow, let's create your first search:\n\n```python\n>>> result = dpla.search('chicken')\n```\n\nRecords returned are in `result.items`:\n\n```python\n>>> result.items[0] #gets you a multidimensional dictionary of the first result. Much omitted below for brevity.\n{u'@context': {u'@vocab': u'http://purl.org/dc/terms/',\n # ...\n u'@id': u'http://dp.la/api/items/bc944ed8339050bbbcf25f3838895a03',\n u'_id': u'kentucky--http://kdl.kyvl.org/catalog/xt7sf7664q86_1755_1',\n # ...\n u'hasView': {u'@id': u'http://nyx.uky.edu/dips/xt7sf7664q86/data/1/016_0006_p/016_0006/016_0006.jpg'},\n # ...\n u'sourceResource': {u'collection': [],\n  u'creator': u'University of Kentucky',\n  u'language': [{u'iso639_3': u'eng', u'name': u'English'}],\n  u'stateLocatedIn': [{u'name': u'University of Kentucky'}],\n  u'subject': [{u'name': u'Agriculture-United States'},\n   {u'name': u'Animal Culture-United States'},\n   {u'name': u'Photographs of animals'},\n   {u'name': u'Photographs of livestock'}],\n  u'title': u'Chicken'}}\n```\n\nYou can also find out how many records were found matching that criteria:\n\n```python\n>>> result.count # \n925\n```\n\nBut you don't have all 925 records. Unless you tell it otherwise, DPLA API sets a limit of ten records returned. \n\n```python\n>>> results.limit \n10 # \n```\n\nBut if you want more, it's easy. Just do this:\n\n```python\n>>> result = dpla.search(q=\"chicken\", page_size=100)\n>>> result.limit\n100 # More records, YAY!\n```\n\nYou can also use the `all_records()` helper method to get back a generator that allows you to iterate through all of the records in your result list.\n\n```python\n>>> result = dpla.search(q=\"chicken\", page_size=100)\n>>> result.count\n925\n>>> for item in result.all_records():\n      print(item[\"sourceResource\"][\"title\"])\n\"Chicken\"\n\"Chicken and cow\"\n\"Chicken and pig\"\n# ...(922 more titles)\n\"Last of the Chicken records\"\n```\n\n### Fetch item(s) by ID \nIf you have the id of of a record you want to retrieve, or a series of IDs, you can use the `fetch_by_id` method. Just pass an array of IDs and it will return all fields for those records.\n\n```python\n>>> result = dpla.fetch_by_id([\"93583acc6425f8172b7b506f44a32121\"])\n>>> result.items[0][\"@id\"]\n'http://dp.la/api/items/93583acc6425f8172b7b506f44a32121'\n```\n\nOr multiple IDs:\n\n```python\n>>> ids = [\"93583acc6425f8172b7b506f44a32121\",\"fe47a8b71de4c136fe115a19ead13e4d\" ]\n>>> result = dpla.fetch_by_id(ids)\n>>> result.count \n2\n```\n\n### More Options\n\nThe DPLA gives you a lot of options for tailoring your search to get back exactly what you want. DPyLA helps make creating those fine grained searches easier (easier than creating your own 250-charcter url anyway!) \n\n#### Query\n\nA standard keyword query that searches across all fields.\nJust enter a string with your search terms. If combining with other search parameters, make sure it is the first param passed.\n\n```python\n>>> result = dpla.search(\"chicken\")\n>>> result = dpla.search(\"chicken man\")\n>>> result = dpla.search(\"chicken\", fields=[\"sourceResource.title\"])\n```\n\n#### Search within specific fields\n\nYou can search within specific fields to narrow your search. \nPass a dictionary of key / value pairs to the `searchFields` parameter, where field names are the keys and search values are the value.\n\n```python\n>>> fields = {\"sourceResource.title\" : \"crime\", \"sourceResource.spatial.state\" : \"Illinois\"}\n>>> result = dpla.search(searchFields=fields)\n```\n\n#### Return Fields\nYou can also choose what fields should be included with returned records, so you only get back what you need.\nPass a list or tuple of filed names to the `fields` parameter \n\n```python\nresult = dpla.search(\"chicken\", fields=[\"sourceResource.title\"])\n>>> result.items[0]\n{u'sourceResource.title': u'Chicken'}\n```\n\n#### Facets\nGet back a list of the most common terms within a field for this set of results. See the [DPLA facet docs](http://dp.la/info/developers/codex/requests/#faceting) for more info.\n\n```python\n>>> result = dpla.search(\"chicken\", facets=[\"sourceResource.subject\"])\n>>> result.facets[0] \n{u'sourceResource.subject.name': {u'_type': u'terms',\n  u'missing': 151,\n  u'other': 3043,\n  u'terms': [{u'count': 88, u'term': u'Poultry'},\n   {u'count': 77, u'term': u'Social Life and Customs'},\n   {u'count': 64, u'term': u'Agriculture'},\n   {u'count': 60, u'term': u'People'},\n   {u'count': 53, u'term': u'Chickens'},\n   {u'count': 51, u'term': u'Restaurants'},\n   {u'count': 51, u'term': u'Ethnology'},\n   {u'count': 41, u'term': u'Domestic Animals'},\n   {u'count': 39, u'term': u'Customs'},\n   {u'count': 32, u'term': u'Festivals'},\n   # ....\n\n```\n\n#### Spatial Facet\nYou can also facet by distance from a set of geo-coordinates. It requires extra work in the search url, so it is a seperate parameter.\nPass a length 2 list of `[lat, lng]` to the parameter spatial_facet:\n\n```python\n>>> result = dpla.search(\"chicken\", spatial_facet=[37,-48])\n>>> result.facets[0]\n{u'sourceResource.spatial.coordinates': {u'_type': u'geo_distance',\n  u'ranges': [{u'from': 1200.0,\n    u'max': 1296.205781266114,\n    u'mean': 1277.6015482976388,\n    u'min': 1265.9189942665018,\n    u'to': 1300.0,\n    u'total': 6388.007741488194,\n    u'total_count': 5},\n    # ...\n    ]}\n```\n\n### Facet Size\nNormally, asking for facets will return A LOT OF FACETS! If you only want a few, this is for you.\nPass an int to the parameter `facet_size`.\n\n```python\n>>> result = dpla.search(\"chicken\", facets=[\"sourceResource.subject\"], facet_size=2)\n>>> result.facets[1]\n{u'sourceResource.subject.name': {u'_type': u'terms',\n  u'missing': 151,\n  u'other': 4097,\n  u'terms': [{u'count': 69, u'term': u'Poultry'},\n   {u'count': 47, u'term': u'Social Life and Customs'}],\n  u'total': 4213}}\n```\n\n#### Sort\nHow do you want the records sorted? Pass a string field name to the `sort` parameter.\n\n```python\n>>> result = dpla.search(\"chicken\", sort=\"sourceResource.title\")\n```\n\n#### Spatial Sort\nYou can also sort by distance from a geo-coordinate. Pass the length 2 tuple of `[lat, lng]` to the `spatial_sort` parameter.\n\n```\n>>> result = dpla.search(\"chicken\", spatial_sort=[37, -48])\n```\n\n#### Page size\nBy Default, only ten records are returned per request. To increase that number, pass an integer (or string integer) to the `page_size` parameter. The upper limit is 100 per request.\n\n```python\n>>> result = dpla.search(q=\"chicken\", page_size=100)\n```\n\n#### Page\n\nIf that’s not enough, you can get the next ten items incrementing the page parameter (it’s one-indexed).\n\n```python\n>>> result = dpla.search(q=\"chicken\", page_size=100, page=2)\n```\n\n## Limitations\nThis project is still in its infancy. It ain't purrfect.\n\n* Right now, the client only does items search. Collections search ~~and individual item fetch~~ to come eventually.\n* It does not do a great job catching exceptions, so be warned!\n* Test coverage is limited. \n\n## License\n\nGPLV2. \nSee [license.txt](license.txt)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/bibliotechy/DPyLA/releases/latest",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bibliotechy/DPyLA",
    "keywords": "libraries,DPLA,museums",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dpla",
    "package_url": "https://pypi.org/project/dpla/",
    "platform": null,
    "project_url": "https://pypi.org/project/dpla/",
    "project_urls": {
      "Bug Tracker": "https://github.com/bibliotechy/dpyla/issues",
      "Download": "https://github.com/bibliotechy/DPyLA/releases/latest",
      "Homepage": "https://github.com/bibliotechy/dpyla"
    },
    "release_url": "https://pypi.org/project/dpla/0.5/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.7",
    "summary": "A client for the Digital Public Library of America (DPLA) API",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15289995,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7349ce391f5463ff87d3bd0884dfb7bd4ad3dedb64fb52918aadcc1d2f9abbff",
          "md5": "0d32d119125865e98d557ba03e84adb8",
          "sha256": "75d50564795f304f1da8920b71a5b7b2e780fb15bba1ddef926172c7acbb21aa"
        },
        "downloads": -1,
        "filename": "dpla-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0d32d119125865e98d557ba03e84adb8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2979,
        "upload_time": "2013-10-25T18:19:08",
        "upload_time_iso_8601": "2013-10-25T18:19:08.012206Z",
        "url": "https://files.pythonhosted.org/packages/73/49/ce391f5463ff87d3bd0884dfb7bd4ad3dedb64fb52918aadcc1d2f9abbff/dpla-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16c33fb1ad2eea96a9dd10f376039957fccd01838374980b60b410912f0a0c3c",
          "md5": "da9066d47250662becc335966a34cb73",
          "sha256": "0ca716fc59a4162e526399c2fa7cfe356ae19370d832e9c235adf55c6f834a41"
        },
        "downloads": -1,
        "filename": "dpla-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "da9066d47250662becc335966a34cb73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3162,
        "upload_time": "2014-10-14T03:01:24",
        "upload_time_iso_8601": "2014-10-14T03:01:24.666152Z",
        "url": "https://files.pythonhosted.org/packages/16/c3/3fb1ad2eea96a9dd10f376039957fccd01838374980b60b410912f0a0c3c/dpla-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc46a680a8f44196b5cae7b0e39e2ea0913292b42f8b3c4811bbc5accd7f250b",
          "md5": "a32787ad2f6441dd70cf17070078a23e",
          "sha256": "58508ad1712d1ae7d0f41982a2481bb157d1f5ca505415a0f6eb3224b2bfd196"
        },
        "downloads": -1,
        "filename": "dpla-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a32787ad2f6441dd70cf17070078a23e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3405,
        "upload_time": "2015-10-03T18:26:28",
        "upload_time_iso_8601": "2015-10-03T18:26:28.305052Z",
        "url": "https://files.pythonhosted.org/packages/fc/46/a680a8f44196b5cae7b0e39e2ea0913292b42f8b3c4811bbc5accd7f250b/dpla-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71c4404e13c8e21c04996f99ac1d9f1371c3c65de3866b640af84006e0ddcbc5",
          "md5": "b16d84d2367af083684558bd274a15e2",
          "sha256": "7f7a4d39d2237f03027fd0628739d6569a9759fc58c4a9e6cbff75bdd5ee0758"
        },
        "downloads": -1,
        "filename": "dpla-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b16d84d2367af083684558bd274a15e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3646,
        "upload_time": "2016-01-19T21:02:25",
        "upload_time_iso_8601": "2016-01-19T21:02:25.403206Z",
        "url": "https://files.pythonhosted.org/packages/71/c4/404e13c8e21c04996f99ac1d9f1371c3c65de3866b640af84006e0ddcbc5/dpla-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5204e836ad83b55c3093c528d35a97b8a41c7b53d9c320d89858a67852f9d39",
          "md5": "4be421fc780d2cae4d99177303c31dd2",
          "sha256": "092ae750d4bb15ac4efd74f6250c9fc397cd8ced81b6f63552389a0ca44a245f"
        },
        "downloads": -1,
        "filename": "dpla-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4be421fc780d2cae4d99177303c31dd2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3665,
        "upload_time": "2016-06-02T02:32:00",
        "upload_time_iso_8601": "2016-06-02T02:32:00.663771Z",
        "url": "https://files.pythonhosted.org/packages/c5/20/4e836ad83b55c3093c528d35a97b8a41c7b53d9c320d89858a67852f9d39/dpla-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3eba0d9e6e7e970289f4b731553fe4d170f362b5f4b54e35336a134724cceeb6",
          "md5": "b3eac784674b4c7f497f0c42cae0b394",
          "sha256": "aae0fff5fb71a8984e083a3af48c8397b80b9203a87b83597ca65ee81f7adce3"
        },
        "downloads": -1,
        "filename": "dpla-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3eac784674b4c7f497f0c42cae0b394",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7523,
        "upload_time": "2022-10-03T14:09:58",
        "upload_time_iso_8601": "2022-10-03T14:09:58.543751Z",
        "url": "https://files.pythonhosted.org/packages/3e/ba/0d9e6e7e970289f4b731553fe4d170f362b5f4b54e35336a134724cceeb6/dpla-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cc3b8394331f77c3bbcd538cbd03245b3e437c3502ece2fe00d3282fba60db5",
          "md5": "be9c3b3fe43856ef114aae4f964355ef",
          "sha256": "e338727ee0ff8fd59e6d1c91c197e30f96b1b41d784701ed38803f85cfbe7ccd"
        },
        "downloads": -1,
        "filename": "dpla-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "be9c3b3fe43856ef114aae4f964355ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7777,
        "upload_time": "2022-10-03T14:10:01",
        "upload_time_iso_8601": "2022-10-03T14:10:01.383660Z",
        "url": "https://files.pythonhosted.org/packages/8c/c3/b8394331f77c3bbcd538cbd03245b3e437c3502ece2fe00d3282fba60db5/dpla-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3eba0d9e6e7e970289f4b731553fe4d170f362b5f4b54e35336a134724cceeb6",
        "md5": "b3eac784674b4c7f497f0c42cae0b394",
        "sha256": "aae0fff5fb71a8984e083a3af48c8397b80b9203a87b83597ca65ee81f7adce3"
      },
      "downloads": -1,
      "filename": "dpla-0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b3eac784674b4c7f497f0c42cae0b394",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7523,
      "upload_time": "2022-10-03T14:09:58",
      "upload_time_iso_8601": "2022-10-03T14:09:58.543751Z",
      "url": "https://files.pythonhosted.org/packages/3e/ba/0d9e6e7e970289f4b731553fe4d170f362b5f4b54e35336a134724cceeb6/dpla-0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8cc3b8394331f77c3bbcd538cbd03245b3e437c3502ece2fe00d3282fba60db5",
        "md5": "be9c3b3fe43856ef114aae4f964355ef",
        "sha256": "e338727ee0ff8fd59e6d1c91c197e30f96b1b41d784701ed38803f85cfbe7ccd"
      },
      "downloads": -1,
      "filename": "dpla-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "be9c3b3fe43856ef114aae4f964355ef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7777,
      "upload_time": "2022-10-03T14:10:01",
      "upload_time_iso_8601": "2022-10-03T14:10:01.383660Z",
      "url": "https://files.pythonhosted.org/packages/8c/c3/b8394331f77c3bbcd538cbd03245b3e437c3502ece2fe00d3282fba60db5/dpla-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}