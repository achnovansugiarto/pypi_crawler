{
  "info": {
    "author": "Wonwoo, lee",
    "author_email": "bluedisk@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "Django-Iamport\n==============\n\nIamport Application for Django\n\n장고용 아임포트 포팅 입니다. 아직 카드 결제만 동작 확인 되었습니다.\n\nInstall\n=======\n\n1. pip install django-iamport\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n2. setting.py 수정\n~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n\n    INSTALLED_APPS = [\n    ...\n\n\n        'payment.apps.PaymentConfig',\n\n    ...\n\n\n    PAYMENT_MERCHANT_ID = '아임포트에서 발급받은 상점 ID'\n\n    PAYMENT_REST_KEY = '아임포트에서 발급 받은 REST KEY'\n    PAYMENT_REST_SECRET = '아임포트에서 발급 받은 REST SECRET'\n\n    PAYMENT_MODEL = 'shop.OrderPayment' # Payment를 상속 받은 주문 모델\n\n    # 아임포트 전달 파라메터(그대로 아임포트 모듈에 전달 됩니다)\n    # IMP.request_pay() 파라메터 : \n\n    PAYMENT_CONFIG = { \n        'company': '우리 회사', # PG표기 회사명 \n        'pg': 'html5_inicis',  # PG 종류 (아임포트 설정)\n        'pay_method': 'card'    # 결제 방법\n    }\n\n파라메터는 `IMP.request\\_pay()\n파라메터 <https://github.com/iamport/iamport-manual/blob/master/%EC%9D%B8%EC%A6%9D%EA%B2%B0%EC%A0%9C/README.md>`__\n참조)\n\n3. URL 선언 포함하기\n~~~~~~~~~~~~~~~~~~~~\n\n루트 urls.py 상에 다음 라인 포함\n\n.. code:: python\n\n    urlpatterns = [\n\n        ...\n\n        path('payment/', include('payment.urls')),\n      \n        ...\n    ]\n\n4. Payment 모델 상속하기\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nPayment 모델을 상속 받아서 실제로 사용할 결제 정보 모델을 만들어야\n됩니다. Payment는 다음과 같이 추상 모델로 선언 되어 있습니다.\n\n.. code:: python\n\n    class Payment(models.Model):\n\n        class Meta:\n            abstract = True\n\n        def __str__(self):\n            return \"%s-%s%s-\" % (self.buyer_name, self.amount, self.name)\n\n        name = models.CharField('주문명', max_length=100)\n\n    ... 중간 생략 ...\n\n        card_id = models.CharField('카드승인번호', max_length=50, null=True, blank=True)\n\n        receipt_url = models.URLField('영수증 URL', null=True, blank=True)\n\n        @staticmethod\n        def from_order(order, pay_type):\n            raise NotImplementedError()\n\n        def on_success(self):\n            raise NotImplementedError()\n\nPayment 추상 모델을 상속 받은 다음 필요한 필드들을 추가해서 사용자\n모델을 만듭니다.\n\nPayment를 상속받은 예제\n\n.. code:: python\n\n    class OrderPayment(Payment):\n\n        class Meta:\n            verbose_name = \"제품 결제\"\n            verbose_name_plural = \"제품 결제 목록\"\n\n        order = models.ForeignKey(Apply, on_delete=models.SET_NULL, null=True, related_name='payments')\n\n        @staticmethod\n        def from_order(order):\n\n            payment = OrderPayment()\n            payment.name = '우리상점 : %s %s' % order.name\n            payment.order = order\n\n            payment.amount = order.roomtype.price\n\n            payment.buyer_email = order.email\n            payment.buyer_name = order.name\n            payment.buyer_tel = order.cell\n            payment.buyer_addr = order.addr + \" \" + order.subaddr\n            payment.buyer_postcode = order.postcode\n            payment.save()\n\n            # ID 생성하기\n            if settings.DEBUG:\n                prefix = \"myshop_debug\"\n            else:\n                prefix = \"myshop\"\n\n            now = timezone.localtime(timezone.now())\n            now = now.strftime('%Y%m%d_%H%M%S')\n\n            payment.uid = \"%s_%s_%s\" % (prefix, now, payment.pk)\n            payment.save()\n\n            return payment\n\n        # 결제 완료 후처리 하기(완료 시 호출 됩니다)\n        def on_success(self):\n            self.order.pay_status = 'confirmed'\n            self.order.save()\n\n        # 결제 재시도 URL\n        def get_retry_url(self):\n            return reverse('myshop:retry_order', args=[self.order.pk])\n\n        # 결제 후 이동 할 Home URL\n        def get_home_url(self):\n            return '/' \n\n5. 결제 시작하기\n~~~~~~~~~~~~~~~~\n\n상속받은 모델(여기선 OrderPayment)의 인스턴스를 생성, 저장한 후 해당\npk를 args로 'payment:pay' 뷰를 호출하면 결제 프로세스가 진행 됩니다.\n\nex:\n\n::\n\n    def pay_start(request):\n        payment = OrderPayment.from_order(order_info)\n        return HttpResponseRedirect(reverse('payment:pay', args=[payment.pk]))\n\n6. Template 사용자화 하기\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n모든 뷰 템플릿은 templates/site\\_base.html 를 상속 합니다.\nsite\\_base.html를 Override해서 사용자 템플릿을 선언하시면 됩니다.\n\n-  주의 : 서브 템플릿들은 jQuery가 site\\_base.html 상에 포함된것으로\n   간주합니다.\n\nTODO\n====\n\n-  [STRIKEOUT:REST prepare call]\n-  [STRIKEOUT:card]\n-  notification\n-  vbank\n-  후처리 실패시 처리\n-  다중 PG 지원\n-  다중 결제 모델 지원",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bluedisk/django-iamport",
    "keywords": "django iamport korean-pg payment",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-iamport",
    "package_url": "https://pypi.org/project/django-iamport/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-iamport/",
    "project_urls": {
      "Homepage": "https://github.com/bluedisk/django-iamport"
    },
    "release_url": "https://pypi.org/project/django-iamport/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Iamport implementation for Django 2+",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5296422,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f8ecc9f877e81d71f32cdab4df2936f922fb396eb5012db0aefc7cb886e69f2",
          "md5": "162808759735c18ff876d1d74ba9d5fe",
          "sha256": "3af136293b5d410f4a14f02b0a037d37bbe2c10b35cb52fdbcb7d3bd364bd0fc"
        },
        "downloads": -1,
        "filename": "django-iamport-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "162808759735c18ff876d1d74ba9d5fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6812,
        "upload_time": "2018-07-10T13:28:14",
        "upload_time_iso_8601": "2018-07-10T13:28:14.260959Z",
        "url": "https://files.pythonhosted.org/packages/7f/8e/cc9f877e81d71f32cdab4df2936f922fb396eb5012db0aefc7cb886e69f2/django-iamport-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11d530d1c1e615eb8d6c5b2c8726740a14111b4fc74eabdc4faf8ba2f1d6c9d3",
          "md5": "37568ab12ec91021ca0d422478c36c6d",
          "sha256": "3f37c230dcfb301b116eeadc99ce139c95310d28d4c8beb1e95601fc7b000a93"
        },
        "downloads": -1,
        "filename": "django-iamport-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "37568ab12ec91021ca0d422478c36c6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11448,
        "upload_time": "2018-07-10T13:42:03",
        "upload_time_iso_8601": "2018-07-10T13:42:03.438801Z",
        "url": "https://files.pythonhosted.org/packages/11/d5/30d1c1e615eb8d6c5b2c8726740a14111b4fc74eabdc4faf8ba2f1d6c9d3/django-iamport-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c840a6625f0b72e6cb74f525fb7312359c749d277ad5a235bd18a03c6e128f9",
          "md5": "643f102f9b39f9d24ae7c1c7c711232c",
          "sha256": "f1a3a5b8901ef547429bdbeaf5118a7358d38a541fc5f7ff5362110bd32ea447"
        },
        "downloads": -1,
        "filename": "django-iamport-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "643f102f9b39f9d24ae7c1c7c711232c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11673,
        "upload_time": "2018-07-10T14:14:25",
        "upload_time_iso_8601": "2018-07-10T14:14:25.303235Z",
        "url": "https://files.pythonhosted.org/packages/6c/84/0a6625f0b72e6cb74f525fb7312359c749d277ad5a235bd18a03c6e128f9/django-iamport-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f80127b448b605b2a29151596b525cf93841f53b90b757ddc37fca27cff0f76",
          "md5": "593e3765aa7c1997892feb2e0d533d05",
          "sha256": "07a637a57f1902362ef847ca2d1093e4789f6818ed037a1f472cbe7990542527"
        },
        "downloads": -1,
        "filename": "django-iamport-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "593e3765aa7c1997892feb2e0d533d05",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12316,
        "upload_time": "2019-05-21T08:15:27",
        "upload_time_iso_8601": "2019-05-21T08:15:27.213927Z",
        "url": "https://files.pythonhosted.org/packages/9f/80/127b448b605b2a29151596b525cf93841f53b90b757ddc37fca27cff0f76/django-iamport-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f80127b448b605b2a29151596b525cf93841f53b90b757ddc37fca27cff0f76",
        "md5": "593e3765aa7c1997892feb2e0d533d05",
        "sha256": "07a637a57f1902362ef847ca2d1093e4789f6818ed037a1f472cbe7990542527"
      },
      "downloads": -1,
      "filename": "django-iamport-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "593e3765aa7c1997892feb2e0d533d05",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12316,
      "upload_time": "2019-05-21T08:15:27",
      "upload_time_iso_8601": "2019-05-21T08:15:27.213927Z",
      "url": "https://files.pythonhosted.org/packages/9f/80/127b448b605b2a29151596b525cf93841f53b90b757ddc37fca27cff0f76/django-iamport-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}