{
  "info": {
    "author": "Richard T. Weeks",
    "author_email": "rtweeks21@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Run-DynamoDBLocal\n\nAWS makes [DynamoDBLocal][ddbl] -- a service that mirrors the API of DynamoDB and runs locally -- available to their customers for testing purposes.  This Python packages facilitates running that service as a subprocess of the testing harness.\n\n## Install\n\n```console\n$ pip install 'run-dynamodblocal[boto3]'\n```\n\nLeave off the `[boto3]` if you don't intend to use this package's ability to patch `boto3`.\n\n## Usage\n\n### Quickstart\n\nWith thanks to [ncoghlan](https://stackoverflow.com/a/45809502/160072):\n\n```python\nimport boto3_mocking\nfrom contextlib import ExitStack\nimport os.path\nimport run_dynamodblocal\nimport unittest\n\n# If patching isn't engaged when the run_dynamodblocal context is entered, an\n# exception will be thrown\nboto3_mocking.engage_patching()\n\nclass MyTest(unittest.TestCase):\n    def setUp(self):\n        with ExitStack() as resources:\n            dynamodblocal_path = os.path.expanduser(\n              # wherever you keep the unpacked service binaries\n              '~/Downloads/dynamodb_local_latest'\n            )\n            resources.enter_context(\n                run_dynamodblocal.rddbl.patched_into_boto3(dynamodblocal_path)\n            )\n            \n            # Enter any other contexts for this test class...\n            \n            addCleanup(resources.pop_all().close)\n    \n    # Define test methods here\n```\n\n### Diving Deeper\n\nThis package provides two different context managers which run the DynamoDBLocal service -- one of which integrates with `boto3` to automatically redirect the `dynamodb` service to this DynamoDBLocal instance.  The DynamoDBLocal started will use the `-inMemory` flag, so it does not persist on disk after the test run is over and doesn't waste testing time committing information to disk.\n\n| Context Manager                        | Description |\n| :------------------------------------- | :------------- |\n| `run_dynamodblocal.in_subprocess`      | The most fundamental; runs the server and returns the port number as the context value |\n| `run_dynamodblocal.patched_into_boto3` | Runs the server and patches it into the `boto3` library |\n\nIt also provides the `run_dynamodblocal.LocalDbOps` class, which supports refreshing the database schema and populated data based on a Serverless configuration and some basic JSON-type data.\n\n## Contributing\n\n1. Fork it on GitHub (https://github.com/rtweeks/run-dynamodblocal)\n1. Create your feature branch (`git checkout -b my-new-feature`)\n1. Commit your changes (`git commit -am 'Add some feature'`)\n1. Push to the branch (`git push origin my-new-feature`)\n1. Create a new Pull Request (on [GitHub](https://github.com))\n\n\n\n[ddbl]: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rtweeks/run-dynamodblocal",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "run-dynamodblocal",
    "package_url": "https://pypi.org/project/run-dynamodblocal/",
    "platform": "",
    "project_url": "https://pypi.org/project/run-dynamodblocal/",
    "project_urls": {
      "Homepage": "https://github.com/rtweeks/run-dynamodblocal"
    },
    "release_url": "https://pypi.org/project/run-dynamodblocal/0.2.0/",
    "requires_dist": [
      "psutil (~=5.8) ; sys_platform == \"win32\"",
      "boto3-mocking (<2) ; extra == 'boto3'"
    ],
    "requires_python": ">=3.6",
    "summary": "Run an in-memory DynamoDBLocal for testing",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11808317,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b7a9909400ae916a041315abe705b846b7d20dd5539c515bc8fbf54fc9e47c4",
          "md5": "2cf625f8aa17bf04ead26457c33d2c8d",
          "sha256": "3a751d4f91a877105bbb65d2eab45438a85e54ed7adc461a5687df6c5b158f99"
        },
        "downloads": -1,
        "filename": "run_dynamodblocal-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cf625f8aa17bf04ead26457c33d2c8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9609,
        "upload_time": "2021-02-12T20:30:37",
        "upload_time_iso_8601": "2021-02-12T20:30:37.038298Z",
        "url": "https://files.pythonhosted.org/packages/4b/7a/9909400ae916a041315abe705b846b7d20dd5539c515bc8fbf54fc9e47c4/run_dynamodblocal-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12d41f9c0deb53bb44449ec6e487c0918ddf823f0d62a63a29dc16ce39df1e5c",
          "md5": "c4142789e4962c0e186f20691808a1a7",
          "sha256": "9fbb9711c24a60b5b6be99839e1283b169e203a57d494aa8feb85dffd7106c34"
        },
        "downloads": -1,
        "filename": "run-dynamodblocal-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c4142789e4962c0e186f20691808a1a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5832,
        "upload_time": "2021-02-12T20:30:38",
        "upload_time_iso_8601": "2021-02-12T20:30:38.568175Z",
        "url": "https://files.pythonhosted.org/packages/12/d4/1f9c0deb53bb44449ec6e487c0918ddf823f0d62a63a29dc16ce39df1e5c/run-dynamodblocal-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "646d9327fa96e4497ac1c97f98ac490efc44e53cb517fba8849cad0d622eaae7",
          "md5": "225b19d0a5c3c5132383aaf7924d711e",
          "sha256": "b9913ed8965b1712f87430ec62476a23bc58db0ce9993878fd30ebf22745408d"
        },
        "downloads": -1,
        "filename": "run_dynamodblocal-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "225b19d0a5c3c5132383aaf7924d711e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9991,
        "upload_time": "2021-10-22T21:46:44",
        "upload_time_iso_8601": "2021-10-22T21:46:44.365011Z",
        "url": "https://files.pythonhosted.org/packages/64/6d/9327fa96e4497ac1c97f98ac490efc44e53cb517fba8849cad0d622eaae7/run_dynamodblocal-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aede8ed4514233852e79aa684a1acf2b95298f463459924d738416e948dbf3f2",
          "md5": "def35d4b2ce29ed7bd71ee220b878ffc",
          "sha256": "7e3a6fc888ddb59396704bc09b04d9f0ffa300e76f80adc43550a32b489ac0a5"
        },
        "downloads": -1,
        "filename": "run-dynamodblocal-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "def35d4b2ce29ed7bd71ee220b878ffc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9482,
        "upload_time": "2021-10-22T21:46:45",
        "upload_time_iso_8601": "2021-10-22T21:46:45.837733Z",
        "url": "https://files.pythonhosted.org/packages/ae/de/8ed4514233852e79aa684a1acf2b95298f463459924d738416e948dbf3f2/run-dynamodblocal-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "646d9327fa96e4497ac1c97f98ac490efc44e53cb517fba8849cad0d622eaae7",
        "md5": "225b19d0a5c3c5132383aaf7924d711e",
        "sha256": "b9913ed8965b1712f87430ec62476a23bc58db0ce9993878fd30ebf22745408d"
      },
      "downloads": -1,
      "filename": "run_dynamodblocal-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "225b19d0a5c3c5132383aaf7924d711e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9991,
      "upload_time": "2021-10-22T21:46:44",
      "upload_time_iso_8601": "2021-10-22T21:46:44.365011Z",
      "url": "https://files.pythonhosted.org/packages/64/6d/9327fa96e4497ac1c97f98ac490efc44e53cb517fba8849cad0d622eaae7/run_dynamodblocal-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aede8ed4514233852e79aa684a1acf2b95298f463459924d738416e948dbf3f2",
        "md5": "def35d4b2ce29ed7bd71ee220b878ffc",
        "sha256": "7e3a6fc888ddb59396704bc09b04d9f0ffa300e76f80adc43550a32b489ac0a5"
      },
      "downloads": -1,
      "filename": "run-dynamodblocal-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "def35d4b2ce29ed7bd71ee220b878ffc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9482,
      "upload_time": "2021-10-22T21:46:45",
      "upload_time_iso_8601": "2021-10-22T21:46:45.837733Z",
      "url": "https://files.pythonhosted.org/packages/ae/de/8ed4514233852e79aa684a1acf2b95298f463459924d738416e948dbf3f2/run-dynamodblocal-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}