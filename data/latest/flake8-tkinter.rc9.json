{
  "info": {
    "author": "rdbende",
    "author_email": "rdbende@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Framework :: Flake8",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance"
    ],
    "description": "# flake8-tkinter\n\nA flake8 plugin that helps you detect (too) common mistakes and bad practices in you Tkinter project\n\n_Project idea by [@insolor](https://github.com/insolor)_\n\n\n## Installation\n\n```\npip install flake8-tkinter\n```\n\n\n## List of warnings\n\nCommon mistakes\n- **`TK102`**: Using multiple mainloop calls is unnecessary. One call is perfectly enough. ([example](#tk102))\n- **`TK111`**: Calling `callback_handler()` instead of passing the reference for on-click or binding callback. ([example](#tk111))\n- **`TK112`**: Calling `callback_handler()` with arguments instead of passing the reference for on-click or binding callback. If you need to call `callback_handler` with arguments, use lambda or functools.partial. ([example](#tk112))\n- **`TK131`**: Assigning result of geometry manager call to a variable. ([example](#tk131))\n\nBest practices\n- **`TK201`**: Using `from tkinter import *` is generally a bad practice and discouraged. Use `import tkinter as tk` or simply `import tkinter` instead. ([example](#tk201))\n- **`TK202`**: Using `from tkinter.ttk import *` is generally a bad practice and discouraged. Use `from tkinter import ttk` instead. ([example](#tk202))\n- **`TK211`**: Using `import tkinter.ttk as ttk` is pointless. Use `from tkinter import ttk` instead. ([example](#tk211))\n- **`TK221`**: Using tkinter.TRUE, tkinter.FALSE, etc. is pointless. Use an appropriate Python boolean instead. ([example](#tk221))\n- **`TK231`**: Using bind without `add=True` will overwrite any existing bindings to this sequence on this widget. Either overwrite them explicitly with `add=False` or use `add=True` to keep existing bindings. ([example](#tk231))\n- **`TK232`**: Creating tag bindings in a loop can lead to memory leaks. Store the returned command names in a list to clean them up later. ([example](#tk232))\n- **`TK251`**: Using `tkinter.Message` widget. It's redundant since `tkinter.Label` provides the same functionality.. ([example](#tk251)\n\nCode quality\n- **`TK304`**: Value for `add` in bind methods should be a boolean. ([example](#tk304))\n\nOpinionated warnings\n- **`TK504`**: Using a tkinter constant. Use a string literal instead (disabled by default). ([example](#tk504))\n\n## Examples\n\n### TK102\n```python\n# Bad\ndef foo():\n    top = tk.Toplevel()\n    ...\n    top.mainloop()\n\nroot.mainloop()\n\n# Good\ndef foo():\n    top = tk.Toplevel()\n    ...\n    \nroot.mainloop()\n```\n\n### TK111\n```python\n# Bad\ntk.Button(..., command=foo())\nbutton.config(command=bar())\nbutton.bind(\"<Button-3>\", baz())\n\n# Good\ntk.Button(..., command=foo)\nbutton.config(command=bar)\nbutton.bind(\"<Button-3>\", baz)\n```\n\n### TK112\n```python\n# Bad\ntk.Button(..., command=foo(arg, kwarg=...))\nbutton.config(command=bar(arg, kwarg=...))\nbutton.bind(\"<Button-3>\", baz(arg, kwarg=...))\n\n# Good\ntk.Button(..., command=lambda: foo(arg, kwarg=...))\nbutton.config(command=lambda: bar(arg, kwarg=...))\nbutton.bind(\"<Button-3>\", lambda e: baz(arg, kwarg=...))\n```\n\n### TK131\n```python\n# Bad\nbtn = tk.Button().grid()\n\n# Good\nbtn = tk.Button()\nbtn.grid()\n```\n\n### TK201\n```python\n# Bad\nfrom tkinter import *\n\n# Good\nimport tkinter\n# OR\nimport tkinter as tk\n```\n\n### TK202\n```python\n# Bad\nfrom tkinter.ttk import *\n\n# Good\nfrom tkinter import ttk\n```\n\n### TK211\n```python\n# Bad\nimport tkinter.ttk as ttk\n\n# Good\nfrom tkinter import ttk\n```\n\n### TK221\n```python\n# Bad\nw.pack(expand=tk.TRUE)\nw.pack(expand=tk.FALSE)\nw.pack(expand=tk.YES)\nw.pack(expand=tk.NO)\nw.pack(expand=tk.ON)\nw.pack(expand=tk.OFF)\n\n# Good\nw.pack(expand=True)\nw.pack(expand=False)\n```\n\n### TK231\n_Will be renamed to TK141 in v1.0.0_\n```python\n# Bad\nw.bind(\"<Button-1>\", foo)\n\n# Good\nw.bind(\"<Button-1>\", foo, add=True)\n# OR\nw.bind(\"<Button-1>\", foo, add=False)\n```\n\n### TK232\n_Will be renamed to TK142 in v1.0.0_\n```python\n# Bad\nfor index, foo in enumerate(foos):\n    w.tag_bind(f\"bar_{index}\", \"<Button-1>\", baz)\n    \n# Good\nfor index, foo in enumerate(foos):\n    tcl_command = w.tag_bind(f\"bar_{index}\", \"<Button-1>\", baz)\n    bindings.append(tcl_command)  # Clean them up later with `.deletecommand()`\n```\n\n### TK251\n_Yes, there's some minor diffrence in text wrapping difference, but that can be adjusted_\n```python\n# Bad\nw = tkinter.Message()\n\n# Good\nw = tkinter.Label()\n```\n\n### TK304\n```python\n# Bad\nw.bind(\"<Button-1>\", foo, add=\"+\")\n\n# Good\nw.bind(\"<Button-1>\", foo, add=True)\n```\n\n### TK504\n```python\n# Bad\nw.pack(side=tkinter.BOTTOM, fill=tkinter.BOTH)\n\n# Good\nw.pack(side=\"bottom\", fill=\"both\")\n```\n\n## Planned warnings\n\n- Common mistakes (TK101-TK179)\n    - `TK101`: Using multiple `tkinter.Tk` instances. Child windows must be created from `tkinter.Toplevel`.\n    - `TK103`: Suggest refactoring code that uses `.update()`, as it's usually pointless, [potentially harmful](https://wiki.tcl-lang.org/page/Update+considered+harmful), and considered a code smell.\n    - `TK113`: Callback handler should be a callable ([lol](https://www.reddit.com/r/Tkinter/comments/w84lt0/does_tkinter_button_command_only_accept_functions))\n    - `TK121`: Using `time.sleep()` in tkinter code. Use `.after()` in some form instead.\n    - `TK122`: Using an infinite loop in callback handler. Propose to use recursive function with `.after()`.\n    - `TK141`: Suggest keeping reference of local `PhotoImage` instance to avoid GC.\n\n- Cross platform (TK181-TK199)\n    - `TK181`: Using `<Shift-Tab>` binding. It doesn't work on Linux.\n\n- Best practices (TK201-TK299)\n    - `TK222`: Using `tk.N+tk.S+tk.E+tk.W` and combinations like that. Use `tk.NSEW`, or some other constant instead.\n    - `TK241`: Creating a widget without parent specified, and there is a container in the same scope.\n    - `TK261`: Using subsequent `wm_attributes` calls. It can take value pairs.\n\n- Code quality (TK301-TK399)\n    - `TK301`: Suggest using more clear binding sequences, like `<Button-1>` instead of `<1>` and `<Key-a>` instead of `<a>`.\n    - `TK302`: Suggest using more clear `tkinter.Text` indexes, like `end - 1 chars` instead of `end-1c`.\n    - `TK303`: Using a float as `tkinter.Text` index. It works because how Tkinter translates Python objects to Tcl, but it shouldn't.\n\n- OO (TK401-TK499)\n    - `TK401`: Consider refactoring a huge app with OOP.\n    - `TK402`: Consider refactoring widget into separate class.\n    \n- Opinionated rules (TK501-TK599)\n    - `TK501`: Calling `mainloop()` on something other than the root window.\n    - `TK502`: Using things like `root.wm_title()`. Use `root.title()`. (But there should be exceptions, like `wm_attributes`)\n    - `TK503`: Using subscripting for widget cget and configure. Use `.cget()` and `.configure()` instead.\n\n\n## Development\n1. Clone the repo\n2. Set up a virtual environment, activate, and install `flake8` and `pytest` in it\n3. Run `pip install -e .` to install `flake8-tkinter` in editable format\n4. Run `python3 -m pytest` to test your changes\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rdbende/flake8-tkinter",
    "keywords": "",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flake8-tkinter",
    "package_url": "https://pypi.org/project/flake8-tkinter/",
    "platform": null,
    "project_url": "https://pypi.org/project/flake8-tkinter/",
    "project_urls": {
      "Homepage": "https://github.com/rdbende/flake8-tkinter"
    },
    "release_url": "https://pypi.org/project/flake8-tkinter/0.5.4/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Flake8 plugin to detect (too) common mistakes and bad practices in Tkinter projects",
    "version": "0.5.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14778181,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "570eaf3a62d867efbd9a2a579e37d2c2acd909430430261d70ad4eeaadac0c10",
          "md5": "9bb2e445be812c640e9b0aaff9d25885",
          "sha256": "dbc43581c1451de78d43402bcfe67deafd99bfcabe32807fb96cc844bd213b1a"
        },
        "downloads": -1,
        "filename": "flake8_tkinter-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9bb2e445be812c640e9b0aaff9d25885",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3580,
        "upload_time": "2022-06-20T14:55:21",
        "upload_time_iso_8601": "2022-06-20T14:55:21.261942Z",
        "url": "https://files.pythonhosted.org/packages/57/0e/af3a62d867efbd9a2a579e37d2c2acd909430430261d70ad4eeaadac0c10/flake8_tkinter-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d33154fd0f0239fcdd1f4b300933f5451d4834f8c013749046bc499c2f37d23d",
          "md5": "ce77e6452330f8795df0d695f61dead9",
          "sha256": "92e41f84a51f987285793f0a6151479009c01ae0d435153861f2387e72ce916d"
        },
        "downloads": -1,
        "filename": "flake8_tkinter-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ce77e6452330f8795df0d695f61dead9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3516,
        "upload_time": "2022-06-20T14:59:26",
        "upload_time_iso_8601": "2022-06-20T14:59:26.614886Z",
        "url": "https://files.pythonhosted.org/packages/d3/31/54fd0f0239fcdd1f4b300933f5451d4834f8c013749046bc499c2f37d23d/flake8_tkinter-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "493849da2e23b03d62ddc67d041dd9ae3918716b7d53ec15b45daddc4149f211",
          "md5": "e30744d2d91caac6235462a028efbe55",
          "sha256": "b54e2ec62071ef4fa986f88b33183e5da1479d86f01d1a760135e649440c026b"
        },
        "downloads": -1,
        "filename": "flake8_tkinter-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e30744d2d91caac6235462a028efbe55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8820,
        "upload_time": "2022-08-09T21:48:12",
        "upload_time_iso_8601": "2022-08-09T21:48:12.692819Z",
        "url": "https://files.pythonhosted.org/packages/49/38/49da2e23b03d62ddc67d041dd9ae3918716b7d53ec15b45daddc4149f211/flake8_tkinter-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d2bf7d3954bc7a1d44ffcc0221f73da312e8928752958bc7e3a75d8f283a2da",
          "md5": "e7235a9d07a3653572c908c3aea6f20d",
          "sha256": "94221e9ef9325b686f3c77314b62685efeda0262ca756f2477c74b9ee601224f"
        },
        "downloads": -1,
        "filename": "flake8_tkinter-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e7235a9d07a3653572c908c3aea6f20d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8934,
        "upload_time": "2022-08-10T13:30:01",
        "upload_time_iso_8601": "2022-08-10T13:30:01.216885Z",
        "url": "https://files.pythonhosted.org/packages/6d/2b/f7d3954bc7a1d44ffcc0221f73da312e8928752958bc7e3a75d8f283a2da/flake8_tkinter-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52b697bf0e03fb84ae290e744707e25cdb4e1af56d2ccff71aaf0cb627491698",
          "md5": "8d89529a35a233a163f037f6d78a85d9",
          "sha256": "61247b07207b22eaca66f6d1833d0ba7c596758f7439c97f5e8cfd6b3d0b6625"
        },
        "downloads": -1,
        "filename": "flake8_tkinter-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8d89529a35a233a163f037f6d78a85d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9480,
        "upload_time": "2022-08-10T18:09:16",
        "upload_time_iso_8601": "2022-08-10T18:09:16.301469Z",
        "url": "https://files.pythonhosted.org/packages/52/b6/97bf0e03fb84ae290e744707e25cdb4e1af56d2ccff71aaf0cb627491698/flake8_tkinter-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f706508f47d4918a24a217fbf846c05a069407b27e2b0eae5171af51cc0fabb8",
          "md5": "d9fe4f6d3423b51777057a287d80cc8a",
          "sha256": "59b4d3e86d95bed89068000d5697c91f4397df3813b34e1103f561f1ec6b9bc5"
        },
        "downloads": -1,
        "filename": "flake8_tkinter-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d9fe4f6d3423b51777057a287d80cc8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9995,
        "upload_time": "2022-08-10T22:03:35",
        "upload_time_iso_8601": "2022-08-10T22:03:35.357704Z",
        "url": "https://files.pythonhosted.org/packages/f7/06/508f47d4918a24a217fbf846c05a069407b27e2b0eae5171af51cc0fabb8/flake8_tkinter-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "924c2ee4cd01c6be9aaff033014da3187e23d77a0c5825d7f64d5fe6cbd4a577",
          "md5": "ceab8e55140fe632ee4bf0704e82185a",
          "sha256": "733127d17679f17b2f3aec6d805afaac4df5252606a646f89230264f6570c6cb"
        },
        "downloads": -1,
        "filename": "flake8_tkinter-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ceab8e55140fe632ee4bf0704e82185a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9951,
        "upload_time": "2022-08-11T22:12:42",
        "upload_time_iso_8601": "2022-08-11T22:12:42.427676Z",
        "url": "https://files.pythonhosted.org/packages/92/4c/2ee4cd01c6be9aaff033014da3187e23d77a0c5825d7f64d5fe6cbd4a577/flake8_tkinter-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a5bff8209bd2cfc7c5da89f3a56234932c8d3f213716e2ba0a837902cd7ffdc",
          "md5": "ab23a1f79e7fa7b727f00139429b4b92",
          "sha256": "c6610e8c6a559f67fff9e751e5dd091ad5fd73d13a6b83006f9ddbf29e547fc1"
        },
        "downloads": -1,
        "filename": "flake8_tkinter-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ab23a1f79e7fa7b727f00139429b4b92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10888,
        "upload_time": "2022-08-16T15:03:02",
        "upload_time_iso_8601": "2022-08-16T15:03:02.536805Z",
        "url": "https://files.pythonhosted.org/packages/4a/5b/ff8209bd2cfc7c5da89f3a56234932c8d3f213716e2ba0a837902cd7ffdc/flake8_tkinter-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7b6c1ea14532a22d54e05aea1ffb5769b0bc8b5f60111394edcbb6699587caa",
          "md5": "b88d945eb1c944a588f416d336553b4f",
          "sha256": "25cdd42d1fe9a081326e2da5503e05b35b81901d3f29a31028d51308116d8505"
        },
        "downloads": -1,
        "filename": "flake8_tkinter-0.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b88d945eb1c944a588f416d336553b4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11003,
        "upload_time": "2022-08-16T15:35:19",
        "upload_time_iso_8601": "2022-08-16T15:35:19.868929Z",
        "url": "https://files.pythonhosted.org/packages/b7/b6/c1ea14532a22d54e05aea1ffb5769b0bc8b5f60111394edcbb6699587caa/flake8_tkinter-0.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b7b6c1ea14532a22d54e05aea1ffb5769b0bc8b5f60111394edcbb6699587caa",
        "md5": "b88d945eb1c944a588f416d336553b4f",
        "sha256": "25cdd42d1fe9a081326e2da5503e05b35b81901d3f29a31028d51308116d8505"
      },
      "downloads": -1,
      "filename": "flake8_tkinter-0.5.4.tar.gz",
      "has_sig": false,
      "md5_digest": "b88d945eb1c944a588f416d336553b4f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11003,
      "upload_time": "2022-08-16T15:35:19",
      "upload_time_iso_8601": "2022-08-16T15:35:19.868929Z",
      "url": "https://files.pythonhosted.org/packages/b7/b6/c1ea14532a22d54e05aea1ffb5769b0bc8b5f60111394edcbb6699587caa/flake8_tkinter-0.5.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}