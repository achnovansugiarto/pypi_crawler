{
  "info": {
    "author": "",
    "author_email": "Danielle Miller Sayag <danimillers10@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# genomic-nlp\n\nThis repository contains the code used for compiling and analyzing the \"biological corpus\" presented in the paper:\n\n**Deciphering microbial gene function using natural language processing**\n\n\n## Getting the data\n*Note:* The data will be deposited to the Zenodo database and assigned a permanent DOI.\nmeanwhile, do not use the download instructions below and go to [this link](http://tiny.cc/eb6ouz).\n\nStart by downloading the data files from the Zenodo database.  \n\n1. Click on the Zenodo link at the top of the repository or use [this link](http://tiny.cc/eb6ouz) to download the data zip file\n2. Alternatively, use the command line as follows: \n```\nmkdir data\ncd data\n\nwget https://zenodo.org/record/XXX/files/models_and_data.tar.gz?download=1\ntar -zxvf models_and_data.tar.gz\nmv data/* ./\nrm models_and_data.tar.gz\n```\n\n## Setting up the working environment\nFirst, set up python environment and dependencies. \n#### using pip\n```\npython3 -m venv env\nsource env/bin/activate\npip install -r requirements.txt\n```\n#### using conda\n```\nconda env create -f environment.yml\nconda activate g2v-env\n```\n\nThe setup was tested on Python 3.7.\nVersions of all required programs appear in `requirements.txt` (for pip) and `environment.yml` (for conda).\n\n### code availability\nThe source code used to train the word2vec model, extract its embedding and functional classifier can be\ndownloaded using pip:\n\n```\npip install genomic-embeddings\n```\n\n### Trained gene annotation embedding\nThe trained word2vec model on the entire genomic corpus are available in `models_and_data` as a gensim model.\nTo farther use them for downstream analysis set up your working environment and load the model.\n\nIn python:\n```\nfrom genomic-embeddings import Embeddings\n\nmodel_path = model_and_data/gene2vec_w5_v300_tf24_annotation_extended/gene2vec_w5_v300_tf24_annotation_extended_2021-10-03.w2v\ngene_embeddings = Embeddings.load_embeddings(model_path)\n```\n\nfrom here you may use [gensim api](https://radimrehurek.com/gensim/models/word2vec.html) to extract words embeddings, \ncalculate distances between words and more \nFor example:\n```\ngene_embeddings.wv[\"K09140.2\"]\n```\nwill obtain the embedding of the word `K09140.2`, a sub-cluster of the KO identifier `K09140` in KEGG.\n\n### Two-dimensional embedding space\nGene embeddings after dimension reduction using UMAP are available as a pickle file.\n\nIn python:\n```\nfrom genomic-embeddings import Embeddings\n\nembeddings_2d_rep_path = \"model_and_data/gene2vec_w5_v300_tf24_annotation_extended/words_umap_2021-10-03\"\nembeddings_2d = Embeddings.get_2d_mapping(embeddings_2d_rep_path)\n```\n\n### Functional classifier\nTo re-train all function classifier\\generate performance plots:\n\n```\nfrom genomic_embeddings.models import NNClf\nfrom genomic_embeddings.data import Embedding\nfrom genomic_embeddings.plot import ModelPlots\n\nmetadata_path = '/models_and_data/metadata.csv'\nlabels = ['Prokaryotic defense system','Ribosome','Secretion system'] # example labels\n\n# load embedding\nemb = Embedding(mdl=model_path, metadata=metadata_path, labels=labels)\nemb.process_data_pipeline(label='label', q='', add_other=True)\nX, y = emb.data.drop(columns=['label']).values, emb.data['label'].values\n\n# classify\nclf = NNClf(X=X, y=y, out_dir='./')\nclf.classification_pipeline('labe', alias='DNN')\n\n# plot \nplotter = ModelPlots(mdl=clf)\nplotter.plot_precision_recall()\nplotter.plot_roc()\n```\n### Function classification model validation\nFunction classification validations are available in:\n`models_and_data/gene2vec_w5_v300_tf24_annotation_extended/predictions`.   \nTo re-run validations and generate AUC and AUPR graphs run the following script:\n```\npython scripts/classify.py --model PATH_TO_W2V_MDL --output PATH_TO_OUT_DIR --metadata PATH_TO_METADATA\n```\nThe csv file `metadata.csv` can be found in `models_and_data`.  \nRunning this script will produce all data found under the folder:  \n`models_and_data/gene2vec_w5_v300_tf24_annotation_extended/predictions`\n\n### Function classification of all hypothetical proteins\nAll predictions of hypothetical proteins in the corpus can be found here:\n`models_and_data/gene2vec_w5_v300_tf24_annotation_extended/predictions/hypothetical_predictions.pkl`\n\nTo load the file as table, run in python:\n```\nimport \npreds_path = \"models_and_data/gene2vec_w5_v300_tf24_annotation_extended/predictions/hypothetical_predictions.pkl\"\npreds = get_functional_prediction(preds_path)\n```\nor the alternative  \n```\nimport pandas as pd\ntable = pd.read_pickle(\"models_and_data/gene2vec_w5_v300_tf24_annotation_extended/predictions/hypothetical_predictions.pkl\")\n```\nTo **regenerate** the model predictions run:\n```\ncd models_and_data/gene2vec_w5_v300_tf24_annotation_extended/\npython scripts/predict_hypothetical.py --model PATH_TO_W2V_MDL --output PATH_TO_OUT_DIR --metadata ../metadata.csv\n```\n\n\n\n###  Re-training word embeddings using the corpus\nRe-training word embeddings with different parameters can be executed using the following script:\n1. First, go to `models_and_data` folder and extract the corpus files\n```\ncd models_and_data \ntar -zxvf corpus.tar.gz\n```\n2. Train the model\n```\npython src/gene2vec.py --input 'corpus/*.txt'\n```\nTo change specific parameters of the algorithm run\n`python src/gene2vec.py --help` and configure accordingly. \n\n\n### Running times\nModel loading, result generation and analysis script are anticipated to run from few seconds up to 4-5 min.\\\nre-training of language model, and dimensionality reduction can take up to 10h with 20 CPUs.\n\n\n### Paper figures reproducibility\nAll paper figures (excluding illustrations) are available as a jupyter notebook.  \nTo run the notebook on your computer, go to `figures/` and type `jupyter notebook` in your command line.  \nThe notebook `paper_figures.ipynb` will be available on your local machine.  \n\n*Note:* running the notebook requires the `models_and_data` folder, configure paths accordingly.\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "genomic-embeddings",
    "package_url": "https://pypi.org/project/genomic-embeddings/",
    "platform": null,
    "project_url": "https://pypi.org/project/genomic-embeddings/",
    "project_urls": {
      "GitHub": "https://github.com/burstein-lab/genomic-nlp"
    },
    "release_url": "https://pypi.org/project/genomic-embeddings/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Package supporting the paper Deciphering microbial gene function using natural language processing",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14737971,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3511ff615d8b633e2b06157b8e01eb8e0d7bf4b5dbc612170437a1652bc84161",
          "md5": "95280fa4b664fa1a93afa58d83734254",
          "sha256": "de29099622482d6142e897d63d08fa5aa3a3e2f30d28f9011f778cfe1110b479"
        },
        "downloads": -1,
        "filename": "genomic_embeddings-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95280fa4b664fa1a93afa58d83734254",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 41460,
        "upload_time": "2022-08-11T09:17:40",
        "upload_time_iso_8601": "2022-08-11T09:17:40.390248Z",
        "url": "https://files.pythonhosted.org/packages/35/11/ff615d8b633e2b06157b8e01eb8e0d7bf4b5dbc612170437a1652bc84161/genomic_embeddings-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccef230c6de9ed350a870277ff601f163f78adaa000c4a951168cddb7f26a6b1",
          "md5": "5c69ca5e6b24622a183b441710ffb9b8",
          "sha256": "3b75877c3e62e7eb10be6b666e5e1c207d4f64b8314b51d8c0b992745cf42ffa"
        },
        "downloads": -1,
        "filename": "genomic_embeddings-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5c69ca5e6b24622a183b441710ffb9b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 809550,
        "upload_time": "2022-08-11T09:17:49",
        "upload_time_iso_8601": "2022-08-11T09:17:49.340173Z",
        "url": "https://files.pythonhosted.org/packages/cc/ef/230c6de9ed350a870277ff601f163f78adaa000c4a951168cddb7f26a6b1/genomic_embeddings-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c635290e72747fedfd5bd54e130c7159457d2dfb041445ca5dff6e3e979a6ec",
          "md5": "5ed5ac4f81ca5bf0f354946307e70090",
          "sha256": "070a06e6077789473b4951b4c97ec5e546b93f221381ef70fdef38b903663f77"
        },
        "downloads": -1,
        "filename": "genomic_embeddings-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ed5ac4f81ca5bf0f354946307e70090",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 29027,
        "upload_time": "2022-08-12T09:21:10",
        "upload_time_iso_8601": "2022-08-12T09:21:10.577714Z",
        "url": "https://files.pythonhosted.org/packages/7c/63/5290e72747fedfd5bd54e130c7159457d2dfb041445ca5dff6e3e979a6ec/genomic_embeddings-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a5102dedacc6a1f9e07601310085967c9c39a7024064ff9f691baf8ebb27165",
          "md5": "d990bb7b2890676dd988629120bec556",
          "sha256": "c8d423afc96c3f16206959559f99cb4aa5aa27f5541dcfa13705a32455aaceea"
        },
        "downloads": -1,
        "filename": "genomic_embeddings-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d990bb7b2890676dd988629120bec556",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6119812,
        "upload_time": "2022-08-12T09:21:36",
        "upload_time_iso_8601": "2022-08-12T09:21:36.847055Z",
        "url": "https://files.pythonhosted.org/packages/8a/51/02dedacc6a1f9e07601310085967c9c39a7024064ff9f691baf8ebb27165/genomic_embeddings-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c635290e72747fedfd5bd54e130c7159457d2dfb041445ca5dff6e3e979a6ec",
        "md5": "5ed5ac4f81ca5bf0f354946307e70090",
        "sha256": "070a06e6077789473b4951b4c97ec5e546b93f221381ef70fdef38b903663f77"
      },
      "downloads": -1,
      "filename": "genomic_embeddings-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5ed5ac4f81ca5bf0f354946307e70090",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 29027,
      "upload_time": "2022-08-12T09:21:10",
      "upload_time_iso_8601": "2022-08-12T09:21:10.577714Z",
      "url": "https://files.pythonhosted.org/packages/7c/63/5290e72747fedfd5bd54e130c7159457d2dfb041445ca5dff6e3e979a6ec/genomic_embeddings-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a5102dedacc6a1f9e07601310085967c9c39a7024064ff9f691baf8ebb27165",
        "md5": "d990bb7b2890676dd988629120bec556",
        "sha256": "c8d423afc96c3f16206959559f99cb4aa5aa27f5541dcfa13705a32455aaceea"
      },
      "downloads": -1,
      "filename": "genomic_embeddings-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "d990bb7b2890676dd988629120bec556",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6119812,
      "upload_time": "2022-08-12T09:21:36",
      "upload_time_iso_8601": "2022-08-12T09:21:36.847055Z",
      "url": "https://files.pythonhosted.org/packages/8a/51/02dedacc6a1f9e07601310085967c9c39a7024064ff9f691baf8ebb27165/genomic_embeddings-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}