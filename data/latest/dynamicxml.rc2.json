{
  "info": {
    "author": "Clay Brooks",
    "author_email": "clay_brooks@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: The Unlicense (Unlicense)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# dynamicxml\n\nA simple extension of Etree that gives users the ability to directly access attributes and nodes without having to\nimplement boilerplate python code.\n\nRationale for this library: [Dynamic XML Library with Python](https://claybrooks.github.io/python/2021/04/09/python-dynamic-xml.html)\n\nPip Installer: [pip](https://pypi.org/project/dynamicxml/)\n\npython -m pip install dynamicxml\n\n`DynamicElement` is a drop-in replacement for any Etree code that you already have\n\n```xml\n<!-- ConfigFile.xml -->\n<ConfigurationData>\n    <Runtime timeout=\"1000\" runtimeDataPath=\"/path/to/runtime/data\" />\n</ConfigurationData>\n```\n\n```python\n# main.py\nimport dynamicxml\n\n# parse the data and get back an instance of DynamicElement\nroot = dynamicxml.parse('data/ConfigFile.xml')\n\n# Print the tag of the root element, just like you would a typical etree\n# element\nprint (root.tag)\n\n# get access to the runtime data node, which is a child of\n# <ConfigurationData />.  The library returns a list of child\n# nodes, regardless of how many elements there are.  An \"AttributeError\"\n# is raised if the node does not exist.\nruntimeNode = root.Runtime[0]\n\n# Access the attributes of the node directly using the \"attr_\" prefix.\nprint (runtimeNode.attr_timeout)\nprint (runtimeNode.attr_runtimeDataPath)\n\n# set the data directly\nruntimeNode.attr_timeout = str(int(runtimeNode.attr_timeout) + 1)\n\n# easy writing of the data\ndynamicxml.write('data/ConfigFile_Updated.xml', root)\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/claybrooks/dynamic-xml",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynamicxml",
    "package_url": "https://pypi.org/project/dynamicxml/",
    "platform": "",
    "project_url": "https://pypi.org/project/dynamicxml/",
    "project_urls": {
      "Homepage": "https://github.com/claybrooks/dynamic-xml"
    },
    "release_url": "https://pypi.org/project/dynamicxml/1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An etree utility package",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10427856,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ccc687811556fc6006f057642f598869357ae79fb49605d95c2eda3f5eb3942",
          "md5": "246cd5a49dbf070c09953a8b8a08cdb6",
          "sha256": "67ea84f0fc5ee5a332d59cd88fe5fabb50dab14b17dfb924e92d3b475d1cec24"
        },
        "downloads": -1,
        "filename": "dynamicxml-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "246cd5a49dbf070c09953a8b8a08cdb6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4573,
        "upload_time": "2021-04-12T00:19:11",
        "upload_time_iso_8601": "2021-04-12T00:19:11.190890Z",
        "url": "https://files.pythonhosted.org/packages/8c/cc/687811556fc6006f057642f598869357ae79fb49605d95c2eda3f5eb3942/dynamicxml-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3041b60d80b30203fae9505cf3957dfb78f0bde9443d47497590c10bca402aec",
          "md5": "bf08e121da99f8500d805fc9ea9168f1",
          "sha256": "edc96329e07f26d014fc9bdd0e62ac69830d146a8eaf5399d8f4143fed4b7abf"
        },
        "downloads": -1,
        "filename": "dynamicxml-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf08e121da99f8500d805fc9ea9168f1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4634,
        "upload_time": "2021-05-21T12:38:36",
        "upload_time_iso_8601": "2021-05-21T12:38:36.723450Z",
        "url": "https://files.pythonhosted.org/packages/30/41/b60d80b30203fae9505cf3957dfb78f0bde9443d47497590c10bca402aec/dynamicxml-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3041b60d80b30203fae9505cf3957dfb78f0bde9443d47497590c10bca402aec",
        "md5": "bf08e121da99f8500d805fc9ea9168f1",
        "sha256": "edc96329e07f26d014fc9bdd0e62ac69830d146a8eaf5399d8f4143fed4b7abf"
      },
      "downloads": -1,
      "filename": "dynamicxml-1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bf08e121da99f8500d805fc9ea9168f1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4634,
      "upload_time": "2021-05-21T12:38:36",
      "upload_time_iso_8601": "2021-05-21T12:38:36.723450Z",
      "url": "https://files.pythonhosted.org/packages/30/41/b60d80b30203fae9505cf3957dfb78f0bde9443d47497590c10bca402aec/dynamicxml-1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}