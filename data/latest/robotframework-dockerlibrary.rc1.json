{
  "info": {
    "author": "Oliver Uhlar",
    "author_email": "oliverkolombo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Robot Framework :: Library",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# DockerLibrary\n\n**Library version:**  &nbsp;  1.0\n\n**Library scope:**   &nbsp; &nbsp; &nbsp;Docker\n\n---\n\n## Introduction\nA library providing keywords for handling docker.\n\nDockerLibrary is Robot Framework's library that provides a set of keywords for handling docker. This library support all Docker CLI(docker) commands and options to work with docker. Furthermore, It provides handling multiple containers and also phenomenon called \"docker in docker\". The last extra feature is class DotDictionary which makes it easier to work with the output of basic Docker CLI commands.\n\n### Table of contents\n* [Docker CLI(docker)](#docker-clidocker)\n* [Multiple Docker containers](#multiple-docker-containers)\n* [Docker in Docker](#docker-in-docker)\n* [DotDictionary and parse commands](#parse-commands)\n\n---\n\n## Docker CLI(docker)\n\nThe basic [docker (base command)](https://docs.docker.com/engine/reference/commandline/docker/) takes this form:\n\n```\ndocker | <base command> | [OPTIONS]\n```\n\n**Example:**\n\n```\ndocker  run  --name  test  -dt  ubuntu\n```\n\n---\n\n## Multiple Docker containers\nKeywords for handling multiple conatiners at once.\n### Create multiple containers\n\nKeywords for creating multiple containers with one command.\n\n**Returns:** List[str], where strings are containers ids which were created\n\n&nbsp;\n\n```\ncreate multiple containers | <number of containers> | <name of image>\n```\n**Example:**\n```\ncreate multiple containers  3  ubuntu\n```\n\n### Docker command for all containers\n\nKeywords for executing basic Docker CLI commands for multiple containers at once.\n\n**Returns:**\n* if parameter \\<parse to dotd\\> is true: Dict[str, DotDictionary], where keys are containers ids and values are outputs from command execution converted to DotDictionary\n* if parameter \\<parse to dotd\\> is false: Dict[str, str], where keys are containers ids and values are strings outputs from command execution\n```\ndocker command for all | <containers ids> | <parse to dotd> | <base command> | [OPTIONS]\n```\n**Example:**\n```\n${containers_id} =  docker  ps  -a  -q\ndocker command for all  ${containers_id.stdout}  False  rm  -f\n```\n\n---\n\n## Docker in Docker\nKeyword for handling docker in docker.\n\n### docker in docker\nRuns host docker in docker using default Unix socket ```/var/run/docker.sock``` and then it creates multiple containers of given image\n\nThere are three options for docker in docker host:\n* Ubuntu\n* Alpine\n* Centos\n\n**Returns:** Dict[str, List[str]], where key is host container id and value is list of containers ids which where created\n\n&nbsp;\n\n```\ndocker in docker | alpine/ubuntu/centos | <custom image> | <number of containers to create>\n```\n\n**Example:**\n\n```\ndocker in docker  alpine  ubuntu  5\n```\n\n---\n\n## Parse commands\nKeywords that helps to parse outputs from docker.\n\n### Parse docker response\n\nIf parameter \\<parse to dotd\\> is set True, It will try to parse the output given to DotDictionary and if it fails it returns string.\nIf parameter \\<parse to dotd\\> is set False. It will remove all whitespace characters from string given and return that string.\n\n**Returns:** DotDictionary or List[DotDictionary] or string\n\nDotDictionary is a class for easier working with output of docker commands.\n\n**Example of using DotDictionary:**\n```\n${containers_id} =  docker  ps  -a  -q\n${dictionary} =  docker command for all  ${containers_id.stdout}  True  inspect\n${values} =  Get Dictionary Values  ${dictionary}\nLog  ${values[0].Config.Entrypoint}\n```\n\n**Returns:** DotDictionary or List[DotDictionary] or string\n```\nparse docker response | <response> | <parse to dotd>\n```\n**Example:**\n```\n${parsed_to_dotd_output} =  parse docker response  ${result.stdout}  True\n```\n\n### get containers ids\n\nKeyword to get containers ids.\n\n**Returns:** List[str], where strings are container ids\n```\nget containers ids\n```\n**Example:**\n```\n${containers_ids} =  get containers ids\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "testing testautomation robotframework docker dind containerization",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "robotframework-dockerlibrary",
    "package_url": "https://pypi.org/project/robotframework-dockerlibrary/",
    "platform": null,
    "project_url": "https://pypi.org/project/robotframework-dockerlibrary/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/robotframework-dockerlibrary/1.0.0/",
    "requires_dist": [
      "packaging",
      "robotframework (==4.1.2)"
    ],
    "requires_python": "",
    "summary": "A Robot Framework Docker Library",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13910828,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d3bc4038eb31fec2b23d0a620c7435cf9c1f6da843e36fa75f9fbf2d29c35b8",
          "md5": "373a91635b243645a719adfe1daa2722",
          "sha256": "da7be8d1a85ab1fdd4f58714a58d3f14a466850572aaf6021e86e485e7df8744"
        },
        "downloads": -1,
        "filename": "robotframework_dockerlibrary-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "373a91635b243645a719adfe1daa2722",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9659,
        "upload_time": "2022-05-23T18:33:59",
        "upload_time_iso_8601": "2022-05-23T18:33:59.016328Z",
        "url": "https://files.pythonhosted.org/packages/7d/3b/c4038eb31fec2b23d0a620c7435cf9c1f6da843e36fa75f9fbf2d29c35b8/robotframework_dockerlibrary-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a67220587e033cfd97e85069b7136290b6b774eefbd30efd187aecc79192af6",
          "md5": "f7f0b6134705d1567443e49e4b18698a",
          "sha256": "ae8482bbb4596559fbfe7663c9a6e4a3659c11e5dd5d2ef5e8f6e2f17128ebc5"
        },
        "downloads": -1,
        "filename": "robotframework-dockerlibrary-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f7f0b6134705d1567443e49e4b18698a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6179,
        "upload_time": "2022-05-23T18:34:00",
        "upload_time_iso_8601": "2022-05-23T18:34:00.916444Z",
        "url": "https://files.pythonhosted.org/packages/6a/67/220587e033cfd97e85069b7136290b6b774eefbd30efd187aecc79192af6/robotframework-dockerlibrary-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d3bc4038eb31fec2b23d0a620c7435cf9c1f6da843e36fa75f9fbf2d29c35b8",
        "md5": "373a91635b243645a719adfe1daa2722",
        "sha256": "da7be8d1a85ab1fdd4f58714a58d3f14a466850572aaf6021e86e485e7df8744"
      },
      "downloads": -1,
      "filename": "robotframework_dockerlibrary-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "373a91635b243645a719adfe1daa2722",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9659,
      "upload_time": "2022-05-23T18:33:59",
      "upload_time_iso_8601": "2022-05-23T18:33:59.016328Z",
      "url": "https://files.pythonhosted.org/packages/7d/3b/c4038eb31fec2b23d0a620c7435cf9c1f6da843e36fa75f9fbf2d29c35b8/robotframework_dockerlibrary-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a67220587e033cfd97e85069b7136290b6b774eefbd30efd187aecc79192af6",
        "md5": "f7f0b6134705d1567443e49e4b18698a",
        "sha256": "ae8482bbb4596559fbfe7663c9a6e4a3659c11e5dd5d2ef5e8f6e2f17128ebc5"
      },
      "downloads": -1,
      "filename": "robotframework-dockerlibrary-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f7f0b6134705d1567443e49e4b18698a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6179,
      "upload_time": "2022-05-23T18:34:00",
      "upload_time_iso_8601": "2022-05-23T18:34:00.916444Z",
      "url": "https://files.pythonhosted.org/packages/6a/67/220587e033cfd97e85069b7136290b6b774eefbd30efd187aecc79192af6/robotframework-dockerlibrary-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}