{
  "info": {
    "author": "",
    "author_email": "Suneel Belkhale <belkhale@stanford.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# AttrDict\nThis package contains a generic dictionary `AttrDict`, which implements nested dictionaries that are easy to access, filter, combine, and write to.\n\nInstallation: `pip install attr-dicts`:\n\nPyPI: https://pypi.org/project/attr-dicts/\n\n**Creation**: Let's say we want to store the following nested structure of arrays:\n```angular2html\n- food\n    - carrot: [1,2,3]\n    - apple: [4,5,6]\n    - broccoli: [7,8,9,10]\n- utensils\n    - fork\n        - three_prong: [11,12]\n        - four_prong: [13,14,15]\n    - spoon: [16,17,18]\n```\n\nAttrDicts use '/' to separate keys, and this is built in to read/write operations. Here's two examples of how to instantiate the above structure.\n```angular2html\nd = AttrDict()\nd['food/carrot'] = [1,2,3]\nd.food.apple = [4,5,6]\nd['food/broccoli'] = [7,8,9,10]\nd['utensils/fork/three_prong'] = [11,12]\nd['utensils/fork/four_prong'] = [13,14,15]\nd['utensils/spoon'] = [16,17,18]\n```\nNote that both indexing and dot access work, since AttrDicts inherit from the DotMap class. Here's a slightly less effort way:\n```angular2html\nd = AttrDict(\n    food=AttrDict(carrot=[1,2,3], apple=[4,5,6], broccoli=[7,8,9,10]),\n    utensils=AttrDict(\n        fork=AttrDict(three_prong=[11,12], four_prong=[13,14,15]), \n        spoon=[16,17,18]\n    )\n)\n```\n**Access**: There are several ways to access an AttrDict.\n1. `d['utensils/fork/three_prong']`: standard dictionary access, but using '/' to implicitly sub-index (KeyError if missing)\n2. `d.utensils.fork.three_prong`: dotmap access (AttributeError if missing)\n3. `d.utensils['fork/three_prong']`: mixed indexing + dotmap (either AttributeError or KeyError if missing)\n4. `d >> 'utensils/fork/three_prong`: (DEPRECATED) required key access, will error if not present.\n5. `d << 'utensils/fork/three_prong`: optional key access, will return None if not present\n6. `d > ['utensils/fork/three_prong,'utensils/spoon']`: required key filtering, returns sub-dict. errors if a key in the arg list is not present.\n7. `d < ['utensils/fork/three_prong,'utensils/spoon']`: optional key access, returns sub-dict, ignores keys that aren't present.\n\n**Node/Leaf operations**: Leaf nodes are any access pattern that returns something that isn't an AttrDict. In the above example, 'food' is a node key, while 'food/carrot' is a leaf key.\nWe can operate on all leaf nodes at once, here are some example methods:\n1. `d.leaf_keys()`: Generator that yields leaf keys under a depth first traverse.\n2. `d.list_leaf_keys()`: Outputs a list instead of generator.\n3. `d.leaf_values()`: Generator that yields leaf values under a depth first traverse.\n4. `applied_d = d.leaf_apply(lambda v: <new_v>)`: Apply a function(value) on all leaf values, and create a new AttrDict.\n5. `filtered_d = d.leaf_filter(lambda k,v: <condition>)`: Only keep leaf keys where `condition` is true in new AttrDict.\n\nSimilarly, there are functions that operate on both nodes and leaves. \n\n**Combining**: Combining AttrDicts can be done in several ways:\n1. `new_d = d1 & d2`: Standard join, returns a new AttrDict, which will favor keys from d2 if there are duplicates.\n2. `d1.combine(d2)`: Mutates d1 to join the arrays.\n3. `new_d = AttrDict.leaf_combine_and_apply([d1, d2, ...], lambda vs: <return one value>)`: Given a list of AttrDicts with the same keys, will create one AttrDict where the value for a given key `k` is some function of `vs = [d1[k], d2[k], ...]`.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "attr-dicts",
    "package_url": "https://pypi.org/project/attr-dicts/",
    "platform": null,
    "project_url": "https://pypi.org/project/attr-dicts/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Stanford-ILIAD/attrdict/issues",
      "Homepage": "https://github.com/Stanford-ILIAD/attrdict"
    },
    "release_url": "https://pypi.org/project/attr-dicts/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "AttrDict for nested dictionary processing and utilities",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17138099,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7b4e0c9e89fb350bf1900b1bbbed6bd9d9b63efb398ca958e435761e381836e",
          "md5": "e4a805dfb2927dec2b14e13968723f1e",
          "sha256": "2ded0264bd3b0f84522b2bd6db965b4e1f35e3a9f0983872212491d8dae92366"
        },
        "downloads": -1,
        "filename": "attr_dicts-1.0-1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4a805dfb2927dec2b14e13968723f1e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8902,
        "upload_time": "2023-03-03T02:49:49",
        "upload_time_iso_8601": "2023-03-03T02:49:49.208352Z",
        "url": "https://files.pythonhosted.org/packages/d7/b4/e0c9e89fb350bf1900b1bbbed6bd9d9b63efb398ca958e435761e381836e/attr_dicts-1.0-1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c30956fc274547f7cb29f4203c06f041769ea3ecd6206c8b785ab7775dc1d5f7",
          "md5": "681b81dd924424f9fa24f4826f6a014c",
          "sha256": "63595379da39a7cdb719dc6020ac4494b4ab02f7d9c5c67855dc608972e85ac6"
        },
        "downloads": -1,
        "filename": "attr_dicts-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "681b81dd924424f9fa24f4826f6a014c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8428,
        "upload_time": "2023-02-23T00:26:19",
        "upload_time_iso_8601": "2023-02-23T00:26:19.173866Z",
        "url": "https://files.pythonhosted.org/packages/c3/09/56fc274547f7cb29f4203c06f041769ea3ecd6206c8b785ab7775dc1d5f7/attr_dicts-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdda3b57aca73718b330d8fc497d2a6d373826c647111567dd7cb14f81d001be",
          "md5": "8f0766ed31a59d9fcaba1f3ce1a4e960",
          "sha256": "00de364c77b640cec3e7ecc624553eb7667acb7104430800ea8e078b2bd47472"
        },
        "downloads": -1,
        "filename": "attr_dicts-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8f0766ed31a59d9fcaba1f3ce1a4e960",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8429,
        "upload_time": "2023-02-23T00:26:20",
        "upload_time_iso_8601": "2023-02-23T00:26:20.351603Z",
        "url": "https://files.pythonhosted.org/packages/fd/da/3b57aca73718b330d8fc497d2a6d373826c647111567dd7cb14f81d001be/attr_dicts-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8ca403efa9e49a5c1817b47bcd73a8a605f35226fc94985bd105190cb137ceb",
          "md5": "68fdeed51681e37063f32fe820ae710c",
          "sha256": "a2a55e2c5c141661a9ecc32a83ec495278f722b3d55548d0d42e726873d06370"
        },
        "downloads": -1,
        "filename": "attr_dicts-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68fdeed51681e37063f32fe820ae710c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8919,
        "upload_time": "2023-03-03T02:50:36",
        "upload_time_iso_8601": "2023-03-03T02:50:36.661472Z",
        "url": "https://files.pythonhosted.org/packages/e8/ca/403efa9e49a5c1817b47bcd73a8a605f35226fc94985bd105190cb137ceb/attr_dicts-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cb63d2035a0d30a601a4742a1bd7008bd8b60cc1ff12a6971080e6b86f17544",
          "md5": "b5373e35c61433fa342c66c3e7922fc7",
          "sha256": "a3a1c03e775a467f5aba89c97c97dcb949683ad1047af087914362ed7ab3fa4a"
        },
        "downloads": -1,
        "filename": "attr_dicts-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b5373e35c61433fa342c66c3e7922fc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7747,
        "upload_time": "2023-03-03T02:50:38",
        "upload_time_iso_8601": "2023-03-03T02:50:38.170679Z",
        "url": "https://files.pythonhosted.org/packages/8c/b6/3d2035a0d30a601a4742a1bd7008bd8b60cc1ff12a6971080e6b86f17544/attr_dicts-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8ca403efa9e49a5c1817b47bcd73a8a605f35226fc94985bd105190cb137ceb",
        "md5": "68fdeed51681e37063f32fe820ae710c",
        "sha256": "a2a55e2c5c141661a9ecc32a83ec495278f722b3d55548d0d42e726873d06370"
      },
      "downloads": -1,
      "filename": "attr_dicts-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "68fdeed51681e37063f32fe820ae710c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8919,
      "upload_time": "2023-03-03T02:50:36",
      "upload_time_iso_8601": "2023-03-03T02:50:36.661472Z",
      "url": "https://files.pythonhosted.org/packages/e8/ca/403efa9e49a5c1817b47bcd73a8a605f35226fc94985bd105190cb137ceb/attr_dicts-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8cb63d2035a0d30a601a4742a1bd7008bd8b60cc1ff12a6971080e6b86f17544",
        "md5": "b5373e35c61433fa342c66c3e7922fc7",
        "sha256": "a3a1c03e775a467f5aba89c97c97dcb949683ad1047af087914362ed7ab3fa4a"
      },
      "downloads": -1,
      "filename": "attr_dicts-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b5373e35c61433fa342c66c3e7922fc7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7747,
      "upload_time": "2023-03-03T02:50:38",
      "upload_time_iso_8601": "2023-03-03T02:50:38.170679Z",
      "url": "https://files.pythonhosted.org/packages/8c/b6/3d2035a0d30a601a4742a1bd7008bd8b60cc1ff12a6971080e6b86f17544/attr_dicts-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}