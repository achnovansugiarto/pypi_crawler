{
  "info": {
    "author": "UCT Prague",
    "author_email": "miroslav.simek@vscht.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# oarepo-enrollments\n\n\n\n[![image][]][1]\n[![image][2]][3]\n[![image][4]][5]\n[![image][6]][7]\n[![image][8]][9]\n\n  [image]: https://img.shields.io/travis/oarepo/oarepo-enrollments.svg\n  [1]: https://travis-ci.com/oarepo/oarepo-enrollments\n  [2]: https://img.shields.io/coveralls/oarepo/oarepo-enrollments.svg\n  [3]: https://coveralls.io/r/oarepo/oarepo-enrollments\n  [4]: https://img.shields.io/github/tag/oarepo/oarepo-enrollments.svg\n  [5]: https://github.com/oarepo/oarepo-enrollments/releases\n  [6]: https://img.shields.io/pypi/dm/oarepo-enrollments.svg\n  [7]: https://pypi.python.org/pypi/oarepo-enrollments\n  [8]: https://img.shields.io/github/license/oarepo/oarepo-enrollments.svg\n  [9]: https://github.com/oarepo/oarepo-enrollments/blob/master/LICENSE\n\nOArepo Enrollment library provides a unified way for admin, curator or other users\nto ask person to enroll in a \"task\". The task might be anything - for example,\nassigning role to a member, to participate on editing a record, etc.\n\nThe user being enrolled might not yet exist in Invenio user database. If s/he does not,\nthe enrollment is completed after the user registers.\n\nThe enrollment might be \"automatic\" as well - that is, if the user already exists,\nno intervention is required from him/her.\n\nEnrollments can be grouped into one parent - that is, if user enrolls into parent enrollment,\nhe will be automatically enrolled into the children enrollments.\n\n# Table of Contents\n* [Installation](#Installation)\n* [Usage](#Usage)\n\t* [Enrolling user](#Enrolling-user)\n\t* [Handler implementation](#Handler-implementation)\n\t* [Handler registration](#Handler-registration)\n\t* [Revoking user](#Revoking-user)\n\t* [Listing enrollments](#Listing-enrollments)\n* [API](#API)\n\t* [``enroll``](#``enroll``)\n\t* [``EnrollmentHandler``](#``EnrollmentHandler``)\n\t* [``Enrollment``](#``Enrollment``)\n* [REST API](#REST-API)\n\t* [Enrolling user via POST](#Enrolling-user-via-POST)\n\t* [List enrollments](#List-enrollments)\n\t* [Getting enrollment](#Getting-enrollment)\n\t* [Revoking enrollment](#Revoking-enrollment)\n\t* [Security](#Security)\n\t\t* [``OAREPO_ENROLLMENT_LIST_PERMISSION_FACTORY``](#``OAREPO_ENROLLMENT_LIST_PERMISSION_FACTORY``)\n\t\t* [``OAREPO_ENROLLMENT_LIST_PERMISSION_FILTER``](#``OAREPO_ENROLLMENT_LIST_PERMISSION_FILTER``)\n\t\t* [``OAREPO_ENROLLMENT_RETRIEVE_PERMISSION_FACTORY``](#``OAREPO_ENROLLMENT_RETRIEVE_PERMISSION_FACTORY``)\n\t\t* [``OAREPO_ENROLLMENT_ENROLL_PERMISSION_FACTORY``](#``OAREPO_ENROLLMENT_ENROLL_PERMISSION_FACTORY``)\n\t\t* [``OAREPO_ENROLLMENT_REVOKE_PERMISSION_FACTORY``](#``OAREPO_ENROLLMENT_REVOKE_PERMISSION_FACTORY``)\n* [Command-line tools](#Command-line-tools)\n\t* [Listing enrollments on cmdline](#Listing-enrollments-on-cmdline)\n\t* [Revoking enrollments on cmdline](#Revoking-enrollments-on-cmdline)\n\t* [Creating enrollments on cmdline](#Creating-enrollments-on-cmdline)\n* [Configuration](#Configuration)\n* [Templates](#Templates)\n* [Signals](#Signals)\n\n\n## Installation\n\n```bash\n    pip install oarepo-enrollments\n```\n\n## Usage\n\n### Enrolling user\n\nTo enroll user, call\n\n```python\n\nfrom oarepo_enrollments import enroll\n\nenroll(\n    enrollment_type='role',\n    recipient='sample.user@test.com',\n    subject='You have become a curator !',\n    body=\"\"\"\nDear user,\nby clicking on the link below you will become a curator for this repository.\n\n    {{ enrollment_url }}\n\nCongratulations!\n    \"\"\",\n\n    # extra params need by the enrollment handler, in this case the role to assign the user to\n    extra_data=dict(role='curators')\n)\n```\n\nAlternatively, the email subject and body might be omitted - in that case the caller must\nnotify the user being enrolled.\n\n\nOn the background, this will:\n\n  1. A unique enrollment id is generated and associated with recipent email, kwargs are json-serialized\n     and together with id written to the database.\n  2. If ``mode`` is ``ENROLL_SKIP_EMAIL``: A check is made if a user with this email\n     address already exists. If so, calls the enrollment handler (see below) and returns.\n  3.\n      a. An email is created and sent. The subject and body are processed as jinja templates,\n         receiving enrollment url in context variables.\n      b. or caller is responsible for sending the email / text message / notification / etc.\n  4. User receives the email / message / notification and clicks on the enrollment link\n  5. User must log in or register via standard invenio or 3-rd party registration\n  6. An expiration is checked. If expired or already used, user is redirected to appropriate failure page.\n  7. Enrollment url view checks if enrollment handler returns True from ``acceptance_required`` property.\n     If so, user is redirected to the ``accept_url`` and when accepts the invitation, timestamp is stored\n     in the db and user is redirected back to the enrollment url.\n  8. Enrollment url view calls the ``enroll`` method on enrollment handler with:\n     * current User of the logged-in user\n     * any extra kwargs passed to the enroll call\n  9. Enrollment handler performs enrollment action (whatever it is). On error raises EnrollmentException\n  10. The database record is enriched with timestamp, enrollment status and user instance.\n  11. user is redirected via 302 to the redirection success or failure url. These are taken from:\n      * urls passed to enroll function\n      * urls retrieved from enrollment handler\n      * default urls from flask configuration\n\n**Note:** once the enrollment link has been consumed, it can not be reused by a different user.\n\n**Note:** expired link can not be used to enroll, it might be used if user has already enrolled\nand user will be redirected to the success url.\n\n### Handler implementation\n\nEnrollment handler is a function with signature:\n\n```python\n\nfrom oarepo_enrollments import EnrollmentHandler\n\nfrom invenio_accounts.models import User, Role\nfrom invenio_db import db\n\nclass AssignRole(EnrollmentHandler):\n    def enroll(self, user: User, role=None, **kwargs) -> bool:\n      role = Role.query.filter_by(name=role).one()\n      user.roles.append(role)\n      db.session.add(user)\n      db.session.commit()\n\n    def revoke(self, user: User, role=None, **kwargs) -> bool:\n      role = Role.query.filter_by(name=role).one()\n      user.roles.remove(role)\n      db.session.add(user)\n      db.session.commit()\n```\n\n### Handler registration\n\nRegister handler in setup.py:\n\n```python\nsetup(\n  # ...\n  entry_points={\n    'oarepo_enrollments.enrollments': [\n        'role = my.module:AssignRole',\n    ],\n  }\n)\n```\n\n### Revoking user\n\n```python\n\nfrom oarepo_enrollments import revoke\n\nrevoke(\n    enrollment=<instance of enrollment, key or id>\n)\n```\n\n### Listing enrollments\n\nIf you have specified \"external_key\" when creating the enrollment, you can list the enrollments\nby the key and enrollment type:\n\n```python\n\nfrom oarepo_enrollments import list_enrollments\n\nfor enrollment in list_enrollments(external_key='test', enrollment_type='role'):\n    print(enrollment)\n```\n\n## API\n\n### ``enroll``\n\n```python\n\nfrom oarepo_enrollments import enroll, ENROLL_MANUALLY, ENROLL_AUTOMATICALLY, ENROLL_SKIP_EMAIL\n\ndef enroll(\n    enrollment: str,\n    recipient: str,\n    sender: invenio_accounts.models.User,  # optional, current_user is used if not specified\n    sender_email: str,       # optional, sender's email is used if not specified\n    subject: str,            # jinja template\n    body: str,               # jinja template\n    html: bool,              # set true if the body is a html document\n    language: str,           # language for flask-babelex\n    mode: ENROLL_XXX,        # see below\n    accept_url: str,         # override default accept url\n    reject_url: str,         # override default reject url\n    success_url='url',       # override the success url\n    failure_url='url',       # override the failure url\n    commit=True,             # commit the changes\n    external_key=None,       # set an external key (any string)\n    actions=None,            # actions\n    parent_enrollment=None,  # parent enrollment\n    **kwargs                 # any kwargs\n) -> None:\n    pass\n```\n\nThe **``mode``** parameter can be:\n  * ``ENROLL_MANUALLY`` - always send the enrollment email and enroll user only after clicked on the link\n  * ``ENROLL_AUTOMATICALLY`` - if a user with the given email address exists, enroll him/her but send the mail\n    as well\n  * ``ENROLL_SKIP_EMAIL`` - if a user with the given email address exists, enroll him/her and skip the mail\n\n**``subject``** and **``body``** are jinja templates. The following variables are passed in:\n  * ``enrollment_url`` - full enrollment url\n  * ``**kwargs`` - all the kwargs\n  * ``user`` - if the user has already registered, an instance of ``invenio_accounts.models.User``\n  * ``language`` - language parameter\n\n**``urls``** if passed override the default urls returned by the handler. The default implementation\nof the handler returns urls from the configuration\n\n**Actions** might be an array of strings associated with the enrollment. They can be used\nto provide searchable granularity to enrollments. For example, if the enrollment means\n\"right to a collection\", the actions might be an array of \"read\", \"update\", \"delete\".\n\n**``parent_enrollment``** is an enrollment that will control the state of this one.\nIf it is specified, no email is sent as it is supposed that one has been already\nsent for the parent enrollment. If the state of the parent enrollment changes, the\nstate of this one is changed accordingly.\n\n\n### ``EnrollmentHandler``\n\n```python\nfrom oarepo_enrollments.models import Enrollment\nfrom invenio_accounts.models import User\n\nclass EnrollmentHandler:\n    def __init__(self, enrollment: Enrollment):\n        self.enrollment = enrollment\n\n    def enroll(self, user: User, **kwargs) -> None:\n        raise NotImplementedError('Implement this')\n\n    def revoke(self, user: User, **kwargs) -> None:\n        raise NotImplementedError('Implement this')\n\n    acceptance_required = False\n\n    title = \"human readable title, implicitly self.__doc__\"\n\n    email_template = {\n        'subject': None,\n        'body': None,\n        'html': None\n    }\n\n    # templates, might be overriden to have per-handler specific template\n\n    success_template = 'oarepo/enrollment/success.html'\n    failure_template = 'oarepo/enrollment/failure.html'\n    accept_template = 'oarepo/enrollment/accept.html'\n    reject_template = 'oarepo/enrollment/reject.html'\n\n    # urls, might be overriden if for example using only rest API\n\n    enrollment_url = \"url on which user can enroll\"\n    accept_url = \"url on which user can accept the enrollment\"\n    reject_url = \"url to which user is redirected to when he rejected the enrollment\"\n    success_url = \"url to which user is redirected to when he accepted the enrollment\"\n    failure_url = \"url to which user is redirected to when enrollment failed\"\n```\n\n### ``Enrollment``\n\nA database model containing enrollment status.\n\n## REST API\n\n### Enrolling user via POST\n\n```\nPOST /api/enroll/\n```\n```json5\n{\n    enrollment_type: \"role\", // enrollment type, role is a built in enrollment type\n    recipient: \"someone@example.com\",\n    email_template: \"role-enrollment-email\",\n    language: \"language for email translations\",\n    mode: \"manual | automatic | skip_email\",\n    external_key: \"caller key - any - for later identification\",\n    // any args that will get passed to the handler\n    role: 'test',\n    actions: ['test']\n}\n```\nReturns:\n\n```json5\n{\n    'id': 1,\n    'enrollment_type': 'role',\n    'enrolled_email': 'someone@example.com',\n    'enrolled_user': null,\n    'granting_user': {\n        'email': 'granting@example.com'   // always the current user\n    },\n    'state': 'Pending',\n    'external_key': 'caller key - any - for later identification',\n    'extra_data': {\n        'role': 'test'\n    },\n    'start_timestamp': '2020-12-04T08:48:12.873987',\n    'expiration_timestamp': '2020-12-18T08:48:12.873987',\n    'accepted_timestamp': null,\n    'failure_reason': null,\n    'finalization_timestamp': null,\n    'rejected_timestamp': null,\n    'revocation_timestamp': null,\n    'revoker': null,\n    'user_attached_timestamp': null,\n    'actions': ['test']\n}\n```\n\nAn email will be sent to the user with the content (given by the template, see ``OAREPO_ENROLLMENT_MAIL_TEMPLATES``\nin configuration):\n\n```make\nContent-Type: text/plain; charset=\"utf-8\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nSubject: New role assigned to you\nFrom: granting@example.com\nTo: someone@example.com\nDate: Fri, 04 Dec 2020 10:11:08 +0100\nMessage-ID: <160707306860.2310753.11343254980107038800@krokd.local>\nReply-To: granting@example.com\n\nmiroslav.simek@vscht.cz wants to assign you a role \"test\" in UCT repository.\nTo accept or reject the role, please click on\n\nhttps://localhost/enroll/j2eh-ctr0-q2d6-4drb-y7kc-mapt-axfd-3053\n\nThank you for your cooperation,\n\nrepository@UCT\n```\n\n**Note:** Key or enrollment url (sent via email) is not returned for security reasons. If you need to pass it\nto javascript, make your own enrollment API. See [oarepo_enrollment/views/api.py](oarepo_enrollments/views/api.py)\nfor details.\n\n### List enrollments\n\n```\nGET /api/enroll/?enrollment_type=<abc>&external_key=<abc>&state=[pending,linked,accepted,rejected,success,failure,revoked]&page=&size=10\n```\nReturns:\n```json5\n{\n    \"pagination\": {\n        \"currentPage\": \"/api/enroll/?size=20&page=1\",\n        \"hasNext\": false,\n        \"hasPrev\": false,\n        \"pages\": 1,\n        \"size\": 20,\n        \"totalElements\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 1,\n            // as in get below\n        }\n    ]\n}\n```\n\n**Note:** Key (sent via email) is not returned for security reasons.\n\n### Getting enrollment\n\n```\nGET /api/enroll/<id>\n```\nReturns:\n```json5\n{\n    \"id\": 1,\n    \"enrollment_type\": \"role\",\n    \"external_key\": null,\n    \"enrolled_email\": \"someone@example.com\",\n    \"enrolled_user\": null,\n    \"granting_user\": {\n        \"email\": \"granting@example.com\"\n    },\n    \"revoker\": null,\n    \"extra_data\": {\n        \"role\": \"test\"\n    },\n    \"state\": \"Pending\",\n    \"actions\": [\"test\"],\n    \"start_timestamp\": \"Thu, 03 Dec 2020 21:26:40 -0000\",\n    \"expiration_timestamp\": \"Thu, 17 Dec 2020 21:26:40 -0000\",\n    \"user_attached_timestamp\": null,\n    \"accepted_timestamp\": null,\n    \"rejected_timestamp\": null,\n    \"finalization_timestamp\": null,\n    \"revocation_timestamp\": null,\n    \"failure_reason\": null\n}\n```\n\n**Note:** Key (sent via email) is not returned for security reasons.\n\n### Revoking enrollment\n\n```\nDELETE /api/enroll/<id>\n```\nReturns:\n```json5\n{\n    'id': 1,\n    'state': 'Revoked',\n    'revocation_timestamp': '2020-12-04T08:48:12.873987',\n    'revoker': {'email': 'revoker@example.com'},\n    // ... rest of data\n}\n```\n\n### Accepting enrollment\n\n```\nPOST /api/enroll/accept/<key>\n```\nReturns:\n```json5\n{\n    status: 'ok',\n    url: '<success url>'\n}\n```\n\nor\n\n```json5\n{\n    status: 'error',\n    message: '<error message>'\n}\n```\n\n\n### Security\n\nThe following configuration options define who has access to enrollments:\n\n#### ``OAREPO_ENROLLMENT_LIST_PERMISSION_FACTORY``\n\nFactory (or import string) returning Permission (or an object with ``can`` method) that limits access to listing.\nFor extensibility reasons the factory function must accept ``**kwargs``\n\n#### ``OAREPO_ENROLLMENT_LIST_PERMISSION_FILTER``\n\nA function (or import string) that takes ``Enrollment.query`` as argument and returns filtered\nquery set. The function might, for example, limit the enrollments only to those created\nby the ``current_user``.\n\nThe default implementation returns the input query without modification\n\n#### ``OAREPO_ENROLLMENT_RETRIEVE_PERMISSION_FACTORY``\n\nFactory (or import string) that takes ``enrollment: Enrollment`` instance and returns Permission.\nFor extensibility reasons the factory function must accept ``**kwargs``\n\n#### ``OAREPO_ENROLLMENT_ENROLL_PERMISSION_FACTORY``\n\nFactory (or import string) that returns Permission representing if user can create an enrollment.\nThe factory gets enrollment data passed in request as ``enrollment`` named parameter.\nFor extensibility reasons the factory function must accept ``**kwargs``\n\n#### ``OAREPO_ENROLLMENT_REVOKE_PERMISSION_FACTORY``\n\nFactory (or import string) that returns Permission representing if user can revoke an enrollment.\nThe factory gets enrollment instance as ``enrollment: Enrollment`` named parameter.\nFor extensibility reasons the factory function must accept ``**kwargs``\n\n\n## Command-line tools\n\n### Listing enrollments on cmdline\n\n```bash\n$ invenio oarepo:enroll list --state=Revoked\n\nenrolled_user      id  key    operation                  recipient        state    type\n---------------  ----  -----  -------------------------  ---------------  -------  ------\n                    2  vscht  read,update,delete,create  simeki@vscht.cz  Revoked  role\n\n$ invenio oarepo:enroll list --state=Revoked --format=json\n[\n    {\n        \"id\": 2,\n        \"type\": \"role\",\n        \"key\": \"vscht\",\n        \"recipient\": \"simeki@vscht.cz\",\n        \"enrolled_user\": \"\",\n        \"state\": \"Revoked\",\n        \"operation\": \"read,update,delete,create\",\n        \"actions\": []\n    }\n]\n```\n\nOptions:\n\n  * ``--enrollment-type`` - filter for this enrollment type\n  * ``--external-key`` - only return enrollments with this external key\n  * ``--state`` - only return enrollments in this state. Can be a list of\n    \"Pending\", \"Success\", \"Accepted\", \"Not accepted\", \"User attached\", \"Failed\", \"Revoked\"\n    separated by comma\n  * ``--actions`` - only return enrollments with these comma-separated actions\n\n\n### Revoking enrollments on cmdline\n\n```bash\n$ invenio oarepo:enroll revoke <enrollment_id>\n```\n\n### Creating enrollments on cmdline\n\n```bash\n# invenio oarepo:enroll enroll <enrollment_type> <recipient_email> <external_key> <extra_data>\n$ invenio oarepo:enroll enroll role simeki@vscht.cz vscht role=test\n```\n\nArguments:\n\n  * ``enrollment_type`` - the enrollment type for the new enrollment\n  * ``recipient_email`` - the email of the recipinet\n  * ``external_key`` - any string identifying the enrollment for out-of-this-library purposes\n  * ``extra_data`` - any extra data required by the enrollment's handler. Either use:\n     * `key=value`\n     * `{json_serialization of extra_data object}`\n\nOptions:\n  * ``--email-template`` - the email template to be used. If unset, defaults to 'default'\n  * ``--enrollment-method`` - the enrollment method. Use 'automatic', 'manual', 'skip-email',\n     see above for the meaning\n  * ``--expiration`` - override the default enrollment expiration period\n\n## Configuration\n\n```python\n# default mail link expiration is 14 days\nOAREPO_ENROLLMENT_EXPIRATION = 14\n\n# url for redirection\nOAREPO_ENROLLMENT_URL = '/enroll/<key>'\n\n# redirection url if the link has expired\nOAREPO_ENROLLMENT_EXPIRED_URL = '/enroll/expired/<key>'\n\n# redirection url if the link has been already consumed\nOAREPO_ENROLLMENT_CONSUMED_URL = '/enroll/consumed/<key>'\n\n# default accept url\nOAREPO_ENROLLMENT_DEFAULT_ACCEPT_URL = '/enroll/accept/<key>'\n\n# url that user is redirected to if he rejects an enrollment\nOAREPO_ENROLLMENT_DEFAULT_REJECT_URL = '/enroll/reject/<key>'\n\n# default url on success (if not specified by the task or caller)\nOAREPO_ENROLLMENT_DEFAULT_SUCCESS_URL = '/enroll/success/<key>'\n\n# default url on failure (if not specified by the task or caller)\nOAREPO_ENROLLMENT_DEFAULT_FAILURE_URL = '/enroll/failure/<key>'\n\n# if set, the Sender header will be added, From will be the enrolling user\nOAREPO_ENROLLMENT_REAL_SENDER_EMAIL = None\n\n# login url to redirect to when user is not logged in. If not set, SECURITY_LOGIN_URL is used\nOAREPO_ENROLLMENT_LOGIN_URL = None\n\n# parameter name for login page that means \"redirect after login is successful\nOAREPO_ENROLLMENT_LOGIN_URL_NEXT_PARAM = 'next'\n\n# name of the base template, from which enrollment templates inherit. It must supply\n# title and content blocks.\nOAREPO_ENROLLMENT_BASE_TEMPLATE = 'oarepo/enrollment/base.html'\n\n# pre-configured mail templates\nOAREPO_ENROLLMENT_MAIL_TEMPLATES = {\n    'default': {\n        'subject': 'You are being enrolled!',\n        'body': 'Click {{ enrollment_url }} to participate.',\n        'html': False\n    }\n}\n\n# user under which commandline tasks (enroll, revoke) are logged\nOAREPO_ENROLLMENT_CMDLINE_USER = None\n```\n\n## Templates\n\nIf you use HTML views provided by this library, you can customize them as follows:\n\n   * Specify your own base template (path within ``templates``) in ``OAREPO_ENROLLMENT_BASE_TEMPLATE``.\n      The template must provide ``title`` and ``content`` blocks\n   * Override the templates completely in your application templates.\n     They are in ``oarepo/enrollment`` folder and are called\n     ``accept.html``, ``failure.html``, ``reject.html``, ``success.html``. See the sources for passed\n     parameters etc.\n   * Override templates for a single enrollment type. In your handler, set the appropriate ``*_url``\n     properties\n\n## Signals\n\n```python\nimport oarepo_enrollments.signals\n\noarepo_enrollments.signals.enrollment_linked\n\"\"\"Notifies receivers that enrollment has been linked to an invenio user\n\n:param  enrollment: the linked enrollment\n\"\"\"\n\noarepo_enrollments.signals.enrollment_created\n\"\"\"Notifies receivers that enrollment has been created.\n\n:param  enrollment: the linked enrollment\n:return True if no notification should be sent\n\"\"\"\n\noarepo_enrollments.signals.enrollment_accepted\n\"\"\"Notifies receivers that enrollment has been accepted (when accept is required)\n\n:param  enrollment: the accepted enrollment\n\"\"\"\n\noarepo_enrollments.signals.enrollment_rejected\n\"\"\"Notifies receivers that enrollment has been rejected (when accept is required)\n\n:param  enrollment: the rejected enrollment\n\"\"\"\n\noarepo_enrollments.signals.enrollment_successful\n\"\"\"Notifies receivers that enrollment has been successfully carried out\n\n:param  enrollment: the successful enrollment\n\"\"\"\n\noarepo_enrollments.signals.enrollment_failed\n\"\"\"Notifies receivers that enrollment failed.\n\n:param  enrollment: the failed enrollment\n:param  exception: failure exception\n\"\"\"\n\noarepo_enrollments.signals.enrollment_duplicit_user\n\"\"\"Notifies receivers that the same enrollment is used by two different accounts.\n\n:param  enrollment: the failed enrollment\n:param  impostor: the second user that wants to use the enrollment\n\"\"\"\n\noarepo_enrollments.signals.enrollment_revoked\n\"\"\"Notifies receivers that enrollment has been successfully revoked\n\n:param  enrollment: the revoked enrollment\n\"\"\"\n\noarepo_enrollments.signals.revocation_failed\n\"\"\"Notifies receivers that revocation failed.\n\n:param  enrollment: the failed enrollment\n:param  exception: failure exception\n\"\"\"\n```\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/oarepo/oarepo-enrollments",
    "keywords": "invenio oarepo user enrollments",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "oarepo-enrollments",
    "package_url": "https://pypi.org/project/oarepo-enrollments/",
    "platform": "any",
    "project_url": "https://pypi.org/project/oarepo-enrollments/",
    "project_urls": {
      "Homepage": "https://github.com/oarepo/oarepo-enrollments"
    },
    "release_url": "https://pypi.org/project/oarepo-enrollments/1.2.2/",
    "requires_dist": [
      "wrapt (>=1.11.2)",
      "flask-rest-paginate",
      "tabulate",
      "pytest ; extra == 'dev'",
      "oarepo[tests] (~=3.3) ; extra == 'dev'",
      "mock ; extra == 'dev'",
      "markdown-toc ; extra == 'dev'",
      "pytest ; extra == 'tests'",
      "oarepo[tests] (~=3.3) ; extra == 'tests'",
      "mock ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "OArepo Enrollments library for record metadata validation",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10010956,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "203ca77af10c8ea261bb299b7e96865039db3fa4ae55d68c5bfecc1f492474a1",
          "md5": "2cb06cd1a0b4a6afa4142944b7cf6887",
          "sha256": "d98df095ec3d7fa7e1e5ebb3384d5a6da69f3373ee0516028a5751bb160549f7"
        },
        "downloads": -1,
        "filename": "oarepo_enrollments-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cb06cd1a0b4a6afa4142944b7cf6887",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 33910,
        "upload_time": "2020-12-08T11:54:09",
        "upload_time_iso_8601": "2020-12-08T11:54:09.220817Z",
        "url": "https://files.pythonhosted.org/packages/20/3c/a77af10c8ea261bb299b7e96865039db3fa4ae55d68c5bfecc1f492474a1/oarepo_enrollments-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22c37d97b7004b0c6ff0d6c44977e0424e090ac233df5b9b3f64f6f62a252a29",
          "md5": "66863c3d1a3b9efdc537d0a65d02003d",
          "sha256": "e58ef63ae553f715bb4b18c8594dcb0aa5890da63e55530a04282b6697c65fea"
        },
        "downloads": -1,
        "filename": "oarepo-enrollments-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "66863c3d1a3b9efdc537d0a65d02003d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30914,
        "upload_time": "2020-12-08T11:54:10",
        "upload_time_iso_8601": "2020-12-08T11:54:10.650062Z",
        "url": "https://files.pythonhosted.org/packages/22/c3/7d97b7004b0c6ff0d6c44977e0424e090ac233df5b9b3f64f6f62a252a29/oarepo-enrollments-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08a46dd36965cc6e30444a5b35df247073528f508ef66abdbec6677300e202f2",
          "md5": "29bc72d8706de495781c698752e7a06c",
          "sha256": "b45bd34e48af90ae49cba07d264e87fa163919280eca13f5da0de14bc47009c8"
        },
        "downloads": -1,
        "filename": "oarepo_enrollments-1.0.0a1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29bc72d8706de495781c698752e7a06c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 33938,
        "upload_time": "2020-12-08T11:13:34",
        "upload_time_iso_8601": "2020-12-08T11:13:34.946198Z",
        "url": "https://files.pythonhosted.org/packages/08/a4/6dd36965cc6e30444a5b35df247073528f508ef66abdbec6677300e202f2/oarepo_enrollments-1.0.0a1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "909df4d57157e812814b425f9a8c14ef8bb63d2a6ce4931118b57eeccb9ea05c",
          "md5": "5ef168b30faab57899cd7474a2c30c24",
          "sha256": "f3a0cb14d607c43e33db1dcd9cc64bbd15a765b5610ecd4947d6a15af8a5e954"
        },
        "downloads": -1,
        "filename": "oarepo-enrollments-1.0.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ef168b30faab57899cd7474a2c30c24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30955,
        "upload_time": "2020-12-08T11:13:36",
        "upload_time_iso_8601": "2020-12-08T11:13:36.122670Z",
        "url": "https://files.pythonhosted.org/packages/90/9d/f4d57157e812814b425f9a8c14ef8bb63d2a6ce4931118b57eeccb9ea05c/oarepo-enrollments-1.0.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a56378b291723d53fc0bcb5219bf641e3c46af99cf8c5e7007b215240d5bddf",
          "md5": "752f34e29059ec4af112c1131e1787fc",
          "sha256": "f71a68fff3ece1996b5b062e5a0cc78b973668e4cfd48034f696167e66470f6b"
        },
        "downloads": -1,
        "filename": "oarepo_enrollments-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "752f34e29059ec4af112c1131e1787fc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 34213,
        "upload_time": "2020-12-12T13:50:59",
        "upload_time_iso_8601": "2020-12-12T13:50:59.880902Z",
        "url": "https://files.pythonhosted.org/packages/3a/56/378b291723d53fc0bcb5219bf641e3c46af99cf8c5e7007b215240d5bddf/oarepo_enrollments-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef52efe8c9260c41e18e35ecd3dffa277adb685f6feb247e2dacef1c30f3d0d1",
          "md5": "0819c7fd4efa8ef9feff6679a60aeefe",
          "sha256": "e13d61229fddb167b19e359e36169571fb3f14c06be73858bd9ecab56d2a08e8"
        },
        "downloads": -1,
        "filename": "oarepo-enrollments-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0819c7fd4efa8ef9feff6679a60aeefe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31197,
        "upload_time": "2020-12-12T13:51:01",
        "upload_time_iso_8601": "2020-12-12T13:51:01.108779Z",
        "url": "https://files.pythonhosted.org/packages/ef/52/efe8c9260c41e18e35ecd3dffa277adb685f6feb247e2dacef1c30f3d0d1/oarepo-enrollments-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca824031ddde6ad84fd28519826930f9a73fd6472a0d23f1bf05b0463bce8b9b",
          "md5": "0e90cc3d484846f6de5576f9a8e1a618",
          "sha256": "6cd29569b44426d007d7fc1981b455d57ece185f0ab6a92f0464b67b64ab1e90"
        },
        "downloads": -1,
        "filename": "oarepo_enrollments-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e90cc3d484846f6de5576f9a8e1a618",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 35040,
        "upload_time": "2020-12-13T16:07:18",
        "upload_time_iso_8601": "2020-12-13T16:07:18.818940Z",
        "url": "https://files.pythonhosted.org/packages/ca/82/4031ddde6ad84fd28519826930f9a73fd6472a0d23f1bf05b0463bce8b9b/oarepo_enrollments-1.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b5debfc1b7ae709da99f0a02c2cb4d89ee3aec71533de601151a34e614a96df",
          "md5": "574a656030aec96f7856a7d0328e3641",
          "sha256": "e11e2992d9fba4c407d25a0122854005fa68c738efbea273614879d9b70a5efb"
        },
        "downloads": -1,
        "filename": "oarepo-enrollments-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "574a656030aec96f7856a7d0328e3641",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31899,
        "upload_time": "2020-12-13T16:07:20",
        "upload_time_iso_8601": "2020-12-13T16:07:20.359285Z",
        "url": "https://files.pythonhosted.org/packages/0b/5d/ebfc1b7ae709da99f0a02c2cb4d89ee3aec71533de601151a34e614a96df/oarepo-enrollments-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "386afbf076f5d6c66e89babe0b40b02ba2959ab333330f4e515a01892df49fad",
          "md5": "ce18b361d68b1898fab5231d45323509",
          "sha256": "c71fcffc7c5daa1ee6373c33f368ff8a33be24603249ed9646cf247988109e2b"
        },
        "downloads": -1,
        "filename": "oarepo_enrollments-1.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce18b361d68b1898fab5231d45323509",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 35746,
        "upload_time": "2020-12-13T16:41:50",
        "upload_time_iso_8601": "2020-12-13T16:41:50.259800Z",
        "url": "https://files.pythonhosted.org/packages/38/6a/fbf076f5d6c66e89babe0b40b02ba2959ab333330f4e515a01892df49fad/oarepo_enrollments-1.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "212047403f7f13bb37a4bbdc362fe2a3ccedb020bf4a04c6d481ed298ac580fd",
          "md5": "c6baa2c0b604bcbdfd9dbda7e16141a7",
          "sha256": "8a25add0f497e163f473d7ff04ffa604fda06193415d6aca4b08a5a0336038d5"
        },
        "downloads": -1,
        "filename": "oarepo-enrollments-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c6baa2c0b604bcbdfd9dbda7e16141a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32196,
        "upload_time": "2020-12-13T16:41:51",
        "upload_time_iso_8601": "2020-12-13T16:41:51.560644Z",
        "url": "https://files.pythonhosted.org/packages/21/20/47403f7f13bb37a4bbdc362fe2a3ccedb020bf4a04c6d481ed298ac580fd/oarepo-enrollments-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ea04da3ccb0b54619f41ceb4ad4607c3746fede9236f623dccd5a6bfdf62c9c",
          "md5": "5c49d009df24cd4fa9c4e702a7eb1afb",
          "sha256": "66b12329d4dd620ead87847051ecb72a850e7fc0ff7a60ec029f9af7d8799dad"
        },
        "downloads": -1,
        "filename": "oarepo_enrollments-1.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c49d009df24cd4fa9c4e702a7eb1afb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 35820,
        "upload_time": "2021-01-15T17:02:41",
        "upload_time_iso_8601": "2021-01-15T17:02:41.056961Z",
        "url": "https://files.pythonhosted.org/packages/2e/a0/4da3ccb0b54619f41ceb4ad4607c3746fede9236f623dccd5a6bfdf62c9c/oarepo_enrollments-1.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c12019889d590dbb051fdd1651dd478e9e67ee5a1c442de0e8e7f9f94b8fabe",
          "md5": "dd99c3071770d71261787abdb4e018d5",
          "sha256": "13d7329bcff51e056accfed665e2d341542bb9a10383f224f545ef03d515803c"
        },
        "downloads": -1,
        "filename": "oarepo-enrollments-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dd99c3071770d71261787abdb4e018d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32195,
        "upload_time": "2021-01-15T17:02:42",
        "upload_time_iso_8601": "2021-01-15T17:02:42.101386Z",
        "url": "https://files.pythonhosted.org/packages/5c/12/019889d590dbb051fdd1651dd478e9e67ee5a1c442de0e8e7f9f94b8fabe/oarepo-enrollments-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b64d5a52174cb9c00cff61f184220f7725bb1296a56f77d9847718a1b0e8177d",
          "md5": "42d1b4d53d736578d114ed4e3ed74b65",
          "sha256": "e7d0e8e251df63fb2539fdbaf3574e0acdb5f80750053828fa2d23d691f4afcf"
        },
        "downloads": -1,
        "filename": "oarepo_enrollments-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42d1b4d53d736578d114ed4e3ed74b65",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 36108,
        "upload_time": "2021-02-11T19:58:37",
        "upload_time_iso_8601": "2021-02-11T19:58:37.424976Z",
        "url": "https://files.pythonhosted.org/packages/b6/4d/5a52174cb9c00cff61f184220f7725bb1296a56f77d9847718a1b0e8177d/oarepo_enrollments-1.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "302e4a5d6121eb8b5498e35d78113f584c79f197b1baf534ec7e9ccc77f5a915",
          "md5": "e87ba5389dba2259ecb34dc61108c166",
          "sha256": "f7a948a18b00ec90edfae0d3c71dab150be73fb5f86c5b3fa142659f6615b437"
        },
        "downloads": -1,
        "filename": "oarepo-enrollments-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e87ba5389dba2259ecb34dc61108c166",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32516,
        "upload_time": "2021-02-11T19:58:38",
        "upload_time_iso_8601": "2021-02-11T19:58:38.625489Z",
        "url": "https://files.pythonhosted.org/packages/30/2e/4a5d6121eb8b5498e35d78113f584c79f197b1baf534ec7e9ccc77f5a915/oarepo-enrollments-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28b7c677ad82d69b16efe8a418c065214c156d87ef0573956d351ee9172bdd4f",
          "md5": "373f6e9d8bc9a34de86012f47ba49e01",
          "sha256": "18f11f118250db65902ef12632dabbb5f5dea41eb02599ca1ebc3d2d05aa729f"
        },
        "downloads": -1,
        "filename": "oarepo_enrollments-1.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "373f6e9d8bc9a34de86012f47ba49e01",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 36529,
        "upload_time": "2021-02-12T15:23:12",
        "upload_time_iso_8601": "2021-02-12T15:23:12.936078Z",
        "url": "https://files.pythonhosted.org/packages/28/b7/c677ad82d69b16efe8a418c065214c156d87ef0573956d351ee9172bdd4f/oarepo_enrollments-1.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5695c713b350b6d560870e0ae5bca90ca00501ef622334dacba05f283d752ade",
          "md5": "d993adc489b1534ffffea93c0cc93230",
          "sha256": "8b61d30afc6af26bbac5c0a9c4a4e1eda47ef74236b64bbd234b079b012e9f2c"
        },
        "downloads": -1,
        "filename": "oarepo-enrollments-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d993adc489b1534ffffea93c0cc93230",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32552,
        "upload_time": "2021-02-12T15:23:14",
        "upload_time_iso_8601": "2021-02-12T15:23:14.241160Z",
        "url": "https://files.pythonhosted.org/packages/56/95/c713b350b6d560870e0ae5bca90ca00501ef622334dacba05f283d752ade/oarepo-enrollments-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc7c4a284719907139408030b02ca52cdfe971922753a4d2705fa61162fa56c3",
          "md5": "92a43604acecb13ec34b19de069dd246",
          "sha256": "1a0fef217325aee276c19a5dee7c12fde6acd9b9723911b54060d0b3fda07137"
        },
        "downloads": -1,
        "filename": "oarepo_enrollments-1.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92a43604acecb13ec34b19de069dd246",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 30626,
        "upload_time": "2021-04-08T18:03:52",
        "upload_time_iso_8601": "2021-04-08T18:03:52.207454Z",
        "url": "https://files.pythonhosted.org/packages/fc/7c/4a284719907139408030b02ca52cdfe971922753a4d2705fa61162fa56c3/oarepo_enrollments-1.2.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d38caac6c0981141f120e48806994eb4016c4e7b1b02b08e208e9876574a6515",
          "md5": "848ec533dcb686d48e67bb07359c9e30",
          "sha256": "f392e552a4b828590f5f4bd0bec4df16e6193c194f2fdd4c0f4c991325dd25f1"
        },
        "downloads": -1,
        "filename": "oarepo-enrollments-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "848ec533dcb686d48e67bb07359c9e30",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32568,
        "upload_time": "2021-04-08T18:03:53",
        "upload_time_iso_8601": "2021-04-08T18:03:53.463755Z",
        "url": "https://files.pythonhosted.org/packages/d3/8c/aac6c0981141f120e48806994eb4016c4e7b1b02b08e208e9876574a6515/oarepo-enrollments-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc7c4a284719907139408030b02ca52cdfe971922753a4d2705fa61162fa56c3",
        "md5": "92a43604acecb13ec34b19de069dd246",
        "sha256": "1a0fef217325aee276c19a5dee7c12fde6acd9b9723911b54060d0b3fda07137"
      },
      "downloads": -1,
      "filename": "oarepo_enrollments-1.2.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "92a43604acecb13ec34b19de069dd246",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 30626,
      "upload_time": "2021-04-08T18:03:52",
      "upload_time_iso_8601": "2021-04-08T18:03:52.207454Z",
      "url": "https://files.pythonhosted.org/packages/fc/7c/4a284719907139408030b02ca52cdfe971922753a4d2705fa61162fa56c3/oarepo_enrollments-1.2.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d38caac6c0981141f120e48806994eb4016c4e7b1b02b08e208e9876574a6515",
        "md5": "848ec533dcb686d48e67bb07359c9e30",
        "sha256": "f392e552a4b828590f5f4bd0bec4df16e6193c194f2fdd4c0f4c991325dd25f1"
      },
      "downloads": -1,
      "filename": "oarepo-enrollments-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "848ec533dcb686d48e67bb07359c9e30",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 32568,
      "upload_time": "2021-04-08T18:03:53",
      "upload_time_iso_8601": "2021-04-08T18:03:53.463755Z",
      "url": "https://files.pythonhosted.org/packages/d3/8c/aac6c0981141f120e48806994eb4016c4e7b1b02b08e208e9876574a6515/oarepo-enrollments-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}