{
  "info": {
    "author": "bogdanjz",
    "author_email": "bzdv.dn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# motordantic\n\n## Install\n\nInstall using `pip`...\n\n    pip install motordantic\n\n##settings\n\nin your main file application\n\n```python\nfrom motordantic.connection import connect\n\naddress = '<your connection url>'\ndatabase_name = '<name of database>'\n\n# basic\nconnect(address=address, database_name=database_name, max_pool_size=100)\n\n# if u use ssl\nconnect(address=address, database_name=database_name, max_pool_size=100, ssl_cert_path='<path to cert>')\n\n# extra params\nserver_selection_timeout_ms = 50000 # pymongo serverSelectionTimeoutMS\nconnect_timeout_ms = 50000 # pymongo connectTimeoutMS\nsocket_timeout_ms = 50000 # pymongo socketTimeoutMS\n```\n\n## Declare models\n\n```python\nfrom motordantic.models import MongoModel\n\nclass Banner(MongoModel):\n    banner_id: str\n    name: str\n    utms: dict\n\n# if you need take an existing collection, you must reimplement set_collection_name method like that\nclass Banner(MongoModel):\n    ...\n\n    @classmethod\n    def set_collection_name(cls) -> str:\n        return 'banner_model'\n```\n\n## Queries\n\n```python\nbanner = await Banner.Q.find_one() # return a banner model obj\n# skip and limit\nbanner_with_skip_and_limit = await Banner.Q.find(skip_rows=10, limit_rows=10)\nbanner_data = await Banner.Q.find_one().data # return a dict\nbanners_queryset= await Banner.Q.find() # return FindResult object\nbanners_dict = await Banner.Q.find().data\nlist_of_banner_objects = await Banner.Q.find().list\nbanners_generator = await  Banner.Q.find().generator # generator of Banner objects\nbanners_generator_of_dicts = await Banner.Q.find().data_generator # generator of Banner objects\ncount, banners = await Banner.Q.find_with_count() # return tuple(int, QuerySet)\n\nresult = await Banner.Q.find()\nserializeble_fields = result.serialize(['utms', 'banner_id', 'name']) # return list with dict like {'utm':..., 'banner_id': ..,'name': ...}\nresult = await Banner.Q.find()\ngenerator_serializeble_fields = result.serialize_generator(['utms', 'banner_id', 'name']) # return generator\nresult = await Banner.Q.find()\njson_serializeble_fields = result.serialize_json(['utms', 'banner_id', 'name']) # return json str serializable\n\n# count\ncount = await Banner.Q.count(name='test') or await Banner.Q.count_documents(name='test')\n\n# insert queries\nbanner_id = await Banner.Q.insert_one(banner_id=1, name='test', utms={'utm_source': 'google', 'utm_medium': 'cpc'})\nbanners = [Banner(banner_id=2, name='test2', utms={}), Banner(banner_id=3, name='test3', utms={})]\nawait = Banner.Q.insert_many(banners) # list off models obj, or dicts\nawait Banner.Q.bulk_create(banners, batch_size=2) # insert_many with batch\n# update queries\nawait Banner.Q.update_one(banner_id=1, name__set='updated') # parameters that end __set - been updated\nawait Banner.Q.update_many(name__set='update all names')\n\n# delete queries\nawait Banner.Q.delete_one(banner_id=1) # delete one row\nawait Banner.Q.delete_many(banner_id=1) # delete many rows\n\n# extra queries\nawait Banner.Q.find(banner_id__in=[1, 2]) # get data in list\n\nawait Banner.Q.find(banner_id__range=[1,10]) # get date from 1 to 10\n\nawait Banner.Q.find(name__regex='^test') # regex query\n\nawait Banner.Q.find(name__startswith='t') # startswith query\n\nawait Banner.Q.find(name__endswith='t') # endswith query\nawait Banner.Q.find(name__not_startswith='t') # not startswith query\n\nawait Banner.Q.find(name__not_endswith='t') # not endswith query\n\n\nawait Banner.Q.find(name__nin=[1, 2]) # not in list\n\nawait Banner.Q.find(name__ne='test') # != test\n\nawait Banner.Q.find(banner_id__gte=1, banner_id__lte=10) # id >=1 and id <=10\nawait Banner.Q.find(banner_id__gt=1, banner_id__lt=10) # id >1 and id <10\nawait Banner.Q.find_one(banner_id=1, utms__utm_medium='cpm') # find banner where banner_id=1, and utm['utm_medium'] == 'cpm'\n\nawait Banner.Q.update_one(banner_id=1, utms__utm_source__set='google') # update utms['utm_source'] in Banner\n\n# find and update\nawait Banner.Q.find_and_update(banner_id=1, name__set='updated', projection_fields=['name': True]) # return {'name': 'updated}\nawait Banner.Q.find_and_update(banner_id=1, name__set='updated') # return Banner obj\n\n\n# find and replace\nawait Banner.Q.find_and_update(banner_id=1, Banner(banner_id=1, name='uptated'), projection={'name': True})\n# return {'name': 'updated}\nawait Banner.Q.find_and_update(banner_id=1, Banner(banner_id=1, name='uptated')) # return Banner obj\n\n# bulk operations\nfrom random import randint\n\nbanners = await Banner.Q.find()\nto_update = []\n\nfor banner in banners:\n    banner.banner_id = randint(1,100)\n    to_update.append(banner)\n\nawait Banner.Q.bulk_update(banners, updated_fields=['banner_id'])\n\n# bulk update or create\n\nbanners = [Banner(banner_id=23, name='new', utms={}), Banner(banner_id=1, name='test', utms={})]\nawait Banner.Q.bulk_update_or_create(banners, query_fields=['banner_id'])\n\n\n# aggregate with sum, min, max\nclass Stats(MongoModel):\n    id: int\n    cost: float\n    clicks: int\n    shows: int\n    date: str\n\nfrom motordantic.aggregation import Sum, Min, Max\n\nsumm_cost = await Stats.Q.simple_aggregate(date='2020-01-20', aggregation=Sum('cost'))\nmin_clicks = await Stats.Q.simple_aggregate(date='2020-01-20', aggregation=Min('clicks'))\nmin_shows = await Stats.Q.simple_aggregate(date='2020-01-20', aggregation=Max('shows'))\n\n# logical\nfrom motordantic.query import Query\ndata = Banner.Q.find_one(Query(name='test') | Query(name__regex='testerino'))\n```\n\n### sync queries\n\n```python\nsync_result = Banner.Q.sync.find_one()\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bogdanjz/motordantic",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "motordantic",
    "package_url": "https://pypi.org/project/motordantic/",
    "platform": null,
    "project_url": "https://pypi.org/project/motordantic/",
    "project_urls": {
      "Homepage": "https://github.com/bogdanjz/motordantic"
    },
    "release_url": "https://pypi.org/project/motordantic/0.0.2a0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Mongo ODM, based on motor+pydantic",
    "version": "0.0.2a0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15725273,
  "releases": {
    "0.0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "970f0995f30058422fae4ff76ca8562ef44893f4392e639474d9c99ce5083375",
          "md5": "4b2fcf4df8166009c8ab1b6bedf80421",
          "sha256": "60bca0400d4eead0fdf3484c1cd68d32844ddf058fa5b1fe697ce1e74d28782b"
        },
        "downloads": -1,
        "filename": "motordantic-0.0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "4b2fcf4df8166009c8ab1b6bedf80421",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 23807,
        "upload_time": "2022-09-15T08:19:02",
        "upload_time_iso_8601": "2022-09-15T08:19:02.731664Z",
        "url": "https://files.pythonhosted.org/packages/97/0f/0995f30058422fae4ff76ca8562ef44893f4392e639474d9c99ce5083375/motordantic-0.0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f23043761fbb64fe26942d2cb8885d8c1eb947c3644f6e82372846149b488405",
          "md5": "1ce50e7a3fa34211686e1304695769c4",
          "sha256": "734fe2ad68f1cd64f183de3ac9a5f972f63f5ee6a11ac5d6385cc9940d54a8d4"
        },
        "downloads": -1,
        "filename": "motordantic-0.0.1a1.tar.gz",
        "has_sig": false,
        "md5_digest": "1ce50e7a3fa34211686e1304695769c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 23857,
        "upload_time": "2022-09-15T14:21:13",
        "upload_time_iso_8601": "2022-09-15T14:21:13.747560Z",
        "url": "https://files.pythonhosted.org/packages/f2/30/43761fbb64fe26942d2cb8885d8c1eb947c3644f6e82372846149b488405/motordantic-0.0.1a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c31840124951080e041e42bcc3d7257e778b6cdc7b53590a7ca235a88083153",
          "md5": "a8baf4b7d69d8ee4cd333de0d86b1ce4",
          "sha256": "042ccb3c000acaac5c78949a0b1b7744739836929233f3c4813a9310e3186943"
        },
        "downloads": -1,
        "filename": "motordantic-0.0.1a10.tar.gz",
        "has_sig": false,
        "md5_digest": "a8baf4b7d69d8ee4cd333de0d86b1ce4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 34897,
        "upload_time": "2022-11-08T11:21:10",
        "upload_time_iso_8601": "2022-11-08T11:21:10.584847Z",
        "url": "https://files.pythonhosted.org/packages/0c/31/840124951080e041e42bcc3d7257e778b6cdc7b53590a7ca235a88083153/motordantic-0.0.1a10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20ebb65a5d3a487554d2093140683210f1f7aebf5610e1842bfdf3742754481c",
          "md5": "a1f83830284b3509d411f7c296d39cdc",
          "sha256": "1aec15fa830120ff42ef7822184943b4c5e25227c5e56dde7abc6daa5af5e184"
        },
        "downloads": -1,
        "filename": "motordantic-0.0.1a2.tar.gz",
        "has_sig": false,
        "md5_digest": "a1f83830284b3509d411f7c296d39cdc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 24309,
        "upload_time": "2022-09-15T15:16:30",
        "upload_time_iso_8601": "2022-09-15T15:16:30.790532Z",
        "url": "https://files.pythonhosted.org/packages/20/eb/b65a5d3a487554d2093140683210f1f7aebf5610e1842bfdf3742754481c/motordantic-0.0.1a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d2c93e5b10a929f35d08896a29992f56b49c00ac616cab10c83c27fb1b12802",
          "md5": "cffc959c8a8640474bb8f82d5d290079",
          "sha256": "000547cce652937305fffb9b64a1cdfab1e3300f8437ca866c7b438a2b155643"
        },
        "downloads": -1,
        "filename": "motordantic-0.0.1a3.tar.gz",
        "has_sig": false,
        "md5_digest": "cffc959c8a8640474bb8f82d5d290079",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 24462,
        "upload_time": "2022-09-15T16:15:57",
        "upload_time_iso_8601": "2022-09-15T16:15:57.739475Z",
        "url": "https://files.pythonhosted.org/packages/9d/2c/93e5b10a929f35d08896a29992f56b49c00ac616cab10c83c27fb1b12802/motordantic-0.0.1a3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ecbbe4a2eab9a2f7f3976ec491565710f4fc7bdc672c93b00e320de80f2e55e",
          "md5": "843398ada643b68eaa06e2c5f7b72314",
          "sha256": "65f545dde3100b174e75cbf196dda23b3b9923b5589f6683103a2855752d24d5"
        },
        "downloads": -1,
        "filename": "motordantic-0.0.1a4.tar.gz",
        "has_sig": false,
        "md5_digest": "843398ada643b68eaa06e2c5f7b72314",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 24492,
        "upload_time": "2022-09-15T17:39:32",
        "upload_time_iso_8601": "2022-09-15T17:39:32.313015Z",
        "url": "https://files.pythonhosted.org/packages/2e/cb/be4a2eab9a2f7f3976ec491565710f4fc7bdc672c93b00e320de80f2e55e/motordantic-0.0.1a4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40cfb82935b33877aa4c8b6b44bd11688af2278c614a1afb5c79b5306011e03b",
          "md5": "ce62cf623d7cc93ecc6ea6ba5e9a7900",
          "sha256": "519cc8f9506130f3a3a58065c3097ea7069cf0b7afcbbfc0522e20294dbffdc1"
        },
        "downloads": -1,
        "filename": "motordantic-0.0.1a5.tar.gz",
        "has_sig": false,
        "md5_digest": "ce62cf623d7cc93ecc6ea6ba5e9a7900",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 25004,
        "upload_time": "2022-09-16T08:19:21",
        "upload_time_iso_8601": "2022-09-16T08:19:21.785949Z",
        "url": "https://files.pythonhosted.org/packages/40/cf/b82935b33877aa4c8b6b44bd11688af2278c614a1afb5c79b5306011e03b/motordantic-0.0.1a5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b40ef0da0496471e07086df2f167b6de2d603b6c9fccbabfa92632458249d22f",
          "md5": "3cf84e62e716e6601026291834d1dbf4",
          "sha256": "de0fa7323ac2faf3cac8ae3928e8da0470ce65a8a3569ba176fe9b0923d44683"
        },
        "downloads": -1,
        "filename": "motordantic-0.0.1a6.tar.gz",
        "has_sig": false,
        "md5_digest": "3cf84e62e716e6601026291834d1dbf4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 28520,
        "upload_time": "2022-09-18T15:33:29",
        "upload_time_iso_8601": "2022-09-18T15:33:29.687894Z",
        "url": "https://files.pythonhosted.org/packages/b4/0e/f0da0496471e07086df2f167b6de2d603b6c9fccbabfa92632458249d22f/motordantic-0.0.1a6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d4784b9d8bf2d475f585221bf670440c229e71110226dca6ca0caef7e6c2196",
          "md5": "3646a82359d83634540a87bcdc583ff9",
          "sha256": "468040b6179cdef15746c29b9ebcc1f5f67f2a1ce49f27951c0de984bc6bba7d"
        },
        "downloads": -1,
        "filename": "motordantic-0.0.1a7.tar.gz",
        "has_sig": false,
        "md5_digest": "3646a82359d83634540a87bcdc583ff9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 28605,
        "upload_time": "2022-09-19T08:24:04",
        "upload_time_iso_8601": "2022-09-19T08:24:04.843665Z",
        "url": "https://files.pythonhosted.org/packages/9d/47/84b9d8bf2d475f585221bf670440c229e71110226dca6ca0caef7e6c2196/motordantic-0.0.1a7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c5846b8a8b459aada6d8bec3030dc2514e2ada69fe1bbb314f57cffd6c95f2b",
          "md5": "14aa0cdc753d7caf6a479b73d220f750",
          "sha256": "888be6a46ef7df05dcc1cb9669f0c69656e458a1c349fc944d82a285c615639e"
        },
        "downloads": -1,
        "filename": "motordantic-0.0.1a8.tar.gz",
        "has_sig": false,
        "md5_digest": "14aa0cdc753d7caf6a479b73d220f750",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 34642,
        "upload_time": "2022-11-01T07:32:27",
        "upload_time_iso_8601": "2022-11-01T07:32:27.399808Z",
        "url": "https://files.pythonhosted.org/packages/8c/58/46b8a8b459aada6d8bec3030dc2514e2ada69fe1bbb314f57cffd6c95f2b/motordantic-0.0.1a8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6af5152efeb309dd3e4f277edd12bb0db706a8048042d81c6c963c6c7048872",
          "md5": "b5898c6c9fdad813654a54c8270e361e",
          "sha256": "004ec34e173b7fdc86626b1d0f181385f7e7ef55f425d04c39bb5c3828de7100"
        },
        "downloads": -1,
        "filename": "motordantic-0.0.1a9.tar.gz",
        "has_sig": false,
        "md5_digest": "b5898c6c9fdad813654a54c8270e361e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 34793,
        "upload_time": "2022-11-07T13:01:37",
        "upload_time_iso_8601": "2022-11-07T13:01:37.121029Z",
        "url": "https://files.pythonhosted.org/packages/e6/af/5152efeb309dd3e4f277edd12bb0db706a8048042d81c6c963c6c7048872/motordantic-0.0.1a9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "775d4f324c357a5d29396d7b9087b5e4ac96c48796e46770ea4505b3eb2a33ad",
          "md5": "ccb01909f11f3c97addf707be197ae5a",
          "sha256": "460fa2f927b667ac8a2a9cf127948e428fe0c55f7acfee56f00348ab6f6a7a99"
        },
        "downloads": -1,
        "filename": "motordantic-0.0.2a0.tar.gz",
        "has_sig": false,
        "md5_digest": "ccb01909f11f3c97addf707be197ae5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 34953,
        "upload_time": "2022-11-10T14:58:57",
        "upload_time_iso_8601": "2022-11-10T14:58:57.206907Z",
        "url": "https://files.pythonhosted.org/packages/77/5d/4f324c357a5d29396d7b9087b5e4ac96c48796e46770ea4505b3eb2a33ad/motordantic-0.0.2a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "775d4f324c357a5d29396d7b9087b5e4ac96c48796e46770ea4505b3eb2a33ad",
        "md5": "ccb01909f11f3c97addf707be197ae5a",
        "sha256": "460fa2f927b667ac8a2a9cf127948e428fe0c55f7acfee56f00348ab6f6a7a99"
      },
      "downloads": -1,
      "filename": "motordantic-0.0.2a0.tar.gz",
      "has_sig": false,
      "md5_digest": "ccb01909f11f3c97addf707be197ae5a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 34953,
      "upload_time": "2022-11-10T14:58:57",
      "upload_time_iso_8601": "2022-11-10T14:58:57.206907Z",
      "url": "https://files.pythonhosted.org/packages/77/5d/4f324c357a5d29396d7b9087b5e4ac96c48796e46770ea4505b3eb2a33ad/motordantic-0.0.2a0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}