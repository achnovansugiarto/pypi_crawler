{
  "info": {
    "author": "Pioverpie",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Security :: Cryptography"
    ],
    "description": "==============\nPrivateBin API\n==============\n\n|Codacy Badge| |codecov| |Build Status| |Maintainability| |Code Climate issues| |Code Climate technical debt|\n|GitHub repo size| |License badge|\n\nPrivateBin API is a wrapper for API interactions with PrivateBin instances.\nIt allows you to send, get, and delete pastes from PrivateBin instances.\n\nInstalling PrivateBin API and Supported Versions\n------------------------------------------------\n\nPrivateBin API is available on PyPI: (not quite yet)\n\n.. code:: console\n\n   $ python -m pip install privatebinapi\n\nPrivateBin API officially supports Python 3.6+.\n\nFeatures\n--------\n\n-  Send, retrieve, and delete pastes on any PrivateBin instance\n-  Officially supports PrivateBin 1.0 through 1.3\n-  Full support for both synchronous and asynchronous code\n-  Upload and download files\n-  Proxy support\n\nExamples\n--------\n\nBasic usage\n~~~~~~~~~~~\n\nPrivateBin API is designed to be as easy to use as possible. A quick\nexample of the most basic features is shown below:\n\n.. code:: python\n\n   >>> import privatebinapi\n   >>> send_response = privatebinapi.send(\"https://vim.cx\", text=\"Hello, world!\")\n   >>> get_response = privatebinapi.get(send_response[\"full_url\"])\n   >>> get_response['text'] == \"Hello, world!\"\n   True\n   >>> delete_response = privatebinapi.delete(send_response[\"full_url\"], send_response[\"deletetoken\"])\n\nEach function returns a modified version of the JSON received from the PrivateBin instance.\n\nAll parameters shown in the docs below are optional and may be combined\nin any way.\n\nSending a Paste\n~~~~~~~~~~~~~~~\n\nTo send a paste containing nothing but text, do the following:\n\n.. code:: python\n\n   >>> import privatebinapi\n   >>> response = privatebinapi.send(\"https://vim.cx\", text=\"Hello, world!\")\n\nYou can expect the send function to return something similar to the following:\n\n.. code:: text\n\n   {\n       \"deletetoken\": \"< paste delete token >\",\n       \"full_url\": \"< direct link to paste> \",\n       \"id\": \"< paste ID >\",\n       \"passcode\": \"< paste passcode >\",\n       \"status\": 0,\n       \"url\": \"/?< paste ID >\"\n   }\n\nSetting an Expiration\n^^^^^^^^^^^^^^^^^^^^^\n\nThere are a limited number of valid expiration times. You must select\none of the following:\n\n.. code:: python\n\n   (\"5min\", \"10min\", \"1hour\", \"1day\", \"1week\", \"1month\", \"1year\", \"never\")\n\nThe default is ``\"1day\"``.\n\n.. code:: python\n\n   >>> import privatebinapi\n   >>> response = privatebinapi.send(\n   ...     \"https://vim.cx\",\n   ...     text=\"Hello, world!\",\n   ...     expiration=\"5min\"\n   ... )\n\nSetting a password\n^^^^^^^^^^^^^^^^^^\n\nPutting a password on your paste is easy:\n\n.. code:: python\n\n   >>> import privatebinapi\n   >>> response = privatebinapi.send(\n   ...     \"https://vim.cx\",\n   ...     text=\"Hello, world!\",\n   ...     password=\"Secure123!\"\n   ... )\n\nChoosing Compression\n^^^^^^^^^^^^^^^^^^^^\n\nThere are only two valid options for this parameter: ``\"zlib\"`` and\n``None``. The default is ``\"zlib\"``.\n\n.. code:: python\n\n   >>> import privatebinapi\n   >>> response = privatebinapi.send(\n   ...     \"https://vim.cx\",\n   ...     text=\"Hello, world!\",\n   ...     compression=None\n   ... )\n\nChoosing a Format\n^^^^^^^^^^^^^^^^^\n\nThere are only three valid options for this parameter: ``\"plaintext\"``,\n``\"syntaxhighlighting\"``, and ``\"markdown\"``. The default is\n``\"plaintext\"``.\n\n.. code:: python\n\n   >>> import privatebinapi\n   >>> response = privatebinapi.send(\n   ...     \"https://vim.cx\",\n   ...     text=\"Hello, world!\",\n   ...     formatting=\"markdown\"\n   ... )\n\nBurn After Reading\n^^^^^^^^^^^^^^^^^^\n\nIf you want a paste to be deleted immediately after being read, pass\n``True`` to the *burn_after_reading* parameter. The default is\n``False``.\n\n.. code:: python\n\n   >>> import privatebinapi\n   >>> response = privatebinapi.send(\n   ...     \"https://vim.cx\",\n   ...     text=\"Hello, world!\",\n   ...     burn_after_reading=True\n   ... )\n\nEnable Discussion\n^^^^^^^^^^^^^^^^^\n\nTo enable discussion, pass ``True`` to the *discussion* parameter. The\ndefault is ``False``.\n\n.. code:: python\n\n   >>> import privatebinapi\n   >>> response = privatebinapi.send(\n   ...     \"https://vim.cx\",\n   ...     text=\"Hello, world!\",\n   ...     discussion=True\n   ... )\n\nGetting a Paste\n~~~~~~~~~~~~~~~\n\nGetting a paste from a PrivateBin instance is very easy:\n\n.. code:: python\n\n   >>> import privatebinapi\n   >>> response = privatebinapi.get(\"https://example.com/?fakePasteLink#1234567890\")\n\nYou can expect the get function to return something similar to the following:\n\n.. code:: text\n\n   {\n       \"attachment\": {\n           \"content\": b\"< attachment content in bytes >\",\n           \"filename\": \"< name of attachment >\"\n       },\n       \"id\": '< paste ID >\",\n       \"meta\": {\n           \"created\": < UNIX timestamp >,\n           \"time_to_live\": < seconds until deletion >\n       },\n       \"status\": 0,\n       \"text\": \"< text content of the paste >\",\n       \"url\": \"/?< paste ID >\",\n       \"v\": < encryption version 1 or 2 >}\n   }\n\nGetting a Password Protected Paste\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIf the paste is password protected, use the *password* parameter.\n\n.. code:: python\n\n   >>> import privatebinapi\n   >>> response = privatebinapi.get(\n   ...     \"https://example.com/?fakePasteLink#1234567890\",\n   ...     password=\"Secure123!\"\n   ... )\n\nDeleting a Paste\n~~~~~~~~~~~~~~~~\n\nYou can expect the delete function to return something similar to the following:\n\n.. code:: text\n\n   {\n       \"id\": '< paste ID >\",\n       \"status\": 0,\n       \"url\": \"/?< paste ID >\",\n   }\n\nTo delete a paste, you need its URL and delete token.\n\n.. code:: python\n\n   >>> import privatebinapi\n   >>> response = privatebinapi.delete(\n   ...     \"https://example.com/?fakePasteLink#1234567890\",\n   ...     \"fake1delete2token3\"\n   ... )\n\nUsing a Proxy\n~~~~~~~~~~~~~\n\nAll functions have an optional keyword parameter, *proxies*, that\naccepts a dictionary of proxies like you would see in the Requests\npackage.\n\n.. code:: python\n\n   >>> import privatebinapi\n   >>> response = privatebinapi.send(\n   ...     \"https://vim.cx\",\n   ...     text=\"Hello, world!\",\n   ...     proxies={\n   ...         \"http\": \"http://example.com/proxy:80\",\n   ...         \"https\": \"https://example.com/proxy:8080\"\n   ...     }\n   ... )\n\nUsing Async Functions\n~~~~~~~~~~~~~~~~~~~~~\n\n``privatebinapi.send``, ``privatebinapi.get`` and\n``privatebinapi.delete`` all have async analogs. They accept all the\nsame parameters that their synchronous counterparts do.\n\n.. code:: python\n\n   import asyncio\n\n   import privatebinapi\n\n   async def main():\n       send_response = await privatebinapi.send_async(\n           \"https://vim.cx\",\n           text=\"Hello, world!\"\n       )\n       get_response = await privatebinapi.get_async(send_response[\"full_url\"])\n       delete_response = await privatebinapi.delete_async(\n           send_response[\"full_url\"],\n           send_response[\"deletetoken\"]\n       )\n\n   loop = asyncio.get_event_loop()\n   loop.run_until_complete(main())\n\nBoth ``privatebinapi.send`` and ``privatebinapi.get`` do encryption and\ndecryption using an executor_. It will use the default\nexecutor for your event loop if *executor* is ``None``.\n\n.. _executor: https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor\n\nLicense\n~~~~~~~\nPrivateBin API is offered under the `MIT license`_.\n\n.. _MIT license: https://github.com/Pioverpie/privatebin-api/blob/master/LICENSE\n\n\n.. |Codacy Badge| image:: https://app.codacy.com/project/badge/Grade/b0b11fa99727453eb219bcd0b03f5868\n   :target: https://www.codacy.com/gh/Pioverpie/privatebin-api/dashboard\n.. |codecov| image:: https://codecov.io/gh/Pioverpie/privatebin-api/branch/master/graph/badge.svg?token=5YE0802BC1\n   :target: https://codecov.io/gh/Pioverpie/privatebin-api\n.. |Build Status| image:: https://travis-ci.org/Pioverpie/privatebin-api.svg?branch=master\n   :target: https://travis-ci.org/Pioverpie/privatebin-api\n.. |Maintainability| image:: https://api.codeclimate.com/v1/badges/b6dcd84fe476440a1811/maintainability\n   :target: https://codeclimate.com/github/Pioverpie/privatebin-api/maintainability\n.. |Code Climate issues| image:: https://img.shields.io/codeclimate/issues/Pioverpie/privatebin-api\n   :target: https://codeclimate.com/github/Pioverpie/privatebin-api/issues\n.. |Code Climate technical debt| image:: https://img.shields.io/codeclimate/tech-debt/Pioverpie/privatebin-api\n   :target: https://codeclimate.com/github/Pioverpie/privatebin-api/trends/technical_debt\n.. |GitHub repo size| image:: https://img.shields.io/github/repo-size/Pioverpie/privatebin-api\n   :target: https://github.com/Pioverpie/privatebin-api\n.. |License badge| image:: https://img.shields.io/github/license/Pioverpie/privatebin-api\n   :alt: GitHub\n   :target: https://github.com/Pioverpie/privatebin-api/blob/master/LICENSE\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Pioverpie/privatebin-api/",
    "keywords": "privatebin pastebin",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PrivateBinAPI",
    "package_url": "https://pypi.org/project/PrivateBinAPI/",
    "platform": "",
    "project_url": "https://pypi.org/project/PrivateBinAPI/",
    "project_urls": {
      "Homepage": "https://github.com/Pioverpie/privatebin-api/",
      "Issues": "https://github.com/Pioverpie/privatebin-api/issues/",
      "Source": "https://github.com/Pioverpie/privatebin-api/"
    },
    "release_url": "https://pypi.org/project/PrivateBinAPI/1.0.0/",
    "requires_dist": [
      "PBinCLI",
      "requests",
      "httpx"
    ],
    "requires_python": ">=3.6",
    "summary": "A wrapper for the PrivateBin API",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8949356,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30099dd88eab2a35b12d255d9f0d77b54089c53a74e55a3d1fa168a3a05a1c1f",
          "md5": "9dc7b56892b02ea76528c6dfa772b7b2",
          "sha256": "a894bb124a0eb280749051a2e8b84a69786dc9f54207b845dc56194cdf226817"
        },
        "downloads": -1,
        "filename": "PrivateBinAPI-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9dc7b56892b02ea76528c6dfa772b7b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10873,
        "upload_time": "2020-12-21T04:10:36",
        "upload_time_iso_8601": "2020-12-21T04:10:36.551824Z",
        "url": "https://files.pythonhosted.org/packages/30/09/9dd88eab2a35b12d255d9f0d77b54089c53a74e55a3d1fa168a3a05a1c1f/PrivateBinAPI-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "711f12af0fc9934b4d62fd5ba26c505aa4cceb03437841b7cdc7bad84d186be6",
          "md5": "886f4eaf3f009a55476dd02bde42a9b5",
          "sha256": "2a19cff9980dd09fb079f73fba1644bca6756c7ca4911fce9b822130069cc036"
        },
        "downloads": -1,
        "filename": "PrivateBinAPI-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "886f4eaf3f009a55476dd02bde42a9b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8670,
        "upload_time": "2020-12-21T04:10:37",
        "upload_time_iso_8601": "2020-12-21T04:10:37.928143Z",
        "url": "https://files.pythonhosted.org/packages/71/1f/12af0fc9934b4d62fd5ba26c505aa4cceb03437841b7cdc7bad84d186be6/PrivateBinAPI-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30099dd88eab2a35b12d255d9f0d77b54089c53a74e55a3d1fa168a3a05a1c1f",
        "md5": "9dc7b56892b02ea76528c6dfa772b7b2",
        "sha256": "a894bb124a0eb280749051a2e8b84a69786dc9f54207b845dc56194cdf226817"
      },
      "downloads": -1,
      "filename": "PrivateBinAPI-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9dc7b56892b02ea76528c6dfa772b7b2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10873,
      "upload_time": "2020-12-21T04:10:36",
      "upload_time_iso_8601": "2020-12-21T04:10:36.551824Z",
      "url": "https://files.pythonhosted.org/packages/30/09/9dd88eab2a35b12d255d9f0d77b54089c53a74e55a3d1fa168a3a05a1c1f/PrivateBinAPI-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "711f12af0fc9934b4d62fd5ba26c505aa4cceb03437841b7cdc7bad84d186be6",
        "md5": "886f4eaf3f009a55476dd02bde42a9b5",
        "sha256": "2a19cff9980dd09fb079f73fba1644bca6756c7ca4911fce9b822130069cc036"
      },
      "downloads": -1,
      "filename": "PrivateBinAPI-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "886f4eaf3f009a55476dd02bde42a9b5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8670,
      "upload_time": "2020-12-21T04:10:37",
      "upload_time_iso_8601": "2020-12-21T04:10:37.928143Z",
      "url": "https://files.pythonhosted.org/packages/71/1f/12af0fc9934b4d62fd5ba26c505aa4cceb03437841b7cdc7bad84d186be6/PrivateBinAPI-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}