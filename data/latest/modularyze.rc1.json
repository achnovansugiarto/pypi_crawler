{
  "info": {
    "author": "Sacha Jungerman",
    "author_email": "jungerm2@illinois.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "==========\nModularyze\n==========\n\n\n.. image:: https://img.shields.io/pypi/v/modularyze.svg\n        :target: https://pypi.python.org/pypi/modularyze\n\n.. image:: https://img.shields.io/travis/jungerm2/modularyze.svg\n        :target: https://travis-ci.com/jungerm2/modularyze\n\n.. image:: https://readthedocs.org/projects/modularyze/badge/?version=latest\n        :target: https://modularyze.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\n\n\nModularyze is a modular, composable and dynamic configuration engine that mixes the power of dynamic webpage rendering with that of YAML. It relies on Jinja_ and `ruamel.yaml`_ and inherits their flexibility.\n\n\nQuick Start\n-----------\n\nInstallation\n^^^^^^^^^^^^\n\nTo install the latest version of modularyze, run this command in your terminal:\n\n.. code-block:: console\n\n    $ pip install modularyze\n\n\nExample\n^^^^^^^\n\nThe Modularize package exposes one central config-builder class called ConfBuilder_. Using this class you can register arbitrary constructors and callables, render templated multi-file and dynamic configs, instantiate them and compare configs by hash or their normalized form.\n\nTo use modularyze in a project simply import it, register any callables your config might be using and point it to your configuration file. From there you can simply call build_ to build the config.\n\nA simple example where we instantiate a machine learning pipeline could look something like this:\n\n.. code-block::\n\n    # File: imagenet.yaml\n\n    {% set use_pretrained = use_pretrained | default(True) %}\n    {% set imagenet_root = imagenet_root | default('datasets/imagenet') %}\n\n    network: &network\n        !torchvision.models.resnet18\n        pretrained: {{ use_pretrained }}\n\n    val_transforms: &val_transforms\n        !torchvision.transforms.Compose\n        - !torchvision.transforms.Resize [256]\n        - !torchvision.transforms.CenterCrop [224]\n        - !torchvision.transforms.ToTensor\n\n    dataset: &dataset\n        !torchvision.transforms.datasets.ImageNet\n        args:\n          - {{ imagenet_root }}\n        kwargs:\n          split: 'val'\n          transforms: *val_transforms\n\n\n.. code-block:: python\n\n    import torchvision\n    from modularyze import ConfBuilder\n\n    builder = ConfBuilder()\n    builder.register_multi_constructors_from_modules(torchvision)\n    conf = builder.build('imagenet.yaml')\n\nNow the ``conf`` object is a python dictionary containing a fully initialized model, dataset and validation transforms. What about if you want to change a parameter on the fly? Say the imagenet folder changes? Easy, simply pass in a context:\n\n.. code-block:: python\n\n    conf = builder.build('imagenet.yaml', context={\"imagenet_root\": \"new/path/to/dataset\"})\n\nIn this way ypu can easily parameterize you configuration files. The provided context is usually a dictionary but it can even be the path to a (non-parameterized/vanilla) YAML file.\n\nWhat about if we have the configuration for a model trainer in a different file? Imagine the file ``trainer.yaml`` instantiates a neural network trainer instance, we can include it by adding the following line to the above config file:\n\n.. code-block:: jinja\n\n    {% include 'trainer.yaml' %}\n\nThere are many more neat things you can do when you combine the powers of YAML and Jinja, please refer to the documentation_ for more.\n\n\n.. _Jinja: https://jinja.palletsprojects.com/en/2.11.x/\n.. _`ruamel.yaml`: https://pypi.org/project/ruamel.yaml/\n.. _documentation: https://modularyze.readthedocs.io/en/latest/\n.. _ConfBuilder: https://modularyze.readthedocs.io/en/latest/api.html#modularyze.modularyze.ConfBuilder/\n.. _build: https://modularyze.readthedocs.io/en/latest/api.html#modularyze.modularyze.ConfBuilder.build/\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jungerm2/modularyze",
    "keywords": "",
    "license": "GPL-3.0-only",
    "maintainer": "",
    "maintainer_email": "",
    "name": "modularyze",
    "package_url": "https://pypi.org/project/modularyze/",
    "platform": "",
    "project_url": "https://pypi.org/project/modularyze/",
    "project_urls": {
      "Homepage": "https://github.com/jungerm2/modularyze"
    },
    "release_url": "https://pypi.org/project/modularyze/0.1.0/",
    "requires_dist": [
      "ruamel.yaml (>=0.16.12,<0.17.0)",
      "Jinja2 (>=2.11.2,<3.0.0)"
    ],
    "requires_python": ">=3.6,<4.0",
    "summary": "Top-level package for modularyze.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8695986,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "999d38ad931fac912872fcea1659231feb3d59a466596ccc764703e72a34c669",
          "md5": "83300587b4c5f6b322b939212dc6d070",
          "sha256": "477a8e75676d9f338616d454ea1159eff0e7d3d0e22eeab08fd49adb0f3b9455"
        },
        "downloads": -1,
        "filename": "modularyze-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83300587b4c5f6b322b939212dc6d070",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 10366,
        "upload_time": "2020-11-19T01:14:19",
        "upload_time_iso_8601": "2020-11-19T01:14:19.245716Z",
        "url": "https://files.pythonhosted.org/packages/99/9d/38ad931fac912872fcea1659231feb3d59a466596ccc764703e72a34c669/modularyze-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "731ddc23c622cee45a38be9b18315039419f7209680c57ae99e93fc607e9e69e",
          "md5": "84747ab2c4dc89976c4736fc9b47a41c",
          "sha256": "1132b7b433c3d14ee1150b2cfe955b8b44a8486dbb1731853bb3175c81d9d9d6"
        },
        "downloads": -1,
        "filename": "modularyze-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "84747ab2c4dc89976c4736fc9b47a41c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 13375,
        "upload_time": "2020-11-19T01:14:20",
        "upload_time_iso_8601": "2020-11-19T01:14:20.788027Z",
        "url": "https://files.pythonhosted.org/packages/73/1d/dc23c622cee45a38be9b18315039419f7209680c57ae99e93fc607e9e69e/modularyze-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "999d38ad931fac912872fcea1659231feb3d59a466596ccc764703e72a34c669",
        "md5": "83300587b4c5f6b322b939212dc6d070",
        "sha256": "477a8e75676d9f338616d454ea1159eff0e7d3d0e22eeab08fd49adb0f3b9455"
      },
      "downloads": -1,
      "filename": "modularyze-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "83300587b4c5f6b322b939212dc6d070",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 10366,
      "upload_time": "2020-11-19T01:14:19",
      "upload_time_iso_8601": "2020-11-19T01:14:19.245716Z",
      "url": "https://files.pythonhosted.org/packages/99/9d/38ad931fac912872fcea1659231feb3d59a466596ccc764703e72a34c669/modularyze-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "731ddc23c622cee45a38be9b18315039419f7209680c57ae99e93fc607e9e69e",
        "md5": "84747ab2c4dc89976c4736fc9b47a41c",
        "sha256": "1132b7b433c3d14ee1150b2cfe955b8b44a8486dbb1731853bb3175c81d9d9d6"
      },
      "downloads": -1,
      "filename": "modularyze-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "84747ab2c4dc89976c4736fc9b47a41c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 13375,
      "upload_time": "2020-11-19T01:14:20",
      "upload_time_iso_8601": "2020-11-19T01:14:20.788027Z",
      "url": "https://files.pythonhosted.org/packages/73/1d/dc23c622cee45a38be9b18315039419f7209680c57ae99e93fc607e9e69e/modularyze-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}