{
  "info": {
    "author": "Seth Baldwin",
    "author_email": "seth.e.baldwin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# mdscuda\nThis is a CUDA implementation of Multidimensional Scaling (https://en.wikipedia.org/wiki/Multidimensional_scaling) using the SMACOF algorithm. Currently only metric MDS is supported. \n\n## Installation\n\npip install mdscuda\n\nLatest version: 0.1.3\n\n## Example\n\n```Python\nimport numpy as np\nfrom mdscuda import MDS, mds_fit, minkowski_pairs\n\nN_SAMPLES = 1000\nN_FEATURES = 100\nX = np.random.normal(size = (N_SAMPLES, N_FEATURES))\nDELTA = minkowski_pairs(X, sqform = False)  # this returns a matrix of pairwise distances in longform\n\n# method 1: use an sklearn-style class\n\nmds = MDS(n_dims = 3, verbosity = 2)  # defines sklearn-style class\nx = mds.fit(DELTA, calc_r2=True)  # fits and returns embedding\nprint(\"mds r2: {}\".format(mds.r2))  # prints R-squared value to assess quality of fit\n\n# method 2: you can fit directly without using a class\n\nx = mds_fit(DELTA, n_dims = 3, verbosity = 1)\n```\n\n## Documentation\n\nclass mdscuda.MDS methods:\n\nmdscuda.MDS.init(self, n_dims = 2, max_iter = 300, n_init = 4, x_init = None, verbosity = 0)\n\n* n_dims: int; number of dimensions in embedding space\n* max_iter: int; maximum iterations of SMACOF algorithm to perform\n* n_init: int; number of times to initialize SMACOF algorithm with random uniform(0, 100) initialization\n* x_init: array or None; initial embedding. If not None, n_init is set to 1 and n_dims is set to x_init.shape[1]\n* verbosity: int; if >= 1, print num iterations and final sigma values. if >= 2, print sigma value each iteration \n  (note: verbosity >= 2 slows performance by a factor of approximately 2)\n\nmdscuda.MDS.fit(self, delta, sqform = False, calc_r2 = False)\n\n* delta: array; matrix of pairwise distances, longform by default, squareform if sqform == True\n* sqform: bool; if True, delta is interpreted in squareformn, if False, delta is interpreted in longform\n* calc_r2: bool; if True, calculates R-squared value and records it as the attribute MDS.r2\n\nclass mdscuda.MDS attributes: \n\n* MDS.x: array or None; embedding\n* MDS.r2: float or None; R-squared value\n\nmdscuda.mds_fit(delta, n_dims = 2, max_iter = 300, n_init = 4, x_init = None, verbosity = 0, sqform = False)\n\n* delta: array; matrix of pairwise distances, longform by default, squareform if sqform == True\n* n_dims: int; number of dimensions in embedding space\n* max_iter: int; maximum iterations of SMACOF algorithm to perform\n* n_init: int; number of times to initialize SMACOF algorithm with random uniform(0, 100) initialization\n* x_init: array or None; initial embedding. If not None, n_init is set to 1 and n_dims is set to x_init.shape[1]\n* verbosity: int; if >= 1, print num iterations and final sigma values. if >= 2, print sigma value each iteration\n  (note: verbosity >= 2 slows performance by a factor of approximately 2)\n* sqform: bool; if True, delta is interpreted in squareformn, if False, delta is interpreted in longform\n\nmdscuda.minkowski_pairs(X, p = 2, w = None, sqform = True)\n\n* X: array of shape (n_samples, n_features); matrix of samples\n* p: float; p for minkowski distance\n* w: array of shape (n_features, ) or None; weights for minkowski distance\n* sqform: bool; if True, squareform matrix of pairwise distances is returned, otherwise, longform is returned\n\n## Benchmarks\n\n~~~text\nRun on AMD Ryzen 5 2600 CPU and Nvidia RTX 2080 Ti GPU.\nAll times are in seconds.\n\nTest1\n\nDataset: np.random.normal\nDataset shape: (10000, 1000)\nParamters: n_components = 3, max_iter = 50, n_init = 1\n\nResults:\nmdscuda final sigma: 11014284288.0\nsklearn final sigma: 11022683577.672052\n\nmdscuda time: 1.5030748590070289\nsklearn time: 125.06202016805764\n\nTest2\n\nDataset: Iris\nDataset shape: (150, 4)\nParameters: n_components = 2, max_iter = 100, n_init = 100\n\nResults:\nmdscuda final sigma: 120.9668197631836\nsklearn final sigma: 112.45789790236945\n\nmdscuda time: 3.961419030005345\nsklearn time: 3.922074425005121\n\nTest3\n\nDataset: Digits\nDataset shape: (1797, 64)\nParameters: n_components = 3, max_iter = 600, n_init = 3\n\nResults:\nmdscuda final sigma: 199908928.0\nsklearn final sigma: 199902115.6507256\n\nmdscuda time:  2.1541129870165605\nsklearn time:  90.4121356800024\n~~~\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SethEBaldwin/mdscuda",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mdscuda",
    "package_url": "https://pypi.org/project/mdscuda/",
    "platform": "",
    "project_url": "https://pypi.org/project/mdscuda/",
    "project_urls": {
      "Bug Tracker": "https://github.com/SethEBaldwin/mdscuda/issues",
      "Homepage": "https://github.com/SethEBaldwin/mdscuda"
    },
    "release_url": "https://pypi.org/project/mdscuda/0.1.3/",
    "requires_dist": [
      "numpy (>=1.19.0)",
      "scipy (>=1.6.0)",
      "numba (>=0.51.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "CUDA implementation of Multidimensional Scaling",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9989118,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa0fd4f881b0b10c4f901dd429adf1ee6bf413214ac79f1db24b8e3d7dbf85b0",
          "md5": "68fd7e4989af9b35324bf0970562db10",
          "sha256": "df5615e0606946a563b72a2bc14d175116f4b64f011e3fef5f24c1eb42773340"
        },
        "downloads": -1,
        "filename": "mdscuda-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68fd7e4989af9b35324bf0970562db10",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9577,
        "upload_time": "2021-04-04T12:10:24",
        "upload_time_iso_8601": "2021-04-04T12:10:24.413397Z",
        "url": "https://files.pythonhosted.org/packages/aa/0f/d4f881b0b10c4f901dd429adf1ee6bf413214ac79f1db24b8e3d7dbf85b0/mdscuda-0.1.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5da7071b49ab45823d050a8495badee761851f9413fe17adcbfabac77e204df3",
          "md5": "cc4dc3f08ed5d22e1bfd699dbfbaa85a",
          "sha256": "41ac6ecf683731876851bb3689683bdd0266333a02534224c179af8e95e6ebf9"
        },
        "downloads": -1,
        "filename": "mdscuda-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cc4dc3f08ed5d22e1bfd699dbfbaa85a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5723,
        "upload_time": "2021-04-04T12:10:25",
        "upload_time_iso_8601": "2021-04-04T12:10:25.649657Z",
        "url": "https://files.pythonhosted.org/packages/5d/a7/071b49ab45823d050a8495badee761851f9413fe17adcbfabac77e204df3/mdscuda-0.1.0.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f48ed87d232e0fc93c53db9a6d54976aadb144752081e796a105f7f21eacd07",
          "md5": "0931e8c4dd5871c2b858ab27a2a24aa6",
          "sha256": "9611c59a188abab17261a30d21041f04f2f1890eb6f698a19709572341f27edd"
        },
        "downloads": -1,
        "filename": "mdscuda-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0931e8c4dd5871c2b858ab27a2a24aa6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9986,
        "upload_time": "2021-04-04T12:28:22",
        "upload_time_iso_8601": "2021-04-04T12:28:22.184090Z",
        "url": "https://files.pythonhosted.org/packages/2f/48/ed87d232e0fc93c53db9a6d54976aadb144752081e796a105f7f21eacd07/mdscuda-0.1.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afd3bbe4edb6cf2ff0b995596ce6234827e11633103a280edc7cb18f9603075a",
          "md5": "e8ebbf1c725c1e107898baf215db100a",
          "sha256": "2fdf1a844052a6aeedca84c0aa9ff2368eca3c1eb9fb1627fbb084db35306747"
        },
        "downloads": -1,
        "filename": "mdscuda-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e8ebbf1c725c1e107898baf215db100a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6818,
        "upload_time": "2021-04-04T12:28:23",
        "upload_time_iso_8601": "2021-04-04T12:28:23.107105Z",
        "url": "https://files.pythonhosted.org/packages/af/d3/bbe4edb6cf2ff0b995596ce6234827e11633103a280edc7cb18f9603075a/mdscuda-0.1.1.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3c6dd5c77b38d62dc615cac4bdc42cfafd98fc1429cd79a1e67f717fed84f84",
          "md5": "056a870ab4c049c9f29f718da4611f5f",
          "sha256": "c730bf2e2010129fb9b0b216c7c4f236efa16d4efb5d7f0602b9aab2f971fb36"
        },
        "downloads": -1,
        "filename": "mdscuda-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "056a870ab4c049c9f29f718da4611f5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9989,
        "upload_time": "2021-04-04T12:34:43",
        "upload_time_iso_8601": "2021-04-04T12:34:43.386086Z",
        "url": "https://files.pythonhosted.org/packages/c3/c6/dd5c77b38d62dc615cac4bdc42cfafd98fc1429cd79a1e67f717fed84f84/mdscuda-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9de0dc6b98e224f97bfa1de202ca1df3829d963592444ee54b02f0c1c8513b7",
          "md5": "2004b1ea17d09ae591a482a203514602",
          "sha256": "503894681351e3401596a7004170444a52219ddff1ddd4fcd39248a8adf2cb06"
        },
        "downloads": -1,
        "filename": "mdscuda-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2004b1ea17d09ae591a482a203514602",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6814,
        "upload_time": "2021-04-04T12:34:44",
        "upload_time_iso_8601": "2021-04-04T12:34:44.500098Z",
        "url": "https://files.pythonhosted.org/packages/e9/de/0dc6b98e224f97bfa1de202ca1df3829d963592444ee54b02f0c1c8513b7/mdscuda-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "636a7b039b86420c7fe87f983aeae00912699a5ad6f7b1636b36167e8cebd74a",
          "md5": "e5212b59fbbc64ddfc1b95a73c0bb920",
          "sha256": "26aba222d66fcb2952b68838f9b57e69e3f79554c4f26f1d90b04909149076cb"
        },
        "downloads": -1,
        "filename": "mdscuda-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5212b59fbbc64ddfc1b95a73c0bb920",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11306,
        "upload_time": "2021-04-06T18:49:51",
        "upload_time_iso_8601": "2021-04-06T18:49:51.834465Z",
        "url": "https://files.pythonhosted.org/packages/63/6a/7b039b86420c7fe87f983aeae00912699a5ad6f7b1636b36167e8cebd74a/mdscuda-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3676b90dbd79aec43598059e59039597d80824ce933c58ef6fa8f702bf6bf6f0",
          "md5": "704c4a78dd643ec55a75be80f970c829",
          "sha256": "23cd3c7be8b82fa11de091f3cf7cd30c6b551c2f587be11212eb4e357cfb67fd"
        },
        "downloads": -1,
        "filename": "mdscuda-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "704c4a78dd643ec55a75be80f970c829",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6303,
        "upload_time": "2021-04-06T18:49:52",
        "upload_time_iso_8601": "2021-04-06T18:49:52.960279Z",
        "url": "https://files.pythonhosted.org/packages/36/76/b90dbd79aec43598059e59039597d80824ce933c58ef6fa8f702bf6bf6f0/mdscuda-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "636a7b039b86420c7fe87f983aeae00912699a5ad6f7b1636b36167e8cebd74a",
        "md5": "e5212b59fbbc64ddfc1b95a73c0bb920",
        "sha256": "26aba222d66fcb2952b68838f9b57e69e3f79554c4f26f1d90b04909149076cb"
      },
      "downloads": -1,
      "filename": "mdscuda-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e5212b59fbbc64ddfc1b95a73c0bb920",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11306,
      "upload_time": "2021-04-06T18:49:51",
      "upload_time_iso_8601": "2021-04-06T18:49:51.834465Z",
      "url": "https://files.pythonhosted.org/packages/63/6a/7b039b86420c7fe87f983aeae00912699a5ad6f7b1636b36167e8cebd74a/mdscuda-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3676b90dbd79aec43598059e59039597d80824ce933c58ef6fa8f702bf6bf6f0",
        "md5": "704c4a78dd643ec55a75be80f970c829",
        "sha256": "23cd3c7be8b82fa11de091f3cf7cd30c6b551c2f587be11212eb4e357cfb67fd"
      },
      "downloads": -1,
      "filename": "mdscuda-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "704c4a78dd643ec55a75be80f970c829",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6303,
      "upload_time": "2021-04-06T18:49:52",
      "upload_time_iso_8601": "2021-04-06T18:49:52.960279Z",
      "url": "https://files.pythonhosted.org/packages/36/76/b90dbd79aec43598059e59039597d80824ce933c58ef6fa8f702bf6bf6f0/mdscuda-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}