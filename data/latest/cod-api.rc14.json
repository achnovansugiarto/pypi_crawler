{
  "info": {
    "author": "Todo Lodo",
    "author_email": "me@todolodo.xyz",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "===================\n**cod-python-api**\n===================\n\n.. meta::\n    :description: Call Of Duty API Library for python with the implementation of both public and private API used by activision on callofduty.com\n    :key: CallOfDuty API, CallOfDuty python API, CallOfDuty python\n\n.. image:: https://github.com/TodoLodo/cod-python-api/actions/workflows/codeql-analysis.yml/badge.svg?branch=main\n    :target: https://github.com/TodoLodo/cod-python-api.git\n\n.. image:: https://img.shields.io/endpoint?url=https://cod-python-api.todolodo.xyz/stats?q=version\n    :target: https://badge.fury.io/py/cod-api\n\n.. image:: https://img.shields.io/endpoint?url=https://cod-python-api.todolodo.xyz/stats?q=downloads\n    :target: https://badge.fury.io/gh/TodoLodo2089%2Fcod-python-api\n\n------------------------------------------------------------------------------------------------------------------------\n\n**Call Of Duty API Library** for **python** with the implementation of both public and private API used by activision on\ncallofduty.com\n\n====\nDevs\n====\n* `Todo Lodo`_ \n* `Engineer15`_\n\n.. _Todo Lodo: https://todolodo.xyz\n.. _Engineer15: https://github.com/Engineer152\n\n============\nContributors\n============\n* `Werseter`_\n\n.. _Werseter: https://github.com/Werseter\n\n===============\nPartnered Code\n===============\n`Node-CallOfDuty`_ by: `Lierrmm`_\n\n.. _Node-CallOfDuty: https://github.com/Lierrmm/Node-CallOfDuty\n.. _Lierrmm: https://github.com/Lierrmm\n\n=============\nDocumentation\n=============\nThis package can be used directly as a python file or as a python library.\n\nInstallation\n============\n\nInstall cod-api library using `pip`_:\n\n.. code-block:: bash\n\n    pip install -U cod-api\n\n.. _pip: https://pip.pypa.io/en/stable/getting-started/\n\nUsage\n=====\n\nInitiation\n----------\n\nImport module with its classes:\n\n.. code-block:: python\n\n    from cod_api import API\n\n    api = API()\n\n\n.. _`logged in`:\n\nLogin with your sso token:\n\n.. code-block:: python\n\n    api.login('Your sso token')\n\nYour sso token can be found by longing in at `callofduty`_, opening dev tools (ctr+shift+I), going to Applications >\nStorage > Cookies > https://callofduty.com, filter to search 'ACT_SSO_COOKIE' and copy the value.\n\n.. _callofduty: https://my.callofduty.com/\n\nGame/Other sub classes\n----------------------\n\nFollowing importation and initiation of the class ``API``, its associated subclasses can be called by\n``API.subClassName``.\n\nBelow are the available sub classes:\n\n+-------------------+----------+\n| sub class         | category |\n+===================+==========+\n|* `ColdWar`_       | game     |\n+-------------------+----------+\n|* `ModernWarfare`_ | game     |\n+-------------------+----------+\n|* `ModernWarfare2`_| game     |\n+-------------------+----------+\n|* `Vanguard`_      | game     |\n+-------------------+----------+\n|* `Warzone`_       | game     |\n+-------------------+----------+\n|* `Warzone2`_      | game     |\n+-------------------+----------+\n|* `Me`_            | other    |\n+-------------------+----------+\n|* `Shop`_          | other    |\n+-------------------+----------+\n|* `Misc`_          | other    |\n+-------------------+----------+\n\n\n\nFor a detailed description, ``__doc__`` (docstring) of each sub class can be called as shown below:\n\n.. _`ColdWar`:\n\n``ColdWar``:\n\n.. code-block:: python\n\n    from cod_api import API\n\n    api = API()\n\n    # print out the docstring\n    print(api.ColdWar.__doc__)\n\n.. _`ModernWarfare`:\n\n``ModernWarfare``:\n\n.. code-block:: python\n\n    from cod_api import API\n\n    api = API()\n\n    # print out the docstring\n    print(api.ModernWarfare.__doc__)\n\n.. _`ModernWarfare2`:\n\n``ModernWarfare2``:\n\n.. code-block:: python\n\n    from cod_api import API\n\n    api = API()\n\n    # print out the docstring\n    print(api.ModernWarfare2.__doc__)\n\n.. _`Vanguard`:\n\n``Vanguard``:\n\n.. code-block:: python\n\n    from cod_api import API\n\n    api = API()\n\n    # print out the docstring\n    print(api.Vanguard.__doc__)\n\n.. _`Warzone`:\n\n``Warzone``:\n\n.. code-block:: python\n\n    from cod_api import API\n\n    api = API()\n\n    # print out the docstring\n    print(api.Warzone.__doc__)\n\n.. _`Warzone2`:\n\n``Warzone2``:\n\n.. code-block:: python\n\n    from cod_api import API\n\n    api = API()\n\n    # print out the docstring\n    print(api.Warzone2.__doc__)\n\n.. _`Me`:\n\n``Me``:\n\n.. code-block:: python\n\n    from cod_api import API\n\n    api = API()\n\n    # print out the docstring\n    print(api.Me.__doc__)\n\n.. _`Shop`:\n\n``Shop``:\n\n.. code-block:: python\n\n    from cod_api import API\n\n    api = API()\n\n    # print out the docstring\n    print(api.Shop.__doc__)\n\n\n.. _`Misc`:\n\n``Misc``:\n\n.. code-block:: python\n\n    from cod_api import API\n\n    api = API()\n\n    # print out the docstring\n    print(api.Misc.__doc__)\n\nFull Profile History\n--------------------\n\nAny sub class of ``API``  that is of game category, has methods to check a player's combat history.\nNote that before calling any sub class methods of ``API`` you must be `logged in`_.\nMain method is ``fullData()`` and ``fullDataAsync()`` which is available for ``ColdWar``, ``ModernWarfare``,\n``ModernWarfare2``, ``Vanguard``, ``Warzone`` and ``Warzone2`` classes.\n\nHere's an example for retrieving **Warzone** full profile history of a player whose gamer tag is **Username#1234** on platform\n**Battlenet**:\n\n.. code-block:: python\n\n    from cod_api import API, platforms\n    import asyncio\n\n    ## sync\n    # initiating the API class\n    api = API()\n\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving combat history\n    profile = api.Warzone.fullData(platforms.Battlenet, \"Username#1234\") # returns data of type dict\n\n    # printing results to console\n    print(profile)\n\n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving combat history\n        profile = await api.Warzone.fullDataAsync(platforms.Battlenet, \"Username#1234\") # returns data of type dict\n\n        # printing results to console\n        print(profile)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\n\nCombat History\n--------------\n\nMain methods are ``combatHistory()`` and ``combatHistoryWithDate()`` for sync environments and ``combatHistoryAsync()``\nand ``combatHistoryWithDateAsync()`` for async environments which are available for all ``ColdWar``, ``ModernWarfare``,\n``ModernWarfare2``, ``Vanguard``, ``Warzone`` and ``Warzone2`` classes.\n\nThe ``combatHistory()`` and ``combatHistoryAsync()`` takes 2 input parameters which are ``platform`` and ``gamertag`` of\ntype `cod_api.platforms`_ and string respectively.\n\nHere's an example for retrieving **Warzone** combat history of a player whose gamer tag is **Username#1234** on platform\n**Battlenet**:\n\n.. code-block:: python\n\n    from cod_api import API, platforms\n\n    # initiating the API class\n    api = API()\n\n    ## sync\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving combat history\n    hist = api.Warzone.combatHistory(platforms.Battlenet, \"Username#1234\") # returns data of type dict\n\n    # printing results to console\n    print(hist)\n\n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving combat history\n        hist = await api.Warzone.combatHistoryAsync(platforms.Battlenet, \"Username#1234\") # returns data of type dict\n\n        # printing results to console\n        print(hist)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\nThe ``combatHistoryWithDate()`` and ``combatHistoryWithDateAsync()`` takes 4 input parameters which are ``platform``,\n``gamertag``, ``start`` and ``end`` of type `cod_api.platforms`_, string, int and int respectively.\n\n``start`` and ``end`` parameters are utc timestamps in microseconds.\n\nHere's an example for retrieving **ModernWarfare** combat history of a player whose gamer tag is **Username#1234567** on\nplatform **Activision** with in the timestamps **1657919309** (Friday, 15 July 2022 21:08:29) and **1657949309**\n(Saturday, 16 July 2022 05:28:29):\n\n.. code-block:: python\n\n    from cod_api import API, platforms\n\n    # initiating the API class\n    api = API()\n\n    ## sync\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving combat history\n    hist = api.Warzone.combatHistoryWithDate(platforms.Activision, \"Username#1234567\", 1657919309, 1657949309) # returns data of type dict\n\n    # printing results to console\n    print(hist)\n    \n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving combat history\n        hist = await api.Warzone.combatHistoryWithDateAsync(platforms.Battlenet, \"Username#1234\", 1657919309, 1657949309) # returns data of type dict\n\n        # printing results to console\n        print(hist)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\nAdditionally the methods ``breakdown()`` and ``breakdownWithDate()`` for sync environments and ``breakdownAsync()`` and\n``breakdownWithDateAsync()`` for async environments, can be used to retrieve combat history without details, where only\nthe platform played on, game title, UTC timestamp, type ID, match ID and map ID is returned for every match. These\nmethods are available for all ``ColdWar``, ``ModernWarfare``, ``ModernWarfare2``, ``Vanguard``, ``Warzone`` and\n``Warzone2`` classes.\n\nThe ``breakdown()`` and `breakdownAsync()`` takes 2 input parameters which are ``platform`` and ``gamertag`` of type\n`cod_api.platforms`_ and string respectively.\n\nHere's an example for retrieving **Warzone** combat history breakdown of a player whose gamer tag is **Username#1234**\non platform **Battlenet**:\n\n.. code-block:: python\n\n    from cod_api import API, platforms\n\n    # initiating the API class\n    api = API()\n\n    ## sync\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving combat history breakdown\n    hist_b = api.Warzone.breakdown(platforms.Battlenet, \"Username#1234\") # returns data of type dict\n\n    # printing results to console\n    print(hist_b)\n\n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving combat history breakdown\n        hist_b = await api.Warzone.breakdownAsync(platforms.Battlenet, \"Username#1234\") # returns data of type dict\n\n        # printing results to console\n        print(hist_b)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\nThe ``breakdownWithDate()`` and ``breakdownWithDateAsync()`` takes 4 input parameters which are ``platform``,\n``gamertag``, ``start`` and ``end`` of type `cod_api.platforms`_, string, int and int respectively.\n\n``start`` and ``end`` parameters are utc timestamps in microseconds.\n\nHere's an example for retrieving **ModernWarfare** combat history breakdown of a player whose gamer tag is\n**Username#1234567** on platform **Activision** with in the timestamps **1657919309** (Friday, 15 July 2022 21:08:29)\nand **1657949309** (Saturday, 16 July 2022 05:28:29):\n\n.. code-block:: python\n\n    from cod_api import API, platforms\n\n    # initiating the API class\n    api = API()\n\n    ## sync\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving combat history breakdown\n    hist_b = api.Warzone.breakdownWithDate(platforms.Activision, \"Username#1234567\", 1657919309, 1657949309) # returns data of type dict\n\n    # printing results to console\n    print(hist_b)\n\n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving combat history breakdown\n        hist_b = await api.Warzone.breakdownWithDateAsync(platforms.Activision, \"Username#1234567\", 1657919309, 1657949309) # returns data of type dict\n\n        # printing results to console\n        print(hist_b)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\nMatch Details\n-------------\n\nTo retrieve details of a specific match, the method ``matchInfo()`` for sync environments and ``matchInfoAsync()`` for\nasync environments can be used. These methods are available for all ``ColdWar``, ``ModernWarfare``, ``ModernWarfare2``,\n``Vanguard``, ``Warzone`` and ``Warzone2`` classes. Details returned by this method contains additional data than that\nof details returned by the **combat history** methods for a single match.\n\nThe ``matchInfo()`` and ``matchInfoAsync()`` takes 2 input parameters which are ``platform`` and ``matchId`` of type\n`cod_api.platforms`_ and integer respectively.\n\n*Optionally the match ID can be retrieved during your gameplay where it will be visible on bottom left corner*\n\nHere's an example for retrieving **Warzone** match details of a match where its id is **9484583876389482453**\non platform **Battlenet**:\n\n.. code-block:: python\n\n    from cod_api import API, platforms\n\n    # initiating the API class\n    api = API()\n\n    ## sync\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving match details\n    details = api.Warzone.matchInfo(platforms.Battlenet, 9484583876389482453) # returns data of type dict\n\n    # printing results to console\n    print(details)\n\n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving match details\n        details = await api.Warzone.matchInfoAsync(platforms.Battlenet, 9484583876389482453) # returns data of type dict\n\n        # printing results to console\n        print(details)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\nSeason Loot\n-----------\n\nUsing the ``seasonLoot()`` for sync environments and ``seasonLootAsync()`` for async environments, player's obtained\nseason loot can be retrieved for a specific game and this method is available for ``ColdWar``, ``ModernWarfare``,\n``ModernWarfare2`` and ``Vanguard`` classes.\n\nThe ``seasonLoot()`` and ``seasonLootAsync()`` takes 2 input parameters which are ``platform`` and ``matchId`` of type\n`cod_api.platforms`_ and integer respectively.\n\nHere's an example for retrieving **ColdWar** season loot obtained by a player whose gamer tag is **Username#1234** on\nplatform **Battlenet**:\n\n.. code-block:: python\n\n    from cod_api import API, platforms\n\n    # initiating the API class\n    api = API()\n\n    ## sync\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving season loot\n    loot = api.ColdWar.seasonLoot(platforms.Battlenet, \"Username#1234\") # returns data of type dict)\n\n    # printing results to console\n    print(loot)\n\n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving season loot\n        loot = await api.ColdWar.seasonLootAsync(platforms.Battlenet, \"Username#1234\") # returns data of type dict\n\n        # printing results to console\n        print(loot)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\nMap List\n--------\n\nUsing the ``mapList()`` for sync environments and ``mapListAsync()`` for async environments, all the maps and its\navailable modes can be retrieved for a specific game. These methods are available for ``ColdWar``, ``ModernWarfare``,\n``ModernWarfare2`` and ``Vanguard`` classes.\n\nThe ``mapList()`` and ``mapListAsync()`` takes 1 input parameters which is ``platform`` of type `cod_api.platforms`_.\n\nHere's an example for retrieving **Vanguard** map list and available modes respectively on platform PlayStation\n(**PSN**):\n\n.. code-block:: python\n\n    from cod_api import API, platforms\n\n    # initiating the API class\n    api = API()\n\n    ## sync\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving maps and respective modes available\n    maps = api.Vanguard.mapList(platforms.PSN) # returns data of type dict\n\n    # printing results to console\n    print(maps)\n\n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving season loot\n        maps = await api.Vanguard.mapListAsync(platforms.PSN) # returns data of type dict\n\n        # printing results to console\n        print(maps)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\n\n.. _cod_api.platforms:\n\nplatforms\n---------\n\n``platforms`` is an enum class available in ``cod_api`` which is used to specify the platform in certain method calls.\n\nAvailable ``platforms`` are as follows:\n\n+----------------------+----------------------------------------+\n|Platform              | Remarks                                |\n+======================+========================================+\n|platforms.All         | All (no usage till further updates)    |\n+----------------------+----------------------------------------+\n|platforms.Activision  | Activision                             |\n+----------------------+----------------------------------------+\n|platforms.Battlenet   | Battlenet                              |\n+----------------------+----------------------------------------+\n|platforms.PSN         | PlayStation                            |\n+----------------------+----------------------------------------+\n|platforms.Steam       | Steam (no usage till further updates)  |\n+----------------------+----------------------------------------+\n|platforms.Uno         | Uno (activision unique id)             |\n+----------------------+----------------------------------------+\n|platforms.XBOX        | Xbox                                   |\n+----------------------+----------------------------------------+\n\n``platforms`` can be imported and used as follows:\n\n.. code-block:: python\n\n    from cod_api import platforms\n\n    platforms.All        # All (no usage till further updates)\n\n    platforms.Activision # Activision\n\n    platforms.Battlenet  # Battlenet\n\n    platforms.PSN        # PlayStation\n\n    platforms.Steam      # Steam (no usage till further updates)\n\n    platforms.Uno        # Uno (activision unique id)\n\n    platforms.XBOX       # Xbox\n\nUser Info\n----------\n\nUsing the ``info()`` method in sub class ``Me`` of ``API`` user information can be retrieved of the sso-token logged in\nwith\n\n.. code-block:: python\n\n    from cod_api import API\n\n    # initiating the API class\n    api = API()\n\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving user info\n    userInfo = api.Me.info() # returns data of type dict\n\n    # printing results to console\n    print(userInfo)\n\nUser Friend Feed\n----------------\n\nUsing the methods, ``friendFeed()`` for sync environments and ``friendFeedAsync()`` for async environments, in sub class\n``Me`` of ``API``, user's friend feed can be retrieved of the sso-token logged in with\n\n.. code-block:: python\n\n    from cod_api import API\n\n    # initiating the API class\n    api = API()\n\n    ## sync\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving user friend feed\n    friendFeed = api.Me.friendFeed() # returns data of type dict\n\n    # printing results to console\n    print(friendFeed)\n    \n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving user friend feed\n        friendFeed = await api.Me.friendFeedAsync() # returns data of type dict\n\n        # printing results to console\n        print(friendFeed)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\nUser Event Feed\n----------------\n\nUsing the methods ``eventFeed()`` for sync environments and ``eventFeedAsync()`` for async environments, in sub class\n``Me`` of ``API`` user's event feed can be retrieved of the sso-token logged in with\n\n.. code-block:: python\n\n    from cod_api import API\n\n    # initiating the API class\n    api = API()\n\n    ## sync\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving user event feed\n    eventFeed = api.Me.eventFeed() # returns data of type dict\n\n    # printing results to console\n    print(eventFeed)\n\n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving user event feed\n        eventFeed = await api.Me.eventFeedAsync() # returns data of type dict\n\n        # printing results to console\n        print(eventFeed)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\nUser Identities\n----------------\n\nUsing the methods ``loggedInIdentities()`` for sync environments and ``loggedInIdentitiesAsync()`` for async\nenvironments, in sub class ``Me`` of ``API`` user's identities can be retrieved of the sso-token logged in with\n\n.. code-block:: python\n\n    from cod_api import API\n\n    # initiating the API class\n    api = API()\n\n    ## sync\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving user identities\n    identities = api.Me.loggedInIdentities() # returns data of type dict\n\n    # printing results to console\n    print(identities)\n\n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving user identities\n        identities = await api.Me.loggedInIdentitiesAsync() # returns data of type dict\n\n        # printing results to console\n        print(identities)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\nUser COD Points\n----------------\n\nUsing the methods ``codPoints()`` for sync environments and ``codPointsAsync()`` for async environments, in sub class\n``Me`` of ``API`` user's cod points can be retrieved of the sso-token logged in with\n\n.. code-block:: python\n\n    from cod_api import API\n\n    # initiating the API class\n    api = API()\n\n    ## sync\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving user cod points\n    cp = api.Me.codPoints() # returns data of type dict\n\n    # printing results to console\n    print(cp)\n\n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving user cod points\n        cp = await api.Me.codPointsAsync() # returns data of type dict\n\n        # printing results to console\n        print(cp)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\nUser Accounts\n----------------\n\nUsing the methods ``connectedAccounts()`` for sync environments and ``connectedAccountsAsync()`` for async environments,\nin sub class ``Me`` of ``API`` user's connected accounts can be retrieved of the sso-token logged in with\n\n.. code-block:: python\n\n    from cod_api import API\n\n    # initiating the API class\n    api = API()\n\n    ## sync\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving user connected accounts\n    accounts = api.Me.connectedAccounts() # returns data of type dict\n\n    # printing results to console\n    print(accounts)\n\n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving user connected accounts\n        accounts = await api.Me.connectedAccountsAsync() # returns data of type dict\n\n        # printing results to console\n        print(accounts)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\nUser settings\n----------------\n\nUsing the methods ``settings()`` for sync environments and ``settingsAsync()`` for async environments, in sub class\n``Me`` of ``API`` user's settings can be retrieved of the sso-token logged in with\n\n.. code-block:: python\n\n    from cod_api import API\n\n    # initiating the API class\n    api = API()\n\n    ## sync\n    # login in with sso token\n    api.login('your_sso_token')\n\n    # retrieving user settings\n    settings = api.Me.settings() # returns data of type dict\n\n    # printing results to console\n    print(settings)\n\n    ## async\n    # in an async function\n    async def example():\n        # login in with sso token\n        await api.loginAsync('your_sso_token')\n\n        # retrieving user settings\n        settings = await api.Me.settingsAsync() # returns data of type dict\n\n        # printing results to console\n        print(settings)\n\n    # CALL THE example FUNCTION IN AN ASYNC ENVIRONMENT\n\n-------------------------------------------------------------------------------------------------------------------------------\n\nDonate\n======\n\n* `Donate Todo Lodo`_ \n* `Donate Engineer152`_\n* `Donate Werseter`_\n\n.. _Donate Todo Lodo: https://www.buymeacoffee.com/todolodo2089\n.. _Donate Engineer152: https://www.paypal.com/paypalme/engineer15\n.. _Donate Werseter: https://paypal.me/werseter\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://codapi.dev/",
    "keywords": "",
    "license": "GPL-3.0",
    "maintainer": "Engineer15",
    "maintainer_email": "engineergamer15@gmail.com",
    "name": "cod-api",
    "package_url": "https://pypi.org/project/cod-api/",
    "platform": null,
    "project_url": "https://pypi.org/project/cod-api/",
    "project_urls": {
      "Homepage": "https://codapi.dev/",
      "Issue Tracker": "https://github.com/TodoLodo2089/cod-python-api/issues",
      "Source Code": "https://github.com/TodoLodo2089/cod-python-api"
    },
    "release_url": "https://pypi.org/project/cod-api/2.0.1/",
    "requires_dist": [
      "asyncio",
      "aiohttp",
      "datetime",
      "requests",
      "uuid",
      "urllib3",
      "enum34"
    ],
    "requires_python": "",
    "summary": "Call Of Duty API.",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15588954,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76ac4d66e84cf7beb8da537d29d8afafe357b0ed2709fe1bec86e8ce5c813184",
          "md5": "eedc5855ec18876076537a6a6156d080",
          "sha256": "b65c2718c5d0a339f3c1af6b79debbde17eab3d8da8a87a4f8672d14f2f13653"
        },
        "downloads": -1,
        "filename": "cod_api-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eedc5855ec18876076537a6a6156d080",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20197,
        "upload_time": "2022-07-17T00:00:21",
        "upload_time_iso_8601": "2022-07-17T00:00:21.099605Z",
        "url": "https://files.pythonhosted.org/packages/76/ac/4d66e84cf7beb8da537d29d8afafe357b0ed2709fe1bec86e8ce5c813184/cod_api-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cc46e6497389b7e4048ed42168c8d251a176fd5b221f762a03a1bc55382b8d6",
          "md5": "0a3581d76dab87d4051c23c6e0a06124",
          "sha256": "46388ead79160ec8c96b1c711170b5688b3591e9575aebdf4f869b2a06edf50d"
        },
        "downloads": -1,
        "filename": "cod_api-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0a3581d76dab87d4051c23c6e0a06124",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23287,
        "upload_time": "2022-07-17T00:00:32",
        "upload_time_iso_8601": "2022-07-17T00:00:32.708678Z",
        "url": "https://files.pythonhosted.org/packages/5c/c4/6e6497389b7e4048ed42168c8d251a176fd5b221f762a03a1bc55382b8d6/cod_api-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc78504f67150d45a907f2dc0963669123f0f5f706e3072625b8e285d14e597e",
          "md5": "971a44030db08e526952c4f84c510cea",
          "sha256": "d2d891e93e1cdb131e640bd908591d0540602c2eb03b6d1d0c64172d69b86dc1"
        },
        "downloads": -1,
        "filename": "cod_api-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "971a44030db08e526952c4f84c510cea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21589,
        "upload_time": "2022-07-28T22:24:40",
        "upload_time_iso_8601": "2022-07-28T22:24:40.926595Z",
        "url": "https://files.pythonhosted.org/packages/dc/78/504f67150d45a907f2dc0963669123f0f5f706e3072625b8e285d14e597e/cod_api-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fd2f31302b640aa9988609ddc6710682bed69c9f6142ea8285970593c84d34c",
          "md5": "773d76f1b59e4357b68761a3d18cc7ec",
          "sha256": "dcd47e4bb2d9cd3ac46709758f30046284441dcaf9b561508c79f0e8e6ec1357"
        },
        "downloads": -1,
        "filename": "cod_api-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "773d76f1b59e4357b68761a3d18cc7ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24850,
        "upload_time": "2022-07-28T22:24:43",
        "upload_time_iso_8601": "2022-07-28T22:24:43.653025Z",
        "url": "https://files.pythonhosted.org/packages/5f/d2/f31302b640aa9988609ddc6710682bed69c9f6142ea8285970593c84d34c/cod_api-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "252687eff85718a5ea8b1c16d7754aa1fdcc22bb9ec910aab076c938e92533c3",
          "md5": "84b118cb058efd3d07bfe25847bec146",
          "sha256": "eb7386179fbabef8da717a5b495c77adfb8d555728fdc2b7d53b5f183167b391"
        },
        "downloads": -1,
        "filename": "cod_api-0.0.2.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84b118cb058efd3d07bfe25847bec146",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21199,
        "upload_time": "2022-07-19T19:36:41",
        "upload_time_iso_8601": "2022-07-19T19:36:41.114897Z",
        "url": "https://files.pythonhosted.org/packages/25/26/87eff85718a5ea8b1c16d7754aa1fdcc22bb9ec910aab076c938e92533c3/cod_api-0.0.2.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "271b32cb21e2e08ae16897de4d2b4780688dfb092d4d86344b858c12d8257791",
          "md5": "594a3f3199a3a2f6a592dc4fcae6f88b",
          "sha256": "7994d0de81f44a3789c68a370ba0d16db21bc41ebea122905cff7aa315c54f8f"
        },
        "downloads": -1,
        "filename": "cod_api-0.0.2.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "594a3f3199a3a2f6a592dc4fcae6f88b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24131,
        "upload_time": "2022-07-19T19:36:43",
        "upload_time_iso_8601": "2022-07-19T19:36:43.616575Z",
        "url": "https://files.pythonhosted.org/packages/27/1b/32cb21e2e08ae16897de4d2b4780688dfb092d4d86344b858c12d8257791/cod_api-0.0.2.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e6dbf07103251a0f483c1a1e8a6225454074c5dacb0e028aeafff8ff7597494",
          "md5": "4deb54eaa6b9f39c6efe0333b98dc8d7",
          "sha256": "8f12dfa93a663dc5d51cfad163f4cbfd50c32b1faf7bfe98055629f44d7bf088"
        },
        "downloads": -1,
        "filename": "cod_api-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4deb54eaa6b9f39c6efe0333b98dc8d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21967,
        "upload_time": "2022-10-23T17:45:31",
        "upload_time_iso_8601": "2022-10-23T17:45:31.350762Z",
        "url": "https://files.pythonhosted.org/packages/9e/6d/bf07103251a0f483c1a1e8a6225454074c5dacb0e028aeafff8ff7597494/cod_api-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b191af78fc6cf4095800f84310aa2ee349bc4b224176ea7323c907d9991e2695",
          "md5": "bbd5cb6bc618d0501449dc8b6ba437c4",
          "sha256": "9092978accac091e32ccd1765bfdc21d33c1a1a9c889a4ec8453d325d89e1e3b"
        },
        "downloads": -1,
        "filename": "cod_api-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bbd5cb6bc618d0501449dc8b6ba437c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25411,
        "upload_time": "2022-10-23T17:45:33",
        "upload_time_iso_8601": "2022-10-23T17:45:33.876351Z",
        "url": "https://files.pythonhosted.org/packages/b1/91/af78fc6cf4095800f84310aa2ee349bc4b224176ea7323c907d9991e2695/cod_api-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adf3e37351a32f66fbe38a0e673209ed1b734d23be1544a207bb3ea366ed6ff4",
          "md5": "c526cf886a9a0d5eee89c60b58da76ae",
          "sha256": "3dcaab6ddf55f43b9af26a1a02a77f3390e879315a367854b6f89dfaf50a9096"
        },
        "downloads": -1,
        "filename": "cod_api-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c526cf886a9a0d5eee89c60b58da76ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22217,
        "upload_time": "2022-10-26T19:41:15",
        "upload_time_iso_8601": "2022-10-26T19:41:15.496670Z",
        "url": "https://files.pythonhosted.org/packages/ad/f3/e37351a32f66fbe38a0e673209ed1b734d23be1544a207bb3ea366ed6ff4/cod_api-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ad621a0ff9a61d2c7e2639ae909dbbe542d408acd1c3a1e4abf80ec46560686",
          "md5": "331e7d774c84d49003c310ee68e0f704",
          "sha256": "13bf6a11361f3447f1ed2b79acfd9d17aa17f26ae6940027ce5e646e7146ca3d"
        },
        "downloads": -1,
        "filename": "cod_api-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "331e7d774c84d49003c310ee68e0f704",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22015,
        "upload_time": "2022-10-27T00:18:20",
        "upload_time_iso_8601": "2022-10-27T00:18:20.045007Z",
        "url": "https://files.pythonhosted.org/packages/5a/d6/21a0ff9a61d2c7e2639ae909dbbe542d408acd1c3a1e4abf80ec46560686/cod_api-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2884da98b46b672a6b5875f0247f0f40f2380c306d5b09dd01890bf1e7dc01e9",
          "md5": "4ddd6b652ded702bf6c0b505b7601a3a",
          "sha256": "e91a23107ec10091b36ec3b6148de0ac383dd9ba39159d1c234cd40ed49d98b2"
        },
        "downloads": -1,
        "filename": "cod_api-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4ddd6b652ded702bf6c0b505b7601a3a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25362,
        "upload_time": "2022-10-27T00:18:21",
        "upload_time_iso_8601": "2022-10-27T00:18:21.940887Z",
        "url": "https://files.pythonhosted.org/packages/28/84/da98b46b672a6b5875f0247f0f40f2380c306d5b09dd01890bf1e7dc01e9/cod_api-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e66a0548481f60814dafb218fd7bc00e840a061faab7373831695aad1cc9c649",
          "md5": "d3b9b4758e6a75365984629e6218434a",
          "sha256": "26f5b68ae4ab7f0ded069141c37eb040c9a54c4a021d72476cfc12d53efe9149"
        },
        "downloads": -1,
        "filename": "cod_api-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3b9b4758e6a75365984629e6218434a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22009,
        "upload_time": "2022-10-27T16:05:28",
        "upload_time_iso_8601": "2022-10-27T16:05:28.707964Z",
        "url": "https://files.pythonhosted.org/packages/e6/6a/0548481f60814dafb218fd7bc00e840a061faab7373831695aad1cc9c649/cod_api-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f737394d700cc455bd985d2de5d2847471cbdac04498e078c704793afaf5130",
          "md5": "74a3e143963b0db35bfbaf76e788135d",
          "sha256": "b0fe2ed4ce6f531d7175fd6908cbb13926e5e8b2b00ce0d1850c7eaf97b378fc"
        },
        "downloads": -1,
        "filename": "cod_api-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "74a3e143963b0db35bfbaf76e788135d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25367,
        "upload_time": "2022-10-27T16:05:31",
        "upload_time_iso_8601": "2022-10-27T16:05:31.280015Z",
        "url": "https://files.pythonhosted.org/packages/3f/73/7394d700cc455bd985d2de5d2847471cbdac04498e078c704793afaf5130/cod_api-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e26a5ca588ced14e7e0cb38e8e7375c1147764da4d598d0d83b1c515506d2d5",
          "md5": "3b585730a661f3f7c1972b7f47e5f210",
          "sha256": "3b626bc2262fe901790e4f96e508d28f2a9ac1eea8d14e41682207bef4dbc110"
        },
        "downloads": -1,
        "filename": "cod_api-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b585730a661f3f7c1972b7f47e5f210",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22794,
        "upload_time": "2022-10-27T19:58:02",
        "upload_time_iso_8601": "2022-10-27T19:58:02.212703Z",
        "url": "https://files.pythonhosted.org/packages/7e/26/a5ca588ced14e7e0cb38e8e7375c1147764da4d598d0d83b1c515506d2d5/cod_api-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e012620489b28f31cff2866f8273e1914d6a97834128220631c1c8e1e7738647",
          "md5": "3675c9c2c487e7bcabf983021e71e604",
          "sha256": "6242b0017e5e4015ddee5966cf37d7c407bd3e0abf1641239c0de41b69faef37"
        },
        "downloads": -1,
        "filename": "cod_api-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3675c9c2c487e7bcabf983021e71e604",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26954,
        "upload_time": "2022-10-27T19:58:10",
        "upload_time_iso_8601": "2022-10-27T19:58:10.317226Z",
        "url": "https://files.pythonhosted.org/packages/e0/12/620489b28f31cff2866f8273e1914d6a97834128220631c1c8e1e7738647/cod_api-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0646ea40cac827ddb6c5f515cdd576835dcddc6409a0465bf19e75c9d6dc0fc",
          "md5": "d72abf6d136363f80f53b3600ea24e86",
          "sha256": "5e47e0089901df9c883f9ab0e53c6a302e4f68506530f921cd118cb9e9551eab"
        },
        "downloads": -1,
        "filename": "cod_api-1.1.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d72abf6d136363f80f53b3600ea24e86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22643,
        "upload_time": "2022-10-27T19:58:05",
        "upload_time_iso_8601": "2022-10-27T19:58:05.359454Z",
        "url": "https://files.pythonhosted.org/packages/f0/64/6ea40cac827ddb6c5f515cdd576835dcddc6409a0465bf19e75c9d6dc0fc/cod_api-1.1.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cebd0413f055b5015838decd5a7f6362e95bf30ce7ffe516046e8e422e018ad",
          "md5": "6622491b3611aea27ddf51f2f132b309",
          "sha256": "0de89a2b178490609b85f86e31780434b7cff4c6e4c7c1d49f64a4d442310441"
        },
        "downloads": -1,
        "filename": "cod_api-1.1.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "6622491b3611aea27ddf51f2f132b309",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26632,
        "upload_time": "2022-10-27T19:58:08",
        "upload_time_iso_8601": "2022-10-27T19:58:08.019685Z",
        "url": "https://files.pythonhosted.org/packages/5c/eb/d0413f055b5015838decd5a7f6362e95bf30ce7ffe516046e8e422e018ad/cod_api-1.1.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4f740ef5be29beb2fbb5691158e9c29cb975d83e881bc65568dfb68bfe3457a",
          "md5": "e109c13f3a4b24b2e16544366da3008d",
          "sha256": "22bad7f093ec2fbe5957203399e78071ae5e3e275bf97bdc83495fe75ca59b42"
        },
        "downloads": -1,
        "filename": "cod_api-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e109c13f3a4b24b2e16544366da3008d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22576,
        "upload_time": "2022-10-27T20:23:40",
        "upload_time_iso_8601": "2022-10-27T20:23:40.307343Z",
        "url": "https://files.pythonhosted.org/packages/a4/f7/40ef5be29beb2fbb5691158e9c29cb975d83e881bc65568dfb68bfe3457a/cod_api-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "098f90dbb55de2e4184ec971e71caa5254d612161368a26bc8cce7f7ce73a5f7",
          "md5": "6a3a8b3480119343d074f63d9ac1bd2c",
          "sha256": "120739967db994fb2514cf60dbe7737c9681cb1d401d871c6e9ae135281eecae"
        },
        "downloads": -1,
        "filename": "cod_api-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6a3a8b3480119343d074f63d9ac1bd2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26612,
        "upload_time": "2022-10-27T20:23:45",
        "upload_time_iso_8601": "2022-10-27T20:23:45.219243Z",
        "url": "https://files.pythonhosted.org/packages/09/8f/90dbb55de2e4184ec971e71caa5254d612161368a26bc8cce7f7ce73a5f7/cod_api-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1291ab93a008afbe5105e7e6635cc81641a655f713fd3ff8708b6ebeb8eac886",
          "md5": "7d10a2c5b643171feb115d123f864569",
          "sha256": "cd21e0a1e48021d7b0349dfa19d2b90d47e60492827491790839a232cdcce13f"
        },
        "downloads": -1,
        "filename": "cod_api-1.1.1.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d10a2c5b643171feb115d123f864569",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22637,
        "upload_time": "2022-10-27T20:06:47",
        "upload_time_iso_8601": "2022-10-27T20:06:47.265862Z",
        "url": "https://files.pythonhosted.org/packages/12/91/ab93a008afbe5105e7e6635cc81641a655f713fd3ff8708b6ebeb8eac886/cod_api-1.1.1.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e40fde93567de994b86d14d0069284fc99007ad9140eea722f67f7b77743523",
          "md5": "5083cb7c5f3255cf2c4cba6db214ff98",
          "sha256": "c87d54560ff227ab2993e871872603a218cdbaf3b8bbaf377948cb8c707813a2"
        },
        "downloads": -1,
        "filename": "cod_api-1.1.1.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "5083cb7c5f3255cf2c4cba6db214ff98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26632,
        "upload_time": "2022-10-27T20:06:52",
        "upload_time_iso_8601": "2022-10-27T20:06:52.308618Z",
        "url": "https://files.pythonhosted.org/packages/8e/40/fde93567de994b86d14d0069284fc99007ad9140eea722f67f7b77743523/cod_api-1.1.1.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a35a2c048d668a57d792446a648efa18dfc231add2fa11456111c954d39f23c",
          "md5": "75a55b97b6967811e7152c70475219b6",
          "sha256": "0fe64d35c0bcdc8317ee00e1443c18084ed1cea1d0a9bec217a0c592e3ec09c2"
        },
        "downloads": -1,
        "filename": "cod_api-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75a55b97b6967811e7152c70475219b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22606,
        "upload_time": "2022-10-30T08:43:44",
        "upload_time_iso_8601": "2022-10-30T08:43:44.797297Z",
        "url": "https://files.pythonhosted.org/packages/4a/35/a2c048d668a57d792446a648efa18dfc231add2fa11456111c954d39f23c/cod_api-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e2cf346564399db947c7a45f4206988c6d0075ac7f86ec505b7f3e68a5408ae",
          "md5": "7dadf62fd2189d616da5e4df6ab1a42c",
          "sha256": "d2b9050ddb74bc8cc86a60f6e23dd426c9f01bff87e753c3d68ea96737e4b3e3"
        },
        "downloads": -1,
        "filename": "cod_api-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7dadf62fd2189d616da5e4df6ab1a42c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26725,
        "upload_time": "2022-10-30T08:43:50",
        "upload_time_iso_8601": "2022-10-30T08:43:50.409030Z",
        "url": "https://files.pythonhosted.org/packages/0e/2c/f346564399db947c7a45f4206988c6d0075ac7f86ec505b7f3e68a5408ae/cod_api-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00e3f065e8aa927b5d9f33dc7f42bd4ad59acefad00ba8e5c1d6e52c3773d936",
          "md5": "7a8a01a5ab049de5b2c0d8223b5ebe67",
          "sha256": "49aaf6ec996352606196d0369a77a31901a86a189ca549cc0dbe4c2c3606a00f"
        },
        "downloads": -1,
        "filename": "cod_api-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a8a01a5ab049de5b2c0d8223b5ebe67",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22389,
        "upload_time": "2022-10-30T08:43:47",
        "upload_time_iso_8601": "2022-10-30T08:43:47.485658Z",
        "url": "https://files.pythonhosted.org/packages/00/e3/f065e8aa927b5d9f33dc7f42bd4ad59acefad00ba8e5c1d6e52c3773d936/cod_api-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07c6ea0c98bf2b5e4ab93abeba788d8cac33877933621c0ffa949247f9927de7",
          "md5": "9bb2c30e258f1314d9e42e96cfadd4ec",
          "sha256": "6ba625a3720dff591c92c7e64d22c7a5212dcbd29071128bbc51a17e1bf40395"
        },
        "downloads": -1,
        "filename": "cod_api-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9bb2c30e258f1314d9e42e96cfadd4ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26353,
        "upload_time": "2022-10-30T08:43:53",
        "upload_time_iso_8601": "2022-10-30T08:43:53.045635Z",
        "url": "https://files.pythonhosted.org/packages/07/c6/ea0c98bf2b5e4ab93abeba788d8cac33877933621c0ffa949247f9927de7/cod_api-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45be4a6fb0e367e7763e6b1369f69b3d3a41930ce0a84e356ed1a011ede0fc4e",
          "md5": "dcd3c6bc5d615c02b3dfa8622ae08de0",
          "sha256": "09040037038e82f6b2601b9a7d4019772bb3fc348c4dd5fef47c12f6c6545185"
        },
        "downloads": -1,
        "filename": "cod_api-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dcd3c6bc5d615c02b3dfa8622ae08de0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22391,
        "upload_time": "2022-10-30T19:53:30",
        "upload_time_iso_8601": "2022-10-30T19:53:30.035698Z",
        "url": "https://files.pythonhosted.org/packages/45/be/4a6fb0e367e7763e6b1369f69b3d3a41930ce0a84e356ed1a011ede0fc4e/cod_api-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "593324f022729303a43bdea3718f0d08014c039815547e7cc2334d6f3426d7ef",
          "md5": "81158b29b07d4cdcbbc2a1830bed1a64",
          "sha256": "fecf6951755defe5f51932c6c2bc74cd14851f70b99541392f93a629aa4fbf02"
        },
        "downloads": -1,
        "filename": "cod_api-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "81158b29b07d4cdcbbc2a1830bed1a64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26360,
        "upload_time": "2022-10-30T19:53:32",
        "upload_time_iso_8601": "2022-10-30T19:53:32.751879Z",
        "url": "https://files.pythonhosted.org/packages/59/33/24f022729303a43bdea3718f0d08014c039815547e7cc2334d6f3426d7ef/cod_api-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "45be4a6fb0e367e7763e6b1369f69b3d3a41930ce0a84e356ed1a011ede0fc4e",
        "md5": "dcd3c6bc5d615c02b3dfa8622ae08de0",
        "sha256": "09040037038e82f6b2601b9a7d4019772bb3fc348c4dd5fef47c12f6c6545185"
      },
      "downloads": -1,
      "filename": "cod_api-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dcd3c6bc5d615c02b3dfa8622ae08de0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22391,
      "upload_time": "2022-10-30T19:53:30",
      "upload_time_iso_8601": "2022-10-30T19:53:30.035698Z",
      "url": "https://files.pythonhosted.org/packages/45/be/4a6fb0e367e7763e6b1369f69b3d3a41930ce0a84e356ed1a011ede0fc4e/cod_api-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "593324f022729303a43bdea3718f0d08014c039815547e7cc2334d6f3426d7ef",
        "md5": "81158b29b07d4cdcbbc2a1830bed1a64",
        "sha256": "fecf6951755defe5f51932c6c2bc74cd14851f70b99541392f93a629aa4fbf02"
      },
      "downloads": -1,
      "filename": "cod_api-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "81158b29b07d4cdcbbc2a1830bed1a64",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26360,
      "upload_time": "2022-10-30T19:53:32",
      "upload_time_iso_8601": "2022-10-30T19:53:32.751879Z",
      "url": "https://files.pythonhosted.org/packages/59/33/24f022729303a43bdea3718f0d08014c039815547e7cc2334d6f3426d7ef/cod_api-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}