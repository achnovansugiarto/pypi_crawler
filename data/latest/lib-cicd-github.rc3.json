{
  "info": {
    "author": "Robert Nowotny",
    "author_email": "bitranox@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "lib_cicd_github\n===============\n\n\nVersion v1.0.1.2 as of 2022-06-02 see `Changelog`_\n\n|build_badge| |license| |jupyter| |pypi| |pypi-downloads| |black|\n\n|codecov| |better_code| |cc_maintain| |cc_issues| |cc_coverage| |snyk|\n\n\n\n.. |build_badge| image:: https://github.com/bitranox/lib_cicd_github/actions/workflows/python-package.yml/badge.svg\n   :target: https://github.com/bitranox/lib_cicd_github/actions/workflows/python-package.yml\n\n\n.. |license| image:: https://img.shields.io/github/license/webcomics/pywine.svg\n   :target: http://en.wikipedia.org/wiki/MIT_License\n\n.. |jupyter| image:: https://mybinder.org/badge_logo.svg\n   :target: https://mybinder.org/v2/gh/bitranox/lib_cicd_github/master?filepath=lib_cicd_github.ipynb\n\n.. for the pypi status link note the dashes, not the underscore !\n.. |pypi| image:: https://img.shields.io/pypi/status/lib-cicd-github?label=PyPI%20Package\n   :target: https://badge.fury.io/py/lib_cicd_github\n\n.. |codecov| image:: https://img.shields.io/codecov/c/github/bitranox/lib_cicd_github\n   :target: https://codecov.io/gh/bitranox/lib_cicd_github\n\n.. |better_code| image:: https://bettercodehub.com/edge/badge/bitranox/lib_cicd_github?branch=master\n   :target: https://bettercodehub.com/results/bitranox/lib_cicd_github\n\n.. |cc_maintain| image:: https://img.shields.io/codeclimate/maintainability-percentage/bitranox/lib_cicd_github?label=CC%20maintainability\n   :target: https://codeclimate.com/github/bitranox/lib_cicd_github/maintainability\n   :alt: Maintainability\n\n.. |cc_issues| image:: https://img.shields.io/codeclimate/issues/bitranox/lib_cicd_github?label=CC%20issues\n   :target: https://codeclimate.com/github/bitranox/lib_cicd_github/maintainability\n   :alt: Maintainability\n\n.. |cc_coverage| image:: https://img.shields.io/codeclimate/coverage/bitranox/lib_cicd_github?label=CC%20coverage\n   :target: https://codeclimate.com/github/bitranox/lib_cicd_github/test_coverage\n   :alt: Code Coverage\n\n.. |snyk| image:: https://img.shields.io/snyk/vulnerabilities/github/bitranox/lib_cicd_github\n   :target: https://snyk.io/test/github/bitranox/lib_cicd_github\n\n.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n\n.. |pypi-downloads| image:: https://img.shields.io/pypi/dm/lib-cicd-github\n   :target: https://pypi.org/project/lib-cicd-github/\n   :alt: PyPI - Downloads\n\nsmall utils for github actions:\n - print colored banners\n - wrap commands into run/success/error banners, with automatic retry\n - resolve the branch to test, based on the environment variables\n\n----\n\nautomated tests, Travis Matrix, Documentation, Badges, etc. are managed with `PizzaCutter <https://github\n.com/bitranox/PizzaCutter>`_ (cookiecutter on steroids)\n\nPython version required: 3.6.0 or newer\n\ntested on recent linux with python 3.6, 3.7, 3.8, 3.9, 3.10, pypy-3.8 - architectures: amd64\n\n`100% code coverage <https://codecov.io/gh/bitranox/lib_cicd_github>`_, flake8 style checking ,mypy static type checking ,tested under `Linux, macOS, Windows <https://github.com/bitranox/lib_cicd_github/actions/workflows/python-package.yml>`_, automatic daily builds and monitoring\n\n----\n\n- `Try it Online`_\n- `Usage`_\n- `Usage from Commandline`_\n- `Installation and Upgrade`_\n- `Requirements`_\n- `Acknowledgements`_\n- `Contribute`_\n- `Report Issues <https://github.com/bitranox/lib_cicd_github/blob/master/ISSUE_TEMPLATE.md>`_\n- `Pull Request <https://github.com/bitranox/lib_cicd_github/blob/master/PULL_REQUEST_TEMPLATE.md>`_\n- `Code of Conduct <https://github.com/bitranox/lib_cicd_github/blob/master/CODE_OF_CONDUCT.md>`_\n- `License`_\n- `Changelog`_\n\n----\n\nTry it Online\n-------------\n\nYou might try it right away in Jupyter Notebook by using the \"launch binder\" badge, or click `here <https://mybinder.org/v2/gh/{{rst_include.\nrepository_slug}}/master?filepath=lib_cicd_github.ipynb>`_\n\nUsage\n-----------\n\n- run a command passed as string\n\n.. code-block:: bash\n\n    # to be used in the github action YAML File\n    # run a command passed as string, wrap it in colored banners, retry 3 times, sleep 30 seconds when retry\n    $> lib_cicd_github_cli run \"description\" \"command -some -options\" --retry=3 --sleep=30\n\n\n- get the branch to work on from environment variables\n\n.. code-block:: bash\n\n    $> BRANCH=$(lib_cicd_github_cli get_branch)\n\npython methods:\n\n- install, installs all needed dependencies to build and deploy the project\n\n.. code-block:: python\n\n    def install(dry_run: bool = True) -> None:\n        \"\"\"\n        upgrades pip, setuptools, wheel and pytest-pycodestyle\n\n\n        Parameter\n        ---------\n        cPIP\n            from environment, the command to launch pip, like \"python -m pip\"\n\n\n        Examples\n        --------\n\n        >>> if is_github_actions_active():\n        ...     install(dry_run=True)\n\n        \"\"\"\n\n- script, run all tests\n\n.. code-block:: python\n\n    def script(dry_run: bool = True) -> None:\n        \"\"\"\n        travis jobs to run in travis.yml section \"script\":\n        - run setup.py test\n        - run pip with install option test\n        - run pip standard install\n        - test the CLI Registration\n        - install the test requirements\n        - install codecov\n        - install pytest-codecov\n        - run pytest coverage\n        - run mypy strict\n            - if MYPY_STRICT=\"True\"\n        - rebuild the rst files (resolve rst file includes)\n            - needs RST_INCLUDE_SOURCE, RST_INCLUDE_TARGET set and BUILD_DOCS=\"True\"\n        - check if deployment would succeed, if setup.py exists and not a tagged build\n\n        Parameter\n        ---------\n        cPREFIX\n            from environment, the command prefix like 'wine' or ''\n        cPIP\n            from environment, the command to launch pip, like \"python -m pip\"\n        cPYTHON\n            from environment, the command to launch python, like 'python' or 'python3' on MacOS\n        CLI_COMMAND\n            from environment, must be set in travis - the CLI command to test with option --version\n        MYPY_STRICT\n            from environment, if pytest with mypy --strict should run\n        PACKAGE_NAME\n            from environment, the package name to pass to mypy\n        BUILD_DOCS\n            from environment, if rst file should be rebuilt\n        RST_INCLUDE_SOURCE\n            from environment, the rst template with rst includes to resolve\n        RST_INCLUDE_TARGET\n            from environment, the rst target file\n        DEPLOY_WHEEL\n            from environment, if a wheel should be generated\n            only if setup.py exists and on non-tagged builds (there we deploy for real)\n        dry_run\n            if set, this returns immediately - for CLI tests\n\n\n        Examples\n        --------\n        >>> script()\n\n        \"\"\"\n\n- after_success, upload code coverage and codeclimate reports\n\n.. code-block:: python\n\n    def after_success(dry_run: bool = True) -> None:\n        \"\"\"\n        travis jobs to run in travis.yml section \"after_success\":\n            - coverage report\n            - codecov\n            - codeclimate report upload\n\n\n        Parameter\n        ---------\n        cPREFIX\n            from environment, the command prefix like 'wine' or ''\n        cPIP\n            from environment, the command to launch pip, like \"python -m pip\"\n        CC_TEST_REPORTER_ID\n            from environment, must be set in travis\n        TRAVIS_TEST_RESULT\n            from environment, this is set by TRAVIS automatically\n        dry_run\n            if set, this returns immediately - for CLI tests\n\n\n        Examples\n        --------\n        >>> after_success()\n\n        \"\"\"\n\n- deploy, deploy to pypi\n\n.. code-block:: python\n\n    def deploy(dry_run: bool = True) -> None:\n        \"\"\"\n        uploads sdist and wheels to pypi on success\n\n\n        Parameter\n        ---------\n        cPREFIX\n            from environment, the command prefix like 'wine' or ''\n        PYPI_PASSWORD\n            from environment, passed as secure, encrypted variable to environment\n        TRAVIS_TAG\n            from environment, needs to be set\n        DEPLOY_SDIST, DEPLOY_WHEEL\n            from environment, one of it needs to be true\n        dry_run\n            if set, this returns immediately - for CLI tests\n\n\n        Examples\n        --------\n        >>> deploy()\n\n        \"\"\"\n\n- get_branch, determine the branch to work on\n\n.. code-block:: python\n\n    def get_branch() -> str:\n        \"\"\"\n        Returns the branch to work on :\n            <branch>    for push, pull requests, merge\n            'release'   for tagged releases\n\n\n        Parameter\n        ---------\n        github.ref, github.head_ref, github.event_name, github.job\n            from environment\n\n        Result\n        ---------\n        the branch\n\n\n        Exceptions\n        ------------\n        none\n\n\n        ==============  ===================  ===================  ===================  ===================\n        Build           github.ref           github.head_ref      github.event_name    github.job\n        ==============  ===================  ===================  ===================  ===================\n        Push            refs/heads/<branch>  ---                  push                 build\n        Custom Build    refs/heads/<branch>  ---                  push                 build\n        Pull Request    refs/pull/xx/merge   <branch>             pull_request         build\n        Merge           refs/heads/<branch>  ---                  push                 build\n        Publish Tagged  refs/tags/<tag>      ---                  release              build\n        ==============  ===================  ===================  ===================  ===================\n\n        >>> # Setup\n        >>> github_ref_backup = get_env_data('GITHUB_REF')\n        >>> github_head_ref_backup = get_env_data('GITHUB_HEAD_REF')\n        >>> github_event_name_backup = get_env_data('GITHUB_EVENT_NAME')\n\n        >>> # test Push\n        >>> set_env_data('GITHUB_REF', 'refs/heads/development')\n        >>> set_env_data('GITHUB_HEAD_REF', '')\n        >>> set_env_data('GITHUB_EVENT_NAME', 'push')\n        >>> assert get_branch() == 'development'\n\n        >>> # test Push without github.ref\n        >>> set_env_data('GITHUB_REF', '')\n        >>> set_env_data('GITHUB_HEAD_REF', '')\n        >>> set_env_data('GITHUB_EVENT_NAME', 'push')\n        >>> assert get_branch() == 'unknown branch, event=push'\n\n        >>> # test PR\n        >>> set_env_data('GITHUB_REF', 'refs/pull/xx/merge')\n        >>> set_env_data('GITHUB_HEAD_REF', 'master')\n        >>> set_env_data('GITHUB_EVENT_NAME', 'pull_request')\n        >>> assert get_branch() == 'master'\n\n        >>> # test Publish\n        >>> set_env_data('GITHUB_REF', 'refs/tags/v1.1.15')\n        >>> set_env_data('GITHUB_HEAD_REF', '')\n        >>> set_env_data('GITHUB_EVENT_NAME', 'release')\n        >>> assert get_branch() == 'release'\n\n        >>> # test unknown event_name\n        >>> set_env_data('GITHUB_REF', '')\n        >>> set_env_data('GITHUB_HEAD_REF', '')\n        >>> set_env_data('GITHUB_EVENT_NAME', 'unknown_event')\n        >>> assert get_branch() == 'unknown branch, event=unknown_event'\n\n        >>> # Teardown\n        >>> set_env_data('GITHUB_REF', github_ref_backup)\n        >>> set_env_data('GITHUB_HEAD_REF', github_head_ref_backup)\n        >>> set_env_data('GITHUB_EVENT_NAME', github_event_name_backup)\n\n        \"\"\"\n\n- run, usually used internally\n\n.. code-block:: python\n\n    def run(\n        description: str,\n        command: str,\n        retry: int = 3,\n        sleep: int = 30,\n        banner: bool = True,\n        show_command: bool = True,\n    ) -> None:\n        \"\"\"\n        runs and retries a command passed as string and wrap it in \"success\" or \"error\" banners\n\n\n        Parameter\n        ---------\n        description\n            description of the action, shown in the banner\n        command\n            the command to launch\n        retry\n            retry the command n times, default = 3\n        sleep\n            sleep for n seconds between the commands, default = 30\n        banner\n            if to use banner for run/success or just colored lines.\n            Errors will be always shown as banner\n        show_command\n            if the command is shown - take care not to reveal secrets here !\n\n\n        Result\n        ---------\n        none\n\n\n        Exceptions\n        ------------\n        none\n\n\n        Examples\n        ------------\n\n        >>> run('test', \"unknown command\", sleep=0)\n        Traceback (most recent call last):\n            ...\n        SystemExit: ...\n\n        >>> run('test', \"unknown command\", sleep=0, show_command=False)\n        Traceback (most recent call last):\n            ...\n        SystemExit: ...\n\n        >>> run('test', \"echo test\")\n        >>> run('test', \"echo test\", show_command=False)\n\n        \"\"\"\n\n- github actions yml File example\n\n.. code-block:: yaml\n\n    # This workflow will install Python dependencies, run tests and lint with a variety of Python versions\n    # For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions\n\n    name: Python package\n\n    on:\n      push:\n        branches: [ master, development ]\n      pull_request:\n        branches: [ master, development ]\n      release:\n        branches: [ master, development ]\n        # release types see : https://docs.github.com/en/actions/reference/events-that-trigger-workflows#release\n        # he prereleased type will not trigger for pre-releases published from draft releases, but the published type will trigger.\n        # If you want a workflow to run when stable and pre-releases publish, subscribe to published instead of released and prereleased.\n        types: [published]\n\n      schedule:\n          # * is a special character in YAML, so you have to quote this string\n          # | minute | hour (UTC) | day of month (1-31) | month (1-2) | day of week (0-6 or SUN-SAT)\n          # every day at 05:40 am UTC - avoid 05:00 because of high load at the beginning of every hour\n          - cron:  '40 5 * * *'\n\n\n    jobs:\n\n      build:\n        runs-on: ${{ matrix.os }}\n\n        env:\n            # prefix before commands - used for wine, there the prefix is \"wine\"\n            cPREFIX: \"\"\n            # command to launch python interpreter (it's different on macOS, there we need python3)\n            cPYTHON: \"python\"\n            # command to launch pip (it's different on macOS, there we need pip3)\n            cPIP: \"python -m pip\"\n            # switch off wine fix me messages\n            WINEDEBUG: fixme-all\n\n            # PYTEST\n            PYTEST_DO_TESTS: \"True\"\n\n            # FLAKE8 tests\n            DO_FLAKE8_TESTS: \"True\"\n\n            # MYPY tests\n            MYPY_DO_TESTS: \"True\"\n            MYPY_OPTIONS: \"--follow-imports=normal --ignore-missing-imports --implicit-reexport --install-types --no-warn-unused-ignores --non-interactive --strict\"\n            MYPYPATH: \"./lib_cicd_github/3rd_party_stubs\"\n\n            # coverage\n            DO_COVERAGE: \"True\"\n            DO_COVERAGE_UPLOAD_CODECOV: \"True\"\n            DO_COVERAGE_UPLOAD_CODE_CLIMATE: \"True\"\n\n            # package name\n            PACKAGE_NAME: \"lib_cicd_github\"\n            # the registered CLI Command\n            CLI_COMMAND: \"lib_cicd_github\"\n            # the source file for rst_include (rebuild rst file includes)\n            RST_INCLUDE_SOURCE: \"./.docs/README_template.rst\"\n            # the target file for rst_include (rebuild rst file includes)\n            RST_INCLUDE_TARGET: \"./README.rst\"\n            # make Code Coverage Secret available in Environment\n            CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}\n            # make PyPi Password available in Environment\n            PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}\n\n\n        strategy:\n          matrix:\n            include:\n              # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-software\n\n              - os: windows-latest\n                python-version: \"3.10\"\n                env:\n                  cEXPORT: \"SET\"\n                  BUILD_DOCS: \"False\"\n                  DEPLOY_SDIST: \"False\"\n                  DEPLOY_WHEEL: \"False\"\n                  DEPLOY_TEST: \"False\"\n                  MYPY_DO_TESTS: \"True\"\n                  # Setup tests\n                  DO_SETUP_INSTALL: \"False\"\n                  DO_SETUP_INSTALL_TEST: \"True\"\n                  # Test registered CLI Command\n                  DO_CLI_TEST: \"True\"\n\n\n              - os: ubuntu-latest\n                python-version: \"3.6\"\n                env:\n                  BUILD_DOCS: \"False\"\n                  DEPLOY_SDIST: \"True\"\n                  DEPLOY_WHEEL: \"True\"\n                  DEPLOY_TEST: \"True\"\n                  MYPY_DO_TESTS: \"True\"\n                  DO_SETUP_INSTALL: \"True\"\n                  DO_SETUP_INSTALL_TEST: \"False\"\n                  DO_CLI_TEST: \"True\"\n\n              - os: ubuntu-latest\n                python-version: \"3.7\"\n                env:\n                  BUILD_DOCS: \"False\"\n                  DEPLOY_SDIST: \"True\"\n                  DEPLOY_WHEEL: \"True\"\n                  DEPLOY_TEST: \"True\"\n                  MYPY_DO_TESTS: \"True\"\n                  DO_SETUP_INSTALL: \"True\"\n                  DO_SETUP_INSTALL_TEST: \"False\"\n                  DO_CLI_TEST: \"True\"\n\n              - os: ubuntu-latest\n                python-version: \"3.8\"\n                env:\n                  BUILD_DOCS: \"False\"\n                  DEPLOY_SDIST: \"True\"\n                  DEPLOY_WHEEL: \"True\"\n                  DEPLOY_TEST: \"True\"\n                  MYPY_DO_TESTS: \"True\"\n                  DO_SETUP_INSTALL: \"True\"\n                  DO_SETUP_INSTALL_TEST: \"False\"\n                  DO_CLI_TEST: \"True\"\n\n              - os: ubuntu-latest\n                python-version: \"3.9\"\n                env:\n                  BUILD_DOCS: \"False\"\n                  DEPLOY_SDIST: \"True\"\n                  DEPLOY_WHEEL: \"True\"\n                  DEPLOY_TEST: \"True\"\n                  MYPY_DO_TESTS: \"True\"\n                  DO_SETUP_INSTALL: \"True\"\n                  DO_SETUP_INSTALL_TEST: \"False\"\n                  DO_CLI_TEST: \"True\"\n\n              - os: ubuntu-latest\n                python-version: \"3.10\"\n                env:\n                  BUILD_DOCS: \"True\"\n                  DEPLOY_SDIST: \"True\"\n                  DEPLOY_WHEEL: \"True\"\n                  DEPLOY_TEST: \"True\"\n                  MYPY_DO_TESTS: \"True\"\n                  DO_SETUP_INSTALL: \"True\"\n                  DO_SETUP_INSTALL_TEST: \"True\"\n                  DO_CLI_TEST: \"True\"\n\n              - os: ubuntu-latest\n                python-version: \"pypy-3.8\"\n                env:\n                  BUILD_DOCS: \"False\"\n                  DEPLOY_SDIST: \"True\"\n                  DEPLOY_WHEEL: \"True\"\n                  DEPLOY_TEST: \"True\"\n                  MYPY_DO_TESTS: \"False\"\n                  DO_SETUP_INSTALL: \"True\"\n                  DO_SETUP_INSTALL_TEST: \"False\"\n                  DO_CLI_TEST: \"True\"\n\n              - os: macos-latest\n                python-version: \"3.10\"\n                env:\n                  cPREFIX: \"\"               # prefix before commands - used for wine, there the prefix is \"wine\"\n                  cPYTHON: \"python3\"        # command to launch python interpreter (it's different on macOS, there we need python3)\n                  cPIP: \"python3 -m pip\"    # command to launch pip (it's different on macOS, there we need pip3)\n                  BUILD_DOCS: \"False\"\n                  DEPLOY_SDIST: \"True\"\n                  DEPLOY_WHEEL: \"True\"\n                  DEPLOY_TEST: \"True\"\n                  MYPY_DO_TESTS: \"True\"\n                  # Setup tests\n                  DO_SETUP_INSTALL: \"True\"\n                  DO_SETUP_INSTALL_TEST: \"True\"\n                  # Test registered CLI Command\n                  DO_CLI_TEST: \"True\"\n\n\n        name: \"${{ matrix.os }} Python ${{ matrix.python-version }}\"\n\n        steps:\n        # see : https://github.com/actions/checkout\n        - uses: actions/checkout@v3\n\n        - name: Setting up Python ${{ matrix.python-version }}\n          uses: actions/setup-python@v3\n          with:\n            python-version: ${{ matrix.python-version }}\n\n        - name: Install dependencies\n          # see: https://github.community/t/github-actions-new-bug-unable-to-create-environment-variables-based-matrix/16104/3\n          env: ${{ matrix.env }}             # make matrix env variables accessible\n          # lib_cicd_github install: upgrades pip, setuptools, wheel and pytest-pycodestyle\n          run: |\n            ${{ env.cPIP }} install git+https://github.com/bitranox/lib_cicd_github.git\n            lib_cicd_github install\n\n        - name: Debug - printenv and colortest\n          env:\n            # make matrix env variables accessible\n            ${{ matrix.env }}\n          shell: bash\n          run: |\n            # export for current step\n            export \"BRANCH=$(lib_cicd_github get_branch)\"\n            # export for subsequent steps\n            echo \"BRANCH=$BRANCH\" >> $GITHUB_ENV\n            log_util --level=SPAM  \"working on branch $BRANCH\"\n            log_util --level=SPAM  \"GITHUB_REF $GITHUB_REF\"\n            log_util --level=VERBOSE \"github.base_ref: ${{ github.base_ref }}\"\n            log_util --level=VERBOSE \"github.event: ${{ github.event }}\"\n            log_util --level=VERBOSE \"github.event_name: ${{ github.event_name }}\"\n            log_util --level=VERBOSE \"github.head_ref: ${{ github.head_ref }}\"\n            log_util --level=VERBOSE \"github.job: ${{ github.job }}\"\n            log_util --level=VERBOSE \"github.ref: ${{ github.ref }}\"\n            log_util --level=VERBOSE \"github.repository: ${{ github.repository }}\"\n            log_util --level=VERBOSE \"github.repository_owner: ${{ github.repository_owner }}\"\n            log_util --level=VERBOSE \"runner.os: ${{ runner.os }}\"\n            log_util --level=VERBOSE \"matrix.python-version: ${{ matrix.python-version }}\"\n            printenv\n            log_util --colortest\n\n        - name: Run Tests\n          env:\n            # make matrix env variables accessible\n            ${{ matrix.env }}\n          shell: bash\n          run: |\n            # export for current step\n            export \"BRANCH=$(lib_cicd_github get_branch)\"\n            # export for subsequent steps\n            echo \"BRANCH=$BRANCH\" >> $GITHUB_ENV\n            # run the tests\n            lib_cicd_github script\n\n        - name: After Success\n          env:\n            ${{matrix.env }}\n          shell: bash\n          continue-on-error: true\n          run: |\n            lib_cicd_github after_success\n\n        - name: Deploy\n          env:\n            # see: https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context\n            # see : https://github.com/rlespinasse/github-slug-action\n            # make matrix env variables accessible\n            ${{matrix.env }}\n          shell: bash\n          run: |\n            lib_cicd_github deploy\n\nUsage from Commandline\n------------------------\n\n.. code-block::\n\n   Usage: lib_cicd_github [OPTIONS] COMMAND [ARGS]...\n\n     CI/CD (Continuous Integration / Continuous Delivery) - utils for github\n     actions\n\n   Options:\n     --version                     Show the version and exit.\n     --traceback / --no-traceback  return traceback information on cli\n     -h, --help                    Show this message and exit.\n\n   Commands:\n     after_success  coverage reports\n     deploy         deploy on pypi\n     get_branch     get the branch to work on\n     info           get program informations\n     install        updates pip, setuptools, wheel, pytest-pycodestyle\n     run            run string command wrapped in run/success/error banners\n     script         updates pip, setuptools, wheel, pytest-pycodestyle\n\nInstallation and Upgrade\n------------------------\n\n- Before You start, its highly recommended to update pip and setup tools:\n\n\n.. code-block::\n\n    python -m pip --upgrade pip\n    python -m pip --upgrade setuptools\n\n- to install the latest release from PyPi via pip (recommended):\n\n.. code-block::\n\n    python -m pip install --upgrade lib_cicd_github\n\n- to install the latest version from github via pip:\n\n\n.. code-block::\n\n    python -m pip install --upgrade git+https://github.com/bitranox/lib_cicd_github.git\n\n\n- include it into Your requirements.txt:\n\n.. code-block::\n\n    # Insert following line in Your requirements.txt:\n    # for the latest Release on pypi:\n    lib_cicd_github\n\n    # for the latest development version :\n    lib_cicd_github @ git+https://github.com/bitranox/lib_cicd_github.git\n\n    # to install and upgrade all modules mentioned in requirements.txt:\n    python -m pip install --upgrade -r /<path>/requirements.txt\n\n\n- to install the latest development version from source code:\n\n.. code-block::\n\n    # cd ~\n    $ git clone https://github.com/bitranox/lib_cicd_github.git\n    $ cd lib_cicd_github\n    python setup.py install\n\n- via makefile:\n  makefiles are a very convenient way to install. Here we can do much more,\n  like installing virtual environments, clean caches and so on.\n\n.. code-block:: shell\n\n    # from Your shell's homedirectory:\n    $ git clone https://github.com/bitranox/lib_cicd_github.git\n    $ cd lib_cicd_github\n\n    # to run the tests:\n    $ make test\n\n    # to install the package\n    $ make install\n\n    # to clean the package\n    $ make clean\n\n    # uninstall the package\n    $ make uninstall\n\nRequirements\n------------\nfollowing modules will be automatically installed :\n\n.. code-block:: bash\n\n    ## Project Requirements\n    click\n    cli_exit_tools\n    lib_detect_testenv\n    lib_log_utils\n    rst_include\n\nAcknowledgements\n----------------\n\n- special thanks to \"uncle bob\" Robert C. Martin, especially for his books on \"clean code\" and \"clean architecture\"\n\nContribute\n----------\n\nI would love for you to fork and send me pull request for this project.\n- `please Contribute <https://github.com/bitranox/lib_cicd_github/blob/master/CONTRIBUTING.md>`_\n\nLicense\n-------\n\nThis software is licensed under the `MIT license <http://en.wikipedia.org/wiki/MIT_License>`_\n\n---\n\nChangelog\n=========\n\n- new MAJOR version for incompatible API changes,\n- new MINOR version for added functionality in a backwards compatible manner\n- new PATCH version for backwards compatible bug fixes\n\nv1.0.1.2\n---------\n2022-06-02: update to github actions checkout@v3 and setup-python@v3\n\nv1.0.1\n--------\n2022-03-29: remedy mypy Untyped decorator in cli\n\nv1.0.0\n---------\n2022-03-25:\n - initial pypi release\n - update documentation and tests\n - list ./dist dir if existing\n\nv0.0.1\n---------\n2021-08-23: initial release\n\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bitranox/lib_cicd_github",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lib-cicd-github",
    "package_url": "https://pypi.org/project/lib-cicd-github/",
    "platform": null,
    "project_url": "https://pypi.org/project/lib-cicd-github/",
    "project_urls": {
      "Homepage": "https://github.com/bitranox/lib_cicd_github"
    },
    "release_url": "https://pypi.org/project/lib-cicd-github/1.0.1.2/",
    "requires_dist": [
      "click",
      "cli-exit-tools",
      "lib-detect-testenv",
      "lib-log-utils",
      "rst-include"
    ],
    "requires_python": ">=3.6.0",
    "summary": "CI/CD (Continuous Integration / Continuous Delivery) - utils for github actions",
    "version": "1.0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14011940,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5abebfae163431ddd6ffbf9a571b71c0d41df554b48f4c871fb1ded388535f94",
          "md5": "b21eb9d083d8c3511a85a38066c4c481",
          "sha256": "453334e4da20aca0edc832acb8fe645e751a11a82a2ef495a1253b9da05580fe"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.0-py3.6.egg",
        "has_sig": false,
        "md5_digest": "b21eb9d083d8c3511a85a38066c4c481",
        "packagetype": "bdist_egg",
        "python_version": "1.0.0",
        "requires_python": ">=3.6.0",
        "size": 27901,
        "upload_time": "2022-03-25T13:54:22",
        "upload_time_iso_8601": "2022-03-25T13:54:22.173589Z",
        "url": "https://files.pythonhosted.org/packages/5a/be/bfae163431ddd6ffbf9a571b71c0d41df554b48f4c871fb1ded388535f94/lib_cicd_github-1.0.0-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bc39295c5d30490912f2bd6aca0634de59cd269c08e7550b1ecb18a223cda6a",
          "md5": "6eca8fa524bbe82df46b3b4af66d3054",
          "sha256": "31f8544d27b661719cdbae21f2cf76b7ec9db5ee7bd052a06f1f51ed9d029a41"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6eca8fa524bbe82df46b3b4af66d3054",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 17706,
        "upload_time": "2022-03-25T13:54:19",
        "upload_time_iso_8601": "2022-03-25T13:54:19.946228Z",
        "url": "https://files.pythonhosted.org/packages/7b/c3/9295c5d30490912f2bd6aca0634de59cd269c08e7550b1ecb18a223cda6a/lib_cicd_github-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dd85ec46c8bd6b8d7824274d3673663261e93f6acb513df11ccdd0b501a740f",
          "md5": "f19bad0ffee0163637c511f7983b85e2",
          "sha256": "073920be4f5d83e1ea21abbebffa88006426edfd10d15aacce6b6820a5bc571f"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f19bad0ffee0163637c511f7983b85e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 23531,
        "upload_time": "2022-03-25T13:54:23",
        "upload_time_iso_8601": "2022-03-25T13:54:23.861066Z",
        "url": "https://files.pythonhosted.org/packages/2d/d8/5ec46c8bd6b8d7824274d3673663261e93f6acb513df11ccdd0b501a740f/lib_cicd_github-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a624c7d1fae4f572620ac05cb98250309f62d9081361a52c592025dd45c4ea1e",
          "md5": "f0d964d54c8d318321d067308eca61dd",
          "sha256": "3f1fc4af903b17ee40ad9e6079f01f507fe2990e89bf13a769543c3a15241c25"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1-py3.10.egg",
        "has_sig": false,
        "md5_digest": "f0d964d54c8d318321d067308eca61dd",
        "packagetype": "bdist_egg",
        "python_version": "1.0.1",
        "requires_python": ">=3.6.0",
        "size": 28215,
        "upload_time": "2022-03-29T14:31:12",
        "upload_time_iso_8601": "2022-03-29T14:31:12.012001Z",
        "url": "https://files.pythonhosted.org/packages/a6/24/c7d1fae4f572620ac05cb98250309f62d9081361a52c592025dd45c4ea1e/lib_cicd_github-1.0.1-py3.10.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "439deefda2dfacf04c9115a266d1ec6676b4b5dea5f354bc01f3a925c36908ae",
          "md5": "d6841466299d0482e4514cd7fe3918c0",
          "sha256": "7642169e96acd9e5f87e097acdb2f1f505df6c7907ba860e560d0389975b6f6e"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1-py3.6.egg",
        "has_sig": false,
        "md5_digest": "d6841466299d0482e4514cd7fe3918c0",
        "packagetype": "bdist_egg",
        "python_version": "1.0.1",
        "requires_python": ">=3.6.0",
        "size": 27932,
        "upload_time": "2022-03-29T14:30:58",
        "upload_time_iso_8601": "2022-03-29T14:30:58.737943Z",
        "url": "https://files.pythonhosted.org/packages/43/9d/eefda2dfacf04c9115a266d1ec6676b4b5dea5f354bc01f3a925c36908ae/lib_cicd_github-1.0.1-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e80c68f5a69ff7a6255a798e1e7a6ef012431e1bec27e1b596e42d2a3eef690",
          "md5": "8d1570771688d24bbe3ec68ca3ace841",
          "sha256": "5074d108f0d86dda415fc29ab0a0b2a51af09b2770711bf5bb615ed285a597ad"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1-py3.7.egg",
        "has_sig": false,
        "md5_digest": "8d1570771688d24bbe3ec68ca3ace841",
        "packagetype": "bdist_egg",
        "python_version": "1.0.1",
        "requires_python": ">=3.6.0",
        "size": 27964,
        "upload_time": "2022-03-29T14:31:04",
        "upload_time_iso_8601": "2022-03-29T14:31:04.213278Z",
        "url": "https://files.pythonhosted.org/packages/1e/80/c68f5a69ff7a6255a798e1e7a6ef012431e1bec27e1b596e42d2a3eef690/lib_cicd_github-1.0.1-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e25776c7c3f9ea38f94bde73d18e7ed7437278f19f7695ee371a969c9cf6442b",
          "md5": "838f9958e325dade1a49ccbfac3566a5",
          "sha256": "7cc632608269d161d97894c6ec233ed9b7d5ba2dc7c1459114155c29c4a7787b"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1-py3.8.egg",
        "has_sig": false,
        "md5_digest": "838f9958e325dade1a49ccbfac3566a5",
        "packagetype": "bdist_egg",
        "python_version": "1.0.1",
        "requires_python": ">=3.6.0",
        "size": 28038,
        "upload_time": "2022-03-29T14:31:03",
        "upload_time_iso_8601": "2022-03-29T14:31:03.403780Z",
        "url": "https://files.pythonhosted.org/packages/e2/57/76c7c3f9ea38f94bde73d18e7ed7437278f19f7695ee371a969c9cf6442b/lib_cicd_github-1.0.1-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90636e51f570831be4b99e90de9bfa928bd1b4295bf8458c142f4fc392f3eb2b",
          "md5": "8130084869fb1e4f4f888fc40ddcfa39",
          "sha256": "509f0380cb55393b1a9bb2d24170c6b3d22343c9f59d80d502e45307a47f8b81"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1-py3.9.egg",
        "has_sig": false,
        "md5_digest": "8130084869fb1e4f4f888fc40ddcfa39",
        "packagetype": "bdist_egg",
        "python_version": "1.0.1",
        "requires_python": ">=3.6.0",
        "size": 28065,
        "upload_time": "2022-03-29T14:31:10",
        "upload_time_iso_8601": "2022-03-29T14:31:10.734197Z",
        "url": "https://files.pythonhosted.org/packages/90/63/6e51f570831be4b99e90de9bfa928bd1b4295bf8458c142f4fc392f3eb2b/lib_cicd_github-1.0.1-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b22b711e639b8e94178d5279660a076b855131afedcce95408c232e622a4000",
          "md5": "b4cf0f8d83c4b6ac6d9f0ce7aad826c0",
          "sha256": "7cf40098e61c02beba0b33d7575a430faeba52dcdcaf2616837e2fd40300a5af"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4cf0f8d83c4b6ac6d9f0ce7aad826c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 17742,
        "upload_time": "2022-03-29T14:30:56",
        "upload_time_iso_8601": "2022-03-29T14:30:56.742880Z",
        "url": "https://files.pythonhosted.org/packages/5b/22/b711e639b8e94178d5279660a076b855131afedcce95408c232e622a4000/lib_cicd_github-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90bc791c1c661546d58cc685c9c3dc0cd72cf0feba052f707629534b6aba247a",
          "md5": "3a382d05b4a63c1c6b191587c154dfb4",
          "sha256": "cd7af5ea915a5ac111527827549aaee4d3d449217654d8ff5e5aaf6a88af9651"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3a382d05b4a63c1c6b191587c154dfb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 23610,
        "upload_time": "2022-03-29T14:31:00",
        "upload_time_iso_8601": "2022-03-29T14:31:00.263726Z",
        "url": "https://files.pythonhosted.org/packages/90/bc/791c1c661546d58cc685c9c3dc0cd72cf0feba052f707629534b6aba247a/lib_cicd_github-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89e6707ca035d9058a3d083e176ce991e8c4392b4666e614c93c73a0e99ff836",
          "md5": "ed3d282fa31e37cd64a58b2973228c59",
          "sha256": "57c5eb4df739bdb13574359aa45d6668a6759afac1edce6a7b48b9f6d63c5224"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1.2-py3.10.egg",
        "has_sig": false,
        "md5_digest": "ed3d282fa31e37cd64a58b2973228c59",
        "packagetype": "bdist_egg",
        "python_version": "1.0.1.2",
        "requires_python": ">=3.6.0",
        "size": 28212,
        "upload_time": "2022-06-02T12:23:44",
        "upload_time_iso_8601": "2022-06-02T12:23:44.215912Z",
        "url": "https://files.pythonhosted.org/packages/89/e6/707ca035d9058a3d083e176ce991e8c4392b4666e614c93c73a0e99ff836/lib_cicd_github-1.0.1.2-py3.10.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c513cc265b2198d000457bb435a66fd66ad47e7daf16d866d693dddf9e97e4f",
          "md5": "27207ee0803e1a591573bd03ee35e336",
          "sha256": "31892903d292e1d92bb8dadf7ec676c7bed295461d590d57f75c19751b66ad35"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1.2-py3.6.egg",
        "has_sig": false,
        "md5_digest": "27207ee0803e1a591573bd03ee35e336",
        "packagetype": "bdist_egg",
        "python_version": "1.0.1.2",
        "requires_python": ">=3.6.0",
        "size": 27964,
        "upload_time": "2022-06-02T12:23:22",
        "upload_time_iso_8601": "2022-06-02T12:23:22.992480Z",
        "url": "https://files.pythonhosted.org/packages/0c/51/3cc265b2198d000457bb435a66fd66ad47e7daf16d866d693dddf9e97e4f/lib_cicd_github-1.0.1.2-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d811e83d271aecc97dac6405a7222865d529842fc235d0e5ceb3d9b2025b3f02",
          "md5": "b533302ade8b8b66faea478b2c89ccd3",
          "sha256": "1850e34bb799dd52729f789ff486062a935e03ca04137a1c1742cf1d9e10e1a4"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1.2-py3.7.egg",
        "has_sig": false,
        "md5_digest": "b533302ade8b8b66faea478b2c89ccd3",
        "packagetype": "bdist_egg",
        "python_version": "1.0.1.2",
        "requires_python": ">=3.6.0",
        "size": 27974,
        "upload_time": "2022-06-02T12:23:46",
        "upload_time_iso_8601": "2022-06-02T12:23:46.428594Z",
        "url": "https://files.pythonhosted.org/packages/d8/11/e83d271aecc97dac6405a7222865d529842fc235d0e5ceb3d9b2025b3f02/lib_cicd_github-1.0.1.2-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4721d884b3b9269095620278cac28a33958b299ba684db862cbaaa5be2f3ef35",
          "md5": "378429b6054d20f6f4312791017ddb2a",
          "sha256": "670bb2174fe527ce02d4b0e6089fcc0d8734a29ec7d801f0d38757c43bf80cd4"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1.2-py3.8.egg",
        "has_sig": false,
        "md5_digest": "378429b6054d20f6f4312791017ddb2a",
        "packagetype": "bdist_egg",
        "python_version": "1.0.1.2",
        "requires_python": ">=3.6.0",
        "size": 28048,
        "upload_time": "2022-06-02T12:23:28",
        "upload_time_iso_8601": "2022-06-02T12:23:28.146991Z",
        "url": "https://files.pythonhosted.org/packages/47/21/d884b3b9269095620278cac28a33958b299ba684db862cbaaa5be2f3ef35/lib_cicd_github-1.0.1.2-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "318328a7f92cf4fd0ac6a07c14c4649ef894b8ef9167c6be9803897257ce6ee2",
          "md5": "30faee1c464b4c5ae14207324523b04e",
          "sha256": "a6d4c8ad6052b31411e4996f013893ecdf5a6ae99c22bc6c30b439dce8f9f85b"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1.2-py3.9.egg",
        "has_sig": false,
        "md5_digest": "30faee1c464b4c5ae14207324523b04e",
        "packagetype": "bdist_egg",
        "python_version": "1.0.1.2",
        "requires_python": ">=3.6.0",
        "size": 28078,
        "upload_time": "2022-06-02T12:23:29",
        "upload_time_iso_8601": "2022-06-02T12:23:29.882068Z",
        "url": "https://files.pythonhosted.org/packages/31/83/28a7f92cf4fd0ac6a07c14c4649ef894b8ef9167c6be9803897257ce6ee2/lib_cicd_github-1.0.1.2-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af046dd34a97c551aaa02da92291946ea024751ecee8656b61c0f7287acdb31b",
          "md5": "925b1292a506ad6df302feb56f57e724",
          "sha256": "3dea57e593de4c03548e3b86a93fcb9ede5b1f8db08e2782183c9e501183eeda"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "925b1292a506ad6df302feb56f57e724",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 17788,
        "upload_time": "2022-06-02T12:23:21",
        "upload_time_iso_8601": "2022-06-02T12:23:21.081455Z",
        "url": "https://files.pythonhosted.org/packages/af/04/6dd34a97c551aaa02da92291946ea024751ecee8656b61c0f7287acdb31b/lib_cicd_github-1.0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57b3a6b4002cf4d875eea95b1ada99c039b2c6ad68e63bfdf9d77132cfb3da9f",
          "md5": "8534976609e104c2e24aa241793e3842",
          "sha256": "f0507181f5ae1d11d843930545a814e8ad388711d32a9d8025212ff21b51724c"
        },
        "downloads": -1,
        "filename": "lib_cicd_github-1.0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8534976609e104c2e24aa241793e3842",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 28656,
        "upload_time": "2022-06-02T12:23:24",
        "upload_time_iso_8601": "2022-06-02T12:23:24.913979Z",
        "url": "https://files.pythonhosted.org/packages/57/b3/a6b4002cf4d875eea95b1ada99c039b2c6ad68e63bfdf9d77132cfb3da9f/lib_cicd_github-1.0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89e6707ca035d9058a3d083e176ce991e8c4392b4666e614c93c73a0e99ff836",
        "md5": "ed3d282fa31e37cd64a58b2973228c59",
        "sha256": "57c5eb4df739bdb13574359aa45d6668a6759afac1edce6a7b48b9f6d63c5224"
      },
      "downloads": -1,
      "filename": "lib_cicd_github-1.0.1.2-py3.10.egg",
      "has_sig": false,
      "md5_digest": "ed3d282fa31e37cd64a58b2973228c59",
      "packagetype": "bdist_egg",
      "python_version": "1.0.1.2",
      "requires_python": ">=3.6.0",
      "size": 28212,
      "upload_time": "2022-06-02T12:23:44",
      "upload_time_iso_8601": "2022-06-02T12:23:44.215912Z",
      "url": "https://files.pythonhosted.org/packages/89/e6/707ca035d9058a3d083e176ce991e8c4392b4666e614c93c73a0e99ff836/lib_cicd_github-1.0.1.2-py3.10.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c513cc265b2198d000457bb435a66fd66ad47e7daf16d866d693dddf9e97e4f",
        "md5": "27207ee0803e1a591573bd03ee35e336",
        "sha256": "31892903d292e1d92bb8dadf7ec676c7bed295461d590d57f75c19751b66ad35"
      },
      "downloads": -1,
      "filename": "lib_cicd_github-1.0.1.2-py3.6.egg",
      "has_sig": false,
      "md5_digest": "27207ee0803e1a591573bd03ee35e336",
      "packagetype": "bdist_egg",
      "python_version": "1.0.1.2",
      "requires_python": ">=3.6.0",
      "size": 27964,
      "upload_time": "2022-06-02T12:23:22",
      "upload_time_iso_8601": "2022-06-02T12:23:22.992480Z",
      "url": "https://files.pythonhosted.org/packages/0c/51/3cc265b2198d000457bb435a66fd66ad47e7daf16d866d693dddf9e97e4f/lib_cicd_github-1.0.1.2-py3.6.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d811e83d271aecc97dac6405a7222865d529842fc235d0e5ceb3d9b2025b3f02",
        "md5": "b533302ade8b8b66faea478b2c89ccd3",
        "sha256": "1850e34bb799dd52729f789ff486062a935e03ca04137a1c1742cf1d9e10e1a4"
      },
      "downloads": -1,
      "filename": "lib_cicd_github-1.0.1.2-py3.7.egg",
      "has_sig": false,
      "md5_digest": "b533302ade8b8b66faea478b2c89ccd3",
      "packagetype": "bdist_egg",
      "python_version": "1.0.1.2",
      "requires_python": ">=3.6.0",
      "size": 27974,
      "upload_time": "2022-06-02T12:23:46",
      "upload_time_iso_8601": "2022-06-02T12:23:46.428594Z",
      "url": "https://files.pythonhosted.org/packages/d8/11/e83d271aecc97dac6405a7222865d529842fc235d0e5ceb3d9b2025b3f02/lib_cicd_github-1.0.1.2-py3.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4721d884b3b9269095620278cac28a33958b299ba684db862cbaaa5be2f3ef35",
        "md5": "378429b6054d20f6f4312791017ddb2a",
        "sha256": "670bb2174fe527ce02d4b0e6089fcc0d8734a29ec7d801f0d38757c43bf80cd4"
      },
      "downloads": -1,
      "filename": "lib_cicd_github-1.0.1.2-py3.8.egg",
      "has_sig": false,
      "md5_digest": "378429b6054d20f6f4312791017ddb2a",
      "packagetype": "bdist_egg",
      "python_version": "1.0.1.2",
      "requires_python": ">=3.6.0",
      "size": 28048,
      "upload_time": "2022-06-02T12:23:28",
      "upload_time_iso_8601": "2022-06-02T12:23:28.146991Z",
      "url": "https://files.pythonhosted.org/packages/47/21/d884b3b9269095620278cac28a33958b299ba684db862cbaaa5be2f3ef35/lib_cicd_github-1.0.1.2-py3.8.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "318328a7f92cf4fd0ac6a07c14c4649ef894b8ef9167c6be9803897257ce6ee2",
        "md5": "30faee1c464b4c5ae14207324523b04e",
        "sha256": "a6d4c8ad6052b31411e4996f013893ecdf5a6ae99c22bc6c30b439dce8f9f85b"
      },
      "downloads": -1,
      "filename": "lib_cicd_github-1.0.1.2-py3.9.egg",
      "has_sig": false,
      "md5_digest": "30faee1c464b4c5ae14207324523b04e",
      "packagetype": "bdist_egg",
      "python_version": "1.0.1.2",
      "requires_python": ">=3.6.0",
      "size": 28078,
      "upload_time": "2022-06-02T12:23:29",
      "upload_time_iso_8601": "2022-06-02T12:23:29.882068Z",
      "url": "https://files.pythonhosted.org/packages/31/83/28a7f92cf4fd0ac6a07c14c4649ef894b8ef9167c6be9803897257ce6ee2/lib_cicd_github-1.0.1.2-py3.9.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af046dd34a97c551aaa02da92291946ea024751ecee8656b61c0f7287acdb31b",
        "md5": "925b1292a506ad6df302feb56f57e724",
        "sha256": "3dea57e593de4c03548e3b86a93fcb9ede5b1f8db08e2782183c9e501183eeda"
      },
      "downloads": -1,
      "filename": "lib_cicd_github-1.0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "925b1292a506ad6df302feb56f57e724",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 17788,
      "upload_time": "2022-06-02T12:23:21",
      "upload_time_iso_8601": "2022-06-02T12:23:21.081455Z",
      "url": "https://files.pythonhosted.org/packages/af/04/6dd34a97c551aaa02da92291946ea024751ecee8656b61c0f7287acdb31b/lib_cicd_github-1.0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "57b3a6b4002cf4d875eea95b1ada99c039b2c6ad68e63bfdf9d77132cfb3da9f",
        "md5": "8534976609e104c2e24aa241793e3842",
        "sha256": "f0507181f5ae1d11d843930545a814e8ad388711d32a9d8025212ff21b51724c"
      },
      "downloads": -1,
      "filename": "lib_cicd_github-1.0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8534976609e104c2e24aa241793e3842",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 28656,
      "upload_time": "2022-06-02T12:23:24",
      "upload_time_iso_8601": "2022-06-02T12:23:24.913979Z",
      "url": "https://files.pythonhosted.org/packages/57/b3/a6b4002cf4d875eea95b1ada99c039b2c6ad68e63bfdf9d77132cfb3da9f/lib_cicd_github-1.0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}