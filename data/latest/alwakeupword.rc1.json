{
  "info": {
    "author": "Alankar Singh",
    "author_email": "alankarartist@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# alwakeupword\nalwakeupword explicitly request the attention of a computer using a wake up word and also allows user to train model of their own wake up word.\n\n\n## Installation\nYou can install alwakeupword from [PyPI](https://pypi.org/project/alwakeupword/):\n```pip install alwakeupword```.\n\nThe alwakeupword supports Python 3.6 and above.\n\n\n## Usage\n\n### Step 1: ```AlWakeUpWordDataPreparation.py```\nFollowing query on command line will help you to create a dataset for your own wake up word:\n#### For recording wake up word\n```\nalwakeupword -c makeData -r recordAudio -rad \"./audio\" -n 200\n```\nNote: Here, -rad and -n are set to default values of ./audio in alwakeupword package path and 200 respectively.\n#### For recording background audio\n```\nalwakeupword -c makeData -r recordBackgroundAudio -rbad \"./backgroundAudio\" -n 200\n```\nNote: Here, -rbad and -n are set to default values of ./backgroundAudio in alwakeupword package path and 200 respectively.\n\n### Step 2: ```AlWakeUpWordDataPreprocessing.py```\nFollowing query on command line will help you to preprocess the dataset you have created:\n```\nalwakeupword -c processData -rad \"./audio\" -rbad \"./backgroundAudio\"\n```\nNote: Here, -rad and -rbad are set to default values of ./audio and ./backgroundAudio in alwakeupword package path respectively.\n\n### Step 3: ```AlWakeUpWordTrainer.py```\nFollowing query on command line will help you to train the preprocess data and to create a model:\n```\nalwakeupword -c trainData -mp \"./savedModel/model.h5\"\n```\nNote: Here, -mp is set to default value of ./savedModel/model.h5 in alwakeupword package path.\n\n### Step 4: ```AlWakeUpWordPrediction.py```\nFollowing query on command line will help you to predict the accuracy of model and to detect if word is wake up word or not:\n```\nalwakeupword -c predictWord -mp \"./savedModel/model.h5\"\n```\nNote: Here, -mp is set to default value of ./savedModel/model.h5 in alwakeupword package path.\n\n### Step 5: ```AlWakeUpWord.py```\nFollowing example.py will show you how to use wakeUpWord() function from AlWakeUpWord.py file to your scripts:\n```\n\"\"\"\n# example.py\nfrom alwakeupword.AlWakeUpWord import wakeUpWord\n\nmodelPath = '{Path of your wake up  word model}'\nwhile True:\n    wakeUpWord(modelPath)\n    print('Wake up word detected')\n\"\"\"\n\"\"\"\nOutput: When you run the file it will wait for your response. When you utter the wake up word then only 'Wake up word detected' will be printed in the console. \n\"\"\"\n```\nNote: Here, if you saved your model in the default path while training data then you don't have to give modelPath parameter to wakeUpWord() function as it is already set to default path.\n\n\n## License\n&copy; 2022 Alankar Singh\n\nThis repository is licensed under the MIT license. See LICENSE for details.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alankarartist/alwakeupword",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alwakeupword",
    "package_url": "https://pypi.org/project/alwakeupword/",
    "platform": "",
    "project_url": "https://pypi.org/project/alwakeupword/",
    "project_urls": {
      "Homepage": "https://github.com/alankarartist/alwakeupword"
    },
    "release_url": "https://pypi.org/project/alwakeupword/1.0.0/",
    "requires_dist": [
      "librosa (==0.8.1)",
      "numpy (==1.19.5)",
      "pandas (==1.3.2)",
      "scikit-learn (==1.0.2)",
      "scipy (==1.7.3)",
      "sounddevice (==0.4.4)",
      "tensorflow (==2.6.0)"
    ],
    "requires_python": "",
    "summary": "alwakeupword explicitly request the attention of a computer using a wake up word and also allows user to make dataset and train a model of their own wake up word.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12458514,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c685c98bdc5875b5259df000e7465accfeea59220ef7dc2e5dccaac309adcd8a",
          "md5": "7a8f53cc2aea81f711d1c88f226e8731",
          "sha256": "cf16124f3fb2018b58696339d81d5cc9caaaf177dcf6ae8735adf7113b8fdf1f"
        },
        "downloads": -1,
        "filename": "alwakeupword-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a8f53cc2aea81f711d1c88f226e8731",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44627938,
        "upload_time": "2022-01-02T14:28:24",
        "upload_time_iso_8601": "2022-01-02T14:28:24.530148Z",
        "url": "https://files.pythonhosted.org/packages/c6/85/c98bdc5875b5259df000e7465accfeea59220ef7dc2e5dccaac309adcd8a/alwakeupword-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14f2639fdf292c6fcdb8cb5de7853ab03a23abe7e0689e40728de51996c8fd42",
          "md5": "cbaa7c4c07a68fcbdce29d8ee675bf26",
          "sha256": "c1b03e84a2a9a5230cb3d33abb3e18bf2ef343d3f25f690ac76cf2c39a6142ed"
        },
        "downloads": -1,
        "filename": "alwakeupword-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cbaa7c4c07a68fcbdce29d8ee675bf26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37635364,
        "upload_time": "2022-01-02T14:28:47",
        "upload_time_iso_8601": "2022-01-02T14:28:47.235009Z",
        "url": "https://files.pythonhosted.org/packages/14/f2/639fdf292c6fcdb8cb5de7853ab03a23abe7e0689e40728de51996c8fd42/alwakeupword-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c685c98bdc5875b5259df000e7465accfeea59220ef7dc2e5dccaac309adcd8a",
        "md5": "7a8f53cc2aea81f711d1c88f226e8731",
        "sha256": "cf16124f3fb2018b58696339d81d5cc9caaaf177dcf6ae8735adf7113b8fdf1f"
      },
      "downloads": -1,
      "filename": "alwakeupword-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7a8f53cc2aea81f711d1c88f226e8731",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 44627938,
      "upload_time": "2022-01-02T14:28:24",
      "upload_time_iso_8601": "2022-01-02T14:28:24.530148Z",
      "url": "https://files.pythonhosted.org/packages/c6/85/c98bdc5875b5259df000e7465accfeea59220ef7dc2e5dccaac309adcd8a/alwakeupword-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "14f2639fdf292c6fcdb8cb5de7853ab03a23abe7e0689e40728de51996c8fd42",
        "md5": "cbaa7c4c07a68fcbdce29d8ee675bf26",
        "sha256": "c1b03e84a2a9a5230cb3d33abb3e18bf2ef343d3f25f690ac76cf2c39a6142ed"
      },
      "downloads": -1,
      "filename": "alwakeupword-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cbaa7c4c07a68fcbdce29d8ee675bf26",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 37635364,
      "upload_time": "2022-01-02T14:28:47",
      "upload_time_iso_8601": "2022-01-02T14:28:47.235009Z",
      "url": "https://files.pythonhosted.org/packages/14/f2/639fdf292c6fcdb8cb5de7853ab03a23abe7e0689e40728de51996c8fd42/alwakeupword-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}