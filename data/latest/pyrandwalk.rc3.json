{
  "info": {
    "author": "Sadra Sabouri",
    "author_email": "sabouri.sadra@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Manufacturing",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Education",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "<div align=\"center\">\n<img src=\"https://github.com/sadrasabouri/pyrandwalk/raw/master/Otherfiles/logo.png\" width=\"300\" height=\"300\" alt=\"pyrandwalk-logo\"><br/>\n<br/>\n<h1>:walking: Python Library for Random Walks</h1>\n\n<a href=\"https://www.python.org/\"><img src=\"https://img.shields.io/badge/built%20with-Python3-green.svg\" alt=\"built with Python3\" /></a>\n<a href=\"https://www.codefactor.io/repository/github/sadrasabouri/pyrandwalk/overview/master\"><img src=\"https://www.codefactor.io/repository/github/sadrasabouri/pyrandwalk/badge/master\" alt=\"CodeFactor\" /></a>\n<a href=\"https://codecov.io/gh/sadrasabouri/pyrandwalk\">\n  <img src=\"https://codecov.io/gh/sadrasabouri/pyrandwalk/branch/master/graph/badge.svg\" />\n</a>\n<a href=\"https://colab.research.google.com/github/sadrasabouri/pyrandwalk/blob/master/Document/Document.ipynb\">\n  <img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Document\"/>\n</a>\n</div>\n\n----------\n## Table of contents\t\t\t\t\t\n   * [Overview](https://github.com/sadrasabouri/pyrandwalk#overview)\n   * [Installation](https://github.com/sadrasabouri/pyrandwalk#installation)\n   * [Usage](https://github.com/sadrasabouri/pyrandwalk#usage)\n   * [Contribution](https://github.com/sadrasabouri/pyrandwalk/blob/master/.github/CONTRIBUTING.md)\n   * [References](https://github.com/sadrasabouri/pyrandwalk#references)\n   * [Authors](https://github.com/sadrasabouri/pyrandwalk/blob/master/AUTHORS.md)\n   * [Changelog](https://github.com/sadrasabouri/pyrandwalk/blob/master/CHANGELOG.md)\n   * [License](https://github.com/sadrasabouri/pyrandwalk/blob/master/LICENSE)\n\n## Overview\n\n<p align=\"justify\">\t\nPyrandwalk is an educational tool for simulating random walks, calculating the probability of given state sequences, etc. Random walk is a representation of the discrete-time, discrete-value Markov chain model used in stochastic processes.\n</p>\n\n\n<table>\n\t<tr>\n\t\t<td align=\"center\">PyPI Counter</td>\n\t\t<td align=\"center\"><a href=\"http://pepy.tech/count/pyrandwalk\"><img src=\"http://pepy.tech/badge/pyrandwalk\"></a></td>\n\t</tr>\n\t<tr>\n\t\t<td align=\"center\">Github Stars</td>\n\t\t<td align=\"center\"><a href=\"https://github.com/sadrasabouri/pyrandwalk\"><img src=\"https://img.shields.io/github/stars/sadrasabouri/pyrandwalk.svg?style=social&label=Stars\"></a></td>\n\t</tr>\n</table>\n\n\n\n<table>\n\t<tr> \n\t\t<td align=\"center\">Branch</td>\n\t\t<td align=\"center\">master</td>\t\n\t\t<td align=\"center\">dev</td>\t\n\t</tr>\n    <tr>\n\t\t<td align=\"center\">CI</td>\n\t\t<td align=\"center\"><img src=\"https://github.com/sadrasabouri/pyrandwalk/workflows/CI/badge.svg?branch=master\"></td>\n\t\t<td align=\"center\"><img src=\"https://github.com/sadrasabouri/pyrandwalk/workflows/CI/badge.svg?branch=dev\"></td>\n\t</tr>\n</table>\n\n\n\n## Installation\n\n### Source code\n- Download [Version 1.1](https://github.com/sadrasabouri/pyrandwalk/archive/v1.1.zip) or [Latest Source ](https://github.com/sadrasabouri/pyrandwalk/archive/dev.zip)\n- Run `pip install -r requirements.txt` or `pip3 install -r requirements.txt` (Need root access)\n- Run `python3 setup.py install` or `python setup.py install` (Need root access)\n\n### PyPI\n\n- Check [Python Packaging User Guide](https://packaging.python.org/installing/)\n- Run `pip install pyrandwalk` or `pip3 install pyrandwalk` (Need root access)\n\n\n## Usage\n\n\n```pycon\n>>> from pyrandwalk import *\n>>> import numpy as np\n>>> states = [0, 1, 2, 3, 4]\n>>> trans = np.array([[1,    0, 0,    0, 0],\n...                   [0.25, 0, 0.75, 0, 0],\n...                   [0, 0.25, 0, 0.75, 0],\n...                   [0, 0, 0.25, 0, 0.75],\n...                   [0, 0,    0, 1,    0]])\n>>> rw = RandomWalk(states, trans)\n```\nWe are simulating random walks on the above graph (weights are probabilities):\n<img src=\"https://github.com/sadrasabouri/pyrandwalk/raw/master/Otherfiles/usage_example.webp\">\n\n\n### Probability of A Sequence\n\nImagine you want to calculate probability which you start from state 2, go to state 1 and stuck in state 0.\nWhat's the probability of these walk sequences?\n```pycon\n>>> rw.prob_sec([2, 1, 0])\n0.0125\n```\n\nInitial probability distribution is assumed to be uniform by default but you can change it by passing optional argument `initial_dist`:\n```pycon\n>>> rw.prob_sec([2, 1, 0], initial_dist=[0, 0, 1, 0, 0])\n0.0625\n```\n\n\n### Run a random walk\n\nYou can start a random walk on given markov chain and see the result:\n\n```pycon\n>>> states, probs = rw.run()\n>>> states\n[4, 3, 4, 3, 4, 3, 4, 3, 2, 3, 4]\n>>> probs\n[0.2, 1.0, 0.75, 1.0, 0.75, 1.0, 0.75, 1.0, 0.25, 0.75, 0.75]\n```\n\nBy default your random walk will contain 10 steps, but you can change it by passing optional argument `ntimes`:\n\n```pycon\n>>> states, probs = rw.run(ntimes=20)\n>>> states\n[3, 4, 3, 4, 3, 2, 1, 2, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 2, 3]\n>>> probs\n[0.2, 0.75, 1.0, 0.75, 1.0, 0.25, 0.25, 0.75, 0.75, 0.75, 1.0, 0.75, 1.0, 0.75, 1.0, 0.75, 1.0, 0.75, 1.0, 0.25, 0.75]\n```\n\nAnd if you want to see what's going on down there during the simulation you can set the `show` flag:\n\n```pycon\n>>> states, probs = rw.run(ntimes=30, show=True)\n1 --> 2  (p = 0.750)\n2 --> 3  (p = 0.750)\n3 --> 4  (p = 0.750)\n4 --> 3  (p = 1.000)\n3 --> 4  (p = 0.750)\n4 --> 3  (p = 1.000)\n3 --> 4  (p = 0.750)\n4 --> 3  (p = 1.000)\n3 --> 4  (p = 0.750)\n4 --> 3  (p = 1.000)\n3 --> 4  (p = 0.750)\n4 --> 3  (p = 1.000)\n3 --> 4  (p = 0.750)\n4 --> 3  (p = 1.000)\n3 --> 2  (p = 0.250)\n2 --> 1  (p = 0.250)\n1 --> 2  (p = 0.750)\n2 --> 3  (p = 0.750)\n3 --> 4  (p = 0.750)\n4 --> 3  (p = 1.000)\n3 --> 4  (p = 0.750)\n4 --> 3  (p = 1.000)\n3 --> 4  (p = 0.750)\n4 --> 3  (p = 1.000)\n3 --> 4  (p = 0.750)\n4 --> 3  (p = 1.000)\n3 --> 4  (p = 0.750)\n4 --> 3  (p = 1.000)\n3 --> 2  (p = 0.250)\n2 --> 3  (p = 0.750)\n>>> states\n[1, 2, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 2, 1, 2, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 2, 3]\n>>> probs\n[0.2, 0.75, 0.75, 0.75, 1.0, 0.75, 1.0, 0.75, 1.0, 0.75, 1.0, 0.75, 1.0, 0.75, 1.0, 0.25, 0.25, 0.75, 0.75, 0.75, 1.0, 0.75, 1.0, 0.75, 1.0, 0.75, 1.0, 0.75, 1.0, 0.25, 0.75]\n```\n\n\n### Final Probability Distribution\n\nYou can easily find out the final probability distribution of you random walk by:\n```pycon\n>>> rw.final_dist()\narray([1., 0., 0., 0., 0.])\n```\nWhich implies that the walk will in state `0` for sure as time goes on.\n\n### Is it irreducible?\n\nYou can check if your Markov chain is irreducible to lower rank ones or not by:\n\n```pycon\n>>> rw.is_irreducible()\nFalse\n```\n\n\n### nth transition matrix\n\nIf you want to see what's the probability of moving from state `i` to `j` with `n` steps, you can easily calculate the nth transition matrix by:\n```pycon\n>>> rw.trans_power(2)\narray([[1.    , 0.    , 0.    , 0.    , 0.    ],\n       [0.25  , 0.1875, 0.    , 0.5625, 0.    ],\n       [0.0625, 0.    , 0.375 , 0.    , 0.5625],\n       [0.    , 0.0625, 0.    , 0.9375, 0.    ],\n       [0.    , 0.    , 0.25  , 0.    , 0.75  ]])\n```\n\n\n### Graph edges\n\nYou can have your final graph edges in a list containing tuples like `(from, to, probability)` for each edge by:\n\n```pycon\n>>> rw.get_edges()\n[(0, 0, 1.0), (1, 0, 0.25), (1, 2, 0.75), (2, 1, 0.25), (2, 3, 0.75), (3, 2, 0.25), (3, 4, 0.75), (4, 3, 1.0)]\n```\n\n### Graph\n\nMaking a *networkx* graph object from your random walk process is also token care of by this library:\n\n```pycon\n>>> rw_graph = rw.get_graph()\n```\n\n### __Colors of Nodes__ [will be removed]\n\nUntil now we could not show graphs with self-loops using networkx so as far as this feature being added to networkx, we're using `blue` color for ordinary states and `red` color for states with self-loop.\n\n```pycon\n>>> rw.get_colormap()\n['red', 'blue', 'blue', 'blue', 'blue']\n```\n\n\n### Type of Classes\n\nFor knowing which class is recurrent or transient you can use above method, you can also have reduced transition matrix for each set.\n\n```pycon\n>>> rw_class_types = rw.get_typeof_classes()\n>>> rw_class_types['recurrent']\n([0], array([[1.]]))\n>>> rw_class_types['transient'][0]\n[1, 2, 3, 4]\n>>> rw_class_types['transient'][1]\narray([[0.  , 0.75, 0.  , 0.  ],\n       [0.25, 0.  , 0.75, 0.  ],\n       [0.  , 0.25, 0.  , 0.75],\n       [0.  , 0.  , 1.  , 0.  ]])\n\n```\n\n\n### The Best Policy Problems\n\nFor making the best policy problems for your random walk you can easily:\n\n```pycon\n>>> states = [0, 1, 2]\n>>> trans = np.array([[1, 0, 0], [1/2, 0, 1/2], [0, 1, 0]])\n>>> rw = RandomWalk(states, trans, payoff=[0, 1, 4], cost=[1, 0, 2], discount=0.5)\n>>> rw.best_policy()\n{'continue': [], 'stop': [0, 1, 2]}\n```\n\n\n## References\t\t\t\n\n<blockquote>1- Lawler, Gregory F. Introduction to stochastic processes. Chapman and Hall/CRC, 2018.</blockquote>\n<blockquote>2- <a href=\"https://markusfeng.com/projects/graph/\">Markusfeng</a></blockquote>\n<div>Icon made by <a href=\"https://www.flaticon.com/authors/becris\" title=\"Becris\">Becris</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/sadrasabouri/pyrandwalk/tarball/v1.1",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sadrasabouri/pyrandwalk",
    "keywords": "random-walk markov-chain stochastic-processes",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyrandwalk",
    "package_url": "https://pypi.org/project/pyrandwalk/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyrandwalk/",
    "project_urls": {
      "Download": "https://github.com/sadrasabouri/pyrandwalk/tarball/v1.1",
      "Homepage": "https://github.com/sadrasabouri/pyrandwalk",
      "Source": "https://github.com/sadrasabouri/pyrandwalk"
    },
    "release_url": "https://pypi.org/project/pyrandwalk/1.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Python Library for Random Walks",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11265955,
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7f23b29f7cf86f8351071957f25e8f40f63bfa1f9351b5289e0eb319f77df65",
          "md5": "727d618a024f4378bce51ff24c885a42",
          "sha256": "bea46f3833369a71fcc9f8189802a131f19706b84a9525316357f9c813ece3fa"
        },
        "downloads": -1,
        "filename": "pyrandwalk-0.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "727d618a024f4378bce51ff24c885a42",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 9904,
        "upload_time": "2021-05-16T19:26:42",
        "upload_time_iso_8601": "2021-05-16T19:26:42.099904Z",
        "url": "https://files.pythonhosted.org/packages/f7/f2/3b29f7cf86f8351071957f25e8f40f63bfa1f9351b5289e0eb319f77df65/pyrandwalk-0.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff5bdde3887ddc43a675ba042f186f7df1c05ea71a2b98dedd54b4d679181e37",
          "md5": "871a7145b3b71dfd3ba0ad6882d69027",
          "sha256": "13e9ddc9e96be6e1cff297218f242346bd0c304bb7d6746213f74cd53d7152cb"
        },
        "downloads": -1,
        "filename": "pyrandwalk-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "871a7145b3b71dfd3ba0ad6882d69027",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11358,
        "upload_time": "2021-05-16T19:26:40",
        "upload_time_iso_8601": "2021-05-16T19:26:40.581931Z",
        "url": "https://files.pythonhosted.org/packages/ff/5b/dde3887ddc43a675ba042f186f7df1c05ea71a2b98dedd54b4d679181e37/pyrandwalk-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8190121ac6fd91f97c782e583158ee9ed766d22b8903aa063e408c1631ffdcb",
          "md5": "0b03154c340fd55ce36083b797515f8a",
          "sha256": "62b4a59f1876aee7225ac55c1ce1b088192869dc6af94dbb4c0c2f2d4e709882"
        },
        "downloads": -1,
        "filename": "pyrandwalk-1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b03154c340fd55ce36083b797515f8a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 10647,
        "upload_time": "2021-06-09T05:34:33",
        "upload_time_iso_8601": "2021-06-09T05:34:33.930800Z",
        "url": "https://files.pythonhosted.org/packages/f8/19/0121ac6fd91f97c782e583158ee9ed766d22b8903aa063e408c1631ffdcb/pyrandwalk-1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70eb3722038e86baedebec92db185f6bcad8ec39d41c50bd2c89c05bad320dde",
          "md5": "3f4607e443b1fa6aec9bba404fecdec3",
          "sha256": "e4f92ab5df510dab07f97373611c39dbbb04af70b9e582dc1e27d91bb18d60a2"
        },
        "downloads": -1,
        "filename": "pyrandwalk-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3f4607e443b1fa6aec9bba404fecdec3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12387,
        "upload_time": "2021-06-09T05:34:32",
        "upload_time_iso_8601": "2021-06-09T05:34:32.056922Z",
        "url": "https://files.pythonhosted.org/packages/70/eb/3722038e86baedebec92db185f6bcad8ec39d41c50bd2c89c05bad320dde/pyrandwalk-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20206f04a7cfd6c54b51bd36a9f3bdf2faa26fd8a4299ce4c80233986cc1f061",
          "md5": "68f07cad922adc1d1fcc9314a25c7fd6",
          "sha256": "6caa4f9b1bc0222fcf16cf9348a49c63fc56ca476a1f1c59fcb3d00b3c781e39"
        },
        "downloads": -1,
        "filename": "pyrandwalk-1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68f07cad922adc1d1fcc9314a25c7fd6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 10671,
        "upload_time": "2021-08-24T19:58:28",
        "upload_time_iso_8601": "2021-08-24T19:58:28.758278Z",
        "url": "https://files.pythonhosted.org/packages/20/20/6f04a7cfd6c54b51bd36a9f3bdf2faa26fd8a4299ce4c80233986cc1f061/pyrandwalk-1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c40f0a2c63934360c4c577421796f42e37029c4f7e6034c14087d2a0f4bbf9c",
          "md5": "a0c8032642db6fbcee8b4a71d3044214",
          "sha256": "d62cd7f899dad2be078eb5fb339da0780e2dacc3ce030f81dce0b2bbccd94c52"
        },
        "downloads": -1,
        "filename": "pyrandwalk-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a0c8032642db6fbcee8b4a71d3044214",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12416,
        "upload_time": "2021-08-24T19:58:27",
        "upload_time_iso_8601": "2021-08-24T19:58:27.142817Z",
        "url": "https://files.pythonhosted.org/packages/9c/40/f0a2c63934360c4c577421796f42e37029c4f7e6034c14087d2a0f4bbf9c/pyrandwalk-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "20206f04a7cfd6c54b51bd36a9f3bdf2faa26fd8a4299ce4c80233986cc1f061",
        "md5": "68f07cad922adc1d1fcc9314a25c7fd6",
        "sha256": "6caa4f9b1bc0222fcf16cf9348a49c63fc56ca476a1f1c59fcb3d00b3c781e39"
      },
      "downloads": -1,
      "filename": "pyrandwalk-1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "68f07cad922adc1d1fcc9314a25c7fd6",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.5",
      "size": 10671,
      "upload_time": "2021-08-24T19:58:28",
      "upload_time_iso_8601": "2021-08-24T19:58:28.758278Z",
      "url": "https://files.pythonhosted.org/packages/20/20/6f04a7cfd6c54b51bd36a9f3bdf2faa26fd8a4299ce4c80233986cc1f061/pyrandwalk-1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c40f0a2c63934360c4c577421796f42e37029c4f7e6034c14087d2a0f4bbf9c",
        "md5": "a0c8032642db6fbcee8b4a71d3044214",
        "sha256": "d62cd7f899dad2be078eb5fb339da0780e2dacc3ce030f81dce0b2bbccd94c52"
      },
      "downloads": -1,
      "filename": "pyrandwalk-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a0c8032642db6fbcee8b4a71d3044214",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 12416,
      "upload_time": "2021-08-24T19:58:27",
      "upload_time_iso_8601": "2021-08-24T19:58:27.142817Z",
      "url": "https://files.pythonhosted.org/packages/9c/40/f0a2c63934360c4c577421796f42e37029c4f7e6034c14087d2a0f4bbf9c/pyrandwalk-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}