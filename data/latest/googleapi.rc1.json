{
  "info": {
    "author": "Zeyu Yang",
    "author_email": "zy2327@columbia.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Google API\n\nThis is a python package that handles all the work with Google services, including Google Drive, Google Sheet, and Gmail. It is a high-level interface of the [Google API](https://developers.google.com/apis-explorer). The downside of using the official Google API directly is that its documentation is written in Python 2.x, making it hard to follow.\n\nTo use the google API, the first step is to get the 'credentials.json'. The most easiest way would be visiting the [Google Drive API Quickstart](https://developers.google.com/drive/api/v3/quickstart/go) and click the `Enable the Drive API` button in the \"Step 1: Turn on the Drive API\" section. Then voliÃ¡, there you go! No need to deal with the project, service account, etc.\n\nThis package utilize [Drive API v3](https://developers.google.com/drive/api/v3/reference), [Google Sheets API v4](https://developers.google.com/sheets/api/reference/rest), [Gmail API v1](https://developers.google.com/gmail/api/v1/reference/).\n\n\n## Installation\n\n`pip install googleAPI`\n\n## Dependencies\n\n- google-api-python-client\n- google-auth-httplib2\n- google-auth-oauthlib\n\n## Documentation\n\n### Credential\n\nCredential is needed for every API. Thus, `GoogleCredential()` is the base class of all the other classes.\n\n_Note: Unless you want to write customized functions, you could skip this section._\n\nSuppose we want to get Google Drive credential with all scopes to write customized functions.\n\n``` python\n# Step 1: import the module\nfrom googleAPI.credential import *\n\n# Step 2: Instance `GoogleCredential()` class\ngc = GoogleCredential()\n\n# Step 3: Get credential\n# `credential_path` is the place where 'credentials.json' is stored.\n# There will be a prompt web page that will download the 'token.pickle'\n# into `credential_path`.\ncreds = gc.credential(credential_path='',\n                      credential_scopes=['https://www.googleapis.com/auth/drive'])\n```\n\nThe argument `credential_scopes` is required. For all the scopes you can choose, visit [OAuth 2.0 Scopes for Google APIs](https://developers.google.com/identity/protocols/oauth2/scopes).\n\n\n### GoogleDrive\n\nGoogle Drive is a cloud storage where you store the files and folder. `GoogleDrive()` enable you to search for file ID, get file metadata, download files, etc.\n\nSuppose we want to download a .csv file from the Google Drive.\n\n``` python\n# Step 1: import the module\nfrom googleAPI.drive import *\n\n# Step 2: Instance `GoogleDrive` class with credential\n# If this is the first time you use this package, `credential_path` is \n# the place where 'credentials.json' is stored. There will be a prompt\n# web page that will download the 'GoogleDrive_token.pickle' into `credential_path`.\n# If you already have 'GoogleDrive_token.pickle' file, `credential_path` \n# is the place where it is stored.\n# If you already have the credential in the run time, use `creds` argument.\ngd = GoogleDrive(credential_path='')\n\n# Step 3: Search the file ID in Google Drive\n# Use the file name to locate the file ID. File ID is the unique identifier\n# that Google API uses.\n# You can also find the file ID inside the link if you open the file in a\n# web page. The ID is the characters after `/d/{ID}`.\nfile_id = gd.search_file('test.csv')\n\n# Step 4: Download the file\n# If you want to download the file into run time as a file pointer, leave the\n# `save_as` argument blank.\n# If you want to download it as a file, specify the `save_as` argument.\ngd.download_file(file_id['test.csv'][0], save_as='test.csv')\n```\n\n### GoogleSheet\n\nSuppose we want to download a GoogleSheet named `Google Sheet 1` as an Microsoft Excel file `Google Sheet 1.xlsx`.\n\n``` python\n# Step 1: import the module\nfrom googleAPI.sheet import *\n\n# Step 2: Instance `GoogleSheet` class with credential\ngs = GoogleSheet(credential_path='')\n\n# Step 3: Find the Google Sheet ID using spreadsheet name\n# The result of the `GoogleSheet.search_spreadsheet()` is\n# saved in a list inside a dictionary in line with the\n# `GoogleDrive.search_files()`\nspreadsheet_id = gs.search_spreadsheet(\"Google Sheet 1\")[\n            \"Google Sheet 1\"\n        ][0]\n\n# Step 4: Download the Google Sheet\ngs.download_spreadsheet(spreadsheet_id, \n                        save_as=\"Google Sheet 1.xlsx\")\n```\n\nSuppose we already have the spreadsheet ID and we just want to get the values\nfrom a particular sheet `Sheet1`.\n``` python\nvalues = gs.get_values(spreadsheet_id, range_=\"'Sheet1'\")\n```\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zy2327/googleAPI",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "googleAPI",
    "package_url": "https://pypi.org/project/googleAPI/",
    "platform": "",
    "project_url": "https://pypi.org/project/googleAPI/",
    "project_urls": {
      "Homepage": "https://github.com/zy2327/googleAPI"
    },
    "release_url": "https://pypi.org/project/googleAPI/0.1.0/",
    "requires_dist": [
      "google (>=2.0.3)",
      "google-api-core (>=1.20.0)",
      "google-api-python-client (>=1.9.3)",
      "google-auth (>=1.17.0)",
      "google-auth-httplib2 (>=0.0.3)",
      "google-auth-oauthlib (>=0.4.1)",
      "google-pasta (>=0.1.8)",
      "googleapis-common-protos (>=1.52.0)",
      "oauth2client (>=4.1.3)",
      "oauthlib (>=3.0.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "A high-level python interface to Google APIs",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7983512,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68abef1bb7e744c17295e1c8c590507e0ec1fe3d9c572a1c0deacee93a0b05dd",
          "md5": "2a4db6823e951844e1e9f1ad49f506aa",
          "sha256": "483883b19c277a115cc22ce2fa31f349dbd7c8f26482de3e564be3d83937a9e3"
        },
        "downloads": -1,
        "filename": "googleAPI-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a4db6823e951844e1e9f1ad49f506aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15122,
        "upload_time": "2020-08-17T22:30:48",
        "upload_time_iso_8601": "2020-08-17T22:30:48.538454Z",
        "url": "https://files.pythonhosted.org/packages/68/ab/ef1bb7e744c17295e1c8c590507e0ec1fe3d9c572a1c0deacee93a0b05dd/googleAPI-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8f4b6fd50a5bae8bbe7aae9e0f8d488dc6ae5d70cd9c0ec4305b591d05db616",
          "md5": "2dc7994a4af6564be9dcdd206fdd36ef",
          "sha256": "93c6b195b15890f3bd1c88da3049247d47527c76196f38041fb99531977c87e5"
        },
        "downloads": -1,
        "filename": "googleAPI-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2dc7994a4af6564be9dcdd206fdd36ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29473,
        "upload_time": "2020-08-17T22:30:51",
        "upload_time_iso_8601": "2020-08-17T22:30:51.106938Z",
        "url": "https://files.pythonhosted.org/packages/d8/f4/b6fd50a5bae8bbe7aae9e0f8d488dc6ae5d70cd9c0ec4305b591d05db616/googleAPI-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "68abef1bb7e744c17295e1c8c590507e0ec1fe3d9c572a1c0deacee93a0b05dd",
        "md5": "2a4db6823e951844e1e9f1ad49f506aa",
        "sha256": "483883b19c277a115cc22ce2fa31f349dbd7c8f26482de3e564be3d83937a9e3"
      },
      "downloads": -1,
      "filename": "googleAPI-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2a4db6823e951844e1e9f1ad49f506aa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15122,
      "upload_time": "2020-08-17T22:30:48",
      "upload_time_iso_8601": "2020-08-17T22:30:48.538454Z",
      "url": "https://files.pythonhosted.org/packages/68/ab/ef1bb7e744c17295e1c8c590507e0ec1fe3d9c572a1c0deacee93a0b05dd/googleAPI-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d8f4b6fd50a5bae8bbe7aae9e0f8d488dc6ae5d70cd9c0ec4305b591d05db616",
        "md5": "2dc7994a4af6564be9dcdd206fdd36ef",
        "sha256": "93c6b195b15890f3bd1c88da3049247d47527c76196f38041fb99531977c87e5"
      },
      "downloads": -1,
      "filename": "googleAPI-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2dc7994a4af6564be9dcdd206fdd36ef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 29473,
      "upload_time": "2020-08-17T22:30:51",
      "upload_time_iso_8601": "2020-08-17T22:30:51.106938Z",
      "url": "https://files.pythonhosted.org/packages/d8/f4/b6fd50a5bae8bbe7aae9e0f8d488dc6ae5d70cd9c0ec4305b591d05db616/googleAPI-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}