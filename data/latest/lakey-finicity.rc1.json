{
  "info": {
    "author": "Jeremy Dean Lakey",
    "author_email": "jeremy.lakey@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Disclaimer\n\nThis library was made by a third party, not Finicity.  It is still being polished up before being production-ready but is ready to toy with.\n\n# Quickstart\n\nFirst, get your partner-id, partner-secret, and app-key from https://developer.finicity.com/ .\n\nNext, install the library:\n\n```\npip3 install lakey-finicity\n```\n\nThen in python, do imports, create a client, and create a test customer and consumer:\n\n```python\nfrom lakey_finicity.models.birth_date import BirthDate\nfrom lakey_finicity.models.connect.connect_type import ConnectType\nfrom lakey_finicity.finicity_client import FinicityClient\n\n\nPARTNER_ID = 'xxxxxx'  # see https://developer.finicity.com/\nPARTNER_SECRET = 'xxxxxx'  # see https://developer.finicity.com/\nAPP_KEY = 'xxxxxx'  # see https://developer.finicity.com/\n\nfinicity = FinicityClient(PARTNER_ID, PARTNER_SECRET, APP_KEY)\n\n\ncustomer_id = finicity.testing.add_customer(\n    username='jane_doe',\n    first_name='John',\n    last_name='Doe'\n)\n\n\nconsumer_id = finicity.consumers.create(\n    customer_id=customer_id,\n    first_name=\"John\",\n    last_name=\"Doe\",\n    address=\"123 Main St\",\n    city=\"Salt Lake City\",\n    state=\"Utah\",\n    zip=\"84000\",\n    phone=\"8012345678\",\n    ssn=\"521-43-6987\",\n    birthday=BirthDate(year=1980, month=1, day_of_month=10),\n    email=\"johndoe@example.com\",\n)\n\nconnect_link: str = finicity.connect.generate_link(\n    customer_id=customer_id,\n    consumer_id=consumer_id,\n    link_type=ConnectType.aggregation,\n)\n\nprint(connect_link)\n```\n\nNow connect accounts with Finicity Connect:\n- open that link\n- accept terms\n- search for & select \"Finbank Profiles - A\"\n- username: Any, password: profile_02\n\n\nNow you can create test transactions and query transactions:\n\n```python\naccounts = finicity.accounts.get_by_customer_id(customer_id)\n\ntest_transaction_id = finicity.testing.add_transaction(\n    customer_id=customer_id,\n    account_id=accounts[0].id,\n    amount=5.23,\n    description=\"test tx\",\n    posted_date=1584006412,  # epoch seconds\n    transaction_date=1584006412,  # epoch seconds\n)\n\n\nqry = finicity.transactions.query(\n    customer_id=customer_id,\n    from_date=1460621294,  # epoch seconds\n    to_date=1584006413,  # epoch seconds\n)\n\nprint(f\"Found {qry.count()} transactions.\")\n\nfor transaction in qry.iter():\n    print(transaction)\n```\n\n...and clean up.\n\n```python\nfinicity.customers.delete(customer_id)\n```\n\nAnd that's it.  See below for more capabilities.\n\n# Client\n\nThe Client class handles authentication and token expiration, endpoints, retries, headers, formatting, and mapping json responses to models.\n\n```python\nfinicity = FinicityClient(PARTNER_ID, PARTNER_SECRET, APP_KEY)\n```\n\n# Customers\n\n```python\nnew_customer_id: int = finicity.customers.add(username='jane_doe', first_name='John', last_name='Doe')\n\nnew_customer: Customer = finicity.customers.get(new_customer_id)\n\nnew_customer = finicity.customers.get_by_username(new_customer.username)\n\nqry = finicity.customers.query(\"john\")\nnew_customer = qry.first_or_none()\n\nfor customer in qry.iter():\n    pass\n\ncustomer_count_with_name_john = qry.count()\n\nfinicity.customers.modify(new_customer_id, first_name=\"John\", last_name=\"Smith\")\n\nfinicity.customers.delete(new_customer_id)\n```\n\n# Report Consumers\n\n```python\nconsumer_id_for_new_customer: str = finicity.consumers.create(\n    customer_id=new_customer_id,\n    first_name=\"John\",\n    last_name=\"Doe\",\n    address=\"123 Main St\",\n    city=\"Salt Lake City\",\n    state=\"Utah\",\n    zip=\"84000\",\n    phone=\"8012345678\",\n    ssn=\"521-43-6987\",\n    birthday=BirthDate(year=1980, month=1, day_of_month=10),\n    email=\"johndoe@example.com\",\n)\n\nconsumer: Consumer= finicity.customers.get(consumer_id_for_new_customer)\n\nfinicity.consumer.get(consumer_id_for_new_customer)\n\nfinicity.consumer.get_for_customer(new_customer_id)\n\nfinicity.consumers.modify(\n    consumer_id=consumer_id_for_new_customer,\n    first_name=\"John\",\n    last_name=\"Doe\",\n    address=\"123 Main St\",\n    city=\"Salt Lake City\",\n    state=\"Utah\",\n    zip=\"84000\",\n    phone=\"8012345678\",\n    ssn=\"521-43-6987\",\n    birthday=BirthDate(year=1980, month=1, day_of_month=10),\n    email=\"johndoe@example.com\",\n)\n```\n\n# Institutions\n\n```python\ninstitution = finicity.institutions.get(12345)\n\nquery = finicity.institutions.get(\"Bank of America\")\n\nfor institution in query.iter():\n    print(institution.name)\n\nfor institution_list in query.batches():\n    pass\n```\n\n# Connect\n\n```python\nconnect_link: str = finicity.connect.generate_link(\n    customer_id=new_customer_id,\n    consumer_id=consumer_id_for_new_customer,\n    link_type=ConnectType.aggregation,\n    webhook_content_type=ContentType.JSON,\n    webhook='https://yoursite.example.com/webhooks/finicity_connect',\n    webhook_data={'value1': 'a', 'value2': 'b'},\n    analytics='google:UA-123456789-1',\n)\n```\n\n# Accounts\n\n```python\naccounts: List[Account] = finicity.accounts.get_by_customer_id(\n    customer_id=new_customer_id,\n    include_pending=True,\n)\n\naccounts: List[Account] = finicity.accounts.get_by_customer_id_and_institution_id(\n    customer_id=customer_id,\n    institution_id=institution_id,\n)\n\naccount: Account = finicity.accounts.get(\n    customer_id=customer_id,\n    account_id: str\n)\n\nfinicity.accounts.modify(\n    customer_id=customer_id,\n    account_id=account_id,\n    number=\"123456,\n    name=\"main account\",\n)\n\nfinicity.accounts.delete(customer_id=customer_id, account_id=account_id):\n\naccounts: List[Account] = finicity.accounts.get_by_institution_login_id(\n    customer_id=customer_id,\n    institution_login_id=institution_login_id,\n)\n\ndetails: AccountDetailResponse = finicity.accounts.get_details(\n    customer_id=customer_id,\n    account_id=account_id,\n)\n\nanswered_mfa_questions: List[AnsweredMfaQuestion] = [q.answer('bob') for q in questions]\n\ndetails: AccountDetailResponse = finicity.accounts.get_details_with_mfa_answers(\n    customer_id=customer_id,\n    account_id=account_id,\n    questions=answered_mfa_questions,\n)\n\nowner: AccountOwner = finicity.accounts.get_owner(\n    customer_id=customer_id,\n    account_id=account_id,\n)\n\nowner: AccountOwner = finicity.accounts.get_owner_with_mfa_answers(\n    customer_id=customer_id,\n    account_id=account_id,\n    questions=questions,\n)\n\npdf: bytes = finicity.accounts.get_statement(\n    customer_id=customer_id,\n    account_id=account_id,\n)\n\npdf: bytes = finicity.accounts.get_statement_with_mfa_answers(\n    customer_id=customer_id,\n    account_id=account_id,\n    questions=questions,\n)\n```\n\n# Transactions\n\n```python\nquery = finicity.transactions.query(\n    customer_id=customer_id,\n    from_date=1494449017,\n    to_date=1494449017,\n    sort=SortOrder.asc,\n    include_pending=True,\n    account_id=account_id,\n)\n\nfor transaction in query.iter():\n    print(transaction.description)\n\nfor transaction_list in query.batches():\n    pass\n\nsubscriptions: List[SubscriptionRecord] = finicity.transactions.enable_push_notifications(\n    customer_id=customer_id,\n    account_id=account_id,\n    callback_url='https://yoursite.example.com/webhooks/transactions',\n)\n\nfinicity.transactions.disable_push_notifications(\n    customer_id=customer_id,\n    account_id=account_id,\n)\n\nfinicity.transactions.delete_push_subscription(\n    customer_id=customer_id,\n    subscription_id=subscription_id,\n)\n\nfinicity.transactions.load_historic_transactions_for_account(\n    customer_id=customer_id,\n    account_id=account_id,\n)\n\nfinicity.transactions.load_historic_transactions_for_account_with_mfa_answers(\n    mfaSession=mfaSession,\n    customer_id=customer_id,\n    account_id=account_id,\n    questions=answered_mfa_questions,\n)\n\nfinicity.transactions.refresh_customer_accounts(customer_id)\n\nfinicity.transactions.refresh_institution_login_accounts(\n    customer_id=customer_id,\n    institution_login_id=institution_login_id,\n)\n```\n\n# Reports\n\n```python\nreport_id = finicity.reports.generate_voa_report(\n    customer_id=new_customer_id,\n    callback_url='https://yoursite.example.com/webhooks/finicity_report',\n    from_date=1494449017,\n    accountIds=account_ids,\n)\n\nreport_id = finicity.reports.generate_voi_report(\n    customer_id=new_customer_id,\n    callback_url='https://yoursite.example.com/webhooks/finicity_report',\n    accountIds=account_ids,\n)\n\nfinicity.reports.get_reports_for_customer(new_customer_id)\n\nfinicity.reports.get_reports_for_consumer(consumer_id_for_new_customer)\n\nfinicity.reports.get_report_by_consumer(\n    consumer_id=consumer_id_for_new_customer,\n    report_id=report_id,\n    purpose=PermissiblePurpose.CODE_12,\n)\n\nfinicity.reports.get_report_by_customer(\n    customer_id=new_customer_id,\n    report_id=report_id,\n    purpose=PermissiblePurpose.CODE_12,\n)\n```\n\n# Testing\n\n```python\ntest_customer_id: int = finicity.testing.add_customer(\n    username='jane_doe',\n    first_name='John',\n    last_name='Doe'\n)\n\ntest_transaction_id: int = finicity.testing.add_transaction(\n    customer_id=test_customer_id,\n    account_id=test_account_id,\n    amount=5.23,\n    description=\"test tx\",\n    status=TransactionStatus.active,\n    posted_date=1460621294,\n    transaction_date=1460621294\n)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jeremydeanlakey/lakey-finicity-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lakey-finicity",
    "package_url": "https://pypi.org/project/lakey-finicity/",
    "platform": "",
    "project_url": "https://pypi.org/project/lakey-finicity/",
    "project_urls": {
      "Homepage": "https://github.com/jeremydeanlakey/lakey-finicity-python"
    },
    "release_url": "https://pypi.org/project/lakey-finicity/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A client library for Finicity's API",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6798477,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ebbcdd5bab1450936398ed5a6188a74fbe9428239a9bdad54da219f8e126fe9",
          "md5": "2eb2f5a921930ffcd616c64025e3b1cd",
          "sha256": "b897ae6f8e636f84169c01a4b1eea5ed4855ac4a159b40b11a5c00366c33b20b"
        },
        "downloads": -1,
        "filename": "lakey_finicity-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2eb2f5a921930ffcd616c64025e3b1cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 108917,
        "upload_time": "2020-03-12T10:03:43",
        "upload_time_iso_8601": "2020-03-12T10:03:43.193803Z",
        "url": "https://files.pythonhosted.org/packages/9e/bb/cdd5bab1450936398ed5a6188a74fbe9428239a9bdad54da219f8e126fe9/lakey_finicity-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e19a983c44b9a4881447ea077d3548a296a5abea3e0c863deb1bd25b43b6f60",
          "md5": "0cd3a7b27fce62c2e8cd56b8669b98f4",
          "sha256": "b533e9199eab61c89fff0ac08cf3bc5b147dd55376dedd6735ba4cb22e81b03f"
        },
        "downloads": -1,
        "filename": "lakey-finicity-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0cd3a7b27fce62c2e8cd56b8669b98f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 54977,
        "upload_time": "2020-03-12T10:03:45",
        "upload_time_iso_8601": "2020-03-12T10:03:45.789687Z",
        "url": "https://files.pythonhosted.org/packages/9e/19/a983c44b9a4881447ea077d3548a296a5abea3e0c863deb1bd25b43b6f60/lakey-finicity-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ebbcdd5bab1450936398ed5a6188a74fbe9428239a9bdad54da219f8e126fe9",
        "md5": "2eb2f5a921930ffcd616c64025e3b1cd",
        "sha256": "b897ae6f8e636f84169c01a4b1eea5ed4855ac4a159b40b11a5c00366c33b20b"
      },
      "downloads": -1,
      "filename": "lakey_finicity-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2eb2f5a921930ffcd616c64025e3b1cd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 108917,
      "upload_time": "2020-03-12T10:03:43",
      "upload_time_iso_8601": "2020-03-12T10:03:43.193803Z",
      "url": "https://files.pythonhosted.org/packages/9e/bb/cdd5bab1450936398ed5a6188a74fbe9428239a9bdad54da219f8e126fe9/lakey_finicity-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e19a983c44b9a4881447ea077d3548a296a5abea3e0c863deb1bd25b43b6f60",
        "md5": "0cd3a7b27fce62c2e8cd56b8669b98f4",
        "sha256": "b533e9199eab61c89fff0ac08cf3bc5b147dd55376dedd6735ba4cb22e81b03f"
      },
      "downloads": -1,
      "filename": "lakey-finicity-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0cd3a7b27fce62c2e8cd56b8669b98f4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 54977,
      "upload_time": "2020-03-12T10:03:45",
      "upload_time_iso_8601": "2020-03-12T10:03:45.789687Z",
      "url": "https://files.pythonhosted.org/packages/9e/19/a983c44b9a4881447ea077d3548a296a5abea3e0c863deb1bd25b43b6f60/lakey-finicity-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}