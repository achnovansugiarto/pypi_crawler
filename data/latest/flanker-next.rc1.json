{
  "info": {
    "author": "Mailgun Technologies Inc.",
    "author_email": "admin@mailgunhq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "Flanker - email address and MIME parsing for Python\n===================================================\n\n.. image:: https://travis-ci.org/mailgun/flanker.svg?branch=master\n    :target: https://travis-ci.org/mailgun/flanker\n\n.. image:: https://coveralls.io/repos/github/mailgun/flanker/badge.svg?branch=master\n    :target: https://coveralls.io/github/mailgun/flanker?branch=master\n\nFlanker is an open source parsing library written in Python by the Mailgun Team.\nFlanker currently consists of an address parsing library (`flanker.addresslib`) as\nwell as a MIME parsing library (`flanker.mime`).\n\nDetailed documentation is provided in the `User Manual <https://github.com/mailgun/flanker/blob/master/docs/User%20Manual.md>`_ as well as the\n`API Reference <https://github.com/mailgun/flanker/blob/master/docs/API%20Reference.md>`_. A Quickstart Guide is provided below.\n\nPython Versions\n---------------\n\nFlanker is heavily used by `Mailgun <www.mailgun.com>`_ in production with\nPython 2.7. The current production version is v0.8.5.\n\nSupport for Python 3 was added in v0.9.0 by popular demand from the community.\nWe are not using Flanker with Python 3 in the house. All we know is that tests\npass with Python 3.6, so use at your own risk. Feel free to report Python 3\nspecific issues if you see any.\n\nInstalling\n----------\n\nYou can install flanker via `pip` or clone the repo from GitHub.\n\nYou'll need Python headers files before you start working with flanker, so install them first:\n\n.. code-block:: bash\n\n   # ubuntu \n   sudo apt-get install python-dev\n   # fedora \n   sudo yum install python-devel\n\nIf you are using `pip`, simply type:\n\n.. code-block:: bash\n\n   pip install flanker\n\nIf you are cloning from GitHub, you can type:\n\n.. code-block:: bash\n\n   git clone git@github.com:mailgun/flanker.git\n   cd flanker\n   pip install -e .\n\nAddress Parsing\n---------------\n\nTo parse a single mailbox (display name as well as email address):\n\n.. code-block:: py\n\n   >>> from flanker.addresslib import address\n   >>>\n   >>> address.parse('Foo foo@example.com')\n   Foo <foo@example.com>\n\nAn invalid address is returned as `None`:\n\n.. code-block:: py\n\n   >>> from flanker.addresslib import address\n   >>>\n   >>> print address.parse('@example.com')\n   None\n\nTo parse a single email address (no display name):\n\n.. code-block:: py\n\n   >>> from flanker.addresslib import address\n   >>>\n   >>> address.parse('foo@example.com', addr_spec_only=True)\n   foo@example.com\n\nTo parse an address list:\n\n.. code-block:: py\n\n   >>> from flanker.addresslib import address\n   >>>\n   >>> address.parse_list(['foo@example.com, bar@example.com, @example.com'])\n   [foo@example.com, bar@example.com]\n\nTo parse an address list as well as return a tuple containing the parsed \naddresses and the unparsable portions\n\n.. code-block:: py\n\n   >>> from flanker.addresslib import address\n   >>>\n   >>> address.parse_list(['foo@example.com, bar@example.com, @example.com'], as_tuple=True)\n   [foo@example.com, bar@example.com], ['@example.com']\n\nTo parse an address list in strict mode:\n\n.. code-block:: py\n\n   >>> from flanker.addresslib import address\n   >>>\n   >>> address.parse_list(['foo@example.com, bar@example.com, @example.com'], strict=True)\n   [foo@example.com, bar@example.com]\n\nTo validate an email address (parse as well as DNS, MX existence, and ESP grammar checks):\n\n.. code-block:: py\n\n   >>> from flanker.addresslib import address\n   >>>\n   >>> address.validate_address('foo@mailgun.com')\n   foo@mailgun.com\n\nTo validate an address list:\n\n.. code-block:: py\n\n   >>> from flanker.addresslib import address\n   >>>\n   >>> address.validate_list(['foo@mailgun.com, bar@mailgun.com, @mailgun.com'], as_tuple=True)\n   ([foo@mailgun.com, bar@mailgun.com], ['@mailgun.com'])\n\nMIME Parsing\n------------\n\nFor the following examples, `message_string` will be set to the following MIME message:\n\n::\n\n   MIME-Version: 1.0\n   Content-Type: multipart/alternative; boundary=001a11c1d71697c7f004e6856996\n   From: Bob <bob@example.com>\n   To: Alice <alice@example.com>\n   Subject: hello, world\n   Date: Mon, 16 Sep 2013 12:43:03 -0700\n   \n   --001a11c1d71697c7f004e6856996\n   Content-Type: text/plain; charset=us-ascii\n   \n   Hello, *Alice*\n   \n   --001a11c1d71697c7f004e6856996\n   Content-Type: text/html; charset=us-ascii\n   \n   <p>Hello, <b>Alice</b></p>\n   \n   --001a11c1d71697c7f004e6856996--\n   \nTo parse a MIME message:\n\n.. code-block:: py\n\n   >>> from flanker import mime\n   >>>\n   >>> msg = mime.from_string(message_string)\n\nMIME message headers (unicode multi-value dictionary with headers):\n\n.. code-block:: py\n\n   >>> from flanker import mime\n   >>>\n   >>> msg = mime.from_string(message_string)\n   >>> msg.headers.items()\n   [('Mime-Version', '1.0'),\n    ('Content-Type',\n     ('multipart/alternative', {'boundary': u'001a11c1d71697c7f004e6856996'})),\n    ('From', 'Bob <bob@example.com>'),\n    ('To', 'Alice <alice@example.com>'),\n    ('Subject', 'hello, world'),\n    ('Date', 'Mon, 16 Sep 2013 12:43:03 -0700')]\n\nUseful content_type member with predicates:\n\n.. code-block:: py\n\n   >>> from flanker import mime\n   >>> msg = mime.from_string(message_string)\n   >>>\n   >>> msg.content_type.is_multipart()\n   True\n   >>>\n   >>> msg.content_type.is_singlepart()\n   False\n   >>>\n   >>> msg.content_type.is_message_container()\n   False \n\nDecoded body of a message:\n\n.. code-block:: py\n\n   >>> from flanker import mime\n   >>> msg = mime.from_string(message_string)\n   >>>\n   >>> # None because message is multipart\n   >>> print msg.body\n   None\n   >>>\n   >>> for part in msg.parts:\n          print 'Content-Type: {} Body: {}'.format(part, part.body)\n\n   Content-Type: (text/plain) Body: Hello, *Alice*\n   Content-Type: (text/html) Body: <p>Hello, <b>Alice</b></p>\n\n   >>> # None because no enclosed messages exist\n   >>> print msg.enclosed\n   None\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.mailgun.com/",
    "keywords": "",
    "license": "Apache 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flanker-next",
    "package_url": "https://pypi.org/project/flanker-next/",
    "platform": "",
    "project_url": "https://pypi.org/project/flanker-next/",
    "project_urls": {
      "Homepage": "https://www.mailgun.com/"
    },
    "release_url": "https://pypi.org/project/flanker-next/0.9.14/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Mailgun Parsing Tools",
    "version": "0.9.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11984570,
  "releases": {
    "0.9.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbfbafb44f6bfb3197884e4258568beef1ec90d823eefec0bb1a8fe3e0fcadb8",
          "md5": "8e82870edfc449987e49b031894dc607",
          "sha256": "36dd04331e3f93bafae6a6c85c97f7a9d2d201e49ed8bd9a5796ab3fe3c9abd9"
        },
        "downloads": -1,
        "filename": "flanker-next-0.9.14.tar.gz",
        "has_sig": false,
        "md5_digest": "8e82870edfc449987e49b031894dc607",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 106494,
        "upload_time": "2021-11-10T14:12:17",
        "upload_time_iso_8601": "2021-11-10T14:12:17.032457Z",
        "url": "https://files.pythonhosted.org/packages/fb/fb/afb44f6bfb3197884e4258568beef1ec90d823eefec0bb1a8fe3e0fcadb8/flanker-next-0.9.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fbfbafb44f6bfb3197884e4258568beef1ec90d823eefec0bb1a8fe3e0fcadb8",
        "md5": "8e82870edfc449987e49b031894dc607",
        "sha256": "36dd04331e3f93bafae6a6c85c97f7a9d2d201e49ed8bd9a5796ab3fe3c9abd9"
      },
      "downloads": -1,
      "filename": "flanker-next-0.9.14.tar.gz",
      "has_sig": false,
      "md5_digest": "8e82870edfc449987e49b031894dc607",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 106494,
      "upload_time": "2021-11-10T14:12:17",
      "upload_time_iso_8601": "2021-11-10T14:12:17.032457Z",
      "url": "https://files.pythonhosted.org/packages/fb/fb/afb44f6bfb3197884e4258568beef1ec90d823eefec0bb1a8fe3e0fcadb8/flanker-next-0.9.14.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}