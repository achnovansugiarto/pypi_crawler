{
  "info": {
    "author": "Privex Inc.",
    "author_email": "company@privex.io",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Namecheap API for Python\n===========\n\n[![PyPi Version](https://img.shields.io/pypi/v/privex-namecheap.svg)](https://pypi.org/project/privex-namecheap/)\n![License Button](https://img.shields.io/pypi/l/privex-namecheap) \n![PyPI - Downloads](https://img.shields.io/pypi/dm/privex-namecheap)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/privex-namecheap) \n![GitHub last commit](https://img.shields.io/github/last-commit/Privex/PyNamecheap)\n\n\nPyNamecheap is a Namecheap API client in Python.\nAPI itself is documented at <https://www.namecheap.com/support/api/intro/>\n\nThis client supports:\n-   Registering a domain\n-   Checking domain name availability\n-   Listing domains you have registered\n-   Getting contact information for a domain\n-   Setting DNS info to default values\n-   Set DNS host records\n\n**NOTE: This is a fork of [Bemmu/PyNamecheap](https://github.com/Bemmu/PyNamecheap)**.\n\nThe original library was created by @Bemmu - we (@Privex) forked the library so that we\ncould make various major changes, including using features which **prevent backwards compatibility**\n**with Python 2.x and anything before 3.6**.\n\nIf you absolutely need to use a Python version prior to 3.6.0, then you should use the original\npackage: [Bemmu/PyNamecheap](https://github.com/Bemmu/PyNamecheap) \n\n### Installation\n\nFirst, check your Python version by running `python3 -V`\n\n```\nuser@host ~ $ python3 -V\nPython 3.8.3\n```\n\n#### For Python 3.7 and higher\n\nTo install our fork's (`Privex/PyNamecheap`) python package - use `pip3` or `pipenv`\nand install the package name `privex-namecheap` \n\n```\n# Using standard Pip\npip3 install -U privex-namecheap\n\n# Using Pipenv\npipenv install privex-namecheap\n\n```\n\n#### For Python 3.6.x\n\n**If you are running Python 3.6.x**, you'll need to install our package with the `py36` extra - or\nmanually install the `dataclasses` package.\n\n```\n# Using standard Pip\npip3 install -U 'privex-namecheap[py36]'\n\n# Using Pipenv\npipenv install 'privex-namecheap[py36]'\n```\n\nDo **NOT** install `privex-namecheap[py36]` if you are running Python 3.7 or newer. It will break your\nbuilt-in Python `dataclasses` module.\n\n#### For Python 3.5.x or older...\n\nThe original library was created by @Bemmu - we (@Privex) forked the library so that we\ncould make various major changes, including using features which **prevent backwards compatibility**\n**with Python 2.x and anything before 3.6**.\n\nThis means it's not possible to use `privex-namecheap` with any Python version older than `3.6.0`\n\nIf you absolutely need to use a Python version prior to 3.6.0, then you should use the original\npackage: [Bemmu/PyNamecheap](https://github.com/Bemmu/PyNamecheap) \n\n### How to sign up to start using the API\n\nThe API has two environments, production and sandbox. Since this API will spend real money when registering domains, start with the sandbox by going to <http://www.sandbox.namecheap.com/> and creating an account. Accounts between production and sandbox are different, so even if you already have a Namecheap account you will need a new one.\n\nAfter you have an account, go to \"Profile\".\n\n![Profile](img/profile.png \"Profile\")\n\nFrom there, select the \"Profile\" menu again, then \"Tools\". Scroll to the bottom of the page to the \"Business & Dev Tools\" and select \"Manage\" on the \"Namecheap API Access\" section.\n\n![API menu](img/apimenu.png \"API menu\")\n\nYou'll get to your credentials page. From here you need to take note of your api key, username and add your IP to the whitelist of IP addresses that are allowed to access the account. You can check your public IP by searching \"what is my ip\" on Google and add it here. It might take some time before it actually starts working, so don't panic if API access doesn't work at first.\n\n![Credentials](img/credentials.png \"Credentials\")\n\n### How to access the API from Python\n\nCopy namecheap.py to your project. In Python you can access the API as follows:\n\n```python\nfrom namecheap import Api\n# api_username, api_key, client_ip_address\napi = Api('NamecheapUsername', 'YourNamecheapAPIKey', '12.34.56.78', sandbox=True, debug=True)\n\n# Using keyword arguments (recommended - more reliable in the event the constructor is changed)\napi = Api(\n    ApiUser='NamecheapUsername', \n    ApiKey='YourNamecheapAPIKey',\n    ClientIP='12.34.56.78', \n\n    # OPTIONAL. You only need to specify UserName if you're managing resources on a different\n    # Namecheap account from your own account - e.g. someone has granted your account permission\n    # to manage their domains etc.\n    UserName='NamecheapUsername', \n\n    # By default, sandbox and debug are both False. Set sandbox=True to use the Namecheap Sandbox API,\n    # and set debug=True to enable verbose debug logging to help you understand what the library is\n    # doing behind the scenes.\n    sandbox=True, debug=True\n)\n\n```\nThe fields are the ones which appear in the credentials screen above. \n\nThe username appears twice, because you might be acting on behalf of someone else.\n\n### Registering a domain name using the API + common usage examples\n\nUnfortunately you need a bunch of contact details to register a domain, so it is not as easy as just providing the domain name. \n\nIn the sandbox, the following contact details are acceptable. Trickiest field is the phone number, which has to be formatted as shown.\n\n```python\nfrom namecheap import Api, DomainRecord\n\ncontact_details = dict(\n    FirstName='Jack',\n    LastName='Trotter',\n    Address1='Ridiculously Big Mansion, Yellow Brick Road',\n    City='Tokushima',\n    StateProvince='Tokushima',\n    PostalCode='771-0144',\n    Country='Japan',\n    Phone=\"+81.123123123\",\n    EmailAddress='jack.trotter@example.com'\n)\n\napi = Api('NamecheapUsername', 'YourNamecheapAPIKey', '12.34.56.78', sandbox=True, debug=True)\n\n# First let's find out how much various TLDs cost at the moment\ntld_prices = api.get_tld_prices('com', 'org', 'net', 'bz', 'xyz', 'us')\nfor tld, price in tld_prices.items():\n    print(f\".{tld} pricing - Current Price: ${price.total_your_price:.2f} | Regular Price: ${price.total_regular_price:.2f}\")\nprint(\"-------------\")\n\"\"\"\n(Example output)\n.com pricing - Current Price: $9.06 | Regular Price: $9.06\n.org pricing - Current Price: $13.16 | Regular Price: $13.16\n.net pricing - Current Price: $12.16 | Regular Price: $13.16\n.bz pricing - Current Price: $21.88 | Regular Price: $21.88\n.xyz pricing - Current Price: $1.18 | Regular Price: $11.06\n.us pricing - Current Price: $3.88 | Regular Price: $8.48\n-------------\n\"\"\"\n\n# Next let's specifically get just the .com TLD price\ncom_price = api.get_tld_prices('com')\nprint(f\"Price you'll pay: ${com_price.total_your_price:.2f} | Regular Non-promo Price: ${com_price.total_regular_price:.2f}\")\n\n# Now for the important part - registering the domain. We need to specify all of the contact details\n# when registering the domain.\nreg = api.domains_create(\n    'mycooldomain.com',\n    **contact_details\n)\nprint(\"Domain registration result:\", reg)\n# domains_create is also available as the alias: register_domain\n\n# Assuming no exception occurred, then we can now setup the records for the domain\n\n# Using replace_records, we can get rid of all the default parking page records etc., and overwrite them\n# with our custom records - in one fell swoop.\napi.replace_records(\n    'mycooldomain.com',\n    DomainRecord('A', '185.130.44.10'),               # Name: @   | Type: A     | Value: 185.130.44.10\n    DomainRecord('AAAA', '2a07:e00::abc'),            # Name: @   | Type: A     | Value: 185.130.44.10\n    DomainRecord('CNAME', 'mycooldomain.com', 'www')  # Name: www | Type: CNAME | Value: mycooldomain.com\n)\n\n# Using add_record, we can insert singular records to the existing records, instead of overwriting them\napi.add_record('mycooldomain.com', 'TXT', 'hello world')          # Name: @    | Type: TXT | Value: hello world\napi.add_record('mycooldomain.com', 'A', '127.0.0.1', 'test')      # Name: test | Type: A   | Value: 127.0.0.1\n\n# Using delete_record, we can delete individual records based on their type, content, and sub-domain\napi.delete_record('mycooldomain.com', 'TXT', 'hello world')       # Delete the root domain TXT record 'hello world'\napi.delete_record('mycooldomain.com', 'A', '127.0.0.1', 'test')   # Delete the 'test' subdomain A record '127.0.0.1'\n\ninfo = api.domains_getInfo('mycooldomain.com')\nprint(info.expired_date)   # Output: 2020-11-05 00:00:00\n\n# If mycooldomain.com is expiring in the next 60 days, renew it for one year.\nif info.days_until_expires < 60:\n    api.renew_domain('mycooldomain.com')\n\n# Change the nameservers for mycooldomain.com to ns1.privex.io to ns3.privex.io\napi.set_nameservers('mycooldomain.com', 'ns1.privex.io', 'ns2.privex.io', 'ns3.privex.io')\n\n# Change the nameservers for mycooldomain.com back to the default Namecheap nameservers,\n# to allow using the domain with Namecheap's email service, URL redirect records + other features.\napi.domains_dns_setDefault('mycooldomain.com')\n```\n\nThis call should succeed in the sandbox, but if you use the API to check whether this domain is available after registering it, the availability will not change. This is normal.\n\n### How to check if a domain name is available\n\nThe `domains_available` method returns True if the domain is available.\n\n```python\nfrom namecheap import Api\napi = Api('NamecheapUsername', 'YourNamecheapAPIKey', '12.34.56.78', sandbox=True, debug=True)\napi.domains_available('taken.com', 'apsdjcpoaskdc.com')\n# Might result in\n# {\n#   'taken.com' : False,\n#   'apsdjcpoaskdc.com' : True\n# }\n\n# If you check a singular domain, it will return a bool, unless you pass force_dict=True\napi.domains_available('taken.com')\n# True\napi.domains_available('taken.com', force_dict=True)\n# {'taken.com' : False}\n```\n\nYou can also pass a list of domain names, in which case it does a batch check for all and returns a dictionary of the answers.\nYou should probably not be writing a mass domain checking tool using this, it is intended to be used before registering a domain.\n\n### CLI tool usage\n\nFirst, you need to edit `./credentials.py` file to provide API access for the script. The example is following:\n\n    #!/usr/bin/env python\n\n    api_key = '0123456789abcdef0123456789abcdef'\n    username = 'myusername'\n    ip_address = '10.0.0.1'\n\nThen you just call the script with desired arguments:\n\n    ./namecheap-api-cli --domain example.org --list\n\n    ./namecheap-api-cli --domain example.org --add --type \"A\" --name \"test\" --address \"127.0.0.1\" --ttl 300\n    ./namecheap-api-cli --domain example.org --add --type \"CNAME\" --name \"alias-of-test\" --address \"test.example.org.\" --ttl 1800\n\n    ./namecheap-api-cli --domain example.org --delete --type \"CNAME\" --name \"alias-of-test\" --address \"test.example.org.\"\n    ./namecheap-api-cli --domain example.org --delete --type \"A\" --name \"test\" --address \"127.0.0.1\"\n\n### Basic host records management code\n\nHere's the example of simple DNS records management script:\n\n```python\n\n#!/usr/bin/env python\n\"\"\"\nDefine variables regarding to your API account:\n  - api_key\n  - username\n  - ip_address\n\"\"\"\nfrom namecheap import Api\n\nusername = 'MyNamecheapUser'\napi_key = 'SomeAPIKey'\nip_address = '1.2.3.4'\napi = Api(username, api_key, ip_address, sandbox=False)\n\ndomain = \"example.org\"\n\n# list domain records\napi.list_records(domain)\n\n# add an 'A' record for subdomain \"test\" pointing to 127.0.0.1\napi.add_record(domain, 'A', '127.0.0.1', hostname='test', ttl=1800)\n\n# delete record we just created,\n# selecting it by Name, Type and Address values\napi.delete_record(domain,  'A', '127.0.0.1', hostname='test')\n```\n\n### Retry mechanism\n\nSometimes you could face wrong API responses, which are related to server-side errors.\n\nThanks to @gstein, we implemented retry mechanism, one could enable it by adding 2 parameters to Api instance:\n\n```\napi = Api(username, api_key, ip_address, sandbox=False,\n          attempts_count=3,\n          attempts_delay=0.1)\n```\n\nValues of 2 or 3 should do the thing.\n\n### More\n\nLook at namecheap_tests.py to see more examples of things you can do.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Privex/PyNamecheap",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "privex-namecheap",
    "package_url": "https://pypi.org/project/privex-namecheap/",
    "platform": "any",
    "project_url": "https://pypi.org/project/privex-namecheap/",
    "project_urls": {
      "Homepage": "https://github.com/Privex/PyNamecheap"
    },
    "release_url": "https://pypi.org/project/privex-namecheap/0.1.2/",
    "requires_dist": [
      "requests",
      "privex-helpers (>=2.18.0)",
      "privex-loghelper",
      "dataclasses (>=0.7) ; extra == 'dataclasses'",
      "setuptools ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "nose ; extra == 'dev'",
      "privex-helpers[setuppy] ; extra == 'dev'",
      "dataclasses (>=0.7) ; extra == 'py36'"
    ],
    "requires_python": "",
    "summary": "Namecheap API client in Python (fork of Bemmu/PyNamecheap)",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8091215,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f51b81f20217cbd4753a7bdb23db2166243ffb9d1719279747c445bc24d7b70",
          "md5": "d66a4c25f5d479542036c51b5f46cb5a",
          "sha256": "91cc8625f37f11cffa493ffc8f6c00051b2c6083fb6fb3ab25f5ad4888aa9bcb"
        },
        "downloads": -1,
        "filename": "privex_namecheap-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d66a4c25f5d479542036c51b5f46cb5a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28062,
        "upload_time": "2020-09-02T01:39:11",
        "upload_time_iso_8601": "2020-09-02T01:39:11.529954Z",
        "url": "https://files.pythonhosted.org/packages/6f/51/b81f20217cbd4753a7bdb23db2166243ffb9d1719279747c445bc24d7b70/privex_namecheap-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29f775d8eea4fdb8295b89847bdbfc007ffd0d66c1e565535a724da93f4bad9a",
          "md5": "1fa87d09310638041a7d4e63f322259e",
          "sha256": "b7d6a787699adda9a2b09f377537e68730ace1e516af821636e182b222c8091c"
        },
        "downloads": -1,
        "filename": "privex_namecheap-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1fa87d09310638041a7d4e63f322259e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30712,
        "upload_time": "2020-09-02T01:39:14",
        "upload_time_iso_8601": "2020-09-02T01:39:14.608719Z",
        "url": "https://files.pythonhosted.org/packages/29/f7/75d8eea4fdb8295b89847bdbfc007ffd0d66c1e565535a724da93f4bad9a/privex_namecheap-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98127e82ef4acf3f8477112a2e021456e1fd2d2e9fea23b8eae2b72d0bd37922",
          "md5": "acc4d42b0c06a329830a7a7e292018a9",
          "sha256": "0e764e94a49918f2ffc08c6ab00c758a46a9bf8e18402c8ee41ca26e870b2c07"
        },
        "downloads": -1,
        "filename": "privex_namecheap-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "acc4d42b0c06a329830a7a7e292018a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28803,
        "upload_time": "2020-09-02T03:02:12",
        "upload_time_iso_8601": "2020-09-02T03:02:12.337367Z",
        "url": "https://files.pythonhosted.org/packages/98/12/7e82ef4acf3f8477112a2e021456e1fd2d2e9fea23b8eae2b72d0bd37922/privex_namecheap-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "986a183b982f3abaae5068b36db1ee7e79054d9389d4179d1a4e079ba29e7aae",
          "md5": "cd7bf9e3ebe6749bab1d1e5fa6b1a490",
          "sha256": "c218cd5a608d69f85a050b4bc226942ddae5e6e5c34c91d049dfb8d82a2be6ab"
        },
        "downloads": -1,
        "filename": "privex_namecheap-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cd7bf9e3ebe6749bab1d1e5fa6b1a490",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31668,
        "upload_time": "2020-09-02T03:02:13",
        "upload_time_iso_8601": "2020-09-02T03:02:13.836516Z",
        "url": "https://files.pythonhosted.org/packages/98/6a/183b982f3abaae5068b36db1ee7e79054d9389d4179d1a4e079ba29e7aae/privex_namecheap-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddb6196ce447931b55f86dde4f4555b90f9541e79cf5f41855fd31f9641dd49f",
          "md5": "87aa0965d41331d0ca8ac3a22237fa8f",
          "sha256": "bef3d6051c030ff50e7ca2ab78db983723cd79fca79443df743f0f965be9fac1"
        },
        "downloads": -1,
        "filename": "privex_namecheap-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "87aa0965d41331d0ca8ac3a22237fa8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28810,
        "upload_time": "2020-09-02T03:36:01",
        "upload_time_iso_8601": "2020-09-02T03:36:01.853563Z",
        "url": "https://files.pythonhosted.org/packages/dd/b6/196ce447931b55f86dde4f4555b90f9541e79cf5f41855fd31f9641dd49f/privex_namecheap-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d46c06fc1db1ed8b41feed0e6e27dcff7b2085ada7d8c3602fee6efc4cf1a81",
          "md5": "c86de739803cb884e1610fd4d7fe80a5",
          "sha256": "532e42c25c85478578e93c23a614be2efb2afd0a4449c44e46934685e42e1bbf"
        },
        "downloads": -1,
        "filename": "privex_namecheap-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c86de739803cb884e1610fd4d7fe80a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31661,
        "upload_time": "2020-09-02T03:36:03",
        "upload_time_iso_8601": "2020-09-02T03:36:03.585778Z",
        "url": "https://files.pythonhosted.org/packages/1d/46/c06fc1db1ed8b41feed0e6e27dcff7b2085ada7d8c3602fee6efc4cf1a81/privex_namecheap-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ddb6196ce447931b55f86dde4f4555b90f9541e79cf5f41855fd31f9641dd49f",
        "md5": "87aa0965d41331d0ca8ac3a22237fa8f",
        "sha256": "bef3d6051c030ff50e7ca2ab78db983723cd79fca79443df743f0f965be9fac1"
      },
      "downloads": -1,
      "filename": "privex_namecheap-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "87aa0965d41331d0ca8ac3a22237fa8f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28810,
      "upload_time": "2020-09-02T03:36:01",
      "upload_time_iso_8601": "2020-09-02T03:36:01.853563Z",
      "url": "https://files.pythonhosted.org/packages/dd/b6/196ce447931b55f86dde4f4555b90f9541e79cf5f41855fd31f9641dd49f/privex_namecheap-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d46c06fc1db1ed8b41feed0e6e27dcff7b2085ada7d8c3602fee6efc4cf1a81",
        "md5": "c86de739803cb884e1610fd4d7fe80a5",
        "sha256": "532e42c25c85478578e93c23a614be2efb2afd0a4449c44e46934685e42e1bbf"
      },
      "downloads": -1,
      "filename": "privex_namecheap-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c86de739803cb884e1610fd4d7fe80a5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 31661,
      "upload_time": "2020-09-02T03:36:03",
      "upload_time_iso_8601": "2020-09-02T03:36:03.585778Z",
      "url": "https://files.pythonhosted.org/packages/1d/46/c06fc1db1ed8b41feed0e6e27dcff7b2085ada7d8c3602fee6efc4cf1a81/privex_namecheap-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}