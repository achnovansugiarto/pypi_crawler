{
  "info": {
    "author": "Algomojo",
    "author_email": "support@algomojo.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Algomojo - Arrow API Python Client V1\r\n\r\n## ABOUT\r\n\r\nAlgomojo is a Python library that facilitates the development of trading algorithms using the [Algomojo Free API](https://algomojo.com/) and Free Algo Trading Platform. The library supports both REST-API interfaces and provides features such as real-time order execution, smartorder execution, placing options orders, placing multi orders, order modification/cancellation, and access to order book, trade book, open positions, orderstatus, position square-off functionalities, getquotes, profile and fund details. For a comprehensive understanding of each API's behavior, please refer to the Algomojo API documentation.\r\n\r\n\r\n## License\r\nAlgomojo  (c) 2023. Licensed under the MIT License.\r\n\r\n\r\n## Documentation\r\n[Algomojo Rest API documentation ](https://amapi.algomojo.com/v1/docs/)\r\n\r\n\r\n\r\n\r\n## Installation\r\nInstall from PyPI\r\n\r\n        pip install Algomojo\r\n\r\nAlternatively, install from source. Execute setup.py from the root directory.\r\npython setup.py install\r\n\r\nAlways use the newest version while the project is still in alpha!\r\n\r\n\r\n## Usage Examples\r\nIn order to call Algomojo trade API, you need to sign up for an trading account with one of the partner broker and obtain API key pairs and enjoy unlimited access to the API based trading. Replace api_key and api_secret_key with what you get from the web console.\r\n\r\n\r\n## Getting Started\r\n\r\nAfter downloading package import the package and create the object with api credentials\r\n\r\n\r\n        from algomojo.pyapi import *\r\n\r\n\r\n\r\n\r\n\r\n## Creating  Object\r\n\r\nFor creating an object there are 3 arguments which would be passed\r\n\r\n        api_key : str\r\n        User Api key (logon to algomojo account to find api credentials)\r\n        api_secret : str\r\n        User Api secret (logon to algomojo account to find api credentials)\r\n        version : str\r\n        The current version of the API.\r\n\r\nSample:\r\n        \r\n        algomojo=api(api_key=\"14ca89ea8fxd944609eea66e59cde3495fb\",\r\n                        api_secret=\"76360446900d005cac830d40e03efd9c\")\r\n        \r\n## Using Object Methods\r\nobj.method(mandatory_parameters)  or obj.method(madatory_parameters+required_parameters)\r\n\r\n\r\n# Avaliable Methods\r\n        \r\n### 1. PlaceOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                PlaceOrder(broker,symbol,exchange,action,product,pricetype,quantity)\r\n        \r\n        Function with all parametrs:       \r\n                PlaceOrder(broker,exchange,symbol,action,product,pricetype,quantity,price,\r\n                                        strategy,disclosed_quantity,trigger_price,amo,splitorder,split_quantity,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                from algomojo.pyapi import *\r\n                \r\n                # Set the API Key and API Secret key obtained from Algomojo MyAPI Section\r\n                algomojo=api(api_key=\"14ca89ea8fxd944609eea66e59cde3495fb\",\r\n                                api_secret=\"76360446900d005cac830d40e03efd9c\")\r\n\r\n                # Place Market Order in the trading symbol RELIANCE-EQ\r\n                algomojo.PlaceOrder(broker=\"ab\",\r\n                                strategy=\"Python Example\",\r\n                                exchange=\"NSE\",\r\n                                symbol=\"RELIANCE-EQ\",\r\n                                action=\"BUY\",\r\n                                product=\"MIS\",\r\n                                quantity=10)\r\n                \r\n                #Place Limit Order in the trading symbol ZOMATO-EQ\r\n                algomojo.PlaceOrder(broker=\"ab\",\r\n                                strategy=\"Python Example\",\r\n                                exchange=\"NSE\",\r\n                                symbol=\"ZOMATO-EQ\",\r\n                                action=\"BUY\",\r\n                                product=\"MIS\",\r\n                                quantity=10,\r\n                                pricetype=\"LIMIT\",\r\n                                price=54)\r\n\r\n                #Place Larger Order in options with Split Order mode enabled\r\n                algomojo.PlaceOrder(broker=\"ab\",\r\n                                strategy=\"Python Example\",\r\n                                exchange=\"NFO\",\r\n                                symbol=\"NIFTY23FEB18000CE\",\r\n                                action=\"BUY\",\r\n                                product=\"NRML\",\r\n                                quantity=5200,\r\n                                pricetype=\"MARKET\",\r\n                                splitorder=\"YES\",\r\n                                split_quantity=1800)\r\n                \r\n### 2. PlaceBOOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                PlaceBOOrder(broker,symbol,exchange,action,pricetype,quantity,price,squareoff,stoploss,trailing_stoploss)\r\n        \r\n        Function with all parametrs:       \r\n                PlaceBOOrder(broker,symbol,exchange,action,pricetype,quantity,price,squareoff,stoploss,trailing_stoploss\r\n                        strategy,disclosed_quantity,trigger_price,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.PlaceBOOrder(broker=\"ab\",\r\n                                        strategy=\"Python Example\",\r\n                                        exchange=\"NSE\",\r\n                                        symbol=\"YESBANK-EQ\",\r\n                                        action=\"BUY\",\r\n                                        pricetype=\"LIMIT\",\r\n                                        quantity=\"1\",\r\n                                        price=\"16.5\",\r\n                                        squareoff=\"2\",\r\n                                        stoploss=\"2\",\r\n                                        trailing_stoploss=\"1\",\r\n                                        trigger_price=\"0\",\r\n                                        disclosed_quantity=\"0\")   \r\n\r\n### 3. PlaceCOOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                PlaceCOOrder(broker,symbol,exchange,action,pricetype,quantity,price,stop_price)\r\n        \r\n        Function with all parametrs:       \r\n                PlaceCOOrder(broker,symbol,exchange,action,pricetype,quantity,price,stop_price\r\n                        strategyapi_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.PlaceCOOrder(broker=\"ab\",\r\n                                        strategy=\"Python Example\",\r\n                                        exchange=\"NSE\",\r\n                                        symbol=\"YESBANK-EQ\",\r\n                                        action=\"BUY\",\r\n                                        pricetype=\"LIMIT\",\r\n                                        quantity=\"1\",\r\n                                        price=\"16.5\",\r\n                                        stop_price=\"15\") \r\n### 4. PlaceFOOptionsOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                PlaceFOOptionsOrder(broker,spot_symbol,expiry_date,action,product,pricetype,quantity,price,option_type,strike_int)\r\n        \r\n        Function with all parametrs:       \r\n                PlaceFOOptionsOrder(broker,spot_symbol,expiry_date,action,product,pricetype,quantity,price,option_type,strike_int\r\n                        strategy,offset,trigger_price,splitorder,split_quantity,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.PlaceFOOptionsOrder(broker=\"ab\",\r\n                                                strategy=\"Python Example\",\r\n                                                spot_symbol=\"NIFTY\",\r\n                                                expiry_date=\"23FEB\",\r\n                                                action=\"BUY\",\r\n                                                product=\"NRML\",\r\n                                                pricetype=\"MARKET\",\r\n                                                quantity=\"50\",\r\n                                                price=\"0\",\r\n                                                option_type=\"CE\",\r\n                                                strike_int=\"50\",\r\n                                                offset=\"-2\",\r\n                                                splitorder=\"NO\",\r\n                                                split_quantity=\"50\")\r\n\r\n### 5. PlaceSmartOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                PlaceSmartOrder(broker,symbol,exchange,action,product,pricetype,quantity,price,position_size)\r\n        \r\n        Function with all parametrs:       \r\n                PlaceSmartOrder(broker,symbol,exchange,action,product,pricetype,quantity,price,position_size\r\n                        strategy,disclosed_quantity,trigger_price,amo,splitorder,split_quantity,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.PlaceSmartOrder(broker=\"ab\",\r\n                                        strategy=\"Python Example\",\r\n                                        exchange=\"NSE\",\r\n                                        symbol=\"YESBANK-EQ\",\r\n                                        action=\"BUY\",\r\n                                        product=\"CNC\",\r\n                                        pricetype=\"MARKET\",\r\n                                        quantity=\"7\",\r\n                                        price=\"0\",\r\n                                        position_size=\"7\",\r\n                                        trigger_price=\"0\",\r\n                                        disclosed_quantity=\"0\",\r\n                                        amo=\"NO\",\r\n                                        splitorder=\"NO\",\r\n                                        split_quantity=\"2\") \r\n\r\n### 6. PlaceStrategyOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                PlaceStrategyOrder(strategy_id,action)\r\n        \r\n        Function with all parametrs:       \r\n                PlaceStrategyOrder(strategy_id,action,api_key,api_secret)\r\n                \r\n                Sample :        \r\n                algomojo.PlaceStrategyOrder(strategy_id=\"ALGO\",\r\n                                                action=\"BUY\") \r\n\r\n\r\n### 7. PlaceMultiOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                PlaceMultiOrder(broker,symbol,exchange,action,product,pricetype,quantity,price)\r\n        \r\n        Function with all parametrs:       \r\n                PlaceMultiOrder(broker,symbol,exchange,action,product,pricetype,quantity,price,\r\n                        strategy,disclosed_quantity,trigger_price,amo,splitorder,split_quantity,api_key,api_secret)\r\n                \r\n        Sample : \r\n\r\n                orders=[{\"api_key\":\"gusat281627asa827382gasg177n79\",\"api_secret\":\"d872s766suwys78s7aji78673sads\",\"broker\":\"ab\",\"symbol\":\"IDEA-EQ\",\"exchange\":\"NSE\",\"product\":\"CNC\",\"pricetype\":\"MARKET\",\"quantity\":2,\"action\":\"BUY\",\"splitorder\":\"YES\",\"split_quantity\":2},{\"api_key\":\"aji7827382gasgd87273sads177n79\",\"api_secret\":\"628162gusats766suwys78s77asa8\",\"broker\":\"tc\",\"symbol\":\"KRETTOSYS\",\"exchange\":\"BSE\",\"product\":\"MIS\",\"pricetype\":\"LIMIT\",\"quantity\":1,\"price\":\"0.68\",\"action\":\"BUY\"}]\r\n\r\n                algomojo.PlaceMultiOrder(orders)\r\n\r\n### 8. PlaceMultiBOOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                PlaceMultiBOOrder(broker,symbol,exchange,action,pricetype,quantity,price,squareoff,stoploss,trailing_stoploss)\r\n        \r\n        Function with all parametrs:       \r\n                PlaceMultiBOOrder(broker,symbol,exchange,action,pricetype,quantity,price,squareoff,stoploss,trailing_stoploss\r\n                        strategy,disclosed_quantity,trigger_price,api_key,api_secret)\r\n                \r\n        Sample : \r\n\r\n                orders=[{\"api_key\":\"gusat281627asa827382gasg177n79\",\"api_secret\":\"d872s766suwys78s7aji78673sads\",\"broker\":\"ab\",\"symbol\":\"YESBANK-EQ\",\"exchange\":\"NSE\",\"pricetype\":\"MARKET\",\"quantity\":1,\"action\":\"BUY\",\"squareoff\":\"2\",\"stoploss\":\"2\",\"trailing_stoploss\":\"1\"},{\"api_key\":\"aji7827382gasgd87273sads177n79\",\"api_secret\":\"628162gusats766suwys78s77asa8\",\"broker\":\"tc\",\"symbol\":\"BHEL-EQ\",\"exchange\":\"NSE\",\"pricetype\":\"LIMIT\",\"quantity\":1,\"price\":\"75.5\",\"action\":\"BUY\",\"squareoff\":\"2\",\"stoploss\":\"2\",\"trailing_stoploss\":\"1\"}]\r\n\r\n                algomojo.PlaceMultiBOOrder(orders) \r\n\r\n\r\n### 9. PlaceMultiFOOptionsOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                PlaceMultiFOOptionsOrder(broker,spot_symbol,expiry_date,action,product,pricetype,quantity,price,option_type,strike_int)\r\n        \r\n        Function with all parametrs:       \r\n                PlaceMultiFOOptionsOrder(broker,spot_symbol,expiry_date,action,product,pricetype,quantity,price,option_type,strike_int\r\n                        strategy,offset,trigger_price,splitorder,split_quantity,api_key,api_secret)\r\n                \r\n        Sample : \r\n\r\n                orders=[{\"api_key\":\"gusat281627asa827382gasg177n79\",\"api_secret\":\"d872s766suwys78s7aji78673sads\",\"broker\":\"ab\",\"strategy\":\"Python Example\",\"spot_symbol\":\"NIFTY\",\"expiry_date\":\"23FEB\",\"action\":\"BUY\",\"product\":\"NRML\",\"pricetype\":\"MARKET\",\"quantity\":\"150\",\"price\":\"0\",\"option_type\":\"CE\",\"strike_int\":\"50\",\"offset\":\"-2\",\"splitorder\":\"NO\",\"split_quantity\":\"50\"},{\"api_key\":\"aji7827382gasgd87273sads177n79\",\"api_secret\":\"628162gusats766suwys78s77asa8\",\"broker\":\"tc\",\"spot_symbol\":\"NIFTY\",\"expiry_date\":\"02MAR23\",\"action\":\"BUY\", \"product\":\"NRML\",\"pricetype\":\"MARKET\", \"quantity\":\"150\",\"option_type\":\"CE\",\"strike_int\":\"50\",\"offset\":\"-2\",\"splitorder\":\"YES\",\"split_quantity\":\"50\"}]\r\n\r\n                algomojo.PlaceMultiFOOptionsOrder(orders) \r\n\r\n### 10. ModifyOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                ModifyOrder(broker,symbol,exchange,order_id,action,product,pricetype,quantity,price)\r\n        \r\n        Function with all parametrs:       \r\n                ModifyOrder(broker,symbol,exchange,order_id,action,product,pricetype,quantity,price,\r\n                        strategy,disclosed_quantity,trigger_price,strategy,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.ModifyOrder(broker=\"ab\",\r\n                                     exchange=\"NSE\",\r\n                                     symbol=\"YESBANK-EQ\",\r\n                                     order_id=\"200010639230213\",\r\n                                     action=\"BUY\",\r\n                                     product=\"CNC\",\r\n                                     pricetype=\"LIMIT\",\r\n                                     price=\"16.65\",\r\n                                     quantity=\"1\",\r\n                                     disclosed_quantity=\"0\",\r\n                                     trigger_price=\"0\",\r\n                                     strategy=\"Python Example\") \r\n\r\n### 11. CancelOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                CancelOrder(broker,order_id)\r\n        \r\n        Function with all parametrs:       \r\n                CancelOrder(broker,order_id,strategy,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.CancelOrder(broker=\"ab\",strategy=\"Python Example\",\r\n                                        order_id=\"230001063923021\") \r\n\r\n### 12. CancelAllOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                CancelAllOrder(broker)\r\n        \r\n        Function with all parametrs:       \r\n                CancelAllOrder(broker,strategy,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.CancelAllOrder(broker=\"ab\",strategy=\"Python Example\") \r\n\r\n### 13. OrderHistory:  \r\n\r\n        Function with mandatory parmeters: \r\n                OrderHistory(broker,order_id)\r\n        \r\n        Function with all parametrs:       \r\n                OrderHistory(broker,order_id,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.OrderHistory(broker=\"ab\",\r\n                                order_id=\"230001063923021\") \r\n\r\n### 14. OrderBook:  \r\n\r\n        Function with mandatory parmeters: \r\n                OrderBook(broker)\r\n        \r\n        Function with all parametrs:       \r\n                OrderBook(broker,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.OrderBook(broker=\"ab\")  \r\n\r\n### 15. OrderStatus:  \r\n\r\n        Function with mandatory parmeters: \r\n                OrderStatus(broker,order_id)\r\n        \r\n        Function with all parametrs:       \r\n                OrderStatus(broker,order_id,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.OrderStatus(broker=\"ab\",\r\n                                order_id=\"230001063923021\")\r\n\r\n### 16. TradeBook:  \r\n\r\n        Function with mandatory parmeters: \r\n                TradeBook(broker)\r\n        \r\n        Function with all parametrs:       \r\n                TradeBook(broker,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.TradeBook(broker=\"ab\")  \r\n\r\n### 17. PositionBook:  \r\n\r\n        Function with mandatory parmeters: \r\n                PositionBook(broker)\r\n        \r\n        Function with all parametrs:       \r\n                PositionBook(broker,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.PositionBook(broker=\"ab\") \r\n\r\n### 18. OpenPositions:  \r\n\r\n        Function with mandatory parmeters: \r\n                OpenPositions(broker)\r\n        \r\n        Function with all parametrs:       \r\n                OpenPositions(broker,symbol,product,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.OpenPositions(broker=\"ab\",\r\n                                        symbol= \"YESBANK-EQ\",\r\n                                         exchange=\"NSE\",\r\n                                        product=\"CNC\")\r\n                                        product=\"CNC\")\r\n\r\n### 19. AllPositions:  \r\n\r\n        Function with mandatory parmeters: \r\n                OpenPositions(broker)\r\n        \r\n        Function with all parametrs:       \r\n                OpenPositions(broker,symbol,product,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.AllPositions(broker=\"ab\",\r\n                                        symbol= \"YESBANK-EQ\",\r\n                                         exchange=\"NSE\",\r\n                                        product=\"CNC\")\r\n                                        product=\"CNC\")\r\n\r\n### 20. SquareOffPosition:  \r\n\r\n        Function with mandatory parmeters: \r\n                SquareOffPosition(broker,exchange,symbol,product)\r\n        \r\n        Function with all parametrs:       \r\n                SquareOffPosition(broker,exchange,symbol,product,strategy,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.SquareOffPosition(broker=\"ab\",\r\n                                        exchange=\"NSE\",\r\n                                        product=\"CNC\",\r\n                                        symbol= \"IDEA-EQ\",\r\n                                        strategy=\"Python Example\")\r\n\r\n### 21. SquareOffAllPosition:  \r\n\r\n        Function with mandatory parmeters: \r\n                SquareOffAllPosition(broker)\r\n        \r\n        Function with all parametrs:       \r\n                SquareOffAllPosition(broker,strategy,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.SquareOffAllPosition(broker=\"ab\",strategy=\"Python Example\")) \r\n\r\n### 22. Holdings:  \r\n\r\n        Function with mandatory parmeters: \r\n                Holdings(broker)\r\n        \r\n        Function with all parametrs:       \r\n                Holdings(broker,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.Holdings(broker=\"ab\") \r\n\r\n### 23. Funds:  \r\n\r\n        Function with mandatory parmeters: \r\n                Funds(broker)\r\n        \r\n        Function with all parametrs:       \r\n                Funds(broker,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.Funds(broker=\"ab\") \r\n\r\n### 24. ExitBOOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                ExitBOOrder(broker,order_id)\r\n        \r\n        Function with all parametrs:       \r\n                ExitBOOrder(broker,order_id,strategy,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.ExitBOOrder(broker=\"ab\",\r\n                                order_id=\"230001063923021\",\r\n                                strategy=\"Python Example\")) \r\n\r\n### 25. ExitCOOrder:  \r\n\r\n        Function with mandatory parmeters: \r\n                ExitCOOrder(broker,order_id)\r\n        \r\n        Function with all parametrs:       \r\n                ExitCOOrder(broker,order_id,strategy,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.ExitCOOrder(broker=\"ab\",\r\n                                order_id=\"230001063923021\",\r\n                                strategy=\"Python Example\")) \r\n\r\n### 26. GetQuote:  \r\n\r\n        Function with mandatory parmeters: \r\n                GetQuote(broker,exchange,symbol)\r\n        \r\n        Function with all parametrs:       \r\n                GetQuote(broker,exchange,symbol,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.GetQuote(broker=\"ab\",\r\n                                exchange=\"NSE\",\r\n                                symbol= \"IDEA-EQ\")\r\n\r\n### 27. Profile:  \r\n\r\n        Function with mandatory parmeters: \r\n                Profile(broker)\r\n        \r\n        Function with all parametrs:       \r\n                Profile(broker,api_key,api_secret)\r\n                \r\n        Sample :        \r\n                algomojo.Profile(broker=\"ab\") \r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://algomojo.com/docs/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "algomojo",
    "package_url": "https://pypi.org/project/algomojo/",
    "platform": null,
    "project_url": "https://pypi.org/project/algomojo/",
    "project_urls": {
      "Homepage": "https://algomojo.com/docs/"
    },
    "release_url": "https://pypi.org/project/algomojo/1.4/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Algomojo - Arrow API Python Client V1",
    "version": "1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17441247,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66d7da17835ac164d4c70652d8a027ae1171154f0533c33af2c7f68cb407113e",
          "md5": "76a65c162fb803665fc0cc96ed65b7b4",
          "sha256": "090afa570cba0b83502332a843340dc8ceba9638bf9a4814321072384753b5b5"
        },
        "downloads": -1,
        "filename": "algomojo-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76a65c162fb803665fc0cc96ed65b7b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6454,
        "upload_time": "2020-11-13T15:07:33",
        "upload_time_iso_8601": "2020-11-13T15:07:33.572102Z",
        "url": "https://files.pythonhosted.org/packages/66/d7/da17835ac164d4c70652d8a027ae1171154f0533c33af2c7f68cb407113e/algomojo-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d60f43b9f2865a7db2ba48d8367a8e6cde8952a135b2fe9fa3d02648c14feb1",
          "md5": "35eeafe52263de7930e229bb27f8e5d4",
          "sha256": "50cdfcc30451e9241298f1ec6a4330647eae3a5ec425fd5e863d12e72f751142"
        },
        "downloads": -1,
        "filename": "algomojo-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "35eeafe52263de7930e229bb27f8e5d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5946,
        "upload_time": "2020-11-13T15:07:35",
        "upload_time_iso_8601": "2020-11-13T15:07:35.207367Z",
        "url": "https://files.pythonhosted.org/packages/3d/60/f43b9f2865a7db2ba48d8367a8e6cde8952a135b2fe9fa3d02648c14feb1/algomojo-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37a6fb61d6168094063cec390c3cf109798ec486ec62e7b622ff32db80607bed",
          "md5": "cda15ed412031352a1e03edc32a6fcf0",
          "sha256": "f562e1103bcb187335606beaffc27ec79885c411fbf3acfa5e543c944569f3f5"
        },
        "downloads": -1,
        "filename": "algomojo-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cda15ed412031352a1e03edc32a6fcf0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9422,
        "upload_time": "2023-02-14T09:48:07",
        "upload_time_iso_8601": "2023-02-14T09:48:07.532137Z",
        "url": "https://files.pythonhosted.org/packages/37/a6/fb61d6168094063cec390c3cf109798ec486ec62e7b622ff32db80607bed/algomojo-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b22c959ab4e26b9c594c0af8014035aaf952cfc773e66b4ec3027c432bac910f",
          "md5": "e81946916ef58206211e700585212b60",
          "sha256": "093fc92e654b18bece9f7eabb7d5bf2bc4b56e85d1b464fa666322946c129f3e"
        },
        "downloads": -1,
        "filename": "algomojo-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e81946916ef58206211e700585212b60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12529,
        "upload_time": "2023-02-14T09:48:09",
        "upload_time_iso_8601": "2023-02-14T09:48:09.776141Z",
        "url": "https://files.pythonhosted.org/packages/b2/2c/959ab4e26b9c594c0af8014035aaf952cfc773e66b4ec3027c432bac910f/algomojo-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "096c1bdded9ab3b00096b78484af853b8e1b7b2cb0c4ac9089da28fb3d9f0989",
          "md5": "9dbf09247bb8ecd6592bec82c5a7af02",
          "sha256": "70b727ab82d5515f955a064f6d3c49738ce9ae26571879a7419ef608bfd1c037"
        },
        "downloads": -1,
        "filename": "algomojo-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9dbf09247bb8ecd6592bec82c5a7af02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9420,
        "upload_time": "2023-02-16T09:23:58",
        "upload_time_iso_8601": "2023-02-16T09:23:58.068661Z",
        "url": "https://files.pythonhosted.org/packages/09/6c/1bdded9ab3b00096b78484af853b8e1b7b2cb0c4ac9089da28fb3d9f0989/algomojo-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "356de887fd3590f57ba524dddfc3dd54aea927abe2af50eb250f110b5a9432cf",
          "md5": "205f404c8b9d26836ca4ae7f84c0502e",
          "sha256": "2902a5555f4cf0a19fc15604c17bc5b995d1310d86c0d5ba8228f1c93dae85de"
        },
        "downloads": -1,
        "filename": "algomojo-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "205f404c8b9d26836ca4ae7f84c0502e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12537,
        "upload_time": "2023-02-16T09:24:06",
        "upload_time_iso_8601": "2023-02-16T09:24:06.470211Z",
        "url": "https://files.pythonhosted.org/packages/35/6d/e887fd3590f57ba524dddfc3dd54aea927abe2af50eb250f110b5a9432cf/algomojo-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a2ce453eddba117a8f897f35f34fe9c3012ed686b811cd56fecceabe1518531",
          "md5": "31915c74e3319cb88fae10e198a494a7",
          "sha256": "818a7b1a6bf797395c60eda2f465612763951535f6dfc5775e7caf579831db2e"
        },
        "downloads": -1,
        "filename": "algomojo-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "31915c74e3319cb88fae10e198a494a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9553,
        "upload_time": "2023-03-25T09:48:56",
        "upload_time_iso_8601": "2023-03-25T09:48:56.564862Z",
        "url": "https://files.pythonhosted.org/packages/0a/2c/e453eddba117a8f897f35f34fe9c3012ed686b811cd56fecceabe1518531/algomojo-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b01822fe7929f3de60a8d469a6921547310fda3599063b29bb4f2411bfef3ca6",
          "md5": "dae9505eaffc831f82b9e09d426f030b",
          "sha256": "83411327edceb5d1b1dd9b5455b6b77b69d9a3353b617214addbfe0a3426f591"
        },
        "downloads": -1,
        "filename": "algomojo-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dae9505eaffc831f82b9e09d426f030b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12679,
        "upload_time": "2023-03-25T09:48:58",
        "upload_time_iso_8601": "2023-03-25T09:48:58.884344Z",
        "url": "https://files.pythonhosted.org/packages/b0/18/22fe7929f3de60a8d469a6921547310fda3599063b29bb4f2411bfef3ca6/algomojo-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72d0d66b9e15ef7418d94c24f5ccdace6dc158a8e543053370833ddccbc0b8da",
          "md5": "e1acfbc4812756f8dbaee98884b5e508",
          "sha256": "3b4d0677914269d23dae848ca7ac81e052e5ef149567927698bec29a91d73f6d"
        },
        "downloads": -1,
        "filename": "algomojo-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1acfbc4812756f8dbaee98884b5e508",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9566,
        "upload_time": "2023-03-25T10:30:30",
        "upload_time_iso_8601": "2023-03-25T10:30:30.925524Z",
        "url": "https://files.pythonhosted.org/packages/72/d0/d66b9e15ef7418d94c24f5ccdace6dc158a8e543053370833ddccbc0b8da/algomojo-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0044addde30825fac32233e9f438c2487a8f256b0ce7877eaa1caefd25f747e6",
          "md5": "82ed6cae42cc66cd328635194e6a3b01",
          "sha256": "be6a70b5290bac591bc8c061a949eda0dc6aa24183a294baf8fec37344d6a454"
        },
        "downloads": -1,
        "filename": "algomojo-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "82ed6cae42cc66cd328635194e6a3b01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12712,
        "upload_time": "2023-03-25T10:30:33",
        "upload_time_iso_8601": "2023-03-25T10:30:33.288483Z",
        "url": "https://files.pythonhosted.org/packages/00/44/addde30825fac32233e9f438c2487a8f256b0ce7877eaa1caefd25f747e6/algomojo-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56bff320536edb7e9b9367c7c6d408c684b1e6adbadcdb133fca031f5415bfed",
          "md5": "71871426050e9e2cb4d9e8ca3a99ad21",
          "sha256": "dc39bce7d2b3fd8b03becd3bc1c591449c65c5a5976e0cc66754020a5ea19e1c"
        },
        "downloads": -1,
        "filename": "algomojo-1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71871426050e9e2cb4d9e8ca3a99ad21",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9568,
        "upload_time": "2023-03-25T10:38:01",
        "upload_time_iso_8601": "2023-03-25T10:38:01.848648Z",
        "url": "https://files.pythonhosted.org/packages/56/bf/f320536edb7e9b9367c7c6d408c684b1e6adbadcdb133fca031f5415bfed/algomojo-1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf2a1497491be536564e197d4abf21164936a05211936ed17c31c28fb334494e",
          "md5": "7aa9413c9184d5fdd6d069d8ab1b97a3",
          "sha256": "2f25946783070dc68b7ba6465b54792cee82de28db7b2a3016f54c3306b93d11"
        },
        "downloads": -1,
        "filename": "algomojo-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7aa9413c9184d5fdd6d069d8ab1b97a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12700,
        "upload_time": "2023-03-25T10:38:04",
        "upload_time_iso_8601": "2023-03-25T10:38:04.203504Z",
        "url": "https://files.pythonhosted.org/packages/bf/2a/1497491be536564e197d4abf21164936a05211936ed17c31c28fb334494e/algomojo-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56bff320536edb7e9b9367c7c6d408c684b1e6adbadcdb133fca031f5415bfed",
        "md5": "71871426050e9e2cb4d9e8ca3a99ad21",
        "sha256": "dc39bce7d2b3fd8b03becd3bc1c591449c65c5a5976e0cc66754020a5ea19e1c"
      },
      "downloads": -1,
      "filename": "algomojo-1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "71871426050e9e2cb4d9e8ca3a99ad21",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9568,
      "upload_time": "2023-03-25T10:38:01",
      "upload_time_iso_8601": "2023-03-25T10:38:01.848648Z",
      "url": "https://files.pythonhosted.org/packages/56/bf/f320536edb7e9b9367c7c6d408c684b1e6adbadcdb133fca031f5415bfed/algomojo-1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf2a1497491be536564e197d4abf21164936a05211936ed17c31c28fb334494e",
        "md5": "7aa9413c9184d5fdd6d069d8ab1b97a3",
        "sha256": "2f25946783070dc68b7ba6465b54792cee82de28db7b2a3016f54c3306b93d11"
      },
      "downloads": -1,
      "filename": "algomojo-1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "7aa9413c9184d5fdd6d069d8ab1b97a3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12700,
      "upload_time": "2023-03-25T10:38:04",
      "upload_time_iso_8601": "2023-03-25T10:38:04.203504Z",
      "url": "https://files.pythonhosted.org/packages/bf/2a/1497491be536564e197d4abf21164936a05211936ed17c31c28fb334494e/algomojo-1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}