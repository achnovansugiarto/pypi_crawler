{
  "info": {
    "author": "alfiandecker2",
    "author_email": "<lcfhershell@tutanota.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Cython",
      "Programming Language :: Python"
    ],
    "description": "This technique uses scraping technique with the help of beautifullsoup lib, and API Web, and\nfree API WEB 30 by 1 user. \n\n###PYWEATHERS\n```````````````````````````````````````````````\nfrom NetMet import PyWeathers\n\nweathers = PyWeathers(\"Hello\")\nweathers.___create___(\"5b50f623ddc14b6c91573722222404\") #auth\n\nweathers.q_parameter(\"Jakarta\") #set city\nweathers.days(2) #1-7 day\nweathers.lang #map languages\nweathers.lang = \"javanese\" #set languages\n\nweathers._requests(weathers.urls(\"forecast\"))\n```````````````````````````````````````````````\n\n\n###PYNEWS\n```````````````````````````````````````````````\nfrom NetMet import PyNews\n#------- Method 1\n\nnews = PyNews(\"The Best Movie\")\nnews.params(country=\"AS\", by_date=news.by_date(\"2021 12 23\", \"daterange\")) #you cant add parameter tags=\"sss\"\nnews.official\nnews.dork(\"google\")\nnews.post(site='nbcnews.com')\nnews.result.json() or news.result.text() or news.result.html() or news.result.pdf()\n\n#---OR---- Method 2\n\nparameter = {\n'tags':'Healthy',\n'q': 'Healthy burger',\n'country': 'AS',\n'sites': 'nbcnews.com',\n'dork': 'yahoo'\n}\n\nnews = PyNews(params=parameter)\nnews.official\nnews.post()\nnews.result.json() or news.result.text() or news.result.html() or news.result.pdf()\n\n#and  just info : news.post(proxies=\"AS\") and news.params(tags=\"hotdog\")\n```````````````````````````````````````````````\n\nWarning if you use the params function (in method 1), you can't do it again and an error will occur except. \nFor loading time depends on your internet speed, standard time of page search : google 1.3s, bing 1.42s, duckgo 2.1s and yahoo 1.27s.\n\nyou can \n\n------------------------------------------------------------------------------------------\n\n\n\n###IP Calculator\n```````````````````````````````````````````````\nfrom NetMet import IPCall_A, IPCall_B\n\n#manipulate Net\nchild = IPCall_A #Public Class\nnetwork = IPCall_B #Private Class\n\nprint(\"Call function using public class\")\nfor i in range(3):\n    for ipv4 in child.IPv4(i):\n         print(\"IPv4:\", ipv4)\n    for ipv6 in child.IPv6(i):\n         print(\"IPv6:\", ipv6)\n    print(\"MacAddresss:\", child.MacAddresss(),\"\\n\")\ni = 0\nprint(\"\\nCall function using private class\")\nfor i in range(3):\n    for ipv4 in network.IPv4(i):\n         print(\"IPv4:\", ipv4) \n    for ipv6 in network.IPv6(i):\n         print(\"IPv6:\", ipv6)\n    print(\"MacAddresss:\", network.MacAddresss(),\"\\n\")\n\nipv4 = \"192.222.02.1\"\nipv6 = \"f18d:5980:50d1::cf2d\"\n\nprint(\"Check Version and Class Ip addresses\")\nprint(\"IP version:\", child.Validate_IP(ipv4))\nprint(\"IPv4 Class:\",  child.IPv4_Class(ipv4))\nprint(\"\\nIP version:\", child.Validate_IP(ipv6))\nprint(\"IPv6 Class:\",  child.IPv6_Class(ipv6))\nprint(\"\\nManipulate IPv4 :\")\nfor x in range(1, 33):\n   child.IPv4_Calculator(\"{}/{}\".format(ipv4, x))\n   print(child.saving.output)\nprint(\"\\nManipulate IPv6 :\")\nipv6range = \"{}/{}\".format(ipv6, 21)\nchild.IPv6_Calculator(ipv6range)\nprint(child.saving.output)\n\n```````````````````````````````````````````````\n\n###Topologhy Offline\n```````````````````````````````````````````````\nfrom NetMet import Topologhy\nhost = Topologhy\n//make token\nhost._token(ipv4, 12)\n//set hostrot\nhost.server\nhost.server = \"Online\"//online\n//router\nhost.router()\n//make client v1(vuln token)\nhost.clients_v1(None, host.saving.pinbus)//vuln by access token and custum client\nhost.clients_v2()//random private token and auto generate\n\nhost.switch_s = \"192.222.02.1 192.222.02.3\"\nhost.Hypermedia_Host(\"192.222.02.2\")//test connection\n```````````````````````````````````````````````\n\nIf you find any bugs/problems, please contact email:\n      **LCFHERSHELL@TUTANOTA.COM** or **alfiandecker2@gmail.com**\n\nHappy coding :). Sorry, my English is very bad\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LcfherShell/NetMet.git",
    "keywords": "MITM,Manipulate,IPAddress,Network-Calculate,NetMet,PyNews,PyWeathers",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "NetMet",
    "package_url": "https://pypi.org/project/NetMet/",
    "platform": null,
    "project_url": "https://pypi.org/project/NetMet/",
    "project_urls": {
      "Homepage": "https://github.com/LcfherShell/NetMet.git"
    },
    "release_url": "https://pypi.org/project/NetMet/1.0.3/",
    "requires_dist": null,
    "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
    "summary": "",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13668190,
  "releases": {
    "1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad9abf9899aa93dfe650a80712e96bf8cbba8b73aa44654466f1c009dd1770fb",
          "md5": "2151c7ff8412dd98a59f69254fa9bae1",
          "sha256": "76de9275b0d2237ebe9f5134f83b4f70fbc7f38920363ad1b3809f2739543881"
        },
        "downloads": -1,
        "filename": "NetMet-1.tar.gz",
        "has_sig": false,
        "md5_digest": "2151c7ff8412dd98a59f69254fa9bae1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
        "size": 20189,
        "upload_time": "2022-04-29T17:41:52",
        "upload_time_iso_8601": "2022-04-29T17:41:52.965195Z",
        "url": "https://files.pythonhosted.org/packages/ad/9a/bf9899aa93dfe650a80712e96bf8cbba8b73aa44654466f1c009dd1770fb/NetMet-1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe9c894cde4838337004f6b192e3503a23df8f3547ac98127043e81cdc8cb47b",
          "md5": "b51bca1c79f5c2f402f2fc4873277b54",
          "sha256": "e39eeba8c42c899251fc3a335e5981521f070b1c76cf753027459ee7abc46fe0"
        },
        "downloads": -1,
        "filename": "NetMet-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b51bca1c79f5c2f402f2fc4873277b54",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
        "size": 25450,
        "upload_time": "2022-04-29T19:12:17",
        "upload_time_iso_8601": "2022-04-29T19:12:17.392517Z",
        "url": "https://files.pythonhosted.org/packages/fe/9c/894cde4838337004f6b192e3503a23df8f3547ac98127043e81cdc8cb47b/NetMet-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c44ec7ff39ce91b022910eb8d257572939e864fd0fcc464e9de3e1603b61a6e2",
          "md5": "03f443b4a0d6780728710212cc65af9b",
          "sha256": "172074abf557d56ca7c61980b6e867e1a3f36cce1d7c7d1eb481099339b8aa58"
        },
        "downloads": -1,
        "filename": "NetMet-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "03f443b4a0d6780728710212cc65af9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
        "size": 23745,
        "upload_time": "2022-04-29T19:12:20",
        "upload_time_iso_8601": "2022-04-29T19:12:20.306801Z",
        "url": "https://files.pythonhosted.org/packages/c4/4e/c7ff39ce91b022910eb8d257572939e864fd0fcc464e9de3e1603b61a6e2/NetMet-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe9c894cde4838337004f6b192e3503a23df8f3547ac98127043e81cdc8cb47b",
        "md5": "b51bca1c79f5c2f402f2fc4873277b54",
        "sha256": "e39eeba8c42c899251fc3a335e5981521f070b1c76cf753027459ee7abc46fe0"
      },
      "downloads": -1,
      "filename": "NetMet-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b51bca1c79f5c2f402f2fc4873277b54",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
      "size": 25450,
      "upload_time": "2022-04-29T19:12:17",
      "upload_time_iso_8601": "2022-04-29T19:12:17.392517Z",
      "url": "https://files.pythonhosted.org/packages/fe/9c/894cde4838337004f6b192e3503a23df8f3547ac98127043e81cdc8cb47b/NetMet-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c44ec7ff39ce91b022910eb8d257572939e864fd0fcc464e9de3e1603b61a6e2",
        "md5": "03f443b4a0d6780728710212cc65af9b",
        "sha256": "172074abf557d56ca7c61980b6e867e1a3f36cce1d7c7d1eb481099339b8aa58"
      },
      "downloads": -1,
      "filename": "NetMet-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "03f443b4a0d6780728710212cc65af9b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
      "size": 23745,
      "upload_time": "2022-04-29T19:12:20",
      "upload_time_iso_8601": "2022-04-29T19:12:20.306801Z",
      "url": "https://files.pythonhosted.org/packages/c4/4e/c7ff39ce91b022910eb8d257572939e864fd0fcc464e9de3e1603b61a6e2/NetMet-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}