{
  "info": {
    "author": "melvin kaye",
    "author_email": "one.two.four.cee.four.one.plus@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Cee EXtensions Interpolation\n\ncexi aims to facilitate developing of [C extension](https://docs.python.org/3/extending/extending.html) for [CPython](https://github.com/python/cpython)\nmain goal is to allow one to mix python an C code within single file\n\ncurrently lib is WIP, unstable, undocumented & not nearly polished and\nnot extensively, yet you can enjoy some fancy examples below\n\n\n### SPAM!\n\n```python\n# mimicking https://docs.python.org/3/extending/extending.html#a-simple-example\n\nfrom cexi import Extension, to\n\nspam = Extension('spam')\n\n\n@spam.unpacked\ndef spam_system(self, args: to(command=str)):\n    '''\n    int sts = system(command);\n    return PyLong_FromLong(sts);\n    '''\n\n\nsystem = spam_system\nspam.oneshot()  # compilation happens here\n\nassert system('true') == 0\nassert system('false') != 1\n\nassert issubclass(spam.error, Exception)\n```\n\n\nwill generate following C code\n\n```C\n#define PY_SSIZE_T_CLEAN\n#include <Python.h>\n\nstatic PyObject* SpamError;\n\nstatic PyObject*\nspam_system(PyObject* self, PyObject* args)\n{\n    char * command;\n    if (!PyArg_ParseTuple(args, \"s\", &command)) {\n        return NULL;\n    };\n    int sts = system(command);\n    return PyLong_FromLong(sts);\n}\n\n\nstatic PyMethodDef SpamMethods[] = {\n    {\"spam_system\", spam_system, METH_VARARGS, NULL},\n    {NULL, NULL, 0, NULL}\n};\n\nstatic struct PyModuleDef spammodule = {\n    PyModuleDef_HEAD_INIT,\n    \"spam\",\n    NULL,\n    -1,\n    SpamMethods\n};\n\nPyMODINIT_FUNC\nPyInit_spam(void)\n{\n    PyObject* spam;\n    spam = PyModule_Create(&spammodule);\n    SpamError = PyErr_NewException(\"spam.error\", NULL, NULL);\n    Py_XINCREF(SpamError);\n    if (PyModule_AddObject(spam, \"error\", SpamError) < 0) {\n        Py_XDECREF(SpamError);\n        Py_CLEAR(SpamError);\n        Py_DECREF(spam);\n        return NULL;\n    };\n\n    PyObject* cexi_code_revision = Py_BuildValue(\"s\", CEXI_CODE_REVISION);\n    Py_XINCREF(cexi_code_revision);\n    if (PyModule_AddObject(spam, \"cexi_code_revision\", cexi_code_revision) < 0) {\n        Py_XDECREF(cexi_code_revision);\n        Py_CLEAR(cexi_code_revision);\n        Py_DECREF(spam);\n        return NULL;\n    };\n    return spam;\n};\n```\n\n\n### pure C functions in extensions functions\n\n```python\nfrom cexi import Extension\n\nmix = Extension()  # name will be generated automatically\n\n\n@mix.cee\ndef add(a: int, b: int):  # pure C function, return type defaults to int\n    'return a + b;'\n\n\n@mix.py\ndef add2(self, args):  # default C ext function, default types (object, object) -> object\n    '''\n    int right = 0, ret = 0;\n    PyObject* ret_obj = NULL;\n\n    if (!PyArg_ParseTuple(args, \"i\", &right))\n        return NULL;\n\n    ret = add(2, right);\n\n    ret_obj = Py_BuildValue(\"i\", ret);\n    Py_INCREF(ret_obj);\n    return ret_obj;\n    '''\n\n\nwith mix:  # compile & load extension if needed\n    assert 4 == add2(2)\n```\n\n\n### using python functions in c extension functions\n\n```python\nfrom cexi import Extension, to, uses\n\nmix = Extension()\n\n\n@mix.pyc\ndef add(a: int, b: int) -> int:\n    return a + b\n\n\n@mix.pyc\ndef add_and_mul(a: int, b: int) -> (int, int):\n    return (a + b, a * b)\n\n\n@mix.unpacked\ndef test(self, args: to(left=int, right=int)):\n    '''\n    int r1 = 0, r2 = 0, r3 = 0; // results\n    add(left, right, &r1);\n    add_and_mul(left, right, &r2, &r3);\n    PyObject* result = Py_BuildValue(\"iii\", r1, r2, r3);\n    Py_XINCREF(result);\n    return result;\n    '''\n\n\nwith mix:\n    assert (5, 5, 6) == test(2, 3) == (add(2, 3), *add_and_mul(2, 3))\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/one-two-four-cee-four-one-plus/cexi",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cexi",
    "package_url": "https://pypi.org/project/cexi/",
    "platform": "",
    "project_url": "https://pypi.org/project/cexi/",
    "project_urls": {
      "Homepage": "https://github.com/one-two-four-cee-four-one-plus/cexi"
    },
    "release_url": "https://pypi.org/project/cexi/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Cee EXtensions Interpolation",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10809072,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb997e03b118f3900677927563f1044a875a77298a840380a0d120e0f09cb534",
          "md5": "a6496a8fe10feb3cb8c57b821259d541",
          "sha256": "e179c169313444a14fb83bf413d4598698d808a9410ed7417e77e1df9c4ed73f"
        },
        "downloads": -1,
        "filename": "cexi-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6496a8fe10feb3cb8c57b821259d541",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 5608,
        "upload_time": "2021-06-29T15:28:09",
        "upload_time_iso_8601": "2021-06-29T15:28:09.494898Z",
        "url": "https://files.pythonhosted.org/packages/cb/99/7e03b118f3900677927563f1044a875a77298a840380a0d120e0f09cb534/cexi-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7e3efc2032d6dd2225e176fdaf86c6f60df32711acb8ff176d8d7c5cfb27521",
          "md5": "f5b6f1df0d2998c8b2075e0f7c25b844",
          "sha256": "7a8d0c64243fe5111346f8e0d6175175269026b4b7b10511c0c913a0a817c5e5"
        },
        "downloads": -1,
        "filename": "cexi-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f5b6f1df0d2998c8b2075e0f7c25b844",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 5004,
        "upload_time": "2021-06-29T15:28:11",
        "upload_time_iso_8601": "2021-06-29T15:28:11.205424Z",
        "url": "https://files.pythonhosted.org/packages/d7/e3/efc2032d6dd2225e176fdaf86c6f60df32711acb8ff176d8d7c5cfb27521/cexi-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22930cf3f893fc78a11a3e4e3059c57a2187f9adad724da0aa0dfc86cf98c8fc",
          "md5": "8476ba2f81016e9a2b789cfad07421f0",
          "sha256": "a10b4e30b35e1bb076af981e37555c4d667214f089a341c374e4485692ec390a"
        },
        "downloads": -1,
        "filename": "cexi-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8476ba2f81016e9a2b789cfad07421f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 10950,
        "upload_time": "2021-07-02T16:58:32",
        "upload_time_iso_8601": "2021-07-02T16:58:32.431042Z",
        "url": "https://files.pythonhosted.org/packages/22/93/0cf3f893fc78a11a3e4e3059c57a2187f9adad724da0aa0dfc86cf98c8fc/cexi-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2948ceb93ea502983bf7f2680aa496ff80f719389d58b9bcd1dfc31a43e5866",
          "md5": "171ea738988d083c6a8e673115b6b61d",
          "sha256": "07d6097f2a82af6f59a0f8993dd51047fe74693c5b0993482265b1ed889a7ae3"
        },
        "downloads": -1,
        "filename": "cexi-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "171ea738988d083c6a8e673115b6b61d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 10625,
        "upload_time": "2021-07-02T16:58:34",
        "upload_time_iso_8601": "2021-07-02T16:58:34.135947Z",
        "url": "https://files.pythonhosted.org/packages/c2/94/8ceb93ea502983bf7f2680aa496ff80f719389d58b9bcd1dfc31a43e5866/cexi-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22930cf3f893fc78a11a3e4e3059c57a2187f9adad724da0aa0dfc86cf98c8fc",
        "md5": "8476ba2f81016e9a2b789cfad07421f0",
        "sha256": "a10b4e30b35e1bb076af981e37555c4d667214f089a341c374e4485692ec390a"
      },
      "downloads": -1,
      "filename": "cexi-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8476ba2f81016e9a2b789cfad07421f0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 10950,
      "upload_time": "2021-07-02T16:58:32",
      "upload_time_iso_8601": "2021-07-02T16:58:32.431042Z",
      "url": "https://files.pythonhosted.org/packages/22/93/0cf3f893fc78a11a3e4e3059c57a2187f9adad724da0aa0dfc86cf98c8fc/cexi-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2948ceb93ea502983bf7f2680aa496ff80f719389d58b9bcd1dfc31a43e5866",
        "md5": "171ea738988d083c6a8e673115b6b61d",
        "sha256": "07d6097f2a82af6f59a0f8993dd51047fe74693c5b0993482265b1ed889a7ae3"
      },
      "downloads": -1,
      "filename": "cexi-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "171ea738988d083c6a8e673115b6b61d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 10625,
      "upload_time": "2021-07-02T16:58:34",
      "upload_time_iso_8601": "2021-07-02T16:58:34.135947Z",
      "url": "https://files.pythonhosted.org/packages/c2/94/8ceb93ea502983bf7f2680aa496ff80f719389d58b9bcd1dfc31a43e5866/cexi-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}