{
  "info": {
    "author": "Roberto Barile, Francesco Benedetti, Carlo Parisi, Mattia Patruno",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![Build Status](https://travis-ci.com/m3ttiw/orange_cb_recsys.svg?branch=master)](https://travis-ci.com/m3ttiw/orange_cb_recsys)&nbsp;&nbsp;[![Coverage Status](https://coveralls.io/repos/github/m3ttiw/orange_cb_recsys/badge.png?branch=master)](https://coveralls.io/github/m3ttiw/orange_cb_recsys?branch=master)&nbsp;&nbsp;![Docker Cloud Build Status](https://img.shields.io/docker/cloud/build/rbarile17/framework_dependencies)&nbsp;&nbsp;[![Python 3.8](https://img.shields.io/badge/python-3.8-blue.svg)](https://www.python.org/downloads/release/python-382/)\n\n# Orange_cb_recsys\n\nFramework for content-based recommender system\n\nInstallation\n=============\n``\npip install orange-cb-recsys\n``\n\n[PyLucene](https://lucene.apache.org/pylucene/) is required and will not be installed like other dependencies, you will need to install it personally.\n\nYou also need to manualy copy in the installing directory the files runnable_instances.xz e categories.xz that you can find in source directory\n\nUsage\n=====\nThere are two types of use for this framework\nIt can be used through API or through the use of a config file\n\nAPI Usage\n---------\nThe use through API is the classic use of a library, classes and methods are used by invoking them.\n\nExample: \n\n![Example](img/run.PNG)\n\n\nConfig Usage\n------------\nThe use through the config file is an automated use.\n\nJust indicate which algorithms you want to use and change variables where necessary without having to call classes or methods\nThis use is intended for users who want to use many framework features.\n\n[Config File](https://github.com/m3ttiw/orange_cb_recsys/blob/master/orange_cb_recsys/content_analyzer/config.json)\n\nWe can see in the Config File an example of using the framework with this methodology.\n\nAs mentioned above, you need to change certain variables in order to allow the framework to work properly, here are some examples of these variables:\n\n    \"content_type\": \"ITEM\"\nThis can be ITEM, USER or RATING depending on what you are using\n\n    \"output_directory\": \"movielens_test\"\nYou can change this value in any output directory you want to get\n\n    \"raw_source_path\": \"../../datasets/movies_info_reduced.json\" \nThis is the source of the ITEM, USER or RATING file that you are using\n\n    \"source_type\": \"json\"\nHere you can specify the source_type, this can be JSON, CSV or SQL\n\n    \"id_field_name\": [\"imdbID\", \"Title\"]\nSpecify the field name of the ID\n\n    \"search_index\": \"True\"\nTrue if you want to use the text indexing technique, otherwise False\n\n    \"fields\": [\n    {\n      \"field_name\": \"Plot\",\n      \"lang\": \"EN\",\n      \"memory_interface\": \"None\",\n      \"memory_interface_path\": \"None\",\nIn the \"field\" field you can specify the name of the field on which to use the technique, its language and the memory interface\n\nThe language will be specified for each field, so it will be possible to insert a single file to index ITEM or USER in many languages\n\n    \"pipeline_list\": [\n        {\n        \"field_content_production\": {\"class\": \"search_index\"},\n        \"preprocessing_list\": [\n          ]\n        },\n        {\n        \"field_content_production\": {\"class\": \"embedding\",\n          \"combining_technique\": {\"class\":  \"centroid\"},\n          \"embedding_source\": {\"class\": \"binary_file\", \"file_path\": \"../../datasets/doc2vec/doc2vec.bin\", \"embedding_type\":  \"doc2vec\"},\n          \"granularity\": \"doc\"},\n        \"preprocessing_list\": [\n          {\"class\": \"nltk\", \"url_tagging\":\"True\", \"strip_multiple_whitespaces\": \"True\"}\n          ]\n        },\n        {\n        \"field_content_production\": {\"class\": \"lucene_tf-idf\"},\n        \"preprocessing_list\": [\n          {\"class\": \"nltk\", \"lemmatization\": \"True\"}\n          ]\n        }\nHere instead it is possible to define the pipeline:\n\nFor each field you can create many representations, as in this example search_index, embedding and tf-idf.\n\nFor each representation we can specify the preprocessing list to be used.\n\nFor example, for the tf-idf the nltk class is used which analyzes the natural language and the lemmatization is done\n\nWhen using nltk these are the variables that can be changed: stopwords_removal, stemming, lemmatization, strip_multiple_white_space and url_tagging\n\nWhen specifying embedding as field_content_production one must also specify the combining_technique which is currently only centroid, the source of the embedding and the granularity of it which can be word, doc and sentence\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/m3ttiw/orange_cb_recsys",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "orange-cb-recsys",
    "package_url": "https://pypi.org/project/orange-cb-recsys/",
    "platform": "",
    "project_url": "https://pypi.org/project/orange-cb-recsys/",
    "project_urls": {
      "Homepage": "https://github.com/m3ttiw/orange_cb_recsys"
    },
    "release_url": "https://pypi.org/project/orange-cb-recsys/3.0/",
    "requires_dist": [
      "pandas (==1.0.5)",
      "PyYAML (==5.3.1)",
      "numpy (==1.18.4)",
      "gensim (==3.8.3)",
      "nltk (==3.5)",
      "babelpy (==1.0.1)",
      "mysql (==0.0.2)",
      "mysql-connector-python (==8.0.20)",
      "wikipedia2vec (==1.0.4)",
      "sklearn (==0.0)",
      "SPARQLWrapper (==1.8.5)",
      "textblob (==0.15.3)",
      "matplotlib (==3.2.2)",
      "pywsd (==1.2.4)"
    ],
    "requires_python": ">=3.8",
    "summary": "Python Framework for Content-Based Recommeder Systems",
    "version": "3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7709211,
  "releases": {
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41647cdf18e87668ebad075d35293b2406f63205326b163490d31cd9e3a5adbc",
          "md5": "35f1009e6787b7a868fdd0265c535de7",
          "sha256": "3274e2abb178b68f56376b0698cb61b1bacb9469480ab42676984baa4d90a1cb"
        },
        "downloads": -1,
        "filename": "orange_cb_recsys-3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35f1009e6787b7a868fdd0265c535de7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 136261,
        "upload_time": "2020-07-15T20:54:52",
        "upload_time_iso_8601": "2020-07-15T20:54:52.395123Z",
        "url": "https://files.pythonhosted.org/packages/41/64/7cdf18e87668ebad075d35293b2406f63205326b163490d31cd9e3a5adbc/orange_cb_recsys-3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c6248fa834a8466a67aa79dc34be5a03c9b8da7a2cb4d059ffaaa0deffa2d90",
          "md5": "642cb184085217dd13a794648b2b2378",
          "sha256": "93406a8d8564927401e9ae122935b0a70f1d5b54cce9dadc84da1990d9c35664"
        },
        "downloads": -1,
        "filename": "orange_cb_recsys-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "642cb184085217dd13a794648b2b2378",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 82021,
        "upload_time": "2020-07-15T20:54:54",
        "upload_time_iso_8601": "2020-07-15T20:54:54.005781Z",
        "url": "https://files.pythonhosted.org/packages/2c/62/48fa834a8466a67aa79dc34be5a03c9b8da7a2cb4d059ffaaa0deffa2d90/orange_cb_recsys-3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41647cdf18e87668ebad075d35293b2406f63205326b163490d31cd9e3a5adbc",
        "md5": "35f1009e6787b7a868fdd0265c535de7",
        "sha256": "3274e2abb178b68f56376b0698cb61b1bacb9469480ab42676984baa4d90a1cb"
      },
      "downloads": -1,
      "filename": "orange_cb_recsys-3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "35f1009e6787b7a868fdd0265c535de7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 136261,
      "upload_time": "2020-07-15T20:54:52",
      "upload_time_iso_8601": "2020-07-15T20:54:52.395123Z",
      "url": "https://files.pythonhosted.org/packages/41/64/7cdf18e87668ebad075d35293b2406f63205326b163490d31cd9e3a5adbc/orange_cb_recsys-3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c6248fa834a8466a67aa79dc34be5a03c9b8da7a2cb4d059ffaaa0deffa2d90",
        "md5": "642cb184085217dd13a794648b2b2378",
        "sha256": "93406a8d8564927401e9ae122935b0a70f1d5b54cce9dadc84da1990d9c35664"
      },
      "downloads": -1,
      "filename": "orange_cb_recsys-3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "642cb184085217dd13a794648b2b2378",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 82021,
      "upload_time": "2020-07-15T20:54:54",
      "upload_time_iso_8601": "2020-07-15T20:54:54.005781Z",
      "url": "https://files.pythonhosted.org/packages/2c/62/48fa834a8466a67aa79dc34be5a03c9b8da7a2cb4d059ffaaa0deffa2d90/orange_cb_recsys-3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}