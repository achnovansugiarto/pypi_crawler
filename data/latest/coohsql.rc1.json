{
  "info": {
    "author": "HB",
    "author_email": "huabing8023@126.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# CooHSQL\n### 介绍：\n\n***\n\n##### 伪装 Slave 获取 MySQL binlog 从中解析到你想要的 SQL 语句，可以得到原始 SQL、回滚 SQL 语句。\n\n### 用途：\n\n***\n\n* 数据库快速回滚(DML闪回) \n* 配合其它备份工具恢复数据\n* 可以自己定制 binlog 衍生功能\n\n### 环境：\n\n***\n\n##### MySQL 数据库中设置相关参数：\n\n```shell\n[mysqld]\nserver_id = 1\nlog_bin = /var/log/mysql/mysql-bin.log\nmax_binlog_size = 1G\nbinlog_format = row\nbinlog_row_image = full\n```\n\n##### CooHSQL 需要安装的依赖环境\n\n```shell\npython 3.6+\nMySQL 5.7+\nPyMySQL >= 0.7.11\nwheel >= 0.29.0\nmysql-replication >= 0.13\n```\n\n### 演示：\n\n***\n\n##### 测试一：测试环境数据库 School.Student 表设计如下：\n\n```sql\ndesc Student;\n```\n\n| Field | Type          | Null | Key  | Default | Extra |\n| :---- | :------------ | :--- | :--- | :------ | :---- |\n| SId   | varchar\\(10\\) | YES  |      | NULL    |       |\n| Sname | varchar\\(10\\) | YES  |      | NULL    |       |\n| Sage  | datetime      | YES  |      | NULL    |       |\n| Ssex  | varchar\\(10\\) | YES  |      | NULL    |       |\n\n```sql\nselect * from Student;\n```\n\n| SId  | Sname | Sage                | Ssex |\n| :--- | :---- | :------------------ | :--- |\n| 01   | 赵雷  | 1990-01-01 00:00:00 | 男   |\n| 02   | 钱电  | 1990-12-21 00:00:00 | 男   |\n| 03   | 孙风  | 1990-12-20 00:00:00 | 男   |\n| 04   | 李云  | 1990-12-06 00:00:00 | 男   |\n| 05   | 周梅  | 1991-12-01 00:00:00 | 女   |\n| 06   | 吴兰  | 1992-01-01 00:00:00 | 女   |\n\n```sql\n-- update 语句忘记写条件, 导致整张表被修改\nupdate Student set Ssex = '女';\n\n-- 查看表数据, Sexx 已经全被修改\nselect * from Student;\n```\n\n| SId  | Sname | Sage                | Ssex |\n| :--- | :---- | :------------------ | :--- |\n| 01   | 赵雷  | 1990-01-01 00:00:00 | 女   |\n| 02   | 钱电  | 1990-12-21 00:00:00 | 女   |\n| 03   | 孙风  | 1990-12-20 00:00:00 | 女   |\n| 04   | 李云  | 1990-12-06 00:00:00 | 女   |\n| 05   | 周梅  | 1991-12-01 00:00:00 | 女   |\n| 06   | 吴兰  | 1992-01-01 00:00:00 | 女   |\n\n```python\nfrom CooHSQL.CooHSQL import CooHSQL\n\n# mysql 连接参数\nmysql_settings = {\n    'host': '127.0.01',\n    'port': 3306,\n    'user': 'root',\n    'password': 'coohsql'\n}\n\nCooHSQL = CooHSQL(mysql_settings, start_file='mysql-bin.000001', start_pos=143228)\nCooHSQL.process_binlog()  # 加工 binlog 输出回滚语句\n```\n\n```sql\nUPDATE `school`.`Student` SET `SId`=04,`Sname`='李云',`Sage`='1990-12-06 00:00:00',`Ssex`='男' WHERE `SId`=04 and `Sname`='李云' and `Sage`='1990-12-06 00:00:00' and `Ssex`='女';\n\nUPDATE `school`.`Student` SET `SId`=03,`Sname`='孙风',`Sage`='1990-12-20 00:00:00',`Ssex`='男' WHERE `SId`=03 and `Sname`='孙风' and `Sage`='1990-12-20 00:00:00' and `Ssex`='女';\n\nUPDATE `school`.`Student` SET `SId`=02,`Sname`='钱电',`Sage`='1990-12-21 00:00:00',`Ssex`='男' WHERE `SId`=02 and `Sname`='钱电' and `Sage`='1990-12-21 00:00:00' and `Ssex`='女';\n\nUPDATE `school`.`Student` SET `SId`=01,`Sname`='赵雷',`Sage`='1990-01-01 00:00:00',`Ssex`='男' WHERE `SId`=01 and `Sname`='赵雷' and `Sage`='1990-01-01 00:00:00' and `Ssex`='女';\n```\n\n| SId  | Sname | Sage                | Ssex |\n| :--- | :---- | :------------------ | :--- |\n| 1    | 赵雷  | 1990-01-01 00:00:00 | 男   |\n| 2    | 钱电  | 1990-12-21 00:00:00 | 男   |\n| 3    | 孙风  | 1990-12-20 00:00:00 | 男   |\n| 4    | 李云  | 1990-12-06 00:00:00 | 男   |\n| 05   | 周梅  | 1991-12-01 00:00:00 | 女   |\n| 06   | 吴兰  | 1992-01-01 00:00:00 | 女   |\n\n***\n\n##### 测试二：mode 参数两种用法\n\n```sql\nselect * from Student;\n```\n\n| SId  | Sname | Sage                | Ssex |\n| :--- | :---- | :------------------ | :--- |\n| 1    | 赵雷  | 1990-01-01 00:00:00 | 男   |\n| 2    | 钱电  | 1990-12-21 00:00:00 | 男   |\n| 3    | 孙风  | 1990-12-20 00:00:00 | 男   |\n| 4    | 李云  | 1990-12-06 00:00:00 | 男   |\n| 05   | 周梅  | 1991-12-01 00:00:00 | 女   |\n| 06   | 吴兰  | 1992-01-01 00:00:00 | 女   |\n\n```sql\n-- 插入 李华 信息\ninsert into Student value (07, '李华', '1992-01-01', '男');\n```\n\nmode = \"flashback\" 时生成的回滚语句，可以将李华的信息删除。\n\n```sql\nDELETE FROM `school`.`Student` WHERE `SId`=7 and `Sname`='李华' and `Sage`='1992-01-01 00:00:00' and `Ssex`='男';\n```\n\nmode = \"dump\" 时是直接从 binlog 中翻译出原 SQL 语句。\n\n```sql\nINSERT INTO `school`.`Student`(SId,Sname,Sage,Ssex) VALUE (07,'李华','1992-01-01 00:00:00','男');\n```\n\n### 参数：\n\n***\n\n* **mysql_settings**：mysql 的连接信息 ip 地址、用户名、密码、端口格式如下：\n\n  ```python\n  mysql_settings = {\n      'host': '127.0.01',\n      'port': 3306,\n      'user': 'root',\n      'password': 'coohsql'\n  }\n  ```\n\n  ```sql\n  -- 建议授权\n  GRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO \n  ```\n  \n* **max_filtration**：语句中的 where 条件最长字符数量，这个比较难理解，先看一条 update 语句：\n\n  ```sql\n  UPDATE `school`.`SC` SET `SId`=10,`CId`=4,`score`=100.0 WHERE `SId`=10 and `CId`=4 and `score`=99.0;\n  ```\n\n  可以看到有 **where** 等式条件，如果这个等式特别大比如：**digest=“此处省去1000字”**  这样的等式无意义，虽然优化器也绝对不会使用，但是导出过程比较占用空间，所以在组成 **where** **条件等式**时，会进行筛选，默认少于 20 字符，可以组成 where **条件等式**。**max_filtration** 就是来避免使用大字段组成 **where 条件等式** 如果有特殊情况可以自行调整它。\n\n* **start_file**：与 **start_pos** 参数配合使用，需要解析的 binlog 日志文件，如果不指定会读取全部 binlog 如果数据量比较大，建议先确定一个范围，目前版本不支持多文件读取，未来 1.5 版本会添加多文件读取，敬请期待！\n\n  ```sql\n  -- 查看正在使用的 binlog 文件和 log_pos\n  show master logs;\n  ```\n\n  | Log\\_name        | File\\_size |\n  | :--------------- | :--------- |\n  | mysql-bin.000001 | 1461120    |\n  | mysql-bin.000002 | 132332     |\n\n  如果 show master logs 可以查看当前使用的 binlog 文件，可以看到 mysql-bin.000001 已经弃用，如果解析的数据量比较小，那么直接指定 start_file 为 mysql-bin.000002 避免加载多余的数据。\n\n* **start_pos**：与 **start_file** 参数配合使用，binlog 日志中的 log_pos 起点，可以更加准确的定位到需要解析或者回滚到数据。默认不指定，建议先使用 **show binlog events** 确定大概范围，可以提升解析速度。\n\n* **event_schemas**：需要解析或者回滚的数据库，默认为 None 则解析全部数据库，如果指定数据库，则只加载相关的数据库。\n\n* **event_tables**：需要解析或回滚的数据表，配合 **event_schemas** 一起使用，可以定位到数据表。\n\n* **mode**：属于 **process_binlog** 中的参数，有两种 binlog 的解析方式 flashback 和 dump \n\n  * flashback：生成回滚 SQL 语句，默认。\n  * dump：翻译 binlog 生成 SQL 语句。\n\n* **server_id**：CooHSQL 伪装为 slave 所以需要 **server_id** 默认为 8023 如果重复请自行修改此参数。\n\n* **start_time**：开始时间，通过时间来过滤 binlog 日志生成某个时间段你需要的 SQL 格式为 1990-01-01 00:00:00。\n\n* **stop_time**：结束时间，通过时间来过滤 binlog 日志生成某个时间段你需要的 SQL 格式为 1990-01-01 00:00:00。\n\n### 后记：\n\n目前只能应用于 DML 语句回滚，不支持 DDL 语句。目前项目处于维护测试阶段，将不断完善，敬请期待！\n\n### 已经 BUG\n\n在空值和时间字典组成的 where 条件中可能会出现异常。将来未来 1.5 版本中修复。\n\n### 联系：\n\n如有任何问题，发送到我的邮箱：huabing8023@126.com",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DooBeDooBa/CooHSQL",
    "keywords": "",
    "license": "LICENSE",
    "maintainer": "HB",
    "maintainer_email": "",
    "name": "CooHSQL",
    "package_url": "https://pypi.org/project/CooHSQL/",
    "platform": "",
    "project_url": "https://pypi.org/project/CooHSQL/",
    "project_urls": {
      "Homepage": "https://github.com/DooBeDooBa/CooHSQL"
    },
    "release_url": "https://pypi.org/project/CooHSQL/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "Apply flashback with DML",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7558424,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03c6b844893d48554d2a24fa25bea194a670771c97afe2c23aa94945ab685762",
          "md5": "9866c551f0e3bfe6606b0b0bfc625362",
          "sha256": "ce72de215c92a1c6963cbf202f3ba868936b9ed87415ee1b6888a26297494f7d"
        },
        "downloads": -1,
        "filename": "CooHSQL-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9866c551f0e3bfe6606b0b0bfc625362",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 7581,
        "upload_time": "2020-06-25T07:09:57",
        "upload_time_iso_8601": "2020-06-25T07:09:57.569540Z",
        "url": "https://files.pythonhosted.org/packages/03/c6/b844893d48554d2a24fa25bea194a670771c97afe2c23aa94945ab685762/CooHSQL-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03c6b844893d48554d2a24fa25bea194a670771c97afe2c23aa94945ab685762",
        "md5": "9866c551f0e3bfe6606b0b0bfc625362",
        "sha256": "ce72de215c92a1c6963cbf202f3ba868936b9ed87415ee1b6888a26297494f7d"
      },
      "downloads": -1,
      "filename": "CooHSQL-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9866c551f0e3bfe6606b0b0bfc625362",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 7581,
      "upload_time": "2020-06-25T07:09:57",
      "upload_time_iso_8601": "2020-06-25T07:09:57.569540Z",
      "url": "https://files.pythonhosted.org/packages/03/c6/b844893d48554d2a24fa25bea194a670771c97afe2c23aa94945ab685762/CooHSQL-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}