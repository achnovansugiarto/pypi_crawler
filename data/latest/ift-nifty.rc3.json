{
  "info": {
    "author": "Theo Steininger",
    "author_email": "theos@mpa-garching.mpg.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "NIFTY - Numerical Information Field Theory\n==========================================\n\n**NIFTY** project homepage: `<http://www.mpa-garching.mpg.de/ift/nifty/>`_\n\nSummary\n-------\n\nDescription\n...........\n\n**NIFTY**, \"\\ **N**\\umerical **I**\\nformation **F**\\ield **T**\\heor\\ **y**\\ \",\nis a versatile library designed to enable the development of signal inference\nalgorithms that operate regardless of the underlying spatial grid and its\nresolution. Its object-oriented framework is written in Python, although it\naccesses libraries written in Cython, C++, and C for efficiency.\n\nNIFTY offers a toolkit that abstracts discretized representations of continuous\nspaces, fields in these spaces, and operators acting on fields into classes.\nThereby, the correct normalization of operations on fields is taken care of\nautomatically without concerning the user. This allows for an abstract\nformulation and programming of inference algorithms, including those derived\nwithin information field theory. Thus, NIFTY permits its user to rapidly\nprototype algorithms in 1D, and then apply the developed code in\nhigher-dimensional settings of real world problems. The set of spaces on which\nNIFTY operates comprises point sets, *n*-dimensional regular grids, spherical\nspaces, their harmonic counterparts, and product spaces constructed as\ncombinations of those.\n\nClass & Feature Overview\n........................\n\nThe NIFTY library features three main classes: **spaces** that represent\ncertain grids, **fields** that are defined on spaces, and **operators** that\napply to fields.\n\n*   `Spaces <http://www.mpa-garching.mpg.de/ift/nifty/space.html>`_\n\n    *   ``point_space`` - unstructured list of points\n    *   ``rg_space`` - *n*-dimensional regular Euclidean grid\n    *   ``lm_space`` - spherical harmonics\n    *   ``gl_space`` - Gauss-Legendre grid on the 2-sphere\n    *   ``hp_space`` - `HEALPix <http://sourceforge.net/projects/healpix/>`_\n        grid on the 2-sphere\n    *   ``nested_space`` - arbitrary product of grids\n\n*   `Fields <http://www.mpa-garching.mpg.de/ift/nifty/field.html>`_\n\n    *   ``field`` - generic class for (discretized) fields\n\n::\n\n    field.cast_domain   field.hat           field.power        field.smooth\n    field.conjugate     field.inverse_hat   field.pseudo_dot   field.tensor_dot\n    field.dim           field.norm          field.set_target   field.transform\n    field.dot           field.plot          field.set_val      field.weight\n\n*   `Operators <http://www.mpa-garching.mpg.de/ift/nifty/operator.html>`_\n\n    *   ``diagonal_operator`` - purely diagonal matrices in a specified basis\n    *   ``projection_operator`` - projections onto subsets of a specified basis\n    *   ``vecvec_operator`` - matrices derived from the outer product of a\n        vector\n    *   ``response_operator`` - exemplary responses that include a convolution,\n        masking and projection\n    *   ``propagator_operator`` - information propagator in Wiener filter theory\n    *   ``explicit_operator`` - linear operators with an explicit matrix\n        representation\n    *   (and more)\n\n* (and more)\n\n*Parts of this summary are taken from* [1]_ *without marking them explicitly as\nquotations.*\n\nInstallation\n------------\n\nRequirements\n............\n\n*   `Python <http://www.python.org/>`_ (v2.7.x)\n\n    *   `NumPy <http://www.numpy.org/>`_ \n    *   `SciPy <http://www.scipy.org/>`_\n    *   `Cython <http://cython.org/>`_\n    *   `matplotlib <http://matplotlib.org/>`_\n    \n*   `GFFT <https://github.com/mrbell/gfft>`_ (v0.1.0) - Generalized Fast\n    Fourier Transformations for Python - **optional**\n\n*   `HEALPy <https://github.com/healpy/healpy>`_ (v1.8.1 without openmp) - A\n    Python wrapper for `HEALPix <http://sourceforge.net/projects/healpix/>`_ -\n    **optional, only needed for spherical spaces**\n \n*   `libsharp-wrapper <https://github.com/mselig/libsharp-wrapper>`_ (v0.1.2\n    without openmp) - A Python wrapper for the\n    `libsharp <http://sourceforge.net/projects/libsharp/>`_ library -\n    **optional, only needed for spherical spaces**\n\nDownload\n........\n\nThe latest release is tagged **v1.0.7** and is available as a source package\nat `<https://gitlab.mpcdf.mpg.de/ift/NIFTy/tags>`_. The current\nversion can be obtained by cloning the repository::\n\n    git clone https://gitlab.mpcdf.mpg.de/ift/NIFTy.git\n\nInstallation on Ubuntu\n......................\n\nThis is for you if you want to install NIFTy on your personal computer running \nwith an Ubuntu-like linux system were you have root priviledges. Starting with\na fresh Ubuntu installation move to a folder like ``~/Downloads``:\n\n*    Install basic packages like python, python-dev, gsl and others::\n \n        sudo apt-get install curl git autoconf \n        sudo apt-get install python-dev python-pip gsl-bin libgsl0-dev libfreetype6-dev libpng-dev  libatlas-base-dev gfortran \n\n*    Install matplotlib::\n\n        sudo apt-get install python-matplotlib\n\n*    Using pip install numpy, scipy, etc...::\n\n        sudo pip install numpy scipy cython pyfits healpy\n\n*    Now install the 'non-standard' dependencies. First of all gfft::\n\n        curl -LOk https://github.com/mrbell/gfft/tarball/master \n        tar -xzf master \n        cd mrbell-gfft* \n        sudo python setup.py install \n        cd ..\n\n*    Libsharp::\n\n        git clone http://git.code.sf.net/p/libsharp/code libsharp-code \n        cd libsharp-code \n        sudo autoconf \n        ./configure --enable-pic --disable-openmp \n        sudo make \n        cd ..\n\n*    Libsharpwrapper::\n\n        git clone http://github.com/mselig/libsharp-wrapper.git libsharp-wrapper \n        cd libsharp-wrapper \n        sudo python setup.py build_ext \n        sudo python setup.py install \n        cd ..\n\n*    Finally, NIFTy::\n\n        git clone https://gitlab.mpcdf.mpg.de/ift/NIFTy.git\n        cd nifty\n        sudo python setup.py install \n        cd .. \n\nInstallation on a linux cluster\n...............................\n\nThis is for you if you want to install NIFTy on a HPC machine or cluster that is hosted by your university or institute. Most of the dependencies will most likely already be there, but you won't have superuser priviledges. In this case, instead::\n\n    sudo python setup.py install \n\nuse::\n\n    python setup.py install --user\n\nor::\n\n    python setup.py install --install-lib=/SOMEWHERE\n\n\nin the instruction above. This will install the python packages into your local user directory. \n\nInstallation on OS X 10.11\n..........................\n\nWe advice to install the following packages in the order as they appear below. We strongly recommend to install all needed packages via MacPorts. Please be aware that not all packages are available on MacPorts, missing ones need to be installed manually. It may also be mentioned that one should only use one package manager, as multiple ones may cause trouble.\n\n*    Install basic packages python, scipy, matplotlib and cython::\n\n       sudo port install py27-numpy\n       sudo port install py27-scipy\n       sudo port install py27-matplotlib\n       sudo port install py27-cython\n\n*    Install gfft. **Depending where you installed GSL you may need to change the path in setup.py!**::\n\n        sudo port install gsl\n        git clone https://github.com/mrbell/gfft.git}{https://github.com/mrbell/gfft.git\n        sudo python setup.py install\n\n*    Install healpy::\n\n        sudo port install py27-pyfits\n        git clone https://github.com/healpy/healpy.git\n        cd healpy \n        sudo python setup.py install\n        cd ..\n\n*    Install libsharp and therefore autoconf. \n     Further install instructions for libsharp may be found here: \n     https://sourceforge.net/p/libsharp/code/ci/master/tree/::\n                \n        sudo port install autoconf\n        \n        git clone http://git.code.sf.net/p/libsharp/code libsharp-code \n        cd libsharp-code \n        sudo autoconf \n        ./configure --enable-pic --disable-openmp \n        sudo make \n        cd ..\n        \n*    Install libsharp-wrapper.\n     **Adopt the path of the libsharp installation in setup.py** ::\n\n        sudo port install gcc\n        sudo port select gcc  mp-gcc5\n        git clone https://github.com/mselig/libsharp-wrapper.git\n        cd libsharp-wrapper\n        sudo python setup.py install\n        cd ..\n\n*    Install NIFTy::\n\n        git clone https://gitlab.mpcdf.mpg.de/ift/NIFTy.git\n        cd nifty\n        sudo python setup.py install \n        cd .. \n\nInstallation using pypi\n.......................\n\nNIFTY can be installed using `PyPI <https://pypi.python.org/pypi>`_ and **pip** \nby running the following command::\n\n    pip install ift_nifty\n\nAlternatively, a private or user specific installation can be done by::\n\n    pip install --user ift_nifty\n\n\nFirst Steps\n...........\n\nFor a quickstart, you can browse through the\n`informal introduction <http://www.mpa-garching.mpg.de/ift/nifty/start.html>`_\nor dive into NIFTY by running one of the demonstrations, e.g.::\n\n        >>> run -m nifty.demos.demo_wf1\n\nAcknowledgement\n---------------\n\nPlease, acknowledge the use of NIFTY in your publication(s) by using a phrase\nsuch as the following:\n\n    *\"Some of the results in this publication have been derived using the NIFTY\n    package [Selig et al., 2013].\"*\n\nReferences\n..........\n\n.. [1] Selig et al., \"NIFTY - Numerical Information Field Theory - a\n    versatile Python library for signal inference\",\n    `A&A, vol. 554, id. A26 <http://dx.doi.org/10.1051/0004-6361/201321236>`_,\n    2013; `arXiv:1301.4499 <http://www.arxiv.org/abs/1301.4499>`_\n\nRelease Notes\n-------------\n\nThe NIFTY package is licensed under the\n`GPLv3 <http://www.gnu.org/licenses/gpl.html>`_ and is distributed *without any\nwarranty*.\n\n----\n\n**NIFTY** project homepage: `<http://www.mpa-garching.mpg.de/ift/nifty/>`_\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.mpa-garching.mpg.de/ift/nifty/",
    "keywords": null,
    "license": "GPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "ift_nifty",
    "package_url": "https://pypi.org/project/ift_nifty/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/ift_nifty/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://www.mpa-garching.mpg.de/ift/nifty/"
    },
    "release_url": "https://pypi.org/project/ift_nifty/1.0.8/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Numerical Information Field Theory",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2870445,
  "releases": {
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c141da58ea6592b31c29ca53aec2e72b60f1877e70bd0ba0474e61cb95fa2765",
          "md5": "313724ae6d09e3327b0e7ed17abc9de0",
          "sha256": "273c29b6a98d0d8c618656990f8a0f87100b50e4a610c01b27a9f117c937488f"
        },
        "downloads": -1,
        "filename": "ift_nifty-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "313724ae6d09e3327b0e7ed17abc9de0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 123673,
        "upload_time": "2015-02-12T08:48:19",
        "upload_time_iso_8601": "2015-02-12T08:48:19.878572Z",
        "url": "https://files.pythonhosted.org/packages/c1/41/da58ea6592b31c29ca53aec2e72b60f1877e70bd0ba0474e61cb95fa2765/ift_nifty-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7803057f2177eb1650006f8fd6a2d87fba2b4f4b2d22826fd5404ef39aedc92f",
          "md5": "18538cefb489f2bd93c9102b7e8d346b",
          "sha256": "44a35c29ce060907e01099221bd7501b2219f01a0ab7d3e12e337e5d44d2772b"
        },
        "downloads": -1,
        "filename": "ift-nifty-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "18538cefb489f2bd93c9102b7e8d346b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1649962,
        "upload_time": "2015-07-21T07:26:32",
        "upload_time_iso_8601": "2015-07-21T07:26:32.404463Z",
        "url": "https://files.pythonhosted.org/packages/78/03/057f2177eb1650006f8fd6a2d87fba2b4f4b2d22826fd5404ef39aedc92f/ift-nifty-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b038a15b40b0a419cc4247c647cd3fdccabedbee6c84ff4d4b9403f7485fc83",
          "md5": "59a75b46253a882bde5b2f960dfe5f2c",
          "sha256": "2d77fcc99a2ba671fc2d80ff5bcae4174c99d31a9738da98d77f2f3d9832348a"
        },
        "downloads": -1,
        "filename": "ift-nifty-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "59a75b46253a882bde5b2f960dfe5f2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1651740,
        "upload_time": "2016-07-12T09:30:43",
        "upload_time_iso_8601": "2016-07-12T09:30:43.621447Z",
        "url": "https://files.pythonhosted.org/packages/5b/03/8a15b40b0a419cc4247c647cd3fdccabedbee6c84ff4d4b9403f7485fc83/ift-nifty-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b038a15b40b0a419cc4247c647cd3fdccabedbee6c84ff4d4b9403f7485fc83",
        "md5": "59a75b46253a882bde5b2f960dfe5f2c",
        "sha256": "2d77fcc99a2ba671fc2d80ff5bcae4174c99d31a9738da98d77f2f3d9832348a"
      },
      "downloads": -1,
      "filename": "ift-nifty-1.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "59a75b46253a882bde5b2f960dfe5f2c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1651740,
      "upload_time": "2016-07-12T09:30:43",
      "upload_time_iso_8601": "2016-07-12T09:30:43.621447Z",
      "url": "https://files.pythonhosted.org/packages/5b/03/8a15b40b0a419cc4247c647cd3fdccabedbee6c84ff4d4b9403f7485fc83/ift-nifty-1.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}