{
  "info": {
    "author": "Paulo Roberto <paulo.rb.beserra@gmail.com>",
    "author_email": "paulo.rb.beserra@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Framework :: AsyncIO",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "\n---\n<p align=\"center\"><a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n  <img width=\"256px\" height=\"126px\" src=\"https://i.pinimg.com/originals/fe/32/e0/fe32e0460a44f8ca81ae2a04c89a8116.png\" alt=\"AIO Speedtest\"></a>\n</p>\n\n<p align=\"center\">\n  <b>AIO Speedtest</b> is a library written in Python to perform speed tests asynchronously and programmatically.\n</p>\n\n---\n\nThis project was made based on the existing [Speedtest](https://github.com/sivel/speedtest-cli) from which we shared several code snippets, what I did were few modifications to work asynchronously.\n\n#### Basic Usage\n\n```\nimport asyncio\nfrom aiotestspeed.aio import Speedtest\n\nunits = ('bit', 1)\n\nasync def main():\n    s: Speedtest = await Speedtest()\n    await s.get_best_server()\n    await s.download()\n    await s.upload()\n    print('Ping: %s ms\\nDownload: %0.2f M%s/s\\nUpload: %0.2f M%s/s' %\n          (s.results.ping,\n          (s.results.download / 1000.0 / 1000.0) / units[1],\n          units[0],\n          (s.results.upload / 1000.0 / 1000.0) / units[1],\n          units[0]))\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\nloop.close()\n```\n\n```\nclass Speedtest(aiobject):\n\n    async def __init__(self, config=None, source_address=None, timeout=10, secure=False):\n        ...\n\n    @property\n    async def best(self) -> dict:\n        ...\n\n    async def get_config(self) -> dict:\n        \"\"\"Download the speedtest.net configuration and return only the data\n        we are interested in\n        \"\"\"\n        ...\n\n    async def get_servers(self, servers: list = None, exclude: list = None) -> list:\n        \"\"\"Retrieve a the list of speedtest.net servers, optionally filtered\n        to servers matching those specified in the ``servers`` argument\n        \"\"\"\n        ...\n\n    async def set_mini_server(self, server: str) -> list:\n        \"\"\"Instead of querying for a list of servers, set a link to a\n        speedtest mini server\n        \"\"\"\n        ...\n\n    async def get_closest_servers(self, limit: int = 5) -> None:\n        \"\"\"Limit servers to the closest speedtest.net servers based on\n        geographic distance.\n        \"\"\"\n        ...\n\n    async def get_best_server(self, servers=None) -> dict:\n        \"\"\"Perform a speedtest.net \"ping\" to determine which speedtest.net\n        server has the lowest latency.\n\n        Args:\n            servers ([type], optional): [description]. Defaults to None.\n\n        Raises:\n            SpeedtestBestServerFailure: [description]\n\n        Returns:\n            dict: [description]\n        \"\"\"\n        ...\n\n    async def download(self, callback=do_nothing) -> int:\n        \"\"\"Test download speed against speedtest.net\n\n        Args:\n            callback ([type], optional): [description]. Defaults to do_nothing.\n\n        Returns:\n            int: [description]\n        \"\"\"\n        ...\n\n    async def upload(self, callback=do_nothing, pre_allocate: bool = True) -> int:\n        \"\"\"Test upload speed against speedtest.net\n\n        Args:\n            callback ([type], optional): [description]. Defaults to do_nothing.\n            pre_allocate (bool, optional): [description]. Defaults to True.\n\n        Returns:\n            int: [description]\n        \"\"\"\n        ...\n```\n\n# Changelog\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/py-paulo/aiotestspeed.git",
    "keywords": "aio,python,asyncio,test,io,speed",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiotestspeed",
    "package_url": "https://pypi.org/project/aiotestspeed/",
    "platform": "",
    "project_url": "https://pypi.org/project/aiotestspeed/",
    "project_urls": {
      "GitHub: issues": "https://github.com/py-paulo/aiotestspeed/issues",
      "GitHub: repo": "https://github.com/py-paulo/aiotestspeed",
      "Homepage": "https://github.com/py-paulo/aiotestspeed.git"
    },
    "release_url": "https://pypi.org/project/aiotestspeed/0.0.1/",
    "requires_dist": [
      "click (~=7.1.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "Asynchronous python library to test connection speed, based on the speedtest project.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8721325,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c97f185554fecfeb274126bd794a3515497053049dc3ce0df17e9fe12c81a2e",
          "md5": "1cfc1651021b4144f98d50eeb5bb0822",
          "sha256": "cfbe2436d89c01cdec9dce2698117728525b7ad9f3ec58e8b8541181a5d07cb1"
        },
        "downloads": -1,
        "filename": "aiotestspeed-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1cfc1651021b4144f98d50eeb5bb0822",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20210,
        "upload_time": "2020-11-22T18:13:59",
        "upload_time_iso_8601": "2020-11-22T18:13:59.125549Z",
        "url": "https://files.pythonhosted.org/packages/0c/97/f185554fecfeb274126bd794a3515497053049dc3ce0df17e9fe12c81a2e/aiotestspeed-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11cd1965a0591758659535a97b95dd3cd482c3e0c2795eee3a21758c5eef860f",
          "md5": "7947c8edad1a6f8cb6b1ecb2aa5a818c",
          "sha256": "d66023806763ba0c072711c569a29dbb56817dc6c9976bcb1decd9005877efbf"
        },
        "downloads": -1,
        "filename": "aiotestspeed-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7947c8edad1a6f8cb6b1ecb2aa5a818c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16660,
        "upload_time": "2020-11-22T18:14:00",
        "upload_time_iso_8601": "2020-11-22T18:14:00.576735Z",
        "url": "https://files.pythonhosted.org/packages/11/cd/1965a0591758659535a97b95dd3cd482c3e0c2795eee3a21758c5eef860f/aiotestspeed-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c97f185554fecfeb274126bd794a3515497053049dc3ce0df17e9fe12c81a2e",
        "md5": "1cfc1651021b4144f98d50eeb5bb0822",
        "sha256": "cfbe2436d89c01cdec9dce2698117728525b7ad9f3ec58e8b8541181a5d07cb1"
      },
      "downloads": -1,
      "filename": "aiotestspeed-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1cfc1651021b4144f98d50eeb5bb0822",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20210,
      "upload_time": "2020-11-22T18:13:59",
      "upload_time_iso_8601": "2020-11-22T18:13:59.125549Z",
      "url": "https://files.pythonhosted.org/packages/0c/97/f185554fecfeb274126bd794a3515497053049dc3ce0df17e9fe12c81a2e/aiotestspeed-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11cd1965a0591758659535a97b95dd3cd482c3e0c2795eee3a21758c5eef860f",
        "md5": "7947c8edad1a6f8cb6b1ecb2aa5a818c",
        "sha256": "d66023806763ba0c072711c569a29dbb56817dc6c9976bcb1decd9005877efbf"
      },
      "downloads": -1,
      "filename": "aiotestspeed-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7947c8edad1a6f8cb6b1ecb2aa5a818c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16660,
      "upload_time": "2020-11-22T18:14:00",
      "upload_time_iso_8601": "2020-11-22T18:14:00.576735Z",
      "url": "https://files.pythonhosted.org/packages/11/cd/1965a0591758659535a97b95dd3cd482c3e0c2795eee3a21758c5eef860f/aiotestspeed-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}