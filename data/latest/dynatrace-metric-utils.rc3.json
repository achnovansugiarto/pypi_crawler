{
  "info": {
    "author": "Dynatrace",
    "author_email": "opensource@dynatrace.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: System :: Monitoring"
    ],
    "description": "# dynatrace-metric-utils-python\n\nPython utility for interacting with\nthe [Dynatrace v2 metrics API](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/metric-v2/)\n.\n\n## Installation\n\nTo install the [latest version from PyPI](https://pypi.org/project/dynatrace-metric-utils/) run:\n\n```shell\npip install dynatrace-metric-utils\n```\n\n## Usage\n\nUsing this library to create metric lines is a two-step process. First, create\nlines using the `DynatraceMetricsFactory`. Then, serialize them using\na `DynatraceMetricsSerializer`. Furthermore, this library contains \nconstants for use in projects consuming this library. This repository also\ncontains [an example script](example/example.py) demonstrating the use of\nthe `DynatraceMetricsFactory` and the `DynatraceMetricsSerializer`.\n\n### Metric Creation\n\nTo create metrics, call one of the static methods on\nthe `DynatraceMetricsFactory`. Available instruments are:\n\n- Gauge: `create_int_gauge` / `create_float_gauge`\n- Counter: `create_int_counter_delta` / `create_float_counter_delta`\n- Summary: `create_int_summary` / `create_float_summary`\n\nIn the simplest form, metric creation looks like this:\n\n```python\nfactory = DynatraceMetricsFactory()\nmetric = factory.create_int_gauge(\"int-gauge\", 23)\n```\n\nAdditionally, it is possible to pass a list of dimensions to the metric upon\ncreation:\n\n```python\nmetric_dimensions = {\n    \"dim1\": \"val1\",\n    \"dim2\": \"val2\",\n}\n\nmetric = factory.create_int_gauge(\"int-gauge\", 23, metric_dimensions)\n```\n\nThe dimensions will be added to the serialized metric.\nSee [the section on dimension precedence](#dimension-precedence) for more\ninformation.\n\nFinally, it is also possible to add a timestamp to the metric:\n\n```python\n# Passing None for the dimensions will not add any dimensions to the metric.\n# pass the timestamp as unix-time milliseconds.\nmetric = factory.create_int_gauge(\"int-gauge\", 23, None, time.time() * 1000)\n\n# Alternatively, the dimensions parameter can be skipped and timestamp can be passed as a named parameter.\nmetric = factory.create_int_gauge(\"int-gauge\", 23,\n                                  timestamp=time.time() * 1000)\n```\n\nIf the metric timestamp is omitted or invalid, the Dynatrace server uses its \ncurrent time upon ingestion.\n\n### Metric serialization\n\nThe created metrics can then be serialized using\na `DynatraceMetricsSerializer`:\n\n```python\n# root level logger.\nlogger = logging.getLogger(__name__)\n# The logger is optional. If no logger is specified, a logger will be created.\nfactory = DynatraceMetricsFactory(\n    logger.getChild(DynatraceMetricsFactory.__name__))\n\n# Create a list of default dimensions which are added to all metrics serialized by this serializer.\ndefault_dims = {\n    \"default1\": \"value1\",\n    \"default2\": \"value2\"\n}\n\nserializer = DynatraceMetricsSerializer(\n    logger.getChild(DynatraceMetricsSerializer.__name__),\n    \"prefix\",  # metric key prefix, added to all metric names\n    default_dims,  # default dimensions\n    True,  # whether or not to enrich with Dynatrace metadata\n    \"metric-src\",\n    # the name of the framework that emits the metrics, e.g. 'opentelemetry'\n)\nmetric = factory.create_int_gauge(\"int-gauge\", 23)\nprint(serializer.serialize(metric))\n\n# Should result in a line like: \n# prefix.int-gauge,default1=value1,default2=value2,dt.metrics.source=metric-src gauge,23\n```\n\n### Common constants\n\nThe constants can be accessed via the static `DynatraceMetricsApiConstants` class .\n\nCurrently available constants are:\n\n- the default [local OneAgent metric API endpoint](https://www.dynatrace.com/support/help/how-to-use-dynatrace/metrics/metric-ingestion/ingestion-methods/local-api/) (`default_oneagent_endpoint()`)\n- the limit for how many metric lines can be ingested in one\n  request (`payload_lines_limit()`)\n\n### Dynatrace Metadata enrichment\n\nIf the `enrich_with_dynatrace_metadata` toggle in\nthe `DynatraceMetricsSerializer`\nconstructor is set to `True` (=default), an attempt is made to read Dynatrace metadata. On\na host with a running OneAgent, setting this option will collect metadata and\nadd it as dimensions to all serialized metrics. Metadata typically consist of\nthe Dynatrace host ID and process group ID. More information on the underlying\nfeature that is used by the library can be found in\nthe [Dynatrace documentation](https://www.dynatrace.com/support/help/how-to-use-dynatrace/metrics/metric-ingestion/ingestion-methods/enrich-metrics/).\n\n### Dimension precedence\n\nSince there are multiple levels of dimensions (default, metric-specific,\nserializer-specific) and duplicate keys are not allowed, there is a specified\nprecedence in dimension keys. Default dimensions will be overwritten by\nmetric-specific dimensions, and all dimensions will be overwritten by\nserializer-specific dimensions if they share the same key after normalization.\nSerializer-specific dimensions include\nthe [metadata dimensions](#dynatrace-metadata-enrichment), as well as the\nmetrics source, which is added as a dimension with `dt.metrics.source` as its\nkey if the `metrics_source` is set. Note that the serializer-specific\ndimensions will only\ncontain [dimension keys reserved by Dynatrace](https://www.dynatrace.com/support/help/how-to-use-dynatrace/metrics/metric-ingestion/metric-ingestion-protocol/#syntax).\n\n\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dynatrace-oss/dynatrace-metric-utils-python",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynatrace-metric-utils",
    "package_url": "https://pypi.org/project/dynatrace-metric-utils/",
    "platform": "any",
    "project_url": "https://pypi.org/project/dynatrace-metric-utils/",
    "project_urls": {
      "Download": "https://pypi.org/project/dynatrace-metric-utils/#files",
      "Dynatrace": "https://www.dynatrace.com/",
      "Homepage": "https://github.com/dynatrace-oss/dynatrace-metric-utils-python",
      "Source": "https://github.com/dynatrace-oss/dynatrace-metric-utils-python"
    },
    "release_url": "https://pypi.org/project/dynatrace-metric-utils/0.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Dynatrace Metric Utilities",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15102437,
  "releases": {
    "0.1.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4a92be2f1dbd264e595a48b2ce1fd2e58dbc81d7c933438328ec68da79d008f",
          "md5": "6bf8e5b9cdb5bc8164319ebe8ff066b0",
          "sha256": "323228f7118ffd63740fe9736fa5682208fa084444c08b8e719c36389fc3e4cf"
        },
        "downloads": -1,
        "filename": "dynatrace_metric_utils-0.1.0b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6bf8e5b9cdb5bc8164319ebe8ff066b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19689,
        "upload_time": "2021-10-18T14:14:50",
        "upload_time_iso_8601": "2021-10-18T14:14:50.064882Z",
        "url": "https://files.pythonhosted.org/packages/c4/a9/2be2f1dbd264e595a48b2ce1fd2e58dbc81d7c933438328ec68da79d008f/dynatrace_metric_utils-0.1.0b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3664d40874443604747170e9a5a8e1c0880d58d6ab36dce195c9f8ee61d358a8",
          "md5": "a5741880968164dffb388fdf0e0e327a",
          "sha256": "ec7707958836eec2f50be79534b9e4f98cf5dd21d9a56362de7132e6df07f04c"
        },
        "downloads": -1,
        "filename": "dynatrace-metric-utils-0.1.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "a5741880968164dffb388fdf0e0e327a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15681,
        "upload_time": "2021-10-18T14:14:52",
        "upload_time_iso_8601": "2021-10-18T14:14:52.496518Z",
        "url": "https://files.pythonhosted.org/packages/36/64/d40874443604747170e9a5a8e1c0880d58d6ab36dce195c9f8ee61d358a8/dynatrace-metric-utils-0.1.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c490c3ae17683607f4ecd75d7b55ecd5bd788926f695bf58268731999566714",
          "md5": "2a4de7e9799e29fc4ec33ab168d47fc4",
          "sha256": "67046cda3908f4510cb30ee777ce5eab6c7138b97d1e68e18ee1a3def5e516ab"
        },
        "downloads": -1,
        "filename": "dynatrace_metric_utils-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a4de7e9799e29fc4ec33ab168d47fc4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19650,
        "upload_time": "2022-06-20T14:41:23",
        "upload_time_iso_8601": "2022-06-20T14:41:23.889864Z",
        "url": "https://files.pythonhosted.org/packages/5c/49/0c3ae17683607f4ecd75d7b55ecd5bd788926f695bf58268731999566714/dynatrace_metric_utils-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "356ec186d33e0ba8c6ec2d09ad5243d88cbc7ee27ec33eb52080be6bae28515a",
          "md5": "e126a70abeafb6c20cc57ef2aa93d070",
          "sha256": "706ff3c52de2e0bb8bac400c8ea30da44c81d7ff2811c2ca345b98f5389a29bf"
        },
        "downloads": -1,
        "filename": "dynatrace-metric-utils-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e126a70abeafb6c20cc57ef2aa93d070",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16088,
        "upload_time": "2022-06-20T14:41:25",
        "upload_time_iso_8601": "2022-06-20T14:41:25.018269Z",
        "url": "https://files.pythonhosted.org/packages/35/6e/c186d33e0ba8c6ec2d09ad5243d88cbc7ee27ec33eb52080be6bae28515a/dynatrace-metric-utils-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff795489f9453524f73dddc6ac1cccf0975425884e432d75b0c9cd734826d38b",
          "md5": "1eae39e5a6558e2ad0625ae947cb556e",
          "sha256": "6212b5cf8c21719113a65d2d1087f53588fa27f36cfdad064ef26fd3c658b347"
        },
        "downloads": -1,
        "filename": "dynatrace_metric_utils-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1eae39e5a6558e2ad0625ae947cb556e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19747,
        "upload_time": "2022-09-15T08:45:31",
        "upload_time_iso_8601": "2022-09-15T08:45:31.841478Z",
        "url": "https://files.pythonhosted.org/packages/ff/79/5489f9453524f73dddc6ac1cccf0975425884e432d75b0c9cd734826d38b/dynatrace_metric_utils-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87674828d2eea31fdd726b3282f8cc532b299669d99104903a0bd6f8ed7015bd",
          "md5": "336984003d41e1891983dff1afa4c041",
          "sha256": "dced5b644088585bbb4c73ce5ef6427fb0e36d70f9143dd0bcf09fe5045f79b3"
        },
        "downloads": -1,
        "filename": "dynatrace-metric-utils-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "336984003d41e1891983dff1afa4c041",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16159,
        "upload_time": "2022-09-15T08:45:33",
        "upload_time_iso_8601": "2022-09-15T08:45:33.300864Z",
        "url": "https://files.pythonhosted.org/packages/87/67/4828d2eea31fdd726b3282f8cc532b299669d99104903a0bd6f8ed7015bd/dynatrace-metric-utils-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff795489f9453524f73dddc6ac1cccf0975425884e432d75b0c9cd734826d38b",
        "md5": "1eae39e5a6558e2ad0625ae947cb556e",
        "sha256": "6212b5cf8c21719113a65d2d1087f53588fa27f36cfdad064ef26fd3c658b347"
      },
      "downloads": -1,
      "filename": "dynatrace_metric_utils-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1eae39e5a6558e2ad0625ae947cb556e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 19747,
      "upload_time": "2022-09-15T08:45:31",
      "upload_time_iso_8601": "2022-09-15T08:45:31.841478Z",
      "url": "https://files.pythonhosted.org/packages/ff/79/5489f9453524f73dddc6ac1cccf0975425884e432d75b0c9cd734826d38b/dynatrace_metric_utils-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "87674828d2eea31fdd726b3282f8cc532b299669d99104903a0bd6f8ed7015bd",
        "md5": "336984003d41e1891983dff1afa4c041",
        "sha256": "dced5b644088585bbb4c73ce5ef6427fb0e36d70f9143dd0bcf09fe5045f79b3"
      },
      "downloads": -1,
      "filename": "dynatrace-metric-utils-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "336984003d41e1891983dff1afa4c041",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 16159,
      "upload_time": "2022-09-15T08:45:33",
      "upload_time_iso_8601": "2022-09-15T08:45:33.300864Z",
      "url": "https://files.pythonhosted.org/packages/87/67/4828d2eea31fdd726b3282f8cc532b299669d99104903a0bd6f8ed7015bd/dynatrace-metric-utils-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}