{
  "info": {
    "author": "Aliaksandr Vaskevich",
    "author_email": "vaskevic.an@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering :: GIS"
    ],
    "description": "[![GitHub Actions status for master branch](https://github.com/gb-libs/pydantic-geojson/actions/workflows/main.yml/badge.svg)](https://github.com/gb-libs/pydantic-geojson/actions?query=workflow%3A%22Python+package%22)\n[![Latest PyPI package version](https://badge.fury.io/py/pydantic-geojson.svg)](https://pypi.org/project/pydantic-geojson/)\n[![codecov](https://codecov.io/gh/gb-libs/pydantic-geojson/branch/master/graph/badge.svg?token=8LMKSDQTIR)](https://codecov.io/gh/gb-libs/pydantic-geojson)\n[![Downloads](https://static.pepy.tech/personalized-badge/pydantic-geojson?period=total&units=international_system&left_color=grey&right_color=blue&left_text=Downloads)](https://pepy.tech/project/pydantic-geojson)\n\npydantic-geojson 🌍\n===================\n\n\n| GeoJSON Objects    | Status |\n|--------------------|--------|\n| Point              | ✅      |\n| MultiPoint         | ✅      |\n| LineString         | ✅      |\n| MultiLineString    | ✅      |\n| Polygon            | ✅      |\n| MultiPolygon       | ✅      |\n| GeometryCollection | ✅      |\n| Feature            | ✅      |\n| FeatureCollection  | ✅      |\n\nInstallation\n------------\n\npydantic-geojson is compatible with Python 3.7 and up.\nThe recommended way to install is via [poetry](https://python-poetry.org/):\n\n```\npoetry add pydantic_geojson\n```\n\nUsing pip to install is also possible.\n\n```\npip install pydantic_geojson\n```\n\nGEOJSON\n-------\n\n[GeoJSON](https://geojson.org/) is a format for encoding a variety of geographic data structures.\n\n```\n{\n    \"type\": \"Feature\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [125.6, 10.1]\n    },\n    \"properties\": {\n        \"name\": \"Dinagat Islands\"\n    }\n}\n```\n\nGeoJSON supports the following geometry types: Point, LineString, Polygon,\nMultiPoint, MultiLineString, and MultiPolygon. Geometric objects with\nadditional properties are Feature objects. Sets of features are contained by\nFeatureCollection objects.\n\nExamples of using\n-----------------\n\nCustom properties:\n\n```\nfrom pydantic import BaseModel\nfrom pydantic_geojson import FeatureModel\n\n\nclass MyPropertiesModel(BaseModel):\n    name: str\n\n\nclass MyFeatureModel(FeatureModel):\n    properties: MyPropertiesModel\n\n\ndata = {\n    \"type\": \"Feature\",\n    \"properties\": {\n        \"name\": \"foo name\",\n    },\n    \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n            [\n                [-80.724878, 35.265454],\n                [-80.722646, 35.260338]\n            ]\n        ]\n    }\n}\n\n>>> MyFeatureModel(**data)\n>>> type='Feature' geometry=PolygonModel(type='Polygon', coordinates=[[Coordinates(lon=-80.724878, lat=35.265454), Coordinates(lon=-80.722646, lat=35.260338)]]) properties=MyPropertiesModel(name='foo name')\n```\n\nPoint\n-----\n\nSimple example data:\n\n```\nfrom pydantic_geojson import PointModel\n\ndata = {\n    \"type\": \"Point\",\n    \"coordinates\": [-105.01621, 39.57422]\n}\n\n>>> PointModel(**data)\n>>> type='Point' coordinates=Coordinates(lon=-105.01621, lat=39.57422)\n```\n\nMultiPoint\n----------\n\nSimple example data:\n\n```\nfrom pydantic_geojson import MultiPointModel\n\ndata = {\n    \"type\": \"MultiPoint\",\n    \"coordinates\": [\n        [-105.01621, 39.57422],\n        [-80.666513, 35.053994]\n    ]\n}\n\n>>> PointModel(**data)\n>>> type='MultiPoint' coordinates=[Coordinates(lon=-105.01621, lat=39.57422), Coordinates(lon=-80.666513, lat=35.053994)]\n```\n\nLineString\n----------\n\nSimple example data:\n\n```\nfrom pydantic_geojson import LineStringModel\n\ndata = {\n    \"type\": \"LineString\",\n    \"coordinates\": [\n        [-99.113159, 38.869651],\n        [-99.0802, 38.85682],\n        [-98.822021, 38.85682],\n        [-98.448486, 38.848264]\n    ]\n}\n\n>>> LineStringModel(**data)\n>>> type='LineString' coordinates=[Coordinates(lon=-99.113159, lat=38.869651), Coordinates(lon=-99.0802, lat=38.85682), Coordinates(lon=-98.822021, lat=38.85682), Coordinates(lon=-98.448486, lat=38.848264)]\n```\n\nMultiLineString\n---------------\n\nSimple example data:\n\n```\nfrom pydantic_geojson import MultiLineStringModel\n\ndata = {\n    \"type\": \"MultiLineString\",\n    \"coordinates\": [\n        [\n            [-105.019898, 39.574997],\n            [-105.019598, 39.574898],\n            [-105.019061, 39.574782]\n        ],\n        [\n            [-105.017173, 39.574402],\n            [-105.01698, 39.574385],\n            [-105.016636, 39.574385],\n            [-105.016508, 39.574402],\n            [-105.01595, 39.57427]\n        ],\n        [\n            [-105.014276, 39.573972],\n            [-105.014126, 39.574038],\n            [-105.013825, 39.57417],\n            [-105.01331, 39.574452]\n        ]\n    ]\n}\n\n>>> MultiLineStringModel(**data)\n>>> type='MultiLineString' coordinates=[[Coordinates(lon=-105.019898, lat=39.574997), Coordinates(lon=-105.019598, lat=39.574898), Coordinates(lon=-105.019061, lat=39.574782)], [Coordinates(lon=-105.017173, lat=39.574402), Coordinates(lon=-105.01698, lat=39.574385), Coordinates(lon=-105.016636, lat=39.574385), Coordinates(lon=-105.016508, lat=39.574402), Coordinates(lon=-105.01595, lat=39.57427)], [Coordinates(lon=-105.014276, lat=39.573972), Coordinates(lon=-105.014126, lat=39.574038), Coordinates(lon=-105.013825, lat=39.57417), Coordinates(lon=-105.01331, lat=39.574452)]]\n```\n\nPolygon\n-------\n\nSimple example data:\n\n```\nfrom pydantic_geojson import PolygonModel\n\ndata = {\n    \"type\": \"Polygon\",\n    \"coordinates\": [\n        [\n            [100, 0],\n            [101, 0],\n            [101, 1],\n            [100, 1],\n            [100, 0]\n        ]\n    ]\n}\n\n>>> PolygonModel(**data)\n>>> type='Polygon' coordinates=[[Coordinates(lon=100.0, lat=0.0), Coordinates(lon=101.0, lat=0.0), Coordinates(lon=101.0, lat=1.0), Coordinates(lon=100.0, lat=1.0), Coordinates(lon=100.0, lat=0.0)]]\n```\n\nMultiPolygon\n------------\n\nSimple example data:\n\n```\nfrom pydantic_geojson import MultiPolygonModel\n\ndata = {\n    \"type\": \"MultiPolygon\",\n    \"coordinates\": [\n        [\n            [\n                [107, 7],\n                [108, 7],\n                [108, 8],\n                [107, 8],\n                [107, 7]\n            ]\n        ],\n        [\n            [\n                [100, 0],\n                [101, 0],\n                [101, 1],\n                [100, 1],\n                [100, 0]\n            ]\n        ]\n    ]\n}\n\n>>> MultiPolygonModel(**data)\n>>> type='MultiPolygon' coordinates=[[[Coordinates(lon=107.0, lat=7.0), Coordinates(lon=108.0, lat=7.0), Coordinates(lon=108.0, lat=8.0), Coordinates(lon=107.0, lat=8.0), Coordinates(lon=107.0, lat=7.0)]], [[Coordinates(lon=100.0, lat=0.0), Coordinates(lon=101.0, lat=0.0), Coordinates(lon=101.0, lat=1.0), Coordinates(lon=100.0, lat=1.0), Coordinates(lon=100.0, lat=0.0)]]]\n```\n\nGeometryCollection\n------------------\n\nSimple example data:\n\n```\nfrom pydantic_geojson import GeometryCollectionModel\n\ndata = {\n    \"type\": \"GeometryCollection\",\n    \"geometries\": [\n        {\n            \"type\": \"Point\",\n            \"coordinates\": [-80.660805, 35.049392]\n        },\n        {\n            \"type\": \"Polygon\",\n            \"coordinates\": [\n                [\n                    [-80.664582, 35.044965],\n                    [-80.663874, 35.04428],\n                    [-80.662586, 35.04558],\n                    [-80.663444, 35.046036],\n                    [-80.664582, 35.044965]\n                ]\n            ]\n        },\n        {\n            \"type\": \"LineString\",\n            \"coordinates\": [\n                [-80.662372, 35.059509],\n                [-80.662693, 35.059263],\n                [-80.662844, 35.05893]\n            ]\n        }\n    ]\n}\n\n>>> GeometryCollectionModel(**data)\n>>> type='GeometryCollection' geometries=[PointModel(type='Point', coordinates=Coordinates(lon=-80.660805, lat=35.049392)), PolygonModel(type='Polygon', coordinates=[[Coordinates(lon=-80.664582, lat=35.044965), Coordinates(lon=-80.663874, lat=35.04428), Coordinates(lon=-80.662586, lat=35.04558), Coordinates(lon=-80.663444, lat=35.046036), Coordinates(lon=-80.664582, lat=35.044965)]]), LineStringModel(type='LineString', coordinates=[Coordinates(lon=-80.662372, lat=35.059509), Coordinates(lon=-80.662693, lat=35.059263), Coordinates(lon=-80.662844, lat=35.05893)])]\n```\n\nFeature\n-------\n\nSimple example data:\n\n```\nfrom pydantic_geojson import FeatureModel\n\ndata = {\n    \"type\": \"Feature\",\n    \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n            [\n                [-80.724878, 35.265454],\n                [-80.722646, 35.260338],\n                [-80.720329, 35.260618],\n                [-80.71681, 35.255361],\n                [-80.704793, 35.268397],\n                [-82.715179, 35.267696],\n                [-80.721359, 35.267276],\n                [-80.724878, 35.265454]\n            ]\n        ]\n    }\n}\n\n>>> FeatureModel(**data)\n>>> type='Feature' geometry=PolygonModel(type='Polygon', coordinates=[[Coordinates(lon=-80.724878, lat=35.265454), Coordinates(lon=-80.722646, lat=35.260338), Coordinates(lon=-80.720329, lat=35.260618), Coordinates(lon=-80.71681, lat=35.255361), Coordinates(lon=-80.704793, lat=35.268397), Coordinates(lon=-82.715179, lat=35.267696), Coordinates(lon=-80.721359, lat=35.267276), Coordinates(lon=-80.724878, lat=35.265454)]])\n\n```\n\nFeatureCollection\n-----------------\n\nSimple example data:\n\n```\nfrom pydantic_geojson import FeatureCollectionModel\n\ndata = {\n    \"type\": \"FeatureCollection\",\n    \"features\": [\n        {\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [-80.870885, 35.215151]\n            }\n        },\n        {\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\n                    [\n                        [-80.724878, 35.265454],\n                        [-80.722646, 35.260338],\n                        [-80.720329, 35.260618],\n                        [-80.704793, 35.268397],\n                        [-80.724878, 35.265454]\n                    ]\n                ]\n            }\n        }\n    ]\n}\n\n>>> FeatureCollectionModel(**data)\n>>> type='FeatureCollection' features=[FeatureModel(type='Feature', geometry=PointModel(type='Point', coordinates=Coordinates(lon=-80.870885, lat=35.215151))), FeatureModel(type='Feature', geometry=PolygonModel(type='Polygon', coordinates=[[Coordinates(lon=-80.724878, lat=35.265454), Coordinates(lon=-80.722646, lat=35.260338), Coordinates(lon=-80.720329, lat=35.260618), Coordinates(lon=-80.704793, lat=35.268397), Coordinates(lon=-80.724878, lat=35.265454)]]))]\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gb-libs/pydantic-geojson",
    "keywords": "pydantic,validation,geojson,schema,gis,geo,json,json-schema,rest,fastapi,swagger,openapi",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydantic-geojson",
    "package_url": "https://pypi.org/project/pydantic-geojson/",
    "platform": null,
    "project_url": "https://pypi.org/project/pydantic-geojson/",
    "project_urls": {
      "Documentation": "https://github.com/gb-libs/pydantic-geojson",
      "Homepage": "https://github.com/gb-libs/pydantic-geojson",
      "Repository": "https://github.com/gb-libs/pydantic-geojson"
    },
    "release_url": "https://pypi.org/project/pydantic-geojson/0.0.4/",
    "requires_dist": [
      "pydantic (>=1.9.0,<2.0.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Pydantic validation for GeoJson",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16274247,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26ceda6e081a1373fdd31826b6dec5a85b2da03aebf2c9424e640edf8c0ae103",
          "md5": "1121f17ec24fdfb582da83cf196ef914",
          "sha256": "8ec46bb1aacbc2d67571ba57ed9590291ad7b6956c08e4661e6b6878ec4acdd4"
        },
        "downloads": -1,
        "filename": "pydantic_geojson-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1121f17ec24fdfb582da83cf196ef914",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 8761,
        "upload_time": "2022-01-19T21:14:21",
        "upload_time_iso_8601": "2022-01-19T21:14:21.669372Z",
        "url": "https://files.pythonhosted.org/packages/26/ce/da6e081a1373fdd31826b6dec5a85b2da03aebf2c9424e640edf8c0ae103/pydantic_geojson-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d49c910eaba0bd2a29024101b324924e2fac634c50fa5718864f2f0f14a2bab",
          "md5": "d8bb5fae0e4d16fc04ffb0ed1eb474aa",
          "sha256": "e2936f4243c3f336388f6d8d9d2809e631002d3e2ca191ae53e078187791d8b5"
        },
        "downloads": -1,
        "filename": "pydantic_geojson-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d8bb5fae0e4d16fc04ffb0ed1eb474aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 8514,
        "upload_time": "2022-01-19T21:14:23",
        "upload_time_iso_8601": "2022-01-19T21:14:23.361473Z",
        "url": "https://files.pythonhosted.org/packages/7d/49/c910eaba0bd2a29024101b324924e2fac634c50fa5718864f2f0f14a2bab/pydantic_geojson-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf41752b9c8f1dc8488071de756f8e30e28cf2759fd9ed64f448133747745f4a",
          "md5": "e4b2388667c99ad16824ee34400e0f88",
          "sha256": "53cd79c3bc4223115125b4b0e860d875f3409170161fbba5cc7872bfeeacd549"
        },
        "downloads": -1,
        "filename": "pydantic_geojson-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4b2388667c99ad16824ee34400e0f88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 8734,
        "upload_time": "2022-03-21T20:14:41",
        "upload_time_iso_8601": "2022-03-21T20:14:41.224391Z",
        "url": "https://files.pythonhosted.org/packages/bf/41/752b9c8f1dc8488071de756f8e30e28cf2759fd9ed64f448133747745f4a/pydantic_geojson-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25d67dd4884a08cdef6595e14d2bdc46d59261e200540ed46f2ffb38d29d9019",
          "md5": "b99235b731135c0fe253ac1464bf9f2d",
          "sha256": "0c6d6e6ea70682c23330c8b5b594cf2a791f84713c4639fe9c7ba187f8ea967f"
        },
        "downloads": -1,
        "filename": "pydantic_geojson-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b99235b731135c0fe253ac1464bf9f2d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 8473,
        "upload_time": "2022-03-21T20:14:43",
        "upload_time_iso_8601": "2022-03-21T20:14:43.542285Z",
        "url": "https://files.pythonhosted.org/packages/25/d6/7dd4884a08cdef6595e14d2bdc46d59261e200540ed46f2ffb38d29d9019/pydantic_geojson-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fb58cc1afd2994d5cae440a1a8115b2177669e066a66cc9915f996f99e59f0c",
          "md5": "102fbaae7536baa59810cad47429498a",
          "sha256": "cbdf73cf0afec4ff132ccb7413e46c10ad00ac96f5e4ad2f95a5dfc8fea7b1cc"
        },
        "downloads": -1,
        "filename": "pydantic_geojson-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "102fbaae7536baa59810cad47429498a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 9017,
        "upload_time": "2022-03-27T21:49:31",
        "upload_time_iso_8601": "2022-03-27T21:49:31.827645Z",
        "url": "https://files.pythonhosted.org/packages/0f/b5/8cc1afd2994d5cae440a1a8115b2177669e066a66cc9915f996f99e59f0c/pydantic_geojson-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b6a1e9413b73b306ce1975a48c9238cdf007292304aabcdc13d662abd34723a",
          "md5": "2d88633c73fc1b7eda4aca6c67e2c121",
          "sha256": "86b69f3a34903b53359269595f0cc16d52dd44994885887a9ff47ab81db92c4c"
        },
        "downloads": -1,
        "filename": "pydantic_geojson-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2d88633c73fc1b7eda4aca6c67e2c121",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 9084,
        "upload_time": "2022-03-27T21:49:33",
        "upload_time_iso_8601": "2022-03-27T21:49:33.316883Z",
        "url": "https://files.pythonhosted.org/packages/0b/6a/1e9413b73b306ce1975a48c9238cdf007292304aabcdc13d662abd34723a/pydantic_geojson-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5ca8cc2a4e2e3b2a448172c4461e00f26b020efe8d6f7ca1e8ab7785e120738",
          "md5": "b656aab1038239375375f170647bc0a3",
          "sha256": "97c2d54067582ed5fe2aa6f9e13dd62ff59a2a608450cb6c6bedfdf791701266"
        },
        "downloads": -1,
        "filename": "pydantic_geojson-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b656aab1038239375375f170647bc0a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 9020,
        "upload_time": "2023-01-01T20:54:20",
        "upload_time_iso_8601": "2023-01-01T20:54:20.242835Z",
        "url": "https://files.pythonhosted.org/packages/e5/ca/8cc2a4e2e3b2a448172c4461e00f26b020efe8d6f7ca1e8ab7785e120738/pydantic_geojson-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7809b04b2be7a271bddb291209f10e71734b3b3da67ad778391aae194fe0b332",
          "md5": "dcd60fe35caefca489ae8e4aae785ad0",
          "sha256": "4a94a803ce7d630bef041bc8faff0415ac715a460ea2a23965f2cb7465940aec"
        },
        "downloads": -1,
        "filename": "pydantic_geojson-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "dcd60fe35caefca489ae8e4aae785ad0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 9089,
        "upload_time": "2023-01-01T20:54:21",
        "upload_time_iso_8601": "2023-01-01T20:54:21.495900Z",
        "url": "https://files.pythonhosted.org/packages/78/09/b04b2be7a271bddb291209f10e71734b3b3da67ad778391aae194fe0b332/pydantic_geojson-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e5ca8cc2a4e2e3b2a448172c4461e00f26b020efe8d6f7ca1e8ab7785e120738",
        "md5": "b656aab1038239375375f170647bc0a3",
        "sha256": "97c2d54067582ed5fe2aa6f9e13dd62ff59a2a608450cb6c6bedfdf791701266"
      },
      "downloads": -1,
      "filename": "pydantic_geojson-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b656aab1038239375375f170647bc0a3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 9020,
      "upload_time": "2023-01-01T20:54:20",
      "upload_time_iso_8601": "2023-01-01T20:54:20.242835Z",
      "url": "https://files.pythonhosted.org/packages/e5/ca/8cc2a4e2e3b2a448172c4461e00f26b020efe8d6f7ca1e8ab7785e120738/pydantic_geojson-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7809b04b2be7a271bddb291209f10e71734b3b3da67ad778391aae194fe0b332",
        "md5": "dcd60fe35caefca489ae8e4aae785ad0",
        "sha256": "4a94a803ce7d630bef041bc8faff0415ac715a460ea2a23965f2cb7465940aec"
      },
      "downloads": -1,
      "filename": "pydantic_geojson-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "dcd60fe35caefca489ae8e4aae785ad0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 9089,
      "upload_time": "2023-01-01T20:54:21",
      "upload_time_iso_8601": "2023-01-01T20:54:21.495900Z",
      "url": "https://files.pythonhosted.org/packages/78/09/b04b2be7a271bddb291209f10e71734b3b3da67ad778391aae194fe0b332/pydantic_geojson-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}