{
  "info": {
    "author": "",
    "author_email": "Jovan Veljanoski <jovan.veljanoski@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Jupyter",
      "Framework :: Jupyter :: JupyterLab",
      "Framework :: Jupyter :: JupyterLab :: 3",
      "Framework :: Jupyter :: JupyterLab :: Extensions",
      "Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# jupyter_voicepilot\n\n[![Github Actions Status](https://github.com/JovanVeljanoski/jupyter-voicepilot/workflows/Build/badge.svg)](https://github.com/JovanVeljanoski/jupyter-voicepilot/actions/workflows/build.yml)\n\nA JupyterLab extension for generating code and interacting with JupyterLab via voice commands. This extension can also be used for some basic nagivation around in JupyterLab Notebook. It is built around OpenAI's `Whisper-1` and `GPT-3` APIs. You will need to have an OpenAI API key to use this extension.\n\nClick on the image below to see a demo of the extension:\n[![IMAGE ALT TEXT HERE](https://img.youtube.com/vi/JlHnDm4oUgA/maxresdefault.jpg)](https://www.youtube.com/watch?v=JlHnDm4oUgA)\n\n## Requirements\n\n- JupyterLab >= 3.0\n\n## Install\n\nTo install the extension, execute:\n\n```bash\npip install jupyter_voicepilot\n```\n\n## Uninstall\n\nTo remove the extension, execute:\n\n```bash\npip uninstall jupyter_voicepilot\n```\n\n## Usage\n\nClick the `Voice Pilot` button in the JupyterLab to start recording your instruction. When done, click the button again to stop the recording. The extension will then process your instruction and execute the appropriate action.\n\n### Generating code\n\nIf a cell is of type `code`, the extension will generate code based on the input you provided.\nThe generated code will be inserted in the cell. An exception to this is when you provide a set phrase which is mapped to a specific Notebook navigation action. See below for more details.\n\n### Dictation\n\nIf a cell is of type `markdown`, the extension will insert the text you provided in the cell.\nAn exception to this is when you provide a set phrase which is mapped to a specific Notebook navigation action. See below for more details.\n\n### ChatGPT interaction\n\nIf you start your voice message with \"hey\", the message will be sent to the `ChatGPT` model.\nIf the current cell is empty, it will be converted to a markdown cell and the response will be added there. If the current cell is not empty, a new `markdown` cell will be inserted below the current cell, containing the response from ChatGPT.\n\n### Notebook navigation\n\nThe extension can also be used for some basic nagivation around in JupyterLab Notebook. The following table shows the Notebook actions that a supported, and the corresponding phrases that you can use to trigger them.\n\n| Action                     | Phrase                                                                                 |\n| -------------------------- | -------------------------------------------------------------------------------------- |\n| `run`                      | \"run\", \"run cell\", \"run the cell\", \"execute\"                                           |\n| `runAll`                   | \"run all\", \"run all cells\", \"execute all\", \"execute all cells\"                         |\n| `runAndAdvance`            | \"run and advance\", \"run cell and advance\", \"execute and advance\"                       |\n| `runAndInsert`             | \"run and insert\", \"run cell and insert\", \"execute and insert\"                          |\n| `runAllAbove`              | \"run all above\", \"run all cells above\", \"execute all above\", \"execute all cells above\" |\n| `runAllBelow`              | \"run all below\", \"run all cells below\", \"execute all below\", \"execute all cells below\" |\n| `deleteCells`              | \"delete\", \"delete cell\", \"delete cells\", \"delete the cell\", \"delete the cells\"         |\n| `clearAllOutputs`          | \"clear all outputs\", \"clear all the outputs\", \"clear outputs\"                          |\n| `selectLastRunCell`        | \"select last run cell\", \"select the last run cell\"                                     |\n| `undo`                     | \"undo\"                                                                                 |\n| `redo`                     | \"redo\"                                                                                 |\n| `cut`                      | \"cut\"                                                                                  |\n| `copy`                     | \"copy\"                                                                                 |\n| `paste`                    | \"paste\"                                                                                |\n| `changeCellTypeToMarkdown` | \"markdown\", \"to markdown\", \"markdown cell\", \"convert to markdown\", \"cast to markdown\"  |\n| `changeCellTypeToCode`     | \"code\", \"to code\", \"code cell\", \"convert to code\", \"cast to code\"                      |\n| `insertMarkdownCellBelow`  | \"insert markdown cell below\", \"add markdown below\"                                     |\n| `insertMarkdownCellAbove`  | \"insert markdown cell above\", \"add markdown above\"                                     |\n| `insertCodeCellBelow`      | \"insert code cell below\", \"add code below\"                                             |\n| `insertCodeCellAbove`      | \"insert code cell above\", \"add code above\"                                             |\n\n## Configuration\n\nIn the advanced settings editor, you can set the following configuration options:\n\n- Open API Key (_required_): Your OpenAI API key. You can get one [here](https://platform.openai.com/overview).\n\n## Contributing\n\n### Development install\n\nNote: You will need NodeJS to build the extension package.\n\nThe `jlpm` command is JupyterLab's pinned version of\n[yarn](https://yarnpkg.com/) that is installed with JupyterLab. You may use\n`yarn` or `npm` in lieu of `jlpm` below.\n\n```bash\n# Clone the repo to your local environment\n# Change directory to the jupyter_voicepilot directory\n# Install package in development mode\npip install -e \".\"\n# Link your development version of the extension with JupyterLab\njupyter labextension develop . --overwrite\n# Rebuild extension Typescript source after making changes\njlpm build\n```\n\nYou can watch the source directory and run JupyterLab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.\n\n```bash\n# Watch the source directory in one terminal, automatically rebuilding when needed\njlpm watch\n# Run JupyterLab in another terminal\njupyter lab\n```\n\nWith the watch command running, every saved change will immediately be built locally and available in your running JupyterLab. Refresh JupyterLab to load the change in your browser (you may need to wait several seconds for the extension to be rebuilt).\n\nBy default, the `jlpm build` command generates the source maps for this extension to make it easier to debug using the browser dev tools. To also generate source maps for the JupyterLab core extensions, you can run the following command:\n\n```bash\njupyter lab build --minimize=False\n```\n\n### Development uninstall\n\n```bash\npip uninstall jupyter_voicepilot\n```\n\nIn development mode, you will also need to remove the symlink created by `jupyter labextension develop`\ncommand. To find its location, you can run `jupyter labextension list` to figure out where the `labextensions`\nfolder is located. Then you can remove the symlink named `voicepilot` within that folder.\n\n<!-- ### Testing the extension\n\n#### Frontend tests\n\nThis extension is using [Jest](https://jestjs.io/) for JavaScript code testing.\n\nTo execute them, execute:\n\n```sh\njlpm\njlpm test\n```\n\n#### Integration tests\n\nThis extension uses [Playwright](https://playwright.dev/docs/intro) for the integration tests (aka user level tests).\nMore precisely, the JupyterLab helper [Galata](https://github.com/jupyterlab/jupyterlab/tree/master/galata) is used to handle testing the extension in JupyterLab.\n\nMore information are provided within the [ui-tests](./ui-tests/README.md) README.\n\n### Packaging the extension\n\nSee [RELEASE](RELEASE.md) -->\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) 2023 Jovan Veljanoski  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jupyter-voicepilot",
    "package_url": "https://pypi.org/project/jupyter-voicepilot/",
    "platform": null,
    "project_url": "https://pypi.org/project/jupyter-voicepilot/",
    "project_urls": {
      "Bug Tracker": "https://github.com/JovanVeljanoski/jupyter-voicepilot/issues",
      "Homepage": "https://github.com/JovanVeljanoski/jupyter-voicepilot",
      "Repository": "https://github.com/JovanVeljanoski/jupyter-voicepilot.git"
    },
    "release_url": "https://pypi.org/project/jupyter-voicepilot/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A JupyterLab extension for generating code and interacting with JupyterLab via voice commands.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17423622,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99541a311c26bceb795fb19114d617d5de782fd56a97e9ef9c72a1a7f3ceb0fe",
          "md5": "2675db2a3ef675f18aed385f41eac827",
          "sha256": "c217ac6d5e3939583cc221baeb63ac515121ccae3b0d74e0c29b5beb299fc672"
        },
        "downloads": -1,
        "filename": "jupyter_voicepilot-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2675db2a3ef675f18aed385f41eac827",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 32788,
        "upload_time": "2023-03-24T00:44:51",
        "upload_time_iso_8601": "2023-03-24T00:44:51.688845Z",
        "url": "https://files.pythonhosted.org/packages/99/54/1a311c26bceb795fb19114d617d5de782fd56a97e9ef9c72a1a7f3ceb0fe/jupyter_voicepilot-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fc10ba15ab5efbf910bec7e6a3a27b29c54e84724fea25c712a5953848d6871",
          "md5": "cccf4243f9875b5e547926f8617b5e74",
          "sha256": "c057d7a41b429b14a9cc8103f581f5e2f562da832b4fe8c75207bf3fe6970f2a"
        },
        "downloads": -1,
        "filename": "jupyter_voicepilot-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cccf4243f9875b5e547926f8617b5e74",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 317945,
        "upload_time": "2023-03-24T00:44:53",
        "upload_time_iso_8601": "2023-03-24T00:44:53.894914Z",
        "url": "https://files.pythonhosted.org/packages/3f/c1/0ba15ab5efbf910bec7e6a3a27b29c54e84724fea25c712a5953848d6871/jupyter_voicepilot-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99541a311c26bceb795fb19114d617d5de782fd56a97e9ef9c72a1a7f3ceb0fe",
        "md5": "2675db2a3ef675f18aed385f41eac827",
        "sha256": "c217ac6d5e3939583cc221baeb63ac515121ccae3b0d74e0c29b5beb299fc672"
      },
      "downloads": -1,
      "filename": "jupyter_voicepilot-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2675db2a3ef675f18aed385f41eac827",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 32788,
      "upload_time": "2023-03-24T00:44:51",
      "upload_time_iso_8601": "2023-03-24T00:44:51.688845Z",
      "url": "https://files.pythonhosted.org/packages/99/54/1a311c26bceb795fb19114d617d5de782fd56a97e9ef9c72a1a7f3ceb0fe/jupyter_voicepilot-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3fc10ba15ab5efbf910bec7e6a3a27b29c54e84724fea25c712a5953848d6871",
        "md5": "cccf4243f9875b5e547926f8617b5e74",
        "sha256": "c057d7a41b429b14a9cc8103f581f5e2f562da832b4fe8c75207bf3fe6970f2a"
      },
      "downloads": -1,
      "filename": "jupyter_voicepilot-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "cccf4243f9875b5e547926f8617b5e74",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 317945,
      "upload_time": "2023-03-24T00:44:53",
      "upload_time_iso_8601": "2023-03-24T00:44:53.894914Z",
      "url": "https://files.pythonhosted.org/packages/3f/c1/0ba15ab5efbf910bec7e6a3a27b29c54e84724fea25c712a5953848d6871/jupyter_voicepilot-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}