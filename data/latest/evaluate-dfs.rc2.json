{
  "info": {
    "author": "Yohan Kim",
    "author_email": "yohankimchi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# Evaluate DataFrames\n\n**evaluate_dfs** provides features for evaluating a series or dataframe against another series or dataframe.\n\n## Installation\n\n```bash\npip install evalaute-dfs\n```\n\n## Overview\n\n`evaluate_dfs` contains many features to help evaluate series or dataframe against another series or dataframe:\n\n- `dfs_evaluator`: Classes for evaluating two dataframes against each other.\n- `series_evaluator`: Classes for evaluating a series against a dataframe.\n- `match`: Functions for ranking and matching the highest ranking item in an iterable according to a hierarchy. \n\nHere's a tour of some of the main features of `evaluate_dfs` with examples:\n\n### Series Evaluators\n\nThe main features of the `series_evaluator` module are the `SeriesEvaluator` class and its subclasses. \n\nYou can store your **evaluation mapping** into these classes, composed of:\n- **evaluation field name** (keys), the field name to assign the results from an evaluation function to an **evaluation**.\n- **evaluation function** (values), a function that compares two series.\n\nExample of an evaluation mapping:\n```python\ndef evaluate_fruits(series1, series2): return series1.fruits == series2.fruits\ndef evaluate_vegies(series1, series2): return series1.vegies == series2.vegies\nsmoothie_evaluations = {\n    'is_fruits_same': evaluate_fruits,\n    'is_vegies_same': evaluate_vegies\n}\n```\n\nAn **evaluation** is a series returned or produced by methods from a `SeriesEvaluator` (or subclass) instance. The evaluation contains the return values from comparing  two series with all the **evaluation functions** from an **evaluation mapping**,\nwith **evaluation field names** as its indexes. By default, and evaluation stores the indexes of both series compared.\n\nExample of an evaluation:\n```\nindex_x              0\nindex_y             42\nis_fruits_same    True\nis_vegies_same    True\ndtype: object\n```\n\nAdditionally, the classes offer the following features:\n- Pre-filtering the dataframe before evaluation.\n- The field_names attribute, which dynamically stores the **evaluation field names** and/or the indexes field names to use for each evaluation.\n- Options to specify the indexes field names or ommit recording the indexes for the evaluations.\n\nExamples of using the `SeriesEvaluator` class:\n```python\nimport pandas as pd\nfrom evaluate_dfs.series_evaluator import SeriesEvaluator\n\napple = pd.Series(['apple'], index=['fruits'], name=0)\nfruit_basket = pd.DataFrame({'fruits': ['apple', 'peach', 'orange']})\n\ndef are_fruits_equal(series1: pd.Series, series2: pd.Series) -> bool:\n    return series1.fruits == series2.fruits\n\nseries_evaluator = SeriesEvaluator(\n    mapping={'fruits_equal': are_fruits_equal},\n)\n\nevaluations = series_evaluator.evaluate_against_df(series=apple, df=fruit_basket)\npd.DataFrame(evaluations)\n```\n\n       index_x  index_y  fruits_equal\n    0        0        0          True\n    1        0        1         False\n    2        0        2         False\n\nWith a filter function:\n```python\ndef filter_out_orange(series: pd.Series, df: pd.DataFrame) -> pd.DataFrame:\n    return df[df['fruits'] != 'orange']\n\nseries_evaluator = SeriesEvaluator(\n    mapping={'fruits_equal': are_fruits_equal},\n    filter_df=filter_out_orange\n)\nevaluations = series_evaluator.evaluate_against_df(series=apple, df=fruit_basket)\npd.DataFrame(evaluations)\n```\n       index_x  index_y  fruits_equal\n    0        0        0          True\n    1        0        1         False\n\n### DataFrames Evaluators\n\nThe main features of the `dfs_evaluator` module are the `DataFramesEvaluator` class and its subclasses. They provide methods for evaluating every row (series) from one dataframe against every row, if a filter function not provided for the series evaluator instance.\n\nA dataframes evaluator instance is composed of an `SeriesEvaluator` (or subclass) instance found in the `series_evaluator` module.\n\nAdditionally, `dfs_evaluator` also provides the `ParallelEvaluator` that works just like `SeriesEvaluator`, but processes the evaluations in parallel.\n\n\nA quick example of using the `DataFramesEvaluator` class:\n```python\nimport pandas as pd\nfrom evaluate_dfs.series_evaluator import SeriesEvaluator\nfrom evaluate_dfs.dfs_evaluator import DataFramesEvaluator\n\nfruit_basket1 = pd.DataFrame({'fruits': ['apple', 'pineapple']})\nfruit_basket2 = pd.DataFrame({'fruits': ['apple', 'peach']})\n\ndef are_fruits_equal(series1: pd.Series, series2: pd.Series) -> bool:\n    return series1.fruits == series2.fruits\n\nseries_evaluator = SeriesEvaluator(\n    mapping={'fruits_equal': are_fruits_equal},\n)\ndfs_evaluator = DataFramesEvaluator(series_evaluator=series_evaluator)\ndfs_evaluator.evaluate(df1=fruit_basket1, df2=fruit_basket2)\n```\n       index_x  index_y  fruits_equal\n    0        0        0          True\n    1        0        1         False\n    2        1        0         False\n    3        1        1         False\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yohan10/evaluate-dfs",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "evaluate-dfs",
    "package_url": "https://pypi.org/project/evaluate-dfs/",
    "platform": null,
    "project_url": "https://pypi.org/project/evaluate-dfs/",
    "project_urls": {
      "Homepage": "https://github.com/yohan10/evaluate-dfs"
    },
    "release_url": "https://pypi.org/project/evaluate-dfs/0.0.2/",
    "requires_dist": [
      "pandas (>=1.4.2)",
      "pandarallel (>=1.6.1)",
      "numpy (>=1.22.4) ; extra == 'dev'"
    ],
    "requires_python": ">=3.8",
    "summary": "Provides features to evaluate a series or dataframe against another series or dataframe.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14181600,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b847cb794be3af4400c5fb7ab8c23639f1f2ff934c18bf477fb776d6896ce121",
          "md5": "fd56e679c87304a40c489f06d26c14a0",
          "sha256": "ea2cb5484feb4fade72d0bddb8b698fceb2b7796cfd48f9651fdf0e84955c990"
        },
        "downloads": -1,
        "filename": "evaluate_dfs-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd56e679c87304a40c489f06d26c14a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11756,
        "upload_time": "2022-06-16T16:29:06",
        "upload_time_iso_8601": "2022-06-16T16:29:06.311796Z",
        "url": "https://files.pythonhosted.org/packages/b8/47/cb794be3af4400c5fb7ab8c23639f1f2ff934c18bf477fb776d6896ce121/evaluate_dfs-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fddcff18196d46a9f9420ec44a825753ef7e3b11c7b02414401c9e32f46fe247",
          "md5": "93dbd3738d13e3ff755d52e9edef0870",
          "sha256": "d7f544e60df0911f70d812fe7ae800c750a6d862452e667d22fc20fbac77c2b9"
        },
        "downloads": -1,
        "filename": "evaluate_dfs-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "93dbd3738d13e3ff755d52e9edef0870",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11341,
        "upload_time": "2022-06-16T16:29:08",
        "upload_time_iso_8601": "2022-06-16T16:29:08.654794Z",
        "url": "https://files.pythonhosted.org/packages/fd/dc/ff18196d46a9f9420ec44a825753ef7e3b11c7b02414401c9e32f46fe247/evaluate_dfs-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c15a30fb20bae361b994f30c042a9823840916f301e0cd31c3835d9858d49840",
          "md5": "b9b2b243e6f3411b3b2cbc23c4939117",
          "sha256": "d0d66eac3cb45911515369e0713a00f61241d58c38ba2d59fbf730689cc1d43e"
        },
        "downloads": -1,
        "filename": "evaluate_dfs-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9b2b243e6f3411b3b2cbc23c4939117",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11767,
        "upload_time": "2022-06-20T00:21:07",
        "upload_time_iso_8601": "2022-06-20T00:21:07.124337Z",
        "url": "https://files.pythonhosted.org/packages/c1/5a/30fb20bae361b994f30c042a9823840916f301e0cd31c3835d9858d49840/evaluate_dfs-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9d49e422341a165563d040c3dec34d90977bb263676013d179c39772ebc40e2",
          "md5": "876d3d17414601385be480b17135284d",
          "sha256": "d7c73e39b051c266f7493205ce31f5455f0eed69b8c8d6dbd1b86b6bbd499a84"
        },
        "downloads": -1,
        "filename": "evaluate_dfs-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "876d3d17414601385be480b17135284d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11324,
        "upload_time": "2022-06-20T00:21:10",
        "upload_time_iso_8601": "2022-06-20T00:21:10.495529Z",
        "url": "https://files.pythonhosted.org/packages/b9/d4/9e422341a165563d040c3dec34d90977bb263676013d179c39772ebc40e2/evaluate_dfs-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c15a30fb20bae361b994f30c042a9823840916f301e0cd31c3835d9858d49840",
        "md5": "b9b2b243e6f3411b3b2cbc23c4939117",
        "sha256": "d0d66eac3cb45911515369e0713a00f61241d58c38ba2d59fbf730689cc1d43e"
      },
      "downloads": -1,
      "filename": "evaluate_dfs-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b9b2b243e6f3411b3b2cbc23c4939117",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 11767,
      "upload_time": "2022-06-20T00:21:07",
      "upload_time_iso_8601": "2022-06-20T00:21:07.124337Z",
      "url": "https://files.pythonhosted.org/packages/c1/5a/30fb20bae361b994f30c042a9823840916f301e0cd31c3835d9858d49840/evaluate_dfs-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9d49e422341a165563d040c3dec34d90977bb263676013d179c39772ebc40e2",
        "md5": "876d3d17414601385be480b17135284d",
        "sha256": "d7c73e39b051c266f7493205ce31f5455f0eed69b8c8d6dbd1b86b6bbd499a84"
      },
      "downloads": -1,
      "filename": "evaluate_dfs-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "876d3d17414601385be480b17135284d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 11324,
      "upload_time": "2022-06-20T00:21:10",
      "upload_time_iso_8601": "2022-06-20T00:21:10.495529Z",
      "url": "https://files.pythonhosted.org/packages/b9/d4/9e422341a165563d040c3dec34d90977bb263676013d179c39772ebc40e2/evaluate_dfs-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}