{
  "info": {
    "author": "Pranay Kasturi",
    "author_email": "mosaik@offis.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "mosaik-heatpump\n===============\n\nThis package contains adapters to connect to *mosaik*:\n\n1) A heat pump model, based on the `TESPy <https://github.com/oemof/tespy>`_ library.\n2) A hot water tank model\n3) A controller model\n\n.. contents:: Table of Contents\n   :depth: 3\n\n\nInstallation & Tests\n--------------------\n\nYou can install mosaik-heatpump with pip:\n\n.. code-block:: bash\n\n      pip install mosaik-heatpump\n\n\nYou can run the tests with:\n\n.. code-block:: bash\n\n      pytest\n\n\nHeat Pump Model\n---------------\n\nTESPy\n^^^^^\nTESPy (Thermal Engineering Systems in Python) provides a powerful simulation package for thermal processes \nlike power plants, district heating systems, heat pumps etc. For more information about the library, we \nrefer to its `documentation <https://tespy.readthedocs.io/en/master/>`_. The heat pump model provided in this package is based on the model used in TESPy's \n`heat pump tutorial <https://tespy.readthedocs.io/en/master/tutorials_examples.html#heat-pump-tutorial>`_.\n\nBasic Functionality of the Model\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWith the model, the following two types of heat pumps can be simulated:\n\n1) Water/Water Heat Pump: For this type, the heat source is underground water and the fluid on the consumer side is also water. This model can be chosen by specifying the parameter *heat_source* as *water*.\n2) Air/Water Heat Pump: For this type, the heat source is ambient air and the fluid on the consumer side is water. This model can be chosen by specifying the parameter *heat_source* as *air*.\n\nMoreover, the model offers two modes of calculation. A *detailed* mode where the system calculations for a set of inputs are actually performed by the \nmodel. In addition, there is a *fast* mode, in which pre-calculated data from the *detailed* mode is used to compute the outputs instead of actually \nperforming the calculations.\n\n*Parameters*\n\nThe following parameters have to be set during the initialization of the model.\n\n1) The source of heat, either water or air, has to be specified via the *heat_source* parameter as explained above\n2) The mode of calculation has to be specified via the *calc_mode* parameter as either *detailed* or *fast*.\n\n*Inputs*\n\nFor each time step of the simulation, the following inputs have to be provided to the model, in a csv file or from another simulation model:\n\n1) Consumer Heat Load (W), via the *Q_Demand* attribute \n2) Heat Source Temperature (deg. C), via the *heat_source_T* attribute\n3) Condenser Inlet Temperature (deg. C), via the *cond_in_T* attribute\n\n*Outputs*\n\nThe model gives the following outputs for each time step:\n\n1) The heat supplied by the heat pump (W)\n2) Coefficient of Performance (COP) of the heat pump\n3) Power requirement (W) of the heat pump\n4) Condenser water mass flow rate (Kg/s) \n5) Condenser water outlet temperature (deg. C)\n\n*Range of Operation*\n\nFor the air source heat pump, the heat source temperature can vary between -20 to 20 (deg. C). and the condenser inlet temperature can vary\nbetween 30 to 55 (deg. C). For the water source heat pump, the heat source temperature can vary between 4 to 20 (deg. C). and the condenser \ninlet temperature can vary between 20 to 55 (deg. C). \n\nAdvanced Details of the Model\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nThe heat pump model available in TESPy's library was modified and the new schematic of the system is shown below.\n\n.. image:: images/system_schematic.png\n   :width: 600\n\nThe consumer system and the expansion valve are unchanged. In the evaporator system, the superheater has been eliminated.\nThe compressor system consists only of a single compression stage and intercooling is no longer required.\n\nFollowing the tutorial, the parametrization for the heat pump models provided in this package has been done to match the power requirement\ncalculated by the model to that given in the manufacturer's datasheets for a range of heat loads:\n\n1) Water/Water Heat Pump: This model is based on Daikin's Water/Water Heat Pump (`Model EWWP014KBW1N <https://www.daikin.eu/en_us/products/EWWP-KBW1N.table.html>`_).\n2) Air/Water Heat Pump: This model is based on Daikin's Air/Water Heat Pump (`Model  ERLQ016CAV3 <https://www.daikin.eu/en_us/products/EHBH-CB---ERLQ-CV3.table.html>`_).\n\nParametrization of the model\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n*Component Parametrization*\n\nThe parametrization of the components of the system was only slightly modified compared to the tutorial.\nIn the consumer system, for both types of heat pumps, the 'ttd_u' of the condenser was adjusted. \nIn the evaporator system, the same parametrization as in the tutorials is used, with only the 'ttd_l' of the evaporator modified.\nThe parametrization of the newly added ambient pump is the same as that of the other pumps in the tutorial.\n\nFor the compressor, all the parameters except 'eta_s' are same as those used in the tutorial. For the set of design points, i.e the evaporator side\ntemperatures, the condenser side temperatures and the heating capacities available from the manufacturer's datasheet, the 'eta_s' parameter of the \nof the compressor has been chosen to match the compressor power calculated by the model to that provided in the datasheet. A script to generate the\nseries of 'eta_s' values for the different design points, are provided in the package. The steps to be followed to utilize this script are detailed below.\n\n*Connection Parametrization*\n\nWhile the parameters specfied for the components match those in the tutorial, the values of the connection parameters vary considerably.\nIn the consumer system, the condenser outlet temperature, consumer return temperature & the consumer heat load have been taken from the datasheets.\nFor the evaporator system connections, again the values from the datasheets are used for the temeratures. Moreover, in the *fluids* parameter, \nthe refrigerant used in the system was changed from 'NH3' to 'R407c' & 'R410a' for the water & air heat pumps respectively.\n\n*Starting Values*\n\nFor the different connections, specifying appropriate starting values for parameters like pressure or enthalpy is crucial to obtain the right results. \nEspecially for the phase change processes, based on the expected temperature range of the refrigerant in the condenser and evaporator systems,\nthe values of enthalpy and pressure have to be obtained from the fluid property diagrams. Not specifying appropriate starting values may lead to \nincorrect results or even errors in some cases.\n\n*Off-design calculation*\n\nFor the off-design calculations, the default characteristic lines provided by TESPy for the components (condenser, evaporator, pumps, compressor)\nwere used. However, it is possible to use other charactersitic line/maps through TESPy. We refer to TESPy's documentation for further details\non this.\n\n*Advice for other models of heat pumps*\n\nIn addition to the two heat pump models, which are described by a parametrization, also other heat pumps can be developed based TESPy.\nHere are some advices for implementing your own heat pump model:\n\n* Always have a look at a fluid proprety diagram when checking different refrigerants to find appropriate starting values. There are various tools, e.g. CoolProp (fluid property database of TESPy) or FluProDia (https://fluprodia.readthedocs.io/).\n* Build up your model step by step and make a drawing of the process marking where you specify which parameter.\n* Use starting values if necessary. Also, if you build up your model step by step you will see, where starting values are useful and where you can skip them.\n\nAs input to this script, the design point data from the datasheets have to be provided in a csv file. As an example, the inputs for the two models of heat pumps \nhave been provided. In addition, the saved network from a\n\nCalculation Modes\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n*Detailed Calculation Mode*\n\nIn the detailed calculation mode, the model takes the following inputs: the heat source temperature, the heat demand from the consumer, and the temperature of water entering the condenser of the heat pump. \nThe model first identifies the closest design point, i.e., the design evaporator temperature, the design condenser temperature and the design heatload, to the input data and performs a design point calculation. \nThe data from the design point calculation is then used to perform an off-design calculation to obtain the model outputs.\n\n*Fast Calculation Mode*\n\n\n\nHot Water Tank Model\n--------------------\nThe hot water tank model developed by Johannes Gerster in a previous project has been used in this work to act as a buffer in between the heating device and the heat consumer. The size of \nthe tank and the initial temperature profile inside the tank can be specified at the time of initialization. Flows of water into and out of the tank can\nbe specified as connections. The temperatures and flow rates of the water flowing through these connections can be updated over the course of the \nsimulation. Stratification has been modelled by defining different layers inside the tank with varying temperatures. Heat transfer to the surrounding \nenvironment and between the layers inside the tank is considered. \n\n\nController Model\n----------------\nThe controller model used in this work utilizes a simple control strategy to match the demand and the supply of heat. On the heat consumer side, \nconsidering the available heat inside the hot water tank, the controller computes the heat that can be supplied and updates the corresponding connections\nof the hot water tank. The domestic hot water demand is prioritized over the space heating demand. The controller also ensures that the temperature limits \nfor the space heating demand, set during the initialization of the model, are not breached. On the heating device side, the controller computes the heat \nrequired from the heat pump, to maintain the hot water tank at a temperature set point that is fixed during initialization. The corresponding connections\nof the hot water tank are updated based on the inputs from the heat pump model.\n\nUsage in mosaik\n---------------\n\n\nGetting help\n------------\n \n\n\n\n\nChangelog\n=========\n\n0.1.0 - 2021-06-29\n------------------\n\n- Initial release of the mosaik-heatpump package\n\n\nAuthors\n=======\n\nThe mosaik-heatpump package was developed by Pranay Kasturi\n\nAdditional Contributors: Jan Soeren Schwarz\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/mosaik/components/energy/mosaik-heatpump",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mosaik-heatpump",
    "package_url": "https://pypi.org/project/mosaik-heatpump/",
    "platform": "",
    "project_url": "https://pypi.org/project/mosaik-heatpump/",
    "project_urls": {
      "Homepage": "https://gitlab.com/mosaik/components/energy/mosaik-heatpump"
    },
    "release_url": "https://pypi.org/project/mosaik-heatpump/0.1.0/",
    "requires_dist": [
      "mosaik-api (>=3.0)",
      "tespy (>=0.4.2)",
      "jsonpickle"
    ],
    "requires_python": "",
    "summary": "Mosaik-heatpump provides a model of a residential heatpump system",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10790217,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c474628254f7cb0fc9ec0ecf47735ab64192dd52d02cc7298932174cf123e48a",
          "md5": "9cc6bb50cd5bfbded3fec3c0a2750a9a",
          "sha256": "af5cd48314ff565e54927c21c8e1a33959786fdadc563456d32d03666beec4fd"
        },
        "downloads": -1,
        "filename": "mosaik_heatpump-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9cc6bb50cd5bfbded3fec3c0a2750a9a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 160959,
        "upload_time": "2021-06-30T21:29:04",
        "upload_time_iso_8601": "2021-06-30T21:29:04.526786Z",
        "url": "https://files.pythonhosted.org/packages/c4/74/628254f7cb0fc9ec0ecf47735ab64192dd52d02cc7298932174cf123e48a/mosaik_heatpump-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8183e181449194539e6de91856eb0bbea5fe78f07b7b56d29dc0bb846eda227",
          "md5": "096884bc9e1ba6bc3ee318af798c9101",
          "sha256": "f3d4ef561277b047eb9bc5d3ebfcdf64d6ccf438bea1e93f7fabb7a6d7e09853"
        },
        "downloads": -1,
        "filename": "mosaik-heatpump-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "096884bc9e1ba6bc3ee318af798c9101",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 156849,
        "upload_time": "2021-06-30T21:29:06",
        "upload_time_iso_8601": "2021-06-30T21:29:06.806557Z",
        "url": "https://files.pythonhosted.org/packages/a8/18/3e181449194539e6de91856eb0bbea5fe78f07b7b56d29dc0bb846eda227/mosaik-heatpump-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c474628254f7cb0fc9ec0ecf47735ab64192dd52d02cc7298932174cf123e48a",
        "md5": "9cc6bb50cd5bfbded3fec3c0a2750a9a",
        "sha256": "af5cd48314ff565e54927c21c8e1a33959786fdadc563456d32d03666beec4fd"
      },
      "downloads": -1,
      "filename": "mosaik_heatpump-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9cc6bb50cd5bfbded3fec3c0a2750a9a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 160959,
      "upload_time": "2021-06-30T21:29:04",
      "upload_time_iso_8601": "2021-06-30T21:29:04.526786Z",
      "url": "https://files.pythonhosted.org/packages/c4/74/628254f7cb0fc9ec0ecf47735ab64192dd52d02cc7298932174cf123e48a/mosaik_heatpump-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8183e181449194539e6de91856eb0bbea5fe78f07b7b56d29dc0bb846eda227",
        "md5": "096884bc9e1ba6bc3ee318af798c9101",
        "sha256": "f3d4ef561277b047eb9bc5d3ebfcdf64d6ccf438bea1e93f7fabb7a6d7e09853"
      },
      "downloads": -1,
      "filename": "mosaik-heatpump-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "096884bc9e1ba6bc3ee318af798c9101",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 156849,
      "upload_time": "2021-06-30T21:29:06",
      "upload_time_iso_8601": "2021-06-30T21:29:06.806557Z",
      "url": "https://files.pythonhosted.org/packages/a8/18/3e181449194539e6de91856eb0bbea5fe78f07b7b56d29dc0bb846eda227/mosaik-heatpump-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}