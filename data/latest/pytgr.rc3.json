{
  "info": {
    "author": "Merwin",
    "author_email": "<merwinmathews1001@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n\n# pyTGR3\n\nA minimal lib for rendering things on Terminal.\n\n\n## Installation\n\nInstall pyTGR with pip\n\n```bash\n  pip install pyTGR\n```\n\n## Features\n\n- Cross platform (i think).\n- Loading animations.\n- Print Image / Video  on terminal.\n- Key Events\n- Terminal Events (like when the terminal is resized and the cursor position changes).\n- Print History.\n- And some Terminal related functions.\n- Examples provided.\n## Usage/Examples\n\n```python\nimport pyTGR\nrenderer = pyTGR.pyTGR()\n```\n\nTerminal Related Functions:\n```python\n    def set_bg(self, bg):\n             \"\"\"\n        For setting the bg color.\n        :param bg: rgb color code\n        :return: None\n        \"\"\"\n    def get_terminal_size(self):\n          \"\"\"\n        Returns the terminal size ,[cols , lines]\n        :return: Size [ cols , lines ]\n        \"\"\"\n    def set_cursor(self, x, y):\n          \"\"\"\n        Move the terminal cursor to a given position.\n        :param x: x - position.\n        :param y: y - position.\n        :return: None\n        \"\"\"\n    def get_cursor_pos(self):\n        \"\"\"\n        Returns the position of the cursor.\n        :return: Position\n        \"\"\"\n    def clear_terminal(self):\n           \"\"\"\n        Used for clearing the terminal.\n        :return: None\n        \"\"\"\n    def close_terminal(self):\n          \"\"\"\n        Used to close the terminal.\n        :return: None\n        \"\"\"\n```\n\nPrinting Related Functions:\n\n```python\n    def print(self, data, end=\"\\n\"):\n        \"\"\"\n        Prints str\n        :param data: str , the str to be printed.\n        :param end: The end param for printing. By default '\\n'\n        :return: None\n        \"\"\"\n    def text(self, text, fg_, bg_):\n        \"\"\"\n        Print Text , with fg and bg color.\n        :param text:Text to be printed.\n        :param fg_: Foreground color rgb.\n        :param bg_: Background color rgb.\n        :return: None\n        \"\"\"\n    def new_row(self):\n        \"\"\"\n        Move to a new row.\n        :return: None\n        \"\"\"\n    def updating_text(self, txt, color=[255, 255, 255], bg_=[0, 0, 0]):\n        \"\"\"\n        A text which can be changed.\n        :param txt: Primary text.\n        :param color: Foreground color rgb.\n        :param bg_: Background color rgb.\n        :return: None\n        \"\"\"\n    def fixed_text(self, txt, bg_, fg_, x, y):\n        \"\"\"\n        Text which can be fixed a position , and doesn't get removed by the clear func.\n        :param txt: Test to be saved.\n        :param bg_: background color rgb.\n        :param fg_: foreground color rgb.\n        :param x: x - position.\n        :param y: y - position.\n        :return: None\n        \"\"\"\n    def remove_fixed_text(self, txt):\n        \"\"\"\n        To remove a text from fixed texts.\n        :param txt: The text which is to be removed.\n        :return: None\n        \"\"\"\n        ```\n\nDrawing Related Functions:\n```python\n    def draw_vertical_pixel(self, color):\n        \"\"\"\n        Print a pixel , vertically.\n        :param color: Color of the pixel , rgb .\n        :return: None\n        \"\"\"\n    def draw_horizontal_pixel(self, color):\n        \"\"\"\n        Print a pixel , horizontally.\n        :param color: Color: Color of the pixel , rgb .\n        :return: None\n        \"\"\"\n    def draw_pixel(self, x, y, color):\n        \"\"\"\n        Print a pixel , at a given position.\n        :param x: x - position.\n        :param y: y - position.\n        :param color: Color of the pixel.\n        :return: None\n        \"\"\"\n    def draw_line(self, x, y, width, color):\n        \"\"\"\n        To draw a line.\n        :param x: x  - position\n        :param y: y - position\n        :param width: width of the line.\n        :param color: Color of the line , rgb.\n        :return: None\n        \"\"\"\n    def draw_circle(self, diameter, color):\n        \"\"\"\n        To draw a circle.\n        :param diameter: The diameter of the circle.\n        :param color: color of the circle , rgb.\n        :return: None\n        \"\"\"\n    def draw_rect(self, x, y, width, height, color, filled=True):\n        \"\"\"\n        To draw rectangle.\n        :param x: x - position.\n        :param y: y - position.\n        :param width: width of the rectangle.\n        :param height: height of the rectangle.\n        :param color: color of the rectangle , rgb.\n        :param filled: If the rectangle should be filled. (optional)\n        :return: None\n        \"\"\"\n```\n\nEvent Related Functions:\n```python\n    def init_terminal_events(self, function):\n        \"\"\"\n        To monitor Terminal events.\n        Types of events:\n            change in size: size\n            change in cursor position : cursor\n        :param function: A function which will be called on events ,event will be passed as an argument.\n        :return: None\n        \"\"\"\n    def init_keyboard(self, on_press):\n        \"\"\"\n        To monitor Keyboard events.\n        :param on_press: The function to be called if a key is pressed ,key will be passed as an argument.\n        :return: None\n        \"\"\"\n# pyTGR.Key returns the keys\n# This can be seen in the example given (square movement)\n```\n\nLoading Animations:\n```python\n    def spinning_animation_bars(self, revolutions, delay, side_text=\" Loading...\", color=[255, 255, 255]):\n        \"\"\"\n        Animation : spinning - 1.\n        :param revolutions: Times.\n        :param delay: The delay between the change of each symbol.\n        :param side_text: The text about the animation.\n        :param color: The color of the bars in rgb.\n        :return: None\n        \"\"\"\n    def spinning_animation(self, delay, revolutions, side_text=\" Loading...\", color=[255, 255, 255]):\n        \"\"\"\n        Animation : spinning - 2.\n        :param delay: The delay between the change of each symbol.\n        :param revolutions: Times.\n        :param side_text: The text about the animation.\n        :param color: The color of the symbols in rgb.\n        :return: None\n        \"\"\"\n    def bar_animation(self, delay, len_, color_1=[47, 152, 237], color_2=[96, 96, 97],\n                      finished_text=\"Finished Loading...\"):\n        \"\"\"\n        Animation : Bar\n        :param delay: Delay between each bar.\n        :param len_: Number of bars.\n        :param color_1: Color in rgb.\n        :param color_2: color in rgb.\n        :param finished_text: The text on finishing.\n        :return: None\n        \"\"\"\n   def strip_animation(self, duration, strips, finished_text=\"Loaded...\", color=[255, 255, 255]):\n        \"\"\"\n        Animation - Strip.\n        :param duration: delay between each strip.\n        :param strips: number of strips.\n        :param finished_text: The text on finishing.\n        :param color: color of the strips.\n        :return: None\n        \"\"\"\n    def loading_percentage(self, delay, max_percent=100, color=[255, 255, 255]):\n        \"\"\"\n        Animation - progressive.\n        :param delay: The delay between each progress.\n        :param max_percent: The max. (optional)\n        :param color: The color of the loader. (optional)\n        :return: None\n        \"\"\"\n```\n\nImage/Video Functions:\n```python\n    def print_img_color(self, file, print_size=2, resize_img=None, print_img=True):\n        \"\"\"\n        For printing a img.\n        :param file: File name.\n        :param print_size: The size of the print. (optional)\n        :param resize_img: The size to which the image have to be resized. (optional)\n        :param print_img: If you want to print the image. (optional)\n        :return: Image_string\n        \"\"\"\n    def play_video_color(self, path, frame_delay=0.09, size=None, reduce_by=None):\n        \"\"\"\n        Play video.\n        :param path: The path of the video.\n        :param frame_delay: The delay between each frame, int. (optional)\n        :param size: The of the video played. (optional)\n        :param reduce_by: The ratio by which the video size should be reduced. (optional)\n        :return: None\n        \"\"\"\n    def play_video_ascii(self, path, frame_delay=0.09, size=None):\n        \"\"\"\n        To play a video in ascii form.\n        :param path: The path of the video.\n        :param frame_delay: The delay between each frame, int. (optional)\n        :param size: The size of the video played. (optional)\n        :return: None\n        \"\"\"\n    def print_image_ascii(self, path, size=None, print_=True):\n        \"\"\"\n        Print an image as ascii.\n        :param path: The path of the image.\n        :param size: The size of the image to be printed in.(optional)\n        :param print_: The printing of image , bool.(optional)\n        :return: The ascii image.\n        \"\"\"\n```\n\n### Terminal History:\nThis Feature can be used to get what all have been printed in\nthe terminal before , delete it , update it with new bg.. \nThis will only work if you replace the real print statement with the print\nstatement provided by the pyTGR class.\n\n\n```python\n    def clear_history(self):\n        \"\"\"\n        Clears the History of Terminal.\n        :return: None\n        \"\"\"\n    def update_from_history(self):\n        \"\"\"\n        Refresh the terminal's bg. Uses the data stored in Terminal History.\n        :return: None\n        \"\"\"\n# pyTGR.term_history , can be used to access the terminal history.\n```\n## Examples Provided:\nExamples are provided in the Examples class.\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n## Authors\n\n- [@Merwin](https://www.github.com/mastercodermerwin)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mastercodermerwin/TGR",
    "keywords": "python,terminal,color,graphics,shapes,terminal events",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyTGR",
    "package_url": "https://pypi.org/project/pyTGR/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyTGR/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mastercodermerwin/TGR/issues",
      "Homepage": "https://github.com/mastercodermerwin/TGR"
    },
    "release_url": "https://pypi.org/project/pyTGR/2.0.1/",
    "requires_dist": [
      "opencv-python",
      "pynput",
      "sty"
    ],
    "requires_python": "",
    "summary": "A minimal lib for rendering things on Terminal.",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13146518,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee5c663a9d7ba87858576bcc13cad3a50eaa4e76df0e69223b2b80b86d75d0f4",
          "md5": "a06f5713f07e5e1a430d456dbf5033c8",
          "sha256": "35226622946e6c3258dab11a6ce9ec4b166c69a5c2a6a1666398a8af08cb5c1a"
        },
        "downloads": -1,
        "filename": "pyTGR-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a06f5713f07e5e1a430d456dbf5033c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9837,
        "upload_time": "2022-03-11T04:27:45",
        "upload_time_iso_8601": "2022-03-11T04:27:45.436975Z",
        "url": "https://files.pythonhosted.org/packages/ee/5c/663a9d7ba87858576bcc13cad3a50eaa4e76df0e69223b2b80b86d75d0f4/pyTGR-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fff1479524f26c534c2fdd3c51600bb59ff782010570c1f1be77ffd617e0cbe",
          "md5": "354cc5e5f6f6178918c216e6ea159315",
          "sha256": "e45997443d8f811f0d1963307366a4f3bf3d8a9aa0f6067a9f3255b6777c60aa"
        },
        "downloads": -1,
        "filename": "pyTGR-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "354cc5e5f6f6178918c216e6ea159315",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9843,
        "upload_time": "2022-03-11T04:27:47",
        "upload_time_iso_8601": "2022-03-11T04:27:47.492450Z",
        "url": "https://files.pythonhosted.org/packages/5f/ff/1479524f26c534c2fdd3c51600bb59ff782010570c1f1be77ffd617e0cbe/pyTGR-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0635ab912458843f4b0b80ac9743dd31e329b5c1d137bf9d22f34844460733f",
          "md5": "945272ec3a0e9d87f6930ecb058756b1",
          "sha256": "9846086777d7a07ce746a76320ee8058362aec284ec3799eeb16d9855dc3d3c6"
        },
        "downloads": -1,
        "filename": "pyTGR-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "945272ec3a0e9d87f6930ecb058756b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9894,
        "upload_time": "2022-03-11T05:04:11",
        "upload_time_iso_8601": "2022-03-11T05:04:11.193945Z",
        "url": "https://files.pythonhosted.org/packages/e0/63/5ab912458843f4b0b80ac9743dd31e329b5c1d137bf9d22f34844460733f/pyTGR-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02bde401a4157e950b109e4e0a8a636b816d7669ab7a00427d64530323832087",
          "md5": "9590d152cf9430e8e402ec1f796e5e0a",
          "sha256": "e754ac28c1b7299b0f1ffae20f17cf7cd6b23bc5e0146180fe6fa2bf59a458ec"
        },
        "downloads": -1,
        "filename": "pyTGR-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9590d152cf9430e8e402ec1f796e5e0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9969,
        "upload_time": "2022-03-11T05:04:16",
        "upload_time_iso_8601": "2022-03-11T05:04:16.116890Z",
        "url": "https://files.pythonhosted.org/packages/02/bd/e401a4157e950b109e4e0a8a636b816d7669ab7a00427d64530323832087/pyTGR-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4b7ad0671b5b09c5c68cbe6d7183c217dcbc3d8fce509314c8961598d46f532",
          "md5": "2add519498f0db6b0356b19568636e33",
          "sha256": "3060b6100049e9bbad52c667202066bba783a5393b09c664fa8bfd3ed6bbe261"
        },
        "downloads": -1,
        "filename": "pyTGR-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2add519498f0db6b0356b19568636e33",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9894,
        "upload_time": "2022-03-11T05:04:13",
        "upload_time_iso_8601": "2022-03-11T05:04:13.736824Z",
        "url": "https://files.pythonhosted.org/packages/b4/b7/ad0671b5b09c5c68cbe6d7183c217dcbc3d8fce509314c8961598d46f532/pyTGR-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3713f08b947158f1b1391ec1f67bab39ae2726d64af1923e055615687bab9ce",
          "md5": "64d32c11a3c15baabe82779964361047",
          "sha256": "b8fbe81183451e566e38e3223d67731ada0713a4c301c215eb930abcc70a9672"
        },
        "downloads": -1,
        "filename": "pyTGR-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "64d32c11a3c15baabe82779964361047",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10008,
        "upload_time": "2022-03-11T05:04:18",
        "upload_time_iso_8601": "2022-03-11T05:04:18.100002Z",
        "url": "https://files.pythonhosted.org/packages/f3/71/3f08b947158f1b1391ec1f67bab39ae2726d64af1923e055615687bab9ce/pyTGR-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b4b7ad0671b5b09c5c68cbe6d7183c217dcbc3d8fce509314c8961598d46f532",
        "md5": "2add519498f0db6b0356b19568636e33",
        "sha256": "3060b6100049e9bbad52c667202066bba783a5393b09c664fa8bfd3ed6bbe261"
      },
      "downloads": -1,
      "filename": "pyTGR-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2add519498f0db6b0356b19568636e33",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9894,
      "upload_time": "2022-03-11T05:04:13",
      "upload_time_iso_8601": "2022-03-11T05:04:13.736824Z",
      "url": "https://files.pythonhosted.org/packages/b4/b7/ad0671b5b09c5c68cbe6d7183c217dcbc3d8fce509314c8961598d46f532/pyTGR-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3713f08b947158f1b1391ec1f67bab39ae2726d64af1923e055615687bab9ce",
        "md5": "64d32c11a3c15baabe82779964361047",
        "sha256": "b8fbe81183451e566e38e3223d67731ada0713a4c301c215eb930abcc70a9672"
      },
      "downloads": -1,
      "filename": "pyTGR-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "64d32c11a3c15baabe82779964361047",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10008,
      "upload_time": "2022-03-11T05:04:18",
      "upload_time_iso_8601": "2022-03-11T05:04:18.100002Z",
      "url": "https://files.pythonhosted.org/packages/f3/71/3f08b947158f1b1391ec1f67bab39ae2726d64af1923e055615687bab9ce/pyTGR-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}