{
  "info": {
    "author": "Gabriele Maris",
    "author_email": "gabriele.maris@mauxilium.it",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# ArduinoPythonSerialRpc\n\nArduinoPythonSerialRpc is the Python side of a serial communication library with Arduino Card.\n\nThe Arduino part of this communication is implemented into ArduinoSerialRpc repository.\n\nThe communication model is implemented in form of:\n* Remote Method Invocation. Where Arduino calls a method declared into a Python class.\n* Remote Procedure Call. Where a Python process call a function defined into the Arduino sketch.\n\nThe communication is a point to point model, performed through the serial (USB) port.\n\n## Architecture\n\nTbdf\n\n## Features\n\n* Bidirectional communication\n* Low Arduino resources required\n* Easy to learn interface\n* Flexible naming convention\n\n# Getting Started\n\n## Arduino Side Installation\nIt is required to:\n * download the Arduino library from: https://github.com/Mauxilium/ArduinoSerialRpc\n * expand it into your \"library\" path of Arduino Ide,\n  or follows the manual installation section of https://www.arduino.cc/en/guide/libraries\n\n## Python Side Installation\npip install arduinopythonserialrpc\n\n## Arduino Sketch basic example\n```c++\n#include <ArduinoSerialRpc.h>\n\nArduinoSerialRpc rpc(\"Arduino www.mauxilium.it\");\n\nvoid setup() {\n  Serial.begin(9600);\n  rpc.registerArduinoFunction(\"go\", startTest);\n  rpc.registerArduinoFunction(\"halt\", stopTest);\n}\n\n\n// ##########################################################################\n// BE AWARE!!!\n// DO NOT FORGET TO ADD THE FOLLOWING serialEvent() FUNCTION INTO YOUR SKETCH\nvoid serialEvent() {\n  rpc.serialEventHandler();\n}\n// ##########################################################################\n\n\nbool execFlag = false;\nint counter = 0;\n\nvoid startTest() {\n  execFlag = true;\n}\n\nvoid stopTest() {\n  counter = 0;\n  execFlag = false;\n}\n\nvoid loop() {\n  delay(200);\n  if (execFlag) {\n    rpc.executeRemoteMethod(\"ping_from_arduino\", counter, counter++);\n  }\n}\n\n```\n\n## Python Class basic example\nA simplified version of Python test program could be:\n```code\nfrom threading import Event\nfrom arduinopythonserialrpc.arduino_python_serial_rpc import ArduinoPythonSerialRpc\n\n\nclass ArduinoRpc(ArduinoPythonSerialRpc):\n    def __init__(self):\n        super(ArduinoRpc, self).__init__(\"COM5\", 9600, self)\n\n    def ping_from_arduino(self, arg1: int, arg2: int) -> int:\n        print(\"Ping: \"+str(arg2))\n        if arg1 == 15:\n            test_arduino_to_pc_completed.set()\n        return arg2\n\n\ntest_arduino_to_pc_completed = Event()\n\nif __name__ == \"__main__\":\n    rpc = ArduinoRpc()\n    rpc.connect()\n    card_name = rpc.get_card_name()\n    print(\"Connected to: \" + card_name)\n\n    print(\"First cicle of 15 pings\")\n    rpc.execute_remote_function(\"go\")\n    test_arduino_to_pc_completed.wait()\n    rpc.execute_remote_function(\"halt\")\n\n    print(\"Second cicle of 15 pings\")\n    test_arduino_to_pc_completed.clear()\n    rpc.execute_remote_function(\"go\")\n    test_arduino_to_pc_completed.wait()\n    rpc.execute_remote_function(\"halt\")\n\n    print(\"Test ends\")\n    rpc.disconnect()\n```\n\n### Build and run\nInside the GitHub repository:\nhttps://github.com/Mauxilium/ArduinoPythonSerialRpc\n\nYou can find another real complete use case in the source paths:\n* ArduinoPythonSerialRpc\\tests\\integration\\sketch\n* ArduinoPythonSerialRpc\\tests\\integration\\python\n\nIn order to execute this integration example test, please follow this steps:\n* Open the sketch ArduinoPythonSerialRpc\\tests\\integration\\sketch\\sketch.ino\n* Download it into your Arduino Card\n* Open a terminal and go to ArduinoPythonSerialRpc\\tests\\integration\\python\n* Modify the port name on row 158 of integration_test.py according to your system \n* Execute the following command\n```bash\npython integration_test.py\n```\n\n### Next steps\n* ArduinoPythonSerialRpc tutorial - A tutorial to discover a more complex use of library (On Working)\n* www.mauxilium.it - The reference site for my other projects (On Working)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Mauxilium/ArduinoPythonSerialRpc",
    "keywords": "",
    "license": "Apache2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "arduinopythonserialrpc",
    "package_url": "https://pypi.org/project/arduinopythonserialrpc/",
    "platform": "",
    "project_url": "https://pypi.org/project/arduinopythonserialrpc/",
    "project_urls": {
      "Homepage": "https://github.com/Mauxilium/ArduinoPythonSerialRpc"
    },
    "release_url": "https://pypi.org/project/arduinopythonserialrpc/1.0.0/",
    "requires_dist": [
      "pyserial",
      "pytest"
    ],
    "requires_python": "",
    "summary": "Python side of a serial communication library with Arduino Card",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7320548,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e8368648d07f2fdcc3e7c58009ce5f5c1ef64ae9e4b2a731f92e6fb85606e65",
          "md5": "856d05d04615e0554a6a6602f16464bb",
          "sha256": "3a003b4bd10af05b7cd2536ef0cd1d821955196f428dca32f9fb842460764e2d"
        },
        "downloads": -1,
        "filename": "arduinopythonserialrpc-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "856d05d04615e0554a6a6602f16464bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10459,
        "upload_time": "2020-05-25T16:27:16",
        "upload_time_iso_8601": "2020-05-25T16:27:16.378716Z",
        "url": "https://files.pythonhosted.org/packages/8e/83/68648d07f2fdcc3e7c58009ce5f5c1ef64ae9e4b2a731f92e6fb85606e65/arduinopythonserialrpc-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2b6b38881c3328f0bbd766a77d749d3a9d33989efebf0269bc7a7e33549d1ce",
          "md5": "e8e9b716a07122bbc83f6f2e9ae45ed8",
          "sha256": "b0667b7ce039ed1f9d8064a2ee67216f5c3400ac3d8ce44128f0e67b55567c1f"
        },
        "downloads": -1,
        "filename": "arduinopythonserialrpc-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e8e9b716a07122bbc83f6f2e9ae45ed8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8657,
        "upload_time": "2020-05-25T16:27:18",
        "upload_time_iso_8601": "2020-05-25T16:27:18.696275Z",
        "url": "https://files.pythonhosted.org/packages/d2/b6/b38881c3328f0bbd766a77d749d3a9d33989efebf0269bc7a7e33549d1ce/arduinopythonserialrpc-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e8368648d07f2fdcc3e7c58009ce5f5c1ef64ae9e4b2a731f92e6fb85606e65",
        "md5": "856d05d04615e0554a6a6602f16464bb",
        "sha256": "3a003b4bd10af05b7cd2536ef0cd1d821955196f428dca32f9fb842460764e2d"
      },
      "downloads": -1,
      "filename": "arduinopythonserialrpc-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "856d05d04615e0554a6a6602f16464bb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10459,
      "upload_time": "2020-05-25T16:27:16",
      "upload_time_iso_8601": "2020-05-25T16:27:16.378716Z",
      "url": "https://files.pythonhosted.org/packages/8e/83/68648d07f2fdcc3e7c58009ce5f5c1ef64ae9e4b2a731f92e6fb85606e65/arduinopythonserialrpc-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2b6b38881c3328f0bbd766a77d749d3a9d33989efebf0269bc7a7e33549d1ce",
        "md5": "e8e9b716a07122bbc83f6f2e9ae45ed8",
        "sha256": "b0667b7ce039ed1f9d8064a2ee67216f5c3400ac3d8ce44128f0e67b55567c1f"
      },
      "downloads": -1,
      "filename": "arduinopythonserialrpc-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e8e9b716a07122bbc83f6f2e9ae45ed8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8657,
      "upload_time": "2020-05-25T16:27:18",
      "upload_time_iso_8601": "2020-05-25T16:27:18.696275Z",
      "url": "https://files.pythonhosted.org/packages/d2/b6/b38881c3328f0bbd766a77d749d3a9d33989efebf0269bc7a7e33549d1ce/arduinopythonserialrpc-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}