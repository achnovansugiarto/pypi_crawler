{
  "info": {
    "author": "Walt Woods",
    "author_email": "woodswalben@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# pyobjconfig\n\n`pyobjconfig` is a module suite designed with Machine Learning (ML) experiments in mind, but should work for a broad range of hierarchical configurations.\n\n## Example usage\n\nPyobjconfig supports configuring nested objects, such that each object has control over its own configuration:\n\n```python\n\nimport argparse\nimport pyobjconfig as poc\n\n# Any class which plugs into pyobjconfig should derive from `ConfigurableObject`\nclass Child(poc.ConfigurableObject):\n    # To register configuration options for this class, add a `config` member\n    # which derives from a pydantic model.\n    class config(poc.PydanticBaseModel):\n        # Pydantic handles basic type validation and allows default values to be\n        # set\n        inner: str = 'hello'\n\nclass Base(poc.ConfigurableObject):\n    class config(poc.PydanticBaseModel):\n        hello: str = 'hi'\n\n    # Assigning a class deriving from `ConfigurableObject` as a member of a\n    # class definition results in a nested object, which will be instantiated\n    # using parameters from the command line.\n    child = Child\n\nap = argparse.ArgumentParser()\nBase.argparse_setup(ap)\n\nargs = ap.parse_args(['--child-inner', 'beep']).__dict__\nobj = Base.argparse_create(args)\nprint(obj.config.hello)  # Prints 'hi'\nprint(obj.child.config.inner)  # Prints 'beep'\n\nap.print_help()\n# usage: ipython [-h] [--hello HELLO] [--child-inner CHILD-INNER]\n#\n# optional arguments:\n#   -h, --help            show this help message and exit\n#   --hello HELLO         Default: hi\n#   --child-inner CHILD-INNER\n#                         Default: hello\n\n```\n\nSwitches are also supported, such that the class (or value) of a child member may be changed at initialization time. Additionally, the `--help` for the `argparse` parser will change to reflect the choice of child:\n\n```python\nimport pyobjconfig as poc\nclass A(poc.ConfigurableObject):\n    pass\nclass B(poc.ConfigurableObject):\n    pass\nclass Base(poc.ConfigurableObject):\n    child = poc.ConfigurableSwitch({\n        'a': A,\n        'b': B,\n        'none': None,\n    }, default='none')\n```\n\nExperimentally, environment variables are supported. Not yet well tested, but calling `argparse_create(args, env='PREFIX')` will allow e.g. `PREFIX_CHILD=a` to be specified in the environment. Arguments on the command line take precedence.\n\n```python\nimport argparse\nimport pyobjconfig as poc\n```\n\n## Usage with pytorch\n\nPytorch overrides `__setattr__` in a way that is incompatible with the `ConfigurableObject` class provided by `pyobjconfig`. To work around this, use the `pyobjconfig.torch.ConfigurableModule` as a drop-in replacement for `torch.nn.Module`.\n\n\n# Changelog\n* 2021-01-14 - v0.1.2. Support lists on the command line.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wwoods/pyobjconfig",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyobjconfig",
    "package_url": "https://pypi.org/project/pyobjconfig/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyobjconfig/",
    "project_urls": {
      "Homepage": "https://github.com/wwoods/pyobjconfig"
    },
    "release_url": "https://pypi.org/project/pyobjconfig/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An argparse+pydantic-based configuration system for Python.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9137707,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eacc0b463f8fe2b027e3c7d83eac05a94baaed409c74f8cbe73ef6c1b6a7989e",
          "md5": "5505fc55b985092aa63855a93fb8852e",
          "sha256": "b323e22c73af05da6ff5c07f8f831a9a3d1694cb3e2c4157e40353bbd9badecf"
        },
        "downloads": -1,
        "filename": "pyobjconfig-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5505fc55b985092aa63855a93fb8852e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6328,
        "upload_time": "2020-10-14T17:47:40",
        "upload_time_iso_8601": "2020-10-14T17:47:40.586784Z",
        "url": "https://files.pythonhosted.org/packages/ea/cc/0b463f8fe2b027e3c7d83eac05a94baaed409c74f8cbe73ef6c1b6a7989e/pyobjconfig-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa1b305c283f8d92bd3299fe5409ff7fbe5b7f0b69c7161cc5105d059fdc110f",
          "md5": "4f10a7900363c9b2c03a98cc044aa908",
          "sha256": "886d5e1e157c040cfa84774d831661bf339295ba051a5c61b715437c70267bfc"
        },
        "downloads": -1,
        "filename": "pyobjconfig-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4f10a7900363c9b2c03a98cc044aa908",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6312,
        "upload_time": "2020-10-14T17:57:33",
        "upload_time_iso_8601": "2020-10-14T17:57:33.282199Z",
        "url": "https://files.pythonhosted.org/packages/aa/1b/305c283f8d92bd3299fe5409ff7fbe5b7f0b69c7161cc5105d059fdc110f/pyobjconfig-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38cb33a278f6fa062ab18f27dd4af3fa9159593e819bcd68d7380f80eab90e08",
          "md5": "d1501431af2e30ac2c88b3391e572a12",
          "sha256": "d8ac9dc66e57621e798283665e575bd9158e6663bd6adccff24b564bfdddcdb0"
        },
        "downloads": -1,
        "filename": "pyobjconfig-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d1501431af2e30ac2c88b3391e572a12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6558,
        "upload_time": "2021-01-14T22:46:13",
        "upload_time_iso_8601": "2021-01-14T22:46:13.532034Z",
        "url": "https://files.pythonhosted.org/packages/38/cb/33a278f6fa062ab18f27dd4af3fa9159593e819bcd68d7380f80eab90e08/pyobjconfig-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "38cb33a278f6fa062ab18f27dd4af3fa9159593e819bcd68d7380f80eab90e08",
        "md5": "d1501431af2e30ac2c88b3391e572a12",
        "sha256": "d8ac9dc66e57621e798283665e575bd9158e6663bd6adccff24b564bfdddcdb0"
      },
      "downloads": -1,
      "filename": "pyobjconfig-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d1501431af2e30ac2c88b3391e572a12",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6558,
      "upload_time": "2021-01-14T22:46:13",
      "upload_time_iso_8601": "2021-01-14T22:46:13.532034Z",
      "url": "https://files.pythonhosted.org/packages/38/cb/33a278f6fa062ab18f27dd4af3fa9159593e819bcd68d7380f80eab90e08/pyobjconfig-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}