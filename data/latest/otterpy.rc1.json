{
  "info": {
    "author": "Volodymyr Biloshytskyi",
    "author_email": "volbil@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Otter\n\nOtter is framework for creating microservices in Flask like fassion using [RPC](https://en.wikipedia.org/wiki/Remote_procedure_call) communication via message queue. Its built in top of [kiwiPy](https://github.com/aiidateam/kiwipy) library.\n\n## Application\n\nSimple Otter application looks liks this.\n\n```python\nfrom otter import Otter\nimport hashlib\nimport time\n\napp = Otter()\n\n@app.add_broadcast([\"message.*\"])\ndef example_broadcast(comm, body, sender, subject, correlation_id):\n    print(f\"Received {body}\")\n\n@app.add_task(\"example.task\")\ndef example_task(comm, delay):\n    time.sleep(delay)\n    print(f\"Done waiting {delay} seconds\")\n\n@app.add_rpc(\"example.hash\")\ndef example_hash(comm, data):\n    return {\n        \"result\": hashlib.sha256(\n            data.encode(\"utf-8\")\n        ).hexdigest()\n    }\n\napp.run(\"amqp://guest:guest@127.0.0.1/\", debug=True)\n```\n\n## Client\n\nYou can communicate with Otter application using `Client`.\n\n```python\nfrom otter import Client\n\nclient = Client(\"amqp://guest:guest@127.0.0.1/\")\n\nif client.comm:\n    # Broadcast message to anyone who listens\n    client.broadcast(\"otter\", subject=\"message.send\")\n\n    # Send task to remote worker\n    client.task(5)\n\n    # Send rpc request to hash \"otter\" and wait for the result\n    data = client.rpc(\"example.hash\", \"otter\").result()\n\nclient.close()\n```\n\n## Blueprints\n\nYou can use Flask like blueprints in order to organize and split your application into different modules.\n\n```python\nfrom otter import Blueprint\n\nblueprint = Blueprint()\n\n@blueprint.add_rpc(\"hello.world\")\ndef example_hash(comm, data):\n    return {\"result\": \"Hello world from blueprint!\"}\n\n```\n\nAfter that blueprint can be initialized using `register_blueprint` method.\n\n```python\napp.register_blueprint(blueprint)\n```\n\n## Decorators\n\nIn most cases you will use JSON to communicate between your microservices, thats why Otter has built in decorator `@use_args` which uses Marshmallow for data validation.\n\n```python\nfrom marshmallow import fields, validate\nfrom otter.decorators import use_args\n\nlogin_args = {\n    \"password\": fields.Str(required=True, validate=validate.Length(min=8)),\n    \"email\": fields.Email(required=True)\n}\n\n@app.add_rpc(\"auth.login\")\n@use_args(login_args)\ndef login(comm, data):\n    return {\"args\": data}\n\n```\n\n### Foreword\n\nThis is experimental software, any contributions are welcome!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/volbil/otter",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "otterpy",
    "package_url": "https://pypi.org/project/otterpy/",
    "platform": "",
    "project_url": "https://pypi.org/project/otterpy/",
    "project_urls": {
      "Homepage": "https://github.com/volbil/otter"
    },
    "release_url": "https://pypi.org/project/otterpy/1.0/",
    "requires_dist": [
      "aio-pika (==6.8.0)",
      "aiormq (==3.3.1)",
      "async-generator (==1.10)",
      "deprecation (==2.1.0)",
      "idna (==3.2)",
      "kiwipy (==0.7.4)",
      "marshmallow (==3.13.0)",
      "multidict (==5.1.0)",
      "packaging (==21.0)",
      "pamqp (==2.3.0)",
      "pyparsing (==2.4.7)",
      "pytray (==0.3.2)",
      "PyYAML (==5.4.1)",
      "shortuuid (==1.0.1)",
      "yarl (==1.6.3)"
    ],
    "requires_python": "",
    "summary": "Otter - framework for microservices.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11633976,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca03af7c0ffaebafd942fd672b1019896b60fe92c4b47acb8767081d25831e10",
          "md5": "1e3f783b049e36cd6fcbe413ec9c19d1",
          "sha256": "655d82fcd56c695b8631e4c2c043437a67aa2abf910faec28d0501878e17957a"
        },
        "downloads": -1,
        "filename": "otterpy-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e3f783b049e36cd6fcbe413ec9c19d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6230,
        "upload_time": "2021-10-02T19:14:22",
        "upload_time_iso_8601": "2021-10-02T19:14:22.718869Z",
        "url": "https://files.pythonhosted.org/packages/ca/03/af7c0ffaebafd942fd672b1019896b60fe92c4b47acb8767081d25831e10/otterpy-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "080a6a9fb7965b85728d81dcd3c8c0aa818ad83d36561e4d9decd174089b8752",
          "md5": "3db869e1a3c152d0dedd7019586a3d8c",
          "sha256": "09c98d990dfae6d98083ba4853db641d53a772422e07e0d3c24046bed3ac74ae"
        },
        "downloads": -1,
        "filename": "otterpy-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3db869e1a3c152d0dedd7019586a3d8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5048,
        "upload_time": "2021-10-02T19:14:24",
        "upload_time_iso_8601": "2021-10-02T19:14:24.587373Z",
        "url": "https://files.pythonhosted.org/packages/08/0a/6a9fb7965b85728d81dcd3c8c0aa818ad83d36561e4d9decd174089b8752/otterpy-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca03af7c0ffaebafd942fd672b1019896b60fe92c4b47acb8767081d25831e10",
        "md5": "1e3f783b049e36cd6fcbe413ec9c19d1",
        "sha256": "655d82fcd56c695b8631e4c2c043437a67aa2abf910faec28d0501878e17957a"
      },
      "downloads": -1,
      "filename": "otterpy-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1e3f783b049e36cd6fcbe413ec9c19d1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6230,
      "upload_time": "2021-10-02T19:14:22",
      "upload_time_iso_8601": "2021-10-02T19:14:22.718869Z",
      "url": "https://files.pythonhosted.org/packages/ca/03/af7c0ffaebafd942fd672b1019896b60fe92c4b47acb8767081d25831e10/otterpy-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "080a6a9fb7965b85728d81dcd3c8c0aa818ad83d36561e4d9decd174089b8752",
        "md5": "3db869e1a3c152d0dedd7019586a3d8c",
        "sha256": "09c98d990dfae6d98083ba4853db641d53a772422e07e0d3c24046bed3ac74ae"
      },
      "downloads": -1,
      "filename": "otterpy-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3db869e1a3c152d0dedd7019586a3d8c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5048,
      "upload_time": "2021-10-02T19:14:24",
      "upload_time_iso_8601": "2021-10-02T19:14:24.587373Z",
      "url": "https://files.pythonhosted.org/packages/08/0a/6a9fb7965b85728d81dcd3c8c0aa818ad83d36561e4d9decd174089b8752/otterpy-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}