{
  "info": {
    "author": "Ryan Hausen & Brant Robertson",
    "author_email": "rhausen@ucsc.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Scientific/Engineering"
    ],
    "description": "\n\n.. image:: ./morpheus-core.png\n\n\n\n.. image:: https://travis-ci.com/morpheus-project/morpheus-core.svg?branch=master\n    :target: https://app.travis-ci.com/morpheus-project/morpheus-core.svg\n\n.. image:: https://codecov.io/gh/morpheus-project/morpheus-core/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/morpheus-project/morpheus-core\n\n.. image:: https://readthedocs.org/projects/morpheus-framework/badge/?version=latest\n    :target: https://morpheus-framework.readthedocs.io\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n\n.. image:: https://img.shields.io/badge/python-3.6-blue.svg\n    :target: https://www.python.org/downloads/release/python-360/\n\n``morpheus_core`` is python package that scales up per-pixel machine\nlearning methods to large astronomical images. It is designed to take an already\ntrained per-pixel machine learning/deep learning model and scale it up to large\nastronomical images. ``morpheus_core`` handles the following tasks:\n\n- Opening large FITS files\n- Extracting the batches of image subsamples\n- Feeding the batches to the provided model\n- Aggregates output classifications into large output FITS image\n- Parallelize classification using CPUs or NVIDIA GPUs\n\n\n``morpheus_core`` does this by using a 'sliding window' technique. Extracting a\nmoving window of a large image feeding to your model, and aggregating the\noutputs from your model back into an output image that is the same size as the\ninput image(s).An example of this aggregation can be seen below, as applied in\nthe original `Morpheus <https://morpheus-project.github.io/morpheus/>`_ paper:\n\n\n.. image:: ./morpheus.gif\n    :target: https://www.youtube.com/watch?v=hEL1h_dODkU\n\n\n``morpheus_core`` offers two methods for aggregating outputs on pixels:\ncalculating a running mean and variance, and a 'rank vote' method. The mean\nand variance outputs are recorded for each output class. The 'rank vote' method\nrecords which of the output classes has the highest value and keeps a 'running\ntally' of how many times an output class has the highest value and normnalizes\nthe counts to sum one when ``morpheus_core`` is finished classifying the\nimage.\n\n\nInstallation\n============\n\nRequirements:\n\n- ``astropy``\n- ``dill``\n- ``numpy``\n- ``tqdm``\n\n\n.. code-block:: bash\n\n    pip install morpheus-core\n\n\nUsuage\n======\n\nSetup\n-----\n\nTo use ``morpheus_core`` to apply your model to astronomical images you\nneed to provide ``morpheus_core`` with your model in the form of a\n``Callable`` function and the inputs arrays in the form of a list of ``numpy``\narrays or a list of strings that are the file locations of the ``fits`` files\nthat are inputs.\n\n.. code-block:: python\n\n    from morpheus_core import morpheus_core\n\n    n_classes = 5             # number of classes that are output from the model\n    batch_size = 16           # number of samples to extract per batch\n    window_shape = (100, 100) # (height, width) of each sample\n\n    output_hduls, output_arrays = morpheus_core.predict(\n        model,        # your model in a callable from\n        model_inputs, # list of numpy arrays or strings that point to fits files\n        n_classes,\n        batch_size,\n        window_shape\n    )\n\n``output_hduls`` is a list of ``astropy.io.fits.HDUList`` objects that\ncorrespond to the ``output_arrays`` if ``model_inputs`` are strings. If\n``model_inputs`` are ``numpy`` arrays then this is an empty list.\n``output_arrays`` is a list containing the ``morpheus_core`` aggregated\nclassifications and the ``n`` array indicating how many times each pixel in the\nimage was classified by the ``model``.\n\nOutput Format\n-------------\n\n``morpheus_core`` can aggregate multiple outputs for single pixels in one\nof two ways. The first is by recording the mean and the variance for predictions\nfor each class in each pixel. This is stored by adding an extra dimenion in the\noutput array. For example, if the input array has a shape of ``[1000, 1000, 1]``\nand ``n_classes=3`` then the output array will have the shape\n``[1000, 1000, 3, 2]`` where the 3rd dimenion is the number of classes and the\nlast dimension are the mean and the variance in that order. The other method\nfor aggregating outputs is by a \"rank vote\" method. Which keeps a running tally\nof how many times a class was the top classification and then divides by ``n``.\nThe output shape for the rank vote aggregation for the same input array\nwould be ``[1000, 1000, 3]``.\n\nParallelization\n---------------\n\n``morpheus_core`` supports the parallel classification of large images by\nsplitting the input along the first dimension (height typically), classifying\neach piece in parallel, and then combining the resulting classifications into a\nsingle classified image. You can parallelize over GPUS or CPUS, both methods\nrequire that the ``out_dir`` be provided so that ``morpheus_core`` knows\nwhere to save the subsets of the images and their classifications. Further your\nmodel gets saved into each subdirectory via ``dill`` and so ``model`` must be\na ``dill``-pickleable function.\n\nGPUs\n****\n\nTo parallelize the classification of a large image over multiple GPUs, the\n``gpus`` argument must be provided and should be a list of the integer GPU ids\nfor the GPUs to use. Each GPU will be assigned to one split of the input. You\ncan get the GPU ids by running ``nvidia-smi`` on your system. Currently only\nNVIDIA GPUs are supported.\n\n.. code-block:: python\n\n    from morpheus_core import morpheus_core\n\n    n_classes = 5             # number of classes that are output from the model\n    batch_size = 16           # number of samples to extract per batch\n    window_shape = (100, 100) # (height, width) of each sample\n    gpus = [0, 1, 2]          # GPUs to use\n    out_dir=\".\"\n\n    output_hduls, output_arrays = morpheus_core.predict(\n        model,        # your model in a callable from\n        model_inputs, # list of numpy arrays or strings that point to fits files\n        n_classes,\n        batch_size,\n        window_shape,\n        gpus=gpus,\n        out_dir=\".\"\n    )\n\nThe above example will split ``model_inputs`` along the first dimenion three\nways equally, into three subdirectories within ``out_dir``, called \"0\", \"1\", \"2\".\nAfter each subprocesses has finished classifying the image,\n``morpheus_core`` stiches each of the outputs in the subdirectories into\na single large output in ``out_dir`` and removes the subdirectories.\n\nCPUs\n****\n\nTo parallelize the classification of a large image over multiple CPUs, the\n``cpus`` argument must be provided and an integer indicating how many processes\nto use for parallelization. Each process will be assigned to one split of the\ninput.\n\n.. code-block:: python\n\n    from morpheus_core import morpheus_core\n\n    n_classes = 5             # number of classes that are output from the model\n    batch_size = 16           # number of samples to extract per batch\n    window_shape = (100, 100) # (height, width) of each sample\n    cpus = 3                  # Number of processes to use\n    out_dir=\".\"\n\n    output_hduls, output_arrays = morpheus_core.predict(\n        model,        # your model in a callable from\n        model_inputs, # list of numpy arrays or strings that point to fits files\n        n_classes,\n        batch_size,\n        window_shape,\n        cpus=cpus,\n        out_dir=\".\"\n    )\n\nThe above example will split ``model_inputs`` along the first dimenion three\nways equally, into three subdirectories within ``out_dir``, called \"0\", \"1\",\n\"2\". After each subprocesses has finished classifying the image,\n``morpheus_core`` stiches each of the outputs in the subdirectories into a\nsingle large output in ``out_dir`` and removes the subdirectories.\n\nNon-pickleable functions\n************************\n\n*For Parallelization Capabilities Only*\n\nIf you function is non-pickleable then you can write a wrapper class that\nbuilds and invokes your model. An example can be seen below:\n\n.. code-block:: python\n\n    import tensorflow as tf\n\n    class ModelWrapper:\n\n        def __init__(self, model_path):\n            self.model_path = model_path\n            self.model = None\n\n        def __call__(self, value):\n\n            import tensorflow as tf\n            if self.model is None:\n                self.model = tf.keras.models.load_model(\n                    self.model_path,\n                    custom_objects={\"tf\":tf},\n                )\n\n            return tf.nn.softmax(self.model(value)).numpy()\n\nYou then pass the ``ModelWrapper`` class as the the model arugment to the\n``morpheus_core``, like below:\n\n.. code-block:: python\n\n    from morpheus_core import morpheus_core\n\n    apply_model = ModelWrapper(\"/path/to/model/file\")\n\n    inputs = [\"input.fits\"]\n\n    n_classes = 5\n    batch_size = 5\n    window_shape = (40,40)\n\n    morpheus_core.predict(\n        apply_model,\n        inputs,\n        n_classes,\n        batch_size,\n        window_shape,\n        stride = (1, 1),\n        aggregate_method=morpheus_core.AGGREGATION_METHODS.RANK_VOTE,\n        out_dir=\".\",\n        cpus=2\n    )\n\n\n\nCitation\n========\n\nIf you use this package in your research please cite the original paper:\n\n.. code-block:: bash\n\n    @ARTICLE{2020ApJS..248...20H,\n        author = {{Hausen}, Ryan and {Robertson}, Brant E.},\n        title = \"{Morpheus: A Deep Learning Framework for the Pixel-level Analysis of Astronomical Image Data}\",\n        journal = {\\apjs},\n        keywords = {Galaxy classification systems, Galaxies, Extragalactic astronomy, Convolutional neural networks, Computational methods, GPU computing, Astrophysics - Astrophysics of Galaxies, Computer Science - Machine Learning},\n        year = 2020,\n        month = may,\n        volume = {248},\n        number = {1},\n        eid = {20},\n        pages = {20},\n        doi = {10.3847/1538-4365/ab8868},\n        archivePrefix = {arXiv},\n        eprint = {1906.11248},\n        primaryClass = {astro-ph.GA},\n        adsurl = {https://ui.adsabs.harvard.edu/abs/2020ApJS..248...20H},\n        adsnote = {Provided by the SAO/NASA Astrophysics Data System}\n    }\n\n\n\n\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/morpheus-project/morpheus-core",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "morpheus-core",
    "package_url": "https://pypi.org/project/morpheus-core/",
    "platform": null,
    "project_url": "https://pypi.org/project/morpheus-core/",
    "project_urls": {
      "Homepage": "https://github.com/morpheus-project/morpheus-core"
    },
    "release_url": "https://pypi.org/project/morpheus-core/0.1.13/",
    "requires_dist": [
      "dill",
      "numpy",
      "astropy",
      "tqdm"
    ],
    "requires_python": ">=3.6",
    "summary": "A framework for scaling pixel-level analysis to large images",
    "version": "0.1.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15008727,
  "releases": {
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab2cc0aa5241804c57962baa55b6f0674a1e80e14e87ecba3247f0b205614ed7",
          "md5": "af4973c157c7fe9f865b27f6d1735dcc",
          "sha256": "45c9c0813697d1a281819b224e189b6c144052c2295a3e5d7520a23d142d9803"
        },
        "downloads": -1,
        "filename": "morpheus_core-0.1.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af4973c157c7fe9f865b27f6d1735dcc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24365,
        "upload_time": "2022-08-29T02:06:46",
        "upload_time_iso_8601": "2022-08-29T02:06:46.635995Z",
        "url": "https://files.pythonhosted.org/packages/ab/2c/c0aa5241804c57962baa55b6f0674a1e80e14e87ecba3247f0b205614ed7/morpheus_core-0.1.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecd4adfa77ff051d0ff7feb6c0ced30b7bd552ecab36a27fd6ed4ee20c8b1042",
          "md5": "2df6829a5580228290c06bac190bdba1",
          "sha256": "1cc350f54453a4de391ba249a53971a90eba1644200d8aa38a4b68fecf350b39"
        },
        "downloads": -1,
        "filename": "morpheus-core-0.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "2df6829a5580228290c06bac190bdba1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18402,
        "upload_time": "2022-08-29T02:06:49",
        "upload_time_iso_8601": "2022-08-29T02:06:49.626110Z",
        "url": "https://files.pythonhosted.org/packages/ec/d4/adfa77ff051d0ff7feb6c0ced30b7bd552ecab36a27fd6ed4ee20c8b1042/morpheus-core-0.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35a5b29e83b3a00f9bc0dcf806536b081070d92b91d9e04451ac63e81116caa5",
          "md5": "91c113e572920280ecf97e87f2ac81d8",
          "sha256": "4d20bb2d8b6501f3b0397f6683ba0672751603b53b062d0668ecc73366fd1c5c"
        },
        "downloads": -1,
        "filename": "morpheus_core-0.1.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91c113e572920280ecf97e87f2ac81d8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24379,
        "upload_time": "2022-09-06T15:56:12",
        "upload_time_iso_8601": "2022-09-06T15:56:12.139576Z",
        "url": "https://files.pythonhosted.org/packages/35/a5/b29e83b3a00f9bc0dcf806536b081070d92b91d9e04451ac63e81116caa5/morpheus_core-0.1.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a04ae408ac4450637217f4b4265ed237c7c765606b820fcfb5a009211adbe41c",
          "md5": "e02655a4ab6de57fc51beda884b00169",
          "sha256": "dcf77c2e9e8db684226ca55a15664137ecac30d7ee28fec4c13eb16c9cf4502d"
        },
        "downloads": -1,
        "filename": "morpheus-core-0.1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "e02655a4ab6de57fc51beda884b00169",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22350,
        "upload_time": "2022-09-06T15:56:14",
        "upload_time_iso_8601": "2022-09-06T15:56:14.018842Z",
        "url": "https://files.pythonhosted.org/packages/a0/4a/e408ac4450637217f4b4265ed237c7c765606b820fcfb5a009211adbe41c/morpheus-core-0.1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c2ab31b60174044d353db1acaef49d6c4aef514cd1bb9a206bf44d71adc38b3",
          "md5": "4a9958cee6a9322522b42c739c7efd55",
          "sha256": "3a09b1d5702e0cd6411e9d7b59334a366b208493cbdbbf7ccad4bf17df57d0b1"
        },
        "downloads": -1,
        "filename": "morpheus_core-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a9958cee6a9322522b42c739c7efd55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24124,
        "upload_time": "2020-09-24T20:42:16",
        "upload_time_iso_8601": "2020-09-24T20:42:16.710112Z",
        "url": "https://files.pythonhosted.org/packages/9c/2a/b31b60174044d353db1acaef49d6c4aef514cd1bb9a206bf44d71adc38b3/morpheus_core-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8593800f9067685e9a73d054dbe053b150194bfe1c7949e38ba505b2d0984ed",
          "md5": "4668174e0a4bb75914c82a03596045d7",
          "sha256": "1499da287776c727242ef14e8bd4a21740d7eff334632992b805ad3be0a1d8c4"
        },
        "downloads": -1,
        "filename": "morpheus-core-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "4668174e0a4bb75914c82a03596045d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22863,
        "upload_time": "2020-09-24T20:42:19",
        "upload_time_iso_8601": "2020-09-24T20:42:19.275607Z",
        "url": "https://files.pythonhosted.org/packages/a8/59/3800f9067685e9a73d054dbe053b150194bfe1c7949e38ba505b2d0984ed/morpheus-core-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a42e17c390330e71756de7dfc968c13dfe8012175538783ce1defd711ea846f",
          "md5": "4aaecf0e341fbcf9575026f7310d0ba6",
          "sha256": "04721673285412d2233d4fa9ce49e2e66112bf0f24516dd0946443cc79a594db"
        },
        "downloads": -1,
        "filename": "morpheus_core-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4aaecf0e341fbcf9575026f7310d0ba6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24162,
        "upload_time": "2020-12-16T00:55:57",
        "upload_time_iso_8601": "2020-12-16T00:55:57.612468Z",
        "url": "https://files.pythonhosted.org/packages/1a/42/e17c390330e71756de7dfc968c13dfe8012175538783ce1defd711ea846f/morpheus_core-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e740c2c126ed37dbce284a9d4f3f7d761219aee5fba3a4b0a3d932d57ba9bb2",
          "md5": "26ba4fc330910ac1b80b8dd00b599639",
          "sha256": "9048cc9156354ad30f4fad75a5e54e1ee47d9b3ac647e6f4519c584a2ee51a33"
        },
        "downloads": -1,
        "filename": "morpheus-core-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "26ba4fc330910ac1b80b8dd00b599639",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22721,
        "upload_time": "2020-12-16T00:55:59",
        "upload_time_iso_8601": "2020-12-16T00:55:59.434042Z",
        "url": "https://files.pythonhosted.org/packages/0e/74/0c2c126ed37dbce284a9d4f3f7d761219aee5fba3a4b0a3d932d57ba9bb2/morpheus-core-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7dd784808e0f47a331e9b6d5e19a3be367608aeaf440a694ada29b4515d11646",
          "md5": "de609bee42708a5d2ca1540d3a6745ee",
          "sha256": "ff46c952284d5558d66cfcd49a3d0d50756331653a6c50bc3584d10fcd2f223f"
        },
        "downloads": -1,
        "filename": "morpheus_core-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de609bee42708a5d2ca1540d3a6745ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24331,
        "upload_time": "2022-08-25T22:17:58",
        "upload_time_iso_8601": "2022-08-25T22:17:58.064673Z",
        "url": "https://files.pythonhosted.org/packages/7d/d7/84808e0f47a331e9b6d5e19a3be367608aeaf440a694ada29b4515d11646/morpheus_core-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ee9a13b380b1bdd40fbe9fd91a0542bb7ce04ee758b134bfbc9e36d639cf638",
          "md5": "b29287d15ad3f8c35d3a11d17eb429e9",
          "sha256": "ec202bc829e724a3a947f2a799502bb03af3befe42b04f878c1f475b2154fbea"
        },
        "downloads": -1,
        "filename": "morpheus-core-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "b29287d15ad3f8c35d3a11d17eb429e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18402,
        "upload_time": "2022-08-25T22:18:00",
        "upload_time_iso_8601": "2022-08-25T22:18:00.088567Z",
        "url": "https://files.pythonhosted.org/packages/4e/e9/a13b380b1bdd40fbe9fd91a0542bb7ce04ee758b134bfbc9e36d639cf638/morpheus-core-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35a5b29e83b3a00f9bc0dcf806536b081070d92b91d9e04451ac63e81116caa5",
        "md5": "91c113e572920280ecf97e87f2ac81d8",
        "sha256": "4d20bb2d8b6501f3b0397f6683ba0672751603b53b062d0668ecc73366fd1c5c"
      },
      "downloads": -1,
      "filename": "morpheus_core-0.1.13-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "91c113e572920280ecf97e87f2ac81d8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 24379,
      "upload_time": "2022-09-06T15:56:12",
      "upload_time_iso_8601": "2022-09-06T15:56:12.139576Z",
      "url": "https://files.pythonhosted.org/packages/35/a5/b29e83b3a00f9bc0dcf806536b081070d92b91d9e04451ac63e81116caa5/morpheus_core-0.1.13-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a04ae408ac4450637217f4b4265ed237c7c765606b820fcfb5a009211adbe41c",
        "md5": "e02655a4ab6de57fc51beda884b00169",
        "sha256": "dcf77c2e9e8db684226ca55a15664137ecac30d7ee28fec4c13eb16c9cf4502d"
      },
      "downloads": -1,
      "filename": "morpheus-core-0.1.13.tar.gz",
      "has_sig": false,
      "md5_digest": "e02655a4ab6de57fc51beda884b00169",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 22350,
      "upload_time": "2022-09-06T15:56:14",
      "upload_time_iso_8601": "2022-09-06T15:56:14.018842Z",
      "url": "https://files.pythonhosted.org/packages/a0/4a/e408ac4450637217f4b4265ed237c7c765606b820fcfb5a009211adbe41c/morpheus-core-0.1.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}