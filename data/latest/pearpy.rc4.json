{
  "info": {
    "author": "Aiden Szeto",
    "author_email": "aszeto35@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "[![Build](https://github.com/MLH-Fellowship/pod-3.1.4-team-2/actions/workflows/build.yml/badge.svg)](https://github.com/MLH-Fellowship/pod-3.1.4-team-2/actions/workflows/build.yml)\n[![PyPI version](https://img.shields.io/pypi/v/pearpy)](https://pypi.org/project/pearpy/)\n\n# Pearpy\nThe Python package for (pear)allelizing your tasks across multiple CPU threads.\n\n## Installation\nThe latest version of Pearpy can be installed with:\n```\npip install pearpy\n```\nTo stay up to date with Pearpy's releases, visit the [official page](https://pypi.org/project/pearpy/) on PyPi!\n\n## Usage\n 1. Create a `Pear()` object. This will be a wrapper for all of your multithreaded processes.\n 2. Identify the functions on which you would like to paralleilze computation.\n 3. Add your tasks to the Pear object. If a potential race condition is detected, an error will be thrown.\n 4. Run the paraellelized processes.\n\n## Example\n```\nfrom pearpy.pear import Pear\n\n# First function to be parallelized\ndef t1(num1, num2):\n    print('t1: ', num1 + num2)\n\n# Second function to be paralellized\ndef t2(num):\n    print('t2: ', num)\n\n# Create pear object, add threads, and run\npear = Pear()\npear.add_thread(t1, [4, 5])\npear.add_thread(t2, 4)\npear.run()\n```\n\n## Race Condition Handling\nWhen multiple threads utilize the same function, Pear will automatically generate locks for each resource. This allows developers to utilize Pear's multithreading without having to worry about inaccurate data caused by race conditions. The following example shows how race conditions are handled:\n```\nfrom pearpy.pear import Pear\n\nglobal_var = 10\n\n# This function reads from and writes to a global variable\ndef t_duplicated(num):\n    global global_var\n    print('t_duplicated: ', num + global_var)\n    global_var += 1\n\n# Pear object created with two threads accessing a shared resource\n# A race condition is detected and locks are generated\npear = Pear()\npear.add_thread(t_duplicated, 1) # This should return 11 because 1 + 10 = 11\npear.add_thread(t_duplicated, 1) # This should return 12 because global_var is incremented\npear.run()\n\n##########\n# OUTPUT #\n##########\nt_duplicated: 11\nt_duplicated: 12\n```\n\n## Benchmarks and Tests\nBenchmarks can be examined via the `make benchmark` command. This will display the threaded vs unthreaded runtimes on a set script, along with the percent improvement between the two. Here is an example of what the benchmarks should look like:\n```\n----------------------------------------------------------------------\nTHREADED BENCHMARK\n3.8507602214813232 s\n----------------------------------------------------------------------\nUNTHREADED BENCHMARK\n13.90523624420166 s\n----------------------------------------------------------------------\nImprovement:  361.1036638072611 %\n.\n----------------------------------------------------------------------\nRan 1 test in 17.757s\n\nOK\n```\nTo run tests, utilize the `make test` command. This will output the results of the functions called in the `/tests/test_pear.py` script, along with the status of the tests themselves. The console will display 'OK' if the tests are passing.\n\n## Contributing\nPear is open source and contributions from anyone are welcome. To contribute to this project, please submit issues and pull requests via GitHub. In order to successfully merge a pull request, all unit tests must be passed when run via `make test`. Thank you!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/MLH-Fellowship/pear/archive/refs/tags/v0.1.3.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MLH-Fellowship/pear",
    "keywords": "multithreading,parallelism,processes",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pearpy",
    "package_url": "https://pypi.org/project/pearpy/",
    "platform": "",
    "project_url": "https://pypi.org/project/pearpy/",
    "project_urls": {
      "Download": "https://github.com/MLH-Fellowship/pear/archive/refs/tags/v0.1.3.tar.gz",
      "Homepage": "https://github.com/MLH-Fellowship/pear"
    },
    "release_url": "https://pypi.org/project/pearpy/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python package for writing multithreaded code.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11192153,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7fc9f8f46d2981f195cd43e3df8519012f05700d4740ed4773de606ecc97e54",
          "md5": "359f4621e65d1ad4e9602f0f65bc48a7",
          "sha256": "119422373b76f1c2127076e0398f8d7958e3dd17f08d6d2f4a048278a984a128"
        },
        "downloads": -1,
        "filename": "pearpy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "359f4621e65d1ad4e9602f0f65bc48a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1911,
        "upload_time": "2021-08-11T23:11:26",
        "upload_time_iso_8601": "2021-08-11T23:11:26.648111Z",
        "url": "https://files.pythonhosted.org/packages/c7/fc/9f8f46d2981f195cd43e3df8519012f05700d4740ed4773de606ecc97e54/pearpy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "898775bccddccdfea77e8e1caa2fe7ed6c85dabeb81c2a324e0f3a9d1b8175f0",
          "md5": "02cfe3d240255b0b62d4b580a4520c67",
          "sha256": "8d40a6f4d784d306d57b9acf78a567c9b7503063fe41333c60b9d07be44b8b88"
        },
        "downloads": -1,
        "filename": "pearpy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "02cfe3d240255b0b62d4b580a4520c67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1901,
        "upload_time": "2021-08-11T23:27:00",
        "upload_time_iso_8601": "2021-08-11T23:27:00.896054Z",
        "url": "https://files.pythonhosted.org/packages/89/87/75bccddccdfea77e8e1caa2fe7ed6c85dabeb81c2a324e0f3a9d1b8175f0/pearpy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68bc023bdb306b5692a8ea46885fceeece3a5cc0713eba44f97b4a2229fc01df",
          "md5": "d7b47d8f05c3b89500eaad9d000720c1",
          "sha256": "8e9f7c14683714e15a1e9220b45d8cbb6e9d33c6b7d12f0dfcac684b29741c3e"
        },
        "downloads": -1,
        "filename": "pearpy-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d7b47d8f05c3b89500eaad9d000720c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4729,
        "upload_time": "2021-08-11T23:49:13",
        "upload_time_iso_8601": "2021-08-11T23:49:13.064063Z",
        "url": "https://files.pythonhosted.org/packages/68/bc/023bdb306b5692a8ea46885fceeece3a5cc0713eba44f97b4a2229fc01df/pearpy-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4fa3847d8ff9b4455835634d3176469e60d14a0b0a9d8df37e76d0f692a49b5",
          "md5": "92b21e2b664d4d9ace429ecba8cf4464",
          "sha256": "6ccb01ada483a92e53bd5b662fe65e603ae64de2063f207f61d6c6686a6d91b7"
        },
        "downloads": -1,
        "filename": "pearpy-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "92b21e2b664d4d9ace429ecba8cf4464",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4932,
        "upload_time": "2021-08-16T17:33:08",
        "upload_time_iso_8601": "2021-08-16T17:33:08.782449Z",
        "url": "https://files.pythonhosted.org/packages/e4/fa/3847d8ff9b4455835634d3176469e60d14a0b0a9d8df37e76d0f692a49b5/pearpy-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4fa3847d8ff9b4455835634d3176469e60d14a0b0a9d8df37e76d0f692a49b5",
        "md5": "92b21e2b664d4d9ace429ecba8cf4464",
        "sha256": "6ccb01ada483a92e53bd5b662fe65e603ae64de2063f207f61d6c6686a6d91b7"
      },
      "downloads": -1,
      "filename": "pearpy-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "92b21e2b664d4d9ace429ecba8cf4464",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4932,
      "upload_time": "2021-08-16T17:33:08",
      "upload_time_iso_8601": "2021-08-16T17:33:08.782449Z",
      "url": "https://files.pythonhosted.org/packages/e4/fa/3847d8ff9b4455835634d3176469e60d14a0b0a9d8df37e76d0f692a49b5/pearpy-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}