{
  "info": {
    "author": "Vivek Keshore",
    "author_email": "vivek.keshore@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# 🅕🅛🅐🅢🅚-🅓🅐🅝🅣🅘🅒\n\n*Flask-Dantic* is a Python package that would enable users to use Pydantic models for validations and serialization, thus making it easy to link Flask with Pydantic.\nIt can validate the request params, query args and path args.\n\nAlso, the package provides a serializer that serializes the database objects using the pydantic models. \nThis comes handy if you are using pydantic models for request and response in Flask.\n\nA single serialize call will take care of validating the returned response as well as serializing it. There are options to include or exclude certain fields or exclude/include fields with null values.\n\n[![PyPI](https://img.shields.io/pypi/v/flask-dantic?color=g)](https://pypi.org/project/flask-dantic/)\n![Codecov](https://img.shields.io/codecov/c/github/vivekkeshore/flask-dantic)\n[![Python package](https://github.com/vivekkeshore/flask-dantic/actions/workflows/python-package.yml/badge.svg)](https://github.com/vivekkeshore/flask-dantic/actions/workflows/python-package.yml)\n![LGTM Grade](https://img.shields.io/lgtm/grade/python/github/vivekkeshore/flask-dantic)\n[![GitHub license](https://img.shields.io/github/license/vivekkeshore/flask-dantic)](https://github.com/vivekkeshore/flask-dantic)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/flask-dantic)\n![Snyk Vulnerabilities for GitHub Repo](https://img.shields.io/snyk/vulnerabilities/github/vivekkeshore/flask-dantic)\n![GitHub repo size](https://img.shields.io/github/repo-size/vivekkeshore/flask-dantic)\n\n----\n\n### Compatibility\n\n\nThis package is compatible with Python >= 3.6\n\n## Installation\n\n\nInstall with pip:\n\n```bash\n    pip install flask-dantic\n```\n\n## Examples\n### Validating body parameters\n\n```python\n# Using the Pydantic model for request.\nfrom typing import Optional\n\nfrom flask import current_app as flask_app, request\nfrom pydantic import BaseModel\n\nfrom flask_dantic import pydantic_validator\n\n\nclass UserCreateModel(BaseModel):\n    username: str\n    age: Optional[int] = None\n    phone: Optional[str] = None\n\n\n@flask_app.route(\"/user/create\", methods=[\"POST\"])\n@pydantic_validator(body=UserCreateModel)  # Pass the model against body kwarg.\ndef create_user():\n    \"\"\"\n        Request Json to create user that will be validated against UserModel\n        {\n            \"username\": \"Foo\",\n            \"age\": 42,\n            \"phone\": \"123-456-7890\"\n        }\n    \"\"\"\n    user_model = request.body_model\n    print(user_model.username, user_model.age, user_model.phone)\n```\n\n### Change the default validation error status code. Default status code is 422\n```python\n\n@flask_app.route(\"/user/create\", methods=[\"POST\"])\n# Changing the default validation error status code from default 422 to 400\n@pydantic_validator(body=UserCreateModel, validation_error_status_code=400)\ndef create_user():\n    \"\"\"\n        Request Json to create user that will be validated against UserModel\n        {\n            \"username\": \"Foo\",\n            \"age\": 42,\n            \"phone\": \"123-456-7890\"\n        }\n    \"\"\"\n    user_model = request.body_model\n    print(user_model.username, user_model.age, user_model.phone)\n```\n\n### Validating Query args - request.args\n\n```python\n# Using the Pydantic model for request.\nfrom typing import Optional\n\nfrom flask import current_app as flask_app, request\nfrom pydantic import BaseModel\n\nfrom flask_dantic import pydantic_validator\n\n\n# Sample url - https://localhost:5000/user/get?username=Foo&age=42\n# Here username and foo are pass are query args\n\nclass UserQueryModel(BaseModel):\n    username: str\n    age: Optional[int] = None\n\n\n@flask_app.route(\"/user/get\", methods=[\"GET\"])\n@pydantic_validator(query=UserQueryModel)  # Pass the model against query kwarg\ndef get_user():\n    user_query_model = request.query_model\n    print(user_query_model.username, user_query_model.age)\n```\n\n\n### Validating URL Path args\n\n```python\n# Using the Pydantic model for request.\n\nfrom flask import current_app as flask_app, request\nfrom pydantic import BaseModel, Field\n\nfrom flask_dantic import pydantic_validator\n\n# Sample url - https://localhost:5000/user/get/c55926d3-cbd0-4eea-963b-0bcfc5c40d46\n# Here the uuid is the dynamic path param.\n\nUUID_REGEX = \"[0-9a-f]{8}(?:-[0-9a-f]{4}){3}-[0-9a-f]{12}\"\n\n\nclass UserPathParamModel(BaseModel):\n    user_id: str = Field(..., regex=UUID_REGEX, description=\"ID of the user\")\n\n\n@flask_app.route(\"/user/get/<string:user_id>\", methods=[\"GET\"])\n@pydantic_validator(path_params=UserPathParamModel)  # Pass the model against path_params\ndef get_user(user_id):\n    path_param_model = request.path_param_model\n    print(path_param_model.user_id)\n```\n\n\n### Serialization using Pydantic module and returning the response.\n\n\n```python\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import Session\n\n\ndb_engine = create_engine(DB_CONNECT_STRING)  # DB connection string, ex \"sqlite:///my_app.db\"\ndb = Session(db_engine)\n```\n\n```python\nfrom http import HTTPStatus\nfrom typing import Optional\n\nfrom flask import current_app as flask_app, jsonify\nfrom pydantic import BaseModel\n\nfrom flask_dantic import serialize, pydantic_validator\n\n\nclass UserResponseModel(BaseModel):  # Define the pydantic model for serialization.\n    username: str\n    age: Optional[int] = None\n    phone: Optional[str] = None\n\n\n@flask_app.route(\"/user/list\", methods=[\"GET\"])\ndef get_all_users():\n    users = get_all_users_from_db()\n\n    # Pass the db records and pydantic model to serialize method. Set many as True if there are multiple records.\n    serialized_users = serialize(users, UserResponseModel, many=True)  # Serialize call\n    return jsonify(serialized_users), HTTPStatus.OK\n\n\n@flask_app.route(\"/user/get/<string:user_id>\", methods=[\"GET\"])\n@pydantic_validator(path_params=UserPathParamModel)  # Pass the model against path_params\ndef get_user(user_id):\n    user = get_single_user_by_id(user_id)\n\n    # Pass the db record and pydantic model to serialize method. Many is set to False by default.\n    user = serialize(user, UserResponseModel)  # Serialize call\n    return jsonify(user), HTTPStatus.OK\n```\n\n### Serialization - Dump directly to json. This is useful when you want to return the response as json without flask jsonify.\n\n```python\nfrom flask_dantic import serialize\n\n# Taking the same example from above. Modifying the serialize call.\n@flask_app.route(\"/user/get/<string:user_id>\", methods=[\"GET\"])\n@pydantic_validator(path_params=UserPathParamModel)  # Pass the model against path_params\ndef get_user(user_id):\n    user = get_single_user_by_id(user_id)\n\n    # Pass the db record and pydantic model to serialize method. Many is set to False by default.\n      # Serialize call\n    return serialize(user, UserResponseModel, json_dump=True), HTTPStatus.OK\n```\n\nTests\n-----\n\nRun tests:\n\n```bash\n    pytest\n```\n\n\nLicense\n-------\n\nFlask-Dantic is released under the MIT License. See the bundled [`LICENSE`](https://github.com/vivekkeshore/flask-dantic/blob/main/LICENSE) file\nfor details.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vivekkeshore/flask-dantic",
    "keywords": "sqlalchemy,alchemy,mysql,postgres,flask,mssql,sql,sqlite,serialize,pydantic,validate,request,orm,serialization,performance,database,relational",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flask-dantic",
    "package_url": "https://pypi.org/project/flask-dantic/",
    "platform": "any",
    "project_url": "https://pypi.org/project/flask-dantic/",
    "project_urls": {
      "Homepage": "https://github.com/vivekkeshore/flask-dantic"
    },
    "release_url": "https://pypi.org/project/flask-dantic/0.0.6/",
    "requires_dist": [
      "flask",
      "pydantic",
      "codecoverage ; extra == 'dev'",
      "pytest ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "This package provides a utility to validate pydantic request models and also serialize db object using pydantic models.",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14726722,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c66e866112985f6702c743afc10bb6848f267dc7a3c24a809ac6de78df4106ab",
          "md5": "55f091400867262f6362bb94dbeb4e7b",
          "sha256": "82f301df635b169e284b31cb623d03132ab72f9013c925f69cd295500e13b14d"
        },
        "downloads": -1,
        "filename": "flask_dantic-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "55f091400867262f6362bb94dbeb4e7b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13833,
        "upload_time": "2022-06-24T04:27:07",
        "upload_time_iso_8601": "2022-06-24T04:27:07.028980Z",
        "url": "https://files.pythonhosted.org/packages/c6/6e/866112985f6702c743afc10bb6848f267dc7a3c24a809ac6de78df4106ab/flask_dantic-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84328740211de420daea3bd5207f3d423f2877a9ca0f4e08b6437ab808321c02",
          "md5": "bf8be4f649afd80c2920fc5b5160a8d5",
          "sha256": "476b9c6d964f2b9e5d263e068aa417a54ee0ed7460167b7a851452ebbf91d92c"
        },
        "downloads": -1,
        "filename": "flask-dantic-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bf8be4f649afd80c2920fc5b5160a8d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13218,
        "upload_time": "2022-06-24T04:27:09",
        "upload_time_iso_8601": "2022-06-24T04:27:09.797364Z",
        "url": "https://files.pythonhosted.org/packages/84/32/8740211de420daea3bd5207f3d423f2877a9ca0f4e08b6437ab808321c02/flask-dantic-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15446a82ecefbab50932fcded8b0ffb5c5a60452c90146240869b8c0f8607f1a",
          "md5": "2a6c9fc8bf03b7d613a4b255f9102426",
          "sha256": "4c89490eaaf3793f1a9dc08d92e1a62a9e603b2c140fb312d6129677bf100f9b"
        },
        "downloads": -1,
        "filename": "flask_dantic-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a6c9fc8bf03b7d613a4b255f9102426",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13822,
        "upload_time": "2022-06-24T04:39:44",
        "upload_time_iso_8601": "2022-06-24T04:39:44.264893Z",
        "url": "https://files.pythonhosted.org/packages/15/44/6a82ecefbab50932fcded8b0ffb5c5a60452c90146240869b8c0f8607f1a/flask_dantic-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ca99a3f98dae0bc09a39ea37b2401c059ce800efdd51045f79ebdaee8c398ed",
          "md5": "a8552d30bb77307f355cf712b46e7def",
          "sha256": "93732edeae7a1e6d77bac3a37d976487e08ce7660e3ae11d7d1a509a68cc0857"
        },
        "downloads": -1,
        "filename": "flask-dantic-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a8552d30bb77307f355cf712b46e7def",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13187,
        "upload_time": "2022-06-24T04:39:46",
        "upload_time_iso_8601": "2022-06-24T04:39:46.639406Z",
        "url": "https://files.pythonhosted.org/packages/9c/a9/9a3f98dae0bc09a39ea37b2401c059ce800efdd51045f79ebdaee8c398ed/flask-dantic-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "732d4701d7a92b509fe22a4b4c91668f32903a2c1041091629f13e635a7b8de5",
          "md5": "0959c62bdeaf489ba6515947c49ca62f",
          "sha256": "6dd5100eb804befb0ff42c751c4eccc0adf89790d312c94289f0512a6c660ccc"
        },
        "downloads": -1,
        "filename": "flask_dantic-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0959c62bdeaf489ba6515947c49ca62f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14600,
        "upload_time": "2022-06-24T11:38:11",
        "upload_time_iso_8601": "2022-06-24T11:38:11.056268Z",
        "url": "https://files.pythonhosted.org/packages/73/2d/4701d7a92b509fe22a4b4c91668f32903a2c1041091629f13e635a7b8de5/flask_dantic-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c0b3060cfddb29491409e086d830cc5dbcb23fae89599da4d5efd55b95147b9",
          "md5": "b7bffa8f1db89635da59fbfd2a275044",
          "sha256": "f6b70067b74c12739e15081119b6cd840801452b4e46ce3a7def6206faa753a5"
        },
        "downloads": -1,
        "filename": "flask-dantic-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b7bffa8f1db89635da59fbfd2a275044",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13851,
        "upload_time": "2022-06-24T11:38:13",
        "upload_time_iso_8601": "2022-06-24T11:38:13.544883Z",
        "url": "https://files.pythonhosted.org/packages/9c/0b/3060cfddb29491409e086d830cc5dbcb23fae89599da4d5efd55b95147b9/flask-dantic-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e039824f802f6a3c9bf1e150a59b92d8b15cb7a205d752b23da344b81f018b7",
          "md5": "713b8b843c81ff945d566443098d4382",
          "sha256": "b4efcb5d7a4faa1ac0d9a82821cdc7bc42cdafe3aa6bd448a9d6f9989d358137"
        },
        "downloads": -1,
        "filename": "flask_dantic-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "713b8b843c81ff945d566443098d4382",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14836,
        "upload_time": "2022-07-02T20:17:56",
        "upload_time_iso_8601": "2022-07-02T20:17:56.534880Z",
        "url": "https://files.pythonhosted.org/packages/3e/03/9824f802f6a3c9bf1e150a59b92d8b15cb7a205d752b23da344b81f018b7/flask_dantic-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61b968193ec67e8e67d2620053fcc97742345f7f578c76f9cfc00f5f858c81b9",
          "md5": "612f6cc78fd4894849a86be43eeae4dc",
          "sha256": "df3b9ffd1b6589cb27abb96c0923508b1ed9eb46d1a666a891f420c7c61105d6"
        },
        "downloads": -1,
        "filename": "flask-dantic-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "612f6cc78fd4894849a86be43eeae4dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14219,
        "upload_time": "2022-07-02T20:18:00",
        "upload_time_iso_8601": "2022-07-02T20:18:00.625849Z",
        "url": "https://files.pythonhosted.org/packages/61/b9/68193ec67e8e67d2620053fcc97742345f7f578c76f9cfc00f5f858c81b9/flask-dantic-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9e728c31a663467f4e70290bb1eea97d7bfecc7e4dfc11bc48d95077c997fef",
          "md5": "219fed152f07641fc9b10d7e204d9b4e",
          "sha256": "a1abed88cc2a4d4eca5a74a292b7553b5b88b3b49bcfd37b66a132fa30616a47"
        },
        "downloads": -1,
        "filename": "flask_dantic-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "219fed152f07641fc9b10d7e204d9b4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14843,
        "upload_time": "2022-07-30T16:23:23",
        "upload_time_iso_8601": "2022-07-30T16:23:23.186022Z",
        "url": "https://files.pythonhosted.org/packages/a9/e7/28c31a663467f4e70290bb1eea97d7bfecc7e4dfc11bc48d95077c997fef/flask_dantic-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3ca7da8c5fc18be4aa3b3bc5e634cd6eea34b13a26f6c45ea8750dabd9b1fb1",
          "md5": "92377385f3839d4cd72ce53d2d0599b9",
          "sha256": "140a9811859e4b0df2c8d664e43a8fcc72485e0aa6dff2e7f9115887c668073d"
        },
        "downloads": -1,
        "filename": "flask-dantic-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "92377385f3839d4cd72ce53d2d0599b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14231,
        "upload_time": "2022-07-30T16:23:25",
        "upload_time_iso_8601": "2022-07-30T16:23:25.589981Z",
        "url": "https://files.pythonhosted.org/packages/c3/ca/7da8c5fc18be4aa3b3bc5e634cd6eea34b13a26f6c45ea8750dabd9b1fb1/flask-dantic-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a06745431d9f85a8ce934cd67e6dbc3b7b9fa0725fbfb64806c3350e3307fa5",
          "md5": "b0bfb59ce2105ccdaadcb9f3bc94f779",
          "sha256": "4d6e497a61e8342e97f58cc2aa809a5e8d684a8a909746c4260d2f6f15cad2dd"
        },
        "downloads": -1,
        "filename": "flask_dantic-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0bfb59ce2105ccdaadcb9f3bc94f779",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14874,
        "upload_time": "2022-08-11T08:46:05",
        "upload_time_iso_8601": "2022-08-11T08:46:05.668246Z",
        "url": "https://files.pythonhosted.org/packages/7a/06/745431d9f85a8ce934cd67e6dbc3b7b9fa0725fbfb64806c3350e3307fa5/flask_dantic-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6e9271ecd4cb69126f9c74702e45d659c57976433db0e482fb039a332cf207a",
          "md5": "e162bbcfce8ba86f00b1950b96e804b3",
          "sha256": "ef905a0c073f37d5bc4c3189df41ac01589c9f10573852a047d28c6b228aec4a"
        },
        "downloads": -1,
        "filename": "flask-dantic-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e162bbcfce8ba86f00b1950b96e804b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14278,
        "upload_time": "2022-08-11T08:46:07",
        "upload_time_iso_8601": "2022-08-11T08:46:07.628883Z",
        "url": "https://files.pythonhosted.org/packages/b6/e9/271ecd4cb69126f9c74702e45d659c57976433db0e482fb039a332cf207a/flask-dantic-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a06745431d9f85a8ce934cd67e6dbc3b7b9fa0725fbfb64806c3350e3307fa5",
        "md5": "b0bfb59ce2105ccdaadcb9f3bc94f779",
        "sha256": "4d6e497a61e8342e97f58cc2aa809a5e8d684a8a909746c4260d2f6f15cad2dd"
      },
      "downloads": -1,
      "filename": "flask_dantic-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b0bfb59ce2105ccdaadcb9f3bc94f779",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 14874,
      "upload_time": "2022-08-11T08:46:05",
      "upload_time_iso_8601": "2022-08-11T08:46:05.668246Z",
      "url": "https://files.pythonhosted.org/packages/7a/06/745431d9f85a8ce934cd67e6dbc3b7b9fa0725fbfb64806c3350e3307fa5/flask_dantic-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b6e9271ecd4cb69126f9c74702e45d659c57976433db0e482fb039a332cf207a",
        "md5": "e162bbcfce8ba86f00b1950b96e804b3",
        "sha256": "ef905a0c073f37d5bc4c3189df41ac01589c9f10573852a047d28c6b228aec4a"
      },
      "downloads": -1,
      "filename": "flask-dantic-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "e162bbcfce8ba86f00b1950b96e804b3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14278,
      "upload_time": "2022-08-11T08:46:07",
      "upload_time_iso_8601": "2022-08-11T08:46:07.628883Z",
      "url": "https://files.pythonhosted.org/packages/b6/e9/271ecd4cb69126f9c74702e45d659c57976433db0e482fb039a332cf207a/flask-dantic-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}