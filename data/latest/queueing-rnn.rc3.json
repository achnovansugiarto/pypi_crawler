{
  "info": {
    "author": "bilkosem",
    "author_email": "bilkos92@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Queueing Recurrent Neural Network (Q-RNN) [![made-with-python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)\n\n**Queueing Recurrent Neural Network (Q-RNN)** is a new kind of Artificial Neural Network that has been designed to use in time-series forecasting applications. According to experiments that have been run, QRNN has a potential to outperform the LSTM, Simple RNN and GRU, in the cases where the dataset has highly non-linear characteristics.\n\n# Table of contents\n\n- [What is Q-RNN?](#whatisqrnn)\n- [Comparison](#comparison)\n- [Installation](#installation)\n- [Usage](#usage)\n- [License](#license)\n\n## What is Q-RNN? ü§î <a name=\"whatisqrnn\"></a>\n![Random Neuron](images/random_neuron.png)\n\n(Look of a Random Neuron [4])\n\nIt is a compose of [Simple RNN](https://github.com/bilkosem/simple-rnn_from_scratch) and [Random Neural Network](https://github.com/bilkosem/random_neural_network). Queueing RNN uses the fundamental math of Queueing Theory and G-Queues while combining it with the powerful architecture of Recurrent Neural Networks. For more detailed explanation about the theoretical background of QRNN check the [mathematical-model](https://github.com/bilkosem/queueing-rnn/tree/master/mathematical-model) folder and references section. \n\n## Comparison üìä <a name=\"comparison\"></a>\n\nIn order to evaluate the performance of QRNN, it has been compared with LSTM, GRU and Simple RNN using Keras with TensorFlow backend. During the experiments, 4 different data sets ([google stock price](https://www.kaggle.com/medharawat/google-stock-price), [bike sharing](https://archive.ics.uci.edu/ml/datasets/bike+sharing+dataset), [pm2.5 concentration](https://archive.ics.uci.edu/ml/datasets/Beijing+PM2.5+Data), [traffic volume](https://archive.ics.uci.edu/ml/datasets/Metro+Interstate+Traffic+Volume)) and 10 different optimization algorithms have been used. The mean square error distribution on the test set is given in the image below. As it seems QRNN manages to reach 3 lowest rms error out of 4. \n\n![Overall Comparison](test_results/overall_comparison.png)\n\nCheck the [test_results](https://github.com/bilkosem/queueing-rnn/tree/master/test_results) folder to see detailed results üîé.\n\n## Installation üõ† <a name=\"installation\"></a>\n\nInstalling via [pip](https://pip.pypa.io/en/stable/) package manager:\n\n```bash\npip install queueing-rnn\n```\n\nInstalling via GitHub:\n\n```bash\ngit clone https://github.com/bilkosem/queueing-rnn\ncd queueing-rnn\npython setup.py install\n```\n\n## Usage üë©‚Äçüíª <a name=\"usage\"></a>\n\n```python\nfrom queueing_rnn import QRNN\n\ndata=data.reshape((samples,timesteps,features))\nqrnn = QRNN([features, hidden neurons, output neurons]) # Shape of the network\n\nfor s in range(samples):\n    qrnn.feedforward()\n    # Calculate Loss\n    qrnn.backpropagation()\n```\nCheck the [examples](https://github.com/bilkosem/queueing-rnn/tree/master/examples) folder to see detailed use üîé.\n## References üìö <a name=\"references\"></a>\n\n[1] [Gelenbe, Erol. (1989). Random Neural Networks with Negative and Positive Signals and Product Form Solution. Neural Computation - NECO. 1. 502-510. 10.1162/neco.1989.1.4.502.](https://www.researchgate.net/publication/239294946_Random_Neural_Networks_with_Negative_and_Positive_Signals_and_Product_Form_Solution) \n\n[2] [Gelenbe, Erol. (1993). Learning in the Recurrent Random Neural Network. Neural Computation. 5. 154-164. 10.1162/neco.1993.5.1.154.](https://www.researchgate.net/publication/220499635_Learning_in_the_Recurrent_Random_Neural_Network)\n\n[3] [Basterrech, S., & Rubino, G. (2015). Random Neural Network Model for Supervised Learning Problems. Neural Network World, 25, 457-499.](https://www.semanticscholar.org/paper/Random-neural-network-model-for-supervised-learning-Basterrech-Rubino/b2ebb88e1d78c726aab274ec149d65e86999cbef)\n\n[4] [Hossam Abdelbaki (2020). rnnsimv2.zip (https://www.mathworks.com/matlabcentral/fileexchange/91-rnnsimv2-zip), MATLAB Central File Exchange. Retrieved September 22, 2020.](https://www.mathworks.com/matlabcentral/fileexchange/91-rnnsimv2-zip?s_tid=FX_rc1_behav)\n\n\n## License <a name=\"license\"></a>\n\n[![GitHub license](https://img.shields.io/github/license/Naereen/StrapDown.js.svg)](https://github.com/Naereen/StrapDown.js/blob/master/LICENSE)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bilkosem/queueing_rnn",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "queueing-rnn",
    "package_url": "https://pypi.org/project/queueing-rnn/",
    "platform": "",
    "project_url": "https://pypi.org/project/queueing-rnn/",
    "project_urls": {
      "Homepage": "https://github.com/bilkosem/queueing_rnn"
    },
    "release_url": "https://pypi.org/project/queueing-rnn/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Queueing Recurrent Neural Network",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8341408,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1be709e1d3678da595f50cba0f00c08ea8ce543f8dbdc44be594e77db23e776",
          "md5": "fa07653daa5ab41df68bf87a4e8cac6c",
          "sha256": "5b404be4ee88e859cceeb34aaa98f4e856f028928d597cadb077396135e17a2d"
        },
        "downloads": -1,
        "filename": "queueing-rnn-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fa07653daa5ab41df68bf87a4e8cac6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1778,
        "upload_time": "2020-09-21T20:12:56",
        "upload_time_iso_8601": "2020-09-21T20:12:56.170784Z",
        "url": "https://files.pythonhosted.org/packages/d1/be/709e1d3678da595f50cba0f00c08ea8ce543f8dbdc44be594e77db23e776/queueing-rnn-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7cd5fe3e55b377bf16aeef7c3f33cd87aa0538e11f170fdc90e37054b8b405c",
          "md5": "7624891bce642df993519b55c92389e4",
          "sha256": "1a2c42995d65fad7bfc609bbce3f6df08c002459a00e145fd88d7a258e7a606d"
        },
        "downloads": -1,
        "filename": "queueing_rnn-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7624891bce642df993519b55c92389e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4902,
        "upload_time": "2020-09-21T20:41:22",
        "upload_time_iso_8601": "2020-09-21T20:41:22.587506Z",
        "url": "https://files.pythonhosted.org/packages/e7/cd/5fe3e55b377bf16aeef7c3f33cd87aa0538e11f170fdc90e37054b8b405c/queueing_rnn-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f7fcb9779f212646041b42ee62952f3f874f8ecc8b4c3df609b9a6dde13e6fc",
          "md5": "68117760961b2c5a862749e03baeccfc",
          "sha256": "533b35b82dabafb196e739b06b9a663494454b03bc89ca1a1f8f51a19209af7c"
        },
        "downloads": -1,
        "filename": "queueing_rnn-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "68117760961b2c5a862749e03baeccfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6900,
        "upload_time": "2020-10-05T11:14:06",
        "upload_time_iso_8601": "2020-10-05T11:14:06.950572Z",
        "url": "https://files.pythonhosted.org/packages/0f/7f/cb9779f212646041b42ee62952f3f874f8ecc8b4c3df609b9a6dde13e6fc/queueing_rnn-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f7fcb9779f212646041b42ee62952f3f874f8ecc8b4c3df609b9a6dde13e6fc",
        "md5": "68117760961b2c5a862749e03baeccfc",
        "sha256": "533b35b82dabafb196e739b06b9a663494454b03bc89ca1a1f8f51a19209af7c"
      },
      "downloads": -1,
      "filename": "queueing_rnn-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "68117760961b2c5a862749e03baeccfc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6900,
      "upload_time": "2020-10-05T11:14:06",
      "upload_time_iso_8601": "2020-10-05T11:14:06.950572Z",
      "url": "https://files.pythonhosted.org/packages/0f/7f/cb9779f212646041b42ee62952f3f874f8ecc8b4c3df609b9a6dde13e6fc/queueing_rnn-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}