{
  "info": {
    "author": "Toaster Ltd.",
    "author_email": "developers@toaster.co",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Secure GAE Scaffold (Python 3)\n\n## Introduction\n\nPlease note: this is not an official Google product.\n\nThis is a secure scaffold package designed primarily to work with\nGoogle App Engine (although it is not limited to this).\n\nIt is built using Python 3 and Flask.\n\nThe scaffold provides the following basic security guarantees by default through\na flask app factory found in `secure_scaffold/factories.py`. This app will:\n\n1. Set assorted security headers (Strict-Transport-Security, X-Frame-Options,\n   X-XSS-Protection, X-Content-Type-Options, Content-Security-Policy) with\n   strong default values to help avoid attacks like Cross-Site Scripting (XSS)\n   and Cross-Site Script Inclusion.  See  `add_csp_headers` and\n   `settings.CSP_CONFIG`.\n1. Verify XSRF tokens by default on authenticated requests using any verb other\n   that GET, HEAD, or OPTIONS.  See the `secure_scaffold/xsrf.py` for more information.\n\n## Usage\n\n### Installation\n\nAs this is currently in beta we have a beta pypi package.\n\nThis project can be installed via\n\n`pip install toaster-secure-scaffold-beta`\n\nFor your convenience we also have the option to install with various other\ndependencies for the contrib APIs such as cloud-tasks, Datastore and Firestore.\n\nThese can be included with the `[]` syntax. For example all of them can be installed\nvia:\n\n`pip install toaster-secure-scaffold-beta[datastore,firestore,tasks]`\n\n### Setup\n\nOnce installed you can easily begin a new project by running:\n\n    secure_scaffold start-project PROJECT_NAME GCLOUD_PROJECT_NAME\n\nMore details about this command can be found by running:\n\n    secure_scaffold start-project --help\n\n\n### App Factory\n\nTo use the secure scaffold in your app, use our app generator.\n\n```python\nfrom secure_scaffold import factories\n\napp = factories.AppFactory().generate()\n```\n\nThis will automatically set all the needed CSP headers.\n\n### XSRF\n\nTo enable XSRF protection add the decorator to the endpoints you need it for.\nThis needs to be set *after* the route decorator\ne.g.\n\n```python\nfrom secure_scaffold import factories\nfrom secure_scaffold import xsrf\n\napp = factories.AppFactory().generate()\n\n@app.route('/', methods=['GET', 'POST'])\n@xsrf.xsrf_protected()\ndef index():\n    return 'Hello World!'\n```\n\n\nWe use Flask Sessions for XSRF, for this you should set up a unique Secret Key for your application.\n\nA random one is set in the app factory, but you should overwrite this yourself, see [Flask Sessions](http://flask.pocoo.org/docs/1.0/quickstart/#sessions)\n\n\n### Settings Config\n\nSimilar to django settings, to enable multiple settings files you need to set an environment variable.\nYour folder structure should include a settings folder containing your settings files, for example:\n\n    my_project/\n        settings/\n            __init__.py\n            base.py\n            development.py\n            production.py\n\nYou should then set the environment variable (**SETTINGS_MODULE**) to the settings you require in that environment.\n\n    export SETTINGS_MODULE=settings.development\n\nYou can then import your settings in your project like this:\n\n    from secure_scaffold.config import settings\n\n\n### Authentication\n\nThe Secure Scaffold provides two methods of authentication. One is an in built\nauthentication system relying on Googles OAuth2 system. The alternative is a system relying on IAP\n\n#### OAuth2 Users\n\nSecond generation App Engine systems have had the Users API removed so the majority of\nthe original functionality isn't available. As a result it is now recommended to use\nseparate systems such as Googles OAuth2. The Secure Scaffold provides a wrapper for this\nbased heavily on [this guide](https://developers.google.com/identity/sign-in/web/sign-in).\n\nFor this to work there is some minimal setup.\n\nThe first is to provide an OAuth Client ID. To do this go to the GCloud console and create\nan OAuth Client ID [here](https://console.cloud.google.com/apis/credentials). Ensure you add\nthe domains you are using to the `Authorised JavaScript Origins` and `Authorised redirect URIs`.\nYou can include `localhost:5000` in these to enable using this system in development.\n\nOnce you have a `Client ID` add it to your settings file like so:\n\n```python\nAUTH_OAUTH_CLIENT_ID = 'my-client-id'\n```\n\nOnce done all that is required is to register the auth blueprint to your project like so:\n\n```python\nfrom secure_scaffold import factories\nfrom secure_scaffold.contrib.users.auth import auth_handler\n\n\napp = factories.AppFactory().generate()\napp.register_blueprint(auth_handler.blueprint)\n```\n\nThis creates two enpoints at `/auth/login` and `/auth/authenticate`. Login provides a frontend\nwith a Google sign in button. This sends an API request to `/auth/authenticate` which validates\nthe login procedure and returns an endpoint to redirect to. By default this is `/`.\n\nIf you want to force a user to be logged in to access a URL you can use the provided\n`requires_login` decorator like so:\n\n```python\nfrom secure_scaffold import factories\nfrom secure_scaffold.contrib.users.auth import auth_handler\n\n\napp = factories.AppFactory().generate()\napp.register_blueprint(auth_handler.blueprint)\n\n\n@app.route('/')\n@auth_handler.requires_login\ndef private_view():\n    return \"You can't see this unless you are logged in.\"\n```\n\nIf a user is logged in they will be able to see the page. If they are not they will\nautomatically be redirected to `/auth/login`.\n\n##### Extending the OAuth2 system.\n\nThe OAuth2 system is built using a class at `secure_scaffold.contrib.users.auth.AuthHandler`.\n\nThis class is designed to be easy to subclass and override. For instance if you wanted to\nchange the URL which the user is redirected to on logging in you can do it like so:\n\n```python\nfrom secure_scaffold import factories\nfrom secure_scaffold.contrib.users.auth import AuthHandler\n\napp = factories.AppFactory().generate()\n\nclass MyAuthHandler(AuthHandler):\n    redirect_url = '/after-login'\n\nauth_handler = MyAuthHandler()\napp.register_blueprint(auth_handler.blueprint)\n```\n\n#### IAP Users\n\nThis is available at `secure_scaffold.contrib.appengine.users`. It provides a `User`\nclass which has a few useful methods providing the details of the current user.\nIt also provides `requires_auth` and `requires_admin` decorators which enforce the need\nfor authentication and admin rights respectively on the views they are applied to.\n\nThese work almost identically to how they do in the first generation App Engine APIs.\n\nTo use these you will need to enable IAP on your App Engine instance. This is \nprovides the app with the correct headers for this functionality.\n\n\n### Datastore/Firestore\n\nThe Secure Scaffold comes with a built in API for both Datastore and Firestore.\n\nThis is a partial ORM - it allows you to simply define data models, to create, \nretrieve, update and delete them (CRUD). However it does not work with relations\nor nested entities/documents.\n\nTo use this API you must create a settings file with a variable called `DATABASE_SETTINGS`.\nThis has to be a dict with two fields, an `engine` field and a `settings` field.\n\n- `engine` must reference a module with the appropriate database engine, this\nallows the code to switch between databases such as firestore and datastore with\na single setting change.\n- `settings` are the settings that will be passed to the database engine client. As a\nminimum these should contain `project` pointing to the gcloud project.\n\nThe settings should something like this:\n\n```python\nDATABASE_SETTINGS = {\n    'engine': 'secure_scaffold.contrib.db.engine.firestore',\n    'settings': {\n        'project': 'my-gcloud-project-id'\n    }\n}\n```\n\nThe above uses the firestore engine. To use Datastore instead you should replace\n`secure_scaffold.contrib.db.engine.firestore` with \n`secure_scaffold.contrib.db.engine.datastore`. There are no other code changes required.\n\n\nThe API can be used like so:\n\n```python\nfrom secure_scaffold.contrib.db import models\n\n\nclass Person(models.Model):\n    name = models.Field(str, primary=True)\n    age = models.Field(int)\n    arms = models.Field(int, default=2)\n    social_security = models.Field(str, unique=True)\n    data = models.Field(dict, required=False)\n\n\n# Create some people.\nPerson(name='John', age=30, social_security='111-11-1111').save()\nPerson(name='Jane', age=30, social_security='222-22-2222').save()\n\n\njanes = Person.get(name='Jane')  # Returns a generator which yields all objects with a name of 'Jane'\nfor jane in janes:\n    jane.age = 28\n    jane.save()  # Updates Jane to have an age of 28 in the database.\n\npeople = Person.get_all()  # Gives a generator which will yield all the people\nfor person in people:\n    print(person.name)   # Prints 'John' and then 'Jane'\n    print(person.age)   # Prints 30 and then 28\n    print(person.arms)   # Prints 2 and then 2\n    person.delete()  # Deletes the entry in the database.\n```\n\nThe API operates a basic validation system - you define fields within a model class,\neach field has a type and some optional args. If the field receives an object of the\nwrong type it will raise an error.\n\n\n### Tasks\n\nThe Secure Scaffold comes with a system for setting up tasks with\n[Google Cloud Tasks](https://cloud.google.com/tasks/).\n\nThis system works by creating a `TaskRunner` class instance and registering functions\nas `Task` objects using a decorator provided by the `TaskRunner` instance.\n\nThis creates a view in a [Flask blueprint](http://flask.pocoo.org/docs/dev/blueprints/)\nstored in the `TaskRunner` instance and adds a `delay` method to the registered\nfunction - allowing the function to be run later by the task queue.\n\n#### Setup\n\nFor this module to work you must first install `google-cloud-tasks`:\n\n    pip install google-cloud-tasks\n\nYou must also add a `CLOUD_TASKS_QUEUE_CONFIG` object to your settings file.\nIt should look like this:\n\n```python\nCLOUD_TASKS_QUEUE_CONFIG = {\n    'project': 'YOUR GCLOUD PROJECT NAME',\n    'location': 'YOUR TASKE QUEUE LOCATION',\n    'queue': 'YOUR TASK QUEUE NAME'\n}\n```\n\n#### Using\n\nA basic example of the task system is as follows:\n\n```python\nfrom flask import request\n\nfrom secure_scaffold import factories\nfrom secure_scaffold.contrib.cloud_tasks import tasks\n\n\napp = factories.AppFactory().generate()\n\ntask_runner = tasks.TaskRunner('tasks', __name__, url_prefix='/tasks')\n\napp.register_blueprint(task_runner.blueprint)\n\n\n@task_runner.task(route='/print_task', methods=['POST'])\ndef print_task():\n    arg = request.json().get('arg')\n    print(arg)\n    return 'OK'\n\n\n@app.route('/')\ndef main():\n    print_task.delay(arg='Hello, World!')\n    return 'OK'\n```\n\nThis sets up a Secure Scaffold app as well as a task runner. It then registers\nthe blueprint of the task runner in the app.\n\nWe create a task function, which gets an argument called `arg` from\nthe global `request` object and prints it. This is registered as a task\nusing the `task_runner.task` decorator.\n\nFinally we create a flask route called `main` which calls the `delay` method\nof our task.\n\nBehind the scenes what happens is our `task_runner` creates a `Task` object\ncontaining this function and a `delay` method. It then registers the object\nas a flask route at `/tasks/print_task/`. The `Task` objects delay method\nmakes a request to the cloud tasks API to create a task for this method in\nthe queue. It takes any arbitrary arguments and keyword arguments and adds\nthem to the body of this request - making them accessible via the \n`flask.request` global variable within the task. \n\n## Scaffold Development\n\n### Structure:\n\n`secure_scaffold/` \n- Top level directory\n\n`secure_scaffold/contrib` \n- Contains non-essential but useful libraries.\n- Holds several alternatives to App Engine APIs \nwhich are no longer available in second generation instances \n\n`secure_scaffold/tests` \n- Tests for the secure scaffold \n\n`secure_scaffold/config.py` \n- Similar to django settings set up \n- Looks for the \"SETTINGS_MODULE\" environment variable to be set \n- See Settings Config below on how to use this\n\n`secure_scaffold/factories.py`\n- The main Flask app factory that applies the security defaults\n- See App Factory below on how to use this\n\n`secure_scaffold/settings.py`\n- Security settings \n- Defines our CSP headers and other specifics\n\n`secure_scaffold/xsrf.py`\n- Defines XSRF decorators to be used with your flask app \n- See XSRF below on how to use this\n\n### Dependency Setup\n\nWe recommend setting up a virtual env to install dependencies:\n\n`virtualenv env --python=python3`\n\n`source env/bin/activate`\n\n`pip install -r dev_requirements.txt`\n\nThere are some extra dependencies required for the development on specific submodules.\n\nThese include:\n\n- `google-cloud-firestore` for development on `secure_scaffold.contrib.db.engine.firestore\n- `google-cloud-datastore` for development on `secure_scaffold.contrib.db.engine.datastore\n- `google-cloud-tasks` for development on `secure_scaffold.contrib.cloud_tasks.tasks\n\n### Testing\n\nTo run unit tests:\n\n`pytest`\n\n\n## Third Party Credits\n\n- Flask\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/toasterco/gae-secure-scaffold-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Toaster-Secure-Scaffold-Beta",
    "package_url": "https://pypi.org/project/Toaster-Secure-Scaffold-Beta/",
    "platform": "",
    "project_url": "https://pypi.org/project/Toaster-Secure-Scaffold-Beta/",
    "project_urls": {
      "Homepage": "https://github.com/toasterco/gae-secure-scaffold-python"
    },
    "release_url": "https://pypi.org/project/Toaster-Secure-Scaffold-Beta/0.8/",
    "requires_dist": [
      "flask (==1.0.2)",
      "click (==7.0)",
      "google-cloud-datastore (==1.8.0) ; extra == 'datastore'",
      "google-cloud-firestore (==1.2.0) ; extra == 'firestore'",
      "google-cloud-tasks (==1.1.0) ; extra == 'tasks'"
    ],
    "requires_python": "",
    "summary": "Secure Scaffold for Google App Engine",
    "version": "0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5501474,
  "releases": {
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3442b215d196aa6f3f019b7225d3481bdc7563fdbb43c67b81b25c10891ac16f",
          "md5": "930374d1babfce3f102ccd2db6199029",
          "sha256": "45c7157c73254c64583d6ca1b8288a95ffa393df1f248ef3115c462e6bf25930"
        },
        "downloads": -1,
        "filename": "Toaster_Secure_Scaffold_Beta-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "930374d1babfce3f102ccd2db6199029",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24090,
        "upload_time": "2019-06-28T10:41:41",
        "upload_time_iso_8601": "2019-06-28T10:41:41.739663Z",
        "url": "https://files.pythonhosted.org/packages/34/42/b215d196aa6f3f019b7225d3481bdc7563fdbb43c67b81b25c10891ac16f/Toaster_Secure_Scaffold_Beta-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "569e1e634ba42bacf27d1f5d3523245c0262523a17bea0073e1244967fa0084d",
          "md5": "3bba310357454a86e9f2c1e220dbfb11",
          "sha256": "666436e645a17e560de9a3ad2a5d039e9657bcd7bc1b2228a0b0f71a59a506b0"
        },
        "downloads": -1,
        "filename": "Toaster Secure Scaffold Beta-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3bba310357454a86e9f2c1e220dbfb11",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15285,
        "upload_time": "2019-06-28T10:41:44",
        "upload_time_iso_8601": "2019-06-28T10:41:44.204926Z",
        "url": "https://files.pythonhosted.org/packages/56/9e/1e634ba42bacf27d1f5d3523245c0262523a17bea0073e1244967fa0084d/Toaster%20Secure%20Scaffold%20Beta-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "819fba8476ff2a09a753b2deded1e9afa52bfd0e85336e2c24428295773dab32",
          "md5": "caccd5c1e5fcaf8674760ef2217dee84",
          "sha256": "f6c17e0e4b84cc14b131bc63f077ddaa1c98bf1b1ba212df171e93b2103ba720"
        },
        "downloads": -1,
        "filename": "Toaster_Secure_Scaffold_Beta-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "caccd5c1e5fcaf8674760ef2217dee84",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27170,
        "upload_time": "2019-06-28T11:24:27",
        "upload_time_iso_8601": "2019-06-28T11:24:27.367097Z",
        "url": "https://files.pythonhosted.org/packages/81/9f/ba8476ff2a09a753b2deded1e9afa52bfd0e85336e2c24428295773dab32/Toaster_Secure_Scaffold_Beta-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6883dad7a068105a4b2e784b42fead1b3e29990db1f10c49e703c2d31c933eb",
          "md5": "cfa2b7ddf58802f3076570186807638f",
          "sha256": "84c8d78323c631de9c9b00efd62c647915bd02e5441eb168f47b7851322252c9"
        },
        "downloads": -1,
        "filename": "Toaster Secure Scaffold Beta-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cfa2b7ddf58802f3076570186807638f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16367,
        "upload_time": "2019-06-28T11:24:28",
        "upload_time_iso_8601": "2019-06-28T11:24:28.985969Z",
        "url": "https://files.pythonhosted.org/packages/f6/88/3dad7a068105a4b2e784b42fead1b3e29990db1f10c49e703c2d31c933eb/Toaster%20Secure%20Scaffold%20Beta-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbe76fd1e732a39917adb362b0341f1f6248f19aa0a32aa9d14fcaaeeb5097cc",
          "md5": "00803bf6c54736e9f20ca1f4efc09129",
          "sha256": "2df6bd0fdbb0d99b77415afa4d7c0a40d07fd03f5f68e0e7bcd7ca437f7177a7"
        },
        "downloads": -1,
        "filename": "Toaster_Secure_Scaffold_Beta-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "00803bf6c54736e9f20ca1f4efc09129",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31894,
        "upload_time": "2019-07-01T15:36:08",
        "upload_time_iso_8601": "2019-07-01T15:36:08.956202Z",
        "url": "https://files.pythonhosted.org/packages/bb/e7/6fd1e732a39917adb362b0341f1f6248f19aa0a32aa9d14fcaaeeb5097cc/Toaster_Secure_Scaffold_Beta-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aed13f91a6fbfa6f9546385e491ce6f097edae65f36d181d4f2bc0646ac21833",
          "md5": "1ca20ea6e6a8fd6ecb5eb775722ac88a",
          "sha256": "52d97de0bc2f1005dcb547e51951bda44a4aecbb2e2b1c7ba0c518ef49b55681"
        },
        "downloads": -1,
        "filename": "Toaster Secure Scaffold Beta-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "1ca20ea6e6a8fd6ecb5eb775722ac88a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20059,
        "upload_time": "2019-07-01T15:36:11",
        "upload_time_iso_8601": "2019-07-01T15:36:11.616081Z",
        "url": "https://files.pythonhosted.org/packages/ae/d1/3f91a6fbfa6f9546385e491ce6f097edae65f36d181d4f2bc0646ac21833/Toaster%20Secure%20Scaffold%20Beta-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97ab109b277d940be8170ceb24e1c9d6145203e36533f05ee31ca3d518d93001",
          "md5": "8e95ef4674ece81e22b0eb717fbad50b",
          "sha256": "e9b1d82cc564b4217b2e11266f8a56fd3b496b0bcbcb3fb028240e5843d30d7a"
        },
        "downloads": -1,
        "filename": "Toaster_Secure_Scaffold_Beta-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e95ef4674ece81e22b0eb717fbad50b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31928,
        "upload_time": "2019-07-01T15:43:32",
        "upload_time_iso_8601": "2019-07-01T15:43:32.693860Z",
        "url": "https://files.pythonhosted.org/packages/97/ab/109b277d940be8170ceb24e1c9d6145203e36533f05ee31ca3d518d93001/Toaster_Secure_Scaffold_Beta-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a23d8f6314a8cfb7380da44fe617828a3ac43bd63223c542070a218bce2bfd95",
          "md5": "da3963e847ddf5adf0f1bfe5c42fe982",
          "sha256": "dd80894f3d65b1f7a521d7f8a51443e14cfeba71ddd666fb2f77916d7818e93e"
        },
        "downloads": -1,
        "filename": "Toaster Secure Scaffold Beta-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "da3963e847ddf5adf0f1bfe5c42fe982",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20079,
        "upload_time": "2019-07-01T15:43:35",
        "upload_time_iso_8601": "2019-07-01T15:43:35.342088Z",
        "url": "https://files.pythonhosted.org/packages/a2/3d/8f6314a8cfb7380da44fe617828a3ac43bd63223c542070a218bce2bfd95/Toaster%20Secure%20Scaffold%20Beta-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f57bd924921509c9d9ddeae2a65a9389979d0d8a710fdc299c555866ce6bb29",
          "md5": "ebcf624fedbc3824ee9e9d13e3134bab",
          "sha256": "a04b1089b6c2857ba90e5ba9745fc5ecd9212ec5cebd916cfd04e4f769b62b68"
        },
        "downloads": -1,
        "filename": "Toaster_Secure_Scaffold_Beta-0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ebcf624fedbc3824ee9e9d13e3134bab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43114,
        "upload_time": "2019-07-08T14:46:04",
        "upload_time_iso_8601": "2019-07-08T14:46:04.650382Z",
        "url": "https://files.pythonhosted.org/packages/9f/57/bd924921509c9d9ddeae2a65a9389979d0d8a710fdc299c555866ce6bb29/Toaster_Secure_Scaffold_Beta-0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13292ada43832b8630fe926957f5e86d81d192865e90a9c6eb7237885d8460d5",
          "md5": "46d33f6511d0f978fc0ff27e5f201a74",
          "sha256": "4493abf4990bbfe1b3fd5553c6a71d7c9dbbd40abc5e0a4191570ec6f3d1dc7e"
        },
        "downloads": -1,
        "filename": "Toaster Secure Scaffold Beta-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "46d33f6511d0f978fc0ff27e5f201a74",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32766,
        "upload_time": "2019-07-08T14:46:09",
        "upload_time_iso_8601": "2019-07-08T14:46:09.116290Z",
        "url": "https://files.pythonhosted.org/packages/13/29/2ada43832b8630fe926957f5e86d81d192865e90a9c6eb7237885d8460d5/Toaster%20Secure%20Scaffold%20Beta-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f57bd924921509c9d9ddeae2a65a9389979d0d8a710fdc299c555866ce6bb29",
        "md5": "ebcf624fedbc3824ee9e9d13e3134bab",
        "sha256": "a04b1089b6c2857ba90e5ba9745fc5ecd9212ec5cebd916cfd04e4f769b62b68"
      },
      "downloads": -1,
      "filename": "Toaster_Secure_Scaffold_Beta-0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ebcf624fedbc3824ee9e9d13e3134bab",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 43114,
      "upload_time": "2019-07-08T14:46:04",
      "upload_time_iso_8601": "2019-07-08T14:46:04.650382Z",
      "url": "https://files.pythonhosted.org/packages/9f/57/bd924921509c9d9ddeae2a65a9389979d0d8a710fdc299c555866ce6bb29/Toaster_Secure_Scaffold_Beta-0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "13292ada43832b8630fe926957f5e86d81d192865e90a9c6eb7237885d8460d5",
        "md5": "46d33f6511d0f978fc0ff27e5f201a74",
        "sha256": "4493abf4990bbfe1b3fd5553c6a71d7c9dbbd40abc5e0a4191570ec6f3d1dc7e"
      },
      "downloads": -1,
      "filename": "Toaster Secure Scaffold Beta-0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "46d33f6511d0f978fc0ff27e5f201a74",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 32766,
      "upload_time": "2019-07-08T14:46:09",
      "upload_time_iso_8601": "2019-07-08T14:46:09.116290Z",
      "url": "https://files.pythonhosted.org/packages/13/29/2ada43832b8630fe926957f5e86d81d192865e90a9c6eb7237885d8460d5/Toaster%20Secure%20Scaffold%20Beta-0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}