{
  "info": {
    "author": "H. Yamada",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# diffqc: Differentiable Quantum Circuit Simulator for Quantum Machine Learning\n\n## 1. Overview\n> **Note**  \n> This project started as diffq, but because of accidental name conflict,\n> we changed name to diffqc.\n\ndiffqc is a python package providing differentiable quantum circuit simulator.\nThe main target is quantum machine learning.\n\ndiffqc is built on [JAX](https://jax.readthedocs.io/en/latest/), so\nthat it is\n* GPU friendly,\n* easily vectorized,\n* differentiable, but\n* supported environments are limited. (Ref.\n[\"Installation\" section at JAX README](https://github.com/google/jax#installation))\n\n## 2. Features\ndiffqc provides 2 types of operations, `dense` and `sparse`. Both have\nsame operations and only internal representations are different.\n\n### 2.1 `dense` operation\nIn `dense` operation, complex coefficients of all possible\n`2**nqubits` states are traced. This is simple matrix calculation but\nrequires exponentially large memory when `nqubits` is large.\n\n### 2.2 `sparse` operation\n\n> **Warning**  \n> `sparse` module is under depelopment, and is not ready to use.\n\nIn `sparse` operation, only neccessary states are traced. This might\nreduce memory requirements at large `nqubits` system, but it can be\ncomputationally inefficient.\n\n### 2.3 Builtin Algorithm `lib`\nBuiltin algorithms are implemented at `diffqc.lib`. To support both\n`dense` and `sparse` operation, operation module is passed to 1st\nargument.\n\n\n* `GHZ(op, c: jnp.ndarray, wires: Tuple[int])`\n  * Create Greenberger-Horne-Zeilinger state [2]\n  * `|00...0>` -> `(|00...0> + |11...1>)/sqrt(2)`\n* `QFT(op, c: jnp.ndarray, wires: Tuple[int])`\n  * Quantum Fourier Transform (without last swap) [3]\n* `QPE(op, c: jnp.ndarray, wires: Tuple[int], U: jnp.ndarray, aux: Tuple[int])`\n  * Quantum Phase Estimation [4]\n  * `wires`: Eigen Vector\n  * `U`: Unitary Matrix\n  * `aux`: Auxiliary qubits. These should be `|00...0>`.\n\n\n### 2.4 PennyLane Plugin\n\n> **Warning**  \n> PennyLane plugin is planned, but is still under development, and is not ready yet.\n\n[PennyLane](https://pennylane.ai/) is a quantum machine learning\nframework. By using PennyLane, we can choose machine learning\nframework (e.g. [TensorFlow](https://www.tensorflow.org/),\n[PyTorch](https://pytorch.org/)) and real/simulation quantum device\nindependently, and can switch relatively easy.\n\n## 3. Example Usage\n- example/00-circuit-basics.py\n  - Basic Usage of diffqc\n- example/01-qcl-flax.py\n  - QCL[1] Classification of [Iris](https://scikit-learn.org/stable/datasets/toy_dataset.html#iris-dataset) with [Flax](https://flax.readthedocs.io/en/latest/index.html)\n- example/02-cnn-like-qcl-flax.py\n  - CNN-like QCL[1] Classification of [Digits](https://scikit-learn.org/stable/datasets/toy_dataset.html#digits-dataset) with [Flax](https://flax.readthedocs.io/en/latest/index.html)\n- example/03-pennylane.py\n  - PennyLane Plugin\n- example/04-builtin-variational-cercuit-centric.py\n  - Builtin Variational Circuit: Circuit Centric Block described at [5]\n  - According to [6], this is one of the best circuit.\n- example/05-builtin-variational-josephson-sampler.py\n  - Builtin Variational Circuit: Josephson Sampler described at [7]\n  - According to [6], this is one of the best circuit.\n\n## 4. References\n- JAX\n  - [Official Site](https://jax.readthedocs.io/en/latest/)\n  - [Repository at GitHub](https://github.com/google/jax)\n- PennyLane\n  - [Official Site](https://pennylane.ai/)\n  - [Repository at GitHub](https://github.com/PennyLaneAI/pennylane)\n- TensorFlow\n  - [Official Site](https://www.tensorflow.org/)\n  - [Repository at GitHub](https://github.com/tensorflow/tensorflow)\n- PyTorch\n  - [Official Site](https://pytorch.org/)\n  - [Repository at GitHub](https://github.com/pytorch/pytorch)\n- Flax\n  - [Official Site](https://flax.readthedocs.io/en/latest/index.html)\n  - [Repository at GitHub](https://github.com/google/flax)\n- [1] K. Mitarai et al. \"Quantum Circuit Learning\", Phys. Rev. A 98, 032309 (2018)\n  - DOI: https://doi.org/10.1103/PhysRevA.98.032309\n  - arXiv: https://arxiv.org/abs/1803.00745\n- [2] D. M. Greenberger et al., \"Going Beyond Bell's Theorem\", arXiv:0712.0921\n  - arXiv: https://arxiv.org/abs/0712.0921\n- [3] D. Coppersmith, \"An approximate Fourier transform useful in quantum factoring\",\n  IBM Research Report RC19642\n  - arXiv: https://arxiv.org/abs/quant-ph/0201067\n- [4] A. Kitaev, \"Quantum measurements and the Abelian Stabilizer Problem\",\n  arXiv:quant-ph/9511026\n  - arXiv: https://arxiv.org/abs/quant-ph/9511026\n- [5] M. Schuld et al., \"Circuit-centric quantum classifiers\",\n  Phys. Rev. A 101, 032308 (2020)\n  - DOI: https://doi.org/10.1103/PhysRevA.101.032308\n  - arXiv: https://arxiv.org/abs/1804.00633\n- [6] S. Sim et al., \"Expressibility and entangling capability of\n  parameterized quantum circuits for hybrid quantum-classical algorithms\",\n  Adv. Quantum Technol. 2 (2019) 1900070\n  - DOI: https://doi.org/10.1002/qute.201900070\n  - arXiv: https://arxiv.org/abs/1905.10876\n- [7] M. R. Geller, \"Sampling and scrambling on a chain of superconducting qubits\",\n  Phys. Rev. Applied 10, 024052 (2018)\n  - DOI: https://doi.org/10.1103/PhysRevApplied.10.024052\n  - arXiv: https://arxiv.org/abs/1711.11026\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ymd-h/diffqc",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "diffqc",
    "package_url": "https://pypi.org/project/diffqc/",
    "platform": null,
    "project_url": "https://pypi.org/project/diffqc/",
    "project_urls": {
      "Bug Report & QA": "https://github.com/ymd-h/diffqc/discussions",
      "Homepage": "https://github.com/ymd-h/diffqc"
    },
    "release_url": "https://pypi.org/project/diffqc/0.0.2/",
    "requires_dist": [
      "jax",
      "jaxlib",
      "flax ; extra == 'example'",
      "optax ; extra == 'example'",
      "scikit-learn ; extra == 'example'",
      "tqdm ; extra == 'example'",
      "pennylane ; extra == 'pennylane'",
      "coverage ; extra == 'test'",
      "unittest-xml-reporting ; extra == 'test'",
      "numpy ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Diiferentiable Quantum Simulator",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16487949,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daf3a9081c9c5adf6b7a71afa506eb35a92b1cb994bae3e0f38c95253ce9748c",
          "md5": "f4aaf9ea58d7c950ab05172255cf08cb",
          "sha256": "d042a01b78c23e242003280e459dc788aed75f52c40839dd546292276a1df154"
        },
        "downloads": -1,
        "filename": "diffqc-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4aaf9ea58d7c950ab05172255cf08cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15953,
        "upload_time": "2023-01-16T11:00:20",
        "upload_time_iso_8601": "2023-01-16T11:00:20.222518Z",
        "url": "https://files.pythonhosted.org/packages/da/f3/a9081c9c5adf6b7a71afa506eb35a92b1cb994bae3e0f38c95253ce9748c/diffqc-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dfbf4bf2aeb06c12c526fe49506e017a6a568c1a4cbaa556081b175d2bf6ee1",
          "md5": "e85c284414a004a1a49acfe3c4421360",
          "sha256": "e6e85cc340501abc9d0e2f7e2c2653b40ce7e8b1992ed70c6b900998f1826f49"
        },
        "downloads": -1,
        "filename": "diffqc-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e85c284414a004a1a49acfe3c4421360",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15195,
        "upload_time": "2023-01-16T11:00:22",
        "upload_time_iso_8601": "2023-01-16T11:00:22.701767Z",
        "url": "https://files.pythonhosted.org/packages/4d/fb/f4bf2aeb06c12c526fe49506e017a6a568c1a4cbaa556081b175d2bf6ee1/diffqc-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fe392a9eb42973c97ed3ea8f5f5868fede5f419e2133cb00f354c62ebc9b3d0",
          "md5": "d423a37978148b28b857810ec69f2cf2",
          "sha256": "5654a30014caf1ddb95476c404040444c7bc9cf6a577d6407b976b378aaaa2b2"
        },
        "downloads": -1,
        "filename": "diffqc-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d423a37978148b28b857810ec69f2cf2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17295,
        "upload_time": "2023-01-19T14:03:25",
        "upload_time_iso_8601": "2023-01-19T14:03:25.541258Z",
        "url": "https://files.pythonhosted.org/packages/2f/e3/92a9eb42973c97ed3ea8f5f5868fede5f419e2133cb00f354c62ebc9b3d0/diffqc-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a409699134020a1d1723f3be95a897489f843d46c8b848850020123227d6afa0",
          "md5": "cf448624f8b9145e7d093ba6bfdb69a4",
          "sha256": "c41bd1c4c68056bcb2c23299068f6fa73cbe8dc5e8e84441b1ddff015f082c28"
        },
        "downloads": -1,
        "filename": "diffqc-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cf448624f8b9145e7d093ba6bfdb69a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16856,
        "upload_time": "2023-01-19T14:03:27",
        "upload_time_iso_8601": "2023-01-19T14:03:27.026158Z",
        "url": "https://files.pythonhosted.org/packages/a4/09/699134020a1d1723f3be95a897489f843d46c8b848850020123227d6afa0/diffqc-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2fe392a9eb42973c97ed3ea8f5f5868fede5f419e2133cb00f354c62ebc9b3d0",
        "md5": "d423a37978148b28b857810ec69f2cf2",
        "sha256": "5654a30014caf1ddb95476c404040444c7bc9cf6a577d6407b976b378aaaa2b2"
      },
      "downloads": -1,
      "filename": "diffqc-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d423a37978148b28b857810ec69f2cf2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17295,
      "upload_time": "2023-01-19T14:03:25",
      "upload_time_iso_8601": "2023-01-19T14:03:25.541258Z",
      "url": "https://files.pythonhosted.org/packages/2f/e3/92a9eb42973c97ed3ea8f5f5868fede5f419e2133cb00f354c62ebc9b3d0/diffqc-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a409699134020a1d1723f3be95a897489f843d46c8b848850020123227d6afa0",
        "md5": "cf448624f8b9145e7d093ba6bfdb69a4",
        "sha256": "c41bd1c4c68056bcb2c23299068f6fa73cbe8dc5e8e84441b1ddff015f082c28"
      },
      "downloads": -1,
      "filename": "diffqc-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "cf448624f8b9145e7d093ba6bfdb69a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16856,
      "upload_time": "2023-01-19T14:03:27",
      "upload_time_iso_8601": "2023-01-19T14:03:27.026158Z",
      "url": "https://files.pythonhosted.org/packages/a4/09/699134020a1d1723f3be95a897489f843d46c8b848850020123227d6afa0/diffqc-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}