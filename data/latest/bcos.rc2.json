{
  "info": {
    "author": "",
    "author_email": "Moritz Böhle <mboehle@mpi-inf.mpg.de>, Navdeeppal Singh <npsingh0181@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# B-cos Networks v2\nM. Böhle, N. Singh, M. Fritz, B. Schiele.\n\nImproved B-cos Networks.\n\n# Table of Contents\n- [Introduction](#introduction)\n- [Quick Start](#quick-start)\n- [Installation](#installation)\n  - [`bcos` Package](#bcos-package)\n  - [Training Environment Setup](#training-environment-setup)\n    - [Setting Data Paths](#setting-data-paths)\n- [Usage](#usage)\n  - [Evaluation](#evaluation)\n  - [Training](#training)\n- [Model Zoo](#model-zoo)\n- [License](#license)\n\n# Introduction\nThis repository contains the code for the B-cos v2 models. (_Paper coming soon!_)\n\nThese models are more efficient and easier to train than the original B-cos models. Furthermore, we make a \nlarge number of pretrained B-cos models available for use.\n\nIf you want to take a quick look at the explanations the models generate, \nyou can try out the Gradio web demo on [![Hugging Face Spaces](https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue)](https://huggingface.co/spaces/nps1ngh/B-cos).\n\nIf you prefer a more hands-on approach, \nyou can take a look at the [demo notebook on `Colab`](https://colab.research.google.com/drive/1bdc1zdIVvv7XUJj8B8Toe6VMPYAsIT9w?usp=sharing).\nor load the models directly via torch hub as explained below.\n\nIf you simply want to copy the model definitions, we provide a reference minimal, single-file implementation including\nexplanation mode in [`extra/minimal_bcos_resnet.py`](extra/minimal_bcos_resnet.py)!\n\n\n# Quick Start\nYou only need to make sure you have `torch` and `torchvision` installed. \n\nThen, loading the models via `torch.hub` is as easy as:\n\n```python\nimport torch\n\n# list all available models\ntorch.hub.list('B-cos/B-cos-v2')\n\n# load a pretrained model\nmodel = torch.hub.load('B-cos/B-cos-v2', 'resnet50', pretrained=True)\n```\n\nInference and explanation visualization is as simple as:\n```python\nfrom PIL import Image\nimport matplotlib.pyplot as plt\n\n# load image\nimg = model.transform(Image.open('cat.jpg'))\nimg = img[None].requires_grad_()\n\n# predict and explain\nmodel.eval()\nexpl_out = model.explain(img)\nprint(\"Prediction:\", expl_out[\"prediction\"])  # predicted class idx\nplt.imshow(expl_out[\"explanation\"])\nplt.show()\n```\n\nEach of the models has its inference transform attached to it, accessible via `model.transform`.\nFurthermore, each model has a `.explain()` method that takes an image tensor and returns a dictionary\ncontaining the prediction and the explanation, and some extras.\n<!-- TODO: add link to docs if end up making a site for them -->\nSee the [demo notebook](https://colab.research.google.com/drive/1bdc1zdIVvv7XUJj8B8Toe6VMPYAsIT9w?usp=sharing)\nfor more details on the `.explain()` method.\n\nFurthermore, each model has a `get_classifier` and `get_feature_extractor` method that return the\nclassifier and feature extractor modules respectively. These can useful for fine-tuning the models!\n\n<!-- =============================================================================================================== -->\n\n# Installation\nDepending on your use case, you can either install the `bcos` package \nor set up the development environment for training the models (for your custom models or for reproducing the results).\n\n## `bcos` Package\nIf you are simply interested in using the models (pretrained or otherwise), \nthen we provide a `bcos` package that can be installed via `pip`:\n\n```bash\npip install bcos\n```\n\nThis contains the models, their modules, transforms, and other utilities \nmaking it easy to use and build B-cos models.\nTake a look at the public API [here](bcos/__init__.py). \n(I'll add a proper docs site if I have time or there's enough interest. \nNonetheless, I have tried to keep the code well-documented, so it should be easy to follow.)\n\n## Training Environment Setup\nIf you want to train your own B-cos models using this repository or are interested in reproducing the results, \nyou can set up the development environment as follows:\n\nUsing `conda` (recommended, especially if you want to reproduce the results):\n```bash\nconda env create -f environment.yml\nconda activate bcos\n```\n\nUsing `pip`\n```bash\npip install -r requirements-train.txt\n```\n\n### Setting Data Paths\nYou can either set the paths in [`bcos/settings.py`](bcos/settings.py) or set the environment variables\n1. `DATA_ROOT`\n2. `IMAGENET_PATH`\nto the paths of the data directories.\n\nThe `DATA_ROOT` environment variable should point to the data root directory for CIFAR-10 \n(will be automatically downloaded).\nFor ImageNet, the `IMAGENET_PATH` environment variable should point to the directory containing \nthe `train` and `val` directories.\n\n\n\n<!-- =============================================================================================================== -->\n\n# Usage\nFor the `bcos` package, as mentioned earlier, take a look at the public API [here](bcos/__init__.py).\n\nFor evaluating or training the models, you can use the `evaluate.py` and `train.py` scripts, as follows:\n\n## Evaluation\nYou can use evaluate the accuracy of the models on the ImageNet validation set using:\n```bash\npython evaluate.py --dataset ImageNet --hubconf resnet18\n```\nThis will download the model from `torch.hub` and evaluate it on the ImageNet validation set.\nThe default batch size is 1, but you can change it using the `--batch-size` argument.\nReplace `resnet18` with any of the other models listed in [Model Zoo](#model-zoo) that you wish to evaluate.\n\n## Training\nShort version:\n```bash\npython train.py \\\n  --dataset ImageNet \\\n  --base_network bcos_final \\\n  --experiment_name resnet18\n```\n\nLong version: See [TRAINING.md](TRAINING.md) for more details on \nhow the setup works and how to train your own models.\n\n# Model Zoo\nHere are the ImageNet pre-trained models available in the model zoo.\n\n| Model/Entrypoint    | Top-1 Accuracy | Top-5 Accuracy | #Params |\n|---------------------|----------------|----------------|---------|\n| `resnet18`          | 68.736%        | 87.430%        | 11.69M  |\n| `resnet34`          | 72.284%        | 90.052%        | 21.80M  |\n| `resnet50`          | 75.882%        | 92.528%        | 25.52M  |\n| `resnet101`         | 76.532%        | 92.538%        | 44.50M  |\n| `resnet152`         | 76.484%        | 92.398%        | 60.13M  |\n| `resnext50_32x4d`   | 75.820%        | 91.810%        | 25.00M  |\n| `densenet121`       | 73.612%        | 91.106%        | 7.95M   |\n| `densenet161`       | 76.622%        | 92.554%        | 28.58M  |\n| `densenet169`       | 75.186%        | 91.786%        | 14.08M  |\n| `densenet201`       | 75.480%        | 91.992%        | 19.91M  |\n| `vgg11_bnu`         | 69.310%        | 88.388%        | 132.86M |\n|                     |                |                |         |\n| `convnext_tiny`     | 77.488%        | 93.192%        | 28.54M  |\n| `convnext_base`     | 79.650%        | 94.614%        | 88.47M  |\n| `convnext_tiny_bnu` | 76.826%        | 93.090%        | 28.54M  |\n| `convnext_base_bnu` | 80.142%        | 94.834%        | 88.47M  |\n| `densenet121_long`  | 77.302%        | 93.234%        | 7.95M   |\n| `resnet50_long`     | 79.468%        | 94.452%        | 25.52M  |\n| `resnet152_long`    | 80.144%        | 94.116%        | 60.13M  |\n\nWe'll add ViT models to the model zoo soon, stay tuned!\nYou can find these entrypoints in [`bcos/models/pretrained.py`](bcos/models/pretrained.py).\n\n\n\n# License\nThis repository's code is licensed under the Apache License 2.0 \nwhich you can find in the [LICENSE](./LICENSE) file.\n\nThe pre-trained models are trained on ImageNet (and are hence derived from it), which is \nlicensed under the [ImageNet Terms of Use](https://image-net.org/download),\nwhich among others, only allows non-commercial use of the dataset.\nIt is therefore your responsibility to check whether you have permission to use the \npre-trained models for *your* use case.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bcos",
    "package_url": "https://pypi.org/project/bcos/",
    "platform": null,
    "project_url": "https://pypi.org/project/bcos/",
    "project_urls": {
      "repository": "https://github.com/B-cos/B-cos-v2/"
    },
    "release_url": "https://pypi.org/project/bcos/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "B-cos models.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17543137,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f673863423853f3c9134e318e620a528667e9042413f82ecce1d4d11cb80882",
          "md5": "db1580ff208b64b111ebd7aaa88343ee",
          "sha256": "bb7b8793ace2e63f3617300e64b64ec14c9f338bb816100269506e34c02a7f14"
        },
        "downloads": -1,
        "filename": "bcos-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db1580ff208b64b111ebd7aaa88343ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 108060,
        "upload_time": "2023-03-27T18:54:36",
        "upload_time_iso_8601": "2023-03-27T18:54:36.831250Z",
        "url": "https://files.pythonhosted.org/packages/9f/67/3863423853f3c9134e318e620a528667e9042413f82ecce1d4d11cb80882/bcos-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93dcac49891a5f833cf986a8afb8069b98d3d8a5f28b27fac7f0ca82cc93dcce",
          "md5": "3e819f32c78d2204be283ba507876932",
          "sha256": "eb4934c34553f8826fb6823936103a40113c58d4dbf0798f019a6fad9219b82b"
        },
        "downloads": -1,
        "filename": "bcos-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3e819f32c78d2204be283ba507876932",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 83832,
        "upload_time": "2023-03-27T18:54:40",
        "upload_time_iso_8601": "2023-03-27T18:54:40.179031Z",
        "url": "https://files.pythonhosted.org/packages/93/dc/ac49891a5f833cf986a8afb8069b98d3d8a5f28b27fac7f0ca82cc93dcce/bcos-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f986461bf217c6004c8ec6f640a11752ca9eb219b3b892f2e8979b10aee45082",
          "md5": "062adf9f684a1e4e176399767c56b05e",
          "sha256": "554c85edb5e5f7028b271215fc485d04e5edcbd44e417cc0f18a21707c7cde98"
        },
        "downloads": -1,
        "filename": "bcos-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "062adf9f684a1e4e176399767c56b05e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 106340,
        "upload_time": "2023-04-01T21:30:14",
        "upload_time_iso_8601": "2023-04-01T21:30:14.727993Z",
        "url": "https://files.pythonhosted.org/packages/f9/86/461bf217c6004c8ec6f640a11752ca9eb219b3b892f2e8979b10aee45082/bcos-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cafa55e1d0006ff79b56d75e670527b16eabf9021170a09c9b8ed84540d2064f",
          "md5": "43f669542a11f8b38216c211cca111f6",
          "sha256": "d2c45a986c0e422220b4fa7a0b80bf095eac5b31b42d3deb718c7fbf14be0c3c"
        },
        "downloads": -1,
        "filename": "bcos-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "43f669542a11f8b38216c211cca111f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 83299,
        "upload_time": "2023-04-01T21:30:17",
        "upload_time_iso_8601": "2023-04-01T21:30:17.031585Z",
        "url": "https://files.pythonhosted.org/packages/ca/fa/55e1d0006ff79b56d75e670527b16eabf9021170a09c9b8ed84540d2064f/bcos-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f986461bf217c6004c8ec6f640a11752ca9eb219b3b892f2e8979b10aee45082",
        "md5": "062adf9f684a1e4e176399767c56b05e",
        "sha256": "554c85edb5e5f7028b271215fc485d04e5edcbd44e417cc0f18a21707c7cde98"
      },
      "downloads": -1,
      "filename": "bcos-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "062adf9f684a1e4e176399767c56b05e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 106340,
      "upload_time": "2023-04-01T21:30:14",
      "upload_time_iso_8601": "2023-04-01T21:30:14.727993Z",
      "url": "https://files.pythonhosted.org/packages/f9/86/461bf217c6004c8ec6f640a11752ca9eb219b3b892f2e8979b10aee45082/bcos-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cafa55e1d0006ff79b56d75e670527b16eabf9021170a09c9b8ed84540d2064f",
        "md5": "43f669542a11f8b38216c211cca111f6",
        "sha256": "d2c45a986c0e422220b4fa7a0b80bf095eac5b31b42d3deb718c7fbf14be0c3c"
      },
      "downloads": -1,
      "filename": "bcos-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "43f669542a11f8b38216c211cca111f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 83299,
      "upload_time": "2023-04-01T21:30:17",
      "upload_time_iso_8601": "2023-04-01T21:30:17.031585Z",
      "url": "https://files.pythonhosted.org/packages/ca/fa/55e1d0006ff79b56d75e670527b16eabf9021170a09c9b8ed84540d2064f/bcos-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}