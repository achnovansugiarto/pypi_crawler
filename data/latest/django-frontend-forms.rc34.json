{
  "info": {
    "author": "Mario Orlandi",
    "author_email": "morlandi@brainstorm.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "\ndjango-frontend-forms\n=====================\n\nA Django helper app to add editing capabilities to the frontend using modal forms.\n\nAn accompaning `Demo site <http://frontend-forms.brainstorm.it/>`_\nprovides:\n\n- usage instructions and suggestions\n- a detailed description of the techniques used under the hood\n- a list of working code samples (source: https://github.com/morlandi/django-frontend-forms/tree/master/example/samples)\n\nBases on my previous research as documented here: `Editing Django models in the front end <https://editing-django-models-in-the-frontend.readthedocs.io/en/latest/>`_\n\n.. image:: screenshots/main_screen.png\n\n.. contents::\n\n.. sectnum::\n\nInstallation\n------------\n\nInstall the package by running:\n\n.. code:: bash\n\n    pip install django-frontend-forms\n\n    or:\n\n    pip install git+https://github.com/morlandi/django-frontend-forms\n\nIn your settings, add:\n\n.. code:: python\n\n    INSTALLED_APPS = [\n        ...\n        'frontend_forms',\n    ]\n\nInclude library's views mapping (file `urls.py`):\n\n.. code:: python\n\n    urlpatterns = [\n        ...\n        path('frontend_forms/', include('frontend_forms.urls', namespace='frontend_forms')),\n        ...\n\nIn your base template, include: the default styles, the javascript support,\nthe javascript messaeg catalog, and optionally the sample HTML template:\n\n.. code:: html\n\n    <link rel='stylesheet' href=\"{% static 'frontend_forms/css/frontend_forms.css' %}\">\n    <script src=\"{% static 'frontend_forms/js/frontend_forms.js' %}\"></script>\n    <script src=\"{% url 'frontend_forms:javascript-catalog' %}\"></script>\n    {% include 'frontend_forms/dialogs.html' %}\n\n\nHow to use it\n-------------\n\nFollow the intructions given on the `Demo site <http://frontend-forms.brainstorm.it/>`_\n\n\nBasic example\n.............\n\nIn the following example, we build a Dialog() object providing some custom options;\nthen, we use it to open a modal dialog and load it from the specified url.\n\nFor demonstration purposes, we also subscribe the 'created' notification.\n\n.. code:: html\n\n    <script language=\"javascript\">\n\n        $(document).ready(function() {\n\n            dialog1 = new Dialog({\n                html: '<h1>Loading ...</h1>',\n                url: '{% url 'frontend:j_object' %}',\n                width: '400px',\n                min_height: '200px',\n                title: '<i class=\"fa fa-calculator\"></i> Selezione Oggetto',\n                footer_text: 'testing dialog ...',\n                enable_trace: true,\n                callback: function(event_name, dialog, params) {\n                    switch (event_name) {\n                        case \"created\":\n                            console.log('Dialog created: dialog=%o, params=%o', dialog, params);\n                            break;\n                    }\n                }\n            });\n\n        });\n\n    </script>\n\n\n    <a href=\"#\" class=\"btn btn-primary pull-right\" onclick=\"dialog1.open(event); return false;\">\n        <i class=\"fa fa-plus-circle\"></i>\n        Test Popup\n    </a>\n\nDialog methods\n..............\n\n=============================== ===================================================================================================================\nMethod                          Effects\n------------------------------- -------------------------------------------------------------------------------------------------------------------\nconstructor(options={})         See `options` list below\nopen(event=null, show=true)     Open the dialog\n\n                                1. the dialog body will be immediately loaded with static content provided by option \"html\"\n                                2. then the dialog is shown (unless the \"show\" parameter is false)\n                                3. finally, dynamic content will be loaded from remote address provided by option \"url\" (if supplied)\n                                4. if successfull, a 'loaded.dialog' event is fired; you can use it to perform any action required after loading\n\nclose()                         Close (hide) the dialog\nshow()                          Make the dialog visible\n\n=============================== ===================================================================================================================\n\n\nDialog options\n..............\n\n=============================== ========================== ===============================================================\nOption                          Default value              Notes\n------------------------------- -------------------------- ---------------------------------------------------------------\ndialog_selector                 '#dialog_generic'          The selector for HTML dialog template\nopen_event                      null                       Used to \"remember\" the event which triggered Dialog opening\nhtml                            ''                         Static content to display in dialog body\nurl                             ''                         Optional url to retrieve dialog content via Ajax\nwidth                           null\nmin_width                       null\nmax_width                       null\nheight                          null\nmin_height                      null\nmax_height                      null\nbutton_save_label               'Save'\nbutton_save_initially_hidden    false                      Will be shown after form rendering\nbutton_close_label              'Cancel'\ntitle                           ''\nsubtitle                        ''\nfooter_text                     ''\nenable_trace                    false                      show notifications in debug console\ncallback                        null                       a callback to receive events\nautofocus_first_visible_input   true\n=============================== ========================== ===============================================================\n\nUnspecified options will be retrieved from corresponding HTML attributes on the\nelement which fires the dialog opening;\nfor example:\n\n.. code:: html\n\n    <a href=\"{% url 'frontend:whatever' object.id %}\"\n       data-title=\"My title\"\n       data-subtitle=\"My Subtitle\"\n       onclick=\"new Dialog().open(event); return false;\">\n            Open\n    </a>\n\n=============================== ==========================\nOption                          HTML attribute\n------------------------------- --------------------------\nurl                             href\nhtml                            data-html\nwidth                           data-width\nmin_width                       data-min-width\nmax_width                       data-max-width\nheight                          data-height\nmin_height                      data-min-height\nmax_height                      data-max-height\nbutton_save_label               data-button-save-label\nbutton_close_label              data-button-close-label\ntitle                           data-title\nsubtitle                        data-subtitle\nfooter_text                     data-footer-text\n=============================== ==========================\n\n\nDialog notifications\n....................\n\n============================  ================================\nevent_name                    params\n============================  ================================\ncreated                       options\nclosed\ninitialized\nshown\nloading                       url\nloaded                        url, data\nloading_failed                jqXHR, textStatus, errorThrown\nopen\nsubmitting                    method, url, data\nsubmission_failure            method, url, data\nsubmitted                     method, url, data\n============================  ================================\n\nDuring it's lifetime, the Dialog will notify all interesting events to the caller,\nprovided he supplies a suitable callback in the contructor:\n\n    self.options.callback(event_name, dialog, params)\n\nExample:\n\n.. code:: javascript\n\n    dialog1 = new Dialog({\n        ...\n        callback: function(event_name, dialog, params) {\n            console.log('event_name: %o, dialog: %o, params: %o', event_name, dialog, params);\n        }\n    });\n\nResult::\n\n    event_name: \"created\", dialog: Dialog {options: {…}, element: …}, params: {options: {…}}\n    event_name: \"initialized\", dialog: Dialog {options: {…}, element: …}, params: {}\n    event_name: \"open\", dialog: Dialog {options: {…}, element: …}, params: {}\n    event_name: \"shown\", dialog: Dialog {options: {…}, element: …}, params: {}\n    event_name: \"loading\", dialog: Dialog {options: {…}, element: …}, params: {url: \"/admin_ex/popup/\"}\n    event_name: \"loaded\", dialog: Dialog {options: {…}, element: …}, params: {url: \"/admin_ex/popup/\"}\n    event_name: \"submitting\", dialog: Dialog {options: {…}, element: …}, params: {method: \"post\", url: \"/admin_ex/popup/\", data: \"text=&number=aaa\"}\n    event_name: \"submitted\", dialog: Dialog {options: {…}, element: …}, params: {method: \"post\", url: \"/admin_ex/popup/\", data: \"text=111&number=111\"}\n    event_name: \"closed\", dialog: Dialog {options: {…}, element: …}, params: {}\n\nYou can also trace all events in the console setting the boolean flag `enable_trace`.\n\n\nHandling form submission\n------------------------\n\nWhen a form submission is involved, the modal life cycle has to be modified as follows:\n\n- First and foremost, we need to **prevent the form from performing its default submit**.\n\n  If not, after submission we'll be redirected to the form action, outside the context\n  of the dialog.\n\n  We'll do this binding to the form's submit event, where we'll serialize the form's\n  content and sent it to the view for validation via an Ajax call.\n\n- Then, upon a successufull response from the server, **we'll need to further investigate\n  the HTML received**:\n\n    + if it contains any field error, the form did not validate successfully,\n      so we update the modal body with the new form and its errors\n\n    + otherwise, user interaction is completed, and we can finally close the modal\n\n`django-frontend-forms`, upon detecting a form in the content downloaded from the server,\nalready takes care of all these needs automatically, and keeps refreshing the modal\nafter each submission until the form validation succeedes.\n\nGiving a feedback after successful form submission\n--------------------------------------------------\n\nSometimes, you might want to notify the user after successful form submission.\n\nTo obtain this, all you have to do, after the form has been validated and saved,\nis to return an HTML fragment with no forms in it; in this case:\n\n- the popup will not close\n- the \"save\" button will be hidden\n\nthus giving to the user a chance to read your feedback.\n\n.. code:: bash\n\n    def form_validation_with_feedback(request):\n\n        assert request.is_ajax()\n\n        if request.method == 'POST':\n            form = MyForm(data=request.POST)\n            if form.is_valid():\n                form.save()\n                return HttpResponse(\"<h1>Great !</h1> Your form has been validated\")\n        else:\n            form = MyForm()\n\n        return render(request, \"my_form.html\", {\n            'form': form,\n        })\n\nLogging in with a modal form\n----------------------------\n\nIf you're trying to minimize page switching and reduce navigation in your frontend,\nwhy not provide a modal window for login as well ?\n\nThe library contains a login view adapted from the standard (function based) Django\nlogin view, which can be used for either a standalone HTML page or in a Dialog.\n\nFor example:\n\n.. code:: html\n\n    <a id=\"login_with_dialog\" href=\"{% url 'frontend_forms:login' %}\">\n        <i class=\"fa fa-sign-in\"></i>\n        Login\n    </a>\n\n    <script language=\"javascript\">\n\n        $(document).ready(function() {\n\n            $('#login_with_dialog').on('click', function(event) {\n                event.preventDefault();\n                var target = $(event.target);\n                var url = target.attr('href');\n                var logged_in = false;\n\n                var login_dialog = new Dialog({\n                    url: url,\n                    width: '400px',\n                    min_height: '200px',\n                    title: '<i class=\"fa fa-sign-in\"></i> Login ...',\n                    button_save_label: \"Login\",\n                    button_close_label: \"Close\",\n                    callback: function(event_name, dialog, params) {\n                        switch (event_name) {\n                            case \"submitted\":\n                                logged_in = true;\n                                break;\n                            case \"closed\":\n                                if (logged_in) {\n                                    FrontendForms.redirect('/', true);\n                                }\n                                break;\n                        }\n                    }\n\n                });\n\n                login_dialog.open(event);\n            });\n\n        });\n\n    </script>\n\n.. image:: screenshots/login-dialog.png\n\nYou can customize the following templates:\n\n- frontend_forms/login.html\n- frontend_forms/login_inner.html\n- frontend_forms/login_successful_message.html\n\n\nReplacing login_required\n------------------------\n\nA decorator suitable for modal forms is provided to replace login_required():\n\n.. code:: python\n\n    from frontend_forms.decorators import check_logged_in\n\n    @check_logged_in()\n    def my_view(request, ...):\n        ...\n\nIt checks that the user is logged in, showing an error message in place if not.\n\nYou can customize the following template:\n\n- frontend_forms/check_logged_in_failed.html\n\n\nA full, real example for a Django Form submission from a Dialog\n---------------------------------------------------------------\n\n.. image:: screenshots/contract-form.png\n\nWe start by creating a view for form rendering and submission:\n\nfile `ajax.py`:\n\n.. code:: python\n\n    import time\n    from frontend_forms.decorators import check_logged_in\n    from django.views.decorators.cache import never_cache\n    from django.core.exceptions import PermissionDenied\n    from django.http import HttpResponseRedirect\n\n\n    @check_logged_in()\n    @never_cache\n    def select_contract(request):\n\n        # if settings.DEBUG:\n        #     time.sleep(0.5);\n\n        if not request.user.has_perm('backend.view_contract') or not request.is_ajax():\n            raise PermissionDenied\n\n        #template_name = 'frontend/dialogs/generic_form_inner_with_video.html'\n        template_name = 'dashboard/dialogs/select_contract.html'\n\n        object = None\n        if request.method == 'POST':\n            form = SelectContractForm(request=request, data=request.POST)\n            if form.is_valid():\n                object = form.save(request)\n                if not request.is_ajax():\n                    # reload the page\n                    next = request.META['PATH_INFO']\n                    return HttpResponseRedirect(next)\n                # if is_ajax(), we just return the validated form, so the modal will close\n        else:\n            form = SelectContractForm(request=request)\n\n        return render(request, template_name, {\n            'form': form,\n            'object': object,  # unused, but armless\n        })\n\nand provide an endpoint to it for ajax call:\n\nfile `urls.py`\n\n.. code:: python\n\n\n    from django.urls import path\n    from . import ajax\n\n    app_name = 'dashboard'\n\n    urlpatterns = [\n        ...\n        path('j/select_contract/', ajax.select_contract, name='j_select_contract'),\n        ...\n    ]\n\nThe Form in this example does a few interesting things:\n\n- includes some specific assets declaring an inner Media class\n- receives the request upon construction\n- uses it to provide specific initial values to the widgets\n- provides some specific validations with `clean()`\n- encapsulates in `save()` all actions required after successfull submission\n\n\nfile `forms.py`:\n\n.. code:: python\n\n    import json\n    import datetime\n    from django import forms\n    from selectable.forms import AutoCompleteWidget, AutoCompleteSelectWidget, AutoComboboxSelectWidget\n    from backend.models import Contract\n    from django.utils.safestring import mark_safe\n    from .lookups import ContractLookup\n\n\n    class SelectContractForm(forms.Form):\n\n        contract = forms.CharField(\n            label='Contract',\n            widget=AutoComboboxSelectWidget(ContractLookup, limit=10),\n            required=True,\n            help_text=mark_safe(\"&nbsp;\"),\n        )\n        today = forms.BooleanField(label=\"Oggi\", required=False)\n        date = forms.DateField(widget=forms.DateInput(), label='', required=False)\n\n        class Media:\n            css = {\n                'screen': ('dashboard/css/select_contract_form.css', )\n            }\n            js = ('dashboard/js/select_contract_form.js', )\n\n\n        def __init__(self, request, *args, **kwargs):\n            super().__init__(*args, **kwargs)\n            self.fields['date'].widget = forms.DateInput(attrs={'class': 'datepicker'})\n            assert request.user.is_authenticated and request.user.is_active\n            self.fields['contract'].initial = request.user.contract_attivo\n            self.fields['date'].initial = request.user.data_attiva\n            self.fields['today'].initial = request.user.data_attiva is None\n\n        def lookup_contract(self):\n            try:\n                contract = Contract.objects.get(\n                    id=self.cleaned_data['contract']\n                )\n            except Contract.DoesNotExist:\n                contract = None\n            return contract\n\n        def clean(self):\n            cleaned_data = self.cleaned_data\n            if not cleaned_data['today'] and not cleaned_data['date']:\n                raise forms.ValidationError({\n                    'date': 'Questo campo è obbligatorio'\n                })\n            return cleaned_data\n\n        def save(self, request):\n            user = request.user\n            assert request.user.is_authenticated and request.user.is_active\n            user.contract_attivo = self.lookup_contract()\n            if self.cleaned_data['today']:\n                user.data_attiva = None\n            else:\n                user.data_attiva = self.cleaned_data['date']\n            user.save(update_fields=['contract_attivo', 'data_attiva', ])\n\nThe javascript and css assets are used for specific needs of this form:\n\n.. code:: javascript\n\n    function onChangeToday(event) {\n        var controller = $('#id_today');\n        var value = controller.is(\":checked\");\n        $('#id_date').prop('disabled', value);\n        $('.field-date .ui-datepicker-trigger').prop('disabled', value);\n        if (value) {\n            $('#id_date').datepicker('setDate', null);\n        }\n    }\n\n    $(document).ready(function() {\n        $('#id_today').on('change', onChangeToday);\n        onChangeToday();\n    });\n\nIn the template, remember to include the Form's assets:\n\n.. code:: html\n\n    {% load i18n frontend_forms_tags %}\n\n    {{ form.media.css }}\n\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <form action=\"{{ action }}\" method=\"post\" class=\"form {{form.form_class}}\" novalidate autocomplete=\"off\">\n                {% csrf_token %}\n\n                {% if form.errors or form.non_field_errors %}\n                    <p class=\"errornote\">{% trans 'Please correct the error below.' %}</p>\n                {% endif %}\n\n                {% if form.non_field_errors %}\n                    <ul class=\"errorlist\">\n                        {% for error in form.non_field_errors %}\n                            <li>{{ error }}</li>\n                        {% endfor %}\n                    </ul>\n                {% endif %}\n\n                {% for hidden_field in form.hidden_fields %}\n                    {{ hidden_field }}\n                {% endfor %}\n\n                <fieldset>\n                    {% render_form_field form.contract %}\n                    <div>Data di riferimento:</div>\n                    <div class=\"data-selection-block\">\n                        {% render_form_field form.today %}\n                        {% render_form_field form.date %}\n                    </div>\n                </fieldset>\n\n                <input type=\"hidden\" name=\"object_id\" value=\"{{ object.id|default:'' }}\">\n                <div class=\"form-submit-row\">\n                    <input type=\"submit\" value=\"Save\" />\n                </div>\n            </form>\n        </div>\n    </div>\n\n    {% if request.is_ajax %}\n        {{ form.media.js }}\n    {% endif %}\n\nAnd finally, the Dialog itself;\n\nplease note that we use the `loaded` event notification to rebind the widgets\nafter form rendering.\n\n.. code:: html\n\n    {% block extrajs %}\n    <script language=\"javascript\">\n        $(document).ready(function() {\n\n            dialog1 = new Dialog({\n                dialog_selector: '#dialog_generic',\n                html: '',\n                url: \"{% url 'dashboard:j_select_contract' %}\",\n                width: '80%',\n                max_width: '400px',\n                min_height: '200px',\n                button_save_label: 'Salva',\n                button_close_label: 'Annulla',\n                title: '<i class=\"fa fa-file-o\"></i> Selezione Contract',\n                footer_text: '',\n                enable_trace: true,\n                callback: function(event_name, dialog, params) {\n                    switch (event_name) {\n                        case \"loaded\":\n                            bindSelectables();\n                            dialog.element.find(\".datepicker\").datepicker({});\n                            break;\n                        case \"submitted\":\n                            FrontendForms.reload_page(show_layer=true);\n                            break;\n                    }\n                }\n            });\n\n            $('.btn-cambia-contract').off().on('click', function(event) {\n                event.preventDefault();\n                dialog1.open();\n            })\n\n        });\n\n    </script>\n    {% endblock extrajs %}\n\n\nEditing a Django Model from a Dialog\n------------------------------------\n\nTODO: TO BE REFINED ... AND VERIFIED ;)\n\n\nFirst of all, we need a view for form rendering and submission.\n\nFor example:\n\n.. code:: python\n\n    @check_logged_in()\n    @never_cache\n    def edit_something(request, id_object=None):\n\n        # if not request.user.has_perm('backend.view_something') or not request.is_ajax():\n        #     raise PermissionDenied\n\n        if id_object is not None:\n            object = get_object_or_404(Something, id=id_object)\n        else:\n            object = None\n\n        template_name = 'frontend_forms/generic_form_inner.html'\n\n        if request.method == 'POST':\n\n            form = SomethingForm(data=request.POST, instance=object)\n            if form.is_valid():\n                object = form.save(request)\n                if not request.is_ajax():\n                    # reload the page\n                    next = request.META['PATH_INFO']\n                    return HttpResponseRedirect(next)\n                # if is_ajax(), we just return the validated form, so the modal will close\n        else:\n            form = SomethingForm()\n\n        return render(request, template_name, {\n            'form': form,\n            'object': object,  # unused, but armless\n        })\n\nwhere:\n\n.. code:: python\n\n    class SomethingForm(forms.ModelForm):\n\n        class Meta:\n            model = Someghing\n            exclude = []\n\n        ...\n\nand an endpoint for Ajax call:\n\nFile \"urls.py\" ...\n\n.. code:: python\n\n    path('j/edit_something/<int:id_object>/', ajax.edit_something, name='j_edit_something'),\n\nWe can finally use the form in a Dialog:\n\n.. code:: javascript\n\n    $(document).ready(function() {\n\n        dialog1 = new Dialog({\n            dialog_selector: '#dialog_generic',\n            html: '<h1>Loading ...</h1>',\n            url: '/j/edit_something/{{ object.id }}/',\n            width: '400px',\n            min_height: '200px',\n            title: '<i class=\"fa fa-add\"></i> Edit',\n            footer_text: '',\n            enable_trace: true,\n            callback: function(event_name, dialog, params) {\n                switch (event_name) {\n                    case \"created\":\n                        console.log('Dialog created: dialog=%o, params=%o', dialog, params);\n                        break;\n                    case \"submitted\":\n                        FrontendForms.hide_mouse_cursor();\n                        FrontendForms.reload_page(true);\n                        break;\n                }\n            }\n        });\n\n    });\n\n\nDefault dialog layout\n---------------------\n\nWhen contructing a Dialog, you can use the `dialog_selector` option to select which\nHTML fragment of the page will be treated as the dialog to work with.\n\nIt is advisable to use an HTML structure similar to the default layout:\n\n.. code:: html\n\n    <div id=\"dialog_generic\" class=\"dialog draggable\">\n        <div class=\"dialog-dialog\">\n            <div class=\"dialog-content\">\n                <div class=\"dialog-header\">\n                    <span class=\"spinner\">\n                        <i class=\"fa fa-spinner fa-spin\"></i>\n                    </span>\n                    <span class=\"close\">&times;</span>\n                    <div class=\"title\">Title</div>\n                </div>\n                <div class=\"dialog-body ui-front\">\n\n                </div>\n                <div class=\"dialog-footer\">\n                    <input type=\"submit\" value=\"Close\" class=\"btn btn-close\" />\n                    <input type=\"submit\" value=\"Save\" class=\"btn btn-save\" />\n                    <div class=\"text\">footer</div>\n                </div>\n            </div>\n        </div>\n    </div>\n\nNotes:\n\n- \".draggable\" make the Dialog draggable\n- adding \".ui-front\" to the \".dialog-box\" element helps improving the behaviour of the dialog on a mobile client\n\n\n\nApp Settings\n------------\n\n=========================================== ===============================================================\nOption                                      Accepted values\n------------------------------------------- ---------------------------------------------------------------\nFRONTEND_FORMS_FORM_LAYOUT_FLAVOR           \"generic\", \"bs4\"\nFRONTEND_FORMS_FORM_LAYOUT_DEFAULT          \"vertical\", \"horizontal\"\nFRONTEND_FORMS_MODEL_FORMS_MODULES\n=========================================== ===============================================================\n\nDefault values::\n\n    FRONTEND_FORMS_FORM_LAYOUT_FLAVOR  = \"generic\"\n    FRONTEND_FORMS_FORM_LAYOUT_DEFAULT = \"vertical\"\n    FRONTEND_FORMS_MODEL_FORMS_MODULES = ['frontend.forms', ]\n\n\n\n\"bs4\" flavor\n------------\n\nAdd the .compact-fields class to the form to modify the layout as in the right picture below:\n\n.. image:: screenshots/bs4-forms.png\n\nUtilities (module FrontendForms)\n--------------------------------\n\n======================================================= ========================================================================================\nHelper                                                  Purpose\n------------------------------------------------------- ----------------------------------------------------------------------------------------\ndisplay_server_error(errorDetails)                      Display an error message using SweetAlert2; failing that, uses a simple alert instead\ndisplay_message(html_content)                           Display a message using SweetAlert2; failing that, uses a simple alert instead\nredirect(url, show_overlay=False)                       Similar behavior as an HTTP redirect; optionally calls overlay_show('body')\ngotourl(url, show_overlay=False)                        Similar behavior as clicking on a link; optionally calls overlay_show('body')\nreload_page(show_overlay=False)                         Reload the current page; optionally calls overlay_show('body')\noverlay_show(element)                                   Show overlay on given element; Requires: gasparesganga-jquery-loading-overlay\noverlay_hide(element)                                   Hide overlay on given element; Requires: gasparesganga-jquery-loading-overlay\nhide_mouse_cursor                                       Hide the mouse cursor\ndumpObject(obj, max_depth)                              Serialize the given dictionary up to `max_depth` levels\nlogObject(element, obj)                                 Render `obj` content as HTML table an assign to given element\nisEmptyObject(obj)                                      Check if given `obj` is empty\ncloneObject(obj)                                        Deep clone an object in JavaScript\nlookup(array, prop, value)                              Find an Object by attribute in an Array\nformdata_serialize(formData)                            Serializing form data with the vanilla JS FormData() object\nformdata_to_querystring(formData)                       Transform FormData into query string\nadjust_canvas_size(id)                                  Adapts canvas size to desired size\ngetCookie(name)                                         Add to POST headers as follows: FrontendForms.getCookie('csrftoken')\nconfirmRemoteAction(url, options, afterDoneCallback)    Invoke remote action upon user confirmation.\ndownloadFromAjaxPost(url, params, headers, callback)    Handle file download from ajax post\nquerystring_parse(qs, sep, eq, options)                 Parse query string\nset_datepicker_defaults(language_code)                  Set datepicker defaults, and optionally select language (\"it\" or \"es\" for now)\napply_multiselect(elements)                             Bind MultiSelect widget\n======================================================= ========================================================================================\n\nForm rendering helpers\n----------------------\n\nA **render_form(form, flavor=None, layout=FORM_LAYOUT_DEFAULT)** template tag is available for form rendering:\n\n.. code:: html\n\n    {% load frontend_forms_tags ... %}\n\n    <form method=\"post\">\n        {% csrf_token %}\n\n        {% render_form form %}\n\n        <div class=\"form-group form-submit-row\">\n            <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">{% trans 'Submit' %}</button>\n        </div>\n    </form>\n\nFor more a more advanced customization, you can use **render_form_field(field, flavor=None, extra_attrs='', layout=FORM_LAYOUT_DEFAULT, index=0, addon='')** instead:\n\n.. code:: html\n\n    {% load frontend_forms_tags ... %}\n\n    <form method=\"post\">\n        {% csrf_token %}\n\n        {% if form.non_field_errors %}\n            <ul class=\"errorlist\">\n                {% for error in form.non_field_errors %}\n                    <li>{{ error }}</li>\n                {% endfor %}\n            </ul>\n        {% endif %}\n\n        {% for hidden_field in form.hidden_fields %}\n            {{ hidden_field }}\n        {% endfor %}\n\n        <fieldset>\n            {% render_form_field form.username extra_attrs=\"autocomplete=^off,role=presentation,autocorrect=off,autocapitalize=none\" %}\n            {% render_form_field form.password extra_attrs=\"autocomplete=^off,role=presentation,autocorrect=off,autocapitalize=none\" addon='<i class=\"fa fa-user\"></i>' %}\n        </fieldset>\n\n        <div class=\"form-group form-submit-row\">\n            <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">{% trans 'Submit' %}</button>\n        </div>\n    </form>\n\nIn this second example, we supply `extra_attrs` attributes to each form field; these will be added to the\nattributes already derived from the Django Form field definitions.\n\nThe special prefix `^` will be removed from the attribute, and interpreted as \"replace\" instead of \"append\".\n\nA generic template is also available:\n\n`generic_form_inner.html`:\n\n.. code:: html\n\n    {% load i18n frontend_forms_tags %}\n\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <form action=\"{{ action }}\" method=\"post\" class=\"form\" novalidate autocomplete=\"off\">\n                {% csrf_token %}\n                {% render_form form %}\n                <input type=\"hidden\" name=\"object_id\" value=\"{{ object.id|default:'' }}\">\n                <div class=\"form-submit-row\">\n                    <input type=\"submit\" value=\"Save\" />\n                </div>\n            </form>\n        </div>\n    </div>\n\nPlease note that, as a convenience when editing a Django Model, we've added an hidden field `object_id`;\nin other occasions, this is useless (but also armless, as long as the form doesn't\ncontain a field called \"object\").\n\nDatepicker support\n------------------\n\nA basic support is provided for jquery-ui datepicker.\n\nFollow these steps:\n\n(1) Initialize datepicker default by calling `FrontendForms.set_datepicker_defaults(language_code)` once:\n\n.. code:: javascript\n\n    <script language=\"javascript\">\n        $(document).ready(function() {\n            moment.locale('it');\n\n            FrontendForms.set_datepicker_defaults('{{LANGUAGE_CODE}}');    <-------------\n            ...\n\n(2) In your form, make sure that the `datepicker` class is assigned to the input element;\n    for example:\n\n.. code:: python\n\n    class MyForm(forms.Form):\n\n        date = forms.DateField(widget=forms.DateInput())\n        ...\n\n        def __init__(self, *args, **kwargs):\n            super().__init__(*args, **kwargs)\n            self.fields['date'].widget = forms.DateInput(attrs={'class': 'datepicker'})\n\n(3) If loading the form in a dialog, rebind as necessary:\n\n.. code:: javascript\n\n    dialog1 = new Dialog({\n        ...\n        callback: function(event_name, dialog, params) {\n            switch (event_name) {\n                case \"loaded\":\n                    bindSelectables();\n                    dialog.element.find(\".datepicker\").datepicker({});    <-------------\n                    break;\n                ...\n            }\n        }\n    });\n\n\njQuery MultiSelect support\n--------------------------\n\nRequirements::\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"{% static 'multiselect/css/multi-select.css' %}\" />\n\n    <script src=\"{% static 'multiselect/js/jquery.multi-select.js' %}\"></script>\n    <script src=\"{% static 'jquery.quicksearch/dist/jquery.quicksearch.min.js' %}\"></script>\n\n\nFollow these steps:\n\n(1) In your form, add the `multiselect` class to the SelectMultiple() widget\n\n.. code:: python\n\n    class MyForm(forms.ModelForm):\n\n        ...\n\n        def __init__(self, *args, **kwargs):\n            super().__init__(*args, **kwargs)\n            self.fields['operators'].widget.attrs = {'class': 'multiselect'}\n\n(2) Later on, bind the widget using `apply_multiselect()` helper:\n\n.. code:: javascript\n\n    dialog1 = new Dialog({\n        ...\n        callback: function(event_name, dialog, params) {\n            switch (event_name) {\n                case \"loaded\":\n                    FrontendForms.apply_multiselect(dialog.element.find('.multiselect'));\n                    break;\n                ...\n            }\n        }\n    });\n\ndjango-select2 support\n----------------------\n\nRequirements::\n\n    pip install django-select2\n    npm install select2\n\nChanges to \"settings.py\"::\n\n    INSTALLED_APPS = [\n        ...\n        'django_select2',\n        ...\n\nChanges to \"base.html\"::\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"{% static 'select2/dist/css/select2.min.css' %}\" />\n\n    <script src=\"{% static 'select2/dist/js/select2.min.js' %}\"></script>\n    <script src=\"{% static 'select2/dist/js/i18n/it.js' %}\"></script>\n    <script language=\"javascript\">\n        $.fn.select2.defaults.set('language', 'it');\n    </script>\n    <script src=\"{% static 'django_select2/django_select2.js' %}\"></script>\n\nFollow these steps:\n\n(1) In your form, use one or more Select2Widget():\n\n.. code:: python\n\n    from django_select2.forms import HeavySelect2Widget\n\n    class MyForm(forms.ModelForm):\n\n        ...\n\n        class Meta:\n            ...\n            widgets = {\n                'fieldname': HeavySelect2Widget(\n                    data_url='/url/to/json/response'\n                )\n            }\n\n(2) Later on, bind the widgets using `djangoSelect2()` helper:\n\n.. code:: javascript\n\n    dialog1 = new Dialog({\n        ...\n        callback: function(event_name, dialog, params) {\n            switch (event_name) {\n                case \"loaded\":\n                    dialog.element.find('.django-select2').djangoSelect2({\n\n                        // \"dropdownParent\" is required for Bootstrap; see:\n                        // https://select2.org/troubleshooting/common-problems#select2-does-not-function-properly-when-i-use-it-inside-a-bootst\n\n                        dropdownParent: dialog.element\n                    });\n                    break;\n                ...\n            }\n        }\n    });\n\n\nI normally opt to include all required static files in \"base.hmtml\", since I'm already\nincluding so much javascript stuff.\n\nIn this case, make sure django-select2 won't istall them twice;\nfor example:\n\n.. code:: python\n\n    class MySelect2Widget():\n        \"\"\"\n        Avoid inclusion of select2 by django-select2 as a result of {{form.media}},\n        since we're already including everything in base.html\n        \"\"\"\n        def _get_media(self):\n            return None\n        media = property(_get_media)\n\n\n    class AlbumWidget(MySelect2Widget, ModelSelect2Widget):\n        model = Album\n        search_fields = [\n            'name__istartswith',\n        ]\n\n        def build_attrs(self, base_attrs, extra_attrs=None):\n            attrs = super().build_attrs(base_attrs=base_attrs, extra_attrs=extra_attrs)\n            # \"data-minimum-input-length\";\n            # - either override build_attrs() here,\n            # - or provide as attr in the instance; for example:\n            #   'album': AlbumWidget(attrs={'data-minimum-input-length': 0,}),\n            attrs['data-minimum-input-length'] = 0\n            return attrs\n\n\n\n\nHistory\n=======\n\nv0.2.19\n-------\n- [fix] frontend_forms.js was out of sync with frontend_forms.jsx\n\nv0.2.18\n-------\n- [fix] \"it\" language selection for datepicker\n- formdata_serialize() and formdata_to_querystring() helpers added\n\nv0.2.17\n-------\n* diplay_message() helper added\n\nv0.2.16\n-------\n* small style fix for checkbox in horizontal generic form rendering\n\nv0.2.15\n-------\n* revised example project\n\nv0.2.14\n-------\n* Prepare for Django 4.0\n\nv0.2.13\n-------\n* POSSIBLE INCOMPATIBLE CHANGE: Radio button layout refactored in \"render_form_field.html\"\n* send \"submission_failure\" notification\n* package up data from form with FormData (instead of form.serialize()) to allow files upload\n* allow customization of `enctype` in generic form template\n* send \"submission_failure\" notification\n\nv0.2.12\n-------\n* Prevent default on close button submission\n\nv0.2.11\n-------\n* Replace $() with jQuery() for higher compatibility\n\nv0.2.10\n-------\n* Add never cache to all views for extra safeness\n\nv0.2.9\n------\n* [fix] Properly hide btn_save and btn_close when corresponding label is empty\n\nv0.2.8\n------\n* [fix] frontend_forms.js was out of sync with frontend_forms.jsx\n\nv0.2.7\n------\n* Removed wrong [fix] render_form_field rendering for bootstrap\n\nv0.2.6\n------\n* Update Pillow (example project)\n\nv0.2.5\n------\n* Upgrade Django (in example project)\n* [fix] render_form_field rendering for bootstrap\n* Optionally retrieve missing Dialog options from HTML attributes\n* subtitle added to dialog_generic\n\nv0.2.4\n------\n* in case of form errors, autofocus now selects the first editable invalid field\n\nv0.2.3\n------\n* transpile frontend_forms.jsx\n\nv0.2.2\n------\n* non-destructive form_class annotation\n\nv0.2.1\n------\n* POSSIBLE INCOMPATIBLE CHANGE: Added javascript catalog for translating messages in JS code\n* Italian transation added\n* Example: chain selection sample\n* [fix] Send missing \"submitted\" notification\n\nv0.2.0\n------\n* Login view suitable for modal forms\n* check_logged_in() decorator\n* fix format_datetime\n* POSSIBLE INCOMPATIBLE CHANGE: provided templates now extend \"base.html\" instead of \"frontend/base.html\"\n\nv0.1.13\n-------\n* Improved example project (Creating or updating a Django Model from the front-end)\n* revised confirmRemoteAction() helper\n\nv0.1.12\n-------\n* Make sure invalid-tooltip is visible with BS4\n\nv0.1.11\n-------\n* Select2 support and examples\n\nv0.1.10\n-------\n* Small adjustments to default styles; \"important\" removed where possible\n* Partial support for Bootstrap's \"input-group-addon\"\n* Example updated\n\nv0.1.9\n------\n* Giving a feedback after successful form submission\n\nv0.1.8\n------\n* Make sure Sweetalert2 pops up above modal dialog\n\nv0.1.7\n------\n* render_form_field: show errors for radio groups\n\nv0.1.6\n------\n* example django project added\n\nv0.1.5\n------\n* autofocus_first_visible_input option added\n\nv0.1.4\n------\n* generic Form submission from a Dialog example added to Readme\n* fix horizontal forms for BS4\n* add even/odd class to form groups\n\nv0.1.3\n------\n* Display checkbox fields errors\n* Adjust errors styles\n\nv0.1.2\n------\n* Optionally provide the `request` to the Form constructor\n* Add a class attribute 'form-app_label-model_name' to the rendered form\n* django-select2 support\n* jQuery MultiSelect support\n\nv0.1.1\n------\n* ModalForms module renamed as FrontendForms\n* optional parameter `event` added to open()\n\nv0.1.0\n------\n* Module renamed from \"django-modal-forms\" to \"django-frontend-forms\"\n\nv0.0.14\n-------\n* Fixes for Django 3; support both int and uuid PKs\n\nv0.0.13\n-------\n* Configurable FRONTEND_FORMS_FORM_LAYOUT_DEFAULT\n\nv0.0.12\n-------\n* Support for model forms in a Dialog (undocumented)\n\nv0.0.11\n-------\n* Datepicker support\n\nv0.0.10\n-------\n* optional extra_attrs added to render_form_field template tag\n\nv0.0.9\n------\n* fix confirmRemoteAction()\n\nv0.0.8\n------\n* fix\n\nv0.0.7\n------\n* add custom widget attrs when rendering a field with render_form_fields()\n\nv0.0.6\n------\n* add \"has-error\" class when appropriate in render_form_field tag, to trigger errors in modal forms\n\nv0.0.5\n------\n* \"simpletable\" fix\n\nv0.0.4\n------\n* \"simpletable\" styles\n\nv0.0.3\n------\n* downloadFromAjaxPost helper JS function added\n* Display non_field_errors in BS4 form\n* Prepend fields' class with 'field-' prefix, as Django admin does\n* Radio buttons and Checkboxs rendering for Bootstrap 4\n* bs4 form rendering\n* querystring_parse() utility added\n* Add object_id hidden field to generic form\n* .ui-front added to .dialog-body for bette behaviour on mobiles\n* notify \"loaded\" event in _form_ajax_submit() when approriate\n\nv0.0.2\n------\n* First working release\n\nv0.0.1\n------\n* Project start\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/morlandi/django-frontend-forms",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-frontend-forms",
    "package_url": "https://pypi.org/project/django-frontend-forms/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-frontend-forms/",
    "project_urls": {
      "Homepage": "http://github.com/morlandi/django-frontend-forms"
    },
    "release_url": "https://pypi.org/project/django-frontend-forms/0.2.19/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Django helper app to add editing capabilities to the frontend using modal forms",
    "version": "0.2.19",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16685303,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cfb64aef7d5e005675bfb934cf73200a4d688c4c19e40ca0bda4b7a160aad79",
          "md5": "aa0d96dad551c6d085b53b1ba7239446",
          "sha256": "2888671b5a3da49007a04b8626ba8d1e8db1cc7374be9b8118e1247174cf6134"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa0d96dad551c6d085b53b1ba7239446",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 28535,
        "upload_time": "2020-04-05T10:43:06",
        "upload_time_iso_8601": "2020-04-05T10:43:06.976100Z",
        "url": "https://files.pythonhosted.org/packages/4c/fb/64aef7d5e005675bfb934cf73200a4d688c4c19e40ca0bda4b7a160aad79/django_frontend_forms-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ceb9cf739f5b0753b61c7bb30f1cfad91cf9844e6c7374084ea1ecdafd913857",
          "md5": "b4321cdd867029d31fc39546d232af13",
          "sha256": "def9661b9e3602f49844e331ac949a61e36cbd05a267095babbe75bf510b304c"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4321cdd867029d31fc39546d232af13",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 28608,
        "upload_time": "2020-04-06T17:56:44",
        "upload_time_iso_8601": "2020-04-06T17:56:44.636982Z",
        "url": "https://files.pythonhosted.org/packages/ce/b9/cf739f5b0753b61c7bb30f1cfad91cf9844e6c7374084ea1ecdafd913857/django_frontend_forms-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "346289bed2a3f73b335c6b5aa94dd9b2e26bda76fb4768b03eee02f50b11ed31",
          "md5": "c3a669beff3f55c573ad84fb9c602425",
          "sha256": "beda0721ea086cfeaa6508d2b1b780055103b20cf4a59707a5dde344e7e5de0a"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.10-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3a669beff3f55c573ad84fb9c602425",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 34378,
        "upload_time": "2020-10-09T08:03:45",
        "upload_time_iso_8601": "2020-10-09T08:03:45.670780Z",
        "url": "https://files.pythonhosted.org/packages/34/62/89bed2a3f73b335c6b5aa94dd9b2e26bda76fb4768b03eee02f50b11ed31/django_frontend_forms-0.1.10-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2265477546eb5b7af4816c164b14680c14f37750cd73b5f57630c742f68e7f76",
          "md5": "007176de4ec411cb6ee079d64cac091b",
          "sha256": "fb4138fb95cf0a1cd7f7e941d671221e51d174b52131e188584dde1179d697c4"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.11-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "007176de4ec411cb6ee079d64cac091b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 34848,
        "upload_time": "2020-10-15T17:38:20",
        "upload_time_iso_8601": "2020-10-15T17:38:20.122792Z",
        "url": "https://files.pythonhosted.org/packages/22/65/477546eb5b7af4816c164b14680c14f37750cd73b5f57630c742f68e7f76/django_frontend_forms-0.1.11-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b18d80fed27efee46eb9d36415dd4a1cd64eec6a959e859889e921613c4ed580",
          "md5": "af05518c8046588c6a684b57d21ef8d5",
          "sha256": "5991a593605a69e1524f309f392c677bca61c1caeee902f96d7973b333a673d3"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.12-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af05518c8046588c6a684b57d21ef8d5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 34899,
        "upload_time": "2020-10-31T10:38:59",
        "upload_time_iso_8601": "2020-10-31T10:38:59.358260Z",
        "url": "https://files.pythonhosted.org/packages/b1/8d/80fed27efee46eb9d36415dd4a1cd64eec6a959e859889e921613c4ed580/django_frontend_forms-0.1.12-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdcfad5d5ce7000130779af3525889395fabeeb09b5c2fae5a6f321ef87d41f0",
          "md5": "afb46633cb1d136301b69d44c7e78ab6",
          "sha256": "fec1ebc9b9b554aee98c9d683b4f186407010a4cbb3c0b7aec488d2ec3e5a7ee"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.13-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afb46633cb1d136301b69d44c7e78ab6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 35005,
        "upload_time": "2020-12-15T18:52:54",
        "upload_time_iso_8601": "2020-12-15T18:52:54.067364Z",
        "url": "https://files.pythonhosted.org/packages/cd/cf/ad5d5ce7000130779af3525889395fabeeb09b5c2fae5a6f321ef87d41f0/django_frontend_forms-0.1.13-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4dd2332f65f2c484e60617b4eb92d1963be297823e80184c3d2499fd0bcd876",
          "md5": "c65f161b399ea23c3b8df62743e755b8",
          "sha256": "01b5f6ebe07d67d1ff34b093cdc1417f7618cbfccfa0d08f2a80a6934ea95ec5"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c65f161b399ea23c3b8df62743e755b8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 30020,
        "upload_time": "2020-04-07T14:36:39",
        "upload_time_iso_8601": "2020-04-07T14:36:39.367759Z",
        "url": "https://files.pythonhosted.org/packages/b4/dd/2332f65f2c484e60617b4eb92d1963be297823e80184c3d2499fd0bcd876/django_frontend_forms-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb2ec70a703775da506a81375145a43fc76690143762ce371bc29ba3327beb4d",
          "md5": "77f2e5b79fc0de835da0e98e63c392e8",
          "sha256": "2710faf1803a97d79384acca2b60136c6e92106f3c67a0e910182f83f0553962"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77f2e5b79fc0de835da0e98e63c392e8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 30543,
        "upload_time": "2020-04-08T16:34:56",
        "upload_time_iso_8601": "2020-04-08T16:34:56.683839Z",
        "url": "https://files.pythonhosted.org/packages/bb/2e/c70a703775da506a81375145a43fc76690143762ce371bc29ba3327beb4d/django_frontend_forms-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0aab94f93d32c26c0d18d52ed2ac6b258d14649e2e0c77fee23c41c9151e8150",
          "md5": "9f25f0f662cedcb86539a5d1aab71d13",
          "sha256": "305695607f05469d488eb0853f33a029f4cee7c1a779faccfdd694409865d8dc"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f25f0f662cedcb86539a5d1aab71d13",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 31938,
        "upload_time": "2020-04-28T09:09:11",
        "upload_time_iso_8601": "2020-04-28T09:09:11.491373Z",
        "url": "https://files.pythonhosted.org/packages/0a/ab/94f93d32c26c0d18d52ed2ac6b258d14649e2e0c77fee23c41c9151e8150/django_frontend_forms-0.1.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3e522a08f5c2fed630db132ea278fe0771f5929de309a51c386d4ffab9d88c5",
          "md5": "69a924f200a0090db327432d565bd8d7",
          "sha256": "ca1ebfa4cbccf155b847bba701712d6919aeacd23e13f7273e68804647da29d2"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69a924f200a0090db327432d565bd8d7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 32396,
        "upload_time": "2020-05-26T18:10:51",
        "upload_time_iso_8601": "2020-05-26T18:10:51.158152Z",
        "url": "https://files.pythonhosted.org/packages/a3/e5/22a08f5c2fed630db132ea278fe0771f5929de309a51c386d4ffab9d88c5/django_frontend_forms-0.1.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "800eb31e2c374b962ae0b68923a25ac647ada298b96596e74a42fcd471c2fa33",
          "md5": "49807a1bc88d4e132eb382319f230be3",
          "sha256": "f6363a95085d41c77c79670ce24e51ca38edbca1246c3b55ee710845c7d25d41"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "49807a1bc88d4e132eb382319f230be3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 33086,
        "upload_time": "2020-08-18T10:40:09",
        "upload_time_iso_8601": "2020-08-18T10:40:09.888117Z",
        "url": "https://files.pythonhosted.org/packages/80/0e/b31e2c374b962ae0b68923a25ac647ada298b96596e74a42fcd471c2fa33/django_frontend_forms-0.1.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52ed969f106c7d49f57b90837854ba9b04a58de05740b0261a130f33055b5c71",
          "md5": "37b1014dee36590ab556ab0f4f081ee9",
          "sha256": "940175e4325b0bcdddc07f5f9c4fbab79b7f3f7139fa03fb7b2108ccc27152b3"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37b1014dee36590ab556ab0f4f081ee9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 33677,
        "upload_time": "2020-08-29T08:18:00",
        "upload_time_iso_8601": "2020-08-29T08:18:00.567360Z",
        "url": "https://files.pythonhosted.org/packages/52/ed/969f106c7d49f57b90837854ba9b04a58de05740b0261a130f33055b5c71/django_frontend_forms-0.1.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5febcf87a7751142aea3458a72469428f3989ba1c2597e928957f42c25714406",
          "md5": "15c5bff3cffbee74dee2b43f6bc0d169",
          "sha256": "50c8907204019cf8a0ae62dc3bb41ae1df4d85f1cd7b544388fbd18061794815"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15c5bff3cffbee74dee2b43f6bc0d169",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 33746,
        "upload_time": "2020-09-10T10:03:31",
        "upload_time_iso_8601": "2020-09-10T10:03:31.621795Z",
        "url": "https://files.pythonhosted.org/packages/5f/eb/cf87a7751142aea3458a72469428f3989ba1c2597e928957f42c25714406/django_frontend_forms-0.1.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "923269f575ed7aa89447b4c2b4c51fa9ee5a41f8c5aefa8b2a75f3d5caaf6428",
          "md5": "76febdc5973630ad6ca223493caeeefc",
          "sha256": "8a4876a7301b101f11585f06b6c88137519e23e4b5653ec7d7165a65813bed43"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.1.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76febdc5973630ad6ca223493caeeefc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 34479,
        "upload_time": "2020-09-15T15:33:27",
        "upload_time_iso_8601": "2020-09-15T15:33:27.390455Z",
        "url": "https://files.pythonhosted.org/packages/92/32/69f575ed7aa89447b4c2b4c51fa9ee5a41f8c5aefa8b2a75f3d5caaf6428/django_frontend_forms-0.1.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a9df6740c01eaf97be260f91b16efa8224d52173e66ef2f6648ae1fc189965d",
          "md5": "df31598a4b7aff8a1118bab82e65acda",
          "sha256": "eed20fe1e4227648f3bab6dddda624673a8efa862763203c640cce9518e2a5be"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df31598a4b7aff8a1118bab82e65acda",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 38911,
        "upload_time": "2020-12-27T17:30:54",
        "upload_time_iso_8601": "2020-12-27T17:30:54.330432Z",
        "url": "https://files.pythonhosted.org/packages/9a/9d/f6740c01eaf97be260f91b16efa8224d52173e66ef2f6648ae1fc189965d/django_frontend_forms-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42d1840c0365ef35a91776e7ff47842c9a12f0e29aea94cc594af08a0d739ff6",
          "md5": "4399ae7fb0f8f6278eae4d152a7333d2",
          "sha256": "da15318962d21a2fff9b6964f04fac7df68b07072fd07f8522f6507f5a497750"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4399ae7fb0f8f6278eae4d152a7333d2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 40464,
        "upload_time": "2021-01-02T17:25:40",
        "upload_time_iso_8601": "2021-01-02T17:25:40.183103Z",
        "url": "https://files.pythonhosted.org/packages/42/d1/840c0365ef35a91776e7ff47842c9a12f0e29aea94cc594af08a0d739ff6/django_frontend_forms-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b201d575fa0e4250b5aa5a27771a4ae91f4bf34e7160fd2ffb2e54d8c6deaadc",
          "md5": "7099b901ad6ddbe417940b1e377a45e7",
          "sha256": "591c0fa1d982b7d05a3e7ef301a08a2cfbc6b7b1aa096966fb8099fdd7454bf9"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.10-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7099b901ad6ddbe417940b1e377a45e7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 50759,
        "upload_time": "2021-04-09T08:00:48",
        "upload_time_iso_8601": "2021-04-09T08:00:48.547902Z",
        "url": "https://files.pythonhosted.org/packages/b2/01/d575fa0e4250b5aa5a27771a4ae91f4bf34e7160fd2ffb2e54d8c6deaadc/django_frontend_forms-0.2.10-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85a91442d59a511ee3e5c9ffaf93164eb0552758f3b37b1eb91fd3848dd301cb",
          "md5": "9bf75d5576b87f7e93a6aa066bd62932",
          "sha256": "7a92a01a4b3b0a3ebb6f3b069432bb79b13b1e073c41a06210863c4335e77ae3"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.11-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9bf75d5576b87f7e93a6aa066bd62932",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 50812,
        "upload_time": "2021-05-04T16:39:46",
        "upload_time_iso_8601": "2021-05-04T16:39:46.797283Z",
        "url": "https://files.pythonhosted.org/packages/85/a9/1442d59a511ee3e5c9ffaf93164eb0552758f3b37b1eb91fd3848dd301cb/django_frontend_forms-0.2.11-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e874e281c5baeb83cb2985d8f68b8c6116a44a75cdb067b89caac8ff859ab1ad",
          "md5": "b649eb4318334985d9d4dac6ab7cf221",
          "sha256": "28122ffa4e26c14a1f6b564143ea6e9383ab355652a7a87eed256dd46c5a62a0"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.12-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b649eb4318334985d9d4dac6ab7cf221",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 50841,
        "upload_time": "2021-05-05T09:57:35",
        "upload_time_iso_8601": "2021-05-05T09:57:35.060928Z",
        "url": "https://files.pythonhosted.org/packages/e8/74/e281c5baeb83cb2985d8f68b8c6116a44a75cdb067b89caac8ff859ab1ad/django_frontend_forms-0.2.12-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "252dba2cbbd245f5398870783f05b03edb64b445ea329cb6d90523ed71789bc1",
          "md5": "2a19dbf6a2157a9414f953650a9c5201",
          "sha256": "804a926db5b7e5c1265940f2f2ab10f8a694c7312da2acc222a170289f4a8c63"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.13-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a19dbf6a2157a9414f953650a9c5201",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 51487,
        "upload_time": "2021-05-26T13:43:02",
        "upload_time_iso_8601": "2021-05-26T13:43:02.036356Z",
        "url": "https://files.pythonhosted.org/packages/25/2d/ba2cbbd245f5398870783f05b03edb64b445ea329cb6d90523ed71789bc1/django_frontend_forms-0.2.13-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56aa3d1f4ac28fbf1d560c669b114de1c0fd54a312015277c6d05b0d56d912cf",
          "md5": "8fe7c3aa0c60a04db6a362b3785e1d35",
          "sha256": "b7097ab8578095ae0eb46c58106b07056c3a924f56feb4f1668dcaaf94d9f060"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.14-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fe7c3aa0c60a04db6a362b3785e1d35",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 51567,
        "upload_time": "2021-12-27T17:35:26",
        "upload_time_iso_8601": "2021-12-27T17:35:26.612707Z",
        "url": "https://files.pythonhosted.org/packages/56/aa/3d1f4ac28fbf1d560c669b114de1c0fd54a312015277c6d05b0d56d912cf/django_frontend_forms-0.2.14-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfc4eec0bb1d72d90ad00ccaa6cb7b13ca3e2a1ccb8084ecae3391fce956ea73",
          "md5": "9cb50f99e076b36ee011f6bfd51bb8e3",
          "sha256": "72cb1bcd2f61a9a71c00d445682681e5de6be8e34ff01cdf9831aa8138e1e8a8"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.15-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9cb50f99e076b36ee011f6bfd51bb8e3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 51648,
        "upload_time": "2022-01-19T00:30:18",
        "upload_time_iso_8601": "2022-01-19T00:30:18.207820Z",
        "url": "https://files.pythonhosted.org/packages/df/c4/eec0bb1d72d90ad00ccaa6cb7b13ca3e2a1ccb8084ecae3391fce956ea73/django_frontend_forms-0.2.15-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4355b98e6082ade1822ff4b253c7ab232a18852e673b3a992750c4d115009f70",
          "md5": "fbc2b1134da667623c6a04fe71957e0b",
          "sha256": "ef99cf5cb53e5f3ed9a5bb3a8754ba2957e9496e9f4c8905306610e5681631fe"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.16-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbc2b1134da667623c6a04fe71957e0b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 50965,
        "upload_time": "2022-02-12T11:10:13",
        "upload_time_iso_8601": "2022-02-12T11:10:13.293614Z",
        "url": "https://files.pythonhosted.org/packages/43/55/b98e6082ade1822ff4b253c7ab232a18852e673b3a992750c4d115009f70/django_frontend_forms-0.2.16-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2a9531b0b11215f2f3a6f3c302c61a804093586e4b6c01ac3f5c3e73c2c51dd",
          "md5": "f972ab1e639bd7f33cbd450b3466b832",
          "sha256": "b8d071f1754d75c10276385fe8d4f6d19fb926a9191dfccea18b63ce92fed4ca"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.17-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f972ab1e639bd7f33cbd450b3466b832",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 51177,
        "upload_time": "2022-02-12T11:37:07",
        "upload_time_iso_8601": "2022-02-12T11:37:07.635231Z",
        "url": "https://files.pythonhosted.org/packages/c2/a9/531b0b11215f2f3a6f3c302c61a804093586e4b6c01ac3f5c3e73c2c51dd/django_frontend_forms-0.2.17-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6520565cda65c443c46bb02498495159dfe9d8c2e24a07b238777fc78b0aa937",
          "md5": "10ba85c948bf107724b510b1a2670851",
          "sha256": "834fa4f3db733288783939308a3dd7fa89fa42886c51edcb2858081a24399327"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.18-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10ba85c948bf107724b510b1a2670851",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 52858,
        "upload_time": "2023-02-03T17:10:43",
        "upload_time_iso_8601": "2023-02-03T17:10:43.409413Z",
        "url": "https://files.pythonhosted.org/packages/65/20/565cda65c443c46bb02498495159dfe9d8c2e24a07b238777fc78b0aa937/django_frontend_forms-0.2.18-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11333ab597f86a1f27a5dad30d2733645c761a6b5dd8947a6ef1ed7f382c75fe",
          "md5": "b6cefa0d2646a4d70d18bf9045d58ff1",
          "sha256": "843662b787e13afb1b2d98d0c693fd54293902128df254e901982f800bb4468b"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.19-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6cefa0d2646a4d70d18bf9045d58ff1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 53319,
        "upload_time": "2023-02-03T17:15:12",
        "upload_time_iso_8601": "2023-02-03T17:15:12.809309Z",
        "url": "https://files.pythonhosted.org/packages/11/33/3ab597f86a1f27a5dad30d2733645c761a6b5dd8947a6ef1ed7f382c75fe/django_frontend_forms-0.2.19-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea86910af251809f0ae876edfa1733ea9364c3afac962a2ad84ac4564d9f36a3",
          "md5": "4badfb5daa86cedb1500fff32eee8de7",
          "sha256": "c4cc890084222002606ff26705239d0296c04a70ecdd2b141177a5f1a0a963b3"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4badfb5daa86cedb1500fff32eee8de7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 40234,
        "upload_time": "2021-01-07T17:03:56",
        "upload_time_iso_8601": "2021-01-07T17:03:56.882851Z",
        "url": "https://files.pythonhosted.org/packages/ea/86/910af251809f0ae876edfa1733ea9364c3afac962a2ad84ac4564d9f36a3/django_frontend_forms-0.2.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3b7d1624f3ec31a5aa88252f35a0622a26f9d531533e3c6c1bcc7396176ff38",
          "md5": "9ca4d04008e9a792cfb1edbea1e7bfaa",
          "sha256": "5b1e486a8658a57538488ad7ca56426a138900261d7f1342ce57d6f791db8bd1"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ca4d04008e9a792cfb1edbea1e7bfaa",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 50425,
        "upload_time": "2021-01-25T14:40:49",
        "upload_time_iso_8601": "2021-01-25T14:40:49.001914Z",
        "url": "https://files.pythonhosted.org/packages/d3/b7/d1624f3ec31a5aa88252f35a0622a26f9d531533e3c6c1bcc7396176ff38/django_frontend_forms-0.2.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e75e704fc9a7699350853c78f02cbf9c221876ee7aa81371a7a77d78dca16d2",
          "md5": "a55771699c0e5144a985b085260021ba",
          "sha256": "e651e3ba1777f8b1d063776db988d8c8a9d6bc91206b57f23178858c6f752d20"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a55771699c0e5144a985b085260021ba",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 49817,
        "upload_time": "2021-03-09T11:14:41",
        "upload_time_iso_8601": "2021-03-09T11:14:41.534097Z",
        "url": "https://files.pythonhosted.org/packages/6e/75/e704fc9a7699350853c78f02cbf9c221876ee7aa81371a7a77d78dca16d2/django_frontend_forms-0.2.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b06fb9f2d3b245cd2647a11f6aec221d219f00b3361959d9971a3fc9b0e6fb00",
          "md5": "f1c59090e53b4553cab072fdc2e9a1c6",
          "sha256": "89726786e8df70805d398cbb8d197914548edff64007dda0bfb2a302889465ae"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1c59090e53b4553cab072fdc2e9a1c6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 51157,
        "upload_time": "2021-03-20T15:48:41",
        "upload_time_iso_8601": "2021-03-20T15:48:41.874135Z",
        "url": "https://files.pythonhosted.org/packages/b0/6f/b9f2d3b245cd2647a11f6aec221d219f00b3361959d9971a3fc9b0e6fb00/django_frontend_forms-0.2.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9b698d80ed5e4a44ecf084883960465afd7b64254ea7e8e1b41ad5024d1af46",
          "md5": "809ff22464d3c693748afe4dbf20dea3",
          "sha256": "04be6d5370727cf46cae54756b3ac125bc707518741adb71aae01f113dc28ddf"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "809ff22464d3c693748afe4dbf20dea3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 51171,
        "upload_time": "2021-03-20T15:52:44",
        "upload_time_iso_8601": "2021-03-20T15:52:44.012771Z",
        "url": "https://files.pythonhosted.org/packages/d9/b6/98d80ed5e4a44ecf084883960465afd7b64254ea7e8e1b41ad5024d1af46/django_frontend_forms-0.2.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a8d7e93d12fc281dda08c54c2db20f8660ae7704753fd3a3c48277bed6bff38",
          "md5": "489a43808403585fa935453ef6746560",
          "sha256": "672247174a1b487012ce5dcd4a9470bc84f13afbde80a739526fa3274b314ae7"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "489a43808403585fa935453ef6746560",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 51178,
        "upload_time": "2021-03-20T20:08:56",
        "upload_time_iso_8601": "2021-03-20T20:08:56.388811Z",
        "url": "https://files.pythonhosted.org/packages/5a/8d/7e93d12fc281dda08c54c2db20f8660ae7704753fd3a3c48277bed6bff38/django_frontend_forms-0.2.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d2b961fca4596380807b9f4307dcb877a01c69f1146c2cc3a952a62cdef76d8",
          "md5": "9ede5b358f7366003c43a3ed83f3aed4",
          "sha256": "ffedb46a089723eef0bfa32fec0fcf5130b24b7973ddc65d23c2e12928a0eb59"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ede5b358f7366003c43a3ed83f3aed4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 51456,
        "upload_time": "2021-03-21T16:58:05",
        "upload_time_iso_8601": "2021-03-21T16:58:05.339480Z",
        "url": "https://files.pythonhosted.org/packages/3d/2b/961fca4596380807b9f4307dcb877a01c69f1146c2cc3a952a62cdef76d8/django_frontend_forms-0.2.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4910fbe08009b3d7c08a7c3241c053f741018ba965f7c2a9adb7a6db47893696",
          "md5": "ed34c4e4b1a832a0be8e4e89b8fe7845",
          "sha256": "0c4ad11ef23dee8a01a1f32e6a41b26413448f168e0ff1af09862da6c249def3"
        },
        "downloads": -1,
        "filename": "django_frontend_forms-0.2.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed34c4e4b1a832a0be8e4e89b8fe7845",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 50718,
        "upload_time": "2021-04-06T17:55:01",
        "upload_time_iso_8601": "2021-04-06T17:55:01.671642Z",
        "url": "https://files.pythonhosted.org/packages/49/10/fbe08009b3d7c08a7c3241c053f741018ba965f7c2a9adb7a6db47893696/django_frontend_forms-0.2.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11333ab597f86a1f27a5dad30d2733645c761a6b5dd8947a6ef1ed7f382c75fe",
        "md5": "b6cefa0d2646a4d70d18bf9045d58ff1",
        "sha256": "843662b787e13afb1b2d98d0c693fd54293902128df254e901982f800bb4468b"
      },
      "downloads": -1,
      "filename": "django_frontend_forms-0.2.19-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b6cefa0d2646a4d70d18bf9045d58ff1",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 53319,
      "upload_time": "2023-02-03T17:15:12",
      "upload_time_iso_8601": "2023-02-03T17:15:12.809309Z",
      "url": "https://files.pythonhosted.org/packages/11/33/3ab597f86a1f27a5dad30d2733645c761a6b5dd8947a6ef1ed7f382c75fe/django_frontend_forms-0.2.19-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}