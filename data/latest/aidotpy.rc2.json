{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# ai.py\n\nA single-file Python script that interacts with ChatGPT API in the command-line.\n\n![](images/screenshot-repl.png)\n\nFeatures:\n- Use shortcuts to access predefined prompts\n- Highlight code in output\n- Support one-shot queries and conversations\n- Use special command like `!set` to control the behavior when chatting\n\n\n## Install\n\nJust copy the script to a folder in `$PATH`, like `/usr/local/bin`. You can also change its name to `ai` to get ride of the `.py` extension.\n\nHere's a command that can directly install the script into your system:\n\n```\ncurl https://raw.githubusercontent.com/reorx/ai.py/master/ai.py -o /usr/local/bin/ai && chmod +x /usr/local/bin/ai\n```\n\nYou can also install it with pip or pipx:\n\n```\npip install aidotpy\n```\n\n## Usage\n\nPaste your OpenAI API key to `~/.ai_py_config.json`, or set it in `AI_PY_API_KEY` environment variable.\n\n```bash\necho '{\"api_key\":\"<Your API key>\"}' > ~/.ai_py_config.json\n```\n\nFor detail usage of the script, please read the description of `./ai.py -h`:\n\n```\nusage: ai [-h] [-s SYSTEM] [-c] [--history HISTORY] [-w] [-v] [-t] [-d]\n          [--version]\n          [PROMPT]\n\nA simple CLI for ChatGPT API\n\npositional arguments:\n  PROMPT                your prompt, leave it empty to run REPL. you can use @\n                        to load prompt from ~/.ai_py_prompts.json\n\noptions:\n  -h, --help            show this help message and exit\n  -s SYSTEM, --system SYSTEM\n                        system message to use at the beginning of the\n                        conversation. if starts with @, the message will be\n                        located through ~/.ai_py_prompts.json\n  -c, --conversation    enable conversation, which means all the messages will\n                        be sent to the API, not just the last one. This is\n                        only useful to REPL\n  --history HISTORY     load the history from a JSON file.\n  -w, --write-history   write new messages to --history file after each chat.\n  -v, --verbose         verbose mode, show execution info and role in the\n                        message\n  -t, --show-tokens     show a breakdown of the tokens used in the prompt and\n                        in the response\n  -d, --debug           debug mode, enable logging\n  --version             show program's version number and exit\n```\n\n### One-off query\n\nPass the prompt as the first argument:\n\n```\n./ai.py 'hello world'\n```\n\nYou can also pass the prompt through a pipe (`|`):\n\n```\nhead README.md | ./ai.py 'Proofreading the following text:'\n```\n\n### REPL\n\nRun without argument for [Read–eval–print loop](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop):\n\n```\n./ai.py\n```\n\nBy default only the last message and the system message are sent to the API,\nif you want it to remember all the context (i.e. send all the messages in each chat),\nadd `-c` argument to enable conversation:\n\n```\n./ai.py -c\n```\n\n### System message\n\nYou can pass a system message to define the behavior for the assistant:\n\n```\n./ai.py -s 'You are a proofreader' 'its nice know you'\n```\n\nYou can also save your predefined system messages in `~/.ai_py_promots.json`\nand refer them with `@` at the beginning, this will be covered in the next section.\n\n\n### Prompt shortcuts\n\nYou can predefine prompts in `~/.ai_py_prompts.json` and refer to them by using `@` as a prefix.\nThis works for both system messages and user messages.\n\nSuppose your `~/.ai_py_prompts.json` looks like this:\n\n```json\n{\n  \"system\": {\n    \"cli\": \"As a technology assistant with expertise in command line, answer questions in simple and short words for users who have a high-level background. Provide only one example, and explain as less as possible.\"\n  },\n  \"user\": {\n    \"native\": \"Paraphrase the following sentences to make it more native:\\n\",\n    \"revise\": \"Revise the following sentences to make them more clear concise and coherent:\\n\",\n    \"\": \"\"\n  }\n}\n```\n\nThen you can use the `cli` prompt shortcut in system message by:\n\n```\n./ai.py -s @cli\n```\n\nand use the `native` or `revise` prompt shortcut in user message by:\n\n```\n./ai.py '@native its nice know you'\n\nIt's great to get to know you.\n```\n\n### Verbose mode\n\nAdd `-v` to print role name and parameters used in the API call.\n\n<details>\n  <summary>Screenshot</summary>\n\n  ![](images/screenshot-repl-verbose.png)\n</details>\n\n### Special commands\n\nYou can use special commands to control the behavior of the script when running in REPL.\n\nHere's a list of available commands:\n\n- `!set <key> <value>`: set a key-value pair in the config, available keys are:\n  - `verbose`: set to `True` or `False`, e.g. `!set verbose True`\n  - `conversation`: set to `True` or `False`, e.g. `!set conversation True`\n  - `system`: set the system message. e.g. `!set system you are a poet`, `!set system @cli`\n  - `params`: set the parmeters for the ChatGPT API. e.g. `!set params temperature 0.5`\n  - `model`: set the model to use. e.g. `!set model gpt-4`\n- `!info`: print the execution info\n- `!write-history`: write current messages to history file. e.g. `!write-history history.json`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aidotpy",
    "package_url": "https://pypi.org/project/aidotpy/",
    "platform": null,
    "project_url": "https://pypi.org/project/aidotpy/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/aidotpy/0.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17451516,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0bca266d96c62969df5d1f3a9bdba1f761e3dcfcf467a8a9ad82b355b1c86ee",
          "md5": "6b91fe0b742fd4d864a377f2875f152b",
          "sha256": "cfdec0c4f6fcf6765ab75f716cc17598d86de4cec306ab8d274286eb871daa6c"
        },
        "downloads": -1,
        "filename": "aidotpy-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b91fe0b742fd4d864a377f2875f152b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8650,
        "upload_time": "2023-03-26T16:36:53",
        "upload_time_iso_8601": "2023-03-26T16:36:53.996049Z",
        "url": "https://files.pythonhosted.org/packages/b0/bc/a266d96c62969df5d1f3a9bdba1f761e3dcfcf467a8a9ad82b355b1c86ee/aidotpy-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0075d5e18ad6efc37c048e359de4c39f17ae679f803394da9f7cec7bf3de0dbc",
          "md5": "3a4538d7fc88a10d917e9e26b3233bdb",
          "sha256": "3fe642b98469d2bcd3e724fefd51dcb36c4a7ff2bf3e6b0286dde62fcacfa267"
        },
        "downloads": -1,
        "filename": "aidotpy-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a4538d7fc88a10d917e9e26b3233bdb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9500,
        "upload_time": "2023-03-26T17:25:41",
        "upload_time_iso_8601": "2023-03-26T17:25:41.489788Z",
        "url": "https://files.pythonhosted.org/packages/00/75/d5e18ad6efc37c048e359de4c39f17ae679f803394da9f7cec7bf3de0dbc/aidotpy-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0075d5e18ad6efc37c048e359de4c39f17ae679f803394da9f7cec7bf3de0dbc",
        "md5": "3a4538d7fc88a10d917e9e26b3233bdb",
        "sha256": "3fe642b98469d2bcd3e724fefd51dcb36c4a7ff2bf3e6b0286dde62fcacfa267"
      },
      "downloads": -1,
      "filename": "aidotpy-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3a4538d7fc88a10d917e9e26b3233bdb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9500,
      "upload_time": "2023-03-26T17:25:41",
      "upload_time_iso_8601": "2023-03-26T17:25:41.489788Z",
      "url": "https://files.pythonhosted.org/packages/00/75/d5e18ad6efc37c048e359de4c39f17ae679f803394da9f7cec7bf3de0dbc/aidotpy-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}