{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Intel® Devcloud - Developer Cloud for the Edge.\n\nIntel® Developer Cloud offers complimentary access to a wide range of Intel® architectures to help you get instant hands-on experience with Intel® software and execute your edge, AI, high-performance computing (HPC) and rendering workloads. With preinstalled Intel® optimized frameworks, tools, and libraries, you have everything you need to fast-track your learning and project prototyping.\n\nThis library contains set of Python API which helps in deploying containerized application in the cloud and validate it against Intel's latest and greatest processors\n\n## System Requirements\nBefore you start the installation, check the supported operating systems and required Python* versions. The complete list of supported hardware is available in the [Devcloud Documentation](https://www.intel.com/content/www/us/en/develop/documentation/devcloud-containers/top/available-hardware.html).\n\n| Supported Operating System |  [Python* Version (64-bit)](https://www.python.org/) |\n|---|---|\n| Ubuntu* 18.04 long-term support (LTS) x86, 64-bit  |  3.7, 3.8, 3.9, 3.10 |\n| Ubuntu* 20.04 long-term support (LTS) x86, 64-bit  |  3.7, 3.8, 3.9, 3.10 |\n| Red Hat* Enterprise Linux* 8 x86, 64-bit  |  3.7, 3.8, 3.9, 3.10 |\n| CentOS 7 x86, 64-bit  |  3.7, 3.8, 3.9, 3.10 |\n| macOS* 10.15 and higher versions, x86, 64-bit  |  3.7, 3.8, 3.9, 3.10 |\n| macOS* 11 and higher versions, arm64  |  3.7, 3.8, 3.9, 3.10 |\n| Windows 10* and higher versions, x86, 64-bit  |  3.7, 3.8, 3.9, 3.10 |\n\n>NOTE: This package can be installed on other versions of Linux and Windows OSes, but only the specific versions above are fully validated.\n\n## Install the Intel Devcloud Runtime Package\n\n### Step 1. Set Up Python Virtual Environment\n\\\nUse a virtual environment to avoid dependency conflicts.\n\nTo create a virtual environment, use the following commands:\n\nOn Windows:\n\n```\npython -m venv devcloud_env\n```\n\nOn Linux and macOS:\n\n```\npython3 -m venv devcloud_env\n```\n\n> NOTE: On Linux and macOS, you may need to install pip. For example, on Ubuntu execute the following command\n> to get pip installed: ```sudo apt install python3-venv python3-pip```.\n\n### Step 2. Activate Virtual Environment\n\\\nOn Windows:\n\n```\ndevcloud_env\\Scripts\\activate\n```\n\nOn Linux and macOS:\n\n```\nsource devcloud_env/bin/activate\n```\n\n### Step 3. Set Up and Update PIP to the Highest Version\n\\\nRun the command below:\n\n```\npython -m pip install --upgrade pip\n```\n\n### Step 4. Install the Package\n\\\nRun the command below:\n\n```\npip install devcloud\n```\n\n### Step 5. Verify that the Package Is Installed\n\\\nRun the command below:\n\n```\npython -c \"from devcloud import Devcloud\"\n```\n\nIf installation was successful, you will not see any error messages (no console output).\n\n\n\n## Troubleshooting\n\\\nFor general troubleshooting steps and issues, see [Frequently Asked Questions of Devcloud](https://www.intel.com/content/www/us/en/develop/documentation/devcloud-containers/top/faq.html). The following sections also provide explanations to several error messages.\n\n## Errors with Installing via PIP for Users in China\n\\\nUsers in China might encounter errors while downloading sources via PIP during Devcloud installation. To resolve the issues, try the following solution:\n\nAdd the download source using the ```-i``` parameter with the Python ```pip``` command. For example:\n\n```\npip install devcloud -i https://mirrors.aliyun.com/pypi/simple/\n```\nUse the ```--trusted-host``` parameter if the URL above is http instead of https.\n## List of API\n| Method |  Description | Parameters |  Return\n|---|---|---|---|\n| Devcloud.connect | Validates the token and gives the snapshot of Dashboard and Project deployed by the user | token: str(Optional) API Token of the user, if not provided then will be prompted  | None |\n| Devcloud.transfer | Transfers file from Cloud storage like AWS S3 to Devcloud  |region: str - AWS bucket region<br>bucketName: str - Name of the bucket<br>path: str - file/folder path present relative to the bucket to be copied to devcloud<br>accessKey: str (Optional) - Access key of AWS S3 bucket<br>secretKey: str (Optional) - Secret key of AWS S3 bucket | None |\n| Devcloud.availableHardware | Prints available hardware and their respective ID, Processor Name, Integrated GPU Name and Memory detail | None | None |\n| Devcloud.createContainer | Creates container image and stores in the devcloud |projectName: str - Unique name of the project<br>containerName: str - Unique name of the container<br>url: str - Container image URL | None |\n| Devcloud.configureContainer | Configures the container with various option as mentioned in parameters | projectName: str - Name of the project under which container present<br>containerName: str - Name of the container which needs to configured (This should be assigned to the project name mentioned above)<br>port: list[int] - Port number which must be exposed to external consumption. Port range must be above 1024<br>label: list[str] - Label to be associated to the container<br>entryScript: str - Initial file which must be executed when container boots up<br>output: str - Output mount folder, which can be later accessed using Devcloud file system<br>mountPoint: list[(str, str)] - To mount Devcloud file system to user's container. This is a tuple, were first one is for Devcloud file system path and second is mount point in container. Multiple such mount path can be assigned<br>environment: str - environment variable to be passed to container. eg., -e token=XYZ  | None |\n| Devcloud.launch | Launches the Project against the selected hardward | projectName: str - Name of the project which should be lauched<br>edgeNode: int - Intel's latest and greatest hardware to be used. Get the list by calling Devcloud.availableHardware() | None |\n| Devcloud.getStatus  | Displays launched project status | projectName: str (Optional) If provided will show dashboard detail of the project<br> output: str (Optional) if value is wide then provided additional detail such as Performance and create time  | None |\n| Devcloud.getFilesPreview  | Gets the response object of the requested file path in the Devcloud's filesystem | projectName: str - Name of the project<br>path: str - Relative path from the project's output folder<br> edgeNode: str (Optional) - Intel processor used, if not provided then latest completed container's in the specified project will be used<br> createTime: str (Optional) - If present then this timestamp is used to retrieve the files present under the given runtime of the container<br> | _io.BytesIO |\n\n\n## List of External Libraries used\n\n| Name |  Version |\n|---|---|\n| Requests | 2.28.2 |\n| Pyjwt | 2.6.0 |\n| Typer | 0.6.1 |\n| Pandas | 1.5.0 |\n| Tabulate | 0.9.0 |\n| Pillow | 9.4.0 |\n| importlib-resources  | 5.4.0 |\n\nCopyright © 2021-2023 Intel Corporation\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/intel/DevCloudContent-git",
    "keywords": "",
    "license": "OSI Approved :: Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "devcloud",
    "package_url": "https://pypi.org/project/devcloud/",
    "platform": null,
    "project_url": "https://pypi.org/project/devcloud/",
    "project_urls": {
      "Homepage": "https://github.com/intel/DevCloudContent-git"
    },
    "release_url": "https://pypi.org/project/devcloud/2023.3.1/",
    "requires_dist": [
      "requests (==2.28.2)",
      "pyjwt (==2.6.0)",
      "typer",
      "pandas",
      "tabulate",
      "Pillow (==9.4.0)",
      "importlib-resources (==5.4.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Intel® Devcloud - Developer Cloud for the Edge Python library",
    "version": "2023.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17313641,
  "releases": {
    "2023.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bdaf0f8e0cce8f98e454d7cd6ca28282109103bf3d240f3280bb41c79a3c018",
          "md5": "26c18112f6d72a8c74efe5ddff08fc09",
          "sha256": "737f9b7e163cbc95b0df7d542bcf06f63f2e81385e1af3d2a925ec0eda386c4c"
        },
        "downloads": -1,
        "filename": "devcloud-2023.2.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26c18112f6d72a8c74efe5ddff08fc09",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 20055,
        "upload_time": "2023-02-24T11:41:17",
        "upload_time_iso_8601": "2023-02-24T11:41:17.631554Z",
        "url": "https://files.pythonhosted.org/packages/8b/da/f0f8e0cce8f98e454d7cd6ca28282109103bf3d240f3280bb41c79a3c018/devcloud-2023.2.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2023.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98931cf0590729dc0eaed6955b2bddb8fe6bf957db61f1ba8aaa39ec98d62f24",
          "md5": "a0b3b2c4fbc6cc39f1593fab6531e434",
          "sha256": "836a88b0cc60f8a1b4c4f76ae0761fec34d4cab1c1154f436c8db47ea12c5fbf"
        },
        "downloads": -1,
        "filename": "devcloud-2023.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a0b3b2c4fbc6cc39f1593fab6531e434",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 20042,
        "upload_time": "2023-03-16T03:16:22",
        "upload_time_iso_8601": "2023-03-16T03:16:22.882438Z",
        "url": "https://files.pythonhosted.org/packages/98/93/1cf0590729dc0eaed6955b2bddb8fe6bf957db61f1ba8aaa39ec98d62f24/devcloud-2023.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "98931cf0590729dc0eaed6955b2bddb8fe6bf957db61f1ba8aaa39ec98d62f24",
        "md5": "a0b3b2c4fbc6cc39f1593fab6531e434",
        "sha256": "836a88b0cc60f8a1b4c4f76ae0761fec34d4cab1c1154f436c8db47ea12c5fbf"
      },
      "downloads": -1,
      "filename": "devcloud-2023.3.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a0b3b2c4fbc6cc39f1593fab6531e434",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 20042,
      "upload_time": "2023-03-16T03:16:22",
      "upload_time_iso_8601": "2023-03-16T03:16:22.882438Z",
      "url": "https://files.pythonhosted.org/packages/98/93/1cf0590729dc0eaed6955b2bddb8fe6bf957db61f1ba8aaa39ec98d62f24/devcloud-2023.3.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}