{
  "info": {
    "author": "Richard KÃ¶rber",
    "author_email": "dev@shredzone.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Build Tools",
      "Topic :: System :: Emulators",
      "Topic :: System :: Hardware",
      "Topic :: System :: Operating System",
      "Topic :: System :: Software Distribution",
      "Topic :: Utilities"
    ],
    "description": "# pynaroma\n\nThis is a tiny collection of command line tools for generating ROM images from ROM dumps, and vice versa. It takes care for byte swapping, splitting, and merging different ROM files. It is mainly made for Amiga ROM images, but can also be used for Atari ROMs and other systems.\n\n## Installation\n\n_pynaroma_ is written in Python 3.\n\n```sh\npip install pynaroma\n```\n\n## Terminology\n\nIn the following examples two kinds of files are mentioned. Both have different purposes, so do not mix them up.\n\n`*.rom` files are ROM dumps that are generated by tools like [GrabKick](http://aminet.net/package/util/misc/GrabKick) and can be directly used in [Amiga emulators](https://fs-uae.net/). Bytes are in correct order, so strings are correct if you read the dump file with a Hex editor.\n\n`*.bin` files are ROM images that are suitable to be burned into EPROMs. There may be two separate ROM image files for the lower and higher ROM in 32-bit Amigas. Also bytes are swapped, so these files can be read by programmer tools like [minipro](https://gitlab.com/DavidGriffith/minipro).\n\n## Tools\n\n* `rom2bin` - Converts ROM dumps into one or two ROM image files, ready for burning.\n* `bin2rom` - Converts one or two ROM image files into one or multiple ROM dumps.\n* `bin2split` - Splits a ROM image into smaller chunks for multiple EPROMs.\n\n## Examples\n\nThese are some common usage examples of the tool. Both tools are meant to be used by experienced users, so they are not too smart and will generate broken output if you give a broken input.\n\n----\n\nConvert an AmigaOS 3.2 ROM dump for the Amiga 500 into a single EPROM image fit for burning:\n\n```sh\nrom2bin --to kick32.bin kickcdtva1000a500a2000a600.rom\n```\n\nBoth the source and the target files are 512KB large.\n\n----\n\nConvert an AmigaOS 3.2 ROM dump for the Amiga 4000 into two EPROM images for burning into high and low ROMs:\n\n```sh\nrom2bin --low kick32-low.bin --high kick32-high.bin kicka4000.rom\n```\n\nThe source file is 512KB large, and is split into two target files of 256KB each.\n\n----\n\nIf 512KB EPROMs are used, the ROM image must be duplicated to fill the entire memory. The `--duplicate` option will duplicate each of the given ROM dumps.\n\n```sh\nrom2bin --low kick32-low.bin --high kick32-high.bin --duplicate kicka4000.rom\n```\n\nNow both target files are 512KB each, and will fit into the 512KB EPROM.\n\n----\n\nIf an adapter board with a bigger EPROM and a switch is used, it is also possible to burn different ROM images, e.g. to switch between two different AmigaOS versions:\n\n```sh\nrom2bin --to amiga500.bin kick2-04.rom kick3-2.rom\n```\n\nIf both `.rom` dumps are 512KB each, the resulting image fits into an 1MB EPROM.\n\n----\n\nIf the ROM dumps have different sizes, they can be given as parameter multiple times. In the following example, `kick1-3.rom` is 256KB and `kick2-04.rom` is 512KB large. To create an 1MB ROM dump, `kick1-3.rom` must be duplicated, but `kick2-04.rom` must not. For this reason, the `--duplicate` option cannot be used, but the dump must be given multiple times:\n\n```sh\nrom2bin --to amiga500.bin kick1-3.rom kick1-3.rom kick2-04.rom\n```\n\nThe resulting `.bin` file is 1MB large, and permits to switch between Kick 1.3 and Kick 2.04.\n\n----\n\nIf you need to write the resulting `.bin` file to multiple EPROMs, you can use `bin2split` to split the bin file into smaller chunks. In the following example, `kick.bin` is 512KB large, and we need four 128KB fragments from it.\n\n```sh\nbin2split --size 128K kick.bin\n```\n\nThis line will generate four files: `kick-0.bin`, `kick-1.bin`, `kick-2.bin`, and `kick-3.bin`. Each file has a size of 128KB. Note that `bin2split` will just overwrite existing files.\n\n----\n\nAn Atari ST TOS 1.04 image file is 192KB large. In order to burn it, it needs to be separated into upper and lower 8 bit images first. After that, each image needs to be split into three 32KB chunks, giving six image files.\n\n```sh\nrom2bin --8bit --low tos-low.bin --high tos-high.bin tos104.rom\nbin2split --size 32K tos-high.bin\nbin2split --size 32K tos-low.bin\n```\n\n----\n\n`bin2rom` works in the opposite direction. It takes ROM images (that are read from Amiga ROMs or EPROMs), and converts them to ROM dumps that can be stored or used in emulators.\n\nThis example joins an Amiga 500 ROM image into a ROM dump. It's the counterpart to the first example above.\n\n```sh\nbin2rom --from kick32.bin kickcdtva1000a500a2000a600.rom\n```\n\n----\n\nTo join the dumps of _high_ and _low_ ROM files, they need to be stated separately:\n\n```sh\nbin2rom --low kick32-low.bin --high kick32-high.bin amiga4000.rom\n```\n\nAs mentioned in the example above, the `kick32-low.bin` and `kick32-high.bin` contain the Kickstart twice, to fill the entire EPROM space. For this reason, the resulting `amiga4000.rom` file is 1MB large and also contains the ROM content twice.\n\n----\n\nYou can use the `--split` option to split a ROM image into a number of equally-sized dumps:\n\n```sh\nbin2rom --split 2 --low kick32-low.bin --high kick32-high.bin amiga4000.rom\n```\n\nThe resulting files will be called `amiga4000-1.rom` and `amiga4000-2.rom`. Each file contains the first or second half of the ROM image, respectively.\n\n`--split 4` would split the image into four ROM dump files, `--split 8` would split the image into eight ROM dumps. Other values (like `--split 3`) are not allowed because they would make no sense for obvious reasons.\n\n## 8-bit Mode\n\nUsually 16-bit ROMs are used in Amiga hardware. Some extensions (like Action Replay) use two 8-bit ROMs though. One ROM is for the lower, and the other one for the upper part of the 16-bit data bus. Also the Atari ST line uses 8-bit ROMs.\n\nWith the `--8bit` option, _pynaroma_ converts a ROM dump into two ROM images for 8-bit EPROMs, and vice versa. When the 8-bit mode is enabled, the upper part of the word (bit 8-15) is in the `--low` file, while the lower part of the word (bit 0-7) is in the `--high` file. This is because _pynaroma_ works in big-endian mode by default.\n\nThe `--8bit` mode requires the `--low` and `--high` options to be set. This is not a limitation, because an 8-bit ROM dump and an 8-bit ROM image is essentially the same file. ðŸ˜‰\n\n## Endianness\n\n_pynaroma_ was made for Amiga and Atari enthusiasts. Since these machines base on the Motorola 68000 architecture, the default mode is big-endian, and byte swapping takes place when reading or writing ROM images (see [Endianness](https://en.wikipedia.org/wiki/Endianness)).\n\nIf your target system has a little-endian architecture, you can set the `--little` option at `rom2bin` and `bin2rom`. If this option is set, no byte swapping is done.\n\n(Note: Up to version 0.3.0 the `--8bit` mode was little-endian, so the low and high files needed to be swapped on big-endian systems. Starting with version 0.4.0, big-endian is consistently used in all modes, and little-endian can be selected with the `--little` option.)\n\n## Contribute\n\n* Fork the [Source code at GitHub](https://github.com/shred/pynaroma). Feel free to send pull requests.\n* Found a bug? [File a bug report!](https://github.com/shred/pynaroma/issues)\n\n## License\n\n_pynaroma_ is open source software. The source code is distributed under the terms of [GNU General Public License (GPLv3)](https://www.gnu.org/licenses/gpl-3.0.en.html#content).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shred/pynaroma",
    "keywords": "Amiga ROM",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pynaroma",
    "package_url": "https://pypi.org/project/pynaroma/",
    "platform": null,
    "project_url": "https://pypi.org/project/pynaroma/",
    "project_urls": {
      "Homepage": "https://github.com/shred/pynaroma",
      "Source": "https://github.com/shred/pynaroma",
      "Tracker": "https://github.com/shred/pynaroma/issues"
    },
    "release_url": "https://pypi.org/project/pynaroma/0.4.0/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "Tools for converting Amiga ROM images",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14332508,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f852680a93d44a3689fc14f7b8b7a61b19c6a4810877a7fd3ce60e6a274c4ee",
          "md5": "fdaa38715908fc720bc72fe32adb906a",
          "sha256": "22636e22f793fe7d66387e88892b19f9950e250d08eec3e41316ca47ccec3ae3"
        },
        "downloads": -1,
        "filename": "pynaroma-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fdaa38715908fc720bc72fe32adb906a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 6326,
        "upload_time": "2021-07-31T16:59:36",
        "upload_time_iso_8601": "2021-07-31T16:59:36.374888Z",
        "url": "https://files.pythonhosted.org/packages/3f/85/2680a93d44a3689fc14f7b8b7a61b19c6a4810877a7fd3ce60e6a274c4ee/pynaroma-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b39e6bd1da68d1e8a1021666930c9af11e0391b44dbed7a144de2b6faeeaa944",
          "md5": "6264329605e294de2fe2e97ea8b8daa1",
          "sha256": "ad552664c7980b7ca95b50af6f671b6156a14f02273e1091a8fd33d5c9a48832"
        },
        "downloads": -1,
        "filename": "pynaroma-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6264329605e294de2fe2e97ea8b8daa1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 6828,
        "upload_time": "2021-11-21T12:57:01",
        "upload_time_iso_8601": "2021-11-21T12:57:01.894905Z",
        "url": "https://files.pythonhosted.org/packages/b3/9e/6bd1da68d1e8a1021666930c9af11e0391b44dbed7a144de2b6faeeaa944/pynaroma-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "938f89ba49ae19b5f999c7fc3198febdd5cd3af368e502af6accf3e23e20a7b4",
          "md5": "aec9f4c77d4fb60a0dd5d078dcce3381",
          "sha256": "f08c48a8a6f64258f6e9255e90a23f7cceee3e21a38d69c372689f202a41058d"
        },
        "downloads": -1,
        "filename": "pynaroma-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aec9f4c77d4fb60a0dd5d078dcce3381",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 21260,
        "upload_time": "2022-06-26T09:22:52",
        "upload_time_iso_8601": "2022-06-26T09:22:52.981343Z",
        "url": "https://files.pythonhosted.org/packages/93/8f/89ba49ae19b5f999c7fc3198febdd5cd3af368e502af6accf3e23e20a7b4/pynaroma-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c2ef39b601a8ff0b37d6a95975ab5d5a9211837726e6ca6fd680a2553ca93f0",
          "md5": "961e89ca20faf1107d0b622f9bee2a78",
          "sha256": "46805516305d1ccd9f7142ac68e79bb1b678a0b0efd1f126419033a6cad8613d"
        },
        "downloads": -1,
        "filename": "pynaroma-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "961e89ca20faf1107d0b622f9bee2a78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 22192,
        "upload_time": "2022-07-04T17:37:44",
        "upload_time_iso_8601": "2022-07-04T17:37:44.455846Z",
        "url": "https://files.pythonhosted.org/packages/3c/2e/f39b601a8ff0b37d6a95975ab5d5a9211837726e6ca6fd680a2553ca93f0/pynaroma-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c2ef39b601a8ff0b37d6a95975ab5d5a9211837726e6ca6fd680a2553ca93f0",
        "md5": "961e89ca20faf1107d0b622f9bee2a78",
        "sha256": "46805516305d1ccd9f7142ac68e79bb1b678a0b0efd1f126419033a6cad8613d"
      },
      "downloads": -1,
      "filename": "pynaroma-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "961e89ca20faf1107d0b622f9bee2a78",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 22192,
      "upload_time": "2022-07-04T17:37:44",
      "upload_time_iso_8601": "2022-07-04T17:37:44.455846Z",
      "url": "https://files.pythonhosted.org/packages/3c/2e/f39b601a8ff0b37d6a95975ab5d5a9211837726e6ca6fd680a2553ca93f0/pynaroma-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}