{
  "info": {
    "author": "Wenzel Jakob",
    "author_email": "wenzel.jakob@epfl.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: C++",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": ".. figure:: https://github.com/pybind/pybind11/raw/master/docs/pybind11-logo.png\n   :alt: pybind11 logo\n\n**pybind11 — Seamless operability between C++11 and Python**\n\n|Latest Documentation Status| |Stable Documentation Status| |Gitter chat| |CI| |Build status|\n\n.. warning::\n\n   Combining older versions of pybind11 (< 2.6.0) with the brand-new Python\n   3.9.0 will trigger undefined behavior that typically manifests as crashes\n   during interpreter shutdown (but could also destroy your data. **You have been\n   warned.**)\n\n   We recommend that you wait for Python 3.9.1 slated for release in December,\n   which will include a `fix <https://github.com/python/cpython/pull/22670>`_\n   that resolves this problem.  In the meantime, please update to the latest\n   version of pybind11 (2.6.0 or newer), which includes a temporary workaround\n   specifically when Python 3.9.0 is detected at runtime.\n\n**pybind11** is a lightweight header-only library that exposes C++ types\nin Python and vice versa, mainly to create Python bindings of existing\nC++ code. Its goals and syntax are similar to the excellent\n`Boost.Python <http://www.boost.org/doc/libs/1_58_0/libs/python/doc/>`_\nlibrary by David Abrahams: to minimize boilerplate code in traditional\nextension modules by inferring type information using compile-time\nintrospection.\n\nThe main issue with Boost.Python—and the reason for creating such a\nsimilar project—is Boost. Boost is an enormously large and complex suite\nof utility libraries that works with almost every C++ compiler in\nexistence. This compatibility has its cost: arcane template tricks and\nworkarounds are necessary to support the oldest and buggiest of compiler\nspecimens. Now that C++11-compatible compilers are widely available,\nthis heavy machinery has become an excessively large and unnecessary\ndependency.\n\nThink of this library as a tiny self-contained version of Boost.Python\nwith everything stripped away that isn’t relevant for binding\ngeneration. Without comments, the core header files only require ~4K\nlines of code and depend on Python (2.7 or 3.5+, or PyPy) and the C++\nstandard library. This compact implementation was possible thanks to\nsome of the new C++11 language features (specifically: tuples, lambda\nfunctions and variadic templates). Since its creation, this library has\ngrown beyond Boost.Python in many ways, leading to dramatically simpler\nbinding code in many common situations.\n\nTutorial and reference documentation is provided at\n`pybind11.readthedocs.io <https://pybind11.readthedocs.io/en/latest>`_.\nA PDF version of the manual is available\n`here <https://pybind11.readthedocs.io/_/downloads/en/latest/pdf/>`_.\nAnd the source code is always available at\n`github.com/pybind/pybind11 <https://github.com/pybind/pybind11>`_.\n\n\nCore features\n-------------\n\n\npybind11 can map the following core C++ features to Python:\n\n- Functions accepting and returning custom data structures per value,\n  reference, or pointer\n- Instance methods and static methods\n- Overloaded functions\n- Instance attributes and static attributes\n- Arbitrary exception types\n- Enumerations\n- Callbacks\n- Iterators and ranges\n- Custom operators\n- Single and multiple inheritance\n- STL data structures\n- Smart pointers with reference counting like ``std::shared_ptr``\n- Internal references with correct reference counting\n- C++ classes with virtual (and pure virtual) methods can be extended\n  in Python\n\nGoodies\n-------\n\nIn addition to the core functionality, pybind11 provides some extra\ngoodies:\n\n- Python 2.7, 3.5+, and PyPy/PyPy3 7.3 are supported with an\n  implementation-agnostic interface.\n\n- It is possible to bind C++11 lambda functions with captured\n  variables. The lambda capture data is stored inside the resulting\n  Python function object.\n\n- pybind11 uses C++11 move constructors and move assignment operators\n  whenever possible to efficiently transfer custom data types.\n\n- It’s easy to expose the internal storage of custom data types through\n  Pythons’ buffer protocols. This is handy e.g. for fast conversion\n  between C++ matrix classes like Eigen and NumPy without expensive\n  copy operations.\n\n- pybind11 can automatically vectorize functions so that they are\n  transparently applied to all entries of one or more NumPy array\n  arguments.\n\n- Python’s slice-based access and assignment operations can be\n  supported with just a few lines of code.\n\n- Everything is contained in just a few header files; there is no need\n  to link against any additional libraries.\n\n- Binaries are generally smaller by a factor of at least 2 compared to\n  equivalent bindings generated by Boost.Python. A recent pybind11\n  conversion of PyRosetta, an enormous Boost.Python binding project,\n  `reported <http://graylab.jhu.edu/RosettaCon2016/PyRosetta-4.pdf>`_\n  a binary size reduction of **5.4x** and compile time reduction by\n  **5.8x**.\n\n- Function signatures are precomputed at compile time (using\n  ``constexpr``), leading to smaller binaries.\n\n- With little extra effort, C++ types can be pickled and unpickled\n  similar to regular Python objects.\n\nSupported compilers\n-------------------\n\n1. Clang/LLVM 3.3 or newer (for Apple Xcode’s clang, this is 5.0.0 or\n   newer)\n2. GCC 4.8 or newer\n3. Microsoft Visual Studio 2015 Update 3 or newer\n4. Intel C++ compiler 18 or newer\n   (`possible issue <https://github.com/pybind/pybind11/pull/2573>`_ on 20.2)\n5. Cygwin/GCC (tested on 2.5.1)\n6. NVCC (CUDA 11.0 tested)\n7. NVIDIA PGI (20.7 and 20.9 tested)\n\nAbout\n-----\n\nThis project was created by `Wenzel\nJakob <http://rgl.epfl.ch/people/wjakob>`_. Significant features and/or\nimprovements to the code were contributed by Jonas Adler, Lori A. Burns,\nSylvain Corlay, Eric Cousineau, Ralf Grosse-Kunstleve, Trent Houliston, Axel\nHuebl, @hulucc, Yannick Jadoul, Sergey Lyskov Johan Mabille, Tomasz Miąsko,\nDean Moldovan, Ben Pritchard, Jason Rhinelander, Boris Schäling,  Pim\nSchellart, Henry Schreiner, Ivan Smirnov, Boris Staletic, and Patrick Stewart.\n\nWe thank Google for a generous financial contribution to the continuous\nintegration infrastructure used by this project.\n\n\nContributing\n~~~~~~~~~~~~\n\nSee the `contributing\nguide <https://github.com/pybind/pybind11/blob/master/.github/CONTRIBUTING.md>`_\nfor information on building and contributing to pybind11.\n\nLicense\n~~~~~~~\n\npybind11 is provided under a BSD-style license that can be found in the\n`LICENSE <https://github.com/pybind/pybind11/blob/master/LICENSE>`_\nfile. By using, distributing, or contributing to this project, you agree\nto the terms and conditions of this license.\n\n.. |Latest Documentation Status| image:: https://readthedocs.org/projects/pybind11/badge?version=latest\n   :target: http://pybind11.readthedocs.org/en/latest\n.. |Stable Documentation Status| image:: https://img.shields.io/badge/docs-stable-blue\n   :target: http://pybind11.readthedocs.org/en/stable\n.. |Gitter chat| image:: https://img.shields.io/gitter/room/gitterHQ/gitter.svg\n   :target: https://gitter.im/pybind/Lobby\n.. |CI| image:: https://github.com/pybind/pybind11/workflows/CI/badge.svg\n   :target: https://github.com/pybind/pybind11/actions\n.. |Build status| image:: https://ci.appveyor.com/api/projects/status/riaj54pn4h08xy40?svg=true\n   :target: https://ci.appveyor.com/project/wjakob/pybind11\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/pybind/pybind11/tarball/v2.6.0",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pybind/pybind11",
    "keywords": "C++11,Python bindings",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pybind11-rosetta-commons",
    "package_url": "https://pypi.org/project/pybind11-rosetta-commons/",
    "platform": "",
    "project_url": "https://pypi.org/project/pybind11-rosetta-commons/",
    "project_urls": {
      "Download": "https://github.com/pybind/pybind11/tarball/v2.6.0",
      "Homepage": "https://github.com/pybind/pybind11"
    },
    "release_url": "https://pypi.org/project/pybind11-rosetta-commons/2.6.0/",
    "requires_dist": [
      "pybind11-global (==2.6.0) ; extra == 'global'"
    ],
    "requires_python": "!=3.0,!=3.1,!=3.2,!=3.3,!=3.4,!=3.9.0,>=2.7",
    "summary": "Seamless operability between C++11 and Python",
    "version": "2.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13003595,
  "releases": {
    "2.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96190eefd0ae71445fa31aaacfe870c868e5a7b4a061a0b3c96aa2eb403e278e",
          "md5": "e8221b4d5325d0d5d7ff70a5d40aadf9",
          "sha256": "0ed3ed982d48927d7518cb8aa0b4d3d92fb970322f180f52a18355a1941741d7"
        },
        "downloads": -1,
        "filename": "pybind11_rosetta_commons-2.6.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8221b4d5325d0d5d7ff70a5d40aadf9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "!=3.0,!=3.1,!=3.2,!=3.3,!=3.4,!=3.9.0,>=2.7",
        "size": 187753,
        "upload_time": "2022-02-25T00:59:43",
        "upload_time_iso_8601": "2022-02-25T00:59:43.584256Z",
        "url": "https://files.pythonhosted.org/packages/96/19/0eefd0ae71445fa31aaacfe870c868e5a7b4a061a0b3c96aa2eb403e278e/pybind11_rosetta_commons-2.6.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f16ea330b802034c9d5a8a2383c0fd91e25de6c1052d94a7372f711fbf24de7",
          "md5": "022401885699261c6aca530c2db88148",
          "sha256": "d4a6ea4db5e16d21555c5c6371c3ff1369df03505a0d8e3516a23cdc5a90abe7"
        },
        "downloads": -1,
        "filename": "pybind11-rosetta-commons-2.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "022401885699261c6aca530c2db88148",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "!=3.0,!=3.1,!=3.2,!=3.3,!=3.4,!=3.9.0,>=2.7",
        "size": 170327,
        "upload_time": "2022-02-25T01:07:43",
        "upload_time_iso_8601": "2022-02-25T01:07:43.727742Z",
        "url": "https://files.pythonhosted.org/packages/2f/16/ea330b802034c9d5a8a2383c0fd91e25de6c1052d94a7372f711fbf24de7/pybind11-rosetta-commons-2.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "96190eefd0ae71445fa31aaacfe870c868e5a7b4a061a0b3c96aa2eb403e278e",
        "md5": "e8221b4d5325d0d5d7ff70a5d40aadf9",
        "sha256": "0ed3ed982d48927d7518cb8aa0b4d3d92fb970322f180f52a18355a1941741d7"
      },
      "downloads": -1,
      "filename": "pybind11_rosetta_commons-2.6.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e8221b4d5325d0d5d7ff70a5d40aadf9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": "!=3.0,!=3.1,!=3.2,!=3.3,!=3.4,!=3.9.0,>=2.7",
      "size": 187753,
      "upload_time": "2022-02-25T00:59:43",
      "upload_time_iso_8601": "2022-02-25T00:59:43.584256Z",
      "url": "https://files.pythonhosted.org/packages/96/19/0eefd0ae71445fa31aaacfe870c868e5a7b4a061a0b3c96aa2eb403e278e/pybind11_rosetta_commons-2.6.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f16ea330b802034c9d5a8a2383c0fd91e25de6c1052d94a7372f711fbf24de7",
        "md5": "022401885699261c6aca530c2db88148",
        "sha256": "d4a6ea4db5e16d21555c5c6371c3ff1369df03505a0d8e3516a23cdc5a90abe7"
      },
      "downloads": -1,
      "filename": "pybind11-rosetta-commons-2.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "022401885699261c6aca530c2db88148",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "!=3.0,!=3.1,!=3.2,!=3.3,!=3.4,!=3.9.0,>=2.7",
      "size": 170327,
      "upload_time": "2022-02-25T01:07:43",
      "upload_time_iso_8601": "2022-02-25T01:07:43.727742Z",
      "url": "https://files.pythonhosted.org/packages/2f/16/ea330b802034c9d5a8a2383c0fd91e25de6c1052d94a7372f711fbf24de7/pybind11-rosetta-commons-2.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}