{
  "info": {
    "author": "Paul Kinsvater",
    "author_email": "paul.kinsvater@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# A CLI and Python Client for the Geoapify API\n\nWe have been using the Geoapify API to **geocode millions of location records** for data validation and analytics. We built\nthis package to make this process comfortable using Python and the command line.\n\nWhy Geoapify and this package may also be a good fit for you:\n\n- You need to batch process large numbers of location records (geocode, reverse geocode, places & details).\n- The license must support commercial use without restrictions.\n- It needs to be cheap (or even for free if you don't need more than 6k addresses per day).\n\nSign up at [geoapify.com](https://geoapify.com/) and start with their free plan of 3k credits per day which translates\nto up to 6k address geocodings.\n\n## Install our package with `pip`\n\nThis package is available on the public PyPI:\n\n```shell\npip install geobatchpy\n```\n\n## Examples\n\nSee our documentation at [geobatchpy.readthedocs.io](https://geobatchpy.readthedocs.io/en/latest/) for a growing number of\ncomprehensive example use cases. Below we illustrate both, the Python API and the CLI, for a tiny batch geocoding\nexample.\n\n### A simple batch geocoding example using the Python API\n\nBelow we geocode multiple addresses in a single batch. There are two ways how we can provide the location data as input.\nEither we use a list of strings, one string per address. These are then taken as free text searches. Or we provide\nstructured input as a list of dictionaries, again one per address. See the\n[Geoapify API documentation](https://apidocs.geoapify.com/) for a complete list of address attributes accepted by the\ngeocoding services. Use the optional `parameters` dictionary if all your addresses have an attribute in common. E.g.,\nbelow we request results in French.\n\n```python\nfrom geobatchpy import Client\n\nclient = Client(api_key='<your-api-key>')\n\naddresses = ['Hülser Markt 1, 47839 Krefeld',\n             'DB Schenker, Essen, Germany',\n             'JCI Beteiligungs GmbH, Am Schimmersfeld 5, Ratingen']\n\n# see the geoapify.com API docs for more optional parameters\nres = client.batch.geocode(locations=addresses, parameters={'lang': 'fr'}, simplify_output=True)\n```\n\nAlternatively you can provide a list of dictionaries, with every address in a structured form. And if you still need\nthe free text search for some, you can do this with the `'text'` attribute. Here is the same example, with the first\ntwo address translated to structured form:\n\n```python\naddresses = [{'city': 'Krefeld', 'street': 'Hülser Markt', 'housenumber': 1, 'postcode': '47839'},\n             {'name': 'DB Schenker', 'city': 'Essen', 'country': 'Germany'},\n             {'text': 'JCI Beteiligungs GmbH, Am Schimmersfeld 5, Ratingen'}]\n```\n\n```python\n# Showing the first of three result sets: res[0]\n{\n    \"query\": {\n        \"text\": \"Hülser Markt 1, 47839 Krefeld\",\n        \"parsed\": {\n            \"housenumber\": \"1\",\n            \"street\": \"hülser markt\",\n            \"postcode\": \"47839\",\n            \"city\": \"krefeld\",\n            \"expected_type\": \"building\",\n        },\n    },\n    \"datasource\": {\n        \"sourcename\": \"openstreetmap\",\n        \"attribution\": \"© OpenStreetMap contributors\",\n        \"license\": \"Open Database License\",\n        \"url\": \"https://www.openstreetmap.org/copyright\",\n    },\n    \"name\": \"Metzgerei Etteldorf\",\n    \"housenumber\": \"1\",\n    \"street\": \"Hülser Markt\",\n    \"suburb\": \"Hüls\",\n    \"city\": \"Krefeld\",\n    \"state\": \"Rhénanie-du-Nord-Westphalie\",\n    \"postcode\": \"47839\",\n    \"country\": \"Allemagne\",\n    \"country_code\": \"de\",\n    \"lon\": 6.510696417033254,\n    \"lat\": 51.373026800000005,\n    \"formatted\": \"Metzgerei Etteldorf, Hülser Markt 1, 47839 Krefeld, Allemagne\",\n    \"address_line1\": \"Metzgerei Etteldorf\",\n    \"address_line2\": \"Hülser Markt 1, 47839 Krefeld, Allemagne\",\n    \"category\": \"commercial.food_and_drink.butcher\",\n    \"result_type\": \"amenity\",\n    \"rank\": {\n        \"importance\": 0.31100000000000005,\n        \"popularity\": 5.585340759145855,\n        \"confidence\": 1,\n        \"confidence_city_level\": 1,\n        \"confidence_street_level\": 1,\n        \"match_type\": \"inner_part\",\n    },\n    \"place_id\": \"516b5e6500f40a1a40590a449957bfaf4940f00102f9010ecff70d00000000c002019203134d65747a676572656920457474656c646f7266\",\n}\n```\n\n### The same batch geocoding example using the CLI\n\nWe built the `geoapify` command line interface to make batch processing large numbers of records more comfortable.\n\nSteps:\n1. Prepare a JSON file as input.\n2. Use `geoapify post-batch-jobs` to submit one or more jobs to the Geoapify servers.\n3. Use `geoapify monitor-batch-jobs` for monitoring progress and data retrieval.\n\n```python\n# Step 1 - written in Python:\nfrom geobatchpy.batch import parse_geocoding_inputs\nfrom geobatchpy.utils import write_data_to_json_file\n\naddresses = ['Hülser Markt 1, 47839 Krefeld',\n             'DB Schenker, Essen, Germany',\n             'JCI Beteiligungs GmbH, Am Schimmersfeld 5, Ratingen']\n\ndata = {\n    'api': '/v1/geocode/search',  # see the Geoapify API docs for other APIs that work with batch processing\n    'inputs': parse_geocoding_inputs(locations=addresses),\n    'batch_len': 2,  # optional - will put first two addresses in batch 1, last address in batch 2\n    'id': 'my-batch-geocoding-job'  # optional - a reference which will be reused in the output file\n}\n\nwrite_data_to_json_file(data=data, file_path='<path-data-in>')\n```\n\nThe following command submits one or more jobs and stores job URLs to disk. Those URLs are required to monitor\nand retrieve results.\n\n```shell\ngeobatch submit <path-data-in> <path-post-data-out> --api-key <your-key>\n```\n\nYou can omit the `--api-key` option if you set the `GEOAPIFY_KEY` environment variable. Next we start monitoring\nprogress:\n\n```shell\ngeobatch receive <path-post-data-out> <path-results-data-out> --api-key <your-key>\n```\n\nWe can abort the monitoring at any time and restart later - provided the jobs still are in the cache of\nGeoapify servers (24 hours).\n\n## References and further reading\n\n- [geoapify.com API documentation](https://apidocs.geoapify.com/)\n- [Towards Data Science - Deduplicate and clean-up millions of location records](https://towardsdatascience.com/deduplicate-and-clean-up-millions-of-location-records-abcffb308ebf)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/huels-originals/geobatchpy",
    "keywords": "geoapify,geocoding,openstreetmap,geojson",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "geobatchpy",
    "package_url": "https://pypi.org/project/geobatchpy/",
    "platform": null,
    "project_url": "https://pypi.org/project/geobatchpy/",
    "project_urls": {
      "Homepage": "https://github.com/huels-originals/geobatchpy",
      "Repository": "https://github.com/huels-originals/geobatchpy"
    },
    "release_url": "https://pypi.org/project/geobatchpy/0.2.2/",
    "requires_dist": [
      "requests (>=2.28.1,<3.0.0)",
      "click (>=8.1.3,<9.0.0)"
    ],
    "requires_python": ">=3.7.1,<4.0",
    "summary": "A CLI and Python Client for the Geoapify API.",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15752893,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "663826c7222c303f7abd8f51c6e808f52120c5a4cd7da7a8ff2c00548e4c134b",
          "md5": "b6623646ea3945573ddde4e5c82c9468",
          "sha256": "4ed77babee58e0d38697ce647612262d2d52a3306aa999dfabeb9133ac6a2d55"
        },
        "downloads": -1,
        "filename": "geobatchpy-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6623646ea3945573ddde4e5c82c9468",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0",
        "size": 15781,
        "upload_time": "2022-10-23T20:07:00",
        "upload_time_iso_8601": "2022-10-23T20:07:00.616834Z",
        "url": "https://files.pythonhosted.org/packages/66/38/26c7222c303f7abd8f51c6e808f52120c5a4cd7da7a8ff2c00548e4c134b/geobatchpy-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2f8fc0f3c79e8eb7e46120562cae6b2c00612311907192947d80a499f38f123",
          "md5": "d4b931521d40a43c1369ac7930888049",
          "sha256": "30a3991acb505b24c6516e07f6396c4fde571dfb344ad0383efdcfda62e1fdf8"
        },
        "downloads": -1,
        "filename": "geobatchpy-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d4b931521d40a43c1369ac7930888049",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<4.0",
        "size": 15338,
        "upload_time": "2022-10-23T20:07:02",
        "upload_time_iso_8601": "2022-10-23T20:07:02.586686Z",
        "url": "https://files.pythonhosted.org/packages/c2/f8/fc0f3c79e8eb7e46120562cae6b2c00612311907192947d80a499f38f123/geobatchpy-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da5e93ac323a54579d94bab8c7503bacd449ff60972cfdf98d7e0235670b4f85",
          "md5": "d39d521aa2a845484655911d0aa7d34b",
          "sha256": "a72c872715c5f58cf79b143ac01e5f6a0ca662b4520bcafe94024f396151b0dd"
        },
        "downloads": -1,
        "filename": "geobatchpy-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d39d521aa2a845484655911d0aa7d34b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0",
        "size": 16001,
        "upload_time": "2022-10-24T09:49:53",
        "upload_time_iso_8601": "2022-10-24T09:49:53.219614Z",
        "url": "https://files.pythonhosted.org/packages/da/5e/93ac323a54579d94bab8c7503bacd449ff60972cfdf98d7e0235670b4f85/geobatchpy-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ec0c2633d6213eb09a44ac08391184d8d03d7efd6a92cdf41e71b92f9fda31b",
          "md5": "449cc4664f4b33de9eaffd59889550a0",
          "sha256": "3450190114cc54078624971be35d62949b2dccfed2ec97735ac61c2eec29c85e"
        },
        "downloads": -1,
        "filename": "geobatchpy-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "449cc4664f4b33de9eaffd59889550a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<4.0",
        "size": 15544,
        "upload_time": "2022-10-24T09:49:55",
        "upload_time_iso_8601": "2022-10-24T09:49:55.600683Z",
        "url": "https://files.pythonhosted.org/packages/6e/c0/c2633d6213eb09a44ac08391184d8d03d7efd6a92cdf41e71b92f9fda31b/geobatchpy-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42e748adad677e399f694b8cc358a81f1bec7409cc329352566548a4b94bec95",
          "md5": "becdc8c0d6cc0f9565d12896b33e7ef5",
          "sha256": "57ae68e872702dbc0f3d62bda76b2042eeab3e43f06c3f1f81d59fde8bea63d8"
        },
        "downloads": -1,
        "filename": "geobatchpy-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "becdc8c0d6cc0f9565d12896b33e7ef5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0",
        "size": 17048,
        "upload_time": "2022-11-13T19:56:55",
        "upload_time_iso_8601": "2022-11-13T19:56:55.639001Z",
        "url": "https://files.pythonhosted.org/packages/42/e7/48adad677e399f694b8cc358a81f1bec7409cc329352566548a4b94bec95/geobatchpy-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e730537224df6cfa818d177f6e07840866a5421ef1e89b6d3db7fd7f96fbcb95",
          "md5": "11d6019532c37bc3da7690e2b89bafe5",
          "sha256": "b1e93391781f8bf3c90258ad3475575495a81906cd4c8579a7887f79cf42138a"
        },
        "downloads": -1,
        "filename": "geobatchpy-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "11d6019532c37bc3da7690e2b89bafe5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<4.0",
        "size": 16184,
        "upload_time": "2022-11-13T19:56:58",
        "upload_time_iso_8601": "2022-11-13T19:56:58.130908Z",
        "url": "https://files.pythonhosted.org/packages/e7/30/537224df6cfa818d177f6e07840866a5421ef1e89b6d3db7fd7f96fbcb95/geobatchpy-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "42e748adad677e399f694b8cc358a81f1bec7409cc329352566548a4b94bec95",
        "md5": "becdc8c0d6cc0f9565d12896b33e7ef5",
        "sha256": "57ae68e872702dbc0f3d62bda76b2042eeab3e43f06c3f1f81d59fde8bea63d8"
      },
      "downloads": -1,
      "filename": "geobatchpy-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "becdc8c0d6cc0f9565d12896b33e7ef5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.1,<4.0",
      "size": 17048,
      "upload_time": "2022-11-13T19:56:55",
      "upload_time_iso_8601": "2022-11-13T19:56:55.639001Z",
      "url": "https://files.pythonhosted.org/packages/42/e7/48adad677e399f694b8cc358a81f1bec7409cc329352566548a4b94bec95/geobatchpy-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e730537224df6cfa818d177f6e07840866a5421ef1e89b6d3db7fd7f96fbcb95",
        "md5": "11d6019532c37bc3da7690e2b89bafe5",
        "sha256": "b1e93391781f8bf3c90258ad3475575495a81906cd4c8579a7887f79cf42138a"
      },
      "downloads": -1,
      "filename": "geobatchpy-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "11d6019532c37bc3da7690e2b89bafe5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.1,<4.0",
      "size": 16184,
      "upload_time": "2022-11-13T19:56:58",
      "upload_time_iso_8601": "2022-11-13T19:56:58.130908Z",
      "url": "https://files.pythonhosted.org/packages/e7/30/537224df6cfa818d177f6e07840866a5421ef1e89b6d3db7fd7f96fbcb95/geobatchpy-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}