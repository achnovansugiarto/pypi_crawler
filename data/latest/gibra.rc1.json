{
  "info": {
    "author": "Guilherme Balena Versiani",
    "author_email": "guibv@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Version Control :: Git"
    ],
    "description": "Gibra\n=====\n\nGibra (Git Binary Repository Assistant) is a static binary repository\nmanager that uses Git as file storage for a single project.\n\n.. class:: no-web\n\n    .. image:: https://raw.githubusercontent.com/balena/gibra/master/gibra.png\n        :alt: Gibra\n        :width: 50%\n        :align: center\n\nOverview\n========\n\n``gibra`` provides a simple way to store static binary files in Git.\n``gibra`` just pushes static files into a ``dist`` folder in a Git\nrepository, and annotates the changelog in Git tag comments.\n\nThe Assistant depends on Python 3.\n\nUsage\n=====\n\nPreparation\n-----------\n\nBefore running it, install the required dependencies with:\n\n::\n\n    $ ./gibra reqs > requirements.txt\n    $ pip3 install --user -r requirements.txt\n\nThen add ``gibra`` script somewhere in your PATH.\n\nConfigure\n---------\n\n1) Create a Git repository to host your binaries.\n\n2) Put a ``.gibrarc`` file to the root of this repository, following the\n   template below:\n\n.. code:: python\n\n    {\n      # Gibra will attempt to extract ZIP files with the following extensions:\n      'allowed_extensions': ['zip'],\n\n      # In changelog comments, transform the following pattern in links to your\n      # bugtracking system:\n      'issue_key_pattern': r'#([0-9]{2,})',\n\n      # Bugtracking links will have the following prefix:\n      'bugtracking_url': 'https://github.com/balena/artifacts/issues/',\n    }\n\nRunning\n-------\n\nJust move to your root repository folder and do:\n\n::\n\n    $ gibra\n\nPoint your browser to http://127.0.0.1:5757/ and enjoy!\n\nWhy an Assistant?\n=================\n\nThe idea is to ease using Git as a (small) binary artifacts repository.\nExperienced users may not be interested in this interface, as the\ncommand line may be more than enough. On the other hand, those who\naren’t used to Git may want to use it to ease performing the several\nsteps involved in maintaining a tiny artifacts (binary) repository.\n\nThose willing to adopt the idea for automating their publishing process\nmay extend/change this code in order to add their own processes.\n\nWorking with branches\n=====================\n\nJust synchronize remote branches locally, like so:\n\n::\n\n    $ git checkout --track origin/branch_name\n\nThen it will show in a selector in the top of ``gibra`` interface.\n\nWhen handling multiple branches, don’t forget to replicate the\n``.gibrarc`` config file.\n\nModifying the changelog\n=======================\n\nWell, you cannot easily change git comments, but you can add\n``git notes``. ``gibra`` will consider whatever you write on the tag\nnotes as updates to the changelog entry.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/balena/gibra",
    "keywords": "git binary repository manager assistant",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gibra",
    "package_url": "https://pypi.org/project/gibra/",
    "platform": "all",
    "project_url": "https://pypi.org/project/gibra/",
    "project_urls": {
      "Homepage": "https://github.com/balena/gibra"
    },
    "release_url": "https://pypi.org/project/gibra/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Git Binary Repository Assistant",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3735006,
  "releases": {
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3df9ae388cd5fbb78124b4ab5d4421d339dbd43462ec2b5122484cbb9e6eb82f",
          "md5": "c74e5f4f31496c2cc3d87e9b37ebf718",
          "sha256": "203ab9f3ff31fa26e29c2daf3bf087581612a480927b2c56e8bbac15725e1c63"
        },
        "downloads": -1,
        "filename": "gibra-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c74e5f4f31496c2cc3d87e9b37ebf718",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6723,
        "upload_time": "2018-04-04T19:21:41",
        "upload_time_iso_8601": "2018-04-04T19:21:41.999113Z",
        "url": "https://files.pythonhosted.org/packages/3d/f9/ae388cd5fbb78124b4ab5d4421d339dbd43462ec2b5122484cbb9e6eb82f/gibra-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3df9ae388cd5fbb78124b4ab5d4421d339dbd43462ec2b5122484cbb9e6eb82f",
        "md5": "c74e5f4f31496c2cc3d87e9b37ebf718",
        "sha256": "203ab9f3ff31fa26e29c2daf3bf087581612a480927b2c56e8bbac15725e1c63"
      },
      "downloads": -1,
      "filename": "gibra-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "c74e5f4f31496c2cc3d87e9b37ebf718",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6723,
      "upload_time": "2018-04-04T19:21:41",
      "upload_time_iso_8601": "2018-04-04T19:21:41.999113Z",
      "url": "https://files.pythonhosted.org/packages/3d/f9/ae388cd5fbb78124b4ab5d4421d339dbd43462ec2b5122484cbb9e6eb82f/gibra-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}