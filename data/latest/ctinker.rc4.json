{
  "info": {
    "author": "Karellen, Inc.",
    "author_email": "supervisor@karellen.co",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: C",
      "Programming Language :: C++",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Assemblers",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Compilers",
      "Topic :: Software Development :: Pre-processors",
      "Topic :: Utilities"
    ],
    "description": "# CTinker - C/C++ Project Introspection and Augmentation Tool\n\n**C Tinker**, pronounced _see-tinker_ (or humorously \"stinker\", as suggested by \n[Chuck Ocheret](https://github.com/ocheret)) allows you to get in the middle of the build process of a \nmake/Ninja-style project and augment the compilation and linking as well as extract and redirect artifacts using \npolicies you can't implement otherwise even with LDFLAGS/CFLAGS magic.\n\n[![Gitter](https://img.shields.io/gitter/room/karellen/lobby?logo=gitter)](https://gitter.im/karellen/lobby)\n\n[![CTinker Version](https://img.shields.io/pypi/v/ctinker?logo=pypi)](https://pypi.org/project/ctinker/)\n[![CTinker Python Versions](https://img.shields.io/pypi/pyversions/ctinker?logo=pypi)](https://pypi.org/project/ctinker/)\n[![CTinker Downloads Per Day](https://img.shields.io/pypi/dd/ctinker?logo=pypi)](https://pypi.org/project/ctinker/)\n[![CTinker Downloads Per Week](https://img.shields.io/pypi/dw/ctinker?logo=pypi)](https://pypi.org/project/ctinker/)\n[![CTinker Downloads Per Month](https://img.shields.io/pypi/dm/ctinker?logo=pypi)](https://pypi.org/project/ctinker/)\n\n## Problem\n\nMore formally the problem **CTinker** solves can be stated as follows: \n\n> I need to get in the middle of a build process of a project I can know intimately but do not control\n> and that I have no intention of maintaining a fork/patches for, or for which I need to obtain runtime \n> dynamic control of the build process.\n\n## Solution\n\n### Overview\n\n`CTinker` is capable of getting in the middle of virtually any build process by: \n1. Starting in the `supervisor` mode.\n1. Creating a temporary directory full of toolkit-specific (e.g. for LLVM Clang it's `clang`, `ar` etc) \nsymlinks referring back to `CTinker` executable. \n1. Setting up environ and a local socket to communicate with the `workers`.\n1. Invoking the build process as specified by the user.\n1. Being invoked for each tool invocation in a `worker` mode (based on environmental variables),\n communicating with the `supervisor`, sending command-line arguments to the `supervisor` process and then\n invoking the tool itself.\n1. If specified, invoking `scripting` handlers before and after the build as a whole (in the `supervisor`) \nand before and after each intercepted tool invocation (in the `worker`). \n\n As a further illustration, if the original process invocation chain for a sample build is as follows:\n\n> make => clang => lld, => make => clang, => clang => lld\n\n then the same build instrumented with CTinker will produce the following process invocation chain:\n\n> ctinker => make => ctinker-clang => clang => ctinker-lld => lld, => make => ctinker-clang => clang, \n> => ctinker-clang => clang => ctinker-lld => lld\n\n### Scripting\n\nScripting is the most powerful part of `CTinker` that provides an ability to really change how build functions\nat runtime. It is implemented via a visitor pattern, invoking functions specified in the user-supplied script:\n\n```python\n\ndef ctinker_start(env: Dict[str, str], work_dir: Path):\n    \"\"\"Invoked by CTinker `supervisor` prior to the main build process\n\n    Changes to the `env` dictionary propagate to the main build process.\n    \"\"\"\n    pass\n\ndef ctinker_finish(env: Dict[str, str], work_dir: Path, tool_calls: List[Tuple[Any]], return_code: int):\n    \"\"\"Invoked by CTinker `supervisor` after the main build process exits\n\n    `tool_calls` is a `list` of `tuple`s of `(tool, tool_args, return_code, cwd, script_result)`, where `script_result`\n    is the value returned by `ctinker_after_tool`.\n    \"\"\"\n    pass\n\n\ndef ctinker_before_tool(env: Dict[str, str], tool: str, tool_args: List[str], work_dir: Path, cwd: Path):\n    \"\"\"Invoked by CTinker `worker` prior to the tool process\n\n    Changes to the `env` dictionary propagate to the tool process.\n    Changes to the `tool_args` list propagate to the tool process.\n    \"\"\"\n    pass\n\ndef ctinker_after_tool(env: Dict[str, str], tool: str, tool_args: List[str], work_dir: Path, cwd: Path, \n                       return_code: int) -> Any:\n    \"\"\"Invoked by CTinker `worker` after the tool process exits\n\n    Returned value, **if truthy**, will be stored and will appear \n    as the last entry in the `tool_calls` passed to `ctinker_finish`\n    \"\"\"\n    pass\n```\n\nIt is guaranteed that `ctinker_start` - `ctinker_finish` and `ctinker_before_tool` - `ctinker_after_tool` pairs will \nbe executed in the same `supervisor` and `worker` processes _respectively_ and therefore you can pass values between \nthe start/finish and before/after functions (for example by a global or within the same instance of an object).\n\n## Help\n\n```bash\n$ ctinker --help\nusage: ctinker [-h] [-s SCRIPT] [-o OUT] [-f {text,pickle}] [-p PATHS]\n               [-w WORK_DIR] -t {clang} [-l [{clang,__default}]]\n               [-L LINKER_TOOL_OVERRIDE]\n               [--linker-flags-name LINKER_FLAGS_NAME]\n               ...\n\nCTinker project introspection and augmentation tool\n\npositional arguments:\n  command               build command to execute\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SCRIPT, --script SCRIPT\n                        a Python script containing visitor-style hooks\n                        (default: None)\n  -o OUT, --out OUT     a path to a file where all tools, their arguments and\n                        exit codes will be recorded (default: None)\n  -f {text,pickle}, --format {text,pickle}\n                        the format of the output file (default: text)\n  -p PATHS, --path PATHS\n                        prepend a leading PATH entry to be inherited by the\n                        invoked command (default: None)\n  -w WORK_DIR, --work-dir WORK_DIR\n                        sets a work directory to be something other than\n                        current working directory (default: )\n  -t {clang}, --toolkit {clang}\n                        enable specific compilation interception modes\n                        (default: None)\n  -l [{clang,__default}], --linker-intercept [{clang,__default}]\n                        intercept linker with --linker-flags-name env var\n                        using the specified toolkit (default: None)\n  -L LINKER_TOOL_OVERRIDE, --linker-tool-override LINKER_TOOL_OVERRIDE\n                        specify linker tool name directly (may not work if no\n                        toolkit provides it) (default: None)\n  --linker-flags-name LINKER_FLAGS_NAME\n                        specify linker environmental variable (default:\n                        LDFLAGS)\n```\n\n## Example\n\nTBW\n\n## Troubleshooting\n\n1. Printing to `sys.stdout` from the `worker` is dangerous as the stdout is often interpreted by the invoking tool\nwhich can lead to a crash in the tool expecting certain data format. `print(\"debug!\", file=sys.stderr)` is generally \nsafe.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/karellen/ctinker",
    "keywords": "C C++ build make ninja llvm clang flags intercept augment",
    "license": "Apache License, Version 2.0",
    "maintainer": "Arcadiy Ivanov",
    "maintainer_email": "arcadiy@karellen.co",
    "name": "ctinker",
    "package_url": "https://pypi.org/project/ctinker/",
    "platform": "",
    "project_url": "https://pypi.org/project/ctinker/",
    "project_urls": {
      "Bug Tracker": "https://github.com/karellen/ctinker/issues",
      "Documentation": "https://github.com/karellen/ctinker/",
      "Homepage": "https://github.com/karellen/ctinker",
      "Source Code": "https://github.com/karellen/ctinker/"
    },
    "release_url": "https://pypi.org/project/ctinker/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "CTinker is a C project introspection and augmentation tool",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7207077,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a2e6eddc967356f1785c8c3bdc0ffc217de6e6170d89e0d11459e986307d305",
          "md5": "f14f0f3f509193384f1adb1ad9c91b57",
          "sha256": "5fff77985d978ecfd37468a3e8fc638e130fe5e3afa5c054d757f2da08aa118c"
        },
        "downloads": -1,
        "filename": "ctinker-0.0.1-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "f14f0f3f509193384f1adb1ad9c91b57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14535,
        "upload_time": "2020-05-09T07:55:52",
        "upload_time_iso_8601": "2020-05-09T07:55:52.752001Z",
        "url": "https://files.pythonhosted.org/packages/5a/2e/6eddc967356f1785c8c3bdc0ffc217de6e6170d89e0d11459e986307d305/ctinker-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc071b47312485c697969375d856dec534fbba3a0a793a86d13d16109c651e7d",
          "md5": "74348606751ebe57315b5cb71727098b",
          "sha256": "4f8cac0496288b1848636a8ec0f8ef82d7c750f06a5c9e193dfbca91be6e6818"
        },
        "downloads": -1,
        "filename": "ctinker-0.0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "74348606751ebe57315b5cb71727098b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15913,
        "upload_time": "2020-05-09T07:55:54",
        "upload_time_iso_8601": "2020-05-09T07:55:54.914431Z",
        "url": "https://files.pythonhosted.org/packages/dc/07/1b47312485c697969375d856dec534fbba3a0a793a86d13d16109c651e7d/ctinker-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee9efd413c7186f45bcc122fb60165a7424630ef3fc48a2de4bec3d2fd0c142b",
          "md5": "fa778efe9cb0422b6240e2c00c612fc1",
          "sha256": "508e4e8a0c8d42e5f0dc769d839382682a99e09a3516a7b80e290c7045de4a03"
        },
        "downloads": -1,
        "filename": "ctinker-0.0.2-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "fa778efe9cb0422b6240e2c00c612fc1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14536,
        "upload_time": "2020-05-09T07:58:48",
        "upload_time_iso_8601": "2020-05-09T07:58:48.401221Z",
        "url": "https://files.pythonhosted.org/packages/ee/9e/fd413c7186f45bcc122fb60165a7424630ef3fc48a2de4bec3d2fd0c142b/ctinker-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "225ebbf3af9603da23fac7fe93d9ac65f4be914a7053fa5a8e8ffbd15e46a3d8",
          "md5": "919d76bf6c01d180211aeba8d831a4b5",
          "sha256": "5bb1056fa315388bba9f95d82053c2985998e1b14f3213fe1d99264d02c85320"
        },
        "downloads": -1,
        "filename": "ctinker-0.0.2.tar.gz",
        "has_sig": true,
        "md5_digest": "919d76bf6c01d180211aeba8d831a4b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15911,
        "upload_time": "2020-05-09T07:58:49",
        "upload_time_iso_8601": "2020-05-09T07:58:49.980099Z",
        "url": "https://files.pythonhosted.org/packages/22/5e/bbf3af9603da23fac7fe93d9ac65f4be914a7053fa5a8e8ffbd15e46a3d8/ctinker-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b22c7ef86699d68b045141ab3a960254507ad3633e949d321fff985e6e3968f",
          "md5": "0f4a2d149bcb9e5b3cd89af848e78a11",
          "sha256": "7f3d25c202f9cf31e8fc547d9ebd4d1ec6e2f938280ea23fe7a1bca09b2eea6d"
        },
        "downloads": -1,
        "filename": "ctinker-0.0.3-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "0f4a2d149bcb9e5b3cd89af848e78a11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14544,
        "upload_time": "2020-05-09T23:25:07",
        "upload_time_iso_8601": "2020-05-09T23:25:07.868693Z",
        "url": "https://files.pythonhosted.org/packages/5b/22/c7ef86699d68b045141ab3a960254507ad3633e949d321fff985e6e3968f/ctinker-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6213186a45e27e9ec67c33ee31a18961a9d4155b1a55e8cafeda46fabf3a5af6",
          "md5": "3f41675cc6ce79721eef878d66483d5d",
          "sha256": "ede39bf5f21cab50ea83b1c1f4e131285296a7803481ee48798b98fce8e6c0c7"
        },
        "downloads": -1,
        "filename": "ctinker-0.0.3.tar.gz",
        "has_sig": true,
        "md5_digest": "3f41675cc6ce79721eef878d66483d5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15925,
        "upload_time": "2020-05-09T23:25:09",
        "upload_time_iso_8601": "2020-05-09T23:25:09.496892Z",
        "url": "https://files.pythonhosted.org/packages/62/13/186a45e27e9ec67c33ee31a18961a9d4155b1a55e8cafeda46fabf3a5af6/ctinker-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9afd18b77a6c2a7315b5d3037f8de11e20479f6c0fac72432dcb9f7ab0cce3f5",
          "md5": "b0c01512b9b4042e515c874704df34c0",
          "sha256": "cf21f67aa437d664aa2c83471d5e369805a62a0d2727dda1006691cca14136a7"
        },
        "downloads": -1,
        "filename": "ctinker-0.0.4-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "b0c01512b9b4042e515c874704df34c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14746,
        "upload_time": "2020-05-10T06:50:30",
        "upload_time_iso_8601": "2020-05-10T06:50:30.777536Z",
        "url": "https://files.pythonhosted.org/packages/9a/fd/18b77a6c2a7315b5d3037f8de11e20479f6c0fac72432dcb9f7ab0cce3f5/ctinker-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3634e60d5bd62df15e612bcd744b306e1445da63da8e5bf8fa8ce4ce34bcb0e",
          "md5": "58547df6a4a7402ade1d5aad97c31f36",
          "sha256": "f4625dcf840176d4498eb821118293fdf105a61526a36d02104a019b1239810a"
        },
        "downloads": -1,
        "filename": "ctinker-0.0.4.tar.gz",
        "has_sig": true,
        "md5_digest": "58547df6a4a7402ade1d5aad97c31f36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16342,
        "upload_time": "2020-05-10T06:50:32",
        "upload_time_iso_8601": "2020-05-10T06:50:32.545995Z",
        "url": "https://files.pythonhosted.org/packages/a3/63/4e60d5bd62df15e612bcd744b306e1445da63da8e5bf8fa8ce4ce34bcb0e/ctinker-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9afd18b77a6c2a7315b5d3037f8de11e20479f6c0fac72432dcb9f7ab0cce3f5",
        "md5": "b0c01512b9b4042e515c874704df34c0",
        "sha256": "cf21f67aa437d664aa2c83471d5e369805a62a0d2727dda1006691cca14136a7"
      },
      "downloads": -1,
      "filename": "ctinker-0.0.4-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "b0c01512b9b4042e515c874704df34c0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 14746,
      "upload_time": "2020-05-10T06:50:30",
      "upload_time_iso_8601": "2020-05-10T06:50:30.777536Z",
      "url": "https://files.pythonhosted.org/packages/9a/fd/18b77a6c2a7315b5d3037f8de11e20479f6c0fac72432dcb9f7ab0cce3f5/ctinker-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3634e60d5bd62df15e612bcd744b306e1445da63da8e5bf8fa8ce4ce34bcb0e",
        "md5": "58547df6a4a7402ade1d5aad97c31f36",
        "sha256": "f4625dcf840176d4498eb821118293fdf105a61526a36d02104a019b1239810a"
      },
      "downloads": -1,
      "filename": "ctinker-0.0.4.tar.gz",
      "has_sig": true,
      "md5_digest": "58547df6a4a7402ade1d5aad97c31f36",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16342,
      "upload_time": "2020-05-10T06:50:32",
      "upload_time_iso_8601": "2020-05-10T06:50:32.545995Z",
      "url": "https://files.pythonhosted.org/packages/a3/63/4e60d5bd62df15e612bcd744b306e1445da63da8e5bf8fa8ce4ce34bcb0e/ctinker-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}