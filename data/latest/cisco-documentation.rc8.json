{
  "info": {
    "author": "John Burt",
    "author_email": "johnburt.jab@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# cisco-documentation\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nDocumentation Method for Cisco Devices using excel.\n\n## Requirements\n\n- python3 (3.9)\n- pip\n- cisco-documentation\n\n## Installation\n\n```bash\npython3.9 -m pip install cisco-documentation\n```\n\n## Updating\n\n```bash\npip install --upgrade --upgrade-strategy eager cisco-documentation\n```\n\n## Usage\n\nFor CiscoDocumentation\n\n- Update switch-list.txt with a complete list of switches.\n  - Device types supported include cisco_ios (ssh), cisco_ios_telnet (telnet)\n  - Cisco s300 will need additional changes before it will work.\n- Optional: Create load-credentials.txt to load the keychain with credentials for all switches. `cisco-documentation --load-creds /dir/to/creds.txt`\n- Run cisco-documentation.\n```bash\nusage: cisco-documentation [-h] [--excel-template] [--switch-list SWITCH_LIST] [--load-creds LOAD_CREDS] [--output-dir OUTPUT_DIR] [--fetch-info] [--parse-info] [--update-wireshark-oui]\n                           [--update-excel UPDATE_EXCEL]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --excel-template      Create the excel documentation template in the cwd.\n  --switch-list SWITCH_LIST\n                        Specify the switch list to use to collect documentation.\n  --load-creds LOAD_CREDS\n                        Load credentials into the keystore from this text document. (switch-ip,username,password)\n  --output-dir OUTPUT_DIR\n                        Set the output directory for switch configs, arp table output, etc.\n  --fetch-info          Fetch information from the switches (outputs to OUTPUT_DIR/output.json)\n  --parse-info          Parses stored info from OUTPUT_DIR/output.json and outputs OUTPUT_DIR/output.csv\n  --update-wireshark-oui\n                        This updates the wireshark oui list to identify vendors based on the device mac address.\n  --update-excel UPDATE_EXCEL\n                        This is the filename to update the 'SWITCHES' and 'ARP' sheets of the specified workbook automatically. This perminently erases the current 'SWITCHES' worksheet. This\n                        only appends values to the 'ARP' sheet.\n\n```\n\nFor RunCommands\n\n- This is a simple script to run multiple commands on the switches in switch_list.txt\n  - Note: RunCommands.py does not use multiprocessing, and RunCommands2.py has not been maintained, but should still be operational.\n- Run python3.9 ./RunCommands.py\n- Enter commands separated by ~.\n  - For example, to configure spanning-tree mode on all switches in switch_list.txt you could run `conf t~spanning-tree mode mst~end~wr`\n    \n## Updating the Excel Spreadsheet\n\n- Update the ARP sheet with the output from arp_output.txt. Also add the output from arp-scan if there are devices missing (if a device isn't communicating over the l3 switch, or there is no l3 switch in the network, these devices will not exist in the arp table.)\n  - If devices don't communicate over the gateway, their arp entries will not exist on the l3 switch. Using nmap beforehand from a separate subnet will populate the arp table on this switch - assuming devices are properly programed with a default gateway.\n- Copy the output from output.txt into the SWITCHES sheet. This will update formulas used to the right of the output to look up device information from each sheet.\n- Device information should be contained in a sheet named after each l2 network. \n- L2 networks should be named, vlans/ranges assigned on the OVERVIEW sheet.\n\n## Building and installing from source\n\n```bash\npython3.9 -m pip uninstall cisco-documentation -y\nrm dist/cisco_documentation-*-py2.py3-none-any.whl\npython3.9 setup.py bdist_wheel --universal\npython3.9 -m pip install dist/cisco_documentation-*-py2.py3-none-any.whl\n# To upload to pypi\ntwine upload dist/*\n```\n\n## Using an ssh jumphost\n\nTo use a jumphost you need to be able to authenticate to the jumphost using an ssh key.\n\n### Setting up key authentication to a jumphost.\n\nGenerate your local key.\n\n```bash\nssh-keygen -t rsa\n```\n\nCopy the key to the remote server.\n\n```bash\nssh-copy-id user@ip.or.dns\n```\n\nSetup the ssh_config file.\n\n```bash\ncat ~/.ssh/yourJumpHostConfigFileName\nhost jumphost\n  IdentitiesOnly yes\n  IdentityFile ~/.ssh/id_rsa\n  User user\n  HostName ip.or.dns\n\nhost * !jumphost\n  User admin\n  # Force usage of this SSH config file\n  ProxyCommand ssh -F ~/.ssh/yourJumpHostConfigFileName -W %h:%p jumphost\n  # Alternate solution using netcat\n  #ProxyCommand ssh -F ./ssh_config jumphost nc %h %p\n```\n\nRunning the command specifying the ssh-config file. \n\n```bash\ncisco-documentation <your other options here> --ssh-config ~/.ssh/yourJumpHostConfigFileName\nrun-commands <your other options here> --ssh-config ~/.ssh/yourJumpHostConfigFileName\n```\n\n## Changelog\n\n### 0.0.11\n- Added processing of cdp for cases where lldp does not show the neighbor.\n\n### 0.0.10\n- Added an option for a local keyring to default to /keyring.json if there are no valid backends. (i.e. ubuntu server default install)\n- Updated formatting to black.\n- Added generic error handling when collecting information sequentially. Failed collection will skip the device in the results.\n- Added option to collect information from a single device. (--switch)\n- Fixed run-commands by adding the default-creds options.\n\n### 0.0.9\n- Added rich to the requirements.\n- Added option to run sequentially instead of in parallel. (--parallel flag)\n- Added function and cli app to help test and save credentials.\n\n### 0.0.8\n- Fixed an over-indentation of the arp table generation causing large files.\n- Changed the arp_output.csv to be tab-delimited for easier copy/paste to excel.\n\n### 0.0.7\n- Added better error handling - still writes to output.json if a single connection fails.\n- Changed section to support fetching cisco specific information via telnet.\n\n### 0.0.6\n- Added config-merge command.\n- Added port-descriptions command.\n- Made additional functions to re-use more code.\n- Added jinja-merge command for templating switch configurations.\n\n### 0.0.5\n- Updated readme to fix some outdated information.\n- Updated the --help to add some context.\n- Updated the wireshark_oui.txt file.\n- Added an option to update the wireshark_oui.txt file. \n- Fixed the get_oui_dict function to return the generated oui_dict.\n- Added a step for creation of arp_output.csv output with the arp information.\n- Removed aiomultiprocess from requirements.\n- Added option to update an excel file directly.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alphabet5/cisco_documentation",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cisco-documentation",
    "package_url": "https://pypi.org/project/cisco-documentation/",
    "platform": null,
    "project_url": "https://pypi.org/project/cisco-documentation/",
    "project_urls": {
      "Homepage": "https://github.com/alphabet5/cisco_documentation"
    },
    "release_url": "https://pypi.org/project/cisco-documentation/0.0.11/",
    "requires_dist": [
      "napalm",
      "yamlarg",
      "keyring",
      "ntc-templates",
      "joblib",
      "requests",
      "openpyxl",
      "Jinja2",
      "rich",
      "paramiko"
    ],
    "requires_python": ">=3.9",
    "summary": "Gather information from switches to create documentation in excel.",
    "version": "0.0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14447326,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cd00e996a9ecdd5834c8ba876d9876a5aca8c5dea5a3c42ced1beb0d7fd7d1e",
          "md5": "90d987b11536a360fcaecd5d59352572",
          "sha256": "07216b61cb66988823c3c362d653d4269d47ee13cbe358ba5c6956b6552c9954"
        },
        "downloads": -1,
        "filename": "cisco_documentation-0.0.10-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90d987b11536a360fcaecd5d59352572",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 665417,
        "upload_time": "2022-01-24T16:03:26",
        "upload_time_iso_8601": "2022-01-24T16:03:26.296611Z",
        "url": "https://files.pythonhosted.org/packages/4c/d0/0e996a9ecdd5834c8ba876d9876a5aca8c5dea5a3c42ced1beb0d7fd7d1e/cisco_documentation-0.0.10-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bb9e6c8e5069c2337229680fd3fbc3e5afd0261f6898a74db62a3995755fda4",
          "md5": "92d6a10824c90cb5b3fb48a3e8fcc0ab",
          "sha256": "fdfc61b4e2dd4e1c0a02a5ba3248270057c2edc5e39bd306fac4b9293d426d22"
        },
        "downloads": -1,
        "filename": "cisco_documentation-0.0.11-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92d6a10824c90cb5b3fb48a3e8fcc0ab",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 665875,
        "upload_time": "2022-07-15T16:09:36",
        "upload_time_iso_8601": "2022-07-15T16:09:36.694458Z",
        "url": "https://files.pythonhosted.org/packages/2b/b9/e6c8e5069c2337229680fd3fbc3e5afd0261f6898a74db62a3995755fda4/cisco_documentation-0.0.11-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01e5fd571252d5e2ceae554dabbb88aaadd89dfff3a9351ff8346e9a037dad93",
          "md5": "a688bc256696a64355a3c0a9ab759e5e",
          "sha256": "888f7d56e4d89b300a1a9535b5fbc6584b38ec8c6021ede672ae1f7d09992a6a"
        },
        "downloads": -1,
        "filename": "cisco_documentation-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a688bc256696a64355a3c0a9ab759e5e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 639021,
        "upload_time": "2021-08-12T19:51:30",
        "upload_time_iso_8601": "2021-08-12T19:51:30.597759Z",
        "url": "https://files.pythonhosted.org/packages/01/e5/fd571252d5e2ceae554dabbb88aaadd89dfff3a9351ff8346e9a037dad93/cisco_documentation-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "455561e433a09e78c5de4400e9b2609bf5231cb5ada17e98bc43e8a2ccda3e5e",
          "md5": "b8bdc235829a39a18066e0e3b1ab2053",
          "sha256": "3c328f3a46e9918686b4e98fbc9dc8ec18b86411e8d33a097113886c76e9822d"
        },
        "downloads": -1,
        "filename": "cisco_documentation-0.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8bdc235829a39a18066e0e3b1ab2053",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 639308,
        "upload_time": "2021-08-17T21:03:33",
        "upload_time_iso_8601": "2021-08-17T21:03:33.529222Z",
        "url": "https://files.pythonhosted.org/packages/45/55/61e433a09e78c5de4400e9b2609bf5231cb5ada17e98bc43e8a2ccda3e5e/cisco_documentation-0.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7562d5c66b7bcc4f03ff81142fe380980d4d53be66aca2341c383ca224c672d2",
          "md5": "34c911462a34e7c0d842e539d2d5e551",
          "sha256": "de054d2a3075cff59ea0195b26fee3168f277be951826874901d41965c9a3daa"
        },
        "downloads": -1,
        "filename": "cisco_documentation-0.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34c911462a34e7c0d842e539d2d5e551",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 656584,
        "upload_time": "2021-08-17T23:41:18",
        "upload_time_iso_8601": "2021-08-17T23:41:18.527206Z",
        "url": "https://files.pythonhosted.org/packages/75/62/d5c66b7bcc4f03ff81142fe380980d4d53be66aca2341c383ca224c672d2/cisco_documentation-0.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afc4d2b4a1429e99d934ae87cd86855dfcd98f8b329e6629521c8466fffe601e",
          "md5": "884ee4e3ab104f8a9816af28cc4adc2b",
          "sha256": "f7b86e887b9131ea024e41789bfb4a7ae124300a010f8a832c65020f70c9729f"
        },
        "downloads": -1,
        "filename": "cisco_documentation-0.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "884ee4e3ab104f8a9816af28cc4adc2b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 662978,
        "upload_time": "2021-08-18T08:52:19",
        "upload_time_iso_8601": "2021-08-18T08:52:19.675763Z",
        "url": "https://files.pythonhosted.org/packages/af/c4/d2b4a1429e99d934ae87cd86855dfcd98f8b329e6629521c8466fffe601e/cisco_documentation-0.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f07f2868ec7353cc827b4e538096b1372390ab13407c5b6b4be9a96360b34b8",
          "md5": "7c345c294f327528cad1f1a252e858cb",
          "sha256": "e38fd3e019118c85c5dd5ad7b6fac4d304f83e6ee5b53dac6f28fca66b67214b"
        },
        "downloads": -1,
        "filename": "cisco_documentation-0.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c345c294f327528cad1f1a252e858cb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 662437,
        "upload_time": "2021-08-30T19:55:57",
        "upload_time_iso_8601": "2021-08-30T19:55:57.964935Z",
        "url": "https://files.pythonhosted.org/packages/0f/07/f2868ec7353cc827b4e538096b1372390ab13407c5b6b4be9a96360b34b8/cisco_documentation-0.0.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5caffa956c92dfdef6834df48106c5dcecfda0937d770a45368e2467b340281",
          "md5": "91ddd5e4b0ad8ca1a3874192dae21696",
          "sha256": "83a4576832fcd91afc46ca9531dc5a4dada639f8fa5ebe7480b6ddcd2e42fd72"
        },
        "downloads": -1,
        "filename": "cisco_documentation-0.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91ddd5e4b0ad8ca1a3874192dae21696",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 662437,
        "upload_time": "2021-08-30T21:03:50",
        "upload_time_iso_8601": "2021-08-30T21:03:50.312942Z",
        "url": "https://files.pythonhosted.org/packages/a5/ca/ffa956c92dfdef6834df48106c5dcecfda0937d770a45368e2467b340281/cisco_documentation-0.0.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2bb9e6c8e5069c2337229680fd3fbc3e5afd0261f6898a74db62a3995755fda4",
        "md5": "92d6a10824c90cb5b3fb48a3e8fcc0ab",
        "sha256": "fdfc61b4e2dd4e1c0a02a5ba3248270057c2edc5e39bd306fac4b9293d426d22"
      },
      "downloads": -1,
      "filename": "cisco_documentation-0.0.11-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "92d6a10824c90cb5b3fb48a3e8fcc0ab",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.9",
      "size": 665875,
      "upload_time": "2022-07-15T16:09:36",
      "upload_time_iso_8601": "2022-07-15T16:09:36.694458Z",
      "url": "https://files.pythonhosted.org/packages/2b/b9/e6c8e5069c2337229680fd3fbc3e5afd0261f6898a74db62a3995755fda4/cisco_documentation-0.0.11-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}