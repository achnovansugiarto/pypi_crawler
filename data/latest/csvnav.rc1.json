{
  "info": {
    "author": "Joel Kaardal",
    "author_email": "jkaardal@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "## CSVNAV: a python 3 class for memory-efficient navigation of CSV/Text files.\n\nThis package can be installed with pip:\n```\npip install csvnav\n```\nor by downloading this repo and using setup tools:\n```sh\npython setup.py install\n```\nrun from within the `csvnav` directory.\n\nThe file `csvnav.py` is a python module containing the class `Navigator`. When instantiated, `Navigator` will open a given path and then store pointers to the location of each row in the opened file. In the simplest case, one can use the instantiation sort of like a list. For instance, if I have a file \"inventory.csv\" containing the following CSV data:\n```\ntime,product,quantity\n5,tire,4\n8,sparkplug,20\n2,battery,120\n10,tire,2\n11,tire,3\n30,sparkplug,35\n```\nI can instantiate the class and query rows by index:\n```python\nfrom csvnav import Navigator\n\nnav = Navigator('./inventory.csv', header=True, delimiter=',')\nprint(nav[0])\nprint(nav[2])\nprint(nav.size(force=True))\n\nnav.close()\n```\nwhere the output would be:\n```\n{'product': 'tire', 'quantity': '4', 'time': '5'}\n{'product': 'battery', 'quantity': '120', 'time': '2'}\n6\n```\nNote that the number of data rows (excluding any skipped lines and the header) can be printed by calling `Navigator.size(force=True)`. In this case, `force=True` means that the number of data rows in the file will be determined even if the last row in the file has not be accessed yet. If the last row had been accessed, `force=False` would return the same result. However, if the last row had not yet been accessed, `force=False` would return `None`. Another thing to note is that the rows are returned as a dictionary. As long as `Navigator.header` contains a list of the column names (done automatically from the first row of the CSV file after any skipped lines when `header=True` in instantiation or when column names are provided with the `Navigator.set_header()` method), the rows will be returned as a dictionary. Otherwise, the rows are returned as lists. For example, if \"inventory.csv\" did not have a header then the output would be:\n```\n['5', 'tire', '4']\n['2', 'battery', '120']\n6\n```\nThe `Navigator` class is also iterable and will iterate through rows in order:\n```python\nfor row in nav:\n    print(row)\n```\ngives the output (assuming we have a header):\n```\n{'time': '5', 'product': 'tire', 'quantity': '4'}\n{'time': '8', 'product': 'sparkplug', 'quantity': '20'}\n{'time': '2', 'product': 'battery', 'quantity': '120'}\n{'time': '10', 'product': 'tire', 'quantity': '2'}\n{'time': '11', 'product': 'tire', 'quantity': '3'}\n{'time': '30', 'product': 'sparkplug', 'quantity': '35'}\n```\n\nIf we only want to iterate through a subset of rows that match a condition, we can use the `Navigator.filter` method:\n```python\nfrom csvnav import Navigator\n\nnav = Navigator('./inventory.csv', header=True, delimiter=',')\n\ndef when_few_tires(row):\n    if row['product'] == 'tire' and int(row['quantity']) <= 3:\n        return True\n    else:\n        return False\n\nfor row in nav.filter(when_few_tires):\n    print(row)\n\nnav.close()\n```\nwill produce the output:\n```\n{'time': '10', 'product': 'tire', 'quantity': '2'}\n{'time': '11', 'product': 'tire', 'quantity': '3'} \n```\n\nAnother usage of the class is to group pointers by column name (assuming `Navigator.header` is set). This can be done with the `Navigator.register` method.\nThe following code will then group rows by product and show how this data can be accessed:\n```python\nfrom csvnav import Navigator\n\nnav = Navigator('./inventory.csv', header=True, delimiter=',')\n\nnav.register('product') # can also provide a list of columns to register each\n\nprint(nav.fields)\nprint(nav.keys('product'))\nfor k, v in nav.items('product'):\n    print(k, list(v))\n\nnav.close()\n```\nwill print out the following groups (list of dict or list):\n```\ndict_keys(['product'])\ndict_keys(['tire', 'sparkplug', 'battery'])\ntire [{'time': '5', 'product': 'tire', 'quantity': '4'}, {'time': '10', 'product': 'tire', 'quantity': '2'}, {'time': '11', 'product': 'tire', 'quantity': '3'}]\nsparkplug [{'time': '8', 'product': 'sparkplug', 'quantity': '20'}, {'time': '30', 'product': 'sparkplug', 'quantity': '35'}]\nbattery [{'time': '2', 'product': 'battery', 'quantity': '120'}]\n```\nNote that groups are then accessed by two \"indexes\", namely the column name and the key.\n\nThe `Navigator` class should be thread safe and an instance can be shared between threads. `Navigator` has some more functionality that I have not described here but this covers the basics. Refer to the docstrings of the various methods of the `Navigator` class for more information.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/csvnav/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jkaardal/csvnav",
    "keywords": "data-science,csv,machine-learning,data-analysis,memory-management",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "csvnav",
    "package_url": "https://pypi.org/project/csvnav/",
    "platform": "",
    "project_url": "https://pypi.org/project/csvnav/",
    "project_urls": {
      "Download": "https://pypi.org/project/csvnav/",
      "Homepage": "https://github.com/jkaardal/csvnav"
    },
    "release_url": "https://pypi.org/project/csvnav/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python 3 class for memory-efficient navigation of CSV/Text files.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7920575,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9bd3e1662dd8692dd0727704c9ba4e771f9c040528396263efd04e21a5d7cb79",
          "md5": "eaf3fff751ca4b8ad120ca065465b537",
          "sha256": "2fd35c8bfe531e3534534441aee31767484a750105c991ab62e79666fb27eda7"
        },
        "downloads": -1,
        "filename": "csvnav-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eaf3fff751ca4b8ad120ca065465b537",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10831,
        "upload_time": "2020-08-09T18:55:10",
        "upload_time_iso_8601": "2020-08-09T18:55:10.997713Z",
        "url": "https://files.pythonhosted.org/packages/9b/d3/e1662dd8692dd0727704c9ba4e771f9c040528396263efd04e21a5d7cb79/csvnav-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5270efd2c60aa4536e2bb02142adaeb78cd80de0d35fa2b7ffaa55194413b1cc",
          "md5": "26e9817d49bf47ac505f9240407a8823",
          "sha256": "4777e825c052cafcdf9a39c7055c892955500f19d8f9f1db85ab900a1a21f974"
        },
        "downloads": -1,
        "filename": "csvnav-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "26e9817d49bf47ac505f9240407a8823",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10105,
        "upload_time": "2020-08-09T18:55:13",
        "upload_time_iso_8601": "2020-08-09T18:55:13.299657Z",
        "url": "https://files.pythonhosted.org/packages/52/70/efd2c60aa4536e2bb02142adaeb78cd80de0d35fa2b7ffaa55194413b1cc/csvnav-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9bd3e1662dd8692dd0727704c9ba4e771f9c040528396263efd04e21a5d7cb79",
        "md5": "eaf3fff751ca4b8ad120ca065465b537",
        "sha256": "2fd35c8bfe531e3534534441aee31767484a750105c991ab62e79666fb27eda7"
      },
      "downloads": -1,
      "filename": "csvnav-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eaf3fff751ca4b8ad120ca065465b537",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10831,
      "upload_time": "2020-08-09T18:55:10",
      "upload_time_iso_8601": "2020-08-09T18:55:10.997713Z",
      "url": "https://files.pythonhosted.org/packages/9b/d3/e1662dd8692dd0727704c9ba4e771f9c040528396263efd04e21a5d7cb79/csvnav-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5270efd2c60aa4536e2bb02142adaeb78cd80de0d35fa2b7ffaa55194413b1cc",
        "md5": "26e9817d49bf47ac505f9240407a8823",
        "sha256": "4777e825c052cafcdf9a39c7055c892955500f19d8f9f1db85ab900a1a21f974"
      },
      "downloads": -1,
      "filename": "csvnav-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "26e9817d49bf47ac505f9240407a8823",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10105,
      "upload_time": "2020-08-09T18:55:13",
      "upload_time_iso_8601": "2020-08-09T18:55:13.299657Z",
      "url": "https://files.pythonhosted.org/packages/52/70/efd2c60aa4536e2bb02142adaeb78cd80de0d35fa2b7ffaa55194413b1cc/csvnav-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}