{
  "info": {
    "author": "Nilesh Verma",
    "author_email": "me@nileshverma.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Deep Image Search - AI-Based Image Search Engine\r\n<p align=\"center\"><img src=\"https://github.com/TechyNilesh/DeepImageSearch/blob/main/logo/deep%20image%20search%20logo%20New.png?raw=true\" alt=\"Brain+Machine\" height=\"218\" width=\"350\"></p>\r\n\r\n**Deep Image Search** is an AI-based image search engine that includes **deep transfer learning features Extraction** and **tree-based vectorized search technique.**\r\n\r\n![Generic badge](https://img.shields.io/badge/AI-Advance-green.svg) ![Generic badge](https://img.shields.io/badge/Python-v3-blue.svg) ![Generic badge](https://img.shields.io/badge/pip-v3-red.svg)  ![Generic badge](https://img.shields.io/badge/TensorFlow-v2-orange.svg) ![Generic badge](https://img.shields.io/badge/Annoy-latest-green.svg) [![Downloads](https://static.pepy.tech/personalized-badge/deepimagesearch?period=month&units=international_system&left_color=grey&right_color=brightgreen&left_text=Downloads)](https://pepy.tech/project/deepimagesearch)\r\n\r\n<h2><img src=\"https://cdn2.iconfinder.com/data/icons/artificial-intelligence-6/64/ArtificialIntelligence9-512.png\" alt=\"Brain+Machine\" height=\"38\" width=\"38\"> Creators </h2>\r\n\r\n### [Nilesh Verma](https://nileshverma.com \"Nilesh Verma\")\r\n\r\n## Features\r\n- Faster Search **O(logN)** Complexity.\r\n- High Accurate Output Result.\r\n- Best for Implementing on python based web application or APIs.\r\n- Best implementation for College students and freshers for project creation.\r\n- Applications are Images based E-commerce recommendation, Social media and other image-based platforms that want to implement image recommendation and search.\r\n\r\n## Installation\r\n\r\nThis library is compatible with both *windows* and *Linux system* you can just use **PIP command** to install this library on your system:\r\n\r\n```shell\r\npip install DeepImageSearch\r\n```\r\n\r\nIf you are facing any VS C++ 14 related issue in windows during installation, kindly refer to following solution: [Pip error: Microsoft Visual C++ 14.0 is required](https://stackoverflow.com/questions/44951456/pip-error-microsoft-visual-c-14-0-is-required \"Pip error: Microsoft Visual C++ 14.0 is required\")\r\n\r\n## How To Use?\r\n\r\nWe have provided the **Demo** folder under the *GitHub repository*, you can find the example in both **.py** and **.ipynb**  file. Following are the ideal flow of the code:\r\n\r\n### 1. Importing the Important Classes\r\nThere are three important classes you need to load **LoadData** - for data loading, **Index** - for indexing the images to database/folder, **SearchImage** - For searching and Plotting the images\r\n\r\n```python\r\n# Importing the proper classes\r\nfrom DeepImageSearch import Index,LoadData,SearchImage\r\n```\r\n\r\n### 2. Loading the Images Data\r\n\r\nFor loading the images data we need to use the **LoadData** object, from there we can import images from the CSV file and Single/Multiple Folders.\r\n\r\n```python\r\n# load the Images from the Folder (You can also import data from multiple folders in python list type)\r\nimage_list = LoadData().from_folder(['images','wiki-images'])\r\n# Load data from CSV file\r\nimage_list = LoadData().from_csv(csv_file_path='your_csv_file.csv',images_column_name='column_name)\r\n```\r\n### 3. Indexing and Saving The File in Local Folder\r\n\r\nFor faster retrieval we are using tree-based indexing techniques for Images features, So for that, we need to store meta-information on the local path **[meta-data-files/]** folder.\r\n\r\n```python\r\n# For Faster Serching we need to index Data first, After Indexing all the meta data stored on the local path\r\nIndex(image_list).Start()\r\n```\r\n### 3. Searching\r\n\r\nSearching operation is performed by the following method:\r\n\r\n```python\r\n# for searching, you need to give the image path and the number of the similar image you want\r\nSearchImage().get_similar_images(image_path=image_list[0],number_of_images=5)\r\n```\r\nyou can also plot some similar images for viewing purpose by following the code method:\r\n\r\n```python\r\n# If you want to plot similar images you can use this method, It will plot 16 most similar images from the data index\r\nSearchImage().plot_similar_images(image_path = image_list[0])\r\n```\r\n\r\n## Complete Code\r\n\r\n```python\r\n# Importing the proper classes\r\nfrom DeepImageSearch import Index,LoadData,SearchImage\r\n# load the Images from the Folder (You can also import data from multiple folder in python list type)\r\nimage_list = LoadData().from_folder(['images','wiki-images'])\r\n# For Faster Serching we need to index Data first, After Indexing all the meta data stored on the local path\r\nIndex(image_list).Start()\r\n# for searching you need to give the image path and the number of similar image you want\r\nSearchImage().get_similar_images(image_path=image_list[0],number_of_images=5)\r\n# If you want to plot similar images the you can use this method, It will plot 16 most similar images from the data index\r\nSearchImage().plot_similar_images(image_path = image_list[0])\r\n```\r\n\r\n## License\r\n\r\n\r\n\r\n    MIT License\r\n    \r\n    Copyright (c) 2021 Nilesh Verma\r\n    \r\n    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n    \r\n    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n    \r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n### Please do STAR the repository, if it helped you in anyway.\r\n\r\n**More cool features will be added in future. Feel free to give suggestions, report bugs and contribute.**\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/TechyNilesh/DeepImageSearch/archive/refs/tags/v_14.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TechyNilesh/DeepImageSearch",
    "keywords": "Deep Image Search Engine,AI Image search,Image Search Python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DeepImageSearch",
    "package_url": "https://pypi.org/project/DeepImageSearch/",
    "platform": "",
    "project_url": "https://pypi.org/project/DeepImageSearch/",
    "project_urls": {
      "Download": "https://github.com/TechyNilesh/DeepImageSearch/archive/refs/tags/v_14.tar.gz",
      "Homepage": "https://github.com/TechyNilesh/DeepImageSearch"
    },
    "release_url": "https://pypi.org/project/DeepImageSearch/1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Deep Image Search is an AI-based image search engine that includes deep transfor learning features Extraction and tree-based vectorized search.",
    "version": "1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10518860,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bff4631fd5dc024e1d9842bd0e9137388c88134eaf2264f2aba6e6fb542f912",
          "md5": "4ed7e24cc187e4e1cd6da07548895cf7",
          "sha256": "7b0e0da89e45e36549371f04320c91545bf00ad9dac5c16392bbf78b9d1d9f7e"
        },
        "downloads": -1,
        "filename": "DeepImageSearch-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4ed7e24cc187e4e1cd6da07548895cf7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6334,
        "upload_time": "2021-05-24T12:37:56",
        "upload_time_iso_8601": "2021-05-24T12:37:56.582033Z",
        "url": "https://files.pythonhosted.org/packages/7b/ff/4631fd5dc024e1d9842bd0e9137388c88134eaf2264f2aba6e6fb542f912/DeepImageSearch-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97eb2dd9b7e7a401d7aee93b9a3e9a177efc41793abf17df0cb7011b694d2d14",
          "md5": "fde992f10a2ba1d1617b042d4dc8623a",
          "sha256": "6976a42674efe21faaf4f9d78077ed2cc2ca7bf954e62213b83f500c9a4eedde"
        },
        "downloads": -1,
        "filename": "DeepImageSearch-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fde992f10a2ba1d1617b042d4dc8623a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6336,
        "upload_time": "2021-05-24T12:58:46",
        "upload_time_iso_8601": "2021-05-24T12:58:46.771262Z",
        "url": "https://files.pythonhosted.org/packages/97/eb/2dd9b7e7a401d7aee93b9a3e9a177efc41793abf17df0cb7011b694d2d14/DeepImageSearch-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f34ebd4e3abeb17ba5357081fd7b7bb0e2c187e5715f0fd9f532e30948a4f27e",
          "md5": "9935aee1f3a96eadb0b582f50fb9b760",
          "sha256": "e6410d2886e503c35b846f3a7be31ed4ed224f052873defcb00999777c93e625"
        },
        "downloads": -1,
        "filename": "DeepImageSearch-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9935aee1f3a96eadb0b582f50fb9b760",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6349,
        "upload_time": "2021-05-24T13:09:40",
        "upload_time_iso_8601": "2021-05-24T13:09:40.626945Z",
        "url": "https://files.pythonhosted.org/packages/f3/4e/bd4e3abeb17ba5357081fd7b7bb0e2c187e5715f0fd9f532e30948a4f27e/DeepImageSearch-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1912d5b56921e421efd6559eea8b441924488b265fb9dc3a7482a33f50b074f",
          "md5": "b220573e1b5551499cc9d3c88ceb20fd",
          "sha256": "ec8dab5af5345c4747abe6b194b44a55b77ca0fc3f08fe7be07ea2e2923e8f3c"
        },
        "downloads": -1,
        "filename": "DeepImageSearch-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b220573e1b5551499cc9d3c88ceb20fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6356,
        "upload_time": "2021-05-24T15:52:40",
        "upload_time_iso_8601": "2021-05-24T15:52:40.163269Z",
        "url": "https://files.pythonhosted.org/packages/d1/91/2d5b56921e421efd6559eea8b441924488b265fb9dc3a7482a33f50b074f/DeepImageSearch-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efa0b53420172277f05976651633b692355461401375dda775c3c29512fad852",
          "md5": "9f345b66883e3a223de7969d73d8088a",
          "sha256": "ff067680c55aecae00dac767ef03d9eb2debc0a88847aba681b284fc7ba16b94"
        },
        "downloads": -1,
        "filename": "DeepImageSearch-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9f345b66883e3a223de7969d73d8088a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6484,
        "upload_time": "2021-05-31T13:40:19",
        "upload_time_iso_8601": "2021-05-31T13:40:19.104093Z",
        "url": "https://files.pythonhosted.org/packages/ef/a0/b53420172277f05976651633b692355461401375dda775c3c29512fad852/DeepImageSearch-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "efa0b53420172277f05976651633b692355461401375dda775c3c29512fad852",
        "md5": "9f345b66883e3a223de7969d73d8088a",
        "sha256": "ff067680c55aecae00dac767ef03d9eb2debc0a88847aba681b284fc7ba16b94"
      },
      "downloads": -1,
      "filename": "DeepImageSearch-1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "9f345b66883e3a223de7969d73d8088a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6484,
      "upload_time": "2021-05-31T13:40:19",
      "upload_time_iso_8601": "2021-05-31T13:40:19.104093Z",
      "url": "https://files.pythonhosted.org/packages/ef/a0/b53420172277f05976651633b692355461401375dda775c3c29512fad852/DeepImageSearch-1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}