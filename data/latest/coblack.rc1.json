{
  "info": {
    "author": "Tomas Fiers",
    "author_email": "tomas.fiers@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# CoBlack\n\n_CoBlack_ is a <em><a href=\"https://black.readthedocs.io\">Black</a></em>-compliant formatter/rewrapper for Python comments.\n\n\n#### Example code\n\nBefore:\n```python\ndef care_for(self, favorite_plant):\n    self.sing_a_lullaby_to(favorite_plant)  # This should help them grow. Note that this comment is too long to fit on one line, given the recommended line length.\n    favorite_plant.water(100 * mL)  # Prevent dehydration.\n```\n\nAfter:\n```python\ndef care_for(self, favorite_plant):\n    self.sing_a_lullaby_to(favorite_plant)  # This should help them grow. Note that this\n    #                                       # comment is too long to fit on one line,\n    #                                       # given the recommended line length.\n    favorite_plant.water(100 * mL)  # Prevent dehydration.\n```\nThe extra `#`'s at the beginning of each line are necessary to be Black-compliant:\\\nIf they were not there, Black would pull the comments to the start of the line, \ndestroying the alignment, and making the code look messier.\n(Compare to how the [naive way](#naive-way-of-wrapping-comments) of wrapping comments looks).\n\n\n<br>\n\n\n## Installation\n\n```\n$ pip install coblack\n```\n\nThis will get you the [![latest release on PyPI](https://img.shields.io/pypi/v/coblack.svg?label=latest%20release%20on%20PyPI:)](https://pypi.python.org/pypi/coblack/)\n\n(Upgrade an existing installation of _CoBlack_ by adding the `--upgrade`/`-U` flag).\n\n\n<br>\n\n\n## Usage\n\nIn your terminal:\n```\n$ coblack my_file.py\n```\nThis wraps & fills out multiline comments, and passes the result through `black`.\\\nThe file is edited in-place.\n\nGet info on additional options (such as eg `-l` to set the line length) \nwith `coblack -h`.\n\n\n<br>\n\n\n## IDE integration\n\nFor PyCharm, create a new [_External Tool_](https://www.jetbrains.com/help/pycharm/configuring-third-party-tools.html),\nas follows:\n\n<img alt='Screenshot of External Tool UI in PyCharm. Gist: `coblack \"$FilePath$\"`'\n     src='doc/IDE_integration_PyCharm.png'\n     width=600>\n\nThen assign a keyboard shortcut to this tool.\\\nThis enables you to format your files quickly and often during coding sessions.\n\nIn VS Code, you'd create a new [_Task_](https://code.visualstudio.com/docs/editor/tasks), in a similar fashion.\n\n\n<br>\n\n\n## Python API\n\n```python\nimport coblack\n\ncoblack.format_file(\"path/to/my_file.py\")  # You can also pass a `pathlib.Path`.\n```\n\n\n<br>\n\n\n## Appendix\n\n#### Naive way of wrapping comments\n\n```python\ndef care_for(self, favorite_plant):\n    self.sing_a_lullaby_to(favorite_plant)  # This should help them grow. Note that this\n    # comment is too long to fit on one line, given the recommended line length.\n    favorite_plant.water(100 * mL)  # Prevent dehydration.\n```\n([ðŸ‘† back to top of ReadMe](#coblack)).\n\n\n<br>\n\n#### Other comment styles\n\nOn own line, before code:\n```python\ndef care_for(self, favorite_plant):\n\n    # This should help them grow. Note that this comment is too long to fit on one line,\n    # given the recommended line length.\n    self.sing_a_lullaby_to(favorite_plant)\n\n    # Prevent dehydration.\n    favorite_plant.water(100 * mL)\n```\n\nOn own line, after code:\n```python\ndef care_for(self, favorite_plant):\n\n    self.sing_a_lullaby_to(favorite_plant)\n    # This should help them grow. Note that this comment is too long to fit on one line,\n    # given the recommended line length.\n\n    favorite_plant.water(100 * mL)\n    # Prevent dehydration.\n```\n\nThese styles don't need _CoBlack_;\na vanilla rewrapper like any of the following will do:\n- The [Wrap to Column](https://plugins.jetbrains.com/plugin/7234-wrap-to-column) plugin for PyCharm;\n- The [Rewrap](https://marketplace.visualstudio.com/items?itemName=stkb.rewrap) extension for VS Code;\n- The \"Wrap Paragraph at Ruler\" command in Sublime Text (`Alt-Q` or `Alt-âŒ˜-Q`) ;\n- The `fill-paragraph` command in Emacs; or\n- The `gq` operator in Vim.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tfiers/coblack",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "coblack",
    "package_url": "https://pypi.org/project/coblack/",
    "platform": "",
    "project_url": "https://pypi.org/project/coblack/",
    "project_urls": {
      "Homepage": "https://github.com/tfiers/coblack",
      "Source Code": "https://github.com/tfiers/coblack"
    },
    "release_url": "https://pypi.org/project/coblack/0.2/",
    "requires_dist": [
      "click (~=7.1)",
      "black (>=20)"
    ],
    "requires_python": ">= 3.8",
    "summary": "Black-compliant formatter/rewrapper for Python comments.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8527252,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df7c799cab316a56269f75991086af58010cd1b11860848a16214056ead8e63c",
          "md5": "e7d63fcac6e5f13e572b85295a4a3816",
          "sha256": "c294b902fc7e849719feec747bfa379602128c335e8872f5409f9ee7c96638ff"
        },
        "downloads": -1,
        "filename": "coblack-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7d63fcac6e5f13e572b85295a4a3816",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.8",
        "size": 9384,
        "upload_time": "2020-10-28T22:23:09",
        "upload_time_iso_8601": "2020-10-28T22:23:09.647058Z",
        "url": "https://files.pythonhosted.org/packages/df/7c/799cab316a56269f75991086af58010cd1b11860848a16214056ead8e63c/coblack-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90283f1ae434f8fb866a38e71acbf522f3f2893b06e3570887d751b0d19994e2",
          "md5": "c8fc028088596b68e35966724eccdb7c",
          "sha256": "c29ebec8d1ee9d681904d7262b158211ce6b991a7f2a0c25a181d98da1948315"
        },
        "downloads": -1,
        "filename": "coblack-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c8fc028088596b68e35966724eccdb7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.8",
        "size": 87727,
        "upload_time": "2020-10-28T22:23:12",
        "upload_time_iso_8601": "2020-10-28T22:23:12.418730Z",
        "url": "https://files.pythonhosted.org/packages/90/28/3f1ae434f8fb866a38e71acbf522f3f2893b06e3570887d751b0d19994e2/coblack-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df7c799cab316a56269f75991086af58010cd1b11860848a16214056ead8e63c",
        "md5": "e7d63fcac6e5f13e572b85295a4a3816",
        "sha256": "c294b902fc7e849719feec747bfa379602128c335e8872f5409f9ee7c96638ff"
      },
      "downloads": -1,
      "filename": "coblack-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e7d63fcac6e5f13e572b85295a4a3816",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">= 3.8",
      "size": 9384,
      "upload_time": "2020-10-28T22:23:09",
      "upload_time_iso_8601": "2020-10-28T22:23:09.647058Z",
      "url": "https://files.pythonhosted.org/packages/df/7c/799cab316a56269f75991086af58010cd1b11860848a16214056ead8e63c/coblack-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "90283f1ae434f8fb866a38e71acbf522f3f2893b06e3570887d751b0d19994e2",
        "md5": "c8fc028088596b68e35966724eccdb7c",
        "sha256": "c29ebec8d1ee9d681904d7262b158211ce6b991a7f2a0c25a181d98da1948315"
      },
      "downloads": -1,
      "filename": "coblack-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c8fc028088596b68e35966724eccdb7c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.8",
      "size": 87727,
      "upload_time": "2020-10-28T22:23:12",
      "upload_time_iso_8601": "2020-10-28T22:23:12.418730Z",
      "url": "https://files.pythonhosted.org/packages/90/28/3f1ae434f8fb866a38e71acbf522f3f2893b06e3570887d751b0d19994e2/coblack-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}