{
  "info": {
    "author": "Jack Liu",
    "author_email": "\"David C. Heson\" <dch376@msstate.edu>, William Robertson <william.robertson@mtsu.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# optical_multilayer\n\n[![PyPI - Version](https://img.shields.io/pypi/v/optical-multilayer.svg)](https://pypi.org/project/optical-multilayer)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/optical-multilayer.svg)](https://pypi.org/project/optical-multilayer)\n\n-----\n\n**Table of Contents**\n\n- [Installation](#installation)\n- [License](#license)\n- [About](#about)\n- [Functionalities](#functionalities)\n- [To Do](#todo)\n\n## Installation\n\n```console\npip install optical-multilayer\n```\n\n## License\n\n`optical-multilayer` is distributed under the terms of the [MIT](https://spdx.org/licenses/MIT.html) license.\n\n## About\n\nCreated by David C. Heson, Jack Liu, and Dr. William M. Robertson over the 2022 MTSU Computational Sciences REU (NSF REU Award #1757493).\n\nCodebase created to explore the optical properties of multilayers and optimize their design to achieve maximum sensibilities, using minimas of reflected light and RIU (Refractive Index Unit) as qualitative measurements. A new measurement called SWT (Shift With Thickness) was also introdued, which is defined as the degree or nanometer shift in the location of a Bloch Surface Wave when the bottom layer increases by 10 nanometers in thickness.\n\nCurrently, the entirety of the code is written in Python Anaconda 3-5.3.1.\n\nFor the scripted version, go to: https://github.com/davidcheson/optical_multilayer.\n\n## Functionalities\n\nThe current functionalities of the program are:\n<ul>\n<li>Input any custom multilayer arrangement into the existing functions, including ones to dynamic indexes of refraction values.</li>\n<li>Graph reflection and transmission coefficients across multilayers with changing angle or wavelength, for specific polarisation mode.</li>\n<li>Graph the electric field profile accross a multilayer for a specific angle, wavelength, polarisation, and multilayer.</li>\n<li>Calculate RIU and SWT values for specified multilayer arrangements.</li>\n<li>Explore by force bruting a set of parameters for the multilayers, finding the best setups in terms of RIU/SWT and reflectivity dips.</li>\n<li>Simulate the properties of a multilayer using a dynamic index of refraction, which is wavelength dependent and corresponds to a user-defined function.</li>\n<li>More to come!</li>\n</ul>\n\n## To Do\n\n<ul>\n<li>Rewrite matrix calculations using Rust.</li>\n<li>Explore how to do a gradient descent on parameter regions of interest.</li>\n<li>Improve help and context messaging.</li>\n<li>Condense and improve the electric field calculation.</li>\n</ul>\n\nPlease refer any questions, comments, or suggestions to dch376@msstate.edu.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "optical-multilayer",
    "package_url": "https://pypi.org/project/optical-multilayer/",
    "platform": null,
    "project_url": "https://pypi.org/project/optical-multilayer/",
    "project_urls": {
      "Documentation": "https://github.com/davidcheson/optical_multilayer_module",
      "Issues": "https://github.com/unknown/optical-multilayer/issues",
      "Source": "https://github.com/davidcheson/optical_multilayer_module"
    },
    "release_url": "https://pypi.org/project/optical-multilayer/0.0.52/",
    "requires_dist": [
      "matplotlib",
      "numpy"
    ],
    "requires_python": ">=3.7",
    "summary": "Python module to simulate light behavior in optical multilayers.",
    "version": "0.0.52",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16476295,
  "releases": {
    "0.0.52": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "e8eedb1a3759feb02d0be7022434abf0e9508dcdbc8f88a9db502ab615174607",
          "md5": "f54ef6ea492e412881dac40a26d455f5",
          "sha256": "85c9854db0c360f98ec675b08adf47f2989a735b036ab5c41d14e04024e0c75a"
        },
        "downloads": -1,
        "filename": "optical_multilayer-0.0.52-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f54ef6ea492e412881dac40a26d455f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10617,
        "upload_time": "2022-11-04T23:18:59",
        "upload_time_iso_8601": "2022-11-04T23:18:59.259397Z",
        "url": "https://files.pythonhosted.org/packages/e8/ee/db1a3759feb02d0be7022434abf0e9508dcdbc8f88a9db502ab615174607/optical_multilayer-0.0.52-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "71d4b63a8654e140b4f3378f886e16c64cdd22c54660dc8631e7abf9ad32223f",
          "md5": "7986d56d373569b4b125cff55032b22b",
          "sha256": "075dba477d0b1ffeee626eedc26f8981c52e41d025be8eccee757e0ab2237ed5"
        },
        "downloads": -1,
        "filename": "optical_multilayer-0.0.52.tar.gz",
        "has_sig": false,
        "md5_digest": "7986d56d373569b4b125cff55032b22b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9756,
        "upload_time": "2022-11-04T23:19:00",
        "upload_time_iso_8601": "2022-11-04T23:19:00.871431Z",
        "url": "https://files.pythonhosted.org/packages/71/d4/b63a8654e140b4f3378f886e16c64cdd22c54660dc8631e7abf9ad32223f/optical_multilayer-0.0.52.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "e8eedb1a3759feb02d0be7022434abf0e9508dcdbc8f88a9db502ab615174607",
        "md5": "f54ef6ea492e412881dac40a26d455f5",
        "sha256": "85c9854db0c360f98ec675b08adf47f2989a735b036ab5c41d14e04024e0c75a"
      },
      "downloads": -1,
      "filename": "optical_multilayer-0.0.52-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f54ef6ea492e412881dac40a26d455f5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10617,
      "upload_time": "2022-11-04T23:18:59",
      "upload_time_iso_8601": "2022-11-04T23:18:59.259397Z",
      "url": "https://files.pythonhosted.org/packages/e8/ee/db1a3759feb02d0be7022434abf0e9508dcdbc8f88a9db502ab615174607/optical_multilayer-0.0.52-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "71d4b63a8654e140b4f3378f886e16c64cdd22c54660dc8631e7abf9ad32223f",
        "md5": "7986d56d373569b4b125cff55032b22b",
        "sha256": "075dba477d0b1ffeee626eedc26f8981c52e41d025be8eccee757e0ab2237ed5"
      },
      "downloads": -1,
      "filename": "optical_multilayer-0.0.52.tar.gz",
      "has_sig": false,
      "md5_digest": "7986d56d373569b4b125cff55032b22b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9756,
      "upload_time": "2022-11-04T23:19:00",
      "upload_time_iso_8601": "2022-11-04T23:19:00.871431Z",
      "url": "https://files.pythonhosted.org/packages/71/d4/b63a8654e140b4f3378f886e16c64cdd22c54660dc8631e7abf9ad32223f/optical_multilayer-0.0.52.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}