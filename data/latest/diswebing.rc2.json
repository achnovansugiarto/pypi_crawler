{
  "info": {
    "author": "Martin Bodický",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Discord webhook logging\nSimple `logging` handler and formatter for sending larger logs to discord channels.\n\n## Installation\nPackage can be installed via pip.\n\n`pip install diswebing`\n\n## Usage\n```python\nimport logging\nfrom discord_webhook_logging import DiscordWebhookHandler\n\nlogger = logging.getLogger(__name__)\nlogger.setLevel(logging.DEBUG)\nhandler = DiscordWebhookHandler(webhook_url='<your webhook url>')\nlogger.addHandler(handler)\n```\n\n## Examples\nHere are some basic examples to demonstrate how this package works.\n\n### Example of all log levels\n#### Python:\n```python\nlogger.debug('This is debug message')\nlogger.info('This is info message')\nlogger.warning('This is warning message')\nlogger.error('This is error message')\nlogger.critical('This is critical message')\n```\n#### Discord:\n<pre style=\"background-color: #2f3136\">\n<span style=\"color:rgb(79, 84, 92)\">===&boxv;This is debug message</span>\n<span style=\"color:rgb(133, 153, 0)\">+  &boxv;This is info message</span>\n<span style=\"color:rgb(185, 187, 190)\">W  &boxv;This is warning message</span>\n<span style=\"color:rgb(220, 50, 47)\">-  &boxv;This is error message</span>\n<span style=\"color:rgb(220, 50, 47)\">-!!&boxv;This is critical message</span>\n</pre>\n\n### Flushing buffered messages\nDiscordWebhookHandler by default buffers messages, so it can send more lines as single messasge. Buffer can store 1989 due to Discords message length limits. It is automatically flushed when there is not enogh space for next message. You can also manualy flush the buffer by calling `logger.flush()`.\n\nBuffer is also automatically flushed right before the app exits.\n\n#### Python:\n```python\nlogger.debug('This is debug message')\nlogger.info('This is info message')\n\nlogger.flush()  # All messages in buffer are sent\n\nlogger.warning('This is warning message')\nlogger.error('This is error message')\nlogger.critical('This is critical message')\n\n# As you can see we do not need to use flush at the end of program.\n# Remaining buffered messages are automatically flushed before the app exits.\n```\n#### Discord:\n\nYou will see two messages in Discord insted of one like in example above.\n<pre style=\"background-color: #2f3136\">\n<span style=\"color:rgb(79, 84, 92)\">===&boxv;This is debug message</span>\n<span style=\"color:rgb(133, 153, 0)\">+  &boxv;This is info message</span>\n</pre>\n<pre style=\"background-color: #2f3136\">\n<span style=\"color:rgb(185, 187, 190)\">W  &boxv;This is warning message</span>\n<span style=\"color:rgb(220, 50, 47)\">-  &boxv;This is error message</span>\n<span style=\"color:rgb(220, 50, 47)\">-!!&boxv;This is critical message</span>\n</pre>\n\nIf you want, you can set to flush buffer automatically after every message. However, I do not recommend doing it, due to Discords API rate limits.\nYou can enable this by setting `auto_flush=True` while creating the handler.\n\n`handler = DiscordWebhookHandler(webhook_url='<your webhook url>', auto_flush=True)`\n\nIn this case, after every message, handler sends message to discord channel.\n\n#### Python:\n```python\nlogger.debug('This is debug message')\nlogger.info('This is info message')\nlogger.warning('This is warning message')\n```\n#### Discord:\n<pre style=\"background-color: #2f3136\">\n<span style=\"color:rgb(79, 84, 92)\">===&boxv;This is debug message</span>\n</pre>\n<pre style=\"background-color: #2f3136\">\n<span style=\"color:rgb(133, 153, 0)\">+  &boxv;This is info message</span>\n</pre>\n<pre style=\"background-color: #2f3136\">\n<span style=\"color:rgb(185, 187, 190)\">W  &boxv;This is warning message</span>\n</pre>\n\n\n### Multi line log\nIf single log string contains multiple lines, it is highlighted with \"&boxvr;\" character from 2nd line and last line is highlighted with \"&boxur;\"\n\n#### Python:\n```python\nlogger.error('1st line\\nnext line\\n3rd line\\nlast line')\n```\n\n#### Discord:\n<pre style=\"background-color: #2f3136\">\n<span style=\"color:rgb(220, 50, 47)\">-  &boxv;1st line\n-  &boxvr;next line\n-  &boxvr;3rd line\n-  &boxur;last line</span>\n</pre>\n\n### Long messages\nDiscord supports sending messages up to 2000 characters. If longer string is passed into logger, DiscordWebhookFormatter automatically splits message into shorter parts to fit discords 2000 character limt.\nIf the line was split, it is highlighted with \"&rdsh;\" character.\n\n#### Python:\n```python\nlogger.info('0'*2000 + '1'*50)\n```\n\n#### Discord:\n<pre style=\"background-color: #2f3136\">\n<span style=\"color:rgb(133, 153, 0)\">+  &boxv;000000000000000000000000000 ... zeroes contiues up to message length limit</span>\n</pre>\nAnd in the next message remaining text from the same log line\n<pre style=\"background-color: #2f3136\">\n<span style=\"color:rgb(133, 153, 0)\">+  &rdsh;00000000000000011111111111111111111111111111111111111111111111111</span>\n</pre>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "diswebing",
    "package_url": "https://pypi.org/project/diswebing/",
    "platform": null,
    "project_url": "https://pypi.org/project/diswebing/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/diswebing/0.0.4/",
    "requires_dist": [
      "requests (~=2.25.1)"
    ],
    "requires_python": "",
    "summary": "간단하게 보낼수있는 웹훅",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13611145,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1776ffb7ff506b2e56111cffac908c8a2443f720d20c93729762a9d43fb21f8c",
          "md5": "32298e5c6948b0ad3207371eebc6d096",
          "sha256": "39c0c8e305bfb40605fa4725a007a564f8f3ee2274857bfc4f57707397f6ce01"
        },
        "downloads": -1,
        "filename": "diswebing-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32298e5c6948b0ad3207371eebc6d096",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5354,
        "upload_time": "2022-04-25T07:08:49",
        "upload_time_iso_8601": "2022-04-25T07:08:49.406404Z",
        "url": "https://files.pythonhosted.org/packages/17/76/ffb7ff506b2e56111cffac908c8a2443f720d20c93729762a9d43fb21f8c/diswebing-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c390ebcc9f2e22cd8b62a7777b946519076b535cabc9115acd6c15d95183d67c",
          "md5": "e5f7d41d5b632d0797b6b88b4b7d4b96",
          "sha256": "359ae5f99ba1df9cc4d66c3c12da17defa318a51ba3ae131d6a61bb4796162a0"
        },
        "downloads": -1,
        "filename": "diswebing-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5f7d41d5b632d0797b6b88b4b7d4b96",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5360,
        "upload_time": "2022-04-25T07:14:57",
        "upload_time_iso_8601": "2022-04-25T07:14:57.410719Z",
        "url": "https://files.pythonhosted.org/packages/c3/90/ebcc9f2e22cd8b62a7777b946519076b535cabc9115acd6c15d95183d67c/diswebing-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c390ebcc9f2e22cd8b62a7777b946519076b535cabc9115acd6c15d95183d67c",
        "md5": "e5f7d41d5b632d0797b6b88b4b7d4b96",
        "sha256": "359ae5f99ba1df9cc4d66c3c12da17defa318a51ba3ae131d6a61bb4796162a0"
      },
      "downloads": -1,
      "filename": "diswebing-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e5f7d41d5b632d0797b6b88b4b7d4b96",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5360,
      "upload_time": "2022-04-25T07:14:57",
      "upload_time_iso_8601": "2022-04-25T07:14:57.410719Z",
      "url": "https://files.pythonhosted.org/packages/c3/90/ebcc9f2e22cd8b62a7777b946519076b535cabc9115acd6c15d95183d67c/diswebing-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}