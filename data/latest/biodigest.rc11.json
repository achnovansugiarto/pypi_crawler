{
  "info": {
    "author": "Klaudia Adamowicz",
    "author_email": "klaudia.adamowicz@uni-hamburg.de",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<p align=\"center\">\n  <img alt=\"DIGEST Logo\" src=\"https://github.com/bionetslab/digest/blob/main/digest_logo.png?raw=true\" width=\"500\" />\n</p>\n\n# biodigest\nThe python package for [DIGEST](https://digest-validation.net/) (validation of **di**sease and **ge**ne **s**ets, clus**t**erings or subnetworks). It greatly facilitates in silico validation of gene and disease sets, clusterings or subnetworks via fully automated validation pipelines comprising disease and gene ID mapping, enrichment\nanalysis, comparisons of shared genes and variants, and background distribution estimation. Moreover, functionality is provided to automatically update the external databases used by the pipelines.\n\nA light version excluding the subnetwork option end therefore reducing the needed\nrequirements for installing more complex python packages can be found as [biodigest-light](https://pypi.org/project/biodigest-light/).\n\n[Source code](https://github.com/bionetslab/digest)\n\n\n## Setup for proper usage\nAfter installing biodigest, you need to install [graph-tools package](https://git.skewed.de/count0/graph-tool/-/wikis/installation-instructions).\n\n```python\nimport biodigest\n```\n\nBefore you can run the validation, you need to download precalculated mappings and distance matrices. These can be downloaded in two ways:\n### 1. [Recommended] Get data from api\nThe API keeps all data up to date and checks for updates at regular intervals. This process takes 1-5 minutes depending on the internet connection.\n```python\nfrom biodigest import setup\nsetup.main(setup_type=\"api\")\n```\n### 2. Create data from scratch\nAny mappings are freshly fetched from the databases and the distance matrices are calculated. Be aware that this can take up to 3 hours. \n```python\nfrom biodigest import setup\nsetup.main(setup_type=\"create\")\n```\n\n## Run validation\n```python\nfrom biodigest.single_validation import single_validation\nresults = single_validation(tar: Union[pd.DataFrame, set], tar_id: str, mode: str, distance: str = \"jaccard\",\n                            ref: Union[str, set] = None, ref_id: str = None, enriched: bool = False,\n                            network_data: dict = None, mapper: Mapper = FileMapper(), runs: int = config.NUMBER_OF_RANDOM_RUNS,\n                            background_model: str = \"complete\", replace=100, verbose: bool = False)\n```\nAll results that can later be saved and visualize are saved in `results` as data type `dict()`.\n### Parameters\n#### Required parameters\n- **tar**: Target input you want to be validated\n  - a cluster should be of type `pd.DataFrame()` with `columns=[\"id\",\"cluster\"]`\n  - a set should be of type `set()`\n- **tar_id**: Is the id type of the target (see possible options below)\n- **ref**: Reference, to which **tar** will be compared (Only for mode id-set and set-set) \n  - a single id should be of type `str`\n  - a set should be of type `set()`\n- **ref_id**: Is the id type of the reference (see possible options below)\n- **mode**: Desired mode. See possible options below.\n#### Optional parameters\n- **distance**: Distance measure used for pairwise comparison\n- **enriched**: Set `True`, if only enriched attributes of the reference set should be used (Only for set-set)\n- **network_data**: Only for \"subnetwork\" and \"subnetwork-set\" mode. Dictionary consisting of {\"network_file\": path to network file,\n    \"prop_name\": name of vertex property with ids if network file of type graphml or gt,\n    \"id_type\": id type of network ids}\n- **background_model**: Model defining how random values should be picked. See possible options below.\n- **mapper**: Mapper object indicating where all files from the setup are saved. `[Default=FileMapper()]`\n- **runs**: Number of runs with random target values for p-value calculation\n- **replace**: Percentage of how many of the original ids should be replaced with random ids\n- **verbose**: get additional information during the run\n#### Supported types\n- **gene types**: entrez, ensembl, symbol, uniprot\n- **disease types**: mondo, omim, snomedct, umls, orpha, mesh, doid, ICD-10\n#### Modes\n- **set**: Compare similarity inside the set using the mean of all pairwise comparisons\n- **id-set**: Compare target set to reference set\n- **set-set**: Compare target set to reference id\n- **clustering**: Compare cluster quality inside clustering. Either genes or diseases\n- **subnetwork**: Compare similarity inside the subnetwork nodes. Either genes or diseases\n- **subnetwork-set**: Compare target subnetwork to reference set. Both either genes or diseases\n#### Background models\n- **complete**: Random ids will be picked completely randomly\n- **term-pres**: Random ids will preserve the number of mapped terms for the replaced ids\n- **network**: Random ids will preserve the number of connected components in given network.\n### Result\nThe method call returns the result in a json format of datatype dict which consists of \nthe following elements:\n```python\nresult = {'status': 'Status text',\n          'input_values': {'values': dict(), 'mapped_ids': list()}, \n          'random_values': {'values': dict()},\n          'p_values': {'values': dict()}}\n```\n- **status**: contains either an error message if a mapping failed or \"ok\" if IDs could be mapped\n- **input_values**:\n  - **values**: table in dict format with the functional or genetic relevance score(s) determined for solely their input\n  - **mapped_ids**: list containing the IDs with non empty annotations per functional or genetic annotation type\n- **random_values**:\n  - **values**: table in dict format with the functional or genetic relevance score(s) determined for all random runs\n- **p_values**: table in dict format with the calculated empirical P-values using the selected background model and other parameters that indicate the significance of the calculated relevance scores derived from the input\n## Save and visualize results\n```python\nfrom biodigest.single_validation import save_results\nfrom biodigest.evaluation.d_utils.plotting_utils import create_plots, create_extended_plots\n\n# Save results into json file and 2 .csv table files\nsave_results(results: dict, prefix: str, out_dir)\n\n# Generate and save plots based on results\n# Consisting of p-value plot and mappability plot\ncreate_plots(results, mode, tar, tar_id, out_dir, prefix, file_type: str = \"pdf\")\n# Generate and save extended plots based on results\n# Consisting of distribution and sankey plots\ncreate_extended_plots(results, mode, tar, out_dir, prefix, file_type: str = \"pdf\", mapper:Mapper=FileMapper())\n```\n### Parameters\n#### Required parameters\n- **results**: Is the output created with method `single_validation` as data type `dict()`\n- **prefix**: Prefix for file names\n- **out_dir**: Output directory for the generated files\n#### Additional required parameters for create_plots\n- **tar**: Target input you want to be validated\n  - a cluster should be of type `pd.DataFrame()` with `columns=[\"id\",\"cluster\"]`\n  - a set should be of type `set()`\n- **tar_id**: Is the id type of the target (see possible options above)\n- **mode**: Desired mode. See possible options above.\n#### Optional parameters for create_plots\n- **file_type**: Type of the plots image files.\n## Run significance contribution calculation\nIf you are interested in how the single ids from the target set are contribution to the \nfinal calculated empirical P-values, you can run the significance contribution \ncalculations. Keep in mind the runtime will increase in a linear way based\non the number of ids in the input target set. \n```python\nfrom biodigest.single_validation import significance_contributions\nresults_sig = significance_contributions(results: dict, \n                                         tar: Union[pd.DataFrame, set], tar_id: str, mode: str, distance: str = \"jaccard\",\n                                         ref: Union[str, set] = None, ref_id: str = None, enriched: bool = False,\n                                         mapper: Mapper = FileMapper(), runs: int = config.NUMBER_OF_RANDOM_RUNS,\n                                         background_model: str = \"complete\", replace=100, verbose: bool = False)\n```\n### Parameters\n- **results**: This is the output generated from `single_validation` on the full input set.\nThis will be used to calculate the significance contribution of the single ids from the input set.\n- **all other paramters:** look up parameters under \"Run validation\"\n## Save and visualize results\n```python\nfrom biodigest.single_validation import save_contribution_results\nfrom biodigest.evaluation.d_utils.plotting_utils import create_contribution_plots, create_contribution_graphs\n\n# Save results into json file and .csv table files for each validation type\nsave_contribution_results(results: dict, prefix: str, out_dir)\n\n# Generate and save plots based on results\n# Consisting an overview heatmap of the top 15 ids \n# with the largest absolute overall significance contribution\n# and top 10 largest positive and negative \n# significance contribution per annotation type\ncreate_contribution_plots(result_sig, out_dir, prefix, file_type: str = \"pdf\")\n# Generate a graph visualization from subnetwork constructed\n# by the input set and the given (or default) network\n# with nodes colored by their significance contribution\ncreate_contribution_graphs(result_sig, tar_id, network_data, out_dir, prefix,\n                           file_type: str = \"pdf\", mapper: Mapper = FileMapper())\n```\n### Parameters\n#### Required parameters\n- **results**: Is the output created with method `significance_contributions` as data type `dict()`\n- **prefix**: Prefix for file names\n- **out_dir**: Output directory for the generated files\n#### Additional required parameters\n- **input_type**: \"genes\" or \"diseases\" based on id type of target set\n- **network_data**: Only for \"subnetwork\" and \"subnetwork-set\" mode. Dictionary consisting of {\"network_file\": path to network file,\n    \"prop_name\": name of vertex property with ids if network file of type graphml or gt,\n    \"id_type\": id type of network ids}\n- **mapper**: Mapper object indicating where all files from the setup are saved. `[Default=FileMapper()]`\n#### Optional parameters for create_plots\n- **file_type**: Type of the plots image files.\n## Example runs\nCheck out the [tutorial](https://github.com/bionetslab/digest-tutorial) to see examples of usage in a script.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/biodigest/",
    "keywords": "",
    "license": "LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "biodigest",
    "package_url": "https://pypi.org/project/biodigest/",
    "platform": null,
    "project_url": "https://pypi.org/project/biodigest/",
    "project_urls": {
      "Homepage": "http://pypi.python.org/pypi/biodigest/"
    },
    "release_url": "https://pypi.org/project/biodigest/0.2.8/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "In silico Validation of Disease and Gene Sets, Clusterings or Subnetworks (DIGEST)",
    "version": "0.2.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17491470,
  "releases": {
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c75ed18a17eea9fc75190c82673f144ce97922cab7d7315721d40f91110bbc76",
          "md5": "461847d7ad3fc93332d0a6c02efc4a82",
          "sha256": "15c9d154a80089aa3a9d1f1a977d090a0c0d18cdce26b2ea50acb2739d2f4736"
        },
        "downloads": -1,
        "filename": "biodigest-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "461847d7ad3fc93332d0a6c02efc4a82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 40307,
        "upload_time": "2022-02-28T10:53:43",
        "upload_time_iso_8601": "2022-02-28T10:53:43.403841Z",
        "url": "https://files.pythonhosted.org/packages/c7/5e/d18a17eea9fc75190c82673f144ce97922cab7d7315721d40f91110bbc76/biodigest-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ebd39ce1150811dc937db0ae674cdba7ed8f2840a675e751c9be6cf2b15fa51",
          "md5": "7b212d3011c651a464e917bcf47c3dc8",
          "sha256": "c3778a09a8e3eb63b6bda93027bd292fd0baf7ef7cec197605876b20590fc911"
        },
        "downloads": -1,
        "filename": "biodigest-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "7b212d3011c651a464e917bcf47c3dc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 40359,
        "upload_time": "2022-03-17T21:48:58",
        "upload_time_iso_8601": "2022-03-17T21:48:58.165696Z",
        "url": "https://files.pythonhosted.org/packages/9e/bd/39ce1150811dc937db0ae674cdba7ed8f2840a675e751c9be6cf2b15fa51/biodigest-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d23181ea3c29b9dc6d6a9a40e26b8b4c8f017d3f4922ecc4681b717749d05b7",
          "md5": "d3e1f4ca8262b6f54fa86b21c7e9ff24",
          "sha256": "b91fd4343b79a2b7719f2646a801abebf881e711b8c178afe78aa9c6c5629410"
        },
        "downloads": -1,
        "filename": "biodigest-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d3e1f4ca8262b6f54fa86b21c7e9ff24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 47297,
        "upload_time": "2022-04-30T16:19:41",
        "upload_time_iso_8601": "2022-04-30T16:19:41.549947Z",
        "url": "https://files.pythonhosted.org/packages/0d/23/181ea3c29b9dc6d6a9a40e26b8b4c8f017d3f4922ecc4681b717749d05b7/biodigest-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25a48d861052fbfb3a4b0876f3772b47c5845e56629b6f6bb55d6fbb1b0ccdac",
          "md5": "681ac9be3f3b1b5d7d5777502d54c90e",
          "sha256": "1da101231a6c4fb3f44b9025db57eb8ea9e30e27012780de4e34b13f0fde4574"
        },
        "downloads": -1,
        "filename": "biodigest-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "681ac9be3f3b1b5d7d5777502d54c90e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 52292,
        "upload_time": "2022-05-28T07:48:12",
        "upload_time_iso_8601": "2022-05-28T07:48:12.797338Z",
        "url": "https://files.pythonhosted.org/packages/25/a4/8d861052fbfb3a4b0876f3772b47c5845e56629b6f6bb55d6fbb1b0ccdac/biodigest-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e42faa8275c0ce266588fe3460f720de188a50f5d02e98be45dfe57e9848f910",
          "md5": "8eacacdcf4f149a7886fa369768bf5f5",
          "sha256": "ef9c14536e4bacbc62dc9f47166e09629eb6562198dfe3443a9590903c712e68"
        },
        "downloads": -1,
        "filename": "biodigest-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8eacacdcf4f149a7886fa369768bf5f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 52303,
        "upload_time": "2022-05-30T12:51:29",
        "upload_time_iso_8601": "2022-05-30T12:51:29.943017Z",
        "url": "https://files.pythonhosted.org/packages/e4/2f/aa8275c0ce266588fe3460f720de188a50f5d02e98be45dfe57e9848f910/biodigest-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2298d7a24e7e057c83f1b6c67d91c808e2b03f4bb0298121a03599a04a7b61a",
          "md5": "6b891bf3bef492b5cd2ca678d760b902",
          "sha256": "8730446a5f3c8820be474e2d7c825885761d4555cb0a37e57343aa98ba195625"
        },
        "downloads": -1,
        "filename": "biodigest-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6b891bf3bef492b5cd2ca678d760b902",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 52259,
        "upload_time": "2022-06-28T11:00:12",
        "upload_time_iso_8601": "2022-06-28T11:00:12.390366Z",
        "url": "https://files.pythonhosted.org/packages/f2/29/8d7a24e7e057c83f1b6c67d91c808e2b03f4bb0298121a03599a04a7b61a/biodigest-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0714d8ab322d534b0b336ac1670b7e5e455296a2cde00f4440040877c8773bc1",
          "md5": "2f28fe3dd17283958abd126b0a58ecb2",
          "sha256": "8a076b730d0e9fe104dec3ea36a1bb495159f68397e04e0142e4d91f975a0b63"
        },
        "downloads": -1,
        "filename": "biodigest-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2f28fe3dd17283958abd126b0a58ecb2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 52437,
        "upload_time": "2022-08-04T13:40:51",
        "upload_time_iso_8601": "2022-08-04T13:40:51.250800Z",
        "url": "https://files.pythonhosted.org/packages/07/14/d8ab322d534b0b336ac1670b7e5e455296a2cde00f4440040877c8773bc1/biodigest-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e016febe219cbf04df525cb19522bbb88f77104efee78ff76aba41b97986a61",
          "md5": "390566811a6011bee7ffde53282160fa",
          "sha256": "c38e17ef134bc6d1a30c51e12378b50a8c3971331f234103b6bdf0d9651970d7"
        },
        "downloads": -1,
        "filename": "biodigest-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "390566811a6011bee7ffde53282160fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 52484,
        "upload_time": "2022-09-30T13:25:40",
        "upload_time_iso_8601": "2022-09-30T13:25:40.730937Z",
        "url": "https://files.pythonhosted.org/packages/0e/01/6febe219cbf04df525cb19522bbb88f77104efee78ff76aba41b97986a61/biodigest-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4ee0eb24f82a831b2b7752d25e6ad13f568c3fc53064009bfeaa5b9f9ed7d5e",
          "md5": "50156e3ad78a763bcd23493085b08963",
          "sha256": "e8c607a02219966081c28b31519600a117d871ff0af0874b9569c2b1e8713700"
        },
        "downloads": -1,
        "filename": "biodigest-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "50156e3ad78a763bcd23493085b08963",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 52504,
        "upload_time": "2022-10-05T13:05:02",
        "upload_time_iso_8601": "2022-10-05T13:05:02.125412Z",
        "url": "https://files.pythonhosted.org/packages/d4/ee/0eb24f82a831b2b7752d25e6ad13f568c3fc53064009bfeaa5b9f9ed7d5e/biodigest-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70b7c9a1f7e67a7901872fcf74fa582609a7e92924fa1bf8f720d7e410fe78d4",
          "md5": "1f7d40c6aace4f28c2fc2f82d0071d3c",
          "sha256": "64e4aa71ab53d8f49ca7345a1206fdcf9af0cc844c43062f6c6bc3dfde0be62b"
        },
        "downloads": -1,
        "filename": "biodigest-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "1f7d40c6aace4f28c2fc2f82d0071d3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 52510,
        "upload_time": "2023-03-28T13:41:09",
        "upload_time_iso_8601": "2023-03-28T13:41:09.762513Z",
        "url": "https://files.pythonhosted.org/packages/70/b7/c9a1f7e67a7901872fcf74fa582609a7e92924fa1bf8f720d7e410fe78d4/biodigest-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbf400f5dbe212fdc6f3320080d0403549155deabf08afa4491176f578746f84",
          "md5": "d48f4c4cd4a248e7878164cbf0802202",
          "sha256": "d1f448ae90013b5cdefa7978853d9b4bdafc7172b15e5312abf2ddb599faa3e8"
        },
        "downloads": -1,
        "filename": "biodigest-0.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "d48f4c4cd4a248e7878164cbf0802202",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 52508,
        "upload_time": "2023-03-29T09:22:09",
        "upload_time_iso_8601": "2023-03-29T09:22:09.267907Z",
        "url": "https://files.pythonhosted.org/packages/cb/f4/00f5dbe212fdc6f3320080d0403549155deabf08afa4491176f578746f84/biodigest-0.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbf400f5dbe212fdc6f3320080d0403549155deabf08afa4491176f578746f84",
        "md5": "d48f4c4cd4a248e7878164cbf0802202",
        "sha256": "d1f448ae90013b5cdefa7978853d9b4bdafc7172b15e5312abf2ddb599faa3e8"
      },
      "downloads": -1,
      "filename": "biodigest-0.2.8.tar.gz",
      "has_sig": false,
      "md5_digest": "d48f4c4cd4a248e7878164cbf0802202",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 52508,
      "upload_time": "2023-03-29T09:22:09",
      "upload_time_iso_8601": "2023-03-29T09:22:09.267907Z",
      "url": "https://files.pythonhosted.org/packages/cb/f4/00f5dbe212fdc6f3320080d0403549155deabf08afa4491176f578746f84/biodigest-0.2.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}