{
  "info": {
    "author": "stuianna",
    "author_email": "stuiaa@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![Build Status](https://travis-ci.org/stuianna/CMCLogger.svg?branch=master)](https://travis-ci.org/stuianna/CMCLogger)\n![Codecov](https://img.shields.io/codecov/c/github/stuianna/CMCLogger)\n![GitHub](https://img.shields.io/github/license/stuianna/CMCLogger)\n\n# CMCLogger - Coin Market Cap Cryptocurreny Data Logger\n\nA python API and script for requesting, parsing and storing the latest cryptocurrency data availalbe using the [Coin Market Cap Free API](https://coinmarketcap.com/api/). Data entries are stored in a SQLite3 database, with CLI features for querying data and logger status.\n\n## TLDR - Just Get Some Data\n\n```bash\n# Install the module and script\npip install CMCLogger\n\n# Initialise the required configuration, supplying your API key. (Made above)\nCMCLogger -a 'your-api-key' -g\n\n# Start the logger. Use 'nohup CMCLogger' to start detached, 'CMCLogger &' to start in background.\nCMCLogger \n\n# Query the latest stored price information for ticker 'BTC'\nCMCLogger -q BTC\n'BTC: $11676.55 (3.53%)'\n\n# Same as above, but more detailed.\nCMCLogger -dq BTC\n'BTC: $11676.55 1H: -0.22% 1D: 3.53% 7D: 4.77% 24h Volume: 66.65 Billion'\n\n# Get the logger status. Health is the moving average success rate of the last 30 calls.\nCMCLogger -s\n'Last successful call 1 minutes ago, health 100.0%.'\n\n# Stop the logger\nCMCLogger -k\n\n# Copy the SQLite database to an excel file\nCMCLogger -x\n```\n\n## Stored Data\n\nWhen the logger is initialised, it creates a directory structure inside `$XDG_CONFIG_HOME`. This could be `~/.local/share/CMCLogger` or `~/.config/CMCLogger`, use `echo $XDG_CONFIG_HOME` to find the location on your system.\n\nThe directory structure is as follows:\n\n```bash\nCMCLogger\n├── config.ini\n└── data\n    ├── cryptoData.db\n    ├── log\n    └── status.ini\n```\n\n**config.ini**\n\nContains configuration parameters used. Change any of these settings and restart the logger to apply them. Values shown are the default.\n```ini\n[CMC_API]\napi_private_key = your-private-key-here\nconversion_currency = AUD\ncurreny_symbol = $\nrank_start_index = 1\nrank_end_index = 200\nrequest_interval = 5\n\n[General]\nstatus_file_format = ini\n```\n\n**cryptoData.db**\n\nA SQLite3 database containing all data retreived by the logger. The database contains a separate table, named afeter the cryptocurrency symbol for each individual currecy collected. [SQLitebrower](https://sqlitebrowser.org/), is a good tool for browsing databases, or use `CMCLogger -x` to convert the database to an Excel file for viewing.\n\n\n**status.ini**\n\nContains information on the status of the logger. This information is queried and returned  when using `CMCLogger -s` or `CMCLogger -ds`\n```ini\n[Last Successful Call]\ntimestamp = 2020-04-23 23:10:55.275000+03:00\nerror_code = 0\nerror_message = None\nelapsed = 17\ncredit_count = 1\n\n[Last Failed Call]\ntimestamp = 2020-04-23 22:39:26.646297+03:00\nerror_code = 255\nerror_message = No network connections available.\nelapsed = 0\ncredit_count = 0\n\n[Current Session]\nhealth = 100.0\nsuccessful_calls = 35644\nfailed_calls = 587\nsuccess_rate = 98.38\n\n[All Time]\nsuccessful_calls = 35746\nfailed_calls = 589\nsuccess_rate = 98.38\n```\n\n**log**\n\nRuntime logs stored by the Python logging module.\n\n## Polybar / I3WM Integration\n\n**I3WM**\n\nAdd to `.i3/config` to start the logger on login.\n```bash\nexec --no-startup-id CMCLogger\n```\n\n\n**Polybar**\n\nAdd a polybar module for the target bar:\n```bash\n[module/crypto]\ntype = custom/script\nexec = ~/bin/crypto\ntail = true\ninterval = 300\n```\n\nThe target script simply cycles through a set of symbols, a blank string is returned if the last entry was more than 10 minutes ago.\n```bash\n#!/bin/bash\n\nqueryArray=(\"BTC\" \"LTC\" \"ETH\")\nTEMPFILE=\"/tmp/tmp.CMCLOGGER\"\nsource $TEMPFILE 2> /dev/null\n\nfunction getNextSymbol {\n\tposition=0\n\tfor symbol in ${queryArray[@]}; do\n\t\t((position++))\n\t\tif [[ \"$symbol\" == \"$LAST_SYMBOL\" ]]; then\n\t\t\tsize=${#queryArray[@]}\n\t\t\tposition=$((position%size))\n\t\t\tCURRENT_SYMBOL=${queryArray[$position]}\n\t\t\tbreak\n\t\tfi\n\t\tCURRENT_SYMBOL=${queryArray[0]}\n\tdone\n\techo \"LAST_SYMBOL=$CURRENT_SYMBOL\" > $TEMPFILE\n}\n\nfunction checkStatus {\n\tjsonStatus=$(CMCLogger -js 2> /dev/null)\n\tlastCall=$(echo \"$jsonStatus\" | jq -r '.last_call')\n\n\tif (( $lastCall > 10 )); then\n\t\techo ''\n\t\texit\n\tfi\n}\n\ngetNextSymbol\ncheckStatus\nCMCLogger -q $CURRENT_SYMBOL\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stuianna/CMCLogger",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CMCLogger",
    "package_url": "https://pypi.org/project/CMCLogger/",
    "platform": "",
    "project_url": "https://pypi.org/project/CMCLogger/",
    "project_urls": {
      "Homepage": "https://github.com/stuianna/CMCLogger"
    },
    "release_url": "https://pypi.org/project/CMCLogger/0.0.1/",
    "requires_dist": [
      "pandas",
      "numpy",
      "db-ops",
      "config-checker",
      "python-dateutil",
      "pytz",
      "requests",
      "urllib3",
      "idna",
      "certifi",
      "appdirs",
      "chardet",
      "et-xmlfile",
      "jdcal",
      "openpyxl"
    ],
    "requires_python": ">=3.6",
    "summary": "Coin Market Cap Public API Cryptocurrency data logger",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7143178,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fac6f3a46ed5236af2c73ea5d91a87503ff31f23d1f48bcccfe6f34cc035f9f",
          "md5": "d42cb93fec4e3a14bb58c3fc8cd5266d",
          "sha256": "948bf564f5389cbc83fa94d738f2385184dc9cf5fa84f28f35e00a5dd356a6a2"
        },
        "downloads": -1,
        "filename": "CMCLogger-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d42cb93fec4e3a14bb58c3fc8cd5266d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24267,
        "upload_time": "2020-05-01T07:38:34",
        "upload_time_iso_8601": "2020-05-01T07:38:34.038224Z",
        "url": "https://files.pythonhosted.org/packages/8f/ac/6f3a46ed5236af2c73ea5d91a87503ff31f23d1f48bcccfe6f34cc035f9f/CMCLogger-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61e0a49b7e54ceb94ca3e347ccb709041ba927bac9946fc2059a7df6ec02dd95",
          "md5": "abb31e5f43eecc63bf708baa99646e0a",
          "sha256": "561bc3a0053baa7079c64b45b9c1d3b71a4d2c1da2301d81520d0c6bc0f5650e"
        },
        "downloads": -1,
        "filename": "CMCLogger-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "abb31e5f43eecc63bf708baa99646e0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20142,
        "upload_time": "2020-05-01T07:38:36",
        "upload_time_iso_8601": "2020-05-01T07:38:36.523561Z",
        "url": "https://files.pythonhosted.org/packages/61/e0/a49b7e54ceb94ca3e347ccb709041ba927bac9946fc2059a7df6ec02dd95/CMCLogger-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8fac6f3a46ed5236af2c73ea5d91a87503ff31f23d1f48bcccfe6f34cc035f9f",
        "md5": "d42cb93fec4e3a14bb58c3fc8cd5266d",
        "sha256": "948bf564f5389cbc83fa94d738f2385184dc9cf5fa84f28f35e00a5dd356a6a2"
      },
      "downloads": -1,
      "filename": "CMCLogger-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d42cb93fec4e3a14bb58c3fc8cd5266d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 24267,
      "upload_time": "2020-05-01T07:38:34",
      "upload_time_iso_8601": "2020-05-01T07:38:34.038224Z",
      "url": "https://files.pythonhosted.org/packages/8f/ac/6f3a46ed5236af2c73ea5d91a87503ff31f23d1f48bcccfe6f34cc035f9f/CMCLogger-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61e0a49b7e54ceb94ca3e347ccb709041ba927bac9946fc2059a7df6ec02dd95",
        "md5": "abb31e5f43eecc63bf708baa99646e0a",
        "sha256": "561bc3a0053baa7079c64b45b9c1d3b71a4d2c1da2301d81520d0c6bc0f5650e"
      },
      "downloads": -1,
      "filename": "CMCLogger-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "abb31e5f43eecc63bf708baa99646e0a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20142,
      "upload_time": "2020-05-01T07:38:36",
      "upload_time_iso_8601": "2020-05-01T07:38:36.523561Z",
      "url": "https://files.pythonhosted.org/packages/61/e0/a49b7e54ceb94ca3e347ccb709041ba927bac9946fc2059a7df6ec02dd95/CMCLogger-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}