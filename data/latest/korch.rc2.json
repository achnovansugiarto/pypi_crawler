{
  "info": {
    "author": "Jorge Vila TomÃ¡s",
    "author_email": "jorge.vila-tomas@uv.es",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Korch\n> Simple tools to provide a Keras-like interface to PyTorch.\n\n\n## Install\n\n`pip install korch`\n\n## Example of usage\n\nWe can perform a very simple example using the Fashion MNIST dataset (as is done in the official [PyTorch docs](https://pytorch.org/tutorials/beginner/introyt/trainingyt.html).\n\n```\ntransform = transforms.Compose(\n    [transforms.ToTensor(),\n    transforms.Normalize((0.5,), (0.5,))])\n\n# Create datasets for training & validation, download if necessary\ntraining_set = torchvision.datasets.FashionMNIST('./data', train=True, transform=transform, download=True)\nvalidation_set = torchvision.datasets.FashionMNIST('./data', train=False, transform=transform, download=True)\n\n# Create data loaders for our datasets; shuffle for training, not for validation\ntraining_loader = torch.utils.data.DataLoader(training_set, batch_size=4, shuffle=True, num_workers=2)\nvalidation_loader = torch.utils.data.DataLoader(validation_set, batch_size=4, shuffle=False, num_workers=2)\n```\n\nSee that the only different with respect to basic PyTorch is that we're inhereting from our custom `Module`, not from PyTorch's `nn.Module`:\n\n```\nclass SimpleModel(Module):\n    def __init__(self):\n        super(SimpleModel, self).__init__()\n        self.conv1 = nn.Conv2d(1, 6, 5)\n        self.pool = nn.MaxPool2d(2, 2)\n        self.conv2 = nn.Conv2d(6, 16, 5)\n        self.fc1 = nn.Linear(16 * 4 * 4, 120)\n        self.fc2 = nn.Linear(120, 84)\n        self.fc3 = nn.Linear(84, 10)\n\n    def forward(self, x):\n        x = self.pool(F.relu(self.conv1(x)))\n        x = self.pool(F.relu(self.conv2(x)))\n        x = x.view(-1, 16 * 4 * 4)\n        x = F.relu(self.fc1(x))\n        x = F.relu(self.fc2(x))\n        x = self.fc3(x)\n        return x\n```\n\nFollowing the usual Keras way, we instantiate the model and compile it, providing the *loss* and the *optimizer*. *Metrics* can be provided as well, and are expected as `torchvision.MetricCollection`:\n\n```\nmodel = SimpleModel()\nmodel.compile(loss=torch.nn.CrossEntropyLoss(),\n              optimizer=torch.optim.SGD(model.parameters(), lr=0.001, momentum=0.9),\n              metrics = MetricCollection([Accuracy()]))\n```\n\n```\nmodel\n```\n\n\n\n\n    SimpleModel(\n      (conv1): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))\n      (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n      (conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n      (fc1): Linear(in_features=256, out_features=120, bias=True)\n      (fc2): Linear(in_features=120, out_features=84, bias=True)\n      (fc3): Linear(in_features=84, out_features=10, bias=True)\n      (loss_fn): CrossEntropyLoss()\n    )\n\n\n\n```\nmodel.evaluate(training_loader), model.evaluate(validation_loader)\n```\n\n\n\n\n    (2.3070596095879874, 2.307082461261749)\n\n\n\n```\nmodel.fit(trainloader=training_loader, epochs=1, validationloader=validation_loader)\n```\n\n```\nmodel.evaluate(training_loader), model.evaluate(validation_loader)\n```\n\n\n\n\n    (0.39349932589025605, 0.42693415356237674)\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Jorgvt/korch/tree/master/",
    "keywords": "pytorch keras python nbdev",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "korch",
    "package_url": "https://pypi.org/project/korch/",
    "platform": null,
    "project_url": "https://pypi.org/project/korch/",
    "project_urls": {
      "Homepage": "https://github.com/Jorgvt/korch/tree/master/"
    },
    "release_url": "https://pypi.org/project/korch/0.0.2/",
    "requires_dist": [
      "pip",
      "packaging",
      "torchvision",
      "tqdm",
      "torchmetrics",
      "torch"
    ],
    "requires_python": ">=3.6",
    "summary": "Simple tools to provide a Keras-like interface to PyTorch.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14334211,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b849bc0c477e41454117aa408e0193c9d07078edf3531477ee3499bf23114f8",
          "md5": "282aa1c102b64d79dcd7d7843ccc2844",
          "sha256": "4a9402df6e4d6e7560b27f37e59adbd2b3b5e44ad65af4ae5ae0dcc5462e2e1b"
        },
        "downloads": -1,
        "filename": "korch-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "282aa1c102b64d79dcd7d7843ccc2844",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8832,
        "upload_time": "2022-07-04T19:32:53",
        "upload_time_iso_8601": "2022-07-04T19:32:53.391416Z",
        "url": "https://files.pythonhosted.org/packages/1b/84/9bc0c477e41454117aa408e0193c9d07078edf3531477ee3499bf23114f8/korch-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34344513f259eaad80048c5fb143558c653f7a406610b1de5175439873dcc632",
          "md5": "64eb2f4c7a60023865b52e5500b24681",
          "sha256": "178b84f316236e7fcde806d16250982afd230432d49236f0de07e8eed8e3deea"
        },
        "downloads": -1,
        "filename": "korch-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "64eb2f4c7a60023865b52e5500b24681",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11526,
        "upload_time": "2022-07-04T19:32:55",
        "upload_time_iso_8601": "2022-07-04T19:32:55.596814Z",
        "url": "https://files.pythonhosted.org/packages/34/34/4513f259eaad80048c5fb143558c653f7a406610b1de5175439873dcc632/korch-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bb33a2f133a0ed144f877a729a70e30b855acf65815462686f64bb35493c346",
          "md5": "c64ef9bc633eadabab8a38af201aa95f",
          "sha256": "37cafed2864e2d9f29fadaaa2d100217529b34ef8d2b8225a77cd170e85b7f5d"
        },
        "downloads": -1,
        "filename": "korch-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c64ef9bc633eadabab8a38af201aa95f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8843,
        "upload_time": "2022-07-04T22:51:48",
        "upload_time_iso_8601": "2022-07-04T22:51:48.763494Z",
        "url": "https://files.pythonhosted.org/packages/3b/b3/3a2f133a0ed144f877a729a70e30b855acf65815462686f64bb35493c346/korch-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "801eb74344df7b62aee80b6e7224f504a6fc518609b9ab65cd61a6608576f397",
          "md5": "00237c616e85a7409405043a38de23d4",
          "sha256": "89dba55fad774048a4809ab08cac7478ce9595cbb7af3d801c7ebe01183ea957"
        },
        "downloads": -1,
        "filename": "korch-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "00237c616e85a7409405043a38de23d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11554,
        "upload_time": "2022-07-04T22:51:50",
        "upload_time_iso_8601": "2022-07-04T22:51:50.683472Z",
        "url": "https://files.pythonhosted.org/packages/80/1e/b74344df7b62aee80b6e7224f504a6fc518609b9ab65cd61a6608576f397/korch-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3bb33a2f133a0ed144f877a729a70e30b855acf65815462686f64bb35493c346",
        "md5": "c64ef9bc633eadabab8a38af201aa95f",
        "sha256": "37cafed2864e2d9f29fadaaa2d100217529b34ef8d2b8225a77cd170e85b7f5d"
      },
      "downloads": -1,
      "filename": "korch-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c64ef9bc633eadabab8a38af201aa95f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8843,
      "upload_time": "2022-07-04T22:51:48",
      "upload_time_iso_8601": "2022-07-04T22:51:48.763494Z",
      "url": "https://files.pythonhosted.org/packages/3b/b3/3a2f133a0ed144f877a729a70e30b855acf65815462686f64bb35493c346/korch-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "801eb74344df7b62aee80b6e7224f504a6fc518609b9ab65cd61a6608576f397",
        "md5": "00237c616e85a7409405043a38de23d4",
        "sha256": "89dba55fad774048a4809ab08cac7478ce9595cbb7af3d801c7ebe01183ea957"
      },
      "downloads": -1,
      "filename": "korch-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "00237c616e85a7409405043a38de23d4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11554,
      "upload_time": "2022-07-04T22:51:50",
      "upload_time_iso_8601": "2022-07-04T22:51:50.683472Z",
      "url": "https://files.pythonhosted.org/packages/80/1e/b74344df7b62aee80b6e7224f504a6fc518609b9ab65cd61a6608576f397/korch-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}