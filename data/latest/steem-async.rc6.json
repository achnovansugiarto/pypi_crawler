{
  "info": {
    "author": "Chris (Someguy123) @ Privex",
    "author_email": "chris@privex.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Steem Async\n## Async Steem library - A simple Python library for asynchronous interactions with Steem RPC nodes (and forks)\n\n[![Build Status](https://travis-ci.com/Privex/steem-async.svg?branch=master)](https://travis-ci.com/Privex/steem-async)\n\n**Official Repo:** https://github.com/privex/steem-async\n\n## Quick Install / Usage\n\n**WARNING:** Due to use of modern Python features such as dataclasses, you MUST use **Python 3.7** or newer. This\nlibrary is **not compatible with Python 3.6 or older versions**.\n\n\n```sh\npip3 install steem-async\n```\n\n```python\nimport asyncio\nfrom privex.steem import SteemAsync\n\n\nasync def main():\n    # All init params are optional, but are included to make you aware of them :)\n    s = SteemAsync(rpc_nodes=['https://steemd.privex.io'], max_retry=4, retry_delay=3)\n    # If using a fork based on older Steem, disable appbase to use the classic ``call`` JsonRPC method\n    s.config_set('use_appbase', False)\n    # If needed, you can customise the headers used\n    s.config_set('headers', {'content-type': 'application/json'})\n       \n    ### \n    # Get accounts\n    ###\n    accounts = await s.get_accounts('someguy123', 'privex')\n    print(accounts['someguy123'].balances)\n    # {'STEEM': <Amount '16759.930 STEEM' precision=3>, 'SBD': <Amount '78.068 SBD' precision=3>,\n    # 'VESTS': <Amount '277045077.603020 VESTS' precision=6>}\n    \n    print(accounts['privex'].created)\n    # '2017-02-04T18:07:21'\n    \n    ###\n    # Bulk load a range of blocks (uses batch calling, request chunking, and auto retry)\n    ###    \n    blocks = await s.get_blocks(10000, 20000)\n    print(blocks[100].number)\n    # 10100\n    \n    ###  \n    # If there isn't a wrapper function for what you need, you can use json_call and api_call directly:\n    ###\n    \n    # Appbase call\n    res = await s.json_call('condenser_api.get_block', [123])\n    block = res['result']\n    print(block['witness'])\n    # 'someguy123'\n    \n    # Non-appbase call\n    block = await s.api_call('database_api', 'get_block', [123])\n    print(block['witness'])\n    # 'someguy123'\n\nasyncio.run(main())\n\n```\n\n\nFor full parameter documentation, IDEs such as PyCharm and even Visual Studio Code should show our PyDoc\ncomments when you try to use the class.\n\nFor PyCharm, press F1 with your keyboard cursor over the class to see full function documentation, including\nreturn types, parameters, and general usage information. You can also press CMD-P with your cursor inside of \na method's brackets (including the constructor brackets) to see the parameters you can use.\n\nAlternatively, just view the files inside of `privex/steem/` - most methods and constructors\nare adequently commented with PyDoc.\n\n# Steem Async CLI tool\n\nYou can use Steem Async to make RPC calls directly from the CLI, with pretty printed output :)\n\n```sh\n# Show the CLI help page\npython3 -m privex.steem -h\n\n# Get the current block and output it as JSON\npython3 -m privex.steem get_block\n\n# Get block 123456 but disable human friendly indentation (but not syntax highlighting)\npython3 -m privex.steem -r get_block 123456\n\n\n# Get block 123456 but disable BOTH human friendly indentation AND syntax highlighting\n# This can be important if you're using the output in a script\npython3 -m privex.steem -nr -r get_block 123456\n\n# Get block 1234567 - use the custom node list https://hived.privex.io + https://anyx.io\npython3 -m privex.steem -n https://hived.privex.io,https://anyx.io get_block 1234567\n\n# Get the current head block number and print it\npython3 -m privex.steem get_head_block\n\n# Get the account balances for someguy123 as JSON\npython3 -m privex.steem get_balances someguy123\n\n# Get the account balances for someguy123 as JSON, but cast the numbers to floats instead of strings\npython3 -m privex.steem -dc float get_balances someguy123\n\n# Make a custom RPC call - calling the method get_ticker with no params\npython3 -m privex.steem call get_ticker\n\n# Using '-I' will enable number casting, so that '10' is converted to an integer param instead of a string\npython3 -m privex.steem call -I get_order_book 10\n\n# For calls that require nested lists/dicts, you can use '-j' to parse parameters as JSON,\n# or use '-c' to parse parameters as CSV (CSV columns are auto-casted from numbers/bools)\npython3 -m privex.steem call -j lookup_account_names '[\"someguy123\", true]'\npython3 -m privex.steem call -j lookup_account_names call -c lookup_account_names someguy123,true\n```\n\n# Benchmarks compared to Beem and other libraries\n\nSteem-Async is much faster than Beem and other synchronous libraries, due to fully supporting AsyncIO, as well \nas the use of bulk/bundled calls (combining multiple calls into one request) - especially when it comes to tasks \nwhich involve highly parallel queries, such as retrieving 1000's of blocks from the blockchain.\n\nPlease see the [benchmarks folder](https://github.com/Privex/steem-async/tree/master/privex/steem/benchmarks) to see the results of our \nbenchmarks, as well as information on how you can run our benchmarks on your own system.\n\n# Information\n\nThis Async Steem library has been developed at [Privex Inc.](https://www.privex.io) by @someguy123 to allow for\nasynchronous interactions with a Steem RPC node (and forks such as GOLOS) \n\nIt uses the [httpx library](https://www.encode.io/httpx/async/) library instead of `requests` to enable\nfull async support.\n\n\n    +===================================================+\n    |                 Â© 2019 Privex Inc.                |\n    |               https://www.privex.io               |\n    +===================================================+\n    |                                                   |\n    |        Python Async Steem library                 |\n    |        License: X11/MIT                           |\n    |                                                   |\n    |        Core Developer(s):                         |\n    |                                                   |\n    |          (+)  Chris (@someguy123) [Privex]        |\n    |                                                   |\n    +===================================================+\n    \n    Async Steem library - A simple Python library for asynchronous interactions with Steem RPC nodes (and forks)\n    Copyright (c) 2019    Privex Inc. ( https://www.privex.io )\n\n\n# Install\n\n**WARNING:** Due to use of modern Python features such as dataclasses, you MUST use **Python 3.7** or newer. This\nlibrary is **not compatible with Python 3.6 or older versions**.\n\n### Install from PyPi using `pip`\n\nYou can install this package via pip:\n\n```sh\npip3 install steem-async\n```\n\n### (Alternative) Manual install from Git\n\nIf you don't want to PyPi (e.g. for development versions not on PyPi yet), you can install the \nproject directly from our Git repo.\n\nUnless you have a specific reason to manually install it, you **should install it using pip3 normally**\nas shown above.\n\n**Option 1 - Use pip to install straight from Github**\n\n```sh\npip3 install git+https://github.com/Privex/steem-async\n```\n\n**Option 2 - Clone and install manually**\n\n```bash\n# Clone the repository from Github\ngit clone https://github.com/Privex/steem-async\ncd steem-async\n\n# RECOMMENDED MANUAL INSTALL METHOD\n# Use pip to install the source code\npip3 install .\n\n# ALTERNATIVE INSTALL METHOD\n# If you don't have pip, or have issues with installing using it, then you can use setuptools instead.\npython3 setup.py install\n```\n\n\n# Logging\n\nBy default, this package will log anything >=WARNING to the console. You can override this by adjusting the\n`privex.steem` logger instance. \n\nWe recommend checking out our Python package [Python Loghelper](https://github.com/Privex/python-loghelper) which\nmakes it easy to manage your logging configuration, and copy it to other logging instances such as this one.\n\n```python\n# Without LogHelper\nimport logging\nl = logging.getLogger('privex.steem')\nl.setLevel(logging.ERROR)\n\n# With LogHelper (pip3 install privex-loghelper)\nfrom privex.loghelper import LogHelper\n# Set up logging for **your entire app**. In this case, log only messages >=error\nlh = LogHelper('myapp', handler_level=logging.ERROR)\nlh.add_file_handler('test.log')      # Log messages to the file `test.log` in the current directory\nlh.copy_logger('privex.steem')       # Easily copy your logging settings to any other module loggers\nlog = lh.get_logger()                # Grab your app's logging instance, or use logging.getLogger('myapp')\nlog.error('Hello World')\n```\n\n# Contributing\n\nWe're very happy to accept pull requests, and work on any issues reported to us. \n\nHere's some important information:\n\n**Reporting Issues:**\n\n - For bug reports, you should include the following information:\n     - Version of `privex-steem` and `httpx` tested on - use `pip3 freeze`\n        - If not installed via a PyPi release, git revision number that the issue was tested on - `git log -n1`\n     - Your python3 version - `python3 -V`\n     - Your operating system and OS version (e.g. Ubuntu 18.04, Debian 7)\n - For feature requests / changes\n     - Please avoid suggestions that require new dependencies. This tool is designed to be lightweight, not filled with\n       external dependencies.\n     - Clearly explain the feature/change that you would like to be added\n     - Explain why the feature/change would be useful to us, or other users of the tool\n     - Be aware that features/changes that are complicated to add, or we simply find un-necessary for our use of the tool may not be added (but we may accept PRs)\n    \n**Pull Requests:**\n\n - We'll happily accept PRs that only add code comments or README changes\n - Use 4 spaces, not tabs when contributing to the code\n - You can use features from Python 3.4+ (we run Python 3.7+ for our projects)\n    - Features that require a Python version that has not yet been released for the latest stable release\n      of Ubuntu Server LTS (at this time, Ubuntu 18.04 Bionic) will not be accepted. \n - Clearly explain the purpose of your pull request in the title and description\n     - What changes have you made?\n     - Why have you made these changes?\n - Please make sure that code contributions are appropriately commented - we won't accept changes that involve uncommented, highly terse one-liners.\n\n**Legal Disclaimer for Contributions**\n\nNobody wants to read a long document filled with legal text, so we've summed up the important parts here.\n\nIf you contribute content that you've created/own to projects that are created/owned by Privex, such as code or documentation, then you might automatically grant us unrestricted usage of your content, regardless of the open source license that applies to our project.\n\nIf you don't want to grant us unlimited usage of your content, you should make sure to place your content\nin a separate file, making sure that the license of your content is clearly displayed at the start of the file (e.g. code comments), or inside of it's containing folder (e.g. a file named LICENSE). \n\nYou should let us know in your pull request or issue that you've included files which are licensed\nseparately, so that we can make sure there's no license conflicts that might stop us being able\nto accept your contribution.\n\nIf you'd rather read the whole legal text, it should be included as `privex_contribution_agreement.txt`.\n\n# License\n\nThis project is licensed under the **X11 / MIT** license. See the file **LICENSE** for full details.\n\nHere's the important bits:\n\n - You must include/display the license & copyright notice (`LICENSE`) if you modify/distribute/copy\n   some or all of this project.\n - You can't use our name to promote / endorse your product without asking us for permission.\n   You can however, state that your product uses some/all of this project.\n\n\n\n# Thanks for reading!\n\n**If this project has helped you, consider [grabbing a VPS or Dedicated Server from Privex](https://www.privex.io) - prices**\n**start at as little as US$0.99/mo (we take cryptocurrency!)**\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Privex/steem-async",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "steem-async",
    "package_url": "https://pypi.org/project/steem-async/",
    "platform": "",
    "project_url": "https://pypi.org/project/steem-async/",
    "project_urls": {
      "Homepage": "https://github.com/Privex/steem-async"
    },
    "release_url": "https://pypi.org/project/steem-async/2.1.0/",
    "requires_dist": [
      "httpx[http2] (>=0.7)",
      "privex-helpers (>=3.0.0)",
      "async-property (>=0.2.1)",
      "rich",
      "beem ; extra == 'bench'"
    ],
    "requires_python": "",
    "summary": "A simple Python library for asynchronous interactions with Hive/Steem RPC nodes (and forks)",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11591736,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1fd4abb641325bd38d67e4d1c2a44a852a4b04fbf578fb65aae75e6d56aa88a",
          "md5": "c443ead964fea6bc6db6daac89774dc8",
          "sha256": "3363b0043ddcca304b476712223afadeba3f61bc07e524f89f4d8653a47247b6"
        },
        "downloads": -1,
        "filename": "steem_async-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c443ead964fea6bc6db6daac89774dc8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17706,
        "upload_time": "2019-09-14T18:10:55",
        "upload_time_iso_8601": "2019-09-14T18:10:55.107847Z",
        "url": "https://files.pythonhosted.org/packages/f1/fd/4abb641325bd38d67e4d1c2a44a852a4b04fbf578fb65aae75e6d56aa88a/steem_async-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a79d0949fb535cbbef0db90e037fdf0c016f61fc498621b4b3cc6e1a69393450",
          "md5": "3bb2cb77ad50582212ec7fa3cbda6083",
          "sha256": "f749c2471d2850c28e249c006a49f61425298a3387ae0a2163cd9d1cf59654f6"
        },
        "downloads": -1,
        "filename": "steem_async-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3bb2cb77ad50582212ec7fa3cbda6083",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19375,
        "upload_time": "2019-09-14T18:10:57",
        "upload_time_iso_8601": "2019-09-14T18:10:57.724360Z",
        "url": "https://files.pythonhosted.org/packages/a7/9d/0949fb535cbbef0db90e037fdf0c016f61fc498621b4b3cc6e1a69393450/steem_async-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "787b0db42b4d83caba42fa3baf9bcbd112cce76efe89b0f40a92b50fa438bd70",
          "md5": "7b6324e60a2eab556ba0f5f508eea31e",
          "sha256": "4d4718e9f201f8e1f5b071543f9d535c4b90a585ccca6ecfc5eaaf43ee93a660"
        },
        "downloads": -1,
        "filename": "steem_async-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b6324e60a2eab556ba0f5f508eea31e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17275,
        "upload_time": "2019-09-14T18:20:01",
        "upload_time_iso_8601": "2019-09-14T18:20:01.381865Z",
        "url": "https://files.pythonhosted.org/packages/78/7b/0db42b4d83caba42fa3baf9bcbd112cce76efe89b0f40a92b50fa438bd70/steem_async-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80bc32f8ac10df21e8b646d79df435393b57065936f2c6aae2d15ba5266eb8a6",
          "md5": "039a8e3c12d1adf4c782f9368fe89428",
          "sha256": "16c9c6a543a9be3be35a05e25f24f15e4c194f19388eaf15c3f7d6cd9ecc3d18"
        },
        "downloads": -1,
        "filename": "steem_async-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "039a8e3c12d1adf4c782f9368fe89428",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19003,
        "upload_time": "2019-09-14T18:20:04",
        "upload_time_iso_8601": "2019-09-14T18:20:04.300212Z",
        "url": "https://files.pythonhosted.org/packages/80/bc/32f8ac10df21e8b646d79df435393b57065936f2c6aae2d15ba5266eb8a6/steem_async-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34602a31150ab03b5e3aad40f1d99d9027e470f638dc914a5e9550b7e8862533",
          "md5": "a834f2cbb25f585149a0878def16ccdf",
          "sha256": "7ca3a872d49df8f05fa359579e70dec97336a51d2bf364ec2081c8466b0de679"
        },
        "downloads": -1,
        "filename": "steem_async-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a834f2cbb25f585149a0878def16ccdf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18182,
        "upload_time": "2020-06-13T05:36:55",
        "upload_time_iso_8601": "2020-06-13T05:36:55.394787Z",
        "url": "https://files.pythonhosted.org/packages/34/60/2a31150ab03b5e3aad40f1d99d9027e470f638dc914a5e9550b7e8862533/steem_async-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a0a831aeefce4c109ab148607dbe164e489479d24e98db2ec694abccd57447c",
          "md5": "1aafe481b3f6a102fbbb274d5759a561",
          "sha256": "f1f84e09bfd7247538049a8ca32afd7e52a69b208d215a150a5b2a51dcb073eb"
        },
        "downloads": -1,
        "filename": "steem_async-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1aafe481b3f6a102fbbb274d5759a561",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20474,
        "upload_time": "2020-06-13T05:36:56",
        "upload_time_iso_8601": "2020-06-13T05:36:56.556964Z",
        "url": "https://files.pythonhosted.org/packages/6a/0a/831aeefce4c109ab148607dbe164e489479d24e98db2ec694abccd57447c/steem_async-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75ae9c289ffe24c2c2b06e0f7a9e4c1dddb421a34b528d69ff4217d0a648e6fd",
          "md5": "3a25642b68ab510a21b70dd605972a8e",
          "sha256": "bc37bc9c5ed97b975d5798bbe611b4efeffb40b17a0f3da145191b640601575a"
        },
        "downloads": -1,
        "filename": "steem_async-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a25642b68ab510a21b70dd605972a8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18498,
        "upload_time": "2020-08-20T12:37:57",
        "upload_time_iso_8601": "2020-08-20T12:37:57.389755Z",
        "url": "https://files.pythonhosted.org/packages/75/ae/9c289ffe24c2c2b06e0f7a9e4c1dddb421a34b528d69ff4217d0a648e6fd/steem_async-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72dd6b7cf513528f4013d21592e615bc61bffa775277b15a7c4b21d586035bd7",
          "md5": "5ef1991b95a77a1e89c88d719428fc0a",
          "sha256": "5bb1b4db359959426d48dd50dfa257f5cc8568164760089943214d6142a3ee22"
        },
        "downloads": -1,
        "filename": "steem_async-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5ef1991b95a77a1e89c88d719428fc0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20296,
        "upload_time": "2020-08-20T12:37:58",
        "upload_time_iso_8601": "2020-08-20T12:37:58.601489Z",
        "url": "https://files.pythonhosted.org/packages/72/dd/6b7cf513528f4013d21592e615bc61bffa775277b15a7c4b21d586035bd7/steem_async-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1d11a3a99fc8ea347aa9dd7a211c40eee1e0676b495a166bb13f5862767f545",
          "md5": "482560bd4967830301dddb987036ee7a",
          "sha256": "0aaaf177dea11bc98a52e0080182eda6e9029c03ac4c8cf306ce077377f75908"
        },
        "downloads": -1,
        "filename": "steem_async-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "482560bd4967830301dddb987036ee7a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22949,
        "upload_time": "2021-09-30T05:41:01",
        "upload_time_iso_8601": "2021-09-30T05:41:01.595980Z",
        "url": "https://files.pythonhosted.org/packages/d1/d1/1a3a99fc8ea347aa9dd7a211c40eee1e0676b495a166bb13f5862767f545/steem_async-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7466f75b774ce9001a66ce69814cd8076d9129d2261189aad03da543c8c74f30",
          "md5": "6295c7912e50d2113ba3237758441d88",
          "sha256": "d5b2dfc92e74df264a6f147c19b605c7b4392945aa90844d7f96727568f02e58"
        },
        "downloads": -1,
        "filename": "steem_async-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6295c7912e50d2113ba3237758441d88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24800,
        "upload_time": "2021-09-30T05:41:03",
        "upload_time_iso_8601": "2021-09-30T05:41:03.449668Z",
        "url": "https://files.pythonhosted.org/packages/74/66/f75b774ce9001a66ce69814cd8076d9129d2261189aad03da543c8c74f30/steem_async-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "587303583bec91828da88d5d9293d6874da3e7131bf63641f106f893759ee7ce",
          "md5": "cd8fa3d43fd3f671a9d5402f9276b8a5",
          "sha256": "ddeee9e6648cfab799202d086736368f8477f229656f9e1302adb38812c2f45d"
        },
        "downloads": -1,
        "filename": "steem_async-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd8fa3d43fd3f671a9d5402f9276b8a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30255,
        "upload_time": "2021-09-30T09:36:55",
        "upload_time_iso_8601": "2021-09-30T09:36:55.227192Z",
        "url": "https://files.pythonhosted.org/packages/58/73/03583bec91828da88d5d9293d6874da3e7131bf63641f106f893759ee7ce/steem_async-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78b63c8240f7b7a6527a3e9baf9c2c0c5fef8038ee361ef2172b08f0a3459a9c",
          "md5": "c5701cd4458a28e70ff9172d3e7d6557",
          "sha256": "79e36a7ba796262a2c12b24d32e6bde6e40f8fd4010623af3474b3e78ecab480"
        },
        "downloads": -1,
        "filename": "steem_async-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c5701cd4458a28e70ff9172d3e7d6557",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32220,
        "upload_time": "2021-09-30T09:36:57",
        "upload_time_iso_8601": "2021-09-30T09:36:57.024995Z",
        "url": "https://files.pythonhosted.org/packages/78/b6/3c8240f7b7a6527a3e9baf9c2c0c5fef8038ee361ef2172b08f0a3459a9c/steem_async-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "587303583bec91828da88d5d9293d6874da3e7131bf63641f106f893759ee7ce",
        "md5": "cd8fa3d43fd3f671a9d5402f9276b8a5",
        "sha256": "ddeee9e6648cfab799202d086736368f8477f229656f9e1302adb38812c2f45d"
      },
      "downloads": -1,
      "filename": "steem_async-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cd8fa3d43fd3f671a9d5402f9276b8a5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 30255,
      "upload_time": "2021-09-30T09:36:55",
      "upload_time_iso_8601": "2021-09-30T09:36:55.227192Z",
      "url": "https://files.pythonhosted.org/packages/58/73/03583bec91828da88d5d9293d6874da3e7131bf63641f106f893759ee7ce/steem_async-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78b63c8240f7b7a6527a3e9baf9c2c0c5fef8038ee361ef2172b08f0a3459a9c",
        "md5": "c5701cd4458a28e70ff9172d3e7d6557",
        "sha256": "79e36a7ba796262a2c12b24d32e6bde6e40f8fd4010623af3474b3e78ecab480"
      },
      "downloads": -1,
      "filename": "steem_async-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c5701cd4458a28e70ff9172d3e7d6557",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 32220,
      "upload_time": "2021-09-30T09:36:57",
      "upload_time_iso_8601": "2021-09-30T09:36:57.024995Z",
      "url": "https://files.pythonhosted.org/packages/78/b6/3c8240f7b7a6527a3e9baf9c2c0c5fef8038ee361ef2172b08f0a3459a9c/steem_async-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}