{
  "info": {
    "author": "RBApy was conceived and implemented originally by INRAE (Stephan Fischer, Ana Bulovic, Anne Goelzer and Marc Dinh), and updated regularly by several contributors (Oliver Bodeit, Jonathan Karr, Michael Jahn)",
    "author_email": "anne.goelzer@inra.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "RBApy\n==============================\n\nRBApy is a open-source Python package for automated generation of bacterial Resource Balance Analysis (RBA) models.\nRBA models have been developed for *Bacillus subtilis 168* (wild type), *Escherichia coli K-12* (wild type) and CO2-fixing *Escherichia coli K-12* (an engineered strain). You can find these models here: https://github.com/SysBioInra/Bacterial-RBA-models.\n\nFor a complete documentation on RBApy installation and usage, please visit the website:\nhttps://sysbioinra.github.io/RBApy/\n\n\nInstallation\n-------------\n\nRBApy requires one of the linear programming solvers `IBM CPLEX <https://www.ibm.com/analytics/cplex-optimizer>`_, `GLPK <https://www.gnu.org/software/glpk/>`_, or `Gurobi <https://www.gurobi.com/products/gurobi-optimizer/>`_. Note, while GLPK is capable of executing the example models in the tutorial, in our experience, GLPK is prohibitively slow for real RBA models. IBM and Gurobi both provide free licenses for academic research.\n\n1. Optionally, install the CPLEX linear programming solver.\n\n2. Install this package from PyPI:\n    ```\n    pip install rbapy\n    ```\n\n    Optionally, install GLPK by installing RBApy with the ``cplex`` option. Note, this requires a CPLEX license.:\n\n    ```\n    pip install rbapy[cplex]\n    ```\n\n    Optionally, install GLPK by installing RBApy with the ``swiglpk`` option. Note, this requires ``libglpk-dev``.:\n    \n    ```\n    pip install rbapy[swiglpk]\n    ```\n\n    Optionally, install Gurobi by installing RBApy with the ``gurobi`` option. Note, this requires a Gurobi license.:\n\n    ```\n    pip install rbapy[gurobi]\n    ```\n\nMore information about how to install RBApy is available at https://sysbioinra.github.io/RBApy/.\n\nRemark on usage\n---------------\n\nWhen using RBApy in own Python code, it must be imported as: rba\n\n    ```\n    import rba\n    ```\n    \nRunning\n-------\n\nFor more detailed instructions on usage, please refer to the RBApy website https://sysbioinra.github.io/RBApy/.\n\nPut the SBML file containing the GSMM of your organism of interest in the `input` directory and fill in the\nparameter file `input/params.in`. Then open a console at the root\nof the repository and run:\n\n\n```\npython generate_rba_model.py input/params.in\n```\n\nor, more generally:\n\n\n```\npython generate_rba_model.py path/to/params.in\n```\n\nThe script will generate several files used as an input for the RBA solver.\nBy default, they will be written to the `output` directory.\n\nWarning: for the first run, the script will download and parse Uniprot data\nas best it can. Unfortunately, numerous values cannot be parsed properly and\nare replaced with default values. The script will generate many helper files\nto replace these default values with hand-curated values. You should fill in\nthese helper files and rerun the script to obtain more relevant output\n(see instructions below).\n\nIf rbapy was installed properly, there also exists command-line interface called by:\n\n\n```\ngenerate-rba-model path/to/params.in\n```\n\nOnce the RBA model was generated, you can solve it using:\n\n\n```\npython solve_rba_model.py path/to/model\n```\n\nwhere the path points to the directory containing the XML files defining\nthe RBA model.\n\nIf rbapy was installed properly, there also exists command-line interface called by:\n\n\n```\nsolve-rba-model path/to/model\n```\n\n\nRunning RBApy with Gurobi\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nTo use RBApy with Gurobi, either:\n\n* Save your license to your home directory (``~/gurobi.lic``) or to the appropriate location for your OS (e.g., ``/opt/gurobi/gurobi.lic`` for Linux).\n* Encode your license variables (e.g., ``WLSACCESSID``, ``WLSSECRET``, ``LICENSEID``) into environment variables with the prefix ``GRB_`` (e.g., ``GRB_WLSACCESSID``, ``GRB_WLSSECRET``, ``GRB_LICENSEID``).\n\n\nSBML file requirements\n----------------------\n\nThe SBML file must be a valid SBML file, with gene-reaction associations.\nRBApy assumes that the boolean relation is always “or”s of “and”s, e.g. (g1 and g2) or (g3 and g4)\nMoreover, the words  “or” and “and” must be written in lowercase letters.\nEmpty fields in Gene-association will be interpreted as a diffusion reaction.\n\nAuthors\n-------\n\nFischer S. , Bulovic A. , Goelzer A. , Bodeit, O., Dinh M.\n\n\nCitation\n---------------\n\nIf you wish to cite this work, please refer to `https://doi.org/10.1016/j.ymben.2019.06.001 <https://doi.org/10.1016/j.ymben.2019.06.001>`_.\n\n\nLicense\n-------\n\nCopyright (c) 2018 INRAE - MaIAGE - France.\n\nRBApy is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nRBApy is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with RBApy.  If not, see <https://www.gnu.org/licenses/>\n\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://sysbioinra.github.io/RBApy/",
    "keywords": "metabolism,Resource Balance Analysis,molecular biology,cell biology,biochemistry,systems biology,computational biology,mathematical modeling,numerical simulation",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rbapy",
    "package_url": "https://pypi.org/project/rbapy/",
    "platform": null,
    "project_url": "https://pypi.org/project/rbapy/",
    "project_urls": {
      "Homepage": "https://sysbioinra.github.io/RBApy/"
    },
    "release_url": "https://pypi.org/project/rbapy/2.0/",
    "requires_dist": [
      "biopython",
      "lxml",
      "numpy",
      "pandas",
      "python-libsbml",
      "scipy",
      "requests",
      "cplex ; extra == 'cplex'",
      "conv-opt[cplex] ; extra == 'cplex_conv_opt'",
      "optlang ; extra == 'cplex_optlang'",
      "cplex ; extra == 'cplex_optlang'",
      "check-manifest ; extra == 'dev'",
      "glpk ; extra == 'glpk'",
      "conv-opt ; extra == 'glpk_conv_opt'",
      "optlang ; extra == 'glpk_optlang'",
      "gurobipy ; extra == 'gurobi'",
      "conv-opt[gurobi] ; extra == 'gurobi_conv_opt'",
      "optlang ; extra == 'gurobi_optlang'",
      "gurobipy ; extra == 'gurobi_optlang'",
      "swiglpk ; extra == 'swiglpk'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "coverage ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Package for automated generation of bacterial Resource Balance Analysis (RBA) models and simulation of RBA models",
    "version": "2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15700278,
  "releases": {
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24ac7fc610304c2972de1dd9e2ff0ca909999ee82dc9e50f1e6f4eb69c75d4a5",
          "md5": "aa55872f8a91cc03a3ab709fc59a3457",
          "sha256": "0608941f972e5877bc062b3044e2b1b59ddc7caf3660b8615c7c4c556981b336"
        },
        "downloads": -1,
        "filename": "rbapy-2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa55872f8a91cc03a3ab709fc59a3457",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 96261,
        "upload_time": "2022-11-08T15:40:27",
        "upload_time_iso_8601": "2022-11-08T15:40:27.977553Z",
        "url": "https://files.pythonhosted.org/packages/24/ac/7fc610304c2972de1dd9e2ff0ca909999ee82dc9e50f1e6f4eb69c75d4a5/rbapy-2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fbc3bc4525ae34a207bbc3223faefd6d4f6a51e793d492b781399a7852edbf5",
          "md5": "ec264a31559762f7171c6879b727d9a2",
          "sha256": "05ac135be9c7c2950e52b8dfa0689402029c85a6f461f2b3d52a37e6d152a92e"
        },
        "downloads": -1,
        "filename": "rbapy-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ec264a31559762f7171c6879b727d9a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6384821,
        "upload_time": "2022-11-08T15:40:36",
        "upload_time_iso_8601": "2022-11-08T15:40:36.089801Z",
        "url": "https://files.pythonhosted.org/packages/2f/bc/3bc4525ae34a207bbc3223faefd6d4f6a51e793d492b781399a7852edbf5/rbapy-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24ac7fc610304c2972de1dd9e2ff0ca909999ee82dc9e50f1e6f4eb69c75d4a5",
        "md5": "aa55872f8a91cc03a3ab709fc59a3457",
        "sha256": "0608941f972e5877bc062b3044e2b1b59ddc7caf3660b8615c7c4c556981b336"
      },
      "downloads": -1,
      "filename": "rbapy-2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aa55872f8a91cc03a3ab709fc59a3457",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 96261,
      "upload_time": "2022-11-08T15:40:27",
      "upload_time_iso_8601": "2022-11-08T15:40:27.977553Z",
      "url": "https://files.pythonhosted.org/packages/24/ac/7fc610304c2972de1dd9e2ff0ca909999ee82dc9e50f1e6f4eb69c75d4a5/rbapy-2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2fbc3bc4525ae34a207bbc3223faefd6d4f6a51e793d492b781399a7852edbf5",
        "md5": "ec264a31559762f7171c6879b727d9a2",
        "sha256": "05ac135be9c7c2950e52b8dfa0689402029c85a6f461f2b3d52a37e6d152a92e"
      },
      "downloads": -1,
      "filename": "rbapy-2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ec264a31559762f7171c6879b727d9a2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6384821,
      "upload_time": "2022-11-08T15:40:36",
      "upload_time_iso_8601": "2022-11-08T15:40:36.089801Z",
      "url": "https://files.pythonhosted.org/packages/2f/bc/3bc4525ae34a207bbc3223faefd6d4f6a51e793d492b781399a7852edbf5/rbapy-2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}