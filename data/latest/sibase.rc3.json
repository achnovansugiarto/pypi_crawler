{
  "info": {
    "author": "Mindaugas Jarmolovičius",
    "author_email": "zceemja@ucl.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SI-Base python package\n\nA basic python package that converts numerical strings with units to base units.\nThere are two main classes:\n* `Unit` which holds information about units, for instance that string `km/s` has unit **m** with *10 power of 3* and unit **s** with *10 power of -1* \n* `Value` is a float which also holds Unit and some numerical value that is always in **SI Base**. \n\n### Examples:\n\n```python\nfrom sibase import Value, Unit\n\nvalue = Value('3e5 nm/ps')  # 3e+08 m/s\n# value is instance of float with value if 3e8\nfloat_value = value.to('km/s')  # 300000.0\n# shorthand method:\nfloat_value = value @ 'km/s' \n\n# Converting with units:\nfloat_value = Unit('km/s').convert(3e8)\n# shorthand methods:\nfloat_value = 3e8 @ Unit('km/s')\nfloat_value = Unit('km/s') @ 3e8\n\n# Operations\n# Note that this only compares numerical values, not units\nValue('50 km') > '1e6 mm'  # True\nValue('50 km') < '1e8 mm'  # True\nValue('50 /km') == '50 km^-1'  # True\n\nValue('50 km') + '50 km'  # 1e5 m (returns Value object, keeps units from LHS)\nValue('50 km') - '1e4 m'  # 4e4 m (returns Value object, keeps units from LHS)\nValue('50 km') * '100 m'  # 5e6 m^2 (returns Value object, unit updated)\nValue('1 km') / '50 m'  # 20 (returns Value object, this case unitless)\nValue('1 km') / '50 s'  # 20 m/s (returns Value object, units updated)\n\n# Invert operation returns string with original units\n~Value('50 km')  # 50 km\nValue('50 km').original()  # 50 km\n# Reduces same unit and prefix values, useful for multiply/divide operations \nValue('17 ps/nm/km/km').original(simplify=True)  # 17 ps/nm/km^2\n```\n\nSuperscripts are enabled by default\n\n```python\nfrom sibase import Value, Unit\nUnit.USE_SUBSCRIPTS = False  # Disable superscripts for units\nValue('300mm^2/ps')  # 3e+08 m²s⁻¹\n```\n\nSupports converting units with powers such as:\n\n```python\nfrom sibase import Value\n\nValue('-21 ps^2/km')  #  -2.1e-26 s^2/m\nValue('17 ps/nm/km')  #  1.7e-05 s/m^2\n\n# dB, dBm and Np (Nepers) are special units\nValue('20 dB/km')  # 0.1 /m \nValue('2.3 km/Np')  # ~10.05 m \nValue('-20 dB') @ 'dBm'  # 10.0\nValue('0.2 dB/km') @ 'Np/m'  # -3.43\n\n# More special units can be added\nfrom sibase import set_special_unit\n\nset_special_unit(\n    'log',  # name of unit \n    lambda x, _math: _math.log(x),  # function to convert to SI base  \n    lambda x, _math: _math.exp(x)   # inverse of above\n)\n# Note: _math will depend on instance of x, it could be python's math module or numpy or jax.numpy\nValue('10 log') # 2.30258509 \nValue('2.3') @ 'log' # ~10 \nValue('1π')  # 3.14159265 ( π treated as special unit )\n\n```\n\nNumpy, probably could also applied for other libraries\n\n```python\nfrom sibase import to_base, Unit\nimport numpy as np\n\nnp_array = np.array([...])\n# Convert from nonstandard:\nsi_array = to_base(np_array, 'km/s')\n\n# Convert to other units\nnot_base_array = Unit('km/s').convert(si_array)\n# shorthand method (will not work other way around for numpy arrays):\nnot_base_array = Unit('km/s') @ si_array\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zceemja/si-base",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sibase",
    "package_url": "https://pypi.org/project/sibase/",
    "platform": null,
    "project_url": "https://pypi.org/project/sibase/",
    "project_urls": {
      "Homepage": "https://github.com/zceemja/si-base"
    },
    "release_url": "https://pypi.org/project/sibase/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A basic python package that converts numerical strings with units to base units",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14653855,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e6e3ee525d7541c66bb593ce47f4863d5c61444ec268f58bddd550262dd2344",
          "md5": "6890ba4a44a88c4e39d2cd0c82892815",
          "sha256": "63b1935759d2caa2ff19247629bd84fb30a888b4269c5729339d5d395205d4e3"
        },
        "downloads": -1,
        "filename": "sibase-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6890ba4a44a88c4e39d2cd0c82892815",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5269,
        "upload_time": "2021-11-03T11:44:03",
        "upload_time_iso_8601": "2021-11-03T11:44:03.862215Z",
        "url": "https://files.pythonhosted.org/packages/7e/6e/3ee525d7541c66bb593ce47f4863d5c61444ec268f58bddd550262dd2344/sibase-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a87ea53fed94cb7e631c80224ce999688508252d2d8920499873b646450386ed",
          "md5": "711e613744049faaeb486b545655912b",
          "sha256": "9fc43e9863212f82cd780e0e79f972204f4b52e1f08d909c0c632ea9bae217bb"
        },
        "downloads": -1,
        "filename": "sibase-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "711e613744049faaeb486b545655912b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6554,
        "upload_time": "2021-12-24T12:05:33",
        "upload_time_iso_8601": "2021-12-24T12:05:33.444194Z",
        "url": "https://files.pythonhosted.org/packages/a8/7e/a53fed94cb7e631c80224ce999688508252d2d8920499873b646450386ed/sibase-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "427c38dba18708071d0af90bde4a99094e34f0a370d735a7d14b5d032a1d7c46",
          "md5": "834b8022665adee4fb5f736d9e754775",
          "sha256": "f4eae4ec29499746c1b4c361007b76bc4e23fe1974ef0c927b007624a026c174"
        },
        "downloads": -1,
        "filename": "sibase-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "834b8022665adee4fb5f736d9e754775",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6872,
        "upload_time": "2022-08-04T14:46:04",
        "upload_time_iso_8601": "2022-08-04T14:46:04.822678Z",
        "url": "https://files.pythonhosted.org/packages/42/7c/38dba18708071d0af90bde4a99094e34f0a370d735a7d14b5d032a1d7c46/sibase-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "427c38dba18708071d0af90bde4a99094e34f0a370d735a7d14b5d032a1d7c46",
        "md5": "834b8022665adee4fb5f736d9e754775",
        "sha256": "f4eae4ec29499746c1b4c361007b76bc4e23fe1974ef0c927b007624a026c174"
      },
      "downloads": -1,
      "filename": "sibase-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "834b8022665adee4fb5f736d9e754775",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6872,
      "upload_time": "2022-08-04T14:46:04",
      "upload_time_iso_8601": "2022-08-04T14:46:04.822678Z",
      "url": "https://files.pythonhosted.org/packages/42/7c/38dba18708071d0af90bde4a99094e34f0a370d735a7d14b5d032a1d7c46/sibase-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}