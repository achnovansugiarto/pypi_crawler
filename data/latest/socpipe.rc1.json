{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# overview\n`soctype` provides very simple ways of inter-process communication.  \nThis only uses `socket`,`json`, and `threading` internally, which are standard modules.  \n# installation\n`pip install socpipe` or `pip3 install socpipe`  \n# usage\nFirst, please define some functions like below:  \n```\n# in process1\n\ndef add(a,b):\n  return a+b\n```\nThen, please create `ApiServer` instance and make your APIs visible to other processes.  \n```\n# in process1\n\nfrom socpipe import *\napi=ApiServer(apis=[add])\napi.publish(port=50007)\n\nwhile True:\n  pass\n```\nwhere `port` is the port number that will be used by `socket` internally, and you can set whatever number you like.  \nAfter `api.publish` is executed, a new thread will be generated and wait for connections.  \nSo you need to prevent process1 from exiting by `while True` or setting `run_forever` parameter of `publish` True.  \n\nLet's move on to process2.  \nAll you have to do is to connect process1 by creating `ApiClient` instance.\n```\n# in process2\n\nfrom socpipe import *\napi=ApiCient(port=50007)\nprint(api.add(1,2))\n# 3 will be displayed\n```\nBy the way, `publish` and `ApiClient` also has a parameter `host`, so you can communicate with remote hosts by setting this parameter.  \nI haven't tested this function, though.\n# 概要\n`socpipe`はプロセス間通信のための大変シンプルな関数を提供します。  \nこのモジュールは内部で標準モジュールである`socket`,`json`,`threading`のみを使用しています。  \n# インストール\n`pip install socpipe` または `pip3 install socpipe`  \n# 使い方\nまず、次のように適当な関数を定義して下さい。  \n```\n# in process1\n\ndef add(a,b):\n  return a+b\n```\nそして、`ApiServer`インスタンスを作り、あなたのAPIを他のプロセスに公開します。  \n```\n# in process1\n\nfrom socpipe import *\napi=ApiServer(apis=[add])\napi.publish(port=50007)\n\nwhile True:\n  pass\n```\nここで、`port`は内部で`socket`によって使われるポート番号であり、好きな番号をセットして構いません。  \n`api.publish`が実行されると、新しいスレッドが生成され他のプロセスからの接続を待つようになります。  \nよって、process1が終了してしまわないように、`while True`を付け足すか、または`publish`の`run_forever`引数をTrueにセットする必要があります。  \n\nprocess2に移りましょう。\n`ApiClient`インスタンスを作ってprocess1に接続するだけです。  \n```\n# in process2\n\nfrom socpipe import *\napi=ApiCient(port=50007)\nprint(api.add(1,2))\n# 3 will be displayed\n```\nところで、`publish`と`ApiClient`は`host`という引数も持っており、これをセットすることでリモートホストと通信することが出来ます。  \nただ、この機能は未テストです。",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kana-lab/socpipe/",
    "keywords": "inter-process,multi process,communication,マルチプロセス,プロセス間通信,rpc",
    "license": "",
    "maintainer": "R. Nakano",
    "maintainer_email": "yukiakari@ichigo.me",
    "name": "socpipe",
    "package_url": "https://pypi.org/project/socpipe/",
    "platform": "",
    "project_url": "https://pypi.org/project/socpipe/",
    "project_urls": {
      "Homepage": "https://github.com/kana-lab/socpipe/"
    },
    "release_url": "https://pypi.org/project/socpipe/0.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.6, <4",
    "summary": "very simple way of inter-process communication",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9833327,
  "releases": {
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a89c44ed4055cba7c18a8775cf6816d1b7b76c3945056a1787956ae49ffd530f",
          "md5": "a9488917556f94cf4edb5160191fb00f",
          "sha256": "d95b3d9d5df0d80ab025cd9916dbb7317321d4be2730254d1b3cf8f5b1f54d1e"
        },
        "downloads": -1,
        "filename": "socpipe-0.0.6.zip",
        "has_sig": false,
        "md5_digest": "a9488917556f94cf4edb5160191fb00f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 9748,
        "upload_time": "2021-03-21T05:16:42",
        "upload_time_iso_8601": "2021-03-21T05:16:42.315584Z",
        "url": "https://files.pythonhosted.org/packages/a8/9c/44ed4055cba7c18a8775cf6816d1b7b76c3945056a1787956ae49ffd530f/socpipe-0.0.6.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a89c44ed4055cba7c18a8775cf6816d1b7b76c3945056a1787956ae49ffd530f",
        "md5": "a9488917556f94cf4edb5160191fb00f",
        "sha256": "d95b3d9d5df0d80ab025cd9916dbb7317321d4be2730254d1b3cf8f5b1f54d1e"
      },
      "downloads": -1,
      "filename": "socpipe-0.0.6.zip",
      "has_sig": false,
      "md5_digest": "a9488917556f94cf4edb5160191fb00f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 9748,
      "upload_time": "2021-03-21T05:16:42",
      "upload_time_iso_8601": "2021-03-21T05:16:42.315584Z",
      "url": "https://files.pythonhosted.org/packages/a8/9c/44ed4055cba7c18a8775cf6816d1b7b76c3945056a1787956ae49ffd530f/socpipe-0.0.6.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}