{
  "info": {
    "author": "eterna2",
    "author_email": "eterna2@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# kfx\n\n[![PyPI version](https://badge.fury.io/py/kfx.svg)](https://badge.fury.io/py/kfx)\n[![Build Status](https://travis-ci.org/e2fyi/kfx.svg?branch=master)](https://travis-ci.org/e2fyi/kfx)\n[![Coverage Status](https://coveralls.io/repos/github/e2fyi/kfx/badge.svg?branch=master)](https://coveralls.io/github/e2fyi/kfx?branch=master)\n[![Documentation Status](https://readthedocs.org/projects/kfx/badge/?version=latest)](https://kfx.readthedocs.io/en/latest/?badge=latest)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Downloads](https://pepy.tech/badge/kfx/month)](https://pepy.tech/project/kfx/month)\n\n`kfx` is a python package with the namespace `kfx`. Currently, it provides the\nfollowing sub-packages\n\n- `kfx.lib.dsl` - Extensions to the kubeflow pipeline dsl.\n\n- `kfx.lib.vis` - Data models and helpers to help generate the  `mlpipeline-metrics.json` and `mlpipeline-ui-metadata.json` required to render visualization in the kubeflow pipeline UI. See also https://www.kubeflow.org/docs/pipelines/sdk/pipelines-metrics/ and https://www.kubeflow.org/docs/pipelines/sdk/output-viewer/\n\n> - Documentation: [https://kfx.readthedocs.io](https://kfx.readthedocs.io).\n> - Repo: [https://github.com/e2fyi/kfx](https://github.com/e2fyi/kfx)\n\n> ### NOTE this is currently alpha\n>\n> There will likely to have breaking changes, and feel free to do a feature request\n>\n> ### Known issues\n>\n> - `kfx.vis.vega.vega_web_app` and `KfpArtifact` does not work well together (see example) because of CORs - the web app is hosted inside an iFrame which prevents it from accessing the `ml-pipeline-ui` API server.\n> - `kfx.vis.vega.vega_web_app` is only supported in the latest kubeflow pipeline UI (as inline is only supported after `0.2.5`)\n\n### Changelog\n\nRefer to [CHANGELOG.md](./CHANGELOG.md).\n\n## Quick start\n\nInstallation\n\n```bash\npip install kfx\n```\n\n## Usage\n\nExample: Using `ContainerOpTransform` to configure the internal k8s properties\nof kubeflow pipelines tasks.\n\n> `kfx.dsl.ContainerOpTransform` is a helper to modify the interal k8s properties\n> (e.g. resources, environment variables, etc) of kubeflow pipeline tasks.\n\n```python\nimport kfp.components\nimport kfp.dsl\nimport kfx.dsl\n\ntransforms = (\n    kfx.dsl.ContainerOpTransform()\n    .set_resources(cpu=\"500m\", memory=(\"1G\", \"4G\"))\n    .set_image_pull_policy(\"Always\")\n    .set_env_vars({\"ENV\": \"production\"})\n    .set_env_var_from_secret(\"AWS_ACCESS_KEY\", secret_name=\"aws\", secret_key=\"access_key\")\n    .set_annotations({\"iam.amazonaws.com/role\": \"some-arn\"})\n)\n\n\n@kfp.dsl.components.func_to_container_op\ndef echo(text: str) -> str:\n    print(text)\n    return text\n\n\n@kfp.dsl.pipeline(name=\"demo\")\ndef pipeline(text: str):\n    op1 = echo(text)\n    op2 = echo(\"%s-%s\" % text)\n\n    # u can apply the transform on op1 only\n    # op1.apply(transforms)\n\n    # or apply on all ops in the pipeline\n    kfp.dsl.get_pipeline_conf().add_op_transformer(transforms)\n\n```\n\nExample: Using `ArtifactLocationHelper` and `KfpArtifact` to determine the\nuri of your data artifact generated by the kubeflow pipeline task.\n\n> `kfx.dsl.ArtifactLocationHelper` is a helper to modify the kubeflow pipeline task\n> so that you can use `kfx.dsl.KfpArtifact` to represent the artifact generated\n> inside the task.\n\n```python\nimport kfp.components\nimport kfp.dsl\nimport kfx.dsl\n\n\n# creates the helper that has the argo configs (tells you how artifacts will be stored)\n# see https://github.com/argoproj/argo/blob/master/docs/workflow-controller-configmap.yaml\nhelper = kfx.dsl.ArtifactLocationHelper(\n    scheme=\"minio\", bucket=\"mlpipeline\", key_prefix=\"artifacts/\"\n)\n\n@kfp.components.func_to_container_op\ndef test_op(\n    mlpipeline_ui_metadata: OutputTextFile(str), markdown_data_file: OutputTextFile(str)\n):\n    \"A test kubeflow pipeline task.\"\n\n    import json\n\n    import kfx.dsl\n    import kfx.vis\n    import kfx.vis.vega\n\n    # `KfpArtifact` provides the reference to data artifact created\n    # inside this task\n    spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v4.json\",\n        \"description\": \"A simple bar chart\",\n        \"data\": {\n            \"values\": [\n                {\"a\": \"A\", \"b\": 28},\n                {\"a\": \"B\", \"b\": 55},\n                {\"a\": \"C\", \"b\": 43},\n                {\"a\": \"D\", \"b\": 91},\n                {\"a\": \"E\", \"b\": 81},\n                {\"a\": \"F\", \"b\": 53},\n                {\"a\": \"G\", \"b\": 19},\n                {\"a\": \"H\", \"b\": 87},\n                {\"a\": \"I\", \"b\": 52},\n            ]\n        },\n        \"mark\": \"bar\",\n        \"encoding\": {\n            \"x\": {\"field\": \"a\", \"type\": \"ordinal\"},\n            \"y\": {\"field\": \"b\", \"type\": \"quantitative\"},\n        },\n    }\n\n    # write the markdown to the `markdown-data` artifact\n    markdown_data_file.write(\"### hello world\")\n\n    # creates an ui metadata object\n    ui_metadata = kfx.vis.kfp_ui_metadata(\n        # Describes the vis to generate in the kubeflow pipeline UI.\n        [\n            # markdown vis from a markdown artifact.\n            # `KfpArtifact` provides the reference to data artifact created\n            # inside this task\n            kfx.vis.markdown(kfx.dsl.KfpArtifact(\"markdown_data_file\")),\n            # a vega web app from the vega data artifact.\n            kfx.vis.vega.vega_web_app(spec),\n        ]\n    )\n\n    # writes the ui metadata object as the `mlpipeline-ui-metadata` artifact\n    mlpipeline_ui_metadata.write(kfx.vis.asjson(ui_metadata))\n\n    # prints the uri to the markdown artifact\n    print(ui_metadata.outputs[0].source)\n\n\n@kfp.dsl.pipeline()\ndef test_pipeline():\n    \"A test kubeflow pipeline\"\n\n    op: kfp.dsl.ContainerOp = test_op()\n\n    # modify kfp operator with artifact location metadata through env vars\n    op.apply(helper.set_envs())\n\n```\n\nExample: Using `pydantic` data models to generate `mlpipeline-metrics.json` and\n`mlpipeline-ui-metadata.json`.\n\n(See also https://www.kubeflow.org/docs/pipelines/sdk/output-viewer/ and\nhttps://www.kubeflow.org/docs/pipelines/sdk/pipelines-metrics/).\n\n> `kfx.vis` has helper functions (with corresponding hints) to describe and\n> create `mlpipeline-metrics.json` and `mlpipeline-ui-metadata.json` files\n> (required by kubeflow pipeline UI to render any metrics or visualizations).\n\n```python\nimport functools\n\nimport kfp.components\n\n\n# install kfx\nkfx_component = functools.partial(kfp.components.func_to_container_op, packages_to_install=[\"kfx\"])\n\n\n@kfx_component\ndef some_op(\n    # mlpipeline_metrics is a path - i.e. open(mlpipeline_metrics, \"w\")\n    mlpipeline_metrics: kfp.components.OutputPath(str),\n    # mlpipeline_ui_metadata is a FileLike obj - i.e. mlpipeline_ui_metadata.write(\"something\")\n    mlpipeline_ui_metadata: kfp.components.OutputTextFile(str),\n):\n    \"kfp operator that provides metrics and metadata for visualizations.\"\n\n    # import inside kfp task\n    import kfx.vis\n\n    # output metrics to mlpipeline_metrics path\n    kfx.vis.kfp_metrics([\n        # render as percent\n        kfx.vis.kfp_metric(\"recall-score\", 0.9, percent=true),\n        # override metric format with custom value\n        kfx.vis.kfp_metric(name=\"percision-score\", value=0.8, metric_format=\"PERCENTAGE\"),\n        # render raw score\n        kfx.vis.kfp_metric(\"raw-score\", 123.45),\n    ]).write_to(mlpipeline_metrics)\n\n    # output visualization metadata to mlpipeline_ui_metadata obj\n    kfx.vis.kfp_ui_metadata(\n        [\n            # creates a confusion matrix vis\n            kfx.vis.confusion_matrix(\n                source=\"gs://your_project/your_bucket/your_cm_file\",\n                labels=[\"True\", \"False\"],\n            ),\n            # creates a markdown with inline source\n            kfx.vis.markdown(\n                \"# Inline Markdown: [A link](https://www.kubeflow.org/)\",\n                storage=\"inline\",\n            ),\n            # creates a markdown with a remote source\n            kfx.vis.markdown(\n                \"gs://your_project/your_bucket/your_markdown_file\",\n            ),\n            # creates a ROC curve with a remote source\n            kfx.vis.roc(\n                \"gs://your_project/your_bucket/your_roc_file\",\n            ),\n            # creates a Table with a remote source\n            kfx.vis.table(\n                \"gs://your_project/your_bucket/your_csv_file\",\n                header=[\"col1\", \"col2\"],\n            ),\n            # creates a tensorboard viewer\n            kfx.vis.tensorboard(\n                \"gs://your_project/your_bucket/logs/*\",\n            ),\n            # creates a custom web app from a remote html file\n            kfx.vis.web_app(\n                \"gs://your_project/your_bucket/your_html_file\",\n            ),\n            # creates a Vega-Lite vis as a web app\n            kfx.vis.vega.vega_web_app(spec={\n                \"$schema\": \"https://vega.github.io/schema/vega-lite/v4.json\",\n                \"description\": \"A simple bar chart with embedded data.\",\n                \"data\": {\n                    \"values\": [\n                        {\"a\": \"A\", \"b\": 28}, {\"a\": \"B\", \"b\": 55}, {\"a\": \"C\", \"b\": 43},\n                        {\"a\": \"D\", \"b\": 91}, {\"a\": \"E\", \"b\": 81}, {\"a\": \"F\", \"b\": 53},\n                        {\"a\": \"G\", \"b\": 19}, {\"a\": \"H\", \"b\": 87}, {\"a\": \"I\", \"b\": 52}\n                    ]\n                },\n                \"mark\": \"bar\",\n                \"encoding\": {\n                    \"x\": {\"field\": \"a\", \"type\": \"ordinal\"},\n                    \"y\": {\"field\": \"b\", \"type\": \"quantitative\"}\n                }\n            })\n        ]\n    ).write_to(mlpipeline_ui_metadata)\n```\n\n## Developer guide\n\nThis project used:\n\n- isort: to manage import order\n- pylint: to manage general coding best practices\n- flake8: to manage code complexity and coding best practices\n- black: to manage formats and styles\n- pydocstyle: to manage docstr style/format\n- pytest/coverage: to manage unit tests and code coverage\n- bandit: to find common security issues\n- pyenv: to manage dev env: python version (3.6)\n- pipenv: to manage dev env: python packages\n\nConvention for unit tests are to suffix with `_test` and colocate with the actual\npython module - i.e. `<module_name>_test.py`.\n\nThe version of the package is read from `version.txt` - i.e. please update the\nappropriate semantic version (major -> breaking changes, minor -> new features, patch -> bug fix, postfix -> pre-release/post-release).\n\n### `Makefile`:\n\n```bash\n# autoformat codes with docformatter, isort, and black\nmake format\n\n# check style, formats, and code complexity\nmake check\n\n# check style, formats, code complexity, and run unit tests\nmake test\n\n# test everything including building the package and check the sdist\nmake test-all\n\n# run unit test only\nmake test-only\n\n# generate and update the requirements.txt and requirements-dev.txt\nmake requirements\n\n# generate the docs with sphinx and autoapi extension\nmake docs\n\n# generate distributions\nmake dists\n\n# publish to pypi with twine (twine must be configured)\nmake publish\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/e2fyi/kfx",
    "keywords": "kfx,kubeflow,pipelines,contrib,sdk",
    "license": "Apache-2.0",
    "maintainer": "eterna2",
    "maintainer_email": "eterna2@hotmail.com",
    "name": "kfx",
    "package_url": "https://pypi.org/project/kfx/",
    "platform": "",
    "project_url": "https://pypi.org/project/kfx/",
    "project_urls": {
      "Changelog": "https://github.com/e2fyi/kfx/blob/master/CHANGELOG.md",
      "Documentation": "https://kfx.readthedocs.io/en/latest/",
      "Homepage": "https://github.com/e2fyi/kfx",
      "Repository": "https://github.com/e2fyi/kfx"
    },
    "release_url": "https://pypi.org/project/kfx/0.1.0/",
    "requires_dist": [
      "typing-extensions",
      "kfp (>=0.2.0,<2)",
      "pydantic (>=1.0.0,<2.0.0)"
    ],
    "requires_python": ">=3.6,<4",
    "summary": "Extensions for kubeflow pipeline sdk.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10597008,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6594c29292f659086ebf1e17aa3b3a92a73cf1cf74ca731cf5d16259079d2a1c",
          "md5": "d21682081fc23b3991351655e8e33829",
          "sha256": "f566d7787ed0c93763c9f08192ae803a243ca8d3ef9aaa53715378eea71a910b"
        },
        "downloads": -1,
        "filename": "kfx-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d21682081fc23b3991351655e8e33829",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4",
        "size": 21601,
        "upload_time": "2021-06-09T05:55:49",
        "upload_time_iso_8601": "2021-06-09T05:55:49.542819Z",
        "url": "https://files.pythonhosted.org/packages/65/94/c29292f659086ebf1e17aa3b3a92a73cf1cf74ca731cf5d16259079d2a1c/kfx-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9315c4619eb357f3888a7c7a3dd67c286cd8be2df4a7e5ced40127d70eac2b1c",
          "md5": "a66e86919dac66d837ea1e7214c2dfc5",
          "sha256": "47f1b78de23c5beba3761a6a1679f87a896482543da2aeb62fce9c7323a89fa3"
        },
        "downloads": -1,
        "filename": "kfx-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a66e86919dac66d837ea1e7214c2dfc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 21273,
        "upload_time": "2021-06-09T05:55:51",
        "upload_time_iso_8601": "2021-06-09T05:55:51.066286Z",
        "url": "https://files.pythonhosted.org/packages/93/15/c4619eb357f3888a7c7a3dd67c286cd8be2df4a7e5ced40127d70eac2b1c/kfx-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca30a1479c43fc0ae3593bd9e93e3f36d803f1e6e021b61aa584001d2fad2786",
          "md5": "b5e5218866e50c94dda5aaef078b7629",
          "sha256": "24e3bea254b5454d165c3b4bd492766448a39b4b7af4cbfe47599f178fbdf048"
        },
        "downloads": -1,
        "filename": "kfx-0.1.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "b5e5218866e50c94dda5aaef078b7629",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12698,
        "upload_time": "2020-02-29T04:04:25",
        "upload_time_iso_8601": "2020-02-29T04:04:25.525307Z",
        "url": "https://files.pythonhosted.org/packages/ca/30/a1479c43fc0ae3593bd9e93e3f36d803f1e6e021b61aa584001d2fad2786/kfx-0.1.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "489be476f83e483beb7e14292790facbfb44e7df72f07f1f65e1b7e962ce1a39",
          "md5": "d92c47b7a90dc21b006cc69cca5e75ca",
          "sha256": "5bb7ee7914b815859dfcb0a8d3aa38bdc0418f9aab79fda8475f8c08eee55ce9"
        },
        "downloads": -1,
        "filename": "kfx-0.1.0a2.tar.gz",
        "has_sig": false,
        "md5_digest": "d92c47b7a90dc21b006cc69cca5e75ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15123,
        "upload_time": "2020-03-01T13:25:27",
        "upload_time_iso_8601": "2020-03-01T13:25:27.146789Z",
        "url": "https://files.pythonhosted.org/packages/48/9b/e476f83e483beb7e14292790facbfb44e7df72f07f1f65e1b7e962ce1a39/kfx-0.1.0a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0a3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3ce460f6a0a6007d1d4b34e7bd6789162bad33663f96bcc5e557247e7866e07",
          "md5": "21364e39fa78b84466cf6f59d05d7cd0",
          "sha256": "ce93c6a0a6675c264ba75a580c060395f13777d059001929861b3f3cde7f16f1"
        },
        "downloads": -1,
        "filename": "kfx-0.1.0a3.tar.gz",
        "has_sig": false,
        "md5_digest": "21364e39fa78b84466cf6f59d05d7cd0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17656,
        "upload_time": "2020-03-02T13:27:41",
        "upload_time_iso_8601": "2020-03-02T13:27:41.677213Z",
        "url": "https://files.pythonhosted.org/packages/e3/ce/460f6a0a6007d1d4b34e7bd6789162bad33663f96bcc5e557247e7866e07/kfx-0.1.0a3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0a4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dea2b46f410bdef0fa05cdb31116d903db06b1b378da3333221af3ac4ae40978",
          "md5": "76f907b27d88187766cfee41e779fe0b",
          "sha256": "946e1a8f186ed9f76af6c4b76790f5d8bbd11918f4d93aa82a644916b8a1a058"
        },
        "downloads": -1,
        "filename": "kfx-0.1.0a4.tar.gz",
        "has_sig": false,
        "md5_digest": "76f907b27d88187766cfee41e779fe0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18451,
        "upload_time": "2020-03-02T16:25:17",
        "upload_time_iso_8601": "2020-03-02T16:25:17.871298Z",
        "url": "https://files.pythonhosted.org/packages/de/a2/b46f410bdef0fa05cdb31116d903db06b1b378da3333221af3ac4ae40978/kfx-0.1.0a4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0a5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e94ae75f88139acef73dd5d17196e59028d6df20bae511d4f969e822cae6fbf",
          "md5": "b0ec00edaf8c64b974c037c31592800f",
          "sha256": "81ac61a03282bd20f811914ef29080143e66f0a6eba9bb92ed45b441f69b0d93"
        },
        "downloads": -1,
        "filename": "kfx-0.1.0a5.tar.gz",
        "has_sig": false,
        "md5_digest": "b0ec00edaf8c64b974c037c31592800f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19804,
        "upload_time": "2020-03-23T04:30:45",
        "upload_time_iso_8601": "2020-03-23T04:30:45.767887Z",
        "url": "https://files.pythonhosted.org/packages/4e/94/ae75f88139acef73dd5d17196e59028d6df20bae511d4f969e822cae6fbf/kfx-0.1.0a5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0a6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d60a5af26ac7181fd97f7e59dd6c09e17905e12f2e6cad28363250602ac62514",
          "md5": "e1903ed92342a758a34787d44c83f406",
          "sha256": "d01c171bf084c586960c4a3bc1a3a6e73c5cde1031ad0349ca3d3e2fc96f1291"
        },
        "downloads": -1,
        "filename": "kfx-0.1.0a6.tar.gz",
        "has_sig": false,
        "md5_digest": "e1903ed92342a758a34787d44c83f406",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20325,
        "upload_time": "2020-03-23T10:38:21",
        "upload_time_iso_8601": "2020-03-23T10:38:21.880034Z",
        "url": "https://files.pythonhosted.org/packages/d6/0a/5af26ac7181fd97f7e59dd6c09e17905e12f2e6cad28363250602ac62514/kfx-0.1.0a6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0a7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe103dc8b2ed72f13e44dcfb9a008644f1fdbd25cb98fbbe8d7f0478a5b5a1f3",
          "md5": "6c18f7c968b2ae3bf95305c375df858b",
          "sha256": "2f7f3e0c946e703cad5c0742f3376fe4162102ed5faf90c1aadd191bae2f9727"
        },
        "downloads": -1,
        "filename": "kfx-0.1.0a7.tar.gz",
        "has_sig": false,
        "md5_digest": "6c18f7c968b2ae3bf95305c375df858b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24145,
        "upload_time": "2020-04-23T13:04:54",
        "upload_time_iso_8601": "2020-04-23T13:04:54.775276Z",
        "url": "https://files.pythonhosted.org/packages/fe/10/3dc8b2ed72f13e44dcfb9a008644f1fdbd25cb98fbbe8d7f0478a5b5a1f3/kfx-0.1.0a7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6594c29292f659086ebf1e17aa3b3a92a73cf1cf74ca731cf5d16259079d2a1c",
        "md5": "d21682081fc23b3991351655e8e33829",
        "sha256": "f566d7787ed0c93763c9f08192ae803a243ca8d3ef9aaa53715378eea71a910b"
      },
      "downloads": -1,
      "filename": "kfx-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d21682081fc23b3991351655e8e33829",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4",
      "size": 21601,
      "upload_time": "2021-06-09T05:55:49",
      "upload_time_iso_8601": "2021-06-09T05:55:49.542819Z",
      "url": "https://files.pythonhosted.org/packages/65/94/c29292f659086ebf1e17aa3b3a92a73cf1cf74ca731cf5d16259079d2a1c/kfx-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9315c4619eb357f3888a7c7a3dd67c286cd8be2df4a7e5ced40127d70eac2b1c",
        "md5": "a66e86919dac66d837ea1e7214c2dfc5",
        "sha256": "47f1b78de23c5beba3761a6a1679f87a896482543da2aeb62fce9c7323a89fa3"
      },
      "downloads": -1,
      "filename": "kfx-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a66e86919dac66d837ea1e7214c2dfc5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4",
      "size": 21273,
      "upload_time": "2021-06-09T05:55:51",
      "upload_time_iso_8601": "2021-06-09T05:55:51.066286Z",
      "url": "https://files.pythonhosted.org/packages/93/15/c4619eb357f3888a7c7a3dd67c286cd8be2df4a7e5ced40127d70eac2b1c/kfx-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}