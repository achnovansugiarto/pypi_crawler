{
  "info": {
    "author": "Lukas Schulte-Tickmann",
    "author_email": "github@das-it-gesicht.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Communications :: Email :: Post-Office :: IMAP",
      "Topic :: Utilities"
    ],
    "description": "# pymap-copy\n[![donate](https://img.shields.io/badge/donate-PayPal-blue.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=KPG2MY37LCC24&source=url)\n[![PyPI version](https://badge.fury.io/py/pymap-copy.svg)](https://badge.fury.io/py/pymap-copy)\n[![release](https://img.shields.io/github/v/release/schluggi/pymap-copy.svg)](https://github.com/Schluggi/pymap-copy/releases/latest)\n[![license](https://img.shields.io/badge/license-MIT-yellow.svg)](https://github.com/Schluggi/pymap-copy/blob/master/LICENSE.txt)\n\nIn our company we often have to copy mailboxes from one to another server. For this we used \n[IMAPCopy](http://www.ardiehl.de/imapcopy/) as so far. Due to compatibility issues, first of all the missing \nSSL/TLS and STARTTLS support i wrote my own python-based version. I hope you like it!\n\n## Features\n- Copies folders and subfolders\n- Copies mails even with flags (seen, answered, ...)\n- Connecting via SSL/TLS (by default), STARTTLS or without encryption\n- Supports incremental copy (copies only new mails/folders)\n- User specific redirections (with wildcard support)\n- Auto subscribe new folders (by default)\n- Auto find the special IMAP folders Drafts, Trash, etc. (by default)  \n- Quota checking (by default)\n- Over all progress bar\n- Uses buffer for max performance\n- Optimized for large mailboxes\n- Workaround for Microsoft Exchange Server's IMAP bug \n- Statistics\n- Simple usage\n    \n## Requirements\n- Python >= 3.6\n\n## Installation\n### pip (recommended)\n1. Install pymap-copy: `python3 -m pip install pymap-copy`\n2. Start the program:`pymap-copy.py --help`\n> **Upgrade**: `python3 -m pip install --upgrade pymap-copy`\n\n### whl / release\n1. Download the latest [release](https://github.com/Schluggi/pymap-copy/releases/latest)\n2. Install the wheel-file: `python3 -m pip install pymap_copy-X.X-py3-none-any.whl`\n3. Start the program:`pymap-copy.py --help`\n> **Upgrade**: Simply install a newer release\n \n### git\n1. Clone this repo\n2. Install the requirements by running `python3 -m pip install -r requirements.txt` \n3. Start the program:`./pymap-copy.py --help` \n> **Upgrade**: `git pull`\n\n## Simple usage\nBy running the following command the whole structure (folders & mails) from user1 will be copy to the mailbox of user2. \n```\npymap-copy.py \\\n--source-user=user1 \\\n--source-server=server1.example.org \\\n--source-pass=2345678 \\\n--destination-user=user2 \\\n--destination-server=server2.example.info \\\n--destination-pass=abcdef\n```\nIf you just want to look what would happen append `-d`/`--dry-run`.\n\n### Incorrect login\nIf your password has special characters (like `!`, `$`, `#`, ...) in it, you have to quote them with a backslash (`\\`)\nin front. This is a common mistake ([#8](https://github.com/Schluggi/pymap-copy/issues/8)).\n\n### Redirections and destination root\n#### Redirections\nYou want to merge `INBOX.Send Items` with the `INBOX.Send` folder? You can do this with `-r`/`--redirect`.\nThe syntax of this argument is simple `source:destination`. For this example you can use \n`-r \"INBOX.Send Items:INBOX.Send\"` to put all mails from the source folder `INBOX.Send Items` the to destination folder \n`INBOX.Send`. Please make sure you use quotation marks if one of the folders includes a special character or space like \nas in this example. In addition, the folder names must be case-sensitive with the correct seperator. Do a dry run \n(`-d`/`--dry-run`) to check that everything will redirect correctly. \n\n#### Destination root\nIn some cases it's necessary to copy all mails from source into an import folder on destination. In this case you can \nuse `--destination-root` to define the import folder: `--destination-root INBOX.Import`. \n\nSpecial case: The source has another root than the destination.\n```\nCurrent folder: INBOX (144 mails, 49.0 MB) -> INBOX (non existing)\nCurrent folder: INBOX.Folder1 (4 mails, 7.2 MB) -> INBOX.Folder1 (non existing)\nCurrent folder: Trash.Folder1 (22 mails, 1.1 MB) -> Trash.Folder1 (non existing)\n``` \nThis often does not work. Most mail providers do not allow folders parallel to `INBOX`. \n\nIf you want to merge all folders into `INBOX` you can use `--destination-root INBOX --destination-root-merge`. The \nresult should be as shown:\n```\nCurrent folder: INBOX (144 mails, 49.0 MB) -> INBOX (non existing)\nCurrent folder: INBOX.Folder1 (4 mails, 7.2 MB) -> INBOX.Folder1 (non existing)\nCurrent folder: Trash.Folder1 (22 mails, 1.1 MB) -> INBOX.Trash.Folder1 (non existing)\n```\n\nWithout `--destination-root-merge` `INBOX` would be prepend to all folders:\n```\nCurrent folder: INBOX (144 mails, 49.0 MB) -> INBOX.INBOX (non existing)\nCurrent folder: INBOX.Folder1 (4 mails, 7.2 MB) -> INBOX.INBOX.Folder1 (non existing)\nCurrent folder: Trash.Folder1 (22 mails, 1.1 MB) -> INBOX.Trash.Folder1 (non existing)\n```\n\nAs always: Do a dry run (`-d`/`--dry-run`) to ensure that everything is going well. \n\n\n### Performance optimization\nYou could change the buffer size with `-b`/`--buffer-size` to increase the download speed from the source. \nIf you know the source mailbox has a lot of small mails use a higher size. In the case of lager mails use a lower size \nto counter timeouts. For bad internet connections you also should use a lower sized buffer.\n\n### Preventing timeouts\nTo prevent timeouts, both server (the source and destination) will automatically be set into the IMAP idle mode. Most \nservers can hold this idle mode for 30 minutes. The idle mode restarts every 28 minutes (1680 seconds) so there should \nbe no timeout. If a timeout occurs nevertheless you can change the restart interval by using `--idle-interval` followed\nby the desired number of seconds.\n\n#### Use of source-folder argument\nAs a further optimization you can target specific folders you want to copy to the destination (versus the default of \neverything). Use `-f` / `--source-folder` to only copy that folder(s). The flag can be specified multiple times to\nindicate multiple folders to copy. The argument does support wildcard by using `*` and the end.\n\n##### Copy only `INBOX`:\n```\n--source-folder INBOX \n```\n\n##### Copy `INBOX.Archives` and all subfolders:\n```\n--source-folder INBOX.Archives.* --source-folder INBOX.Archives\n```\n\nYou can also use this argument but please notice, that all folders started with `INBOX.Archives` (like \n`INBOX.Archives123` and `INBOX.ArchivesNew`) will be copied too (if they exists).\n```\n--source-folder INBOX.Archives*\n``` \n\n## Microsoft Exchange Server IMAP bug \nIf your destination is an Microsoft Exchange Server (EX) you'll properly get an `bad command` exception while coping \nsome mails. This happens because the EX analyse (and in some cases modify) new mails. There is a bug in this lookup\nprocess (since EX version 5 -.-). To prevent an exception you can use the argument `--max-line-length 4096`. This will \nskip all mails with lines more than 4096 characters.\n\nYou got `broken pipe`? This is also an Exchange *feature*. There is a limit of failures (by default three) in \na single connection. Once you reach the limit, the server will disconnect you and pymap-copy will show an error for \neach further mail. Mostly these error occurs because the size of the mail is larger than the max allowed size. The\nbest way is to increase the limit (you need admin access to the server) by following\n[these instructions](https://docs.microsoft.com/en-us/exchange/mail-flow/message-size-limits?view=exchserver-2019).\nYou can also exclude these mails from copy by using the `--max-mail-size` argument.\n\n\n## Encryption & Ports\nBy default pymap-copy will use port 993 with ssl/tls. \nYou can change this behavior by using `--source-encryption`/`--destination-encryption` and \n`--source-port`/`--destination-port`. If no port is specified, it will choose the default port based on given \nencryption.\n\nPossible encryption are `tls`, `ssl` (the same as `tls`), `none` and `starttls`.\n\n**Default ports**\n| Encryption | Port | \n| - | - |\n| `tls` | 993 |\n| `ssl` | 993 |\n| `starttls` | 143 |\n| `none` | 143 | \n\n  \n## Credits \nCreated and maintained by Lukas Schulte-Tickmann / Schluggi.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Schluggi/pymap-copy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymap-copy",
    "package_url": "https://pypi.org/project/pymap-copy/",
    "platform": "",
    "project_url": "https://pypi.org/project/pymap-copy/",
    "project_urls": {
      "Funding": "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=KPG2MY37LCC24&source=url",
      "Homepage": "https://github.com/Schluggi/pymap-copy",
      "Source": "https://github.com/Schluggi/pymap-copy",
      "Tracker": "https://github.com/Schluggi/pymap-copy/issues"
    },
    "release_url": "https://pypi.org/project/pymap-copy/1.0.2/",
    "requires_dist": [
      "chardet",
      "IMAPClient",
      "six"
    ],
    "requires_python": ">=3.6",
    "summary": "Copy and transfer IMAP mailboxes",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11735362,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82686cc98bb50e2ab866dfc907277b3f0170f904dc766f9eba19d5ac061b50f0",
          "md5": "1e402335b24c431f19397dcd2e975ea6",
          "sha256": "8fd26ba558ee2d503c594caa349b83f5e197f5f010e89854d5a402ef199f24be"
        },
        "downloads": -1,
        "filename": "pymap_copy-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e402335b24c431f19397dcd2e975ea6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13377,
        "upload_time": "2021-01-08T18:23:57",
        "upload_time_iso_8601": "2021-01-08T18:23:57.454426Z",
        "url": "https://files.pythonhosted.org/packages/82/68/6cc98bb50e2ab866dfc907277b3f0170f904dc766f9eba19d5ac061b50f0/pymap_copy-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84d412bd5f159a6379294b77af0a8681a74b0309a4787366e1b2bf3a673d7a63",
          "md5": "2008916cdc1c3324f43e8ab40bc80eb5",
          "sha256": "6692e6aefa0581d078219ab21cfa88d0df49a41e0ba0a7c925c0da327588c657"
        },
        "downloads": -1,
        "filename": "pymap_copy-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2008916cdc1c3324f43e8ab40bc80eb5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13490,
        "upload_time": "2021-01-08T19:54:39",
        "upload_time_iso_8601": "2021-01-08T19:54:39.849569Z",
        "url": "https://files.pythonhosted.org/packages/84/d4/12bd5f159a6379294b77af0a8681a74b0309a4787366e1b2bf3a673d7a63/pymap_copy-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81e5a759ad38149b54909b7559ffa55ee3915b41944a0e70e4ab096acaebab1d",
          "md5": "97d3d41a3f5af7abee34e8e4b41c2bdb",
          "sha256": "a704ca6e56f4d5feb2fe7c171500bb9b003d762cfb43aabc753f98e8f2392465"
        },
        "downloads": -1,
        "filename": "pymap_copy-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97d3d41a3f5af7abee34e8e4b41c2bdb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13952,
        "upload_time": "2021-10-15T12:12:50",
        "upload_time_iso_8601": "2021-10-15T12:12:50.055352Z",
        "url": "https://files.pythonhosted.org/packages/81/e5/a759ad38149b54909b7559ffa55ee3915b41944a0e70e4ab096acaebab1d/pymap_copy-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10a93f8002fb882ea70816d08c74a155155ae18c8927625f2c0cc1e49cb8e8a0",
          "md5": "b9978d4373cba9661e887a6a3a945726",
          "sha256": "871a955efb8279ca0c9020c3664b473ca796c47fe0716c7d6b335e2c2ee50907"
        },
        "downloads": -1,
        "filename": "pymap-copy-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b9978d4373cba9661e887a6a3a945726",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16563,
        "upload_time": "2021-10-15T12:12:52",
        "upload_time_iso_8601": "2021-10-15T12:12:52.317092Z",
        "url": "https://files.pythonhosted.org/packages/10/a9/3f8002fb882ea70816d08c74a155155ae18c8927625f2c0cc1e49cb8e8a0/pymap-copy-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "81e5a759ad38149b54909b7559ffa55ee3915b41944a0e70e4ab096acaebab1d",
        "md5": "97d3d41a3f5af7abee34e8e4b41c2bdb",
        "sha256": "a704ca6e56f4d5feb2fe7c171500bb9b003d762cfb43aabc753f98e8f2392465"
      },
      "downloads": -1,
      "filename": "pymap_copy-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "97d3d41a3f5af7abee34e8e4b41c2bdb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13952,
      "upload_time": "2021-10-15T12:12:50",
      "upload_time_iso_8601": "2021-10-15T12:12:50.055352Z",
      "url": "https://files.pythonhosted.org/packages/81/e5/a759ad38149b54909b7559ffa55ee3915b41944a0e70e4ab096acaebab1d/pymap_copy-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10a93f8002fb882ea70816d08c74a155155ae18c8927625f2c0cc1e49cb8e8a0",
        "md5": "b9978d4373cba9661e887a6a3a945726",
        "sha256": "871a955efb8279ca0c9020c3664b473ca796c47fe0716c7d6b335e2c2ee50907"
      },
      "downloads": -1,
      "filename": "pymap-copy-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b9978d4373cba9661e887a6a3a945726",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16563,
      "upload_time": "2021-10-15T12:12:52",
      "upload_time_iso_8601": "2021-10-15T12:12:52.317092Z",
      "url": "https://files.pythonhosted.org/packages/10/a9/3f8002fb882ea70816d08c74a155155ae18c8927625f2c0cc1e49cb8e8a0/pymap-copy-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}