{
  "info": {
    "author": "ChopperCP",
    "author_email": "568624486@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MyCrptool\n\n___\n\nA python package that include commonly used cryptographic algorithm and tools.\n\nThis package is designed as a teaching tool, written in pure python. It means that it probably won't be as efficient as\nother similar python libraries which use C for low-level implementation and provide the same if not more functions.\nHowever, the author try to write clean and simple code to demonstrate how a cryptography algorithm works.\n\nGitHub repository (and newest documentation) : https://github.com/ChopperCP/MyCryptool\n\n# Install\n\n___\n\n    pip install mycrptool\n\n### Problem with bitarray\n\nThis package use `bitarray` as an external library. When installing this library, you may fail to compile.\n\nIf that's the case, you can go to https://www.lfd.uci.edu/~gohlke/pythonlibs/ to download a pre-compiled version\nof `bitarray`, and then simply run:\n\n    pip install downloaded-precompiled-file.whl\n\n# Dependencies\n\n___\nHere are external libraries that is used in this package.\n\n    bitarray\n\n# Usage\n\n___\nThis package consists of 4 parts: symmetric, asymetric, hash, and tools.\n\nTo import all modules, it is recommanded to run `from mycryptool import *`\n\n## symmetric\n\n***\nThis module includes 2 symmetric algorithms: AES128 and DES.\n\n### AES128\n\nThe Default scheme is CBC. if you want to try other schemes, welcome to explore the AES class (in `symmetric.aes128`).\n\n#### Encrypt:\n\n    data = b'Jessie Pinkman in the house'\n    key = 'key'\n    cipher = symmetric.aes128.encrypt(key, data)\n\n#### Decrypt:\n\n    symmetric.aes128.decrypt(key, cipher)\n\n### DES\n\nDES only supports 2 schemes: CBC and ECB. Supported Features: encrypt and decrypt.\n\n#### Encrypt:\n\n```python\nkey = b'chopperc'\niv = b'66666666'\ndata = b'Yo Yo Yo, Jessie Pinkman in the house!!!'\n\ncipher = symmetric.des.des_cbc(data, iv, key, True)  # CBC\n\ncipher = symmetric.des.des_ecb(data, key, True)  # ECB\n```\n\n#### Decrypt:\n\n```python\ndeciphered = symmetric.des.des_cbc(cipher, iv, key, False)  # CBC\ndeciphered = symmetric.des.des_ecb(cipher, key, False)  # ECB\n```\n\n## asymmetric\n\n***\nThis module includes 2 asymmetric algorithms: RSA and Elliptic Curve.\n\nSupported Features: encrypt, decrypt, generate signature, and validate signature.\n\n### RSA\n\n#### Encrypt:\n\n```python\ndata = b'Jessie Pinkman in the house'\n# Warning: it takes a while to generate key pairs ( large prime numbers).\npub, pri = asymmetric.rsa.generate_key_pair()\ncipher = asymmetric.rsa.encrypt(data, pub)\n```\n\n#### Decrypt:\n\n```python    \nasymmetric.rsa.decrypt(cipher, pri)\n```\n\n#### Generate signature:\n\n```python\nsignature = asymmetric.rsa.get_signature(hash.md5.md5(data), pri)\nprint(signature)\n```\n\n#### Validate signature:\n\n```python\nasymmetric.rsa.is_valid_signature(hash.md5.md5(data), signature, pub)\n```\n\n### Elliptic Curve\n\nAs for now, this module only supports 1 curve: ecp256k1.\n\nHowever, you can Implement your own curve derived from the `EllipticCurve` class.\n\n#### Implement customize curve:\n\n```python\nclass ecp256k1(EllipticCurve):\n\t# ecp256k1 https://www.secg.org/sec2-v2.pdf\n\tdef __init__(self):\n\t\ta = 0\n\t\tb = 7\n\t\tp = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F\n\t\tGx = 0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798\n\t\tGy = 0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8\n\t\tn = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\n\n\t\tsuper(ecp256k1, self).__init__(a, b, p, (Gx, Gy), n)\n```\n\n#### Encrypt:\n\n```python\nec = asymmetric.elliptic_curve.ecp256k1()\npri = ec.get_private_key()\npub = ec.get_public_key(pri)\nec_cipher = ec.encrypt(data, pub)\nprint(ec_cipher)\n```\n\n#### Decrypt:\n\n```python\nec.decrypt(ec_cipher, pri)\n```\n\n#### Generate signature:\n\n```python\nsignature = ec.get_signature(hash.sha1.sha1(data), pri)\n```\n\n#### Validate signature:\n\n```python\nec.is_valid_signature(hash.sha1.sha1(data), signature, pub)\n```\n\n## hash\n\n___\n\n### md5\n\nThis module provide 2 hashing algorithm: MD5 and SHA-1.\n\n```python\n    hash.md5.md5(b'basdfasdfadsf')\n```\n\n### sha1\n\n```python\n    hash.sha1.sha1(b'basdfasdfadsf')\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ChopperCP/MyCrptool",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mycryptool",
    "package_url": "https://pypi.org/project/mycryptool/",
    "platform": "",
    "project_url": "https://pypi.org/project/mycryptool/",
    "project_urls": {
      "Homepage": "https://github.com/ChopperCP/MyCrptool"
    },
    "release_url": "https://pypi.org/project/mycryptool/1.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python package that include commonly used cryptographic algorithm and tools.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10202992,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bacda491ef4dceb94ca86ecab3000b87517a686b96c90332eca6e260af3f42e0",
          "md5": "8671e9fd86cc11f276d5d00294c78426",
          "sha256": "b4ae1c327b2db9ff214414217295770a9f2f6158a805e5d9e46c8346bb548bec"
        },
        "downloads": -1,
        "filename": "mycryptool-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8671e9fd86cc11f276d5d00294c78426",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16426,
        "upload_time": "2021-04-29T01:19:54",
        "upload_time_iso_8601": "2021-04-29T01:19:54.218879Z",
        "url": "https://files.pythonhosted.org/packages/ba/cd/a491ef4dceb94ca86ecab3000b87517a686b96c90332eca6e260af3f42e0/mycryptool-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "613518558a99764bea20403c2905ae31f1b89cc7f9742b92ab542806317b117e",
          "md5": "5a34926a7a52aa1901b739433852b7c5",
          "sha256": "9100b73e1b28af34692d339ace0a3b6b55bb850ebdb84d73c04399a2be7c9a00"
        },
        "downloads": -1,
        "filename": "mycryptool-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5a34926a7a52aa1901b739433852b7c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14480,
        "upload_time": "2021-04-29T01:19:55",
        "upload_time_iso_8601": "2021-04-29T01:19:55.926722Z",
        "url": "https://files.pythonhosted.org/packages/61/35/18558a99764bea20403c2905ae31f1b89cc7f9742b92ab542806317b117e/mycryptool-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d9830429359a053af99743773df97306f8600c8a5e70a08c0ad9e16e4c11e30",
          "md5": "ff02a72ccde4600abe754cedef1dc962",
          "sha256": "1725b42a7f703f321b7c7f5a1993382098188a696422e23076c073373d705fa9"
        },
        "downloads": -1,
        "filename": "mycryptool-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff02a72ccde4600abe754cedef1dc962",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16856,
        "upload_time": "2021-04-29T02:13:07",
        "upload_time_iso_8601": "2021-04-29T02:13:07.747083Z",
        "url": "https://files.pythonhosted.org/packages/9d/98/30429359a053af99743773df97306f8600c8a5e70a08c0ad9e16e4c11e30/mycryptool-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a95255c8a045df2de6becc824c6a37dd50814ab9584f127fffb685e84f24f57a",
          "md5": "40c96f4cb63b65ee2440de6a4700985b",
          "sha256": "734c7273e973782938b57ca80359a5484f40e08d7914adbf25a8273049b10733"
        },
        "downloads": -1,
        "filename": "mycryptool-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "40c96f4cb63b65ee2440de6a4700985b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15030,
        "upload_time": "2021-04-29T02:13:09",
        "upload_time_iso_8601": "2021-04-29T02:13:09.152907Z",
        "url": "https://files.pythonhosted.org/packages/a9/52/55c8a045df2de6becc824c6a37dd50814ab9584f127fffb685e84f24f57a/mycryptool-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d9830429359a053af99743773df97306f8600c8a5e70a08c0ad9e16e4c11e30",
        "md5": "ff02a72ccde4600abe754cedef1dc962",
        "sha256": "1725b42a7f703f321b7c7f5a1993382098188a696422e23076c073373d705fa9"
      },
      "downloads": -1,
      "filename": "mycryptool-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff02a72ccde4600abe754cedef1dc962",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16856,
      "upload_time": "2021-04-29T02:13:07",
      "upload_time_iso_8601": "2021-04-29T02:13:07.747083Z",
      "url": "https://files.pythonhosted.org/packages/9d/98/30429359a053af99743773df97306f8600c8a5e70a08c0ad9e16e4c11e30/mycryptool-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a95255c8a045df2de6becc824c6a37dd50814ab9584f127fffb685e84f24f57a",
        "md5": "40c96f4cb63b65ee2440de6a4700985b",
        "sha256": "734c7273e973782938b57ca80359a5484f40e08d7914adbf25a8273049b10733"
      },
      "downloads": -1,
      "filename": "mycryptool-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "40c96f4cb63b65ee2440de6a4700985b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15030,
      "upload_time": "2021-04-29T02:13:09",
      "upload_time_iso_8601": "2021-04-29T02:13:09.152907Z",
      "url": "https://files.pythonhosted.org/packages/a9/52/55c8a045df2de6becc824c6a37dd50814ab9584f127fffb685e84f24f57a/mycryptool-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}