{
  "info": {
    "author": "Amaork",
    "author_email": "amaork <amaork@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: C",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "libi2c\n=======\n\nLinux userspace i2c library.\n\n\n## Features\n\n- Support C/C++ and Python.\n\n- Support Python2+, Python3+\n\n- Support multiple bus and devices.\n\n- Support 7-bit and 10-bit i2c slave address.\n\n- Support 1 - 4 byte internal address, auto convert.\n\n- Provide read/write/ioctl functions to operate i2c device.\n\n- Support 8/16/32/64/128/256 bytes page aligned write, read/write length are unlimited.\n\n- Using ioctl functions operate i2c can ignore i2c device ack signal and internal address.\n\n\n## Installation\n\n\tpip install pylibi2c\n\n\tor\n\n\tsudo python setup.py install\n\n\tor\n\n\tsudo make install\n\n\tor\n\n\tsudo make install PYTHON=pythonX.X\n\n## Interface\n\n\ti2c_ioctl_write (once max 16 bytes) are more efficient than i2c_write (once max 4 bytes).\n\n\t/* Close i2c bus */\n\tvoid i2c_close(int bus);\n\n\t/* Open i2c bus, return i2c bus fd */\n\tint i2c_open(const char *bus_name);\n\n\t/* I2C file I/O read, write */\n\tssize_t i2c_read(const I2CDevice *device, unsigned int iaddr, void *buf, size_t len);\n\tssize_t i2c_write(const I2CDevice *device, unsigned int iaddr, const void *buf, size_t len);\n\n\t/* I2c ioctl read, write can set i2c flags */\n\tssize_t i2c_ioctl_read(const I2CDevice *device, unsigned int iaddr, void *buf, size_t len);\n\tssize_t i2c_ioctl_write(const I2CDevice *device, unsigned int iaddr, const void *buf, size_t len);\n\n## Data structure\n\n**C/C++**\n\n\ttypedef struct i2c_device {\n\t\tint bus;\t\t\t/* I2C Bus fd, return from i2c_open */\n\t\tunsigned short addr;\t\t/* I2C device(slave) address */\n\t\tunsigned char tenbit;\t\t/* I2C is 10 bit device address */\n\t\tunsigned char delay;\t\t/* I2C internal operate delay, unit millisecond */\n\t\tunsigned short flags;\t\t/* I2C i2c_ioctl_read/write flags */\n\t\tunsigned int page_bytes;    \t/* I2C max number of bytes per page, 1K/2K 8, 4K/8K/16K 16, 32K/64K 32 etc */\n\t\tunsigned int iaddr_bytes;\t/* I2C device internal(word) address bytes, such as: 24C04 1 byte, 24C64 2 bytes */\n\t}I2CDevice;\n\n**Python**\n\n\tI2CDevice object\n\tI2CDevice(bus, addr, tenbit=False, iaddr_bytes=1, page_bytes=8, delay=1, flags=0)\n\ttenbit, delay, flags, page_bytes, iaddr_bytes are attributes can setter/getter after init\n\n\trequired args: bus, addr.\n\toptional args: tenbit(defult False, 7-bit), delay(defualt 1ms), flags(defualt 0), iaddr_bytes(defualt 1 byte internal address), page_bytes(default 8 bytes per page).\n\n\n## C/C++ Usage\n\n**1. First call `i2c_open` open i2c bus.**\n\n\tint bus;\n\n\t/* Open i2c bus /dev/i2c-0 */\n\tif ((bus = i2c_open(\"/dev/i2c-0\")) == -1) {\n\n\t\t/* Error process */\n\t}\n\n**2. Second fill `I2CDevice` struct, prepare read or write.**\n\n\tI2CDevice device;\n\tmemset(&device, 0, sizeof(device));\n\n\t/* 24C04 */\n\tdevice.bus = bus;\t/* Bus 0 */\n\tdevice.addr = 0x50;\t/* Slave address is 0x50, 7-bit */\n\tdevice.iaddr_bytes = 1;\t/* Device internal address is 1 byte */\n\tdevice.page_bytes = 16; /* Device are capable of 16 bytes per page */\n\n**3. Call `i2c_read/write` or `i2c_ioctl_read/write` read or write i2c device.**\n\n\tunsigned char buffer[256];\n\tssize_t size = sizeof(buffer);\n\tmemset(buffer, 0, sizeof(buffer));\n\n\t/* From i2c 0x0 address read 256 bytes data to buffer */\n\tif ((i2c_read(&device, 0x0, buffer, size)) != size) {\n\n\t\t/* Error process */\n\t}\n\n**4. Close i2c bus `i2c_close(bus)`.**\n\n\ti2c_close(bus);\n\n## Python Usage\n\n\timport ctypes\n\timport pylibi2c\n\n\t# Open i2c device @/dev/i2c-0, addr 0x50.\n\ti2c = pylibi2c.I2CDevice('/dev/i2c-0', 0x50)\n\n\t# Open i2c device @/dev/i2c-0, addr 0x50, 16bits internal address\n\ti2c = pylibi2c.I2CDevice('/dev/i2c-0', 0x50, iaddr_bytes=2)\n\n\t# Set delay\n\ti2c.delay = 10\n\n\t# Set page_bytes\n\ti2c.page_bytes = 16\n\n\t# Set flags\n\ti2c.flags = pylibi2c.I2C_M_IGNORE_NAK\n\n\t# Python2\n\tbuf = bytes(bytearray(256))\n\n\t# Python3\n\tbuf = bytes(256)\n\n\t# Write data to i2c, buf must be read-only type\n\tsize = i2c.write(0x0, buf)\n\n\t# From i2c 0x0(internal address) read 256 bytes data, using ioctl_read.\n\tdata = i2c.ioctl_read(0x0, 256)\n\n## Notice\n\n1. If i2c device do not have internal address, please use `i2c_ioctl_read/write` function for read/write, set`'iaddr_bytes=0`.\n\n2. If want ignore i2c device nak signal, please use `i2c_ioctl_read/write` function, set I2CDevice.falgs as `I2C_M_IGNORE_NAK`.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/amaork/libi2c",
    "keywords": "i2c,raspberry-pi",
    "license": "The MIT License (MIT)  Copyright (c) 2014 Amaork  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pylibi2c",
    "package_url": "https://pypi.org/project/pylibi2c/",
    "platform": null,
    "project_url": "https://pypi.org/project/pylibi2c/",
    "project_urls": {
      "Bug Tracker": "https://github.com/amaork/libi2c/issues",
      "Homepage": "https://github.com/amaork/libi2c"
    },
    "release_url": "https://pypi.org/project/pylibi2c/0.2.1/",
    "requires_dist": null,
    "requires_python": ">=2.7",
    "summary": "Linux userspace i2c operation library",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17140593,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68d7aac7dd5cc76c67f3ee5bafd2c7629e4e45f50643565d65778df7be3411c1",
          "md5": "1988970bc1f420e9b499460acc57f4c7",
          "sha256": "9313474d935e3356038d3b2884dfbcbe819383d155ac6b522710758f522dfa5f"
        },
        "downloads": -1,
        "filename": "pylibi2c-0.2.1-cp39-cp39-linux_armv7l.whl",
        "has_sig": false,
        "md5_digest": "1988970bc1f420e9b499460acc57f4c7",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=2.7",
        "size": 28280,
        "upload_time": "2023-03-03T06:51:08",
        "upload_time_iso_8601": "2023-03-03T06:51:08.740401Z",
        "url": "https://files.pythonhosted.org/packages/68/d7/aac7dd5cc76c67f3ee5bafd2c7629e4e45f50643565d65778df7be3411c1/pylibi2c-0.2.1-cp39-cp39-linux_armv7l.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5b9d206e9d751cdad20add03a00d10d2608f9d84f413bf338eae0420cbaff23",
          "md5": "5eac0db57008274783cd6d63a5a02642",
          "sha256": "7f7b9e8d1c7adf79ba8c5fdccbcb5c116e4c0f873fcf99b48f78bb765bec09e4"
        },
        "downloads": -1,
        "filename": "pylibi2c-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5eac0db57008274783cd6d63a5a02642",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 19017,
        "upload_time": "2023-03-03T06:51:10",
        "upload_time_iso_8601": "2023-03-03T06:51:10.862968Z",
        "url": "https://files.pythonhosted.org/packages/a5/b9/d206e9d751cdad20add03a00d10d2608f9d84f413bf338eae0420cbaff23/pylibi2c-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "68d7aac7dd5cc76c67f3ee5bafd2c7629e4e45f50643565d65778df7be3411c1",
        "md5": "1988970bc1f420e9b499460acc57f4c7",
        "sha256": "9313474d935e3356038d3b2884dfbcbe819383d155ac6b522710758f522dfa5f"
      },
      "downloads": -1,
      "filename": "pylibi2c-0.2.1-cp39-cp39-linux_armv7l.whl",
      "has_sig": false,
      "md5_digest": "1988970bc1f420e9b499460acc57f4c7",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=2.7",
      "size": 28280,
      "upload_time": "2023-03-03T06:51:08",
      "upload_time_iso_8601": "2023-03-03T06:51:08.740401Z",
      "url": "https://files.pythonhosted.org/packages/68/d7/aac7dd5cc76c67f3ee5bafd2c7629e4e45f50643565d65778df7be3411c1/pylibi2c-0.2.1-cp39-cp39-linux_armv7l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5b9d206e9d751cdad20add03a00d10d2608f9d84f413bf338eae0420cbaff23",
        "md5": "5eac0db57008274783cd6d63a5a02642",
        "sha256": "7f7b9e8d1c7adf79ba8c5fdccbcb5c116e4c0f873fcf99b48f78bb765bec09e4"
      },
      "downloads": -1,
      "filename": "pylibi2c-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5eac0db57008274783cd6d63a5a02642",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 19017,
      "upload_time": "2023-03-03T06:51:10",
      "upload_time_iso_8601": "2023-03-03T06:51:10.862968Z",
      "url": "https://files.pythonhosted.org/packages/a5/b9/d206e9d751cdad20add03a00d10d2608f9d84f413bf338eae0420cbaff23/pylibi2c-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}