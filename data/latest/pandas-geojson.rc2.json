{
  "info": {
    "author": "Jay",
    "author_email": "datacraftsmansguild@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "![](https://raw.githubusercontent.com/jaycroft/pandas-geojson/master/static/pandasgeojson.png)\n\n---\n\n## Features\n* Convert DataFame with Lat Long Coordinates to GeoJSON\n* Write & Save GeoJSON files\n* Open GeoJSON from file or url\n* Filter GeoJSON based on list criteria\n\n## Getting Started\nInstall the latest version of pandas-geojson using pip.\n```\npip install pandas-geojson\n```\n\n## Converting DataFrames to GeoJSON\nTo use this first function, you will need a csv file with latitude and lognitude coordinates. If you do not have one to use, there is a sample CSV in the Repo. Use pandas to read in your data.\n\nINPUT\n```\nimport pandas as pd\ndata = pd.read_csv('Test.csv')\nprint(data.head())\n```\nOUTPUT\n```\n     name        lat        long marker-symbol marker-color\n0  Random  48.702076 -111.855280          star      #C91313\n1  Random  46.768477 -111.903907          star      #C91313\n2  Random  49.768477 -112.903907          star      #C91313\n3  Random  45.768477 -110.903907          star      #C91313\n```\nDefinie your variable and call the to_geojson function. You will need to pass your dataframe object and specify the lat and long cordinate columns. You can also pass a list with the properties you want to include (essentially the meta data of the coordinates).\n\n\nINPUT\n```\nfrom pandas_geojson import to_geojson\ngeo_json = to_geojson(df=data, lat='lat', lon='long',\n                 properties=['name','marker-symbol','marker-color'])\nprint(geo_json)\n```\nOUTPUT\n```\n{'type': 'FeatureCollection', 'features': [{'type': 'Feature', 'properties': {'name': 'Random', 'marker-symbol': 'star', 'marker-color': '#C91313'}, 'geometry': {'type': 'Point', 'coordinates': [-111.85528049999999, 48.70207631]}}, {'type': 'Feature', 'properties': {'name': 'Random', 'marker-symbol': 'star', 'marker-color': '#C91313'}, 'geometry': {'type': 'Point', 'coordinates': [-111.90390740000001, 46.768476899999996]}}, {'type': 'Feature', 'properties': {'name': 'Random', 'marker-symbol': 'star', 'marker-color': '#C91313'}, 'geometry': {'type': 'Point', 'coordinates': [-112.90390740000001, 49.768476899999996]}}, {'type': 'Feature', 'properties': {'name': 'Random', 'marker-symbol': 'star', 'marker-color': '#C91313'}, 'geometry': {'type': 'Point', 'coordinates': [-110.90390740000001, 45.768476899999996]}}]}\n```\n## Opening GeoJSON\nThere are two functions for opening geojson files. The first function opens it from a URL, the second opens from files on your local computer. \n\n```\nfrom pandas_geojson import read_geojson_url\ngeo_json = read_geojson_url('<URL>')\n```\nOR\n```\nfrom pandas_geojson import read_geojson\ngeo_json = read_geojson('<FILENAME>')\n```\n## Saving GeoJSON Files\nThe save function has two required arguements. The first is the geojson object. The second is the filename. Adding indentation and formatting is optional, but is useful for saving geojson in an easy-to-read format. \n\nINPUT\n```\nfrom pandas_geojson import write_geojson\nwrite_geojson(geo_json, filename='random.geojson', indent=4)\n```\nOUTPUT\n```\n{\n    \"type\": \"FeatureCollection\",\n    \"features\": [\n        {\n            \"type\": \"Feature\",\n            \"properties\": {\n                \"name\": \"Randomize\",\n                \"marker-symbol\": \"star\",\n                \"marker-color\": \"#C91313\"\n            },\n            \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [\n                    -111.8552805,\n                    48.70207631\n                ]\n            }\n        },\n        {\n            \"type\": \"Feature\",\n            \"properties\": {\n                \"name\": \"Random\",\n                \"marker-symbol\": \"star\",\n                \"marker-color\": \"#C91313\"\n            },\n            \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [\n                    -111.9039074,\n                    46.7684769\n                ]\n            }\n        },\n        {\n            \"type\": \"Feature\",\n            \"properties\": {\n                \"name\": \"Random\",\n                \"marker-symbol\": \"star\",\n                \"marker-color\": \"#C91313\"\n            },\n            \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [\n                    -112.9039074,\n                    49.7684769\n                ]\n            }\n        },\n        {\n            \"type\": \"Feature\",\n            \"properties\": {\n                \"name\": \"Randomize\",\n                \"marker-symbol\": \"star\",\n                \"marker-color\": \"#C91313\"\n            },\n            \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [\n                    -110.9039074,\n                    45.7684769\n                ]\n            }\n        }\n    ]\n}\n```\n## Filtering GeoJSON\nGeoJSON files can be large and complex. Filtering to what is important is a useful tool. To use this function you need to have a list of the items you want to filter to. Once you have that, load your geojson file using the read_geojson function shown above. Set you output variable name and then call the filter_geojson function. Pass your geojson object and filter list. Finally, you will need a property key to identify where to look for the items in your list. After running the code, you should get a new filtered geojson object.\n\nINPUT\n```\nfrom pandas_geojson import read_geojson, filter_geojson\nfilter = ['Randomize']\ngeojson = read_geojson('random.geojson')\noutput = filter_geojson(geo_json=geojson, filter_list=filter, property_key='name')\nprint(output)\n```\nOUTPUT\n```\n{\"type\": \"FeatureCollection\", \"features\": [{\"type\": \"Feature\", \"properties\": {\"name\": \"Randomize\", \"marker-symbol\": \"star\", \"marker-color\": \"#C91313\"}, \"geometry\": {\"type\": \"Point\", \"coordinates\": [-111.8552805, 48.70207631]}}, {\"type\": \"Feature\", \"properties\": {\"name\": \"Randomize\", \"marker-symbol\": \"star\", \"marker-color\": \"#C91313\"}, \"geometry\": {\"type\": \"Point\", \"coordinates\": [-110.9039074, 45.7684769]}}]}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jaycroft/pandas-geojson",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pandas-geojson",
    "package_url": "https://pypi.org/project/pandas-geojson/",
    "platform": "",
    "project_url": "https://pypi.org/project/pandas-geojson/",
    "project_urls": {
      "Homepage": "https://github.com/jaycroft/pandas-geojson"
    },
    "release_url": "https://pypi.org/project/pandas-geojson/1.2.0/",
    "requires_dist": [
      "pandas"
    ],
    "requires_python": "",
    "summary": "Convert Pandas Dataframe to GeoJSON",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12873764,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2309aa1bc789b9960af92b73f144de175307a8178c74fc68febb69fbdfdaa337",
          "md5": "8ebea636755def29bc823022e5befb97",
          "sha256": "c1f9f03be084920f81bf281209410f0a1714b7bd4eb114ebb411224df1d476c0"
        },
        "downloads": -1,
        "filename": "pandas_geojson-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ebea636755def29bc823022e5befb97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3901,
        "upload_time": "2022-02-12T00:50:15",
        "upload_time_iso_8601": "2022-02-12T00:50:15.150800Z",
        "url": "https://files.pythonhosted.org/packages/23/09/aa1bc789b9960af92b73f144de175307a8178c74fc68febb69fbdfdaa337/pandas_geojson-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fdb060ecd4ce2f3e53e5580ca1cfca6c3c6e71c4135651fc411dce3afc824b1",
          "md5": "cba8df855b305b339b52a0150641981d",
          "sha256": "1cd13cd8f0ffd02902cf34992ff1883a7c06eb98409a1fd7e52bceead57ae058"
        },
        "downloads": -1,
        "filename": "pandas_geojson-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cba8df855b305b339b52a0150641981d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3488,
        "upload_time": "2022-02-12T00:50:16",
        "upload_time_iso_8601": "2022-02-12T00:50:16.603428Z",
        "url": "https://files.pythonhosted.org/packages/5f/db/060ecd4ce2f3e53e5580ca1cfca6c3c6e71c4135651fc411dce3afc824b1/pandas_geojson-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88e9b869db22febc2193821f2768c91384ac9eb87555e26d5337c9092640ed7e",
          "md5": "d37672501492e60af60db326fe37e3f0",
          "sha256": "5c9b514234146bcf36e675fb0f0618adb52ea6e70a27547cd97ec0dbc18b2cb9"
        },
        "downloads": -1,
        "filename": "pandas_geojson-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d37672501492e60af60db326fe37e3f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4639,
        "upload_time": "2022-02-13T02:32:25",
        "upload_time_iso_8601": "2022-02-13T02:32:25.329887Z",
        "url": "https://files.pythonhosted.org/packages/88/e9/b869db22febc2193821f2768c91384ac9eb87555e26d5337c9092640ed7e/pandas_geojson-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88e9b869db22febc2193821f2768c91384ac9eb87555e26d5337c9092640ed7e",
        "md5": "d37672501492e60af60db326fe37e3f0",
        "sha256": "5c9b514234146bcf36e675fb0f0618adb52ea6e70a27547cd97ec0dbc18b2cb9"
      },
      "downloads": -1,
      "filename": "pandas_geojson-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d37672501492e60af60db326fe37e3f0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4639,
      "upload_time": "2022-02-13T02:32:25",
      "upload_time_iso_8601": "2022-02-13T02:32:25.329887Z",
      "url": "https://files.pythonhosted.org/packages/88/e9/b869db22febc2193821f2768c91384ac9eb87555e26d5337c9092640ed7e/pandas_geojson-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}