{
  "info": {
    "author": "Peter Demin",
    "author_email": "peterdemin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "OpenAI command-line client\n==========================\n\nInstallation\n------------\n\nTo install OpenAI CLI in Python virtual environment, run::\n\n    pip install openai-cli\n\nToken authentication\n--------------------\n\nOpenAI API requires authentication token, which can be obtained on this page:\nhttps://beta.openai.com/account/api-keys\n\nProvide token to the CLI either through a command-line argument (``-t/--token <TOKEN>``)\nor through an environment variable (``OPENAI_API_TOKEN``).\n\nUsage\n-----\n\nCurrently only text completion API is supported.\n\nExample usage::\n\n    $ echo \"Are cats faster than dogs?\" | openai complete -\n    It depends on the breed of the cat and dog. Generally,\n    cats are faster than dogs over short distances,\n    but dogs are better at sustained running.\n\nInteractive mode supported (Press Ctrl+C to exit)::\n\n    $ openai repl\n    Prompt: Can generative AI replace humans?\n\n    No, generative AI cannot replace humans.\n    While generative AI can be used to automate certain tasks,\n    it cannot replace the creativity, intuition, and problem-solving\n    skills that humans possess.\n    Generative AI can be used to supplement human efforts,\n    but it cannot replace them.\n\n    Prompt: ^C\n\nRun without arguments to get a short help message::\n\n    $ openai\n    Usage: openai [OPTIONS] COMMAND [ARGS]...\n\n    Options:\n      --help  Show this message and exit.\n\n    Commands:\n      complete  Return OpenAI completion for a prompt from SOURCE.\n      repl      Start interactive shell session for OpenAI completion API.\n\nBuild a standalone binary using pex and move it into PATH::\n\n    $ make openai && mv openai ~/bin/\n    $ openai repl\n    Prompt:\n\nAlternative API URL\n-------------------\n\nCLI invokes https://api.openai.com/v1/completions by default.\nTo override the endpoint URL, set ``OPENAI_API_URL`` environment variable.\n\nExample usage\n-------------\n\nHere's an example usage scenario, where we first create a Python module\nwith a Fibonacci function implementation, and then generate a unit test for it:\n\n.. code:: bash\n\n    $ mkdir examples\n    $ touch examples/__init__.py\n    $ echo \"Write Python function to calculate Fibonacci numbers\" | openai complete - | black - > examples/fib.py\n    $ (echo 'Write unit tests for this Python module named \"fib\":\\n'; cat examples/fib.py) | openai complete - | black - > examples/test_fib.py\n    $ pytest -v examples/test_fib.py\n    ============================== test session starts ==============================\n\n    examples/test_fib.py::TestFibonacci::test_eighth_fibonacci_number PASSED                                 [ 10%]\n    examples/test_fib.py::TestFibonacci::test_fifth_fibonacci_number PASSED                                  [ 20%]\n    examples/test_fib.py::TestFibonacci::test_first_fibonacci_number PASSED                                  [ 30%]\n    examples/test_fib.py::TestFibonacci::test_fourth_fibonacci_number PASSED                                 [ 40%]\n    examples/test_fib.py::TestFibonacci::test_negative_input PASSED                                          [ 50%]\n    examples/test_fib.py::TestFibonacci::test_ninth_fibonacci_number PASSED                                  [ 60%]\n    examples/test_fib.py::TestFibonacci::test_second_fibonacci_number PASSED                                 [ 70%]\n    examples/test_fib.py::TestFibonacci::test_seventh_fibonacci_number PASSED                                [ 80%]\n    examples/test_fib.py::TestFibonacci::test_sixth_fibonacci_number PASSED                                  [ 90%]\n    examples/test_fib.py::TestFibonacci::test_third_fibonacci_number PASSED                                  [100%]\n\n    =============================== 10 passed in 0.02s ==============================\n\n    $ cat examples/fib.py\n\n.. code:: python\n\n    def Fibonacci(n):\n        if n < 0:\n            print(\"Incorrect input\")\n        # First Fibonacci number is 0\n        elif n == 1:\n            return 0\n        # Second Fibonacci number is 1\n        elif n == 2:\n            return 1\n        else:\n            return Fibonacci(n - 1) + Fibonacci(n - 2)\n\n.. code:: bash\n\n    $ cat examples/test_fib.py\n\n.. code:: python\n\n    import unittest\n    from .fib import Fibonacci\n\n\n    class TestFibonacci(unittest.TestCase):\n        def test_negative_input(self):\n            self.assertEqual(Fibonacci(-1), None)\n\n        def test_first_fibonacci_number(self):\n            self.assertEqual(Fibonacci(1), 0)\n\n        def test_second_fibonacci_number(self):\n            self.assertEqual(Fibonacci(2), 1)\n\n        def test_third_fibonacci_number(self):\n            self.assertEqual(Fibonacci(3), 1)\n\n        def test_fourth_fibonacci_number(self):\n            self.assertEqual(Fibonacci(4), 2)\n\n        def test_fifth_fibonacci_number(self):\n            self.assertEqual(Fibonacci(5), 3)\n\n        def test_sixth_fibonacci_number(self):\n            self.assertEqual(Fibonacci(6), 5)\n\n        def test_seventh_fibonacci_number(self):\n            self.assertEqual(Fibonacci(7), 8)\n\n        def test_eighth_fibonacci_number(self):\n            self.assertEqual(Fibonacci(8), 13)\n\n        def test_ninth_fibonacci_number(self):\n            self.assertEqual(Fibonacci(9), 21)\n\n\n    if __name__ == \"__main__\":\n        unittest.main()\n\n.. code:: bash\n\n    $ (echo \"Add type annotations for this Python code\"; cat examples/fib.py) | openai complete - | black - | tee tmp && mv tmp examples/fib.py\n\n.. code:: python\n\n    def Fibonacci(n: int) -> int:\n        if n < 0:\n            print(\"Incorrect input\")\n        # First Fibonacci number is 0\n        elif n == 1:\n            return 0\n        # Second Fibonacci number is 1\n        elif n == 2:\n            return 1\n        else:\n            return Fibonacci(n - 1) + Fibonacci(n - 2)\n\n.. code:: bash\n\n    $ mypy examples/fib.py\n    examples/fib.py:1: error: Missing return statement  [return]\n    Found 1 error in 1 file (checked 1 source file)\n\n.. code:: bash\n\n    $ (echo \"Fix mypy warnings in this Python code\"; cat examples/fib.py; mypy examples/fib.py) | openai complete - | black - | tee tmp && mv tmp examples/fib.py\n\n.. code:: python\n\n    def Fibonacci(n: int) -> int:\n        if n < 0:\n            print(\"Incorrect input\")\n        # First Fibonacci number is 0\n        elif n == 1:\n            return 0\n        # Second Fibonacci number is 1\n        elif n == 2:\n            return 1\n        else:\n            return Fibonacci(n - 1) + Fibonacci(n - 2)\n        return None  # Added return statement\n\n.. code:: bash\n\n    $ mypy examples/fib.py\n    examples/fib.py:12: error: Incompatible return value type (got \"None\", expected \"int\")  [return-value]\n    Found 1 error in 1 file (checked 1 source file)\n\n.. code:: bash\n\n    $ (echo \"Fix mypy warnings in this Python code\"; cat examples/fib.py; mypy examples/fib.py) | openai complete - | black - | tee tmp && mv tmp examples/fib.py\n\n.. code:: python\n\n    def Fibonacci(n: int) -> int:\n        if n < 0:\n            print(\"Incorrect input\")\n        # First Fibonacci number is 0\n        elif n == 1:\n            return 0\n        # Second Fibonacci number is 1\n        elif n == 2:\n            return 1\n        else:\n            return Fibonacci(n - 1) + Fibonacci(n - 2)\n        return 0  # Changed return statement to return 0\n\n.. code:: bash\n\n    $ mypy examples/fib.py\n    Success: no issues found in 1 source file\n\n.. code:: bash\n\n    $ (echo \"Rewrite these tests to use pytest.parametrized\"; cat examples/test_fib.py) | openai complete - | black - | tee tmp && mv tmp examples/test_fib.py\n\n.. code:: python\n\n    import pytest\n    from .fib import Fibonacci\n\n\n    @pytest.mark.parametrize(\n        \"n, expected\",\n        [(1, 0), (2, 1), (3, 1), (4, 2), (5, 3), (6, 5), (7, 8), (8, 13), (9, 21), (10, 34)],\n    )\n    def test_fibonacci(n, expected):\n        assert Fibonacci(n) == expected\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/peterdemin/openai-cli",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openai-cli",
    "package_url": "https://pypi.org/project/openai-cli/",
    "platform": null,
    "project_url": "https://pypi.org/project/openai-cli/",
    "project_urls": {
      "Homepage": "https://github.com/peterdemin/openai-cli"
    },
    "release_url": "https://pypi.org/project/openai-cli/0.0.3/",
    "requires_dist": [
      "requests",
      "click"
    ],
    "requires_python": ">=3.8",
    "summary": "Command-line client for OpenAI API",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16877614,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a9a006b05f19e8087f06c6400a8985b334ebd9fab06ae8d34cbe41d978140b3",
          "md5": "e691b68952d723b416befe174cd22d47",
          "sha256": "ad1ad80e8733906e5842556273c2f869ae5ea02a5ec97e75917fb83b857faf24"
        },
        "downloads": -1,
        "filename": "openai_cli-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e691b68952d723b416befe174cd22d47",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 5195,
        "upload_time": "2022-12-04T00:16:24",
        "upload_time_iso_8601": "2022-12-04T00:16:24.856655Z",
        "url": "https://files.pythonhosted.org/packages/3a/9a/006b05f19e8087f06c6400a8985b334ebd9fab06ae8d34cbe41d978140b3/openai_cli-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc09d9f40340a6f73b0f0fb1b791ff0a5077d55f95353833722eb02c45ecbf0a",
          "md5": "e90f87c8c7606ea594928fe95c875b10",
          "sha256": "10d5d06742e7967b3c703f2de2cfa9f9e491595a84db435ac9f9762c8cc0ee48"
        },
        "downloads": -1,
        "filename": "openai-cli-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e90f87c8c7606ea594928fe95c875b10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11735,
        "upload_time": "2022-12-04T00:16:26",
        "upload_time_iso_8601": "2022-12-04T00:16:26.816515Z",
        "url": "https://files.pythonhosted.org/packages/cc/09/d9f40340a6f73b0f0fb1b791ff0a5077d55f95353833722eb02c45ecbf0a/openai-cli-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91a8a8776ffc93d5792f9515992bbe8ebb9ef2205d1db7244c5290bbf0fa2639",
          "md5": "f3ea6a5bb86db1b9ae943cdb7006a831",
          "sha256": "8666638aedbbfb09d19fe46c302bb2db76806e23b8147e87369e20c3fc0a9f65"
        },
        "downloads": -1,
        "filename": "openai_cli-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3ea6a5bb86db1b9ae943cdb7006a831",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 6513,
        "upload_time": "2022-12-29T18:32:44",
        "upload_time_iso_8601": "2022-12-29T18:32:44.292167Z",
        "url": "https://files.pythonhosted.org/packages/91/a8/a8776ffc93d5792f9515992bbe8ebb9ef2205d1db7244c5290bbf0fa2639/openai_cli-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d15abd10a5b2b9777fd973d3f56f68db93282640e6b628d0a76aaf5ba841f86b",
          "md5": "fcac225da78af4f98b2c7d9cb6347a35",
          "sha256": "5eefa6643d23e606da7b79abdafbce6f3a4547e1a0e7b457dfbf9d0ea65d7b7f"
        },
        "downloads": -1,
        "filename": "openai-cli-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fcac225da78af4f98b2c7d9cb6347a35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14228,
        "upload_time": "2022-12-29T18:32:45",
        "upload_time_iso_8601": "2022-12-29T18:32:45.848032Z",
        "url": "https://files.pythonhosted.org/packages/d1/5a/bd10a5b2b9777fd973d3f56f68db93282640e6b628d0a76aaf5ba841f86b/openai-cli-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b47342b752853fc5737c1498f351d382c7c6f44f0d5e40482b88802bef463da",
          "md5": "f2d4e7912c820959e1227d5237adfd0c",
          "sha256": "d93fe59bf11b0379644fd06fd48c80a8a9c026cfe8987deac2389b08726ba0c6"
        },
        "downloads": -1,
        "filename": "openai_cli-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2d4e7912c820959e1227d5237adfd0c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 6650,
        "upload_time": "2023-02-15T21:20:23",
        "upload_time_iso_8601": "2023-02-15T21:20:23.017567Z",
        "url": "https://files.pythonhosted.org/packages/5b/47/342b752853fc5737c1498f351d382c7c6f44f0d5e40482b88802bef463da/openai_cli-0.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daede968faeaf45d471f5b6c77cd8056b23fa03f9fb6bf3de071e963570f7b27",
          "md5": "e88042874b26e960cac385eb11be2b08",
          "sha256": "7ad7448670b9ce746318fdbfd4aebc3d927fd3ef0feceee4451225858aafb8f2"
        },
        "downloads": -1,
        "filename": "openai-cli-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e88042874b26e960cac385eb11be2b08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14465,
        "upload_time": "2023-02-15T21:20:24",
        "upload_time_iso_8601": "2023-02-15T21:20:24.678568Z",
        "url": "https://files.pythonhosted.org/packages/da/ed/e968faeaf45d471f5b6c77cd8056b23fa03f9fb6bf3de071e963570f7b27/openai-cli-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b47342b752853fc5737c1498f351d382c7c6f44f0d5e40482b88802bef463da",
        "md5": "f2d4e7912c820959e1227d5237adfd0c",
        "sha256": "d93fe59bf11b0379644fd06fd48c80a8a9c026cfe8987deac2389b08726ba0c6"
      },
      "downloads": -1,
      "filename": "openai_cli-0.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f2d4e7912c820959e1227d5237adfd0c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.8",
      "size": 6650,
      "upload_time": "2023-02-15T21:20:23",
      "upload_time_iso_8601": "2023-02-15T21:20:23.017567Z",
      "url": "https://files.pythonhosted.org/packages/5b/47/342b752853fc5737c1498f351d382c7c6f44f0d5e40482b88802bef463da/openai_cli-0.0.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "daede968faeaf45d471f5b6c77cd8056b23fa03f9fb6bf3de071e963570f7b27",
        "md5": "e88042874b26e960cac385eb11be2b08",
        "sha256": "7ad7448670b9ce746318fdbfd4aebc3d927fd3ef0feceee4451225858aafb8f2"
      },
      "downloads": -1,
      "filename": "openai-cli-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e88042874b26e960cac385eb11be2b08",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 14465,
      "upload_time": "2023-02-15T21:20:24",
      "upload_time_iso_8601": "2023-02-15T21:20:24.678568Z",
      "url": "https://files.pythonhosted.org/packages/da/ed/e968faeaf45d471f5b6c77cd8056b23fa03f9fb6bf3de071e963570f7b27/openai-cli-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}