{
  "info": {
    "author": "Tom Young",
    "author_email": "shadetreemetalworks@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# harperdb\n\nPython3 implementations of HarperDB API functions. Also provides wrappers for an object-oriented interface.\n\n### Installation\n\n```\npip3 install harperdb\n```\n\n### Requirements\n\n- Python>=3.4\n- [requests~=2.0](https://pypi.org/project/requests/)\n- [responses~=0.10](https://pypi.org/project/responses/) (required for testing only)\n\n---\n\n# harperdb.HarperDB\n\nEach instance of `HarperDB` represents a running HarperDB instance at a URL, passed to the constructor. Optionally implement Basic Auth as keyword arguments. HarperDB API functions are exposed as instance methods, which produce and consume JSON following the API documentation.\n\n```\nimport harperdb\ndb = harperdb.HarperDB(\n    url=HARPERDB_URL,\n    username=HARPERDB_USERNAME,\n    password=HARPERDB_PASSWORD)\n```\n\n#### Instance Parameters:\n\n  - **url** (string): Full URL of HarperDB instance\n  - **username** (string): (optional) Basic Auth username\n  - **password** (string): (optional) Basic Auth password\n  - **timeout** (float): Seconds to wait for a server response, default 10\n\n#### Instance Attributes:\n\n  - **token** (string): Value used in Authorization header, or `None`. The value\n    is generated automatically when instantiated with both username and\n    password\n  - **timeout** (float): Seconds to wait for a server response\n  - **url** (string): Full URL of HarperDB instance\n\n#### Instance Methods:\n\nThese methods expose the HarperDB API functions, and return JSON from the target database instance at `HarperDB.url`\n\nSchemas and Tables:\n\n- **describe_all()**\n- **create_schema(schema)**\n- **describe_schema(schema)**\n- **drop_schema(schema)**\n- **create_table(schema, table, hash_attribute)**\n- **describe_table(schema, table)**\n- **drop_table(schema, table)**\n- **drop_attribute(schema, table, attribute)**\n\nNoSQL Operations:\n\n- **insert(schema, table, [records])**\n- **update(schema, table, [records])**\n- **delete(schema, table, [hashes])**\n- **search_by_hash(schema, table, [hashes], get_attributes=['*'])**\n- **search_by_value(schema, table, search_attribute, search_value, get_attributes=['*'])**\n\nSQL Operations:\n\n- **sql(SQL)**\n\nCSV Operations:\n\n- **csv_data_load(schema, table, path, action=\"insert\")**\n- **csv_file_load(schema, table, file_path, action=\"insert\")**\n- **csv_url_load(schema, table, csv_url, action=\"insert\")**\n\nUsers and Roles:\n\n- **add_user(role id, username, password, active=True)**\n- **add_role(name, permission)**\n- **alter_user(role, username, password, active=True)**\n- **alter_role(id, permission)**\n- **drop_role(id)**\n- **drop_user(username)**\n- **user_info(username)**\n- **list_roles()**\n- **list_users()**\n\nClustering:\n\n- **add_node(name, host, port, subscriptions=None)**\n- **update_node(name, host, port, subscriptions=None)**\n- **remove_node(name)**\n- **cluster_status()**\n\nRegistration:\n\n- **registration_info()**\n- **get_fingerprint()**\n- **set_license(key, company)**\n\nUtilities:\n\n- **delete_files_before(schema, table, date)**\n- **export_local(path, search_operation, search_attribute=None, search_value=None, hash_values=None, sql=None, format=\"json\")**\n- **export_to_s3(aws_access_key_id, aws_secret_access_key, bucket, key, search_operation, search_attribute=None, search_value=None, hash_value=None, sql=None, format=\"json\")**\n- **read_log(limit=1000, start=0, from_date=None, to_date=None, order=\"desc\")**\n- **system_information()**\n\nJobs:\n\n- **get_job(id)**\n- **search_jobs_by_start_date(from_date, to_date)**\n\n---\n\n# harperdb.wrappers.HarperDBWrapper\n\n`HarperDBWrapper` provides a high-level, object-oriented interface for HarperDB. From this top-level object an application programmer can make references to schemas, tables, and records, while making minimal transactions with the server when values are used or modified. Each instance of `HarperDBWrapper` represents a running HarperDB instance at a URL, passed to the constructor. Optionally implement Basic Auth as keyword arguments.\n\nSchemas are subscriptable by name, and iterating yields instances of `HarperDBSchema`. The length of a `HarperDBWrapper` instance returns the number of schemas in the target database. HarperDB API functions are implemented as low-level instance methods, which produce and consume JSON following the API documentation.\n\n```\nimport harperdb\ndb = harperdb.wrappers.HarperDBWrapper(\n    url=HARPERDB_URL,\n    username=HARPERDB_USERNAME,\n    password=HARPERDB_PASSWORD)\ndev_schema = db.create_schema('dev')\nlen(db)  # returns 1\ndb['dev']  # returns dev_schema\nfor schema in db:\n    schema.name  # returns \"dev\"\n```\n\nSchemas can be dropped using `HarperDB.drop_schema`, or using the `del` keyword and `HarperDBSchema.name` value like a dictionary:\n\n```\ndb.drop_schema('dev')\n# same as\ndel db['dev']\n```\n\n#### Instance Parameters:\n\n  - **url** (string): Full URL of HarperDB instance\n  - **username** (string): (optional) Basic Auth username\n  - **password** (string): (optional) Basic Auth password\n  - **timeout** (float): Seconds to wait for a server response, default 10\n\n#### Instance Attributes:\n\n- **token** (string): Value used in Authorization header, or None. The value is generated automatically when instantiated with both username and password\n- **timeout** (float): Seconds to wait for a server response\n- **url** (string): Full URL of HarperDB instance\n\n#### High-Level Instance Methods:\n- **create_schema(name)**: Create a schema, returns `HarperDBSchema`\n- **drop_schema(name)**: Drop a schema\n\n#### Low-Level Instance Methods:\nThese methods expose the HarperDB API functions, and return JSON from the target database instance at `HarperDBWrapper.url`\n\nSchemas and Tables:\n\n- **_describe_all()**\n- **_create_schema(schema)**\n- **_describe_schema(schema)**\n- **_drop_schema(schema)**\n- **_create_table(schema, table, hash_attribute)**\n- **_describe_table(schema, table)**\n- **_drop_table(schema, table)**\n- **_drop_attribute(schema, table, attribute)**\n\nNoSQL Operations:\n\n- **_insert(schema, table, [records])**\n- **_update(schema, table, [records])**\n- **_delete(schema, table, [hashes])**\n- **_search_by_hash(schema, table, [hashes], get_attributes=['*'])**\n- **_search_by_value(schema, table, search_attribute, search_value, get_attributes=['*'])**\n\nSQL Operations:\n\n- **_sql(SQL)**\n\nCSV Operations:\n\n- **_csv_data_load(schema, table, path, action=\"insert\")**\n- **_csv_file_load(schema, table, file_path, action=\"insert\")**\n- **_csv_url_load(schema, table, csv_url, action=\"insert\")**\n\nUsers and Roles:\n\n- **_add_user(role id, username, password, active=True)**\n- **_add_role(name, permission)**\n- **_alter_user(role, username, password, active=True)**\n- **_alter_role(id, permission)**\n- **_drop_role(id)**\n- **_drop_user(username)**\n- **_user_info(username)**\n- **_list_roles()**\n- **_list_users()**\n\nClustering:\n\n- **_add_node(name, host, port, subscriptions)**\n- **_update_node(name, host, port, subscriptions)**\n- **_remove_node(name)**\n- **_cluster_status()**\n\nRegistration:\n\n- **_registration_info()**\n- **_get_fingerprint()**\n- **_set_license(key, company)**\n\nUtilities:\n\n- **_delete_files_before(schema, table, date)**\n- **_export_local(path, search_operation, search_attribute=None, search_value=None, hash_values=None, sql=None, format=\"json\")**\n- **_export_to_s3(aws_access_key_id, aws_secret_access_key, bucket, key, search_operation, search_attribute=None, search_value=None, hash_value=None, sql=None,, format=\"json\")**\n- **_read_log(limit=100, start=0, from=None, until=None, order=\"desc\")**\n- **_system_information()**\n\nJobs:\n\n- **_get_job(id)**\n\n---\n\n# harperdb.wrappers.HarperDBSchema\n\nTables are subscriptable by name, and iterating yields instances of `HarperDBTable`. The length of a `HarperDBSchema` instance returns the number of tables in the schema. Schema metadata is contained in instance attributes.\n\nYou should never need to instantiate this class directly, use `HarperDBWrapper.create_schema` instead.\n\n```\ndog_table = dev_schema.create_table(\n        name='dog',\n        hash_attribute='id')\nlen(dev_schema)  # returns 1\ndev_schema.database  # returns db\n```\n\nTables can be dropped using `HarperDBSchema.drop_table`, or using the `del` keyword and `HarperDBTable.name` value like a dictionary:\n\n```\ndev_schema.drop_table('dog')\n# same as\ndel dev_schema['dog']\n```\n\nSchemas can be dropped using the instance method `dev_schema.drop()`.\n\n#### Instance Attributes:\n\n- **name** (string): Name of this schema\n- **database** (HarperDBWrapper): Instance of the parent database\n\n#### Instance Methods:\n\n- **create_table(name)**: Create a table, returns `HarperDBTable`\n- **drop()**: Drop this schema\n- **drop_table(name)**: Drop a table\n\n---\n\n# harperdb.wrappers.HarperDBTable\n\nRecords are subscriptable by `hash_attribute`, but `HarperDBTable` is not iterable. The length of a `HarperDBTable` instance returns the number of records in the table. Table metadata is contained in instance attributes.\n\nYou should never need to instantiate this class directly, use `HarperDBSchema.create_table` instead.\n\n`HarperDBTable.upsert` inserts a record from a dictionary, and updates records if a value is given for the table's `hash_attribute` and a matching record is found in the table.\n\n```\npenny = dog_table.upsert({\n    'id': 1,\n    'dog_name': 'Penny',\n    'owner_name': 'Kyle',\n    'breed_id': 154,\n    'age': 5,\n    'weight_lbs': 35,\n    'adorable': True,\n})\ndog_table[1]  # returns penny\ndog_table.record_count  # same as len(dog_table)\ndog_table.__createdtime__  # returns int, Unix time with milliseconds\ndog_table.created_time  # returns datetime.datetime\ndog_table.hash_attribute  # returns \"id\"\ndog_table.schema  # returns dev_schema\n```\n\n`HarperDBTable.upsert` accepts either a dictionary of record data, or a list of such dictionaries, returning an instance of `HarperDBRecord` for each record. Any records skipped by the server are omitted from the return value.\n\nUse `HarperDBTable.upsert_from_csv` to load record data in bulk from a CSV file. Returns an instance of `HarperDBRecord` for each record. Any records skipped by the server are omitted from the return value.\n\nRecords can be deleted using `HarperDBTable.delete`, or using the `del` keyword and `HarperDBTable.hash_attribute` value like a dictionary:\n\n```\ndog_table.delete(1)\n# or\ndel dog_table[1]\n```\n\nSearching by a record value returns a list of matching `HarperDBRecord` instances.\n\n```\ndog_table.search_by_value(\n    attribute='name',\n    value='penny')  # returns a list containing penny\n```\n\nTables can be dropped using the instance method `dog_table.drop()`.\n\n#### Instance Attributes:\n\n- **attributes** (list): All record attributes (string) in this table\n- **created_time** (datetime.datetime): equal to `__createdtime__`\n- **hash_attribute** (string): Primary key of this table\n- **id** (string): Unique identifier assigned to this table\n- **name** (string): Name of this table\n- **record_count** (int): Number of records in this table\n- **schema** (HarperDBSchema): Instance of the parent schema\n- **updated_time** (datetime.datetime): equal to `__updatedtime__`\n- **\\_\\_createdtime\\_\\_** (int): Epoch time in milliseconds\n- **\\_\\_updatedtime\\_\\_** (int): Epoch time in milliseconds\n\n#### Instance Methods:\n\n- **delete(hash)**: Delete a record by hash value\n- **drop()**: Drop this table\n- **search_by_value(search_attribute, search_value)**: Return a list of\nmatching `HarperDBRecord` instances.\n- **upsert(record)**: Insert a record from a dictionary, or list of dictionaries. If a value is given for the table's hash_attribute, and this table has a matching record, that record will be updated. Any records skipped by the server will be omitted from the return value. Returns `HarperDBRecord`, or a list of `HarperDBRecord` instances.\n- **upsert_from_csv(path)**: Insert records from a CSV file, with headers in the first row. Any records which have a value for the table's `hash_attribute` will be updated. Any records skipped by the server will be omitted from the return value. Returns a list of `HarperDBRecord` instances.\n\n---\n\n# harperdb.wrappers.HarperDBRecord\n\nRecord data is subscriptable by record data key, and supports item assignment. Record metadata is stored in instance attributes.\n\nYou should never need to instantiate this class directly, use `HarperDBTable.upsert` instead.\n\n```\npenny['owner_name']  # returns \"Kyle\"\npenny['age'] = 6  # Happy Birthday!\npenny.__updatedtime__  # returns int, Unix time with milliseconds\npenny.updated_time  # returns datetime.datetime\npenny.table  # returns dog_table\n```\n\nRecords can be deleted using the instance method `penny.delete()`.\n\n`HarperDBRecord.to_dict()` returns a dictionary of the record.\n\n#### Instance Attributes:\n\n- **created_time** (datetime.datetime): equal to `__createdtime__`\n- **table** (HarperDBTable): Instance of parent table\n- **updated_time** (datetime.datetime): equal to `__updatedtime__`\n- **\\_\\_createdtime\\_\\_** (int): Epoch time in milliseconds\n- **\\_\\_updatedtime\\_\\_** (int): Epoch time in milliseconds\n\n#### Instance Methods:\n\n- **delete()**: Delete this record\n- **to_dict()**: Returns record data as a dictionary\n\n---\n\n# harperdb.exceptions.HarperDBError\n\nRaised when the server returns an error (500), or a hash is not found.\n\nThis is the only Exception raised explicitly.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/harperdb/harperdb-sdk-python",
    "keywords": "",
    "license": "",
    "maintainer": "HarperDB",
    "maintainer_email": "hello@harperdb.io",
    "name": "harperdb",
    "package_url": "https://pypi.org/project/harperdb/",
    "platform": "",
    "project_url": "https://pypi.org/project/harperdb/",
    "project_urls": {
      "Homepage": "https://github.com/harperdb/harperdb-sdk-python"
    },
    "release_url": "https://pypi.org/project/harperdb/0.4.2/",
    "requires_dist": [
      "requests (~=2.0)"
    ],
    "requires_python": ">=3.4",
    "summary": "Simple SDK for HarperDB.",
    "version": "0.4.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7837671,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d3d98656c4fbc2b8b30bc830f41cc454065db621b3afe437c8549327f3e2fe9",
          "md5": "fa88229d8a7c24bf35fcdb88edbf7c21",
          "sha256": "4261fb9dc2413b981c6a6dbd8b271e624e03864b6000099111a83d5f4fbbd3f9"
        },
        "downloads": -1,
        "filename": "harperdb-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa88229d8a7c24bf35fcdb88edbf7c21",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 11675,
        "upload_time": "2020-07-13T18:52:59",
        "upload_time_iso_8601": "2020-07-13T18:52:59.527005Z",
        "url": "https://files.pythonhosted.org/packages/2d/3d/98656c4fbc2b8b30bc830f41cc454065db621b3afe437c8549327f3e2fe9/harperdb-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8f06757389a3fef682129496930de93b0eb0ed9f4a249a513c3be82639ad866",
          "md5": "772dd14a38b41451d57267b2db137d62",
          "sha256": "d76aa8db0e36eb08ec26f63a5c70fd913fc2254c6b4e73fecbcc4302ed9e3c9e"
        },
        "downloads": -1,
        "filename": "harperdb-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "772dd14a38b41451d57267b2db137d62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 10564,
        "upload_time": "2020-07-13T18:53:11",
        "upload_time_iso_8601": "2020-07-13T18:53:11.884497Z",
        "url": "https://files.pythonhosted.org/packages/e8/f0/6757389a3fef682129496930de93b0eb0ed9f4a249a513c3be82639ad866/harperdb-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7e121e9a60f1cf61d55dade2b12ed44c7916258d958fa78a7d2700952c1da4c",
          "md5": "be45b6837c95cc6dc3ee24f0239c366f",
          "sha256": "7a115affbf8c6e2fa744a542e5c68e9da7c3a0daf076d7a785b90f11085810b8"
        },
        "downloads": -1,
        "filename": "harperdb-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be45b6837c95cc6dc3ee24f0239c366f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 13976,
        "upload_time": "2020-07-29T19:10:40",
        "upload_time_iso_8601": "2020-07-29T19:10:40.994284Z",
        "url": "https://files.pythonhosted.org/packages/d7/e1/21e9a60f1cf61d55dade2b12ed44c7916258d958fa78a7d2700952c1da4c/harperdb-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd04bd5fb4f9b94678153272d09b6010574e337d8bd7dfbe9e213b8c8415fc3b",
          "md5": "44e5f4303da1d1388e3df059e1bb6dcb",
          "sha256": "117bb68a905b08b1916d112ee191713512c14f3e99b44b1c1aa3ce8e3f39504a"
        },
        "downloads": -1,
        "filename": "harperdb-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "44e5f4303da1d1388e3df059e1bb6dcb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 13452,
        "upload_time": "2020-07-29T19:10:42",
        "upload_time_iso_8601": "2020-07-29T19:10:42.434781Z",
        "url": "https://files.pythonhosted.org/packages/bd/04/bd5fb4f9b94678153272d09b6010574e337d8bd7dfbe9e213b8c8415fc3b/harperdb-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abcf4b97eda25e9bf6dc26374280e18474065cee0b06981bb59629e462800429",
          "md5": "bbe1b7937222fc5513fe8b531ee99127",
          "sha256": "f0be1b0d2bca2c3b3cff7118a7704f3f07d8bb53beb50619c62ed10745fd5960"
        },
        "downloads": -1,
        "filename": "harperdb-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbe1b7937222fc5513fe8b531ee99127",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 13975,
        "upload_time": "2020-07-29T20:12:59",
        "upload_time_iso_8601": "2020-07-29T20:12:59.634027Z",
        "url": "https://files.pythonhosted.org/packages/ab/cf/4b97eda25e9bf6dc26374280e18474065cee0b06981bb59629e462800429/harperdb-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "079b4f20ecf90c4b3a03992a442daee7d1a4db2a2b08753ce9d1530d3a37d513",
          "md5": "c98c40d1a78f1ff36a88327571d7583d",
          "sha256": "9664594a4c63d892141124a8b97de9baa195f07ac743315f16384d9a91b37647"
        },
        "downloads": -1,
        "filename": "harperdb-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c98c40d1a78f1ff36a88327571d7583d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 13632,
        "upload_time": "2020-07-29T20:13:00",
        "upload_time_iso_8601": "2020-07-29T20:13:00.566223Z",
        "url": "https://files.pythonhosted.org/packages/07/9b/4f20ecf90c4b3a03992a442daee7d1a4db2a2b08753ce9d1530d3a37d513/harperdb-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f90e6e4c461c0c2069c1611ee15a2da35f8206e765ff49fdd3caa7c3de0cb00",
          "md5": "2bcb114d7f81054b2dd60f8383ef5f49",
          "sha256": "87aaeccfa08e072b5389631fd10f18be058aff6328a3761e78ab16a5543fe929"
        },
        "downloads": -1,
        "filename": "harperdb-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2bcb114d7f81054b2dd60f8383ef5f49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 13975,
        "upload_time": "2020-07-29T20:54:11",
        "upload_time_iso_8601": "2020-07-29T20:54:11.021963Z",
        "url": "https://files.pythonhosted.org/packages/1f/90/e6e4c461c0c2069c1611ee15a2da35f8206e765ff49fdd3caa7c3de0cb00/harperdb-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ac95537ebbfbfa2aa1fe6e8294952f107531ef82c0ef85aaf549662991c5a02",
          "md5": "c4d535d66f19e2b40e8cb513ebb82aa3",
          "sha256": "2ee43441563f9be1ee8536ecd502e4a0d1f7de9dba38ef9b87362dcdcefc51d7"
        },
        "downloads": -1,
        "filename": "harperdb-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c4d535d66f19e2b40e8cb513ebb82aa3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 13639,
        "upload_time": "2020-07-29T20:54:12",
        "upload_time_iso_8601": "2020-07-29T20:54:12.190203Z",
        "url": "https://files.pythonhosted.org/packages/3a/c9/5537ebbfbfa2aa1fe6e8294952f107531ef82c0ef85aaf549662991c5a02/harperdb-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f90e6e4c461c0c2069c1611ee15a2da35f8206e765ff49fdd3caa7c3de0cb00",
        "md5": "2bcb114d7f81054b2dd60f8383ef5f49",
        "sha256": "87aaeccfa08e072b5389631fd10f18be058aff6328a3761e78ab16a5543fe929"
      },
      "downloads": -1,
      "filename": "harperdb-0.4.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2bcb114d7f81054b2dd60f8383ef5f49",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 13975,
      "upload_time": "2020-07-29T20:54:11",
      "upload_time_iso_8601": "2020-07-29T20:54:11.021963Z",
      "url": "https://files.pythonhosted.org/packages/1f/90/e6e4c461c0c2069c1611ee15a2da35f8206e765ff49fdd3caa7c3de0cb00/harperdb-0.4.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ac95537ebbfbfa2aa1fe6e8294952f107531ef82c0ef85aaf549662991c5a02",
        "md5": "c4d535d66f19e2b40e8cb513ebb82aa3",
        "sha256": "2ee43441563f9be1ee8536ecd502e4a0d1f7de9dba38ef9b87362dcdcefc51d7"
      },
      "downloads": -1,
      "filename": "harperdb-0.4.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c4d535d66f19e2b40e8cb513ebb82aa3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 13639,
      "upload_time": "2020-07-29T20:54:12",
      "upload_time_iso_8601": "2020-07-29T20:54:12.190203Z",
      "url": "https://files.pythonhosted.org/packages/3a/c9/5537ebbfbfa2aa1fe6e8294952f107531ef82c0ef85aaf549662991c5a02/harperdb-0.4.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}