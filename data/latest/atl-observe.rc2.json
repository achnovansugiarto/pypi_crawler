{
  "info": {
    "author": "Georg Kasper",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Observe\n\n[![Atlassian license](https://img.shields.io/badge/license-Apache%202.0-blue.svg?style=flat-square)](LICENSE)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](CONTRIBUTING.md)\n![Build](https://github.com/atlassian-labs/observe/workflows/Build/badge.svg)\n[![codecov](https://codecov.io/gh/atlassian-labs/observe/branch/main/graph/badge.svg?token=SIUqRd2bsW)](https://codecov.io/gh/atlassian-labs/observe)\n\n**@observe** is a decorator for Python methods, which allows Python developers to collect all basic metrics about the decorated method, generate unified logs and notifications on failure which are easy to trace.\n\n\n## Installation\n\n```sh\npip install atl-observe\n```\n\n## Usage\nDecorating the process method and assigning a metic name and static_tags, all tags are added to all metrics generated, used to filter on your dashboards.\n\n```python\nfrom atl_observe import observe\n\nclass Engine:\n\n    @observe(metric=\"process\",\n             static_tags=[\"layer:process\"])\n    def process(self, message: dict):\n        pass\n```\n\nDecorating the process method and assigning a metric and trace_id_from, the trace_id will now appear in all logs and notifications, used to search your logs.\n\n```python\nfrom atl_observe import observe\n\nclass Engine:\n\n    @observe(metric=\"process\",\n             trace_id_from={\"message\": \"eventId\"})\n    def process(self, message: dict):\n        pass\n```\n\n## Logs, Metrics and Notifications\n\nAll logs, metrics and notifications are divided into three categories:\n\n* **Default:** no exceptions were raised.\n* **Expected:** an expected Exception was raised.\n* **Unexpected Exceptions:** an unexpected / unhandled Exception was raised\n\n### Default\n```python\n# optional: debug logs\nlogger.debug(\"... start.\")\nlogger.debug(\"... finished.\")\n\n# increments\nstatsd.increment(\"%s.start\" % metric, 1, tags=all_tags)\nstatsd.increment(\"%s.finished\" % metric, 1, tags=all_tags)\n\n# timing\nstatsd.timing(\"%s.time.finished\" % metric, dt, tags=all_tags)\n```\n\n### Expected\nExpected exceptions are managed via ```accept_on``` and ```decline_on``` lists. If the raised exception is part of `accept_on`, the decorator will return a Truthy value, if the exception is part of `decline_on` a Falsy value is returned.\n\n```python\n# warning logs\nlogger.warning(\"... accepted.\")\nlogger.warning(\"... declined.\")\n\n# increments\nstatsd.increment('%s.exception.accepted' % metric, tags=all_tags)\nstatsd.increment('%s.exception.declined' % metric, tags=all_tags)\n\n# timing\nstatsd.timing(\"%s.time.accepted\" % metric, dt, tags=all_tags)\nstatsd.timing(\"%s.time.declined\" % metric, dt, tags=all_tags)\n```\n\n### Unexpected\n```python\n# error logs\nlogger.error(\"... raised.\")\n\n# slack\nslack.error(\"... raised.\")\n\n# increments\nstatsd.increment('%s.exception.raised' % metric, tags=all_tags)\n\n# timing\nstatsd.timing(\"%s.time.raised\" % metric, dt, tags=all_tags)\n```\n\n## Documentation\n\n* `make install` will install all required packages\n* `make format` will auto format the project\n* `make lint` will run the linter\n* `make tests` will run all unit tests\n\n\n\n\n## Contributions\n\nContributions to **@observe** are welcome! Please see [CONTRIBUTING.md](CONTRIBUTING.md) for details.\n\n## License\n\nCopyright (c) [2020] Atlassian and others.\nApache 2.0 licensed, see [LICENSE](LICENCE) file.\n\n<br/>\n\n[![With ❤️ from Atlassian](https://raw.githubusercontent.com/atlassian-internal/oss-assets/master/banner-cheers.png)](https://www.atlassian.com)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/atlassian-labs/observe",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "atl-observe",
    "package_url": "https://pypi.org/project/atl-observe/",
    "platform": "",
    "project_url": "https://pypi.org/project/atl-observe/",
    "project_urls": {
      "Homepage": "https://github.com/atlassian-labs/observe"
    },
    "release_url": "https://pypi.org/project/atl-observe/1.1.0/",
    "requires_dist": [
      "requests",
      "datadog"
    ],
    "requires_python": "",
    "summary": "A decorator to unify logging, metrics and notifications.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10044354,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38d789eddcce2f32e62fc0ff755e702b9718450c7793842305d983ec3fbce291",
          "md5": "f5b86f80b7c23d97d3d89a3d72aac404",
          "sha256": "caef632c7b932c637fcdb94fb4303a5809a819c7c49c72d368dfeba0c490af8d"
        },
        "downloads": -1,
        "filename": "atl_observe-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5b86f80b7c23d97d3d89a3d72aac404",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12956,
        "upload_time": "2021-03-17T22:46:37",
        "upload_time_iso_8601": "2021-03-17T22:46:37.192583Z",
        "url": "https://files.pythonhosted.org/packages/38/d7/89eddcce2f32e62fc0ff755e702b9718450c7793842305d983ec3fbce291/atl_observe-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7489ec74eeebda712db59834ecb463ed6ead417a53454d2aa22413710a844a16",
          "md5": "114e5bd544e34022b86fa6669189d22a",
          "sha256": "bebd6fa3d2f7d3bcae050dafc5170251b61a96062110d3ce48133e66e2eec452"
        },
        "downloads": -1,
        "filename": "atl-observe-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "114e5bd544e34022b86fa6669189d22a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8631,
        "upload_time": "2021-03-17T22:46:38",
        "upload_time_iso_8601": "2021-03-17T22:46:38.786139Z",
        "url": "https://files.pythonhosted.org/packages/74/89/ec74eeebda712db59834ecb463ed6ead417a53454d2aa22413710a844a16/atl-observe-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afff313798d4ec81a9f44298198c0d9418db42764bfea5e2703c79665fd60db9",
          "md5": "937e5405595736738af73e23c7699dbf",
          "sha256": "75b738df0f945df1208c67b839ce104863a9d992005b4e27813270e1c0b3e188"
        },
        "downloads": -1,
        "filename": "atl_observe-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "937e5405595736738af73e23c7699dbf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13476,
        "upload_time": "2021-04-12T22:41:09",
        "upload_time_iso_8601": "2021-04-12T22:41:09.742821Z",
        "url": "https://files.pythonhosted.org/packages/af/ff/313798d4ec81a9f44298198c0d9418db42764bfea5e2703c79665fd60db9/atl_observe-1.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad13fd1424a5405f3b66040ac3cb0e174d9bf5d21854db9cb47fcbb02dabb763",
          "md5": "7388bd29b84fdd381dbe992d724cc0f6",
          "sha256": "59a71c1bb8a1137a179a883afb3dff4d6721b4957883948acb47044df69b4103"
        },
        "downloads": -1,
        "filename": "atl-observe-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7388bd29b84fdd381dbe992d724cc0f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9148,
        "upload_time": "2021-04-12T22:41:12",
        "upload_time_iso_8601": "2021-04-12T22:41:12.232544Z",
        "url": "https://files.pythonhosted.org/packages/ad/13/fd1424a5405f3b66040ac3cb0e174d9bf5d21854db9cb47fcbb02dabb763/atl-observe-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "afff313798d4ec81a9f44298198c0d9418db42764bfea5e2703c79665fd60db9",
        "md5": "937e5405595736738af73e23c7699dbf",
        "sha256": "75b738df0f945df1208c67b839ce104863a9d992005b4e27813270e1c0b3e188"
      },
      "downloads": -1,
      "filename": "atl_observe-1.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "937e5405595736738af73e23c7699dbf",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 13476,
      "upload_time": "2021-04-12T22:41:09",
      "upload_time_iso_8601": "2021-04-12T22:41:09.742821Z",
      "url": "https://files.pythonhosted.org/packages/af/ff/313798d4ec81a9f44298198c0d9418db42764bfea5e2703c79665fd60db9/atl_observe-1.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad13fd1424a5405f3b66040ac3cb0e174d9bf5d21854db9cb47fcbb02dabb763",
        "md5": "7388bd29b84fdd381dbe992d724cc0f6",
        "sha256": "59a71c1bb8a1137a179a883afb3dff4d6721b4957883948acb47044df69b4103"
      },
      "downloads": -1,
      "filename": "atl-observe-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7388bd29b84fdd381dbe992d724cc0f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9148,
      "upload_time": "2021-04-12T22:41:12",
      "upload_time_iso_8601": "2021-04-12T22:41:12.232544Z",
      "url": "https://files.pythonhosted.org/packages/ad/13/fd1424a5405f3b66040ac3cb0e174d9bf5d21854db9cb47fcbb02dabb763/atl-observe-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}