{
  "info": {
    "author": "Polydojo, Inc.",
    "author_email": "8079593+sumukhbarve@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "Qree\n====\n\nQree (read 'Curie') is a tiny but mighty Python templating engine, geared toward HTML. 'Qree' is short for: *Q*uote, *r*eplace, *e*xec(), *e*val().\n\nThe entire module is under 200 lines. Instead of using regular expressions or PEGs, Qree relies on Python's `exec()` and `eval()`. Thus, it supports *all language features*, out of the box. For more on Qree's internals, please see: [*Build Your Own Python Template Engine*](https://www.sumukhbarve.com/build-python-template-engine)\n\n**!!! Warning:** Do **NOT** render untrusted templates. As Qree uses `eval()`, rendering untrusted templates is equivalent to giving untrusted entities access to your entire systems.\n\nInstallation\n--------------\n```\npip install qree\n```\nAlternatively, just download `qree.py` into your project directory.\n\nText Interpolation\n----------------------\nUse `{{: expression :}}` for HTML-escaped interpolation, or `{{= expression =}}` for interpolation *without* escaping. The latter is *susceptible to XSS*, so please be careful. Here are a few quick examples:\n\n**1. Hello, World!:**\n```py\nqree.renderStr(\"<h2>Hello, {{: data :}}\", data=\"World!\")\n# Output: <h2>Hello, World!</h2>\n```\n\n**2. Using Expressions:**\n```py\nqree.renderStr(\"<h2>Mr. {{: data.title() + '!' :}}\", data=\"bond\")\n# Output: <h2>Mr. Bond!</h2>\n```\n\n**3.  HTML Escaping:**\n```py\nqree.renderStr(\"Mr. {{: data :}}\", data=\"<b> Villain </b>\")\n# Output: Mr. &lt;b&gt; Villain &lt;/b&gt;\n```\n\n**4. Without Escaping:**\n```py\nqree.renderStr(\"Mr. {{= data =}}\", data=\"<b> Villain </b>\")\n# Output: Mr. <b> Villain </b>\n```\n\n**5. Longer Example:**\n```py\nqree.renderStr(\"\"\"\n<!doctype html>\n<html>\n<head>\n    <title>{{: data[\"title\"].title() :}}</title>\n</head>\n<body>\n    <h1>{{: data[\"title\"].title() :}}</h1>\n    <pre>{{: data[\"body\"] :}}</pre>\n</body>\n</html>\n\"\"\", data={\n    \"title\": \"Lorem Ipsum\",\n    \"body\": \"Lorem ipsum dolor sit amet, ... elit.\",\n})\n```\n\\# Output:\n```html\n<!doctype html>\n<html>\n<head>\n    <title>Lorem Ipsum</title>\n</head>\n<body>\n    <h1>Lorem Ipsum</h1>\n    <pre>Lorem ipsum dolor sit amet, ... elit.</pre>\n</body>\n</html>\n\n```\n\nPython Code\n----------------\nAny line beginning with `@=` is treated as Python code. (Preceding whitespace is ignored.)  You can write **any code** you wish, as Qree supports all language features. You can define variables, import modules, make assertions etc. For example:\n\n**Leap Year Detection (with `lambda`):**\n```py\ntplStr = \"\"\"\n@= isLeap = lambda n: (n % 400 == 0) or (n % 100 != 0 and n % 4 == 0)\n@= isOrIsNot = \"IS\" if isLeap(data['year']) else \"is NOT\"\nThe year {{: data['year'] :}} {{: isOrIsNot :}} a leap year.\n\"\"\"\nqree.renderStr(tplStr, data={\"year\": 2000})\n# Output: The year 2000 IS a leap year.\n\nqree.renderStr(tplStr, data={\"year\": 2001})\n# Output: The year 2001 is NOT a leap year.\n```\n\nPython Indentation\n------------------------\n\nPython is an indented language. Use the special tags `@{` and `@}` for respectively indicating indentation and de-indentation to Qree. When used, such a tag *should appear by itself on a separate line*, ignoring whitespace and trailing Python comments. For example:\n\n**Leap Year Detection (with `def`):**  \n```py\ntplStr = \"\"\"\n@= def isLeap (n):\n@{\n    @= if n % 400 == 0: return True;\n    @= if n % 100 == 0: return False;\n    @= return n % 4 == 0;\n@}\n@= isOrIsNot = \"IS\" if isLeap(data['year']) else \"is NOT\"\nThe year {{: data['year'] :}} {{: isOrIsNot :}} a leap year.\n\"\"\"\nqree.renderStr(tplStr, data={\"year\": 2000})\n# Output: The year 2000 IS a leap year.\n\nqree.renderStr(tplStr, data={\"year\": 2001})\n# Output: The year 2001 is NOT a leap year.\n```\n\n**FizzBuzz Example**  \nFizzBuzz is a popular programming assignment. The idea is to print consecutive numbers per line, but instead to print `'Fizz'` for multiples of 3, `'Buzz'` for multiples of 5, and `'FizzBuzz'` for multiples of 3 and 5.\n\n```py\nqree.renderStr(\"\"\"\n@= for n in range(1, data+1):\n@{\n    @= if n % 15 == 0:\n    @{\n        FizzBuzz\n    @}\n    @= elif n % 3 == 0:\n    @{\n        Fizz\n    @}\n    @= elif n % 5 == 0:\n    @{\n        Buzz\n    @}\n    @= else:\n    @{\n        {{: n :}}\n    @}\n@}\n\"\"\", data=20)\n```\n\\# Output:\n```\n        1\n        2\n        Fizz\n        4\n        Buzz\n        Fizz\n        7\n        8\n        Fizz\n        Buzz\n        11\n        Fizz\n        13\n        14\n        FizzBuzz\n        16\n        17\n        Fizz\n        19\n        Buzz\n\n```\n\nThe `data` Variable\n-------------------------\nBy default, data passed via the `data` parameter is available in the template as the `data` variable. However, if you'd like to change the variable name, you may do so via the `variable` parameter. For example:\n```py\nqree.renderStr(\"Hi {{: name :}}!\", data=\"Jim\", variable=\"name\")\n# Output: Hi Jim!\n```\n\nTemplate Files\n------------------\nIt's always convenient to store templates using separate files. To work with files, use `qree.renderPath(tplPath, data, ...)` instead of `qree.renderStr(tplStr, data, ...)`. \n\nLet's say you have the following directory structure:\n```\n- app.py\n- qree.py\n- views/\n        - homepage.html\n```\nHere's `homepage.html` :\n```html\n<doctype html>\n<html>\n<head><title>{{: data['title'] :}}</title></head>\n<body>\n    <h2>{{: data['title'] :}}</h2>\n    <pre>{{: data['body'] :}}</pre>\n</body>\n<html>\n```\n\nIn `app.py`, you could have the following snippet:\n```py\ndef serve_homepage ():\n    return qree.renderPath(\"./views/homepage.html\", data={\n        \"title\": \"The TITLE Goes Here!\",\n        \"body\": \"And the body goes here ...\",\n    });\n```\nWhich would be equivalent to:\n```py\ndef serve_homepage ():\n    with open(\"./views/homepage.html\", \"r\") as f:\n        return qree.renderStr(f.read(), data={\n            \"title\": \"The TITLE Goes Here!\",\n            \"body\": \"And the body goes here ...\",\n        });\n```\nIn either case, the output would be:\n```html\n<doctype html>\n<html>\n<head><title>The TITLE Goes Here!</title></head>\n<body>\n<h2>The TITLE Goes Here!</h2>\n<pre>And the body goes here ...</pre>\n</body>\n<html>\n\n```\n\nQuick Plug\n--------------\nQree built and maintained by the folks at [Polydojo, Inc.](https://www.polydojo.com/), led by [Sumukh Barve](https://www.sumukhbarve.com/). If your team is looking for a simple project management tool, please check out our latest product: [**BoardBell.com**](https://www.boardbell.com/).\n\nTemplate Nesting\n----------------------\nSince templates can include any Python code, you can call `qree.renderPath()` from within a template! Consider the following directory structure:\n```\n- app.py\n- qree.py\n- views/\n        - header.html\n        - homepage.html\n        - footer.html\n```\nWith `header.html`:\n```html\n<header class=\"header\">\n    <a href=\"/link1\">Link 1</a>\n    <a href=\"/link2\">Link 2</a>\n    <a href=\"/link3\">Link 3</a>\n</header>\n```\n\nAnd similarly, `footer.html`:\n```html\n<footer class=\"footer\">\n    <a href=\"/linkA\">Link A</a>\n    <a href=\"/linkB\">Link B</a>\n    <a href=\"/linkC\">Link C</a>\n</footer>\n```\n\nNow, you can use `header.html` and `footer.html` in `homepage.html`:\n```html\n@= import qree;\n@= import qree;\n<doctype html>\n<html>\n<head><title>{{: data['title'] :}}</title></head>\n<body>\n{{= qree.renderPath(\"./test-views/header.html\", data=None) =}}\n<h2>{{: data['title'] :}}</h2>\n<pre>{{: data['body'] :}}</pre>\n{{= qree.renderPath(\"./test-views/footer.html\", data=None) =}}\n</body>\n<html>\n```\n\nAnd, as before, the snippet in `app.py`:\n```py\ndef serve_homepage ():\n    return qree.renderPath(\"./views/homepage.html\", data={\n        \"title\": \"The TITLE Goes Here!\",\n        \"body\": \"And the body goes here ...\",\n    });\n```\nThe output is:\n```html\n<doctype html>\n<html>\n<head><title>... TITLE 2 ...</title></head>\n<body>\n<header class=\"header\">\n    <a href=\"/link1\">Link 1</a>\n    <a href=\"/link2\">Link 2</a>\n    <a href=\"/link3\">Link 3</a>\n</header>\n\n<h2>... TITLE 2 ...</h2>\n<pre>... BODY 2 ...</pre>\n<footer class=\"footer\">\n    <a href=\"/linkA\">Link A</a>\n    <a href=\"/linkB\">Link B</a>\n    <a href=\"/linkC\">Link C</a>\n</footer>\n\n</body>\n<html>\n\n```\n\nIn the above example, we explicitly passed `data=None` to each nested template. We could've passed any value. We could've even ignored the `data` parameter, as it defaults to `None` anyway.\n\n\nCustom Tags (via `tagMap`)\n---------------------------------\n\nDefault tags like `{{:`, `:}}`, `@=`, etc. can each be customized via the `tagMap` parameter. Using `tagMap`, just supply your desired tag as the value against the default tag as key. A few examples follow:\n\n**1. `[[:` Square `:]]` Brackets Instead Of `{{:` Braces `:}}`**\n```py\nqree.renderStr(\n    tplStr=\"Hello, [[: data.title().rstrip('!') + '!' :]]\",\n    data=\"world\",\n    tagMap = {\n        \"{{:\": \"[[:\",\n        \":}}\": \":]]\",\n        \"{{=\": \"[[=\",   # <-- Not directly used in this example.\n        \"=}}\": \"=]]\",   # <---^\n})\n# Output: Hello, World!\n```\n\n**2. Percentage Sign For Code Blocks (`%` vs  `@`)**\n```py\ntplStr = \"\"\"\n%= isLeap = lambda n: (n % 400 == 0) or (n % 100 != 0 and n % 4 == 0)\n%= isOrIsNot = \"IS\" if isLeap(data['year']) else \"is NOT\"\nThe year {{: data['year'] :}} {{: isOrIsNot :}} a leap year.\n\"\"\"\nqree.renderStr(tplStr, data={\"year\": 2020}, tagMap = {\n    \"@=\": \"%=\",\n    \"@{\": \"%{\",   # <-- Not directly used in this example.\n    \"@}\": \"%}\",   # <--^\n})\n# Output: The year 2020 IS a leap year.\n```\n\n**Default `tagMap`:**\nThe default values for each of the tags is as specified in the dict below.\n```py\n{   \"@=\": \"@=\",\n    \"@{\": \"@{\",\n    \"@}\": \"@}\",\n    \"{{=\": \"{{=\", \n    \"=}}\": \"=}}\",\n    \"{{:\": \"{{:\",\n    \":}}\": \":}}\",\n}\n```\n\nView Decorator\n--------------------\nIf you're working with [Flask](https://flask.palletsprojects.com/), [Bottle](https://bottlepy.org/) or a similar WSGI framework, `qree.view` can help bind route to templates. \n```py\n@app.route(\"/user-list\")\n@qree.view(\"./views/user-list.html\", variable=\"userList\")\ndef serve_userList ():\n    userList = yourLogicHere();\n    return userList;\n```\nThe above is identical to the following:\n```py\n@app.route(\"/user-list\")\ndef serve_user_list_page ():\n    userList = yourLogicHere();\n    return qree.renderPath(\"./views/user-list.html\",\n        data=userList, variable=\"userList\",\n    );\n```\n\n**Vilo:**  \nUsing [Vilo](https://github.com/polydojo/vilo) instead of Flask/Bottle? Great choice! Qree jives with Vilo:\n```py\n@app.route(\"GET\", \"/user-list\")\n@qree.view(\"./views/user-list.html\", variable=\"userList\")\ndef serve_userList (req, res):\n    userList = yourLogicHere(req);\n    return userList;\n```\n\n**Custom Tags:**  \nLike with `qree.renderPath(.)` and `qree.renderStr(.)`, you can use custom tags with `qree.view(.)` by passing `tagMap`.\n\nTesting & Contributing\n---------------------------\n\nInstall pytest via `pip install -U pytest`. Run tests with:\n```\npytest\n```\n\nIf you encounter a bug, please open an issue on GitHub; but if you find a security vulnerability, please email security@polydojo.com instead.\n\nIf you'd like to see a new feature or contribute code, please open a GitHub issue. We'd love to hear from you! Suggestions and code contributions will always be appreciated, big and small.\n\n\nLicensing\n------------\nCopyright (c) 2020 Polydojo, Inc.\n\n**Software Licensing:**  \nThe software is released \"AS IS\" under the **MIT license**, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED. Kindly see [LICENSE.txt](https://github.com/polydojo/qree/blob/master/LICENSE.txt) for more details.\n\n**No Trademark Rights:**  \nThe above software licensing terms **do not** grant any right in the trademarks, service marks, brand names or logos of Polydojo, Inc.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/polydojo/qree",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "qree",
    "package_url": "https://pypi.org/project/qree/",
    "platform": "",
    "project_url": "https://pypi.org/project/qree/",
    "project_urls": {
      "Homepage": "https://github.com/polydojo/qree"
    },
    "release_url": "https://pypi.org/project/qree/0.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Qree: Tiny but mighty Python templating.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8735430,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd7dd5e781aacdefd181807546bff6b2cd64c6db2222f8b879cf27b56b844bfc",
          "md5": "a6c39390714a7f950787aae7e6bb43c8",
          "sha256": "5ea82a2f8bfa21fec6e20e6914a87d24158b8a6b2ad8f77b3199177d7d127150"
        },
        "downloads": -1,
        "filename": "qree-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6c39390714a7f950787aae7e6bb43c8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5567,
        "upload_time": "2020-10-23T11:28:20",
        "upload_time_iso_8601": "2020-10-23T11:28:20.530478Z",
        "url": "https://files.pythonhosted.org/packages/dd/7d/d5e781aacdefd181807546bff6b2cd64c6db2222f8b879cf27b56b844bfc/qree-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30f9fb5717acfdb1cf656600e07501f59b18b490d83be6fd8a48c93fd525ebd5",
          "md5": "d6004584610ad7f53f36d599e9410dea",
          "sha256": "76ee1c898801991bc4f1127c93bedbc14369819cd222bbe5558c4acf15f4e80c"
        },
        "downloads": -1,
        "filename": "qree-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d6004584610ad7f53f36d599e9410dea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5614,
        "upload_time": "2020-10-23T11:28:38",
        "upload_time_iso_8601": "2020-10-23T11:28:38.196276Z",
        "url": "https://files.pythonhosted.org/packages/30/f9/fb5717acfdb1cf656600e07501f59b18b490d83be6fd8a48c93fd525ebd5/qree-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afdf8eb8d60110b8b36d5c915924f6b381e9e69dffc20ec39b0fed3699f42887",
          "md5": "2e8e2141e6612bbfbebe5bf3a45f6716",
          "sha256": "28fc7d7c226257521f5cb58a363399954279842fdc8f2e58eb9a0e84ae3a0cad"
        },
        "downloads": -1,
        "filename": "qree-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e8e2141e6612bbfbebe5bf3a45f6716",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6539,
        "upload_time": "2020-10-24T14:37:40",
        "upload_time_iso_8601": "2020-10-24T14:37:40.502542Z",
        "url": "https://files.pythonhosted.org/packages/af/df/8eb8d60110b8b36d5c915924f6b381e9e69dffc20ec39b0fed3699f42887/qree-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98a8d8048c5247fa43e7720ab29d80ddfc7f075b9d54f76e10dd2711d7f6444b",
          "md5": "f8b6461f703fdaf71cd11ab6bf6feb82",
          "sha256": "7242b9035f2cd2eb14289d13187b61d7e8836c7ccd6ab9142d89c866e1c1e695"
        },
        "downloads": -1,
        "filename": "qree-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f8b6461f703fdaf71cd11ab6bf6feb82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6625,
        "upload_time": "2020-10-24T14:37:48",
        "upload_time_iso_8601": "2020-10-24T14:37:48.822783Z",
        "url": "https://files.pythonhosted.org/packages/98/a8/d8048c5247fa43e7720ab29d80ddfc7f075b9d54f76e10dd2711d7f6444b/qree-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca0ac8d4a974a247b3a8b55a76facb88008d15cb1f61043502d1b5c442c1615d",
          "md5": "5e90ef67d89f15d8cca82e042b36fe18",
          "sha256": "a8ee8924052a2ff9e11e16dcd55fe8004b44a9868082f9cd673a8e5289f8501d"
        },
        "downloads": -1,
        "filename": "qree-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e90ef67d89f15d8cca82e042b36fe18",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7631,
        "upload_time": "2020-11-23T11:26:27",
        "upload_time_iso_8601": "2020-11-23T11:26:27.669031Z",
        "url": "https://files.pythonhosted.org/packages/ca/0a/c8d4a974a247b3a8b55a76facb88008d15cb1f61043502d1b5c442c1615d/qree-0.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90aa7ecac196db99ce74af3afe8b677b0f4b5f937d88783b81ff4b3a99036771",
          "md5": "05d9451e4f5be06cdfe9de7f0b4dfb89",
          "sha256": "e1617ba8bdf75500d60e591694389ec4f0e2bd9b80d30d458392067eb5be3819"
        },
        "downloads": -1,
        "filename": "qree-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "05d9451e4f5be06cdfe9de7f0b4dfb89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8265,
        "upload_time": "2020-11-23T11:26:34",
        "upload_time_iso_8601": "2020-11-23T11:26:34.214655Z",
        "url": "https://files.pythonhosted.org/packages/90/aa/7ecac196db99ce74af3afe8b677b0f4b5f937d88783b81ff4b3a99036771/qree-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf2b1ca104d9515c80829f1e53667d0b9704d1b729c9e79e4d685290afba2d75",
          "md5": "346ec7ba6f10ccf1878397743d299ddb",
          "sha256": "d2e3fc8487959f628c6e3c0440248a780ec7a5fe7d0f3ec5f98cc539f7a27903"
        },
        "downloads": -1,
        "filename": "qree-0.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "346ec7ba6f10ccf1878397743d299ddb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 8079,
        "upload_time": "2020-11-24T08:38:01",
        "upload_time_iso_8601": "2020-11-24T08:38:01.661998Z",
        "url": "https://files.pythonhosted.org/packages/cf/2b/1ca104d9515c80829f1e53667d0b9704d1b729c9e79e4d685290afba2d75/qree-0.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55428ea078430c1fb3a5e58879908fd7127fba30b3a5644f04adbfa4bcf75392",
          "md5": "fcfa5fc523a16822095ece2c04629d1b",
          "sha256": "b3bf9b47baa217aabc3a357d24659357bd385426031cd065037613a4a975d453"
        },
        "downloads": -1,
        "filename": "qree-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "fcfa5fc523a16822095ece2c04629d1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8899,
        "upload_time": "2020-11-24T08:38:08",
        "upload_time_iso_8601": "2020-11-24T08:38:08.466073Z",
        "url": "https://files.pythonhosted.org/packages/55/42/8ea078430c1fb3a5e58879908fd7127fba30b3a5644f04adbfa4bcf75392/qree-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf2b1ca104d9515c80829f1e53667d0b9704d1b729c9e79e4d685290afba2d75",
        "md5": "346ec7ba6f10ccf1878397743d299ddb",
        "sha256": "d2e3fc8487959f628c6e3c0440248a780ec7a5fe7d0f3ec5f98cc539f7a27903"
      },
      "downloads": -1,
      "filename": "qree-0.0.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "346ec7ba6f10ccf1878397743d299ddb",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 8079,
      "upload_time": "2020-11-24T08:38:01",
      "upload_time_iso_8601": "2020-11-24T08:38:01.661998Z",
      "url": "https://files.pythonhosted.org/packages/cf/2b/1ca104d9515c80829f1e53667d0b9704d1b729c9e79e4d685290afba2d75/qree-0.0.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55428ea078430c1fb3a5e58879908fd7127fba30b3a5644f04adbfa4bcf75392",
        "md5": "fcfa5fc523a16822095ece2c04629d1b",
        "sha256": "b3bf9b47baa217aabc3a357d24659357bd385426031cd065037613a4a975d453"
      },
      "downloads": -1,
      "filename": "qree-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "fcfa5fc523a16822095ece2c04629d1b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8899,
      "upload_time": "2020-11-24T08:38:08",
      "upload_time_iso_8601": "2020-11-24T08:38:08.466073Z",
      "url": "https://files.pythonhosted.org/packages/55/42/8ea078430c1fb3a5e58879908fd7127fba30b3a5644f04adbfa4bcf75392/qree-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}