{
  "info": {
    "author": "BPHvZ",
    "author_email": "simpleappsfarm@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\nApp Store Connect Api for Home Assistant\n====\n\nThis is a fork of **appstoreconnect** : https://pypi.org/project/appstoreconnect/\n\nThis project removes some of the dependencies.\n\n------------\n\nThis is a Python wrapper around the **Apple App Store Api** : https://developer.apple.com/documentation/appstoreconnectapi\n\nSo far, it handles token generation / expiration, methods for listing resources and downloading reports. \n\nInstallation\n------------\n\n[![Version](http://img.shields.io/pypi/v/appstoreconnect.svg?style=flat)](https://pypi.org/project/appstoreconnect/)\n\nThe project is published on PyPI, install with: \n\n    pip install appstoreconnect\n\nUsage\n-----\n\nPlease follow instructions on [Apple documentation](https://developer.apple.com/documentation/appstoreconnectapi/creating_api_keys_for_app_store_connect_api) on how to generate an API key.\n\nWith your *key ID*, *key file* (you can either pass the path to the file or the content of it as a string) and *issuer ID* create a new API instance:\n\n```python\nfrom appstoreconnect import Api, UserRole\napi = Api(key_id, path_to_key_file, issuer_id)\n\n# use a proxy\napi = Api(key_id, path_to_key_file, issuer_id, proxy='http://1.2.3.4:3128')\n\n# set a timeout (in seconds) for requests\napi = Api(key_id, path_to_key_file, issuer_id, timeout=42)\n```\n\nHere are a few examples of API usage. For a complete list of available methods please see [api.py](https://github.com/Ponytech/appstoreconnectapi/blob/master/appstoreconnect/api.py#L148).\n\n```python\n# list all apps\napps = api.list_apps()\nfor app in apps:\n    print(app.name, app.sku)\n\n# sort resources\napps = api.list_apps(sort='name')\n\n# filter apps\napps = api.list_apps(filters={'sku': 'DINORUSH', 'name': 'Dino Rush'})\nprint(\"%d apps found\" % len(apps))\n\n# read app information\napp = api.read_app_information('1308363336')\nprint(app.name, app.sku, app.bundleId)\n\n# get a related resource\nfor group in app.betaGroups():\n    print(group.name)\n\n# list bundle ids\nfor bundle_id in api.list_bundle_ids():\n    print(bundle_id.identifier)\n\n# list certificates\nfor certificate in api.list_certificates():\n    print(certificate.name)\n\n# modify a user\nuser = api.list_users(filters={'username': 'finance@nemoidstudio.com'})[0]\napi.modify_user_account(user, roles=[UserRole.FINANCE, UserRole.ACCESS_TO_REPORTS])\n    \n# download sales report\napi.download_sales_and_trends_reports(\n    filters={'vendorNumber': '123456789', 'frequency': 'WEEKLY', 'reportDate': '2019-06-09'}, save_to='report.csv')\n\n# download finance report\napi.download_finance_reports(filters={'vendorNumber': '123456789', 'reportDate': '2019-06'}, save_to='finance.csv')\n```\n\nDefine a timeout (in seconds) after which an exception is raised if no response is received. \n\n```python\napi = Api(key_id, path_to_key_file, issuer_id, timeout=30)\napi.list_apps()\n\nAPIError: Read timeout after 30 seconds\n```\n\n\nPlease note this is a work in progress, API is subject to change between versions.\n\nAnonymous data collection\n-------------------------\n\nStarting with version 0.8.0 this library anonymously collects its usage to help better improve its development. \nWhat we collect is:\n\n- a SHA1 hash of the issuer_id\n- the OS and Python version used\n- which enpoints had been used\n\nYou can review the [source code](https://github.com/Ponytech/appstoreconnectapi/blob/b73d4314e2a9f9098f3287f57fff687563e70b28/appstoreconnect/api.py#L238)\n\nIf you feel uncomfortable with it you can completely opt-out by initliazing the API with:\n\n```python\napi = Api(key_id, path_to_key_file, issuer_id, submit_stats=False)\n```\n\nThe is also an [open issue](https://github.com/Ponytech/appstoreconnectapi/issues/18) about this topic where we would love to here your feedback and best practices.\n\n\nDevelopment\n-----------\n\nProject development happens on [Github](https://github.com/Ponytech/appstoreconnectapi) \n\n\nTODO\n----\n\n* [ ] Support App Store Connect API 1.2\n* [ ] Support the include parameter\n* [X] handle POST, DELETE and PATCH requests\n* [X] sales report\n* [X] handle related resources\n* [X] allow to sort resources\n* [ ] proper API documentation\n* [ ] add tests\n\n\nCredits\n-------\n\nThis project is developed by [Ponytech](https://ponytech.net)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BPHvZ/appstoreconnectapi",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "appstoreconnect-BPHvZ",
    "package_url": "https://pypi.org/project/appstoreconnect-BPHvZ/",
    "platform": null,
    "project_url": "https://pypi.org/project/appstoreconnect-BPHvZ/",
    "project_urls": {
      "Homepage": "https://github.com/BPHvZ/appstoreconnectapi"
    },
    "release_url": "https://pypi.org/project/appstoreconnect-BPHvZ/0.10.1/",
    "requires_dist": [
      "requests (==2.*,>=2.20.1)",
      "PyJWT (==2.*,>=2.4.0)"
    ],
    "requires_python": ">=3.6.0",
    "summary": "A Python wrapper around Apple App Store Api",
    "version": "0.10.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14391342,
  "releases": {
    "0.10.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f27846c1198820f66063f91018e6573faafaf231d9d78c4b12e0bda35cb24881",
          "md5": "12d1ff98642fb1bc73323fa3c51a1de1",
          "sha256": "9761346a4e7d73726ae419ac27bf0dbcbccf4adf5065f1e2e9a46e9fc38079ee"
        },
        "downloads": -1,
        "filename": "appstoreconnect_BPHvZ-0.10.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12d1ff98642fb1bc73323fa3c51a1de1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 11392,
        "upload_time": "2022-07-10T16:55:21",
        "upload_time_iso_8601": "2022-07-10T16:55:21.937166Z",
        "url": "https://files.pythonhosted.org/packages/f2/78/46c1198820f66063f91018e6573faafaf231d9d78c4b12e0bda35cb24881/appstoreconnect_BPHvZ-0.10.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb9d8f0443960b89766ab4925412164ada755a14d523a836e741a2cdc4e2dddc",
          "md5": "952827fd0ffc0abc5a4ec94bbfc08980",
          "sha256": "c359067b525011bd77d77d6dbb27cdc02292cd730df0fd064d9668c94b5e6137"
        },
        "downloads": -1,
        "filename": "appstoreconnect_BPHvZ-0.10.1.tar.gz",
        "has_sig": false,
        "md5_digest": "952827fd0ffc0abc5a4ec94bbfc08980",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 13490,
        "upload_time": "2022-07-10T16:55:24",
        "upload_time_iso_8601": "2022-07-10T16:55:24.130332Z",
        "url": "https://files.pythonhosted.org/packages/eb/9d/8f0443960b89766ab4925412164ada755a14d523a836e741a2cdc4e2dddc/appstoreconnect_BPHvZ-0.10.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f27846c1198820f66063f91018e6573faafaf231d9d78c4b12e0bda35cb24881",
        "md5": "12d1ff98642fb1bc73323fa3c51a1de1",
        "sha256": "9761346a4e7d73726ae419ac27bf0dbcbccf4adf5065f1e2e9a46e9fc38079ee"
      },
      "downloads": -1,
      "filename": "appstoreconnect_BPHvZ-0.10.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12d1ff98642fb1bc73323fa3c51a1de1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 11392,
      "upload_time": "2022-07-10T16:55:21",
      "upload_time_iso_8601": "2022-07-10T16:55:21.937166Z",
      "url": "https://files.pythonhosted.org/packages/f2/78/46c1198820f66063f91018e6573faafaf231d9d78c4b12e0bda35cb24881/appstoreconnect_BPHvZ-0.10.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb9d8f0443960b89766ab4925412164ada755a14d523a836e741a2cdc4e2dddc",
        "md5": "952827fd0ffc0abc5a4ec94bbfc08980",
        "sha256": "c359067b525011bd77d77d6dbb27cdc02292cd730df0fd064d9668c94b5e6137"
      },
      "downloads": -1,
      "filename": "appstoreconnect_BPHvZ-0.10.1.tar.gz",
      "has_sig": false,
      "md5_digest": "952827fd0ffc0abc5a4ec94bbfc08980",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 13490,
      "upload_time": "2022-07-10T16:55:24",
      "upload_time_iso_8601": "2022-07-10T16:55:24.130332Z",
      "url": "https://files.pythonhosted.org/packages/eb/9d/8f0443960b89766ab4925412164ada755a14d523a836e741a2cdc4e2dddc/appstoreconnect_BPHvZ-0.10.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}