{
  "info": {
    "author": "Florimond Manca",
    "author_email": "florimond.manca@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# asgi-sitemaps\n\n[![Build Status](https://dev.azure.com/florimondmanca/public/_apis/build/status/florimondmanca.asgi-sitemaps?branchName=master)](https://dev.azure.com/florimondmanca/public/_build/latest?definitionId=11&branchName=master)\n[![Coverage](https://codecov.io/gh/florimondmanca/asgi-sitemaps/branch/master/graph/badge.svg)](https://codecov.io/gh/florimondmanca/asgi-sitemaps)\n![Python versions](https://img.shields.io/pypi/pyversions/asgi-sitemaps.svg)\n[![Package version](https://badge.fury.io/py/asgi-sitemaps.svg)](https://pypi.org/project/asgi-sitemaps)\n\n[Sitemap](https://www.sitemaps.org) generation for ASGI applications. Inspired by [Django's sitemap framework](https://docs.djangoproject.com/en/3.0/ref/contrib/sitemaps/).\n\n**Contents**\n\n- [Features](#features)\n- [Installation](#installation)\n- [Quickstart](#quickstart)\n- [How-To](#how-to)\n  - [Sitemap sections](#sitemap-sections)\n  - [Dynamic generation from database queries](#dynamic-generation-from-database-queries)\n  - [Advanced web framework integration](#advanced-web-framework-integration)\n- [API Reference](#api-reference)\n  - [`Sitemap`](#class-sitemap)\n  - [`SitemapApp`](#class-sitemapapp)\n\n## Features\n\n- Build and compose sitemap sections into a single dynamic ASGI endpoint.\n- Supports drawing sitemap items from a variety of sources (static lists, (async) ORM queries, etc).\n- Compatible with any ASGI framework.\n- Fully type annotated.\n- 100% test coverage.\n\n## Installation\n\nInstall with pip:\n\n```shell\n$ pip install 'asgi-sitemaps==1.*'\n```\n\n`asgi-sitemaps` requires Python 3.7+.\n\n## Quickstart\n\nLet's build a static sitemap for a \"Hello, world!\" application. The sitemap will contain a single URL entry for the home `/` endpoint.\n\nHere is the project file structure:\n\n```console\n.\n└── server\n    ├── __init__.py\n    ├── app.py\n    └── sitemap.py\n```\n\nFirst, declare a sitemap section by subclassing `Sitemap`, then wrap it in a `SitemapApp`:\n\n```python\n# server/sitemap.py\nimport asgi_sitemaps\n\nclass Sitemap(asgi_sitemaps.Sitemap):\n    def items(self):\n        return [\"/\"]\n\n    def location(self, item: str):\n        return item\n\n    def changefreq(self, item: str):\n        return \"monthly\"\n\nsitemap = asgi_sitemaps.SitemapApp(Sitemap(), domain=\"example.io\")\n```\n\nNow, register the `sitemap` endpoint as a route onto your ASGI app. For example, if using Starlette:\n\n```python\n# server/app.py\nfrom starlette.applications import Starlette\nfrom starlette.responses import PlainTextResponse\nfrom starlette.routing import Route\nfrom .sitemap import sitemap\n\nasync def home(request):\n    return PlainTextResponse(\"Hello, world!\")\n\nroutes = [\n    Route(\"/\", home),\n    Route(\"/sitemap.xml\", sitemap),\n]\n\napp = Starlette(routes=routes)\n```\n\nServe the app using `$ uvicorn server.app:app`, then request the sitemap:\n\n```bash\ncurl http://localhost:8000/sitemap.xml\n```\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n  <url>\n    <loc>http://example.io/</loc>\n    <changefreq>monthly</changefreq>\n    <priority>0.5</priority>\n  </url>\n</urlset>\n```\n\nTada!\n\nTo learn more:\n\n- See [How-To](#how-to) for more advanced usage, including splitting the sitemap in multiple sections, and dynamically generating entries from database queries.\n- See the [`Sitemap` API reference](#class-sitemap) for all supported sitemap options.\n\n## How-To\n\n### Sitemap sections\n\nYou can combine multiple sitemap classes into a single sitemap endpoint. This is useful to split the sitemap in multiple sections that may have different `items()` and/or sitemap attributes. Such sections could be static pages, blog posts, recent articles, etc.\n\nTo do so, declare multiple sitemap classes, then pass them as a list to `SitemapApp`:\n\n```python\n# server/sitemap.py\nimport asgi_sitemaps\n\nclass StaticSitemap(asgi_sitemaps.Sitemap):\n    ...\n\nclass BlogSitemap(asgi_sitemaps.Sitemap):\n    ...\n\nsitemap = asgi_sitemaps.SitemapApp([StaticSitemap(), BlogSitemap()], domain=\"example.io\")\n```\n\nEntries from each sitemap will be concatenated when building the final `sitemap.xml`.\n\n### Dynamic generation from database queries\n\n`Sitemap.items()` supports consuming any async iterable. This means you can easily integrate with an async database client or ORM so that `Sitemap.items()` fetches and returns relevant rows for generating your sitemap.\n\nHere's an example using [Databases](https://github.com/encode/databases), assuming you have a `Database` instance in `server/resources.py`:\n\n```python\n# server/sitemap.py\nimport asgi_sitemaps\nfrom .resources import database\n\nclass Sitemap(asgi_sitemaps.Sitemap):\n    async def items(self):\n        query = \"SELECT permalink, updated_at FROM articles;\"\n        return await database.fetch_all(query)\n\n    def location(self, row: dict):\n        return row[\"permalink\"]\n```\n\n### Advanced web framework integration\n\nWhile `asgi-sitemaps` is framework-agnostic, you can use the [`.scope` attribute](#scope) available on `Sitemap` instances to feed the ASGI scope into your framework-specific APIs for inspecting and manipulating request information.\n\nHere is an example with [Starlette](https://www.starlette.io) where we build sitemap of static pages. To decouple from the raw URL paths, pages are referred to by view name. We reverse-lookup their URLs by building a `Request` instance from the ASGI `.scope`, and using `.url_for()`:\n\n```python\n# server/sitemap.py\nimport asgi_sitemaps\nfrom starlette.datastructures import URL\nfrom starlette.requests import Request\n\nclass StaticSitemap(asgi_sitemaps.Sitemap):\n    def items(self):\n        return [\"home\", \"about\", \"blog:home\"]\n\n    def location(self, name: str):\n        request = Request(scope=self.scope)\n        url = request.url_for(name)\n        return URL(url).path\n```\n\nThe corresponding Starlette routing table could look something like this:\n\n```python\n# server/routes.py\nfrom starlette.routing import Mount, Route\nfrom . import views\nfrom .sitemap import sitemap\n\nroutes = [\n    Route(\"/\", views.home, name=\"home\"),\n    Route(\"/about\", views.about, name=\"about\"),\n    Route(\"/blog/\", views.blog_home, name=\"blog:home\"),\n    Route(\"/sitemap.xml\", sitemap),\n]\n```\n\n## API Reference\n\n### _class_ `Sitemap`\n\nRepresents a source of sitemap entries.\n\nYou can specify the type `T` of sitemap items for extra type safety:\n\n```python\nimport asgi_sitemaps\n\nclass MySitemap(asgi_sitemaps.Sitemap[str]):\n    ...\n```\n\n#### _async_ `items`\n\nSignature: `async def () -> Union[Iterable[T], AsyncIterable[T]]`\n\n_(**Required**)_ Return an [iterable](https://docs.python.org/3/glossary.html#term-iterable) or an [asynchronous iterable](https://docs.python.org/3/glossary.html#term-asynchronous-iterable) of items of the same type. Each item will be passed as-is to `.location()`, `.lastmod()`, `.changefreq()`, and `.priority()`.\n\nExamples:\n\n```python\n# Simplest usage: return a list\ndef items(self) -> List[str]:\n    return [\"/\", \"/contact\"]\n\n# Async operations are also supported\nasync def items(self) -> List[dict]:\n    query = \"SELECT permalink, updated_at FROM pages;\"\n    return await database.fetch_all(query)\n\n# Sync and async generators are also supported\nasync def items(self) -> AsyncIterator[dict]:\n    query = \"SELECT permalink, updated_at FROM pages;\"\n    async for row in database.aiter_rows(query):\n        yield row\n```\n\n#### `location`\n\nSignature: `def (item: T) -> str`\n\n_(**Required**)_ Return the absolute path of a sitemap item.\n\n\"Absolute path\" means an URL path without a protocol or domain. For example: `/blog/my-article`. (So `https://mydomain.com/blog/my-article` is not a valid location, nor is `mydomain.com/blog/my-article`.)\n\n#### `lastmod`\n\nSignature: `def (item: T) -> Optional[datetime.datetime]`\n\n_(Optional)_ Return the [date of last modification](https://www.sitemaps.org/protocol.html#lastmoddef) of a sitemap item as a [`datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime) object, or `None` (the default) for no `lastmod` field.\n\n#### `changefreq`\n\nSignature: `def (item: T) -> Optional[str]`\n\n_(Optional)_ Return the [change frequency](https://www.sitemaps.org/protocol.html#changefreqdef) of a sitemap item.\n\nPossible values are:\n\n- `None` - No `changefreq` field (the default).\n- `\"always\"`\n- `\"hourly\"`\n- `\"daily\"`\n- `\"weekly\"`\n- `\"monthly\"`\n- `\"yearly\"`\n- `\"never\"`\n\n#### `priority`\n\nSignature: `def (item: T) -> float`\n\n_(Optional)_ Return the [priority](https://www.sitemaps.org/protocol.html#prioritydef) of a sitemap item. Must be between 0 and 1. Defaults to `0.5`.\n\n#### `protocol`\n\nType: `str`\n\n_(Optional)_ This attribute defines the protocol used to build URLs of the sitemap.\n\nPossible values are:\n\n- `\"auto\"` - The protocol with which the sitemap was requested (the default).\n- `\"http\"`\n- `\"https\"`\n\n#### `scope`\n\nThis property returns the [ASGI scope](https://asgi.readthedocs.io/en/latest/specs/www.html#connection-scope) of the current HTTP request.\n\n### _class_ `SitemapApp`\n\nAn ASGI application that responds to HTTP requests with the `sitemap.xml` contents of the sitemap.\n\nParameters:\n\n- _(**Required**)_ `sitemaps` - A `Sitemap` object or a list of `Sitemap` objects, used to generate sitemap entries.\n- _(**Required**)_ `domain` - The domain to use when generating sitemap URLs.\n\nExamples:\n\n```python\nsitemap = SitemapApp(Sitemap(), domain=\"mydomain.com\")\nsitemap = SitemapApp([StaticSitemap(), BlogSitemap()], domain=\"mydomain.com\")\n```\n\n## License\n\nMIT\n\n\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n\n## 1.0 - 2022-02-13\n\n### Added\n\n- _Now marked as Production/Stable software._ (Pull #14)\n- Add official support for Python 3.9 and Python 3.10. (Pull #13)\n\n## 0.3.2 - 2020-07-07\n\n### Fixed\n\n- Fix support for async items. (Pull #9)\n\n## 0.3.1 - 2020-07-05\n\n### Fixed\n\n- Fix `Scope` type hint: values are now `Any`.\n\n## 0.3.0 - 2020-07-05\n\nThis release changes the approach from \"scrape the ASGI app to gather URLs\" to a programmatic class-based API inspired by Django's sitemap framework.\n\nAs such, the command line application does not exist anymore. Users are expected to define `Sitemap` classes, compose them into a `SitemapApp` endpoint, and add that to their ASGI app routing table.\n\nSee the new `README.md` documentation for more information.\n\n### Changed\n\n- Switch to a class-based dynamic endpoint API. (Pull #4)\n\n## 0.2.0 - 2020-06-01\n\n### Changed\n\n- Project was renamed from `sitemaps` to `asgi-sitemaps` - sitemap generation for ASGI apps. (Pull #2)\n- Change options of CLI and programmatic API to fit new \"ASGI-only\" project scope. (Pull #2)\n- CLI now reads from stdin (for `--check` mode) and outputs sitemap to stdout. (Pull #2)\n\n### Removed\n\n- Drop support for crawling arbitrary remote servers. (Pull #2)\n\n### Fixed\n\n- Don't include non-200 or non-HTML URLs in sitemap. (Pull #2)\n\n## 0.1.0 - 2020-05-31\n\n### Added\n\n- Initial implementation: CLI and programmatic async API.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/florimondmanca/asgi-sitemaps",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asgi-sitemaps",
    "package_url": "https://pypi.org/project/asgi-sitemaps/",
    "platform": "",
    "project_url": "https://pypi.org/project/asgi-sitemaps/",
    "project_urls": {
      "Homepage": "http://github.com/florimondmanca/asgi-sitemaps"
    },
    "release_url": "https://pypi.org/project/asgi-sitemaps/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Sitemap generation for ASGI applications.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12876246,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5d58aca6c96df4cf3b97504386b144a95c6daf31564386e779d573068555b31",
          "md5": "e7b9bd5b9723a4da757605c040e7c89b",
          "sha256": "91610d0a45335f53bbcd2148622449bbd1609ba3c711d130c19fbc1966ab40fd"
        },
        "downloads": -1,
        "filename": "asgi_sitemaps-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7b9bd5b9723a4da757605c040e7c89b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15316,
        "upload_time": "2020-06-01T18:55:27",
        "upload_time_iso_8601": "2020-06-01T18:55:27.817178Z",
        "url": "https://files.pythonhosted.org/packages/d5/d5/8aca6c96df4cf3b97504386b144a95c6daf31564386e779d573068555b31/asgi_sitemaps-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07f285e4dde8747ca7a58680a673a54357521b8867b3a937dcaf7cf109f38afa",
          "md5": "ec2db2911fda01fa508c76946929895e",
          "sha256": "4a5d9e27297f2e2c21d513d9fdc49d508ebabf0aa316584514af86541640a213"
        },
        "downloads": -1,
        "filename": "asgi-sitemaps-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ec2db2911fda01fa508c76946929895e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14037,
        "upload_time": "2020-06-01T18:55:28",
        "upload_time_iso_8601": "2020-06-01T18:55:28.987212Z",
        "url": "https://files.pythonhosted.org/packages/07/f2/85e4dde8747ca7a58680a673a54357521b8867b3a937dcaf7cf109f38afa/asgi-sitemaps-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd77ebe021d3d0cc8ccc844da83954456ee5112a70bfc636a615865b9a8cfb61",
          "md5": "e8d2b77921457de776e7e55fd6b51d30",
          "sha256": "3f82681fe2c792f096387e4512780d0b502a0e6de7dd2ee46553139e0932abe3"
        },
        "downloads": -1,
        "filename": "asgi_sitemaps-0.2.0rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8d2b77921457de776e7e55fd6b51d30",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15479,
        "upload_time": "2020-06-01T18:44:22",
        "upload_time_iso_8601": "2020-06-01T18:44:22.549829Z",
        "url": "https://files.pythonhosted.org/packages/cd/77/ebe021d3d0cc8ccc844da83954456ee5112a70bfc636a615865b9a8cfb61/asgi_sitemaps-0.2.0rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8f67553acd5a0f6e0c7a8c8895f9645237d54067dcc14b8401104b1011118ec",
          "md5": "e12ee35382d60c2cad7e410dcdbe69cb",
          "sha256": "5b353a875f79bdc90e396d79d1862ff77aba10078c9b0759065ed85628033cfa"
        },
        "downloads": -1,
        "filename": "asgi-sitemaps-0.2.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "e12ee35382d60c2cad7e410dcdbe69cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14213,
        "upload_time": "2020-06-01T18:44:24",
        "upload_time_iso_8601": "2020-06-01T18:44:24.642863Z",
        "url": "https://files.pythonhosted.org/packages/f8/f6/7553acd5a0f6e0c7a8c8895f9645237d54067dcc14b8401104b1011118ec/asgi-sitemaps-0.2.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c2c1f6d9dd4f8009bc4ad841b6b6a63f8438736b78f9875e7760af2b92415c5",
          "md5": "b8f2c61e12f828170d7fde4682158332",
          "sha256": "0f08ea7880f69afd9f44bb531db84ca21ccb5c832b44c16c05c1243d55e896ef"
        },
        "downloads": -1,
        "filename": "asgi_sitemaps-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8f2c61e12f828170d7fde4682158332",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9075,
        "upload_time": "2020-07-05T17:37:02",
        "upload_time_iso_8601": "2020-07-05T17:37:02.491914Z",
        "url": "https://files.pythonhosted.org/packages/5c/2c/1f6d9dd4f8009bc4ad841b6b6a63f8438736b78f9875e7760af2b92415c5/asgi_sitemaps-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8862b7fed94c9533d6f14b2e1d6970b1d9f0280e06dbca58672d465d42d314ed",
          "md5": "f4424ec591297c89e11f1f7331828a0d",
          "sha256": "4ce3bd44b8b2e6a6fa792ed2c59cea0e3d79f0cb4026028d2bc447001cb74ae9"
        },
        "downloads": -1,
        "filename": "asgi-sitemaps-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f4424ec591297c89e11f1f7331828a0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13080,
        "upload_time": "2020-07-05T17:37:03",
        "upload_time_iso_8601": "2020-07-05T17:37:03.498252Z",
        "url": "https://files.pythonhosted.org/packages/88/62/b7fed94c9533d6f14b2e1d6970b1d9f0280e06dbca58672d465d42d314ed/asgi-sitemaps-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84d94a8213732f199f996991c276628950482c84c918af3c3d80bd6b91dd23ad",
          "md5": "536e164bc1dd2cc60d2046f4fb6b7d7c",
          "sha256": "fb3d5939b01166a1ac8dec6a6c6875055656a1466f158e353af1c60bb2f1178e"
        },
        "downloads": -1,
        "filename": "asgi_sitemaps-0.3.0b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "536e164bc1dd2cc60d2046f4fb6b7d7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 21416,
        "upload_time": "2020-07-05T16:54:40",
        "upload_time_iso_8601": "2020-07-05T16:54:40.372220Z",
        "url": "https://files.pythonhosted.org/packages/84/d9/4a8213732f199f996991c276628950482c84c918af3c3d80bd6b91dd23ad/asgi_sitemaps-0.3.0b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9da417b4a8ab68d311fbcb5336016a7bef5c78dcb76aa15f8eea8242e424aa7e",
          "md5": "61e04fd0b7f15ed81bede840b55893ef",
          "sha256": "91ac310f142e6113ffc1810ee64b91b9a16a681a1b4c816e3fd199ff42c441a0"
        },
        "downloads": -1,
        "filename": "asgi-sitemaps-0.3.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "61e04fd0b7f15ed81bede840b55893ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 20917,
        "upload_time": "2020-07-05T16:54:43",
        "upload_time_iso_8601": "2020-07-05T16:54:43.373955Z",
        "url": "https://files.pythonhosted.org/packages/9d/a4/17b4a8ab68d311fbcb5336016a7bef5c78dcb76aa15f8eea8242e424aa7e/asgi-sitemaps-0.3.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "103b5c2faf1d119faa67f3dc139c4a64f2308b764d2277f2d101f2e7bdd8d268",
          "md5": "1de4d3748cf46168d3b4ac25a7a0df03",
          "sha256": "0e172f0ab0f60a56737a1bb3827cc000644b0a684518c005178381f70f747226"
        },
        "downloads": -1,
        "filename": "asgi_sitemaps-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1de4d3748cf46168d3b4ac25a7a0df03",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9112,
        "upload_time": "2020-07-05T20:50:10",
        "upload_time_iso_8601": "2020-07-05T20:50:10.074780Z",
        "url": "https://files.pythonhosted.org/packages/10/3b/5c2faf1d119faa67f3dc139c4a64f2308b764d2277f2d101f2e7bdd8d268/asgi_sitemaps-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21745740637e6e110dd6a05dc9523441d747bcee45111a5ce7063ee190d12f3e",
          "md5": "1b059afaf1ea85cdd5353e8fb4a5a653",
          "sha256": "c99b593461031ebfd41d7763d537ebfc7a0ea3595d10fb9b20e012807a2fc6e2"
        },
        "downloads": -1,
        "filename": "asgi-sitemaps-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1b059afaf1ea85cdd5353e8fb4a5a653",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13187,
        "upload_time": "2020-07-05T20:50:11",
        "upload_time_iso_8601": "2020-07-05T20:50:11.282955Z",
        "url": "https://files.pythonhosted.org/packages/21/74/5740637e6e110dd6a05dc9523441d747bcee45111a5ce7063ee190d12f3e/asgi-sitemaps-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "045b01511b6be306f592436d774274e86eccd13231abbf20ba1c36848db6ec53",
          "md5": "3e8bdc67c4243df562aaa9a6b133a9ea",
          "sha256": "b20aa963f1553a1ff5b1757b4fb130fafcf11ec70f985668f95c62c63c1fb432"
        },
        "downloads": -1,
        "filename": "asgi_sitemaps-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e8bdc67c4243df562aaa9a6b133a9ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9213,
        "upload_time": "2020-07-07T08:37:49",
        "upload_time_iso_8601": "2020-07-07T08:37:49.696833Z",
        "url": "https://files.pythonhosted.org/packages/04/5b/01511b6be306f592436d774274e86eccd13231abbf20ba1c36848db6ec53/asgi_sitemaps-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4901de63020dd689c63c2794619cfc73f86a5ddbc78cf8bfbcf30f073fb711cb",
          "md5": "64435ca875b6d76dd5e8ac1d5faf57bb",
          "sha256": "ede30466cddb8d242f0e1169f9824ab810d56ac9b4beaf56ada2a90779439caf"
        },
        "downloads": -1,
        "filename": "asgi-sitemaps-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "64435ca875b6d76dd5e8ac1d5faf57bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13343,
        "upload_time": "2020-07-07T08:37:50",
        "upload_time_iso_8601": "2020-07-07T08:37:50.905374Z",
        "url": "https://files.pythonhosted.org/packages/49/01/de63020dd689c63c2794619cfc73f86a5ddbc78cf8bfbcf30f073fb711cb/asgi-sitemaps-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "551cd2ec9fbd7d4ed7ec3e72a763c0b9944d9d6f70454234048c00c895c43540",
          "md5": "1cb51dc248d104cdbf3c49ec57c18a1f",
          "sha256": "9040d1a17abd72d800e2f9e567d7d7bdac0fe63858db4608c98bc4c39a895470"
        },
        "downloads": -1,
        "filename": "asgi_sitemaps-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1cb51dc248d104cdbf3c49ec57c18a1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9260,
        "upload_time": "2022-02-13T14:23:05",
        "upload_time_iso_8601": "2022-02-13T14:23:05.531163Z",
        "url": "https://files.pythonhosted.org/packages/55/1c/d2ec9fbd7d4ed7ec3e72a763c0b9944d9d6f70454234048c00c895c43540/asgi_sitemaps-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba356a52cd37f7e9c9386755c1ec1bdd2b6faa3d44f22744841339e7508bd2bb",
          "md5": "669c474cc34249d747bf6dd1da71c9fa",
          "sha256": "07d63459eb353990f5dc3cce8b49d4bca6f77db38c49b4d35e4ef84e881f4368"
        },
        "downloads": -1,
        "filename": "asgi-sitemaps-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "669c474cc34249d747bf6dd1da71c9fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12442,
        "upload_time": "2022-02-13T14:23:07",
        "upload_time_iso_8601": "2022-02-13T14:23:07.256118Z",
        "url": "https://files.pythonhosted.org/packages/ba/35/6a52cd37f7e9c9386755c1ec1bdd2b6faa3d44f22744841339e7508bd2bb/asgi-sitemaps-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "551cd2ec9fbd7d4ed7ec3e72a763c0b9944d9d6f70454234048c00c895c43540",
        "md5": "1cb51dc248d104cdbf3c49ec57c18a1f",
        "sha256": "9040d1a17abd72d800e2f9e567d7d7bdac0fe63858db4608c98bc4c39a895470"
      },
      "downloads": -1,
      "filename": "asgi_sitemaps-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1cb51dc248d104cdbf3c49ec57c18a1f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9260,
      "upload_time": "2022-02-13T14:23:05",
      "upload_time_iso_8601": "2022-02-13T14:23:05.531163Z",
      "url": "https://files.pythonhosted.org/packages/55/1c/d2ec9fbd7d4ed7ec3e72a763c0b9944d9d6f70454234048c00c895c43540/asgi_sitemaps-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba356a52cd37f7e9c9386755c1ec1bdd2b6faa3d44f22744841339e7508bd2bb",
        "md5": "669c474cc34249d747bf6dd1da71c9fa",
        "sha256": "07d63459eb353990f5dc3cce8b49d4bca6f77db38c49b4d35e4ef84e881f4368"
      },
      "downloads": -1,
      "filename": "asgi-sitemaps-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "669c474cc34249d747bf6dd1da71c9fa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 12442,
      "upload_time": "2022-02-13T14:23:07",
      "upload_time_iso_8601": "2022-02-13T14:23:07.256118Z",
      "url": "https://files.pythonhosted.org/packages/ba/35/6a52cd37f7e9c9386755c1ec1bdd2b6faa3d44f22744841339e7508bd2bb/asgi-sitemaps-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}