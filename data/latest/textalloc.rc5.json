{
  "info": {
    "author": "",
    "author_email": "Christoffer Kjellson <c.kjellson@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# textalloc - Efficient matplotlib Text Allocation\n\nplt.text|textalloc (2.1s)\n:-------------------------:|:-------------------------:\n![](images/scattertext_before.png)|![](images/scattertext_after.png)\n<div align=\"center\">\nScatterplot design from scattertext (https://github.com/JasonKessler/scattertext)\n</div>\n\n# Quick-start\n\n## Installation\n\n```\npip install textalloc\n```\n\n## Using textalloc\n\nThe code below generates the plot to the right:\n\n```\nimport textalloc as ta\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nnp.random.seed(0)\nx, y = np.random.random((2,30))\nfig, ax = plt.subplots()\nax.scatter(x, y, c='b')\ntext_list = [f'Text{i}' for i in range(len(x))]\nta.allocate_text(fig,ax,x,y,\n                text_list,\n                x_scatter=x, y_scatter=y,\n                textsize=10)\nplt.show()\n```\n\nplt.text|textalloc\n:-------------------------:|:-------------------------:\n![](images/scatter_before.png)|![](images/scatter_after.png)\n\n## Parameters\n```\nfig:\n    matplotlib figure used for rendering textbox-sizes.\nax:\n    matplotlib axes used for plotting.\nx: (array-like):\n    x-coordinates of texts.\ny: (array-like):\n    y-coordinates of texts.\ntext_list: (array-like):\n    list of texts.\nx_scatter: (array-like), default None\n    x-coordinates of all scattered points.\ny_scatter: (array-like), default None\n    y-coordinates of all scattered points.\nx_lines: (array-like), default None\n    x-coordinates of all lines in plot.\ny_lines: (array-like), default None\n    y-coordinates of all lines in plot.\ntextsize: (int), default 10\n    Size of text.\nmargin: (float), default 0.01\n    Parameter for margins between objects.\n    Increase for larger margins to points and lines.\n    Given in proportion of ax dimensions (0-1)\nmin_distance: (float), default 0.015\n    Parameter for min distance from textbox to\n    its plotted position.\n    Given in proportion of ax dimensions (0-1)\nmax_distance: (float), default 0.07\n    Parameter for max distance from textbox to\n    its plotted position.\n    Given in proportion of ax dimensions (0-1)\nverbose: (bool), default False\n    prints progress using tqdm.\ndraw_lines: (bool), default True\n    draws lines from original points to textboxes.\nlinecolor: (str), default \"r\"\n    Color code of the lines between points and text-boxes.\ndraw_all: (bool), default True\n    Draws all texts after allocating as many as possible despite overlap.\nnbr_candidates: (int), default 100\n    Sets the number of candidates used.\nlinewidth: (float), default 1\n    Width of line between textbox and it's origin.\ntextcolor: (str), default \"k\"\n    Color code of the text.\n```\n# Implementation and speed\n\nThe focus in this implementation is on speed and allocating as many text-boxes as possible into the free space in the plot. There are three main steps of the algorithm:\n\nFor each textbox to be plotted:\n1. Generate a large number of candidate boxes near the original point with size that matches the fontsize.\n2. Find the candidates that do not overlap any points, lines, plot boundaries, or already allocated boxes.\n3. Allocate the text to the first candidate box with no overlaps.\n\n## Speed\n\nThe plot in the top of this Readme was generated in 2.1s on a local laptop, and there are rarely more textboxes that fit into one plot. If the result is still too slow to render, try decreasing `nbr_candidates`.\n\nThe speed is greatly improved by usage of numpy broadcasting in all functions for computing overlap (see `textalloc/overlap_functions` and `textalloc/find_non_overlapping`). A simple example from the function `non_overlapping_with_boxes` which checks if the candidate boxes (expanded with xfrac, yfrac to provide a margin) overlap with already allocated boxes:\n\n```\ncandidates[:, 0][:, None] - xfrac > box_arr[:, 2]\n```\n\nThe code compares xmin coordinates of all candidates with xmax coordinates of all allocated boxes resulting in a boolean matrix of shape (N_candidates, N_allocated) by use of indexing `[:, None]`.\n\n# Types of overlap supported\n\ntextalloc supports avoiding overlap with points, lines, and the plot boundary in addition to other text-boxes. See examples below and `demo.py` for all examples:\n\n```\nimport textalloc as ta\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx_line = np.array([0.0, 0.03192317, 0.04101177, 0.26085659, 0.40261173, 0.42142198, 0.87160195, 1.00349979])\ny_line = np.array([0. , 0.2, 0.2, 0.4, 0.8, 0.6, 1. , 1. ])\ntext_list = ['0', '25', '50', '75', '100', '125', '150', '250']\nnp.random.seed(0)\nx, y = np.random.random((2,100))\n\nfig,ax = plt.subplots(dpi=100)\nax.plot(x_line,y_line,color=\"black\")\nax.scatter(x,y,c=\"b\")\nta.allocate_text(fig,ax,x_line,y_line,\n                text_list,\n                x_scatter=x, y_scatter=y,\n                x_lines=[x_line], y_lines=[y_line])\nplt.show()\n```\n\nplt.text|textalloc (0.2s)\n:-------------------------:|:-------------------------:\n![](images/scatterlines_before.png)|![](images/scatterlines_after.png)\n\n```\nimport textalloc as ta\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nnp.random.seed(2017)\nx_data = np.random.random_sample(100)\ny_data = np.random.random_integers(10,50,(100))\n\nf, ax = plt.subplots(dpi=200)\nbars = ax.bar(x_data, y_data, width=0.002, facecolor='k')\nta.allocate_text(f,ax,x_data,y_data,\n                [str(yy) for yy in list(y_data)],\n                x_lines=[np.array([xx,xx]) for xx in list(x_data)],\n                y_lines=[np.array([0,yy]) for yy in list(y_data)], \n                textsize=8,\n                margin=0.004,\n                min_distance=0.005,\n                linewidth=0.7,\n                nbr_candidates=100,\n                textcolor=\"b\")\nplt.show()\n```\n\nplt.text|textalloc (0.7s)\n:-------------------------:|:-------------------------:\n![](images/bar_before.png)|![](images/bar_after.png)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "textalloc",
    "package_url": "https://pypi.org/project/textalloc/",
    "platform": null,
    "project_url": "https://pypi.org/project/textalloc/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ckjellson/textalloc/issues",
      "Homepage": "https://github.com/ckjellson/textalloc"
    },
    "release_url": "https://pypi.org/project/textalloc/0.0.5/",
    "requires_dist": [
      "tqdm",
      "numpy",
      "matplotlib"
    ],
    "requires_python": ">=3.7",
    "summary": "Efficient Text Allocation in matplotlib using NumPy Broadcasting",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17159505,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f96ba1a1c537c43e7c3e9d77770a27bd2ce193ab826c60ca3fbf6409b52c1f8",
          "md5": "2a2faac9865379f9fc1280f667b265ed",
          "sha256": "236e2c7db5b9c1a911df0f2b338a9b064b738ee1864ca2224d63f6d81920792c"
        },
        "downloads": -1,
        "filename": "textalloc-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a2faac9865379f9fc1280f667b265ed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9939,
        "upload_time": "2022-10-31T21:28:43",
        "upload_time_iso_8601": "2022-10-31T21:28:43.136000Z",
        "url": "https://files.pythonhosted.org/packages/3f/96/ba1a1c537c43e7c3e9d77770a27bd2ce193ab826c60ca3fbf6409b52c1f8/textalloc-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac1b0a8023eb7bf86e145a5eb855f0e1eb51c4a0d35010008943c26c0ba4d01c",
          "md5": "65d4254ee995060cbaa88049c0f7a541",
          "sha256": "739763e57789fc93075072d1c9d024081b381f693b9c8d152b5195c37c984ab5"
        },
        "downloads": -1,
        "filename": "textalloc-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "65d4254ee995060cbaa88049c0f7a541",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10438,
        "upload_time": "2022-10-31T21:28:44",
        "upload_time_iso_8601": "2022-10-31T21:28:44.669910Z",
        "url": "https://files.pythonhosted.org/packages/ac/1b/0a8023eb7bf86e145a5eb855f0e1eb51c4a0d35010008943c26c0ba4d01c/textalloc-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9569eadee768b1d0d3519babb3e032bccf3c1478abab0cee4414c59d40641415",
          "md5": "c247544c971510bcdd54beac1fad34e5",
          "sha256": "c971ef9b45f204f86033413c0178cd53458dc4a3c15c85d65ab9e5e2b74a34fc"
        },
        "downloads": -1,
        "filename": "textalloc-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c247544c971510bcdd54beac1fad34e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9941,
        "upload_time": "2022-10-31T21:34:27",
        "upload_time_iso_8601": "2022-10-31T21:34:27.097634Z",
        "url": "https://files.pythonhosted.org/packages/95/69/eadee768b1d0d3519babb3e032bccf3c1478abab0cee4414c59d40641415/textalloc-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "726ef3d059640a068b568d0c7c11abd234794a9501df988e0a24ee93705eb65b",
          "md5": "86ecfc9165ee14b65a784be957f18640",
          "sha256": "8a02f991f14c29d4a1ac269f43b1125dcec7d474d315dfa88a080a8c8ade7802"
        },
        "downloads": -1,
        "filename": "textalloc-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "86ecfc9165ee14b65a784be957f18640",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10445,
        "upload_time": "2022-10-31T21:34:28",
        "upload_time_iso_8601": "2022-10-31T21:34:28.681703Z",
        "url": "https://files.pythonhosted.org/packages/72/6e/f3d059640a068b568d0c7c11abd234794a9501df988e0a24ee93705eb65b/textalloc-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09af6212c8d8f78ffdc4befaa977d18f01668811bfb8a7efb45592b13445df5f",
          "md5": "f0e9468f339b29670dd8677d195d6510",
          "sha256": "d335d07ef5b291fc482795c459522140cfffcba10760187e0aa54ebbf4ee2a71"
        },
        "downloads": -1,
        "filename": "textalloc-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0e9468f339b29670dd8677d195d6510",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9899,
        "upload_time": "2022-11-01T07:16:13",
        "upload_time_iso_8601": "2022-11-01T07:16:13.194761Z",
        "url": "https://files.pythonhosted.org/packages/09/af/6212c8d8f78ffdc4befaa977d18f01668811bfb8a7efb45592b13445df5f/textalloc-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d955eb914fc2edf10a5492d6b661479ca786faaf2da4cf45979776672311410",
          "md5": "a520e01748463e4a0e50707cebf97302",
          "sha256": "e51716a65f82bf980cb91f400044e02253075b0ee34f00d07d05c092510fd5b4"
        },
        "downloads": -1,
        "filename": "textalloc-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a520e01748463e4a0e50707cebf97302",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10377,
        "upload_time": "2022-11-01T07:16:14",
        "upload_time_iso_8601": "2022-11-01T07:16:14.843994Z",
        "url": "https://files.pythonhosted.org/packages/2d/95/5eb914fc2edf10a5492d6b661479ca786faaf2da4cf45979776672311410/textalloc-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e966c14344e13741692918633332d7edb5e7c209eca0e7716b349b9d49b12144",
          "md5": "2cae6098252a01a65d3423c7168cae29",
          "sha256": "f8f7306a3de861f779e7dd2a80a27238d49c992bb14bfd30e125370ab7ca634f"
        },
        "downloads": -1,
        "filename": "textalloc-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cae6098252a01a65d3423c7168cae29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10230,
        "upload_time": "2022-11-03T07:34:13",
        "upload_time_iso_8601": "2022-11-03T07:34:13.470524Z",
        "url": "https://files.pythonhosted.org/packages/e9/66/c14344e13741692918633332d7edb5e7c209eca0e7716b349b9d49b12144/textalloc-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a43c44b3e047f7d95af9151f1f56287d61615a3a498e9a2cbcc0a8e23935e7e3",
          "md5": "dd94e9471595304cb96cea2e053623e5",
          "sha256": "e0c177a79c909d1bdd3cf417e743a5d2f9c04ef8ce33df7321a29d753cd7fe4e"
        },
        "downloads": -1,
        "filename": "textalloc-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "dd94e9471595304cb96cea2e053623e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10826,
        "upload_time": "2022-11-03T07:34:15",
        "upload_time_iso_8601": "2022-11-03T07:34:15.778055Z",
        "url": "https://files.pythonhosted.org/packages/a4/3c/44b3e047f7d95af9151f1f56287d61615a3a498e9a2cbcc0a8e23935e7e3/textalloc-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51fb763d8d41d039a520e28ee2eeba7ebd1457cf23f9c70f0835a620f1d03ba6",
          "md5": "a066a7d9e60ade19b69a180da6c91193",
          "sha256": "e54069510886a5cf81dc37e52d9e24552d8354e844a6136e106750651b2714d2"
        },
        "downloads": -1,
        "filename": "textalloc-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a066a7d9e60ade19b69a180da6c91193",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10148,
        "upload_time": "2023-03-04T21:44:18",
        "upload_time_iso_8601": "2023-03-04T21:44:18.483783Z",
        "url": "https://files.pythonhosted.org/packages/51/fb/763d8d41d039a520e28ee2eeba7ebd1457cf23f9c70f0835a620f1d03ba6/textalloc-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd2d1eba43eff508cb96b66bdf48261ec5978949186952cddfefd3b58acd682b",
          "md5": "d47a9b6e27925a87938222135f222798",
          "sha256": "42e46f3d78f40d0ffdc5a51e80a023e797af008c7be910e839a7031080c4c50b"
        },
        "downloads": -1,
        "filename": "textalloc-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d47a9b6e27925a87938222135f222798",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10660,
        "upload_time": "2023-03-04T21:44:20",
        "upload_time_iso_8601": "2023-03-04T21:44:20.717035Z",
        "url": "https://files.pythonhosted.org/packages/bd/2d/1eba43eff508cb96b66bdf48261ec5978949186952cddfefd3b58acd682b/textalloc-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51fb763d8d41d039a520e28ee2eeba7ebd1457cf23f9c70f0835a620f1d03ba6",
        "md5": "a066a7d9e60ade19b69a180da6c91193",
        "sha256": "e54069510886a5cf81dc37e52d9e24552d8354e844a6136e106750651b2714d2"
      },
      "downloads": -1,
      "filename": "textalloc-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a066a7d9e60ade19b69a180da6c91193",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10148,
      "upload_time": "2023-03-04T21:44:18",
      "upload_time_iso_8601": "2023-03-04T21:44:18.483783Z",
      "url": "https://files.pythonhosted.org/packages/51/fb/763d8d41d039a520e28ee2eeba7ebd1457cf23f9c70f0835a620f1d03ba6/textalloc-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd2d1eba43eff508cb96b66bdf48261ec5978949186952cddfefd3b58acd682b",
        "md5": "d47a9b6e27925a87938222135f222798",
        "sha256": "42e46f3d78f40d0ffdc5a51e80a023e797af008c7be910e839a7031080c4c50b"
      },
      "downloads": -1,
      "filename": "textalloc-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "d47a9b6e27925a87938222135f222798",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 10660,
      "upload_time": "2023-03-04T21:44:20",
      "upload_time_iso_8601": "2023-03-04T21:44:20.717035Z",
      "url": "https://files.pythonhosted.org/packages/bd/2d/1eba43eff508cb96b66bdf48261ec5978949186952cddfefd3b58acd682b/textalloc-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}