{
  "info": {
    "author": "Saurabh Kumar",
    "author_email": "me+github@saurabh-kumar.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": "# python-dotenv\n\n[![Build Status][build_status_badge]][build_status_link]\n[![PyPI version][pypi_badge]][pypi_link]\n\nPython-dotenv reads key-value pairs from a `.env` file and can set them as environment\nvariables. It helps in the development of applications following the\n[12-factor](http://12factor.net/) principles.\n\n- [Getting Started](#getting-started)\n- [Other Use Cases](#other-use-cases)\n  * [Load configuration without altering the environment](#load-configuration-without-altering-the-environment)\n  * [Parse configuration as a stream](#parse-configuration-as-a-stream)\n  * [Load .env files in IPython](#load-env-files-in-ipython)\n- [Command-line Interface](#command-line-interface)\n- [File format](#file-format)\n  * [Multiline values](#multiline-values)\n  * [Variable expansion](#variable-expansion)\n- [Related Projects](#related-projects)\n- [Acknowledgements](#acknowledgements)\n\n## Getting Started\n\n```shell\npip install python-dotenv\n```\n\nIf your application takes its configuration from environment variables, like a 12-factor\napplication, launching it in development is not very practical because you have to set\nthose environment variables yourself.\n\nTo help you with that, you can add Python-dotenv to your application to make it load the\nconfiguration from a `.env` file when it is present (e.g. in development) while remaining\nconfigurable via the environment:\n\n```python\nfrom dotenv import load_dotenv\n\nload_dotenv()  # take environment variables from .env.\n\n# Code of your application, which uses environment variables (e.g. from `os.environ` or\n# `os.getenv`) as if they came from the actual environment.\n```\n\nBy default, `load_dotenv` doesn't override existing environment variables.\n\nTo configure the development environment, add a `.env` in the root directory of your\nproject:\n\n```\n.\n├── .env\n└── foo.py\n```\n\nThe syntax of `.env` files supported by python-dotenv is similar to that of Bash:\n\n```bash\n# Development settings\nDOMAIN=example.org\nADMIN_EMAIL=admin@${DOMAIN}\nROOT_URL=${DOMAIN}/app\n```\n\nIf you use variables in values, ensure they are surrounded with `{` and `}`, like\n`${DOMAIN}`, as bare variables such as `$DOMAIN` are not expanded.\n\nYou will probably want to add `.env` to your `.gitignore`, especially if it contains\nsecrets like a password.\n\nSee the section \"File format\" below for more information about what you can write in a\n`.env` file.\n\n## Other Use Cases\n\n### Load configuration without altering the environment\n\nThe function `dotenv_values` works more or less the same way as `load_dotenv`, except it\ndoesn't touch the environment, it just returns a `dict` with the values parsed from the\n`.env` file.\n\n```python\nfrom dotenv import dotenv_values\n\nconfig = dotenv_values(\".env\")  # config = {\"USER\": \"foo\", \"EMAIL\": \"foo@example.org\"}\n```\n\nThis notably enables advanced configuration management:\n\n```python\nimport os\nfrom dotenv import dotenv_values\n\nconfig = {\n    **dotenv_values(\".env.shared\"),  # load shared development variables\n    **dotenv_values(\".env.secret\"),  # load sensitive variables\n    **os.environ,  # override loaded values with environment variables\n}\n```\n\n### Parse configuration as a stream\n\n`load_dotenv` and `dotenv_values` accept [streams][python_streams] via their `stream`\nargument.  It is thus possible to load the variables from sources other than the\nfilesystem (e.g. the network).\n\n```python\nfrom io import StringIO\n\nfrom dotenv import load_dotenv\n\nconfig = StringIO(\"USER=foo\\nEMAIL=foo@example.org\")\nload_dotenv(stream=config)\n```\n\n### Load .env files in IPython\n\nYou can use dotenv in IPython.  By default, it will use `find_dotenv` to search for a\n`.env` file:\n\n```python\n%load_ext dotenv\n%dotenv\n```\n\nYou can also specify a path:\n\n```python\n%dotenv relative/or/absolute/path/to/.env\n```\n\nOptional flags:\n\n- `-o` to override existing variables.\n- `-v` for increased verbosity.\n\n## Command-line Interface\n\nA CLI interface `dotenv` is also included, which helps you manipulate the `.env` file\nwithout manually opening it.\n\n```shell\n$ pip install \"python-dotenv[cli]\"\n$ dotenv set USER=foo\n$ dotenv set EMAIL=foo@example.org\n$ dotenv list\nUSER=foo\nEMAIL=foo@example.org\n$ dotenv run -- python foo.py\n```\n\nRun `dotenv --help` for more information about the options and subcommands.\n\n## File format\n\nThe format is not formally specified and still improves over time.  That being said,\n`.env` files should mostly look like Bash files.\n\nKeys can be unquoted or single-quoted. Values can be unquoted, single- or double-quoted.\nSpaces before and after keys, equal signs, and values are ignored. Values can be followed\nby a comment.  Lines can start with the `export` directive, which has no effect on their\ninterpretation.\n\nAllowed escape sequences:\n\n- in single-quoted values: `\\\\`, `\\'`\n- in double-quoted values: `\\\\`, `\\'`, `\\\"`, `\\a`, `\\b`, `\\f`, `\\n`, `\\r`, `\\t`, `\\v`\n\n### Multiline values\n\nIt is possible for single- or double-quoted values to span multiple lines.  The following\nexamples are equivalent:\n\n```bash\nFOO=\"first line\nsecond line\"\n```\n\n```bash\nFOO=\"first line\\nsecond line\"\n```\n\n### Variable expansion\n\nPython-dotenv can interpolate variables using POSIX variable expansion.\n\nWith `load_dotenv(override=True)` or `dotenv_values()`, the value of a variable is the\nfirst of the values defined in the following list:\n\n- Value of that variable in the `.env` file.\n- Value of that variable in the environment.\n- Default value, if provided.\n- Empty string.\n\nWith `load_dotenv(override=False)`, the value of a variable is the first of the values\ndefined in the following list:\n\n- Value of that variable in the environment.\n- Value of that variable in the `.env` file.\n- Default value, if provided.\n- Empty string.\n\n## Related Projects\n\n-   [Honcho](https://github.com/nickstenning/honcho) - For managing\n    Procfile-based applications.\n-   [django-dotenv](https://github.com/jpadilla/django-dotenv)\n-   [django-environ](https://github.com/joke2k/django-environ)\n-   [django-configuration](https://github.com/jezdez/django-configurations)\n-   [dump-env](https://github.com/sobolevn/dump-env)\n-   [environs](https://github.com/sloria/environs)\n-   [dynaconf](https://github.com/rochacbruno/dynaconf)\n\n## Acknowledgements\n\nThis project is currently maintained by [Saurabh Kumar](https://saurabh-kumar.com) and\n[Bertrand Bonnefoy-Claudet](https://github.com/bbc2) and would not have been possible\nwithout the support of these [awesome\npeople](https://github.com/theskumar/python-dotenv/graphs/contributors).\n\n[build_status_badge]: https://github.com/theskumar/python-dotenv/actions/workflows/test.yml/badge.svg\n[build_status_link]: https://github.com/theskumar/python-dotenv/actions/workflows/test.yml\n[pypi_badge]: https://badge.fury.io/py/python-dotenv.svg\n[pypi_link]: http://badge.fury.io/py/python-dotenv\n[python_streams]: https://docs.python.org/3/library/io.html\n\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/), and this\nproject adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [0.17.1] - 2021-04-29\n\n### Fixed\n\n- Fixed tests for build environments relying on `PYTHONPATH` (#318 by [@befeleme]).\n\n## [0.17.0] - 2021-04-02\n\n### Changed\n\n- Make `dotenv get <key>` only show the value, not `key=value` (#313 by [@bbc2]).\n\n### Added\n\n- Add `--override`/`--no-override` option to `dotenv run` (#312 by [@zueve] and [@bbc2]).\n\n## [0.16.0] - 2021-03-27\n\n### Changed\n\n- The default value of the `encoding` parameter for `load_dotenv` and `dotenv_values` is\n  now `\"utf-8\"` instead of `None` (#306 by [@bbc2]).\n- Fix resolution order in variable expansion with `override=False` (#287 by [@bbc2]).\n\n## [0.15.0] - 2020-10-28\n\n### Added\n\n- Add `--export` option to `set` to make it prepend the binding with `export` (#270 by\n  [@jadutter]).\n\n### Changed\n\n- Make `set` command create the `.env` file in the current directory if no `.env` file was\n  found (#270 by [@jadutter]).\n\n### Fixed\n\n- Fix potentially empty expanded value for duplicate key (#260 by [@bbc2]).\n- Fix import error on Python 3.5.0 and 3.5.1 (#267 by [@gongqingkui]).\n- Fix parsing of unquoted values containing several adjacent space or tab characters\n  (#277 by [@bbc2], review by [@x-yuri]).\n\n## [0.14.0] - 2020-07-03\n\n### Changed\n\n- Privilege definition in file over the environment in variable expansion (#256 by\n  [@elbehery95]).\n\n### Fixed\n\n- Improve error message for when file isn't found (#245 by [@snobu]).\n- Use HTTPS URL in package meta data (#251 by [@ekohl]).\n\n## [0.13.0] - 2020-04-16\n\n### Added\n\n- Add support for a Bash-like default value in variable expansion (#248 by [@bbc2]).\n\n## [0.12.0] - 2020-02-28\n\n### Changed\n\n- Use current working directory to find `.env` when bundled by PyInstaller (#213 by\n  [@gergelyk]).\n\n### Fixed\n\n- Fix escaping of quoted values written by `set_key` (#236 by [@bbc2]).\n- Fix `dotenv run` crashing on environment variables without values (#237 by [@yannham]).\n- Remove warning when last line is empty (#238 by [@bbc2]).\n\n## [0.11.0] - 2020-02-07\n\n### Added\n\n- Add `interpolate` argument to `load_dotenv` and `dotenv_values` to disable interpolation\n  (#232 by [@ulyssessouza]).\n\n### Changed\n\n- Use logging instead of warnings (#231 by [@bbc2]).\n\n### Fixed\n\n- Fix installation in non-UTF-8 environments (#225 by [@altendky]).\n- Fix PyPI classifiers (#228 by [@bbc2]).\n\n## [0.10.5] - 2020-01-19\n\n### Fixed\n\n- Fix handling of malformed lines and lines without a value (#222 by [@bbc2]):\n  - Don't print warning when key has no value.\n  - Reject more malformed lines (e.g. \"A: B\", \"a='b',c\").\n- Fix handling of lines with just a comment (#224 by [@bbc2]).\n\n## [0.10.4] - 2020-01-17\n\n### Added\n\n- Make typing optional (#179 by [@techalchemy]).\n- Print a warning on malformed line (#211 by [@bbc2]).\n- Support keys without a value (#220 by [@ulyssessouza]).\n\n## 0.10.3\n\n- Improve interactive mode detection ([@andrewsmith])([#183]).\n- Refactor parser to fix parsing inconsistencies ([@bbc2])([#170]).\n  - Interpret escapes as control characters only in double-quoted strings.\n  - Interpret `#` as start of comment only if preceded by whitespace.\n\n## 0.10.2\n\n- Add type hints and expose them to users ([@qnighy])([#172])\n- `load_dotenv` and `dotenv_values` now accept an `encoding` parameter, defaults to `None`\n  ([@theskumar])([@earlbread])([#161])\n- Fix `str`/`unicode` inconsistency in Python 2: values are always `str` now. ([@bbc2])([#121])\n- Fix Unicode error in Python 2, introduced in 0.10.0. ([@bbc2])([#176])\n\n## 0.10.1\n- Fix parsing of variable without a value ([@asyncee])([@bbc2])([#158])\n\n## 0.10.0\n\n- Add support for UTF-8 in unquoted values ([@bbc2])([#148])\n- Add support for trailing comments ([@bbc2])([#148])\n- Add backslashes support in values ([@bbc2])([#148])\n- Add support for newlines in values ([@bbc2])([#148])\n- Force environment variables to str with Python2 on Windows ([@greyli])\n- Drop Python 3.3 support ([@greyli])\n- Fix stderr/-out/-in redirection ([@venthur])\n\n\n## 0.9.0\n\n- Add `--version` parameter to cli ([@venthur])\n- Enable loading from current directory ([@cjauvin])\n- Add 'dotenv run' command for calling arbitrary shell script with .env ([@venthur])\n\n## 0.8.1\n\n-   Add tests for docs ([@Flimm])\n-   Make 'cli' support optional. Use `pip install python-dotenv[cli]`. ([@theskumar])\n\n## 0.8.0\n\n-   `set_key` and `unset_key` only modified the affected file instead of\n    parsing and re-writing file, this causes comments and other file\n    entact as it is.\n-   Add support for `export` prefix in the line.\n-   Internal refractoring ([@theskumar])\n-   Allow `load_dotenv` and `dotenv_values` to work with `StringIO())` ([@alanjds])([@theskumar])([#78])\n\n## 0.7.1\n\n-   Remove hard dependency on iPython ([@theskumar])\n\n## 0.7.0\n\n-   Add support to override system environment variable via .env.\n    ([@milonimrod](https://github.com/milonimrod))\n    ([\\#63](https://github.com/theskumar/python-dotenv/issues/63))\n-   Disable \".env not found\" warning by default\n    ([@maxkoryukov](https://github.com/maxkoryukov))\n    ([\\#57](https://github.com/theskumar/python-dotenv/issues/57))\n\n## 0.6.5\n\n-   Add support for special characters `\\`.\n    ([@pjona](https://github.com/pjona))\n    ([\\#60](https://github.com/theskumar/python-dotenv/issues/60))\n\n## 0.6.4\n\n-   Fix issue with single quotes ([@Flimm])\n    ([\\#52](https://github.com/theskumar/python-dotenv/issues/52))\n\n## 0.6.3\n\n-   Handle unicode exception in setup.py\n    ([\\#46](https://github.com/theskumar/python-dotenv/issues/46))\n\n## 0.6.2\n\n-   Fix dotenv list command ([@ticosax](https://github.com/ticosax))\n-   Add iPython Suport\n    ([@tillahoffmann](https://github.com/tillahoffmann))\n\n## 0.6.0\n\n-   Drop support for Python 2.6\n-   Handle escaped charaters and newlines in quoted values. (Thanks\n    [@iameugenejo](https://github.com/iameugenejo))\n-   Remove any spaces around unquoted key/value. (Thanks\n    [@paulochf](https://github.com/paulochf))\n-   Added POSIX variable expansion. (Thanks\n    [@hugochinchilla](https://github.com/hugochinchilla))\n\n## 0.5.1\n\n-   Fix find\\_dotenv - it now start search from the file where this\n    function is called from.\n\n## 0.5.0\n\n-   Add `find_dotenv` method that will try to find a `.env` file.\n    (Thanks [@isms](https://github.com/isms))\n\n## 0.4.0\n\n-   cli: Added `-q/--quote` option to control the behaviour of quotes\n    around values in `.env`. (Thanks\n    [@hugochinchilla](https://github.com/hugochinchilla)).\n-   Improved test coverage.\n\n[#78]: https://github.com/theskumar/python-dotenv/issues/78\n[#121]: https://github.com/theskumar/python-dotenv/issues/121\n[#148]: https://github.com/theskumar/python-dotenv/issues/148\n[#158]: https://github.com/theskumar/python-dotenv/issues/158\n[#170]: https://github.com/theskumar/python-dotenv/issues/170\n[#172]: https://github.com/theskumar/python-dotenv/issues/172\n[#176]: https://github.com/theskumar/python-dotenv/issues/176\n[#183]: https://github.com/theskumar/python-dotenv/issues/183\n\n[@Flimm]: https://github.com/Flimm\n[@alanjds]: https://github.com/alanjds\n[@altendky]: https://github.com/altendky\n[@andrewsmith]: https://github.com/andrewsmith\n[@asyncee]: https://github.com/asyncee\n[@bbc2]: https://github.com/bbc2\n[@befeleme]: https://github.com/befeleme\n[@cjauvin]: https://github.com/cjauvin\n[@earlbread]: https://github.com/earlbread\n[@ekohl]: https://github.com/ekohl\n[@elbehery95]: https://github.com/elbehery95\n[@gergelyk]: https://github.com/gergelyk\n[@gongqingkui]: https://github.com/gongqingkui\n[@greyli]: https://github.com/greyli\n[@jadutter]: https://github.com/jadutter\n[@qnighy]: https://github.com/qnighy\n[@snobu]: https://github.com/snobu\n[@techalchemy]: https://github.com/techalchemy\n[@theskumar]: https://github.com/theskumar\n[@ulyssessouza]: https://github.com/ulyssessouza\n[@venthur]: https://github.com/venthur\n[@x-yuri]: https://github.com/x-yuri\n[@yannham]: https://github.com/yannham\n[@zueve]: https://github.com/zueve\n\n[Unreleased]: https://github.com/theskumar/python-dotenv/compare/v0.17.1...HEAD\n[0.17.1]: https://github.com/theskumar/python-dotenv/compare/v0.17.0...v0.17.1\n[0.17.0]: https://github.com/theskumar/python-dotenv/compare/v0.16.0...v0.17.0\n[0.16.0]: https://github.com/theskumar/python-dotenv/compare/v0.15.0...v0.16.0\n[0.15.0]: https://github.com/theskumar/python-dotenv/compare/v0.14.0...v0.15.0\n[0.14.0]: https://github.com/theskumar/python-dotenv/compare/v0.13.0...v0.14.0\n[0.13.0]: https://github.com/theskumar/python-dotenv/compare/v0.12.0...v0.13.0\n[0.12.0]: https://github.com/theskumar/python-dotenv/compare/v0.11.0...v0.12.0\n[0.11.0]: https://github.com/theskumar/python-dotenv/compare/v0.10.5...v0.11.0\n[0.10.5]: https://github.com/theskumar/python-dotenv/compare/v0.10.4...v0.10.5\n[0.10.4]: https://github.com/theskumar/python-dotenv/compare/v0.10.3...v0.10.4\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/theskumar/python-dotenv",
    "keywords": "environment variables,deployments,settings,env,dotenv,configurations,python",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-dotenv-yaml",
    "package_url": "https://pypi.org/project/python-dotenv-yaml/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-dotenv-yaml/",
    "project_urls": {
      "Homepage": "https://github.com/theskumar/python-dotenv"
    },
    "release_url": "https://pypi.org/project/python-dotenv-yaml/0.17.1/",
    "requires_dist": [
      "typing ; python_version < \"3.5\"",
      "click (>=5.0) ; extra == 'cli'"
    ],
    "requires_python": "",
    "summary": "Read key-value pairs from a .env file and set them as environment variables -> with support for yaml syntax",
    "version": "0.17.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10686025,
  "releases": {
    "0.17.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91584917c4b628454d3ce030c8942f63e8dc71170b8d88885c840d6acbad9107",
          "md5": "165b7d2d8c150fc26a6bc5d389c8ebdf",
          "sha256": "87d90744b6129ff4715c0562026582fae7fdcfa350d67ca40d647b3a05e05013"
        },
        "downloads": -1,
        "filename": "python_dotenv_yaml-0.17.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "165b7d2d8c150fc26a6bc5d389c8ebdf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18460,
        "upload_time": "2021-06-18T16:51:02",
        "upload_time_iso_8601": "2021-06-18T16:51:02.722405Z",
        "url": "https://files.pythonhosted.org/packages/91/58/4917c4b628454d3ce030c8942f63e8dc71170b8d88885c840d6acbad9107/python_dotenv_yaml-0.17.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f57da837facb269fccdb1868f4c5dd99794803aeded8701cc5d115a2f503ccb",
          "md5": "4d9f13beb0fd70e7bb0ca44150378afa",
          "sha256": "ed204feb4abccb1dbab9808c04de142a1a681ee422a15c88a18413355004e28c"
        },
        "downloads": -1,
        "filename": "python-dotenv-yaml-0.17.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4d9f13beb0fd70e7bb0ca44150378afa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31716,
        "upload_time": "2021-06-18T16:51:04",
        "upload_time_iso_8601": "2021-06-18T16:51:04.130079Z",
        "url": "https://files.pythonhosted.org/packages/2f/57/da837facb269fccdb1868f4c5dd99794803aeded8701cc5d115a2f503ccb/python-dotenv-yaml-0.17.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "91584917c4b628454d3ce030c8942f63e8dc71170b8d88885c840d6acbad9107",
        "md5": "165b7d2d8c150fc26a6bc5d389c8ebdf",
        "sha256": "87d90744b6129ff4715c0562026582fae7fdcfa350d67ca40d647b3a05e05013"
      },
      "downloads": -1,
      "filename": "python_dotenv_yaml-0.17.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "165b7d2d8c150fc26a6bc5d389c8ebdf",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 18460,
      "upload_time": "2021-06-18T16:51:02",
      "upload_time_iso_8601": "2021-06-18T16:51:02.722405Z",
      "url": "https://files.pythonhosted.org/packages/91/58/4917c4b628454d3ce030c8942f63e8dc71170b8d88885c840d6acbad9107/python_dotenv_yaml-0.17.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f57da837facb269fccdb1868f4c5dd99794803aeded8701cc5d115a2f503ccb",
        "md5": "4d9f13beb0fd70e7bb0ca44150378afa",
        "sha256": "ed204feb4abccb1dbab9808c04de142a1a681ee422a15c88a18413355004e28c"
      },
      "downloads": -1,
      "filename": "python-dotenv-yaml-0.17.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4d9f13beb0fd70e7bb0ca44150378afa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 31716,
      "upload_time": "2021-06-18T16:51:04",
      "upload_time_iso_8601": "2021-06-18T16:51:04.130079Z",
      "url": "https://files.pythonhosted.org/packages/2f/57/da837facb269fccdb1868f4c5dd99794803aeded8701cc5d115a2f503ccb/python-dotenv-yaml-0.17.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}