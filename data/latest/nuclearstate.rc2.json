{
  "info": {
    "author": "Jan Dziedziak",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Nuclear - Reactive state management for python\n\n## Atoms and Derives\n\nThe base element in nuclear is called an atom. You can create one with `atom({starting value})`.\n\nTo create a derivative of an atom (or of another derivative) you can user the `derivative({source})` function.\n\nTo get or set any atoms or derivatives, you can use the `.set()` and `.get()` methods.\n\nTo add reactions to changed, you can use the `.react()` method.\n\nExample program:\n\n```\nbase = atom(10) #Creates an atom with value 10\nderived = derive(lambda: base.get() * 2) #Creates a derive which will always be equal to base * 2\nderived.react(lambda: print('The value of derived was changed))\n\nprint(base.get()) # prints 10\nprint(derived.get()) # prints 20\n\nbase.set(20) # prints 'The value of derived was changed'\nprint(derived.get()) # prints 40\n```\n\n## Events and Messages\n\nTo allow nuclear to implicitly send events and message, you must initialise it with `nuclear.init(globals())`.\n\nTo create a class that can recieve and send messages, it needs to inherit from `Receiver`.\n\nTo respond to events or messages, you can add methods to your class that follow the format:\n\nFor events, `on_{your event name}`\n\nFor messages, `receive_{your message name}`\n\nThen to send events and messages you can use:\n\nFor events, `broadcast({your event name})`\n\nFor messages, `send({your message name}, {data})`\n\nExample program:\n\n```\nnuclear.init(globals())\n\nclass TestClass(Receiver):\n    def __init__(self):\n        pass\n    def on_TestEvent(self):\n        print('Test Event received')\n    def receive_TestMessage(self, data):\n        print(f'TestMessage sent data {data}')\n\ntest1 = TestClass()\n\nbroadcast('TestEvent') # prints 'Test Event received'\nsend('TestMessage', 200) # prints 'TestMessage sent data 200'\n```\n\nYou can also change the format with `nuclear.format({events}, {messages})`.\n\n## Event Modes\n\nThe event mode can be changed with `eventMode({chosen mode})`\n\n* `explicit`: Best performance: If you use this mode, you must tag every object that will receive an event or message with `nuclear.event_r({event name}, {object})` or `nuclear.message_r({message name}, {object})`.\n\n* `described`: Second best performance: If you use this mode, you must run the `nuclear.scan()` function after you have initialised your objects.\n\n* `predicted`: Second worst performance: Automatically calls the scan function when you call your first event or message. May not work if you're objects are initialised after the function is called.\n\n* `implicit`: Worst performance: The default option, will always work.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nuclearstate",
    "package_url": "https://pypi.org/project/nuclearstate/",
    "platform": "",
    "project_url": "https://pypi.org/project/nuclearstate/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/nuclearstate/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Reactive state management for python",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10644536,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6abd102442833dad2ed897c4733f3f253809a741712c91e506d09067a1ccd5c",
          "md5": "00e7213bcd17446bfb91c62cd8ba5ff3",
          "sha256": "b278e707cee24abfb45fce3f20d2bf9b504ca22d36e8598631a002dbf696308c"
        },
        "downloads": -1,
        "filename": "nuclearstate-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "00e7213bcd17446bfb91c62cd8ba5ff3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3839,
        "upload_time": "2021-06-13T20:14:06",
        "upload_time_iso_8601": "2021-06-13T20:14:06.087347Z",
        "url": "https://files.pythonhosted.org/packages/b6/ab/d102442833dad2ed897c4733f3f253809a741712c91e506d09067a1ccd5c/nuclearstate-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b74b49edf1bb0ab9e7cbaabb9ee5dacdf08a152f9e53fc4fe9b71a68f059432c",
          "md5": "ec774af4739350029a05745c61e5cd00",
          "sha256": "96dc4cd1ac66d1ba8bba8e88726fb1ca6d86b4bf09f6689e0b331e96261ccc55"
        },
        "downloads": -1,
        "filename": "nuclearstate-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ec774af4739350029a05745c61e5cd00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3807,
        "upload_time": "2021-06-13T20:14:07",
        "upload_time_iso_8601": "2021-06-13T20:14:07.799712Z",
        "url": "https://files.pythonhosted.org/packages/b7/4b/49edf1bb0ab9e7cbaabb9ee5dacdf08a152f9e53fc4fe9b71a68f059432c/nuclearstate-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "010ac37a76ebd7f472275397ad366422867b2be266ec2713e025a35b936bf3a2",
          "md5": "18b5deb80c58054c0fcc6fa91502d73e",
          "sha256": "572f9627f03cd408066d18b70ada6f8e94292f3ca5bea922c2013d6ced2794ce"
        },
        "downloads": -1,
        "filename": "nuclearstate-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18b5deb80c58054c0fcc6fa91502d73e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4240,
        "upload_time": "2021-06-14T17:27:53",
        "upload_time_iso_8601": "2021-06-14T17:27:53.872227Z",
        "url": "https://files.pythonhosted.org/packages/01/0a/c37a76ebd7f472275397ad366422867b2be266ec2713e025a35b936bf3a2/nuclearstate-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc15a0b2c021c046c556864cd76a670115c64fecf19ae955ef03660334fde984",
          "md5": "4ba44be91f4cdeedcf75625c3aa50d25",
          "sha256": "6069870a255141aa43d6fa80866252d567dbcd969eaf9671db406e8c25fb7868"
        },
        "downloads": -1,
        "filename": "nuclearstate-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4ba44be91f4cdeedcf75625c3aa50d25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4245,
        "upload_time": "2021-06-14T17:27:56",
        "upload_time_iso_8601": "2021-06-14T17:27:56.390826Z",
        "url": "https://files.pythonhosted.org/packages/bc/15/a0b2c021c046c556864cd76a670115c64fecf19ae955ef03660334fde984/nuclearstate-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "010ac37a76ebd7f472275397ad366422867b2be266ec2713e025a35b936bf3a2",
        "md5": "18b5deb80c58054c0fcc6fa91502d73e",
        "sha256": "572f9627f03cd408066d18b70ada6f8e94292f3ca5bea922c2013d6ced2794ce"
      },
      "downloads": -1,
      "filename": "nuclearstate-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "18b5deb80c58054c0fcc6fa91502d73e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4240,
      "upload_time": "2021-06-14T17:27:53",
      "upload_time_iso_8601": "2021-06-14T17:27:53.872227Z",
      "url": "https://files.pythonhosted.org/packages/01/0a/c37a76ebd7f472275397ad366422867b2be266ec2713e025a35b936bf3a2/nuclearstate-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc15a0b2c021c046c556864cd76a670115c64fecf19ae955ef03660334fde984",
        "md5": "4ba44be91f4cdeedcf75625c3aa50d25",
        "sha256": "6069870a255141aa43d6fa80866252d567dbcd969eaf9671db406e8c25fb7868"
      },
      "downloads": -1,
      "filename": "nuclearstate-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4ba44be91f4cdeedcf75625c3aa50d25",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4245,
      "upload_time": "2021-06-14T17:27:56",
      "upload_time_iso_8601": "2021-06-14T17:27:56.390826Z",
      "url": "https://files.pythonhosted.org/packages/bc/15/a0b2c021c046c556864cd76a670115c64fecf19ae955ef03660334fde984/nuclearstate-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}