{
  "info": {
    "author": "mjinnn",
    "author_email": "932288652@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## py_wechat_tools简介\n\n集微信公众号小程序服务端接口功能库\n打造一个更简洁，更好用的微信公众号小程序SDK\n\n\n# 更新说明\n查看： [更新说明](./docs/UPDATE.md)\n\n\n## 快速使用\n\n首先实例化\n\n    from py_wechat_tools import MPTools\n\n    wx = MPTools(\n        appid=\"appid\",\n        secret=\"secret\",\n    )\n\n以登录授权接口为例，一行代码搞定登录接口\n\n    # js_code为小程序调用wx.login()获取的code\n    user_data = wx.code2session(js_code=\"0936ry000b8c4O1S5f300RnDwB06ry0x\")\n\n获取手机号码的简单用法\n\n    # 注意：此code是手机号码授权获取的code，不是wx.loginx()获取的code\n    user_data = wx.get_phone_number(code)\n\n用过微信获取手机号码这个接口的同学一定知道，微信接口里，我们需要获取access_token，然后才能调用get_phone_number接口，\n然而这里直接省略了access_token，是因为MPTools类内部实现了自动获取access_token，以及access_token缓存机制，\n当access_token不存在或过期时，会自动从微信接口中更新access_token，并且缓存起来。当然，您也可以通过\npassive_access_token=False 配置来关闭该功能。\n\n* 提示：如果关掉自动更新access_token功能，您就必须自己维护access_token的有效状态，可通过 [get_access_token()](#获取accesstoken) 方法获取，通过\n[set_access_token()](#传入accesstoken) 方法设置access_token\n\n* 小心access_token打架：如果是多环境或者多服务的情况下，不推荐托管access_token，因为两个以上的环境同时使用会导致access_token冲突。举个例子，比如dev环境获取了access_token。test环境发现自己没有access_token（两个环境数据隔离的情况下），会重新获取，test这么一取不要紧，可是得罪了dev。因为重新access_token获取会导致旧的access_token失效。dev也不甘示弱，发现他自己的access_token过期了，立马就获取新的access_token，这么一来二去不就打起来了吗。\n\n* 解决acceess_token冲突方案：做一个集中获取access_token的途径，比如其中一个环境/服务专门管理access_token，其他环境/服务从它那里获取。\n\n需要注意的是，这里使用的是cacheout缓存，cacheout缓存是缓存在内存中的，就是说重启之后缓存失效。\nMPTools也提供了修改缓存方式的方法，用法请移步：[修改缓存方式](#1修改缓存方式)\n\n\n## MPTools初始化参数解释\n\n    wx = MPTools(\n        # 填写小程序或公众号appid以及secret\n        appid=\"appid\",\n        secret=\"secret\",\n\n        # debug模式，默认False，为True时日志输出为debug级别，也可在日志的配置项中配置\n        debug=False,\n\n        # access_token失效(缓存过期)后是否自动更新，开启后，如果遇到42001(调用接口凭证已过期)就会重新调get_access_token接口获取\n        # 如果关闭该功能，必须要从实例化传入access_token或者使用wx.set_access_token(access_token)方法设置，获取access_token方法请往下看\n        passive_access_token=True,\n\n        # 设置access_token，如果传入access_token，MPTools将会使用该access_token，\n        # 注意：如果passive_access_token=True，并且传入的access_token过期，将会造成每次都重新获取access_token\n        access_token=None\n    )\n\n\n## 内部方法\n\n### 传入AccessToken\n\n通过该方法给MPTools传入一个access_token\n\npassive_access_token=False时，使用小程序接口前必须先设置access_token\n\n    wx.set_access_token(access_token)\n\n\n### 简单修改缓存方式\n\n通过该方法传入一个缓存的实例化对象/方法，简单的修改MPTools默认缓存方式\n该方式修改的缓存方法必须包含.get()获取缓存和.set()设置缓存方法。\n    \n    # 如，修改为Django的缓存\n    from django.core.cache import cache\n    wx.set_cache_obj(cache)\n\n\n\n\n## MPTools高级用法\n\n通过重写MPTools定制更多功能\n\n### 1.修改缓存方式\n如果你不想使用cacheout缓存方式，可以修改其他缓存方式，如Django的缓存，继承MPTools类，重写get_cache()方法即可，但需要注意的是，\n设置缓存和获取缓存时默认使用的是cache.set()和cache.get()方法，如果你使用的缓存没有这两个方法，\n就必须要重写get_access_token_cache()方法了，具体请看[重写缓存方法](#2重写缓存方法)。\n\n如：改为Django的缓存方法\n\n    from py_wechat_tools import MPTools\n    from django.core.cache import cache\n    \n    class MyWxTools(MPTools):\n        def get_cache(self):\n            return cache  # 必须返回缓存对象的实例，能调用cache.get()方法\n\n\n### 2.重写缓存方法\n更深度定制缓存方法，重写这个方法可以自定义缓存，最后返回一个获取到的access_token即可\n如果重写get_access_token_cache()方法，就没必要重写get_cache()方法了\n\n依然用Ddjango缓存为例，\n\n    from py_wechat_tools import MPTools\n    from django.core.cache import cache\n\n    class MyWxTools(MPTools):\n\n        def get_access_token_cache(self):\n            \"\"\" 实现获取access_token --> 缓存access_token过程 \"\"\" \n\n            access_token = cache.get(\"access_token\")\n            if not access_token:\n                access_token = self.get_access_token()\n                cache.set(\"access_token\", access_token, 2 * 60 * 60)\n\n            # 必须返回 access_token\n            return access_token\n\n\n\n\n### 3.重写日志输出方法\n\n日志使用的是logging，日志功能仅实现了基础功能。\n\n    from py_wechat_tools import MPTools\n    from py_wechat_tools.libs.tools import LogsConf\n\n    class MyWxTools(MPTools):\n\n        def get_logs_conf(self):\n            return LogsConf(\n                name=\"project_log\",  # 日志输出的名称\n                level=DEBUG,  # 日志级别，默认LogsConf.DEBUG级别，可设置LogsConf.INFO等级别\n                file_path=None,  # 日志输出到文件的路径(绝对路径/相对路径,相对项目)，为None不输出日志，\n                # 日志输出的格式， 可参考logging的格式\n                formatter=\"'%(asctime)s - %(name)s..%(filename)s.%(lineno)d - %(levelname)s: %(message)s'\",\n                stream_handler=True  # 是否输出到终端，默认True， file_path和stream_handler必须选一个以上\n            )\n\n\n## 小程序接口\n请移步 [小程序接口](docs/README-MP.md) 查看\n\n## 公众号接口\n请移步 [公众号接口](docs/README-MP.md) 查看\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitee.com/mjinnn/py-wechat-tools.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-wechat-tools",
    "package_url": "https://pypi.org/project/py-wechat-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/py-wechat-tools/",
    "project_urls": {
      "Homepage": "https://gitee.com/mjinnn/py-wechat-tools.git"
    },
    "release_url": "https://pypi.org/project/py-wechat-tools/0.0.5/",
    "requires_dist": [
      "requests (>=2.20.1)",
      "cacheout (>=0.13.1)",
      "pycrypto (>=2.6.1)"
    ],
    "requires_python": "",
    "summary": "微信小程序/公众号服务端接口集成SDK（非所有接口，持续更新中）",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16454579,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4dddd8b0b4db0b9a41c2e5dba88d271fd46ace42d63b67a2265e78e0cac9219",
          "md5": "b4a0561357ce55a3081c4c101f14dbfa",
          "sha256": "fd751210b4cd88ade1d36ab3a9e2c9c04d944362a2f389a98c30799b1257e1c4"
        },
        "downloads": -1,
        "filename": "py_wechat_tools-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4a0561357ce55a3081c4c101f14dbfa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 49103,
        "upload_time": "2022-10-09T08:37:15",
        "upload_time_iso_8601": "2022-10-09T08:37:15.003546Z",
        "url": "https://files.pythonhosted.org/packages/e4/dd/dd8b0b4db0b9a41c2e5dba88d271fd46ace42d63b67a2265e78e0cac9219/py_wechat_tools-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c337d65a3bb227bb9898d16dc9c93671db0fdc9254c207c0e0d939f09e9604fb",
          "md5": "15770852560f8290e3ab0f74557f2076",
          "sha256": "57f61b70a22fd69313ccf1adbf6baf20e98b60a44084e762d047c4e4ab186d5a"
        },
        "downloads": -1,
        "filename": "py-wechat-tools-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "15770852560f8290e3ab0f74557f2076",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 63567,
        "upload_time": "2022-10-09T08:37:17",
        "upload_time_iso_8601": "2022-10-09T08:37:17.347446Z",
        "url": "https://files.pythonhosted.org/packages/c3/37/d65a3bb227bb9898d16dc9c93671db0fdc9254c207c0e0d939f09e9604fb/py-wechat-tools-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4320882f7995ecc139321955426b303fcd2d7130ca0095be142301e807a7f77c",
          "md5": "10f779624a52702956701b92b0a63cab",
          "sha256": "ac74b9b519a42851dadb8e1a90c8cda93134fdbeb63a8dab4ab49c19c3511caf"
        },
        "downloads": -1,
        "filename": "py_wechat_tools-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10f779624a52702956701b92b0a63cab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 49050,
        "upload_time": "2022-11-26T03:12:50",
        "upload_time_iso_8601": "2022-11-26T03:12:50.933980Z",
        "url": "https://files.pythonhosted.org/packages/43/20/882f7995ecc139321955426b303fcd2d7130ca0095be142301e807a7f77c/py_wechat_tools-0.0.3-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "存在版本错误问题"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78ffb90812287919211013760f524d343cfe6bf91f7afad8fb44ed9aeeb95fb6",
          "md5": "061bc59894a1295c1ee0b845bc797479",
          "sha256": "459cc806c69c571d38152c6bf2c9d48db39d6dd1b4a844a751e62fa6689251fd"
        },
        "downloads": -1,
        "filename": "py-wechat-tools-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "061bc59894a1295c1ee0b845bc797479",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40655,
        "upload_time": "2022-11-26T03:12:53",
        "upload_time_iso_8601": "2022-11-26T03:12:53.951288Z",
        "url": "https://files.pythonhosted.org/packages/78/ff/b90812287919211013760f524d343cfe6bf91f7afad8fb44ed9aeeb95fb6/py-wechat-tools-0.0.3.tar.gz",
        "yanked": true,
        "yanked_reason": "存在版本错误问题"
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82cabaa81b3b054cc5d0058cf3f7d3c26c0d423039a11fb944ebce21911a3ecc",
          "md5": "094853dd4bc0cde598ebddcb78e8fe5a",
          "sha256": "3577861154cf394bf25018956ff00eb1c05a6f6e8d29257f8eb4778297866026"
        },
        "downloads": -1,
        "filename": "py_wechat_tools-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "094853dd4bc0cde598ebddcb78e8fe5a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 49045,
        "upload_time": "2022-11-28T03:02:44",
        "upload_time_iso_8601": "2022-11-28T03:02:44.242204Z",
        "url": "https://files.pythonhosted.org/packages/82/ca/baa81b3b054cc5d0058cf3f7d3c26c0d423039a11fb944ebce21911a3ecc/py_wechat_tools-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e36f5c7a005441d59bcbcf6d25e73184427c20c8b46d116f888709ca6d819a4c",
          "md5": "b6fd1911b857a9262d5a74748306fc27",
          "sha256": "b4b8d34a701a50a6eba04537e37744d274330e308ec371b553686497fab10b91"
        },
        "downloads": -1,
        "filename": "py-wechat-tools-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b6fd1911b857a9262d5a74748306fc27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40644,
        "upload_time": "2022-11-28T03:02:46",
        "upload_time_iso_8601": "2022-11-28T03:02:46.163858Z",
        "url": "https://files.pythonhosted.org/packages/e3/6f/5c7a005441d59bcbcf6d25e73184427c20c8b46d116f888709ca6d819a4c/py-wechat-tools-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e87a2699fdda5bbdc034d4902024e3bfa43a52fe2e7e629ea281a4b024a76e69",
          "md5": "099372026129f091ef96c93e61299ee8",
          "sha256": "482b1c9a44587f369efc0fe444e69d7ae6855b8b65b221efa3fcf2da132faaff"
        },
        "downloads": -1,
        "filename": "py_wechat_tools-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "099372026129f091ef96c93e61299ee8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 49195,
        "upload_time": "2023-01-17T08:04:07",
        "upload_time_iso_8601": "2023-01-17T08:04:07.374023Z",
        "url": "https://files.pythonhosted.org/packages/e8/7a/2699fdda5bbdc034d4902024e3bfa43a52fe2e7e629ea281a4b024a76e69/py_wechat_tools-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e87a2699fdda5bbdc034d4902024e3bfa43a52fe2e7e629ea281a4b024a76e69",
        "md5": "099372026129f091ef96c93e61299ee8",
        "sha256": "482b1c9a44587f369efc0fe444e69d7ae6855b8b65b221efa3fcf2da132faaff"
      },
      "downloads": -1,
      "filename": "py_wechat_tools-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "099372026129f091ef96c93e61299ee8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 49195,
      "upload_time": "2023-01-17T08:04:07",
      "upload_time_iso_8601": "2023-01-17T08:04:07.374023Z",
      "url": "https://files.pythonhosted.org/packages/e8/7a/2699fdda5bbdc034d4902024e3bfa43a52fe2e7e629ea281a4b024a76e69/py_wechat_tools-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}