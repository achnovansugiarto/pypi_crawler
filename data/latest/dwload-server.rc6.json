{
  "info": {
    "author": "JensDiemer",
    "author_email": "dwload_server@jensdiemer.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: MacOS X",
      "Environment :: Other Environment",
      "Environment :: Win32 (MS Windows)",
      "Environment :: X11 Applications",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# DWLOAD Server\n\nDWLOAD server implemented in Python (OpenSource, GPL v3 or above).\n\nConnect your Dragon 32 into your PC and LOAD/SAVE basic listings.\n\n![Dragon32DriveWire1small.jpeg](https://raw.githubusercontent.com/jedie/jedie.github.io/master/screenshots/DwLoadServer/Dragon32DriveWire1small.jpeg \"Dragon32DriveWire1small.jpeg\")\n\n\n## Quickstart\n\n```bash\n~$ git clone https://github.com/6809/DwLoadServer.git\n~$ cd DwLoadServer\n~/DwLoadServer$ ./devshell.py run serial\n```\n\n\n## features\n\n* load/save files via DWLOAD\n* on-the-fly converting ASCII BASIC listing (see below)\n* dynamic \"AUTOLOAD.DWL\" (see below)\n* backup all files on save\n* Support [USB Adapter](http://archive.worldofdragon.org/index.php?title=Dragon_32/64_Drivewire_Adapter) and [Becker TCP/IP Interface](http://www.6809.org.uk/xroar/doc/xroar.shtml#Becker-port).\n\n### current state\n\nTested DWEEBS:\n\n| DWEEB      | example                     | Description                                  |\n| ---------- | --------------------------- | -------------------------------------------- |\n| **DLOAD**  | `DLOAD`                     | Load `AUTOLOAD.DWL` (Used on Dragon startup) |\n| **SAVE**   | `DLOAD\"SAVE\"\"MYFILE.BAS\"`   | Save BASIC listing                           |\n| **RESAVE** | `DLOAD\"RESAVE\"\"MYFILE.BAS\"` | Save BASIC listing                           |\n\nImplemented DriveWire Transactions:\n\n| hex | dez | DW name           | Description                                                              |\n|-----| --- | ----------------- | ------------------------------------------------------------------------ |\n| $00 | 0   | OP_NOP            | NOP Transaction -> ignored                                               |\n| $01 | 1   | OP_NAMEOBJ_MOUNT  | Mount a file to a virtual drive number                                   |\n| $02 | 2   | OP_NAMEOBJ_CREATE | (Does in this implementation the same as OP_NAMEOBJ_MOUNT)               |\n| $d2 | 210 | OP_READEX         | Send 256 bytes sector from the DWLOAD server to the client               |\n| $57 | 87  | OP_WRITE          | Write 256 bytes sector of data from the client into a file on the server |\n\n### TODO\n\n* enhance `AUTOLOAD.DWL.py`, see: [http://archive.worldofdragon.org/phpBB3/viewtopic.php?f=5&t=4977](http://archive.worldofdragon.org/phpBB3/viewtopic.php?f=5&t=4977)\n* compare checksum\n* write unittests\n\n### pyscripts\n\nThere is a general machanism to generate DLOAD responses via Python:\n\n* Store in server root a python script, e.g.: \"FOO.BAR.py\"\n* DLOAD the file (without .py extension) on client, e.g.: `DLOAD\"FOO.BAR\"`\n\nThe script will be called via subprocess and it must write the Dragon DOS binary data back to stdout.\n\nCurrently, there is only one _pyscript_ file: `AUTOLOAD.DWL.py` (see below)\n\n#### dynamic \"AUTOLOAD.DWL\"\n\nThere exist a way to generate a dynamic DWLOAD menu.\nJust copy the file [/dwload-demo-files/AUTOLOAD.DWL.py](https://github.com/6809/DwLoadServer/blob/master/dwload-demo-files/AUTOLOAD.DWL.py) into your server root.\n\nThe _pyscript_ reads the server root directory and list all files into the DLOAD menu.\ne.g. the server root looks like this:\n```\n/HOME/FOO/DWLOAD-FILES\n  +--- AUTOLOAD.DWL.py\n  +--- HEXVIEW.BAS\n  +--- TEST.BAS\n  \\--- SAVE\n```\n\nThe generated listing looks like this:\n```\n10 CLS\n20 PRINT\" *** DYNAMIC MENU ***  14:11:18\"\n30 PRINT\"/HOME/FOO/DWLOAD-FILES\"\n40 PRINT\" 0 - HEXVIEW.BAS\"\n50 PRINT\" 1 - TEST.BAS\"\n60 PRINT\" 2 - SAVE\"\n70 PRINT\"PLEASE SELECT (X FOR RELOAD) !\"\n80 A$=INKEY$:IF A$=\"\" GOTO 80\n90 IF A$=\"X\" THEN DLOAD\n100 IF A$=\"0\" THEN DLOAD\"HEXVIEW.BAS\"\n110 IF A$=\"1\" THEN DLOAD\"TEST.BAS\"\n120 IF A$=\"2\" THEN DLOAD\"SAVE\"\n130 GOTO 10\n```\n\ns.: [http://archive.worldofdragon.org/phpBB3/viewtopic.php?f=5&t=4977](http://archive.worldofdragon.org/phpBB3/viewtopic.php?f=5&t=4977)\n\nYou must only call **DLOAD** on you Dragon to get this menu. Because a **DLOAD** will request **AUTOLOAD.DWL** and the Python server will all **.py** and call **AUTOLOAD.DWL.py** if exist.\n\nThis feature make the following file:\n\n| [/dwload_server/hooks/dynamic_dwl.py](https://github.com/6809/DwLoadServer/blob/master/dwload_server/hooks/dynamic_dwl.py)           | general API to 'pyscript' files |\n| [/dwload_server/pyscripts/autoload_dwl.py](https://github.com/6809/DwLoadServer/blob/master/dwload_server/pyscripts/autoload_dwl.py) | generates the DWLOAD menu       |\n\n### on-the-fly converting ASCII BASIC listing\n\nThe server read/save ASCII BASIC listing and send/store them to the DWLOAD client on-the-fly.\nSo you can edit listings on your PC and try them on your Dragon without any external conventions!\n\ne.g.: save\n```\n10 PRINT\"HELLO WORLD!\"\nDLOAD\"SAVE\"\"HELLO.BAS\"\nDWLOAD\n!\nOK\n```\n\nThe server will create two files:\n\n| filename  | format               | description                                                      |\n| --------- | -------------------- | ---------------------------------------------------------------- |\n| HELLO.DWL | raw tokenized binary | Dragon DOS Binary Format data from the Dragon (256 Bytes padded) |\n| HELLO.BAS | ASCII listing        | on-the-fly converted ASCII BASIC listing                         |\n\ne.g. load (and execute):\n```\nDLOAD\"HELLO.BAS\"\n!HELLO WORLD!\nOK\n```\n\n(Note: the first `!` is from DWLOAD ROM routine)\n\nThe server will read the `HELLO.BAS` ASCII listing and convert is on-the-fly to the needed Dragon DOS Binary Format\nand send this back to the Dragon.\n\nThis feature make the following files:\n\n| [/dwload_server/hooks/read_ascii.py](https://github.com/6809/DwLoadServer/blob/master/dwload_server/hooks/read_ascii.py) | read ASCII listing and send as binary to client |\n| [/dwload_server/hooks/save_ascii.py](https://github.com/6809/DwLoadServer/blob/master/dwload_server/hooks/save_ascii.py) | save binary from client as ASCII on server      |\n\n## installation\n\nClone sources and bootstrap via [dev-shell](https://github.com/jedie/dev-shell), e.g.:\n\n```bash\n~$ git clone https://github.com/6809/DwLoadServer.git\n~$ cd DwLoadServer\n~/DwLoadServer$ ./devshell.py\n\n...\n\nDeveloper shell - DWLOAD Server - v0.4.0\n\n\nDocumented commands (use 'help -v' for verbose/'help <topic>' for details):\n\ndev-shell commands\n==================\nfix_code_style      poetry   pytest     tox\nlist_venv_packages  publish  pyupgrade  update\n\nDWLOAD Server Commands\n======================\nrun\n\nUncategorized\n=============\nalias  help  history  macro  quit  set  shortcuts\n\n\n(dwload_server) run --help\nUsage: run [-h] [--root-dir ROOT_DIR] [--log-level {0, 10, 20, 30, 30, 40, 50, 50, 99, 100}] {becker, serial} ...\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --root-dir ROOT_DIR\n  --log-level {0, 10, 20, 30, 30, 40, 50, 50, 99, 100}\n                        Logging level: 10=DEBUG, 20=INFO, 30=WARNING, 40=ERROR, 50=CRITICAL/FATAL (default: 20)\n\nInterface:\n  {becker, serial}\n    becker              Use the Becker interface\n    serial              Use the serial interface\n\n(dwload_server) run serial\n```\n\nYou can also run as cli, e.g.: Start serial DWLOAD server:\n```bash\n~/DwLoadServer$ ./devshell.py run serial\n```\n\n\n## History\n\n* [**dev**](https://github.com/6809/DwLoadServer/compare/v0.5.0...main)\n  * ...tbc...\n* [11.09.2022 - v0.5.0](https://github.com/6809/DwLoadServer/compare/v0.4.0...v0.5.0)\n  * Modernize project\n  * Easier bootstrap via dev-shell\n* [20.11.2014 - v0.4.0](https://github.com/6809/DwLoadServer/compare/v0.3.0...v0.4.0)\n  * dynamic `AUTOLOAD.DWL` via Python script\n* [19.11.2014 - v0.3.0](https://github.com/6809/DwLoadServer/compare/v0.2.0...v0.3.0)\n  * Convert \"ASCII BASIC listing\" <-> \"Dragon DOS Binary\" on-the-fly while read/write\n* [17.11.2014 - v0.2.0](https://github.com/6809/DwLoadServer/compare/v0.1.1...v0.2.0)\n  * Support Becker and Serial interface.\n* 14.11.2014 - v0.1.0 - Create bootstrap file that work under linux and windows.\n* 12.11.2014 - v0.0.1 - send a file works rudimentary\n* 30.09.2014 - Idea was born: [Forum post 11893](http://archive.worldofdragon.org/phpBB3/viewtopic.php?f=8&t=4946#p11893)\n\n## Links\n\n|                   |                                                                                                                                                                                   |\n|-------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Forum Thread (en) | [worldofdragon.org](https://archive.worldofdragon.org/phpBB3/viewtopic.php?f=8&t=4946)                                                                                            |\n| Forum Thread (de) | [forum.classic-computing.de](https://forum.classic-computing.de/forum/index.php?thread/20839-dwload-drivewire-for-everybody-daten%C3%BCbertragung-pc-dragon-32-64/&postID=245227) |\n| PyPi              | [https://pypi.python.org/pypi/dwload_server/](https://pypi.python.org/pypi/dwload_server/)                                                                                        |\n| Github            | [https://github.com/6809/DwLoadServer](https://github.com/6809/DwLoadServer)                                                                                                      |\n\nsome project related links:\n\n* About DWLOAD: [http://archive.worldofdragon.org/phpBB3/viewtopic.php?f=5&t=4964](http://archive.worldofdragon.org/phpBB3/viewtopic.php?f=5&t=4964)\n* DWEEBS application Thread: [http://archive.worldofdragon.org/phpBB3/viewtopic.php?f=5&t=4968](http://archive.worldofdragon.org/phpBB3/viewtopic.php?f=5&t=4968)\n* Dragon 32/64 DriveWire Adapter: [http://archive.worldofdragon.org/index.php?title=Dragon_32/64_Drivewire_Adapter](http://archive.worldofdragon.org/index.php?title=Dragon_32/64_Drivewire_Adapter)\n* Drivewire for dummies: [http://archive.worldofdragon.org/index.php?title=Drivewire_for_dummies](http://archive.worldofdragon.org/index.php?title=Drivewire_for_dummies)\n* [http://sourceforge.net/p/drivewireserver/wiki/DriveWire_Specification/](http://sourceforge.net/p/drivewireserver/wiki/DriveWire_Specification/)\n* [http://sourceforge.net/p/drivewireserver/wiki/](http://sourceforge.net/p/drivewireserver/wiki/)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/6809/DwLoadServer",
    "keywords": "DWLOAD,DriveWire,6809,Dragon,CoCo",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dwload-server",
    "package_url": "https://pypi.org/project/dwload-server/",
    "platform": null,
    "project_url": "https://pypi.org/project/dwload-server/",
    "project_urls": {
      "Homepage": "https://github.com/6809/DwLoadServer"
    },
    "release_url": "https://pypi.org/project/dwload-server/0.5.0/",
    "requires_dist": [
      "dragonlib",
      "pyserial"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "DWLOAD server implemented in Python",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15057403,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47d5bd20ae921ffe0bd8d88512fc0663f77af84536dce7f7031312cd1b85011b",
          "md5": "384e01ba6057d5cb0ea3ddb1880ca97b",
          "sha256": "3122a021949c935c6fbd244c133dbcdf1a1e1b0f15546e09e9850c70cf14eb15"
        },
        "downloads": -1,
        "filename": "dwload_server-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "384e01ba6057d5cb0ea3ddb1880ca97b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7470,
        "upload_time": "2014-11-14T09:00:20",
        "upload_time_iso_8601": "2014-11-14T09:00:20.572088Z",
        "url": "https://files.pythonhosted.org/packages/47/d5/bd20ae921ffe0bd8d88512fc0663f77af84536dce7f7031312cd1b85011b/dwload_server-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8b9b5f35e8be725d90e9b79c0b41070b7f7943b81cec0fe3da9a6bb9a0467f4",
          "md5": "23480a42b164b56f8238580da773f8f8",
          "sha256": "f5a744012fd2287412ba9e68ad943e86e4d41c5507fdc781fa2183b9a0a7ed7a"
        },
        "downloads": -1,
        "filename": "dwload_server-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "23480a42b164b56f8238580da773f8f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8819,
        "upload_time": "2014-11-14T14:18:31",
        "upload_time_iso_8601": "2014-11-14T14:18:31.028384Z",
        "url": "https://files.pythonhosted.org/packages/f8/b9/b5f35e8be725d90e9b79c0b41070b7f7943b81cec0fe3da9a6bb9a0467f4/dwload_server-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e0eba7e56add4fa83e519c87c11c1e2ab42f86af3445ebf9a31435b42f77729",
          "md5": "d6b606ea4ec6655866cfcfd9abbeebda",
          "sha256": "ac19b297a7a34896428d7eda605deff7bd18753d6f70c9500a1eca2ebc2d06dd"
        },
        "downloads": -1,
        "filename": "dwload_server-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d6b606ea4ec6655866cfcfd9abbeebda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1065203,
        "upload_time": "2014-11-17T13:21:55",
        "upload_time_iso_8601": "2014-11-17T13:21:55.232740Z",
        "url": "https://files.pythonhosted.org/packages/4e/0e/ba7e56add4fa83e519c87c11c1e2ab42f86af3445ebf9a31435b42f77729/dwload_server-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bef285c091c0608824ec1ddbd3bc0eeab869df1a03367fa3aaf137fe63431d6",
          "md5": "e229fb778054eaf6a1b1cecad9a939b7",
          "sha256": "fa3dc68b2174a50a63ad341c3cd2bc20a7008a1fa99fd340eb5d1c06fc5489d7"
        },
        "downloads": -1,
        "filename": "dwload_server-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e229fb778054eaf6a1b1cecad9a939b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1068863,
        "upload_time": "2014-11-19T12:29:14",
        "upload_time_iso_8601": "2014-11-19T12:29:14.610785Z",
        "url": "https://files.pythonhosted.org/packages/0b/ef/285c091c0608824ec1ddbd3bc0eeab869df1a03367fa3aaf137fe63431d6/dwload_server-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53264aed9d310a7ced7f7482b2c38ec8c241d40b55731fcf8d4ba10836c38d85",
          "md5": "e9e0bf7b0b0fce1004a0f8a359fafa97",
          "sha256": "6bd22351454b917e12418ee85ef50a8e65bbb107dc14735599ed0e181d669ecc"
        },
        "downloads": -1,
        "filename": "dwload_server-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e9e0bf7b0b0fce1004a0f8a359fafa97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1074428,
        "upload_time": "2014-11-20T13:20:46",
        "upload_time_iso_8601": "2014-11-20T13:20:46.264518Z",
        "url": "https://files.pythonhosted.org/packages/53/26/4aed9d310a7ced7f7482b2c38ec8c241d40b55731fcf8d4ba10836c38d85/dwload_server-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e65f3195b9b6bf8aa9f4f14386e1ac444679b31b2c8ee82184710a34abbdf58",
          "md5": "4f9ea87e47d52064d51d21f38ad83d57",
          "sha256": "03978f61f60f31372295a45fe8ebd63214ed91fee4dc5661203e069fc0cef92f"
        },
        "downloads": -1,
        "filename": "dwload_server-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f9ea87e47d52064d51d21f38ad83d57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 34700,
        "upload_time": "2022-09-11T11:01:47",
        "upload_time_iso_8601": "2022-09-11T11:01:47.451814Z",
        "url": "https://files.pythonhosted.org/packages/9e/65/f3195b9b6bf8aa9f4f14386e1ac444679b31b2c8ee82184710a34abbdf58/dwload_server-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "251e4c9055b64cf9dfb2020c861795ff79abbfd2dc208f74594b02aa313ec690",
          "md5": "02615cb5fce5799d882bb2caec19cf52",
          "sha256": "eb6bd40b31e853be692d6d739feebc0dbac5381294fd68be8bb29014617c447b"
        },
        "downloads": -1,
        "filename": "dwload_server-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "02615cb5fce5799d882bb2caec19cf52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 31351,
        "upload_time": "2022-09-11T11:01:49",
        "upload_time_iso_8601": "2022-09-11T11:01:49.602701Z",
        "url": "https://files.pythonhosted.org/packages/25/1e/4c9055b64cf9dfb2020c861795ff79abbfd2dc208f74594b02aa313ec690/dwload_server-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e65f3195b9b6bf8aa9f4f14386e1ac444679b31b2c8ee82184710a34abbdf58",
        "md5": "4f9ea87e47d52064d51d21f38ad83d57",
        "sha256": "03978f61f60f31372295a45fe8ebd63214ed91fee4dc5661203e069fc0cef92f"
      },
      "downloads": -1,
      "filename": "dwload_server-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4f9ea87e47d52064d51d21f38ad83d57",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 34700,
      "upload_time": "2022-09-11T11:01:47",
      "upload_time_iso_8601": "2022-09-11T11:01:47.451814Z",
      "url": "https://files.pythonhosted.org/packages/9e/65/f3195b9b6bf8aa9f4f14386e1ac444679b31b2c8ee82184710a34abbdf58/dwload_server-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "251e4c9055b64cf9dfb2020c861795ff79abbfd2dc208f74594b02aa313ec690",
        "md5": "02615cb5fce5799d882bb2caec19cf52",
        "sha256": "eb6bd40b31e853be692d6d739feebc0dbac5381294fd68be8bb29014617c447b"
      },
      "downloads": -1,
      "filename": "dwload_server-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "02615cb5fce5799d882bb2caec19cf52",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 31351,
      "upload_time": "2022-09-11T11:01:49",
      "upload_time_iso_8601": "2022-09-11T11:01:49.602701Z",
      "url": "https://files.pythonhosted.org/packages/25/1e/4c9055b64cf9dfb2020c861795ff79abbfd2dc208f74594b02aa313ec690/dwload_server-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}