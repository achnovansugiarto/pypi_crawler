{
  "info": {
    "author": "Mawuli Adjei, Adu Boahene, Tobelum Eze Okoli, Wayne Yu",
    "author_email": "pyparakeets@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# threshold_optimizer\nThis python library allows you to conveniently evaluate predicted probablilities during a binary classification task by presenting you with the optimum probability thresholds.\n\n## Introduction\n*Classification* tasks in machine learning involves models or algorithms learning to *assign class lables* to elements of a set. **Binary Classification** is the process of assigning elements to two class labels on the basis of a classification rule. Some of the examples of binary classification includes classifying mails under 'spam' or 'not a spam', medical tests ('cancer detected' or 'cancer not detected') and churn prediction ('churn' or 'not').           \n\nEvaluating machine learning models is an important aspect of building models. These evaluations are done using classification metrics, the metrics used depends on the nature of the problem you're solving and the cost of falsely predicted values. Some of these metrics include: confusion matrix, accuracy, precision, recall, F1 score and ROC curve. However these decisions by the metrics are based on a set threshold. \n\nFor instance, in order to map a probability representation from logistic regression to a binary category, you must define a classification threshold (also called the decision threshold). In say a cancer patient classification, a value above that threshold indicates \"Patient has cancer\"; a value below indicates \"Patient does not have cancer.\" It is tempting to assume that the classification threshold should always be 0.5, but thresholds are problem-dependent, and are therefore values that you must tune.\n\nThis library allows you to output the optimum threshold value for the metric you're using to evaluate your classification model. The metrics for which you can get the optimum threshold outputs are: \n> Accuracy\n\n> F1 Score\n\n> Recall\n\n> Specificity\n\n> Precision\n\n\n### Requirements\n> **scikit-learn** == 0.24.0\n\n> **pandas** == 0.25.1\n\n> **numpy** == 1.17.1\n\n\n### Installation\n\n\n\n### Usage\n\n**Code To Follow**\n```\nfrom threshold_optimizer import ThresholdOptimizer\nimport pandas as pd\nimport numpy as np\nfrom sklearn import datasets\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\n\n# load data sets\nX, y = datasets.load_breast_cancer(return_X_y=True)\n\n# train, val, test splits\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)\nX_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.25, random_state=1)\n\n# fit estimator\nclf = LogisticRegression(random_state=0).fit(X_train, y_train)\n# predict probabilities\npredicted_probabilities = clf.predict_proba(X_val)\n\n# apply optimization\nthresh_opt = ThresholdOptimizer(\n        y_score = predicted_probabilities,\n        y_true = y_val\n    )\n\n# optimize for accuracy and f1 score\nthresh_opt.optimize_metrics(\n        metrics=['accuracy', 'f1'],\n        verbose=True\n    )\n\n# display results\nprint(thresh_opt.optimized_metrics)\n\n# access threshold per metric\naccuracy_threshold = thresh_opt.optimized_metrics.accuracy.best_threshold\nf1_threshold = thresh_opt.optimized_metrics.f1.best_threshold\n\n# use best accuracy threshold for test set to convert probabilities to classes\npredicted_probabilities = clf.predict_proba(X_test)\nclasses = np.where(predicted_probabilities[:,1], > accuracy_threshold, 1, 0)\nprint(classes)\n```\n\n\n### Key Terminologies\n:TODO\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pyparakeets/budgies",
    "keywords": "Optimize Decision Boundary Threshold Binary Classification Probabilities",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "threshold-optimizer",
    "package_url": "https://pypi.org/project/threshold-optimizer/",
    "platform": "",
    "project_url": "https://pypi.org/project/threshold-optimizer/",
    "project_urls": {
      "Homepage": "https://github.com/pyparakeets/budgies",
      "Source": "https://github.com/pyparakeets/budgies",
      "Tracker": "https://github.com/pyparakeets/budgies/issues"
    },
    "release_url": "https://pypi.org/project/threshold-optimizer/0.0.1a2/",
    "requires_dist": [
      "scikit-learn (==0.24.0)",
      "pandas (==0.25.1)",
      "numpy (==1.17.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Optimize decision boundary/threshold for predicted probabilities from binary classification",
    "version": "0.0.1a2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9684725,
  "releases": {
    "0.0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72ecc597c2e224d00d433ea9eb4eaafe160ed09db9bdee0c6c159d46236c262b",
          "md5": "55959a8d279c4ebc223ead1da44c2557",
          "sha256": "e9d88795527b2b63cbf99f6d3db45b2c8452dc4ba072805d5c1425f5473650af"
        },
        "downloads": -1,
        "filename": "threshold_optimizer-0.0.1a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "55959a8d279c4ebc223ead1da44c2557",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6714,
        "upload_time": "2021-03-06T08:43:31",
        "upload_time_iso_8601": "2021-03-06T08:43:31.068034Z",
        "url": "https://files.pythonhosted.org/packages/72/ec/c597c2e224d00d433ea9eb4eaafe160ed09db9bdee0c6c159d46236c262b/threshold_optimizer-0.0.1a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7265c3f6507887dedc33060658a3efe9d710b0a8acbf9394e1c913be5bbf202",
          "md5": "2526912054d524393a23f17e21021e0d",
          "sha256": "40bb14859bcb6ed36c422295add7c24dfc88d3ba135b5beea6c44995c7a3c6e9"
        },
        "downloads": -1,
        "filename": "threshold_optimizer-0.0.1a1.tar.gz",
        "has_sig": false,
        "md5_digest": "2526912054d524393a23f17e21021e0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5402,
        "upload_time": "2021-03-06T08:43:33",
        "upload_time_iso_8601": "2021-03-06T08:43:33.103530Z",
        "url": "https://files.pythonhosted.org/packages/c7/26/5c3f6507887dedc33060658a3efe9d710b0a8acbf9394e1c913be5bbf202/threshold_optimizer-0.0.1a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "536fb597cedad110ee871668b1a422f5c7b225e27a732a46c7a07edc1643ed13",
          "md5": "aa5a0f8e37ab2f327102fdbb8bf56f11",
          "sha256": "d26eeb3fdd5cfdaea841c2eaff10890d0514a904c954474b8024532c0e47d1cc"
        },
        "downloads": -1,
        "filename": "threshold_optimizer-0.0.1a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa5a0f8e37ab2f327102fdbb8bf56f11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6982,
        "upload_time": "2021-03-06T15:15:24",
        "upload_time_iso_8601": "2021-03-06T15:15:24.550660Z",
        "url": "https://files.pythonhosted.org/packages/53/6f/b597cedad110ee871668b1a422f5c7b225e27a732a46c7a07edc1643ed13/threshold_optimizer-0.0.1a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de1a5b11c75290779bc0efaedd7a58fb653e4c54b9befa80f86ab8f3716aea33",
          "md5": "ffb94f12a7db3914a7ad252b6ab4ebfe",
          "sha256": "468ece1e1f944d97470da0bc7af2fadd2ccf172cf0c3b6dc0dadc95d5eb89252"
        },
        "downloads": -1,
        "filename": "threshold_optimizer-0.0.1a2.tar.gz",
        "has_sig": false,
        "md5_digest": "ffb94f12a7db3914a7ad252b6ab4ebfe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5693,
        "upload_time": "2021-03-06T15:15:26",
        "upload_time_iso_8601": "2021-03-06T15:15:26.444115Z",
        "url": "https://files.pythonhosted.org/packages/de/1a/5b11c75290779bc0efaedd7a58fb653e4c54b9befa80f86ab8f3716aea33/threshold_optimizer-0.0.1a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "536fb597cedad110ee871668b1a422f5c7b225e27a732a46c7a07edc1643ed13",
        "md5": "aa5a0f8e37ab2f327102fdbb8bf56f11",
        "sha256": "d26eeb3fdd5cfdaea841c2eaff10890d0514a904c954474b8024532c0e47d1cc"
      },
      "downloads": -1,
      "filename": "threshold_optimizer-0.0.1a2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aa5a0f8e37ab2f327102fdbb8bf56f11",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6982,
      "upload_time": "2021-03-06T15:15:24",
      "upload_time_iso_8601": "2021-03-06T15:15:24.550660Z",
      "url": "https://files.pythonhosted.org/packages/53/6f/b597cedad110ee871668b1a422f5c7b225e27a732a46c7a07edc1643ed13/threshold_optimizer-0.0.1a2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de1a5b11c75290779bc0efaedd7a58fb653e4c54b9befa80f86ab8f3716aea33",
        "md5": "ffb94f12a7db3914a7ad252b6ab4ebfe",
        "sha256": "468ece1e1f944d97470da0bc7af2fadd2ccf172cf0c3b6dc0dadc95d5eb89252"
      },
      "downloads": -1,
      "filename": "threshold_optimizer-0.0.1a2.tar.gz",
      "has_sig": false,
      "md5_digest": "ffb94f12a7db3914a7ad252b6ab4ebfe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5693,
      "upload_time": "2021-03-06T15:15:26",
      "upload_time_iso_8601": "2021-03-06T15:15:26.444115Z",
      "url": "https://files.pythonhosted.org/packages/de/1a/5b11c75290779bc0efaedd7a58fb653e4c54b9befa80f86ab8f3716aea33/threshold_optimizer-0.0.1a2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}