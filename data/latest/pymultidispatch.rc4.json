{
  "info": {
    "author": "Siva Jayaraman",
    "author_email": "purefunctions.os@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pymultimethods\n\nProvides multiple dispatch or multimethods as described in\nhttps://en.wikipedia.org/wiki/Multiple_dispatch\n\nmultimethods can be used to effectively solve the Expression Problem\ndescribed in https://en.wikipedia.org/wiki/Expression_problem\n\nIt can find uses in a lot of cases. Some examples are given below, but the uses are not limited\nto only those\n\n* Functions where we process inputs differently based on isinstance checks of one or more input arguments\n* The basic case of processing differently based on the type of one instance is what is used in\n  Object oriented programming based on the self parameter. This basic methodology is what is called\n  Single Dispatch\n* Functions where we process inputs differently based on the type of a field.\n* Example: Different handler for different versions of payload based on a \"version\" field in a dict, etc\n\nMore important than those is the ability that multimethods provide of NOT having to change the dispatcher\nfor every single type of 'new' type that we come up with.\n\nUsage is best described with an example:\n\nLet's say we handle a payload based on a version number and type in the dict.\n\n```\npayload = {\n\"type\": \"init\"\n\"version\": 3,\n...\n}\n```\n\nIn the payload above we want to dispatch to a handler based on \"type\" and \"version\"\n\nTypical two ways to do this are:\n\n ```python\n def handle(payload):\n   type, version = payload[\"type\"], payload[\"version\"]\n   if (\"init\", 3) == (type, version):\n   return handle_init_v3(payload)\n   elif ...\n\ndef handle_init_v3(payload):\n...\n ```\n\nBetter that above\n```python\nHANDLERS = {\n(\"init\", 3): handle_init_v3\n...\n}\n\ndef handle(payload):\n    type, version = payload[\"type\"], payload[\"version\"]\n    return HANDLERS[(type, version)](payload)\n```\n\nThe above two suffer from the problem of having to change existing files when a new version or handler \nis added. What if we could do this?\n\n```python\n# Register a handler function using a @multimethod decorator. Arg to the decorator\n# is the dispatch key generation function. Body of the function decorated is\n# the default handler to be called if a handler wasn't registered for the\n# dispatch key generated by the dispatch key generation function\n\nfrom pymultidispatch.multimethods import multimethod\n\n@multimethod(lambda payload: (payload[\"type\"], payload[\"version\"]))\ndef handle_message(payload):\n    # A optional default handler function to be called if a handler wasn't registered for the\n    # dispatch key generated by the above dispatch key generation function\n    pass\n\n# In the same file, or any other file\n@handle_message.register((\"init\", 3))\ndef _(payload):  # Can be of any name, but leave out a name and use _ as convention\n    # payload handler for init v3\n    ...\n\n# In the same file or any other file\n@handle_message.register((\"init\", 4))\ndef _(payload):\n    # payload handler for init v4\n    ...\n\n# We can also have more 'keys' passed into register to handle cases where the handler is the same\n@handle_message.register((\"init\", 5), (\"init\", 6))\ndef _(payload):\n    # payload handler for init v5 and init v6\n    ...\n```\n\nAs can be seen from above, there is no need to change the dispatcher function or any other existing file\n\nThis implementation of multimethods is inspired by the Clojure language's implementation of the concept\n\nUsage:\n------\nThe same as mentioned above\n\nThe `@multimethod(<dispatch_key_gen_fn>)` decorator is used to define a multimethod dispatch function.\nIn the example above, the dispatcher is based on the payload type and payload version.\nIt should be noted that the assumptions is that whatever input is given\nto this function is the same that is given to the dispatched functions.\nThe dispatched functions are defined on this multimethod using the `<fn>.register(<key>)` decorator, where `<fn>` is\nthe function decorated using `@multimethod()` decorator and `<key>` is the key for which we are registering `<fn>` as a\nhandler.\nNote: Additional keys can also be passed onto to `<fn>.register()` function as follows:\n\n`<fn>.register(<key1>, <key2>, <key3>)`\n\nThis will register the function for all the given keys and invoke the function when the `dispatch_key_gen_fn` returns\n andy of the given keys\n\nThe `dispatch_key` is the result of calling `<dispatch_key_gen_fn>` of the `@multimethod` decorator\n\nDefault params: Default params can be used, but only in the default handler (i.e. the function decorated with\n`@multimethod` decorator). The other registered handler uses the default params (if any) in the default handler that\nwas decorated with `@multimethod` decorator. Any default params overwritten at the time of the call still takes\nprecedence just like regular python functions do\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/purefunctions/pymultidispatch/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymultidispatch",
    "package_url": "https://pypi.org/project/pymultidispatch/",
    "platform": "",
    "project_url": "https://pypi.org/project/pymultidispatch/",
    "project_urls": {
      "Homepage": "https://github.com/purefunctions/pymultidispatch/"
    },
    "release_url": "https://pypi.org/project/pymultidispatch/1.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Multimethods implementation in Python",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11362173,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8ec9d539c09ee99577c25171e55bf536b6648b008b562c0857ee7011076fff7",
          "md5": "bf7239e541569235e8de74c4bc5f6f0a",
          "sha256": "46060d4643268107ce9d67be68f8e31965a4f954513432f2e9bc67062152ab7e"
        },
        "downloads": -1,
        "filename": "pymultidispatch-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf7239e541569235e8de74c4bc5f6f0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5939,
        "upload_time": "2021-08-01T22:17:12",
        "upload_time_iso_8601": "2021-08-01T22:17:12.839465Z",
        "url": "https://files.pythonhosted.org/packages/c8/ec/9d539c09ee99577c25171e55bf536b6648b008b562c0857ee7011076fff7/pymultidispatch-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99e8fe25034f3e8a2fa6f7cd301f4ab6862dbd4f529cd725957500e9fdda0fc8",
          "md5": "bd6801fa3019ef8cbe9ff27be22c1a51",
          "sha256": "9420a94159fb6bda7c3f7a933e9297b251936c76de072f59069f57b70e1dd074"
        },
        "downloads": -1,
        "filename": "pymultidispatch-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bd6801fa3019ef8cbe9ff27be22c1a51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4216,
        "upload_time": "2021-08-01T22:17:15",
        "upload_time_iso_8601": "2021-08-01T22:17:15.809263Z",
        "url": "https://files.pythonhosted.org/packages/99/e8/fe25034f3e8a2fa6f7cd301f4ab6862dbd4f529cd725957500e9fdda0fc8/pymultidispatch-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "755715b280c19240c48e8fb54382f7471cb7de0feda3b1b7dd8c4a0f796184bb",
          "md5": "743ff6a6c2f282cf22ae9d98eaba8a17",
          "sha256": "54bea778a317d17cb63a53bbddd38dc5716a25d26ce9cd61b07dfb6cae061536"
        },
        "downloads": -1,
        "filename": "pymultidispatch-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "743ff6a6c2f282cf22ae9d98eaba8a17",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5941,
        "upload_time": "2021-08-01T22:17:14",
        "upload_time_iso_8601": "2021-08-01T22:17:14.739642Z",
        "url": "https://files.pythonhosted.org/packages/75/57/15b280c19240c48e8fb54382f7471cb7de0feda3b1b7dd8c4a0f796184bb/pymultidispatch-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8494048079b5d36542c56af814944f3956690e12840afa1f8a7010510997a5ba",
          "md5": "3ab266eb8a346bb3aeb68eefa6b470be",
          "sha256": "ff2909d93ce21b6f797191e4f46051213053c65933642d357b06c71afc5f2976"
        },
        "downloads": -1,
        "filename": "pymultidispatch-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3ab266eb8a346bb3aeb68eefa6b470be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4222,
        "upload_time": "2021-08-01T22:17:17",
        "upload_time_iso_8601": "2021-08-01T22:17:17.376946Z",
        "url": "https://files.pythonhosted.org/packages/84/94/048079b5d36542c56af814944f3956690e12840afa1f8a7010510997a5ba/pymultidispatch-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1598e4cddf201239fd4a14118b77a19d17dbf6b8ee5fad60559df263177ece82",
          "md5": "7bb905d0c8ddf5d8e9f7d1b9507d7948",
          "sha256": "5bb15781c705dfcddc55ad296133b7134cd2a1037fe53ec65fce928bddfb5905"
        },
        "downloads": -1,
        "filename": "pymultidispatch-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7bb905d0c8ddf5d8e9f7d1b9507d7948",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6563,
        "upload_time": "2021-08-06T22:55:56",
        "upload_time_iso_8601": "2021-08-06T22:55:56.001814Z",
        "url": "https://files.pythonhosted.org/packages/15/98/e4cddf201239fd4a14118b77a19d17dbf6b8ee5fad60559df263177ece82/pymultidispatch-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4cd078f65a4e4f1b31ea6c3894196b331594c7c16915e897184fcf6c4d5449b",
          "md5": "62eb76adacc3d578fbd8f5a05799c4a0",
          "sha256": "55af754a70279e2a667331570fe115aece272af1ddb00efbd8a765404da409af"
        },
        "downloads": -1,
        "filename": "pymultidispatch-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "62eb76adacc3d578fbd8f5a05799c4a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4723,
        "upload_time": "2021-08-06T22:55:59",
        "upload_time_iso_8601": "2021-08-06T22:55:59.239623Z",
        "url": "https://files.pythonhosted.org/packages/d4/cd/078f65a4e4f1b31ea6c3894196b331594c7c16915e897184fcf6c4d5449b/pymultidispatch-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7d23b804a64e367243d503d10a416ff26febe6e1163b3484bc36ff1de001edb",
          "md5": "4898795275db362aad18f95b6b4a80d5",
          "sha256": "36b5ba0c9bbcc4b253c893cb75719bd8034afcc04e3bcc8efe2c7180fbcbca74"
        },
        "downloads": -1,
        "filename": "pymultidispatch-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4898795275db362aad18f95b6b4a80d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6784,
        "upload_time": "2021-09-03T22:24:00",
        "upload_time_iso_8601": "2021-09-03T22:24:00.938785Z",
        "url": "https://files.pythonhosted.org/packages/e7/d2/3b804a64e367243d503d10a416ff26febe6e1163b3484bc36ff1de001edb/pymultidispatch-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3758fef9435c6807ab4e2bc107d5bc70ac86208fc8dbd9fd84a147953e7267ed",
          "md5": "64de31c3d309ad785ba776e1426205a4",
          "sha256": "038253415bbcedc863f8e2d46e9272c06708c3edc0aa2ea6bbf1a7548dd6d271"
        },
        "downloads": -1,
        "filename": "pymultidispatch-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "64de31c3d309ad785ba776e1426205a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4942,
        "upload_time": "2021-09-03T22:24:04",
        "upload_time_iso_8601": "2021-09-03T22:24:04.465399Z",
        "url": "https://files.pythonhosted.org/packages/37/58/fef9435c6807ab4e2bc107d5bc70ac86208fc8dbd9fd84a147953e7267ed/pymultidispatch-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7d23b804a64e367243d503d10a416ff26febe6e1163b3484bc36ff1de001edb",
        "md5": "4898795275db362aad18f95b6b4a80d5",
        "sha256": "36b5ba0c9bbcc4b253c893cb75719bd8034afcc04e3bcc8efe2c7180fbcbca74"
      },
      "downloads": -1,
      "filename": "pymultidispatch-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4898795275db362aad18f95b6b4a80d5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6784,
      "upload_time": "2021-09-03T22:24:00",
      "upload_time_iso_8601": "2021-09-03T22:24:00.938785Z",
      "url": "https://files.pythonhosted.org/packages/e7/d2/3b804a64e367243d503d10a416ff26febe6e1163b3484bc36ff1de001edb/pymultidispatch-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3758fef9435c6807ab4e2bc107d5bc70ac86208fc8dbd9fd84a147953e7267ed",
        "md5": "64de31c3d309ad785ba776e1426205a4",
        "sha256": "038253415bbcedc863f8e2d46e9272c06708c3edc0aa2ea6bbf1a7548dd6d271"
      },
      "downloads": -1,
      "filename": "pymultidispatch-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "64de31c3d309ad785ba776e1426205a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4942,
      "upload_time": "2021-09-03T22:24:04",
      "upload_time_iso_8601": "2021-09-03T22:24:04.465399Z",
      "url": "https://files.pythonhosted.org/packages/37/58/fef9435c6807ab4e2bc107d5bc70ac86208fc8dbd9fd84a147953e7267ed/pymultidispatch-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}