{
  "info": {
    "author": "Heureka.cz",
    "author_email": "vyvoj@heureka.cz",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Url generator\n\nUrlGenerator is a simple library that allows you to generate URLs from a single JSON configuration for different programming languages. \n\n## Other programming languages\n+There is also [UrlGenerator for PHP](https://github.com/heureka/php-url-generator), which accepts the same configuration,\n+so you can combine multiple projects in Python and PHP using same configuration file.\n\n#### Basic usage:\nMain entrypoint to this library is function `url_generator.get_url` which accepts the following parameters:\n\n###### pathString\n*Path string* defines path through route configuration using dot notation (see the #configuration section bellow).\n\nexample: `heureka.category.index`\n\n##### parameter kwargs\n*Params* is dictionary of route parameters. Params dict should contain mixed `GET` parameters and template parameters as defined in configuration.\n\nexample: `lang=\"sk\", productId=12345`\n\n#### Example call: \n```python\nfrom url_generator import UrlGenerator\n\nug = UrlGenerator('path/to/your/config.json', env=\"dev\", lang=\"sk\")\nug.get_url(\"heureka.category.index\", productId=12345)\n```\n\n## Configuration\nPath to configuration file must be passed trough the constructor to the UrlGenerator instance (as a first parameter).\nCheck `tests/test.json` for better understanding.\n\nStructure is plain Json (planning support for comments in future).\n\nSimple configuration file can look like this:\n```\n{\n    \"some_example_site\": {\n        \"@scheme\": \"https\",\n        \"@subdomain\": \"www\",\n        \"@host\": \"example.com\",\n        \"@host_postfix\": \"test.dev\",\n        \"@path\": \"/{category_id}/search\",\n        \"@params\": {\n            \"query\": \"q\"\n        }  \n    }\n}\n```\n\n### Keywords\nKeys in configuration that are prefixed by `@` symbol are considered as *keyword*.\nEach route is defined by keyword. Note that `@scheme` and `@host` *keywords* are mandatory.\n\n*Keywords* are prefixed by `@` symbol to distinguish them from *path nodes*.\n\n#### `@scheme`\nThis represents URL scheme by [RFC1738](https://tools.ietf.org/html/rfc1738), usually `http` or `https`\n\nexample: `\"@scheme\": \"https\"`\n\n#### `@subdomain`\nThis represents subdomain.\n\nexample: `\"@subdomain\": \"www\"`\n\n#### `@host`\nThis represents host (and can contain port if necessary)\n\nexample: `\"@host\": \"www.heureka.cz\"`\n\n#### `@host_postfix`\nThis represents postfix for host. For example for dev environment.\n\nexample: `\"@host_postfix\": \"test.dev\"`\n\n#### `@path`\nThis represents URL path by [RFC1738](https://tools.ietf.org/html/rfc1738) like `/` for index or `/iphone-7/recenze` for product detail\n\nexample: `\"@path\": \"/obchody/czc-cz/recenze\"`\n\n#### `@query`\nThis represents list of allowed query parameters with their internal and external representation.\n\nFor example if configuration contains `\"@query\": {\"index\": \"i\"}` then `index` parameter in \ncall `ug.get_url('example_site', index=10)` will be compiled according to configuration into `i=10`\nand returned url should looks like `https://www.example.com/?i=10`.\n\nNote that **query parameters are not mandatory**, and cannot be set as mandatory.\n\n#### `@fragment`\nThis represents fragment (anchor identifier) by [RFC1738](https://tools.ietf.org/html/rfc1738) like `#section`\nexample: `\"@fragment\": \"section\"`\n\n### Path nodes\nEvery key in configuration, which is **not prefixed by `@` or `{`** symbol, is considered as *path node*.\n\nPath nodes **should use** `underscore_case` naming convention.\n\n*Path string* is dot joined *Path nodes* like `heureka.category.index`.\n\nFor example, in following configuration `some_site` or `index` are path nodes.\nOn the other hand `@host` and `@path` are keywords.\n```\n{\n    \"@scheme\": \"https\",\n    \"some_site\": {\n        \"index\": {\n            \"@host\": \"example.com\",\n            \"@path\": \"/index.php\"\n        }\n    }\n}\n```\n\nWith the precending configuration we can call `get_url('some_site.index')` and generated url will be `https://example.com/index.php`. \n\n### Inheritance\nUsing *path string* we define which URL we want to receive.\nThe *URL Generator* parses the config file and gets *keywords* from given *path node* and all its parents.\n\nAt the example bellow, we can call `get_url('example.russian')` and the response will be `https://www.example.ru/information`.\n\nNote that *URL Generator* uses the `@host` *keyword* in `example.russian` *path node*, but `@path` *keyword* is from `example`. At least `@scheme` *keyword* is defined in global space (root path).\n```\n{\n    \"@scheme\": \"https\",\n    \"example\": {\n        \"@host\": \"www.example.com\",\n        \"@path\": \"/information\"\n \n        \"russian\": {\n            \"@host\": \"www.example.ru\"\n        }\n    }\n}\n```\n\nAt this example you can also see *keywords* overloading, as the `host` *keyword* is defined in `example` *path node* and it is overloaded in `example.russian` *path node*.\n\nThis way we can build complex structures like `heureka.product.detail.reviews.only_certified` without too many repating definitions in the configuration.\n\n### Template parameters\nIn the configuration we can define *template parameters* using `{parameter}` syntax.\nThose parameters will be expected in `get_url(path, params)` function call (in params array).\n\nTemplate parameters can be also defined globally as first parameter of *URL Generator* constructor and those will be shared for all `get_url` function calls.\n\nIt is **not recommended** to use template parameters in values for `@scheme` and `@query` *keywords*.\n\nAt the example bellow we define top level domain using `language` parameter.\nSo we can call `get_url(path, language='cz', page=1])` and the result will be `https://www.example.cz?p=1`.\n```\n{\n    \"@scheme\": \"https\",\n    \"example\": {\n        \"@host\": \"www.example.{language}\",\n        \"@params\": { \"page\": \"p\" }\n    }\n}\n```\n\nNote that *query parametes* and *template parameters* are mixed in `get_url(.., **kwargs)` second parameter together.\n\n### Template conditions\nWe can define *template conditions* in configuration to separate configuration for given parameter value.\n\nThis way we can define configuration only for given language/environment/etc..\n\n*Template conditions* uses `{parameter}=expected_value` syntax and can contain same rules as *path nodes*.\n\nRules defined inside template condition are processed only if given parameter equals expected value.\n\nAt the example bellow we define `{lang}=spanish` condition, so if we call `get_url(\"example\", lang=\"spanish\")` it returns `https://www.ejemplar.es`.  \n\n```\n{\n    \"@scheme\": \"https\",\n    \"example\": {\n        \"@host\": \"www.example.cz\",\n       \n        \"{lang}=spanish\": {\n            \"@host\": \"www.ejemplar.es\"\n        }\n    }\n}\n```\n\nNote that rules are processed from top to bottom in file. Latter rule has priority so *template condition* must be\nplaced after overloaded values to have effect.\n\n## Contributing rules\nThe main advantage of the URLGenerator is that it can share the configuration through multiple programming languages.\nTherefore, it is necessary to keep the individual language versions compatible with each other.\n\nSo, when you create a pull-request into this repository, please concider contributing the same functionality to the other repositories listed in [Other programming languages](#other-programming-languages) section. \n\nProject owners should never merge code which breaks compatibility with other language versions.\n\n## Author\nThe author of the first idea is [Pavel Å koda](https://github.com/skooda). \n\n## So ...\nHappy URLing ;)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/heureka/py-url-generator",
    "keywords": "",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "url-generator",
    "package_url": "https://pypi.org/project/url-generator/",
    "platform": null,
    "project_url": "https://pypi.org/project/url-generator/",
    "project_urls": {
      "Homepage": "https://github.com/heureka/py-url-generator"
    },
    "release_url": "https://pypi.org/project/url-generator/1.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Universal URL generator.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16388975,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f43cb549c0431c99e13edd00a5f8048558ab2aebf39c53d53d8aa470d3afb1d",
          "md5": "5d3bf4d1ff1d252dc355ebc2bcdc1d3e",
          "sha256": "98fd609657ff07795a283d4f1da719e8a575dc3b541c0f47bed9b2a4a0135c54"
        },
        "downloads": -1,
        "filename": "url_generator-1.0.0-py3.6.egg",
        "has_sig": false,
        "md5_digest": "5d3bf4d1ff1d252dc355ebc2bcdc1d3e",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "requires_python": null,
        "size": 5384,
        "upload_time": "2018-06-28T09:00:13",
        "upload_time_iso_8601": "2018-06-28T09:00:13.990564Z",
        "url": "https://files.pythonhosted.org/packages/6f/43/cb549c0431c99e13edd00a5f8048558ab2aebf39c53d53d8aa470d3afb1d/url_generator-1.0.0-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ce840a41f6a4e9d8fd3ea988f94a1fe9098870dd28d9ff4c7822eb2beb71653",
          "md5": "1d5d5f4b4474b664f72e62342c8484a9",
          "sha256": "53712d47a2a28bcca7fc19e909ce47cafcb4e39baa23bf16c1656346a1480d16"
        },
        "downloads": -1,
        "filename": "url-generator-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1d5d5f4b4474b664f72e62342c8484a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5034,
        "upload_time": "2018-06-28T08:59:28",
        "upload_time_iso_8601": "2018-06-28T08:59:28.449710Z",
        "url": "https://files.pythonhosted.org/packages/4c/e8/40a41f6a4e9d8fd3ea988f94a1fe9098870dd28d9ff4c7822eb2beb71653/url-generator-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67ffdae84f6d8efd244d163d63a28f2b7978c9569f1ccf3c5c069ae090113161",
          "md5": "89512d42b0d0e670442ec8a902be79e3",
          "sha256": "fcf08624ce4b9ab9c2002a1c3ab5a173046e1d55b1badd51e005a37770e04880"
        },
        "downloads": -1,
        "filename": "url_generator-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "89512d42b0d0e670442ec8a902be79e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7206,
        "upload_time": "2023-01-11T11:58:39",
        "upload_time_iso_8601": "2023-01-11T11:58:39.745867Z",
        "url": "https://files.pythonhosted.org/packages/67/ff/dae84f6d8efd244d163d63a28f2b7978c9569f1ccf3c5c069ae090113161/url_generator-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a43562dbb75dc60b3ac58132ebfab9ea46cd3cbb7722b64e293e145fc71523de",
          "md5": "424adef1ca17ae6663eb7662445d76a1",
          "sha256": "96c4128a19842c80c1a1b76c4585a6a17552fd9f4061f40898275a27751a3711"
        },
        "downloads": -1,
        "filename": "url-generator-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "424adef1ca17ae6663eb7662445d76a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9205,
        "upload_time": "2023-01-11T11:58:41",
        "upload_time_iso_8601": "2023-01-11T11:58:41.315836Z",
        "url": "https://files.pythonhosted.org/packages/a4/35/62dbb75dc60b3ac58132ebfab9ea46cd3cbb7722b64e293e145fc71523de/url-generator-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b77efdf07f314db73c2930f26900852de6a17cd6761b2e47d6c8d3430c26d65f",
          "md5": "57c164049f374d2ae58ac4f860fd1f45",
          "sha256": "df131ad68354058fa7a2d682ecfd32fb12cfbad49a79b553640cd764d58fbac7"
        },
        "downloads": -1,
        "filename": "url_generator-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57c164049f374d2ae58ac4f860fd1f45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9903,
        "upload_time": "2023-01-11T12:12:31",
        "upload_time_iso_8601": "2023-01-11T12:12:31.141941Z",
        "url": "https://files.pythonhosted.org/packages/b7/7e/fdf07f314db73c2930f26900852de6a17cd6761b2e47d6c8d3430c26d65f/url_generator-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "170354c97bf6d35c6749dfffdb4ee4b32b04efa799e40e668f17a723d4457417",
          "md5": "df29eefc5c913720c2f59e315986c35b",
          "sha256": "e55982375bf638144e8691d96bc684f062d630e29442dbf587015180c70ecf98"
        },
        "downloads": -1,
        "filename": "url-generator-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "df29eefc5c913720c2f59e315986c35b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9595,
        "upload_time": "2023-01-11T12:12:33",
        "upload_time_iso_8601": "2023-01-11T12:12:33.078535Z",
        "url": "https://files.pythonhosted.org/packages/17/03/54c97bf6d35c6749dfffdb4ee4b32b04efa799e40e668f17a723d4457417/url-generator-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b77efdf07f314db73c2930f26900852de6a17cd6761b2e47d6c8d3430c26d65f",
        "md5": "57c164049f374d2ae58ac4f860fd1f45",
        "sha256": "df131ad68354058fa7a2d682ecfd32fb12cfbad49a79b553640cd764d58fbac7"
      },
      "downloads": -1,
      "filename": "url_generator-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "57c164049f374d2ae58ac4f860fd1f45",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9903,
      "upload_time": "2023-01-11T12:12:31",
      "upload_time_iso_8601": "2023-01-11T12:12:31.141941Z",
      "url": "https://files.pythonhosted.org/packages/b7/7e/fdf07f314db73c2930f26900852de6a17cd6761b2e47d6c8d3430c26d65f/url_generator-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "170354c97bf6d35c6749dfffdb4ee4b32b04efa799e40e668f17a723d4457417",
        "md5": "df29eefc5c913720c2f59e315986c35b",
        "sha256": "e55982375bf638144e8691d96bc684f062d630e29442dbf587015180c70ecf98"
      },
      "downloads": -1,
      "filename": "url-generator-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "df29eefc5c913720c2f59e315986c35b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9595,
      "upload_time": "2023-01-11T12:12:33",
      "upload_time_iso_8601": "2023-01-11T12:12:33.078535Z",
      "url": "https://files.pythonhosted.org/packages/17/03/54c97bf6d35c6749dfffdb4ee4b32b04efa799e40e668f17a723d4457417/url-generator-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}