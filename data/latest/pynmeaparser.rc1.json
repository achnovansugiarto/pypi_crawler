{
  "info": {
    "author": "",
    "author_email": "Ahmad Shahril <shah25392+pypi@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: GIS",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# pyNMEAParser\r\nA package to parse general form of NMEA sentences. It is not specific to just certain devices only.\r\nAfter successfully parsing an NMEA data, it will return a list of fields in the NMEA sentence.\r\n\r\n# API\r\n## `NMEAParser()`\r\n**Description:** The constructor for NMEAParser class.\r\n\r\n**Returns:** NMEAParser object.\r\n\r\n```python\r\n# Create NMEAParser object\r\nparser = NMEAParser()\r\n```\r\n---\r\n## `add_handler(id:str, fn:Callable)`\r\n**Description:** Attach a handler function to be called when `id` matches the key.\r\n\r\n**Parameters:**\r\n\r\n`id`: A string representing the key.\r\n\r\n`fn`: The handler function of which will be called if `id` matches the key. The function needs to accept a list as a parameter.\r\n\r\n```python\r\ndef my_handler(fields):\r\n    print(fields)\r\n\r\n\r\nparser.add_handler('GPGGA', my_handler)\r\n```\r\n---\r\n## `process(sentence:str)`\r\n**Description:** Process the string passed to the function. This string will be concatenated with the previously incomplete processed string.\r\n\r\n**Parameters:**\r\n\r\n`sentence`: NMEA string format. This can be an arbitrary data, but needs to adhere to NMEA standard.\r\n```python\r\n# Process an NMEA string\r\nparser.process('$GPZDA,024008.97,24,11,2022,00,00*62')\r\nparser.process('$MY_OWN,SOME,DATA,HERE*2F') # Can be arbitrary as long as adhering to NMEA standard.\r\n```\r\n---\r\n## `get_buffer()`\r\n**Description:** Process the string passed to the function. This string will be concatenated with the previously incomplete processed string.\r\n\r\n**Returns:** The string currently in the buffer.\r\n\r\n```python\r\nprint('Unprocessed string:', parser.get_buffer()) # Display the string that is still not processed.\r\n```\r\n\r\n# Usage\r\n## Examples\r\n### Simple parse\r\n\r\n```python\r\nfrom pynmeaparser import NMEAParser\r\n\r\ndef my_handler(fields):\r\n    print(fields)\r\n\r\nparser = NMEAParser() # Create parser object\r\nparser.add_handler('GPZDA', handler) # Add handler. The handler function will be called if the first field contains the key.\r\nparser.process('$GPZDA,024008.97,24,11,2022,00,00*62') # Process NMEA string here.\r\n# Output: ['GPZDA', '024008.97', '24', '11', '2022', '00', '00']\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pynmeaparser",
    "package_url": "https://pypi.org/project/pynmeaparser/",
    "platform": null,
    "project_url": "https://pypi.org/project/pynmeaparser/",
    "project_urls": {
      "Bug Tracker": "https://github.com/shah253kt/pynmeaparser/issues",
      "Homepage": "https://github.com/shah253kt/pynmeaparser"
    },
    "release_url": "https://pypi.org/project/pynmeaparser/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A package to parse general form of NMEA sentences. It is not specific to just certain devices only.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16030912,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee8182caae03a17abaaced920106e3d8e432056929b430bf7d2a5618c3e3c296",
          "md5": "d0cfe06e4c2ff4a38105bfbee787077b",
          "sha256": "dee4d42b9210b053c850569954911bf97b324e2118189e6dbbe24a8f9825fd38"
        },
        "downloads": -1,
        "filename": "pynmeaparser-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d0cfe06e4c2ff4a38105bfbee787077b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4297,
        "upload_time": "2022-12-08T08:33:00",
        "upload_time_iso_8601": "2022-12-08T08:33:00.361946Z",
        "url": "https://files.pythonhosted.org/packages/ee/81/82caae03a17abaaced920106e3d8e432056929b430bf7d2a5618c3e3c296/pynmeaparser-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed5ce6c98ddf7cb44265343cf9dda97c4304cc7c1699587bb627c470a571a7dc",
          "md5": "36a3cb3500989ec82782eeb58cdf5a38",
          "sha256": "f7ed05b9c7af000e48f89c0ef0bb018b4fed153538b89500697476818b1d05ab"
        },
        "downloads": -1,
        "filename": "pynmeaparser-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "36a3cb3500989ec82782eeb58cdf5a38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4023,
        "upload_time": "2022-12-08T08:33:02",
        "upload_time_iso_8601": "2022-12-08T08:33:02.409337Z",
        "url": "https://files.pythonhosted.org/packages/ed/5c/e6c98ddf7cb44265343cf9dda97c4304cc7c1699587bb627c470a571a7dc/pynmeaparser-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee8182caae03a17abaaced920106e3d8e432056929b430bf7d2a5618c3e3c296",
        "md5": "d0cfe06e4c2ff4a38105bfbee787077b",
        "sha256": "dee4d42b9210b053c850569954911bf97b324e2118189e6dbbe24a8f9825fd38"
      },
      "downloads": -1,
      "filename": "pynmeaparser-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d0cfe06e4c2ff4a38105bfbee787077b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4297,
      "upload_time": "2022-12-08T08:33:00",
      "upload_time_iso_8601": "2022-12-08T08:33:00.361946Z",
      "url": "https://files.pythonhosted.org/packages/ee/81/82caae03a17abaaced920106e3d8e432056929b430bf7d2a5618c3e3c296/pynmeaparser-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed5ce6c98ddf7cb44265343cf9dda97c4304cc7c1699587bb627c470a571a7dc",
        "md5": "36a3cb3500989ec82782eeb58cdf5a38",
        "sha256": "f7ed05b9c7af000e48f89c0ef0bb018b4fed153538b89500697476818b1d05ab"
      },
      "downloads": -1,
      "filename": "pynmeaparser-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "36a3cb3500989ec82782eeb58cdf5a38",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4023,
      "upload_time": "2022-12-08T08:33:02",
      "upload_time_iso_8601": "2022-12-08T08:33:02.409337Z",
      "url": "https://files.pythonhosted.org/packages/ed/5c/e6c98ddf7cb44265343cf9dda97c4304cc7c1699587bb627c470a571a7dc/pynmeaparser-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}