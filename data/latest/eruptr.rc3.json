{
  "info": {
    "author": "Jason Godden",
    "author_email": "jason@vulkndata.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Topic :: Database",
      "Topic :: Database :: Database Engines/Servers",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Don't ETL or ELT. LET your data be free.\n\n# VulknData Eruptr\n\n## Data needs a Makefile.\n\nhttps://tonsky.me/blog/disenchantment/\n\nEruptr is an extensible, model and configuration driven data management system \ntargeting ETL, DataOps and Analytics Engineering.\n\nThe initial target for Eruptr is the ClickHouse OLAP engine however it is being \nadapted and extended to address other modern data eco-systems.\n\n## Why\n\nThe main data processing mechanism is over untyped data using existing decades \nold Unix/Linux tools. One of the key goals of Eruptr in this regard is to force\nus to ask honest questions about existing data processing mechanisms. Do we need\na heavy, Java-based system to process our data or does awk solve the problem for\n95% of our data in 10% of the time? What about heavily typed data processing \nsystems in Python that pass dictionaries or tuples around with mountains of code\non Kubernetes? Is that necessary? Or could it be dealt with via grep on a micro\ninstance?\n\n## Initial Release\n\nThe initial release is an alpha release. Tests have not been established and \nthere are quirks/issues in some components or functionality that differs to the\ndocumentation. These issues will be rectified prior to Christmas 2020 with \na proper production release in January 2021.\n\n## Roadmap\n\n- Generator modules with daemon mode\n- Scheduler/task controller with multi-processing schedulers\n- Engine support for PostgreSQL, MySQL, RedShift and Google BigQuery\n- Additional task, pipe and io modules\n- Analytics / Data Engineering projects\n- Database reflection with automatic model/schema migrations\n- A web UI for managing workflows\n- Analytics engineering workflows including documentation\n- Graph scheduling with multiple flows\n- Marrying eco-systems - Vulkn and the upcoming Vulkn Server\n\n## Documentation\n\nDocumentation is available at http://docs.vulkndata.io/eruptr/.\n\n## Installation\n\nEruptr has only been tested with recent versions of Ubuntu and Python 3.7. You \nwill need to have a working Python 3.7.x environment with pip.\n\nEnsure you have installed ClickHouse the clickhouse-client program including \nclickhouse-local:\n\n```bash\nsudo apt install clickhouse-client clickhouse-common\n```\n\n### Installation with pip\n\n1. Install Eruptr via pip.\n\n```bash\nsudo add-apt-repository ppa:deadsnakes/ppa\nsudo apt update\nsudo apt install -y python3.7 python3.7-dev python3-pip\nsudo python3.7 -m pip install eruptr\n```\n\n### Installation from source (for developers)\n\n1. Install Eruptr via ```git clone```.\n\n```bash\ngit clone https://github.com/VulknData/eruptr.git\ncd eruptr\n```\n\n2. Install required packages. Note that it may make sense to do this within a \nvirtual environment.\n\n```bash\npip install -r requirements.txt\n```\n\n3. You can start using Eruptr via the eruptr script:\n\n```bash\ncd scripts\nsource env.sh\n./eruptr --help\n```\n\n## Getting Started\n\nLet's use one of the provided examples. This assumes you have a ClickHouse \nserver running on your local system listening on standard ports with no default\ncredentials (default/empty password).\n\nCreate the following file - simple1.yaml:\n\n```yaml\nname: Simple1 Batch Job\nshard: clickhouse://localhost/test\nworkflow:\n  - drop:\n      executor: StepExecutor\n  - create:\n      executor: StepExecutor\n      enabled: true\n  - data:\n      executor: StepExecutor\n  - pre:\n      executor: StepExecutor\n      enabled: true\n  - input:\n      executor: UnixPipeExecutor\n      enabled: true\n  - post:\n      executor: StepExecutor\n  - clean:\n      executor: StepExecutor\ndata:\n  - tasks.file.write:\n      path: system_metrics.csv\n      data: |\n        \"device1\",\"1970-04-27 03:46:40\",32.3,\"temperature\"\n        \"device1\",\"1970-04-27 03:46:40\",10.2,\"watts\"\n  - tasks.pack.gz:\n      input_file: system_metrics.csv\n      output_file: system_metrics.csv.gz\npre:\n  - TRUNCATE TABLE simple1.system_metrics\ninput:\n  - io.file.read: system_metrics.csv.gz\n  - pipes.unpack.gz\n  - io.clickhouse.write:\n      table: simple1.system_metrics\n      format: formats.clickhouse.CSV\npost:\n  - tasks.file.delete: system_metrics.csv.gz\ncreate:\n  - CREATE DATABASE IF NOT EXISTS simple1\n  - |\n    CREATE TABLE IF NOT EXISTS simple1.system_metrics\n    (\n      device String,\n      epoch_dt DateTime,\n      value Float32,\n      tag String\n    ) ENGINE = Log\nclean:\n  - DROP TABLE IF EXISTS simple1.system_metrics\n  - DROP DATABASE IF EXISTS simple1\n```\n\nFirst lets generate some test data:\n\n```bash\neruptr load --conf simple1.yaml --log-level INFO --flows data\n\nVulknData Eruptr (C) 2020 VulknData, Jason Godden\n\nGPLv3 - see https://github.com/VulknData/eruptr/COPYING\n\n12/01/2020 09:14:40 PM - INFO - Rendering configuration\n12/01/2020 09:14:40 PM - INFO - Running \"Simple1 Batch Job\"\n12/01/2020 09:14:40 PM - INFO - Executing data section\n12/01/2020 09:14:40 PM - INFO - StepExecutor: tasks.file.write({'path': 'system_metrics.csv', 'data': '\"device1\",\"1970-04-27 03:46:40\",32.3,\"temperature\"\\n\"device1\",\"1970-04-27 03:46:40\",10.2,\"watts\"\\n'}) -> tasks.pack.gz({'input_file': 'system_metrics.csv', 'output_file': 'system_metrics.csv.gz'})\n12/01/2020 09:14:40 PM - INFO - Successfully completed \"Simple1 Batch Job\"\n\nOK - Simple1 Batch Job - SUCCESS\n```\n\nUsing the --flows option we've told eruptr to execute the `data` flow only.\n\nGreat. This has provided us with a simple dataset we can import. If we don't \nspecify any flows eruptr automatically runs only the enabled workflows in the\norder they're defined (create, pre and input).\n\n```bash\neruptr load --conf simple1.yaml --log-level INFO\n\nVulknData Eruptr (C) 2020 VulknData, Jason Godden\n\nGPLv3 - see https://github.com/VulknData/eruptr/COPYING\n\n12/01/2020 09:24:04 PM - INFO - Rendering configuration\n12/01/2020 09:24:04 PM - INFO - Running \"Simple1 Batch Job\"\n12/01/2020 09:24:04 PM - INFO - Executing create section\n12/01/2020 09:24:04 PM - INFO - StepExecutor: tasks.clickhouse.execute(CREATE DATABASE IF NOT EXISTS simple1) -> tasks.clickhouse.execute(CREATE TABLE IF NOT EXISTS simple1.system_metrics ( device String, epoch_dt DateTime, value Float32, tag String ) ENGINE = Log )\n12/01/2020 09:24:04 PM - INFO - Executing pre section\n12/01/2020 09:24:04 PM - INFO - StepExecutor: tasks.clickhouse.execute(TRUNCATE TABLE simple1.system_metrics)\n12/01/2020 09:24:04 PM - INFO - Executing input section\n12/01/2020 09:24:04 PM - INFO - UnixPipeExecutor: <function read at 0x7f9e0d61ed90>(run='system_metrics.csv.gz', connection='clickhouse://localhost/test' | <function <lambda> at 0x7f9e0d62bd08>(run='None', connection='clickhouse://localhost/test' | <function write at 0x7f9e0d61ed08>(connection='clickhouse://localhost/test', table='simple1.system_metrics', format='formats.clickhouse.CSV'\n12/01/2020 09:24:04 PM - INFO - Successfully completed \"Simple1 Batch Job\"\n\nOK - Simple1 Batch Job - SUCCESS\n```\n\nAnd what can we see in ClickHouse?\n\n```bash\nhulk :) select * from simple1.system_metrics format CSV;\n\nSELECT *\nFROM simple1.system_metrics\nFORMAT CSV\n\nQuery id: f4c471b1-f32a-4636-8e62-d923e5dc10c4\n\n\"device1\",\"1970-04-27 03:46:40\",32.3,\"temperature\"\n\"device1\",\"1970-04-27 03:46:40\",10.2,\"watts\"\n\n2 rows in set. Elapsed: 0.005 sec. \n```\n\nPerfect. So eruptr has created the necessary database, then table(s) and then\nextracted and loaded our data.\n\nThis is a trivial example though. Explore the documentation further to see how \nyou can create complex workflows with everything from custom shell commands to\nembedded Python all driven by simple YAML. Or combine Mako and Jinja to create\nre-usable macros for processing your data.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/VulknData/eruptr/archive/v20.12.3-alpha.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/VulknData/eruptr",
    "keywords": "clickhouse",
    "license": "gpl-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "eruptr",
    "package_url": "https://pypi.org/project/eruptr/",
    "platform": "",
    "project_url": "https://pypi.org/project/eruptr/",
    "project_urls": {
      "Download": "https://github.com/VulknData/eruptr/archive/v20.12.3-alpha.tar.gz",
      "Homepage": "https://github.com/VulknData/eruptr"
    },
    "release_url": "https://pypi.org/project/eruptr/20.12.3/",
    "requires_dist": [
      "chardet (>=3.0.4)",
      "idna (>=2.10)",
      "Jinja2 (>=2.11.2)",
      "Mako (>=1.1.3)",
      "MarkupSafe (>=1.1.1)",
      "PyYAML (>=5.3.1)",
      "requests (>=2.25.0)",
      "tabulate (>=0.8.7)",
      "urllib3 (>=1.26.2)"
    ],
    "requires_python": ">=3.7",
    "summary": "Data needs a Makefile.",
    "version": "20.12.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8789112,
  "releases": {
    "20.12.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a6f5409531decb7e5730ad2d8eec3702095133f2f84767ff254d327786e1dfb",
          "md5": "7ae7df134a2fd95dc0d51b4640753912",
          "sha256": "41b1d77ca620e6243e17239eb08a84b9a7e60fbe4f23473c6b16f6df823aa8c1"
        },
        "downloads": -1,
        "filename": "eruptr-20.12.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ae7df134a2fd95dc0d51b4640753912",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 64261,
        "upload_time": "2020-12-01T11:35:00",
        "upload_time_iso_8601": "2020-12-01T11:35:00.418811Z",
        "url": "https://files.pythonhosted.org/packages/0a/6f/5409531decb7e5730ad2d8eec3702095133f2f84767ff254d327786e1dfb/eruptr-20.12.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "478b82305d8fae32c22824cc41900c17227071910c9a7f0d0c4dc1917b38428e",
          "md5": "d45a515d39e5784d6268f5a9159aac20",
          "sha256": "3eba11bf67aeeff37791fb964075df7af579b46a5c92cbd2a6235b04136ac9ce"
        },
        "downloads": -1,
        "filename": "eruptr-20.12.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d45a515d39e5784d6268f5a9159aac20",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29798,
        "upload_time": "2020-12-01T11:35:02",
        "upload_time_iso_8601": "2020-12-01T11:35:02.655530Z",
        "url": "https://files.pythonhosted.org/packages/47/8b/82305d8fae32c22824cc41900c17227071910c9a7f0d0c4dc1917b38428e/eruptr-20.12.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.12.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ef03d6f4484a0ede11be7be733f27f137e82315a89079f6230b43ee8bd31bc0",
          "md5": "ba59778bcfa27b1d820b1755e14484da",
          "sha256": "68d60a585b29df0ababe2152079143f9f795f3cc458a2ddd6e34607c8d4bbc70"
        },
        "downloads": -1,
        "filename": "eruptr-20.12.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba59778bcfa27b1d820b1755e14484da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 64251,
        "upload_time": "2020-12-01T11:42:00",
        "upload_time_iso_8601": "2020-12-01T11:42:00.416163Z",
        "url": "https://files.pythonhosted.org/packages/7e/f0/3d6f4484a0ede11be7be733f27f137e82315a89079f6230b43ee8bd31bc0/eruptr-20.12.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a644c5c1c0514c9f4b7337f2f2d9641d3f58fb68114911d8fdd7d4497906de27",
          "md5": "d0d8e38ff94c1e8681951b5e70daab4b",
          "sha256": "6f07fe5f280596950eae9fd03282071eacecce74a9812ae79f10c49a8ec9fe82"
        },
        "downloads": -1,
        "filename": "eruptr-20.12.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d0d8e38ff94c1e8681951b5e70daab4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29786,
        "upload_time": "2020-12-01T11:42:03",
        "upload_time_iso_8601": "2020-12-01T11:42:03.738720Z",
        "url": "https://files.pythonhosted.org/packages/a6/44/c5c1c0514c9f4b7337f2f2d9641d3f58fb68114911d8fdd7d4497906de27/eruptr-20.12.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.12.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc0a599b08be9992e848d6ef48f32ee0e57d6599f4d7626129137642ff402ae5",
          "md5": "763596174b19af1b405971fe266a1edb",
          "sha256": "c943f8e1ef775f3321e9f9400838643df5c5ceed585c4dbc3aec66ddc609485d"
        },
        "downloads": -1,
        "filename": "eruptr-20.12.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "763596174b19af1b405971fe266a1edb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 64208,
        "upload_time": "2020-12-01T12:05:32",
        "upload_time_iso_8601": "2020-12-01T12:05:32.170950Z",
        "url": "https://files.pythonhosted.org/packages/bc/0a/599b08be9992e848d6ef48f32ee0e57d6599f4d7626129137642ff402ae5/eruptr-20.12.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "757057912ece77d9c4e4d0a51ac108223f546f3d7ba2c4e9fdfdd2fe43f116d2",
          "md5": "eb307653225c0f3bb98c852556cf9f6b",
          "sha256": "9dbb6d10f048c937f582fb1414c7e6b7dbd9365116ae377de48d00e0e860d961"
        },
        "downloads": -1,
        "filename": "eruptr-20.12.3.tar.gz",
        "has_sig": false,
        "md5_digest": "eb307653225c0f3bb98c852556cf9f6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29753,
        "upload_time": "2020-12-01T12:05:34",
        "upload_time_iso_8601": "2020-12-01T12:05:34.771850Z",
        "url": "https://files.pythonhosted.org/packages/75/70/57912ece77d9c4e4d0a51ac108223f546f3d7ba2c4e9fdfdd2fe43f116d2/eruptr-20.12.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc0a599b08be9992e848d6ef48f32ee0e57d6599f4d7626129137642ff402ae5",
        "md5": "763596174b19af1b405971fe266a1edb",
        "sha256": "c943f8e1ef775f3321e9f9400838643df5c5ceed585c4dbc3aec66ddc609485d"
      },
      "downloads": -1,
      "filename": "eruptr-20.12.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "763596174b19af1b405971fe266a1edb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 64208,
      "upload_time": "2020-12-01T12:05:32",
      "upload_time_iso_8601": "2020-12-01T12:05:32.170950Z",
      "url": "https://files.pythonhosted.org/packages/bc/0a/599b08be9992e848d6ef48f32ee0e57d6599f4d7626129137642ff402ae5/eruptr-20.12.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "757057912ece77d9c4e4d0a51ac108223f546f3d7ba2c4e9fdfdd2fe43f116d2",
        "md5": "eb307653225c0f3bb98c852556cf9f6b",
        "sha256": "9dbb6d10f048c937f582fb1414c7e6b7dbd9365116ae377de48d00e0e860d961"
      },
      "downloads": -1,
      "filename": "eruptr-20.12.3.tar.gz",
      "has_sig": false,
      "md5_digest": "eb307653225c0f3bb98c852556cf9f6b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 29753,
      "upload_time": "2020-12-01T12:05:34",
      "upload_time_iso_8601": "2020-12-01T12:05:34.771850Z",
      "url": "https://files.pythonhosted.org/packages/75/70/57912ece77d9c4e4d0a51ac108223f546f3d7ba2c4e9fdfdd2fe43f116d2/eruptr-20.12.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}