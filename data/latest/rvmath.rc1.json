{
  "info": {
    "author": "Hernan E. Grecco",
    "author_email": "hernan.grecco@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries"
    ],
    "description": ".. image:: https://img.shields.io/pypi/v/rvmath.svg\n    :target: https://pypi.python.org/pypi/rvmath\n    :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/l/rvmath.svg\n    :target: https://pypi.python.org/pypi/rvmath\n    :alt: License\n\n.. image:: https://img.shields.io/pypi/pyversions/rvmath.svg\n    :target: https://pypi.python.org/pypi/rvmath\n    :alt: Python Versions\n\n.. image:: https://github.com/hgrecco/rvmath/workflows/CI/badge.svg?branch=main\n    :target: https://github.com/hgrecco/rvmath/actions?query=workflow%3ACI\n\n.. image:: https://github.com/hgrecco/rvmath/workflows/Lint/badge.svg?branch=main\n    :target: https://github.com/hgrecco/rvmath/actions?query=workflow%3ALint\n\n.. image:: https://coveralls.io/repos/github/hgrecco/rvmath/badge.svg?branch=main\n    :target: https://coveralls.io/github/hgrecco/rvmath?branch=main\n\n\nrvmath: math with random variables, the easy way\n================================================\n\n**rvmath** is a Python package to build and evaluate\nmathematical expressions involving random variables.\n\nDo you want to draw 10 values from a distribution resulting\nfrom ``a * cos(b + c)`` where ``a ~ Poisson``, ``b ~ Uniform``,\nand ``c ~ Normal``? No problem:\n\n.. code-block:: python\n\n    >>> import rvmath as rvm\n    >>> z = rvm.poisson(mu=5) * np.cos(rvm.uniform() + rvm.norm())\n    >>> z.rvs(10)\n\nIt runs in Python 3.7+ depending on NumPy_ and SciPy_.\nIt is licensed under BSD.\n\nIt is extremely easy and natural to use:\n\n.. code-block:: python\n\n    >>> import rvmath as rvm\n    >>> x = rvm.uniform()\n    >>> y = rvm.uniform()\n    >>> z = x - y\n    >>> z.rvs(3)  #doctest: +SKIP\n    [ 0.56791289 -0.1547692  -0.73984907]\n    >>> z.rvs(3)  #doctest: +SKIP\n    [-0.33095289 -0.08664128  0.09938225]\n\nBriefly, ``x`` and ``y`` are random variables drawn from a uniform distribution.\n``z`` is a random variable drawn from a distribution obtained by subtracting\ntwo uniform distributions. ``z.rvs(3)`` draw 3 values from such distribution.\n\nBehind the scenes, **rvmath** generate random variates of all random variables\nand perform all necessary calculations.\n\n**rvmath** builds upon `Scipy Stats`_ and therefore all continuous distributions\navailable there are also here, with the same name and arguments. ``rvs`` also follows\nthe same API, namely:\n\n    - **size**: int or tuple of ints, optional\n      Defining number of random variates (default is 1).\n    - **random_state**: None, int, RandomState, Generator, optional\n      If seed is None the RandomState singleton is used. If seed is an int,\n      a new RandomState instance is used, seeded with seed. If seed is already\n      a RandomState or Generator instance, then that object is used. Default is None.\n\nAn important feature is that random variables have an identity and therefore\nthe following code gives the expected result.\n\n.. code-block:: python\n\n    >>> w = x - x\n    >>> w.rvs(3)\n    [0., 0., 0.]\n\nYou can also use NumPy functions.\n\n.. code-block:: python\n\n    >>> c = np.cos(x)\n    >>> c.rvs(3)\n\n\nFinally, you can convert the expression into a SciPy distribution:\n\n.. code-block:: python\n\n    >>> distro = c.to_distro(name=\"my_distro\")\n\nto obtain an object with useful methods such as ``rvs``, ``pdf``, ``cdf`` and others.\n\n\nQuick Installation\n------------------\n\nTo install **rvmath**, simply (*soon*):\n\n.. code-block:: bash\n\n    $ pip install rvmath\n\nand then simply enjoy it!\n\n\nOther functionality\n-------------------\n\nAll **rvmath** objects have a few useful options and methods:\n\nYou can assign an id to the random variable:\n\n.. code-block:: python\n\n    >>> x = rvm.uniform(rvid=\"x\")\n\nto simplify debugging. If ``rvid`` is not given, a random string\nwill be generated.\n\nYou can ask for dict containing all random variable names and their\nunderlying SciPy distribution objects.\n\n.. code-block:: python\n\n    >>> x = rvm.uniform(rvid=\"x\")\n    >>> y = rvm.norm(rvid=\"y\")\n    >>> z = x + y\n    >>> dict(z.random_vars())\n    {'x': <scipy.stats._distn_infrastructure.rv_frozen at 0x7ff57f196220>,\n     'y': <scipy.stats._distn_infrastructure.rv_frozen at 0x7ff57e5a81f0>}\n\n\nYou can draw values from all random variables within an object.\n\n.. code-block:: python\n\n    >>> realization = z.draw(3)\n    >>> print(realization)\n    {'x': array([0.75633395, 0.99657116, 0.26853511]),\n     'y': array([-1.23407414,  0.5261816 ,  2.62764828])}\n\n\nand finally you can evaluate the object for this particular realization.\n\n.. code-block:: python\n\n    >>> z.eval(realization)\n    array([-0.47774019,  1.52275276,  2.89618339])\n\nThis is exactly what happens when ``rvs`` is called, but it can be particularly\nuseful for debugging, testing and evaluating subexpressions.\n\n\nIn certain cases you might want to predefine the size of certain random variable.\nYou can do it using the ``size`` parameter upon construction.\n\n.. code-block:: python\n\n    >>> z = np.sum(rvm.uniform(size=(3, 3))) * rvm.norm()\n\nRandom variables without an explicit size parameters will be evaluated to the size\ngiven when calling ``rvs``.\n\nTogether with this feature, you can build distributions that depend on others:\n\n.. code-block:: python\n\n    >>> m = rvm.uniform(size=1)\n    >>> w = rvm.norm(loc=m)\n\n\nYou can combine distribution defined size with ``rvs`` provided size\n\n.. code-block:: python\n\n    >>> m = rvm.uniform(size=(None, 3, None)).rvs(2)\n    >>> m.shape\n    (2, 3, 2)\n\n``None`` values will be replaced by scalars provided to ``rvs``.\n\n\nFAQ\n---\n\n1. **Which distributions are supported by rvmath?**\n\n   All continuous distributions available in Scipy, you can read the\n   list in the `SciPy Stats`_ docs.\n\n2. **Do you plan tu support discrete distributions?**\n\n   Yes, hopefully in the next version.\n\n3. **I have built my own distribution subclassing ``rv_continuous``, can I use it with rvmath?**\n\n   Yes, just call ``rvm.wrap(distro, *args, **kwargs)``\n\n----\n\n**rvmath** is maintained by a community. See AUTHORS_ for a complete list.\n\nTo review an ordered list of notable changes for each version of a project,\nsee CHANGES_\n\n\n.. _`NumPy`: http://www.numpy.org/\n.. _`SciPy`: http://www.scipy.org/\n.. _`SciPy Stats`: https://docs.scipy.org/doc/scipy/reference/stats.html\n.. _`pytest`: https://docs.pytest.org/\n.. _`AUTHORS`: https://github.com/hgrecco/rvmath/blob/master/AUTHORS\n.. _`CHANGES`: https://github.com/hgrecco/rvmath/blob/master/CHANGES\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hgrecco/rvmath",
    "keywords": "science,probability,statistics,math",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rvmath",
    "package_url": "https://pypi.org/project/rvmath/",
    "platform": "",
    "project_url": "https://pypi.org/project/rvmath/",
    "project_urls": {
      "Homepage": "https://github.com/hgrecco/rvmath"
    },
    "release_url": "https://pypi.org/project/rvmath/0.1/",
    "requires_dist": [
      "packaging",
      "numpy",
      "scipy",
      "importlib-metadata ; python_version < \"3.8\"",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "Proabilistic calculations. Build and evaluate mathematical expressions involving random variables.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10322846,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cbf848af8695a2dd05466aaad80de7a8c5f157092a218a16467c529a40f5792",
          "md5": "729043ac1398b60077befbe7bcfd955a",
          "sha256": "437899f75e316f862bd4fbd0168065c380a685511d21a24ea8063fb6fa23734b"
        },
        "downloads": -1,
        "filename": "rvmath-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "729043ac1398b60077befbe7bcfd955a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 11951,
        "upload_time": "2021-05-11T14:03:11",
        "upload_time_iso_8601": "2021-05-11T14:03:11.421790Z",
        "url": "https://files.pythonhosted.org/packages/4c/bf/848af8695a2dd05466aaad80de7a8c5f157092a218a16467c529a40f5792/rvmath-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3af548da025dca86a8089d85749df0dddc143203f8713d2a02de5d30a8ffcffe",
          "md5": "ea3e4bd30b65a95974d488bf0a69b204",
          "sha256": "a836f3df36b1e6bfd7841ae55470b89fde04e85d3318617010bbbf37141a7301"
        },
        "downloads": -1,
        "filename": "rvmath-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ea3e4bd30b65a95974d488bf0a69b204",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14933,
        "upload_time": "2021-05-11T14:03:20",
        "upload_time_iso_8601": "2021-05-11T14:03:20.106578Z",
        "url": "https://files.pythonhosted.org/packages/3a/f5/48da025dca86a8089d85749df0dddc143203f8713d2a02de5d30a8ffcffe/rvmath-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4cbf848af8695a2dd05466aaad80de7a8c5f157092a218a16467c529a40f5792",
        "md5": "729043ac1398b60077befbe7bcfd955a",
        "sha256": "437899f75e316f862bd4fbd0168065c380a685511d21a24ea8063fb6fa23734b"
      },
      "downloads": -1,
      "filename": "rvmath-0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "729043ac1398b60077befbe7bcfd955a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 11951,
      "upload_time": "2021-05-11T14:03:11",
      "upload_time_iso_8601": "2021-05-11T14:03:11.421790Z",
      "url": "https://files.pythonhosted.org/packages/4c/bf/848af8695a2dd05466aaad80de7a8c5f157092a218a16467c529a40f5792/rvmath-0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3af548da025dca86a8089d85749df0dddc143203f8713d2a02de5d30a8ffcffe",
        "md5": "ea3e4bd30b65a95974d488bf0a69b204",
        "sha256": "a836f3df36b1e6bfd7841ae55470b89fde04e85d3318617010bbbf37141a7301"
      },
      "downloads": -1,
      "filename": "rvmath-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ea3e4bd30b65a95974d488bf0a69b204",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 14933,
      "upload_time": "2021-05-11T14:03:20",
      "upload_time_iso_8601": "2021-05-11T14:03:20.106578Z",
      "url": "https://files.pythonhosted.org/packages/3a/f5/48da025dca86a8089d85749df0dddc143203f8713d2a02de5d30a8ffcffe/rvmath-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}