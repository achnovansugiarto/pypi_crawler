{
  "info": {
    "author": "Jameson R. Spires",
    "author_email": "jameson.spires@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Other Environment",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "# VFB2UFO3\n## Description\n\nMultiple master-compatible **Unified Font Object** (UFO) version 3 font writer API for Windows FontLab 5.2\n\n**VFB2UFO3** is primarily intended to create scaled UFO instances from a > 1000 UPM multiple master FontLab `.vfb` font with PostScript outlines for use with the AFDKO tools for creating binary fonts while still working with Windows FontLab 5.2. The most significant non-trivial change that will occur in export is the renaming of kerning glyph groups (FontLab *classes*). Providing an `.flc` (FontLab-class) file can speed up conversion significantly when font groups are not identifiable as first/second from their name. Glyph hints/links can be exported using 1 of 3 formats; the UFO3 specification, Adobe AutoHint v1, or Adobe AutoHint v2. The hinting information is the same, however makeOTF does not support the UFO3 specification.\n\n**VFB2UFO3** also quickly creates UFO masters from multiple master `.vfb` fonts. This is the default behavior when the `instance_values` option is not supplied, or building a `.designspace` file for use in building a variable font.\n\n## Installation\n#### PyPi\n\n`pip install vfb2ufo3`\n#### FontLab Installer\n\nDownload the lastest release FontLab installer (`.flw`) file and drag it into the FontLab main window then restart FontLab or reset macro system.\n#### ZIP Archive\n\nDownload and extract the latest release ZIP file and move the extracted files to your FontLab Macros folder. The default directory structure is shown below.\n```\n[user folder]\n  └─ Documents  \n     └─ Fontlab  \n        └─ Studio 5  \n           └─ Macros  \n              └─ System  \n                 └─ Modules  \n                    └─ vfb2ufo3  \n                       ├─ __init__.py  \n                       ├─ core.pyd  \n                       ├─ fea.pyd  \n                       ├─ glif.pyd  \n                       ├─ libgcc_s_dw2-1.dll  \n                       ├─ libgomp-1.dll  \n                       ├─ libstdc++-6.dll  \n                       ├─ libwinpthread-1.dll  \n                       ├─ user.py  \n                       ├─ vfb.pyd  \n                       └─ zlib1.dll  \n```\n\n## Requirements\n\nThis package has no Python dependencies outside of the standard library. It is written in C++ and Cython. The submodules are compiled into `.pyd` extension modules. To recompile the submodules, the PyPi `cython` package and a compiler for Cython to utilize during extension module compilation will be required. The modules are currently compiled using a MSYS2 version of GCC.\n\nExtension modules compiled from C++ require several DLLs from the GCC which are included in the release ZIP archive, FontLab installer, and PyPi package.\n\n**Optional**\n* cython  \n  **pip install cython**  \n  <a>https://github.com/cython/cython</a>  \n\n* AFDKO  \n  **pip install afdko**  \n  <a>https://github.com/adobe-type-tools/afdko</a>  \n\n* psautohint  \n  **pip install psautohint**  \n  <a>https://github.com/adobe-type-tools/psautohint</a>  \n\n* MinGW 32-bit/i686 GCC >= 9.3.0  \n  <a>http://winlibs.com</a>  \n  <a>https://www.msys2.org</a>  \n  <a>http://mingw-w64.org</a>  \n\n* {fmt}  \n  <a>https://github.com/fmtlib/fmt</a>  \n\n\n**Functionality**\n\nUFO output is produced without changes to the source font. If a specific `layer` or `instance_values` are not provided for a multiple master source font, a UFO will be generated for each master in the font.\n\nFonts with a large number of glyphs benefit greatly from supplying additional glyph names to be optimized when removing overlaps (`glyphs_optimize_names`) and/or glyph names and suffixes which can be omitted from the final UFO instance (`glyphs_omit_names`, `glyphs_omit_suffixes`). See **GLYPHS OPTIONS** below.\n\nAll path options must be absolute paths; folder and file paths which are not absolute will be ignored. The default output path is the user's Desktop.\n\nA dictionary of attributes may be suppled via the `instance_attributes` option. These attributes should consist of keys from the UFO specification and they must match the data type in the specification. Not all fontinfo attributes are configurable; please see `CONFIGURABLE_ATTRS` in the `fontinfo.pxi` source file for a list of attributes which will be checked and updated to the UFO(s) during creation.\n\n```\n-------------------------------------------------------------------------------\nEXAMPLE UFO GENERATION SCRIPT FOR SINGLE-AXIS MULTIPLE MASTER .VFB FONT\n-------------------------------------------------------------------------------\n# FLM: write ufo\n# coding: utf-8\nfrom __future__ import absolute_import, unicode_literals\n\nimport os\n\nfrom vfb2ufo3 import write_ufo\n\nuser_profile_folder = os.environ['USERPROFILE']\noutput_path = os.path.join(user_profile_folder, 'Documents', 'test_font')\n\ninstances = [\n  0,  \n  200,  \n  400,  \n  650,  \n  1000,  \n  ]  \nnames = [\n  'Thin',  \n  'Light',  \n  'Regular',  \n  'SemiBold',  \n  'Bold',  \n  ]  \nattributes = [\n  {'openTypeOS2WeightClass': 200},  \n  {'openTypeOS2WeightClass': 300},  \n  {'openTypeOS2WeightClass': 400},  \n  {'openTypeOS2WeightClass': 600},  \n  {'openTypeOS2WeightClass': 700},  \n  ]  \n\nwrite_ufo(\n  output_path=output_path,  \n  instance_values=instances,  \n  instance_names=names,  \n  instance_attributes=attributes,  \n  glyphs_decompose=True,  \n  glyphs_remove_overlaps=True,  \n  )  \n\n-------------------------------------------------------------------------------\n```\n\n**Scale options**\n\nBy default, the target UPM for UFO output is 1000. For a UPM other than 1000, say 2048, it should be set via the `scale_to_upm` option. The value from the `scale_to_upm` option is ignored if it is lower than 1000. Scaling can be turned off by setting `scale_auto` to `False`; this does not reduce conversion times.\n\nAll scaling operations are performed independently from FontLab.\n\n**Instance options**\n\nWhen creating instances from a multiple master source font, lists of values, names (optional), and attributes (optional) should be provided to generate instance UFOs from the master font.\n\nIf the source is a multiple master font and a list of instance values is not provided, a UFO for each master will be created.\n\nFor multiple master fonts, the instance values list should be values in `tuple`- or `list`-form with a value for each axis. For single-axis fonts, if the list values are numerical, the values will be converted to single-element lists:\n\n**2-axis font**\n* `instance_values = [[0, 1000], [200, 1000]]`  \n\n* `instance_values = [(0, 1000), (200, 1000)]`  \n\n\n**1-axis font**\n* `instance_values = [[0], [200]]`  \n\n* `instance_values = [(0,), (200,)]`  \n\n* `instance_values = [0, 200]` becomes `[[0], [200]]`  \n\n\nIf the optional lists of names and/or attributes are provided in addition to a list of values, they must be of the same length as the values list. A `ValueError` will be raised if the lengths do not match, since this will likely produce undesirable results:\n\n***Correct:***\n```\ninstance_values = [(0, 1000), (200, 1000)]\ninstance_names = ['Light Display', 'Regular Display']\n```\n\n***Incorrect (`ValueError`):***\n```\ninstance_values = [(0, 1000), (200, 1000)]\ninstance_names = ['Light Display']\n```\n\n**Glyph options**\n\nGlyph scaling is independent from the `.vfb` instance itself.\n\nGlyph decomposition and overlap removal is optional and occurs after instances are generated. This option is intended for final output when a binary font will be created from the UFO.\n\nBy default, when decomposing and removing overlaps from glyph outlines for export, GLIF files for glyphs containing components will be built using contours from each component's base contours.\n\nWhen decomposing only, the optimization outlined above will be used for all glyphs containing components.\n\nTo disable the optimizations outlined above, set the `glyphs_optimize` option to `False`.\n\nTo specify explicitly which glyphs to decompose and/or remove overlaps, the `glyphs_decompose_names` and `glyphs_remove_overlap_names` options should be supplied. The supplied names must match exactly with the glyph names in the target font. The `glyphs_optimize` option should be disabled if using either of these options.\n\n**Omit glyphs from instance**\n* A list of glyph suffixes and/or glyph names can be supplied that should be omitted from the instance UFO via the `glyphs_omit_suffixes` and `glyphs_omit_names` options, respectively.  \n\n**Optimize glyph name and code point lists**\n* For output intended for makeOTF where construction glyphs are being omitted via `glyphs_omit_list` or `glyphs_omit_suffixes_list`, enabling `glyphs_optimize_makeotf` will decompose and remove overlaps for the omitted glyphs where needed. Overlaps will be removed for all other base components but remain in component-form. This will decrease UFO creation time and allow makeOTF to more efficiently subroutinize the outlines and reduce .otf compilation time.  \n\n* If removing overlaps, the default list of code points for glyphs to be constructed in the above manner is composed of glyphs that normally have no overlapping components. The list is located in the `core.pxi` source file with the character representations for these code points shown below.  \n\n* The code points from the default code point list can be shown by running the `vfb2ufo3.show_default_optimize_code_points()` function. The code points will print to the FontLab output window and can then be copied into a text editor and edited as needed.  \n\n* A user-supplied code point list (`glyphs_optimize_code_points`) can be a list of `'0x00ac'`-format strings, integers in hexadecimal-form (`0x00ac`), or numeric integers (`172`); values which cannot be converted to an integer will raise a `ValueError`. Only the first code point in each glyph's list of code points (FontLab glyph *unicodes* attribute) is checked for code point set membership.  \n\n* A user-supplied glyph name list (`glyphs_optimize_names`) can be supplied to supplement the code point list for glyphs. Any glyphs containing components that do not overlap should be added to this list.  \n\n* Small case variants of the code points in the code point list will be also added to code point list assuming they end with `.sc`, `.smcp`, or `.c2sc` suffixes.  \n\n\n#### `OPTIMIZE_CODE_POINTS`\n```\nLatin\nÀ Á Â Ã Ä Ā Ă Ǣ Ǽ Ȁ Ȃ Ǎ Ȧ\nḆ\nĆ Ĉ Ċ Č\nĎ Ḍ Ḏ Ḓ\nÈ É Ê Ë Ē Ĕ Ė Ė Ȅ Ȇ\nĜ Ğ Ġ Ģ Ḡ Ǧ Ǵ\nĤ Ḥ Ḫ\nÌ Í Ĩ Ī Ĭ İ Î Ï Ȉ Ȋ Ǐ\nĴ\nĶ Ḳ Ḵ\nĹ Ļ Ľ Ŀ Ḷ Ḹ Ḻ Ḽ\nḾ Ṁ Ṃ\nÑ Ń Ņ Ň Ṅ Ṇ Ṉ Ṋ Ǹ\nÒ Ó Ô Õ Ö Ō Ŏ Ő Ȍ Ȏ Ȯ Ǒ\nŖ Ř Ŕ Ṙ Ṛ Ṝ Ṟ Ȑ Ȓ\nŚ Ŝ Ş Ș Š Ṣ\nŢ Ț Ť Ṭ Ṯ Ṱ\nŨ Ū Ŭ Ů Ű Ù Ú Û Ü Ȕ Ȗ Ǔ Ǖ Ǘ Ǚ Ǜ\nṾ\nŴ Ẁ Ẃ Ẅ Ẇ\nẊ Ẍ\nŶ Ÿ Ý Ẏ Ȳ\nŹ Ż Ž Ẑ Ẓ Ẕ\nĲ Ǉ Ǌ ǈ ǋ\nǱ Ǆ ǲ ǅ\nà á â ã ä ā ă ǣ ǽ ȁ ȃ ǎ ȧ\nḇ\nć ĉ ċ č\nď ḍ ḏ ḓ\nè é ê ë ē ĕ ė ě ȅ ȇ\nĝ ğ ġ ģ ḡ ǧ ǵ\nĥ ẖ ḥ ḫ\nì í ĩ ī ĭ î ï ȉ ȋ ǐ\nĵ ǰ\nķ ḳ ḵ\nĺ ļ ľ ŀ ḷ ḹ ḻ ḽ\nḿ ṁ ṃ\nń ņ ň ŉ ñ ṅ ṇ ṉ ṋ ǹ\nò ó ō ŏ ő ô õ ö ȍ ȏ ȯ ǒ\nŗ ř ŕ ṙ ṛ ṝ ṟ ȑ ȓ\nś ŝ ş ș š ṣ\nţ ț ť ṭ ṯ ṱ\nũ ū ŭ ů ű ù ú û ü ȕ ȗ ǔ ǖ ǘ ǚ ǜ\nṿ\nŵ ẁ ẃ ẅ ẇ\nẋ ẍ\ný ÿ ŷ ẏ ȳ\nź ż ž ẑ ẓ ẕ\nĳ ǉ ǌ\nǳ ǆ\n\nCyrillic\nЃ Ќ Ѝ Й Ӣ Ӥ Ў Ӝ Ӂ Ѐ Ё Ӗ Ӟ Ѷ Ә Ӛ Ѕ І Ї Ј Ӑ Ӓ Ӕ Ӧ Ӯ Ӱ Ӳ Ӵ Ӹ Ӏ Ӏ\nѓ ќ ѝ й ӣ ӥ ў ӝ ӂ ѐ ё ӗ ӟ ѷ ә ӛ ѕ і ї ј ӑ ӓ ӕ ӧ ӯ ӱ ӳ ӵ ӹ\n\nGreek Mono- and Polytonic\nἈ Ἁ Ἂ Ἃ Ἄ Ἅ Ἆ Ἇ ᾈ ᾉ ᾊ ᾋ ᾌ ᾍ ᾎ ᾏ Ᾰ Ᾱ Ὰ Ά ᾼ\nἘ Ἑ Ἒ Ἓ Ἔ Ἕ Ὲ Έ\nἨ Ἡ Ἢ Ἣ Ἤ Ἥ Ἦ Ἧ ᾘ ᾙ ᾚ ᾛ ᾜ ᾝ ᾞ ᾟ Ὴ Ή ῌ\nἸ Ἱ Ἲ Ἳ Ἴ Ἵ Ἶ Ἷ Ῐ Ῑ Ὶ Ί\nὈ Ὁ Ὂ Ὃ Ὄ Ὅ Ὸ Ό\nῬ\nὙ Ὓ Ὕ Ὗ Ῠ Ῡ Ὺ Ύ\nὨ Ὡ Ὢ Ὣ Ὤ Ὥ Ὦ Ὧ ᾨ ᾩ ᾪ ᾫ ᾬ ᾭ ᾮ ᾯ Ὼ Ώ ῼ\nἀ ἁ ἂ ἃ ἄ ἅ ἆ ἇ ᾀ ᾁ ᾂ ᾃ ᾄ ᾅ ᾆ ᾇ ᾰ ᾱ ᾲ ᾳ ᾴ ᾶ ᾷ ὰ ά\nἐ ἑ ἒ ἓ ἔ ἕ ὲ έ\nἠ ἡ ἢ ἣ ἤ ἥ ἦ ἧ ᾐ ᾑ ᾒ ᾓ ᾔ ᾕ ᾖ ᾗ ῂ ῃ ῄ ῆ ῇ ὴ ή\nἰ ἱ ἲ ἳ ἴ ἵ ἶ ἷ ῐ ῑ ῒ ΐ ῖ ῗ ὶ ί\nὀ ὁ ὂ ὃ ὄ ὅ ὸ ό\nῤ ῥ\nὐ ὑ ὒ ὓ ὔ ὕ ὖ ὗ ῠ ῡ ῢ ΰ ὺ ύ ῦ ῧ\nὠ ὡ ὢ ὣ ὤ ὥ ὦ ὧ ᾠ ᾡ ᾢ ᾣ ᾤ ᾥ ᾦ ᾧ ῲ ῳ ῴ ῶ ῷ ὼ ώ\n```\n\n#### Features options\n\nFont groups can be added to the `features.fea` file on export by setting `features_import_groups` to `True` (if `afdko_parts` is enabled, this will also be enabled). The font's features are neither formatted nor checked for correctness. Users are responsible for moving referenced feature files from `include()` statements to the chosen output directory. Also see **KERN FEATURE OPTIONS** and **MARK FEATURE OPTIONS** below for `kern` and `mark` feature options.\n\n#### Hint options\n\nIf enabled, the `glyph_hints` option converts hints on export (glyph links are converted to hints). By default, hints will be created following the UFO3 [public.postscript.hints](https://unifiedfontobject.org/versions/ufo3/glyphs/glif/#publicpostscripthints) specification.  The `glyphs_hints_afdko_v1` and `glyphs_hints_afdko_v2` options enables hints compatible with MakeOTF.\n\n`glyphs_hints_vertical_only` ignores horizontal hints/links\n\n#### Kern feature options\n\nKern values will be scaled in parity with the output UFO. This scaling is independent from the created `.vfb` instance. A minimum value can be set using `kern_min_value`. This value should be a positive integer and when set, all kern values (negative and positive) not above the threshold will be omitted from the `kern` feature.\n\nBy default, the `kern` feature from the master font is not included in the `features.fea` file. To include the `kern` feature from the master font, `kern_feature_passthrough` should be set to `True`.\n\nAn external feature file with a `kern` feature can be imported to the font features using the `kern_feature_file_path` option, which expects a path to a text file with the `.fea` extension.\n\nBy default, a new `kern` feature is generated for each instance. Setting `kern_feature_generate` to `False` will turn this off. The `kern` feature generation will add subtables and a lookup as necessary. This is not particularly elegant, and so far, no checks are made to guarantee a working `kern` feature. Any remaining subtable overflows may be due to glyph(s) being in more than one kern group of the same side; however overflows can also be caused by issues from one or more `GPOS` features located earlier in the feature list.\n\n#### Mark feature options\n\nA `mark` feature can be generated on export by setting `mark_feature_generate` to `True`. A list of anchor names to omit (`mark_anchors_omit`) or a list of anchor names to include (`mark_anchors_include`) can be supplied to fine-tune the `mark` feature output. For both anchor name lists, the corresponding `_<anchor name>` anchor will be added to their respective list.\n\n#### Group options\n\nProviding a FontLab-class file (`.flc`) or `groups.plist` speeds up UFO creation time significantly when the group names are not named using first and second group identifiers (see `groups_flc_path` and `groups_plist_path` options). Group names in the `.flc` file do not have match any specific formatting (e.g. `MMK_R_<key glyph>`, `public.kern2.<key glyph>`).\n\nWhen not using either a `.flc` or `groups.plist` file, group names will be checked for UFO3-style group identifiers (`public.kern1.<key glyph>`, `public.kern2.<key glyph>`), MetricsMachine-style identifiers (`MMK_L_<key glyph>`, `MMK_R_<key glyph>`), and the simpler `_L` and `_R` identifier suffixes. Groups which either have no kerning or are not identifiable using their name will be identified as first/second using FontLab's built-in `GetClassLeft`/`GetClassRight` methods.\n\nIf the `export_flc` option is set to `True`, a FontLab-class file (`.flc`) will be generated with group names matching those of the generated UFOs. This file will be located in the same directory as the generated UFO(s).\n\nThe `kern_ignore_no_kerning` option can be set to `True` to ignore groups which have no kerning pairs. This may be desirable if making a binary font from the UFO. This option has no effect when using an imported `.flc` or `groups.plist` file.\n\nFontLab kern classes without a key glyph in a provided `.flc` file or in the master font's kern classes will have the first glyph in the FontLab class marked as the key glyph and it will be noted in the output console. If there is more than one glyph marked as a key glyph, the first marked glyph is considered the key glyph. These key glyph operations *may* affect the kerning. An imported `groups.plist` infers that the glyph in the group name is the key glyph.\n\n**Kern group naming recommendations**\n```\nTypical FontLab-style kerning groups:\n_A: A' Agrave Aacute Acircumflex Atilde Adieresis Aring...\n_A_r: A' AE Agrave Aacute Acircumflex Atilde Adieresis Aring...\n\nRecommended naming for FontLab-style kerning groups:\n_public.kern1.A: A' Agrave Aacute Acircumflex Atilde Adieresis Aring...\n_public.kern2.A: A' AE Agrave Aacute Acircumflex Atilde Adieresis Aring...\n\nFinal output (UFO groups.plist):\n<key>public.kern1.A</key>\n<array>\n  <string>A</string>  \n  <string>Agrave</string>  \n  <string>Aacute</string>  \n  <string>Acircumflex</string>  \n  <string>Atilde</string>  \n  <string>Adieresis</string>  \n  <string>Aring</string>  \n  ...  \n</array>\n\n<key>public.kern2.A</key>\n<array>\n  <string>A</string>  \n  <string>AE</string>  \n  <string>Agrave</string>  \n  <string>Aacute</string>  \n  <string>Acircumflex</string>  \n  <string>Atilde</string>  \n  <string>Adieresis</string>  \n  <string>Aring</string>  \n  ...  \n</array>\n```\n\n#### AFDKO options\n\nThe `OS/2`, `hhea`, `head`, and `name` tables will be added to the features file. The `name` table entry strings will be formatted according to [OpenType Feature File Specification § 9.e](https://adobe-type-tools.github.io/afdko/OpenTypeFeatureFileSpecification.html#9.e). Any strings unable to be formatted fully for each platform's specific encoding restriction (Windows -- [`UTF-8`](https://en.wikipedia.org/wiki/UTF-8), Macintosh -- [`Mac OS Roman`](https://en.wikipedia.org/wiki/Mac_OS_Roman)) will be formatted to their nearest ASCII equivalent rather than omitting any un-encodable characters. The standard library [`unicodedata`](https://docs.python.org/2.7/library/unicodedata.html) module is used for any entries meeting this criteria.\n\n*[GlyphOrderAndAliasDB](https://adobe-type-tools.github.io/afdko/MakeOTFUserGuide.html)* (GOADB) and *[FontMenuNameDB](https://adobe-type-tools.github.io/afdko/MakeOTFUserGuide.html)* files can be generated for use with MakeOTF. The GOADB can be provided (`afdko_makeotf_GOADB_path`), derived from the `.vfb`'s original encoding, or the order of the source font.\n\nOptionally, the first 256 glyphs can be filled from the [`Windows-1252`](https://en.wikipedia.org/wiki/Windows-1252) or [`Mac OS Roman`](https://en.wikipedia.org/wiki/Mac_OS_Roman) code pages (`afdko_makeotf_GOADB_win1252`, `afdko_makeotf_GOADB_macos_roman`). The first character of a generated GOADB file will always start with the `.notdef` glyph. If a GOADB file is provided, it is not checked for correctness. Commands to run MakeOTF for each generated instance separately or all instances as a batch using the options `afdko_makeotf_cmd` and `afdko_makeotf_batch_cmd`, respectively.\n\nThere are several explicit keyword options to enable specific MakeOTF switches. For those not available via a keyword option, they should be defined as a list of strings and passed to the `afdko_makeotf_args` option.\n\n**Note:** `afdko` for Python 2.7 is no longer developed.\n\n#### psautohint options\n\n[`psautohint`](https://github.com/adobe-type-tools/psautohint) can be utilized for generating glyph hints after UFO generation. Commands to run `psautohint` for each generated instance separately or all instances as a batch using the options `psautohint_cmd` and `psautohint_batch_cmd`, respectively. The default options are `-d` (write decimal (float) hint coordinates) and `-w` (write hints directly to the .glif lib for each glyph).\n\n**Note:** `psautohint` for Python 2.7 is no longer developed.\n\n#### UFOZ options\n\nUFO instances can be written as a `.ufoz` archive. If you are planning on any file transfer operations after creation, transferring a single `.ufoz` file is much quicker than the large number of small text files in the generated UFO instance(s), especially when transferring through USB. By default, archives are written in compressed mode. Compression can be turned off by setting `ufoz_compress` to `False`.\n\n#### `.designspace` font options\n\nA `.designspace` document can be created in place of individual UFO instances. A UFO for each master will be generated and the instances will be described in the `.designspace` document. A default instance can be described with the `designspace_default` option. This value must be a list or tuple with a value for each axis in the font. If `glyphs_omit_list` or `glyphs_omit_suffixes_list` lists are provided, the glyphs will remain in the source UFOs and a glyph mute rule for each glyph to be omitted will be added for each instance.\n\nA list of names can be provided for each layer of the multiple-master source font. The name list must be of the same length as the number of layers in the source font, and its order is assumed to match the order of the source font layers. If a names list is not supplied, the names of the exported masters will be constructed using the abbreviated axis names as set in the font (accessible via the master font's `axis` attribute).\n\n#### Benchmarks\n\nFor reference, testing was performed on a Windows 10 machine with an Intel Xeon E5 1650v3 @ 3.5 GHz CPU and a solid-state hard drive; CPUs with fewer cores and/or a hard disk drive increases file write times considerably.\n\nTimes are per-instance (±.5 sec) and do not include time to load and parse user options, then copy the information from the original font to prepare for conversion to the UFO format. This prep time increases when not providing a FontLab-class (`.flc`) or `groups.plist` file.\n\nThe `ufoz` option reduces build time considerably.\n\n**Test (~3200 glyphs @ 10,000 UPM -> 1,000 UPM), <10 sec**\n```\nflc_path = <path to .flc file>\n\nvfb2ufo3.write_ufo(\n  glyphs_decompose=True,  \n  glyphs_remove_overlaps=True,  \n  groups_flc_path=flc_path,  \n  )  \n```\n\n**Test (~2900 glyphs @ 10,000 UPM -> 1,000 UPM), ≈9 sec**\n```\nflc_path = <path to .flc file>\nglyphs_omit_list = [\n  <glyph names to be omitted go here>  \n  ]  \nglyphs_omit_suffixes_list = [\n  <glyph name suffixes to be omitted go here>  \n  ]  \n\nvfb2ufo3.write_ufo(\n  glyphs_decompose=True,  \n  glyphs_remove_overlaps=True,  \n  glyphs_omit_list=glyphs_omit_list,  \n  glyphs_omit_suffixes_list=glyphs_omit_suffixes_list,  \n  groups_flc_path=flc_path,  \n  )  \n```\n\n**Test (~2900 glyphs @ 10,000 UPM -> 1,000 UPM), ≈7 sec**\n```\nflc_path = <path to .flc file>\nglyphs_optimize_names = [\n  <glyph names with no overlapping components go here>  \n  ]  \nglyphs_omit_list = [\n  <glyph names to be omitted go here>  \n  ]  \nglyphs_omit_suffixes_list = [\n  <glyph name suffixes to be omitted go here>  \n  ]  \n\nvfb2ufo3.write_ufo(\n  glyphs_decompose=True,  \n  glyphs_remove_overlaps=True,  \n  glyphs_optimize_names=glyphs_optimize_names,  \n  glyphs_omit_list=glyphs_omit_list,  \n  glyphs_omit_suffixes_list=glyphs_omit_suffixes_list,  \n  groups_flc_path=flc_path,  \n  )  \n```\n\n**Test (~2900 glyphs @ 10,000 UPM -> 1,000 UPM), ≈4 sec**\n```\nflc_path = <path to .flc file>\nvfb2ufo3.write_ufo(\n  glyphs_decompose=True,  \n  groups_flc_path=flc_path,  \n  )  \n```\n\n**Test (~2900 glyphs @ 10,000 UPM -> 1,000 UPM), ≈3-4 sec**\n```\nflc_path = <path to .flc file>\nglyphs_omit_list = [\n  <glyph names to be omitted go here>  \n  ]  \nglyphs_omit_suffixes_list = [\n  <glyph name suffixes to be omitted go here>  \n  ]  \n\nvfb2ufo3.write_ufo(\n  glyphs_decompose=True,  \n  glyphs_omit_list=glyphs_omit_list,  \n  glyphs_omit_suffixes_list=glyphs_omit_suffixes_list,  \n  groups_flc_path=flc_path,  \n  )  \n```\n\n**Test (~3200 glyphs @ 10,000 UPM -> 1,000 UPM), ≈3 sec**\n```\nflc_path = <path to .flc file>\n\nvfb2ufo3.write_ufo(\n  groups_flc_path=flc_path,  \n  )  \n```\n\n**Test (~3200 glyphs @ 10,000 UPM -> 1,000 UPM), <1.5 sec**\n```\nflc_path = <path to .flc file>\n\nvfb2ufo3.write_ufo(\n  groups_flc_path=flc_path,  \n  ufoz=True,  \n  )  \n```\n\n**Test (~3200 glyphs @ 10,000 UPM -> 1,000 UPM), <1.5 sec**\n```\nflc_path = <path to .flc file>\n\nvfb2ufo3.write_ufo(\n  groups_flc_path=flc_path,  \n  ufoz=True,  \n  ufoz_compress=False,  \n  )  \n```\n\n#### Notes\n\nGenerally, no assumptions are made about the correctness of the input. When `adfko_makeotf_release` mode is set, glyph name errors will raise an exception and UFO generation will not continue. Glyph name checks are made prior to building instances. Other errors in the original font will likely be passed through to the UFO.\n\n#### Author\n\nJameson R Spires\n\n#### Licenses\n\nSource files are covered under the [MIT License](https://opensource.org/licenses/MIT). SHA512 hash algorithm is a modification of an implementation from Olivier Gay's [SHA2 library](https://github.com/ogay/sha2), which is covered under a [BSD License](https://opensource.org/licenses/BSD-3-Clause).\n\n#### Version history\n* version 0.8.5  \n  added `scale_factor` and `integer_coordinates` options  \n  small changes and corrections  \n  module consolidation  \n\n* version 0.8.3  \n  reorganization  \n\n* version 0.8.2  \n  small changes and corrections  \n\n* version 0.8.1  \n  added `glyphs_optimize_makeotf` option for use with makeOTF  \n  added `glyphs_decompose_names` and `glyphs_remove_overlap_names` options  \n  correction to SHA512 hint ID hashing  \n  correction to font groups parsing when not using `.flc` or `groups.plist` group files  \n  correction to features.fea copy  \n  UFO glyph order derivation from encoding now checks for and includes glyphs missing from FontLab `.enc` file  \n  removed option to save VFB instances/copies  \n\n* version 0.8.0  \n  a copy of the original font is no longer created, decreasing master processing overhead by a considerable amount  \n  re-inclusion of glyph hints/links  \n  `.glif` file creation performance improvements  \n  corrections to `mark` feature generation  \n\n* version 0.7.5  \n  small changes/corrections  \n\n* version 0.7.4  \n  corrections to makeOTF batch command creation  \n  corrections to `kern` feature generation  \n\n* version 0.7.3  \n  corrections to `mark` feature generation  \n  reverted to use of `\"` from `'` in XML files for compatibility with makeOTF  \n\n* version 0.7.2  \n  reorganization of `.pxi` includes  \n  removal of `.pxd` Cython declaration files  \n  incorporated automatic string encoding from Python to C/C++  \n  more explicit Python string encoding/decoding  \n\n* version 0.7.1  \n  changes to `.ufoz` C++ code  \n\n* version 0.7.0  \n  additional C++ conversion for `.ufoz` file creation utilizing [zlib](https://zlib.net) compression  \n  small changes and corrections  \n\n* version 0.6.6  \n  change to `setup.py` for PyPi package  \n  created FontLab installer  \n\n* version 0.6.5  \n  change to `glif.hpp`  \n\n* version 0.6.4  \n  remove schedule from OpenMP pragma  \n  correction for quadratic curves in `glif.pyx`  \n  correction for `glif` file name creation  \n\n* version 0.6.3  \n  added 32-bit GCC DLLs  \n  C++ string formatting improved utilizing [{fmt}](https://github.com/fmtlib/fmt) formatting library  \n  `mark` feature generation corrections  \n  small changes and corrections  \n\n* version 0.6.2  \n  replaced `push_back` with `emplace_back` where possible in `glif.hpp`  \n  corrections to shifted and scaled contour-from-component builds  \n\n* version 0.6.1  \n  small corrections  \n\n* version 0.6.0  \n  small fix for single-master font builds  \n  small changes to several source files  \n  `glif.pyx` has been rewritten in C++ as much as possible  \n\n* version 0.5.2  \n  small change to `groups.pyx`  \n  re-added link to known working GCC compiler  \n\n* version 0.5.1  \n  majority of code base rewritten  \n  support for UFO3 specification only  \n  considerable improvement in UFO creation times  \n  corrected UFOZ build structure  \n  removed hint operations, added psautohint batch command options  \n  improved option handling  \n  improved group conversion  \n  native `kern` and `mark` feature generation  \n\n* version 0.3.1  \n  updated sample script  \n\n* version 0.3.0  \n  additional documentation  \n  slight improvement in glif and .glif file creation times  \n  added sample benchmark times  \n\n* version 0.2.0  \n  minor formatting  \n  change to plistlib for groups.plist import  \n  removed commented lines in `__init__.py`  \n  added `futures` package as a required package  \n  added module to PyPi  \n\n* version 0.1.0  \n  initial release",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/spiratype/vfb_ufo3",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vfb2ufo3",
    "package_url": "https://pypi.org/project/vfb2ufo3/",
    "platform": "",
    "project_url": "https://pypi.org/project/vfb2ufo3/",
    "project_urls": {
      "Homepage": "https://github.com/spiratype/vfb_ufo3"
    },
    "release_url": "https://pypi.org/project/vfb2ufo3/0.8.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "UFO converter for Windows FontLab 5.2",
    "version": "0.8.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9439095,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e76d2ecb897769d8c0775d664c30af174d62803a0a32fbb13f52c0427322511",
          "md5": "b144050704b755e3e97c02b95cce9213",
          "sha256": "31dbab5d33cebb965ed29e90ed29885ffae146029640c713144e103e6f4f0b09"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b144050704b755e3e97c02b95cce9213",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 658244,
        "upload_time": "2019-05-21T08:04:08",
        "upload_time_iso_8601": "2019-05-21T08:04:08.535903Z",
        "url": "https://files.pythonhosted.org/packages/6e/76/d2ecb897769d8c0775d664c30af174d62803a0a32fbb13f52c0427322511/vfb2ufo3-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bccb5d72f7317a7437eaff6714bcfdbe3c659de8ad089028dd41cd1284c15e9a",
          "md5": "06914b8bc2d6d5eafcf8755fd486cb9c",
          "sha256": "9907975d5c489dde84d8cef04e26024e2e0b2a0efeded3a03b54ad586ccaec65"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "06914b8bc2d6d5eafcf8755fd486cb9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 708537,
        "upload_time": "2019-05-27T15:40:40",
        "upload_time_iso_8601": "2019-05-27T15:40:40.943719Z",
        "url": "https://files.pythonhosted.org/packages/bc/cb/5d72f7317a7437eaff6714bcfdbe3c659de8ad089028dd41cd1284c15e9a/vfb2ufo3-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd057153de71e3b0a77ccf2e79d99309c284e658462516df022152b19425e112",
          "md5": "a58c2e565573b989de376f0a3bf358ca",
          "sha256": "6e50f59bcc7012637d9b38292920fd68246a59a8fd22867a84a1da5e0c1343e4"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a58c2e565573b989de376f0a3bf358ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 708535,
        "upload_time": "2019-05-27T15:53:51",
        "upload_time_iso_8601": "2019-05-27T15:53:51.331254Z",
        "url": "https://files.pythonhosted.org/packages/bd/05/7153de71e3b0a77ccf2e79d99309c284e658462516df022152b19425e112/vfb2ufo3-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "374cea1e5e700e67bd9a9da32e0cbbfef24e145faf93d04787679b71685ecb7a",
          "md5": "e5fcca5ae2b11364d9836275166a9d18",
          "sha256": "3e4e64f3e19c5f094decd8237c2c4f5087c369b6aff7b01e10c6ca652c469836"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e5fcca5ae2b11364d9836275166a9d18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1209658,
        "upload_time": "2019-08-10T07:17:23",
        "upload_time_iso_8601": "2019-08-10T07:17:23.351554Z",
        "url": "https://files.pythonhosted.org/packages/37/4c/ea1e5e700e67bd9a9da32e0cbbfef24e145faf93d04787679b71685ecb7a/vfb2ufo3-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "433128d9eb0dc769de65a474b29ca469f28fd66fa14f6b5de05100719b8b8dd0",
          "md5": "12d44daab8cdcd1f9ba457c1028213c7",
          "sha256": "602867678efb74a03645d87e3d909867fd9dd19bc4ee2846c4a9c971810d01c2"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "12d44daab8cdcd1f9ba457c1028213c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1519581,
        "upload_time": "2020-02-29T05:02:12",
        "upload_time_iso_8601": "2020-02-29T05:02:12.955595Z",
        "url": "https://files.pythonhosted.org/packages/43/31/28d9eb0dc769de65a474b29ca469f28fd66fa14f6b5de05100719b8b8dd0/vfb2ufo3-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "238cd764c3115bc8ef07ee43b8371d784857a0e280d4181840bdfa186770ea07",
          "md5": "d41f1d89cf310922935860b7752fbd37",
          "sha256": "c7d1d811a3f16bdcc9315ec0ab443dfa7ab5363969ba7ff360c7de3f6108b077"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d41f1d89cf310922935860b7752fbd37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1519461,
        "upload_time": "2020-03-02T06:35:19",
        "upload_time_iso_8601": "2020-03-02T06:35:19.254785Z",
        "url": "https://files.pythonhosted.org/packages/23/8c/d764c3115bc8ef07ee43b8371d784857a0e280d4181840bdfa186770ea07/vfb2ufo3-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18bd56c53bdbec0c1c8465b52bf02bdd223d34cece3ceb82e599a4f043d8f0c9",
          "md5": "e45abeb170c0896e9d98e691bba66eef",
          "sha256": "25e5fd54b29b3a35a0a62bff817d3a0cf00c473fdb039fd36e2b423c7fdba071"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e45abeb170c0896e9d98e691bba66eef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1540805,
        "upload_time": "2020-03-06T03:11:39",
        "upload_time_iso_8601": "2020-03-06T03:11:39.385339Z",
        "url": "https://files.pythonhosted.org/packages/18/bd/56c53bdbec0c1c8465b52bf02bdd223d34cece3ceb82e599a4f043d8f0c9/vfb2ufo3-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97ed7a466ec9eb74327977572b0c7b7764725d90001f1f2006d573126e8c209b",
          "md5": "27fdad9ff88a6c5d2de88da7db199d95",
          "sha256": "bc6687bca76b62522efcde98370e03b4fd2dd1016e255aadf991c2e3b7e5bf9f"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "27fdad9ff88a6c5d2de88da7db199d95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2446313,
        "upload_time": "2020-07-10T05:32:08",
        "upload_time_iso_8601": "2020-07-10T05:32:08.681175Z",
        "url": "https://files.pythonhosted.org/packages/97/ed/7a466ec9eb74327977572b0c7b7764725d90001f1f2006d573126e8c209b/vfb2ufo3-0.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d32c91537b40f5a3f74d926a4ddded6d3f0f63794067a45eded97c07b31bcae6",
          "md5": "5e1f3ede4cb41a2afc788312c584a32d",
          "sha256": "d893b09d306b772090e7ed3ac6e189a99f9d338404d3ad1a26d2c91518cb97d6"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.6.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5e1f3ede4cb41a2afc788312c584a32d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2404366,
        "upload_time": "2020-07-14T02:25:56",
        "upload_time_iso_8601": "2020-07-14T02:25:56.120744Z",
        "url": "https://files.pythonhosted.org/packages/d3/2c/91537b40f5a3f74d926a4ddded6d3f0f63794067a45eded97c07b31bcae6/vfb2ufo3-0.6.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e743465c4140e534d0f37029756b579c59876e3a5057491de0ecb835a3f0d31e",
          "md5": "9283d8fecc8483cb6fc905c90f189ae5",
          "sha256": "9b8e58ad6e95b14d0f35c6a924534fd63bd76cb438536ff11faf8103c6a3d943"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.6.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9283d8fecc8483cb6fc905c90f189ae5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2404670,
        "upload_time": "2020-07-14T20:48:47",
        "upload_time_iso_8601": "2020-07-14T20:48:47.720834Z",
        "url": "https://files.pythonhosted.org/packages/e7/43/465c4140e534d0f37029756b579c59876e3a5057491de0ecb835a3f0d31e/vfb2ufo3-0.6.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf9ef64fc2e106b0af343edea92e0e733a4bee0ccc879049f91a5a8a6fb08f0e",
          "md5": "606b95363a31abdb7dfd3515b3325c44",
          "sha256": "d771bbaf9cafffa4f5526cefdbd0f9a7190c80dff382c27e4f2ef4f8ff4f1c85"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.6.6.tar.gz",
        "has_sig": false,
        "md5_digest": "606b95363a31abdb7dfd3515b3325c44",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2404609,
        "upload_time": "2020-07-14T21:11:48",
        "upload_time_iso_8601": "2020-07-14T21:11:48.631687Z",
        "url": "https://files.pythonhosted.org/packages/bf/9e/f64fc2e106b0af343edea92e0e733a4bee0ccc879049f91a5a8a6fb08f0e/vfb2ufo3-0.6.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69efc79300056ed3d6dcb081e065b8e2c7c43dd47e33baaef45cde7f70a278c3",
          "md5": "d2c9e696e47103c225e5f1e129dbeb13",
          "sha256": "3e5c96a49ec7d8e4869061761bbce5288261c9e88065f80a3fff644cc29bf5c0"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d2c9e696e47103c225e5f1e129dbeb13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2075450,
        "upload_time": "2020-07-28T05:42:05",
        "upload_time_iso_8601": "2020-07-28T05:42:05.330781Z",
        "url": "https://files.pythonhosted.org/packages/69/ef/c79300056ed3d6dcb081e065b8e2c7c43dd47e33baaef45cde7f70a278c3/vfb2ufo3-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fafa1ab5b39f8655e2bb74394064fd28253f6c3d2a07e3ae66ee7358748f4cc",
          "md5": "8ae896482ec4e0ab93f241939988d7a6",
          "sha256": "2d3cd39d38e475ce0db067328778a3b2b4acff86adb328d7dcef12ed7397fa8c"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8ae896482ec4e0ab93f241939988d7a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2076118,
        "upload_time": "2020-07-29T03:56:03",
        "upload_time_iso_8601": "2020-07-29T03:56:03.575910Z",
        "url": "https://files.pythonhosted.org/packages/1f/af/a1ab5b39f8655e2bb74394064fd28253f6c3d2a07e3ae66ee7358748f4cc/vfb2ufo3-0.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "293449b6d539feba7f9cb293465a8118aa93a45d503ea12a9cc6da189dce1d65",
          "md5": "20f3d61635b0369c10ef1943fc1e7fb5",
          "sha256": "643061f86f1eadea89e6c6dee02e81146fbc4f0816ffa496ce81130082ee10cb"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "20f3d61635b0369c10ef1943fc1e7fb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2160825,
        "upload_time": "2020-08-04T19:06:26",
        "upload_time_iso_8601": "2020-08-04T19:06:26.686655Z",
        "url": "https://files.pythonhosted.org/packages/29/34/49b6d539feba7f9cb293465a8118aa93a45d503ea12a9cc6da189dce1d65/vfb2ufo3-0.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b316ba7c705fb5e5facf2e67e01d6df5755dcc7b660714682ac9042343988fe",
          "md5": "efcf52369f983c97861d75d1d93c5a7a",
          "sha256": "bf828fb74d5472c1d3159ba4cf8af2d028550dbd3a230a3d3b606316a1a32a4f"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.7.3.tar.gz",
        "has_sig": false,
        "md5_digest": "efcf52369f983c97861d75d1d93c5a7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2159311,
        "upload_time": "2020-08-06T03:36:27",
        "upload_time_iso_8601": "2020-08-06T03:36:27.574684Z",
        "url": "https://files.pythonhosted.org/packages/2b/31/6ba7c705fb5e5facf2e67e01d6df5755dcc7b660714682ac9042343988fe/vfb2ufo3-0.7.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.3b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddd32f8e17a25049ddbee00690bff873534a98e8ce8771c190e30a89ecf54206",
          "md5": "e22bc5c09067f5260263eaceb6f4629c",
          "sha256": "2cd14b71bbdf15364734f61014eb7d6bef8016ac692c7bd9e72294b485843a27"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.7.3b0.tar.gz",
        "has_sig": false,
        "md5_digest": "e22bc5c09067f5260263eaceb6f4629c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2160999,
        "upload_time": "2020-08-06T04:02:28",
        "upload_time_iso_8601": "2020-08-06T04:02:28.857596Z",
        "url": "https://files.pythonhosted.org/packages/dd/d3/2f8e17a25049ddbee00690bff873534a98e8ce8771c190e30a89ecf54206/vfb2ufo3-0.7.3b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffdbe4ce9cc740a7f65398a52207a61f717e3e06af5c728e5da999674427b6ec",
          "md5": "f934e783b2967cdac1d2f2a113e39101",
          "sha256": "81c3483ca2aa67ac2bf2232f27425b1df4389835702cf68d54c0c872af5b3ac8"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.7.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f934e783b2967cdac1d2f2a113e39101",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2166359,
        "upload_time": "2020-08-11T22:50:51",
        "upload_time_iso_8601": "2020-08-11T22:50:51.680750Z",
        "url": "https://files.pythonhosted.org/packages/ff/db/e4ce9cc740a7f65398a52207a61f717e3e06af5c728e5da999674427b6ec/vfb2ufo3-0.7.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f54ce80964dcb4c17465d5c005fe4d8856d5eb02be3985d0eabae420876fa85",
          "md5": "e340abdfbaeaecdcba5b3a7e940936bd",
          "sha256": "449fe25909710f905b893e7a8131806df7ed039f572d61c3dc3757057f49e471"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.7.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e340abdfbaeaecdcba5b3a7e940936bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2166786,
        "upload_time": "2020-09-18T01:40:08",
        "upload_time_iso_8601": "2020-09-18T01:40:08.216506Z",
        "url": "https://files.pythonhosted.org/packages/9f/54/ce80964dcb4c17465d5c005fe4d8856d5eb02be3985d0eabae420876fa85/vfb2ufo3-0.7.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2cbf9beba57d3d8ddca4bb85fb66dfe7232d7958ce66b0a9a80fdb2341c8dc1",
          "md5": "b04d2a1ae5846a4e55d062f098ae9fcd",
          "sha256": "739dbc149eef762b6c356d662c0e16fbf6df3b9ec2e4ce71cc647a17604a8784"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b04d2a1ae5846a4e55d062f098ae9fcd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2148642,
        "upload_time": "2020-10-16T05:12:08",
        "upload_time_iso_8601": "2020-10-16T05:12:08.796157Z",
        "url": "https://files.pythonhosted.org/packages/c2/cb/f9beba57d3d8ddca4bb85fb66dfe7232d7958ce66b0a9a80fdb2341c8dc1/vfb2ufo3-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ce57ee36f588febb0e66c9a1b6508e65261cc4e009eefb52e6680126d9f4a33",
          "md5": "2ab6b2cfdc189d6d3cc950c92dfc8064",
          "sha256": "96c4d6da9f283e4edefdd155ea9784249886616a2f9b7102cafb8e1e7d1e6b70"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2ab6b2cfdc189d6d3cc950c92dfc8064",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2144271,
        "upload_time": "2020-10-28T22:14:08",
        "upload_time_iso_8601": "2020-10-28T22:14:08.045107Z",
        "url": "https://files.pythonhosted.org/packages/2c/e5/7ee36f588febb0e66c9a1b6508e65261cc4e009eefb52e6680126d9f4a33/vfb2ufo3-0.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73e0f71603cedfad0f24c22ff3bca254e32c6bd6e2c14d2a973e94870a654a02",
          "md5": "a9d2e1588e9d84498442975fce599a0e",
          "sha256": "0b4900a3ab4a90f391d13ea662f0ca6fafc280985da11e2466edd7ae83e2d1bd"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a9d2e1588e9d84498442975fce599a0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2164157,
        "upload_time": "2020-10-29T19:53:10",
        "upload_time_iso_8601": "2020-10-29T19:53:10.343923Z",
        "url": "https://files.pythonhosted.org/packages/73/e0/f71603cedfad0f24c22ff3bca254e32c6bd6e2c14d2a973e94870a654a02/vfb2ufo3-0.8.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6333e556f9d8104669ed30782693d0e7fc5565802e598a0b272d4e6275ca9e9a",
          "md5": "92fb66c7996bc5d92b9181f8fbe8e3da",
          "sha256": "b1c8ad445ce51019d7dbabc357a4750947e0813f77523603e3447d40872985b2"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.8.3.tar.gz",
        "has_sig": false,
        "md5_digest": "92fb66c7996bc5d92b9181f8fbe8e3da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2136297,
        "upload_time": "2020-11-02T06:12:53",
        "upload_time_iso_8601": "2020-11-02T06:12:53.822326Z",
        "url": "https://files.pythonhosted.org/packages/63/33/e556f9d8104669ed30782693d0e7fc5565802e598a0b272d4e6275ca9e9a/vfb2ufo3-0.8.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb96c6558ec510e6726f19d34dda1974f2a9489aa6c6015f7f710bb6ebb9b7b5",
          "md5": "df34aca634edad9f3bec471675196333",
          "sha256": "205d5143800257e76566518767cffaf2424d1a90d8f677e507fb08e23e072759"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.8.4.tar.gz",
        "has_sig": false,
        "md5_digest": "df34aca634edad9f3bec471675196333",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 925319,
        "upload_time": "2021-02-16T21:56:28",
        "upload_time_iso_8601": "2021-02-16T21:56:28.648804Z",
        "url": "https://files.pythonhosted.org/packages/eb/96/c6558ec510e6726f19d34dda1974f2a9489aa6c6015f7f710bb6ebb9b7b5/vfb2ufo3-0.8.4.tar.gz",
        "yanked": true,
        "yanked_reason": "old readme"
      }
    ],
    "0.8.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cca8a4ae243899e1b5c9563aaf8753d5b33fd08d13d2290409c446ebad1418c",
          "md5": "a060a618a1db19da5c29d4678fb5c285",
          "sha256": "c07048421678d1e1e9c07c3fe1ebcb21ecc03ea14f38ec6052292a607f847b4c"
        },
        "downloads": -1,
        "filename": "vfb2ufo3-0.8.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a060a618a1db19da5c29d4678fb5c285",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 925483,
        "upload_time": "2021-02-16T22:47:17",
        "upload_time_iso_8601": "2021-02-16T22:47:17.365560Z",
        "url": "https://files.pythonhosted.org/packages/3c/ca/8a4ae243899e1b5c9563aaf8753d5b33fd08d13d2290409c446ebad1418c/vfb2ufo3-0.8.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3cca8a4ae243899e1b5c9563aaf8753d5b33fd08d13d2290409c446ebad1418c",
        "md5": "a060a618a1db19da5c29d4678fb5c285",
        "sha256": "c07048421678d1e1e9c07c3fe1ebcb21ecc03ea14f38ec6052292a607f847b4c"
      },
      "downloads": -1,
      "filename": "vfb2ufo3-0.8.5.tar.gz",
      "has_sig": false,
      "md5_digest": "a060a618a1db19da5c29d4678fb5c285",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 925483,
      "upload_time": "2021-02-16T22:47:17",
      "upload_time_iso_8601": "2021-02-16T22:47:17.365560Z",
      "url": "https://files.pythonhosted.org/packages/3c/ca/8a4ae243899e1b5c9563aaf8753d5b33fd08d13d2290409c446ebad1418c/vfb2ufo3-0.8.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}