{
  "info": {
    "author": "Splendor",
    "author_email": "splendor.kill@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Xiangqi\n\n\n\n![UI](https://github.com/splendor-kill/xiangqi/raw/main/env.render.png)\n\n\n\n## How to use\n\n```python\nfrom xiangqi import Env\n\nenv = Env(opening)  # 不传开局状态表示从头下起\n\nob = env.reset()  # 初始观察\nwhile True:\n    env.render()  # 显示棋局\n    player = # which agent are responsible for ob['cur_player']?\n    action = player.make_decision(**ob)  # agent 的决策\n    ob, reward, done, info = env.step(action)\n    if done:\n        env.render()\n        break\n```\n\n\n\n## Design decisions\n\n### observation\n\n以当前玩家的视角观察，包括坐标系、行、列，以及当前的合法走法，上一步被对手吃掉的子(用于reward shaping)\n\n\n\n### action\n\n* ~~方案1~~\n\n  以当前玩家的视角行动，action space: `MultiDiscrete(9, 10, 9, 10)`\n\n  前面2维表示源位置`(col, row)`，后面2维表示目标位置\n\n  空间大小8100\n\n* 方案2\n  任一位置的行，列，四方2x2范围的位置，空间大小2550\n\n* 方案3\n\n  对每一类子，从右到左，从上到下编号，然后针对棋子类别编码最大可能的走法\n\n  车炮：17，马：8，象：4，士：4，兵：3，将：4\n\n  空间大小119\n\n**注意**：\n\n* 策略应该包含对对手求和请求的处理，回答是否同意和\n\n\n\n\n\n## Details\n\n默认执红者先下\n\n观察到的信息包括：\n\n* `board_state`：棋盘状态，[FEN串](https://www.xqbase.com/protocol/cchess_fen.htm)，它包含了局面的所有信息\n* `sue_draw`: 是否对手在求和，**如果是，需要对求和做出反应**，即是否同意和局\n\n\n\n操作环境的输入(即`env.step(action)`中的`action`)为一个字符串：\n\n```python\n\"RESIGN\": 认输，认输会引起本局结束\n\"SUE_DRAW\": 求和，主动求和只要发这个字符串，对手需要回复\"yes\"或\"no\"表示同意与否\nUCCI走法串: 如\"b7b0\"，即源位置和目标位置的编码\n\n```\n\n操作环境的输出(即`env.step(action)`的返回值)分为四个部分：\n\n* `ob` (`dict`) 观察，切换当前玩家后(即下一个玩家)的观察，具体描述参看上面，`done`为`True`时为`None`\n* `reward` (`int`) 回报，当前玩家(即做本次action的玩家)的回报，`done`为`False`时为`None`\n* `done` (`bool`)，这一局是否结束\n* `info` (`str`)，一些附加信息\n\n\n\n显示棋局`env.render()`：\n\n字符界面下显示的棋局。棋盘不以玩家视角变化的，而是固定红色在下，黑色在上。\n\n棋子在颜色上做了区分，在字形上也做了区分，红色的感觉更带人性一些，黑方有点像原始文明\n\n另外\"将军\"，吃子等信息也会显示\n\n\n\n常量\n\n```python\nN_ROWS = 10  # term: rank\nN_COLS = 9  # term: file\n\nREWARD_WIN = 1\nREWARD_LOSE = -1\nREWARD_DRAW = 0\nREWARD_ILLEGAL = -5  # illegal action\n\nclass Action(IntEnum):\n    ADVANCE = 1  # 进\n    RETREAT = 2  # 退\n    TRAVERSE = 3 # 平\n    SUE_DRAW = 4 # 求和\n    RESIGN = 5   # 认输\n\nclass Camp(IntEnum):\n    BLACK = 1\n    RED = 2\n\nclass Force(IntEnum):\n    SHUAI = 1\n    SHI = 2\n    XIANG = 3\n    MA = 4\n    JU = 5\n    PAO = 6\n    BING = 7\n```\n\n帮助函数\n\n```python\ndef decode(board_state)  # 解码棋盘状态，整数->(Camp, Force)列表(从左到右，从上到下)\ndef chinese_to_ucci(action, camp, board)  # 中文纵线格式 -> ucci格式，如炮二平五->h7e7\ndef ucci_to_chinese(action)  # 上面函数的逆\n```\n\n\n\n## reference\n\n* [Xiangqi](https://en.wikipedia.org/wiki/Xiangqi)\n\n* [中式记法](https://zh.wikipedia.org/wiki/%E8%B1%A1%E6%A3%8B) [西式记法](http://wxf.ca/xq/computer/wxf_notation.html) [着法表示](https://www.xqbase.com/protocol/cchess_move.htm)\n\n* [术语](http://wxf.ca/xq/computer/XIANGQI_TERMS_IN_ENGLISH.pdf)\n\n* [UCCI](https://www.xqbase.com/protocol/cchess_ucci.htm) [UCI](https://gist.github.com/aliostad/f4470274f39d29b788c1b09519e67372)\n\n* [Elo计算](https://www.xqbase.com/protocol/elostat.htm)\n\n* [源码](https://github.com/Zeta36/chess-alpha-zero.git)\n\n  \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/splendor-kill/xiangqi",
    "keywords": "Zhong Guo Xiang Qi,Chinese chess,OpenAI Gym-compatible,中国象棋,强化学习环境",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xiangqi",
    "package_url": "https://pypi.org/project/xiangqi/",
    "platform": null,
    "project_url": "https://pypi.org/project/xiangqi/",
    "project_urls": {
      "Bug Tracker": "https://github.com/splendor-kill/xiangqi/issues",
      "Homepage": "https://github.com/splendor-kill/xiangqi"
    },
    "release_url": "https://pypi.org/project/xiangqi/1.0.5/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": ">=3.6",
    "summary": "Chinese Chess Environment for Reinforcement Learning",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14395830,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a871b76997247a209fb7c0a4302ba2702573d9440ba7702e451ccaa73dcf42a",
          "md5": "0ed30bc630b5cdd72198177d28ed285d",
          "sha256": "6c8503481423603a9c85873ed5f57f2a2b6c84fab8ab97f63abdf18d46cf55a4"
        },
        "downloads": -1,
        "filename": "xiangqi-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ed30bc630b5cdd72198177d28ed285d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21877,
        "upload_time": "2022-06-01T10:14:47",
        "upload_time_iso_8601": "2022-06-01T10:14:47.765911Z",
        "url": "https://files.pythonhosted.org/packages/5a/87/1b76997247a209fb7c0a4302ba2702573d9440ba7702e451ccaa73dcf42a/xiangqi-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "913f5b42ddd9c56465d51bd66b033ccf8c356458cd4966f5ab91906006a33ff3",
          "md5": "970101c57e01e96345a226dd9305f2df",
          "sha256": "5e8ede6831b32828358476ee55df29826c8cb9312ca64fbb575d98ddcfb842f0"
        },
        "downloads": -1,
        "filename": "xiangqi-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "970101c57e01e96345a226dd9305f2df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31435,
        "upload_time": "2022-06-01T10:14:49",
        "upload_time_iso_8601": "2022-06-01T10:14:49.792984Z",
        "url": "https://files.pythonhosted.org/packages/91/3f/5b42ddd9c56465d51bd66b033ccf8c356458cd4966f5ab91906006a33ff3/xiangqi-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68707c450b92cb4b6ea70e1a77b754f2f091ef94627546a2c914c9894b9fc266",
          "md5": "2dd3eb842278ffe05809983fe8ed25c4",
          "sha256": "d0e9ec9a3f682d3c2fd25ac57e554e1415e860530009e87a1c8f6ce0b851a5f0"
        },
        "downloads": -1,
        "filename": "xiangqi-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2dd3eb842278ffe05809983fe8ed25c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21911,
        "upload_time": "2022-07-11T06:09:21",
        "upload_time_iso_8601": "2022-07-11T06:09:21.871669Z",
        "url": "https://files.pythonhosted.org/packages/68/70/7c450b92cb4b6ea70e1a77b754f2f091ef94627546a2c914c9894b9fc266/xiangqi-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4af62409a1e45950f93be0cdafdd158added9ecb84c58f0252aad0db3225ae9",
          "md5": "8d9949089c71991a457e5af8e3017b41",
          "sha256": "fc991eca63190f59b4679cfad86e716663874f5f00a11b26450295d8ad774ed5"
        },
        "downloads": -1,
        "filename": "xiangqi-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8d9949089c71991a457e5af8e3017b41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31403,
        "upload_time": "2022-07-11T06:09:24",
        "upload_time_iso_8601": "2022-07-11T06:09:24.481028Z",
        "url": "https://files.pythonhosted.org/packages/f4/af/62409a1e45950f93be0cdafdd158added9ecb84c58f0252aad0db3225ae9/xiangqi-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "68707c450b92cb4b6ea70e1a77b754f2f091ef94627546a2c914c9894b9fc266",
        "md5": "2dd3eb842278ffe05809983fe8ed25c4",
        "sha256": "d0e9ec9a3f682d3c2fd25ac57e554e1415e860530009e87a1c8f6ce0b851a5f0"
      },
      "downloads": -1,
      "filename": "xiangqi-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2dd3eb842278ffe05809983fe8ed25c4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 21911,
      "upload_time": "2022-07-11T06:09:21",
      "upload_time_iso_8601": "2022-07-11T06:09:21.871669Z",
      "url": "https://files.pythonhosted.org/packages/68/70/7c450b92cb4b6ea70e1a77b754f2f091ef94627546a2c914c9894b9fc266/xiangqi-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f4af62409a1e45950f93be0cdafdd158added9ecb84c58f0252aad0db3225ae9",
        "md5": "8d9949089c71991a457e5af8e3017b41",
        "sha256": "fc991eca63190f59b4679cfad86e716663874f5f00a11b26450295d8ad774ed5"
      },
      "downloads": -1,
      "filename": "xiangqi-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "8d9949089c71991a457e5af8e3017b41",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 31403,
      "upload_time": "2022-07-11T06:09:24",
      "upload_time_iso_8601": "2022-07-11T06:09:24.481028Z",
      "url": "https://files.pythonhosted.org/packages/f4/af/62409a1e45950f93be0cdafdd158added9ecb84c58f0252aad0db3225ae9/xiangqi-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}