{
  "info": {
    "author": "Adam Volny",
    "author_email": "adam.volny@datasentics.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# datasentics-lab\n\ndslab is a fully open-source package that simplifies everyday tasks for data scientists that rely on Databricks. \nIt contains experimental code primarily developed and maintained by DataSentics.\n\nAll contributions and contributors are very welcome!\n\n## Installation\n\nPyspark is the only dependency that needs to be preinstalled.\n\nThe package is available on PyPI:\n\n```\npip install datasentics-lab\n```\n\n## Utilities\n\n### DBPath\n\n`DBPath` is a QoL utility that simplifies and unifies files handling in Databricks.\n\nIt's design and API is inspired by `pathlib.Path`.\n\n#### Showcase\n\n```python\nfrom dslab.dbpath import DBPath\n\nDBPath.set_spark_session(spark)  # used to initialize dbutils instance\n\npath = DBPath('dbfs:/FileStore/')\n\npath.ls() # lists files in directory in human-readable format\n\npath.tree(max_depth=2) # prints indented directory tree\n\nfile = path / 'tmp' / 'my_file'\n\nwith file.open('wt') as f:\n    f.write('It really is this simple!')\n    \nprint(file.read_text())\n\nfile.write_text('And this is even easier!')\n\nprint(file.read_text())\n\nprint(f'{file} exists: {file.exists()}, is dir: {file.is_dir()}, is in filestore: {file.in_filestore}')\n```\n\nAnd that is just a taste! See full list of features below vvvv.\n\n#### Features\n\n```\nfrom dslab.dbpath import DBPath\nhelp(DBPath)\n```\n\n```\nA Utility class for working with DataBricks API paths directly and in a unified manner.\n\nThe Design is inspired by pathlib.Path\n\n>>> path = DBPath('abfss://...')\n>>> path = DBPath('dbfs:/...')\n>>> path = DBPath('file:/...')\n>>> path = DBPath('s3:/...')\n>>> path = DBPath('s3a:/...')\n>>> path = DBPath('s3n:/...')\n\n\nINITIALIZATION:\n\n>>> from dslab import DBPath\n\nProvide spark session for dbutils instance\n>>> DBPath.set_spark_session(spark)\n\nset FileStore base download url for your dbx workspace\n>>> DBPath.set_base_download_url('https://adb-1234.5.azuredatabricks.net/files/')\n\n\nPROPERTIES:\n\npath - the whole path\nname - just the filename (last part of path)\nparent - the parent (DBPath)\nchildren - sorted list of children files (list(DBPath)), empty list for non-folders\nin_local, in_dbfs, in_filestore, in_lake, in_bucket - predicates for location of file\n\n\nBASE METHODS:\n\nexists() - returns True if file exists\nis_dir() - returns True if file exists and is a directory\nls() - prints human readable list of contained files for folders, with file sizes\ntree(max_depth=5, max_files_per_dir=50) - prints the directory structure, up to `max_depth` and \n        `max_files_per_dir` files in each directory\ncp(destination, recurse=False) - same as dbutils.fs.cp(str(self), str(destination), recurse)\nrm(recurse=False) - same as dbutils.fs.rm(str(self), recurse)\nmkdirs() - same as dbutils.fs.mkdirs(str(self))\niterdir() - sorted generator over files (also DBPath instances) - similar to Path.iterdir()\nreiterdir(regex) - sorted generator over files (DBPath) that match `bool(re.findall(regex, file))`\n\n\nIO METHODS:\n\nopen(method='rt', encoding='utf-8') - context manager for working with any DB API file locally\nread_text(encoding='utf-8') - reads the file as text and returns contents\nread_bytes() - reads the file as bytes and returns contents\nwrite_text(text) - writes text to the file\nwrite_bytes(bytedata) - writes bytes to the file\ndownload_url() - for FileStore records returns a direct download URL\nmake_download_url() - copies a file to FileStore and returns a direct download URL\nbackup() - creates a backup copy in the same folder, named by following convention\n    {filename}[.extension] -> {filename}_YYYYMMDD_HHMMSS[.extension]\nrestore(timestamp) - restore a previous backup of this file by passing backup timestamp string (`'YYYYMMDD_HHMMSS'`)\n\n\nCLASS METHODS:\n\nset_spark_session(spark) - necessary to call upon initialization\nclear_tmp_download_cache() - clear all files created using `make_download_url()`\ntemp_file - context manager that returns a temporary DBPath\n- set_base_download_url - call once upon initialization, sets base url for filestore direct downloads\n  (e.g. 'https://adb-1234.5.azuredatabricks.net/files/')\n- set_protocol_temp_path - call once upon initialization for each filesystem you want to create temp files/dirs in\n  ('dbfs' and 'file' are set by default).\n```\n\n## Feedback\n\nAll feedback is extremely welcome, please raise an issue on github or contact me at adam.volny@datasentics.com\n\n## Contribution\n\nContributions, extensions are welcome, don't hesitate to post a PR and we will discuss adding the feature.\n\n### Local Environment Setup\n\nThe following software needs to be installed first:\n  * [Miniconda package manager](https://docs.conda.io/en/latest/miniconda.html)\n  * [Git for Windows](https://git-scm.com/download/win) or standard Git in Linux (_apt-get install git_)\n\nClone the repo now and prepare the package environment:\n\n* On **Windows**, use [Git Bash](docs/git-bash.png).\n* On **Linux/Mac**, the use standard console\n\n```bash\n$ git clone git@github.com:DataSentics/datasentics-lab.git\n$ cd datasentics-lab\n$ ./env-init.sh\n```\n\nAfter the environment setup is complete, activate the Conda environment:\n\n```bash\n$ conda activate ./.venv\n```\n\n### Semantic Commit Messages\n\nWe decided to use semantic commit messages for easier long-term maintenance.\n\nWe're looking forward to your contributions!\n\nFormat: `<type>(<scope>): <subject>`\n\n`<scope>` is optional\n\n## Example\n\n```\nfeat: add hat wobble\n^--^  ^------------^\n|     |\n|     +-> Summary in present tense.\n|\n+-------> Type: chore, docs, feat, fix, refactor, style, or test.\n```\n\nMore Examples:\n\n- `feat`: (new feature for the user, not a new feature for build script)\n- `fix`: (bug fix for the user, not a fix to a build script)\n- `docs`: (changes to the documentation)\n- `style`: (formatting, missing semi colons, etc; no production code change)\n- `refactor`: (refactoring production code, eg. renaming a variable)\n- `test`: (adding missing tests, refactoring tests; no production code change)\n- `cicd`: (updating workflows; no production code change)\n- `release`: (changing version in pyproject.toml and commit message: \"release: vMAJOR.MINOR.PATCH\")\n\nReferences:\n\n- https://www.conventionalcommits.org/\n- https://seesparkbox.com/foundry/semantic_commit_messages\n- http://karma-runner.github.io/1.0/dev/git-commit-msg.html",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DataSentics/datasentics-lab",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "datasentics-lab",
    "package_url": "https://pypi.org/project/datasentics-lab/",
    "platform": "",
    "project_url": "https://pypi.org/project/datasentics-lab/",
    "project_urls": {
      "Homepage": "https://github.com/DataSentics/datasentics-lab",
      "Repository": "https://github.com/DataSentics/datasentics-lab"
    },
    "release_url": "https://pypi.org/project/datasentics-lab/0.1.3/",
    "requires_dist": [
      "requests (>=2.25.1,<3.0.0)",
      "azure-storage-blob (>=12.8.0,<13.0.0)"
    ],
    "requires_python": ">=3.7.1,<4.0.0",
    "summary": "DataSentics Lab - experimental open-source repo",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10485560,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71d655d929cb22eba17a8884cdf38ecb3de6ef74512b3f514caccbb3d03311f8",
          "md5": "ff1e551b375313bbbc2add6aa16f222d",
          "sha256": "28ecb2b88cb34c0920ccf8c83a7dad6a2934a422358d838008ab0e12495cf8c3"
        },
        "downloads": -1,
        "filename": "datasentics_lab-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff1e551b375313bbbc2add6aa16f222d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0.0",
        "size": 6788,
        "upload_time": "2021-05-07T13:07:26",
        "upload_time_iso_8601": "2021-05-07T13:07:26.830632Z",
        "url": "https://files.pythonhosted.org/packages/71/d6/55d929cb22eba17a8884cdf38ecb3de6ef74512b3f514caccbb3d03311f8/datasentics_lab-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0585337633a3f6d502e4065111aaa9c8c1eb089350fb0e86e9e4d282e5f99b1c",
          "md5": "c3154b7a0d35cceb5cc697c840798804",
          "sha256": "d02a0825de8291cf60d302cfaac99d434fee3ecbea7ef6fdcbf3d544d0b502ce"
        },
        "downloads": -1,
        "filename": "datasentics_lab-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3154b7a0d35cceb5cc697c840798804",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0.0",
        "size": 6839,
        "upload_time": "2021-05-07T15:43:27",
        "upload_time_iso_8601": "2021-05-07T15:43:27.282782Z",
        "url": "https://files.pythonhosted.org/packages/05/85/337633a3f6d502e4065111aaa9c8c1eb089350fb0e86e9e4d282e5f99b1c/datasentics_lab-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c48d2657725a8450abe1e154af9f0db2fcc136014aa061c0de955c4aad0069b1",
          "md5": "0c0b2ab801d33fef4bedebd4f7faf857",
          "sha256": "2712de3b4b910d3ee248ccce3ae70a39e0e1cd2ad18ef57d623020daac25e89d"
        },
        "downloads": -1,
        "filename": "datasentics_lab-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c0b2ab801d33fef4bedebd4f7faf857",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0.0",
        "size": 8149,
        "upload_time": "2021-05-18T11:11:53",
        "upload_time_iso_8601": "2021-05-18T11:11:53.533169Z",
        "url": "https://files.pythonhosted.org/packages/c4/8d/2657725a8450abe1e154af9f0db2fcc136014aa061c0de955c4aad0069b1/datasentics_lab-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9b303a343666b8897c8744f1d74503526b3e8ddfe192100567d0679aede876d",
          "md5": "f3f38ce1ce03cc74b6bc91d84c56fb9d",
          "sha256": "35b5e8d49443df878282d078159e5a3678e87346151869877616fd4cc4336e9e"
        },
        "downloads": -1,
        "filename": "datasentics_lab-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3f38ce1ce03cc74b6bc91d84c56fb9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0.0",
        "size": 10947,
        "upload_time": "2021-05-27T07:57:40",
        "upload_time_iso_8601": "2021-05-27T07:57:40.839180Z",
        "url": "https://files.pythonhosted.org/packages/e9/b3/03a343666b8897c8744f1d74503526b3e8ddfe192100567d0679aede876d/datasentics_lab-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9b303a343666b8897c8744f1d74503526b3e8ddfe192100567d0679aede876d",
        "md5": "f3f38ce1ce03cc74b6bc91d84c56fb9d",
        "sha256": "35b5e8d49443df878282d078159e5a3678e87346151869877616fd4cc4336e9e"
      },
      "downloads": -1,
      "filename": "datasentics_lab-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f3f38ce1ce03cc74b6bc91d84c56fb9d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.1,<4.0.0",
      "size": 10947,
      "upload_time": "2021-05-27T07:57:40",
      "upload_time_iso_8601": "2021-05-27T07:57:40.839180Z",
      "url": "https://files.pythonhosted.org/packages/e9/b3/03a343666b8897c8744f1d74503526b3e8ddfe192100567d0679aede876d/datasentics_lab-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}