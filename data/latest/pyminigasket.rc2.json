{
  "info": {
    "author": "Coriander V. Pines",
    "author_email": "contact@corianderpines.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "![MiniGasket banner](docs/header.png \"MiniGasket\")\n\n# MiniGasket: A Tiny Flow-Based Programming Library\n\n[![pipeline status](https://gitlab.com/cvpines/pyminigasket/badges/stable/pipeline.svg)](https://gitlab.com/cvpines/pyminigasket/-/commits/stable)\n[![coverage report](https://gitlab.com/cvpines/pyminigasket/badges/stable/coverage.svg)](https://gitlab.com/cvpines/pyminigasket/-/commits/stable)\n[![PyPI](https://img.shields.io/pypi/v/pyminigasket)](https://pypi.org/project/pyminigasket/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pyminigasket)]((https://pypi.org/project/pyminigasket/))\n[![PyPI - License](https://img.shields.io/pypi/l/pyminigasket)](https://gitlab.com/cvpines/pyminigasket/-/blob/stable/LICENSE)\n\nMiniGasket is a tiny library for facilitating flow-based programming.\n\n## Installation\n\nInstallation is simple using `pip`:\n\n> `$ pip install pyminigasket`\n\nMiniGasket has no external dependencies.\n\n## Examples\n\n\nDirecting data flows:\n\n```python\nimport minigasket\nfrom minigasket import SourceBase\n\n\nclass StringSource(minigasket.SourceBase):\n    def emit(self, value: str):\n        self.send(value)\n\n\nclass ToUpper(minigasket.SourceSinkBase):\n    def __init__(self):\n        super().__init__()\n\n    def receive(self, sender: SourceBase, message: str) -> None:\n        self.send(message.upper())\n\n\nclass Appender(minigasket.SourceSinkBase):\n    def __init__(self, value: str):\n        super().__init__()\n        self._value = value\n\n    def receive(self, sender: SourceBase, message) -> None:\n        self.send(message + self._value)\n\n\nclass Collector(minigasket.SinkBase):\n    def __init__(self):\n        super().__init__()\n        self.received = []\n\n    def receive(self, sender: SourceBase, message) -> None:\n        self.received.append(message)\n\n\nsource = StringSource()\nsink = Collector()\n\nsource >> sink\nsource >> ToUpper() >> sink\nsource >> Appender('!') >> sink\n\nsource.emit('hello')\nsource.emit('world')\nassert sink.received == ['hello', 'HELLO', 'hello!', 'world', 'WORLD', 'world!']\n```\n\nCreating a filter:\n\n```python\nimport random\n\nimport minigasket\nfrom minigasket import SourceBase\n\n\nclass RandomNumberSource(minigasket.SourceBase):\n    def emit(self):\n        self.send(random.randrange(100))\n\n\nclass EvenNumberFilter(minigasket.FilterBase):\n    def predicate(self, sender: SourceBase, message: int) -> bool:\n        return (message % 2) == 0\n\n\nclass Collector(minigasket.SinkBase):\n    def __init__(self):\n        super().__init__()\n        self.received = []\n\n    def receive(self, sender: SourceBase, message) -> None:\n        self.received.append(message)\n\n\nsource = RandomNumberSource()\neven_sink = Collector()\nodd_sink = Collector()\n\nfilt = EvenNumberFilter()\nsource >> filt >> even_sink\nfilt.rejected >> odd_sink\n\nfor _ in range(10):\n    source.emit()\n\nprint('EVENS:', even_sink.received)\nprint('ODDS:', odd_sink.received)\n```\n\nMultiple sources:\n\n```python\nimport minigasket\n\n\nclass IntSource(minigasket.SourceBase):\n    def emit(self, value: int):\n        self.send(value)\n\n\nclass IncrementDecrement(minigasket.SinkBase):\n    def __init__(self):\n        super().__init__()\n        self.incremented = minigasket.SourceProxy(self)\n        self.decremented = minigasket.SourceProxy(self)\n\n    def receive(self, sender, message: int) -> None:\n        self.incremented.send(message + 1)\n        self.decremented.send(message - 1)\n\n\nclass Collector(minigasket.SinkBase):\n    def __init__(self):\n        super().__init__()\n        self.received = []\n\n    def receive(self, sender, message) -> None:\n        self.received.append(message)\n\n\nsource = IntSource()\nsink_increment = Collector()\nsink_decrement = Collector()\n\nincdec = IncrementDecrement()\nsource >> incdec\nincdec.incremented >> sink_increment\nincdec.decremented >> sink_decrement\n\nsource.emit(1)\nsource.emit(2)\nsource.emit(3)\n\nassert sink_increment.received == [2, 3, 4]\nassert sink_decrement.received == [0, 1, 2]\n```\n\nMultiple Sinks:\n\n```python\nimport minigasket\n\n\nclass StringSource(minigasket.SourceBase):\n    def emit(self, value: str):\n        self.send(value)\n\n\nclass MultiPrint(object):\n    def __init__(self):\n        super().__init__()\n        self.sink_a = minigasket.SinkProxy(self.receive_a)\n        self.sink_b = minigasket.SinkProxy(self.receive_b)\n\n    def receive_a(self, sender, message) -> None:\n        print('Got message from sink A:', message)\n\n    def receive_b(self, sender, message) -> None:\n        print('Got message from sink B:', message)\n\n\nsource_a = StringSource()\nsource_b = StringSource()\n\nsink = MultiPrint()\n\nsource_a >> sink.sink_a\nsource_b >> sink.sink_b\n\nsource_a.emit('Hello to sink A!')\nsource_b.emit('Hello to sink B!')\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/cvpines/pyminigasket",
    "keywords": "dataflow,flow",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyminigasket",
    "package_url": "https://pypi.org/project/pyminigasket/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyminigasket/",
    "project_urls": {
      "Documentation": "https://gitlab.com/cvpines/pyminigasket/-/blob/stable/README.md",
      "Homepage": "https://gitlab.com/cvpines/pyminigasket",
      "Repository": "https://gitlab.com/cvpines/pyminigasket"
    },
    "release_url": "https://pypi.org/project/pyminigasket/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "A tiny library for dataflow programming.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7860834,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12ae0e4cb652504602a3704183e78a4af4c298c7f5b3a00c8d78f2b2c8580597",
          "md5": "899140786353fe4df1e4b0a4bb59b73f",
          "sha256": "9d28d588b91947b738a1fbe9b4f2a0cf7e7971a3946c4088bf266cfb5ca0cb4a"
        },
        "downloads": -1,
        "filename": "pyminigasket-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "899140786353fe4df1e4b0a4bb59b73f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 5614,
        "upload_time": "2020-07-30T03:45:42",
        "upload_time_iso_8601": "2020-07-30T03:45:42.647562Z",
        "url": "https://files.pythonhosted.org/packages/12/ae/0e4cb652504602a3704183e78a4af4c298c7f5b3a00c8d78f2b2c8580597/pyminigasket-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbe54b3f284cc30121d32a041c35f44653dedf08e9a8ecee28ad7ab83816bc55",
          "md5": "b5f43acf4df2fb6fcd55807e506c874b",
          "sha256": "5c1b4204962309d9ca4ff2a2c72be8ae30168d6f262557bf7708297000dc6b94"
        },
        "downloads": -1,
        "filename": "pyminigasket-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b5f43acf4df2fb6fcd55807e506c874b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 6137,
        "upload_time": "2020-07-30T03:45:45",
        "upload_time_iso_8601": "2020-07-30T03:45:45.064007Z",
        "url": "https://files.pythonhosted.org/packages/cb/e5/4b3f284cc30121d32a041c35f44653dedf08e9a8ecee28ad7ab83816bc55/pyminigasket-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9761e466688e01ff3e3694c162b2a01ec1ac018d3dfca3c8be11cccf1f93650",
          "md5": "6810d5646e5bdb33ae32b65cea31b5d1",
          "sha256": "8378e5b3863aa5f0bd01a0334a37ed2689b95741e622b9d61f72ac647b357672"
        },
        "downloads": -1,
        "filename": "pyminigasket-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6810d5646e5bdb33ae32b65cea31b5d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 4892,
        "upload_time": "2020-08-01T05:18:22",
        "upload_time_iso_8601": "2020-08-01T05:18:22.903257Z",
        "url": "https://files.pythonhosted.org/packages/a9/76/1e466688e01ff3e3694c162b2a01ec1ac018d3dfca3c8be11cccf1f93650/pyminigasket-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d267c623f01d063e59c36e920fc87fd15734c4e7402c10e49d2b3d5ce1e9788",
          "md5": "70bf201677abc1f32585be297c833896",
          "sha256": "c10b95628d763b96bb2b75dc7fedf510d735510d7802baf34400a5bf708e099b"
        },
        "downloads": -1,
        "filename": "pyminigasket-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "70bf201677abc1f32585be297c833896",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 5184,
        "upload_time": "2020-08-01T05:18:24",
        "upload_time_iso_8601": "2020-08-01T05:18:24.296590Z",
        "url": "https://files.pythonhosted.org/packages/6d/26/7c623f01d063e59c36e920fc87fd15734c4e7402c10e49d2b3d5ce1e9788/pyminigasket-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9761e466688e01ff3e3694c162b2a01ec1ac018d3dfca3c8be11cccf1f93650",
        "md5": "6810d5646e5bdb33ae32b65cea31b5d1",
        "sha256": "8378e5b3863aa5f0bd01a0334a37ed2689b95741e622b9d61f72ac647b357672"
      },
      "downloads": -1,
      "filename": "pyminigasket-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6810d5646e5bdb33ae32b65cea31b5d1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 4892,
      "upload_time": "2020-08-01T05:18:22",
      "upload_time_iso_8601": "2020-08-01T05:18:22.903257Z",
      "url": "https://files.pythonhosted.org/packages/a9/76/1e466688e01ff3e3694c162b2a01ec1ac018d3dfca3c8be11cccf1f93650/pyminigasket-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6d267c623f01d063e59c36e920fc87fd15734c4e7402c10e49d2b3d5ce1e9788",
        "md5": "70bf201677abc1f32585be297c833896",
        "sha256": "c10b95628d763b96bb2b75dc7fedf510d735510d7802baf34400a5bf708e099b"
      },
      "downloads": -1,
      "filename": "pyminigasket-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "70bf201677abc1f32585be297c833896",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 5184,
      "upload_time": "2020-08-01T05:18:24",
      "upload_time_iso_8601": "2020-08-01T05:18:24.296590Z",
      "url": "https://files.pythonhosted.org/packages/6d/26/7c623f01d063e59c36e920fc87fd15734c4e7402c10e49d2b3d5ce1e9788/pyminigasket-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}