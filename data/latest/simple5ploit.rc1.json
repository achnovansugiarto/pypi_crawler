{
  "info": {
    "author": "Alexis Rodriguez",
    "author_email": "rodriguez10011999@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# simple5ploit\n`simple5ploit` is an exploitation/information gathering framework designed for Python3 scripts. If you have any Python scripts that you would others to use, please see the instructions in the README on how to contribute to `simple5ploit`. `simple5ploit` currently doesn't have many scripts but over time I thought the cybersecurity community will help build it's script repository.\n\n### Setup\n\n```\npip3 install simple5ploit\n```\n\n**OR**\n\n```\ngit clone https://github.com/binexisHATT/simple5ploit\ncd simple5ploit\npython3 -m simple5ploit\n```\n\n### Simple5ploit's Interface\n\n**simple5ploit: Main Interface**\n\n![](https://github.com/binexisHATT/simple5ploit/blob/main/images/simple5ploit_main_interface.PNG?raw=True)\n\n**simple5ploit: CLI Help Menu**\n\n```\nusage: python3 -m simple5ploit [-h] [-q] [-l] [-m MODULE] [-s PORT]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -q, --quite           don't print simple5ploit banner\n  -l, --list-modules    list all available modules\n  -m MODULE, --module MODULE\n                        specify module to load\n  -s PORT, --server PORT\n                        HTTP server using `http.server` module\n```\n**simple5ploit: Autotab Completion Capabilites**\n\n![](https://github.com/binexisHATT/simple5ploit/blob/main/images/simple5ploit_autotab_completion.PNG?raw=True)\n\n**simple5ploit: Listing Available Modules And Loading Directly Into Them**\n\n![](https://github.com/binexisHATT/simple5ploit/blob/main/images/simple5ploit_list_load_modules.PNG?raw=True)\n\n### Contributing to Simple5ploit\n\n1. Fork simple5ploit's repo\n2. Watch this [video](https://www.youtube.com/watch?v=nT8KGYVurIU) on how to fork and make pull requests if you don't know how to do so already\n3. Make a pull request with your exploit or gather module and I'll add your exploit or gather module to simple5ploit\n\n### Creating an Exploit Module\n\n**NOTE**: all exploit modules created should exist in the path: `simple5ploit/simple5ploit/modules/exploits` and must end with a `.py` extension!!!\n\n```python\n# importing the parent exploit class\nfrom .internal.base import Exploit\n\n# defining an exploit module class\nclass SomeExploit(Exploit):\n  def __init__(self):\n    # exploit module custom prompt\n    self.prompt = \"[CustomExploitPrompt] :> \"\n\n    # exploits pip dependencies\n    self.pip_dependencies = [\n      \"requests\",\n      \"impacket\"\n    ]\n    \n    # exploit module information dict\n    self.info = {\n      \"Author\": \"Alexis Rodriguez\",\n      \"Description\": \"An example exploit class\"\n    }\n    \n    # exploit module arguments dict\n    self.args = {\n      \"some_argument\":\n        {\n          \"description\": \"an argument for this example exploit class\",\n          \"required\": True }\n    }\n    \n    # initializing class variables for exploit arguments with values set to `N/a`\n    # ::they could also be set to empty string\n    for arg in self.args.keys():\n      self.__dict__[arg] = \"N/a\"\n      \n  def check(self):\n    \"\"\"\n    If implemented, this function checks if the target\n    is vulnerable to the exploit. If it's not implemented,\n    a ```NotImplementedError``` will be raised and handled accordingly by\n    simple5ploit's cli\n    \"\"\"\n    pass\n        \n  def run(self):\n    \"\"\"\n    This function is where the exploit code should be placed.\n    If it's not implemented, a ```NotImplementedError``` will be raised\n    and handled accordingly by simple5ploit's cli.\n    \"\"\"\n    pass\n    \n```\n\n### Creating a Gather Module\n\n**NOTE**: all gather modules created should exist in the path: `simple5ploit/simple5ploit/modules/gather` and must end with a `.py` extension!!!\n\n```python3\n# importing the parent gather module class\nfrom .internal.base import Gather\n\n# defining a gather module class\nclass SomeGatherModule(Gather):\n  def __init__(self):\n    # gather module custom prompt\n    self.prompt = \"[CustomPrompt] % \"\n\n    # exploits pip dependencies\n    self.pip_dependencies = [\n      \"psutil\",\n      \"pefile\"\n    ]\n    \n    # gather module information dict\n    self.info = {\n      \"Author\": \"Alexis Rodriguez\",\n      \"Description\": \"An example informating gather module class\"\n    }\n    \n    # gather module arguments dict\n    self.args = {\n      \"some_argument\":\n        {\n          \"description\": \"an argument for this example gather module class\",\n          \"required\": True }\n    }\n    \n    # initializing class variables for script arguments with values set to `N/a`\n    # ::they could also be set to empty string\n    for arg in self.args.keys():\n      self.__dict__[arg] = \"N/a\"\n      \n  def run(self):\n    \"\"\"\n    This function is where the code for this gather module should be placed.\n    If it's not implemented, a ```NotImplementedError``` will be raised.\n    \"\"\"\n    pass\n```\n\n### Simple5ploit Server\n\nQuickly launch a Python3 HTTP server with:\n\n```\nsimple5ploit -s [port]\n```\n\n![](https://github.com/binexisHATT/simple5ploit/blob/main/images/simple5ploit_http_server.PNG?raw=True)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/binexisHATT/simple5ploit",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "simple5ploit",
    "package_url": "https://pypi.org/project/simple5ploit/",
    "platform": "",
    "project_url": "https://pypi.org/project/simple5ploit/",
    "project_urls": {
      "Homepage": "https://github.com/binexisHATT/simple5ploit"
    },
    "release_url": "https://pypi.org/project/simple5ploit/1.0.2/",
    "requires_dist": [
      "prompt_toolkit",
      "tabulate",
      "python3-nmap"
    ],
    "requires_python": "",
    "summary": "simple5ploit",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9837234,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03dbc35698eebcfa1df03b457672777da214b604d0189c25d09b682f6d40989c",
          "md5": "bf61be3e18615e14c22de81432c5dfce",
          "sha256": "6d592cb11aa4487a8eded05f0858f5c6173b6fc589cf5a3a3266668fa9d597eb"
        },
        "downloads": -1,
        "filename": "simple5ploit-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf61be3e18615e14c22de81432c5dfce",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21522,
        "upload_time": "2021-03-21T19:55:44",
        "upload_time_iso_8601": "2021-03-21T19:55:44.826117Z",
        "url": "https://files.pythonhosted.org/packages/03/db/c35698eebcfa1df03b457672777da214b604d0189c25d09b682f6d40989c/simple5ploit-1.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02c41ad6a3465aecefed08e7df315cea491e2d74e3866ad1396e1efb81b5e61e",
          "md5": "79b386be7e300cd0ed5687926abe1c08",
          "sha256": "6cb8e101b9fc04d6ce6a87aa99cb09e6ef009d7019a490fd8b0b75b8862c4bb7"
        },
        "downloads": -1,
        "filename": "simple5ploit-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "79b386be7e300cd0ed5687926abe1c08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 78592,
        "upload_time": "2021-03-21T19:55:46",
        "upload_time_iso_8601": "2021-03-21T19:55:46.268511Z",
        "url": "https://files.pythonhosted.org/packages/02/c4/1ad6a3465aecefed08e7df315cea491e2d74e3866ad1396e1efb81b5e61e/simple5ploit-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03dbc35698eebcfa1df03b457672777da214b604d0189c25d09b682f6d40989c",
        "md5": "bf61be3e18615e14c22de81432c5dfce",
        "sha256": "6d592cb11aa4487a8eded05f0858f5c6173b6fc589cf5a3a3266668fa9d597eb"
      },
      "downloads": -1,
      "filename": "simple5ploit-1.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bf61be3e18615e14c22de81432c5dfce",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 21522,
      "upload_time": "2021-03-21T19:55:44",
      "upload_time_iso_8601": "2021-03-21T19:55:44.826117Z",
      "url": "https://files.pythonhosted.org/packages/03/db/c35698eebcfa1df03b457672777da214b604d0189c25d09b682f6d40989c/simple5ploit-1.0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "02c41ad6a3465aecefed08e7df315cea491e2d74e3866ad1396e1efb81b5e61e",
        "md5": "79b386be7e300cd0ed5687926abe1c08",
        "sha256": "6cb8e101b9fc04d6ce6a87aa99cb09e6ef009d7019a490fd8b0b75b8862c4bb7"
      },
      "downloads": -1,
      "filename": "simple5ploit-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "79b386be7e300cd0ed5687926abe1c08",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 78592,
      "upload_time": "2021-03-21T19:55:46",
      "upload_time_iso_8601": "2021-03-21T19:55:46.268511Z",
      "url": "https://files.pythonhosted.org/packages/02/c4/1ad6a3465aecefed08e7df315cea491e2d74e3866ad1396e1efb81b5e61e/simple5ploit-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}