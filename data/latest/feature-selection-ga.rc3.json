{
  "info": {
    "author": "Kaushal Shetty",
    "author_email": "kaushalshetty@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# FeatureSelectionGA\n\n[![](https://img.shields.io/github/workflow/status/kaushalshetty/featureselectionga/Test.svg)](https://github.com/kaushalshetty/FeatureSelectionGA/actions)\n[![](https://img.shields.io/pypi/v/feature-selection-ga.svg)](https://pypi.python.org/pypi/feature-selection-ga/)\n[![](https://readthedocs.org/projects/featureselectionga/badge/?version=latest)](https://featureselectionga.readthedocs.io/en/latest/?badge=latest)\n[![](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n### Feature Selection using Genetic Algorithm (DEAP Framework)\n\nData scientists find it really difficult to choose the right features to get maximum accuracy especially if you are dealing with a lot of features. There are currenlty lots of ways to select the right features. But we will have to struggle if the feature space is really big. Genetic algorithm is one solution which searches for one of the best feature set from other features in order to attain a high accuracy.\n\n#### Installation:\n\n```bash\n$ pip install feature-selection-ga\n```\n\n#### Usage:\n\n```python\nfrom sklearn.datasets import make_classification\nfrom sklearn import linear_model\nfrom feature_selection_ga import FeatureSelectionGA, FitnessFunction\n\nX, y = make_classification(n_samples=100, n_features=15, n_classes=3,\n                           n_informative=4, n_redundant=1, n_repeated=2,\n                           random_state=1)\n\nmodel = linear_model.LogisticRegression(solver='lbfgs', multi_class='auto')\nfsga = FeatureSelectionGA(model,X,y, ff_obj = FitnessFunction())\npop = fsga.generate(100)\n\n#print(pop)\n```\n\n#### Usage (Advanced):\n\nBy default, the FeatureSelectionGA has its own fitness function class. We can also define our own\nFitnessFunction class.\n\n```python\nclass FitnessFunction:\n    def __init__(self,n_splits = 5,*args,**kwargs):\n        \"\"\"\n            Parameters\n            -----------\n            n_splits :int,\n                Number of splits for cv\n\n            verbose: 0 or 1\n        \"\"\"\n        self.n_splits = n_splits\n\n    def calculate_fitness(self,model,x,y):\n        pass\n```\n\nWith this, we can design our own fitness function by defining our calculate fitness!\nConsider the following example from [Vieira, Mendoca, Sousa, et al. (2013)](http://www.sciencedirect.com/science/article/pii/S1568494613001361)\n`$f(X) = \\alpha(1-P) + (1-\\alpha) \\left(1 - \\dfrac{N_f}{N_t}\\right)$`\n\nDefine the constructor **init** with needed parameters: alpha and N_t.\n\n```python\nclass FitnessFunction:\n    def __init__(self,n_total_features,n_splits = 5, alpha=0.01, *args,**kwargs):\n        \"\"\"\n            Parameters\n            -----------\n            n_total_features :int\n            \tTotal number of features N_t.\n            n_splits :int, default = 5\n                Number of splits for cv\n            alpha :float, default = 0.01\n                Tradeoff between the classifier performance P and size of\n                feature subset N_f with respect to the total number of features\n                N_t.\n\n            verbose: 0 or 1\n        \"\"\"\n        self.n_splits = n_splits\n        self.alpha = alpha\n        self.n_total_features = n_total_features\n\n```\n\nNext, we define the fitness function, the name has to be\ncalculate_fitness:\n\n```python\n    def calculate_fitness(self,model,x,y):\n        alpha = self.alpha\n        total_features = self.n_total_features\n\n        cv_set = np.repeat(-1.,x.shape[0])\n        skf = StratifiedKFold(n_splits = self.n_splits)\n        for train_index,test_index in skf.split(x,y):\n            x_train,x_test = x[train_index],x[test_index]\n            y_train,y_test = y[train_index],y[test_index]\n            if x_train.shape[0] != y_train.shape[0]:\n                raise Exception()\n            model.fit(x_train,y_train)\n            predicted_y = model.predict(x_test)\n            cv_set[test_index] = predicted_y\n\n        P = accuracy_score(y, cv_set)\n        fitness = (alpha*(1.0 - P) + (1.0 - alpha)*(1.0 - (x.shape[1])/total_features))\n        return fitness\n\n```\n\nExample:\nYou may also see `example2.py`\n\n```python\nX, y = make_classification(n_samples=100, n_features=15, n_classes=3,\nn_informative=4, n_redundant=1, n_repeated=2,\nrandom_state=1)\n\n# Define the model\n\nmodel = linear_model.LogisticRegression(solver='lbfgs', multi_class='auto')\n\n# Define the fitness function object\n\nff = FitnessFunction(n_total_features= X.shape[1], n_splits=3, alpha=0.05)\nfsga = FeatureSelectionGA(model,X,y, ff_obj = ff)\npop = fsga.generate(100)\n\n```\n\nExample adopted from [pyswarms](https://pyswarms.readthedocs.io/en/latest/examples/usecases/feature_subset_selection.html)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://featureselectionga.readthedocs.io",
    "keywords": "feature selection,Genetic Algorithm,DEAP",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "feature-selection-ga",
    "package_url": "https://pypi.org/project/feature-selection-ga/",
    "platform": "",
    "project_url": "https://pypi.org/project/feature-selection-ga/",
    "project_urls": {
      "Changelog": "https://featureselectionga.readthedocs.io/en/latest/changelog.html",
      "Documentation": "https://featureselectionga.readthedocs.io",
      "Homepage": "https://featureselectionga.readthedocs.io",
      "Source": "https://github.com/kaushalshetty/FeatureSelectionGA"
    },
    "release_url": "https://pypi.org/project/feature-selection-ga/0.1.3/",
    "requires_dist": [
      "numpy (<2)",
      "sklearn (<1)",
      "deap (<2)"
    ],
    "requires_python": ">=3.6",
    "summary": "Feature Selection using Genetic Algorithm (DEAP Framework)",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8295373,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18cbdb6adcc4a9f2cf238b7b81f3ba8bc5a60f449306c64be170a6c187102da9",
          "md5": "2fd40c3a15333b02da5bebf2352c6969",
          "sha256": "0be258ddfcc6d2d2f6276c3001f43fd07e9d6de9a89cf0cc55d206a94f86a6c2"
        },
        "downloads": -1,
        "filename": "feature_selection_ga-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2fd40c3a15333b02da5bebf2352c6969",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 7245,
        "upload_time": "2020-09-28T08:18:27",
        "upload_time_iso_8601": "2020-09-28T08:18:27.957683Z",
        "url": "https://files.pythonhosted.org/packages/18/cb/db6adcc4a9f2cf238b7b81f3ba8bc5a60f449306c64be170a6c187102da9/feature_selection_ga-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "434aa72b1431d02d157214aaec7adecf90b7b3eec5413d3b59094ad4e3a84f1d",
          "md5": "35aea4e3a05f36054dc31654b529e9e4",
          "sha256": "6c87f03236ee5d7da50bec4b8572d58040817db48d936fafdab9bee06d2a371a"
        },
        "downloads": -1,
        "filename": "feature-selection-ga-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "35aea4e3a05f36054dc31654b529e9e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7048,
        "upload_time": "2020-09-28T08:18:31",
        "upload_time_iso_8601": "2020-09-28T08:18:31.753304Z",
        "url": "https://files.pythonhosted.org/packages/43/4a/a72b1431d02d157214aaec7adecf90b7b3eec5413d3b59094ad4e3a84f1d/feature-selection-ga-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31abcf4a09e0d6cf9d57d5326d40534cebcb2b6a95d66bd77f589ff95ef7966d",
          "md5": "4a4dee4b02057225355cb73102a64924",
          "sha256": "e94e63b402c84d115c16d9f8a617c19d29d8c88ad70376389b139ecf52d5d1e1"
        },
        "downloads": -1,
        "filename": "feature_selection_ga-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a4dee4b02057225355cb73102a64924",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 7403,
        "upload_time": "2020-09-29T05:04:55",
        "upload_time_iso_8601": "2020-09-29T05:04:55.693873Z",
        "url": "https://files.pythonhosted.org/packages/31/ab/cf4a09e0d6cf9d57d5326d40534cebcb2b6a95d66bd77f589ff95ef7966d/feature_selection_ga-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e31819770f04eb5e61a11804b3c4ca7ee24789e16a11b7141aa071dbd2c6c91",
          "md5": "28ee134cfdfebdb7033a746c729eef2f",
          "sha256": "6dbbcdb297fc9884e90f17e366af1a855ccb72221bfe5ab377d5838de39b3e58"
        },
        "downloads": -1,
        "filename": "feature-selection-ga-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "28ee134cfdfebdb7033a746c729eef2f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10861,
        "upload_time": "2020-09-29T05:04:56",
        "upload_time_iso_8601": "2020-09-29T05:04:56.821275Z",
        "url": "https://files.pythonhosted.org/packages/2e/31/819770f04eb5e61a11804b3c4ca7ee24789e16a11b7141aa071dbd2c6c91/feature-selection-ga-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b53a4281c3bdf9a7f90aef7664ed9c332d9a6bc9ff3d4910f89a2a3f2d2d4c0b",
          "md5": "63a68cf53e87f2c51f3b446a7cdb9828",
          "sha256": "d786efcd048825c0d8bdb308d38354f73e5c308dfd2321a1264f3bbb937bba62"
        },
        "downloads": -1,
        "filename": "feature_selection_ga-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63a68cf53e87f2c51f3b446a7cdb9828",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 7421,
        "upload_time": "2020-09-29T06:55:39",
        "upload_time_iso_8601": "2020-09-29T06:55:39.990324Z",
        "url": "https://files.pythonhosted.org/packages/b5/3a/4281c3bdf9a7f90aef7664ed9c332d9a6bc9ff3d4910f89a2a3f2d2d4c0b/feature_selection_ga-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf8ca4ac6ef00e0ef551c66a534188472d19554b6aa259ff2cd56acaa4bc43fa",
          "md5": "60b1a98e7a136c7864f288bf4407385f",
          "sha256": "1737b83b977e044337674f77b1e452363660bee9184b2b7312c1e587f31d953c"
        },
        "downloads": -1,
        "filename": "feature-selection-ga-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "60b1a98e7a136c7864f288bf4407385f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10911,
        "upload_time": "2020-09-29T06:55:40",
        "upload_time_iso_8601": "2020-09-29T06:55:40.953784Z",
        "url": "https://files.pythonhosted.org/packages/cf/8c/a4ac6ef00e0ef551c66a534188472d19554b6aa259ff2cd56acaa4bc43fa/feature-selection-ga-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b53a4281c3bdf9a7f90aef7664ed9c332d9a6bc9ff3d4910f89a2a3f2d2d4c0b",
        "md5": "63a68cf53e87f2c51f3b446a7cdb9828",
        "sha256": "d786efcd048825c0d8bdb308d38354f73e5c308dfd2321a1264f3bbb937bba62"
      },
      "downloads": -1,
      "filename": "feature_selection_ga-0.1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "63a68cf53e87f2c51f3b446a7cdb9828",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 7421,
      "upload_time": "2020-09-29T06:55:39",
      "upload_time_iso_8601": "2020-09-29T06:55:39.990324Z",
      "url": "https://files.pythonhosted.org/packages/b5/3a/4281c3bdf9a7f90aef7664ed9c332d9a6bc9ff3d4910f89a2a3f2d2d4c0b/feature_selection_ga-0.1.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf8ca4ac6ef00e0ef551c66a534188472d19554b6aa259ff2cd56acaa4bc43fa",
        "md5": "60b1a98e7a136c7864f288bf4407385f",
        "sha256": "1737b83b977e044337674f77b1e452363660bee9184b2b7312c1e587f31d953c"
      },
      "downloads": -1,
      "filename": "feature-selection-ga-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "60b1a98e7a136c7864f288bf4407385f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10911,
      "upload_time": "2020-09-29T06:55:40",
      "upload_time_iso_8601": "2020-09-29T06:55:40.953784Z",
      "url": "https://files.pythonhosted.org/packages/cf/8c/a4ac6ef00e0ef551c66a534188472d19554b6aa259ff2cd56acaa4bc43fa/feature-selection-ga-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}