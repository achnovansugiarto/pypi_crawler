{
  "info": {
    "author": "soad003",
    "author_email": "michael.froewis@gmx.at",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Topic :: Software Development :: Disassemblers",
      "Topic :: Utilities"
    ],
    "description": ".. _Stackoverflow: https://stackoverflow.com/questions/21530577/fatal-error-python-h-no-such-file-or-directory\n\n.. _venv: https://docs.python.org/3/library/venv.html\n\n.. image:: https://github.com/uibk-ethpector/ethpector/raw/main/misc/logo.png\n   :target: https://github.com/uibk-ethpector/ethpector/raw/main/misc/logo.png\n   :align: center\n   :alt: logo\n   :width: 50px\n\n\n\n.. image:: https://github.com/uibk-ethpector/ethpector/actions/workflows/tests.yaml/badge.svg\n    :target: https://github.com/uibk-ethpector/ethpector/actions/workflows/tests.yaml\n    :alt: tests\n\n.. image:: https://github.com/uibk-ethpector/ethpector/actions/workflows/build.yaml/badge.svg\n    :target: https://github.com/uibk-ethpector/ethpector/actions/workflows/build.yaml\n    :alt: build\n\n.. image:: https://img.shields.io/pypi/v/ethpector.svg\n    :target: https://pypi.org/project/ethpector/\n    :alt: pypi-version\n\n.. image:: https://img.shields.io/badge/docs%20here-blue.svg\n    :target: https://uibk-ethpector.github.io/ethpector/\n    :alt: docs\n\n=========\nEthpector\n=========\n\n    Ethpector extracts useful information from smart contract binaries.\n\n\nSmart contracts are computer programs that coordinate financial agreements on blockchain systems. Although smart contract platforms are transparent in general smart contracts can be pretty opaque if their source-code is not available.\n\nEthpector sets out to provide tools to analyze smart contract with and without access to their source-code. Its main focus is to provide tools and heuristics for the automated analysis and classification of smart contracts.\n\nCurrently the tool enables:\n\n- Fetching code by addresses (via web3 rpc)\n- Fetching source-code for addresses (Etherscan and Sourcify)\n- Recovering interfaces including logs from binaries\n- Resolving function and event selectors (via 4bytes and more)\n- It uses control-flow analysis and symbolic execution (mythril) to extract data like calls, stores, logs, etc. including parameters if possible\n- It creates annotated disassembly\n- It simple contract classification method based on interfaces and bytecode\n- Parsing metadata like swarm and ipfs hashes\n\nFor a more advanced example of how to use this data look at the examples in the experiments folder.\n\nUsage\n=====\n\nTo install run\n::\n\n    > pip install ethpector\n\nor build from source directly by\n\n::\n\n    > make install\n\nUse as follows:\n::\n\n    usage: ethpector [-h] [--version] [-r rpc] [-e etherscan_token] [-c] [-v] [-vv] [-d] [-a] [-f] [--dont_drop_metadatastring] [--output OUTPUT [OUTPUT ...]] [--output_dir OUTPUT_DIR] contract\n\n    ethpector -- getting insights into evm binaries.\n\n    positional arguments:\n      contract              EVM input bytecode or address if -a is provided\n\noptions:\n  -h, --help                                        show this help message and exit.\n  --version                                         show program's version number and exit.\n  -r rpc, --rpc rpc                                 Ethereum node RPC url.\n  -e etherscan_token, --etherscan etherscan_token   Etherscan access token.\n  -c, --concolic                                    Symbolic execution engine loads values (storage state, call targets) from a node via RPC.\n  -v, --verbose                                     set loglevel to INFO.\n  -vv, --very-verbose                               set loglevel to DEBUG.\n  -d, --deploy                                      Sets if deployment code is provided. EXPERIMENTAL.\n  -a, --address                                     Analyse address: data is loaded either via RPC or Etherscan.\n  -f, --tofile                                      Dump output as files.\n  --offline                                         Do not use any online resources.\n  --nodotenv                                        Do not load dotenv file to initialize config values.\n  --dont_drop_metadatastring                        Includes the metadata string to the bytecode analysis.\n  --output OUTPUT                                   Output that should be produced: summary|disassembly|sourcecode|all|basicblocks|calls|storage|functions|known_interfaces. Note: Multiple OUTPUTS possible.\n  --output_dir OUTPUT_DIR                           Directory to save the results if -f is specified. Default is ethspector-output/.\n\nFor improved analysis results bot an etherscan api token as well as a ethereum node is beneficial.\nThey can either be configured via commandline options (--rpc and --etherscan), via environment variables or .env files.\n\nAn example .env file could look as follows:\n::\n\n    ETHPECTOR_ETHERSCAN_TOKEN=[YOUR ETHERSCAN TOKEN]\n    ETHPECTOR_RPC=https://mainnet.infura.io/v3/[YOUR INFURA TOKEN]\n    ETHPECTOR_CHAINID=1\n    ETHPECTOR_MYTHRIL_EXECUTION_TIMEOUT=100\n    ETHPECTOR_MYTHRIL_CREATE_TIMEOUT=60\n    ETHPECTOR_MYTHRIL_MAX_DEPTH=512\n    ETHPECTOR_MYTHRIL_SOLVER_TIMEOUT=200000\n\nA full list of configurable options can be found in src/ethpector/config/config.py.\n\nThe example folder holds some interesting binaries as well as addresses to test on.\n\nDevelopment\n===========\n\nit is advised to use a virtual environment (venv) for development. Run the following command to initialize one\n::\n\n    > python3 -m venv .venv\n\nand activate it (in bash) using\n\n::\n\n    > source .venv/bin/activate\n\n For more information refer to (venv_). Run\n\n::\n\n    > make dev\n\nto initialize the dev environment.\nIf you want to install ethpector in development mode run\n\n::\n\n    > make install-dev\n\nBefore committing anything to the repository please format, lint and test your code in that order. Fix all linter warnings and make sure all test are passing before a commit.\n\nUse the following commands for that:\n::\n\n    > make format\n    > make lint\n    > make test\n\nor equivalently run\n::\n\n    > make pre-commit\n\nSome slow tests are excluded when running make test. Occasionally, one should run\n::\n\n    > make test-all\n\nto run the entire test-suite.\n\n\nLinting and formatting should be automatically executed on every git commit, using pre-commit.\n\nTo create the documentation please run:\n::\n\n    > make docs\n\nCreating the docs need python dev dependencies to build see (Stackoverflow_)\n\n\nCredits\n=======\n\nWe thank all the developers of mythril for their great work. Without which this project would not exist.\n\n - `Mythril <https://github.com/ConsenSys/mythril>`_\n\nWe would like to thank the following projects for inspiration.\n\n - `Evmdis <https://github.com/Arachnid/evmdis>`_\n - `gsalzer s ethutils <https://github.com/gsalzer/ethutils/blob/main/ethutils/section.py>`_\n\nSimilar Projects\n================\n\nThe following section contains a couple of similar projects and useful libraries that could serve as an alternative or to amend ethpector when analyzing smart contract binaries.\n\n - `eveem <https://eveem.org/api/>`_\n - `pakala <https://www.palkeo.com/en/projets/ethereum/pakala.html>`_\n - `manticore <https://github.com/trailofbits/manticore>`_\n - `panoramix decompiler <https://github.com/palkeo/panoramix>`_\n - `hevm <https://github.com/dapphub/dapptools>`_\n - `ethtx <https://github.com/ethtx/ethtx>`_\n - `slither <https://github.com/crytic/slither>`_\n\nFunding\n=======\n\nThis project was created in the course of the KRYPTOMONITOR project.\n\n    The security research project KRYPTOMONITOR is funded by the Austrian\n    security research programme KIRAS of the Federal Ministry of Agriculture,\n    Regions and Tourism (BMLRT).\n\n- `Kryptomonitor Project <https://kryptomonitor-project.info/>`_\n",
    "description_content_type": "text/x-rst; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/uibk-ethpector/ethpector/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ethpector",
    "package_url": "https://pypi.org/project/ethpector/",
    "platform": "any",
    "project_url": "https://pypi.org/project/ethpector/",
    "project_urls": {
      "Changelog": "https://github.com/uibk-ethpector/ethpector/blob/main/CHANGELOG.rst",
      "Documentation": "https://uibk-ethpector.github.io/ethpector/",
      "Download": "https://pypi.org/project/ethpector/#files",
      "Homepage": "https://github.com/uibk-ethpector/ethpector/",
      "Source": "https://github.com/uibk-ethpector/ethpector/"
    },
    "release_url": "https://pypi.org/project/ethpector/0.1.8/",
    "requires_dist": [
      "mythril (==0.22.40)",
      "pydantic (>=1.9.0)",
      "pyevmasm (>=0.2.3)",
      "web3 (>=5.28.0)",
      "etherscan-python (>=2.1.0)",
      "requests (>=2.27.1)",
      "diskcache (>=5.4.0)",
      "cbor2 (>=5.4.2)",
      "python-dotenv (>=0.19.2)",
      "eth-abi (>=2.1.1)",
      "pyPEG2 (>=2.15.2)",
      "pyvis (>=0.2.0)",
      "networkx (>=2.8.0)",
      "netgraph (>=4.4.1)",
      "pydot (==1.4.2)",
      "importlib-metadata ; python_version < \"3.8\"",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "flake8 (==4.0.1) ; extra == 'dev'",
      "flake8-comprehensions (==3.8.0) ; extra == 'dev'",
      "black (==22.3.0) ; extra == 'dev'",
      "tox ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "setuptools-scm ; extra == 'dev'",
      "setuptools ; extra == 'testing'",
      "pytest ; extra == 'testing'",
      "pytest-cov ; extra == 'testing'"
    ],
    "requires_python": "",
    "summary": "Ethpector extracts useful information from smart contracts.",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14625001,
  "releases": {
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a4942815e1f9a6cbc4ea5eb4322e8fe869d3e4433f790f3bdcd935293605565",
          "md5": "4759710ae069c23d9003448ade84aef6",
          "sha256": "8edea21dbc674d0e7298bfe7a4233251800cb9ecadb4fae063985b70cb811ee9"
        },
        "downloads": -1,
        "filename": "ethpector-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4759710ae069c23d9003448ade84aef6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 55885,
        "upload_time": "2022-08-01T11:51:56",
        "upload_time_iso_8601": "2022-08-01T11:51:56.630490Z",
        "url": "https://files.pythonhosted.org/packages/8a/49/42815e1f9a6cbc4ea5eb4322e8fe869d3e4433f790f3bdcd935293605565/ethpector-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57ac2ee032c6eb7695215f4dd0d77e67045db00df2f7fd9b43f8a5ff855e6fd9",
          "md5": "648513f2eb0d6d955debadc05f7cec72",
          "sha256": "09c676e86fe515cf0b1162ed3eacf66b9a6c8b5dcc10777e13c25cc8716eff90"
        },
        "downloads": -1,
        "filename": "ethpector-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "648513f2eb0d6d955debadc05f7cec72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 169464,
        "upload_time": "2022-08-01T11:52:00",
        "upload_time_iso_8601": "2022-08-01T11:52:00.424214Z",
        "url": "https://files.pythonhosted.org/packages/57/ac/2ee032c6eb7695215f4dd0d77e67045db00df2f7fd9b43f8a5ff855e6fd9/ethpector-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3b1e3fbe8d25d99fe07cca658856c273135f1f8aa8bc27e5cbbc58394f57c16",
          "md5": "6960f5267d05bcb0e4719ed4eecf4c0a",
          "sha256": "058a3a17d1a09dffab724fa4e2fc7749be85b436817d523a8ecc62e4b5a688e8"
        },
        "downloads": -1,
        "filename": "ethpector-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6960f5267d05bcb0e4719ed4eecf4c0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 55970,
        "upload_time": "2022-08-01T14:40:18",
        "upload_time_iso_8601": "2022-08-01T14:40:18.077743Z",
        "url": "https://files.pythonhosted.org/packages/e3/b1/e3fbe8d25d99fe07cca658856c273135f1f8aa8bc27e5cbbc58394f57c16/ethpector-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02d821854c885789e0b6c10922fed4dbac8d794072005111a3540b3a95d0ad7c",
          "md5": "06a3a06bf24570a749731dd7b94b9751",
          "sha256": "62275f355f7e763326102b47027cea87a443ffb53085f966688d5d9e169f6e64"
        },
        "downloads": -1,
        "filename": "ethpector-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "06a3a06bf24570a749731dd7b94b9751",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 169814,
        "upload_time": "2022-08-01T14:40:20",
        "upload_time_iso_8601": "2022-08-01T14:40:20.119424Z",
        "url": "https://files.pythonhosted.org/packages/02/d8/21854c885789e0b6c10922fed4dbac8d794072005111a3540b3a95d0ad7c/ethpector-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb79084a690a2a792be674e5fcd247de611f87ec07b9c51dd7142d2e19351432",
          "md5": "371ba5e1fa0228921ac2bb1c1e49633e",
          "sha256": "56357d01da6f38b7598015fed5ef5bf095e4c1eec660e0655f21536455ed5b98"
        },
        "downloads": -1,
        "filename": "ethpector-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "371ba5e1fa0228921ac2bb1c1e49633e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 55980,
        "upload_time": "2022-08-02T10:14:30",
        "upload_time_iso_8601": "2022-08-02T10:14:30.378401Z",
        "url": "https://files.pythonhosted.org/packages/fb/79/084a690a2a792be674e5fcd247de611f87ec07b9c51dd7142d2e19351432/ethpector-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c36e2ae169f0170c2fee0d890874d4c077403ff7855063fa431cdc6c7935282",
          "md5": "3c0367a7b0e76cbf103436e49456a12b",
          "sha256": "55150f821edb021ffdb79e733a9f4b78b5a0bf1b9989a0f678d49341886f0fc8"
        },
        "downloads": -1,
        "filename": "ethpector-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "3c0367a7b0e76cbf103436e49456a12b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 169802,
        "upload_time": "2022-08-02T10:14:32",
        "upload_time_iso_8601": "2022-08-02T10:14:32.867490Z",
        "url": "https://files.pythonhosted.org/packages/3c/36/e2ae169f0170c2fee0d890874d4c077403ff7855063fa431cdc6c7935282/ethpector-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb79084a690a2a792be674e5fcd247de611f87ec07b9c51dd7142d2e19351432",
        "md5": "371ba5e1fa0228921ac2bb1c1e49633e",
        "sha256": "56357d01da6f38b7598015fed5ef5bf095e4c1eec660e0655f21536455ed5b98"
      },
      "downloads": -1,
      "filename": "ethpector-0.1.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "371ba5e1fa0228921ac2bb1c1e49633e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 55980,
      "upload_time": "2022-08-02T10:14:30",
      "upload_time_iso_8601": "2022-08-02T10:14:30.378401Z",
      "url": "https://files.pythonhosted.org/packages/fb/79/084a690a2a792be674e5fcd247de611f87ec07b9c51dd7142d2e19351432/ethpector-0.1.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c36e2ae169f0170c2fee0d890874d4c077403ff7855063fa431cdc6c7935282",
        "md5": "3c0367a7b0e76cbf103436e49456a12b",
        "sha256": "55150f821edb021ffdb79e733a9f4b78b5a0bf1b9989a0f678d49341886f0fc8"
      },
      "downloads": -1,
      "filename": "ethpector-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "3c0367a7b0e76cbf103436e49456a12b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 169802,
      "upload_time": "2022-08-02T10:14:32",
      "upload_time_iso_8601": "2022-08-02T10:14:32.867490Z",
      "url": "https://files.pythonhosted.org/packages/3c/36/e2ae169f0170c2fee0d890874d4c077403ff7855063fa431cdc6c7935282/ethpector-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}