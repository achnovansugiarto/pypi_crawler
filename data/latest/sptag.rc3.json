{
  "info": {
    "author": "Microsoft SPTAG Team",
    "author_email": "cheqi@microsoft.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SPTAG: A library for fast approximate nearest neighbor search\n\n[![MIT licensed](https://img.shields.io/badge/license-MIT-yellow.svg)](https://github.com/Microsoft/SPTAG/blob/master/LICENSE)\n[![Build status](https://sysdnn.visualstudio.com/SPTAG/_apis/build/status/SPTAG-GITHUB)](https://sysdnn.visualstudio.com/SPTAG/_build/latest?definitionId=2)\n\n## **SPTAG**\n SPTAG (Space Partition Tree And Graph) is a library for large scale vector approximate nearest neighbor search scenario released by [Microsoft Research (MSR)](https://www.msra.cn/) and [Microsoft Bing](http://bing.com). \n\n <p align=\"center\">\n <img src=\"docs/img/sptag.png\" alt=\"architecture\" width=\"500\"/>\n </p>\n\n\n\n## **Introduction**\n \nThis library assumes that the samples are represented as vectors and that the vectors can be compared by L2 distances or cosine distances. \nVectors returned for a query vector are the vectors that have smallest L2 distance or cosine distances with the query vector. \n\nSPTAG provides two methods: kd-tree and relative neighborhood graph (SPTAG-KDT) \nand balanced k-means tree and relative neighborhood graph (SPTAG-BKT).\nSPTAG-KDT is advantageous in index building cost, and SPTAG-BKT is advantageous in search accuracy in very high-dimensional data.\n\n\n\n## **How it works**\n\nSPTAG is inspired by the NGS approach [[WangL12](#References)]. It contains two basic modules: index builder and searcher. \nThe RNG is built on the k-nearest neighborhood graph [[WangWZTG12](#References), [WangWJLZZH14](#References)] \nfor boosting the connectivity. Balanced k-means trees are used to replace kd-trees to avoid the inaccurate distance bound estimation in kd-trees for very high-dimensional vectors.\nThe search begins with the search in the space partition trees for \nfinding several seeds to start the search in the RNG. \nThe searches in the trees and the graph are iteratively conducted. \n\n ## **Highlights**\n  * Fresh update: Support online vector deletion and insertion\n  * Distributed serving: Search over multiple machines\n\n ## **Build**\n\n### **Requirements**\n\n* swig >= 3.0\n* cmake >= 3.12.0\n* boost >= 1.67.0\n\n### **Fast clone**\n\n```\nset GIT_LFS_SKIP_SMUDGE=1\ngit clone --recurse-submodules https://github.com/microsoft/SPTAG\n\nOR\n\ngit config --global filter.lfs.smudge \"git-lfs smudge --skip -- %f\"\ngit config --global filter.lfs.process \"git-lfs filter-process --skip\"\n```\n\n### **Install**\n\n> For Linux:\n```bash\nmkdir build\ncd build && cmake .. && make\n```\nIt will generate a Release folder in the code directory which contains all the build targets.\n\n> For Windows:\n```bash\nmkdir build\ncd build && cmake -A x64 ..\n```\nIt will generate a SPTAGLib.sln in the build directory. \nCompiling the ALL_BUILD project in the Visual Studio (at least 2019) will generate a Release directory which contains all the build targets.\n\nFor detailed instructions on installing Windows binaries, please see [here](docs/WindowsInstallation.md)\n\n> Using Docker:\n```bash\ndocker build -t sptag .\n```\nWill build a docker container with binaries in `/app/Release/`.\n\n### **Verify** \n\nRun the SPTAGTest (or Test.exe) in the Release folder to verify all the tests have passed.\n\n### **Usage**\n\nThe detailed usage can be found in [Get started](docs/GettingStart.md). There is also an end-to-end tutorial for building vector search online service using Python Wrapper in [Python Tutorial](docs/Tutorial.ipynb).\nThe detailed parameters tunning can be found in [Parameters](docs/Parameters.md).\n\n## **References**\nPlease cite SPTAG in your publications if it helps your research:\n```\n@inproceedings{ChenW21,\n  author = {Qi Chen and \n            Bing Zhao and \n            Haidong Wang and \n            Mingqin Li and \n            Chuanjie Liu and \n            Zengzhong Li and \n            Mao Yang and \n            Jingdong Wang},\n  title = {SPANN: Highly-efficient Billion-scale Approximate Nearest Neighbor Search},\n  booktitle = {35th Conference on Neural Information Processing Systems (NeurIPS 2021)},\n  year = {2021}\n}\n\n@manual{ChenW18,\n  author    = {Qi Chen and\n               Haidong Wang and\n               Mingqin Li and \n               Gang Ren and\n               Scarlett Li and\n               Jeffery Zhu and\n               Jason Li and\n               Chuanjie Liu and\n               Lintao Zhang and\n               Jingdong Wang},\n  title     = {SPTAG: A library for fast approximate nearest neighbor search},\n  url       = {https://github.com/Microsoft/SPTAG},\n  year      = {2018}\n}\n\n@inproceedings{WangL12,\n  author    = {Jingdong Wang and\n               Shipeng Li},\n  title     = {Query-driven iterated neighborhood graph search for large scale indexing},\n  booktitle = {ACM Multimedia 2012},\n  pages     = {179--188},\n  year      = {2012}\n}\n\n@inproceedings{WangWZTGL12,\n  author    = {Jing Wang and\n               Jingdong Wang and\n               Gang Zeng and\n               Zhuowen Tu and\n               Rui Gan and\n               Shipeng Li},\n  title     = {Scalable k-NN graph construction for visual descriptors},\n  booktitle = {CVPR 2012},\n  pages     = {1106--1113},\n  year      = {2012}\n}\n\n@article{WangWJLZZH14,\n  author    = {Jingdong Wang and\n               Naiyan Wang and\n               You Jia and\n               Jian Li and\n               Gang Zeng and\n               Hongbin Zha and\n               Xian{-}Sheng Hua},\n  title     = {Trinary-Projection Trees for Approximate Nearest Neighbor Search},\n  journal   = {{IEEE} Trans. Pattern Anal. Mach. Intell.},\n  volume    = {36},\n  number    = {2},\n  pages     = {388--403},\n  year      = {2014\n}\n```\n\n## **Contribute**\n\nThis project welcomes contributions and suggestions from all the users.\n\nWe use [GitHub issues](https://github.com/Microsoft/SPTAG/issues) for tracking suggestions and bugs.\n\n## **License**\nThe entire codebase is under [MIT license](https://github.com/Microsoft/SPTAG/blob/master/LICENSE)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Microsoft/SPTAG",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sptag",
    "package_url": "https://pypi.org/project/sptag/",
    "platform": null,
    "project_url": "https://pypi.org/project/sptag/",
    "project_urls": {
      "Homepage": "https://github.com/Microsoft/SPTAG"
    },
    "release_url": "https://pypi.org/project/sptag/1.6.2/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": ">=3.6",
    "summary": "SPTAG: A library for fast approximate nearest neighbor search",
    "version": "1.6.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17428608,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9c9db08fc49ab4f92ca51158920b4285dd57105d9ab113d20444a48468ca818",
          "md5": "3877964d221f7d3d0dbaf9bdc6ab9f16",
          "sha256": "cc24041069e803bb35260b3460133f16243138882d084623e238006c8fa8ca21"
        },
        "downloads": -1,
        "filename": "sptag-1.0-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "3877964d221f7d3d0dbaf9bdc6ab9f16",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22625381,
        "upload_time": "2022-03-22T06:25:36",
        "upload_time_iso_8601": "2022-03-22T06:25:36.313260Z",
        "url": "https://files.pythonhosted.org/packages/d9/c9/db08fc49ab4f92ca51158920b4285dd57105d9ab113d20444a48468ca818/sptag-1.0-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51250bb6a3a5d7da9b76c26174de6bdb31e103908e3835008c911ca99c0f7756",
          "md5": "cf21143d799f937b8136c0c2120bab90",
          "sha256": "5bc842aec82b522fb62462db3a5fc545bad194163fc02a38370acfb8b2bdb838"
        },
        "downloads": -1,
        "filename": "sptag-1.0.1-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "cf21143d799f937b8136c0c2120bab90",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 3667853,
        "upload_time": "2022-05-23T11:40:47",
        "upload_time_iso_8601": "2022-05-23T11:40:47.267520Z",
        "url": "https://files.pythonhosted.org/packages/51/25/0bb6a3a5d7da9b76c26174de6bdb31e103908e3835008c911ca99c0f7756/sptag-1.0.1-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a83f57be37149f16415449315cd15d7e38bb89cbf17641df39791fff9133c4f5",
          "md5": "bbdfa3680b44f08f1551ddfe28eb5eb8",
          "sha256": "f6fd1cf5c71d4d7506a9b94012a50a2214cff90ee36d64752e7443fab8b81591"
        },
        "downloads": -1,
        "filename": "sptag-1.6.2-py37-none-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "bbdfa3680b44f08f1551ddfe28eb5eb8",
        "packagetype": "bdist_wheel",
        "python_version": "py37",
        "requires_python": ">=3.6",
        "size": 3052102,
        "upload_time": "2023-03-24T07:51:03",
        "upload_time_iso_8601": "2023-03-24T07:51:03.009266Z",
        "url": "https://files.pythonhosted.org/packages/a8/3f/57be37149f16415449315cd15d7e38bb89cbf17641df39791fff9133c4f5/sptag-1.6.2-py37-none-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a642520b20bb98bfb79c45d93e398eb40795f841b063e354e882ffcd7813025",
          "md5": "246442a0f4785333daba8302d947cb5f",
          "sha256": "6510c877b516834eb7e404f721fc46c0a81172922ddffef0fce559131171da83"
        },
        "downloads": -1,
        "filename": "sptag-1.6.2-py38-none-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "246442a0f4785333daba8302d947cb5f",
        "packagetype": "bdist_wheel",
        "python_version": "py38",
        "requires_python": ">=3.6",
        "size": 3052261,
        "upload_time": "2023-03-24T08:34:26",
        "upload_time_iso_8601": "2023-03-24T08:34:26.189940Z",
        "url": "https://files.pythonhosted.org/packages/7a/64/2520b20bb98bfb79c45d93e398eb40795f841b063e354e882ffcd7813025/sptag-1.6.2-py38-none-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a83f57be37149f16415449315cd15d7e38bb89cbf17641df39791fff9133c4f5",
        "md5": "bbdfa3680b44f08f1551ddfe28eb5eb8",
        "sha256": "f6fd1cf5c71d4d7506a9b94012a50a2214cff90ee36d64752e7443fab8b81591"
      },
      "downloads": -1,
      "filename": "sptag-1.6.2-py37-none-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "bbdfa3680b44f08f1551ddfe28eb5eb8",
      "packagetype": "bdist_wheel",
      "python_version": "py37",
      "requires_python": ">=3.6",
      "size": 3052102,
      "upload_time": "2023-03-24T07:51:03",
      "upload_time_iso_8601": "2023-03-24T07:51:03.009266Z",
      "url": "https://files.pythonhosted.org/packages/a8/3f/57be37149f16415449315cd15d7e38bb89cbf17641df39791fff9133c4f5/sptag-1.6.2-py37-none-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a642520b20bb98bfb79c45d93e398eb40795f841b063e354e882ffcd7813025",
        "md5": "246442a0f4785333daba8302d947cb5f",
        "sha256": "6510c877b516834eb7e404f721fc46c0a81172922ddffef0fce559131171da83"
      },
      "downloads": -1,
      "filename": "sptag-1.6.2-py38-none-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "246442a0f4785333daba8302d947cb5f",
      "packagetype": "bdist_wheel",
      "python_version": "py38",
      "requires_python": ">=3.6",
      "size": 3052261,
      "upload_time": "2023-03-24T08:34:26",
      "upload_time_iso_8601": "2023-03-24T08:34:26.189940Z",
      "url": "https://files.pythonhosted.org/packages/7a/64/2520b20bb98bfb79c45d93e398eb40795f841b063e354e882ffcd7813025/sptag-1.6.2-py38-none-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}