{
  "info": {
    "author": null,
    "author_email": "Ilya Cherezov <cherezov.ia@phystech.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Pure DI\n![test](https://github.com/lionsoon/pure_di/actions/workflows/nox-test.yml/badge.svg)\n![pypi](https://img.shields.io/pypi/v/pure-di?color=%2334D058)\n![python](https://img.shields.io/pypi/pyversions/pure-di.svg?color=%2334D058)\n\n**Source Code**: https://github.com/lionsoon/pure_di\n**Features**:\n* Lightweight - no external dependencies (only `typing_extensions`)\n* Based on type hints - no configuration required, less boilerplate   \n* Pytest integration - writing unit tests was never so easy!\n* `yeild` powered - just `yeild` your component and then write closing steps\n* Async support - sometimes we need `await` something in build process\n\n### Install\n```commandline\npip install pure-di\n```\n### Example \nLet's assume we have following `services.py` file, witch contains components we want to construct.    \nFor example to be more \"real-world\" we will use `httpx` and `sqlalchemy` packages:\n\n```python\n# services.py\nimport ...\n\n@dataclass\nclass Settings:\n    db_uri: str\n\n@dataclass\nclass Database:\n    engine: AsyncEngine\n\n@dataclass\nclass Application:\n    client: httpx.AsyncClient\n    database: Database\n    \n    async def run(self): ...\n\n```\nThe main concept of `pure_di` is `Provider` (and `AsyncProvider` if we need async).  \nProviders consist of factories - callables that build components. Factories are included to the provider using `provider.include_factory` method.  \nAll factory arguments should be annotated. And return type should be specified either by return annotation, or by `service_type` argument (see example below).  \n\nLet's create an `AsyncProvider` for our services in `provider.py` file:\n\n```python\n# provider.py\nimport httpx\nfrom pure_di import AsyncProvider\nfrom sqlalchemy.ext.asyncio import create_async_engine, AsyncEngine\n\nfrom services import Settings, Database, Application\n\nprovider = AsyncProvider()\n\n\n@provider.include_factory\ndef provide_settings() -> Settings:\n    return Settings(db_uri=\"sqlite://...\")\n\n\n@provider.include_factory(service_type=AsyncEngine)\nasync def provide_engine(settings: Settings):\n    engine = create_async_engine(settings.db_uri)\n    yield engine\n    await engine.dispose()\n\n\nprovider.include_factory(Database, service_type=Database)\nprovider.include_factory(Application, service_type=Application)\n```\nNow in `main.py` we can use `provider.build_async` method to construct `Container`. \n`Container` is similar to dict, where keys are services types, and values are services. \nIt also contains `container.partial_solve` method that works similar to `functools.partial` and solves those arguments whose types it contains.\n```python\n# main.py\nfrom provider import provider\nfrom services import Database, Application\n\nasync def do_some_work(database: Database, some_data):\n    ...\n\nasync def main():\n    async with provider.build_async() as container:\n        partial_solved_do_some_work = container.partial_solve(do_some_work)\n        await partial_solved_do_some_work(some_data=\"some_data\")\n        application = container[Application]\n        await application.run()\n```\n\n# Test\nLet's write some tests using same example and `pytest`\n\n```python\nfrom pure_di.pytest import pytest_provide_async\n\nfrom provider import provider\nfrom services import Database\nfrom main import do_some_work\n\n\n@Provider.from_factory(service_type=Database)\ndef mock_database():\n    return ...\n\n\n@pytest_provide_async(provider | mock_database)\n@pytest.mark.asyncio\nasync def test_do_some_work(mocked_database: Database, any_usual_fixture):\n    await do_some_work(mocked_database, some_data=\"some_data\")\n    assert mocked_database.something_to_assert()\n\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "pure-di",
    "package_url": "https://pypi.org/project/pure-di/",
    "platform": null,
    "project_url": "https://pypi.org/project/pure-di/",
    "project_urls": {
      "Home": "https://github.com/lionsoon/light_di"
    },
    "release_url": "https://pypi.org/project/pure-di/0.0.1/",
    "requires_dist": [
      "typing_extensions"
    ],
    "requires_python": ">=3.8",
    "summary": "Simple yet powerful dependency injection framework!",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16526294,
  "releases": {
    "0.0.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "548b22e969000a8ebef497bd840d0363a631b1f984f3e0ed1ed88d6dca45cbe1",
          "md5": "3dfaf725292d240d633e661e7db9333b",
          "sha256": "4145a83fa047532822d5d07a34d54dc8e98a4c69367f8bed221dceae020b4a16"
        },
        "downloads": -1,
        "filename": "pure_di-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3dfaf725292d240d633e661e7db9333b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10012,
        "upload_time": "2023-01-22T22:13:49",
        "upload_time_iso_8601": "2023-01-22T22:13:49.687909Z",
        "url": "https://files.pythonhosted.org/packages/54/8b/22e969000a8ebef497bd840d0363a631b1f984f3e0ed1ed88d6dca45cbe1/pure_di-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "ae02b2569c2a7040aa4a89969e01cbccfb0a1f6600d93441c0ab49f8e331a971",
          "md5": "17def05d8ccf2dce91d375c3ceeb767e",
          "sha256": "30b9e9898c8e5c27b8ee8e10b0185348fd4173efef8de88c00055da5b2655b62"
        },
        "downloads": -1,
        "filename": "pure-di-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "17def05d8ccf2dce91d375c3ceeb767e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13388,
        "upload_time": "2023-01-22T22:13:52",
        "upload_time_iso_8601": "2023-01-22T22:13:52.309626Z",
        "url": "https://files.pythonhosted.org/packages/ae/02/b2569c2a7040aa4a89969e01cbccfb0a1f6600d93441c0ab49f8e331a971/pure-di-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "9343b4d07b0724e824f42cdc2cd9f772e615cb9d1e85ecdef403349f186ffa4c",
          "md5": "0bb02e50670d2a7e3d2f89cd9c930a23",
          "sha256": "90b2b0307c445fadfd14b642708364f4e85d815803fb0dc897e883eab5b4a059"
        },
        "downloads": -1,
        "filename": "pure_di-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0bb02e50670d2a7e3d2f89cd9c930a23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10105,
        "upload_time": "2023-01-22T23:12:03",
        "upload_time_iso_8601": "2023-01-22T23:12:03.142889Z",
        "url": "https://files.pythonhosted.org/packages/93/43/b4d07b0724e824f42cdc2cd9f772e615cb9d1e85ecdef403349f186ffa4c/pure_di-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "b3afff049792c7078698f0a0510e605b6209fd89291a530bcc36c8ab8b2dec0d",
          "md5": "63bbad8b1adae3a390aca953b6e26c18",
          "sha256": "d55a730478e43424eb1e0a9edac4cee0f846a2e21ba3e80bfe1df255890abfa0"
        },
        "downloads": -1,
        "filename": "pure-di-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "63bbad8b1adae3a390aca953b6e26c18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13621,
        "upload_time": "2023-01-22T23:12:05",
        "upload_time_iso_8601": "2023-01-22T23:12:05.323181Z",
        "url": "https://files.pythonhosted.org/packages/b3/af/ff049792c7078698f0a0510e605b6209fd89291a530bcc36c8ab8b2dec0d/pure-di-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "9343b4d07b0724e824f42cdc2cd9f772e615cb9d1e85ecdef403349f186ffa4c",
        "md5": "0bb02e50670d2a7e3d2f89cd9c930a23",
        "sha256": "90b2b0307c445fadfd14b642708364f4e85d815803fb0dc897e883eab5b4a059"
      },
      "downloads": -1,
      "filename": "pure_di-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0bb02e50670d2a7e3d2f89cd9c930a23",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 10105,
      "upload_time": "2023-01-22T23:12:03",
      "upload_time_iso_8601": "2023-01-22T23:12:03.142889Z",
      "url": "https://files.pythonhosted.org/packages/93/43/b4d07b0724e824f42cdc2cd9f772e615cb9d1e85ecdef403349f186ffa4c/pure_di-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "b3afff049792c7078698f0a0510e605b6209fd89291a530bcc36c8ab8b2dec0d",
        "md5": "63bbad8b1adae3a390aca953b6e26c18",
        "sha256": "d55a730478e43424eb1e0a9edac4cee0f846a2e21ba3e80bfe1df255890abfa0"
      },
      "downloads": -1,
      "filename": "pure-di-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "63bbad8b1adae3a390aca953b6e26c18",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 13621,
      "upload_time": "2023-01-22T23:12:05",
      "upload_time_iso_8601": "2023-01-22T23:12:05.323181Z",
      "url": "https://files.pythonhosted.org/packages/b3/af/ff049792c7078698f0a0510e605b6209fd89291a530bcc36c8ab8b2dec0d/pure-di-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}