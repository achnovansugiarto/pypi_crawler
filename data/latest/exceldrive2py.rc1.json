{
  "info": {
    "author": "Mohammad Afsar",
    "author_email": "mohammadafsar415@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "gsheets\n=======\n\n|PyPI version| |License| |Supported Python| |Format|\n\n\n``gsheets`` is a small wrapper around the [`Google Sheets API`_ (v4)](https://docs.google.com/spreadsheets) to provide\nmore convenient access to [`Google Sheets`_](https://docs.google.com/spreadsheets) from Python scripts.\n\ngo to [google console](console.cloud.google.com) <br />\n1.Create a Project in google cloud <br />\n2.through Navigation menu Go ti API'S & Services and go to library <br />\n3.search for google sheets api and enable it <br />\n4.search for google drive api enable it and on the right side corner click on create credentials\nselect google drive api in which api you are using column and web server (eg node js tomcat) in  Where will you be calling the API from dropdown and tick on application data. and then no and press button<br />\n5.fill any name in account and role select project and then editor and type json and submit. it will download the json file .<br />\n6.open json file search client email go to google sheet you want to use and select share and give access to client email and send.<br />\n\n\nLinks\n-----\n\n- GitHub: https://github.com/afsarahmad786/Read-Excel\n- PyPI: https://afsarahmad786.github.io/Read-Excel/\n\n\nInstallation\n------------\n\nThis package runs under Python 2.7, and 3.6+, use pip_ to install:\n\n.. code:: bash\n\n    $ pip install read-excel\n\nThis will also install google-api-python-client_ and its dependencies, notably\nhttplib2_ and oauth2client_, as required dependencies.\n\n\nQuickstart\n----------\n\nLog into the `Google Developers Console`_ with the Google account whose\nspreadsheets you want to access. Create (or select) a project and enable the\n**Drive API** and **Sheets API** (under **Google Apps APIs**).\n\nGo to the **Credentials** for your project and create **New credentials** >\n**OAuth client ID** > of type **Other**. In the list of your **OAuth 2.0 client\nIDs** click **Download JSON** for the Client ID you just created. Save the\nfile as ``client_secrets.json`` in your home directory (user directory).\n\nimport the library and load the data by passing the filename and json file downloaded from console it will return a dataframe and print top 5 rows of your data:\n\n.. code:: python\n\n    >>> import read-excel as rf\n\n    >>> dataframe = rf.load_data(filename_of_your_sheet,json_path)\n\nFor plotting the data you have to pass the dataframe you just loaded and pass the name X axis  columns name and Y axis column name it will plot the data for you:\n\n.. code:: python\n\n    for plotting\n    >>> plot_data(dataframe,\"x-axis-column\",\"y-axis-column\")\n...\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/afsarahmad786/Read-Excel",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "exceldrive2py",
    "package_url": "https://pypi.org/project/exceldrive2py/",
    "platform": "",
    "project_url": "https://pypi.org/project/exceldrive2py/",
    "project_urls": {
      "Homepage": "https://github.com/afsarahmad786/Read-Excel"
    },
    "release_url": "https://pypi.org/project/exceldrive2py/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Read en excel file throgh google drive and plot it",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8315386,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34c3d9ed0a0045067240119cd68e87a4038ef00881faa848dc84fee6514e6f2e",
          "md5": "d9fd44558a9d4f0dded66316b4e07bdf",
          "sha256": "bbbfbc768cee5e2004e92ee29af49d0cdb22a551129db95d1c1ac11e8793f420"
        },
        "downloads": -1,
        "filename": "exceldrive2py-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9fd44558a9d4f0dded66316b4e07bdf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15538,
        "upload_time": "2020-10-01T12:05:08",
        "upload_time_iso_8601": "2020-10-01T12:05:08.806689Z",
        "url": "https://files.pythonhosted.org/packages/34/c3/d9ed0a0045067240119cd68e87a4038ef00881faa848dc84fee6514e6f2e/exceldrive2py-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34c3d9ed0a0045067240119cd68e87a4038ef00881faa848dc84fee6514e6f2e",
        "md5": "d9fd44558a9d4f0dded66316b4e07bdf",
        "sha256": "bbbfbc768cee5e2004e92ee29af49d0cdb22a551129db95d1c1ac11e8793f420"
      },
      "downloads": -1,
      "filename": "exceldrive2py-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d9fd44558a9d4f0dded66316b4e07bdf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15538,
      "upload_time": "2020-10-01T12:05:08",
      "upload_time_iso_8601": "2020-10-01T12:05:08.806689Z",
      "url": "https://files.pythonhosted.org/packages/34/c3/d9ed0a0045067240119cd68e87a4038ef00881faa848dc84fee6514e6f2e/exceldrive2py-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}