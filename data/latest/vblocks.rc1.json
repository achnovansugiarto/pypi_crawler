{
  "info": {
    "author": "Spencer Neveux",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Vblocks\n\nZero-dependency Python library for declaratively building Slack Block Kit UI.\n\n## Requirements\n\n`vblocks` requires Python >= 3.7.\n\n## Installation\n\nInstall vblocks with pip\n\n```bash\n  pip install vblocks\n```\n\n## Usage/Examples\n\nThere are 4 different types of UI components: Blocks, Composition, Elements, and Views.\n\n### Composition Example\n\nComposition elements are the simplest form of UI components. These objects can be used inside of block elements and certain message payloads.\n\n```python\nfrom vblocks import Text\ntext = Text(\n        type=\"mrkdwn\",\n        text=\"A message *with some bold text* and _some italicized text_.\",\n    )\ntext.json()\n```\n\n###### Will generate the following\n\n```json\n{\n  \"type\": \"mrkdwn\",\n  \"text\": \"A message *with some bold text* and _some italicized text_.\"\n}\n```\n\n### Element Example\n\nElements can be used inside of SectionBlocks, ContextBlocks, InputBlocks, and ActionBlocks. These components are similar to standard HTML components, such as Buttons, Checkboxes, Date pickers, and more.\n\n```python\nfrom vblocks import Button\n\nbutton = Button(text=Text(\"plain_text\", \"Click Me\"), action_id=\"button\")\nbutton.json()\n```\n\n###### Will generate the following\n\n```json\n{\n  \"type\": \"button\",\n  \"text\": { \"type\": \"plain_text\", \"text\": \"Click Me\" },\n  \"action_id\": \"button\"\n}\n```\n\n### Block Example\n\nBlocks are components which can be combined to create layouts, with interactive components. These range from ActionBlocks, ContextBlocks, etc.\n\n```python\naction = ActionBlock(\n            block_id=\"actions1\",\n            elements=[\n                StaticSelectMenu(\n                    placeholder=Text(\n                        type=\"plain_text\", text=\"Which witch is the witchiest witch?\"\n                    ),\n                    action_id=\"select_2\",\n                    options=[\n                        Option(\n                            text=Text(type=\"plain_text\", text=\"Matilda\"),\n                            value=\"matilda\",\n                        ),\n                        Option(\n                            text=Text(type=\"plain_text\", text=\"Glinda\"),\n                            value=\"glinda\",\n                        ),\n                        Option(\n                            text=Text(type=\"plain_text\", text=\"Granny Weatherwax\"),\n                            value=\"grannyWeatherwax\",\n                        ),\n                        Option(\n                            text=Text(type=\"plain_text\", text=\"Hermione\"),\n                            value=\"hermione\",\n                        ),\n                    ],\n                ),\n                Button(\n                    text=Text(type=\"plain_text\", text=\"Cancel\"),\n                    action_id=\"button_1\",\n                    value=\"cancel\",\n                ),\n            ],\n        )\naction.json()\n```\n\n###### Will generate the following\n\n```json\n{\n  \"type\": \"actions\",\n  \"block_id\": \"actions1\",\n  \"elements\": [\n    {\n      \"type\": \"static_select\",\n      \"placeholder\": {\n        \"type\": \"plain_text\",\n        \"text\": \"Which witch is the witchiest witch?\"\n      },\n      \"action_id\": \"select_2\",\n      \"options\": [\n        {\n          \"text\": { \"type\": \"plain_text\", \"text\": \"Matilda\" },\n          \"value\": \"matilda\"\n        },\n        {\n          \"text\": { \"type\": \"plain_text\", \"text\": \"Glinda\" },\n          \"value\": \"glinda\"\n        },\n        {\n          \"text\": { \"type\": \"plain_text\", \"text\": \"Granny Weatherwax\" },\n          \"value\": \"grannyWeatherwax\"\n        },\n        {\n          \"text\": { \"type\": \"plain_text\", \"text\": \"Hermione\" },\n          \"value\": \"hermione\"\n        }\n      ]\n    },\n    {\n      \"type\": \"button\",\n      \"text\": { \"type\": \"plain_text\", \"text\": \"Cancel\" },\n      \"value\": \"cancel\",\n      \"action_id\": \"button_1\"\n    }\n  ]\n}\n```\n\n### View Example\n\nViews are visual areas within Modals, Home tabs, and Messages.\n\n```python\nfrom vblocks import Modal, Text, Section, Button, Input\n\nmodal = Modal(\n    title=Text(type=\"plain_text\", text=\"Modal title\"),\n    blocks=[\n        Section(\n            block_id=\"section1\",\n            text=Text(\n                type=\"mrkdwn\",\n                text=\"It's Block Kit...but _in a modal_\",\n            ),\n            accessory=Button(\n                text=Text(type=\"plain_text\", text=\"Click me\"),\n                action_id=\"button_abc\",\n                value=\"Button value\",\n                style=\"danger\",\n            ),\n        ),\n        Input(\n            label=Text(type=\"plain_text\", text=\"Input label\"),\n            element=PlainTextInput(\n                action_id=\"input1\",\n                placeholder=Text(type=\"plain_text\", text=\"Type in here\"),\n                multiline=False,\n            ),\n            optional=False,\n        ),\n    ],\n    close=Text(type=\"plain_text\", text=\"Cancel\"),\n    submit=Text(type=\"plain_text\", text=\"Save\"),\n    private_metadata=\"Shhhhhhhh\",\n    callback_id=\"view_identifier_12\",\n)\nmodal.json()\n```\n\n###### Will generate the following\n\n```json\n{\n  \"type\": \"modal\",\n  \"title\": { \"type\": \"plain_text\", \"text\": \"Modal title\" },\n  \"blocks\": [\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"It's Block Kit...but _in a modal_\"\n      },\n      \"block_id\": \"section1\",\n      \"accessory\": {\n        \"type\": \"button\",\n        \"text\": { \"type\": \"plain_text\", \"text\": \"Click me\" },\n        \"action_id\": \"button_abc\",\n        \"value\": \"Button value\",\n        \"style\": \"danger\"\n      }\n    },\n    {\n      \"type\": \"input\",\n      \"label\": { \"type\": \"plain_text\", \"text\": \"Input label\" },\n      \"element\": {\n        \"type\": \"plain_text_input\",\n        \"action_id\": \"input1\",\n        \"placeholder\": { \"type\": \"plain_text\", \"text\": \"Type in here\" },\n        \"multiline\": false\n      },\n      \"optional\": false\n    }\n  ],\n  \"close\": { \"type\": \"plain_text\", \"text\": \"Cancel\" },\n  \"submit\": { \"type\": \"plain_text\", \"text\": \"Save\" },\n  \"private_metadata\": \"Shhhhhhhh\",\n  \"callback_id\": \"view_identifier_12\"\n}\n```\n\n## Class Reference\n\nBelow is a list of supported Slack UI elements and their respective **Vblocks**:\n\n| **Name**                      | **Type**    | **Class**                 |\n| ----------------------------- | ----------- | ------------------------- |\n| Action                        | Block       | ActionBlock()             |\n| Context                       | Block       | ContextBlock()            |\n| Divider                       | Block       | DividerBlock()            |\n| File                          | Block       | FileBlock()               |\n| Header                        | Block       | HeaderBlock()             |\n| Image                         | Block       | ImageBlock()              |\n| Input                         | Block       | InputBlock()              |\n| Section                       | Block       | SectionBlock()            |\n| Text                          | Composition | Text()                    |\n| Confirmation                  | Composition | Confirmation()            |\n| Option                        | Composition | Option()                  |\n| Option Group                  | Composition | OptionGroup()             |\n| Dispatch Action Configuration | Composition | DispatchAction()          |\n| Filter                        | Composition | Filter()                  |\n| Button                        | Element     | Button()                  |\n| Checkbox Group                | Element     | CheckboxGroup()           |\n| Date Picker                   | Element     | DatePicker()              |\n| Image                         | Element     | Image()                   |\n| Multi Static Select           | Element     | MultiStaticSelect()       |\n| Multi External Select         | Element     | MultiExternalSelect()     |\n| Multi User Select             | Element     | MultiUserSelect()         |\n| Multi Conversation Select     | Element     | MultiConversationSelect() |\n| Multi Channel Select          | Element     | MultiChannelSelect()      |\n| Overflow Menu                 | Element     | OverflowMenu()            |\n| Plain Text Input              | Element     | PlainTextInput()          |\n| Radio Button Group            | Element     | RadioButtonGroup()        |\n| Static Select Menu            | Element     | StaticSelectMenu()        |\n| External Select Menu          | Element     | ExternalSelectMenu()      |\n| User Select Menu              | Element     | UserSelectMenu()          |\n| Conversation Select Menu      | Element     | ConversationSelectMenu()  |\n| Static Select Menu            | Element     | StaticSelectMenu()        |\n| Channel Select Menu           | Element     | ChannelSelectMenu()       |\n| Time Picker                   | Element     | TimePicker()              |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vblocks",
    "package_url": "https://pypi.org/project/vblocks/",
    "platform": null,
    "project_url": "https://pypi.org/project/vblocks/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/vblocks/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13946735,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bf6286abc7a4636fcead1105bd470c89e33323652b7d5021234b733e9848f0d",
          "md5": "09e4aa2db74b5f8214741d0230c2e63e",
          "sha256": "f091cc651bd4de1f1aecc0b3c95756050d5f7d7bc387a00f575ab102e337ba07"
        },
        "downloads": -1,
        "filename": "vblocks-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "09e4aa2db74b5f8214741d0230c2e63e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10624,
        "upload_time": "2022-05-26T15:58:20",
        "upload_time_iso_8601": "2022-05-26T15:58:20.397927Z",
        "url": "https://files.pythonhosted.org/packages/4b/f6/286abc7a4636fcead1105bd470c89e33323652b7d5021234b733e9848f0d/vblocks-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4bf6286abc7a4636fcead1105bd470c89e33323652b7d5021234b733e9848f0d",
        "md5": "09e4aa2db74b5f8214741d0230c2e63e",
        "sha256": "f091cc651bd4de1f1aecc0b3c95756050d5f7d7bc387a00f575ab102e337ba07"
      },
      "downloads": -1,
      "filename": "vblocks-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "09e4aa2db74b5f8214741d0230c2e63e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10624,
      "upload_time": "2022-05-26T15:58:20",
      "upload_time_iso_8601": "2022-05-26T15:58:20.397927Z",
      "url": "https://files.pythonhosted.org/packages/4b/f6/286abc7a4636fcead1105bd470c89e33323652b7d5021234b733e9848f0d/vblocks-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}