{
  "info": {
    "author": "Yasser Bashir",
    "author_email": "yasser.bashir@arbisoft.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ahogeotagger\n\nIf you have thousands of passages of text and you want to search them for hundreds or thousands of search strings, the process can become very cumbersome very soon. This is where ahocorasick search becomes very relevant and blazingly fast. You can read more about the algorithm [here](https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_algorithm). \n\nThis code combines the [very efficient implementation of ahocorasick](https://github.com/WojciechMula/pyahocorasick/) in python with a pre-bundled list of cities, states and countries to tag locations in text.\n\n## Requirements\n\n- Python 3.6 or higher\n- pyahocorasick 1.4.0 or higher\n\n## Installation\n\nUsing PIP via PyPi\n\n```\npip install ahogeotagger\n```\n\n## Usage\n\nRight now the usage is pretty simple. You import and init the tagger with the number of cities you want to search your text for. The cities are in order of population (Tokyo, New york, Mexico City etc.). \n\nThe data for these cities has been prepopulated from the free version of simplemaps database which you can find [here](https://simplemaps.com/data/world-cities).\n\n```\nfrom ahogeotagger import tagger\ntagger.init(num_cities = 10000)\n```\n\nOptionally, if you dont want to use the built-in database of cities, you can provide your own list of cities. The list needs to be a list of tuples with each tuple's values in the following order: \n\n_(id,city,state,country,iso2,iso3,population,lat,lng)_\n\nThe types for ```id``` and ```population``` are ```int```, ```lat``` and ```lng``` are floats and all the rest are strings.\n\n```\ntagger.init(num_cities = 500, cities = [a,b,c])\n```\n\nwhere a,b,c are tuples described above.\n\nTo search whether text contains locations, supply any plain text to the search function like this:\n\n```\nresults = tagger.search('New york and London are are competing for tech talent')\nprint(results)\n```\n\nThis produces the following list of tuples as a result\n```\n[(0, 7, 'New York', 'New York', 'United States', 'US', 'USA', 19354922, 40.6943, -73.9249), \n (13, 18, 'London', 'London, City of', 'United Kingdom', 'GB', 'GBR', 8567000, 51.5, -0.1167)]\n```\nEach tuple always contains values in this order ```start_index``` (for the match in the source string), ```end_index```, ```city```, ```state```, ```country```, ```iso2```, ```iso3```, ```population```, ```latitude```, ```longitude```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ybashir/ahogeotagger",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ahogeotagger",
    "package_url": "https://pypi.org/project/ahogeotagger/",
    "platform": "",
    "project_url": "https://pypi.org/project/ahogeotagger/",
    "project_urls": {
      "Homepage": "https://github.com/ybashir/ahogeotagger"
    },
    "release_url": "https://pypi.org/project/ahogeotagger/0.1.5/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Rapidly search your text for large list of cities and countries",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7078104,
  "releases": {
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7143bc70b8dad39713eb8f5624ebad5035ecb4fa92a7d2364222baec3044ff6",
          "md5": "6983dcfa72f5b52bb65f078a15b4227e",
          "sha256": "82e20c13f78eead31b7e31bc029ebcce0eff0ca55efeebd3d132d4b63d3827f9"
        },
        "downloads": -1,
        "filename": "ahogeotagger-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6983dcfa72f5b52bb65f078a15b4227e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 449145,
        "upload_time": "2020-04-22T17:12:55",
        "upload_time_iso_8601": "2020-04-22T17:12:55.547559Z",
        "url": "https://files.pythonhosted.org/packages/b7/14/3bc70b8dad39713eb8f5624ebad5035ecb4fa92a7d2364222baec3044ff6/ahogeotagger-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b7143bc70b8dad39713eb8f5624ebad5035ecb4fa92a7d2364222baec3044ff6",
        "md5": "6983dcfa72f5b52bb65f078a15b4227e",
        "sha256": "82e20c13f78eead31b7e31bc029ebcce0eff0ca55efeebd3d132d4b63d3827f9"
      },
      "downloads": -1,
      "filename": "ahogeotagger-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "6983dcfa72f5b52bb65f078a15b4227e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 449145,
      "upload_time": "2020-04-22T17:12:55",
      "upload_time_iso_8601": "2020-04-22T17:12:55.547559Z",
      "url": "https://files.pythonhosted.org/packages/b7/14/3bc70b8dad39713eb8f5624ebad5035ecb4fa92a7d2364222baec3044ff6/ahogeotagger-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}