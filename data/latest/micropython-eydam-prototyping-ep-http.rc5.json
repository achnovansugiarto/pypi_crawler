{
  "info": {
    "author": "Tobias Eydam",
    "author_email": "eydam-prototyping@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: Implementation :: MicroPython"
    ],
    "description": "# Eydam-Prototyping: ep_http\n\nSimple Library to run a http-server on an ESP32 or other MicroPython-enabled device.\nIf you want to support my work, checkout my github repo.\n\n## Usage\n\n```python\n# main.py\n\nimport ep_file_server\nimport ep_rest_server\nimport ep_http\nimport network\nimport time \nimport ubinascii\n\nwlan=network.WLAN(network.STA_IF)\nwlan.active(True)\nwlan.connect(\"<SSID>\", \"<Password>\")\n\nwhile not wlan.isconnected():\n    time.sleep(1)\nprint(\"Connected\")\n\n# just return files to client\nfs = ep_file_server.file_server(\n    html_dir=\"/html/\",             # directory with files\n    default_file=\"index.html\"      # default file that is returned when no specific file is requested\n)\n\n# edit a json configuration file via rest api \n# currently supported: GET, PUT\ncrs = ep_rest_server.config_rest_server(\n    config_file=\"./config.json\"\n)\n\n# sensor reading for sensor_rest_server, must return json serializeable dict\ndef scan_wifi(path):\n    nets = wlan.scan()\n    result = []\n    for ssid, bssid, channel, rssi, authmode, hidden in nets:\n        net = {\n            \"ssid\": ssid.decode(\"ascii\"),\n            \"bssid\": ubinascii.hexlify(bssid).upper(),\n            \"channel\": channel,\n            \"rssi\": rssi,\n            \"authmode\": authmode,\n            \"hidden\": hidden\n        }\n        result.append(net)\n    return result\n\n# return sensor reatings via rest api\n# currently supported: GET\nsrs = ep_rest_server.sensor_rest_server(\n    [\n        (\"^wifinets$\", scan_wifi)   # assignment function <-> route\n    ]\n)\n\ndef default_route(sock, request):\n    print(\"unhandled request\")\n    print(request)    \n\nroutes = [\n    # files are available via http://<ip>/files/yourfile.html\n    (\"^\\/?files\\/([A-Za-z0-9_\\.\\/]*)\\??([A-Za-z0-9_\\.\\/]*)$\", lambda sock, req: fs.serve(sock, req)),\n    # configurations are available via http://<ip>/config/hierachy/of/json/file\n    (\"^\\/?config\\/?([A-Za-z0-9_\\.\\/]*)\\??([A-Za-z0-9_\\.\\/]*)$\", lambda sock, req: crs.serve(sock, req)),\n    # sensor readings are available via http://<ip>/sensor/wifinets\n    (\"^\\/?sensor\\/?([A-Za-z0-9_\\.\\/]*)\\??([A-Za-z0-9_\\.\\/]*)$\", lambda sock, req: srs.serve(sock, req)),\n    # favicon is forwarded to file server\n    (\"^(favicon\\\\.ico)$\", lambda sock, req: fs.serve(sock, req)),\n    # route, if nothing else matches\n    (\"^(.*)$\", default_route),\n]\n\ns = ep_http.http_server(routes=routes, micropython_optimize=True)\nprint(\"Starting HTTP-Server: \" + wlan.ifconfig()[0])\ns.start()\n```\n\n# Classes:\n\n* `ep_http.http_server` is the main class, that listens to the port, handels incomming connections, parses the requests and forwards them to the corresponding routes. \n  * Most important parameter are the routes. Those are a list of 2 tuples, consisting of a regex-String and a function, that handels the request. The tuples are gone through one after another until a regex-String matches. \n* `ep_file_server.file_server` servers files.\n* `ep_rest_server.config_rest_server` is a minimal REST-Server to edit config-files. Currently only a reduced set of instructions is supported.\n* `ep_rest_server.sensor_rest_server` is also a minimal REST-Server, that accepts only GET-Requests. It is made to read sensor data.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/eydam-prototyping/tutorials_de/blob/master/micropython/packages/ep_http",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "micropython-eydam-prototyping-ep-http",
    "package_url": "https://pypi.org/project/micropython-eydam-prototyping-ep-http/",
    "platform": "",
    "project_url": "https://pypi.org/project/micropython-eydam-prototyping-ep-http/",
    "project_urls": {
      "Homepage": "https://github.com/eydam-prototyping/tutorials_de/blob/master/micropython/packages/ep_http"
    },
    "release_url": "https://pypi.org/project/micropython-eydam-prototyping-ep-http/0.0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Some wifi functions for MicroPython",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9407346,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ac92805225c4b6b2eb88593f7fcb7ba0b8cd9551a80f231ac14e57d093b6846",
          "md5": "b8659101928f8f186914d3e50d6f8a51",
          "sha256": "93ed3cffc27c0f7d0248ddefb31e0d855ccc3c4192bcb49427ce50e15d2da2b8"
        },
        "downloads": -1,
        "filename": "micropython_eydam-prototyping_ep_http-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b8659101928f8f186914d3e50d6f8a51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2417,
        "upload_time": "2021-02-03T18:33:49",
        "upload_time_iso_8601": "2021-02-03T18:33:49.900234Z",
        "url": "https://files.pythonhosted.org/packages/8a/c9/2805225c4b6b2eb88593f7fcb7ba0b8cd9551a80f231ac14e57d093b6846/micropython_eydam-prototyping_ep_http-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0aedb879e8e6e0cd75ad86f92366ad0fb711d82a29786e63ff9e54489b8cc6f0",
          "md5": "f84085088582e0bfd8eaed58f02c5c21",
          "sha256": "b426b728be62ef6693831c8c40d5c7bcd8e2dc0b4208881b975364e2ab7462b0"
        },
        "downloads": -1,
        "filename": "micropython_eydam-prototyping_ep_http-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f84085088582e0bfd8eaed58f02c5c21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3471,
        "upload_time": "2021-02-03T18:39:56",
        "upload_time_iso_8601": "2021-02-03T18:39:56.951749Z",
        "url": "https://files.pythonhosted.org/packages/0a/ed/b879e8e6e0cd75ad86f92366ad0fb711d82a29786e63ff9e54489b8cc6f0/micropython_eydam-prototyping_ep_http-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2169634291662839b9e666bf3981c7a4223e58624aa5a7b37caa3893569f02f8",
          "md5": "03477a7e2df28e35c070088e78a2164f",
          "sha256": "7a89c095ac0a9d0b2435f7f2a1a608a0b4aa07bbbf6fb99e78de9f758e8d4ad9"
        },
        "downloads": -1,
        "filename": "micropython_eydam-prototyping_ep_http-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "03477a7e2df28e35c070088e78a2164f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3707,
        "upload_time": "2021-02-11T22:03:46",
        "upload_time_iso_8601": "2021-02-11T22:03:46.210568Z",
        "url": "https://files.pythonhosted.org/packages/21/69/634291662839b9e666bf3981c7a4223e58624aa5a7b37caa3893569f02f8/micropython_eydam-prototyping_ep_http-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3f9655f1ec12e9897466845d9b5fe2ff68935d2c6342ee4169b514bb4f8be38",
          "md5": "962cada687ca52fa8b8bfdf8e0297429",
          "sha256": "c3e1dee0c351870625ebec6a134454dc4bdf791ec14791b8bc6f73c3a5f35714"
        },
        "downloads": -1,
        "filename": "micropython_eydam-prototyping_ep_http-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "962cada687ca52fa8b8bfdf8e0297429",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5354,
        "upload_time": "2021-02-11T22:14:24",
        "upload_time_iso_8601": "2021-02-11T22:14:24.025620Z",
        "url": "https://files.pythonhosted.org/packages/e3/f9/655f1ec12e9897466845d9b5fe2ff68935d2c6342ee4169b514bb4f8be38/micropython_eydam-prototyping_ep_http-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d90bc6d62302098ce18f85aa5434fb63a8b90f5367c1f40f3999f6d2521042e",
          "md5": "a9d657e08720bd1275769d37e2b212f5",
          "sha256": "bda73b711f8495ebfd847b0ef0934cf67a5146c87e270ee02e4d415e6f2870ec"
        },
        "downloads": -1,
        "filename": "micropython_eydam-prototyping_ep_http-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a9d657e08720bd1275769d37e2b212f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5369,
        "upload_time": "2021-02-13T11:46:47",
        "upload_time_iso_8601": "2021-02-13T11:46:47.952067Z",
        "url": "https://files.pythonhosted.org/packages/4d/90/bc6d62302098ce18f85aa5434fb63a8b90f5367c1f40f3999f6d2521042e/micropython_eydam-prototyping_ep_http-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d90bc6d62302098ce18f85aa5434fb63a8b90f5367c1f40f3999f6d2521042e",
        "md5": "a9d657e08720bd1275769d37e2b212f5",
        "sha256": "bda73b711f8495ebfd847b0ef0934cf67a5146c87e270ee02e4d415e6f2870ec"
      },
      "downloads": -1,
      "filename": "micropython_eydam-prototyping_ep_http-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "a9d657e08720bd1275769d37e2b212f5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5369,
      "upload_time": "2021-02-13T11:46:47",
      "upload_time_iso_8601": "2021-02-13T11:46:47.952067Z",
      "url": "https://files.pythonhosted.org/packages/4d/90/bc6d62302098ce18f85aa5434fb63a8b90f5367c1f40f3999f6d2521042e/micropython_eydam-prototyping_ep_http-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}