{
  "info": {
    "author": "Chris A. Lindgren",
    "author_email": "chris.a.lindgren@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# askcomm: Python 3 module - Search patterns for event-based, community-detected twitter data.\n\nBy Chris Lindgren <chris.a.lindgren@gmail.com>\n\nDistributed under the BSD 3-clause license. See LICENSE.txt or http://opensource.org/licenses/BSD-3-Clause for details.\n\n## Overview\n\nA set of search patterns that query a corpus of event-based and community-detected tweets, but it could be modified to query most social-network (node-edge) data. The queries are great for content produced within the detected-community subgraph data.\n\nIt assumes you have:\n\n- imported your corpus as a pandas DataFrame,\n- included metadata information, such as a list of dates and list of groups to reorganize your corpus, and\n- pre-processed your documents as community-detected data across periodic events.\n\n## Functions\n\n```query_controller```: Accepts corpus and hub user data and searches for tweets germane to the detected module community across a range of periods and communities. It uses the ```find_mentions``` function to conduct a cross-reference search within a period's data range with 2 options: 'mentions_only' or 'user_and_mentions'. '```mentions_only```' searches a column with a List of mentions per tweet. '```user_and_mentions```' cross references the author  of a tweet with the list of mentions. It returns a Dict of top result tweets found during that period.\n\n```python\nquery_controller(\n    hubs=df_hubs,#community-detected data\n    hub_col_period='period',#column name for periods\n    hub_col_module='info_module',# column name for community name\n    hub_col_users='name',#column name for \n    period_range=[1,10],#range of desired periods\n    module_range=[1,10],#range of desired communities/modules\n    corpus=c_htg,#content corpus\n    period_dates=period_dates,#List of lists with dates to \n    col_dates='dates'#column name for dates\n)\n```\n\n```convert_to_df```: Converts the Dict output from query_controller into a Dataframe with top result per user. If no tweet found , appends as None.\n\n```find_ht```: Queries subset of isolated mentioned or authored tweets with hashtag group list. It returns another subset as a dataframe.\n\n```find_links```: Queries links in tweets with search string. It returns subset as a dataframe.\n\nOther functions include: ```find_mentions``` and ```print_subset```.\n\nIt functions only with Python 3.x and is not backwards-compatible.\n\n**Warning**: askcomm performs little to no custom error-handling, so make sure your inputs are formatted properly. If you have questions, please let me know via email.\n\n## System requirements\n\n* pandas\n\n## Installation\n\n1. Download this repo onto your computer.\n2. Store the folder in a meaningful location.\n3. Open a terminal.\n4. In the terminal, navigate to the root of the folder.\n5. In the terminal, run ```pip install .```\n\n## Known Issues or Limitations\n\n- Please contact me if you discover any issues.\n\n## Example notebooks\n\n- Coming soon.\n\n## Distribution update terminal commands\n\n<pre>\n# Create new distribution of code for archiving\nsudo python setup.py sdist bdist_wheel\n\n# Distribute to Python Package Index\npython -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*\n</pre>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/lingeringcode/askcomm/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lingeringcode/askcomm/",
    "keywords": "corpus querying,search patterns,event-based corpus",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "askcomm",
    "package_url": "https://pypi.org/project/askcomm/",
    "platform": "",
    "project_url": "https://pypi.org/project/askcomm/",
    "project_urls": {
      "Download": "https://github.com/lingeringcode/askcomm/",
      "Homepage": "https://github.com/lingeringcode/askcomm/"
    },
    "release_url": "https://pypi.org/project/askcomm/0.0.2/",
    "requires_dist": [
      "pandas",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "A set of search patterns that query a corpus of event-based and community-detected tweets, but it could be modified to query most social-network (node-edge) data.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8702909,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbfcfa3e4d3080514662c52cff5ecaaca18f7e8e70c17e07fa30f2e7afacaa09",
          "md5": "ed5f4af3c17c087376c7c676d6b54cb4",
          "sha256": "5c6be9d42c4c9c62fb1cf1877edc04a405795db501a88ae4a901ae3475808845"
        },
        "downloads": -1,
        "filename": "askcomm-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed5f4af3c17c087376c7c676d6b54cb4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6950,
        "upload_time": "2020-11-19T19:02:48",
        "upload_time_iso_8601": "2020-11-19T19:02:48.369146Z",
        "url": "https://files.pythonhosted.org/packages/fb/fc/fa3e4d3080514662c52cff5ecaaca18f7e8e70c17e07fa30f2e7afacaa09/askcomm-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbf13bbba9b33e0c97ce1b422998b11c0c7e156adc3e2a53488d21b42a99df64",
          "md5": "161beab578f8bd6cae9e5138ea8248cb",
          "sha256": "2b24d3009b32743bb063c0171e3fc6810879a22d65dc83cf5f06378e182c017b"
        },
        "downloads": -1,
        "filename": "askcomm-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "161beab578f8bd6cae9e5138ea8248cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5156,
        "upload_time": "2020-11-19T19:02:49",
        "upload_time_iso_8601": "2020-11-19T19:02:49.743500Z",
        "url": "https://files.pythonhosted.org/packages/fb/f1/3bbba9b33e0c97ce1b422998b11c0c7e156adc3e2a53488d21b42a99df64/askcomm-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "967b0039649e6711663f0f0137d7aef4e49ebc840a883e1c0e444cf2bdb1582d",
          "md5": "be176baaae86dfa8fc940f271d13310f",
          "sha256": "c6cd3d1647bfd2a7e4569b417ec136a4856563244cc9723ac7aa5f074d9d2c58"
        },
        "downloads": -1,
        "filename": "askcomm-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be176baaae86dfa8fc940f271d13310f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6958,
        "upload_time": "2020-11-19T21:06:50",
        "upload_time_iso_8601": "2020-11-19T21:06:50.785887Z",
        "url": "https://files.pythonhosted.org/packages/96/7b/0039649e6711663f0f0137d7aef4e49ebc840a883e1c0e444cf2bdb1582d/askcomm-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40008370bb7e61b8247dbaaf43fead625e9bc1c2f881cf4d8b0a0da4010c725a",
          "md5": "ecd1fe1ce370e0c950543af6f4beb377",
          "sha256": "7f1e7c73057c4da66fbec9cde3b77bf8c85afda50a319b6f0f8d1d259c47e8f8"
        },
        "downloads": -1,
        "filename": "askcomm-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ecd1fe1ce370e0c950543af6f4beb377",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5161,
        "upload_time": "2020-11-19T21:06:52",
        "upload_time_iso_8601": "2020-11-19T21:06:52.076467Z",
        "url": "https://files.pythonhosted.org/packages/40/00/8370bb7e61b8247dbaaf43fead625e9bc1c2f881cf4d8b0a0da4010c725a/askcomm-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "967b0039649e6711663f0f0137d7aef4e49ebc840a883e1c0e444cf2bdb1582d",
        "md5": "be176baaae86dfa8fc940f271d13310f",
        "sha256": "c6cd3d1647bfd2a7e4569b417ec136a4856563244cc9723ac7aa5f074d9d2c58"
      },
      "downloads": -1,
      "filename": "askcomm-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "be176baaae86dfa8fc940f271d13310f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6958,
      "upload_time": "2020-11-19T21:06:50",
      "upload_time_iso_8601": "2020-11-19T21:06:50.785887Z",
      "url": "https://files.pythonhosted.org/packages/96/7b/0039649e6711663f0f0137d7aef4e49ebc840a883e1c0e444cf2bdb1582d/askcomm-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "40008370bb7e61b8247dbaaf43fead625e9bc1c2f881cf4d8b0a0da4010c725a",
        "md5": "ecd1fe1ce370e0c950543af6f4beb377",
        "sha256": "7f1e7c73057c4da66fbec9cde3b77bf8c85afda50a319b6f0f8d1d259c47e8f8"
      },
      "downloads": -1,
      "filename": "askcomm-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ecd1fe1ce370e0c950543af6f4beb377",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5161,
      "upload_time": "2020-11-19T21:06:52",
      "upload_time_iso_8601": "2020-11-19T21:06:52.076467Z",
      "url": "https://files.pythonhosted.org/packages/40/00/8370bb7e61b8247dbaaf43fead625e9bc1c2f881cf4d8b0a0da4010c725a/askcomm-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}