{
  "info": {
    "author": "Jan Šafařík",
    "author_email": "cowjen01@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Swing\nSwing is an open-source client for creating compounded Docker Swarm deployments using already prepared services called Swing Charts.\nThe charts can be installed from public repositories served by the Swing Server application.\n\n## Installation\n\nThe application can be installed from the PyPI repository using the next command.\n\n```shell\npip install swing-cli\n```\n\n## Requirements\n\nFor creating and publishing Swing Charts, you have to have access to the [Swing Server](https://pypi.org/project/swing-server/),\nwhich can be installed from the PyPI repository.\n\n## Configuration\n\nFor communication with the Swing Server, you have to provide server URL and login credentials.\nThis information has to be set using a configuration file, which has to be placed at the home folder\nunder `~/.swing` file or provided using `--config` parameter of the client tool.\n\n```\n[swing]\nserver = http://localhost:5000\nemail = user123@gmail.com\npassword = pass123\n```\n\n## Client Commands\n\nThe client can be used using command line command.\n\n```\nUsage: swing [OPTIONS] COMMAND [ARGS]...\n\n  Client for the communication with the Swing Server respository.\n\nOptions:\n  -c, --config FILENAME  Swing configuration file.\n  --help                 Show this message and exit.\n\nCommands:\n  build    Build the installed charts to the final docker compose file.\n  delete   Delete the chart or specific release from the repository server.\n  install  Install requirements specified in the dependency file.\n  publish  Upload the local chart to the remote respository.\n  search   Search for available charts.\n  show     Show releases of the specific chart.\n```\n\n### Chart List\n\nYou can list all uploaded charts using the search command. If you want to filter the charts, append the keyword to the command.\n\n```shell\nswing search KEYWORD\n```\n\n### Release Detail\n\nIf you want to show releases of the specific chart, use the show command.\n\n```shell\nswing show CHART\n```\n\n### Chart Delete\n\nTo delete the chart from the server, call the delete command. You can only delete the charts you have uploaded using your account.\nIf you want to just delete a specific release of the chart, you can pass `--version` argument.\n\n```shell\nswing delete [OPTIONS] CHART\n\nOptions:\n  -v, --version VERSION  Version of the release to delete.\n```\n\n### Chart Publish\n\nYou can easily create new charts and then upload them to the repository server. You can provide some details about\nthe release using `--notes` argument.\n\n```shell\nswing publish [OPTIONS] PATH\n\nOptions:\n  -n, --notes MESSAGE  Some release notes.\n```\n\nFirst, create a new directory, and the following files: `chart.yaml`, `deployment.yaml` and `values.yaml`.\n\n#### Chart Definition\n\nEvery chart has to have the definition file, where are the name and the description. Also, when you are publishing\nthe chart, you have to specify the version. Example of the Redis chart:\n\n```yaml\ndescription: Basic redis chart\nname: redis\nversion: 1.0.0\n```\n\n#### Deployment Specification\n\nNext, you have to create a deployment specification using Docker Compose notation. You can use [Jinja2](https://jinja.palletsprojects.com/en/2.11.x/)\ntemplating language to prepare complex and generic deployments.\n\n```yaml\nversion: '3.8'\n\nservices:\n  {{ Values.serviceName }}:\n    image: redis:{{ Values.image.tag }}\n    command: redis-server {% if Values.usePassword %}--requirepass {{ Values.password }}{% endif %}\n    deploy:\n      mode: replicated\n      replicas: 1\n```\n\n#### Default Values\n\nFinally, you have to provide default values for the chart deployment specification. You can make configurable parameters\nlike a number of replicas, service passwords, or image tags.\n\n```yaml\nserviceName: redis\n\nimage:\n  tag: 6\n\nusePassword: false\npassword: null\n```\n\n### Requirements Installation\n\nIf you want to use the published Swing Charts, you have to install them using `requirements.yaml` file.\n\n```shell\nswing install [OPTIONS]\n\nOptions:\n  -r, --requirements FILENAME  Chart dependencies file.\n```\n\nThe requirement can be both downloaded from the remote repository (in this case, you have to provide the chart name, and the release\nversion) or loaded from the local filesystem (in this case, you have to provide the path to this directory).\n\n```yaml\ndependencies:\n  - name: redis\n    version: 2.1\n  - name: psql\n    file: ../charts/postgresql\n```\n\n### Chart Build\n\nIf you have already installed the dependencies, you can build the charts to the final Docker Compose file.\nBefore that, make sure you have installed the `docker-compose` command.\n\n```shell\nswing build [OPTIONS] PATH\n\nOptions:\n  -o, --output PATH  Docker compose output path.\n```\n\nTo override the installed charts' default values, you can create `values.yaml` file where will be provided custom values.\n\n```yaml\nredis:\n  usePassword: true\n  password: password234\n  \npsql:\n  username: root\n  database: main\n  password: secret432\n```\n\n## Project Requirements\n\n### Functional Requirements\n- Downloading charts from the repository.\n- Listing available charts and versions.\n- Packaging and uploading a new version of the chart.\n- Merging charts and project services into a single compose file.\n\n### Nonfunctional Requirements\n- Charts can be installed by name or using the dependencies file.\n- The client should be configurable using a config file.\n- Before uploading the chart, secrets have to be set in the config file.\n- The client should support the help command.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/docker-swing/swing",
    "keywords": "docker,swarm,repository",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "swing-cli",
    "package_url": "https://pypi.org/project/swing-cli/",
    "platform": "",
    "project_url": "https://pypi.org/project/swing-cli/",
    "project_urls": {
      "Homepage": "https://github.com/docker-swing/swing"
    },
    "release_url": "https://pypi.org/project/swing-cli/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Client tool for creating compounded Docker Swarm deployments",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9377975,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed964f22c035adb23d5c98543f882cfe6bfacf84dc48706b9098736878bb4e37",
          "md5": "5d16c00776be04f578a4280eac22448e",
          "sha256": "6a9cf102d5a7d56b6cbf3b03a4a50182b509407bb187a13e06ae33f410325735"
        },
        "downloads": -1,
        "filename": "swing_cli-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5d16c00776be04f578a4280eac22448e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15720,
        "upload_time": "2021-02-10T21:06:06",
        "upload_time_iso_8601": "2021-02-10T21:06:06.763954Z",
        "url": "https://files.pythonhosted.org/packages/ed/96/4f22c035adb23d5c98543f882cfe6bfacf84dc48706b9098736878bb4e37/swing_cli-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed964f22c035adb23d5c98543f882cfe6bfacf84dc48706b9098736878bb4e37",
        "md5": "5d16c00776be04f578a4280eac22448e",
        "sha256": "6a9cf102d5a7d56b6cbf3b03a4a50182b509407bb187a13e06ae33f410325735"
      },
      "downloads": -1,
      "filename": "swing_cli-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5d16c00776be04f578a4280eac22448e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15720,
      "upload_time": "2021-02-10T21:06:06",
      "upload_time_iso_8601": "2021-02-10T21:06:06.763954Z",
      "url": "https://files.pythonhosted.org/packages/ed/96/4f22c035adb23d5c98543f882cfe6bfacf84dc48706b9098736878bb4e37/swing_cli-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}