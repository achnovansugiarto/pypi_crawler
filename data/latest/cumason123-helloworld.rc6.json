{
  "info": {
    "author": "Curtis Mason",
    "author_email": "cumason@bu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Automated PyPI Deployment sample\n\nFor used github action see [pypi-release.yml](.github/workflows/pypi-release.yml)\n\nFor automatically creating tags see [pypi_packaging.py](pypi_packaging.py)\n\n# Test\n\n# Python SDK for [CloudEvents](https://github.com/cloudevents/spec)\n\n## Status\n\nThis SDK is still considered a work in progress, therefore things might (and\nwill) break with every update.\n\nThis SDK current supports the following versions of CloudEvents:\n\n- v1.0\n- v0.3\n\n## Python SDK\n\nPackage **cloudevents** provides primitives to work with CloudEvents specification: https://github.com/cloudevents/spec.\n\nParsing upstream structured Event from HTTP request:\n\n```python\nimport io\n\nfrom cloudevents.sdk.event import v1\nfrom cloudevents.sdk import marshaller\n\nm = marshaller.NewDefaultHTTPMarshaller()\n\nevent = m.FromRequest(\n    v1.Event(),\n    {\"content-type\": \"application/cloudevents+json\"},\n    io.StringIO(\n        \"\"\"\n        {\n            \"specversion\": \"1.0\",\n            \"datacontenttype\": \"application/json\",\n            \"type\": \"word.found.name\",\n            \"id\": \"96fb5f0b-001e-0108-6dfe-da6e2806f124\",\n            \"time\": \"2018-10-23T12:28:22.4579346Z\",\n            \"source\": \"<source-url>\"\n        }\n        \"\"\"\n    ),\n    lambda x: x.read(),\n)\n```\n\nParsing upstream binary Event from HTTP request:\n\n```python\nimport io\n\nfrom cloudevents.sdk.event import v1\nfrom cloudevents.sdk import marshaller\n\nm = marshaller.NewDefaultHTTPMarshaller()\n\nevent = m.FromRequest(\n    v1.Event(),\n    {\n        \"ce-specversion\": \"1.0\",\n        \"content-type\": \"application/json\",\n        \"ce-type\": \"word.found.name\",\n        \"ce-id\": \"96fb5f0b-001e-0108-6dfe-da6e2806f124\",\n        \"ce-time\": \"2018-10-23T12:28:22.4579346Z\",\n        \"ce-source\": \"<source-url>\",\n    },\n    io.BytesIO(b\"this is where your CloudEvent data\"),\n    lambda x: x.read(),\n)\n```\n\nCreating a minimal CloudEvent in version 0.1:\n\n```python\nfrom cloudevents.sdk.event import v1\n\nevent = (\n    v1.Event()\n    .SetContentType(\"application/json\")\n    .SetData('{\"name\":\"john\"}')\n    .SetEventID(\"my-id\")\n    .SetSource(\"from-galaxy-far-far-away\")\n    .SetEventTime(\"tomorrow\")\n    .SetEventType(\"cloudevent.greet.you\")\n)\n```\n\nCreating HTTP request from CloudEvent:\n\n```python\nfrom cloudevents.sdk import converters\nfrom cloudevents.sdk import marshaller\nfrom cloudevents.sdk.converters import structured\nfrom cloudevents.sdk.event import v1\n\nevent = (\n    v1.Event()\n    .SetContentType(\"application/json\")\n    .SetData('{\"name\":\"john\"}')\n    .SetEventID(\"my-id\")\n    .SetSource(\"from-galaxy-far-far-away\")\n    .SetEventTime(\"tomorrow\")\n    .SetEventType(\"cloudevent.greet.you\")\n)\n\nm = marshaller.NewHTTPMarshaller([structured.NewJSONHTTPCloudEventConverter()])\n\nheaders, body = m.ToRequest(event, converters.TypeStructured, lambda x: x)\n```\n\n## HOWTOs with various Python HTTP frameworks\n\nIn this topic you'd find various example how to integrate an SDK with various HTTP frameworks.\n\n### Python requests\n\nOne of popular framework is [`requests`](http://docs.python-requests.org/en/master/).\n\n#### CloudEvent to request\n\nThe code below shows how integrate both libraries in order to convert a CloudEvent into an HTTP request:\n\n```python\ndef run_binary(event, url):\n    binary_headers, binary_data = http_marshaller.ToRequest(\n        event, converters.TypeBinary, json.dumps)\n\n    print(\"binary CloudEvent\")\n    for k, v in binary_headers.items():\n        print(\"{0}: {1}\\r\\n\".format(k, v))\n    print(binary_data.getvalue())\n    response = requests.post(url,\n                             headers=binary_headers,\n                             data=binary_data.getvalue())\n    response.raise_for_status()\n\n\ndef run_structured(event, url):\n    structured_headers, structured_data = http_marshaller.ToRequest(\n        event, converters.TypeStructured, json.dumps\n    )\n    print(\"structured CloudEvent\")\n    print(structured_data.getvalue())\n\n    response = requests.post(url,\n                             headers=structured_headers,\n                             data=structured_data.getvalue())\n    response.raise_for_status()\n\n```\n\nComplete example of turning a CloudEvent into a request you can find [here](samples/python-requests/cloudevent_to_request.py).\n\n#### Request to CloudEvent\n\nThe code below shows how integrate both libraries in order to create a CloudEvent from an HTTP request:\n\n```python\n    response = requests.get(url)\n    response.raise_for_status()\n    headers = response.headers\n    data = io.BytesIO(response.content)\n    event = v1.Event()\n    http_marshaller = marshaller.NewDefaultHTTPMarshaller()\n    event = http_marshaller.FromRequest(\n        event, headers, data, json.load)\n\n```\n\nComplete example of turning a CloudEvent into a request you can find [here](samples/python-requests/request_to_cloudevent.py).\n\n## SDK versioning\n\nThe goal of this package is to provide support for all released versions of CloudEvents, ideally while maintaining\nthe same API. It will use semantic versioning with following rules:\n\n- MAJOR version increments when backwards incompatible changes is introduced.\n- MINOR version increments when backwards compatible feature is introduced INCLUDING support for new CloudEvents version.\n- PATCH version increments when a backwards compatible bug fix is introduced.\n\n## Community\n\n- There are bi-weekly calls immediately following the [Serverless/CloudEvents\n  call](https://github.com/cloudevents/spec#meeting-time) at\n  9am PT (US Pacific). Which means they will typically start at 10am PT, but\n  if the other call ends early then the SDK call will start early as well.\n  See the [CloudEvents meeting minutes](https://docs.google.com/document/d/1OVF68rpuPK5shIHILK9JOqlZBbfe91RNzQ7u_P7YCDE/edit#)\n  to determine which week will have the call.\n- Slack: #cloudeventssdk channel under\n  [CNCF's Slack workspace](https://slack.cncf.io/).\n- Email: https://lists.cncf.io/g/cncf-cloudevents-sdk\n- Contact for additional information: Denis Makogon (`@denysmakogon` on slack).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cumason123-helloworld",
    "package_url": "https://pypi.org/project/cumason123-helloworld/",
    "platform": "",
    "project_url": "https://pypi.org/project/cumason123-helloworld/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/cumason123-helloworld/1.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7900378,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86947133c5642e9f1af99d47023060018efee542734d5eb6ed2dd5497271c232",
          "md5": "6336e9dd7218c6a480553fcbe67b7f79",
          "sha256": "872846cf9aa5e1ba8ee8cdb494305ae5a02460e7538de46a7fd9473c3f2496b7"
        },
        "downloads": -1,
        "filename": "cumason123_helloworld-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6336e9dd7218c6a480553fcbe67b7f79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1190,
        "upload_time": "2020-08-03T22:06:29",
        "upload_time_iso_8601": "2020-08-03T22:06:29.835324Z",
        "url": "https://files.pythonhosted.org/packages/86/94/7133c5642e9f1af99d47023060018efee542734d5eb6ed2dd5497271c232/cumason123_helloworld-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ed78133b8bfa7a482d20c1fda0537ee79dc43730ca30112228c2b46aa017d98",
          "md5": "5eccd01e1fcfa9545f84e22b3c2371a0",
          "sha256": "8c2a167a7a62929d1c59eb2e17a1b1f8ce3016de15515412b2a33ed0fca1963b"
        },
        "downloads": -1,
        "filename": "cumason123-helloworld-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5eccd01e1fcfa9545f84e22b3c2371a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1049,
        "upload_time": "2020-08-03T22:06:31",
        "upload_time_iso_8601": "2020-08-03T22:06:31.942347Z",
        "url": "https://files.pythonhosted.org/packages/3e/d7/8133b8bfa7a482d20c1fda0537ee79dc43730ca30112228c2b46aa017d98/cumason123-helloworld-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c3392c024ac6f8db9fbeddab26e034a7ea271ce298e49220cb93d78bd524959",
          "md5": "4a5278c6ade292c8ed638481e84af798",
          "sha256": "e9de37821b413ab02cf4a8783a362a06bc030586747e83de00c978f9a68b39b9"
        },
        "downloads": -1,
        "filename": "cumason123_helloworld-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a5278c6ade292c8ed638481e84af798",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1184,
        "upload_time": "2020-08-03T22:14:17",
        "upload_time_iso_8601": "2020-08-03T22:14:17.614787Z",
        "url": "https://files.pythonhosted.org/packages/1c/33/92c024ac6f8db9fbeddab26e034a7ea271ce298e49220cb93d78bd524959/cumason123_helloworld-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fddf37f3a7ad3ac34a9baefd926e71476f6fba6ecffd04c037e25e7308eb8c58",
          "md5": "a913ba767398e93851abfcf1d262db88",
          "sha256": "29c5eff444ebe57d982e1700e39077e981fb470b91e45a5bbae62538b05f90b4"
        },
        "downloads": -1,
        "filename": "cumason123-helloworld-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a913ba767398e93851abfcf1d262db88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1113,
        "upload_time": "2020-08-03T22:14:18",
        "upload_time_iso_8601": "2020-08-03T22:14:18.498639Z",
        "url": "https://files.pythonhosted.org/packages/fd/df/37f3a7ad3ac34a9baefd926e71476f6fba6ecffd04c037e25e7308eb8c58/cumason123-helloworld-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47741ff54bcdca26d7669eb4f37633d2051f8d2f6f12f67062c711f15298df88",
          "md5": "b54788de6c881b982d418f2996664a69",
          "sha256": "843c7ec1fc96ea334ea8fdbbd79b70c7ce87d9168371746a6b9cab056a7bcf1a"
        },
        "downloads": -1,
        "filename": "cumason123_helloworld-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b54788de6c881b982d418f2996664a69",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1184,
        "upload_time": "2020-08-03T22:16:51",
        "upload_time_iso_8601": "2020-08-03T22:16:51.011964Z",
        "url": "https://files.pythonhosted.org/packages/47/74/1ff54bcdca26d7669eb4f37633d2051f8d2f6f12f67062c711f15298df88/cumason123_helloworld-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7506f10a9b62945ca2778d5d488703e95ad12ffeef6a35fde81545bf28e7d0b",
          "md5": "fda12381402aa94269d7f0fb2e369ca9",
          "sha256": "573082eb7fae717300c7e3dc873b56776e94666209e1c0cf06a9dca30cd3c929"
        },
        "downloads": -1,
        "filename": "cumason123-helloworld-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fda12381402aa94269d7f0fb2e369ca9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1118,
        "upload_time": "2020-08-03T22:16:51",
        "upload_time_iso_8601": "2020-08-03T22:16:51.961751Z",
        "url": "https://files.pythonhosted.org/packages/c7/50/6f10a9b62945ca2778d5d488703e95ad12ffeef6a35fde81545bf28e7d0b/cumason123-helloworld-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "088a622f673a021e97b58444aeabba01971b38462d1b44bce0fc34f1c7da9269",
          "md5": "b5a3bc349b2494e739108eed463abae6",
          "sha256": "c147a6a807592a3561908462d6aa02903f0e9a4040a9b865c56cab5da0bb2466"
        },
        "downloads": -1,
        "filename": "cumason123_helloworld-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5a3bc349b2494e739108eed463abae6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1465,
        "upload_time": "2020-08-06T17:05:28",
        "upload_time_iso_8601": "2020-08-06T17:05:28.811244Z",
        "url": "https://files.pythonhosted.org/packages/08/8a/622f673a021e97b58444aeabba01971b38462d1b44bce0fc34f1c7da9269/cumason123_helloworld-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "432db82825ed9cd10694d9d5464d4e24a03721de4b7148eed1e1eddc5589f11a",
          "md5": "41f76b89ca059f241b39a94a9c22118f",
          "sha256": "7d99929b81632f40c7f02a738fcfb2e57d896f5b052d3a986333e58bf429307d"
        },
        "downloads": -1,
        "filename": "cumason123-helloworld-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "41f76b89ca059f241b39a94a9c22118f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1382,
        "upload_time": "2020-08-06T17:05:29",
        "upload_time_iso_8601": "2020-08-06T17:05:29.587784Z",
        "url": "https://files.pythonhosted.org/packages/43/2d/b82825ed9cd10694d9d5464d4e24a03721de4b7148eed1e1eddc5589f11a/cumason123-helloworld-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65dde9f7823e1baa21bc02e0954e906a4cfa24ba1483d1e97012ca4c612b2e0f",
          "md5": "b7a3419b1a9d7780999ca207489ef9d5",
          "sha256": "82155b5428bae5f89eb6d83f1f747e95719927e86dbbac76333d9d9627f7a0e8"
        },
        "downloads": -1,
        "filename": "cumason123_helloworld-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7a3419b1a9d7780999ca207489ef9d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1464,
        "upload_time": "2020-08-06T17:11:29",
        "upload_time_iso_8601": "2020-08-06T17:11:29.734472Z",
        "url": "https://files.pythonhosted.org/packages/65/dd/e9f7823e1baa21bc02e0954e906a4cfa24ba1483d1e97012ca4c612b2e0f/cumason123_helloworld-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27380eed9b04db92302db8a8f4101c96a92bcb67edf47e71d7caa025403f41a8",
          "md5": "2167db93c3c5ddc2c3e470f5310e0061",
          "sha256": "6fd67c5f42fcc7f037bbe872121428dc665b904c77801f30d89295e9930f30ca"
        },
        "downloads": -1,
        "filename": "cumason123-helloworld-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2167db93c3c5ddc2c3e470f5310e0061",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1404,
        "upload_time": "2020-08-06T17:11:30",
        "upload_time_iso_8601": "2020-08-06T17:11:30.725096Z",
        "url": "https://files.pythonhosted.org/packages/27/38/0eed9b04db92302db8a8f4101c96a92bcb67edf47e71d7caa025403f41a8/cumason123-helloworld-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a779bcc286e850e3655d0963bd46315bc3cd73e11a3dc667ff18aa4ac26cc629",
          "md5": "222e7b26ecd0c9d85c926f45f816e6b5",
          "sha256": "8fc37e35fff37d4e3c32edba02bf1ad0c6ea0c23b876d594dbc9fb8e452160c8"
        },
        "downloads": -1,
        "filename": "cumason123_helloworld-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "222e7b26ecd0c9d85c926f45f816e6b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3493,
        "upload_time": "2020-08-06T18:08:20",
        "upload_time_iso_8601": "2020-08-06T18:08:20.507243Z",
        "url": "https://files.pythonhosted.org/packages/a7/79/bcc286e850e3655d0963bd46315bc3cd73e11a3dc667ff18aa4ac26cc629/cumason123_helloworld-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d7a191e6960f7ac499d421e2d034b7de844f79a105c5d8b2770806f42684be5",
          "md5": "fd2eaabf8fa7410c13c70cd06ddf1048",
          "sha256": "31112e92a6a6c768b49b0870967c5ca0b21cc6648046f395ed8d7ca75e0d3508"
        },
        "downloads": -1,
        "filename": "cumason123-helloworld-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fd2eaabf8fa7410c13c70cd06ddf1048",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3969,
        "upload_time": "2020-08-06T18:08:21",
        "upload_time_iso_8601": "2020-08-06T18:08:21.615195Z",
        "url": "https://files.pythonhosted.org/packages/1d/7a/191e6960f7ac499d421e2d034b7de844f79a105c5d8b2770806f42684be5/cumason123-helloworld-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a779bcc286e850e3655d0963bd46315bc3cd73e11a3dc667ff18aa4ac26cc629",
        "md5": "222e7b26ecd0c9d85c926f45f816e6b5",
        "sha256": "8fc37e35fff37d4e3c32edba02bf1ad0c6ea0c23b876d594dbc9fb8e452160c8"
      },
      "downloads": -1,
      "filename": "cumason123_helloworld-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "222e7b26ecd0c9d85c926f45f816e6b5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3493,
      "upload_time": "2020-08-06T18:08:20",
      "upload_time_iso_8601": "2020-08-06T18:08:20.507243Z",
      "url": "https://files.pythonhosted.org/packages/a7/79/bcc286e850e3655d0963bd46315bc3cd73e11a3dc667ff18aa4ac26cc629/cumason123_helloworld-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d7a191e6960f7ac499d421e2d034b7de844f79a105c5d8b2770806f42684be5",
        "md5": "fd2eaabf8fa7410c13c70cd06ddf1048",
        "sha256": "31112e92a6a6c768b49b0870967c5ca0b21cc6648046f395ed8d7ca75e0d3508"
      },
      "downloads": -1,
      "filename": "cumason123-helloworld-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "fd2eaabf8fa7410c13c70cd06ddf1048",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3969,
      "upload_time": "2020-08-06T18:08:21",
      "upload_time_iso_8601": "2020-08-06T18:08:21.615195Z",
      "url": "https://files.pythonhosted.org/packages/1d/7a/191e6960f7ac499d421e2d034b7de844f79a105c5d8b2770806f42684be5/cumason123-helloworld-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}