{
  "info": {
    "author": "Mike Nelson",
    "author_email": "mike@realrunners.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.6",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: Markup",
      "Topic :: Text Processing :: Markup :: XML"
    ],
    "description": "dexml:  a dead-simple Object-XML mapper for Python\n==================================================\n\nLet's face it: xml is a fact of modern life.  I'd even go so far as to say\nthat it's *good* at what is does.  But that doesn't mean it's easy to work\nwith and it doesn't mean that we have to like it.  Most of the time, XML\njust needs to get out of the way and let you do some actual work instead\nof writing code to traverse and manipulate yet another DOM.\n\nThe dexml module takes the obvious mapping between XML tags and Python objects\nand lets you capture that as cleanly as possible.  Loosely inspired by Django's\nORM, you write simple class definitions to define the expected structure of\nyour XML document.  Like so::\n\n  >>> import dexml2\n  >>> from dexml2 import fields\n  >>> class Person(dexml2.Model):\n  ...   name = fields.String()\n  ...   age = fields.Integer(tagname='age')\n\nThen you can parse an XML document into an object like this::\n\n  >>> p = Person.parse(\"<Person name='Foo McBar'><age>42</age></Person>\")\n  >>> p.name\n  u'Foo McBar'\n  >>> p.age\n  42\n\nAnd you can render an object into an XML document like this::\n\n  >>> p = Person(name=\"Handsome B. Wonderful\",age=36)\n  >>> p.render()\n  '<?xml version=\"1.0\" ?><Person name=\"Handsome B. Wonderful\"><age>36</age></Person>'\n\nMalformed documents will raise a ParseError::\n\n  >>> p = Person.parse(\"<Person><age>92</age></Person>\")\n  Traceback (most recent call last):\n      ...\n  ParseError: required field not found: 'name'\n\nOf course, it gets more interesting when you nest Model definitions, like this::\n\n  >>> class Group(dexml2.Model):\n  ...   name = fields.String(attrname=\"name\")\n  ...   members = fields.List(Person)\n  ...\n  >>> g = Group(name=\"Monty Python\")\n  >>> g.members.append(Person(name=\"John Cleese\",age=69))\n  >>> g.members.append(Person(name=\"Terry Jones\",age=67))\n  >>> g.render(fragment=True)\n  '<Group name=\"Monty Python\"><Person name=\"John Cleese\"><age>69</age></Person><Person name=\"Terry Jones\"><age>67</age></Person></Group>'\n\nThere's support for XML namespaces, default field values, case-insensitive\nparsing, and more fun stuff.  Check out the documentation on the following\nclasses for more details:\n\n  :Model:  the base class for objects that map into XML\n  :Field:  the base class for individual model fields\n  :Meta:   meta-information about how to parse/render a model",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/realrunner/dexml",
    "keywords": "xml",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dexml2",
    "package_url": "https://pypi.org/project/dexml2/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/dexml2/",
    "project_urls": {
      "Homepage": "https://github.com/realrunner/dexml"
    },
    "release_url": "https://pypi.org/project/dexml2/0.5.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a dead-simple Object-XML mapper for Python",
    "version": "0.5.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2741802,
  "releases": {
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63806d90417f3f0e62f43273e62b4d6964de3550c29c5f2e8a873aec51ccd710",
          "md5": "49fe2e6927842220d252810d6e7683ad",
          "sha256": "58efe5380c7aaafe272a8e0ba78dc4c7a75aa6cabd650180c602ef4cd830a71e"
        },
        "downloads": -1,
        "filename": "dexml2-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "49fe2e6927842220d252810d6e7683ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25306,
        "upload_time": "2017-03-30T17:27:09",
        "upload_time_iso_8601": "2017-03-30T17:27:09.962827Z",
        "url": "https://files.pythonhosted.org/packages/63/80/6d90417f3f0e62f43273e62b4d6964de3550c29c5f2e8a873aec51ccd710/dexml2-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43c9f87f286d39551e5d3051c2792ad09486a361faf72804b7d3bb21e8436cfa",
          "md5": "8347c0af93f8656ed389d8e48d0eac85",
          "sha256": "b65dc599cd8d5f859a97dc00f58984d41da6ec054e6482cba0cf7cb59530c6da"
        },
        "downloads": -1,
        "filename": "dexml2-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8347c0af93f8656ed389d8e48d0eac85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25312,
        "upload_time": "2017-03-30T17:33:52",
        "upload_time_iso_8601": "2017-03-30T17:33:52.537236Z",
        "url": "https://files.pythonhosted.org/packages/43/c9/f87f286d39551e5d3051c2792ad09486a361faf72804b7d3bb21e8436cfa/dexml2-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43c9f87f286d39551e5d3051c2792ad09486a361faf72804b7d3bb21e8436cfa",
        "md5": "8347c0af93f8656ed389d8e48d0eac85",
        "sha256": "b65dc599cd8d5f859a97dc00f58984d41da6ec054e6482cba0cf7cb59530c6da"
      },
      "downloads": -1,
      "filename": "dexml2-0.5.3.tar.gz",
      "has_sig": false,
      "md5_digest": "8347c0af93f8656ed389d8e48d0eac85",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25312,
      "upload_time": "2017-03-30T17:33:52",
      "upload_time_iso_8601": "2017-03-30T17:33:52.537236Z",
      "url": "https://files.pythonhosted.org/packages/43/c9/f87f286d39551e5d3051c2792ad09486a361faf72804b7d3bb21e8436cfa/dexml2-0.5.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}