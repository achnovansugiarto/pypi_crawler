{
  "info": {
    "author": "Cristian Gonzalez",
    "author_email": "cristian.gsp@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# Tacty\n\nAn extensible command bus for Python 3 inspired by the [Tactician](https://tactician.thephpleague.com/) Project.\n\n## Introduction\n\nA *command bus* is a software component that performs operations in which the data and the execution steps are decoupled. The data for the operation is contained in a *Command* object and the execution steps are contained in a *Handler*. The responsibility of the command bus is matching a Command with its Handler and execute it.\n\n**Tacty** is a library that provides a command bus implementation that is extensbile and easy to use.\n\n## Basic Usage\n\n``` python\n# A Command class containing the required data for the operation is defined. \nclass PrintNumberCommand:\n    def __init__(self, number):\n        self.number = number\n\n\n# A Handler class that receives an instance of the command and contains the execution steps is defined.\nclass PrintNumberHandler(Handler):\n    def handle(self, command: PrintNumberCommand):\n        print(command.number)\n\n\n# An instance of the Command is passed to the command bus for its execution.\ncommand = PrintNumberCommand(300)\ncommand_bus.handle(command)\n```\n\n## Initialization\n\n``` python\n# A Resolver is a class that given a Command returns its Handler. The InMemoryResolver receives pairs of Command and Handlers keeping them connected in memory.\nresolver = InMemoryResolver()\nresolver.add_handler(PrintNumberCommand, PrintNumberHandler())\n\n# The CommandHandlerMiddleware uses a resolver to match a Command with its Handler and executes it.\ncommand_handler_middleware = CommandHandlerMiddleware(resolver)\n\n#Â The CommandBus receives a list of middlewares that are executed when processing a Command. In order to fulfill its minimum functionality (executing a Handler given a Command) an instance of the CommandHandlerMiddleware must be passed as the last element.\ncommand_bus = CommandBus([command_handler_middleware])\n```\n\n## Examples\n\nFind next some examples using Tacty:\n\n- [Using Tacty with the in memory resolver](https://github.com/cristiangsp/tacty/blob/master/samples/tacty_with_in_memory_resolver_usage.py)\n- [Using Tacty with a custom middleware](https://github.com/cristiangsp/tacty/blob/master/samples/tacty_with_custom_middleware.py)\n- [Using Tacty with a Handler that retuns a value](https://github.com/cristiangsp/tacty/blob/master/samples/tacty_with_handler_that_returns_a_value.py)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cristiangsp/tacty",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tacty",
    "package_url": "https://pypi.org/project/tacty/",
    "platform": "",
    "project_url": "https://pypi.org/project/tacty/",
    "project_urls": {
      "Homepage": "https://github.com/cristiangsp/tacty"
    },
    "release_url": "https://pypi.org/project/tacty/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "An extensible command bus for Python 3",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8064819,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d724f6c61b796d44ecef17e72a8f9fbbbd40527fdf66543ff8672c1121bc33b",
          "md5": "3739859252f7aeca948c41049ae001af",
          "sha256": "9b18277321a389578e98112eee3070043a330b8bb603aba2a36861401a99d14e"
        },
        "downloads": -1,
        "filename": "tacty-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3739859252f7aeca948c41049ae001af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18543,
        "upload_time": "2020-08-23T15:43:37",
        "upload_time_iso_8601": "2020-08-23T15:43:37.910303Z",
        "url": "https://files.pythonhosted.org/packages/0d/72/4f6c61b796d44ecef17e72a8f9fbbbd40527fdf66543ff8672c1121bc33b/tacty-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab9ca7ccac5780bd2f5fd3693e89fe5f76fc4ce3c2746e4cebc1c9fcb6a573a3",
          "md5": "5a896ed7959c6b0ff3785236f94d7c1b",
          "sha256": "90edcb8f2c3f5201a1d7a6f46a20bb069c72684b489758309ebfda6801f1ab55"
        },
        "downloads": -1,
        "filename": "tacty-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5a896ed7959c6b0ff3785236f94d7c1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4565,
        "upload_time": "2020-08-23T15:43:40",
        "upload_time_iso_8601": "2020-08-23T15:43:40.379783Z",
        "url": "https://files.pythonhosted.org/packages/ab/9c/a7ccac5780bd2f5fd3693e89fe5f76fc4ce3c2746e4cebc1c9fcb6a573a3/tacty-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41e429b2b0c0b25d8f8dab92d3cbeb433842dae6f5defdd14e34db11b624d813",
          "md5": "7c723900696d160a4e301e51cd9eea7c",
          "sha256": "a3a809b8ef1f9bc26c8d8421ec1cf0497a6c52bd710684ff226be6510e8f1011"
        },
        "downloads": -1,
        "filename": "tacty-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c723900696d160a4e301e51cd9eea7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18700,
        "upload_time": "2020-08-28T22:27:55",
        "upload_time_iso_8601": "2020-08-28T22:27:55.989816Z",
        "url": "https://files.pythonhosted.org/packages/41/e4/29b2b0c0b25d8f8dab92d3cbeb433842dae6f5defdd14e34db11b624d813/tacty-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea0e06490d4439d240e7e446d054727fa261d507c26e0f832c219652dc28ccfe",
          "md5": "463f77f84da133a1a10b71f71390e673",
          "sha256": "064ba0daeb3b43f2aaad4bd5cac64b8095ec72f9a44774e62124184444f9c2f7"
        },
        "downloads": -1,
        "filename": "tacty-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "463f77f84da133a1a10b71f71390e673",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4724,
        "upload_time": "2020-08-28T22:27:58",
        "upload_time_iso_8601": "2020-08-28T22:27:58.138997Z",
        "url": "https://files.pythonhosted.org/packages/ea/0e/06490d4439d240e7e446d054727fa261d507c26e0f832c219652dc28ccfe/tacty-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41e429b2b0c0b25d8f8dab92d3cbeb433842dae6f5defdd14e34db11b624d813",
        "md5": "7c723900696d160a4e301e51cd9eea7c",
        "sha256": "a3a809b8ef1f9bc26c8d8421ec1cf0497a6c52bd710684ff226be6510e8f1011"
      },
      "downloads": -1,
      "filename": "tacty-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7c723900696d160a4e301e51cd9eea7c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18700,
      "upload_time": "2020-08-28T22:27:55",
      "upload_time_iso_8601": "2020-08-28T22:27:55.989816Z",
      "url": "https://files.pythonhosted.org/packages/41/e4/29b2b0c0b25d8f8dab92d3cbeb433842dae6f5defdd14e34db11b624d813/tacty-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea0e06490d4439d240e7e446d054727fa261d507c26e0f832c219652dc28ccfe",
        "md5": "463f77f84da133a1a10b71f71390e673",
        "sha256": "064ba0daeb3b43f2aaad4bd5cac64b8095ec72f9a44774e62124184444f9c2f7"
      },
      "downloads": -1,
      "filename": "tacty-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "463f77f84da133a1a10b71f71390e673",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4724,
      "upload_time": "2020-08-28T22:27:58",
      "upload_time_iso_8601": "2020-08-28T22:27:58.138997Z",
      "url": "https://files.pythonhosted.org/packages/ea/0e/06490d4439d240e7e446d054727fa261d507c26e0f832c219652dc28ccfe/tacty-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}