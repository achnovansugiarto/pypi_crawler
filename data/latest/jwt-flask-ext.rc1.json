{
  "info": {
    "author": "Eteil Junior Djoumatchoua",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# JWT Flask Authentication\n\nThis package provide an easy way to handle authentication\nin a flask application. By now it manages login and token required\nconstraint.\n\n## How to use\n\nYou must have a user class defined like this:\n\n```python\nfrom flask_sqlalchemy import SQLAlchemy\nfrom werkzeug.security import check_password_hash\n\ndb = SQLAlchemy()\n\n\nclass User(db.Model):\n    ...\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(255))\n    password = db.Column(db.String(255))\n    ...\n\n    def validate_password(self, password):\n        return check_password_hash(self.password, password)\n\n    ...\n```\n\nThen instanciate the Auth class and decorate view functions:\n\n```python\nfrom jwt_flask_auth import Auth\nfrom flask import Flask\nfrom models import User\n\napp = Flask(__name__)\nauth = Auth(\n    user_class=User,\n    user_id_field='id',\n    username_field='username',\n    password_field='password',\n)\n\n\n@app.route('/login', methods=['POST'])\ndef login():\n    return auth.login()\n\n\n@app.route('/protected')\n@auth.token_required\ndef protected_route():\n    return 'You have access'\n```\n\nLogin will generate a token with a payload containing the user_id, username, and the expiration.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jwt-flask-ext",
    "package_url": "https://pypi.org/project/jwt-flask-ext/",
    "platform": null,
    "project_url": "https://pypi.org/project/jwt-flask-ext/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/jwt-flask-ext/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Provide an  easy way to handle authentication(login with jwt generated, token required decorator) in flask applications",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16057481,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77a52a239115cd66e27b62f9feed1f83c1ff31b79c2361a7166d406e8b69edfa",
          "md5": "c9bebbf2bb5c71b50473f0bdafe8da27",
          "sha256": "17046497ee2a5fc56e94cc4ec26a4b39d1ae0e7395c9f2572a35cc8cd0d4a8af"
        },
        "downloads": -1,
        "filename": "jwt_flask_ext-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c9bebbf2bb5c71b50473f0bdafe8da27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2858,
        "upload_time": "2022-12-10T12:03:58",
        "upload_time_iso_8601": "2022-12-10T12:03:58.336404Z",
        "url": "https://files.pythonhosted.org/packages/77/a5/2a239115cd66e27b62f9feed1f83c1ff31b79c2361a7166d406e8b69edfa/jwt_flask_ext-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77a52a239115cd66e27b62f9feed1f83c1ff31b79c2361a7166d406e8b69edfa",
        "md5": "c9bebbf2bb5c71b50473f0bdafe8da27",
        "sha256": "17046497ee2a5fc56e94cc4ec26a4b39d1ae0e7395c9f2572a35cc8cd0d4a8af"
      },
      "downloads": -1,
      "filename": "jwt_flask_ext-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c9bebbf2bb5c71b50473f0bdafe8da27",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2858,
      "upload_time": "2022-12-10T12:03:58",
      "upload_time_iso_8601": "2022-12-10T12:03:58.336404Z",
      "url": "https://files.pythonhosted.org/packages/77/a5/2a239115cd66e27b62f9feed1f83c1ff31b79c2361a7166d406e8b69edfa/jwt_flask_ext-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}