{
  "info": {
    "author": "liyangjie",
    "author_email": "335659173@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# PPNet\n## Introduction\n- **What is PPNet?**\nPPNet is designed to uses genome information and analysis of phylogenetic profiles with binary similarity and distance measures to derive large-scale bacterial association networks of a single species.\n\n## Installation\nPPNet has the following dependencies:\n* [prokka](https://github.com/tseemann/prokka)\n* [roary](https://github.com/sanger-pathogens/Roary)\n* Python(>=version 3.7)\n* Python modules:\n     - biopython\n     - pyvis\n     - numpy\n     - scipy\n     - statsmodels\n     - kneed\n     - pyani\n\n\n- **Install with the source codes**\n  - Download the source codes:\n    ```bash\n    git clone https://github.com/liyangjie/PPNet.git\n    ```\n  - Rename the main program and add the path to the environment variable:\n    ```bash\n    # Rename PPNet.py to PPNet\n    mv PPNet/bin/ppnet.py PPNet/bin/ppnet\n    # Give the scripts executable permission\n    chmod +x PPNet/bin/*\n    # Add the path to the environment variable\n    echo export PATH=\"/Path/to/PPNet/bin:$PATH\" >> ~/.bashrc\n    source ~/.bashrc\n    ```\n  - Install the Python dependencies:\n    ```bash\n    pip install biopython pyvis numpy scipy statsmodels pyani\n    ```\n  - Install the external dependances either from source or from your packaging system:\n    ```bash\n    prokka roary\n    ```\n## Usage\n``` bash\nppnet [Options]\n```\n```\nOptions:\n      [-h] show this help message and exit\n      [-i1] [Required] The path of input genomes\n      [-i2] [Required] The path of phenotype (e.g., pathogenic or non-pathogenic) of all strains\n      [-o] The path of output (Default \"./PPNet_output\")\n      [-x] The suffix of genomes data (Default \"fasta\")\n      [-c] number of CPUs to use\n      [-a] [Required] Select the algorithm for calculating the correlation coefficient [1-81], or set 0 to use all algorithm.\n      [-pt] What percentage of interactions will be visualized (Default \"1\")\n```\n## Algorithm\nSee Algorithm.docx\n## Examples\n```\nppnet -i1 PATH/to/your/genomes/ -i2 group.csv -x fasta -c 4 -a 1\n```\n## Input\nThe genome file should be in fasta format and placed in the same path. The group.csv \n\n\n## Output\n  - __PPNet_output/HQ_data/*:__  High quality genomes which with N50 > 10000；\n  - __PPNet_output/NR_data/*:__ Non-redundant genome sets after deduplication；\n  - __PPNet_output/Prokka_result/*:__ The result files of Prokka\n  - __PPNet_output/Gff_file/*:__ Include the GFF file extracted from the prokka_result folder with the input file for roary\n  - __PPNet_output/Roary_result/*:__ Result files generated by roary\n  - __PPNet_output/Roary_result/Statistical_test_result.csv:__ The result of Fisher's exact test for the distribution of each gene, by default, PPNet reports all genes with a adjusted p-value <0.05.\n  - __PPNet_output/Roary_result/filted_phylogenetic_profile.csv:__ The phylogenetic profile of orthologs with significantly different distributions.\n  - __PPNet_output/Roary_result/netwrok_result_method_x.csv:__ List the association coefficient calculated by algorithm x between each pair of genes.\n  - __PPNet_output/Gene_net_x.html:__ A network plot inferred by algorithm x that can be opened with a browser(Google Chrome,Microsoft Edge etc.).By default, only first percent of interactions were visualized.\n \n## License\n\nPPNet is free software under a GPLv3 license.\n\n\n    \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/liyangjie/PPNet",
    "keywords": "Functional association network inference,Phylogenetic profiling,Prokaryotic genome,de-replication",
    "license": "GNU General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ppnet",
    "package_url": "https://pypi.org/project/ppnet/",
    "platform": null,
    "project_url": "https://pypi.org/project/ppnet/",
    "project_urls": {
      "Homepage": "https://github.com/liyangjie/PPNet"
    },
    "release_url": "https://pypi.org/project/ppnet/1.0.2/",
    "requires_dist": [
      "biopython",
      "pyvis",
      "numpy",
      "scipy",
      "statsmodels",
      "kneed",
      "pyani"
    ],
    "requires_python": "",
    "summary": "A package for identifying functional association networks by phylogenetic profiling of prokaryotic genomes.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15802899,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "398c35c429d1d2881d826421ad19664c49fc6f4b79a6f41f59536122f5e05325",
          "md5": "d7165a5a54dd86c0b233342102727405",
          "sha256": "78b5ad4e89473b0acec6538e4b86450c23988a1330e8ad8cc4b87ed21e2a4174"
        },
        "downloads": -1,
        "filename": "ppnet-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7165a5a54dd86c0b233342102727405",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25028,
        "upload_time": "2022-11-17T15:06:50",
        "upload_time_iso_8601": "2022-11-17T15:06:50.535062Z",
        "url": "https://files.pythonhosted.org/packages/39/8c/35c429d1d2881d826421ad19664c49fc6f4b79a6f41f59536122f5e05325/ppnet-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e923dbe77c6fa9993a4de61ce4de8dad931346fa875613ab3dddeae7509c6de4",
          "md5": "6b300d3854360c345b31fe0af1b13ab0",
          "sha256": "292b82d5ce2094856c95017950dcbff8aef74ee4f77e5474678619115c1409b9"
        },
        "downloads": -1,
        "filename": "ppnet-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b300d3854360c345b31fe0af1b13ab0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25006,
        "upload_time": "2022-11-17T15:15:19",
        "upload_time_iso_8601": "2022-11-17T15:15:19.662460Z",
        "url": "https://files.pythonhosted.org/packages/e9/23/dbe77c6fa9993a4de61ce4de8dad931346fa875613ab3dddeae7509c6de4/ppnet-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e923dbe77c6fa9993a4de61ce4de8dad931346fa875613ab3dddeae7509c6de4",
        "md5": "6b300d3854360c345b31fe0af1b13ab0",
        "sha256": "292b82d5ce2094856c95017950dcbff8aef74ee4f77e5474678619115c1409b9"
      },
      "downloads": -1,
      "filename": "ppnet-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6b300d3854360c345b31fe0af1b13ab0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 25006,
      "upload_time": "2022-11-17T15:15:19",
      "upload_time_iso_8601": "2022-11-17T15:15:19.662460Z",
      "url": "https://files.pythonhosted.org/packages/e9/23/dbe77c6fa9993a4de61ce4de8dad931346fa875613ab3dddeae7509c6de4/ppnet-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}