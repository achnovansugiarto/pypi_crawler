{
  "info": {
    "author": "Dr. Abiira Nathan",
    "author_email": "nabiira2by2@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# drf-auth\n\nPainless token authentication for django restframework. Built on top of rest_framework.auth_token. It's meant to provide a ready to use authentication for your **SPAs** and other **Mobile Apps**\n\n[![Build Status](https://travis-ci.com/abiiranathan/drf-authtoken.svg?branch=master)](https://travis-ci.com/abiiranathan/drf-authtoken)\n\n\n## Installation\n```bash \n\npip install drf-restauth\n\n```\n\n## Homepage\nThe project homepage on: [Github](https://github.com/abiiranathan/drf-authtoken)\n\n\n### Usage\n```python\nINSTALLED_APPS=[\n    'rest_framework',\n    'rest_framework.authtoken',\n    'drf_auth'\n]\n```\n\nConfigure project urls.py:\n\nSubsequent examples assume, you are using \"/api/auth/ as the path prefix.\n\n```python\nurlpatterns = [\n    path(\"api/auth/\", include(\"drf_auth.urls\"))\n]\n\n# settings.py\n\nREST_FRAMEWORK = {\n    'DEFAULT_RENDERER_CLASSES': [\n        'rest_framework.renderers.JSONRenderer',\n    ],\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'rest_framework.authentication.TokenAuthentication'\n    ],\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated'\n    ]\n}\n\n# drf-specific settings for password reset\n\nDRF_AUTH_SETTINGS = {\n    \"SITE_NAME\": \"My Site Title\",\n    \"PASSWORD_RESET_REDIRCT_URL\": \"/\",\n    \"PASSWORD_CHANGE_TEMPLATE\": \"drf_auth/password_change_form.html\",\n    \"EMAIL_HOST_USER\": \"youremail@gmail.com\",\n    \"EMAIL_HOST_PASSWORD\": \"yourpassword\",\n    \"EMAIL_HOST\": \"smtp.gmail.com\",\n    \"EMAIL_PORT\": 587,\n}\n\n```\n\n**These settings can be ignored if you don't plan to do password reset by email!**\n\nEndpoints:\n\n1. ```/POST api/auth/register/```\n\n\n```json\n{\n    \"username\": \"string\",\n    \"password\":\"string\",\n    \"email\":\"string\",\n    \"first_name\": \"string\",\n    \"last_name\":\"string\"\n}\n\nresponse:{\n    \"token\": \"string\",\n    \"user\":{\n        \"username\": \"string\",\n        \"password\":\"string\",\n        \"email\":\"string\",\n        \"first_name\": \"string\",\n        \"last_name\":\"string\"\n    }\n}\n```\n\n2. ```/POST api/auth/login/```\n   \n```json\nbody:\n{\n    \"username\": \"string\",\n    \"password\":\"string\"\n}\n\nresponse:{\n    \"token\": \"string\",\n    \"user\":{\n        \"username\": \"string\",\n        \"password\":\"string\",\n        \"email\":\"string\",\n        \"first_name\": \"string\",\n        \"last_name\":\"string\"\n    }\n}\n```\n\n3. ```/POST api/auth/logout/```\n```\nbody: null\nresponse:{\n    \"success\": true\n}\n```\n\n4. ```/GET api/auth/user/ (Protected Route)```\n\n```json\nresponse:\n{\n    \"username\": \"string\",\n    \"password\":\"string\",\n    \"email\":\"string\",\n    \"first_name\": \"string\",\n    \"last_name\":\"string\"\n}\n```\n\n5. ```GET /api/auth/users (Protected route, must be admin)```\n- Retrieves a json array of all users unpaginated\n\n6. ```/api/auth/update-user/ (Protected route)```\n\n```json\n\nbody:{\n    \"email\":\"string\",\n    \"first_name\": \"string\",\n    \"last_name\":\"string\"\n}\n\nresponse:\n{\n    \"username\": \"string\",\n    \"password\":\"string\",\n    \"email\":\"string\",\n    \"first_name\": \"string\",\n    \"last_name\":\"string\"\n}\n\n```\n\n7. ```POST /api/auth/change-password/ (Protected route)```\n\n```json\n\nbody:{\n    \"old_password\":\"string\",\n    \"new_password\": \"string\",\n}\n\nresponse:\n{\n    \"username\": \"string\",\n    \"password\":\"string\",\n    \"email\":\"string\",\n    \"first_name\": \"string\",\n    \"last_name\":\"string\"\n}\n\n```\n\n8. ```POST /api/auth/reset-password/```\n\nFor restting forgotten passwords. An email will be sent\nusing the settings provided in settings.DRF_AUTH_SETTINGS\ndictionary.\n\n```json\n\nbody:{\n    \"email\":\"string\",\n}\n\nstatus: 200 - OK(Email sent)\nstatus: 400 - Email not sent\nstatus: 500 - Internal server error\n\nresponse:\n{\n    \"message\": \"string\"\n}\n\n```\n\n### Handle user email confirmation\n\n9. ```/GET /api/auth/reset_password_confirmation/<uidb64>/<token>/\"\n\nThis route handles navigations/get requests when the user clicks the password reset link.\n\nFor a complete workflow, provide a template to render in DRF_AUTH_SETTINGS(see above) and make sure that\nthe new password is **POSTED** to the same route.\n\nThe following variables are passed to you in the context for customization:\n - user\n - site_name\n\n\n1.  ```/POST /api/auth/reset_password_confirmation/<uidb64>/<token>/```\n\n**Note that the token expires after 30 minutes after the email is sent**\n\n```json\n\nbody:\n{\n    \"password\": \"string\"\n}\n\n```\n\n### Required Headers\n- Authorization: Token xxxxxxxx (required for protected routes)\n- Content-Type: application/json\n- X-Requested-With: XMLHttpRequest (Desirable)\n\n### Practical examples using typescript\n\n```ts\nimport axios from \"axios\";\n\n\n// Add content-type header on every request\naxios.interceptors.request.use(function (config) {\n  const token = localStorage.getItem(\"token\");\n\n  if (token) {\n    config.headers.Authorization = `Token ${token}`;\n  }\n\n  config.headers[\"Content-Type\"] = \"application/json\";\n  return config;\n});\n\nconst handleLogin = async (username:string, password:string)=>{\n    const body = JSON.stringify({\n        username,\n        password\n    });\n\n    const res = await axios.post(\"/api/auth/login/\", body);\n    const {user, token} = res.data;\n\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n}\n\ninterface User{\n    username:string,\n    first_name:string,\n    last_name:string,\n    password:string,\n    email:string\n}\n\nconst handleRegister = async (user:User):Promise<User> =>{\n    const body = JSON.stringify(user);\n\n    const res = await axios.post(\"/api/auth/login/\", body);\n    const {user, token} = res.data;\n\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    return user\n}\n\ntype LogoutResponse = {\n    success: boolean\n}\n\nconst handleLogout = ():Promise<LogoutResponse>=>{\n    const res = await axios.post(\"/api/auth/logout/\", null)\n    return res.data\n}\n\nconst getLoggedInUser = ():Promise<User>=>{\n    const res = await axios.get(\"/api/auth/user/\")\n    return res.data\n}\n```\n\nSubmit an issue at [Github](https://github.com/abiiranathan/drf-authtoken/issues \"Click to submit an issue\")\n\nFeel free to add your voice but be gentle, this is my first open source Django package!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/abiiranathan/drf-restauth.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-restauth",
    "package_url": "https://pypi.org/project/drf-restauth/",
    "platform": "",
    "project_url": "https://pypi.org/project/drf-restauth/",
    "project_urls": {
      "Homepage": "https://github.com/abiiranathan/drf-restauth.git"
    },
    "release_url": "https://pypi.org/project/drf-restauth/0.1.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Painless djangorestframework TokenAuthentication.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10504373,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9af77054089c6a0d8cd15f0495d2ed235a73bb1bcec2bcb3474b95c9bdbcac7f",
          "md5": "f2c3e9ba277a99c0bd30c61bada7333a",
          "sha256": "7ce2ce3f9cce26dadce0f12b881f1fb907b45c1160224e6a4b31b266c388a5b8"
        },
        "downloads": -1,
        "filename": "drf-restauth-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f2c3e9ba277a99c0bd30c61bada7333a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11771,
        "upload_time": "2021-05-29T00:15:26",
        "upload_time_iso_8601": "2021-05-29T00:15:26.711358Z",
        "url": "https://files.pythonhosted.org/packages/9a/f7/7054089c6a0d8cd15f0495d2ed235a73bb1bcec2bcb3474b95c9bdbcac7f/drf-restauth-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "876e1d7335dca5c516668f4b4963c17e39f258ef1684b3fe5f080016d0c10564",
          "md5": "a9946f35ffb11f6963cf14bd5e6cb658",
          "sha256": "810882fcccb0f89d0b91366078de4017d4918dd28dd028ed9cc89407106d27d0"
        },
        "downloads": -1,
        "filename": "drf-restauth-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a9946f35ffb11f6963cf14bd5e6cb658",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11467,
        "upload_time": "2021-05-29T01:06:46",
        "upload_time_iso_8601": "2021-05-29T01:06:46.047197Z",
        "url": "https://files.pythonhosted.org/packages/87/6e/1d7335dca5c516668f4b4963c17e39f258ef1684b3fe5f080016d0c10564/drf-restauth-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "876e1d7335dca5c516668f4b4963c17e39f258ef1684b3fe5f080016d0c10564",
        "md5": "a9946f35ffb11f6963cf14bd5e6cb658",
        "sha256": "810882fcccb0f89d0b91366078de4017d4918dd28dd028ed9cc89407106d27d0"
      },
      "downloads": -1,
      "filename": "drf-restauth-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "a9946f35ffb11f6963cf14bd5e6cb658",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11467,
      "upload_time": "2021-05-29T01:06:46",
      "upload_time_iso_8601": "2021-05-29T01:06:46.047197Z",
      "url": "https://files.pythonhosted.org/packages/87/6e/1d7335dca5c516668f4b4963c17e39f258ef1684b3fe5f080016d0c10564/drf-restauth-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}