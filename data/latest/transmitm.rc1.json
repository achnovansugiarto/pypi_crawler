{
  "info": {
    "author": "Daniel Timofte @tim17d",
    "author_email": "timofte.daniel@tuta.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Security",
      "Topic :: System :: Networking",
      "Topic :: System :: Networking :: Monitoring"
    ],
    "description": "transmitm\n==========================\n\n`transmitm` is a Twisted-based Python module that provides transparent intercepting proxying at transport level.\n\nTransports supported as of the latest version:\n* TCP\n* UDP\n\n# Install\n`transmitm` requires a `3.5` minimum version of Python\n```\npip install transmitm\n```\n\n## Operation\nTransparent proxying requires traffic redirection to the app using a third party utility such as `iptables` or `nftables`.\n\n`iptables` example to redirect TCP traffic targeting server port 80 to proxy port 8080\n```bash\niptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080\n```\n\n`transmitm` uses the concept of taps. `Tap` is a class whose instances receive transport SDUs (Service Data Units) from transitioning packets and perform some sort of operation on them; multiple taps are chained.\n\nTaps get attached to `Proxy` objects (`TCPProxy`, `UDPProxy`) that handle packets on two arms - both from the client and the server. \n\n`Dispatcher` class holds a list of proxy instances; it cannot be instantiated. \n```\n             +---------------------------------------------+\n             |                    proxy                    |\n             |     +--------+   +--------+   +-------+     |\n             |     |        |   |        |   |       |     |\n            SDU    |        |   |        |   |       |     |\nclient ------>-----+  tap 1 +---> tap 2  |...| tap n +---------> server\n             |     |        |   |        |   |       |     |\n             |     |        |   |        |   |       |     |\n             |     +--------+   +--------+   +-------+     |\n             +---------------------------------------------+\n                                 gateway\n```\n## Usage / API\n\nThe following script illustrate the module's API \n```python\n#!/usr/bin/env python3\nfrom transmitm import Tap, Dispatcher, TCPProxy, UDPProxy\n\n# Define Tap classes that handle data (SDUs)\n# At minimum, they must implement the 'handle' method\n# The returned value gets passed to the next tap in chain\nclass PktLogger(Tap):\n    \"\"\"Prints packet size to stdout\n    \"\"\"\n\n    def handle(self, data, ip_tuple):\n        \"\"\"Not altering data parameter causes returning\n        the same object reference\"\"\"\n        peer, proxy = ip_tuple\n        print(f\"Got {len(data)} bytes from {peer} on {proxy}\")\n        return data\n\n\nclass Mangler(Tap):\n    \"\"\"Do a search and replace in packet bytes\n    \"\"\"\n\n    def __init__(self, search, replace):\n        self.search = search\n        self.replace = replace\n\n    def handle(self, data, ip_tuple):\n        return data.replace(self.search, self.replace)\n\n\n# Create proxy instances\n# A Proxy object requires at least a destination server's IP and port number\n# Listen on TCP 8081 and forward to 127.0.0.1:8080\ntcp_proxy_8080 = TCPProxy(\"127.0.0.1\", 8080, bind_port=8081)\n\n# Bind port may be omitted for getting a random one\n# You can also specify a bind interface; by default all proxies are bind to localhost\nudp_proxy_53 = UDPProxy(\"1.1.1.1\", 53, bind_port=53)\n\n# The proxy can be used as a connector between IPv4 and IPv6 endpoints\nudp_proxy_rnd = UDPProxy(\"1.1.1.1\", 53, interface='::0')\n\n# Create tap instances that will process packets\nlogger = PktLogger()\npath_mangler = Mangler(\n    search=b'/api',\n    replace=b'/forbidden'\n)\n\n# Attach taps instances to the proxies\n# The order in which the taps are added defines the tap chaining\ntcp_proxy_8080.add_tap(path_mangler)\ntcp_proxy_8080.add_tap(logger)\n\n# Just logging for DNS packets\nudp_proxy_53.add_tap(logger)\n\n# When registering multiple proxies make sure you add those with a specified\n# bind_port first, to avoid collision with randomly assigned ones\nDispatcher.add_proxies([\n    tcp_proxy_8080,\n    udp_proxy_53,\n    udp_proxy_rnd\n])\n\n# If not provided, bind port is randomly assigned and can be retrieved\n# after adding the proxy to the Dispatcher\nprint(\"Registered proxies:\")\nfor proxy in Dispatcher.proxies:\n    print(\n        proxy.__class__.__name__,\n        proxy.interface,\n        proxy.bind_port,\n        '->',\n        proxy.server_ip,\n        proxy.server_port\n    )\n\n# Blocking method, should be called last\nDispatcher.run()\n```\n\n## TODO\n- Add UNIX Domain sockets support\n- Add packet routing capabilities\n\n## Bug reporting\n* Open a new issue\n* Explain expected vs actual behavior\n* Add code snippet that reproduces the issue\n\n## Contributing\nThis project uses [poetry](https://python-poetry.org) for package management during development. Development dependencies require a `>=3.7` version of Python. To get a working environment use the following commands\n```bash\n# Install poetry\npip install poetry\n# or...\n# curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python\n\n# Install module's development dependencies\npoetry install --no-root\n\n# Check the setup by running the test\npytest\n```\n* Fork the repo\n* Check out a feature or bug branch\n* Add your changes\n* Add test cases\n* Update README when needed\n* Ensure tests are passing\n* Submit a pull request to upstream repo\n* Add description of your changes\n* Ensure branch is mergeable\n\n_MIT License, 2020_ [@tim17d](https://twitter.com/tim17d)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tsundokul/transmitm",
    "keywords": "transparent mitm man-in-the-middle proxy",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "transmitm",
    "package_url": "https://pypi.org/project/transmitm/",
    "platform": "",
    "project_url": "https://pypi.org/project/transmitm/",
    "project_urls": {
      "Homepage": "https://github.com/tsundokul/transmitm"
    },
    "release_url": "https://pypi.org/project/transmitm/0.1.0/",
    "requires_dist": [
      "twisted (>=20.3)"
    ],
    "requires_python": ">=3.5",
    "summary": "Transport layer transparent intercepting proxy.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7908499,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c45f47a12537f92f5e45435b787ef7f7ce23f1d895273d581fb38c433299047",
          "md5": "94cf164c4b6757ffa97e5932ba45235c",
          "sha256": "00e4ab7d5aff40169128a22b77d7c469c659de74fef539d350f4b3112a6bcbbd"
        },
        "downloads": -1,
        "filename": "transmitm-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94cf164c4b6757ffa97e5932ba45235c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 23170,
        "upload_time": "2020-08-07T15:25:02",
        "upload_time_iso_8601": "2020-08-07T15:25:02.223653Z",
        "url": "https://files.pythonhosted.org/packages/0c/45/f47a12537f92f5e45435b787ef7f7ce23f1d895273d581fb38c433299047/transmitm-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c45f47a12537f92f5e45435b787ef7f7ce23f1d895273d581fb38c433299047",
        "md5": "94cf164c4b6757ffa97e5932ba45235c",
        "sha256": "00e4ab7d5aff40169128a22b77d7c469c659de74fef539d350f4b3112a6bcbbd"
      },
      "downloads": -1,
      "filename": "transmitm-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "94cf164c4b6757ffa97e5932ba45235c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 23170,
      "upload_time": "2020-08-07T15:25:02",
      "upload_time_iso_8601": "2020-08-07T15:25:02.223653Z",
      "url": "https://files.pythonhosted.org/packages/0c/45/f47a12537f92f5e45435b787ef7f7ce23f1d895273d581fb38c433299047/transmitm-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}