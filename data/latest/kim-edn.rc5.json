{
  "info": {
    "author": "Yaser Afshar",
    "author_email": "yafshar@umn.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# KIM-EDN encoder and decoder\n\n[![Python package](https://github.com/openkim/kim-edn/workflows/Python%20package/badge.svg)](https://github.com/openkim/kim-edn/actions)\n[![Windows Build status](https://ci.appveyor.com/api/projects/status/3amxmm9j5v8eykn2?svg=true)](https://ci.appveyor.com/project/yafshar/kim-edn)\n[![codecov](https://codecov.io/gh/openkim/kim-edn/branch/master/graph/badge.svg)](https://codecov.io/gh/openkim/kim-edn)\n[![Anaconda-Server Badge](https://img.shields.io/conda/vn/conda-forge/kim-edn.svg)](https://anaconda.org/conda-forge/kim-edn)\n[![PyPI](https://img.shields.io/pypi/v/kim-edn.svg)](https://pypi.python.org/pypi/kim-edn)\n[![License](https://img.shields.io/badge/license-LGPL--2.1--or--later-blue)](LICENSE)\n\n## edn\n\nExtensible data notation [eed-n]\n\n[**edn**](<https://github.com/edn-format/edn>) is an extensible data\nnotation. A superset of **edn** is used by Clojure to represent programs, and\nit is used by [**KIM**](https://openkim.org) and other applications as a\ndata format.\n\n## kim-edn\n\nThe **KIM** infrastructure embraces a subset of **edn** as a\n[standard data format](https://openkim.org/doc/schema/edn-format). The\nprimary purpose of this data format choice is to serve as a notational\nsuperset to [**JSON**](https://en.wikipedia.org/wiki/JSON) with the\nenhancements being that it (1) allows for comments and (2) treats commas as\nwhitespace enabling easier templating.\n\nThe subset of **edn** allowed is constrained to:\n\n* [Booleans](https://github.com/edn-format/edn#booleans)\n* [Strings](https://github.com/edn-format/edn#strings)\n* [Integers](https://github.com/edn-format/edn#integers)\n* [Floating point numbers](https://github.com/edn-format/edn#floating-point-numbers)\n* [Vectors](https://github.com/edn-format/edn#vectors) (or arrays)\n* [Maps](https://github.com/edn-format/edn#maps) (or hash, dicts, hashmaps, etc.)\n\nExceptions:\n\n* [nil](https://github.com/edn-format/edn#nil) is not allowed, this includes\nJSON's null which is not allowed. Instead consider:\n    1. using an empty string (\"\") as the value,\n    2. using the number 0 as the value,\n    3. or omitting a key-value pair.\n* [Symbols](https://github.com/edn-format/edn#symbols) are not allowed\n* [Keywords](https://github.com/edn-format/edn#keywords) are not allowed\n* [Lists](https://github.com/edn-format/edn#lists) are not allowed, please\nuse [vectors](https://github.com/edn-format/edn#vectors) instead\n* [Sets](https://github.com/edn-format/edn#sets) are not allowed\n* [Tagged elements](https://github.com/edn-format/edn#tagged-elements) are\nnot allowed\n\n`kim-edn` has been adapted and updated from the Python `json` module. It\nexposes an API familiar to users of the standard library.\n(See [pickle](https://docs.python.org/3.8/library/pickle.html#module-pickle),\nor\n[marshal](https://docs.python.org/3.8/library/marshal.html), or\n[json](https://docs.python.org/3.8/library/json.html) modules.)\n\nEncoding basic Python object hierarchies::\n\n```py\n    >>> import kim_edn\n    >>> kim_edn.dumps([\"short-name\", {\"source-value\": [\"hcp\"]}])\n    '[\"short-name\" {\"source-value\" [\"hcp\"]}]'\n\n    >>> print(kim_edn.dumps(\"\\\"P6_3/mmc\"))\n    \"\\\"P6_3/mmc\"\n\n    >>> print(kim_edn.dumps('\\\\'))\n    \"\\\\\"\n\n    >>> print(kim_edn.dumps({\"domain\": \"openkim.org\", \"data-method\": \"computation\", \"author\": \"John Doe\"}, sort_keys=True))\n    {\"author\" \"John Doe\" \"data-method\" \"computation\" \"domain\" \"openkim.org\"}\n\n    >>> from io import StringIO\n    >>> io = StringIO()\n    >>> kim_edn.dump(['streaming API'], io)\n    >>> io.getvalue()\n    '[\"streaming API\"]'\n```\n\nPretty printing::\n\n```py\n    >>> import kim_edn\n    >>> print(kim_edn.dumps({\"domain\": \"openkim.org\", \"data-method\": \"computation\", \"author\": \"John Doe\"}, sort_keys=True, indent=4))\n    {\n        \"author\" \"John Doe\"\n        \"data-method\" \"computation\"\n        \"domain\" \"openkim.org\"\n    }\n```\n\nDecoding KIM-EDN::\n\n```py\n    >>> import kim_edn\n    >>> obj = [\"a\", {\"source-value\": 6.9790981921, \"source-unit\": \"angstrom\"}]\n    >>> kim_edn.loads('[\"a\", {\"source-value\": 6.9790981921, \"source-unit\": \"angstrom\"}]') == obj\n    True\n    >>> kim_edn.load('[\"a\", {\"source-value\": 6.9790981921, \"source-unit\": \"angstrom\"}]') == obj\n    True\n    >>> kim_edn.loads('\"\\\\\"foo\\\\bar\"') == '\"foo\\x08ar'\n    True\n    >>> kim_edn.load(kim_edn.dumps(obj)) == obj\n    True\n    >>> from io import StringIO\n    >>> io = StringIO('[\"openkim.org\"]')\n    >>> kim_edn.load(io)[0] == 'openkim.org'\n    True\n```\n\nDecoding Commented KIM-EDN::\n\n```py\n    >>> obj = {\"property-id\": \"tag:brunnels@noreply.openkim.org,2016-05-11:property/atomic-mass\"}\n    >>> c_str = '{\\n  ; property-id\\n  \"property-id\"           \"tag:brunnels@noreply.openkim.org,2016-05-11:property/atomic-mass\" ; property id containing the unique ID of the property.\\n }'\n    >>> kim_edn.load(c_str) == obj\n    True\n```\n\nSpecializing KIM-EDN object decoding::\n\n```py\n    >>> import kim_edn\n    >>> def as_complex(dct):\n    ...     if '__complex__' in dct:\n    ...         return complex(dct['real'], dct['imag'])\n    ...     return dct\n    ...\n    >>> kim_edn.loads('{\"__complex__\": true, \"real\": 1, \"imag\": 2}',\n    ...     object_hook=as_complex)\n    (1+2j)\n    >>> from decimal import Decimal\n    >>> kim_edn.loads('1.1', parse_float=Decimal) == Decimal('1.1')\n    True\n```\n\nSpecializing KIM-EDN object encoding::\n\n```py\n    >>> import kim_edn\n    >>> def encode_complex(obj):\n    ...     if isinstance(obj, complex):\n    ...         return [obj.real, obj.imag]\n    ...     msg = 'Object of type {} is not '.format(obj.__class__.__name__)\n    ...     msg += 'KIM-EDN serializable'\n    ...     raise TypeError(msg)\n    ...\n    >>> kim_edn.dumps(2 + 1j, default=encode_complex)\n    '[2.0 1.0]'\n    >>> kim_edn.KIMEDNEncoder(default=encode_complex).encode(2 + 1j)\n    '[2.0 1.0]'\n    >>> ''.join(kim_edn.KIMEDNEncoder(default=encode_complex).iterencode(2 + 1j))\n    '[2.0 1.0]'\n```\n\nUsing `kim_edn.tool` from the shell to validate and pretty-print::\n\n```sh\n    $ echo '{\"kim_edn\" \"obj\"}' | python -m kim_edn.tool\n    {\n        \"kim_edn\" \"obj\"\n    }\n\n    $ echo '{\"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\"}' | python -m kim_edn.tool\n    {\n        \"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\"\n    }\n\n    $ echo '{\"foo\": [\"bar\", \"baz\"]}' | python -m kim_edn.tool\n    {\n        \"foo\" [\n            \"bar\"\n            \"baz\"\n        ]\n    }\n\n    $ echo '{\"foo\" [\"bar\" \"baz\"]}' | python -m kim_edn.tool\n    {\n        \"foo\" [\n            \"bar\"\n            \"baz\"\n        ]\n    }\n\n    $ echo '{\"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-potential-energy-hexagonal-crystal\" \"instance-id\" 1 \"space-group\" {\"source-value\" \"P6_3/mmc\"} \"basis-atom-coordinates\" {\"source-value\" [[0, 0, 0][0.5, 0, 0.5]]}}' | python -m kim_edn.tool\n    {\n        \"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-potential-energy-hexagonal-crystal\"\n        \"instance-id\" 1\n        \"space-group\" {\n            \"source-value\" \"P6_3/mmc\"\n        }\n        \"basis-atom-coordinates\" {\n            \"source-value\" [\n                [\n                    0\n                    0\n                    0\n                ]\n                [\n                    0.5\n                    0\n                    0.5\n                ]\n            ]\n        }\n    }\n```\n\n**Note:**\n\nThis module's encoders and decoders preserve input and output order by\ndefault. Order is only lost if the underlying containers are unordered.\n\n## Encoders and Decoders\n\nKIM-EDN decoder (KIMEDNDecoder) object, performs the following translations\nin decoding by default:\n\n| KIM-EDN                       | Python   |\n|-------------------------------|----------|\n| object                        | dict     |\n| Vectors (or \"arrays\")         | list     |\n| Strings                       | str      |\n| Integers numbers (int)        | int      |\n| Floating point numbers (real) | float    |\n| true                          | True     |\n| false                         | False    |\n\nKIM-EDN encoder (KIMEDNEncoder) for OpenKIM Python data structures, supports\nthe following objects and types by default:\n\n| Python            | KIM-EDN                                     |\n|-------------------|---------------------------------------------|\n| dict              | Maps (or \"hash\", \"dicts\", \"hashmaps\", etc.) |\n| list              | Vectors (or \"arrays\")                       |\n| str               | Strings                                     |\n| int               | Integers numbers                            |\n| float             | Floating point numbers                      |\n| True              | true                                        |\n| False             | false                                       |\n\n## Installing kim-edn\n\n### Requirements\n\nYou need Python 3.6 or later to run `kim-edn`. You can have multiple Python\nversions (2.x and 3.x) installed on the same system without problems.\n\nTo install Python 3 for different Linux flavors, macOS and Windows, packages\nare available at\\\n[https://www.python.org/getit/](https://www.python.org/getit/)\n\n### Using pip\n\n**pip** is the most popular tool for installing Python packages, and the one\nincluded with modern versions of Python.\n\n`kim-edn` can be installed with `pip`:\n\n```sh\npip install kim-edn\n```\n\n**Note:**\n\nDepending on your Python installation, you may need to use `pip3` instead of\n`pip`.\n\n```sh\npip3 install kim-edn\n```\n\nDepending on your configuration, you may have to run `pip` like this:\n\n```sh\npython3 -m pip install kim-edn\n```\n\n### Using pip (GIT Support)\n\n`pip` currently supports cloning over `git`\n\n```sh\npip install git+https://github.com/openkim/kim-edn.git\n```\n\nFor more information and examples, see the\n[pip install](https://pip.pypa.io/en/stable/reference/pip_install/#id18)\nreference.\n\n### Using conda\n\n**conda** is the package management tool for Anaconda Python installations.\n\nInstalling `kim-edn` from the `conda-forge` channel can be achieved by adding\n`conda-forge` to your channels with:\n\n```sh\nconda config --add channels conda-forge\n```\n\nOnce the `conda-forge` channel has been enabled, `kim-edn` can be installed\nwith:\n\n```sh\nconda install kim-edn\n```\n\nIt is possible to list all of the versions of `kim-edn` available on your\nplatform with:\n\n```sh\nconda search kim-edn --channel conda-forge\n```\n\n## References\n\nThis module has been adapted and updated from the\n[python](https://docs.python.org) **json** module to comply with the\n[subset of **edn** format used in **KIM**](https://openkim.org/doc/schema/edn-format).\n\n## Copyright\n\nCopyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019 Python Software\nFoundation;\\\nAll Rights Reserved\n\nCopyright (c) 2019-2021, Regents of the University of Minnesota.\\\nAll Rights Reserved\n\n## Contributing\n\nContributors:\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Yaser Afshar\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/openkim/kim-edn",
    "keywords": "kim-edn,edn",
    "license": "LGPL-2.1-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kim-edn",
    "package_url": "https://pypi.org/project/kim-edn/",
    "platform": "",
    "project_url": "https://pypi.org/project/kim-edn/",
    "project_urls": {
      "Homepage": "https://github.com/openkim/kim-edn"
    },
    "release_url": "https://pypi.org/project/kim-edn/1.3.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "kim-edn - KIM-EDN encoder and decoder.",
    "version": "1.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11385994,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31fe22a535f13799ec3c5d13bbf4a5142b34b724cb53917cc166e00853af6205",
          "md5": "d0b1f2b230673d85fead677c390df047",
          "sha256": "6eeed4c16d21bb334215ecab3410f7b64ad7926fa206540367c0021bef6cff74"
        },
        "downloads": -1,
        "filename": "kim_edn-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d0b1f2b230673d85fead677c390df047",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 38785,
        "upload_time": "2020-02-12T14:58:33",
        "upload_time_iso_8601": "2020-02-12T14:58:33.206378Z",
        "url": "https://files.pythonhosted.org/packages/31/fe/22a535f13799ec3c5d13bbf4a5142b34b724cb53917cc166e00853af6205/kim_edn-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "570cd8cbc6141bb6a8271b42464179b897e31d7506ccd32f130f77189885696d",
          "md5": "13afae62c5cf18b57577bbecc2c9322c",
          "sha256": "bab88a0a890598577a5dabe0ff19ed573ef7a0be547e5a47b15deeb4ec711db5"
        },
        "downloads": -1,
        "filename": "kim_edn-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "13afae62c5cf18b57577bbecc2c9322c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41989,
        "upload_time": "2020-02-12T14:58:34",
        "upload_time_iso_8601": "2020-02-12T14:58:34.521693Z",
        "url": "https://files.pythonhosted.org/packages/57/0c/d8cbc6141bb6a8271b42464179b897e31d7506ccd32f130f77189885696d/kim_edn-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fed8f55d1995e6f661d4e7a211ad34f519e6cca31af9f6f58ea1e221cc52f6c",
          "md5": "bd395bb7a8323b2081b958a554affdc7",
          "sha256": "e64d0dd0e87c1f299bee08d2739aa731dfcd49838e96053bfc35395e42dcf0d7"
        },
        "downloads": -1,
        "filename": "kim_edn-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd395bb7a8323b2081b958a554affdc7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 39380,
        "upload_time": "2020-02-28T13:59:33",
        "upload_time_iso_8601": "2020-02-28T13:59:33.526789Z",
        "url": "https://files.pythonhosted.org/packages/1f/ed/8f55d1995e6f661d4e7a211ad34f519e6cca31af9f6f58ea1e221cc52f6c/kim_edn-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccb9dba76c72d13f597dfc30c5e4f8cda460ec55178cd2bbe5ce396e37aedb69",
          "md5": "aff1a2c25662b25e685f3c57cf2030b1",
          "sha256": "47aaf852cc8c2876be743c91d230de512d803e0be4c1d0e2b6aabc6a80552c9a"
        },
        "downloads": -1,
        "filename": "kim_edn-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aff1a2c25662b25e685f3c57cf2030b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 44438,
        "upload_time": "2020-02-28T13:59:34",
        "upload_time_iso_8601": "2020-02-28T13:59:34.951442Z",
        "url": "https://files.pythonhosted.org/packages/cc/b9/dba76c72d13f597dfc30c5e4f8cda460ec55178cd2bbe5ce396e37aedb69/kim_edn-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcf47f547328d6bb6b896031506042dd1c5337cb91700c38cc39ca693ea76184",
          "md5": "1ce00b793d55bee0767440cf426cc782",
          "sha256": "82e925955e3f08ea5d4549e2eea69c7f496a3cbfb99540d0dee1a4020a1eb740"
        },
        "downloads": -1,
        "filename": "kim_edn-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ce00b793d55bee0767440cf426cc782",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 39879,
        "upload_time": "2020-03-02T16:16:24",
        "upload_time_iso_8601": "2020-03-02T16:16:24.642160Z",
        "url": "https://files.pythonhosted.org/packages/bc/f4/7f547328d6bb6b896031506042dd1c5337cb91700c38cc39ca693ea76184/kim_edn-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "710075a843f53874f43e476a84fceaa65d629a07bc0e9182b5bcf909b799009b",
          "md5": "a13e89b2190f9dfcfbb805a0f9f15f70",
          "sha256": "7c47d67f5dc110c35238abadb0d9c421ced11f959e5a440858beafb57166de83"
        },
        "downloads": -1,
        "filename": "kim-edn-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a13e89b2190f9dfcfbb805a0f9f15f70",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 45660,
        "upload_time": "2020-03-02T16:16:26",
        "upload_time_iso_8601": "2020-03-02T16:16:26.452441Z",
        "url": "https://files.pythonhosted.org/packages/71/00/75a843f53874f43e476a84fceaa65d629a07bc0e9182b5bcf909b799009b/kim-edn-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22e542348f179c7707940cef780640433cb0523f3738d406d9e9a270f886e484",
          "md5": "07be70125374028c2b0184e74d60fc9e",
          "sha256": "beff75c0d33d099f34b083b6c60b316ff8ee52f24848c460d42494f1d56d4e70"
        },
        "downloads": -1,
        "filename": "kim_edn-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07be70125374028c2b0184e74d60fc9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 43510,
        "upload_time": "2021-09-06T16:55:29",
        "upload_time_iso_8601": "2021-09-06T16:55:29.428723Z",
        "url": "https://files.pythonhosted.org/packages/22/e5/42348f179c7707940cef780640433cb0523f3738d406d9e9a270f886e484/kim_edn-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0214fc81b8a15b3956b2ed1282a4c263c7ac4f405fd8505d7236d6a30f080a24",
          "md5": "2140a530edab47230a9d2277473bbc65",
          "sha256": "66fc442b79f20381f148e8b9c90006d557039b3d31235a8477536a48472bccec"
        },
        "downloads": -1,
        "filename": "kim-edn-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2140a530edab47230a9d2277473bbc65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 54882,
        "upload_time": "2021-09-06T16:55:31",
        "upload_time_iso_8601": "2021-09-06T16:55:31.465029Z",
        "url": "https://files.pythonhosted.org/packages/02/14/fc81b8a15b3956b2ed1282a4c263c7ac4f405fd8505d7236d6a30f080a24/kim-edn-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f9abd88f492093641caca571e10117bee18727e5eecfbe68a0bce99235c66da",
          "md5": "0414534d929378af2391698fab74c581",
          "sha256": "0ce8e111910548dc8b0ee496cb29b9454df9c82095afaec3cb626050b6e7f365"
        },
        "downloads": -1,
        "filename": "kim_edn-1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0414534d929378af2391698fab74c581",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 43521,
        "upload_time": "2021-09-07T14:49:06",
        "upload_time_iso_8601": "2021-09-07T14:49:06.855387Z",
        "url": "https://files.pythonhosted.org/packages/0f/9a/bd88f492093641caca571e10117bee18727e5eecfbe68a0bce99235c66da/kim_edn-1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fbf0f30541fa0091a86b4176dc3f3e7ca1624299b6df5bc1749c3c3d96f43f1",
          "md5": "c0f91c96ce4b6756f8cb74d6a690d96a",
          "sha256": "1606498d2b8e438aaae4ea74a25d84215702ea83a786f22e1bbcbd5b4a71c38f"
        },
        "downloads": -1,
        "filename": "kim-edn-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c0f91c96ce4b6756f8cb74d6a690d96a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 54908,
        "upload_time": "2021-09-07T14:49:08",
        "upload_time_iso_8601": "2021-09-07T14:49:08.456954Z",
        "url": "https://files.pythonhosted.org/packages/6f/bf/0f30541fa0091a86b4176dc3f3e7ca1624299b6df5bc1749c3c3d96f43f1/kim-edn-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f9abd88f492093641caca571e10117bee18727e5eecfbe68a0bce99235c66da",
        "md5": "0414534d929378af2391698fab74c581",
        "sha256": "0ce8e111910548dc8b0ee496cb29b9454df9c82095afaec3cb626050b6e7f365"
      },
      "downloads": -1,
      "filename": "kim_edn-1.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0414534d929378af2391698fab74c581",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 43521,
      "upload_time": "2021-09-07T14:49:06",
      "upload_time_iso_8601": "2021-09-07T14:49:06.855387Z",
      "url": "https://files.pythonhosted.org/packages/0f/9a/bd88f492093641caca571e10117bee18727e5eecfbe68a0bce99235c66da/kim_edn-1.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6fbf0f30541fa0091a86b4176dc3f3e7ca1624299b6df5bc1749c3c3d96f43f1",
        "md5": "c0f91c96ce4b6756f8cb74d6a690d96a",
        "sha256": "1606498d2b8e438aaae4ea74a25d84215702ea83a786f22e1bbcbd5b4a71c38f"
      },
      "downloads": -1,
      "filename": "kim-edn-1.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c0f91c96ce4b6756f8cb74d6a690d96a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 54908,
      "upload_time": "2021-09-07T14:49:08",
      "upload_time_iso_8601": "2021-09-07T14:49:08.456954Z",
      "url": "https://files.pythonhosted.org/packages/6f/bf/0f30541fa0091a86b4176dc3f3e7ca1624299b6df5bc1749c3c3d96f43f1/kim-edn-1.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}