{
  "info": {
    "author": "Erik Nyquist",
    "author_email": "eknyquist@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "chatbot_utils\r\n=============\r\n\r\n.. |travis_badge| image:: https://travis-ci.org/eriknyquist/chatbot_utils.svg?branch=master\r\n    :target: https://travis-ci.org/eriknyquist/chatbot_utils\r\n\r\n.. |docs_badge| image:: https://readthedocs.org/projects/chatbot-utils/badge/?version=latest\r\n    :target: https://chatbot-utils.readthedocs.io/en/latest/?badge=latest\r\n\r\n|travis_badge| |docs_badge|\r\n\r\n.. contents:: Table of Contents\r\n\r\nChatbot utils provides easy-to-use tools for building a chatbot capable of\r\nreturning flexible, contextual responses when provided with text input.\r\n\r\nSupports Python 2.x and 3.x.\r\n\r\nBy *Contextual responses*, I mean something like this;\r\n\r\n::\r\n\r\n    human >> hey, what time is it?\r\n      bot >> it's 10.32pm\r\n    human >> is that past my bedtime?\r\n      bot >> no, you're good\r\n\r\nThe second phrase typed by the human, ``\"is that past my bedtime?\"``, is\r\nambiguous, and required the bot to understand that this was an incomplete\r\nquestion related to the previous question, i.e. the **context**.\r\n\r\nInstallation\r\n------------\r\n\r\nFrom PyPi\r\n#########\r\n\r\n::\r\n\r\n    pip install chatbot_utils\r\n\r\nFrom Github\r\n###########\r\n\r\n#. ``git clone github.com/eriknyquist/chatbot_utils``\r\n#. ``cd chatbot_utils``\r\n#. ``python setup.py build``\r\n#. ``python setup.py install``\r\n\r\nAPI documentation\r\n-----------------\r\n\r\nRead the API documentation `here <https://chatbot-utils.readthedocs.io/>`_\r\n\r\n\r\nExample bot with chatbot_utils, showing how to use contexts\r\n-----------------------------------------------------------\r\n\r\nThe following example shows how to create a bot that can provide contexual responses\r\nto specific questions:\r\n\r\n.. code-block:: python\r\n\r\n    import random\r\n    import time\r\n\r\n    from chatbot_utils.responder import Responder\r\n    from chatbot_utils.utils import ContextCreator, get_input\r\n\r\n    random.seed(time.time())\r\n\r\n\r\n    responder = Responder()\r\n\r\n\r\n    # Add a context for talking about cats\r\n    with ContextCreator(responder) as ctx:\r\n        # Phrase to trigger entry into cat context\r\n        ctx.add_entry_phrases(([\"(.* )?(talk about|tell( me)? about) cats?.*\"], [\"Sure, I love cats\"]))\r\n\r\n        # These phrases will only be recognized after the entry phrase has been seen\r\n        ctx.add_responses(\r\n            ([\"(.* )?favou?rite thing about (them|cats?).*\"], [\"They are fuzzy\"]),\r\n            ([\"(.* )?(do )?you have (one|(a )?cat).*\"], [\"No, computer programs can't have cats.\"])\r\n        )\r\n\r\n        # Add a nested context inside the cat context (you can do this as deep as you like)\r\n        with ContextCreator(ctx) as subctx:\r\n            # Phrase to trigger entry into cat food context, will only be recognized when we're already in the cat context\r\n            subctx.add_entry_phrases(([\"(.* )?(talk about|tell( me)? about) food?.*\"], [\"Sure, let's talk about cat food\"]))\r\n\r\n            # These phrases will only be recognized after BOTH entry phrases have been seen\r\n            subctx.add_responses(\r\n                ([\"(.* )?(favou?rite|best) type( of food)?.*\"], [\"Computer programs do not eat cat food.\"]),\r\n            )\r\n\r\n            # Add explicit exit phrase for cat food subcontext (if no exit phrase is added,\r\n            # then he only way to exit the context is using a phrase that was added to the top-level\r\n            # responder object with Responder.add_response())\r\n            subctx.add_exit_phrases(([\"(.* )?(stop talking about ((dog )?food|this)|talk about something else).*\"], [\"OK, no more dog food talk.\"]))\r\n\r\n\r\n    # Add a context for talking about dogs\r\n    with ContextCreator(responder) as ctx:\r\n        # Phrase to trigger entry into dog context\r\n        ctx.add_entry_phrases(([\"(.* )?(talk about|tell( me)? about) dogs?.*\"], [\"Sure, I think dogs are great\"]))\r\n\r\n        # These phrases will only be recognized after the entry phrase has been seen\r\n        ctx.add_responses(\r\n            ([\"(.* )?favou?rite thing about (them|dogs?).*\"], [\"They are loyal\"]),\r\n            ([\"(.* )?(do )?you have (one|(a )?dog).*\"], [\"No, computer programs can't have dogs.\"])\r\n        )\r\n\r\n        # Add a nested context inside the dog context (you can do this as deep as you like)\r\n        with ContextCreator(ctx) as subctx:\r\n            # Phrase to trigger entry into dog food context, will only be recognized when we're already in the dog context\r\n            subctx.add_entry_phrases(([\"(.* )?(talk about|tell( me)? about) food?.*\"], [\"Sure, let's talk about dog food\"]))\r\n\r\n            # These phrases will only be recognized after BOTH entry phrases have been seen\r\n            subctx.add_responses(\r\n                ([\"(.* )?(favou?rite|best) type( of food)?.*\"], [\"Computer programs do not eat dog food.\"]),\r\n            )\r\n\r\n\r\n    # One of these responses will be randomly chosen whenever an unrecognized phrase is seen\r\n    responder.add_default_response([\"Oh, really?\", \"Mmhmm.\", \"Indeed.\", \"How fascinating.\"])\r\n\r\n    # These phrases will only be recognized when no context is active\r\n    responder.add_responses(\r\n        ([\"(.* )?hello.*\"], [\"How do you do?\", \"Hello!\", \"Oh, hi.\"]),\r\n        ([\"(. *)?(good)?bye.*\"], [\"Alright then, goodbye.\", \"See ya.\", \"Bye.\"])\r\n    )\r\n\r\n    # Simple prompt to get input from command line and pass to responder\r\n    while True:\r\n        text = get_input(\" > \")\r\n        resp, groups = responder.get_response(text)\r\n        print(\"\\n\\\"%s\\\"\\n\" % (random.choice(resp)))\r\n\r\n\r\nSave this file as ``example_bot.py`` and run it with ``python example_bot.py``.\r\nExample output:\r\n\r\n::\r\n\r\n     #~$ python example_bot.py\r\n\r\n     > hello!\r\n\r\n     \"Hello!\"\r\n\r\n     > hey, can we talk about dogs for a bit?\r\n\r\n     \"Sure, I think dogs are great\"\r\n\r\n     > what's your favourite thing about them?\r\n\r\n     \"They are loyal\"\r\n\r\n     > do you have one?\r\n\r\n     \"No, computer programs can't have dogs.\"\r\n\r\n     > OK, let's talk about cats now\r\n\r\n     \"Sure, I love cats\"\r\n\r\n     > do you have one?\r\n\r\n     \"No, computer programs can't have cats.\"\r\n\r\n     > and what's your favourite thing about them?\r\n\r\n     \"They are fuzzy\"\r\n\r\n\r\nExample bot with chatbot_utils, showing how to use format tokens\r\n----------------------------------------------------------------\r\n\r\nThe following example shows how to create a bot that can remember what you said your\r\nfavourite movie was, ad report it back later when asked:\r\n\r\n.. code-block:: python\r\n\r\n    from chatbot_utils.responder import Responder\r\n    from chatbot_utils.utils import ContextCreator, get_input\r\n\r\n    responder = Responder()\r\n\r\n    responder.add_default_response(\"Please tell me what your favourite movie is\")\r\n\r\n    responder.add_responses(\r\n        # When the bot is told what my favourite film is, it will save whatever film I said (4th\r\n        # parenthesis group, or p3) in a new variable named \"faveMovie\"\r\n        ([\"(.* )?(favou?rite|fave) (movie|film) is (.*)$\"],\r\n         \"Cool, I will remember that your favourite film is {p3}!;;faveMovie={p3}\"),\r\n\r\n        # When the bot is asked to recall what my favourite film is, it will report the value of 'faveMovie'\r\n        ([\"(.*)?(what is|what'?s|(can you )?tell me )?(what('?s)? )?my (fave|favou?rite) (movie|film).*\"],\r\n         \"Your favourite film is {faveMovie}!\")\r\n    )\r\n\r\n    # Simple prompt to get input from command line and pass to responder\r\n    while True:\r\n        text = get_input(\" > \")\r\n        resp, groups = responder.get_response(text)\r\n        print(\"\\n\\\"%s\\\"\\n\" % resp)\r\n\r\n\r\nSave this file as ``example_bot.py`` and run it with ``python example_bot.py``.\r\nExample output:\r\n\r\n::\r\n\r\n    #~$ python example_bot.py\r\n\r\n    > howdy!\r\n\r\n    \"Please tell me what your favourite movie is\"\r\n\r\n    > hmm, OK, I guess my favourite film is Gone With The Wind\r\n\r\n    \"Cool, I will remember that your favourite film is Gone With The Wind!\"\r\n\r\n    > hey, can you tell me what my fave movie is?\r\n\r\n    \"Your favourite film is Gone With The Wind!\"\r\n\r\n    > alright, now my favorite movie is spiderman 2\r\n\r\n    \"Cool, I will remember that your favourite film is spiderman 2!\"\r\n\r\n    > what's my favourite film?\r\n\r\n    \"Your favourite film is spiderman 2!\"\r\n\r\n    >\r\n\r\nPerformance characterizations\r\n-----------------------------\r\n\r\nA core component of ``chatbot_utils`` is a custom dictionary called a ReDict,\r\nwhich expects values to be set with regular expressions as keys. Values can then\r\nbe retrieved from the dict by providing input text as the key, and any values\r\nwith a matching associated regular expression will be returned.\r\n\r\nReDicts with a large number of regular expressions (for example, a Responder\r\nwith several thousand pattern/response pairs added using the ``add_response``\r\nmethod) may take a significant amount of time when compiling the regular\r\nexpression(s) initially. By default, this is done automatically on first\r\nattempt to access a ReDict, but you can also call ``Responder.compile()``\r\nexplicitly to control when the regular expressions associated with a responder\r\nare compiled.\r\n\r\nOne additional quirk to note is that having more parenthesis groups in your\r\nregular expressions results in a significant increase in compile time for\r\nReDicts with a large number of items.\r\n\r\nAnalysis: compile time & fetch time with 100k items, no parenthesis groups\r\n##########################################################################\r\n\r\nEach regular expression in the 100k items of test data used for this analysis\r\nwas 14-19 characters in length, used several common special characters\r\nand was of the following form:\r\n\r\n::\r\n\r\n    foo? 10|bar* 10\r\n\r\nThe *Time to compile* was calculated simply by timing the ``ReDict.compile()``\r\nmethod. The *Time to fetch* is an average calculated by randomly fetching 10% of\r\nthe total number of items in the dict (e.g. for a dict with 1000 pattern/value\r\npairs added, 100 randomly-selected items would be fetched).\r\n\r\n.. image:: images/100000_items_no_extra_groups.png\r\n\r\nAnalysis: compile time & fetch time with 100k items, extra parenthesis groups\r\n#############################################################################\r\n\r\nEach regular expression in the 100k items of test data used for this analysis\r\nwas at least 25-30 characters in length, used several common special characters\r\nand was of the following form (note the addition parenthesis groups):\r\n\r\n::\r\n\r\n    (f)(o)o? 10|b((a)(r)*) 10\r\n\r\nSame as the previous test, the *Time to compile* was calculated by timing the\r\n``ReDict.compile()`` method, and the *Time to fetch* is an average calculated by\r\nrandomly fetching 10% of the total number of items in the dict.\r\n\r\n.. image:: images/100000_items_extra_groups.png\r\n\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/eriknyquist/chatbot_utils",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chatbot-utils",
    "package_url": "https://pypi.org/project/chatbot-utils/",
    "platform": null,
    "project_url": "https://pypi.org/project/chatbot-utils/",
    "project_urls": {
      "Homepage": "http://github.com/eriknyquist/chatbot_utils"
    },
    "release_url": "https://pypi.org/project/chatbot-utils/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Tools for creating chatbots",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13746716,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b93f3f1952c5dcae192348835a9249852c07d210f4c1b6b4ff57bb574dc4a4d0",
          "md5": "fe537534c6dba1e62bcae6de0865423b",
          "sha256": "7c9aef6e9e700d1a8e9acbdbdd134b28d4e3e0c4c6d8af77a2bf21b8415aac09"
        },
        "downloads": -1,
        "filename": "chatbot_utils-1.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe537534c6dba1e62bcae6de0865423b",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 16340,
        "upload_time": "2019-04-07T05:28:16",
        "upload_time_iso_8601": "2019-04-07T05:28:16.235219Z",
        "url": "https://files.pythonhosted.org/packages/b9/3f/3f1952c5dcae192348835a9249852c07d210f4c1b6b4ff57bb574dc4a4d0/chatbot_utils-1.0.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ec4273f3582f2659e7a687d319a803f000a6be0150567bac77cc03b20a4ed5d",
          "md5": "bf816bd7a82ee64fd598bdfb0a45102b",
          "sha256": "bab37f11411c8a7fd517420072bf22eb3ff51d57d8870b3950f1032869edc6d6"
        },
        "downloads": -1,
        "filename": "chatbot_utils-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf816bd7a82ee64fd598bdfb0a45102b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16341,
        "upload_time": "2019-04-07T05:28:18",
        "upload_time_iso_8601": "2019-04-07T05:28:18.464342Z",
        "url": "https://files.pythonhosted.org/packages/6e/c4/273f3582f2659e7a687d319a803f000a6be0150567bac77cc03b20a4ed5d/chatbot_utils-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15388cf7d11f06575bd579af21d1b865da0bd2b7824b7a4bfc304a75e5bcd47b",
          "md5": "8b881af9ff0c8d3cb5c8697aa4fe7114",
          "sha256": "f0ecc9b8414ed93dcc48a69e4aa3855e3342b9924f5cdb55678ae46a9362ab3c"
        },
        "downloads": -1,
        "filename": "chatbot_utils-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8b881af9ff0c8d3cb5c8697aa4fe7114",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11972,
        "upload_time": "2019-04-07T05:28:19",
        "upload_time_iso_8601": "2019-04-07T05:28:19.835453Z",
        "url": "https://files.pythonhosted.org/packages/15/38/8cf7d11f06575bd579af21d1b865da0bd2b7824b7a4bfc304a75e5bcd47b/chatbot_utils-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b978fb43e32ec98a49cab8efd4572fc509756ec4e56e9420e6b548863f920a22",
          "md5": "3be210aabb32a850e8da2217bd221622",
          "sha256": "63c79855b9678fddc88f700cfdc91ff31e2a53a7f31d62bcd31a1b5fc2328d58"
        },
        "downloads": -1,
        "filename": "chatbot_utils-1.0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "3be210aabb32a850e8da2217bd221622",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 18041,
        "upload_time": "2022-05-07T17:05:25",
        "upload_time_iso_8601": "2022-05-07T17:05:25.765587Z",
        "url": "https://files.pythonhosted.org/packages/b9/78/fb43e32ec98a49cab8efd4572fc509756ec4e56e9420e6b548863f920a22/chatbot_utils-1.0.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95306bcf8d3c5ba26a2499af1377130d8a3420ff7cffbc16bcf99c18a28d7919",
          "md5": "954288973410c376aa325a562a0bb794",
          "sha256": "a9453b31b53d4a9bc86a05c3024e965888b6d36dd6cfc9b3c5f2cb23acacd22c"
        },
        "downloads": -1,
        "filename": "chatbot_utils-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "954288973410c376aa325a562a0bb794",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18006,
        "upload_time": "2022-05-07T17:05:27",
        "upload_time_iso_8601": "2022-05-07T17:05:27.726168Z",
        "url": "https://files.pythonhosted.org/packages/95/30/6bcf8d3c5ba26a2499af1377130d8a3420ff7cffbc16bcf99c18a28d7919/chatbot_utils-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dda1ebcafdb9287ddf0547172d763d6c664d487047f16b0970a5d6b73767c158",
          "md5": "f870586d0703d2fd21a4886cac5e57c1",
          "sha256": "a9b50a5e4999968e5fb268e5ce7981e07909f5f202e7e5fa0b8b158785a94e1d"
        },
        "downloads": -1,
        "filename": "chatbot_utils-1.0.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "f870586d0703d2fd21a4886cac5e57c1",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 19468,
        "upload_time": "2022-05-07T20:21:49",
        "upload_time_iso_8601": "2022-05-07T20:21:49.679914Z",
        "url": "https://files.pythonhosted.org/packages/dd/a1/ebcafdb9287ddf0547172d763d6c664d487047f16b0970a5d6b73767c158/chatbot_utils-1.0.3-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a0389f7b1c1bb97af7a3e6579bb8cfefa3dc26f8aec89240eec7e5bdda91050",
          "md5": "619824f62b6df5a064d7f2a9e4b659d5",
          "sha256": "b6a0e40765174360227c634a97f450fa3840a9c3c103511370abcbc22903e95f"
        },
        "downloads": -1,
        "filename": "chatbot_utils-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "619824f62b6df5a064d7f2a9e4b659d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19427,
        "upload_time": "2022-05-07T20:21:51",
        "upload_time_iso_8601": "2022-05-07T20:21:51.468223Z",
        "url": "https://files.pythonhosted.org/packages/6a/03/89f7b1c1bb97af7a3e6579bb8cfefa3dc26f8aec89240eec7e5bdda91050/chatbot_utils-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "915814902c6de450bfaf442bc08371e7c04887bc5ae3210d333ab551b8746604",
          "md5": "7b331329388486ac68e355ce23953246",
          "sha256": "4c8fb405a8ce56bb8c44dab1be8f773f8acd52938d5cf52d7910390944389da1"
        },
        "downloads": -1,
        "filename": "chatbot_utils-1.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b331329388486ac68e355ce23953246",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 21778,
        "upload_time": "2022-05-08T01:07:14",
        "upload_time_iso_8601": "2022-05-08T01:07:14.652063Z",
        "url": "https://files.pythonhosted.org/packages/91/58/14902c6de450bfaf442bc08371e7c04887bc5ae3210d333ab551b8746604/chatbot_utils-1.1.0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4a9d42bc28192bbfdb89497f17d4ab9762b0ac6a383039046381f835c8c2f7c",
          "md5": "9aa93882f28c111129d512fad98f9ff5",
          "sha256": "e1dca9db078f6a30c0a6a5492c1eb24ccd0de75c3a4b2a6aa4809bf673fd01c3"
        },
        "downloads": -1,
        "filename": "chatbot_utils-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9aa93882f28c111129d512fad98f9ff5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21733,
        "upload_time": "2022-05-08T01:07:16",
        "upload_time_iso_8601": "2022-05-08T01:07:16.581957Z",
        "url": "https://files.pythonhosted.org/packages/e4/a9/d42bc28192bbfdb89497f17d4ab9762b0ac6a383039046381f835c8c2f7c/chatbot_utils-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "915814902c6de450bfaf442bc08371e7c04887bc5ae3210d333ab551b8746604",
        "md5": "7b331329388486ac68e355ce23953246",
        "sha256": "4c8fb405a8ce56bb8c44dab1be8f773f8acd52938d5cf52d7910390944389da1"
      },
      "downloads": -1,
      "filename": "chatbot_utils-1.1.0-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "7b331329388486ac68e355ce23953246",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 21778,
      "upload_time": "2022-05-08T01:07:14",
      "upload_time_iso_8601": "2022-05-08T01:07:14.652063Z",
      "url": "https://files.pythonhosted.org/packages/91/58/14902c6de450bfaf442bc08371e7c04887bc5ae3210d333ab551b8746604/chatbot_utils-1.1.0-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4a9d42bc28192bbfdb89497f17d4ab9762b0ac6a383039046381f835c8c2f7c",
        "md5": "9aa93882f28c111129d512fad98f9ff5",
        "sha256": "e1dca9db078f6a30c0a6a5492c1eb24ccd0de75c3a4b2a6aa4809bf673fd01c3"
      },
      "downloads": -1,
      "filename": "chatbot_utils-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9aa93882f28c111129d512fad98f9ff5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 21733,
      "upload_time": "2022-05-08T01:07:16",
      "upload_time_iso_8601": "2022-05-08T01:07:16.581957Z",
      "url": "https://files.pythonhosted.org/packages/e4/a9/d42bc28192bbfdb89497f17d4ab9762b0ac6a383039046381f835c8c2f7c/chatbot_utils-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}