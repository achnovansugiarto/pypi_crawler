{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Topic :: Software Development"
    ],
    "description": "[![Build Status](https://travis-ci.org/calekochenour/awherepy.svg?branch=master)](https://travis-ci.org/calekochenour/awherepy)\n[![Build status](https://ci.appveyor.com/api/projects/status/donws1p4r2w4wcy1?svg=true)](https://ci.appveyor.com/project/calekochenour/awherepy)\n[![codecov](https://codecov.io/gh/calekochenour/awherepy/branch/master/graph/badge.svg)](https://codecov.io/gh/calekochenour/awherepy)\n[![Documentation Status](https://readthedocs.org/projects/awherepy/badge/?version=latest)](https://awherepy.readthedocs.io/en/latest/?badge=latest)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\n[![Project Status: Active â€“ The project has reached a stable, usable state and is being actively developed.](https://www.repostatus.org/badges/latest/active.svg)](https://www.repostatus.org/#active)\n\n# aWherePy\n\naWherePy provides a Python solution to work with the [aWhere API](https://www.awhere.com/developer/).\n\n## Why aWherePy?\n\nPrior to aWherePy, aWhere's agronomic and weather data API was only accessible with R. aWherePy creates a Python solution for the aWhere API and provides Python code to:\n\n* Call the aWhere API;\n* Extract data from the aWhere API returns;\n* Clean and georeference extracted data;\n* Track crops and agricultural data over time;\n* Create an aWhere-sized (9 km x 9 km) grid from a shapefile; and,\n* Rasterize existing remote sensing and GIS data to the aWhere grid.\n\naWherePy allows for the creation of reproducible science workflows with Python scripts and/or Jupyter Notebooks and creates the vehicle to integrate aWhere data with other geospatial and remote sensing data within these platforms.\n\naWherePy contains seven modules:\n\n* agronomics;\n* crops;\n* fields;\n* grids;\n* models:\n* plantings; and,\n* weather.\n\naWherePy [weather](https://awherepy.readthedocs.io/en/latest/gallery_vignettes/work_with_weather.html#sphx-glr-gallery-vignettes-work-with-weather-py) and [agronomics](https://awherepy.readthedocs.io/en/latest/gallery_vignettes/work_with_agronomics.html#sphx-glr-gallery-vignettes-work-with-agronomics-py) modules provide the functionality to get historical norms, observed values, and forecast values for weather and agriculture metrics that are formatted, georeferenced, and ready for data analysis and visualization.\n\naWherePy [grids](https://awherepy.readthedocs.io/en/latest/gallery_vignettes/work_with_grids.html#sphx-glr-gallery-vignettes-work-with-grids-py) module provides functionality to rasterize data to the aWhere grid (9x9 km cells). This allows you to integrate other geospatial and remote sensing data (e.g. world population data, normalized difference vegetation index data) with aWhere API data to create advanced analytical insights.\n\naWherePy [fields](https://awherepy.readthedocs.io/en/latest/gallery_vignettes/work_with_fields.html#sphx-glr-gallery-vignettes-work-with-fields-py), [crops](https://awherepy.readthedocs.io/en/latest/gallery_vignettes/work_with_crops.html#sphx-glr-gallery-vignettes-work-with-crops-py), [plantings](https://awherepy.readthedocs.io/en/latest/gallery_vignettes/work_with_plantings.html#sphx-glr-gallery-vignettes-work-with-plantings-py), and [models](https://awherepy.readthedocs.io/en/latest/gallery_vignettes/work_with_models.html#sphx-glr-gallery-vignettes-work-with-models-py) modules provide access to advanced agricultural models that track crop data over time and produce information that allows you to make real-time agricultural decisions and adjustments.\n\n## aWherePy Package Structure\n\naWherePy reflects the currently capabilities of the aWhere API. This section outlines the structure of the aWherePy package, as it relates to the seven package modules.\n\n### `awherepy/`\n\nContains Python scripts for the aWherePy modules (e.g. `agronomics.py`). Also contains two sub-folders, one with example data and one with module test scripts.\n\n### `awherepy/example-data`\n\nContains datasets used in the aWherePy tests and vignette gallery examples.\n\n### `awherepy/tests`\n\nContains Python scripts for the aWherePy tests (e.g. `test_agronomics.py`).\n\n### `docs/`\n\nContains files used to organize and populate the aWherePy documentation.\n\n### `examples/`\n\nContains Python scripts used to in the aWherePy vignette gallery (e.g. `work_with_agronomics.py`).\n\n\n## View Example aWherePy Applications\n\nYou can view aWherePy applications in the [vignette gallery](https://awherepy.readthedocs.io/en/latest/gallery_vignettes/index.html), which demonstrates functionality for all seven aWherePy modules.\n\nIn addition, the aWherePy package contains [Python scripts](https://github.com/calekochenour/awherepy/tree/master/examples) to run the example applications for each module as well as the [example data](https://github.com/calekochenour/awherepy/tree/master/awherepy/example-data) used within the Python scripts.\n\n## Install aWherePy\n\nInstalling aWherePy 0.1.0 directly from GitHub with pip will fail due to incompatibilities with pip and the `rtree` package (specifically `rtree>=0.9.0`), which is required for aWherePy functionality.\n\nThe recommended method to install aWherePy 0.1.0 for local testing and evaluation is to fork or clone the repository, install Conda, create a Conda environment with the necessary packages, and run the complete test suite.\n\n### Fork or Clone aWherePy\n\nOnce you have forked aWherePy or copied the aWherePy clone link, you can run the following terminal command within a local directory to initialize the repository.\n\nIf fork:\n```bash\n$ git clone https://github.com/YOUR-USERNAME/awherepy.git\n```\n\nIf clone:\n```bash\n$ git clone https://github.com/calekochenour/awherepy.git\n```\n\n### Install Conda\n\nYou must install Conda - [Miniconda](https://docs.conda.io/en/latest/miniconda.html) (recommended) or [Anaconda](https://docs.anaconda.com/anaconda/install/) - in order to create a Conda environment that will run the complete aWherePy test suite.\n\n### Create aWherePy Development Conda Environment\n\nThe root directory of aWherePy contains the `environment-dev.yml` file, which when used to create a Conda environment, provides all packages (functionality and testing) to run the complete aWherePy test suite.\n\nFrom the terminal, you can create the development Conda environment.\n\nCreate environment:\n\n```bash\n$ conda env create -f environment-dev.yml\n```\n\n### Activate Conda Environment and Run aWherePy Test Suite\n\nOnce the aWherePy development environment is created, you can activate it and run the complete test suite.\n\nActivate environment:\n\n```bash\n$ conda activate awherepy-dev\n```\n\nRun test suite:\n\n```bash\n$ pytest\n```\n\nNote: Before running `pytest`, make sure that you are in the root aWherePy folder.\n\n### Use aWherePy within Terminal\n\nOnce installed with a fork or clone, you can also use aWherePy for reasons other than testing. For example, you can import aWherePy into Python:\n\n```python\n>>> import awherepy as aw\n```\n\nYou can also import the individual modules into Python:\n\n```python\n>>> import awherepy.agronomics as awa\n>>> import awherepy.crops as awc\n>>> import awherepy.fields as awf\n>>> import awherepy.grid as awg\n>>> import awherepy.models as awm\n>>> import awherepy.plantings as awp\n>>> import awherepy.weather as aww\n```\n\n## aWhere API Authentication\n\nIn order to work with aWherePy, you must possess a valid API key and API secret (associated an active [aWhere account](https://apps.awhere.com/)). All modules (with the exception of grids) requires the API key and API secret to authenticate prior to making any API requests. Otherwise, the functions within the modules will raise errors indicating invalid credentials.\n\nThe credentials used in all examples, tests, and documentation are stored and shown as environment variables in the following way:\n\n```python\n>>> # Define aWhere API key and secret\n>>> awhere_api_key = os.environ.get(\"AWHERE_API_KEY\")\n>>> awhere_api_secret = os.environ.get(\"AWHERE_API_SECRET\")\n```\n\nFor both aWherePy continuous integration builds ([Travis CI](https://travis-ci.org/github/calekochenour/awherepy), [AppVeyor](https://ci.appveyor.com/project/calekochenour/awherepy)), the API key and secret are stored as secure environment variables, which allows the full suite of tests to run and the code coverage to be updated upon completion of the build.\n\nThe aWhere API credentials are not transferable and will not be downloaded when you install, fork, or clone aWherePy. Because of this, all tests (with the exception of the grids module) will fail when run locally, unless you have a valid aWhere API key and API secret. Note that credentials can be stored in different ways locally (e.g. environment variables, text file, other means), but tests may have to be altered to fit a method other than environment variables, as shown in the examples, tests, and documentation.\n\n## Example Usage\n\nThis example shows how to get weather data for a single aWhere grid cell near Rocky Mountain National Park (RMNP), Colorado, using the aWherePy grids and weather modules.\n\n```python\n>>> # Imports\n>>> import os\n>>> import awherepy.grids as awg\n>>> import awherepy.weather as aww\n\n>>> # Define aWhere API key and secret\n>>> awhere_api_key = os.environ.get('AWHERE_API_KEY')\n>>> awhere_api_secret = os.environ.get('AWHERE_API_SECRET')\n\n>>> # Define path to RMNP boundary\n>>> rmnp_bound_path = os.path.join(\n...     \"..\", \"awherepy\", \"example-data\", \"colorado_rmnp_boundary.shp\"\n... )   \n\n>>> # Create aWhere grid and EPSG 4326 boundary for RMNP\n>>> rmnp_grid, rmnp_bound_4326 = awg.create_grid(rmnp_bound_path,\n...    buffer_distance=0.12\n... )\n\n>>> # Extract RMNP grid centroids to list\n>>> rmnp_grid_centroids = awg.extract_centroids(rmnp_grid)\n\n>>> # Get first centroid\n>>> analysis_centroid = rmnp_grid_centroids[0]\n\n>>> # Define RMNP norms kwargs\n>>> rmnp_weather_norms_kwargs = {\n...     \"location\": (analysis_centroid[0], analysis_centroid[1]),\n...     \"start_date\": \"05-04\",\n...     \"end_date\": \"05-13\",\n... }\n\n>>> # Get RMNP weather norms, 05-04 to 05-13\n>>> rmnp_weather_norms = aww.get_weather_norms(\n...     awhere_api_key, awhere_api_secret, kwargs=rmnp_weather_norms_kwargs\n... )\n\n>>> # Get precipitation average from weather norms data\n>>> rmnp_precip_norms = rmnp_weather_norms[[\"precip_avg_mm\"]]\n\n>>> # Define RMNP observed weather kwargs\n>>> rmnp_weather_observed_kwargs = {\n...     \"location\": (analysis_centroid[0], analysis_centroid[1]),\n...     \"start_date\": \"2014-05-04\",\n...     \"end_date\": \"2014-05-13\",\n... }\n\n>>> # Get observed weather\n>>> rmnp_weather_observed = aww.get_weather_observed(\n...     awhere_api_key, awhere_api_secret, kwargs=rmnp_weather_observed_kwargs\n... )\n\n>>> # Get precipitation amount from observed weather data\n>>> rmnp_precip_observed = rmnp_weather_observed[[\"precip_amount_mm\"]]\n```\n\n## aWherePy Documentation\n\nFor information about how to use aWherePy modules and functions, see example applications, and view all other aWherePy documentation-related material, review the [aWherePy documentation](https://awherepy.readthedocs.io/en/latest/).\n\n## Related Packages\n\nThere are no existing Python packages that provide similar functionality for the aWhere API, which is the primary reason aWherePy was created. aWherePy is based on the [aWhere R Library](https://github.com/aWhereAPI/aWhere-R-Library), which is an R package created by aWhere for use with the aWhere API.\n\n## Active Maintainers\n\nContributions to aWherePy are welcome. Below are the current active package maintainers. Please see the\n[contributors page](https://awherepy.readthedocs.io/en/latest/contributors.html) for a complete list of all of maintainers.\n\n<a title=\"Cale Kochenour\" href=\"https://www.github.com/calekochenour\"><img width=\"60\" height=\"60\" alt=\"Cale Kochenour\" class=\"pull-left\" src=\"https://user-images.githubusercontent.com/54423680/82125272-10a41780-9762-11ea-9026-f705caa25e8e.PNG?size=120\" /></a>\n\n## How to Contribute\n\nContributions to aWherePy are welcome. Please see the\n[contributing guidelines](https://awherepy.readthedocs.io/en/latest/contributing.html) for more information about submitting pull requests or changes to aWherePy.\n\n## License\n\n[BSD-3](https://github.com/calekochenour/awherepy/blob/master/LICENSE)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/calekochenour/awherepy",
    "keywords": "",
    "license": "",
    "maintainer": "Cale Kochenour",
    "maintainer_email": "cale.kochenour@alumni.psu.edu",
    "name": "awherepy",
    "package_url": "https://pypi.org/project/awherepy/",
    "platform": "",
    "project_url": "https://pypi.org/project/awherepy/",
    "project_urls": {
      "Homepage": "https://github.com/calekochenour/awherepy"
    },
    "release_url": "https://pypi.org/project/awherepy/0.1.0/",
    "requires_dist": [
      "matplotlib",
      "numpy",
      "seaborn",
      "geopandas",
      "earthpy",
      "shapely",
      "rasterstats",
      "descartes",
      "rtree"
    ],
    "requires_python": "",
    "summary": "Python package built to work with weather and agriculture data in the aWhere API.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7626825,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de07ce34b4bae6d9677072d0e6eaf8a2cc7f8291c55de853cdc6603f86794715",
          "md5": "30fd3c838a546e0b4cdc3f14b0f0bfb8",
          "sha256": "708b0dda663e713227e4b3aa34c772203661064d2d91ab611bf929595e683d0d"
        },
        "downloads": -1,
        "filename": "awherepy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30fd3c838a546e0b4cdc3f14b0f0bfb8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35521,
        "upload_time": "2020-07-03T23:58:55",
        "upload_time_iso_8601": "2020-07-03T23:58:55.043519Z",
        "url": "https://files.pythonhosted.org/packages/de/07/ce34b4bae6d9677072d0e6eaf8a2cc7f8291c55de853cdc6603f86794715/awherepy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6822762d023c1443d10a87f491901725153d5b51af18e80b6b57ebddfbd8fcc",
          "md5": "14353dfd35a01bd05b407266bc059ab5",
          "sha256": "b7a1c5a09432f6c1870499bbde8f7ee33396794a9ee1df5196fcc0665bb971a3"
        },
        "downloads": -1,
        "filename": "awherepy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "14353dfd35a01bd05b407266bc059ab5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41187,
        "upload_time": "2020-07-03T23:58:57",
        "upload_time_iso_8601": "2020-07-03T23:58:57.412315Z",
        "url": "https://files.pythonhosted.org/packages/c6/82/2762d023c1443d10a87f491901725153d5b51af18e80b6b57ebddfbd8fcc/awherepy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de07ce34b4bae6d9677072d0e6eaf8a2cc7f8291c55de853cdc6603f86794715",
        "md5": "30fd3c838a546e0b4cdc3f14b0f0bfb8",
        "sha256": "708b0dda663e713227e4b3aa34c772203661064d2d91ab611bf929595e683d0d"
      },
      "downloads": -1,
      "filename": "awherepy-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "30fd3c838a546e0b4cdc3f14b0f0bfb8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 35521,
      "upload_time": "2020-07-03T23:58:55",
      "upload_time_iso_8601": "2020-07-03T23:58:55.043519Z",
      "url": "https://files.pythonhosted.org/packages/de/07/ce34b4bae6d9677072d0e6eaf8a2cc7f8291c55de853cdc6603f86794715/awherepy-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6822762d023c1443d10a87f491901725153d5b51af18e80b6b57ebddfbd8fcc",
        "md5": "14353dfd35a01bd05b407266bc059ab5",
        "sha256": "b7a1c5a09432f6c1870499bbde8f7ee33396794a9ee1df5196fcc0665bb971a3"
      },
      "downloads": -1,
      "filename": "awherepy-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "14353dfd35a01bd05b407266bc059ab5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 41187,
      "upload_time": "2020-07-03T23:58:57",
      "upload_time_iso_8601": "2020-07-03T23:58:57.412315Z",
      "url": "https://files.pythonhosted.org/packages/c6/82/2762d023c1443d10a87f491901725153d5b51af18e80b6b57ebddfbd8fcc/awherepy-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}