{
  "info": {
    "author": "Netflix Telemetry Engineering",
    "author_email": "netflix-atlas@googlegroups.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![Snapshot](https://github.com/Netflix/spectator-py/actions/workflows/snapshot.yml/badge.svg)](https://github.com/Netflix/spectator-py/actions/workflows/snapshot.yml)\n\n## Introduction\n\nPython thin-client metrics library for use with [Atlas] and [SpectatorD].\n\nSupports Python >= 3.5. This version is chosen as the baseline, because it is the oldest system\nPython available in our operating environments. \n\n[Atlas]: https://github.com/Netflix/atlas\n[SpectatorD]: https://github.com/Netflix-Skunkworks/spectatord\n\n## Local Development\n\nInstall [pyenv](https://github.com/pyenv/pyenv), possibly with [Homebrew](https://brew.sh/), and\ninstall a recent Python version.\n\n```shell\nmake setup-venv\nmake test\nmake coverage\n```\n\n## Usage\n\n## Installing\n\nInstall this library for your project as follows:\n\n```\npip3 install netflix-spectator-py\n```\n\nPublishing metrics requires a [SpectatorD] process running on your instance.\n\n## Importing\n\n### Standard Usage\n\nAt Netflix, your initialization script should load the environment, to ensure that the standard\nvariables are available to the Python application.\n\n```bash\nsource /etc/nflx/environment\n```\n\nImporting the `GlobalRegistry` instantiates a `Registry` with a default configuration that applies\nprocess-specific common tags based on environment variables and opens a socket to the [SpectatorD]\nsidecar. The remainder of the instance-specific common tags are provided by SpectatorD.\n\n```python\nfrom spectator import GlobalRegistry\n```\n\nOnce the `GlobalRegistry` is imported, it is used to create and manage Meters.\n\n### Logging\n\nThis package provides the following loggers:\n\n* `spectator.MeterId`\n* `spectator.SidecarWriter`\n\nThe `MeterId` logger is used to report invalid meters which have not-a-str tag keys or values.\n\nWhen troubleshooting metrics collection and reporting, you should set the `SidecarWriter` logging\nto the `DEBUG` level, before the first metric is recorded. For example:\n\n```python\nimport logging\n\n# record the human-readable time, name of the logger, logging level, thread id and message\nlogging.basicConfig(\n    level=logging.DEBUG,\n    format='%(asctime)s - %(name)s - %(levelname)s - %(thread)d - %(message)s'\n)\n\nlogging.getLogger('spectator.SidecarWriter').setLevel(logging.DEBUG)\n```\n\nThere is approximately a 10% performance penalty in UDP write performance when debug logging is\nenabled. It may be more, depending on the exact logging configuration (i.e. flushing to slow disk).\n\n## Working with IDs\n\nThe IDs used for identifying a meter in the `GlobalRegistry` consist of a name and a set of tags.\nIDs will be consumed by users many times after the data has been reported, so they should be\nchosen thoughtfully, while considering how they will be used. See the [naming conventions] page\nfor general guidelines.\n\nIDs are immutable, so they can be freely passed around and used in a concurrent context. Tags can\nbe added to an ID when it is created, to track the dimensionality of the metric. **All tag keys\nand values must be strings.** For example, if you want to keep track of the number of successful\nrequests, you must cast integers to strings.\n\n```python\nfrom spectator import GlobalRegistry\n\nrequests_id = GlobalRegistry.counter(\"server.numRequests\", {\"statusCode\": str(200)})\nrequests_id.increment()\n```\n\n[naming conventions]: https://netflix.github.io/atlas-docs/concepts/naming/\n\n## Meter Types\n\n### Age Gauges\n\nThe value is the time in seconds since the epoch at which an event has successfully occurred, or\n`0` to use the current time in epoch seconds. After an Age Gauge has been set, it will continue\nreporting the number of seconds since the last time recorded, for as long as the SpectatorD\nprocess runs. The purpose of this metric type is to enable users to more easily implement the\nTime Since Last Success alerting pattern.\n\nTo set a specific time as the last success:\n\n```python\nfrom spectator import GlobalRegistry\n\nGlobalRegistry.age_gauge(\"time.sinceLastSuccess\").set(1611081000)\n```\n\nTo set `now()` as the last success:\n\n```python\nfrom spectator import GlobalRegistry\n\nGlobalRegistry.age_gauge(\"time.sinceLastSuccess\").set(0)\n```\n\nBy default, a maximum of `1000` Age Gauges are allowed per `spectatord` process, because there is no\nmechanism for cleaning them up. This value may be tuned with the `--age_gauge_limit` flag on the\n`spectatord` binary.\n\n### Counters\n\nA Counter is used to measure the rate at which an event is occurring. Considering an API\nendpoint, a Counter could be used to measure the rate at which it is being accessed.\n\nCounters are reported to the backend as a rate-per-second. In Atlas, the `:per-step` operator\ncan be used to convert them back into a value-per-step on a graph.\n\nCall `increment()` when an event occurs:\n\n```python\nfrom spectator import GlobalRegistry\n\nGlobalRegistry.counter(\"server.numRequests\").increment()\n```\n\nYou can also pass a value to `increment()`. This is useful when a collection of events happens\ntogether:\n\n```python\nfrom spectator import GlobalRegistry\n\nGlobalRegistry.counter(\"queue.itemsAdded\").increment(10)\n```\n\n### Distribution Summaries\n\nA Distribution Summary is used to track the distribution of events. It is similar to a Timer, but\nmore general, in that the size does not have to be a period of time. For example, a Distribution\nSummary could be used to measure the payload sizes of requests hitting a server.\n\nAlways use base units when recording data, to ensure that the tick labels presented on Atlas graphs\nare readable. If you are measuring payload size, then use bytes, not kilobytes (or some other unit).\nThis means that a `4K` tick label will represent 4 kilobytes, rather than 4 kilo-kilobytes.\n\nCall `record()` with a value:\n\n```python\nfrom spectator import GlobalRegistry\n\nGlobalRegistry.distribution_summary(\"server.requestSize\").record(10)\n```\n\n### Percentile Distribution Summaries\n\nThe value tracks the distribution of events, with percentile estimates. It is similar to a\nPercentile Timer, but more general, because the size does not have to be a period of time.\n\nFor example, it can be used to measure the payload sizes of requests hitting a server or the\nnumber of records returned from a query.\n\nIn order to maintain the data distribution, they have a higher storage cost, with a worst-case of\nup to 300X that of a standard Distribution Summary. Be diligent about any additional dimensions\nadded to Percentile Distribution Summaries and ensure that they have a small bounded cardinality.\n\nCall `record()` with a value:\n\n```python\nfrom spectator import GlobalRegistry\n\nGlobalRegistry.pct_distribution_summary(\"server.requestSize\").record(10)\n```\n\n### Gauges\n\nA gauge is a value that is sampled at some point in time. Typical examples for gauges would be\nthe size of a queue or number of threads in a running state. Since gauges are not updated inline\nwhen a state change occurs, there is no information about what might have occurred between samples.\n\nConsider monitoring the behavior of a queue of tasks. If the data is being collected once a minute,\nthen a gauge for the size will show the size when it was sampled. The size may have been much\nhigher or lower at some point during interval, but that is not known.\n\nCall `set()` with a value:\n\n```python\nfrom spectator import GlobalRegistry\n\nGlobalRegistry.gauge(\"server.queueSize\").set(10)\n```\n\nGauges will report the last set value for 15 minutes. This done so that updates to the values do\nnot need to be collected on a tight 1-minute schedule to ensure that Atlas shows unbroken lines in\ngraphs. A custom TTL may be configured for gauges. SpectatorD enforces a minimum TTL of 5 seconds.\n\n```python\nfrom spectator import GlobalRegistry\n\nGlobalRegistry.gauge(\"server.queueSize\", ttl_seconds=120).set(10)\n```\n\n### Timers\n\nA Timer is used to measure how long (in seconds) some event is taking.\n\nCall `record()` with a value:\n\n```python\nfrom spectator import GlobalRegistry\n\nGlobalRegistry.timer(\"server.requestLatency\").record(0.01)\n```\n\nA `stopwatch()` method is available which may be used as a [Context Manager](https://docs.python.org/3/reference/datamodel.html#context-managers)\nto automatically record the number of seconds that have elapsed while executing a block of code:\n\n```python\nimport time\nfrom spectator import GlobalRegistry\n\nt = GlobalRegistry.timer(\"thread.sleep\")\n\nwith t.stopwatch():\n    time.sleep(5)\n```\n\nInternally, Timers will keep track of the following statistics as they are used:\n\n* `count`\n* `totalTime`\n* `totalOfSquares`\n* `max`\n\n### Percentile Timers\n\nThe value is the number of seconds that have elapsed for an event, with percentile estimates.\n\nThis metric type will track the data distribution by maintaining a set of Counters. The\ndistribution can then be used on the server side to estimate percentiles, while still\nallowing for arbitrary slicing and dicing based on dimensions.\n\nIn order to maintain the data distribution, they have a higher storage cost, with a worst-case of\nup to 300X that of a standard Timer. Be diligent about any additional dimensions added to Percentile\nTimers and ensure that they have a small bounded cardinality.\n\nCall `record()` with a value:\n\n```python\nfrom spectator import GlobalRegistry\n\nGlobalRegistry.pct_timer(\"server.requestLatency\").record(0.01)\n```\n\nA `stopwatch()` method is available which may be used as a [Context Manager](https://docs.python.org/3/reference/datamodel.html#context-managers)\nto automatically record the number of seconds that have elapsed while executing a block of code:\n\n```python\nimport time\nfrom spectator import GlobalRegistry\n\nt = GlobalRegistry.pct_timer(\"thread.sleep\")\n\nwith t.stopwatch():\n    time.sleep(5)\n```\n\n## asyncio Support\n\nThe `GlobalRegistry` provides a `UdpWriter` implementation of the `SidecarWriter` by default. UDP\nis a non-blocking, unordered and connectionless protocol, which is ideal for communicating with a\nlocal SpectatorD process in a variety of circumstances. The `UdpWriter` should be used in asyncio\napplications.\n\nThe `PrintWriter` implementation, which can be used to communicate with the SpectatorD Unix domain\nsocket, does not offer asyncio support at this time.\n\n## IPv6 Support\n\nBy default, SpectatorD will listen on `IPv6 UDP *:1234`, without setting the `v6_only(true)`\nflag. On dual-stacked systems, this means that it will receive packets from both IPv4 and IPv6,\nand the IPv4 addresses will show up on the server as IPv4-mapped IPv6 addresses.\n\nBy default, the `GlobalRegistry` will write UDP packets to `127.0.0.1:1234`, which will allow\nfor communication with SpectatorD on dual-stacked systems.\n\nOn IPv6-only systems, it may be necessary to change the default configuration using one of the\nfollowing methods:\n\n* Configure the following environment variable, which will override the default configuration of\nthe `GlobalRegistry`:\n\n      export SPECTATOR_OUTPUT_LOCATION=\"udp://[::1]:1234\"\n\n* Configure a custom Registry, instead of using the `GlobalRegistry`:\n\n      from spectator import Registry\n      from spectator.sidecarconfig import SidecarConfig\n      \n      r = Registry(config=SidecarConfig({\"sidecar.output-location\": \"udp://[::1]:1234\"}))\n      r.counter(\"test\").increment()\n\n## Writing Tests\n\nTo write tests against this library, instantiate a test instance of the Registry and configure it\nto use the [MemoryWriter](https://github.com/Netflix/spectator-py/blob/main/spectator/sidecarwriter.py#L63-L80),\nwhich stores all updates in a List. Use the `writer()` method on the Registry to access the writer,\nthen inspect the `last_line()` or `get()` all messages to verify your metrics updates.\n\n```python\nimport unittest\n\nfrom spectator import Registry\nfrom spectator.sidecarconfig import SidecarConfig\n\nclass MetricsTest(unittest.TestCase):\n\n    def test_counter(self):\n        r = Registry(config=SidecarConfig({\"sidecar.output-location\": \"memory\"}))\n\n        c = r.counter(\"test\")\n        self.assertTrue(r.writer().is_empty())\n\n        c.increment()\n        self.assertEqual(\"c:test:1\", r.writer().last_line())\n```\n\nIf you need to override the default output location (udp) of the `GlobalRegistry`, then you can\nset a `SPECTATOR_OUTPUT_LOCATION` environment variable to one of the following values supported\nby the `SidecarConfig` class:\n\n* `none` - Disable output.\n* `memory` - Write to memory.\n* `stdout` - Write to standard out for the process.\n* `stderr` - Write to standard error for the process.\n* `file://$path_to_file` - Write to a file (e.g. `file:///tmp/foo/bar`).\n* `udp://$host:$port` - Write to a UDP socket.\n\nIf you want to disable metrics publishing from the `GlobalRegistry`, then you can set:\n\n```shell\nexport SPECTATOR_OUTPUT_LOCATION=none\n```\n\nIf you want to validate the metrics that will be published through the `GlobalRegistry`\nin tests, then you can set:\n\n```shell\nexport SPECTATOR_OUTPUT_LOCATION=memory\n```\n\nThe `MemoryWriter` subclass offers a few methods to inspect the values that it captures:\n\n* `clear()` - Delete the contents of the internal list.\n* `get()` - Return the internal list.\n* `is_empty()` - Is the internal list empty?\n* `last_line()` - Return the last element of the internal list.\n\nLastly, a SpectatorD line protocol parser is available, which is intended to be used for validating\nthe results captured by a `MemoryWriter`. It may be used as follows:\n\n```python\nimport unittest\n\nfrom spectator.counter import Counter\nfrom spectator.protocolparser import parse_protocol_line\n\n\nclass ProtocolParserTest(unittest.TestCase):\n\n    def test_parse_counter_with_multiple_tags(self):\n        meter_class, meter_id, value = parse_protocol_line(\"c:test,foo=bar,baz=quux:1\")\n        self.assertEqual(Counter, meter_class)\n        self.assertEqual(\"test\", meter_id.name)\n        self.assertEqual({\"foo\": \"bar\", \"baz\": \"quux\"}, meter_id.tags())\n        self.assertEqual(\"1\", value)\n```\n\n## Migrating from 0.1.X to 0.2.X\n\n* This library no longer publishes directly to the Atlas backends. It now publishes to the\n[SpectatorD] sidecar which is bundled with all standard AMIs and containers. If you must\nhave the previous direct publishing behavior, because SpectatorD is not yet available on the\nplatform where your code runs, then you can pin to version `0.1.18`.\n* The internal Netflix configuration companion library is no longer required and this dependency\nmay be dropped from your project.\n* The API surface area remains unchanged to avoid breaking library consumers, and standard uses of\n`GlobalRegistry` helper methods for publishing metrics continue to work as expected. Several helper\nmethods on meter classes are now no-ops, always returning values such as `0` or `nan`. If you want\nto write tests to validate metrics publication, take a look at the tests in this library for a few\nexamples of how that can be done. The core idea is to capture the lines which will be written out\nto SpectatorD.\n* Replace uses of `PercentileDistributionSummary` with direct use of the Registry\n`pct_distribution_summary` method.\n\n    ```\n    # before\n    from spectator import GlobalRegistry\n    from spectator.histogram import PercentileDistributionSummary\n    \n    d = PercentileDistributionSummary(GlobalRegistry, \"server.requestSize\")\n    d.record(10)\n    ```\n\n    ```\n    # after\n    from spectator import GlobalRegistry\n    \n    GlobalRegistry.pct_distribution_summary(\"server.requestSize\").record(10)\n    ```\n\n* Replace uses of `PercentileTimer` with direct use of the Registry `pct_timer` method.\n\n    ```\n    # before\n    from spectator import GlobalRegistry\n    from spectator.histogram import PercentileTimer\n    \n    t = PercentileTimer(GlobalRegistry, \"server.requestSize\")\n    t.record(0.01)\n    ```\n    \n    ```\n    # after\n    from spectator import GlobalRegistry\n    \n    GlobalRegistry.pct_timer(\"server.requestSize\").record(0.1)\n    ```\n\n* Implemented new meter types supported by [SpectatorD]: `age_gauge`, `max_gauge` and\n`monotonic_counter`. See the SpectatorD documentation or the class docstrings for\nmore details.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Netflix/spectator-py",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "netflix-spectator-py",
    "package_url": "https://pypi.org/project/netflix-spectator-py/",
    "platform": null,
    "project_url": "https://pypi.org/project/netflix-spectator-py/",
    "project_urls": {
      "Homepage": "https://github.com/Netflix/spectator-py"
    },
    "release_url": "https://pypi.org/project/netflix-spectator-py/0.2.10/",
    "requires_dist": [
      "check-manifest ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "pytest ; extra == 'dev'"
    ],
    "requires_python": ">3.5",
    "summary": "Python library for reporting metrics to the Netflix Atlas Timeseries Database.",
    "version": "0.2.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16489224,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7e01611047fa08067033b7e2cd655e7ce189174648b79a588fb76617eee7f9a",
          "md5": "00a873ecba4bd3dc888b8f37ded34284",
          "sha256": "842c3d52c9363e68dbe58af7667a3e57ff04603a9c2493aebf71d68493479199"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "00a873ecba4bd3dc888b8f37ded34284",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8857,
        "upload_time": "2018-03-15T05:03:53",
        "upload_time_iso_8601": "2018-03-15T05:03:53.595634Z",
        "url": "https://files.pythonhosted.org/packages/e7/e0/1611047fa08067033b7e2cd655e7ce189174648b79a588fb76617eee7f9a/netflix-spectator-py-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e529a6b0e0604f33bd583aaa789804dc2082f38ae8f3ba674f8e12116500d8a",
          "md5": "f963f50acda4a0cdc15db0a2d3791cb6",
          "sha256": "9bdeb3a604fe19ffc8c38c77581bebdc32bed7e56c60aa099b30b073ede87fd5"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f963f50acda4a0cdc15db0a2d3791cb6",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 9621,
        "upload_time": "2018-03-15T18:03:52",
        "upload_time_iso_8601": "2018-03-15T18:03:52.617898Z",
        "url": "https://files.pythonhosted.org/packages/1e/52/9a6b0e0604f33bd583aaa789804dc2082f38ae8f3ba674f8e12116500d8a/netflix_spectator_py-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5f6dc2f81e3a8dc39354c6a6c7394d719647978fc4f988d9b66c761ec54af80",
          "md5": "af0068d386e8117a0add7457b4f80338",
          "sha256": "8f18d88ceb4276603e8008583ed02203feec07b4c6aef4c06d70aa17873f6c6e"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "af0068d386e8117a0add7457b4f80338",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9053,
        "upload_time": "2018-03-15T14:53:29",
        "upload_time_iso_8601": "2018-03-15T14:53:29.667298Z",
        "url": "https://files.pythonhosted.org/packages/f5/f6/dc2f81e3a8dc39354c6a6c7394d719647978fc4f988d9b66c761ec54af80/netflix-spectator-py-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e803ba8c42cc404199950129b96f16023eb65d8f5c7d5310cc2026b6be15e4fd",
          "md5": "7d61e1718bc4ee42df44cb8d386c2dee",
          "sha256": "e479c369bb18f989b5643d5bbae3ef6e17d02d838e8c5720d8e9d27cf5c1bb49"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.10-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d61e1718bc4ee42df44cb8d386c2dee",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 12897,
        "upload_time": "2019-06-03T23:11:27",
        "upload_time_iso_8601": "2019-06-03T23:11:27.857961Z",
        "url": "https://files.pythonhosted.org/packages/e8/03/ba8c42cc404199950129b96f16023eb65d8f5c7d5310cc2026b6be15e4fd/netflix_spectator_py-0.1.10-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6573e86abb9dfee3aba97766d45fcc5e4cda421d750f75fac4d917a0510f25e",
          "md5": "f60f89cd2a7d93576915bc7c43c6d1e6",
          "sha256": "868f893e2bb01275ae0468209faaf4e6bdaa380d063e21352aca41bc9464f200"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "f60f89cd2a7d93576915bc7c43c6d1e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13833,
        "upload_time": "2019-06-03T23:11:25",
        "upload_time_iso_8601": "2019-06-03T23:11:25.877355Z",
        "url": "https://files.pythonhosted.org/packages/c6/57/3e86abb9dfee3aba97766d45fcc5e4cda421d750f75fac4d917a0510f25e/netflix-spectator-py-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1de94bd9a24a0cd1ca8263d9a8e1b5e4623cf9d21a51277c5b00eca08a93b526",
          "md5": "bdb0e39b0ac134127d48c92ebc7078f9",
          "sha256": "0f8fb2d2745af6f62fbee5c61f8f2092120ff1cf8b1b8ec3fad216dfac2e59d9"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.11-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bdb0e39b0ac134127d48c92ebc7078f9",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 13111,
        "upload_time": "2019-11-08T05:22:09",
        "upload_time_iso_8601": "2019-11-08T05:22:09.263693Z",
        "url": "https://files.pythonhosted.org/packages/1d/e9/4bd9a24a0cd1ca8263d9a8e1b5e4623cf9d21a51277c5b00eca08a93b526/netflix_spectator_py-0.1.11-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34ba5b1b930b289792f9b8092efab22e503d8e7841b573a9cd05df2ba6a4f170",
          "md5": "968ea061fea9c203c8f09e26b11734cf",
          "sha256": "8abe3367b5fac3fe0a2f150d7080ac026a23799c5af8a54e51ceb13e6af77743"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "968ea061fea9c203c8f09e26b11734cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14044,
        "upload_time": "2019-11-08T05:22:07",
        "upload_time_iso_8601": "2019-11-08T05:22:07.064305Z",
        "url": "https://files.pythonhosted.org/packages/34/ba/5b1b930b289792f9b8092efab22e503d8e7841b573a9cd05df2ba6a4f170/netflix-spectator-py-0.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e645eb83776d6787b0e9bced3b989e08877b9e295fe807225003bbd4c49a1534",
          "md5": "2843f206a1091326d935b20baec947b4",
          "sha256": "1f95aa199963bbab913a87ef307d8585e45c8c20d2c3c45944b7075250da0a58"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.12-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2843f206a1091326d935b20baec947b4",
        "packagetype": "bdist_wheel",
        "python_version": "3.7",
        "requires_python": null,
        "size": 17306,
        "upload_time": "2019-12-12T19:09:43",
        "upload_time_iso_8601": "2019-12-12T19:09:43.592586Z",
        "url": "https://files.pythonhosted.org/packages/e6/45/eb83776d6787b0e9bced3b989e08877b9e295fe807225003bbd4c49a1534/netflix_spectator_py-0.1.12-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41fd62cd7593ba059a3adf1a87829fc2332309a5e452d2dde8e8d72df1189758",
          "md5": "bfe14179600653eb4e657add1b7962a0",
          "sha256": "5259972dcb517c4bbd029b96c1a211cbed78c8f8b741db023765cf17f34e015e"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "bfe14179600653eb4e657add1b7962a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14164,
        "upload_time": "2019-12-12T19:09:41",
        "upload_time_iso_8601": "2019-12-12T19:09:41.402159Z",
        "url": "https://files.pythonhosted.org/packages/41/fd/62cd7593ba059a3adf1a87829fc2332309a5e452d2dde8e8d72df1189758/netflix-spectator-py-0.1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc429dbd927820156a4b1ac3cd8494c5f0d31a7671e50f398f149923a68b7369",
          "md5": "e36031541191a6a32e392a33b8ce10b6",
          "sha256": "c10e7509524d15c7c7d6483c450245ebeaf3cf31a4d4d0c065d2453fcfac6301"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.13-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e36031541191a6a32e392a33b8ce10b6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18283,
        "upload_time": "2020-02-04T22:30:55",
        "upload_time_iso_8601": "2020-02-04T22:30:55.165351Z",
        "url": "https://files.pythonhosted.org/packages/bc/42/9dbd927820156a4b1ac3cd8494c5f0d31a7671e50f398f149923a68b7369/netflix_spectator_py-0.1.13-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db2d21927b18678b85784d82a04f8a2b55a02de7a3801965ff27d6bc02c70a4d",
          "md5": "75f485e0e0ee1bdf8a3d89a6237c34bd",
          "sha256": "2985f6228ed5e39bef4d7a19cb6f98b760f79455a6d2b91b1e246b099a573f47"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "75f485e0e0ee1bdf8a3d89a6237c34bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15951,
        "upload_time": "2020-02-04T22:30:56",
        "upload_time_iso_8601": "2020-02-04T22:30:56.979986Z",
        "url": "https://files.pythonhosted.org/packages/db/2d/21927b18678b85784d82a04f8a2b55a02de7a3801965ff27d6bc02c70a4d/netflix-spectator-py-0.1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f88da7865fb4b561c7f276462e6d5683fa60fd8a256bf170e7b653e48badaef9",
          "md5": "c6d167ff1d38a8a7bca1d729270b3f59",
          "sha256": "b05ebbedf531559093688aad9dd6b0d7958db548567eded8fd4a661ab106746a"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.14-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6d167ff1d38a8a7bca1d729270b3f59",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 19621,
        "upload_time": "2020-04-21T17:52:57",
        "upload_time_iso_8601": "2020-04-21T17:52:57.585633Z",
        "url": "https://files.pythonhosted.org/packages/f8/8d/a7865fb4b561c7f276462e6d5683fa60fd8a256bf170e7b653e48badaef9/netflix_spectator_py-0.1.14-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c5c7b5094d480cebb5deb38f3d5d161bd784ab32a0a16333b196c236777eac8",
          "md5": "cd6df38629b9939e1d059a73814f9216",
          "sha256": "3e50edd62abc821faab59da7881acc192832ba0d3a3445d263a3f48d58e6f9ed"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.14.tar.gz",
        "has_sig": false,
        "md5_digest": "cd6df38629b9939e1d059a73814f9216",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23230,
        "upload_time": "2020-04-21T17:52:59",
        "upload_time_iso_8601": "2020-04-21T17:52:59.868130Z",
        "url": "https://files.pythonhosted.org/packages/3c/5c/7b5094d480cebb5deb38f3d5d161bd784ab32a0a16333b196c236777eac8/netflix-spectator-py-0.1.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73d1d4a3c452de3b8f891e4e31b0f3652e4d1e708e1fb28dbe0436ef8fa14407",
          "md5": "86d328a793ed5a7670b0af6a4fc5cb82",
          "sha256": "9b220274f3bf1f06c0ae8645e9a725721b0e93668980a8d97542ada1ec3139f9"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.15-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86d328a793ed5a7670b0af6a4fc5cb82",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21105,
        "upload_time": "2020-08-13T19:43:27",
        "upload_time_iso_8601": "2020-08-13T19:43:27.945773Z",
        "url": "https://files.pythonhosted.org/packages/73/d1/d4a3c452de3b8f891e4e31b0f3652e4d1e708e1fb28dbe0436ef8fa14407/netflix_spectator_py-0.1.15-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71fad0e93f832a763fa1e7d02bf42d4e1288b6cae879bf983c1bee4fa036e94f",
          "md5": "f26b69a4e4302b45168340d77740fa2c",
          "sha256": "794f9e341e2c2c1f312495772ddaaaf87d25121a6271aea9fef71b1cef471738"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.15.tar.gz",
        "has_sig": false,
        "md5_digest": "f26b69a4e4302b45168340d77740fa2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23784,
        "upload_time": "2020-08-13T19:43:29",
        "upload_time_iso_8601": "2020-08-13T19:43:29.560727Z",
        "url": "https://files.pythonhosted.org/packages/71/fa/d0e93f832a763fa1e7d02bf42d4e1288b6cae879bf983c1bee4fa036e94f/netflix-spectator-py-0.1.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcf610cb790320c9b2d13d5440abc5c232d5f05d96fd0fd5e23061d33a38bcae",
          "md5": "055d23a536261694df906451bd188e1f",
          "sha256": "9f1d48e07c22c6889eb069c81ce120e8cba86c3f42f028c1d851fbf74949433b"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.16-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "055d23a536261694df906451bd188e1f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21577,
        "upload_time": "2021-03-24T23:27:31",
        "upload_time_iso_8601": "2021-03-24T23:27:31.185172Z",
        "url": "https://files.pythonhosted.org/packages/fc/f6/10cb790320c9b2d13d5440abc5c232d5f05d96fd0fd5e23061d33a38bcae/netflix_spectator_py-0.1.16-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba3bb1d46caf351ba96019f9666cfdff3576eec8c76c83df4d236db623415367",
          "md5": "2e35132e3226224fbce9af4a012db7d6",
          "sha256": "260e47263f7cdb33aa10730efe4287f226ded93f5723c73798f26a9ff4ad61d8"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.16.tar.gz",
        "has_sig": false,
        "md5_digest": "2e35132e3226224fbce9af4a012db7d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19229,
        "upload_time": "2021-03-24T23:27:33",
        "upload_time_iso_8601": "2021-03-24T23:27:33.147547Z",
        "url": "https://files.pythonhosted.org/packages/ba/3b/b1d46caf351ba96019f9666cfdff3576eec8c76c83df4d236db623415367/netflix-spectator-py-0.1.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95815221f386a0cc064a629b17819985bc50996ff7594152b9acdbc3c682bbd9",
          "md5": "7874fa8ce1e209acad074261659d4c63",
          "sha256": "5d0394f5b5bf59c37539a78ff728264d003de8ff46d9a2c9af7da74a2f1ee0f6"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.17-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7874fa8ce1e209acad074261659d4c63",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21601,
        "upload_time": "2021-10-21T04:48:22",
        "upload_time_iso_8601": "2021-10-21T04:48:22.052842Z",
        "url": "https://files.pythonhosted.org/packages/95/81/5221f386a0cc064a629b17819985bc50996ff7594152b9acdbc3c682bbd9/netflix_spectator_py-0.1.17-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09cf0449b14031c9384811b39a6b1c105fa6d6a9471b472b447bc9c4c8070e6b",
          "md5": "3537961ec17fa35343ba8d021a937784",
          "sha256": "b7e4fdd7a8548e64340ff9c81fd7c752ab7485b74079c1d4b8a79ab2a5a03185"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.17.tar.gz",
        "has_sig": false,
        "md5_digest": "3537961ec17fa35343ba8d021a937784",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19094,
        "upload_time": "2021-10-21T04:48:24",
        "upload_time_iso_8601": "2021-10-21T04:48:24.508518Z",
        "url": "https://files.pythonhosted.org/packages/09/cf/0449b14031c9384811b39a6b1c105fa6d6a9471b472b447bc9c4c8070e6b/netflix-spectator-py-0.1.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c13b411723627d5bfb8e5a0e227e4288bc6fd2f6e4480aea96e9313ced8d8d02",
          "md5": "dcacb867f0320cf490cf2a9545adf809",
          "sha256": "efe59a8ac261f1175584a71cef30aacac6f917491138632f9126d0c1cef44602"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.18-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dcacb867f0320cf490cf2a9545adf809",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21602,
        "upload_time": "2022-03-30T21:41:22",
        "upload_time_iso_8601": "2022-03-30T21:41:22.327073Z",
        "url": "https://files.pythonhosted.org/packages/c1/3b/411723627d5bfb8e5a0e227e4288bc6fd2f6e4480aea96e9313ced8d8d02/netflix_spectator_py-0.1.18-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "048b5d208a9865b1cb5344bb163c19a61a5dbcdb7e069c9ba0ec76fbcfe976f8",
          "md5": "a9105cbe669b33ea81e5e9b24a646247",
          "sha256": "8958682f667b2cfc11661b4a70cb7e9d12157ae4738c33e9917d9437f37fc9d1"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.18.tar.gz",
        "has_sig": false,
        "md5_digest": "a9105cbe669b33ea81e5e9b24a646247",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19029,
        "upload_time": "2022-03-30T21:41:23",
        "upload_time_iso_8601": "2022-03-30T21:41:23.367504Z",
        "url": "https://files.pythonhosted.org/packages/04/8b/5d208a9865b1cb5344bb163c19a61a5dbcdb7e069c9ba0ec76fbcfe976f8/netflix-spectator-py-0.1.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e2b46a379a4d8b4083c6349a08911f805821d6fdb844340820f6951f598394c",
          "md5": "bfd69f8068f43dc0aec5b654cac19d14",
          "sha256": "bcff075b3788de4ed4287fe5376d24b0e250aada309ca86b1fa698d8b638654e"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bfd69f8068f43dc0aec5b654cac19d14",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 9637,
        "upload_time": "2018-03-15T18:12:33",
        "upload_time_iso_8601": "2018-03-15T18:12:33.539497Z",
        "url": "https://files.pythonhosted.org/packages/0e/2b/46a379a4d8b4083c6349a08911f805821d6fdb844340820f6951f598394c/netflix_spectator_py-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cf114e559b716d182eddd6167639427d7ccddb023bdecaaedff5d505641ee68",
          "md5": "4a3f6ad67199c6d64301e6d9e6251af3",
          "sha256": "2bc52d216c1039eb119130598a4016f66e40e0a00de95bada184f41f2f42c56f"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4a3f6ad67199c6d64301e6d9e6251af3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9492,
        "upload_time": "2018-03-15T18:12:31",
        "upload_time_iso_8601": "2018-03-15T18:12:31.499481Z",
        "url": "https://files.pythonhosted.org/packages/9c/f1/14e559b716d182eddd6167639427d7ccddb023bdecaaedff5d505641ee68/netflix-spectator-py-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5497a06499520c251afbabc3f6224fe69347f1085593f68e7e8478d1317653fc",
          "md5": "1b91190e61ce872d2fd3c8ba5a5743ad",
          "sha256": "85bf2681787d6a7213bfdf87d090d189323683f650ba9497b3eaf67a7f65f156"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b91190e61ce872d2fd3c8ba5a5743ad",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 16289,
        "upload_time": "2018-03-20T17:14:37",
        "upload_time_iso_8601": "2018-03-20T17:14:37.114108Z",
        "url": "https://files.pythonhosted.org/packages/54/97/a06499520c251afbabc3f6224fe69347f1085593f68e7e8478d1317653fc/netflix_spectator_py-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74ebc46ca9d50d5115d29c8cd7f3da710f517a013d2d04153868aa9c2ab68f05",
          "md5": "0bc97894a114619d18de580e50a6dd00",
          "sha256": "cca0eefb1d0bdd43eca0b0af4748d1a278be37cc750b4223f1643029649fbe41"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0bc97894a114619d18de580e50a6dd00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9632,
        "upload_time": "2018-03-20T17:14:35",
        "upload_time_iso_8601": "2018-03-20T17:14:35.541315Z",
        "url": "https://files.pythonhosted.org/packages/74/eb/c46ca9d50d5115d29c8cd7f3da710f517a013d2d04153868aa9c2ab68f05/netflix-spectator-py-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2e5227ec76eba1bd9ee5c3d7a441e6e5ada6a51bbfcb06d378acef5ca12d9c9",
          "md5": "93b2937ff1729fc7190909345876a5ec",
          "sha256": "2539ebc34eae070af7dd9c96e05b4c0bc8d4130c6ab96ab901f8c8a47ecba164"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93b2937ff1729fc7190909345876a5ec",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 9186,
        "upload_time": "2018-04-26T15:43:41",
        "upload_time_iso_8601": "2018-04-26T15:43:41.773667Z",
        "url": "https://files.pythonhosted.org/packages/b2/e5/227ec76eba1bd9ee5c3d7a441e6e5ada6a51bbfcb06d378acef5ca12d9c9/netflix_spectator_py-0.1.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9df651255155c7be3690fea0a5cb42d0d19beebef9fc56644ee6fa22ce8e4540",
          "md5": "66a0b2f135e0bc562b82b9138be47e7e",
          "sha256": "da37dc6898bbface275f6e09184eae2e8f80f3ff45e32a24e0e0915cc200a46e"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "66a0b2f135e0bc562b82b9138be47e7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9636,
        "upload_time": "2018-04-26T15:43:40",
        "upload_time_iso_8601": "2018-04-26T15:43:40.373110Z",
        "url": "https://files.pythonhosted.org/packages/9d/f6/51255155c7be3690fea0a5cb42d0d19beebef9fc56644ee6fa22ce8e4540/netflix-spectator-py-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9aad5214f0dc7a8ac3829ddd446cb3477a699159fac8837bcb472771318520d8",
          "md5": "e0f42cec7e43b2ba0aeaa7d132c80a2e",
          "sha256": "2268636c140c560328dbd74d2fd8a4ea54d692e4f2816662b5af36d3ca44f4c8"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0f42cec7e43b2ba0aeaa7d132c80a2e",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 9465,
        "upload_time": "2018-04-26T21:18:52",
        "upload_time_iso_8601": "2018-04-26T21:18:52.759234Z",
        "url": "https://files.pythonhosted.org/packages/9a/ad/5214f0dc7a8ac3829ddd446cb3477a699159fac8837bcb472771318520d8/netflix_spectator_py-0.1.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3824e819271833793d5b1a3702a794ae9672db77962e3c8d1de780377b365dc",
          "md5": "47e03d53d6ab32aadee3ad17eafb81fa",
          "sha256": "f31c2e354997d4aea0b671403b378876820c9663e2273e3ad371d0698f10c81a"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "47e03d53d6ab32aadee3ad17eafb81fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9800,
        "upload_time": "2018-04-26T21:18:51",
        "upload_time_iso_8601": "2018-04-26T21:18:51.418397Z",
        "url": "https://files.pythonhosted.org/packages/b3/82/4e819271833793d5b1a3702a794ae9672db77962e3c8d1de780377b365dc/netflix-spectator-py-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79beac15535894bb0dd9b1727c997f0d96c9b4f0765b077a4ef6aaf1cc1e9436",
          "md5": "6042a7b54864a719d4008a631532c36f",
          "sha256": "29fff90b8ef3a01d6cb882591b54164f04e6ad7b2eabd5e65a5d0c6c10a98b31"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6042a7b54864a719d4008a631532c36f",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 8551,
        "upload_time": "2018-10-05T21:03:56",
        "upload_time_iso_8601": "2018-10-05T21:03:56.886050Z",
        "url": "https://files.pythonhosted.org/packages/79/be/ac15535894bb0dd9b1727c997f0d96c9b4f0765b077a4ef6aaf1cc1e9436/netflix_spectator_py-0.1.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "247f5dc5e3acb2bca49baedf129dd15e273d0d5f05364f0830189872ac15b506",
          "md5": "fd81c05a37f17682d9c99ef56e1bdfc5",
          "sha256": "0c92ef8eb76a7793f4e2c8553647c7f9e4244b7569198d917ab08817ad78aa68"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "fd81c05a37f17682d9c99ef56e1bdfc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10101,
        "upload_time": "2018-10-05T21:03:55",
        "upload_time_iso_8601": "2018-10-05T21:03:55.608536Z",
        "url": "https://files.pythonhosted.org/packages/24/7f/5dc5e3acb2bca49baedf129dd15e273d0d5f05364f0830189872ac15b506/netflix-spectator-py-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8f8b498371a2669b04241eeb6de4a7db9db2cb1cfeb91ae9b7e0e9546d8da42",
          "md5": "758550203647b2cde211c5f69ed2d2e0",
          "sha256": "0b316b4455e1386b02ecc09ac791113290a2dcfcccd2f2a4ee65588175f0c4e2"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "758550203647b2cde211c5f69ed2d2e0",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 12705,
        "upload_time": "2018-10-05T21:24:58",
        "upload_time_iso_8601": "2018-10-05T21:24:58.451822Z",
        "url": "https://files.pythonhosted.org/packages/b8/f8/b498371a2669b04241eeb6de4a7db9db2cb1cfeb91ae9b7e0e9546d8da42/netflix_spectator_py-0.1.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "529c46d58ed0dca2a94a6ebf4276d3d39fc74fc197c9261a1baf3575ff3f4094",
          "md5": "40c7b9a8e1dff221c819593a0a60b7c7",
          "sha256": "cb11e63ecc65bedc62041918d74c4e43a395b8becef3996f338dbf8c2fa8f13a"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "40c7b9a8e1dff221c819593a0a60b7c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10088,
        "upload_time": "2018-10-05T21:24:56",
        "upload_time_iso_8601": "2018-10-05T21:24:56.921774Z",
        "url": "https://files.pythonhosted.org/packages/52/9c/46d58ed0dca2a94a6ebf4276d3d39fc74fc197c9261a1baf3575ff3f4094/netflix-spectator-py-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c75d5b9951dcf1415d93439635262a3818bfbb686b468f29b14de5b7dc197128",
          "md5": "592c04726dcbf7ae6a59b1b3be692ce7",
          "sha256": "b7143694480d14451d189b7a4869470b5b7575d56a717f5a7726d503f8bc226d"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "592c04726dcbf7ae6a59b1b3be692ce7",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 12276,
        "upload_time": "2019-02-11T20:58:03",
        "upload_time_iso_8601": "2019-02-11T20:58:03.445249Z",
        "url": "https://files.pythonhosted.org/packages/c7/5d/5b9951dcf1415d93439635262a3818bfbb686b468f29b14de5b7dc197128/netflix_spectator_py-0.1.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "768d0e0ba233757c893b2306702c6c8ab9fdeab6490549aaf60abffee175dbe2",
          "md5": "36053d199f712823073fd6b611e7ce45",
          "sha256": "590f3c8cfb1c60db0c1ad1524adc5c9e46e951f40f56a4380b221603dcb41cb8"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "36053d199f712823073fd6b611e7ce45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13449,
        "upload_time": "2019-02-11T20:58:01",
        "upload_time_iso_8601": "2019-02-11T20:58:01.249798Z",
        "url": "https://files.pythonhosted.org/packages/76/8d/0e0ba233757c893b2306702c6c8ab9fdeab6490549aaf60abffee175dbe2/netflix-spectator-py-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4b9a09d615f28b015953af553adff007286787f4a1acae95c6180be453a43a7",
          "md5": "977b00f1b3c7e1dd4b27d7fa12f33fc4",
          "sha256": "c4673930fa038a7b1d8ebf3237d7fc0ea886cc25065998db8de86cffa8a658ed"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.1.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "977b00f1b3c7e1dd4b27d7fa12f33fc4",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 12295,
        "upload_time": "2019-02-12T01:07:05",
        "upload_time_iso_8601": "2019-02-12T01:07:05.147066Z",
        "url": "https://files.pythonhosted.org/packages/d4/b9/a09d615f28b015953af553adff007286787f4a1acae95c6180be453a43a7/netflix_spectator_py-0.1.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79f32e42268fa280bd54072d08a9f44ae002276508683f7e7911c94f9edcfaf3",
          "md5": "538d8ac0644e82096f486b575439e517",
          "sha256": "9f597020678b2bed7526173b8e1aeeb873479cc68e0464ea5ed9080d0e485460"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "538d8ac0644e82096f486b575439e517",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13467,
        "upload_time": "2019-02-12T01:07:03",
        "upload_time_iso_8601": "2019-02-12T01:07:03.505384Z",
        "url": "https://files.pythonhosted.org/packages/79/f3/2e42268fa280bd54072d08a9f44ae002276508683f7e7911c94f9edcfaf3/netflix-spectator-py-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b09a5271efb32d60640f99e3ad23de4c04d5520c1bed8db516b704905d0071f2",
          "md5": "2e5dcebc184e60c6ac42a85462c9a6e3",
          "sha256": "a63ed084f0a67bd05bd508b815640459aaa3a4bcf07591aa01daedc4ceac05e0"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e5dcebc184e60c6ac42a85462c9a6e3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">3.5",
        "size": 20393,
        "upload_time": "2022-04-19T19:38:23",
        "upload_time_iso_8601": "2022-04-19T19:38:23.969690Z",
        "url": "https://files.pythonhosted.org/packages/b0/9a/5271efb32d60640f99e3ad23de4c04d5520c1bed8db516b704905d0071f2/netflix_spectator_py-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a0f883587742be1fef1a69d959823c8bcf012db0f3be5755ce53ba072af207f",
          "md5": "55a1a4d2368bdd4802c26421c25ea29c",
          "sha256": "590711126e57eb2d90c2cddc7aca9d060c51bc391777f6ef7d8e438b7a6799e9"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "55a1a4d2368bdd4802c26421c25ea29c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 16048,
        "upload_time": "2022-04-19T19:38:25",
        "upload_time_iso_8601": "2022-04-19T19:38:25.439772Z",
        "url": "https://files.pythonhosted.org/packages/1a/0f/883587742be1fef1a69d959823c8bcf012db0f3be5755ce53ba072af207f/netflix-spectator-py-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5f131e0ef3691fa9edea44d824308a3cfc7d4309fcf1b706b2b793931709619",
          "md5": "8030878bbde3259fd7a948c463694c22",
          "sha256": "930e6d13508f11b8253d8392d4a18a03a7fd83c55479f08a819a75611fc3b91c"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8030878bbde3259fd7a948c463694c22",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">3.5",
        "size": 20415,
        "upload_time": "2022-04-26T22:04:31",
        "upload_time_iso_8601": "2022-04-26T22:04:31.122087Z",
        "url": "https://files.pythonhosted.org/packages/d5/f1/31e0ef3691fa9edea44d824308a3cfc7d4309fcf1b706b2b793931709619/netflix_spectator_py-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e1929b8493890aca5abcecce5c1282d294303d9ba3e8f6f27150caa68efbf3e",
          "md5": "5b2ab5d7fb6f6e493b290a8693560789",
          "sha256": "86cc580b575eb1c8c857f18c8d625b2b1ab4af51e12bda456136a7be9a6f273c"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5b2ab5d7fb6f6e493b290a8693560789",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 16066,
        "upload_time": "2022-04-26T22:04:32",
        "upload_time_iso_8601": "2022-04-26T22:04:32.477304Z",
        "url": "https://files.pythonhosted.org/packages/0e/19/29b8493890aca5abcecce5c1282d294303d9ba3e8f6f27150caa68efbf3e/netflix-spectator-py-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2dc70472cf840368cdc4ffa3ddf63bebb005bc6c9e532d6125800c0da3e077b",
          "md5": "a6c723e345ba3aef8989e791a6590cb3",
          "sha256": "bb3d70a5b367f466e02a6e4ae55aaffeda33ebe47c96eef7909c5bba32c8a79f"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.2.10-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6c723e345ba3aef8989e791a6590cb3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">3.5",
        "size": 23287,
        "upload_time": "2023-01-19T15:38:17",
        "upload_time_iso_8601": "2023-01-19T15:38:17.629330Z",
        "url": "https://files.pythonhosted.org/packages/b2/dc/70472cf840368cdc4ffa3ddf63bebb005bc6c9e532d6125800c0da3e077b/netflix_spectator_py-0.2.10-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f8ad712ce68d42e34d6a6d197f0f73b31486a964e85707229e2e5e89b572576",
          "md5": "90bb08fad0ce8595a4aab13061326170",
          "sha256": "2ac331c155ab932fecc8f12f77cc614ab935fe090f063b2c81291c433c4c7307"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.2.10.tar.gz",
        "has_sig": false,
        "md5_digest": "90bb08fad0ce8595a4aab13061326170",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 18836,
        "upload_time": "2023-01-19T15:38:19",
        "upload_time_iso_8601": "2023-01-19T15:38:19.462333Z",
        "url": "https://files.pythonhosted.org/packages/0f/8a/d712ce68d42e34d6a6d197f0f73b31486a964e85707229e2e5e89b572576/netflix-spectator-py-0.2.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7d8dd3f160fdd9dcac76b4810f525f88d1b8098a1574c829038da81bffa7b49",
          "md5": "3cc2657b6628e3cab7787f209569a5de",
          "sha256": "3bb54f695a3187422965b5edf82109f55c65cc4061de06eed3d5309007b1c019"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3cc2657b6628e3cab7787f209569a5de",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">3.5",
        "size": 21384,
        "upload_time": "2022-04-26T23:55:28",
        "upload_time_iso_8601": "2022-04-26T23:55:28.169200Z",
        "url": "https://files.pythonhosted.org/packages/f7/d8/dd3f160fdd9dcac76b4810f525f88d1b8098a1574c829038da81bffa7b49/netflix_spectator_py-0.2.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90b82293299601c5b9ae1575096fb8b337430b45c664439fe0b6a970213c1b4c",
          "md5": "da49537387304497c390c8e71043583e",
          "sha256": "5d2bdb01b59a3a99d96c173b44a7a207377ade90fe13b0a19cc1bc7cd4be633f"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "da49537387304497c390c8e71043583e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 17284,
        "upload_time": "2022-04-26T23:55:29",
        "upload_time_iso_8601": "2022-04-26T23:55:29.625145Z",
        "url": "https://files.pythonhosted.org/packages/90/b8/2293299601c5b9ae1575096fb8b337430b45c664439fe0b6a970213c1b4c/netflix-spectator-py-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c90ac227c006465d05711e55929255bf2f9948add126b25bc7ac949e899ae04",
          "md5": "4e190a0e638a85f3329586e2677569c7",
          "sha256": "26ab6d5d4d94d57071dbac4f6cd82adee6ab22b2f95f9035397d0b9721cf206f"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.2.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e190a0e638a85f3329586e2677569c7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">3.5",
        "size": 21569,
        "upload_time": "2022-04-27T19:38:22",
        "upload_time_iso_8601": "2022-04-27T19:38:22.545613Z",
        "url": "https://files.pythonhosted.org/packages/3c/90/ac227c006465d05711e55929255bf2f9948add126b25bc7ac949e899ae04/netflix_spectator_py-0.2.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da37f8f040933df0db7d885cd8951b921d15594b59c9a323659fa2479335ec71",
          "md5": "32283f502bf41202d9cb2a53a56dadff",
          "sha256": "b6e6735e206bea61f7c6ed0a42c4c9d181786b3e47abbd90fe70f4f0018ed492"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "32283f502bf41202d9cb2a53a56dadff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 17482,
        "upload_time": "2022-04-27T19:38:24",
        "upload_time_iso_8601": "2022-04-27T19:38:24.432029Z",
        "url": "https://files.pythonhosted.org/packages/da/37/f8f040933df0db7d885cd8951b921d15594b59c9a323659fa2479335ec71/netflix-spectator-py-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52efdbbb9d67c2a58acbb18ad35f28c556710860ec2d8aa4707733ad2246a040",
          "md5": "d61b2a435481ac8c5c7ee73dde3bcb79",
          "sha256": "3179e8866dbdbbb85cbcf22a50664c9f3393925f0458ba098c22e986bea19c3f"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.2.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d61b2a435481ac8c5c7ee73dde3bcb79",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">3.5",
        "size": 22480,
        "upload_time": "2022-04-27T23:15:22",
        "upload_time_iso_8601": "2022-04-27T23:15:22.067672Z",
        "url": "https://files.pythonhosted.org/packages/52/ef/dbbb9d67c2a58acbb18ad35f28c556710860ec2d8aa4707733ad2246a040/netflix_spectator_py-0.2.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43687c8411eeda08b63be23abed2ca1957c6c1468689caa12614b8b0868510dc",
          "md5": "7234493a1172205fc09a5aaac48a35a4",
          "sha256": "353cd435a67dd93a82f66a8796bf1ac7e7948c38c6364a3f6f1560c17c431ad2"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7234493a1172205fc09a5aaac48a35a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 18145,
        "upload_time": "2022-04-27T23:15:23",
        "upload_time_iso_8601": "2022-04-27T23:15:23.609082Z",
        "url": "https://files.pythonhosted.org/packages/43/68/7c8411eeda08b63be23abed2ca1957c6c1468689caa12614b8b0868510dc/netflix-spectator-py-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb99239b5ad97336e8f99f4ba26309fa63a41774484e3f9c652cd2594a0764d7",
          "md5": "b4aeb7aa28238d2b2c94c0f782bcbee8",
          "sha256": "ee415bf1da51e55ca8e3a9c5ada684b0659fc62f82c110efed81dfc4a857df5a"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.2.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4aeb7aa28238d2b2c94c0f782bcbee8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">3.5",
        "size": 22316,
        "upload_time": "2022-04-27T23:22:19",
        "upload_time_iso_8601": "2022-04-27T23:22:19.781094Z",
        "url": "https://files.pythonhosted.org/packages/eb/99/239b5ad97336e8f99f4ba26309fa63a41774484e3f9c652cd2594a0764d7/netflix_spectator_py-0.2.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee8ecaf142ea0c71bb7518879d430ee7eed3d4e5456abfb5201df3f06a62053c",
          "md5": "2193315e5471b994c652535fe11b521c",
          "sha256": "218d4f026d00ca36c73515b3751a80e751130d7fd526438b3e97ab4cc1a61737"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2193315e5471b994c652535fe11b521c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 17959,
        "upload_time": "2022-04-27T23:22:21",
        "upload_time_iso_8601": "2022-04-27T23:22:21.189839Z",
        "url": "https://files.pythonhosted.org/packages/ee/8e/caf142ea0c71bb7518879d430ee7eed3d4e5456abfb5201df3f06a62053c/netflix-spectator-py-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e91f46f2025038c18245767b736099fc33b6cc7c70ffcdff9d2aef5686140166",
          "md5": "ac36b9e723bb37683d70c82b3a1a323c",
          "sha256": "8fa49b02f8fa7ccbc8021cf6a07a0c361cddb28ada14974f803a7bcd59bdd618"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.2.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac36b9e723bb37683d70c82b3a1a323c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">3.5",
        "size": 22514,
        "upload_time": "2022-04-29T21:12:09",
        "upload_time_iso_8601": "2022-04-29T21:12:09.842424Z",
        "url": "https://files.pythonhosted.org/packages/e9/1f/46f2025038c18245767b736099fc33b6cc7c70ffcdff9d2aef5686140166/netflix_spectator_py-0.2.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efb926efe10d57e9f5f647bacf4776b0bdaadbf2ca6511111b05b8701f51e217",
          "md5": "57579be7efd569cbae3916a402fefaaa",
          "sha256": "c58c2714b276cf05970128717f6092bb1b0c3f0a229831a9802e3199629091b2"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "57579be7efd569cbae3916a402fefaaa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 18082,
        "upload_time": "2022-04-29T21:12:11",
        "upload_time_iso_8601": "2022-04-29T21:12:11.451887Z",
        "url": "https://files.pythonhosted.org/packages/ef/b9/26efe10d57e9f5f647bacf4776b0bdaadbf2ca6511111b05b8701f51e217/netflix-spectator-py-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5f41c907e2a76ea4a25d1ad7c19094ab70f6c6b95a3ea39672d830baab2f0b0",
          "md5": "eba66b5befdbea82de0b9eaa28312b1a",
          "sha256": "d6b7b58d29a49241a2eaa6e4226e4350772ec0d49dcd65b429e8c9a654b27826"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.2.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eba66b5befdbea82de0b9eaa28312b1a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">3.5",
        "size": 22648,
        "upload_time": "2022-08-23T20:55:16",
        "upload_time_iso_8601": "2022-08-23T20:55:16.445757Z",
        "url": "https://files.pythonhosted.org/packages/b5/f4/1c907e2a76ea4a25d1ad7c19094ab70f6c6b95a3ea39672d830baab2f0b0/netflix_spectator_py-0.2.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67576b859696f8bfc419701af9b7097edc8397180dad516af9e9099c813af509",
          "md5": "86b34245825e402f5b54677ed6510e03",
          "sha256": "03c4cc081a4e76c7ef3d6b3ba1e0ced148405b45592de1299c765835aa66edd5"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "86b34245825e402f5b54677ed6510e03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 18185,
        "upload_time": "2022-08-23T20:55:18",
        "upload_time_iso_8601": "2022-08-23T20:55:18.004916Z",
        "url": "https://files.pythonhosted.org/packages/67/57/6b859696f8bfc419701af9b7097edc8397180dad516af9e9099c813af509/netflix-spectator-py-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8d8d3f2d9d7d4be9a96495275cfb583dcaeeddbaba14710b0134677ee59315f",
          "md5": "2b2ec6c7fea4f6a4214e191405982f3c",
          "sha256": "2fb29680a16db50c720f1129c0933e649aa68871a110aad646c9196dc89096df"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.2.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b2ec6c7fea4f6a4214e191405982f3c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">3.5",
        "size": 22819,
        "upload_time": "2022-08-29T20:20:22",
        "upload_time_iso_8601": "2022-08-29T20:20:22.254281Z",
        "url": "https://files.pythonhosted.org/packages/c8/d8/d3f2d9d7d4be9a96495275cfb583dcaeeddbaba14710b0134677ee59315f/netflix_spectator_py-0.2.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "621ae7f2a49a1e001e14721dcf5d2dd12b16a1b30fd9bd80add8cae49963fa76",
          "md5": "af83aa33c0a57bda1da26ba32ee65790",
          "sha256": "d2541a6699d95410e446816141fdf1fde127dee164de6c6333bbde8571d3c555"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "af83aa33c0a57bda1da26ba32ee65790",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 18328,
        "upload_time": "2022-08-29T20:20:23",
        "upload_time_iso_8601": "2022-08-29T20:20:23.796970Z",
        "url": "https://files.pythonhosted.org/packages/62/1a/e7f2a49a1e001e14721dcf5d2dd12b16a1b30fd9bd80add8cae49963fa76/netflix-spectator-py-0.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6d184b6c2dec7786585b220512a4a181dc6fb9bcf57d1c9fd624f0205b83fb5",
          "md5": "0f4a06762737b6075388554f5697c547",
          "sha256": "f83d4411911dfd7b82d970df303d1313d641e1116b00cf5849af859eada310d9"
        },
        "downloads": -1,
        "filename": "netflix_spectator_py-0.2.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f4a06762737b6075388554f5697c547",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">3.5",
        "size": 22868,
        "upload_time": "2022-08-29T20:33:37",
        "upload_time_iso_8601": "2022-08-29T20:33:37.693042Z",
        "url": "https://files.pythonhosted.org/packages/f6/d1/84b6c2dec7786585b220512a4a181dc6fb9bcf57d1c9fd624f0205b83fb5/netflix_spectator_py-0.2.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dce9fe999140460076e4b20fe20306ca9cf8c3a957d1ede94a0f4b25b385890a",
          "md5": "8a49b12de84f1e4dc22efde396fb4ffe",
          "sha256": "31803ec71d977910750217b1ce6134ff28ef8f3ff1cbc227eaa870ac0d2339c8"
        },
        "downloads": -1,
        "filename": "netflix-spectator-py-0.2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "8a49b12de84f1e4dc22efde396fb4ffe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 18430,
        "upload_time": "2022-08-29T20:33:39",
        "upload_time_iso_8601": "2022-08-29T20:33:39.351595Z",
        "url": "https://files.pythonhosted.org/packages/dc/e9/fe999140460076e4b20fe20306ca9cf8c3a957d1ede94a0f4b25b385890a/netflix-spectator-py-0.2.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b2dc70472cf840368cdc4ffa3ddf63bebb005bc6c9e532d6125800c0da3e077b",
        "md5": "a6c723e345ba3aef8989e791a6590cb3",
        "sha256": "bb3d70a5b367f466e02a6e4ae55aaffeda33ebe47c96eef7909c5bba32c8a79f"
      },
      "downloads": -1,
      "filename": "netflix_spectator_py-0.2.10-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a6c723e345ba3aef8989e791a6590cb3",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">3.5",
      "size": 23287,
      "upload_time": "2023-01-19T15:38:17",
      "upload_time_iso_8601": "2023-01-19T15:38:17.629330Z",
      "url": "https://files.pythonhosted.org/packages/b2/dc/70472cf840368cdc4ffa3ddf63bebb005bc6c9e532d6125800c0da3e077b/netflix_spectator_py-0.2.10-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f8ad712ce68d42e34d6a6d197f0f73b31486a964e85707229e2e5e89b572576",
        "md5": "90bb08fad0ce8595a4aab13061326170",
        "sha256": "2ac331c155ab932fecc8f12f77cc614ab935fe090f063b2c81291c433c4c7307"
      },
      "downloads": -1,
      "filename": "netflix-spectator-py-0.2.10.tar.gz",
      "has_sig": false,
      "md5_digest": "90bb08fad0ce8595a4aab13061326170",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.5",
      "size": 18836,
      "upload_time": "2023-01-19T15:38:19",
      "upload_time_iso_8601": "2023-01-19T15:38:19.462333Z",
      "url": "https://files.pythonhosted.org/packages/0f/8a/d712ce68d42e34d6a6d197f0f73b31486a964e85707229e2e5e89b572576/netflix-spectator-py-0.2.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}