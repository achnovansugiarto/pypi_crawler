{
  "info": {
    "author": "XuMing",
    "author_email": "xuming624@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/similarities.svg)](https://badge.fury.io/py/similarities)\n[![Downloads](https://pepy.tech/badge/similarities)](https://pepy.tech/project/similarities)\n[![Contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg)](CONTRIBUTING.md)\n[![GitHub contributors](https://img.shields.io/github/contributors/shibing624/similarities.svg)](https://github.com/shibing624/similarities/graphs/contributors)\n[![License Apache 2.0](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](LICENSE)\n[![python_version](https://img.shields.io/badge/Python-3.5%2B-green.svg)](requirements.txt)\n[![GitHub issues](https://img.shields.io/github/issues/shibing624/similarities.svg)](https://github.com/shibing624/similarities/issues)\n[![Wechat Group](http://vlog.sfyc.ltd/wechat_everyday/wxgroup_logo.png?imageView2/0/w/60/h/20)](#Contact)\n\n# Similarities\n\nSimilarities is a toolkit for similarity calculation and semantic search, supports text and image.\n\nsimilarities：相似度计算、语义匹配搜索工具包。\n\n**similarities** 实现了多种相似度计算、匹配搜索算法，支持文本、图像，python3开发，pip安装，开箱即用。\n\n**Guide**\n\n- [Feature](#Feature)\n- [Evaluation](#Evaluation)\n- [Install](#install)\n- [Usage](#usage)\n- [Contact](#Contact)\n- [Reference](#reference)\n\n# Feature\n\n### 文本相似度计算（文本匹配）\n- 余弦相似（Cosine Similarity）：两向量求余弦\n- 点积（Dot Product）：两向量归一化后求内积\n- 汉明距离（Hamming Distance），编辑距离（Levenshtein Distance），欧氏距离（Euclidean Distance），曼哈顿距离（Manhattan Distance）等\n\n#### 语义模型\n- [CoSENT文本匹配模型](https://github.com/shibing624/similarities/blob/main/similarities/similarity.py#L79)[推荐]\n- BERT模型（文本向量表征）\n- SentenceBERT文本匹配模型\n\n\n#### 字面模型\n- [Word2Vec文本浅层语义表征](https://github.com/shibing624/similarities/blob/main/similarities/literalsim.py#L374)[推荐]\n- 同义词词林\n- 知网Hownet义原匹配\n- BM25、RankBM25\n- TFIDF\n- SimHash\n\n### 图像相似度计算（图像匹配）\n#### 语义模型\n- [CLIP(Contrastive Language-Image Pre-Training)](https://github.com/shibing624/similarities/blob/main/similarities/imagesim.py#L25)\n- VGG(doing)\n- ResNet(doing)\n\n#### 特征提取\n- [pHash](https://github.com/shibing624/similarities/blob/main/similarities/imagesim.py#L164)[推荐], dHash, wHash, aHash\n- SIFT, Scale Invariant Feature Transform(SIFT)\n- SURF, Speeded Up Robust Features(SURF)(doing)\n\n### 图文相似度计算\n- [CLIP(Contrastive Language-Image Pre-Training)](https://github.com/shibing624/similarities/blob/main/similarities/imagesim.py#L25)\n\n### 匹配搜索\n- [SemanticSearch](https://github.com/shibing624/similarities/blob/main/similarities/similarity.py#L185)：向量相似检索，使用Cosine\n  Similarty + topk高效计算，比一对一暴力计算快一个数量级\n\n# Demo\n\nCompute similarity score Demo: https://huggingface.co/spaces/shibing624/text2vec\n\nSemantic Search Demo: https://huggingface.co/spaces/shibing624/similarities\n\n![](docs/hf_search.png)\n\n\n# Evaluation\n### 文本匹配和文本检索\n#### 中文文本匹配模型评测结果\n\n| Model | ATEC | BQ | LCQMC | PAWSX | STS-B | Avg | QPS |\n| :---- | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| Word2Vec | 20.00 | 31.49 | 59.46 | 2.57 | 55.78 | 33.86 | 10283 |\n| SBERT-multi | 18.42 | 38.52 | 63.96 | 10.14 | 78.90 | 41.99 | 2371 |\n| Text2vec | 31.93 | 42.67 | 70.16 | 17.21 | 79.30 | **48.25** | 2572 |\n\n> 结果值使用spearman系数\n\nModel(doing):\n- Cilin\n- Hownet\n- SimHash\n- TFIDF\n\n#### 文本检索评测结果\n\n| Model | MS MARCO | QPS |\n| :---- | :-: | :-: |\n| Word2Vec | - | - |\n| SBERT-multi | - | - |\n| Text2vec | - | - |\n| BM25 | - | - |\n| ColBERT | - | - |\n\n> 结果值使用MRR@10、nDCG@10\n### 图像匹配和图像检索\n#### 图像匹配模型评测结果\n\n缺标准评估数据集\n\n> 结果值使用F1\n#### 图像检索评测结果\n\n缺标准评估数据集\n\n> 结果值使用MRR@10、nDCG@10\n\n\n# Install\n\n```\npip3 install torch # conda install pytorch\npip3 install -U similarities\n```\n\nor\n\n```\ngit clone https://github.com/shibing624/similarities.git\ncd similarities\npython3 setup.py install\n```\n\n# Usage\n\n### 1. 文本语义相似度计算\n\n```python\nfrom similarities import Similarity\n\nm = Similarity()\nr = m.similarity('如何更换花呗绑定银行卡', '花呗更改绑定银行卡')\nprint(f\"similarity score: {float(r)}\")  # similarity score: 0.855146050453186\n```\n\nSimilarity的默认方法：\n```python\nSimilarity(corpus: Union[List[str], Dict[str, str]] = None, \n           model_name_or_path=\"shibing624/text2vec-base-chinese\",\n           max_seq_length=128)\n```\n\n> 返回值：余弦值`score`范围是[-1, 1]，值越大越相似\n\n> corpus表示搜索的doc集，仅搜索时需要，输入doc格式兼容：句子列表和{corpus_id: sentence}的dict格式\n\n> model_name_or_path表示模型，默认使用中文表征式匹配模型`shibing624/text2vec-base-chinese`，可以替换为多语言\n表征模型`sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2`\n\n> max_seq_length表示输入句子的最大长度，最大为匹配模型支持的最大长度，BERT系列是512\n\n### 2. 文本语义匹配搜索\n\n一般在文档候选集中找与query最相似的文本，常用于QA场景的问句相似匹配、文本相似检索等任务。\n\nexample: [examples/base_demo.py](./examples/base_demo.py)\n\n```python\nimport sys\n\nsys.path.append('..')\nfrom similarities import Similarity\n\n# 1.Compute cosine similarity between two sentences.\nsentences = ['如何更换花呗绑定银行卡',\n             '花呗更改绑定银行卡']\ncorpus = [\n    '花呗更改绑定银行卡',\n    '我什么时候开通了花呗',\n    '俄罗斯警告乌克兰反对欧盟协议',\n    '暴风雨掩埋了东北部；新泽西16英寸的降雪',\n    '中央情报局局长访问以色列叙利亚会谈',\n    '人在巴基斯坦基地的炸弹袭击中丧生',\n]\nmodel = Similarity(model_name_or_path=\"shibing624/text2vec-base-chinese\")\nprint(model)\nsimilarity_score = model.similarity(sentences[0], sentences[1])\nprint(f\"{sentences[0]} vs {sentences[1]}, score: {float(similarity_score):.4f}\")\n\nprint('-' * 50 + '\\n')\n# 2.Compute similarity between two list\nsimilarity_scores = model.similarity(sentences, corpus)\nprint(similarity_scores.numpy())\nfor i in range(len(sentences)):\n    for j in range(len(corpus)):\n        print(f\"{sentences[i]} vs {corpus[j]}, score: {similarity_scores.numpy()[i][j]:.4f}\")\n\nprint('-' * 50 + '\\n')\n# 3.Semantic Search\nmodel.add_corpus(corpus)\nres = model.most_similar(queries=sentences, topn=3)\nprint(res)\nfor q_id, c in res.items():\n    print('query:', sentences[q_id])\n    print(\"search top 3:\")\n    for corpus_id, s in c.items():\n        print(f'\\t{model.corpus[corpus_id]}: {s:.4f}')\n```\n\noutput:\n\n```shell\n如何更换花呗绑定银行卡 vs 花呗更改绑定银行卡, score: 0.8551\n...\n\n如何更换花呗绑定银行卡 vs 花呗更改绑定银行卡, score: 0.8551\n如何更换花呗绑定银行卡 vs 我什么时候开通了花呗, score: 0.7212\n如何更换花呗绑定银行卡 vs 俄罗斯警告乌克兰反对欧盟协议, score: 0.1450\n如何更换花呗绑定银行卡 vs 暴风雨掩埋了东北部；新泽西16英寸的降雪, score: 0.2167\n如何更换花呗绑定银行卡 vs 中央情报局局长访问以色列叙利亚会谈, score: 0.2517\n如何更换花呗绑定银行卡 vs 人在巴基斯坦基地的炸弹袭击中丧生, score: 0.0809\n花呗更改绑定银行卡 vs 花呗更改绑定银行卡, score: 1.0000\n花呗更改绑定银行卡 vs 我什么时候开通了花呗, score: 0.6807\n花呗更改绑定银行卡 vs 俄罗斯警告乌克兰反对欧盟协议, score: 0.1714\n花呗更改绑定银行卡 vs 暴风雨掩埋了东北部；新泽西16英寸的降雪, score: 0.2162\n花呗更改绑定银行卡 vs 中央情报局局长访问以色列叙利亚会谈, score: 0.2728\n花呗更改绑定银行卡 vs 人在巴基斯坦基地的炸弹袭击中丧生, score: 0.1279\n\nquery: 如何更换花呗绑定银行卡\nsearch top 3:\n\t花呗更改绑定银行卡: 0.8551\n\t我什么时候开通了花呗: 0.7212\n\t中央情报局局长访问以色列叙利亚会谈: 0.2517\n```\n\n> 余弦`score`的值范围[-1, 1]，值越大，表示该query与corpus的文本越相似。\n\n\n#### 英文语义相似度计算和匹配搜索\n\nexample: [examples/base_english_demo.py](./examples/base_english_demo.py)\n\n### 3. 快速近似语义匹配搜索\n\n支持Annoy、Hnswlib的近似语义匹配搜索，常用于百万数据集的匹配搜索任务。\n\nexample: [examples/fast_sim_demo.py](./examples/fast_sim_demo.py)\n\n### 4. 基于字面的文本相似度计算和匹配搜索\n\n支持同义词词林（Cilin）、知网Hownet、词向量（WordEmbedding）、Tfidf、SimHash、BM25等算法的相似度计算和字面匹配搜索，常用于文本匹配冷启动。\n\nexample: [examples/literal_sim_demo.py](./examples/literal_sim_demo.py)\n\n```python\nfrom similarities.literalsim import SimHashSimilarity, TfidfSimilarity, BM25Similarity, \\\n    WordEmbeddingSimilarity, CilinSimilarity, HownetSimilarity\n\ntext1 = \"如何更换花呗绑定银行卡\"\ntext2 = \"花呗更改绑定银行卡\"\n\ncorpus = [\n    '花呗更改绑定银行卡',\n    '我什么时候开通了花呗',\n    '俄罗斯警告乌克兰反对欧盟协议',\n    '暴风雨掩埋了东北部；新泽西16英寸的降雪',\n    '中央情报局局长访问以色列叙利亚会谈',\n    '人在巴基斯坦基地的炸弹袭击中丧生',\n]\n\nqueries = [\n    '我的花呗开通了？',\n    '乌克兰被俄罗斯警告'\n]\nm = TfidfSimilarity()\nprint(text1, text2, ' sim score: ', m.similarity(text1, text2))\n\nm.add_corpus(corpus)\nres = m.most_similar(queries, topn=3)\nprint('sim search: ', res)\nfor q_id, c in res.items():\n    print('query:', queries[q_id])\n    print(\"search top 3:\")\n    for corpus_id, s in c.items():\n        print(f'\\t{m.corpus[corpus_id]}: {s:.4f}')\n```\n\noutput:\n\n```shell\n如何更换花呗绑定银行卡 花呗更改绑定银行卡  sim score:  0.8203384355246909\n\nsim search:  {0: {2: 0.9999999403953552, 1: 0.43930041790008545, 0: 0.0}, 1: {0: 0.7380483150482178, 1: 0.0, 2: 0.0}}\nquery: 我的花呗开通了？\nsearch top 3:\n\t我什么时候开通了花呗: 1.0000\n\t花呗更改绑定银行卡: 0.4393\n\t俄罗斯警告乌克兰反对欧盟协议: 0.0000\n...\n```\n\n### 5. 图像相似度计算和匹配搜索\n\n支持[CLIP](similarities/imagesim.py)、pHash、SIFT等算法的图像相似度计算和匹配搜索。\n\nexample: [examples/image_demo.py](./examples/image_demo.py)\n\n```python\nimport sys\nimport glob\nfrom PIL import Image\n\nsys.path.append('..')\nfrom similarities.imagesim import ImageHashSimilarity, SiftSimilarity, ClipSimilarity\n\n\ndef sim_and_search(m):\n    print(m)\n    # similarity\n    sim_scores = m.similarity(imgs1, imgs2)\n    print('sim scores: ', sim_scores)\n    for (idx, i), j in zip(enumerate(image_fps1), image_fps2):\n        s = sim_scores[idx] if isinstance(sim_scores, list) else sim_scores[idx][idx]\n        print(f\"{i} vs {j}, score: {s:.4f}\")\n    # search\n    m.add_corpus(corpus_imgs)\n    queries = imgs1\n    res = m.most_similar(queries, topn=3)\n    print('sim search: ', res)\n    for q_id, c in res.items():\n        print('query:', image_fps1[q_id])\n        print(\"search top 3:\")\n        for corpus_id, s in c.items():\n            print(f'\\t{m.corpus[corpus_id].filename}: {s:.4f}')\n    print('-' * 50 + '\\n')\n\nimage_fps1 = ['data/image1.png', 'data/image3.png']\nimage_fps2 = ['data/image12-like-image1.png', 'data/image10.png']\nimgs1 = [Image.open(i) for i in image_fps1]\nimgs2 = [Image.open(i) for i in image_fps2]\ncorpus_fps = glob.glob('data/*.jpg') + glob.glob('data/*.png')\ncorpus_imgs = [Image.open(i) for i in corpus_fps]\n\n# 2. image and image similarity score\nsim_and_search(ClipSimilarity())  # the best result\nsim_and_search(ImageHashSimilarity(hash_function='phash'))\nsim_and_search(SiftSimilarity())\n```\n\noutput:\n\n```shell\nSimilarity: ClipSimilarity, matching_model: CLIPModel\nsim scores:  tensor([[0.9580, 0.8654],\n        [0.6558, 0.6145]])\n\ndata/image1.png vs data/image12-like-image1.png, score: 0.9580\ndata/image3.png vs data/image10.png, score: 0.6145\n\nsim search:  {0: {6: 0.9999999403953552, 0: 0.9579654932022095, 4: 0.9326782822608948}, 1: {8: 0.9999997615814209, 4: 0.6729235649108887, 0: 0.6558331847190857}}\n\nquery: data/image1.png\nsearch top 3:\n\tdata/image1.png: 1.0000\n\tdata/image12-like-image1.png: 0.9580\n\tdata/image8-like-image1.png: 0.9327\n```\n\n![image_sim](docs/image_sim.png)\n\n### 6. 图文互搜\n\nCLIP 模型不仅支持以图搜图，还支持图文互搜：\n```python\nimport sys\nimport glob\nfrom PIL import Image\nsys.path.append('..')\nfrom similarities.imagesim import ImageHashSimilarity, SiftSimilarity, ClipSimilarity\n\nm = ClipSimilarity()\nprint(m)\n# similarity score between text and image\nimage_fps = ['data/image3.png',  # yellow flower image\n             'data/image1.png']  # tiger image\ntexts = ['a yellow flower', 'a tiger']\nimgs = [Image.open(i) for i in image_fps]\nsim_scores = m.similarity(imgs, texts)\n\nprint('sim scores: ', sim_scores)\nfor (idx, i), j in zip(enumerate(image_fps), texts):\n    s = sim_scores[idx][idx]\n    print(f\"{i} vs {j}, score: {s:.4f}\")\n```\n\noutput:\n\n```shell\nsim scores:  tensor([[0.3220, 0.2409],\n        [0.1677, 0.2959]])\ndata/image3.png vs a yellow flower, score: 0.3220\ndata/image1.png vs a tiger, score: 0.2959\n```\n\n# Contact\n\n- Issue(建议)\n  ：[![GitHub issues](https://img.shields.io/github/issues/shibing624/similarities.svg)](https://github.com/shibing624/similarities/issues)\n- 邮件我：xuming: xuming624@qq.com\n- 微信我： 加我*微信号：xuming624, 备注：姓名-公司-NLP* 进NLP交流群。\n\n<img src=\"docs/wechat.jpeg\" width=\"200\" />\n\n# Citation\n\n如果你在研究中使用了similarities，请按如下格式引用：\n\nAPA:\n\n```\nXu, M. Similarities: Compute similarity score for humans (Version 1.0.1) [Computer software]. https://github.com/shibing624/similarities\n```\n\nBibTeX:\n\n```\n@misc{Xu_Similarities_Compute_similarity,\n  title={Similarities: similarity calculation and semantic search toolkit},\n  author={Xu Ming},\n  year={2022},\n  howpublished={\\url{https://github.com/shibing624/similarities}},\n}\n```\n\n# License\n\n授权协议为 [The Apache License 2.0](/LICENSE)，可免费用做商业用途。请在产品说明中附加similarities的链接和授权协议。\n\n# Contribute\n\n项目代码还很粗糙，如果大家对代码有所改进，欢迎提交回本项目，在提交之前，注意以下两点：\n\n- 在`tests`添加相应的单元测试\n- 使用`python -m pytest`来运行所有单元测试，确保所有单测都是通过的\n\n之后即可提交PR。\n\n# Reference\n\n- [A Simple but Tough-to-Beat Baseline for Sentence Embeddings[Sanjeev Arora and Yingyu Liang and Tengyu Ma, 2017]](https://openreview.net/forum?id=SyK00v5xx)\n- [liuhuanyong/SentenceSimilarity](https://github.com/liuhuanyong/SentenceSimilarity)\n- [shibing624/text2vec](https://github.com/shibing624/text2vec)\n- [qwertyforce/image_search](https://github.com/qwertyforce/image_search)\n- [ImageHash - Official Github repository](https://github.com/JohannesBuchner/imagehash)\n- [openai/CLIP](https://github.com/openai/CLIP)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shibing624/similarities",
    "keywords": "similarities,Chinese Text Similarity Calculation Tool,similarity,word2vec",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "similarities",
    "package_url": "https://pypi.org/project/similarities/",
    "platform": null,
    "project_url": "https://pypi.org/project/similarities/",
    "project_urls": {
      "Homepage": "https://github.com/shibing624/similarities"
    },
    "release_url": "https://pypi.org/project/similarities/1.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "Similarities is a toolkit for compute similarity scores between two sets of strings.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16062457,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd351e39206bc742ecea60debb0b6c9b20d84e395114d8192d4c92265cf4af1b",
          "md5": "4e49e526be5e3ba3e54b3eb305ac5ce0",
          "sha256": "ad2e7c1e6e879fad95664fba2d32f399e09197aa6a6b97d1029aeb84c73770de"
        },
        "downloads": -1,
        "filename": "similarities-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e49e526be5e3ba3e54b3eb305ac5ce0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 12470,
        "upload_time": "2022-02-23T11:45:24",
        "upload_time_iso_8601": "2022-02-23T11:45:24.844870Z",
        "url": "https://files.pythonhosted.org/packages/dd/35/1e39206bc742ecea60debb0b6c9b20d84e395114d8192d4c92265cf4af1b/similarities-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30dadda650f0cf92dfab9fc40333cc77e35cb93832f4046b2c6475fb9e22bc70",
          "md5": "c3f3651be1cde049a3cb1d4c527667d7",
          "sha256": "10ce4e9c6dd422d55dfbcd6abd1f175bea12dfcbc99ba523abb424331bae003b"
        },
        "downloads": -1,
        "filename": "similarities-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c3f3651be1cde049a3cb1d4c527667d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 11570,
        "upload_time": "2022-02-23T13:32:33",
        "upload_time_iso_8601": "2022-02-23T13:32:33.728373Z",
        "url": "https://files.pythonhosted.org/packages/30/da/dda650f0cf92dfab9fc40333cc77e35cb93832f4046b2c6475fb9e22bc70/similarities-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1acc872e9b6e04d94bdb0218aabb37d84cf4e5b6b5469345916fd444eee68cc4",
          "md5": "d60cfb899f45883fc897c9ce2dc0db5b",
          "sha256": "3e3872519a5e1e12e6b76c550fd4183f674682d39f32a241d1936cded9547371"
        },
        "downloads": -1,
        "filename": "similarities-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d60cfb899f45883fc897c9ce2dc0db5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 11598,
        "upload_time": "2022-02-23T13:48:26",
        "upload_time_iso_8601": "2022-02-23T13:48:26.682761Z",
        "url": "https://files.pythonhosted.org/packages/1a/cc/872e9b6e04d94bdb0218aabb37d84cf4e5b6b5469345916fd444eee68cc4/similarities-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b02b832dc075505023ae6b4d6868f3ecd0c985c576c43916684bddc12de7b7f9",
          "md5": "aaa428e454cb0e8601e020985942baae",
          "sha256": "27c99dd4e642938a49e0c5f048c6120469233a85304d52952a26c216cd1cdee8"
        },
        "downloads": -1,
        "filename": "similarities-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "aaa428e454cb0e8601e020985942baae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 24263,
        "upload_time": "2022-03-06T17:17:26",
        "upload_time_iso_8601": "2022-03-06T17:17:26.243411Z",
        "url": "https://files.pythonhosted.org/packages/b0/2b/832dc075505023ae6b4d6868f3ecd0c985c576c43916684bddc12de7b7f9/similarities-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c03ce08deec2fc7e64cea00900cfe33b8c763721369c25739300a15e85cd472e",
          "md5": "7b9da0f200afac2d84324088f4c046b4",
          "sha256": "34bb833c4037ee92795240dd6285c5d56b67a3fae0c9ff75fb48f293574752c1"
        },
        "downloads": -1,
        "filename": "similarities-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7b9da0f200afac2d84324088f4c046b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 40502,
        "upload_time": "2022-03-11T09:03:02",
        "upload_time_iso_8601": "2022-03-11T09:03:02.561300Z",
        "url": "https://files.pythonhosted.org/packages/c0/3c/e08deec2fc7e64cea00900cfe33b8c763721369c25739300a15e85cd472e/similarities-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8bad9d52b1424ebb615b8def68406be6c9cac78e8c956492f2157efc98e7fd0",
          "md5": "4e133347c4cedd1c6ce5a79508559d51",
          "sha256": "e642d5b4749971bfd3e4fd6ad7dc27523550dde42e40affbdd77cf47d4084d14"
        },
        "downloads": -1,
        "filename": "similarities-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e133347c4cedd1c6ce5a79508559d51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 44042,
        "upload_time": "2022-03-16T02:50:16",
        "upload_time_iso_8601": "2022-03-16T02:50:16.472459Z",
        "url": "https://files.pythonhosted.org/packages/f8/ba/d9d52b1424ebb615b8def68406be6c9cac78e8c956492f2157efc98e7fd0/similarities-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e4d07725b79d9344df727a6d094029685bd3d069b0cd1ed36b07b6b00862849",
          "md5": "09e958c8d3e16473ba92d5bba53a78cb",
          "sha256": "09521d1545b1cfc9e8cf922687373d793c546ca6441c499e76296a608433a0ee"
        },
        "downloads": -1,
        "filename": "similarities-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "09e958c8d3e16473ba92d5bba53a78cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 44566,
        "upload_time": "2022-05-24T03:19:12",
        "upload_time_iso_8601": "2022-05-24T03:19:12.054674Z",
        "url": "https://files.pythonhosted.org/packages/8e/4d/07725b79d9344df727a6d094029685bd3d069b0cd1ed36b07b6b00862849/similarities-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "536c11d13b575b1d46b9fb9f5b61fe076659d1f21c80199015a08274f9506475",
          "md5": "b6c73aa3c405b56528aab1cbdcad8ab5",
          "sha256": "2a5390be83ea769fedf59aaa9648e3fd9ccaf3991a88ff1da56b340adfa03886"
        },
        "downloads": -1,
        "filename": "similarities-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b6c73aa3c405b56528aab1cbdcad8ab5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 44557,
        "upload_time": "2022-05-24T03:33:05",
        "upload_time_iso_8601": "2022-05-24T03:33:05.859861Z",
        "url": "https://files.pythonhosted.org/packages/53/6c/11d13b575b1d46b9fb9f5b61fe076659d1f21c80199015a08274f9506475/similarities-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b12e821217ae8af0a980868d10ba3b5f5cc5a23a5232f2303f0f0ffcc8fc775",
          "md5": "cd6f0d5b337fd569700bb8b4d81057f7",
          "sha256": "230cd9a2be8dd06be5dbe2039caf57926aa51d9e34862dfd52bbeb68448dd0a4"
        },
        "downloads": -1,
        "filename": "similarities-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cd6f0d5b337fd569700bb8b4d81057f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 45389,
        "upload_time": "2022-12-11T05:15:40",
        "upload_time_iso_8601": "2022-12-11T05:15:40.901027Z",
        "url": "https://files.pythonhosted.org/packages/8b/12/e821217ae8af0a980868d10ba3b5f5cc5a23a5232f2303f0f0ffcc8fc775/similarities-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b12e821217ae8af0a980868d10ba3b5f5cc5a23a5232f2303f0f0ffcc8fc775",
        "md5": "cd6f0d5b337fd569700bb8b4d81057f7",
        "sha256": "230cd9a2be8dd06be5dbe2039caf57926aa51d9e34862dfd52bbeb68448dd0a4"
      },
      "downloads": -1,
      "filename": "similarities-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "cd6f0d5b337fd569700bb8b4d81057f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 45389,
      "upload_time": "2022-12-11T05:15:40",
      "upload_time_iso_8601": "2022-12-11T05:15:40.901027Z",
      "url": "https://files.pythonhosted.org/packages/8b/12/e821217ae8af0a980868d10ba3b5f5cc5a23a5232f2303f0f0ffcc8fc775/similarities-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}