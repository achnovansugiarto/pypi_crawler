{
  "info": {
    "author": "Romain Keramitas",
    "author_email": "r.keramitas@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# UR-LSTM\n\n## Description\n\nThis repository revolves around the paper: [Improving the Gating Mechanism of Recurrent Neural Networks](https://arxiv.org/pdf/1910.09890.pdf) by Albert Gu, Caglar Gulcehre, Tom Paine, Matt Hoffman and Razvan Pascanu. \n\nIn it, the authors introduce the **UR-LSTM**, a variant of the LSTM architecture which robustly improves the performance of the recurrent model, particularly when long-term dependencies are involved. \n\nUnfortunately, to my knowledge the authors did not release any code, either for the model or experiments - although they did provide pseudo-code for the model. Since I thought it was a really cool read, I decided to reimplement the model as well as some of the experiments with the Pytorch framework.\n\nI've separated the code for the UR-LSTM, which is packaged and downloadable as a standalone module, from the code for the experiments. If you want to check out how to run them, go check [this page](experiments/README.md).\n\n## Installation\n\nWith Python 3.6 or higher:\n\n```bash\npip install ur-lstm-torch\n```\n\nI haven't checked if the model is compatible with older versions of Pytorch, but it _should_ be fine for everything past version `1.0`.\n\n## Usage\n\nThe model can be used in the same way as the native `LSTM` implementation (doc is [here](https://pytorch.org/docs/stable/generated/torch.nn.LSTM.html)), although I didn't implement the bidirectionnal variant and removed the `bias` keyword argument:\n\n```python\nimport torch\nfrom ur_lstm import URLSTM\n\ninput_size = 10\nhidden_size = 20\nnum_layers = 2\nbatch_first = False\ndropout = .5\n\nmodel = URLSTM(\n    input_size, hidden_size, num_layers=num_layers, batch_first=batch_first, dropout=dropout\n)\n\nbatch_size = 3\nseq_length = 5\n\nx = torch.randn(seq_length, batch_size, input_size)\nout, state = model(x)\n\nprint(out.shape) # (seq_length, batch_size, hidden_size)\nprint(len(state)) # 2, first is hidden state, second is cell state\nprint(state[0].shape) # (num_layers, batch_size, hidden_size)\nprint(state[1].shape) # (num_layers, batch_size, hidden_size)\n```\n\nIf you want to implement a custom model, you can also import and use the `URLSTMCell` module in the same way you would the regular `LSTMCell` (doc is [here](https://pytorch.org/docs/stable/generated/torch.nn.LSTMCell.html#torch.nn.LSTMCell)), although again I removed the `bias` keyword argument:\n\n\n```python\nimport torch\nfrom ur_lstm import URLSTMCell\n\ninput_size = 10\nhidden_size = 20\n\ncell = URLSTMCell(input_size, hidden_size)\n\nbatch_size = 2\n\nx = torch.randn(batch_size, input_size)\nstate = torch.randn(batch_size, hidden_size), torch.randn(batch_size, hidden_size)\nout, state = cell(x, state)\n\nprint(out.shape) # (batch_size, hidden_size)\nprint(len(state)) # 2, first is hidden state, second is cell state\nprint(state[0].shape) # (batch_size, hidden_size)\nprint(state[1].shape) # (num_layers, batch_size, hidden_size)\n```\n\n## License\n\n[MIT](LICENSE)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/r0mainK/ur-lstm",
    "keywords": "ur-lstm,pytorch",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ur-lstm-torch",
    "package_url": "https://pypi.org/project/ur-lstm-torch/",
    "platform": "",
    "project_url": "https://pypi.org/project/ur-lstm-torch/",
    "project_urls": {
      "Bug Tracker": "https://github.com/r0mainK/ur-lstm/issues",
      "Homepage": "https://github.com/r0mainK/ur-lstm"
    },
    "release_url": "https://pypi.org/project/ur-lstm-torch/0.0.2/",
    "requires_dist": [
      "torch (<2,>=1.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Unofficial UR-LSTM implementation in Pytorch",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9787876,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1b838591600a0e13971a953c04585f442833c9c1dc463f30c60d160f28262b6",
          "md5": "ab2e6ddefa6c4f0842afd78616403eb9",
          "sha256": "a91a6ed42104fabf4ddc59237e11a5b54ca9acd276d3e185463b18a35ad1cfc9"
        },
        "downloads": -1,
        "filename": "ur_lstm_torch-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab2e6ddefa6c4f0842afd78616403eb9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4958,
        "upload_time": "2021-03-01T12:18:36",
        "upload_time_iso_8601": "2021-03-01T12:18:36.149349Z",
        "url": "https://files.pythonhosted.org/packages/d1/b8/38591600a0e13971a953c04585f442833c9c1dc463f30c60d160f28262b6/ur_lstm_torch-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f9bc38cc5fb0b36b9d7876efb75b44dc5dec39b3acb52e878850b9bd837a5fb",
          "md5": "b20e3a06caaaacf1bbebe3c1713119ad",
          "sha256": "0b7e8a0321492d3b683a32b306e2f515cab941d40faad48e9aaa8fd386977a6e"
        },
        "downloads": -1,
        "filename": "ur-lstm-torch-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b20e3a06caaaacf1bbebe3c1713119ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4053,
        "upload_time": "2021-03-01T12:18:37",
        "upload_time_iso_8601": "2021-03-01T12:18:37.474508Z",
        "url": "https://files.pythonhosted.org/packages/8f/9b/c38cc5fb0b36b9d7876efb75b44dc5dec39b3acb52e878850b9bd837a5fb/ur-lstm-torch-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba888192aabbd4decc593bb779ea4276bd530ddc31112e4369b89199d9324af8",
          "md5": "747d1d3cf7ae979fd3e0f1fb0a943546",
          "sha256": "54cd76da7a0bac77dc9a5741b1b30b21f9fe6b902f94ea7a08ff99dfa06c4428"
        },
        "downloads": -1,
        "filename": "ur_lstm_torch-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "747d1d3cf7ae979fd3e0f1fb0a943546",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4964,
        "upload_time": "2021-03-16T19:32:38",
        "upload_time_iso_8601": "2021-03-16T19:32:38.618399Z",
        "url": "https://files.pythonhosted.org/packages/ba/88/8192aabbd4decc593bb779ea4276bd530ddc31112e4369b89199d9324af8/ur_lstm_torch-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "893ef71b28268cd6aea9ed5ad6fe8ed11027135a8619c7d1794610b462b1f642",
          "md5": "451c09e3245603e5db53d1c060117ebb",
          "sha256": "1c775fefae3626a4c61b6c6b58e68a5575b5e7f8e3410e99f9136f93b7635b94"
        },
        "downloads": -1,
        "filename": "ur-lstm-torch-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "451c09e3245603e5db53d1c060117ebb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4067,
        "upload_time": "2021-03-16T19:32:39",
        "upload_time_iso_8601": "2021-03-16T19:32:39.673238Z",
        "url": "https://files.pythonhosted.org/packages/89/3e/f71b28268cd6aea9ed5ad6fe8ed11027135a8619c7d1794610b462b1f642/ur-lstm-torch-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba888192aabbd4decc593bb779ea4276bd530ddc31112e4369b89199d9324af8",
        "md5": "747d1d3cf7ae979fd3e0f1fb0a943546",
        "sha256": "54cd76da7a0bac77dc9a5741b1b30b21f9fe6b902f94ea7a08ff99dfa06c4428"
      },
      "downloads": -1,
      "filename": "ur_lstm_torch-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "747d1d3cf7ae979fd3e0f1fb0a943546",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4964,
      "upload_time": "2021-03-16T19:32:38",
      "upload_time_iso_8601": "2021-03-16T19:32:38.618399Z",
      "url": "https://files.pythonhosted.org/packages/ba/88/8192aabbd4decc593bb779ea4276bd530ddc31112e4369b89199d9324af8/ur_lstm_torch-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "893ef71b28268cd6aea9ed5ad6fe8ed11027135a8619c7d1794610b462b1f642",
        "md5": "451c09e3245603e5db53d1c060117ebb",
        "sha256": "1c775fefae3626a4c61b6c6b58e68a5575b5e7f8e3410e99f9136f93b7635b94"
      },
      "downloads": -1,
      "filename": "ur-lstm-torch-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "451c09e3245603e5db53d1c060117ebb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4067,
      "upload_time": "2021-03-16T19:32:39",
      "upload_time_iso_8601": "2021-03-16T19:32:39.673238Z",
      "url": "https://files.pythonhosted.org/packages/89/3e/f71b28268cd6aea9ed5ad6fe8ed11027135a8619c7d1794610b462b1f642/ur-lstm-torch-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}