{
  "info": {
    "author": "Sri Kadimisetty",
    "author_email": "s@sri.io",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Terminals"
    ],
    "description": "[action_hero_logo]: ./art/logo.svg\n![Action Hero Logo][action_hero_logo]\n\n\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/action-hero?style=flat-square)\n![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)\n[![codecov](https://codecov.io/gh/kadimisetty/action-hero/branch/master/graph/badge.svg)](https://codecov.io/gh/kadimisetty/action-hero)\n[![Build Status](https://travis-ci.org/kadimisetty/action-hero.svg?branch=master)](https://travis-ci.org/kadimisetty/action-hero)\n[![PEP8](https://img.shields.io/badge/code%20style-pep8-green.svg)](https://www.python.org/dev/peps/pep-0008/)\n![PyPI - License](https://img.shields.io/pypi/l/action-hero?style=flat-square)\n\n####\n\n`action_hero` is a python package that helps you  \n__manage user arguments in command line applications using `argparse`__ \n\n\n[Introduction](#introduction) · [Quick Usage](#quick-usage) · [Help & FAQ](#help-and-faq) · [Catalog](#catalog) · [Development](#development)\n\n## Introduction\n\n<dl>\n\n<dt><code>argparse</code></dt>\n<dd><code>argparse</code> is a python standard library module used to make\ncommand line applications.\n<code>argparse</code> provides\n<code>ArgumentParser</code> that parses user arguments and runs\n<code>argparse.Action</code>s on them.\n<a href=\"https://docs.python.org/3/library/argparse.html\">⚓︎</a>\n</dd>\n\n\n<dt><code>action_hero</code> 🔥</dt>\n<dd><code>action_hero</code> makes <code>argparse</code> more capable by\nproviding a large number of custom actions. For example, the\n<strong><code>FileIsWritableAction</code> automatically verifies that file\npath(s) accepted as arguments are writable, informing the user if they\naren't.</strong> This saves you the trouble of doing that check yourself. Nice,\nno? <a href=\"#catalog\">Browse the catalog</a> for many such actions.</dd>\n\n</dl>\n\n\n\n\n## Quick Usage\n\n__1. Installation__:\n\n```python \npip install action_hero\n```\n\n__2. Quick Usage__: Import an action and specify it when adding an argument to your parser.\n\n```python \nfrom action_hero import FileIsReadableAction\n...\nparser.add_argument(\"--file\", action=FileIsReadableAction)\n...\n```\n\n__3. Full Example__: CLI program that counts number of lines of a file. \n\n```python\n# examples/line_counter.py\nimport argparse\n\nfrom action_hero import FileIsReadableAction\n\n\nif __name__ == \"__main__\":\n\n    # Create parser\n    parser = argparse.ArgumentParser()\n\n    # Add user argument \"--file\" and assert that it will be readable\n    parser.add_argument(\"--file\", action=FileIsReadableAction)\n\n    # Parse user arguments\n    args = parser.parse_args()\n\n    if args.file:\n        # Print number of lines in file\n        with open(args.file) as f:\n            print(\"{} has {} lines\".format(args.file, len(f.readlines())))\n    else:\n        # Print usage if no arguments were given\n        parser.print_usage()\n```\n\nRun `line_counter.py` on the command line\n\n```bash\n$ ls\nline_counter.py mary.md\n\n$ python line_counter.py --file mary.md\nmary.md has 39 lines\n\n$ python line_counter.py\nusage: line_counter.py [-h] [--file FILE]\n\n$ python line_counter.py --file nofile.md\nusage: line_counter.py [-h] [--file FILE]\nline_counter.py: error: argument --file: File is not readable\n```\n\n**Note**: _Supported Python Versions >= 3.5_\n\n## Help and FAQ\n\n### Accepting `action_values`\nThere are times your action requires an additional value. For instance, when your argument accepts only filenames with `md` or `markdown` extensions. You can use the `FileHasExtensionAction` action for this and pass in the extensions to check for via `action_values`, like so —\n\n```python\nparser.add_argument(\n    \"--file\", \n    action=FileHasExtensionAction,\n    action_values=[\"md\", \"markdown\"]\n)\n\n```\n\nUnless otherwise mentioned,  `action_values` should be provided as a non-empty\nlist of strings. e.g.\n`action_values = [\"md\", \"markdown\"]`.\n\n\n### Pipelining multiple actions\n\nThe `PipelineAction` allows you to run multiple actions as a pipeline. Pass in\nyour pipeline of actions as a list to `action_values`. If one of the actions\nyou're passing in has it's own `action_values`, put that one as a tuple, like\nsuch: `(FileHasExtensionAction, [\"md\", \"markdown\"])`. Here's an example of\npipelining actions for `--file` \n\n1. File has extensions `md` or `markdown`\n2. File exists\n\n```python\nparser.add_argument(\n    \"--file\", \n    action=PipelineAction, \n    action_values=[\n        (FileHasExtensionAction, [\"md\", \"markdown\"]),\n        FileExistsAction\n    ]\n)\n```\n\nAnother helpful feature, this action provides is the _order of error\nreporting_.  In the above example, if the supplied argument file did not have\nthe markdown extensions, the error message would reflect that and exit.  After\nthe user redoes the entry with a valid filename the next action in the pipeline\napplies `FileExistsAction` which checks for existence.  If the file does not\nexist, an error message about file not existing will be shown and exits\nallowing the user to try again.\n\nThis behavior can save you a lot of manual condition checks later on. For\nexample, here's how to check for an _existing, writable, non-empty_, markdown\nfile —\n\n```python\nparser.add_argument(\n    \"--file\", \n    action=PipelineAction, \n    action_values=[\n        FileExistsAction, \n        FileIsWritableAction,\n        FileIsNotEmptyAction,\n        (FileHasExtensionAction, [\"md\", \"markdown\"])\n]\n```\n\n### Exceptions in this module\nYou'll come across two different exceptions in `action_hero`.\n\n1. __`ValueError`__: These are intended for you, the CLI developer. You'd want\n   to fix any underlying issue that causes them before releasing your CLI.\n   e.g. when `action_values` is an empty list.\n\n2. __`argparse.ArgumentError`__: These are intended for your CLI's users, so\n   they might use the messages as hints to provide corrent command line\n   options.\n\n### Not capturing user argument exceptions\n`argparse.ArgumentParser` has a slightly unconventional approach to handling\n`argparse.ArgumentError`s. Upon encountering one, it prints argument usage\ninformation, error and exits. I mention this, so you don't setup a `try/except`\naround `parser.parse_args()` to capture that exception. \n\nIn order to maintain consistency with the rest of your `argparse` code,\nexceptions in `action_hero` are also of type `argparse.ArgumentError` and\ncauses system exit as well. More information can be found in [PEP\n389](https://www.python.org/dev/peps/pep-0389/#id46). Since this is\nexpected behavior, I recommend you allow this exception and let it display usage\ninformation and exit.\n\n### Arguments accepting multiple values\nJust like any other `argparse.Action` each `action_hero.Action` handles\nmultiple values and provides relevant error messages.\n\n### FAQ\n<dl>\n<dt>What do I need to know to use <code>action_hero</code> in my command line application?</dt>\n<dd>Vanilla <code>argparse</code> knowledge should do it.</dd>\n\n<dt>Where can I find information about <code>argparse</code>?</dt>\n<dd><code>argparse</code> is part of the <a href=\"https://docs.python.org/3.7/library/argparse.html#module-argparse\">Python standard library</a>.</dd>\n\n<dt>Is <code>action_hero</code> tied to the <code>argparse</code> module?</dt>\n<dd>Yes <em>(but technically no — any project that can use an <code>argpoarse.Action</code> should work as long as it handles the <code>argparse.ArgumentError</code> exception)</em></dd>\n\n<dt>What type are the user argument exceptions?</dt>\n<dd><code>argparse.ArgumentError{\"helpful error message\"}</code>, just like any other <code>argparse.Action</code></code></dd>\n\n<dt>Why re-implement actions already provided by <code>argparse</code> like the <code>choices</code> action?</dt>\n<dd>In order to include them in <code>PipelineAction</code>.</dd>\n\n<dt>There was no mention of humans! Does this work for humans?</dt>\n<dd>Yes, it works for humans :)</dd>\n</dl>\n\n\n## Catalog\n\n\n1. __Special__ actions:\n\n| Action | Description | `action_values` |\n| --- | --- | --- |\n| __`PipelineAction`__ | Run multiple actions as a pipeline | Actions to run as a pipeline. e.g. `[FileExistsAction, FileIsWritableAction]`. ([Read more](#pipelining-multiple-actions)) |\n| __`DebugAction`__ | Print debug information. There can be multiple of these in a pipeline | |\n\n2. __Path, Directory and File__ related actions:\n\n| Action | Description | `action_values` |\n| --- | --- | --- |\n| __`DirectoryDoesNotExistAction`__ | Check if directory does not exist | |\n| __`DirectoryExistsAction`__ | Check if directory exists | |\n| __`DirectoryIsExecutableAction`__ | Check if directory is executable | |\n| __`DirectoryIsNotExecutableAction`__ | Check if directory is not executable | |\n| __`DirectoryIsNotReadableAction`__ | Check if directory is not readable | |\n| __`DirectoryIsNotWritableAction`__ | Check if directory is not writable | |\n| __`DirectoryIsReadableAction`__ | Check if directory is readable | |\n| __`DirectoryIsValidAction`__ | Check directory is valid | |\n| __`DirectoryIsWritableAction`__ | Check if directory is writable | |\n| __`EnsureDirectoryAction`__<sup>*</sup> | Ensure directory exists and create it if it doesnt | |\n| __`EnsureFileAction`__<sup>*</sup> | Ensure file exists and create it if it doesnt | |\n| __`FileDoesNotExistAction`__ | Check if file doesnt exist | |\n| __`FileExistsAction`__ | Check if file exists | |\n| __`FileIsEmptyAction`__ | Check if file is empty | |\n| __`FileIsExecutableAction`__ | Check if file is executable | |\n| __`FileIsNotEmptyAction`__ | Check if file is not empty | |\n| __`FileIsNotExecutableAction`__ | Check if file is not executable | |\n| __`FileIsNotReadableAction`__ | Check if file is not readable | |\n| __`FileIsNotWritableAction`__ | Check if file is not writable | |\n| __`FileIsReadableAction`__ | Check if file is readable | |\n| __`FileIsValidAction`__ | Check file is valid | |\n| __`FileIsWritableAction`__ | Check if file is writable | |\n| __`FileHasExtensionAction`__ | Check if file has specified extension | Extensions to check against. e.g. `[\"md\", \"markdown\"]` |\n| __`PathDoesNotExistsAction`__ | Check if path does not exist | |\n| __`PathExistsAction`__ | Check if path exists | |\n| __`PathIsExecutableAction`__ | Check if path is executable | |\n| __`PathIsNotExecutableAction`__ | Check if path is not executable | |\n| __`PathIsNotReadableAction`__ | Check if path is not writable | |\n| __`PathIsNotWritableAction`__ | Check if path is not writable | |\n| __`PathIsReadableAction`__ | Check if path is readable | |\n| __`PathIsValidAction`__ | Check if path is valid | |\n| __`PathIsWritableAction`__ | Check if path is writable | |\n| __`ResolvePathAction`__<sup>†</sup> | Resolves path to canonical path removing symbolic links if present | |\n\n\n3. __Net & Email__ related actions:\n\n| Action | Description | `action_values` |\n| --- | --- | --- |\n| __`IPIsValidIPAddressAction`__ | Check if ip is valid ipv4 or ipv6 address | |\n| __`IPIsValidIPv4AddressAction`__ | Check if ip address is valid ipv4 address | |\n| __`IPIsValidIPv6AddressAction`__ | Check if ip address is valid ipv6 address | |\n| __`URLIsNotReachableAction`__ | Check if URL is not reachable | |\n| __`URLIsReachableAction`__ | Check if URL is reachable | |\n| __`URLWithHTTPResponseStatusCodeAction`__ | Check if upplied URL responds with expected HTTP response status code | [Status codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status) to check against. e.g. `[\"200\", \"201\", \"202\", \"204\"]`  |\n| __`EmailIsValidAction`__ | Checks if email address is valid | |\n\n\n4. __Type__ related actions:\n\n| Action | Description | `action_values` |\n| --- | --- | --- |\n| __`IsConvertibleToFloatAction`__ | Check if value is convertible to float | |\n| __`IsConvertibleToIntAction`__ | Check if value is convertible to int | |\n| __`IsConvertibleToUUIDAction`__ | Checks if value is convertible to UUID | |\n| __`IsFalsyAction`__ | Checks if value is falsy | |\n| __`IsTruthyAction`__ | Checks if value is truthy | |\n\n5. __Range__ related actions:\n\n| Action | Description | `action_values` |\n| --- | --- | --- |\n\n6. __Miscellaneous__ actions:\n\n| Action | Description | `action_values` |\n| --- | --- | --- |\n| __`ChoicesAction`__ | Argument can only have values from provided choice(s)  | Choices e.g. `[\"red\", \"blue\", \"green\"]` |\n| __`NotifyAndContinueAction`__ | Print provided notification message(s) | Message(s) e.g. `[\"This command will be deprecated in the next version.\"]` |\n| __`NotifyAndExitAction`__ | Print provided notification message(s) and Exit | Message(s) e.g. `[\"This command has been deprecated\", \"Try --new-command\"]` |\n| __`ConfirmAction`__ | Print provided message and proceed with user confirmation _yes or no_. | Message(s) e.g. `[\"Proceed to Installation? (Y/n)\"]` |\n| __`GetInputAction`__<sup>†</sup> | Get user input and save to `self.dest`  | Message(s) e.g. `[\"Favorite color\"]` |\n| __`GetSecretInputAction`__<sup>†</sup> | Get user input without displaying characters and save to the `self.dest`  | Message(s) e.g. `[\"Enter your Password\"]` |\n| __`LoadJSONFromFileAction`__<sup>†</sup> | Return loaded JSON file(s) |  |\n| __`LoadYAMLFromFileAction`__<sup>†</sup> | Return loaded YAML file(s) |  |\n| __`LoadPickleFromFileAction`__<sup>†</sup> | Return unpickled file(s) |  |\n| __`CollectIntoDictAction`__<sup>†</sup> | Collect values into a dict | Delimiter(s) to split value(s) into key:value pair(s) e.g. `[\":\", \"=\"]` (If multiple delimiters exist inside a value, only the first match is used) |\n| __`CollectIntoListAction`__<sup>†</sup> | Collect values into a list |  |\n| __`CollectIntoTupleAction`__<sup>†</sup> | Collect values into a tuple |  |\n\n\n<strong><sup>*</sup></strong> Actions that can make changes to disk  \n<strong><sup>†</sup></strong> Actions that can make changes to `self.dest`\n\n\n## Development\n\n### Notes\n- __Formatting__-: _PEP8 only. Please format with black using `black_linelength=79`_\n- __License__: _The MIT License_\n- __Image Attributions__: _Karate by Alex Auda Samora from the Noun Project_\n\nThank you for using `action_hero` — [@kadimisetty](https://github.com/kadimisetty) ⭐️✨\n\n\n",
    "description_content_type": "text/plain",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kadimisetty/action-hero",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "action-hero",
    "package_url": "https://pypi.org/project/action-hero/",
    "platform": "",
    "project_url": "https://pypi.org/project/action-hero/",
    "project_urls": {
      "Homepage": "https://github.com/kadimisetty/action-hero"
    },
    "release_url": "https://pypi.org/project/action-hero/0.7.0/",
    "requires_dist": [
      "requests",
      "pyyaml"
    ],
    "requires_python": ">=3.5.0",
    "summary": "Make powerful CLIs with argparse actions that pack a punch!",
    "version": "0.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6560783,
  "releases": {
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a53d23b4764f6a58db643acc19e32a98657d47743ebbf7e4dc51a63341fed4f8",
          "md5": "5812d5d18cb1a10879a6b6f6d536f634",
          "sha256": "e43954a7faa83e107e8ed47793fa1a3fddb04afb4d8102e6be1233ab0943d1a8"
        },
        "downloads": -1,
        "filename": "action_hero-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5812d5d18cb1a10879a6b6f6d536f634",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 18750,
        "upload_time": "2019-08-05T11:36:20",
        "upload_time_iso_8601": "2019-08-05T11:36:20.642517Z",
        "url": "https://files.pythonhosted.org/packages/a5/3d/23b4764f6a58db643acc19e32a98657d47743ebbf7e4dc51a63341fed4f8/action_hero-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "225cb6a1c4dd6375eb6a0a315675c47684e69ad62f8da1259e4a2788789f1a77",
          "md5": "557c0847b4a6916cee9b6ab56d3ff54f",
          "sha256": "32524885c7b222ca33f628fdb786a8c5c378a7db26e3c9e16caf5b05124b2de4"
        },
        "downloads": -1,
        "filename": "action-hero-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "557c0847b4a6916cee9b6ab56d3ff54f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 35652,
        "upload_time": "2019-08-05T11:36:23",
        "upload_time_iso_8601": "2019-08-05T11:36:23.199450Z",
        "url": "https://files.pythonhosted.org/packages/22/5c/b6a1c4dd6375eb6a0a315675c47684e69ad62f8da1259e4a2788789f1a77/action-hero-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a06cccec780ec9afbb3d9c245f68dee47c3e737308ef1b14cc6bc20dd7e7ebae",
          "md5": "498d052a4edc1e59179af1bcbefceeb9",
          "sha256": "0f0a815cd8fe8136cdac07af087d446e8746e517be5edd5922ea7ff592004e9a"
        },
        "downloads": -1,
        "filename": "action_hero-0.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "498d052a4edc1e59179af1bcbefceeb9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 20034,
        "upload_time": "2019-08-06T06:41:15",
        "upload_time_iso_8601": "2019-08-06T06:41:15.590573Z",
        "url": "https://files.pythonhosted.org/packages/a0/6c/ccec780ec9afbb3d9c245f68dee47c3e737308ef1b14cc6bc20dd7e7ebae/action_hero-0.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b042157eb5e8e9e476cb237ebb259845295a0f3f8392d46aefa67a82d53c6d1",
          "md5": "90cf5b9ee3fe35130408a35a6b7d5c51",
          "sha256": "1b7f401dbc810eb16c4d3ccdcb330d6ca7f3c093771f56b639f25f2de42b00ca"
        },
        "downloads": -1,
        "filename": "action-hero-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "90cf5b9ee3fe35130408a35a6b7d5c51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 37730,
        "upload_time": "2019-08-06T06:41:17",
        "upload_time_iso_8601": "2019-08-06T06:41:17.378246Z",
        "url": "https://files.pythonhosted.org/packages/9b/04/2157eb5e8e9e476cb237ebb259845295a0f3f8392d46aefa67a82d53c6d1/action-hero-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "475abb280f2edd0f02be69809704646be92d2763b8092b6b78849b74131264d7",
          "md5": "770e8a9aac03422afb31a7e4eec8072d",
          "sha256": "7d5f5b93a463f27b398cad2c736d6c73d2bcc1d672a2c6f52d177b3a91683ecd"
        },
        "downloads": -1,
        "filename": "action_hero-0.6.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "770e8a9aac03422afb31a7e4eec8072d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.0",
        "size": 20018,
        "upload_time": "2019-08-07T05:02:23",
        "upload_time_iso_8601": "2019-08-07T05:02:23.437958Z",
        "url": "https://files.pythonhosted.org/packages/47/5a/bb280f2edd0f02be69809704646be92d2763b8092b6b78849b74131264d7/action_hero-0.6.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c6109fe9703b9a5795c6696c3d1151d42ebc683fd62ec4a450367b1b26668f6",
          "md5": "2220673f0372ea3907f665b1c72e2ec1",
          "sha256": "81b96384fa29f02d9c41bdb4380829ae85422d9bc794d7b51529205bcb66482c"
        },
        "downloads": -1,
        "filename": "action-hero-0.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2220673f0372ea3907f665b1c72e2ec1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 36578,
        "upload_time": "2019-08-07T05:02:32",
        "upload_time_iso_8601": "2019-08-07T05:02:32.979066Z",
        "url": "https://files.pythonhosted.org/packages/7c/61/09fe9703b9a5795c6696c3d1151d42ebc683fd62ec4a450367b1b26668f6/action-hero-0.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e4079de7a563c294f3e276178a99fd6cc360cdf057be11e69e4a4444a929c8c",
          "md5": "a3bd593dcf39aeb61f12c8bda09298d1",
          "sha256": "3fc7e32e1980df3021f54f161180eb9400de72d1fec169da400d1af1dc7a9244"
        },
        "downloads": -1,
        "filename": "action_hero-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3bd593dcf39aeb61f12c8bda09298d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.0",
        "size": 23450,
        "upload_time": "2020-02-03T03:50:37",
        "upload_time_iso_8601": "2020-02-03T03:50:37.568197Z",
        "url": "https://files.pythonhosted.org/packages/5e/40/79de7a563c294f3e276178a99fd6cc360cdf057be11e69e4a4444a929c8c/action_hero-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80fb18112af533fa6095c5d4a427260a9cfff95a117a16988e875b2c2beba645",
          "md5": "2cc34dd8e1ea59b2ea8ca4aab4cc456e",
          "sha256": "f765b04fa862a1b9867c745fe306cb4c60a7e4d384499ca1ad2bf11f880b2a06"
        },
        "downloads": -1,
        "filename": "action-hero-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2cc34dd8e1ea59b2ea8ca4aab4cc456e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 137324,
        "upload_time": "2020-02-03T03:50:41",
        "upload_time_iso_8601": "2020-02-03T03:50:41.927586Z",
        "url": "https://files.pythonhosted.org/packages/80/fb/18112af533fa6095c5d4a427260a9cfff95a117a16988e875b2c2beba645/action-hero-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5e4079de7a563c294f3e276178a99fd6cc360cdf057be11e69e4a4444a929c8c",
        "md5": "a3bd593dcf39aeb61f12c8bda09298d1",
        "sha256": "3fc7e32e1980df3021f54f161180eb9400de72d1fec169da400d1af1dc7a9244"
      },
      "downloads": -1,
      "filename": "action_hero-0.7.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a3bd593dcf39aeb61f12c8bda09298d1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5.0",
      "size": 23450,
      "upload_time": "2020-02-03T03:50:37",
      "upload_time_iso_8601": "2020-02-03T03:50:37.568197Z",
      "url": "https://files.pythonhosted.org/packages/5e/40/79de7a563c294f3e276178a99fd6cc360cdf057be11e69e4a4444a929c8c/action_hero-0.7.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80fb18112af533fa6095c5d4a427260a9cfff95a117a16988e875b2c2beba645",
        "md5": "2cc34dd8e1ea59b2ea8ca4aab4cc456e",
        "sha256": "f765b04fa862a1b9867c745fe306cb4c60a7e4d384499ca1ad2bf11f880b2a06"
      },
      "downloads": -1,
      "filename": "action-hero-0.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2cc34dd8e1ea59b2ea8ca4aab4cc456e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.0",
      "size": 137324,
      "upload_time": "2020-02-03T03:50:41",
      "upload_time_iso_8601": "2020-02-03T03:50:41.927586Z",
      "url": "https://files.pythonhosted.org/packages/80/fb/18112af533fa6095c5d4a427260a9cfff95a117a16988e875b2c2beba645/action-hero-0.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}