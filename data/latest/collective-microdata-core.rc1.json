{
  "info": {
    "author": "keul",
    "author_email": "luca@keul.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Plone",
      "Framework :: Plone :: 4.2",
      "Programming Language :: Python"
    ],
    "description": ".. contents:: **Table of contents**\n\nIntroduction\n============\n\nThis product is designed for adding `microdata`__ support to your Plone contents.\n\n__ http://en.wikipedia.org/wiki/Microdata_%28HTML%29\n\nHow to use\n==========\n\nThis package simply provides raw support, not really useful on his own. It is intended to be\nextended by 3rd party projects that want provide microdata support for Plone.\n\nOne complete implementation of all instruction below is `collective.microdata.event`__.\n\n__ http://plone.org/products/collective.microdata.event\n\nThe microdata vocabulary\n------------------------\n\nEvery content type that wanna provide microdata informations needs to provide an adapter for the\n``IMicrodataVocabulary`` interface. This interface is limited to a single information: an **URI\nto a microdata vocabulary**.\n\nMicrodata vocabulary are standardized outside HTML 5 specifications, so is possible to have\ndifferent families of vocabularies. You can also invent your own.\n\nThe schema.org implementation\n-----------------------------\n\nNowadays the most promising implementation of microdata is the one defined at `schema.org`__ so this\npackage is supporting it. This is done providing the most-generic type defined: the `Thing`__ type.\n\n__ http://schema.org/\n__ http://schema.org/Thing\n\nThis is automatically done for all Plone content types and catalog objects (for catalog: a new\ncatalog metadata ``microdata_itemtype`` will be added to your catalog, saving there the most\nspecific microdata vocabulary URL found).\n\nThis is done providing adapters for ``ISchemaOrgThing`` interface (that extends ``IMicrodataVocabulary``).\n\nAgain: knowing that all your Plone content types are \"things\" is not very funny, and not a real step\nforward.\n\nHow to extend\n=============\n\nFrom contents\n-------------\n\nTo get microdata information from a content types, your product must provide his own implementation for\nthe ``IMicrodataVocabulary``::\n\n    <adapter for=\"your.products.content.IType\"\n             provides=\"collective.microdata.core.interfaces.IMicrodataVocabulary\"\n             factory=\".adapter.YourTypeMicrodataProvider\" />\n\nThen you need to provide the adapter::\n\n    class YourTypeMicrodataProvider(object):\n    implements(IYourMicrodataVocabulary)\n    \n    def __init__(self, content):\n        self.microdata_vocabulary = 'http://your.microdata.uri'\n        # now get data from the content\n        self.microdata_data1 = ... \n\nThen your content's view must obtain the microdata adapter you defined::\n\n    class YourTypeView(BrowserView):\n    \n        ...\n    \n        def microdata(self):\n            return IMicrodataVocabulary(self.context)\n\n\nFinally your view template must use microdata information::\n\n    ...\n    <article metal:fill-slot=\"main\"\n             tal:define=\"microdata view/microdata\"\n             itemscope=\"itemscope\"\n             tal:attributes=\"itemtype microdata/microdata_vocabulary\">\n    ...\n\n\nFrom catalog\n------------\n\nThe portal catalog ``microdata_itemtype`` column will automatically store the content microdata\nvocabulary URL. Default value is the \"Thing\" URL (http://schema.org/Thing) but as soon as you\nprovide a more specific adapter, this URL will be replaced with the new ones.\n\nThere's an adapter for getting raw ``Thing`` microdata from a catalog brain from all Plone content\ntypes, but your 3rd party content type must also provide a more specific ones::\n\n    <adapter for=\"Products.ZCatalog.interfaces.ICatalogBrain\"\n             provides=\"collective.microdata.core.interfaces.IMicrodataVocabulary\"\n             factory=\".adapter.YourTypeMicrodataBrainProvider\"\n             name=\"http://your.microdata.uri\" />\n\nThen you need to provide the adapter::\n\n    class YourTypeMicrodataBrainProvider(object):\n    implements(IYourMicrodataVocabulary)\n    \n    def __init__(self, brain):\n        self.microdata_vocabulary = 'http://your.microdata.uri'\n        # now get data from the cataloged content\n        self.microdata_data1 = ... \n\nSupport for folder content listing views\n========================================\n\nIf you want to provide microdata information also in folder content views (so displaying multiple\nmicrodata objects in a single page), you could like to install `collective.microdata.contentlisting`__.\n\n__ https://github.com/keul/collective.microdata.contentlisting\n\nSee it's documentation for further information on how to use this in you product.\n\nTesting your microdata\n======================\n\nThis product also include a JavaScript tester microdata tool called `Microdata Tool`__\n(a modified ones, just to fix some crappy Sunburst CSS rules).\n\n__ http://krofdrakula.github.com/microdata-tool/\n\nTo enable it while testing your site, just run the *testing* Generic Setup profile from\nyour *site_setup* tool. \n\nThis will enable the JavaScript tester in every page.\n\n**Hint**: duration checker seems not working properly.\n\nFinal notes\n===========\n\nProviding microdata doesn't ensure that search engines will use it.\n\nChangelog\n=========\n\n0.1 (2012-09-08)\n----------------\n\n- Initial release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/keul/collective.microdata.core",
    "keywords": "plone microdata schema.org html5",
    "license": "GPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "collective.microdata.core",
    "package_url": "https://pypi.org/project/collective.microdata.core/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/collective.microdata.core/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/keul/collective.microdata.core"
    },
    "release_url": "https://pypi.org/project/collective.microdata.core/0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Core package for Plone microdata support",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 787965,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d15913c6bab3b46209dd8cd103f0e8e0010e20f960fec73ae6c394bb2a45fb0",
          "md5": "080050fdf53fcb5a001317d9e48fed8c",
          "sha256": "31cfaa27130e8045e6ae4561518523eaf611344d49014bb2543b8998e51bb846"
        },
        "downloads": -1,
        "filename": "collective.microdata.core-0.1.zip",
        "has_sig": false,
        "md5_digest": "080050fdf53fcb5a001317d9e48fed8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33120,
        "upload_time": "2012-09-08T12:24:35",
        "upload_time_iso_8601": "2012-09-08T12:24:35.080964Z",
        "url": "https://files.pythonhosted.org/packages/1d/15/913c6bab3b46209dd8cd103f0e8e0010e20f960fec73ae6c394bb2a45fb0/collective.microdata.core-0.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d15913c6bab3b46209dd8cd103f0e8e0010e20f960fec73ae6c394bb2a45fb0",
        "md5": "080050fdf53fcb5a001317d9e48fed8c",
        "sha256": "31cfaa27130e8045e6ae4561518523eaf611344d49014bb2543b8998e51bb846"
      },
      "downloads": -1,
      "filename": "collective.microdata.core-0.1.zip",
      "has_sig": false,
      "md5_digest": "080050fdf53fcb5a001317d9e48fed8c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 33120,
      "upload_time": "2012-09-08T12:24:35",
      "upload_time_iso_8601": "2012-09-08T12:24:35.080964Z",
      "url": "https://files.pythonhosted.org/packages/1d/15/913c6bab3b46209dd8cd103f0e8e0010e20f960fec73ae6c394bb2a45fb0/collective.microdata.core-0.1.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}