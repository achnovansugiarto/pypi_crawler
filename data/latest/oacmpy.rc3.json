{
  "info": {
    "author": "Joris T. OLYMPIO",
    "author_email": "jto.devs@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering"
    ],
    "description": "oacmpy\n=========\n\n## Description\nThe object of **oacmpy** is currently two-fold:\n- to parse CCSDS Data Message files and, \n- to convert them to CZML file for [cesium] 3d mapping framework.\n\nCCSDS is a standard for communicating satellite data between operators, but it is generally widely used for any flight dynamics software, and library [orekit].\n(see also [odmpy] and [orekit for python]). \nHere, Data Messages include broadly the Navigation Data Messages but also Conjunction Data Message (CDM). Tracking Data Message (TDM) will not be implemented.\n\nThe idea behind **oacmpy** is to keep current tools interfaces. Rather than updating tools with specific CZML features, this module creates the files for Cesium, from your standardized output files.\nThe generated CZML file is customizable and allow showing:\n- display trajectory (through OEM)\n- illustrating spacecraft attitude motion (through AEM) \n- showing close encounter (through CDM)\n\nThe approach is different than the use of TLE as no propagation is performed here. The propagation (and hence its accuracy and fidelity) is down to the tool used to generate the initial ephemeris file. \n\n\n\n[cesium]:https://cesium.com/cesiumjs/\n[orekit]:http://www.orekit.org\n[odmpy]:https://pypi.org/project/odmpy/\n[orekit for python]:https://anaconda.org/conda-forge/orekit\n\n## Usage\n\n### Extracting data from Data Messages\n#### OEM\n\n    from oacmpy import ccsds\n\n    oem = cc.Oem.Oem(\"oem.xml\", \"xml\")\n    oem.get_satellite_list()\n    oem.get_ephemeris(\"SATELLITE NAME\")  # array list of epoch - position/velocity vectors\n    oem.get_covariances(\"SATELLITE NAME\")  # array list of covariance parameter\n    \n    \nCovariance data can be extracted like,\n    \n    cov_data = oem.get_covariances(\"SATELLITE NAME\")[0]\n    cov_data.get_epoch()  # covariance epoch\n    cov_data.get_reference_frame() # covariance reference frame\n    cov_date.get_covariance_matrix()  # covariance matrix\n\n    \n#### AEM (Attitude file)\n\n    aem = ccsds.Aem.Aem(\"aem.txt\", \"kvn\")\n    aem.get_satellite_list()\n    aem.get_attitudes(\"SATELLITE NAME\")  # array list of epoch - quaternions \n\n\n#### CMD (Conjunction file)\n\n    cdm = ccsds.Cdm.Cdm(\"cdm.xml\", \"xml\") # conjunction event    \n    cdm.get_satellite_list()\n    cdm.get_tca()\n    cdm.get_miss_distance()\n    cdm.get_probability()\n    \n### Generation of CZML   \nThe generation of CZML script for use with [Cesium](https://cesium.com/) is the main purpose of this lib.\nYou can ingest different CCSDS data file (e.g., OEM, AEM or CDM) and create a Cesium scene description. This can be \nhelpful to illustrate satellite trajectory or satellite conjunctions.\n\n#### From Python Console\nCreate the CZML from OEM and AEM:\n\n    from oacmpy.czml import CdmToCzml, OemToCzml, ScenarioCzml \n    oem1_czml = OemToCzml.OemAemToCzml(oem1, aem1)  # aem1 is optional\n    \nAdd conjunction event with CDM:      \n\n    cdm_czml = CdmToCzml.CdmToCzml(cdm)\n\nGenerate CZML file:\n\n    start = oem1.get_start_time(\"SATELLITE NAME\").datetime\n    end = oem1.get_stop_time(\"SATELLITE NAME\").datetime\n    \n    scenario = ScenarioCzml.ScenarioCzml(start, end)\n    scenario.add_content(oem1_czml.dump())\n    scenario.add_content(oem2_czml.dump())\n    scenario.add_content(cdm_czml.dump())\n    scenario.create_document([], \"scenario.czml\")\n\nPlotting attributes are customizable, e.g., changing color, material, line with, etc.\n\n#### Command line tool\nIf you have an OEM file and you do not bother about attitude, or configuring the graphics, you can simply run:\n\n    python -m aocmpy -i [your-oem-file] -o [output-file.czml]   \n\n_[your-oem-file]_ can include wildcard to process several OEM into a single CZML file.\nThe file format (KVN or XML) of the OEM file will be guessed with the file extension.\n\n\n.. image:: ./example/screenshot.png\n\n<img src=\"./example/screenshot.png\" width=400/>\n\n## Testing\nRun unit tests with\n\n    python -m unittest discover --start-directory ../tests\n\n\n## References\n  * Orbit Data Messages, CCSDS 502.0-B-2, Nov 2009\n  * Attitude Data Messages, CCSDS 504.0-B-1, May 2008\n  * Conjunction Data Messages, CCSDS 508.0-B-1, June 2013\n  * XML SPECIFICATION FOR NAVIGATION DATA MESSAGES, CSDS 505.0-B-1, December 2010\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/jorispio/ccsds2czml",
    "keywords": "\"space trajectory\" orbit",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "oacmpy",
    "package_url": "https://pypi.org/project/oacmpy/",
    "platform": null,
    "project_url": "https://pypi.org/project/oacmpy/",
    "project_urls": {
      "Homepage": "https://gitlab.com/jorispio/ccsds2czml"
    },
    "release_url": "https://pypi.org/project/oacmpy/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Parse CCSDS Data Message, including OEM, AEM and CDM, and convert them to a CZML scenario file.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13481237,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f70eef1bb3b6c3d9734c2f9aa730b8ed125b3fad5183ecc160e0854c5fa76b0",
          "md5": "bc7a1843300a6fa0c2519aed0391277e",
          "sha256": "65e92aecf18b02c74c3e84f95426ff14c7fe8c45e5eaad8b2a5ef434271e1d99"
        },
        "downloads": -1,
        "filename": "oacmpy-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc7a1843300a6fa0c2519aed0391277e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2027297,
        "upload_time": "2020-05-21T09:18:24",
        "upload_time_iso_8601": "2020-05-21T09:18:24.356326Z",
        "url": "https://files.pythonhosted.org/packages/1f/70/eef1bb3b6c3d9734c2f9aa730b8ed125b3fad5183ecc160e0854c5fa76b0/oacmpy-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52ffc023a9559146887ca770cd3dfa93539f7490f4a17cdaefb6e1bc12541d23",
          "md5": "191c3602803c382a9add419777fb033a",
          "sha256": "d7e111e9627ab824d4448e5f51d82ced5578fc4f74427a6229dab51841663bf9"
        },
        "downloads": -1,
        "filename": "oacmpy-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "191c3602803c382a9add419777fb033a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2176427,
        "upload_time": "2021-12-28T10:15:22",
        "upload_time_iso_8601": "2021-12-28T10:15:22.840882Z",
        "url": "https://files.pythonhosted.org/packages/52/ff/c023a9559146887ca770cd3dfa93539f7490f4a17cdaefb6e1bc12541d23/oacmpy-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d1549c6f320780478a2114045e04a7a9c15deace9951fa046c72dd17b83178e",
          "md5": "e3eea950c8a46ea0b3a749ef2040a7cc",
          "sha256": "5bd37bd28ba0869441831d05a52809cc8569dbeb3c5ab2004319db92bd08c8fe"
        },
        "downloads": -1,
        "filename": "oacmpy-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3eea950c8a46ea0b3a749ef2040a7cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2027136,
        "upload_time": "2022-04-11T19:03:47",
        "upload_time_iso_8601": "2022-04-11T19:03:47.733796Z",
        "url": "https://files.pythonhosted.org/packages/4d/15/49c6f320780478a2114045e04a7a9c15deace9951fa046c72dd17b83178e/oacmpy-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d1549c6f320780478a2114045e04a7a9c15deace9951fa046c72dd17b83178e",
        "md5": "e3eea950c8a46ea0b3a749ef2040a7cc",
        "sha256": "5bd37bd28ba0869441831d05a52809cc8569dbeb3c5ab2004319db92bd08c8fe"
      },
      "downloads": -1,
      "filename": "oacmpy-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e3eea950c8a46ea0b3a749ef2040a7cc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 2027136,
      "upload_time": "2022-04-11T19:03:47",
      "upload_time_iso_8601": "2022-04-11T19:03:47.733796Z",
      "url": "https://files.pythonhosted.org/packages/4d/15/49c6f320780478a2114045e04a7a9c15deace9951fa046c72dd17b83178e/oacmpy-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}