{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# census-data-aggregator\n\nCombine U.S. census data responsibly\n\n## Installation\n\n```bash\npipenv install census-data-aggregator\n```\n\n## Usage\n\nImport the library.\n\n```python\nimport census_data_aggregator\n```\n\n### Approximating sums\n\nTotal together estimates from the U.S. Census Bureau and approximate the combined margin of error. Follows the bureau's [official guidelines](https://www.documentcloud.org/documents/6162551-20180418-MOE.html) for how to calculate a new margin of error when totaling multiple values. Useful for aggregating census categories and geographies.\n\nAccepts an open-ended set of paired lists, each expected to provide an estimate followed by its margin of error.\n\n```python\nmales_under_5, males_under_5_moe = 10154024, 3778\nfemales_under_5, females_under_5_moe = 9712936, 3911\ncensus_data_aggregator.approximate_sum(\n    (males_under_5, males_under_5_moe), (females_under_5, females_under_5_moe)\n)\n19866960, 5437.757350231803\n```\n\n### Approximating means\n\nEstimate a mean and approximate the margin of error.\n\nThe Census Bureau guidelines do not provide instructions for approximating a mean using data from the ACS. Instead, we implement our own simulation-based approach.\n\nExpects a list of dictionaries that divide the full range of data values into continuous categories. Each dictionary should have four keys:\n\nkey|value\n---|-----\nmin|The minimum value of the range\nmax|The maximum value of the range\nn|The number of people, households or other units in the range\nmoe|The margin of error for the number of units in the range\n\n```python\nincome = [\n    dict(min=0, max=9999, n=7942251, moe=17662),\n    dict(min=10000, max=14999, n=5768114, moe=16409),\n    dict(min=15000, max=19999, n=5727180, moe=16801),\n    dict(min=20000, max=24999, n=5910725, moe=17864),\n    dict(min=25000, max=29999, n=5619002, moe=16113),\n    dict(min=30000, max=34999, n=5711286, moe=15891),\n    dict(min=35000, max=39999, n=5332778, moe=16488),\n    dict(min=40000, max=44999, n=5354520, moe=15415),\n    dict(min=45000, max=49999, n=4725195, moe=16890),\n    dict(min=50000, max=59999, n=9181800, moe=20965),\n    dict(min=60000, max=74999, n=11818514, moe=30723),\n    dict(min=75000, max=99999, n=14636046, moe=49159),\n    dict(min=100000, max=124999, n=10273788, moe=47842),\n    dict(min=125000, max=149999, n=6428069, moe=37952),\n    dict(min=150000, max=199999, n=6931136, moe=37236),\n    dict(min=200000, max=1000000, n=7465517, moe=42206),\n]\napproximate_mean(income)\n(98045.44530685373, 194.54892406267754)\n```\n\nNote that this function expects you to submit a lower bound for the smallest bin and an upper bound for the largest bin. This is often not available for ACS datasets like income. We recommend experimenting with different lower and upper bounds to assess its effect on the resulting mean.\n\nBy default the simulation is run 50 times, which can take as long as a minute. The number of simulations can be changed by setting the `simulation` keyword argument.\n\n```python\napproximate_mean(income, simulations=10)\n```\n\nThe simulation assumes a uniform distribution of values within each bin. In some cases, like income, it is common to assume the [Pareto distribution](https://en.wikipedia.org/wiki/Pareto_distribution) in the highest bin. You can employ it here by passing `True` to the `pareto` keyword argument.\n\n```python\napproximate_mean(income, pareto=True)\n(60364.96525340687, 58.60735554621351)\n```\n\nAlso, due to the stochastic nature of the simulation approach, you will need to set a seed before running this function to ensure replicability.\n\n```python\nimport numpy\n\nnumpy.random.seed(711355)\napproximate_mean(income, pareto=True)\n(60364.96525340687, 58.60735554621351)\nnumpy.random.seed(711355)\napproximate_mean(income, pareto=True)\n(60364.96525340687, 58.60735554621351)\n```\n\n### Approximating medians\n\nEstimate a median and approximate the margin of error. Follows the U.S. Census Bureau's official guidelines for estimation. Useful for generating medians for measures like household income and age when aggregating census geographies.\n\nExpects a list of dictionaries that divide the full range of data values into continuous categories. Each dictionary should have three keys:\n\nkey|value\n---|-----\nmin|The minimum value of the range\nmax|The maximum value of the range\nn|The number of people, households or other units in the range\n\n```python\nhousehold_income_la_2013_acs1 = [\n    dict(min=2499, max=9999, n=1382),\n    dict(min=10000, max=14999, n=2377),\n    dict(min=15000, max=19999, n=1332),\n    dict(min=20000, max=24999, n=3129),\n    dict(min=25000, max=29999, n=1927),\n    dict(min=30000, max=34999, n=1825),\n    dict(min=35000, max=39999, n=1567),\n    dict(min=40000, max=44999, n=1996),\n    dict(min=45000, max=49999, n=1757),\n    dict(min=50000, max=59999, n=3523),\n    dict(min=60000, max=74999, n=4360),\n    dict(min=75000, max=99999, n=6424),\n    dict(min=100000, max=124999, n=5257),\n    dict(min=125000, max=149999, n=3485),\n    dict(min=150000, max=199999, n=2926),\n    dict(min=200000, max=250001, n=4215),\n]\n```\n\nFor a margin of error to be returned, a sampling percentage must be provided to calculate the standard error. The sampling percentage represents what proportion of the population that participated in the survey. Here are the values for some common census surveys.\n\nsurvey|sampling percentage\n------|-------------------\nOne-year PUMS|1\nOne-year ACS|2.5\nThree-year ACS|7.5\nFive-year ACS|12.5\n\n```python\ncensus_data_aggregator.approximate_median(\n    household_income_Los_Angeles_County_2013_acs1, sampling_percentage=2.5\n)\n70065.84266055046, 3850.680465234964\n```\n\nIf you do not provide the value to the function, no margin of error will be returned.\n\n```python\ncensus_data_aggregator.approximate_median(household_income_Los_Angeles_County_2013_acs1)\n70065.84266055046, None\n```\n\nIf the data being approximated comes from PUMS, an additional design factor must also be provided. The design factor is a statistical input used to tailor the estimate to the variance of the dataset. Find the value for the dataset you are estimating by referring to [the bureau's reference material](https://www.census.gov/programs-surveys/acs/technical-documentation/pums/documentation.html).\n\n### Approximating percent change\n\nCalculates the percent change between two estimates and approximates its margin of error. Follows the bureau's [ACS handbook](https://www.documentcloud.org/documents/6177941-Acs-General-Handbook-2018-ch08.html).\n\nAccepts two paired lists, each expected to provide an estimate followed by its margin of error. The first input should be the earlier estimate in the comparison. The second input should be the later estimate.\n\nReturns both values as percentages multiplied by 100.\n\n```python\nsingle_women_in_fairfax_before = 135173, 3860\nsingle_women_in_fairfax_after = 139301, 4047\ncensus_data_aggregator.approximate_percentchange(\n    single_women_in_fairfax_before, single_women_in_fairfax_after\n)\n3.0538643072211165, 4.198069852261231\n```\n\n### Approximating products\n\nCalculates the product of two estimates and approximates its margin of error. Follows the bureau's [ACS handbook](https://www.documentcloud.org/documents/6177941-Acs-General-Handbook-2018-ch08.html).\n\nAccepts two paired lists, each expected to provide an estimate followed by its margin of error.\n\n```python\nowner_occupied_units = 74506512, 228238\nsingle_family_percent = 0.824, 0.001\ncensus_data_aggregator.approximate_product(owner_occupied_units, single_family_percent)\n61393366, 202289\n```\n\n### Approximating proportions\n\nCalculate an estimate's proportion of another estimate and approximate the margin of error. Follows the bureau's [ACS handbook](https://www.documentcloud.org/documents/6177941-Acs-General-Handbook-2018-ch08.html). Simply multiply the result by 100 for a percentage. Recommended when the first value is smaller than the second.\n\nAccepts two paired lists, each expected to provide an estimate followed by its margin of error. The numerator goes in first. The denominator goes in second. In cases where the numerator is not a subset of the denominator, the bureau recommends using the approximate_ratio method instead.\n\n```python\nsingle_women_in_virginia = 203119, 5070\ntotal_women_in_virginia = 630498, 831\ncensus_data_aggregator.approximate_proportion(\n    single_women_in_virginia, total_women_in_virginia\n)\n0.322, 0.008\n```\n\n### Approximating ratios\n\nCalculate the ratio between two estimates and approximate its margin of error. Follows the bureau's [ACS handbook](https://www.documentcloud.org/documents/6177941-Acs-General-Handbook-2018-ch08.html).\n\nAccepts two paired lists, each expected to provide an estimate followed by its margin of error. The numerator goes in first. The denominator goes in second. In cases where the numerator is a subset of the denominator, the bureau recommends uses the approximate_proportion method.\n\n```python\nsingle_men_in_virginia = (226840, 5556)\nsingle_women_in_virginia = (203119, 5070)\ncensus_data_aggregator.approximate_ratio(\n    single_men_in_virginia, single_women_in_virginia\n)\n1.117, 0.039\n```\n\n## A note from the experts\n\nThe California State Data Center's Demographic Research Unit [notes](https://www.documentcloud.org/documents/6165014-How-to-Recalculate-a-Median.html#document/p4/a508562):\n\n> The user should be aware that the formulas are actually approximations that overstate the MOE compared to the more precise methods based on the actual survey returns that the Census Bureau uses. Therefore, the calculated MOEs will be higher, or more conservative, than those found in published tabulations for similarly-sized areas. This knowledge may affect the level of error you are willing to accept.\n\nThe American Community Survey's handbook [adds](https://www.documentcloud.org/documents/6177941-Acs-General-Handbook-2018-ch08.html#document/p3/a509993):\n\n> As the number of estimates involved in a sum or difference increases, the results of the approximation formula become increasingly different from the \\[standard error\\] derived directly from the ACS microdata. Users are encouraged to work with the fewest number of estimates possible.\n\n## References\n\nThis module was designed to conform with the Census Bureau's April 18, 2018, presentation [\"Using American Community Survey Estimates and Margin of Error\"](https://www.documentcloud.org/documents/6162551-20180418-MOE.html), the bureau's [PUMS Accuracy statement](https://www.documentcloud.org/documents/6165603-2013-2017AccuracyPUMS.html) and the California State Data Center's 2016 edition of [\"Recalculating medians and their margins of error for aggregated ACS data.\"](https://www.documentcloud.org/documents/6165014-How-to-Recalculate-a-Median.html), and the Census Bureau's [ACS 2018 General Handbook Chapter 8, \"Calculating Measures of Error for Derived Estimates\"](https://www.documentcloud.org/documents/6177941-Acs-General-Handbook-2018-ch08.html)\n\n## Links\n\n* Issues: [github.com/datadesk/census-data-aggregator/issues](https://github.com/datadesk/census-data-aggregator/issues)\n* Packaging: [pypi.python.org/pypi/census-data-aggregator](https://pypi.python.org/pypi/census-data-aggregator)\n* Testing: [github.com/datadesk/census-data-aggregator/actions](https://github.com/datadesk/census-data-aggregator/actions)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "census-data-aggregator",
    "package_url": "https://pypi.org/project/census-data-aggregator/",
    "platform": null,
    "project_url": "https://pypi.org/project/census-data-aggregator/",
    "project_urls": {
      "Maintainer": "https://github.com/datadesk",
      "Source": "https://github.com/datadesk/census-data-aggregator",
      "Tracker": "https://github.com/datadesk/census-data-aggregator/issues"
    },
    "release_url": "https://pypi.org/project/census-data-aggregator/0.0.8/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": "",
    "summary": "Combine U.S. census data responsibly",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15919515,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1d6d586cb66c9ce319b0362deb24000e684808fd8f1507501c54d48cb59f706",
          "md5": "51287e5ecabef356d743bb4eea033873",
          "sha256": "5cd9a18ac4b5d6e43a8db341eba2b01fe4649c1262c48abb34228c3acc5c1e4b"
        },
        "downloads": -1,
        "filename": "census_data_aggregator-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "51287e5ecabef356d743bb4eea033873",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5738,
        "upload_time": "2019-06-23T16:07:37",
        "upload_time_iso_8601": "2019-06-23T16:07:37.548884Z",
        "url": "https://files.pythonhosted.org/packages/a1/d6/d586cb66c9ce319b0362deb24000e684808fd8f1507501c54d48cb59f706/census_data_aggregator-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "867a6cb5abff0beca54e6a88f9a59a7552e3a32967517142b52f04d0b4d9f07e",
          "md5": "19b493092b609775931a34f60435c117",
          "sha256": "c9230e9d0ccbd204b8b3b56f82deec07140531757164f1959ce67748d4f38749"
        },
        "downloads": -1,
        "filename": "census-data-aggregator-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "19b493092b609775931a34f60435c117",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5624,
        "upload_time": "2019-06-23T16:07:38",
        "upload_time_iso_8601": "2019-06-23T16:07:38.935927Z",
        "url": "https://files.pythonhosted.org/packages/86/7a/6cb5abff0beca54e6a88f9a59a7552e3a32967517142b52f04d0b4d9f07e/census-data-aggregator-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "948086d9f78a08202320ac00b6003207302bbda339b40f2316ed434644333577",
          "md5": "35a0023cfd63084828a1d8aee8f97d42",
          "sha256": "75fa0c0f6fd69dfb627e17e95e5d46defd6865992f0d0a0239d7b2fa0aec7ac9"
        },
        "downloads": -1,
        "filename": "census_data_aggregator-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35a0023cfd63084828a1d8aee8f97d42",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9034,
        "upload_time": "2019-07-01T17:17:31",
        "upload_time_iso_8601": "2019-07-01T17:17:31.134864Z",
        "url": "https://files.pythonhosted.org/packages/94/80/86d9f78a08202320ac00b6003207302bbda339b40f2316ed434644333577/census_data_aggregator-0.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2355a483927508291b086de126025f232a4e8586119439ed9e972685edd3602",
          "md5": "b9cd03859dcdb265e03e88f19096770c",
          "sha256": "09c0161348bf7ed1dda0b148ef04c613cfc436f090666d020df413a648ffa3a2"
        },
        "downloads": -1,
        "filename": "census-data-aggregator-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b9cd03859dcdb265e03e88f19096770c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7810,
        "upload_time": "2019-07-01T17:17:33",
        "upload_time_iso_8601": "2019-07-01T17:17:33.007553Z",
        "url": "https://files.pythonhosted.org/packages/d2/35/5a483927508291b086de126025f232a4e8586119439ed9e972685edd3602/census-data-aggregator-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33f21f89a92234baa486eb798bb01a81cc019e6ddf1331c3adecf4327757ecaf",
          "md5": "e4593fcba7253a14a76f04c2d708d210",
          "sha256": "6d08a319d618bd9460c66fc95956642b9de99c405729ebcd09f814eb5d66a0d1"
        },
        "downloads": -1,
        "filename": "census_data_aggregator-0.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4593fcba7253a14a76f04c2d708d210",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9584,
        "upload_time": "2019-07-05T16:15:16",
        "upload_time_iso_8601": "2019-07-05T16:15:16.798926Z",
        "url": "https://files.pythonhosted.org/packages/33/f2/1f89a92234baa486eb798bb01a81cc019e6ddf1331c3adecf4327757ecaf/census_data_aggregator-0.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66b9b9aacd2165604caff0544b0e861e3aa2b8ee38fe26e2398626b642e7a50a",
          "md5": "79cbe56693c1cdb0540be9327ebb851b",
          "sha256": "1c288c3182b228fd36ffde408b839d254c3686303a4919046da3903a17bf0398"
        },
        "downloads": -1,
        "filename": "census-data-aggregator-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "79cbe56693c1cdb0540be9327ebb851b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8375,
        "upload_time": "2019-07-05T16:15:18",
        "upload_time_iso_8601": "2019-07-05T16:15:18.548268Z",
        "url": "https://files.pythonhosted.org/packages/66/b9/b9aacd2165604caff0544b0e861e3aa2b8ee38fe26e2398626b642e7a50a/census-data-aggregator-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1c4d466c74633adc515a2c068d96ec4c080c6bbf168e42091678b883a617efc",
          "md5": "98df6591f81102c1bd0cb1e233667566",
          "sha256": "5726b1d548d7bd8e1532ece6ac8ad1659fc919cde5f59bd4f7efcad1a9ebfeba"
        },
        "downloads": -1,
        "filename": "census_data_aggregator-0.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98df6591f81102c1bd0cb1e233667566",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9582,
        "upload_time": "2019-07-10T00:51:51",
        "upload_time_iso_8601": "2019-07-10T00:51:51.543163Z",
        "url": "https://files.pythonhosted.org/packages/b1/c4/d466c74633adc515a2c068d96ec4c080c6bbf168e42091678b883a617efc/census_data_aggregator-0.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bf846743560f6e85a0511ab835f64cbfd6935f3da5303c0defbb43bbcc1d6bb",
          "md5": "a2c17bdeeb4b8715761d1d40c81455d6",
          "sha256": "684a47a5cfec5e4bf5b2cc7181890c7c07a921cec14d534b93df73abe87d5292"
        },
        "downloads": -1,
        "filename": "census-data-aggregator-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a2c17bdeeb4b8715761d1d40c81455d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8379,
        "upload_time": "2019-07-10T00:51:53",
        "upload_time_iso_8601": "2019-07-10T00:51:53.491187Z",
        "url": "https://files.pythonhosted.org/packages/7b/f8/46743560f6e85a0511ab835f64cbfd6935f3da5303c0defbb43bbcc1d6bb/census-data-aggregator-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ed0f4b1024dc1d2c47376141938ba4419b3a8231b1bed454d53960053d9a6ba",
          "md5": "8e7780befbb74df975a2f327dcd28eb6",
          "sha256": "cf527a1378aebe688584f5828a403778f73be5a74b2f04b9a13edc65c57db49e"
        },
        "downloads": -1,
        "filename": "census_data_aggregator-0.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e7780befbb74df975a2f327dcd28eb6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12076,
        "upload_time": "2019-08-14T16:26:01",
        "upload_time_iso_8601": "2019-08-14T16:26:01.806502Z",
        "url": "https://files.pythonhosted.org/packages/1e/d0/f4b1024dc1d2c47376141938ba4419b3a8231b1bed454d53960053d9a6ba/census_data_aggregator-0.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffe31464cee6c90230e16e6fa1ad581d3e00340e824a3e1a072dd5adaae4ffe0",
          "md5": "d170ee3f6cedb3e55b4f3ae546ac3e74",
          "sha256": "4443165f9e9fc00becb346e7af58868b4a0f80c77b3ca8eb1f468e35bf920f52"
        },
        "downloads": -1,
        "filename": "census-data-aggregator-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d170ee3f6cedb3e55b4f3ae546ac3e74",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10881,
        "upload_time": "2019-08-14T16:26:03",
        "upload_time_iso_8601": "2019-08-14T16:26:03.835426Z",
        "url": "https://files.pythonhosted.org/packages/ff/e3/1464cee6c90230e16e6fa1ad581d3e00340e824a3e1a072dd5adaae4ffe0/census-data-aggregator-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c752b308e3ebe418e01b2e623f054747bcb0f5e36f9772bfe13201a3fed1b361",
          "md5": "d3a863aa52ec0cab065306865afc6078",
          "sha256": "30a0cc8f52c943335c1ba5e7799e7bb8e85e8cecb16546637f5046c869ff231d"
        },
        "downloads": -1,
        "filename": "census_data_aggregator-0.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3a863aa52ec0cab065306865afc6078",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 8521,
        "upload_time": "2022-06-20T15:34:07",
        "upload_time_iso_8601": "2022-06-20T15:34:07.260566Z",
        "url": "https://files.pythonhosted.org/packages/c7/52/b308e3ebe418e01b2e623f054747bcb0f5e36f9772bfe13201a3fed1b361/census_data_aggregator-0.0.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d32b5bae7c3d54bd840daf87dd96695a4ef2cebef1f57b9de87becb77925f516",
          "md5": "eb2bf4fa51139da70b7ba9f760677bd4",
          "sha256": "fd43261e534e0293bbb370f2afadbaf445da3a0b749a219a4d7188a759cb4589"
        },
        "downloads": -1,
        "filename": "census-data-aggregator-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "eb2bf4fa51139da70b7ba9f760677bd4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33471,
        "upload_time": "2022-06-20T15:34:08",
        "upload_time_iso_8601": "2022-06-20T15:34:08.677380Z",
        "url": "https://files.pythonhosted.org/packages/d3/2b/5bae7c3d54bd840daf87dd96695a4ef2cebef1f57b9de87becb77925f516/census-data-aggregator-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25deecde8d8d054e9e3791ad9c5044e9311b9b39919c780cda343573d26a2267",
          "md5": "b6c595a52974b45b38c10de2aa8f0240",
          "sha256": "99b9a364e08f20bf28c4bd875465a7e9b6dd501fbd4c7b087d1bba338c2c18a1"
        },
        "downloads": -1,
        "filename": "census_data_aggregator-0.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6c595a52974b45b38c10de2aa8f0240",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11918,
        "upload_time": "2022-11-28T21:47:43",
        "upload_time_iso_8601": "2022-11-28T21:47:43.208110Z",
        "url": "https://files.pythonhosted.org/packages/25/de/ecde8d8d054e9e3791ad9c5044e9311b9b39919c780cda343573d26a2267/census_data_aggregator-0.0.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d3399b26fba3f71cf5f2af5008fbf87066f458f9e41d1c0f0045f41ede02ce1",
          "md5": "b174888f2fbd683b2de46a46cda74c60",
          "sha256": "e8a656abe7cb1c23660a948c52fc58298faaa9241e628451a626ddc01b4ac6ff"
        },
        "downloads": -1,
        "filename": "census-data-aggregator-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "b174888f2fbd683b2de46a46cda74c60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35549,
        "upload_time": "2022-11-28T21:47:44",
        "upload_time_iso_8601": "2022-11-28T21:47:44.486925Z",
        "url": "https://files.pythonhosted.org/packages/0d/33/99b26fba3f71cf5f2af5008fbf87066f458f9e41d1c0f0045f41ede02ce1/census-data-aggregator-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25deecde8d8d054e9e3791ad9c5044e9311b9b39919c780cda343573d26a2267",
        "md5": "b6c595a52974b45b38c10de2aa8f0240",
        "sha256": "99b9a364e08f20bf28c4bd875465a7e9b6dd501fbd4c7b087d1bba338c2c18a1"
      },
      "downloads": -1,
      "filename": "census_data_aggregator-0.0.8-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b6c595a52974b45b38c10de2aa8f0240",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 11918,
      "upload_time": "2022-11-28T21:47:43",
      "upload_time_iso_8601": "2022-11-28T21:47:43.208110Z",
      "url": "https://files.pythonhosted.org/packages/25/de/ecde8d8d054e9e3791ad9c5044e9311b9b39919c780cda343573d26a2267/census_data_aggregator-0.0.8-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d3399b26fba3f71cf5f2af5008fbf87066f458f9e41d1c0f0045f41ede02ce1",
        "md5": "b174888f2fbd683b2de46a46cda74c60",
        "sha256": "e8a656abe7cb1c23660a948c52fc58298faaa9241e628451a626ddc01b4ac6ff"
      },
      "downloads": -1,
      "filename": "census-data-aggregator-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "b174888f2fbd683b2de46a46cda74c60",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 35549,
      "upload_time": "2022-11-28T21:47:44",
      "upload_time_iso_8601": "2022-11-28T21:47:44.486925Z",
      "url": "https://files.pythonhosted.org/packages/0d/33/99b26fba3f71cf5f2af5008fbf87066f458f9e41d1c0f0045f41ede02ce1/census-data-aggregator-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}