{
  "info": {
    "author": "PaletteML Team",
    "author_email": "support@paletteml.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<div align=\"center\">\n\n<img src=\"./misc/media/mlsync.png\" width=\"25%\" height=\"25%\" width=\"400px\">\n\n**Sync your ML data seamlessly with productivity tools you love**\n\n______________________________________________________________________\n\n<p align=\"center\">\n  <a href=\"https://www.mlsync.dev/\">Website</a> •\n  <a href=\"#installation\">Installation</a> •\n  <a href=\"https://mlsync.readthedocs.io/en/latest/\">Docs</a> •\n  <a href=\"#example\">Examples</a> •\n  <a href=\"#contributing\">Contributing</a>\n</p>\n\n[![PyPI Status](https://badge.fury.io/py/mlsync.svg)](https://badge.fury.io/py/mlsync)\n[![PyPI Status](https://pepy.tech/badge/mlsync)](https://pepy.tech/project/mlsync)\n[![ReadTheDocs](https://readthedocs.org/projects/mlsync/badge/?version=latest)](https://mlsync.readthedocs.io/en/latest/)\n[![Slack](https://img.shields.io/badge/slack-chat-green.svg?logo=slack)](https://join.slack.com/t/mlsync/shared_invite/zt-1ap8axys5-awwIfDGR8OWP1oFRKZp6OQ)\n[![license](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/paletteml/mlsync/blob/master/LICENSE)\n\n</div>\n\n## Overview\n\n### What is MLSync?\n\nMLSync is a Python library that acts as a bridge between your ML workflow and your project planning and management tools.\n\n## Installation\n\n```sh\npip install mlsync\n```\n\n\n### Why MLSync?\n\nDeveloping ML projects is a lot of fun, but they are also hard to plan and manage.\nWhile the ML community has built several tools for developers to better track and visualize their ML workflow data,\nthere is a disconnect between ML workflow data and the tools that are used for project management.\nMLSync is designed to bridge this gap.\n\n<img src=\"./misc/media/MLSync-Notion-demo.gif\" width=\"50%\" height=\"50%\"/>\n\n### How Does it Work?\n\nThere are four main aspects of MLSync:\n\n1. MLSync interfaces with modern ML experiment tracking tools such as [MLflow](https://www.mlflow.org/) and imports the raw data.\n2. Raw data from ML experiment tracking tools are converted to MLSync internal data format (user-defined) and stored in a database.\n3. MLSync engine processes this raw data and generates consolidated insights for your project.\n4. The insights are then converted to suitable formats and sent to your project planning and management tools such as [Notion](https://notion.so/).\n\n<div align=\"center\">\n<img src=\"./misc/media/mlsync-arch.png\" width=\"75%\" height=\"75%\">\n</div>\n\nWe are actively building MLSync with the vision to become a one-stop standard interface to map data from ML experiments to project management tools.\nThe above figure shows the  high-level architecture of MLSync.\nAll the functionality is not yet available; please refer to the [Roadmap](#roadmap) for the current status.\nIf you would like to contribute to MLSync, please refer to the [Contributing](#contributing) section.\n\n## Example\n\nIn this example, we will sync your machine learning experiments to Notion in three simple steps!\n\n### 1. Install MLSync\n\n```sh\npip install mlsync\n```\n\n### 2. Setup the Example\n\n1. `git clone https://github.com/paletteml/mlsync.git`: Checkout the MLSync repository.\n2. `cd mlsync/examples/mlflow-notion/`: Change directory to the example directory\n3. `pip install -r requirements.txt` : Install the requirements for this example.\n    - Note that the above step installs Pytorch. If you run into issues, please refer to the [Pytorch](https://pytorch.org/) documentation for more information.\n4. Run example training using `python mlflow_pytorch.py --run-name <name>`. Make sure it runs (Need not complete the run).\n\n### 3. Notion Setup\n\nLet us now link Notion to MLSync. This is required only for the first time you run MLSync.\n\n1. Create a **new integration** to Notion.\n    1. Visit [notion.so/my-integrations](https://www.notion.so/my-integrations)\n    2. Click the `+ New Integration` button.\n    3. Name it as `MLSync` and hit submit.\n    4. Copy your \"Internal Integration Token\" from your Notion integration page.\n    5. Open the `.env` file in your path and update the Notion token.\n        - `NOTION_TOKEN=secret_0000000000000000000000000000000000000000000`\n2. Create a **new page** in Notion. This will serve as the root page for your MLFlow runs.\n    1. Let us name the page as `Demo`.\n    2. Click the Share button on the top right corner of the page.\n    3. Click the Invite button and then choose `MLSync` integration.\n\n### All Done\n\nYou are now all set! Now let us sync your MLFlow runs to Notion.\n\n```sh\nmlsync --config config.yaml\n```\n\n{% note %}\n\n**Note:** First time you run, you will be prompted to choose a page to sync to.\nFrom the options, choose the page you created in the previous step (`Demo`).\n\n{% endnote %}\n\nThat's it! You can now view your MLFlow runs in Notion. As long as mlsync is running in the background,\nall your future experiments and runs in this directory should appear in the selected Notion page.\n\n### Troubleshooting\n\n1. If you are getting an error related to the `NOTION_TOKEN` not being found, you can pass the `--notion-token` flag to `mlsync` to specify the token.\n2. If you are having trouble with MNIST dataflow download, you can try to download the data manually from [here](www.di.ens.fr/~lelarge/MNIST.tar.gz).\n3. Please [contact us](mailto:support@paletteml.com) for any other issues.\n\nPlease raise an issue, or reach out if you have any other errors.\n\n### Advanced\n\n1. You can override the Notion page id, token, and other configurations by either modifying the `config.yaml` file or by passing the arguments to the `mlsync` command. Run `mlsync --help` to see the available arguments.\n2. *Custom Report Formats*: `mlsync` allows you to customize the report much further. You can customize the report by adding your own `format.yaml` file. Read documentation [here](https://mlsync.readthedocs.io/en/latest/topical_guides/reports.html) to learn more.\n3. *Custom Refresh Rates*: You can control the refresh rate of the report by setting the `refresh_rate` field in the configuration file.\n4. *Restarting mlsync*: You can restart mlsync any time without losing earlier runs.\n\nEnjoy! If you have any further questions, please [contact us](mailto:support@paletteml.com).\n\n## Roadmap\n\nWe want to support different training environments and different productivity tools.\n\n1. Productivity Tools\n    1. [Notion](https://notion.so): **Supported**\n    2. [Trello](https://trello.com): Planned\n    3. [Confluence](https://www.atlassian.com/software/confluence): **In progress**\n    4. [Jira](https://www.atlassian.com/software/jira): Planned\n2. Monitoring Frameworks\n    1. [MLFlow](https://www.mlflow.org): **Supported**\n    2. [TensorBoard](https://www.tensorflow.org/get_started/summaries_and_tensorboard): **In progress**\n    3. [ClearML](https://www.clearml.com): Planned\n3. Programmatic API\n    1. Planned\n\nDo you have other tools/frameworks you would like to see supported? Let us know!\n\n## Contributing\n\nWe welcome contributions from the community. Please feel free to open an issue or pull request. Or, if you are interested in working closely with us, please [contact us](mailto:support@paletteml.com) directly. We will be happy to talk to you!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/paletteml/mlsync",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlsync",
    "package_url": "https://pypi.org/project/mlsync/",
    "platform": null,
    "project_url": "https://pypi.org/project/mlsync/",
    "project_urls": {
      "Homepage": "https://github.com/paletteml/mlsync"
    },
    "release_url": "https://pypi.org/project/mlsync/0.1.4/",
    "requires_dist": [
      "PyYAML (>=6.0)",
      "inquirer (>=2.9.2)",
      "notion-client (>=1.0.0)",
      "python-dotenv (>=0.20.0)",
      "requests (>=2.22.0)"
    ],
    "requires_python": "",
    "summary": "Sync your machine learning data to your favorite productivity tools",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14392805,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29c3695eacaffe73839cf893b838b1e22a6ba34a6b057afcbc034ee1a321de05",
          "md5": "906ec01040cb0f3ee74b94bdf30bf5ce",
          "sha256": "f50e4ef29fe6cb8e979a10e05c60686ea854965c00a50d66de3f38886ae443e9"
        },
        "downloads": -1,
        "filename": "mlsync-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "906ec01040cb0f3ee74b94bdf30bf5ce",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23586,
        "upload_time": "2022-06-07T03:48:19",
        "upload_time_iso_8601": "2022-06-07T03:48:19.875155Z",
        "url": "https://files.pythonhosted.org/packages/29/c3/695eacaffe73839cf893b838b1e22a6ba34a6b057afcbc034ee1a321de05/mlsync-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "615935ee528130bfbe76766e974a26d491f73111f7b5bec53b23b8a7d8e948cd",
          "md5": "6d10f76dd80e643d4dabb27ae6a9c863",
          "sha256": "a7ff8c60c6727b9a019ac87d099655c921ccfb62d21d5e3cbcb5bffe3ecf58e2"
        },
        "downloads": -1,
        "filename": "mlsync-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d10f76dd80e643d4dabb27ae6a9c863",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24506,
        "upload_time": "2022-06-09T05:28:38",
        "upload_time_iso_8601": "2022-06-09T05:28:38.065933Z",
        "url": "https://files.pythonhosted.org/packages/61/59/35ee528130bfbe76766e974a26d491f73111f7b5bec53b23b8a7d8e948cd/mlsync-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ec48a4446e57a81cb6e4eb2c33e77b2c49423cdd273bdb0ea5a81a689844a5f",
          "md5": "33fe39028391382f2572df53cd2f7964",
          "sha256": "8121948e97bb5accad9d63d9d2ede331427212301ea26f1d995cec898155ab65"
        },
        "downloads": -1,
        "filename": "mlsync-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33fe39028391382f2572df53cd2f7964",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 26551,
        "upload_time": "2022-06-09T17:01:23",
        "upload_time_iso_8601": "2022-06-09T17:01:23.192427Z",
        "url": "https://files.pythonhosted.org/packages/1e/c4/8a4446e57a81cb6e4eb2c33e77b2c49423cdd273bdb0ea5a81a689844a5f/mlsync-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01159e19f7f02c05cf079c04e70347b58dc91e73f85418d454100e8ad9abb217",
          "md5": "74a363e2f887ee43dd96494939d8f47a",
          "sha256": "646c32a3cced3f84d28f2b830ad9eb92aafd6c601c1f5b9af7ca0430d1b2422c"
        },
        "downloads": -1,
        "filename": "mlsync-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74a363e2f887ee43dd96494939d8f47a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 41381,
        "upload_time": "2022-06-13T13:24:57",
        "upload_time_iso_8601": "2022-06-13T13:24:57.601817Z",
        "url": "https://files.pythonhosted.org/packages/01/15/9e19f7f02c05cf079c04e70347b58dc91e73f85418d454100e8ad9abb217/mlsync-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07e9156698018df4dff5f7126a7489582db8aab2f7d2bfd757036000dda992ef",
          "md5": "5cfed2a3561cdb3742a15c56ff71cb71",
          "sha256": "3629ec53e6ba4a570e2fb1ba58489caea61355d20336cecb63aba9bc887ae464"
        },
        "downloads": -1,
        "filename": "mlsync-0.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cfed2a3561cdb3742a15c56ff71cb71",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 45249,
        "upload_time": "2022-07-10T22:11:18",
        "upload_time_iso_8601": "2022-07-10T22:11:18.057667Z",
        "url": "https://files.pythonhosted.org/packages/07/e9/156698018df4dff5f7126a7489582db8aab2f7d2bfd757036000dda992ef/mlsync-0.1.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07e9156698018df4dff5f7126a7489582db8aab2f7d2bfd757036000dda992ef",
        "md5": "5cfed2a3561cdb3742a15c56ff71cb71",
        "sha256": "3629ec53e6ba4a570e2fb1ba58489caea61355d20336cecb63aba9bc887ae464"
      },
      "downloads": -1,
      "filename": "mlsync-0.1.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5cfed2a3561cdb3742a15c56ff71cb71",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 45249,
      "upload_time": "2022-07-10T22:11:18",
      "upload_time_iso_8601": "2022-07-10T22:11:18.057667Z",
      "url": "https://files.pythonhosted.org/packages/07/e9/156698018df4dff5f7126a7489582db8aab2f7d2bfd757036000dda992ef/mlsync-0.1.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}