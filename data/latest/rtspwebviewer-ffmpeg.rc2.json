{
  "info": {
    "author": "Luis C. Garcia-Peraza Herrera",
    "author_email": "luiscarlos.gph@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Description\n-----------\n\nWeb server that displays an RTSP video stream using ffmpeg as backend.\n\nSound is not supported.\n\nUse as a Docker container\n-------------------------\n\nThis section explains how to use this repository with Docker.\n\n1. Build Docker container: \n\n   ```bash\n   $ git clone https://github.com/luiscarlosgph/rtspwebviewer-ffmpeg.git\n   $ cd rtspwebviewer-ffmpeg/docker\n   $ docker build -t rtspwebviewer-ffmpeg .\n   ```\n\n2. Launch Docker container:\n\n   ```bash\n   $ docker run --name rtspwebviewer-ffmpeg --net=host -e RTSP=<rtsp_stream_address> -e PORT=<port> -e WEB_TITLE=<web_title> -e WEB_PWD=<password> rtspwebviewer-ffmpeg:latest &\n   ```\n   \n   Options:\n      * `RTSP`: RTSP stream address.\n      * `PORT`: listening port for the web server that will play the camera video.\n      * `WEB_TITLE`: the name of the website that will be displayed by your web browser.\n      * `WEB_PWD`: the URL-based password to access the web player.\n\n3. Access the web player: `http://127.0.0.1:<port>/<password>`.\n\n   \nUse as a standalone program\n---------------------------\n\nThis sections explains how to use this repository without Docker, as a standalone Python program.\n\n1. Install dependencies:\n   ```bash\n   $ sudo apt update\n   $ sudo apt install ffmpeg\n   ```\n   \n2. Install `rtspwebviewer-ffmpeg`:\n   ```bash\n   $ git clone https://github.com/luiscarlosgph/rtspwebviewer-ffmpeg.git\n   $ cd rtspwebviewer-ffmpeg\n   $ python3 setup.py install\n   ```\n\n2. Run `ffmpeg` to convert the [RTSP](https://en.wikipedia.org/wiki/Real_Time_Streaming_Protocol) stream into  [HLS](https://en.wikipedia.org/wiki/HTTP_Live_Streaming):\n   ```bash\n   $ ffmpeg -fflags nobuffer -rtsp_transport tcp -i <rtsp_stream_address> -c copy -hls_time 2 -hls_wrap 10 <path_to_m3u8_file>\n   ```\n\n3. Run the web server:\n   ```bash\n   $ python3 -m rtspwebviewer_ffmpeg.run --address <listening_ip_address> --port <port> --title <web_title> --password <password> --m3u8 <path_to_m3u8_file>\n   ```\n\n   Options:\n      * `--address`: Listening address, use `0.0.0.0` to listen in all interfaces (required).\n      * `--port`: TCP port to listen on (required).\n      * `--title`: website title (required).\n      * `--password`: password to append to the URL of the web server to access the web player (optional).\n      * `---m3u8`: path to the `m3u8` file generated by `ffmpeg` in the previous step (required).\n\n4. Access the web viewer: `http://<address>:<port>/<password>`, e.g. for address `0.0.0.0`, port `11931`, and no password, access [http://127.0.0.1:11931](http://127.0.0.1:11931).\n\n\nAuthor\n------\n\nLuis C. Garcia-Peraza Herrera (luiscarlos.gph@gmail.com).\n\n\nLicense\n-------\n\nThis repository is shared under an [MIT License](https://github.com/luiscarlosgph/rtspwebviewer-ffmpeg/blob/main/LICENSE).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/luiscarlosgph/rtspwebviewer",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rtspwebviewer-ffmpeg",
    "package_url": "https://pypi.org/project/rtspwebviewer-ffmpeg/",
    "platform": null,
    "project_url": "https://pypi.org/project/rtspwebviewer-ffmpeg/",
    "project_urls": {
      "Homepage": "https://github.com/luiscarlosgph/rtspwebviewer"
    },
    "release_url": "https://pypi.org/project/rtspwebviewer-ffmpeg/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Web viewer for RTSP streams that relies on ffmpeg.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15751989,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1d07add9ef4be51b23a487bb5c40fb259d5121704a1a0f6f6bfab2c1c7f35a9",
          "md5": "e3a24809e85cd7946e49bcb28a0aaffd",
          "sha256": "3cee581a83aaae9ffcc311db4ae7151d38dc40edf2c98ddc570f0a59d77f8342"
        },
        "downloads": -1,
        "filename": "rtspwebviewer_ffmpeg-0.0.1-py3.9.egg",
        "has_sig": false,
        "md5_digest": "e3a24809e85cd7946e49bcb28a0aaffd",
        "packagetype": "bdist_egg",
        "python_version": "3.9",
        "requires_python": null,
        "size": 6101,
        "upload_time": "2022-11-13T15:48:51",
        "upload_time_iso_8601": "2022-11-13T15:48:51.078343Z",
        "url": "https://files.pythonhosted.org/packages/e1/d0/7add9ef4be51b23a487bb5c40fb259d5121704a1a0f6f6bfab2c1c7f35a9/rtspwebviewer_ffmpeg-0.0.1-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9993ff0b8d04a662e2db187bfcf9d103df471880c34f3dc52b589d5c195630c6",
          "md5": "2e6f14b7c43bdcb23db027df8d98c84a",
          "sha256": "a4a0a6223c7a8f30dfe38fdcc6d665bb86766faf2bc4694a6d17f07839b8256c"
        },
        "downloads": -1,
        "filename": "rtspwebviewer_ffmpeg-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2e6f14b7c43bdcb23db027df8d98c84a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5070,
        "upload_time": "2022-11-13T15:48:54",
        "upload_time_iso_8601": "2022-11-13T15:48:54.111718Z",
        "url": "https://files.pythonhosted.org/packages/99/93/ff0b8d04a662e2db187bfcf9d103df471880c34f3dc52b589d5c195630c6/rtspwebviewer_ffmpeg-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fac66f81d4bbccd3ad67e26b89ce7d1b3336d6d78ce0fbcb6156579f96ed3f03",
          "md5": "8a3518a6be64be480048d68b6628db69",
          "sha256": "3389ff621acd0dfd300c46516cc2c7a6544112490ff73a0729b291e80ff508c7"
        },
        "downloads": -1,
        "filename": "rtspwebviewer_ffmpeg-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8a3518a6be64be480048d68b6628db69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5058,
        "upload_time": "2022-11-13T16:17:14",
        "upload_time_iso_8601": "2022-11-13T16:17:14.438890Z",
        "url": "https://files.pythonhosted.org/packages/fa/c6/6f81d4bbccd3ad67e26b89ce7d1b3336d6d78ce0fbcb6156579f96ed3f03/rtspwebviewer_ffmpeg-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fac66f81d4bbccd3ad67e26b89ce7d1b3336d6d78ce0fbcb6156579f96ed3f03",
        "md5": "8a3518a6be64be480048d68b6628db69",
        "sha256": "3389ff621acd0dfd300c46516cc2c7a6544112490ff73a0729b291e80ff508c7"
      },
      "downloads": -1,
      "filename": "rtspwebviewer_ffmpeg-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8a3518a6be64be480048d68b6628db69",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5058,
      "upload_time": "2022-11-13T16:17:14",
      "upload_time_iso_8601": "2022-11-13T16:17:14.438890Z",
      "url": "https://files.pythonhosted.org/packages/fa/c6/6f81d4bbccd3ad67e26b89ce7d1b3336d6d78ce0fbcb6156579f96ed3f03/rtspwebviewer_ffmpeg-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}