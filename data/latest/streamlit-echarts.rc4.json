{
  "info": {
    "author": "Fanilo ANDRIANASOLO",
    "author_email": "andfanilo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Streamlit - ECharts\n\n[![Streamlit App](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://share.streamlit.io/andfanilo/streamlit-echarts-demo/master/app.py)\n\nA Streamlit component to display [ECharts](https://echarts.apache.org/en/index.html).\n\n![](./img/demo.gif)\n\n## Install\n\n```shell script\npip install streamlit-echarts\n```\n\n## Usage\n\nThis library provides 2 functions to display echarts :\n\n- `st_echarts` to display charts from ECharts json options as Python dicts\n- `st_pyecharts` to display charts from Pyecharts instances\n\nCheck out the [demo](https://share.streamlit.io/andfanilo/streamlit-echarts-demo/master/app.py) and [source code](https://github.com/andfanilo/streamlit-echarts-demo) for more examples.\n\n**st_echarts example**\n\n```python\nfrom streamlit_echarts import st_echarts\n\noptions = {\n    \"xAxis\": {\n        \"type\": \"category\",\n        \"data\": [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n    },\n    \"yAxis\": {\"type\": \"value\"},\n    \"series\": [\n        {\"data\": [820, 932, 901, 934, 1290, 1330, 1320], \"type\": \"line\"}\n    ],\n}\nst_echarts(options=options)\n```\n\n**st_pyecharts example**\n\n```python\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Bar\nfrom streamlit_echarts import st_pyecharts\n\nb = (\n    Bar()\n    .add_xaxis([\"Microsoft\", \"Amazon\", \"IBM\", \"Oracle\", \"Google\", \"Alibaba\"])\n    .add_yaxis(\n        \"2017-2018 Revenue in (billion $)\", [21.2, 20.4, 10.3, 6.08, 4, 2.2]\n    )\n    .set_global_opts(\n        title_opts=opts.TitleOpts(\n            title=\"Top cloud providers 2018\", subtitle=\"2017-2018 Revenue\"\n        ),\n        toolbox_opts=opts.ToolboxOpts(),\n    )\n)\nst_pyecharts(b)\n```\n\n## API\n\n### st_echarts API\n\n```\nst_echarts(\n    options: Dict\n    theme: Union[str, Dict]\n    events: Dict[str, str]\n    height: str\n    width: str\n    renderer: str\n    map: Map\n    key: str\n)\n```\n\n- **options** : Python dictionary that resembles the JSON counterpart of\n  [echarts options](https://echarts.apache.org/en/tutorial.html#ECharts%20Basic%20Concepts%20Overview).\n  For example the basic line chart in JS :\n\n```javascript\n// JS code\noption = {\n  xAxis: {\n    type: \"category\",\n    data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n  },\n  yAxis: { type: \"value\" },\n  series: [{ data: [820, 932, 901, 934, 1290, 1330, 1320], type: \"line\" }],\n};\n```\n\nis represented in Python :\n\n```python\n# Python code\noption = {\n    \"xAxis\": {\n        \"type\": \"category\",\n        \"data\": [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n    },\n    \"yAxis\": { \"type\": \"value\" },\n    \"series\": [\n        {\"data\": [820, 932, 901, 934, 1290, 1330, 1320], \"type\": \"line\" }\n    ],\n}\n```\n\n- **theme** : [echarts theme](https://echarts.apache.org/en/tutorial.html#Overview%20of%20Style%20Customization).\n  You can specify built-int themes or pass over style configuration as a Python dict.\n- **events** : Python dictionary which maps an [event](https://echarts.apache.org/en/tutorial.html#Events%20and%20Actions%20in%20ECharts) to a Js function as string.\n  For example :\n\n```python\n{\n    \"click\": \"function(params) { console.log(params.name) }\"\n}\n```\n\nwill get mapped to :\n\n```javascript\nmyChart.on(\"click\", function (params) {\n  console.log(params.name);\n});\n```\n\nReturn values from events are sent back to Python, for example:\n\n```python\noption = {\n    \"xAxis\": {\n        \"type\": \"category\",\n        \"data\": [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n    },\n    \"yAxis\": { \"type\": \"value\" },\n    \"series\": [\n        {\"data\": [820, 932, 901, 934, 1290, 1330, 1320], \"type\": \"line\" }\n    ],\n}\nevents = {\n    \"click\": \"function(params) { console.log(params.name); return params.name }\",\n    \"dblclick\":\"function(params) { return [params.type, params.name, params.value] }\"\n}\nvalue = st_echarts(option, events=events)\nst.write(value)  # shows name on bar click and type+name+value on bar double click\n```\n\nThe JS code needs to be a one-liner. You can use Javascript minifiers like https://javascript-minifier.com/ or https://www.minifier.org/ to transform your Javascript code to a one-liner.\n\n- **height** / **width** : size of the div wrapper\n- **map** : register a map using the dedicated `Map` class\n\n```python\nfrom streamlit_echarts import Map\nwith open(\"USA.json\", \"r\") as f:\n    map = Map(\n        \"USA\",\n        json.loads(f.read()),\n        {\n            \"Alaska\": {\"left\": -131, \"top\": 25, \"width\": 15},\n            \"Hawaii\": {\"left\": -110, \"top\": 28, \"width\": 5},\n            \"Puerto Rico\": {\"left\": -76, \"top\": 26, \"width\": 2},\n        },\n    )\noptions = {...}\nst_echarts(options, map=map)\n```\n\nYou'll find a lot of GeoJSON data inside the [source code of echarts-countries-js](https://github.com/echarts-maps/echarts-countries-js/tree/master/echarts-countries-js).\n\n- **renderer** : SVG or canvas\n- **key** : assign a fixed identity if you want to change its arguments over time and not have it be re-created.\n\n### st_pyecharts API\n\n```python\ndef st_pyecharts(\n    chart: Base\n    theme: Union[str, Dict]\n    events: Dict[str, str]\n    height: str\n    width: str\n    renderer: str\n    map: Map\n    key: str\n)\n```\n\n- **chart** : Pyecharts instance\n\nThe docs for the remaining inputs are the same as its `st_echarts` counterpart.\n\n## Development\n\n### Install\n\n- JS side\n\n```shell script\ncd frontend\nnpm install\n```\n\n- Python side\n\n```shell script\nconda create -n streamlit-echarts python=3.7\nconda activate streamlit-echarts\npip install -e .\n```\n\n### Run\n\nBoth webpack dev server and Streamlit need to run for development mode.\n\n- JS side\n\n```shell script\ncd frontend\nnpm run start\n```\n\n- Python side\n\nDemo example is on https://github.com/andfanilo/streamlit-echarts-demo.\n\n```shell script\ngit clone https://github.com/andfanilo/streamlit-echarts-demo\ncd streamlit-echarts-demo/\nstreamlit run app.py\n```\n\n## Caveats\n\n### Theme definition\n\n- Defining the theme in Pyecharts when instantiating chart like `Bar(init_opts=opts.InitOpts(theme=ThemeType.LIGHT))`\n  does not work, you need to call theme in `st_pyecharts(c, theme=ThemeType.LIGHT)`.\n\n### On Javascript functions\n\nThis library also provides the `JsCode` util class directly from `pyecharts`.\n\nThis class is used to indicate javascript code by wrapping it with a specific placeholder.\nOn the custom component side, we parse every value in options looking for this specific placeholder\nto determine whether a value is a JS function.\n\nAs such, if you want to pass JS functions as strings in your options,\nyou should use the corresponding `JsCode` module to wrap code with this placeholder :\n\n- In Python dicts representing the JSON option counterpart,\n  wrap any JS string function with `streamlit_echarts.JsCode` by calling `JsCode(function).jscode`.\n  It's a smaller version of `pyecharts.commons.utils.JsCode` so you don't need to install `pyecharts` to use it.\n\n```\nseries: [\n    {\n        type: 'scatter', // this is scatter chart\n        itemStyle: {\n            opacity: 0.8\n        },\n        symbolSize: JsCode(\"function (val) { return val[2] * 40;}\").js_code,\n        data: [[\"14.616\",\"7.241\",\"0.896\"],[\"3.958\",\"5.701\",\"0.955\"],[\"2.768\",\"8.971\",\"0.669\"],[\"9.051\",\"9.710\",\"0.171\"],[\"14.046\",\"4.182\",\"0.536\"],[\"12.295\",\"1.429\",\"0.962\"],[\"4.417\",\"8.167\",\"0.113\"],[\"0.492\",\"4.771\",\"0.785\"],[\"7.632\",\"2.605\",\"0.645\"],[\"14.242\",\"5.042\",\"0.368\"]]\n    }\n]\n```\n\n- In Pyecharts, use `pyecharts.commons.utils.JsCode` directly, JsCode automatically calls `.jscode` when dumping options.\n\n```\n.set_series_opts(\n        label_opts=opts.LabelOpts(\n            position=\"right\",\n            formatter=JsCode(\n                \"function(x){return Number(x.data.percent * 100).toFixed() + '%';}\"\n            ),\n        )\n    )\n```\n\n**Note**: you need the JS string to be on one-line. You can use Javascript minifiers like https://javascript-minifier.com/ or https://www.minifier.org/ to transform your Javascript code to a one-liner.\n\n### st_pyecharts VS using pyecharts with components.html\n\nWhile this package provides a `st_pyecharts` method, if you're using `pyecharts` you can directly embed your pyecharts visualization inside `st.html`\nby passing the output of the chart's `.render_embed()`.\n\n```python\nfrom pyecharts.charts import Bar\nfrom pyecharts import options as opts\nimport streamlit.components.v1 as components\n\nc = (Bar()\n    .add_xaxis([\"Microsoft\", \"Amazon\", \"IBM\", \"Oracle\", \"Google\", \"Alibaba\"])\n    .add_yaxis('2017-2018 Revenue in (billion $)', [21.2, 20.4, 10.3, 6.08, 4, 2.2])\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"Top cloud providers 2018\", subtitle=\"2017-2018 Revenue\"),\n                     toolbox_opts=opts.ToolboxOpts())\n    .render_embed() # generate a local HTML file\n)\ncomponents.html(c, width=1000, height=1000)\n```\n\nUsing `st_pyecharts` is still something you would want if you need to change data regularly\nwithout remounting the component, check for examples `examples/app_pyecharts.py` for `Chart with randomization` example.\n\n![](./img/randomize.gif)\n\n## Credits\n\n- It's really a wrapper around [echarts-for-react](https://github.com/hustcc/echarts-for-react).\n\n# Support me\n\n<a href=\"https://www.buymeacoffee.com/andfanilo\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/default-orange.png\" alt=\"Buy Me A Coffee\" height=\"41\" width=\"174\"></a>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/andfanilo/streamlit-echarts",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "streamlit-echarts",
    "package_url": "https://pypi.org/project/streamlit-echarts/",
    "platform": "",
    "project_url": "https://pypi.org/project/streamlit-echarts/",
    "project_urls": {
      "Homepage": "https://github.com/andfanilo/streamlit-echarts"
    },
    "release_url": "https://pypi.org/project/streamlit-echarts/0.4.0/",
    "requires_dist": [
      "streamlit (>=0.63)",
      "simplejson (>=3.0)",
      "pyecharts (>=1.9)"
    ],
    "requires_python": ">=3.6",
    "summary": "Echarts custom component for Streamlit",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12281109,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08bd702b1d9532227886dee7c7432ea7b86d8211d64aa1ee2dfff9b11b98f60a",
          "md5": "8f2a0fb2b5789ab861c193bd0984817f",
          "sha256": "d90ae88103997b9eb8bc2adfe5d8d7da9fdf54ab05dc69e3cd8f7f6b2793f959"
        },
        "downloads": -1,
        "filename": "streamlit_echarts-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f2a0fb2b5789ab861c193bd0984817f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3046857,
        "upload_time": "2020-07-06T17:42:58",
        "upload_time_iso_8601": "2020-07-06T17:42:58.298949Z",
        "url": "https://files.pythonhosted.org/packages/08/bd/702b1d9532227886dee7c7432ea7b86d8211d64aa1ee2dfff9b11b98f60a/streamlit_echarts-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83b8c294a28c617a6bddc9b13984e19c386559fa0badc326eb938bf4cf3fd046",
          "md5": "d44a091c79ed14401bde21b045222847",
          "sha256": "8fa9e56bb0ca6d174989fe1fc3cc8572465fb5ea508725cc52f9e7a0e77230f2"
        },
        "downloads": -1,
        "filename": "streamlit-echarts-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d44a091c79ed14401bde21b045222847",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3018770,
        "upload_time": "2020-07-06T17:43:22",
        "upload_time_iso_8601": "2020-07-06T17:43:22.403888Z",
        "url": "https://files.pythonhosted.org/packages/83/b8/c294a28c617a6bddc9b13984e19c386559fa0badc326eb938bf4cf3fd046/streamlit-echarts-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a846648250e0b6128f47dd64d0fff9a26743962603e2218f62128a191f3419b4",
          "md5": "2a0fd1ef37a1768ba1de47e46868e040",
          "sha256": "a4c91ed2390b7584eefd088dd25ac30bb4ace79021679942f1a80d9cf94fc5f0"
        },
        "downloads": -1,
        "filename": "streamlit_echarts-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a0fd1ef37a1768ba1de47e46868e040",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3286198,
        "upload_time": "2021-01-12T12:56:29",
        "upload_time_iso_8601": "2021-01-12T12:56:29.839633Z",
        "url": "https://files.pythonhosted.org/packages/a8/46/648250e0b6128f47dd64d0fff9a26743962603e2218f62128a191f3419b4/streamlit_echarts-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "590fe28ef799e9e03f5986af82a2e331b149e47bed4696de0c9ffe2a28053750",
          "md5": "772be5ff2d778e2b7e596416eae71e45",
          "sha256": "7b3ab17ea7f99472ac90ccb59be53ff53902b0f97155f00abc771423c4e16f15"
        },
        "downloads": -1,
        "filename": "streamlit-echarts-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "772be5ff2d778e2b7e596416eae71e45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5186134,
        "upload_time": "2021-01-12T12:57:10",
        "upload_time_iso_8601": "2021-01-12T12:57:10.141306Z",
        "url": "https://files.pythonhosted.org/packages/59/0f/e28ef799e9e03f5986af82a2e331b149e47bed4696de0c9ffe2a28053750/streamlit-echarts-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf16ef6b62c7bc0662520334dc48b8205bd73392d3a2fed407e84d10931a2d85",
          "md5": "7d43c151baf4afb2a92b93b6f2a804da",
          "sha256": "4b1ba1e76d92c65aac5250b4eb482de4fc1f34bbed89667ca35424e2f339ad50"
        },
        "downloads": -1,
        "filename": "streamlit_echarts-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d43c151baf4afb2a92b93b6f2a804da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3271394,
        "upload_time": "2021-04-16T21:28:18",
        "upload_time_iso_8601": "2021-04-16T21:28:18.531340Z",
        "url": "https://files.pythonhosted.org/packages/cf/16/ef6b62c7bc0662520334dc48b8205bd73392d3a2fed407e84d10931a2d85/streamlit_echarts-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c9cc76f438e54ad0e16eed35eb0d41482356542bb4bb16cc9829e61a73d8643",
          "md5": "663baeb4397c4cab75a58e60d293e321",
          "sha256": "3691871189987b2505f550b367ea385dc0b751d637d1f8a4e15204cf70aa6f29"
        },
        "downloads": -1,
        "filename": "streamlit-echarts-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "663baeb4397c4cab75a58e60d293e321",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5165301,
        "upload_time": "2021-04-16T21:28:25",
        "upload_time_iso_8601": "2021-04-16T21:28:25.348779Z",
        "url": "https://files.pythonhosted.org/packages/6c/9c/c76f438e54ad0e16eed35eb0d41482356542bb4bb16cc9829e61a73d8643/streamlit-echarts-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bda8c2bff6ff03820aa722fb2f33b785f22707c85b40920fc7dbf2b1c6efffd2",
          "md5": "20bd168e6bb509e75aa8641fc29b64d7",
          "sha256": "aa86679da0e7680ee43b7a6def31439273a686a8d71de522c55655047e80ec9b"
        },
        "downloads": -1,
        "filename": "streamlit_echarts-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "20bd168e6bb509e75aa8641fc29b64d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3076086,
        "upload_time": "2021-12-12T13:18:56",
        "upload_time_iso_8601": "2021-12-12T13:18:56.505640Z",
        "url": "https://files.pythonhosted.org/packages/bd/a8/c2bff6ff03820aa722fb2f33b785f22707c85b40920fc7dbf2b1c6efffd2/streamlit_echarts-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c104f3fe3e05e4549d1462e6f93de531b97d4a4a72b447a7e162dbcc4e9b225e",
          "md5": "69c85e13e903c5b810a3b0355b8e0fed",
          "sha256": "33cc5329b99ddce8b64ce6c4607733e02db575c379af6394a8c78ae5df14934d"
        },
        "downloads": -1,
        "filename": "streamlit-echarts-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "69c85e13e903c5b810a3b0355b8e0fed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3050749,
        "upload_time": "2021-12-12T13:19:00",
        "upload_time_iso_8601": "2021-12-12T13:19:00.371960Z",
        "url": "https://files.pythonhosted.org/packages/c1/04/f3fe3e05e4549d1462e6f93de531b97d4a4a72b447a7e162dbcc4e9b225e/streamlit-echarts-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bda8c2bff6ff03820aa722fb2f33b785f22707c85b40920fc7dbf2b1c6efffd2",
        "md5": "20bd168e6bb509e75aa8641fc29b64d7",
        "sha256": "aa86679da0e7680ee43b7a6def31439273a686a8d71de522c55655047e80ec9b"
      },
      "downloads": -1,
      "filename": "streamlit_echarts-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "20bd168e6bb509e75aa8641fc29b64d7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3076086,
      "upload_time": "2021-12-12T13:18:56",
      "upload_time_iso_8601": "2021-12-12T13:18:56.505640Z",
      "url": "https://files.pythonhosted.org/packages/bd/a8/c2bff6ff03820aa722fb2f33b785f22707c85b40920fc7dbf2b1c6efffd2/streamlit_echarts-0.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c104f3fe3e05e4549d1462e6f93de531b97d4a4a72b447a7e162dbcc4e9b225e",
        "md5": "69c85e13e903c5b810a3b0355b8e0fed",
        "sha256": "33cc5329b99ddce8b64ce6c4607733e02db575c379af6394a8c78ae5df14934d"
      },
      "downloads": -1,
      "filename": "streamlit-echarts-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "69c85e13e903c5b810a3b0355b8e0fed",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3050749,
      "upload_time": "2021-12-12T13:19:00",
      "upload_time_iso_8601": "2021-12-12T13:19:00.371960Z",
      "url": "https://files.pythonhosted.org/packages/c1/04/f3fe3e05e4549d1462e6f93de531b97d4a4a72b447a7e162dbcc4e9b225e/streamlit-echarts-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}