{
  "info": {
    "author": "profesor Hrbolek",
    "author_email": "profesor@hrbolek.cz",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# func2pipe\npython utils for generator function creation\n\n### Example 01\n```python\nimport func2pipe as fp\n\n@fp.pipeit\ndef addone(item):\n    return item + 1\n\n@fp.pipeit\ndef add(a, b):\n    return a + b\n\nresultcreator = fp.createpipe([\n    addone(),\n    add(b = 4),\n    ], closewitharray = True)\n\n\nsourceA = iter(range(1, 20))\nsourceB = [45, 20, 6]\nprint('first set')\nresult = resultcreator(sourceA)\nprint(result)\nprint('second set')\nresult = resultcreator(sourceB)\nprint(result)\n```\n\n### Example 02\n```python\nimport func2pipe as fp\n\n@fp.pipeit\ndef addone(item):\n    return item + 1\n\n@fp.pipeit\ndef add(a, b):\n    return a + b\n\n@fp.pipesub(lambda input, output: {'i': input, 'o': output})\n@fp.pipeit\ndef transform(item):\n    if (item > 12):\n        return True\n    else:\n        return False\n\n@fp.pipesub(lambda input, output: {'i': input, **output})\n@fp.pipeit\ndef transform2(item, fixed):\n    if (item > 12):\n        return {'r': True, 'f': fixed }\n    else:\n        return {'r': False, 'f': fixed }\n\nresultcreator = fp.createpipe([\n    addone(),\n    add(b = 4),\n    transform2(fixed = 'fixed')\n    ], closewitharray = True)\n\nsourceA = iter(range(1, 20))\nsourceB = [45, 20, 6]\nprint('first set')\nresult = resultcreator(sourceA)\nprint(result)\nprint('second set')\nresult = resultcreator(sourceB)\nprint(result)\n```\n\n### Example 03\n```python\nimport func2pipe as fp\n\n@fp.hasyield\n@fp.pipeit\ndef letters(item, spec):\n    for letter in item:\n        yield letter + spec\n\nresultcreator = fp.createpipe([\n    letters(spec = '-')\n    ], closewitharray = True)\n\n\nsourceA = ['ABCDEF', 'GHIJKL']\nsourceB = ['MNOPQR', 'STUVWX']\n\nprint('first set')\nresult = resultcreator(sourceA)\nprint(result)\nprint('second set')\nresult = resultcreator(sourceB)\nprint(result)\n```\n\n### Example 04\n```python\nimport func2pipe as fp\n\n@fp.pipesub(lambda input, output: {'source': input, 'letter': output })\n@fp.hasyield\n@fp.pipeit\ndef letters(item):\n    for letter in item:\n        yield letter\n\nresultcreator = fp.createpipe([\n    letters()\n    ], closewitharray = True)\n\n\nsourceA = ['ABCDEF', 'GHIJKL']\nsourceB = ['MNOPQR', 'STUVWX']\n\nprint('first set')\nresult = resultcreator(sourceA)\nprint(result)\nprint('second set')\nresult = resultcreator(sourceB)\nprint(result)\n```\n\n### Example 05\n```python\nimport func2pipe as fp\n\n@fp.pipesub(lambda input, output: {'source': input, 'letter': output })\n@fp.pipefind(r\"[A-Z]\", mapper = lambda item: item.group(0))\n@fp.pipeit\ndef letters(item, append):\n    return item + append\n\nresultcreator = fp.createpipe([\n    letters(append = 'x')\n    ], closewitharray = True)\n\n\nsourceA = ['ABCDEF', 'GHIJKL']\nsourceB = ['MNOPQR', 'STUVWX']\n\nprint('first set')\nresult = resultcreator(sourceA)\nprint(result)\nprint('second set')\nresult = resultcreator(sourceB)\nprint(result)\n```\n\n### Example 06\n```python\nimport func2pipe as fp\n\n@fp.pipesub(lambda input, output: {'source': input, 'letters': output })\n@fp.pipecollecttoarray\n@fp.pipefind(r\"[A-Z]\", mapper = lambda item: item.group(0))\n@fp.pipeit\ndef letters(item, b):\n    return item + b\n\nresultcreator = fp.createpipe([\n    letters(b = 'x')\n    ], closewitharray = True)\n\n\nsourceA = ['ABCDEF', 'GHIJKL']\nsourceB = ['MNOPQR', 'STUVWX']\n\nprint('first set')\nresult = resultcreator(sourceA)\nprint(result)\nprint('second set')\nresult = resultcreator(sourceB)\nprint(result)\n```\n\n### Example GR\n```python\nimport func2pipe as fp\n\n@fp.pipeit\ndef record_A(item):\n    return {**item, 'label': 'A'}\n\n@fp.pipeit\ndef record_B(item):\n    return {**item, 'label': 'B'}\n\n@fp.pipeit\ndef record_C(item):\n    return {**item, 'label': 'C'}\n\n@fp.hasyield\n@fp.pipeit\ndef relation_A_B(item):\n    id = item['id']\n    relace = [\n        {'s': '1', 'd': '2'},\n        {'s': '1', 'd': '3'},\n        {'s': '2', 'd': '3'},\n        ]\n    for r in relace:\n        if r['s'] == id:\n            yield {'id': r['d']}\n\n@fp.hasyield\n@fp.pipeit\ndef relation_B_C(item):\n    id = item['id']\n    relace = [\n        {'s': '1', 'd': '2'},\n        {'s': '1', 'd': '3'},\n        {'s': '2', 'd': '3'},\n        ]\n    for r in relace:\n        if r['s'] == id:\n            yield {'id': r['d']}\n\ngraph = {\n    'nodes': {\n        'A': record_A(),\n        'B': record_B(),\n        'C': record_C()\n        },\n    'edges': [\n        {'from': 'A', 'to': 'B', 'relation': relation_A_B()},\n        {'from': 'B', 'to': 'C', 'relation': relation_B_C()},\n        ]\n    }\n\n\ndef builder(graph, currentnode, filterq = lambda item: True):\n    descriptorpipe = graph['nodes'][currentnode]\n\n    def x(relation):\n        relationpipe = relation['relation']\n        filterq = lambda item: True;\n        if ('filter' in relation):\n            filterq = relation['filter']\n\n        sub = builder(graph, relation['to'], filterq)\n        return fp.createpipe([relationpipe, sub])\n\n    relations = filter(lambda item: item['from'] == currentnode, graph['edges'])\n    relationsresult = {}\n    for relation in relations:\n        itemname = relation['to']\n        if ('itemname' in relation):\n            itemname = relation['itemname']\n        relationsresult[itemname] = fp.createpipe([x(relation)], closewitharray = True)\n\n    @fp.pipeit\n    def userelations(item):\n        result = { **item }\n        for key in relationsresult.keys():\n            result[key] = relationsresult[key]([item])\n        return result\n\n    return fp.createpipe([descriptorpipe, userelations()], closewitharray = True)\n\nbba = builder(graph, 'A')\nresult = bba([{'id': '1'}])\nprint(result)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "func2pipe",
    "package_url": "https://pypi.org/project/func2pipe/",
    "platform": "",
    "project_url": "https://pypi.org/project/func2pipe/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/func2pipe/0.3.6/",
    "requires_dist": [
      "setuptools"
    ],
    "requires_python": ">=3.5, <4",
    "summary": "Converts functions into generators",
    "version": "0.3.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7499923,
  "releases": {
    "0.3.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61c60f5fc50a2447a362e1b55cc1201e7f13fc721f8a9580c8ce4705c26c7737",
          "md5": "df3fa43ebf2b1075a83aed1a0a7f7d50",
          "sha256": "e58863b01e89517a6c6eb6c1423b90aa9233a4ca24c626bdfdbfbc6f1913fe80"
        },
        "downloads": -1,
        "filename": "func2pipe-0.3.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df3fa43ebf2b1075a83aed1a0a7f7d50",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <4",
        "size": 4897,
        "upload_time": "2020-06-17T19:31:28",
        "upload_time_iso_8601": "2020-06-17T19:31:28.170821Z",
        "url": "https://files.pythonhosted.org/packages/61/c6/0f5fc50a2447a362e1b55cc1201e7f13fc721f8a9580c8ce4705c26c7737/func2pipe-0.3.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a7f8c80f8034f5b481f174ad6a829de94626bf5672a7f417b161f4090937650",
          "md5": "72e83a8ec2032e862c24e30100025d78",
          "sha256": "b2d184eefea1bbdaafc2ba0d44398c9d0d2722df205154206ee2411291bc1623"
        },
        "downloads": -1,
        "filename": "func2pipe-0.3.6.tar.gz",
        "has_sig": false,
        "md5_digest": "72e83a8ec2032e862c24e30100025d78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 3383,
        "upload_time": "2020-06-17T19:31:29",
        "upload_time_iso_8601": "2020-06-17T19:31:29.702784Z",
        "url": "https://files.pythonhosted.org/packages/4a/7f/8c80f8034f5b481f174ad6a829de94626bf5672a7f417b161f4090937650/func2pipe-0.3.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61c60f5fc50a2447a362e1b55cc1201e7f13fc721f8a9580c8ce4705c26c7737",
        "md5": "df3fa43ebf2b1075a83aed1a0a7f7d50",
        "sha256": "e58863b01e89517a6c6eb6c1423b90aa9233a4ca24c626bdfdbfbc6f1913fe80"
      },
      "downloads": -1,
      "filename": "func2pipe-0.3.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "df3fa43ebf2b1075a83aed1a0a7f7d50",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5, <4",
      "size": 4897,
      "upload_time": "2020-06-17T19:31:28",
      "upload_time_iso_8601": "2020-06-17T19:31:28.170821Z",
      "url": "https://files.pythonhosted.org/packages/61/c6/0f5fc50a2447a362e1b55cc1201e7f13fc721f8a9580c8ce4705c26c7737/func2pipe-0.3.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a7f8c80f8034f5b481f174ad6a829de94626bf5672a7f417b161f4090937650",
        "md5": "72e83a8ec2032e862c24e30100025d78",
        "sha256": "b2d184eefea1bbdaafc2ba0d44398c9d0d2722df205154206ee2411291bc1623"
      },
      "downloads": -1,
      "filename": "func2pipe-0.3.6.tar.gz",
      "has_sig": false,
      "md5_digest": "72e83a8ec2032e862c24e30100025d78",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5, <4",
      "size": 3383,
      "upload_time": "2020-06-17T19:31:29",
      "upload_time_iso_8601": "2020-06-17T19:31:29.702784Z",
      "url": "https://files.pythonhosted.org/packages/4a/7f/8c80f8034f5b481f174ad6a829de94626bf5672a7f417b161f4090937650/func2pipe-0.3.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}