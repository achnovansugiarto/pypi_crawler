{
  "info": {
    "author": "Noemi Emanuela Cazzaniga",
    "author_email": "noemi.cazzaniga@polimi.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Office/Business",
      "Topic :: Office/Business :: Financial",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Utilities"
    ],
    "description": "# Eurostat Python Package\r\n\r\nTools to read data from Eurostat API.\r\n\r\n\r\n# Features\r\n\r\n* Read Eurostat data and metadata as list of tuples or as pandas dataframe.\r\n* Use the new SDMX 2.1 Eurostat web services.\r\n* Download data from Eurostat, COMEXT, DG COMP, DG ENV, DG GROW.\r\n* Available from both pip and [conda][condapack]. \r\n* MIT license.\r\n\r\n\r\n# Important!\r\n\r\nFrom version 1.0.0, this package implements MAJOR CHANGES.\r\n\r\nThe previous official Eurostat API, used by the older releases of this Python package, is supposed to be decommissioned in January 2023.\r\nIt has been replaced with a new dissemination API.\r\nThis forced to rewrite this Python package, almost completely.\r\n\r\nI have done my best to make the new Eurostat Python package compatible with the old releases.\r\nNevertheless, you may see some differences, also in the output format.\r\n\r\nThe main differences are in the SDMX functions.\r\nIn particular, OBS_STATUS is no more provided by the API.\r\nIt is replaced by a flag, that has different symbols and meanings.\r\nFrom version 1.0.0, the SDMX functions of the Eurostat Python package are deprecated, but temporarily kept available.\r\nThese functions will be removed from version 2.0.0 of the Eurostat Python package.\r\nThey always print an alert message, that can be \"muted\" by setting the argument *noalert=True*.\r\n\r\n\r\n# Documentation\r\n\r\n\r\n## Getting started:\r\n\r\nRequires Python 3.5+\r\n\r\n```bash\r\npip install eurostat\r\n```\r\n\r\n\r\n## Read the table of contents of the Eurostat database:\r\n\r\n### As a list of tuples:\r\n\r\n```python\r\neurostat.get_toc()\r\n```\r\n\r\nRead the table of contents and return a list of tuples. The first element of the list contains the header line. Dates are represented as strings.\r\n\r\n#### Example:\r\n\r\n```python\r\n>>> import eurostat\r\n>>> toc = eurostat.get_toc()\r\n>>> toc[0]\r\n('title', 'code', 'type', 'last update of data', 'last table structure change', 'data start', 'data end')\r\n>>> toc[12:15]\r\n[('Employment by NACE Rev. 2 activity and metropolitan typology', 'MET_10R_3EMP', 'dataset', '2022-05-06T23:00:00+0200', '2022-05-06T23:00:00+0200', '1995', '2020'),\r\n ('Gross domestic product (GDP) at current market prices by metropolitan regions', 'MET_10R_3GDP', 'dataset', '2022-04-21T23:00:00+0200', '2022-04-21T23:00:00+0200', '2000', '2020'),\r\n ('Gross value added at basic prices by metropolitan regions', 'MET_10R_3GVA', 'dataset', '2022-04-21T23:00:00+0200', '2022-04-21T23:00:00+0200', '1995', '2020')]\r\n```\r\n\r\n### As a pandas dataframe:\r\n\r\n```python\r\neurostat.get_toc_df()\r\n```\r\n\r\nRead the table of contents of the main database and return a dataframe.\r\n\r\n#### Example:\r\n\r\n```python\r\n>>> import eurostat\r\n>>> toc_df = eurostat.get_toc_df()\r\n>>> toc_df\r\n                                                  title  ... data end\r\n0     Road equipment: number of road vehicles by cat...  ...     2018\r\n1        Road equipment: number of road vehicles by age  ...     2018\r\n2              Road equipment: load capacity of lorries  ...     2015\r\n3       Road equipment: new registrations by categories  ...     2015\r\n4        Road traffic: road freight transport in volume  ...     2018\r\n                                                ...  ...      ...\r\n7225  Tropical wood imports to the EU from chapter 4...  ...  2020-12\r\n7226  Candidate countries and potential candidates: ...  ...     2019\r\n7227  Candidate countries and potential candidates: ...  ...     2014\r\n7228  Candidate countries and potential candidates: ...  ...     2015\r\n7229  Candidate countries and potential candidates: ...  ...     2014\r\n```\r\n\r\nYou may also want to extract the datasets that pertain a topic. In that case, you can use:\r\n\r\n```python\r\neurostat.subset_toc_df(toc_df, keyword)\r\n```\r\n\r\nExtract from toc_df the rows where the column *title* contains *keyword* (case-insensitive).\r\n\r\n#### Example:\r\n\r\n```python\r\n>>> f = eurostat.subset_toc_df(toc_df, 'fleet')\r\n>>> f\r\n                                                  title  ... data end\r\n4873                       Fishing fleet, total tonnage  ...     2021\r\n4895                   Fishing Fleet, Number of Vessels  ...     2021\r\n6169  Commercial aircraft fleet by age of aircraft a...  ...     2020\r\n6172  Commercial aircraft fleet by age of aircraft a...  ...     2020\r\n6175  Commercial aircraft fleet by aircraft category...  ...     2020\r\n6178  Commercial aircraft fleet by aircraft category...  ...     2020\r\n6576      Commercial aircraft fleet by type of aircraft  ...     2020\r\n7120     Fishing fleet by age, length and gross tonnage  ...     2021\r\n7121     Fishing fleet by type of gear and engine power  ...     2021\r\n```\r\n\r\n\r\n## Get the filter parameters to download a subset of a dataset:\r\n\r\n```python\r\neurostat.get_pars(code)\r\n```\r\n\r\nRead the parameter names that can be filtered for a given dataset *code* and return them as a list.\r\n\r\n#### Example:\r\n\r\n```python\r\n>>> import eurostat\r\n>>> pars = eurostat.get_pars('demo_r_d2jan')\r\n>>> pars\r\n['freq', 'unit', 'sex', 'age', 'geo']\r\n```\r\n\r\nFrom the example, you can note that *code* is generally case-insensitive.\r\n\r\nTo get the parameter values for filtering, you can use:\r\n\r\n```python\r\neurostat.get_par_values(code, par)\r\n```\r\n\r\nRead the values of a given parameter *par* that can be found in a given dataset *code*.\r\n\r\n#### Example:\r\n\r\n```python\r\n>>> import eurostat\r\n>>> par_values = eurostat.get_par_values('demo_r_d2jan', 'sex')\r\n>>> par_values\r\n['T', 'M', 'F']\r\n```\r\n\r\n\r\n## Get an Eurostat dictionary:\r\n\r\n```python\r\neurostat.get_dic(code, par, [full=True], [frmt=\"list\"], [lang=\"en\"])\r\n```\r\n\r\nRead the dictionary of a given parameter *par* as a list of tuples or as a dictionary.\r\nYou must provide also the dataset *code*.\r\n\r\nIf you want the full list of possible values of *par*, set *full=True*, while *full=False* returns only the values that are in the dataset, output from *get_par_values()*.\r\nDefault is *full=True*.\r\n\r\n*frmt=\"list\"* makes the function return a list of tuples, where the first element of each tuple is the code value and the second one is its description.\r\nIf *frmt=\"dict\"* it returns a dictionary.\r\nDefault is *frmt=\"list\"*.\r\n\r\n*lang* allows to download the dictionary in one of the following languages: *\"en\"*=English, *\"fr\"*=French, *\"de\"*=German, when provided by Eurostat. Default is English.\r\n\r\n#### Example:\r\n\r\n```python\r\n>>> import eurostat\r\n>>> dic = eurostat.get_dic('demo_r_d2jan', 'sex')\r\n>>> dic\r\n[('T', 'Total'),\r\n ('M', 'Males'),\r\n ('F', 'Females'),\r\n ('DIFF', 'Absolute difference between males and females'),\r\n ('NAP', 'Not applicable'),\r\n ('NRP', 'No response'),\r\n ('UNK', 'Unknown')]\r\n```\r\n\r\n\r\n\r\n## Read a dataset:\r\n\r\n### As a list of tuples:\r\n\r\n```python\r\neurostat.get_data(code, [flags=False], [filter_pars=dict()], [verbose=False], [reverse_time=False])\r\n```\r\n\r\nRead an Eurostat dataset and returns it as a list of tuples.\r\nThe first element of the list (\"the first row\") is the data header.\r\n\r\nTo get a subset, set *filter_pars* (a dictionary where keys are parameter names, values are the wanted items).\r\n\r\nTo see a rough progress status, set *verbose=True*.\r\n\r\n*flag=True* downloads also the flags associated to the data.\r\nPay attention: the data format changes if *flags* is *True* or not.\r\nFlag meanings can be found [here][abbr].\r\n\r\n*reverse_time=True* reverses the order of the time columns. For compatibility with 0.x.x versions.\r\n\r\n#### Example: Full download a dataset without flags as list of tuples\r\n \r\n```python\r\n>>> import eurostat\r\n>>> data = eurostat.get_data('GOV_10DD_SLGD')\r\n>>> data[0]\r\n('freq', 'na_item', 'sector', 'maturity', 'unit', 'geo\\\\TIME_PERIOD', 2018, 2019, 2020, 2021)\r\n>>> data[90:95]\r\n[('A', 'F3', 'S11', 'TOTAL', 'MIO_EUR', 'BE', None, None, 23.8, 39.3),\r\n ('A', 'F3', 'S11', 'TOTAL', 'MIO_EUR', 'ES', None, None, 130.0, 122.2),\r\n ('A', 'F3', 'S11', 'TOTAL', 'MIO_NAC', 'AT', None, None, 0.0, 0.0),\r\n ('A', 'F3', 'S11', 'TOTAL', 'MIO_NAC', 'BE', None, None, 23.8, 39.3),\r\n ('A', 'F3', 'S11', 'TOTAL', 'MIO_NAC', 'ES', None, None, 130.0, 122.2)]\r\n```\r\n\r\n#### Example: Full download a dataset with flags as list of tuples\r\n \r\n```python\r\n>>> import eurostat\r\n>>> data = eurostat.get_data('GOV_10DD_SLGD', True)\r\n>>> data[0]\r\n('freq', 'na_item', 'sector', 'maturity', 'unit', 'geo\\\\TIME_PERIOD', '2018_value', '2018_flag', '2019_value', '2019_flag', '2020_value', '2020_flag', '2021_value', '2021_flag')\r\n>>> data[90:95]\r\n[('A', 'F3', 'S11', 'TOTAL', 'MIO_EUR', 'BE', None, ':', None, ':', 23.8, '', 39.3, ''),\r\n ('A', 'F3', 'S11', 'TOTAL', 'MIO_EUR', 'ES', None, ':', None, ':', 130.0, '', 122.2, ''),\r\n ('A', 'F3', 'S11', 'TOTAL', 'MIO_NAC', 'AT', None, ':', None, ':', 0.0, '', 0.0, ''),\r\n ('A', 'F3', 'S11', 'TOTAL', 'MIO_NAC', 'BE', None, ':', None, ':', 23.8, '', 39.3, ''),\r\n ('A', 'F3', 'S11', 'TOTAL', 'MIO_NAC', 'ES', None, ':', None, ':', 130.0, '', 122.2, '')]\r\n```\r\n\r\n\r\n#### Example: Download a subset of data from a dataset without flags as list of tuples\r\n\r\nTo download a subset, you need to set the *filter_pars* dictionary.\r\nIts keys can be: *'startPeriod'*, *'endPeriod'* and any parameter you get with *eurostat.get_pars()*.\r\nValues can be number, string or list and generally are derived by *eurostat.get_par_values()*.\r\n\r\n```python\r\n>>> import eurostat\r\n>>> code = 'GOV_10DD_SLGD'\r\n>>> pars = eurostat.get_pars(code)\r\n>>> pars\r\n['freq', 'na_item', 'sector', 'maturity', 'unit', 'geo']\r\n>>> par_values = eurostat.get_par_values(code, 'geo')\r\n>>> par_values\r\n['BE', 'DE', 'ES', 'AT']\r\n>>> my_filter_pars = {'startPeriod': 2019, 'geo': ['AT','BE']}\r\n>>> data = eurostat.get_data(code, filter_pars=my_filter_pars)\r\n>>> data[0]\r\n('freq', 'na_item', 'sector', 'maturity', 'unit', 'geo\\\\TIME_PERIOD', 2019, 2020, 2021)\r\n>>> data[445:447]\r\n[('A', 'GD', 'S1_S2', 'Y_LT1', 'PC_TOT', 'AT', None, 1.0, 0.9),\r\n ('A', 'F22', 'S1_S2', 'TOTAL', 'MIO_EUR', 'BE', None, 0.0, 0.0)]\r\n```\r\n\r\n#### Example: Download a subset of data from a dataset with flags as list of tuples\r\n\r\n```python\r\n>>> import eurostat\r\n>>> code = 'GOV_10DD_SLGD'\r\n>>> pars = eurostat.get_pars(code)\r\n>>> pars\r\n['freq', 'na_item', 'sector', 'maturity', 'unit', 'geo']\r\n>>> par_values = eurostat.get_par_values(code, 'geo')\r\n>>> par_values\r\n['BE', 'DE', 'ES', 'AT']\r\n>>> my_filter_pars = {'startPeriod': 2019, 'geo': ['AT','BE']}\r\n>>> data = eurostat.get_data(code, True, filter_pars=my_filter_pars)\r\n>>> data[0]\r\n('freq', 'na_item', 'sector', 'maturity', 'unit', 'geo\\\\TIME_PERIOD', '2019_value', '2019_flag', '2020_value', '2020_flag', '2021_value', '2021_flag')\r\n>>> data[446:448]\r\n[('A', 'GD', 'S1_S2', 'Y_LT1', 'PC_TOT', 'AT', None, ':', 1.0, '', 0.9, ''),\r\n ('A', 'F22', 'S1_S2', 'TOTAL', 'MIO_EUR', 'BE', None, ':', 0.0, '', 0.0, '')]\r\n```\r\n\r\n### As a pandas dataframe:\r\n\r\n```python\r\neurostat.get_data_df(code, [flags=False], [filter_pars=None], [verbose=False], [reverse_time=False])\r\n```\r\n\r\nRead an Eurostat dataset and returns it as pandas dataframe.\r\n\r\nTo get a subset, set *filter_pars* (a dictionary where keys are parameter names, values are the wanted items).\r\n\r\nTo see a rough progress status, set *verbose=True*.\r\n\r\n*flag=True* downloads also the flags associated to the data.\r\nPay attention: the data format changes if *flags* is *True* or not.\r\nFlag meanings can be found [here][abbr].\r\n\r\n*reverse_time=True* reverses the order of the time columns. For compatibility with 0.x.x versions.\r\n\r\n#### Example: Full download a dataset without flags as pandas dataframe\r\n \r\n```python\r\n>>> import eurostat\r\n>>> data = eurostat.get_data_df('GOV_10DD_SLGD')\r\n>>> data\r\n     freq na_item sector maturity  ... 2018 2019    2020    2021\r\n0       A     F22  S1_S2    TOTAL  ...  NaN  NaN     0.0     0.0\r\n1       A     F22  S1_S2    TOTAL  ...  NaN  NaN     0.0     0.0\r\n2       A     F22  S1_S2    TOTAL  ...  0.0  0.0     0.0     0.0\r\n3       A     F22  S1_S2    TOTAL  ...  NaN  NaN     0.0     0.0\r\n4       A     F22  S1_S2    TOTAL  ...  NaN  NaN     0.0     0.0\r\n  ...     ...    ...      ...  ...  ...  ...     ...     ...\r\n1181    A      GD  S1_S2    Y_LT1  ...  NaN  NaN  2849.0  2408.2\r\n1182    A      GD  S1_S2    Y_LT1  ...  NaN  NaN     1.0     0.9\r\n1183    A      GD  S1_S2    Y_LT1  ...  NaN  NaN     6.9     5.4\r\n1184    A      GD  S1_S2    Y_LT1  ...  4.9  6.0     5.9     5.5\r\n1185    A      GD  S1_S2    Y_LT1  ...  NaN  NaN     0.9     0.8\r\n```\r\n\r\n#### Example: Full download a dataset with flags as pandas dataframe\r\n \r\n```python\r\n>>> import eurostat\r\n>>> data = eurostat.get_data_df('GOV_10DD_SLGD', True)\r\n>>> data\r\n     freq na_item sector maturity  ... 2020_value 2020_flag  2021_value 2021_flag\r\n0       A     F22  S1_S2    TOTAL  ...        0.0         :         0.0          \r\n1       A     F22  S1_S2    TOTAL  ...        0.0                   0.0          \r\n2       A     F22  S1_S2    TOTAL  ...        0.0         :         0.0          \r\n3       A     F22  S1_S2    TOTAL  ...        0.0                   0.0          \r\n4       A     F22  S1_S2    TOTAL  ...        0.0                   0.0          \r\n  ...     ...    ...      ...  ...        ...       ...         ...       ...\r\n1182    A      GD  S1_S2    Y_LT1  ...        1.0                   0.9          \r\n1183    A      GD  S1_S2    Y_LT1  ...        6.9                   5.4          \r\n1184    A      GD  S1_S2    Y_LT1  ...        5.9                   5.5          \r\n1185    A      GD  S1_S2    Y_LT1  ...        0.9         :         0.8          \r\n1186    A      GD  S1_S2    Y_LT1  ...        0.9                   0.8          \r\n```\r\n\r\n#### Example: Download a subset of data from a dataset without flags as pandas dataframe\r\n\r\nTo download a subset, you need to set the *filter_pars* dictionary.\r\nIts keys can be: *'startPeriod'*, *'endPeriod'* and any parameter you get with *eurostat.get_pars()*.\r\nValues can be number, string or list and generally are derived by *eurostat.get_par_values()*.\r\n\r\n```python\r\n>>> import eurostat\r\n>>> code = 'GOV_10DD_SLGD'\r\n>>> pars = eurostat.get_pars(code)\r\n>>> pars\r\n['freq', 'na_item', 'sector', 'maturity', 'unit', 'geo']\r\n>>> par_values = eurostat.get_par_values(code, 'geo')\r\n>>> par_values\r\n['BE', 'DE', 'ES', 'AT']\r\n>>> my_filter_pars = {'endPeriod': 2020, 'geo': ['AT','BE']}\r\n>>> data = eurostat.get_data_df(code, filter_pars=my_filter_pars)\r\n>>> data\r\n    freq na_item sector maturity     unit geo\\TIME_PERIOD  2018  2019     2020\r\n0      A     F22  S1_S2    TOTAL  MIO_EUR              AT   NaN   NaN      0.0\r\n1      A     F22  S1_S2    TOTAL  MIO_NAC              AT   NaN   NaN      0.0\r\n2      A     F22  S1_S2    Y_LT1  MIO_EUR              AT   NaN   NaN      0.0\r\n3      A     F22  S1_S2    Y_LT1  MIO_NAC              AT   NaN   NaN      0.0\r\n4      A     F29  S1_S2    TOTAL  MIO_EUR              AT   NaN   NaN      0.0\r\n..   ...     ...    ...      ...      ...             ...   ...   ...      ...\r\n633    A      GD  S1_S2    Y_GT1  MIO_NAC              BE   NaN   NaN  72660.0\r\n634    A      GD  S1_S2    Y_GT1   PC_TOT              BE   NaN   NaN     93.1\r\n635    A      GD  S1_S2    Y_LT1  MIO_EUR              BE   NaN   NaN   5387.0\r\n636    A      GD  S1_S2    Y_LT1  MIO_NAC              BE   NaN   NaN   5387.0\r\n637    A      GD  S1_S2    Y_LT1   PC_TOT              BE   NaN   NaN      6.9\r\n```\r\n\r\n#### Example: Download a subset of data from a dataset with flags as pandas dataframe\r\n\r\n```python\r\n>>> import eurostat\r\n>>> code = 'GOV_10DD_SLGD'\r\n>>> pars = eurostat.get_pars(code)\r\n>>> pars\r\n['freq', 'na_item', 'sector', 'maturity', 'unit', 'geo']\r\n>>> par_values = eurostat.get_par_values(code, 'geo')\r\n>>> par_values\r\n['BE', 'DE', 'ES', 'AT']\r\n>>> my_filter_pars = {'endPeriod': 2020, 'geo': ['AT','BE']}\r\n>>> data = eurostat.get_data_df(code, True, filter_pars=my_filter_pars)\r\n>>> data\r\n    freq na_item sector maturity  ... 2019_value 2019_flag  2020_value 2020_flag\r\n0      A     F22  S1_S2    TOTAL  ...        NaN         :         0.0          \r\n1      A     F22  S1_S2    TOTAL  ...        NaN         :         0.0          \r\n2      A     F22  S1_S2    Y_LT1  ...        NaN         :         0.0          \r\n3      A     F22  S1_S2    Y_LT1  ...        NaN         :         0.0          \r\n4      A     F29  S1_S2    TOTAL  ...        NaN         :         0.0          \r\n..   ...     ...    ...      ...  ...        ...       ...         ...       ...\r\n635    A      GD  S1_S2    Y_GT1  ...        NaN         :        93.1          \r\n636    A      GD  S1_S2    Y_LT1  ...        NaN         :      5387.0          \r\n637    A      GD  S1_S2    Y_LT1  ...        NaN         :      5387.0          \r\n638    A      GD  S1_S2    Y_LT1  ...        NaN         :         6.9          \r\n639    A      GD  S1_S2    Y_LT1  ...        NaN         :         6.9          \r\n```\r\n\r\n## In case you need to use a proxy:\r\n\r\nBefore doing anything else, you must configure the https proxy.\r\n\r\n```python\r\neurostat.setproxy(proxyinfo)\r\n```\r\n\r\nIt requires in input *proxyinfo*, a dictionary with one key (*'https'*) and value containing the connection parameters in a list.  \r\nIf authentication is not needed, set *username* and *password* to *None*.\r\n\r\nExample:\r\n```python\r\n>>> import eurostat\r\n>>> proxyinfo = {'https': ['myuser', 'mypassword', 'url:port']}\r\n>>> eurostat.setproxy(proxyinfo)\r\n```\r\n\r\nIt always returns *None*.\r\n\r\n\r\n## Bug reports and feature requests:\r\n\r\nPlease [open an issue][issue] or send a message to noemi.cazzaniga [at] polimi.it .\r\n\r\n\r\n## Disclaimer:\r\n\r\nDownload and usage of Eurostat data is subject to Eurostat's general copyright notice and licence policy (see [Policies][pol]). Please also be aware of the European Commission's [general conditions][cond].\r\n\r\n\r\n## Data sources:\r\n\r\n* Eurostat database: [online catalog][onlinecat].\r\n* Eurostat nomenclatures: [RAMON][ram] metadata.\r\n* Eurostat Interactive Data Browser: [Data Browser][databrow].\r\n* Eurostat Interactive Tool for Comext Data: [Easy Comext][comext].\r\n* Eurostat PRODCOM website: [PRODCOM][prodcom].\r\n* Eurostat acronyms: [Symbols and abbreviations][abbr].\r\n* Eurostat web services description: [Web services][webserv].\r\n\r\n\r\n## References:\r\n\r\n* R package [eurostat][es]: R Tools for Eurostat Open Data.\r\n* Python package [pandas][pd]: Python Data Analysis Library.\r\n\r\n\r\n## History:\r\n\r\n### version 1.0.2 (14 Mar 2023):\r\n* Bug fix: proxy setting.\r\n\r\n### version 1.0.1 (12 Oct 2022):\r\n* Bug fix (wheel for conda venv).\r\n\r\n### version 1.0.0 (08 Oct 2022):\r\n\r\n* Adapted to the new Eurostat API (SDMX 2.1).\r\n* pandasdmx not required anymore.\r\n* Error messages improved.\r\n* Compiled also for conda install.\r\n* Multilingual dictionary.\r\n\r\n### version 0.2.3 (06 Apr 2021):\r\n\r\n* Internal bug fix.\r\n\r\n### version 0.2.2 (31 Mar 2021):\r\n\r\n* Bug fix (sdmx non-annual data). Deprecated.\r\n\r\n### version 0.2.1 (10 Nov 2020):\r\n\r\n* Bug fix (pandasdmx 0.9).\r\n\r\n### version 0.2.0 (22 May 2020):\r\n\r\n* Improved SDMX download capability in case of slow internet connections.\r\n\r\n### version 0.1.5 (08 Jan 2020):\r\n\r\n* Bug fix (proxy info).\r\n* get_avail_sdmx, get_avail_sdmx_df, subset_avail_sdmx_df added.\r\n\r\n### version 0.1.4 (20 Dec 2019):\r\n\r\n* Added support to proxy.\r\n\r\n### version 0.1.3 (17 Dec 2019):\r\n\r\n* Bug fix (non-annual data headers).\r\n\r\n### version 0.1.2 (25 Nov 2019):\r\n\r\n* Added possibility to download flags.\r\n* get_toc_df, subset_toc_df added.\r\n\r\n### version 0.1.1 (21 Nov 2019):\r\n\r\n* First official release.\r\n\r\n\r\n[pol]: https://ec.europa.eu/eurostat/about/policies/copyright\r\n[cond]: http://ec.europa.eu/geninfo/legal_notices_en.htm\r\n[onlinecat]: https://ec.europa.eu/eurostat/data/database\r\n[ram]: https://ec.europa.eu/eurostat/ramon/nomenclatures/index.cfm?TargetUrl=LST_NOM&StrGroupCode=SCL&StrLanguageCode=EN\r\n[databrow]: https://ec.europa.eu/eurostat/databrowser/\r\n[pd]: https://pandas.pydata.org/\r\n[es]: http://ropengov.github.io/eurostat/\r\n[issue]: https://bitbucket.org/noemicazzaniga/eurostat/issues/new\r\n[abbr]: https://ec.europa.eu/eurostat/statistics-explained/index.php?title=Tutorial:Symbols_and_abbreviations#Statistical_symbols.2C_abbreviations_and_units_of_measurement\r\n[prodcom]: https://ec.europa.eu/eurostat/web/prodcom\r\n[comext]: http://epp.eurostat.ec.europa.eu/newxtweb/\r\n[bulkcomext]: https://ec.europa.eu/eurostat/estat-navtree-portlet-prod/BulkDownloadListing?sort=1&dir=comext%2FCOMEXT_DATA%2FPRODUCTS\r\n[webserv]: https://ec.europa.eu/eurostat/web/main/data/web-services\r\n[condapack]: https://anaconda.org/noemicazzaniga/eurostat\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "eurostat comext prodcom statistics data economics science",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "eurostat",
    "package_url": "https://pypi.org/project/eurostat/",
    "platform": null,
    "project_url": "https://pypi.org/project/eurostat/",
    "project_urls": {
      "Source": "https://bitbucket.org/noemicazzaniga/eurostat/src/master/"
    },
    "release_url": "https://pypi.org/project/eurostat/1.0.2/",
    "requires_dist": [
      "pandas",
      "requests"
    ],
    "requires_python": ">=3.5",
    "summary": "Eurostat Python Package",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17292287,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "717f6d0118182a6440a7d1d0f7fb6d5640aa2c96dfc9d7b619f8cc29fbd177a1",
          "md5": "f7c1a7a85b2f6229340bd5c898a60576",
          "sha256": "c3b660197d9013f83e85599d08dba1aec958cba7ab424a649657e5ad41178c99"
        },
        "downloads": -1,
        "filename": "eurostat-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7c1a7a85b2f6229340bd5c898a60576",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7156,
        "upload_time": "2019-11-21T16:17:32",
        "upload_time_iso_8601": "2019-11-21T16:17:32.729748Z",
        "url": "https://files.pythonhosted.org/packages/71/7f/6d0118182a6440a7d1d0f7fb6d5640aa2c96dfc9d7b619f8cc29fbd177a1/eurostat-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f068d2eb7bd7b708dd1b983147870296579e8bf7481e4efca21c63a04b64e57",
          "md5": "24e6541802111ebd61692b7715f3b316",
          "sha256": "1276c3dcef9a7cb9991fe0b2662b2e6dd250ce6a9b0f3eea32ea30a06977e194"
        },
        "downloads": -1,
        "filename": "eurostat-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "24e6541802111ebd61692b7715f3b316",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8316,
        "upload_time": "2019-11-21T16:17:34",
        "upload_time_iso_8601": "2019-11-21T16:17:34.902903Z",
        "url": "https://files.pythonhosted.org/packages/9f/06/8d2eb7bd7b708dd1b983147870296579e8bf7481e4efca21c63a04b64e57/eurostat-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdd95c93aaff6bfae6bd0531b1beb867773999bfb84778e3679147fec9036b36",
          "md5": "49dcde5bb6df487f084875d7a0f1fd18",
          "sha256": "adbe8db43e0fa57c6cb3237cca3e215b2dc008e272c024b64f2723d9833742c5"
        },
        "downloads": -1,
        "filename": "eurostat-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "49dcde5bb6df487f084875d7a0f1fd18",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8668,
        "upload_time": "2019-11-25T14:07:15",
        "upload_time_iso_8601": "2019-11-25T14:07:15.869906Z",
        "url": "https://files.pythonhosted.org/packages/bd/d9/5c93aaff6bfae6bd0531b1beb867773999bfb84778e3679147fec9036b36/eurostat-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfa225f523d02ca36ae6f177c5f037356d3a4b5a0103bff5b64ef388d2da8822",
          "md5": "f1f351db4774be62d3ebddb18f7817fc",
          "sha256": "489eab3c3ecd9c6f9f457003d6bc5f888c1cbdb19b2b4df1eba9d20802ddd044"
        },
        "downloads": -1,
        "filename": "eurostat-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f1f351db4774be62d3ebddb18f7817fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10383,
        "upload_time": "2019-11-25T14:07:17",
        "upload_time_iso_8601": "2019-11-25T14:07:17.834781Z",
        "url": "https://files.pythonhosted.org/packages/bf/a2/25f523d02ca36ae6f177c5f037356d3a4b5a0103bff5b64ef388d2da8822/eurostat-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f37b5aca1a7fa8e2729f143a85a2964414b1d5853edda0206ea8a34a71863669",
          "md5": "c4daed841880f31ea6ad546c33f97143",
          "sha256": "e71c95f03711d19f4ea6779cbcf9a66234f02891b41173b2503cfeacc337d34c"
        },
        "downloads": -1,
        "filename": "eurostat-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c4daed841880f31ea6ad546c33f97143",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8681,
        "upload_time": "2019-12-17T08:23:25",
        "upload_time_iso_8601": "2019-12-17T08:23:25.795917Z",
        "url": "https://files.pythonhosted.org/packages/f3/7b/5aca1a7fa8e2729f143a85a2964414b1d5853edda0206ea8a34a71863669/eurostat-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b24ed3cbba08a69084520991f42c65ce7bbccf93c66008a52e06ed6958f81012",
          "md5": "4cd6e33267fd51608fb4d1e3cb56eaf9",
          "sha256": "d25494d5363b9f673157355d3e775532b7a1cc7b6919567d4abfc6c8d7777e86"
        },
        "downloads": -1,
        "filename": "eurostat-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4cd6e33267fd51608fb4d1e3cb56eaf9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10379,
        "upload_time": "2019-12-17T08:23:27",
        "upload_time_iso_8601": "2019-12-17T08:23:27.737358Z",
        "url": "https://files.pythonhosted.org/packages/b2/4e/d3cbba08a69084520991f42c65ce7bbccf93c66008a52e06ed6958f81012/eurostat-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33d2ddc4860fb2f7a382914f2e268a2cc91a5a2c657be26e5eb8e74fe5ea7a1f",
          "md5": "616e8804e9967473eda6d151c3b36b8b",
          "sha256": "fee6e06e9a6cc2c92e15b705c86f443afb0baf9551134bd3bbd24feee0068e29"
        },
        "downloads": -1,
        "filename": "eurostat-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "616e8804e9967473eda6d151c3b36b8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9617,
        "upload_time": "2019-12-20T16:01:36",
        "upload_time_iso_8601": "2019-12-20T16:01:36.865367Z",
        "url": "https://files.pythonhosted.org/packages/33/d2/ddc4860fb2f7a382914f2e268a2cc91a5a2c657be26e5eb8e74fe5ea7a1f/eurostat-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e1aae9722d6a82d97ae34b10564db4a55b742cb3af76a459976f67dffd33422",
          "md5": "7f489e214cf27fc5cd4e12687b13575a",
          "sha256": "77b5f7eb9cc6374f2072454869a215132b5c11dced6192fecc9113c4ae95f926"
        },
        "downloads": -1,
        "filename": "eurostat-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7f489e214cf27fc5cd4e12687b13575a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11542,
        "upload_time": "2019-12-20T16:01:38",
        "upload_time_iso_8601": "2019-12-20T16:01:38.365690Z",
        "url": "https://files.pythonhosted.org/packages/2e/1a/ae9722d6a82d97ae34b10564db4a55b742cb3af76a459976f67dffd33422/eurostat-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "868f1b439f26d832479b171761bf9c02b21691462e62782ad21898795bb9f6e0",
          "md5": "c166abb60ab7a493856a021134faed8f",
          "sha256": "c163181aba7e83f77f3e0aff0ce101344c234c8be18df2b29b401cbbd0bee1f3"
        },
        "downloads": -1,
        "filename": "eurostat-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c166abb60ab7a493856a021134faed8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10365,
        "upload_time": "2020-01-08T14:04:00",
        "upload_time_iso_8601": "2020-01-08T14:04:00.367589Z",
        "url": "https://files.pythonhosted.org/packages/86/8f/1b439f26d832479b171761bf9c02b21691462e62782ad21898795bb9f6e0/eurostat-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe04a116c364a8bcddc88fbc9dfa295d806eb5afd4094358dee3004094156c8e",
          "md5": "70ed9d8689819e4e5b432163200d9d43",
          "sha256": "b60eb6d1ce7ec0a18a91ea933f4f1fb4017804a39fbcde2995fe7812eb5bcf27"
        },
        "downloads": -1,
        "filename": "eurostat-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "70ed9d8689819e4e5b432163200d9d43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15446,
        "upload_time": "2020-01-08T14:04:02",
        "upload_time_iso_8601": "2020-01-08T14:04:02.362831Z",
        "url": "https://files.pythonhosted.org/packages/fe/04/a116c364a8bcddc88fbc9dfa295d806eb5afd4094358dee3004094156c8e/eurostat-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "135a8be489c33c2099c0f610cdf644a3e8ae8446fca3099633146aad0ffb802c",
          "md5": "a1901837cf331c215dedc8a69b08bc32",
          "sha256": "1dc63bfbc819a67a23312b6a0508714ef73518c765ad87abf9afd332472204d0"
        },
        "downloads": -1,
        "filename": "eurostat-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a1901837cf331c215dedc8a69b08bc32",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11353,
        "upload_time": "2020-05-22T13:25:05",
        "upload_time_iso_8601": "2020-05-22T13:25:05.079519Z",
        "url": "https://files.pythonhosted.org/packages/13/5a/8be489c33c2099c0f610cdf644a3e8ae8446fca3099633146aad0ffb802c/eurostat-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53883fc3e2be88c1f5d9835c0bfd2b7acb51984d044193bf68daee1a5e1bcf3d",
          "md5": "7f8f0b15c17e1a5d17aa2fd84173720c",
          "sha256": "0315e5ed4d2bad5e0c903ad820c8e305a123899eae2ce6d615a34010175842e5"
        },
        "downloads": -1,
        "filename": "eurostat-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7f8f0b15c17e1a5d17aa2fd84173720c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16251,
        "upload_time": "2020-05-22T13:25:07",
        "upload_time_iso_8601": "2020-05-22T13:25:07.902780Z",
        "url": "https://files.pythonhosted.org/packages/53/88/3fc3e2be88c1f5d9835c0bfd2b7acb51984d044193bf68daee1a5e1bcf3d/eurostat-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ead7c6e5fd4f14c6d60a529c1e592bcf772d4c74e6403bf1f1508b46dfe73ac2",
          "md5": "640ff9cf6b9b0b64e5ca456233419cc3",
          "sha256": "6dea57975d4d4b0075987bb0461b682934e8593a031810f8bc2ff89fcfe1a0a0"
        },
        "downloads": -1,
        "filename": "eurostat-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "640ff9cf6b9b0b64e5ca456233419cc3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11364,
        "upload_time": "2020-11-10T11:48:27",
        "upload_time_iso_8601": "2020-11-10T11:48:27.618591Z",
        "url": "https://files.pythonhosted.org/packages/ea/d7/c6e5fd4f14c6d60a529c1e592bcf772d4c74e6403bf1f1508b46dfe73ac2/eurostat-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31acc1d14ea6b637a393a7331789fc6b40b67c77e6bef063b4e07504fec03776",
          "md5": "697df75cafa3584f97647a48fcde577a",
          "sha256": "064dafa453c2a22e94e2acbda9142a3e5d11f0518609e301510073bb4fe1c58f"
        },
        "downloads": -1,
        "filename": "eurostat-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "697df75cafa3584f97647a48fcde577a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16242,
        "upload_time": "2020-11-10T11:48:32",
        "upload_time_iso_8601": "2020-11-10T11:48:32.442779Z",
        "url": "https://files.pythonhosted.org/packages/31/ac/c1d14ea6b637a393a7331789fc6b40b67c77e6bef063b4e07504fec03776/eurostat-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4faeb91365a5aec15239a6f51c069337b97fa083bac3d82deadbd28c19c952b4",
          "md5": "4f915fa3f067d453de467ad3989cbd25",
          "sha256": "e2c417f12689929cc0bfadd32a2aaa5d2d433abc448d1e30d0d16cd4392757b0"
        },
        "downloads": -1,
        "filename": "eurostat-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f915fa3f067d453de467ad3989cbd25",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11503,
        "upload_time": "2021-04-06T13:30:54",
        "upload_time_iso_8601": "2021-04-06T13:30:54.566999Z",
        "url": "https://files.pythonhosted.org/packages/4f/ae/b91365a5aec15239a6f51c069337b97fa083bac3d82deadbd28c19c952b4/eurostat-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "317796825ddf64433a3e3e63870fbb10c5650e7ff3fdce6633d18a4401a7265e",
          "md5": "8beb7fca519a18587061d587a8b6a897",
          "sha256": "51f50c54e9dc7f7a3f0e0e0bc06bbec94d571437c90f3673fb39e43a52564b5c"
        },
        "downloads": -1,
        "filename": "eurostat-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8beb7fca519a18587061d587a8b6a897",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16547,
        "upload_time": "2021-04-06T13:30:56",
        "upload_time_iso_8601": "2021-04-06T13:30:56.654782Z",
        "url": "https://files.pythonhosted.org/packages/31/77/96825ddf64433a3e3e63870fbb10c5650e7ff3fdce6633d18a4401a7265e/eurostat-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c260d4ef82010c142f984bab12a0df9b5a3688c8c418221bafa0060b412631e2",
          "md5": "18c27967393d3fc425998da882e5a377",
          "sha256": "9902c116a62f889517365e1787afcebbc9bb82c8effdc7df07bca185c96f296d"
        },
        "downloads": -1,
        "filename": "eurostat-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18c27967393d3fc425998da882e5a377",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7299,
        "upload_time": "2022-10-08T12:49:50",
        "upload_time_iso_8601": "2022-10-08T12:49:50.838846Z",
        "url": "https://files.pythonhosted.org/packages/c2/60/d4ef82010c142f984bab12a0df9b5a3688c8c418221bafa0060b412631e2/eurostat-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c6b695852e14f355162443ccd6cda24718fa5788a5653a447c1897ffd08ef6d",
          "md5": "ef22c4ecee022420eaa2ba2e49e89078",
          "sha256": "17bbe96f18fe61bdf644b00bb563fcadc085f541477f1ecb83f114a159fcf2fd"
        },
        "downloads": -1,
        "filename": "eurostat-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ef22c4ecee022420eaa2ba2e49e89078",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8945,
        "upload_time": "2022-10-08T12:49:55",
        "upload_time_iso_8601": "2022-10-08T12:49:55.225068Z",
        "url": "https://files.pythonhosted.org/packages/7c/6b/695852e14f355162443ccd6cda24718fa5788a5653a447c1897ffd08ef6d/eurostat-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41f897c2435adc64b7dd656ed995f66e19a731af9e5579c66776eabef81d27c9",
          "md5": "8508406e8d4e6b963799d2e4cdf33b14",
          "sha256": "db38fa602cb2015f10bc092f5455fef8287fb0dc91d098d24f863e2e0857da11"
        },
        "downloads": -1,
        "filename": "eurostat-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8508406e8d4e6b963799d2e4cdf33b14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13332,
        "upload_time": "2022-10-12T18:29:06",
        "upload_time_iso_8601": "2022-10-12T18:29:06.813804Z",
        "url": "https://files.pythonhosted.org/packages/41/f8/97c2435adc64b7dd656ed995f66e19a731af9e5579c66776eabef81d27c9/eurostat-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0b9137bdc54fd7edf1a8d75e4f5d25c76d7de24195097adc27c617d297b52d6",
          "md5": "1caede6c8f1dd486e4e9618e49ef473c",
          "sha256": "8ddf0a4cc53cf426840bc001f9d09d851b851cbc43c02ee17419cc298ba5554e"
        },
        "downloads": -1,
        "filename": "eurostat-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1caede6c8f1dd486e4e9618e49ef473c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 18707,
        "upload_time": "2022-10-12T18:29:10",
        "upload_time_iso_8601": "2022-10-12T18:29:10.368943Z",
        "url": "https://files.pythonhosted.org/packages/d0/b9/137bdc54fd7edf1a8d75e4f5d25c76d7de24195097adc27c617d297b52d6/eurostat-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "462b0c7ed360e1a864e89ee89c82dcba10e1ef2f8be27ab0273138861f1fac0b",
          "md5": "378fe27c1dd7c8e203cc77ae4a6aac57",
          "sha256": "c0193103dcfe3ecf4236f8ec3615f874d5bbf9f9dc306223cc482227d5d33736"
        },
        "downloads": -1,
        "filename": "eurostat-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "378fe27c1dd7c8e203cc77ae4a6aac57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13945,
        "upload_time": "2023-03-14T19:07:47",
        "upload_time_iso_8601": "2023-03-14T19:07:47.754281Z",
        "url": "https://files.pythonhosted.org/packages/46/2b/0c7ed360e1a864e89ee89c82dcba10e1ef2f8be27ab0273138861f1fac0b/eurostat-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8538c8867a9119f8d094d756f98259c23b97b8324f5b12c4d60bb2dba696772",
          "md5": "5bb2fb591919d6c575165edbcc44ed1d",
          "sha256": "eb49dfe442e750cbc2496b9f36242f5300cac394641e02b5e299b3ba6f924cfb"
        },
        "downloads": -1,
        "filename": "eurostat-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5bb2fb591919d6c575165edbcc44ed1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 19304,
        "upload_time": "2023-03-14T19:07:51",
        "upload_time_iso_8601": "2023-03-14T19:07:51.475043Z",
        "url": "https://files.pythonhosted.org/packages/d8/53/8c8867a9119f8d094d756f98259c23b97b8324f5b12c4d60bb2dba696772/eurostat-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "462b0c7ed360e1a864e89ee89c82dcba10e1ef2f8be27ab0273138861f1fac0b",
        "md5": "378fe27c1dd7c8e203cc77ae4a6aac57",
        "sha256": "c0193103dcfe3ecf4236f8ec3615f874d5bbf9f9dc306223cc482227d5d33736"
      },
      "downloads": -1,
      "filename": "eurostat-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "378fe27c1dd7c8e203cc77ae4a6aac57",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 13945,
      "upload_time": "2023-03-14T19:07:47",
      "upload_time_iso_8601": "2023-03-14T19:07:47.754281Z",
      "url": "https://files.pythonhosted.org/packages/46/2b/0c7ed360e1a864e89ee89c82dcba10e1ef2f8be27ab0273138861f1fac0b/eurostat-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d8538c8867a9119f8d094d756f98259c23b97b8324f5b12c4d60bb2dba696772",
        "md5": "5bb2fb591919d6c575165edbcc44ed1d",
        "sha256": "eb49dfe442e750cbc2496b9f36242f5300cac394641e02b5e299b3ba6f924cfb"
      },
      "downloads": -1,
      "filename": "eurostat-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5bb2fb591919d6c575165edbcc44ed1d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 19304,
      "upload_time": "2023-03-14T19:07:51",
      "upload_time_iso_8601": "2023-03-14T19:07:51.475043Z",
      "url": "https://files.pythonhosted.org/packages/d8/53/8c8867a9119f8d094d756f98259c23b97b8324f5b12c4d60bb2dba696772/eurostat-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}