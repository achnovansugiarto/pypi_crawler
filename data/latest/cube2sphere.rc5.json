{
  "info": {
    "author": "Tudor Brindus",
    "author_email": "me@tbrindus.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Artistic Software"
    ],
    "description": "cube2sphere [![PyPI version](https://badge.fury.io/py/cube2sphere.svg)](https://pypi.python.org/pypi/cube2sphere) [![PyPI](https://img.shields.io/pypi/pyversions/cube2sphere.svg)](https://pypi.python.org/pypi/cube2sphere)\n===========\n\n`cube2sphere` is a Python script to map 6 cube (cubemap, skybox) faces\ninto an equirectangular (cylindrical projection, skysphere) map. See\nalso [`sphere2cube`](https://github.com/Xyene/sphere2cube).\n\nUsage\n=====\n\n    $ cube2sphere -h\n    usage: cube2sphere [-h] [-v] [-r <width> <height>] [-R <rx> <ry> <rz>]\n                   [-o <path>] [-f <name>] [-b <path>] [-t <count>] [-V]\n                   <front> <back> <right> <left> <top> <bottom>\n\n    Maps 6 cube (cubemap, skybox) faces into an equirectangular (cylindrical\n    projection, skysphere) map.\n\n    positional arguments:\n      <front>               source front cube face filename\n      <back>                source back cube face filename\n      <right>               source right cube face filename\n      <left>                source left cube face filename\n      <top>                 source top cube face filename\n      <bottom>              source bottom cube face filename\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -v, --version         show program's version number and exit\n      -r <width> <height>, --resolution <width> <height>\n                            resolution for rendered map (defaults to 1024x512)\n      -R <rx> <ry> <rz>, --rotation <rx> <ry> <rz>\n                            rotation in degrees to apply before rendering map (z\n                            is up)\n      -o <path>, --output <path>\n                            filename for rendered map (defaults to \"out\")\n      -f <name>, --format <name>\n                            format to use when saving map, i.e. \"PNG\" or \"TGA\"\n      -b <path>, --blender-path <path>\n                            filename of the Blender executable (defaults to\n                            \"blender\")\n      -t <count>, --threads <count>\n                            number of threads to use when rendering (1-64)\n      -V, --verbose         enable verbose logging\n\nSupported output formats depend on the Blender installation, but will\ngenerally include TGA, IRIS, JPEG, MOVIE, IRIZ, RAWTGA, AVIRAW, AVIJPEG,\nPNG, BMP, and FRAMESERVER.\n\n`cube2sphere` can be run in a headless environment (e.g., a server).\n\nExamples\n========\n\nIf we wanted to stitch 6 cube faces named `${face}.jpg` into a 2048x1024\nTGA equirectangular map, we could use the following command:\n\n    $ cube2sphere front.jpg back.jpg right.jpg left.jpg top.jpg bottom.jpg -r 2048 1024 -fTGA -ostitched\n\nThis would generate `stitched.tga` in the working directory.\n\nInstallation\n============\n\n`cube2sphere` can be easily installed with `pip`. It requires a Python 3 installation.\n\nIt assumes that [Blender](https://www.blender.org/) is installed and the `blender` executable is\nlisted in the system PATH environment variable. If it is not possible\nfor PATH to be edited (as in the case of an unprivileged user), the path\nto the `blender` executable may instead be passed through the `-b` flag.\n\nWindows\n-------\n\nInstall Blender, and add `blender.exe` to `PATH`. Finally,\n\n    pip install cube2sphere\n\nLinux\n-----\n\n    $ apt-get install blender\n    $ pip install cube2sphere\n\nMac OS X\n--------\n\nSimilar to Windows, install Blender, and add the `blender` executable\nto `$PATH`. Then,\n\n    $ pip install cube2sphere",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/Xyene/cube2sphere",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cube2sphere",
    "package_url": "https://pypi.org/project/cube2sphere/",
    "platform": "",
    "project_url": "https://pypi.org/project/cube2sphere/",
    "project_urls": {
      "Homepage": "http://github.com/Xyene/cube2sphere"
    },
    "release_url": "https://pypi.org/project/cube2sphere/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Utility to map 6 cube (cubemap, skybox) faces into an equirectangular (cylindrical projection, skysphere) map",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6931529,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40626b4a94604529445b948a393d1a3fbe6b12bbbfe465b61bbdb99a2636b199",
          "md5": "2f05a12c4126399179f1222cea257729",
          "sha256": "4f756869761e53f7ba7760f151c420c33f27a3848776cc9d3ad21d239207b6f0"
        },
        "downloads": -1,
        "filename": "cube2sphere-0.1.0.zip",
        "has_sig": false,
        "md5_digest": "2f05a12c4126399179f1222cea257729",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 150513,
        "upload_time": "2016-05-20T20:55:48",
        "upload_time_iso_8601": "2016-05-20T20:55:48.098246Z",
        "url": "https://files.pythonhosted.org/packages/40/62/6b4a94604529445b948a393d1a3fbe6b12bbbfe465b61bbdb99a2636b199/cube2sphere-0.1.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc752b15429b51969ea4ce5f50ae560a7c86000ee40c72adffc506ebea53763e",
          "md5": "58b7a97b620532e36f91ff4b11961f62",
          "sha256": "74c7f21ee05a740050decfb735b3ce0a3afcba58c218e7ab243ff3ade68d098d"
        },
        "downloads": -1,
        "filename": "cube2sphere-0.1.8.zip",
        "has_sig": false,
        "md5_digest": "58b7a97b620532e36f91ff4b11961f62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 150581,
        "upload_time": "2016-08-19T16:50:22",
        "upload_time_iso_8601": "2016-08-19T16:50:22.694943Z",
        "url": "https://files.pythonhosted.org/packages/bc/75/2b15429b51969ea4ce5f50ae560a7c86000ee40c72adffc506ebea53763e/cube2sphere-0.1.8.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0528d5a63e1a954cde4d970fa4fa4b8a7ed299f8596abbb56d45e241b31955c9",
          "md5": "049133aa3a098371f560bbf7319e5e3e",
          "sha256": "cfa9f3c76ed7d9d7882316f2400699a974abcdc2683e3ce01c0162c52e2bbf02"
        },
        "downloads": -1,
        "filename": "cube2sphere-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "049133aa3a098371f560bbf7319e5e3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 150222,
        "upload_time": "2020-04-01T21:38:50",
        "upload_time_iso_8601": "2020-04-01T21:38:50.225097Z",
        "url": "https://files.pythonhosted.org/packages/05/28/d5a63e1a954cde4d970fa4fa4b8a7ed299f8596abbb56d45e241b31955c9/cube2sphere-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ef62ce7f7417029b80f69ef40901ad244d80b81ec97f6343b0743fe1cd24312",
          "md5": "cd65e61d71ec85476c1131da77115f44",
          "sha256": "e3d02ca842570e4a150cc7962f0ea736a008bc400e817e6b19cbc6a469f89343"
        },
        "downloads": -1,
        "filename": "cube2sphere-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cd65e61d71ec85476c1131da77115f44",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 150696,
        "upload_time": "2020-04-01T21:56:28",
        "upload_time_iso_8601": "2020-04-01T21:56:28.017447Z",
        "url": "https://files.pythonhosted.org/packages/5e/f6/2ce7f7417029b80f69ef40901ad244d80b81ec97f6343b0743fe1cd24312/cube2sphere-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ef62ce7f7417029b80f69ef40901ad244d80b81ec97f6343b0743fe1cd24312",
        "md5": "cd65e61d71ec85476c1131da77115f44",
        "sha256": "e3d02ca842570e4a150cc7962f0ea736a008bc400e817e6b19cbc6a469f89343"
      },
      "downloads": -1,
      "filename": "cube2sphere-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cd65e61d71ec85476c1131da77115f44",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 150696,
      "upload_time": "2020-04-01T21:56:28",
      "upload_time_iso_8601": "2020-04-01T21:56:28.017447Z",
      "url": "https://files.pythonhosted.org/packages/5e/f6/2ce7f7417029b80f69ef40901ad244d80b81ec97f6343b0743fe1cd24312/cube2sphere-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}