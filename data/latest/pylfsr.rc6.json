{
  "info": {
    "author": "Nikesh Bajaj",
    "author_email": "nikkeshbajaj@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Communications",
      "Topic :: Games/Entertainment :: Puzzle Games",
      "Topic :: Security :: Cryptography",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# LFSR -Linear Feedback Shift Register\r\n\r\n\r\n## Links: **[Github Page](http://nikeshbajaj.github.io/Linear_Feedback_Shift_Register/)** | **[Documentation](https://lfsr.readthedocs.io/)** | **[Github](https://github.com/Nikeshbajaj/Linear_Feedback_Shift_Register)**  |  **[PyPi - project](https://pypi.org/project/pylfsr/)** |     _ **Installation:** [pip install pylfsr](https://pypi.org/project/pylfsr/)\r\n-----\r\n\r\n\r\n![CircleCI](https://img.shields.io/circleci/build/github/Nikeshbajaj/Linear_Feedback_Shift_Register)\r\n[![Documentation Status](https://readthedocs.org/projects/lfsr/badge/?version=latest)](https://lfsr.readthedocs.io/en/latest/?badge=latest)\r\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\r\n[![PyPI version fury.io](https://badge.fury.io/py/pylfsr.svg)](https://pypi.org/project/pylfsr/)\r\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/pylfsr.svg)](https://pypi.python.org/pypi/pylfsr/)\r\n[![GitHub release](https://img.shields.io/github/release/nikeshbajaj/Linear_Feedback_Shift_Register.svg)](https://github.com/Nikeshbajaj/Linear_Feedback_Shift_Register/releases)\r\n[![PyPI format](https://img.shields.io/pypi/format/pylfsr.svg)](https://pypi.python.org/pypi/pylfsr/)\r\n[![PyPI implementation](https://img.shields.io/pypi/implementation/pylfsr.svg)](https://pypi.python.org/pypi/pylfsr/)\r\n[![HitCount](http://hits.dwyl.io/nikeshbajaj/pylfsr.svg)](http://hits.dwyl.io/nikeshbajaj/Linear_Feedback_Shift_Register)\r\n![GitHub commits since latest release (by date)](https://img.shields.io/github/commits-since/Nikeshbajaj/Linear_Feedback_Shift_Register/1.0.1)\r\n![GitHub issues](https://img.shields.io/github/issues-raw/Nikeshbajaj/Linear_Feedback_Shift_Register)\r\n![GitHub closed issues](https://img.shields.io/github/issues-closed-raw/Nikeshbajaj/Linear_Feedback_Shift_Register)\r\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/Nikeshbajaj/Linear_Feedback_Shift_Register.svg)](http://isitmaintained.com/project/Nikeshbajaj/Linear_Feedback_Shift_Register \"Average time to resolve an issue\")\r\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/Nikeshbajaj/Linear_Feedback_Shift_Register.svg)](http://isitmaintained.com/project/Nikeshbajaj/Linear_Feedback_Shift_Register \"Percentage of issues still open\")\r\n\r\n[![PyPI download month](https://img.shields.io/pypi/dm/pylfsr.svg)](https://pypi.org/project/pylfsr/)\r\n[![PyPI download week](https://img.shields.io/pypi/dw/pylfsr.svg)](https://pypi.org/project/pylfsr/)\r\n[![Hits-of-Code](https://hitsofcode.com/github/Nikeshbajaj/Linear_Feedback_Shift_Register)](https://hitsofcode.com/github/Nikeshbajaj/Linear_Feedback_Shift_Register/view)\r\n\r\n[![Generic badge](https://img.shields.io/badge/pip%20install-pylfsr-blue.svg)](https://pypi.org/project/pylfsr/)\r\n[![Ask Me Anything !](https://img.shields.io/badge/Ask%20me-anything-1abc9c.svg)](mailto:n.bajaj@qmul.ac.uk)\r\n\r\n![PyPI - Downloads](https://img.shields.io/pypi/dm/spkit?style=social)\r\n![CircleCI](https://img.shields.io/circleci/build/github/Nikeshbajaj/Linear_Feedback_Shift_Register?style=social)\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/nikeshbajaj/Linear_Feedback_Shift_Register/master/images/FibanacciLFSR_2.gif\" width=\"500\"/>\r\n  <img src=\"https://raw.githubusercontent.com/nikeshbajaj/Linear_Feedback_Shift_Register/master/images/GaloisLFSR_1.gif\" width=\"500\"/>\r\n</p>\r\n\r\n\r\n\r\n[![Generic badge](https://img.shields.io/badge/pip%20install-pylfsr-blue.svg)](https://pypi.org/project/pylfsr/)\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/nikeshbajaj/Linear_Feedback_Shift_Register/master/images/LFSR.jpg\" width=\"400\"/>\r\n  <img src=\"https://raw.githubusercontent.com/nikeshbajaj/Linear_Feedback_Shift_Register/master/images/5bit_8.gif\" width=\"500\"/>\r\n</p>\r\n\r\n\r\n\r\n-----\r\n## Table of contents\r\n- [**New Updates**](#new-updates)\r\n- [**Installation**](#installation)\r\n- [**Examples**](#examples)\r\n    - [**5-bit LFSR**](#example-1-5-bit-lfsr-with-feedback-polynomial-x5--x2--1)\r\n    - [**Vizualize each state**](#example-3--to-visualize-the-process-with-3-bit-lfsr-with-default-counter_start_zero--true)\r\n    - [**Plot your LFSR**](#visulizeplot-your-lfsr)\r\n    - [**Test properties of LFSR**](#example-6--testing-the-properties)\r\n- [**A5/1 GSM Stream Cipher**](#a51-gsm-stream-cipher-generator)\r\n- [**Geffe Genegerator**](#geffe-generator)\r\n- [**Matlab Implementation**](#matlab)\r\n- [**Cite As**](#cite-as)\r\n-----\r\n\r\n## New Updates\r\n## Plot Your LFSR with pylfsr\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/nikeshbajaj/Linear_Feedback_Shift_Register/master/images/FibanacciLFSR_2.gif\" width=\"600\"/>\r\n  <img src=\"https://raw.githubusercontent.com/nikeshbajaj/Linear_Feedback_Shift_Register/master/images/GaloisLFSR_1.gif\" width=\"600\"/>\r\n</p>\r\n\r\n## Updates:\r\n  **Version: 1.0.7:**\r\n  -  **Added Galois Configuration**\r\n  -  Improved Documentation\r\n  -  **Computing LZ complexity**\r\n\r\n  **Version: 1.0.6:**\r\n  - Fixed the bugs (1) missing initial bit (2) exception\r\n  - **Added test properties of LFSR**\r\n\t  -   **(1) Balance Property**\r\n\t  -   **(2) Runlength Property**\r\n\t  -   **(3) Autocorrelation Property**\r\n  -  **Ploting function to display LFSR**\r\n  -  **A5/1 GSM Stream Ciper Generator**\r\n  -  **Geffe Generator**\r\n\r\n\r\n# Installation\r\n\r\n## Requirement : *numpy*, *matplotlib*\r\n\r\n### with pip\r\n\r\n```\r\npip install pylfsr\r\n```\r\n\r\n\r\n### Build from the source\r\nDownload the repository or clone it with git, after cd in directory build it from source with\r\n\r\n```\r\npython setup.py install\r\n```\r\n\r\n## Examples\r\n### **Example 1**: 5-bit LFSR with feedback polynomial *x^5 + x^2 + 1*\r\n\r\n```\r\n# import LFSR\r\nimport numpy as np\r\nfrom pylfsr import LFSR\r\n\r\nL = LFSR()\r\n\r\n# print the info\r\nL.info()\r\n\r\n5 bit LFSR with feedback polynomial  x^5 + x^2 + 1\r\nExpected Period (if polynomial is primitive) =  31\r\nCurrent :\r\nState        :  [1 1 1 1 1]\r\nCount        :  0\r\nOutput bit   : -1\r\nfeedback bit : -1\r\n```\r\n\r\n\r\n```\r\nL.next()\r\nL.runKCycle(10)\r\nL.runFullCycle()\r\nL.info()\r\n```\r\n\r\n### Example 2**: 5-bit LFSR with custum state and feedback polynomial\r\n\r\n```\r\nstate = [0,0,0,1,0]\r\nfpoly = [5,4,3,2]\r\nL = LFSR(fpoly=fpoly,initstate =state, verbose=True)\r\nL.info()\r\ntempseq = L.runKCycle(10)\r\nL.set(fpoly=[5,3])\r\n```\r\n\r\n### Example 3 ## To visualize the process with 3-bit LFSR, with default counter_start_zero = True\r\n```\r\nstate = [1,1,1]\r\nfpoly = [3,2]\r\nL = LFSR(initstate=state,fpoly=fpoly)\r\nprint('count \\t state \\t\\toutbit \\t seq')\r\nprint('-'*50)\r\nfor _ in range(15):\r\n    print(L.count,L.state,'',L.outbit,L.seq,sep='\\t')\r\n    L.next()\r\nprint('-'*50)\r\nprint('Output: ',L.seq)\r\n```\r\nOutput :\r\n\r\n```\r\ncount \t        state \t\toutbit \t seq\r\n--------------------------------------------------\r\n0\t\t[1 1 1]\t\t-1\t[-1]\r\n1\t\t[0 1 1]\t\t1\t[1]\r\n2\t\t[0 0 1]\t\t1\t[1 1]\r\n3\t\t[1 0 0]\t\t1\t[1 1 1]\r\n4\t\t[0 1 0]\t\t0\t[1 1 1 0]\r\n5\t\t[1 0 1]\t\t0\t[1 1 1 0 0]\r\n6\t\t[1 1 0]\t\t1\t[1 1 1 0 0 1]\r\n7\t\t[1 1 1]\t\t0\t[1 1 1 0 0 1 0]\r\n8\t\t[0 1 1]\t\t1\t[1 1 1 0 0 1 0 1]\r\n9\t\t[0 0 1]\t\t1\t[1 1 1 0 0 1 0 1 1]\r\n10\t\t[1 0 0]\t\t1\t[1 1 1 0 0 1 0 1 1 1]\r\n11\t\t[0 1 0]\t\t0\t[1 1 1 0 0 1 0 1 1 1 0]\r\n12\t\t[1 0 1]\t\t0\t[1 1 1 0 0 1 0 1 1 1 0 0]\r\n13\t\t[1 1 0]\t\t1\t[1 1 1 0 0 1 0 1 1 1 0 0 1]\r\n14\t\t[1 1 1]\t\t0\t[1 1 1 0 0 1 0 1 1 1 0 0 1 0]\r\n--------------------------------------------------\r\nOutput:  [1 1 1 0 0 1 0 1 1 1 0 0 1 0 1]\r\n```\r\n\r\n### Example 4 ## To visualize the process with 3-bit LFSR, with default counter_start_zero = False\r\n```\r\nstate = [1,1,1]\r\nfpoly = [3,2]\r\nL = LFSR(initstate=state,fpoly=fpoly,counter_start_zero=False)\r\nprint('count \\t state \\t\\toutbit \\t seq')\r\nprint('-'*50)\r\nfor _ in range(15):\r\n    print(L.count,L.state,'',L.outbit,L.seq,sep='\\t')\r\n    L.next()\r\nprint('-'*50)\r\nprint('Output: ',L.seq)\r\n```\r\n\r\nOutput\r\n```\r\ncount \t state \t\toutbit \t seq\r\n--------------------------------------------------\r\n1\t[1 1 1]\t\t1\t[1]\r\n2\t[0 1 1]\t\t1\t[1 1]\r\n3\t[0 0 1]\t\t1\t[1 1 1]\r\n4\t[1 0 0]\t\t0\t[1 1 1 0]\r\n5\t[0 1 0]\t\t0\t[1 1 1 0 0]\r\n6\t[1 0 1]\t\t1\t[1 1 1 0 0 1]\r\n7\t[1 1 0]\t\t0\t[1 1 1 0 0 1 0]\r\n8\t[1 1 1]\t\t1\t[1 1 1 0 0 1 0 1]\r\n9\t[0 1 1]\t\t1\t[1 1 1 0 0 1 0 1 1]\r\n10\t[0 0 1]\t\t1\t[1 1 1 0 0 1 0 1 1 1]\r\n11\t[1 0 0]\t\t0\t[1 1 1 0 0 1 0 1 1 1 0]\r\n12\t[0 1 0]\t\t0\t[1 1 1 0 0 1 0 1 1 1 0 0]\r\n13\t[1 0 1]\t\t1\t[1 1 1 0 0 1 0 1 1 1 0 0 1]\r\n14\t[1 1 0]\t\t0\t[1 1 1 0 0 1 0 1 1 1 0 0 1 0]\r\n--------------------------------------------------\r\nOutput:  [1 1 1 0 0 1 0 1 1 1 0 0 1 0 1]\r\n```\r\n\r\n## Visualize & Plot LFSR\r\n```\r\nL.Viz(show=False, show_labels=False,title='R1')\r\n\r\n```\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/nikeshbajaj/Linear_Feedback_Shift_Register/master/images/5bit_0.jpg\" width=\"500\"/>\r\n</p>\r\n\r\n### Dynamic plot - Animation in notebook\r\n```\r\n%matplotlib notebook\r\nL = LFSR(initstate=[1,0,1,0,1],fpoly=[5,4,3,2],counter_start_zero=False)\r\nfig, ax = plt.subplots(figsize=(8,3))\r\nfor _ in range(35):\r\n  ax.clear()\r\n  L.Viz(ax=ax, title='R1')\r\n  plt.ylim([-0.1,None])\r\n  #plt.tight_layout()\r\n  L.next()\r\n  fig.canvas.draw()\r\n  plt.pause(0.1)\r\n\r\n```\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/nikeshbajaj/Linear_Feedback_Shift_Register/master/images/5bit_1.gif\" width=\"500\"/>\r\n</p>\r\n\r\n\r\n## Example 5  ## 23 bit LFSR with custum state and feedback polynomial\r\n```\r\nfpoly = [23,19]\r\nL1 = LFSR(fpoly=fpoly,initstate ='ones', verbose=False)\r\nL1.info()\r\n```\r\nOutput\r\n```\r\n23 bit LFSR with feedback polynomial  x^23 + x^19 + 1\r\nExpected Period (if polynomial is primitive) =  8388607\r\nCurrent :\r\n State        :  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\r\n Count        :  0\r\n Output bit   :  -1\r\n feedback bit :  -1\r\n```\r\n```\r\nseq = L1.runKCycle(100)\r\n```\r\n\r\n```seq\r\narray([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\r\n1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,\r\n1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,\r\n1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1])\r\n```\r\n##  Example 6 ## testing the properties\r\n```\r\nstate = [1,1,1,1,0]\r\nfpoly = [5,3]\r\nL = LFSR(initstate=state,fpoly=fpoly)\r\nresult  = L.test_properties(verbose=2)\r\n```\r\nOutput\r\n```\r\n1. Periodicity\r\n------------------\r\n - Expected period = 2^M-1 = 31\r\n - Pass?:  True\r\n\r\n2. Balance Property\r\n-------------------\r\n - Number of 1s = Number of 0s+1 (in a period): (N1s,N0s) =  (16, 15)\r\n - Pass?:  True\r\n\r\n3. Runlength Property\r\n-------------------\r\n - Number of Runs in a period should be of specific order, e.g. [4,2,1,1]\r\n - Runs:  [8 4 2 1 1]\r\n - Pass?:  True\r\n\r\n4. Autocorrelation Property\r\n-------------------\r\n - Autocorrelation of a period should be noise-like, specifically, 1 at k=0, -1/m everywhere else\r\n - Pass?:  True\r\n\r\n==================\r\nPassed all the tests\r\n==================\r\n```\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/nikeshbajaj/Linear_Feedback_Shift_Register/master/images/acorr_test.jpg\" width=\"500\"/>\r\n</p>\r\n\r\nTesting individual property\r\n```\r\n# get a full period sequence\r\np = L.getFullPeriod()\r\np\r\narray([0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0,\r\n       0, 1, 0, 0, 1, 0, 1, 1, 0])\r\n```\r\n\r\n```\r\nL.balance_property(p.copy())\r\n# (True, (16, 15))\r\n\r\nL.runlength_property(p.copy())\r\n# (True, array([8, 4, 2, 1, 1]))\r\n\r\nL.autocorr_property(p.copy())[0]\r\n#True\r\n```\r\n\r\n##  Example 7 ## testing the properties for non-primitive polynomial\r\n```\r\nstate = [1,1,1,1,0]\r\nfpoly = [5,1]\r\nL = LFSR(initstate=state,fpoly=fpoly)\r\nresult = L.test_properties(verbose=1)\r\n```\r\nOutput\r\n```\r\n1. Periodicity\r\n------------------\r\n - Expected period = 2^M-1 = 31\r\n - Pass?:  False\r\n\r\n2. Balance Property\r\n-------------------\r\n - Number of 1s = Number of 0s+1 (in a period): (N1s,N0s) =  (17, 14)\r\n - Pass?:  False\r\n\r\n3. Runlength Property\r\n-------------------\r\n - Number of Runs in a period should be of specific order, e.g. [4,2,1,1]\r\n - Runs:  [10  2  1  1  2]\r\n - Pass?:  False\r\n\r\n4. Autocorrelation Property\r\n-------------------\r\n - Autocorrelation of a period should be noise-like, specifically, 1 at k=0, -1/m everywhere else\r\n - Pass?:  False\r\n\r\n==================\r\nFailed one or more tests, check if feedback polynomial is primitive polynomial\r\n==================\r\n```\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/nikeshbajaj/Linear_Feedback_Shift_Register/master/images/acorr_test_npf.jpg\" width=\"500\"/>\r\n</p>\r\n\r\n\r\n### Example 8**: Get the feedback polynomial or list\r\nReference : http://www.partow.net/programming/polynomials/index.html\r\n\r\n```\r\nL = LFSR()\r\n# list of 5-bit feedback polynomials\r\nfpoly = L.get_fpolyList(m=5)\r\n\r\n# list of all feedback polynomials as a dictionary\r\nfpolyDict = L.get_fpolyList()\r\n```\r\n\r\n\r\n### Changing feedback polynomial in between\r\n```\r\nL.changeFpoly(newfpoly =[23,14],reset=False)\r\nseq1 = L.runKCycle(20)\r\n\r\n# Change after 20 clocks\r\nL.changeFpoly(newfpoly =[23,9],reset=False)\r\nseq2 = L.runKCycle(20)\r\n```\r\n\r\n# Generators\r\n# A5/1 GSM Stream cipher generator\r\n<p align=\"center\">\r\n  <img src=\"https://upload.wikimedia.org/wikipedia/commons/5/5e/A5-1_GSM_cipher.svg\" width=\"500\"/>\r\n</p>\r\n\r\nRef: https://en.wikipedia.org/wiki/A5/1\r\n\r\n```\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom pylfsr import A5_1\r\n\r\nA5 = A5_1(key='random')\r\nprint('key: ',A5.key)\r\nA5.R1.Viz(title='R1')\r\nA5.R2.Viz(title='R2')\r\nA5.R3.Viz(title='R3')\r\n\r\nprint('key: ',A5.key)\r\nprint()\r\nprint('count \\t cbit\\t\\tclk\\t R1_R2_R3\\toutbit \\t seq')\r\nprint('-'*80)\r\nfor _ in range(15):\r\n    print(A5.count,A5.getCbits(),A5.clock_bit,A5.getLastbits(),A5.outbit,A5.getSeq(),sep='\\t')\r\n    A5.next()\r\nprint('-'*80)\r\nprint('Output: ',A5.seq)\r\n\r\nA5.runKCycle(1000)\r\nA5.getSeq()\r\n\r\n```\r\n\r\n\r\n## Enhanced A5/1\r\n\r\nReference Article: **Enhancement of A5/1**: https://doi.org/10.1109/ETNCC.2011.5958486\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/nikeshbajaj/Linear_Feedback_Shift_Register/master/images/Enhanced_A51.png\" width=\"500\"/>\r\n</p>\r\n\r\n\r\n```\r\n# Three LFSRs initialzed with 'ones' though they are intialized with encription key\r\nR1 = LFSR(fpoly = [19,18,17,14])\r\nR2 = LFSR(fpoly = [23,22,21,8])\r\nR3 = LFSR(fpoly = [22,21])\r\n\r\n# clocking bits\r\nb1 = R1.state[8]\r\nb2 = R3.state[10]\r\nb3 = R3.state[10]\r\n\r\n```\r\n\r\n\r\n# Geffe Generator\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/nikeshbajaj/Linear_Feedback_Shift_Register/master/images/Geffe_0.jpg\" width=\"500\"/>\r\n</p>\r\n\r\nRef: Schneier, Bruce. Applied cryptography: protocols, algorithms, and source code in C. john wiley & sons, 2007.\r\n\tChaper 16\r\n\r\n```\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom pylfsr import Geffe, LFSR\r\n\r\nkLFSR = [LFSR(initstate='random') for _ in range(8)]  # List of 8 5-bit LFSRs with default feedback polynomial and random initial state\r\ncLFSR = LFSR(initstate='random')                      # A 5-bit LFSR with for selecting one of 8 output at a time\r\n\r\nGG = Geffe(kLFSR_list=kLFSR, cLFSR=cLFSR)\r\n\r\nprint('key: ',GG.getState())\r\nprint()\r\nfor _ in range(50):\r\n    print(GG.count,GG.m_count,GG.outbit_k,GG.sel_k,GG.outbit,GG.getSeq(),sep='\\t')\r\n    GG.next()\r\n\r\nGG.runKCycle(1000)\r\nGG.getSeq()\r\n```\r\n\r\n_______________________________________________________________________________________________\r\n\r\n# MATLAB\r\n## For matlab files download it from here\r\nFolder : https://github.com/Nikeshbajaj/Linear_Feedback_Shift_Register/tree/master/matlabfiles\r\n\r\n**Description**\r\nGenrate randon binary sequence using LFSR for any given feedback taps (polynomial),\r\nThis will also check Three fundamental Property of LFSR\r\n1. Balance Property\r\n2. Runlength Property\r\n3. Autocorrelation Property\r\n\r\n**This MATLAB Code work for any length of LFSR with given taps (feedback polynomial) -Universal, There are three files LFSRv1.m an LFSRv2.m, LFSRv3.m**\r\n\r\n### LFSRv1\r\nThis function will return all the states of LFSR and will check Three fundamental Property of LFSR\r\n(1) Balance Property (2) Runlength Property (3) Autocorrelation Property\r\n\r\n#### EXAMPLE\r\n```\r\ns=[1 1 0 0 1]\r\nt=[5 2]\r\n[seq c] =LFSRv1(s,t)\r\n```\r\n\r\n### LFSRv2\r\nThis function will return only generated sequence will all the states of LFSR, no verification of properties are done\r\nhere. Use this function to avoid verification each time you execute the program.\r\n#### EXAMPLE\r\n```\r\ns=[1 1 0 0 1]\r\nt=[5 2]\r\n[seq c] =LFSRv2(s,t)\r\n```\r\n\r\n### LFSRv3 (faster)\r\n*seq = LFSRv3(s,t,N)*\r\nthis function generates N bit sequence only. This is faster then other two functions, as this does not gives each state of LFSR\r\n\r\n#### EXAMPLE\r\n```\r\ns=[1 1 0 0 1]  \r\nt=[5 2]\r\nseq =LFSRv3(s,t,50)\r\n```\r\n\r\n\r\n\r\n## Tips\r\n* If you want to use this function in middle of any program, use LFSRv2 or LFSRv1 with verification =0.\r\n* If you want to make it fast for long length of LFSR,use LFSRv3.m\r\n\r\n______________________________________\r\n\r\n# Cite As\r\n```\r\n@software{nikesh_bajaj_2021_4726667,\r\n  author       = {Nikesh Bajaj},\r\n  title        = {Nikeshbajaj/Linear\\_Feedback\\_Shift\\_Register: 1.0.6},\r\n  month        = apr,\r\n  year         = 2021,\r\n  publisher    = {Zenodo},\r\n  version      = {1.0.6},\r\n  doi          = {10.5281/zenodo.4726667},\r\n  url          = {https://doi.org/10.5281/zenodo.4726667}\r\n}\r\n```\r\n\r\n\r\n# Contacts:\r\n\r\nIf any doubt, confusion or feedback please contact me\r\n* **Nikesh Bajaj**\r\n* http://nikeshbajaj.in\r\n* n.bajaj@imperial.ac.uk\r\n* n.bajaj@qmul.ac.uk\r\n* bajaj[dot]nikkey[AT]gmail[dot]?\r\n### PhD Student: Queen Mary University of London & University of Genoa\r\n______________________________________\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Nikeshbajaj/Linear_Feedback_Shift_Register/tarball/1.0.7",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Nikeshbajaj/Linear_Feedback_Shift_Register",
    "keywords": "lfsr linear-feedback-shift-register random generator gf(2)",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pylfsr",
    "package_url": "https://pypi.org/project/pylfsr/",
    "platform": null,
    "project_url": "https://pypi.org/project/pylfsr/",
    "project_urls": {
      "Documentation": "https://lfsr.readthedocs.io",
      "Download": "https://github.com/Nikeshbajaj/Linear_Feedback_Shift_Register/tarball/1.0.7",
      "Homepage": "https://github.com/Nikeshbajaj/Linear_Feedback_Shift_Register",
      "Say Thanks!": "https://github.com/Nikeshbajaj",
      "Source": "https://github.com/Nikeshbajaj/Linear_Feedback_Shift_Register",
      "Tracker": "https://github.com/Nikeshbajaj/Linear_Feedback_Shift_Register/issues"
    },
    "release_url": "https://pypi.org/project/pylfsr/1.0.7/",
    "requires_dist": [
      "numpy",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "Linear Feedback Shift Register",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16289334,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae559fef4b34b7390973c5faff9540b3772629f5f2c337562a9deb122a7310d0",
          "md5": "de64fe3bc9d2ff056797a91cb3780618",
          "sha256": "47168fb2171a6b3893cabaacd4d4fe6964e2d52a3d52edf2f0db0f704662fd31"
        },
        "downloads": -1,
        "filename": "pylfsr-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de64fe3bc9d2ff056797a91cb3780618",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8735,
        "upload_time": "2019-04-17T17:24:06",
        "upload_time_iso_8601": "2019-04-17T17:24:06.154798Z",
        "url": "https://files.pythonhosted.org/packages/ae/55/9fef4b34b7390973c5faff9540b3772629f5f2c337562a9deb122a7310d0/pylfsr-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eec54097cd22a6496390516b8ed5908d1403de87be6321f1b1f1a4dc0844b046",
          "md5": "5eac72107f58aab2a88a9d9e9764ddcd",
          "sha256": "d58bee10ecdd0cea39ea5d202f0a203723de198692fa700200a377c246b5605e"
        },
        "downloads": -1,
        "filename": "pylfsr-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5eac72107f58aab2a88a9d9e9764ddcd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8635,
        "upload_time": "2019-04-17T17:24:08",
        "upload_time_iso_8601": "2019-04-17T17:24:08.077698Z",
        "url": "https://files.pythonhosted.org/packages/ee/c5/4097cd22a6496390516b8ed5908d1403de87be6321f1b1f1a4dc0844b046/pylfsr-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc7ff864e8f3cf725c50ad9bb327debfc30d8e7c8f3448e3b4a0de1f012fb514",
          "md5": "ca4ebc3a0dd8581c387d8081ca44be79",
          "sha256": "1819fe2bfcd1eef12805756293c1508e28b47ead9990f7566a6c69c3d895c1d0"
        },
        "downloads": -1,
        "filename": "pylfsr-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca4ebc3a0dd8581c387d8081ca44be79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8860,
        "upload_time": "2019-04-17T17:47:02",
        "upload_time_iso_8601": "2019-04-17T17:47:02.014823Z",
        "url": "https://files.pythonhosted.org/packages/bc/7f/f864e8f3cf725c50ad9bb327debfc30d8e7c8f3448e3b4a0de1f012fb514/pylfsr-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd3eab983ed3da8804ee91fd1a87a96d55bef73ae216278df4d6065a7e67520b",
          "md5": "5cb59d72188addf4e777aeb4223ece9d",
          "sha256": "64f51fcac5ba7b3c7b365af712caa12707e158cbd5a8ea95a52621a4eeb1ffe8"
        },
        "downloads": -1,
        "filename": "pylfsr-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5cb59d72188addf4e777aeb4223ece9d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8786,
        "upload_time": "2019-04-17T17:47:03",
        "upload_time_iso_8601": "2019-04-17T17:47:03.269921Z",
        "url": "https://files.pythonhosted.org/packages/bd/3e/ab983ed3da8804ee91fd1a87a96d55bef73ae216278df4d6065a7e67520b/pylfsr-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6bd659968102c0cd2d3445dd3c1b44ff07c9bcf9222471f041187f7a10a3c9a1",
          "md5": "ab9c3f0b759e80fd9396d595dfb354ce",
          "sha256": "74504ed527b6d2f01cf94cf3e13c0b0fda258261f4a5eabf295265b64fbf1bf0"
        },
        "downloads": -1,
        "filename": "pylfsr-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab9c3f0b759e80fd9396d595dfb354ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9877,
        "upload_time": "2019-04-17T23:01:06",
        "upload_time_iso_8601": "2019-04-17T23:01:06.410166Z",
        "url": "https://files.pythonhosted.org/packages/6b/d6/59968102c0cd2d3445dd3c1b44ff07c9bcf9222471f041187f7a10a3c9a1/pylfsr-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27043061a8ea94d35eb5890925254d173d0fdfc5cca3f99d97dacf06b17d2171",
          "md5": "269121d17a1738802e91db71b0b8dee4",
          "sha256": "89d6756a8fc8382b8bd2e3031a16c715bcd63fb42a01e9dfb8409d57bf19a3c1"
        },
        "downloads": -1,
        "filename": "pylfsr-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "269121d17a1738802e91db71b0b8dee4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9858,
        "upload_time": "2019-04-17T23:01:07",
        "upload_time_iso_8601": "2019-04-17T23:01:07.809422Z",
        "url": "https://files.pythonhosted.org/packages/27/04/3061a8ea94d35eb5890925254d173d0fdfc5cca3f99d97dacf06b17d2171/pylfsr-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8589d6f14293f673fbaf7e1a9366d7d7b6f436a81240568576b8c29866839144",
          "md5": "cee4950a9d3734e060057c7d72b68def",
          "sha256": "f6e806aa799975ab3b3c3373013f60d263261b200f1db5769f7fb6d2123256f5"
        },
        "downloads": -1,
        "filename": "pylfsr-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cee4950a9d3734e060057c7d72b68def",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14503,
        "upload_time": "2021-04-21T08:12:08",
        "upload_time_iso_8601": "2021-04-21T08:12:08.311339Z",
        "url": "https://files.pythonhosted.org/packages/85/89/d6f14293f673fbaf7e1a9366d7d7b6f436a81240568576b8c29866839144/pylfsr-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f637069322a01bf5847efb37fc4d37c6cf4982f3232a00ec3c30104cd89bd5e8",
          "md5": "dee4f1ccd3148cec8642fa72d4af32be",
          "sha256": "e9e63528f412ef70d953f8a962a90d434540ede3eafb7b9295bd5fd8ba692891"
        },
        "downloads": -1,
        "filename": "pylfsr-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "dee4f1ccd3148cec8642fa72d4af32be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16616,
        "upload_time": "2021-04-21T08:12:09",
        "upload_time_iso_8601": "2021-04-21T08:12:09.489107Z",
        "url": "https://files.pythonhosted.org/packages/f6/37/069322a01bf5847efb37fc4d37c6cf4982f3232a00ec3c30104cd89bd5e8/pylfsr-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3615d4e3159dfb949607a7077c256e6ed4051631eea0aa9c44c0de97a455545a",
          "md5": "bab58c4374a8026bd17b78dd8c977c46",
          "sha256": "d1fd1176e11b7e116ba449dd547175ebde9bb0737b2f3e970b948f898ec09008"
        },
        "downloads": -1,
        "filename": "pylfsr-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bab58c4374a8026bd17b78dd8c977c46",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19136,
        "upload_time": "2021-04-29T07:20:51",
        "upload_time_iso_8601": "2021-04-29T07:20:51.862233Z",
        "url": "https://files.pythonhosted.org/packages/36/15/d4e3159dfb949607a7077c256e6ed4051631eea0aa9c44c0de97a455545a/pylfsr-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "586ea5fa839478ac27abca5c940fffb3f6f2938b035c556d872bd232d77b88b8",
          "md5": "d53e2ae3035e196d8cf27fd11d957594",
          "sha256": "cf48915e6ddcc0eb85ec140bb0dc8471575bc70c4b522a2a9420c7921734d357"
        },
        "downloads": -1,
        "filename": "pylfsr-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d53e2ae3035e196d8cf27fd11d957594",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23247,
        "upload_time": "2021-04-29T07:20:53",
        "upload_time_iso_8601": "2021-04-29T07:20:53.144013Z",
        "url": "https://files.pythonhosted.org/packages/58/6e/a5fa839478ac27abca5c940fffb3f6f2938b035c556d872bd232d77b88b8/pylfsr-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fea12ed0f9ce0037d67714214aa86bdc4da1e5a378741d51c0af15e6f139995",
          "md5": "1c6c1d895c67bea85a9bdad92bc50622",
          "sha256": "07ac5b64222bbe123d268255863bac68c5a1a76a52837087c3c5353a6fe2bc6d"
        },
        "downloads": -1,
        "filename": "pylfsr-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c6c1d895c67bea85a9bdad92bc50622",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28034,
        "upload_time": "2023-01-03T12:40:08",
        "upload_time_iso_8601": "2023-01-03T12:40:08.373678Z",
        "url": "https://files.pythonhosted.org/packages/2f/ea/12ed0f9ce0037d67714214aa86bdc4da1e5a378741d51c0af15e6f139995/pylfsr-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2aa94a911ede7ca5ada789f46e98ae1b264033f10491542ac64daf82ba9c9188",
          "md5": "18087b1702966a20c575830251cbe7a9",
          "sha256": "1f14f10a56bbff7235b6a028eaa10ebcfc3903b240da78a129cde2042c259882"
        },
        "downloads": -1,
        "filename": "pylfsr-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "18087b1702966a20c575830251cbe7a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32114,
        "upload_time": "2023-01-03T12:40:10",
        "upload_time_iso_8601": "2023-01-03T12:40:10.207422Z",
        "url": "https://files.pythonhosted.org/packages/2a/a9/4a911ede7ca5ada789f46e98ae1b264033f10491542ac64daf82ba9c9188/pylfsr-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2fea12ed0f9ce0037d67714214aa86bdc4da1e5a378741d51c0af15e6f139995",
        "md5": "1c6c1d895c67bea85a9bdad92bc50622",
        "sha256": "07ac5b64222bbe123d268255863bac68c5a1a76a52837087c3c5353a6fe2bc6d"
      },
      "downloads": -1,
      "filename": "pylfsr-1.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1c6c1d895c67bea85a9bdad92bc50622",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28034,
      "upload_time": "2023-01-03T12:40:08",
      "upload_time_iso_8601": "2023-01-03T12:40:08.373678Z",
      "url": "https://files.pythonhosted.org/packages/2f/ea/12ed0f9ce0037d67714214aa86bdc4da1e5a378741d51c0af15e6f139995/pylfsr-1.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2aa94a911ede7ca5ada789f46e98ae1b264033f10491542ac64daf82ba9c9188",
        "md5": "18087b1702966a20c575830251cbe7a9",
        "sha256": "1f14f10a56bbff7235b6a028eaa10ebcfc3903b240da78a129cde2042c259882"
      },
      "downloads": -1,
      "filename": "pylfsr-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "18087b1702966a20c575830251cbe7a9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 32114,
      "upload_time": "2023-01-03T12:40:10",
      "upload_time_iso_8601": "2023-01-03T12:40:10.207422Z",
      "url": "https://files.pythonhosted.org/packages/2a/a9/4a911ede7ca5ada789f46e98ae1b264033f10491542ac64daf82ba9c9188/pylfsr-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}