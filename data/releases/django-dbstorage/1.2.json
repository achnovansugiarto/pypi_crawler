{
  "info": {
    "author": "Akoha Inc.",
    "author_email": "adminmail@akoha.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "``django-dbstorage``\n====================\n\nA Django file storage backend for files in the database.\n\n\nInstalling\n----------\n\nThe easiest way to install ``django-dbstorage`` is to use **pip**::\n\n    pip install django-dbstorage\n\n\nQuick Start\n-----------\n\nIn your Django ``settings`` file:\n\n* Add ``'django-dbstorage'`` to ``INSTALLED_APPS``\n\n* Set ``DEFAULT_FILE_STORAGE`` to\n  ``'django_dbstorage.storage.DatabaseStorage'``\n\n* Set ``MEDIA_ROOT`` and ``MEDIA_URL`` to ``None``.\n\n\nServing files\n-------------\n\nIn your ``urls.py``, add the following to ``urlpatterns``::\n\n   url(r'^media/', include('django_dbstorage.urls'))\n\nOr, if you want to specify more options, use::\n\n   url(r'^media/', include(django_dbstorage.urls.serve()))\n\nYou should set ``settings.MEDIA_URL`` to the root of this include, in\nthis case: ``/media/``.\n\nIf you do not wish to serve files from the database, don't add\nanything to ``urls.py`` and set ``settings.MEDIA_URL`` to ``None``.\n\n\nCustomizing\n-----------\n\n``DatabaseStorage`` takes several options. To customize, subclass\nit and use that as ``DEFAULT_FILE_STORAGE``. For instance::\n\n    class MyDatabaseStorage(DatabaseStorage):\n        def __init__(self):\n            super(MyDatabaseStorage, self).__init__(location='/tmp',\n                                                    base_url='/files/',\n                                                    uniquify_names=True)\n\nAs a convenience, there is a ``NonUniquifyingDatabaseStorage`` class\nwhich does not attempt to find a unique filename when saving. This\nclass throws an ``IOError`` with the ``EEXISTS`` status code, when\nattempting to ``_save()``.\n\nThis functionality is used by other packages, such as\n`django-randomfilenamestorage`_.\n\n\n.. Links\n\n.. _django-randomfilenamestorage:\n   http://pypi.python.org/pypi/django-randomfilenamestorage",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://bitbucket.org/akoha/django-dbstorage/",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-dbstorage",
    "package_url": "https://pypi.org/project/django-dbstorage/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-dbstorage/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://bitbucket.org/akoha/django-dbstorage/"
    },
    "release_url": "https://pypi.org/project/django-dbstorage/1.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A Django file storage backend for files in the database.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 703170,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1adcbe843517671949c8ac9c15e233e4c1f7d676ca7958215ed2fbbb85ac2fc4",
        "md5": "ad075e3cec69ccd6d6b79a3e201fd98e",
        "sha256": "ef47cf9197b4761a37a30928d65a9293f772af0a6de1f9017284fc0549ea57b0"
      },
      "downloads": -1,
      "filename": "django-dbstorage-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ad075e3cec69ccd6d6b79a3e201fd98e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10519,
      "upload_time": "2011-03-20T20:27:02",
      "upload_time_iso_8601": "2011-03-20T20:27:02.182065Z",
      "url": "https://files.pythonhosted.org/packages/1a/dc/be843517671949c8ac9c15e233e4c1f7d676ca7958215ed2fbbb85ac2fc4/django-dbstorage-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}