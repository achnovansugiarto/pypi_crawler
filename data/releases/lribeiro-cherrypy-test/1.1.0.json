{
  "info": {
    "author": "Livio Ribeiro",
    "author_email": "livioribeiro@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: CherryPy",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Testing"
    ],
    "description": "===================\ncherrypy.authorizer\n===================\n\nTest utilities for cherrypy. Can be run under py.test, nosetests or unittest.\n\nBased on `code provided by Sylvain Hellegouarch <https://bitbucket.org/Lawouach/cherrypy-recipes/src/d140e6da973aa271e6b68a8bc187e53615674c5e/testing/unit/serverless/?at=default>`_\n\nThe response returned by the methods on the class ``lribeiro.cherrypy.test.CPTestCase`` is added two properties:\n``status_code`` and ``text``, providing an easier way to retrieve the response body as a string and the status code as\nan integer\n\nThe class ``lribeiro.cherrypy.test.CPTestCase`` provides facilities to setup serverless testing and has helper methods\nto perform requests.\n\nYou need to provide a ``root`` class attribute when using ``CPTestCase`` that will be the root of your test application.\n\nYou can also provide a ``preserve_cookies`` class attribute to control whether the cookies must be resent with every\nrequest. This is useful when testing authentication. The default value is ``True``.\n\n======== ==============\nmethod   description\n======== ==============\nget()    GET request\npost()   POST request\nput()    PUT request\ndelete() DELETE request\nhead()   HEAD request\npatch()  PATCH request\n======== ==============\n\nThese methods call the ``request()`` method with the specified http method set passing any additional parameter.\n\nThe ``request()`` method accepts the following parameters (none of them is required - defaults in parenthesis):\n\n============= ======================================================================\nparameter     description\n============= ======================================================================\npath          path to request ('/')\nmethod        method to request ('GET')\napp_path      path of the application to make requests against ('')\nscheme        http or https ('http')\nproto         http version ('HTTP/1.1')\ndata          dict contaning data to post on request body (None)\nheaders       dict contaning request headers to be sent (None)\ncookies       dict contaning cookies to be sent (None)\nauto_redirect whether to follow redirect responses (False)\n\\*\\*kwargs      data to be sent in querystring or request body, in case of POST or PUT\n============= ======================================================================\n\nIn addition to the request methods, the are assertion methods:\n\n=================== ======================================================================================================================\nmethod              description\n=================== ======================================================================================================================\nassert_status       assert a specific https status. Constants for http status can be found in ``lribeiro.cherrypy.test.httpstatus`` module\nassert_ok           shortcut to ``assert_status(httpstatus.OK)``\nassert_not_found    shortcut to ``assert_status(httpstatus.NOT_FOUND)``\nassert_error        shortcut to ``assert_status(httpstatus.INTERNAL_SERVER_ERROR)``\nassert_redirect     assert the the response is a redirect\nassert_redirect_to  assert the the response is a redirect and verifies the Location of the redirect\nassert_not_redirect assert that a response is not a redirect\nassert_contains     assert that the response body contains a string\nassert_not_contains assert that the response body does not contain a string\nassert_body         assert that the response body is equals to a string\nassert_header       assert that the a response header has a specific value\nassert_has_header   assert that the response has a header\nassert_cookie       assert that the a response cookie has a specific value\nassert_has_cookie   assert that the response has a cookie\nassert_path         assert that the request path_info is the same as the one given\n=================== ======================================================================================================================\n\nThere is also pythonic versions of the ``assert_`` methods in the ``unittest.TestCase`` class, like:\n\n- CPTestCase.assert_true\n- CPTestCase.assert_raises\n- CPTestCase.assert_in\n\nand so on.\n\nDeveloped under Python3.4 and tested against Python2.7, Python3.4 and pypy.\n\nExample:\n--------\n\n.. sourcecode:: python\n\n    import cherrypy\n\n    from lribeiro.cherrypy.test import CPTestCase\n\n\n    class Root:\n        @cherrypy.expose\n        def index(self):\n            return 'index'\n\n        @cherrypy.expose\n        def post(self, name):\n            return 'name = ' + name\n\n        @cherrypy.expose\n        def redir(self, to)\n            raise cherrypy.HTTPRedirect(to)\n\n\n    class TestTests(CPTestCase):\n        root = Root()\n\n        def test_index(self):\n            self.get('/')\n            self.assert_ok()\n            self.assert_not_redirect()\n\n        def test_post(self):\n            self.post('/post', name='Lorem Ipsum')\n            self.assert_contains('Lorem Ipsum')\n\n        def test_redir(self):\n            self.get('/redir', to='/some/page')\n            self.assert_redirect('/some/page')\n\n        def test_pythonic_assertion(self):\n            self.assert_true(True)\n            self.assert_equal('equal', 'equal')\n            with self.assert_raises(Exception):\n                raise Exception()",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://bitbucket.org/livioribeiro/cherrypy-test",
    "keywords": "cherrypy,test,unittest,py.test,nosetests",
    "license": "BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "lribeiro.cherrypy.test",
    "package_url": "https://pypi.org/project/lribeiro.cherrypy.test/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/lribeiro.cherrypy.test/",
    "project_urls": {
      "Homepage": "http://bitbucket.org/livioribeiro/cherrypy-test"
    },
    "release_url": "https://pypi.org/project/lribeiro.cherrypy.test/1.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Test utilities for CherryPy",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1710281,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "950e9efad41f245dbbb67090e098c9a567f6f98bda68f3d32b7f16b858e16e05",
        "md5": "ed441e43e4bd8d0707ccc68fb641147f",
        "sha256": "1407259715e07542340e62c3db3f38156de8606782e2aeff5004553817157b55"
      },
      "downloads": -1,
      "filename": "lribeiro.cherrypy.test-1.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ed441e43e4bd8d0707ccc68fb641147f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 12830,
      "upload_time": "2014-09-18T15:57:02",
      "upload_time_iso_8601": "2014-09-18T15:57:02.885925Z",
      "url": "https://files.pythonhosted.org/packages/95/0e/9efad41f245dbbb67090e098c9a567f6f98bda68f3d32b7f16b858e16e05/lribeiro.cherrypy.test-1.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb825a70d3d8c88541214d73654823a6a10f21cdfd466e3d95a7f33b9c56780e",
        "md5": "06922b56c73ed3252324b3de368256f6",
        "sha256": "3ee31f578fbc15ad49ac8e731cb911788068f868d6282be0ded499163495f1f1"
      },
      "downloads": -1,
      "filename": "lribeiro.cherrypy.test-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "06922b56c73ed3252324b3de368256f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10714,
      "upload_time": "2014-09-18T15:56:58",
      "upload_time_iso_8601": "2014-09-18T15:56:58.846277Z",
      "url": "https://files.pythonhosted.org/packages/cb/82/5a70d3d8c88541214d73654823a6a10f21cdfd466e3d95a7f33b9c56780e/lribeiro.cherrypy.test-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}