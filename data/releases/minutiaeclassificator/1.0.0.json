{
  "info": {
    "author": "Jakub Arendac",
    "author_email": "jakub.arendac105@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering :: Image Recognition"
    ],
    "description": "# MinutiaeClassificator\n\nMinutiaeClassificator is a Python library for extracting and classifiying minutiae from fingerprint images.\n\nMinutiaeClassificator contains 2 modules:\n\n* **MinutiaeNet** - module responsible for extracting minutiae points from fingerprint image. Using neural network architecture from [MinutiaeNet](https://github.com/luannd/MinutiaeNet)\n* **ClassifyNet** - module responsible for classifying extraced minutiae points. Architecture based on FineNet module of MinutiaeNet\n\n## Requirements: software\n\n* **Python 2.7** - we are planning to update module for Python 3.x in future\n* **CUDA** - MinutiaeClassificator using TensorFlow GPU acceleration\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install foobar. We reccomend to use it in **anaconda** enviroment. Installation in anaconda enviroment:\n\n```bash\nconda install cudatoolkit=<version compatible with the system CUDA>\npip install minutiaeclassificator\n```\n\n## API\n\n### Import modules\n\n* `MinutiaeClassificator.exceptions.MinutiaeClassificatorExceptions` - module containing library specific exceptions:\n\n   * `CoarseNetPathMissingException`\n   * `FineNetPathMissingException`\n   * `ClassifyNetPathMissingException`\n   * `MinutiaeNetNotLoadedException`\n   * `ClassifyNetNotLoadedException`\n\n\n* `MinutiaeClassificator.MinutiaeClassificatorWrapper` - main module contains library module `MinutiaeClassificator`. It is main module for accessing library. It contains methods:\n\n   * `get_coarse_net_path(coarse_net_path)` - used for setting path to pretrained model of submodule CoarseNet.\n   * `get_fine_net_path(fine_net_path)` - used for setting path to pretrained model of submodule FineNet.\n   * `get_classify_net_path(classify_net_path)` - used for setting path to pretrained model of submodule ClassifyNet.\n   * `load_extraction_module()` - used for compiling extraction module MinutiaeNet. Throws `CoarseNetPathMissingException` or `FineNetPathMissingException` when missing path to respective model's weights file\n   * `load_classification_module()` - used for compiling classification module ClassifyNet. Throws `ClassifyNetPathMissingException` when missing path to its weights file\n   * `get_extracted_minutiae(image_path, as_image = True)` - used for extracting minutiae points from input image. Image is determined by `image_path` (path to image file). When `as_image = True` minutiae points are marked in input image and updated image is returned as `PIL.Image`. If `as_image = False` minutiae_points are returned as `numpy.array`. If MinutiaeNet not loaded throws `MinutiaeNetNotLoadedException`\n   * `get_classified_minutiae(image_path, extracted_minutiae, as_image = True)` - used for classifying  extracted minutiae points. Accepts same arguments as previous method and additionaly `extracted_minutiae`, which is `numpy.array` in same shape as `get_extracted_minutiae` output. If ClassifyNet not loaded throws `ClassifyNetNotLoadedException`\n   * `get_extracted_and_classified_minutiae(image_path, as_image = True)` - wrapper over previous two methods. Extracts and then classify extracted minutiae.\n   * `get_single_classified_minutiae(minutiae_patch_path)` - used for classification of singe minutiae point image. Image is determined by `minutiae_patch_path`(path to image file). In version **1.0.0**, library is able to classify minutiae points into 6 classes:\n      * **ending**\n      * **bifurcation**\n      * **fragment**\n      * **enclosure**\n      * **crossbar**\n      * **other**\n\n### Models\n- **CoarseNet**: [Googledrive](https://drive.google.com/file/d/1alvw_kAyY4sxdzAkGABQR7waux-rgJKm/view?usp=sharing)    ||    [Dropbox](https://www.dropbox.com/s/gppil4wybdjcihy/CoarseNet.h5?dl=0)\n- **FineNet**: [Googledrive](https://drive.google.com/file/d/1wdGZKNNDAyN-fajjVKJoiyDtXAvl-4zq/view?usp=sharing)    ||    [Dropbox](https://www.dropbox.com/s/k7q2vs9255jf2dh/FineNet.h5?dl=0)\n- **ClassifyNet**: [Googledrive](https://drive.google.com/drive/folders/124M3iLy4yMlAtegO0OXo_bl4Q0IIgPWE)\n \n\n## Usage\n\n```python\nfrom MinutiaeClassificator.MinutiaeClassificatorWrapper import MinutiaeClassificator\nfrom MinutiaeClassificator.exceptions.MinutiaeClassificatorExceptions import \n                                                        ClassifyNetPathMissingException\n\nminutiaeClassificator = MinutiaeClassificator()\nminutiaeClassificator.get_classify_net_path('path to file')\n\ntry:\n    minutiaeClassificator.load_classification_module()\nexcept ClassifyNetPathMissingException:\n    do something...\n```\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/jakubarendac/MinutiaeClassificator/archive/1.0.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jakubarendac/MinutiaeClassificator",
    "keywords": "minutiae,extraction,classification,biometrics",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MinutiaeClassificator",
    "package_url": "https://pypi.org/project/MinutiaeClassificator/",
    "platform": "",
    "project_url": "https://pypi.org/project/MinutiaeClassificator/",
    "project_urls": {
      "Download": "https://github.com/jakubarendac/MinutiaeClassificator/archive/1.0.0.tar.gz",
      "Homepage": "https://github.com/jakubarendac/MinutiaeClassificator"
    },
    "release_url": "https://pypi.org/project/MinutiaeClassificator/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Minutiae extraction and classification tool",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7206083,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f49957cd5f8c106b149641211222090b425634b0b251b77b661dc4ec9efaf245",
        "md5": "be59cd6e0df4fb438658b719b01c99c8",
        "sha256": "2e028391d051e4604acd1d541fab54b3df51074727d34ad8adbbdddc7d3516c4"
      },
      "downloads": -1,
      "filename": "MinutiaeClassificator-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "be59cd6e0df4fb438658b719b01c99c8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39312,
      "upload_time": "2020-05-09T22:57:40",
      "upload_time_iso_8601": "2020-05-09T22:57:40.146688Z",
      "url": "https://files.pythonhosted.org/packages/f4/99/57cd5f8c106b149641211222090b425634b0b251b77b661dc4ec9efaf245/MinutiaeClassificator-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}