{
  "info": {
    "author": "makeworld",
    "author_email": "example@example.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: General",
      "Topic :: Text Processing :: Markup"
    ],
    "description": "# md2gemini\n\n[![PyPI downloads](https://img.shields.io/pypi/dm/md2gemini)](https://pypi.org/project/md2gemini)\n[![License image](https://img.shields.io/github/license/makeworld-the-better-one/md2gemini)](https://www.gnu.org/licenses/lgpl-3.0.en.html)\n\nConverter from Markdown to the [Gemini](https://gemini.circumlunar.space/) text format. It works as a Python module, or a command line application.\n\nOne of its key features is that it can convert inline links into footnotes. It also supports tables, and will convert them into Unicode (or ASCII) tables.\n\nAnything else that it doesn't understand will remain the same as when you wrote it, like strikethrough for example.\n\n## Link modes\n\nmd2gemini has several link modes, because text/gemini doesn't support inline links. These modes can be set by passing different strings to the `-l` or `--links` flags on the command line, or the `links=` argument in Python.\n\nHere is some example markdown, to show what each link mode does:\n```markdown\nThis is a paragraph with an [inline](https://example.com) link.\nHere is [another](https://example.org/) link, part of the same paragraph.\n\nThis is a second paragraph, with a different [link](https://duck.com) in it.\n```\n\nLink modes:\n\n### default\nThis is what happens when don't specify what link mode you want, or put any invalid string. It is also called \"newline\" mode. It is likely the worst link mode for reading.\n\nOutput:\n```\nThis is a paragraph with an\n=> https://example.com inline\nlink.\nHere is\n=> https://example.org/ another\nlink, part of the same paragraph.\n\nThis is a second paragraph, with a different\n=> https://duck.com link\nin it.\n```\n\n### off\nThis will remove all links.\n\nOutput:\n```\nThis is a paragraph with an inline link. Here is another link, part of the same paragraph.\n\nThis is a second paragraph, with a different link in it.\n```\n\n### paragraph\nThis will result in footnotes being added to the document, and the links for each footnote being added at the end of each paragraph.\n\nOutput:\n```\nThis is a paragraph with an inline[1] link. Here is another[2] link, part of the same paragraph.\n\n=> https://example.com 1: https://example.com\n=> https://example.org/ 2: https://example.org/\n\nThis is a second paragraph, with a different link[3] in it.\n\n=> https://duck.com 3: https://duck.com\n```\n\n### at-end\nThis is the same as **paragraph**, but all the links for the footnotes are added at the very end of the document.\n\nOutput:\n```\nThis is a paragraph with an inline[1] link. Here is another[2] link, part of the same paragraph.\n\nThis is a second paragraph, with a different link[3] in it.\n\n=> https://example.com 1: https://example.com\n=> https://example.org/ 2: https://example.org/\n=> https://duck.com 3: https://duck.com\n```\n\n### copy\nThis link mode doesn't add any footnotes inside the paragraph, but creates a link with the inline link text at the end of the paragraph. [Here's](https://user-images.githubusercontent.com/25111343/85186965-0b0e8580-b26a-11ea-8cb7-aa22ca6745af.png) a screenshot showing what this mode ends up looking like - using my [Amfora](https://github.com/makeworld-the-better-one/amfora) browser.\n\nOutput:\n```\nThis is a paragraph with an inline link. Here is another link, part of the same paragraph.\n\n=> https://example.com inline\n=> https://example.org/ another\n\nThis is a second paragraph, with a different link in it.\n\n=> https://duck.com link\n```\n\n## Installation\n```\npip3 install md2gemini\n```\nYou may also want to use the `--user` flag after `install`, to only install the package for your user.\n\nNote that this package only officially supports Python 3.\n\n## Usage\n\nIt works directly in Python, or on the command line. The command line version can work with unix pipes as well, reading files from stdin and writing to stdout if desired.\n\n### Command line\n```\nusage: md2gemini [-h] [--version] [-w] [-d DIR] [-a] [-f] [-j]\n                 [--code-tag CODE_TAG] [--img-tag IMG_TAG]\n                 [--table-tag TABLE_TAG] [-i INDENT] [-l LINKS] [-p] [-s]\n                 [-b BASE_URL] [-m]\n                 [file [file ...]]\n\nConvert markdown to gemini.\n\npositional arguments:\n  file                  Files to convert. If no files are specified then data\n                        will be read from stdin and printed to stdout.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  -w, --write           Write output to a new file of the same name, but with\n                        a .gmi extension.\n  -d DIR, --dir DIR     The directory to write files to, if --write is used.\n  -a, --ascii-table     Use ASCII to create tables, not Unicode.\n  -f, --frontmatter     Remove Jekyll and Zola style front matter before\n                        converting.\n  -j, --jekyll          Skip jekyll frontmatter when processing - DEPRECATED.\n  --code-tag CODE_TAG   What alt text to add to unlabeled code blocks.\n                        Defaults to empty string.\n  --img-tag IMG_TAG     What text to add after image links. Defaults to\n                        '[IMG]'. Write something like --img-tag='' to remove\n                        it.\n  --table-tag TABLE_TAG\n                        What alt text to add to table blocks. Defaults to\n                        'table'. Write something like --table-tag='' to remove\n                        it.\n  -i INDENT, --indent INDENT\n                        The number of spaces to use for list indenting. Put\n                        'tab' to use a tab instead.\n  -l LINKS, --links LINKS\n                        Set to 'off' to turn off links, 'paragraph' to have\n                        footnotes at the end of each paragraph, or 'at-end' to\n                        have footnotes at the end of the document. You can\n                        also set it to 'copy' to put links that copy the\n                        inline link text after each paragraph. Not using this\n                        flag, or having any other value will result in\n                        regular, newline links.\n  -p, --plain           Remove special markings from output that text/gemini\n                        doesn't support, like the asterisks for bold and\n                        italics, and inline HTML\n  -s, --strip-html      Strip all inline and block HTML from Markdown. Note\n                        that using --plain will strip inline HTML as well.\n  -b BASE_URL, --base-url BASE_URL\n                        All links starting with a slash will have this URL\n                        prepended to them.\n  -m, --md-links        Convert all links to local files ending in .md to end\n                        with .gmi instead.\n\n```\n\n### In Python\n```python\nfrom md2gemini import md2gemini\n# Load a markdown file's contents into memory and get conversion\nwith open(\"example.md\", \"r\") as f:\n    gemini = md2gemini(f.read())\n# Now the gemini variable contains your converted text as a string\n```\nOptions for the `md2gemini` function are similar to the command line ones above, except for the parameter `link_func` which cannot be used from the command line.\n```python\ndef md2gemini(markdown, code_tag=\"\", img_tag=\"[IMG]\", indent=\" \",\n              ascii_table=False, frontmatter=False, jekyll=False,\n              links=\"newline\", plain=False, strip_html=False,\n              base_url=\"\", md_links=False, link_func=None,\n              table_tag=\"table\"):\n    \"\"\"Convert the provided markdown text to the gemini format.\n    code_tag: The default alt text for code blocks.\n\n    img_tag: The text added after an image link, to indicate it's an image.\n\n    indent: How much to indent sub-levels of a list. Put several spaces, or \\\\t for a tab.\n\n    ascii_table: Use ASCII to create tables, not Unicode.\n\n    frontmatter: Remove Jekyll and Zola style front matter before converting.\n\n    jekyll: Skip jekyll frontmatter when processing - DEPRECATED.\n\n    links: Set to 'off' to turn off links, 'paragraph' to have footnotes at the end of each\n    paragraph, or 'at-end' to have footnotes at the end of the document. You can also set it\n    to 'copy' to put links that copy the inline link text after each paragraph. Not using this\n    flag, or having any other value will result in regular, newline links.\n\n    plain: Set to True to remove special markings from output that text/gemini doesn't support,\n    like the asterisks for bold and italics, as well as inline HTML.\n\n    strip_html: Strip all inline and block HTML from Markdown.\n\n    base_url: All links starting with a slash will have this URL prepended to them.\n\n    md_links: Convert all links to local files ending in .md to end with .gmi instead.\n\n    link_func: Custom function to apply to links. This function takes a string containing the link\n    URL as parameter, and should return the new link.\n\n    table_tag: \"The default alt text for table blocks.\"\n    \"\"\"\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/makeworld-the-better-one/md2gemini",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "md2gemini",
    "package_url": "https://pypi.org/project/md2gemini/",
    "platform": "",
    "project_url": "https://pypi.org/project/md2gemini/",
    "project_urls": {
      "Homepage": "https://github.com/makeworld-the-better-one/md2gemini"
    },
    "release_url": "https://pypi.org/project/md2gemini/1.8.1/",
    "requires_dist": [
      "mistune (<3,>=2.0.0a4)",
      "cjkwrap",
      "wcwidth"
    ],
    "requires_python": ">=3.5",
    "summary": "Convert Markdown to the Gemini text format",
    "version": "1.8.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12247481,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27c894b52f3b4e45c19c3f77c089d3b959bc298c506d14c255165896add26a59",
        "md5": "f7cc85488bf63c082e2106140fb5ae3e",
        "sha256": "7fd8d74c5ebada3e683489bb7b0925268ad3c2179533b0d1de9c87cc204c51a0"
      },
      "downloads": -1,
      "filename": "md2gemini-1.8.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f7cc85488bf63c082e2106140fb5ae3e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 29730,
      "upload_time": "2020-12-08T20:56:28",
      "upload_time_iso_8601": "2020-12-08T20:56:28.609433Z",
      "url": "https://files.pythonhosted.org/packages/27/c8/94b52f3b4e45c19c3f77c089d3b959bc298c506d14c255165896add26a59/md2gemini-1.8.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "90af0bde47bdc3289bbd50a187642a18b13047d9d96cfcfebcfd3a0a8a8b093a",
        "md5": "c64b0674d6283c9cd1a19c9d0809e690",
        "sha256": "3ef2bd2d9e2b4968a844a2858f721348429f3a0b5976bd1c324198538103ca55"
      },
      "downloads": -1,
      "filename": "md2gemini-1.8.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c64b0674d6283c9cd1a19c9d0809e690",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 26231,
      "upload_time": "2020-12-08T20:56:29",
      "upload_time_iso_8601": "2020-12-08T20:56:29.685419Z",
      "url": "https://files.pythonhosted.org/packages/90/af/0bde47bdc3289bbd50a187642a18b13047d9d96cfcfebcfd3a0a8a8b093a/md2gemini-1.8.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}