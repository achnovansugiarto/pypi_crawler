{
  "info": {
    "author": "makeworld",
    "author_email": "example@example.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: General",
      "Topic :: Text Processing :: Markup"
    ],
    "description": "# md2gemini\n\nConverter from Markdown to the [Gemini](https://gemini.circumlunar.space/) text format. It works as a Python module, or a command line application.\n\n## Installation\n```\npip3 install md2gemini\n```\nYou may also want to use the `--user` flag after install, to only install the package for your user.\n\nNote that this package only officially supports Python 3.\n\n## Usage\n\nIt works directly in Python, or on the command line. The command line version can work with unix pipes as well, reading files from stdin and writing to stdout if desired.\n\n### Command line\n```\nusage: md2gemini [-h] [--version] [-w] [-d DIR] [-a] [-j] [--img-tag IMG_TAG] [-i INDENT] [file [file ...]]\n\nConvert markdown to gemini.\n\npositional arguments:\n  file                  Files to convert. If no files are specified then data will be read from stdin and printed to stdout.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  -w, --write           Write output to a new file of the same name, but with a .gmi extension.\n  -d DIR, --dir DIR     The directory to write files to, if --write is used.\n  -a, --ascii-table     Use ASCII to create tables, not Unicode.\n  -j, --jekyll          Remove jekyll frontmatter from parsing and output.\n  --img-tag IMG_TAG     What text to add after image links. Defaults to '[IMG]'. Write something like --img-tag='' to remove it.\n  -i INDENT, --indent INDENT\n                        The number of spaces to use for list indenting. Put 'tab' to use a tab instead.\n```\n\n### In Python\n```python\nfrom md2gemini import md2gemini\n# Load a markdown file's contents into memory and get conversion\nwith open(\"example.md\", \"r\") as f:\n    gemini = md2gemini(f.read())\n# Now the gemini variable contains your converted text as a string\n```\nOptions for the `md2gemini` function are similar to the command line ones above.\n```python\ndef md2gemini(markdown, img_tag=\"[IMG]\", indent=\"  \", ascii_table=False, jekyll=False):\n    \"\"\"Convert the provided markdown text to the gemini format.\n\n    img_tag: The text added after an image link, to indicate it's an image.\n\n    indent: How much to indent sub-levels of a list. Put several spaces, or \\\\t for a tab.\n\n    ascii_table: Use ASCII to create tables, not Unicode.\n\n    jekyll: Skip jekyll frontmatter when processing.\n    \"\"\"\n```\n\n## Features to add\n- Footnote style links\n  - Right now, inline links are converted to Gemini links, breaking up paragraph flow. It'd be better to have an option that just adds a footnote like `[2]` beside the word, and adds links at the end of the paragraph or document.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/makeworld-the-better-one/md2gemini",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "md2gemini",
    "package_url": "https://pypi.org/project/md2gemini/",
    "platform": "",
    "project_url": "https://pypi.org/project/md2gemini/",
    "project_urls": {
      "Homepage": "https://github.com/makeworld-the-better-one/md2gemini"
    },
    "release_url": "https://pypi.org/project/md2gemini/1.0.0/",
    "requires_dist": [
      "mistune (<3,>=2.0.0a4)",
      "cjkwrap",
      "wcwidth"
    ],
    "requires_python": ">=3.5",
    "summary": "Convert Markdown to the Gemini text format",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12247481,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "39c1c2b2600a04c033bd1e30ba6d7ef065c920c98cd29ddd421aaa6ab2ba5358",
        "md5": "bad91b5c928675c81bb37e47dc1c39e2",
        "sha256": "5e7a28c1880decc84a76bba800f319be8060eee5c3b1d9bec8eb215bb954afb1"
      },
      "downloads": -1,
      "filename": "md2gemini-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bad91b5c928675c81bb37e47dc1c39e2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 18577,
      "upload_time": "2020-05-17T00:21:25",
      "upload_time_iso_8601": "2020-05-17T00:21:25.388158Z",
      "url": "https://files.pythonhosted.org/packages/39/c1/c2b2600a04c033bd1e30ba6d7ef065c920c98cd29ddd421aaa6ab2ba5358/md2gemini-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a00b20068316dcca856d34b1ff9a2b62a6ebcbd02a54ebbf59b73181364038b",
        "md5": "56276863b3c93b04be5225b0a3028727",
        "sha256": "5cfbe8326c16fa319b6c7b0b167630eaada631f09d01480cdd434903003bfbf3"
      },
      "downloads": -1,
      "filename": "md2gemini-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "56276863b3c93b04be5225b0a3028727",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 17860,
      "upload_time": "2020-05-17T00:21:27",
      "upload_time_iso_8601": "2020-05-17T00:21:27.330999Z",
      "url": "https://files.pythonhosted.org/packages/3a/00/b20068316dcca856d34b1ff9a2b62a6ebcbd02a54ebbf59b73181364038b/md2gemini-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}