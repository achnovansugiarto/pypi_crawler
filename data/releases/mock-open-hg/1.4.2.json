{
  "info": {
    "author": "Niv Ben-David",
    "author_email": "nivbend@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Testing"
    ],
    "description": "mock-open\n=========\n[![PyPI version](https://badge.fury.io/py/mock-open.svg)](https://pypi.python.org/pypi/mock-open/)\n[![Build Status](https://travis-ci.org/nivbend/mock-open.svg?branch=master)](https://travis-ci.org/nivbend/mock-open)\n[![GitHub license](https://img.shields.io/github/license/nivbend/mock-open.svg)](https://github.com/nivbend/mock-open/blob/master/LICENSE)\n[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://GitHub.com/nivbend/mock-open/graphs/commit-activity)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n\nA better mock for file I/O.\n\nInstall\n-------\n```\n$ pip install mock-open\n```\n\nclass `MockOpen`\n----------------\nThe `MockOpen` class should work as a stand-in replacement for [`mock.mock_open`][mock-open] with\nsome added features (though it tries to conform to how the builtin `open` works where the two\ndiffer):\n * Multiple file support, including a mapping-like access to file mocks by path:\n   ```python\n   from mock_open import MockOpen\n   mock_open = MockOpen()\n   mock_open[\"/path/to/file\"].read_data = \"Data from a fake file-like object\"\n   mock_open[\"/path/to/bad_file\"].side_effect = IOError()\n   ```\n\n   You can also configure behavior via the regular `mock` library API:\n   ```python\n   mock_open = MockOpen()\n   mock_open.return_value.write.side_effect = IOError()\n   ```\n\n * Persistent file contents between calls to `open`:\n   ```python\n   with patch(\"builtins.open\", MockOpen()):\n       with open(\"/path/to/file\", \"w\") as handle:\n           handle.write(\"Some text\")\n\n       with open(\"/path/to/file\", \"r\") as handle:\n           assert \"Some text\" == handle.read()\n   ```\n\n * All the regular file operations: `read`, `readline`, `readlines`, `write`, `writelines`, `seek`,\n   `tell`.\n\nAcknowledgements\n----------------\nThis library uses modified versions of tests from the [CPython source code][CPython] as part of its\ntest suite. The original tests are licensed under the [PSF license agreement][PSF License] and are\ncopyright of the Python Software Foundation.\n\n[mock-open]: http://docs.python.org/library/unittest.mock.html#mock-open\n[CPython]: https://github.com/python/cpython\n[PSF License]: https://docs.python.org/license.html#terms-and-conditions-for-accessing-or-otherwise-using-python",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hairygeek/mock-open",
    "keywords": "testing unittest test mock mocking patch patching stubs fakes doubles",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mock-open-hg",
    "package_url": "https://pypi.org/project/mock-open-hg/",
    "platform": "",
    "project_url": "https://pypi.org/project/mock-open-hg/",
    "project_urls": {
      "Homepage": "https://github.com/hairygeek/mock-open"
    },
    "release_url": "https://pypi.org/project/mock-open-hg/1.4.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A better mock for file I/O",
    "version": "1.4.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7206753,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bfc73adbd8408cd10ba7ffe0699cd662c093415002e266e71a7581fe860319a2",
        "md5": "11ae75f5cd455ac9d8eec16f8a460915",
        "sha256": "ff717646935d3b0c92f2b61a9c50bdf98e4667eeb0141656731a6a1136400132"
      },
      "downloads": -1,
      "filename": "mock-open-hg-1.4.2.tar.gz",
      "has_sig": false,
      "md5_digest": "11ae75f5cd455ac9d8eec16f8a460915",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13858,
      "upload_time": "2020-05-10T02:33:12",
      "upload_time_iso_8601": "2020-05-10T02:33:12.033926Z",
      "url": "https://files.pythonhosted.org/packages/bf/c7/3adbd8408cd10ba7ffe0699cd662c093415002e266e71a7581fe860319a2/mock-open-hg-1.4.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}