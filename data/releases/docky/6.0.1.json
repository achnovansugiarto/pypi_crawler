{
  "info": {
    "author": "Akretion",
    "author_email": "contact@akretion.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "Docky\n=================\n\ndocky : Make docker and docker compose simply !\n\n\nHistory\n----------\nThis project was initialy created for building odoo environments without effort based on docker-compose and docker\n\nStep by step we make it generic and now we also use it for our rails, ruby developpment\n\nHow it works\n---------------\n\nDocky is depend on docker-compose and use exactly the same file (so you can move from docker-compose to docky and vice-versa without any effort)\n\nDocky just make docker-compose simplier and integrate a default docker-compose file generator\n\n\nInstallation and Update\n-------------------------\n\nYou need to install docker-ce : https://docs.docker.com/install/\n\nThen install docky with python3\n\n.. code-block:: shell\n\n    sudo pip3 install docky\n\nUpdate Docky:\n------------------\n\n.. code-block:: shell\n\n    sudo pip3 install docky --upgrade\n\n\nConfiguration:\n--------------\n\nThe configuration file is in your home : '~/.docky/config.yml'\n\nverbose [True, False]:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nVerbose mode is activated by default in order to help you to learn what docky do\n\n\nenv [dev, prod, preprod]:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSpecify which kind of environment is used\n\n\nAutomatic Proxy\n---------------\n\nIntroduction\n~~~~~~~~~~~~~~~~~\n\nWhen doing dev, is quickly a mess to manage the port of your container\n\nPrevious version of docky was including a proxy based on nginx docker image.\nThis solution was adding some restriction (like using the same network for all container)\nNow we recommands to simply install traefik and dns resolver like dnsmasq on your host.\n\nDnsmasq will resolve all *.dy* domain to your localhost 127.0.0.1\n\nTraefik will route the domain name my-customer.dy to the container of your customer\n\n\n\nInstall traefik (1.7)\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDownload traefik binary\n\n.. code-block:: shell\n\n    sudo curl https://github.com/containous/traefik/releases/download/v1.7.11/traefik_linux-amd64 -o /usr/bin/traefik\n    sudo chmod 755 /usr/bin/traefik\n\n\nAdd systemd configuration in /etc/systemd/system/traefik.service\n\n.. code-block:: shell\n\n    sudo curl https://raw.githubusercontent.com/akretion/docky/master/traefik/traefik.service -o /etc/traefik/traefik.service\n\nAdd traefik configuration at /etc/traefik/traefik.toml (create missing directory before)\n\n.. code-block:: shell\n\n    sudo mkdir /etc/traefik\n    sudo curl https://raw.githubusercontent.com/akretion/docky/master/traefik/traefik.toml -o /etc/traefik/traefik.toml\n\nCreate specific user\n\n.. code-block:: shell\n\n    sudo useradd -G docker -r -s /bin/false -U -M traefik\n\nStart traefik automatically\n\n.. code-block:: shell\n\n    sudo systemctl enable traefik\n\n\nInstall Dnsmasq (For Ubuntu 18.04)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n1 Install dnsmasq with apt\n_______________________________\n\n.. code-block:: shell\n\n    sudo apt-get install dnsmasq-base\n\nNote : You just need to install the base package, you can uninstall dnsmasq package if installed by error\n\n2 Unactive systemd-resolve dns\n____________________________________\n\nEdit /etc/systemd/resolved.conf and set \"DNSStubListener=no\"\n\n.. code-block:: shell\n\n    # See resolved.conf(5) for details\n\n    [Resolve]\n    #DNS=\n    #FallbackDNS=\n    #Domains=\n    #LLMNR=no\n    #MulticastDNS=no\n    #DNSSEC=no\n    #Cache=yes\n    DNSStubListener=no   #<---- add this line here\n\n\nthen restart :\n\n\n\n.. code-block:: shell\n\n    systemctl restart systemd-resolved\n\n3 Enable and configure dnsmasq in NetworkManager\n__________________________________________________\n\nEdit the file /etc/NetworkManager/NetworkManager.conf, and add the line dns=dnsmasq to the [main] section, it will look like this:\n\n.. code-block:: shell\n\n    [main]\n    plugins=ifupdown,keyfile\n    dns=dnsmasq       #<---- just add this line\n\n    [ifupdown]\n    managed=false\n\n    [device]\n    wifi.scan-rand-mac-address=no\n\n\nLet NetworkManager manage /etc/resolv.conf\n\n.. code-block:: shell\n\n    sudo rm /etc/resolv.conf ; sudo ln -s /var/run/NetworkManager/resolv.conf /etc/resolv.conf\n\nConfigure dy (add a .dy wildcard to localhost 127.0.0.1)\n\n.. code-block:: shell\n\n    echo 'address=/.dy/127.0.0.1' | sudo tee /etc/NetworkManager/dnsmasq.d/dy-wildcard.conf\n\n\nReload NetworkManager\n\n.. code-block:: shell\n\n    sudo systemctl reload NetworkManager\n\n\ninspired from :\nhttps://askubuntu.com/questions/1029882/how-can-i-set-up-local-wildcard-127-0-0-1-domain-resolution-on-18-04\n\n\nFor Mac (dnsmasq)\n~~~~~~~~~~~~~~~~~~~\n\nGoogle is your friend by some link found, please share the doc you have found\n\nhttps://passingcuriosity.com/2013/dnsmasq-dev-osx/\nhttps://www.computersnyou.com/3786/how-to-setup-dnsmasq-local-dns/\n\n\nFor Windows (Acrylic DNS)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDnsmasq is not available on windows but you can use Acrylic DNS to do exactly the same thing.\nSee answer here: https://stackoverflow.com/questions/138162/wildcards-in-a-windows-hosts-file?answertab=votes#tab-top\n\nService Labels\n-----------------\nLabels are used by docky and traefik.\n\nTraefik Labels\n~~~~~~~~~~~~~~~\n\n.. code-block:: shell\n\n    traefik.frontend.rule: Host:mycustomer.dy\n\nWill route the domain mycustomer.dy to your container\nmore information here : https://docs.traefik.io/configuration/backends/docker/#on-containers\n\nDocky Labels\n~~~~~~~~~~~~~\n\n.. code-block:: shell\n\n    docky.access.help: http://mycustomer.dy/mystuff\n\nWill show the following help when starting the container\n\n.. code-block:: shell\n\n    The service odoo is accessible on http://mycustomer.dy/mystuff\n\n\nThe label docky.main.service and docky.user\n\n.. code-block:: shell\n\n    docky.main.service: odoo\n    docky.user: odoo\n\nAllow to define the main service of your docker compose and the user that should be user to enter in the container\n\nGetting Started\n---------------------\n\nUse docky --help\n\nBut basically docky run is your friend\n\nREAD the documentation: `Docky documentation <http://akretion.github.io/docky/master/index.html>`_\n\n\nTroubleshooting\n--------------------\n\nTo avoid issue with line wrapping with \"docky open\" please use a version of docker > to  18.06.0-ce\nsee : https://github.com/docker/compose/issues/6151\n\nOther issue :\nsee https://github.com/akretion/docky/wiki\n\nChangelog\n----------\n\nversion 6.0.0\n\n- refactor remove proxy code and use traefik\n- remove docky.yml now you must use labels on services (see doc)\n- add option \"--service=myservice\" on docky run and docky open\n\nversion 5.0.0:\n\n- Resolve mac compatibility by remove proxy code that use a mounted version of etc/hosts\n  now you need to install dnsmasq.\n  This should also solve windows compatibilty by using the local dns https://stackoverflow.com/questions/138162/wildcards-in-a-windows-hosts-file?answertab=votes#tab-top\n- Solve issue with project name in multi user env (the name is based on user + directory name)\n- Add possibility to specify the service for run, open, logs, kill, down, restart, start cmd\n  for example now you can do \"docky open db\" to open a terminal on the db server\n  or you can restart a service like \"docky restart varnish\"\n- Solve issue with missing aliases name\n- Solve issue with missing environment variable with docky open (now we use a monkey-pacthed version of docker-compose exec)\n- Fix documentation build\n- Improve docky none specific cmd to a project to be run without project.\n  For example, you can use docky help, docky proxy outside of a directory project\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/akretion/docky/",
    "keywords": "",
    "license": "AGPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "docky",
    "package_url": "https://pypi.org/project/docky/",
    "platform": "",
    "project_url": "https://pypi.org/project/docky/",
    "project_urls": {
      "Homepage": "https://github.com/akretion/docky/"
    },
    "release_url": "https://pypi.org/project/docky/6.0.1/",
    "requires_dist": [
      "docker-compose (>=1.23.1)",
      "plumbum",
      "rainbow-logging-handler",
      "python-slugify",
      "requests (==2.20.0)"
    ],
    "requires_python": "",
    "summary": "Make developpement with docker simply",
    "version": "6.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15816623,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05457932827e6f14e9c94f722e2cdd2d3fb1314ed3c0331535792a1cbf18fc80",
        "md5": "ae2b5ddab85e11a01c3a4a770866310f",
        "sha256": "1f609b42aba99da135f4c5e148078de3929385ec07801489517281bb4e93716a"
      },
      "downloads": -1,
      "filename": "docky-6.0.1-py34+-none-any.whl",
      "has_sig": false,
      "md5_digest": "ae2b5ddab85e11a01c3a4a770866310f",
      "packagetype": "bdist_wheel",
      "python_version": "py34+",
      "requires_python": null,
      "size": 27575,
      "upload_time": "2019-08-05T16:10:06",
      "upload_time_iso_8601": "2019-08-05T16:10:06.997032Z",
      "url": "https://files.pythonhosted.org/packages/05/45/7932827e6f14e9c94f722e2cdd2d3fb1314ed3c0331535792a1cbf18fc80/docky-6.0.1-py34+-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61dc790bd4eddfb24d9fc045d82cd07f38ad648107a6cb1110bca9a4b03b956b",
        "md5": "579c0fb844a71f3c00d5a1ee3c76ce6f",
        "sha256": "65f82490d3429e0d0644911d68057034f80d40a95da80617009b6c5f547d8284"
      },
      "downloads": -1,
      "filename": "docky-6.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "579c0fb844a71f3c00d5a1ee3c76ce6f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12014,
      "upload_time": "2019-08-05T16:10:08",
      "upload_time_iso_8601": "2019-08-05T16:10:08.897832Z",
      "url": "https://files.pythonhosted.org/packages/61/dc/790bd4eddfb24d9fc045d82cd07f38ad648107a6cb1110bca9a4b03b956b/docky-6.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}