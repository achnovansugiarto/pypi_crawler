{
  "info": {
    "author": "Ahmed Hosny Ibrahim",
    "author_email": "me@ahmedhosnycs.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Internet",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
      "Topic :: Security"
    ],
    "description": "# Simple API Signing for Django (SASigning)\n\n## STATUS\n* First Release (29 July 2018)\n\n-----------------------------------------------------------\n-----------------------------------------------------------\n\n\nThis package facilitates the way of API Signing in Django projects. This can be used when you are intending to build an API to add an extra layer of security. One of the key features of this package is that it tries to maximaize the customization of security.\n\nIf you want to understand more about how the API signing works, please check *Links section* below.\n\n## Quick Start\nYou can use this package in two modes:\n\n1. As a global middleware request signing.\n2. As a Django Rest Framework permission class.\n\n* First, install the package, run the following command:\n```sh\npip install drf-simple-api-signing\n```\n\n* Add your `Secret Key` that will be used in signature computation.\n```py\nSA_SIGNING_SECRET_KEY = 'some-random-secret-key'\n```\n\nBy adding this setting, your signature will be calculated using this secret key.\n\n\nBy default, expected signature will be constructed using the following attributes:\n\n    * Endpoint (request.path)\n    * Method (GET, POST, PUT, ...)\n    * SA_SIGNING_SECRET_KEY\n    with empty delimeter and sha256 as a hashing function.\n\n### Global Middlware Mode\n\n\n* Add ***SASigningMiddleware*** to your `MIDDLEWARE` setting like this:\n\n\n```py\n    MIDDLEWARE = [\n        'django.middleware.security.SecurityMiddleware',\n        'django.contrib.sessions.middleware.SessionMiddleware',\n        'django.middleware.common.CommonMiddleware',\n        'django.middleware.csrf.CsrfViewMiddleware',\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        'django.contrib.messages.middleware.MessageMiddleware',\n        'django.middleware.clickjacking.XFrameOptionsMiddleware',\n        # Add the end of middlewares\n        'simple_api_signing.common.middleware.SASigningMiddleware',\n    ]\n```\n\n### DRF Permission Class\n\n* Inside a view, you can import the ***SASigningPermission*** permission.\n\n```py\nfrom simple_api_signing.common.rest_permission import SASigningPermission\n\n\nclass APIViewSet(ViewSet):\n    permission_classes = (SASigningPermission, )\n    ...\n    ...\n```\n\n* You can also add this class in `settings.py`\n\n```py\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': {\n        'simple_api_signing.common.rest_permission. SASigningPermission',\n    }\n}\n```\n\n\n***NOTE:*** **Signature should always be sent as a Request Header with name `SIGNATURE`.**\n\n### Signature Setting Customization\n\nYou can customize how the signature is computed using the following settings.\n\n\n\n**`SA_SIGNING_SECRET_KEY`**\n\nRequired String. It is the secret key used in signature computation in both backend and API consumer.\n\n***(SECURITY Caution):***\n\nThis secret key should be passed to API consumer in a secure way.\n\nThis version supports only one consumer with one secret key\n\n\n**`SA_SIGNING_DELIMETER`**\n\nOptional String. By default `''`\n\n**`SA_SIGNING_FIELDS`**\n\nOptional List. by default `['path', 'method']`.\n\nIt is a list of attributes that are resolved from `request` object.\n\nIf not found in `request` object, it tries to be resolved from `request.META`.\n\nIf not found a `ValueError` exception is raised.\n\n**`SA_SIGNING_HASH_FUNCTION`**\n\nOptional String. By default `sha256`.\n\nYou can use any hash function from `hashlib` [library](https://docs.python.org/3/library/hashlib.html).\n\n\n## Links\n* [API Request Signing in Django](https://medium.com/elements/api-request-signing-in-django-bc9389201871)\n\n## Contribution\n\nWe encourage developers to contribute, so please feel free to fix bugs, improve things, provide documentation.\n\nContribution steps are simple:\n\n1. Create an issue and explain your feature/bugfix.\n2. This indeed should initiate the discussion about it.\n3. Once it is approved, it will be labeled with `accepted`.\n4. Fork the repo and make sure that all unit tests are working on your development environment.\n5. Create a branch from `develop`.\n6. Before submitting a Pull Request, make sure to rebase with the latest thing on `develop`.\n7. Collaborators will review, then you have to address their comments in your PR.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "api_signing,simple_api_signing,django",
    "license": "GNU GENERAL PUBLIC LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-simple-api-signing",
    "package_url": "https://pypi.org/project/drf-simple-api-signing/",
    "platform": "",
    "project_url": "https://pypi.org/project/drf-simple-api-signing/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/drf-simple-api-signing/1.0.1/",
    "requires_dist": [
      "django (>=1.10.0)",
      "djangorestframework (>=3.0.0)"
    ],
    "requires_python": "",
    "summary": "A simple Django package to facilitate request signing.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4162310,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "767b22e6c645331753f1f02ebfbbb27064458ce850e77aed2cc61d2eeca439e9",
        "md5": "fe43f9d4419c5c7a7c567667f11d0c6a",
        "sha256": "fa834fef9af2e8d84c8a7fa21dd7eef3c8eaccf8c0391a4d3bb3a6d7cc6d79aa"
      },
      "downloads": -1,
      "filename": "drf_simple_api_signing-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fe43f9d4419c5c7a7c567667f11d0c6a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8170,
      "upload_time": "2018-07-29T19:47:46",
      "upload_time_iso_8601": "2018-07-29T19:47:46.289757Z",
      "url": "https://files.pythonhosted.org/packages/76/7b/22e6c645331753f1f02ebfbbb27064458ce850e77aed2cc61d2eeca439e9/drf_simple_api_signing-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30792b0a385d4a3aa7ecb079d2add35af1b87235afde88ca25d275aba4c67fbb",
        "md5": "3dc498775bb58d0f808569c27d5ea6fa",
        "sha256": "cefd67bfd5b0fbf93c7bf838cb2043bf7cffbc4b08d0422f9df8e245bbcb4f68"
      },
      "downloads": -1,
      "filename": "drf-simple-api-signing-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3dc498775bb58d0f808569c27d5ea6fa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19871,
      "upload_time": "2018-07-29T19:47:47",
      "upload_time_iso_8601": "2018-07-29T19:47:47.692628Z",
      "url": "https://files.pythonhosted.org/packages/30/79/2b0a385d4a3aa7ecb079d2add35af1b87235afde88ca25d275aba4c67fbb/drf-simple-api-signing-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}