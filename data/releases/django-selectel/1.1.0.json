{
  "info": {
    "author": "KokocGroup",
    "author_email": "dev@kokoc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "django\\_selectel\n================\n\nThe file store in the `Selectel cloud\nstore <https://selectel.ru/services/cloud/storage/>`__ for Django\n\nStorage and CDN creation\n------------------------\n\n-  Log in to your personal `account <https://my.selectel.ru/login/>`__\n   in Selectel.\n-  Create a `new user <https://my.selectel.ru/storage/users>`__ to work\n   with the store.\n-  `Create a new <https://my.selectel.ru/storage/containers>`__ private\n   or public container.\n\nInstallation\n------------\n\nInstall using ``pip``...\n\n::\n\n    pip install django_selectel\n\nIn ``settings.py`` add the following:\n\n::\n\n    INSTALLED_APPS = (\n        ...\n        'django_selectel',\n    )\n\nSettings\n--------\n\nAll settings are optional, you can specify them when initializing the\nstorage class\n\n::\n\n    SELECTEL_STORAGE = {\n        \"USER\": \"\",\n        \"PASSWORD\": \"\",\n        \"DOMAINS\": {},\n        \"OVERWRITE_FILES\": False,\n        \"USE_GZ\": False,\n        \"AUTH_URL\": \"https://auth.selcdn.ru/\",\n        \"API_THRESHOLD\": 30 * 60,\n        \"API_MAX_RETRY\": 3,\n        \"API_RETRY_DELAY\": 0.1\n    }\n\n    # or\n\n    from django_selectel.storages import ApiStorage\n\n    cdn_storage = ApiStorage(\n        user=\"\",\n        password=\"\",\n        domains={},\n        use_gz=False,\n        overwrite_files=False\n    )\n\n**USER**\n^^^^^^^^\n\nThe username of the storage that is available\n\n**PASSWORD**\n^^^^^^^^^^^^\n\nPassword from the user\n\n**DOMAINS**\n^^^^^^^^^^^\n\nAssociate a domain with a specific container. You can bind the domain in\nthe container settings\n\nExample:\n\n::\n\n    \"DOMAINS\": {\n        \"my_public_container\": \"https://cdn.mysite.com\"\n    }\n\n**OVERWRITE\\_FILES**\n^^^^^^^^^^^^^^^^^^^^\n\nAllows you to overwrite files when the name is repeated\n\n**USE\\_GZ**\n^^^^^^^^^^^\n\nFor the storage of files will use the algorithm of compression\n`Gzip <http://www.gzip.org/zlib/rfc-gzip.html>`__. This will reduce the\nvolume of the container and transmitted traffic\n\n    **Warning:** It is **not recommended for use in public containers**,\n    since the files that will be downloaded directly from the CDN\n    without processing will be in Gzip format\n\n**AUTH\\_URL**\n^^^^^^^^^^^^^\n\nURL to get a token to work with the API\n\n**API\\_THRESHOLD**\n^^^^^^^^^^^^^^^^^^\n\nIf the token expires less than the specified time (in seconds), it\nautomatically updates\n\n**API\\_MAX\\_RETRY**\n^^^^^^^^^^^^^^^^^^^\n\nThe maximum number of attempts to download the file. Helps avoid errors\nwhen the connection is not stable.\n\n**API\\_RETRY\\_DELAY**\n^^^^^^^^^^^^^^^^^^^^^\n\nDelay in seconds between attempts\n\nUsing\n-----\n\nIn ``settings.py`` add the following:\n\n::\n\n    SELECTEL_STORAGE = {\n        \"USER\": \"MyUserName\",\n        \"PASSWORD\": \"MyPassword\",\n    }\n\nThe remaining settings can be omitted, because are not required, they\nwill be used as default values if they are not passed as a class\nparameter\n\nCreate a model with a file field that will work with the cloud-based\nfile system\n\n::\n\n    from django.db import models\n    from django_selectel.storages import ApiStorage\n    from django.core.files.base import ContentFile\n\n    class Image(models.Model):\n        ...\n        # for a public container\n        file = models.FileField(upload_to='my_public_container', storage=ApiStorage()) \n        # for a private container\n        file = models.FileField(upload_to='my_private_contrainer', storage=ApiStorage(use_gz=True))\n\n    with open(\"my_image.jpg\") as fh:\n        Image.objects.create(\n            ...\n            file=fh\n        )\n    image = Image.objects.first()\n    print image.file.read()\n    print image.size\n    image.file.delete()\n\nThe first directory in the upload\\_to path describes which container the\nrecord will be written to. So you can use an unlimited number of\ncontainers. You can specify a function that will return the path\n\n::\n\n    from datetime import date\n    from django.db import models\n    from django_selectel.storages import ApiStorage\n\n    def image_upload_to(instance, filename):\n        return \"my_container/{:%Y-%m-%d}/{}\".format(date.today(), filename)\n\n    class Image(models.Model):\n        ...\n        file = models.FileField(upload_to=image_upload_to, storage=ApiStorage())\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/KokocGroup/django_selectel/tarball/v1.1.0",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/KokocGroup/django_selectel",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-selectel",
    "package_url": "https://pypi.org/project/django-selectel/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-selectel/",
    "project_urls": {
      "Download": "https://github.com/KokocGroup/django_selectel/tarball/v1.1.0",
      "Homepage": "https://github.com/KokocGroup/django_selectel"
    },
    "release_url": "https://pypi.org/project/django-selectel/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The file store in the Selectel cloud store for Django",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11758428,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9faf135cabc259d643c700ad694665ecdbff6b0f45f3bd5b6b70d88a2c5d426",
        "md5": "256b7d6636e7ddc8d0b6295c0e3f9683",
        "sha256": "e7e45771e114c3cb0f1c6749d4afcd7b9efb326d41f22ba116ae9a15d8ff5905"
      },
      "downloads": -1,
      "filename": "django_selectel-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "256b7d6636e7ddc8d0b6295c0e3f9683",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6603,
      "upload_time": "2017-10-27T16:36:56",
      "upload_time_iso_8601": "2017-10-27T16:36:56.056559Z",
      "url": "https://files.pythonhosted.org/packages/b9/fa/f135cabc259d643c700ad694665ecdbff6b0f45f3bd5b6b70d88a2c5d426/django_selectel-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}