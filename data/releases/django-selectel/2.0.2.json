{
  "info": {
    "author": "KokocGroup",
    "author_email": "dev@kokoc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "django_selectel\n===================\n\n\nThe file store in the [Selectel cloud store](https://selectel.ru/services/cloud/storage/) for Django\n\nStorage and CDN creation\n-------------\n - Log in to your personal [account](https://my.selectel.ru/login/) in\n   Selectel. \n - Create a [new user](https://my.selectel.ru/storage/users)\n   to work with the store.\n - [Create a new](https://my.selectel.ru/storage/containers) private or public\n   container.\n\nInstallation\n-------------\nInstall using `pip`...\n\n    pip install django_selectel\n\nIn `settings.py` add the following:\n\n    INSTALLED_APPS = (\n\t    ...\n\t    'django_selectel',\n\t)\n\nSettings\n-------------------\nAll settings are optional, you can specify them when initializing the storage class\n\n    SELECTEL_STORAGE = {\n\t    \"USER\": \"\",\n\t    \"PASSWORD\": \"\",\n\t    \"DOMAINS\": {},\n\t    \"OVERWRITE_FILES\": False,\n\t    \"USE_GZ\": False,\n\t    \"AUTH_URL\": \"https://auth.selcdn.ru/\",\n\t    \"API_THRESHOLD\": 30 * 60,\n\t    \"API_MAX_RETRY\": 3,\n\t    \"API_RETRY_DELAY\": 0.1\n\t}\n\n\t# or\n\n\tfrom django_selectel.storages import ApiStorage\n\n\tcdn_storage = ApiStorage(\n\t\tuser=\"\",\n\t\tpassword=\"\",\n\t\tdomains={},\n\t\tuse_gz=False,\n\t\toverwrite_files=False\n\t)\n\n#### **USER**\nThe username of the storage that is available\n\n#### **PASSWORD**\nPassword from the user\n\n#### **DOMAINS**\n\nAssociate a domain with a specific container. You can bind the domain in the container settings\n\nExample:\n\n    \"DOMAINS\": {\n\t    \"my_public_container\": \"https://cdn.mysite.com\"\n    }\n\n#### **OVERWRITE_FILES**\nAllows you to overwrite files when the name is repeated\n\n#### **USE_GZ**\nFor the storage of files will use the algorithm of compression [Gzip](http://www.gzip.org/zlib/rfc-gzip.html). This will reduce the volume of the container and transmitted traffic\n\n> **Warning:**\n> It is **not recommended for use in public containers**, since the files that will be downloaded directly from the CDN without processing will be in Gzip format\n\n#### **AUTH_URL**\n\nURL to get a token to work with the API\n\n#### **API_THRESHOLD**\n\nIf the token expires less than the specified time (in seconds), it automatically updates\n\n#### **API_MAX_RETRY**\nThe maximum number of attempts to download the file.\nHelps avoid errors when the connection is not stable.\n\n#### **API_RETRY_DELAY**\nDelay in seconds between attempts\n\nUsing\n-------------------\n\nIn `settings.py` add the following:\n\n    SELECTEL_STORAGE = {\n\t    \"USER\": \"MyUserName\",\n\t    \"PASSWORD\": \"MyPassword\",\n\t}\nThe remaining settings can be omitted, because are not required, they will be used as default values if they are not passed as a class parameter\n\nCreate a model with a file field that will work with the cloud-based file system\n\n    from django.db import models\n    from django_selectel.storages import ApiStorage\n    from django.core.files.base import ContentFile\n\n\tclass Image(models.Model):\n\t\t...\n\t\t# for a public container\n\t\tfile = models.FileField(upload_to='my_public_container', storage=ApiStorage()) \n\t\t# for a private container\n\t\tfile = models.FileField(upload_to='my_private_contrainer', storage=ApiStorage(use_gz=True))\n\n\twith open(\"my_image.jpg\") as fh:\n\t\tImage.objects.create(\n\t\t\t...\n\t\t\tfile=fh\n\t\t)\n\timage = Image.objects.first()\n\tprint image.file.read()\n\tprint image.size\n\timage.file.delete()\n\nThe first directory in the upload_to path describes which container the record will be written to. So you can use an unlimited number of containers.\nYou can specify a function that will return the path\n\n    from datetime import date\n    from django.db import models\n    from django_selectel.storages import ApiStorage\n\n    def image_upload_to(instance, filename):\n        return \"my_container/{:%Y-%m-%d}/{}\".format(date.today(), filename)\n\n\tclass Image(models.Model):\n\t\t...\n\t\tfile = models.FileField(upload_to=image_upload_to, storage=ApiStorage())\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/KokocGroup/django_selectel/tarball/v2.0.2",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/KokocGroup/django_selectel",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-selectel",
    "package_url": "https://pypi.org/project/django-selectel/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-selectel/",
    "project_urls": {
      "Download": "https://github.com/KokocGroup/django_selectel/tarball/v2.0.2",
      "Homepage": "https://github.com/KokocGroup/django_selectel"
    },
    "release_url": "https://pypi.org/project/django-selectel/2.0.2/",
    "requires_dist": [
      "requests (==2.18.4)"
    ],
    "requires_python": "",
    "summary": "The file store in the Selectel cloud store for Django",
    "version": "2.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11758428,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11b0a340035035f17cceb206c5f625a74fb334f1d141b8eb4c0cbb01eed814ff",
        "md5": "58b95853609f69c9684f3fe728413744",
        "sha256": "52e56bc055e3d8d258397958e235b240269fc6bc75a93002fc15b2be62dd0de8"
      },
      "downloads": -1,
      "filename": "django_selectel-2.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "58b95853609f69c9684f3fe728413744",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7920,
      "upload_time": "2019-02-20T15:09:21",
      "upload_time_iso_8601": "2019-02-20T15:09:21.079472Z",
      "url": "https://files.pythonhosted.org/packages/11/b0/a340035035f17cceb206c5f625a74fb334f1d141b8eb4c0cbb01eed814ff/django_selectel-2.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce47f3a648249e55b8b5109185147a5269c9a7e0ce85ea614a3ea91cadfe43b2",
        "md5": "5b385864c9448788d8e3adef87eeb727",
        "sha256": "f567230b84aa9793207d1fd7073cded6f141c20cb06d9e07f405b914baa0ed68"
      },
      "downloads": -1,
      "filename": "django_selectel-2.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5b385864c9448788d8e3adef87eeb727",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6586,
      "upload_time": "2019-02-20T15:09:23",
      "upload_time_iso_8601": "2019-02-20T15:09:23.583201Z",
      "url": "https://files.pythonhosted.org/packages/ce/47/f3a648249e55b8b5109185147a5269c9a7e0ce85ea614a3ea91cadfe43b2/django_selectel-2.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}