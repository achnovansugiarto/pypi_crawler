{
  "info": {
    "author": "Gabriel Passos, Flávia C. Gachet",
    "author_email": "gabrielpassos97@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# matmov - educaMat\nProjeto back-end do Desafio Unisoma - 2020\n\nGabriel Passos - IMECC - UNICAMP\n\nFlávia C. Gachet - FCA - UNICAMP\n\n## Instalação\nOferecemos duas maneiras para instalar o program. A primeira delas é manual e requer uma pasta com os arquivos do pacote desenvolvido no local em que o programa será executado, além de instalação ou atualização manual de pacotes de terceiros (descritos na seção Pacotes e Versões). Observamos que houve uma\natualização da versão do *ortools*.\n\nO pacote desenvolvido também foi disponibilizado no *PyPI* para fácil instalação e execução. Nesse caso, se você possuir o *pip* instalado, basta executar:\n```sh\n$ pip install matmov\n```\nAlgumas outras possibilidades para instalação através do *pip*:\n```sh\n$ phyton -m pip install matmov\n$ pip3 install matmov\n$ python3 -m pip install matmov\n```\n\nObs: a opção a ser usada pode depender de como o Python 3 está instalado no seu computador.\n\nCom a instalação executada pelo *PyPI*, basta descompactar o arquivo `instalacaoPip.zip` e executar o arquivo `main.py` como sera indicado posteriormente.\n\nCaso seja preferível não usar o *PyPI*, mas sim rodar diretamente com os arquivos *.py* desenvolvidos, os arquivos necessários foram encaminhados por e-mail e estão disponíveis no repositório: [https://github.com/gabpassos/matmov](https://github.com/gabpassos/matmov).\n\nPara rodar com os arquivos do pacote na pasta, sem instalar pelo *PyPI*, basta descompactar o arquivo `instalacaoLocal.zip` e executar o arquivo `main.py` como sera indicado posteriormente.\n\n## Executando o programa\nO conteúdo da pasta em que o programa será executado depende do método de instalação utilizado, entretanto, os anexos enviados contemplam as duas possibilidades de forma que facilite o processo de execução e avaliação. Destacamos que tudo o que esta descrito aqui sera enviado em anexo e está também disponível no [repositório do GitHub](https://github.com/gabpassos/matmov)\n\nNo local de sua preferência para executar nosso código deve existir a pasta `data`. Deve haver também um arquivo `main.py` com um conteúdo apropriado (arquivo que executa os metodos do pacote desenvolvido). A pasta `data` possui os arquivos *SQLite database* com os casos de teste.\n\nSe a instalação for feita pelo *PyPI*, basta editar a main da forma que for desejável e então executar o arquivo `main.py`. Caso seja preferível rodar com os arquivos diretamente, sem instalar pelo *PyPI*, deve haver uma terceira pasta, com nome `matmov` que contém os arquivos do pacote (enviada em anexo). Em seguida, basta editar a main da forma que for desejável e então executar o arquivo `main.py`.\n\n## Estrutura da `main.py`\n\n```python\nimport matmov as mm\n\n#Para selecionar o arquivo, basta comentar as linhas de forma adequada:\n#arquivo = 'cenario_2.db'\n#arquivo = 'cenario_5.db'\narquivo = 'original.db'\n#arquivo = 'original2020.db'\n#arquivo = 'otimizaNoAno.db'\n#arquivo = 'reduzirVerba.db'\n#arquivo = 'juntaTurmaCont.db'\n#arquivo = 'addQuartoAnoEM.db'\n\n############################################\n# - Solver padrao: CP-SAT (CBC tambem pode ser utilizado)\n# - somenteTurmasObrig: variavel binaria que exibe ou nao os dados de turmas nao\n#   ativas\ndatabase = 'data/' + arquivo\nMatMov = mm.modelo(databasePath= database, somenteTurmasObrig= True)\n\nMatMov.leituraDadosParametros()\n\nMatMov.Solve()\n\nMatMov.exportaSolucaoSQLite()\n\n############################################\n##  Opcional  ##\nMatMov.estatisticaSolver()\n\nMatMov.estatisticaProblema()\n\nMatMov.analiseGrafica()\n```\nAo comentar ou \"descomentar\" as linhas que definem a variável `arquivo`, seleciona-se\nqual conjunto de dados será executado e resolvido.\n\nRemovendo as linhas com `MatMov.estatisticaSolver()`, `MatMov.estatisticaProblema()` e\n`MatMov.analiseGrafica()`, as suas respectivas informações irão para de ser exibidas na\ntela e as figuras não serão mais geradas ou atualizadas. Os demais metodos devem ser\nexecutados.\n\n### Resumo de instalação e execução\n- Instalação pelo *PyPI*: instalar pelo *pip* e então extrair os arquivos de\n`instalacaoPip.zip` e executar `main.py`.\n\n- Instalação pelo local: extrair os arquivos de `instalacaoLocal.zip` e executar `main.py`.\n\n## Um pouco sobre os cenários testados\nOs cenários testados:\n- `cenario_2.db`: cenario enviado pela UniSoma em preparação para fase final.\n- `cenario_5.db`: cenario enviado pela UniSoma em preparação para fase final.\n- `original.db`: arquivo original.\n- `original2020.db`: encontramos uma inconsistência no ano de referência em alguns alunos de formulário. O aluno se inscreveu em 2020 mas o ano de referência é 2019. Os dados em `original2020.db` corrigem essa inconsistência.\n- `otimizaNoAno.db`: considera resolucao do problema no ano de 2020\n- `reduzirVerba.db`: verba reduzida para 15000\n- `juntaTurmaCont.db`: remoção de alguns alunos de continuidade para ver se o método realmente junta turmas de continuidade quando possível.\n- `addQuartoAnoEM.db`: adição do 4º ano do ensino médio.\n\nObs: todos os cenários consideram a remoção dos CPF's repetidos e todos (exceto o `original.db`) tratam da inconsistência do ano de referência.\n\n## Pacotes e versões\nO pacote foi desenvolvido em Python 3 e testado nas versões Python 3.7.2 64-bit e Python 3.8.2 64-bit. Assim, espera-se que o pacote não encontre problemas em versões maiores que 3.7 do Python 3. Seguem os principais pacotes externos do Python utilizados nessa primeira versão do programa:\n\n| Pacote | Versão |\n| ------ | ------ |\n| *numpy* | 1.19.2 |\n| *pandas* | 1.1.2 |\n| *matplotlib* | 3.3.2 |\n| *ortools* |  8.0.8283 |\n\nForam utilizados alguns pacotes da biblioteca *standard* do Python 3: *math, sqlite3, time, datetime, string, os* e *statistics*. Esses pacotes não necessitam de instalação pois acompanham diretamente a instalação do Python 3.\n\nObs 1: o ortools requer que a versão do Python 3 instalada seja de 64-bit.\n\nObs 2: as funções utilizadas da biblioteca *os* são independentes de sistema operacional.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gabpassos/matmov",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matmov",
    "package_url": "https://pypi.org/project/matmov/",
    "platform": "",
    "project_url": "https://pypi.org/project/matmov/",
    "project_urls": {
      "Homepage": "https://github.com/gabpassos/matmov"
    },
    "release_url": "https://pypi.org/project/matmov/1.1.0/",
    "requires_dist": [
      "ortools (>=8.0.0)",
      "pandas (<2.*,>=1.1.2)",
      "numpy (<2.*,>=1.19.2)",
      "matplotlib (<4.*,>=3.3.2)"
    ],
    "requires_python": ">=3.7",
    "summary": "Solver para o problema de alocação de alunos na ONG Matemática em Movimento",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8498764,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a779f9691c14dea51106d50ce0e2eaafa19ee9e9e5f6722dd042094ff9bb576",
        "md5": "90550be88b5f965b0601766f1d3a3a20",
        "sha256": "4c8c2cfd86453b274d4098284354a1962a506f52d6b3f1ae0e449468a110cecf"
      },
      "downloads": -1,
      "filename": "matmov-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "90550be88b5f965b0601766f1d3a3a20",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 24460,
      "upload_time": "2020-10-26T01:38:05",
      "upload_time_iso_8601": "2020-10-26T01:38:05.060838Z",
      "url": "https://files.pythonhosted.org/packages/3a/77/9f9691c14dea51106d50ce0e2eaafa19ee9e9e5f6722dd042094ff9bb576/matmov-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "14018cf8407976de675e7172937f8c57359b4e96dc0ee215ac726586db032128",
        "md5": "1b2fe5a00bb2ddf16c909e4699d3a2f3",
        "sha256": "31449c5c527f7a60342c8239e860f8e7e77f4102d4b2f5894e64ab053742c389"
      },
      "downloads": -1,
      "filename": "matmov-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1b2fe5a00bb2ddf16c909e4699d3a2f3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 24265,
      "upload_time": "2020-10-26T01:38:07",
      "upload_time_iso_8601": "2020-10-26T01:38:07.696267Z",
      "url": "https://files.pythonhosted.org/packages/14/01/8cf8407976de675e7172937f8c57359b4e96dc0ee215ac726586db032128/matmov-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}