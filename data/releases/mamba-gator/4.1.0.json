{
  "info": {
    "author": "Continuum Analytics, Jupyter Development Team",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Gator\n\nThe Mamba Navigator, a Web UI for managing conda environments\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/mamba-org/gator/master?urlpath=lab)\n[![Install with conda](https://anaconda.org/conda-forge/mamba_gator/badges/installer/conda.svg)](https://anaconda.org/conda-forge/mamba_gator)\n[![npm](https://img.shields.io/npm/v/@mamba-org/gator-lab.svg?style=flat-square)](https://www.npmjs.com/package/@mamba-org/gator-lab)\n[![Github Actions Status](https://github.com/mamba-org/gator/workflows/Test/badge.svg)](https://github.com/mamba-org/gator/actions?query=workflow%3ATest)\n[![Coverage Status](https://coveralls.io/repos/github/mamba-org/gator/badge.svg?branch=master)](https://coveralls.io/github/mamba-org/gator?branch=master)\n[![Swagger Validator](https://img.shields.io/swagger/valid/3.0?specUrl=https%3A%2F%2Fraw.githubusercontent.com%2Fmamba-org%2Fgator%2Fmaster%2Fmamba_gator%2Frest_api.yml)](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/mamba-org/gator/master/mamba_gator/rest_api.yml)\n\nProvides Conda/Mamba environment and package management as a [standalone application](#Navigator) or as extension for [Jupyter Notebook](#Classical-Jupyter-Notebook) and [JupyterLab](#JupyterLab).\n\n## Install\n\n_Requirements_\n\n- conda >= 4.5 or mamba >=0.5\n- notebook >= 4.3\n- JupyterLab 2.x (for the jupyterlab extension only)\n\n> Starting from 3.4, this extension will use [mamba](https://github.com/mamba-org/mamba) instead of `conda` if it finds it.\n\nTo install in the classical notebook:\n\n```shell\nconda install -c conda-forge mamba_gator\n```\n\nTo install in the JupyterLab:\n\n```shell\nconda install -c conda-forge jupyterlab mamba_gator\njupyter labextension install @mamba-org/gator-lab\n```\n\n> Optionally, you could install [`jupyterlab-tour`](https://github.com/fcollonval/jupyterlab-tour) to\n> add a help tour for the conda packages manager.\n\n## JupyterLab\n\nThis extension adds a new entry _Conda Packages Manager_ in the _Settings_ menu.\n\n> The first time, it can take quite some time to build the available packages list. But once it is obtained,\n> it will be cached and updated to the background to have a smoother user experience.\n\n![jupyterlab_conda_extension](packages/labextension/jupyterlab_conda.gif)\n\n## Navigator\n\nThis project contains a standalone navigator application sharing much of the code\nof the JupyterLab extension.\n\n### Try it online\n\nOpen Mamba Navigator: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/mamba-org/gator/master?urlpath=mamba/navigator)\n\nOpen JupyterLab: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/mamba-org/gator/master?urlpath=lab)\n\n![lab-launcher](packages/navigator/navigator_as_service.png)\n\n## Classical Jupyter Notebook\n\nThis extension adds a _Conda_ tab to the Jupyter file browser and a _Conda Packages_ item\nto the _Kernel_ menu.  \nClicking on either of those elements will open the standalone navigator in a new tab.\n\n![Classical Notebook integration](packages/navigator/classical_nb_integration.gif)\n\n## Creating New Environments\n\nThere are three ways to create an environment:\n\n- Create a new environment\n  Use the New Environment button at the top of the page, and select `Python 3`, or `R` to create a\n  base environment with the corresponding packages. Note that if you want to run a\n  Jupyter python kernel in the new environment, you must also install the `ipykernel`\n  package in the environment.\n\n- Clone an existing environment\n  Click the clone button next to an environment in the list, and enter the desired name of the\n  new environment.\n\n- Import an exported environment from a YAML file\n\n## Development\n\n```shell\nconda create -c conda-forge -y -n gator python jupyterlab=2\nconda install -c conda-forge -y -n gator --file requirements_dev.txt\nconda activate gator\npip install -e .\njupyter nbextension install mamba_gator --py --sys-prefix --symlink\njupyter nbextension enable mamba_gator --py --sys-prefix\njupyter serverextension enable mamba_gator --py --sys-prefix\n\nyarn install\nyarn run build:dev\njupyter labextension link packages/common/ packages/labextension/\n```\n\n## Acknowledgements\n\nThis work started as a fork by [@fcollonval](https://github.com/fcollonval/) of the Anaconda [nb_conda package](https://github.com/Anaconda-Platform/nb_conda). The decision to fork it came due\nto apparently dead status of the previous package and a need to integrate it within JupyterLab.\n\nThen with the [mamba initiative](https://medium.com/@QuantStack/open-software-packaging-for-science-61cecee7fc23) pushed by QuantStack it made\nsense to move the project in the `mamba-org` organization.\n\n## Changelog\n\n### 4.1.0\n\n- Features\n  - Dependencies graph (by clicking on the installed version for now)  [#83](https://github.com/mamba-org/gator/issues/83)\n- Bug fix\n  - Fix missing classical notebook extension [#115](https://github.com/mamba-org/gator/issues/115)\n  - Fix mamba not detected on Windows [#119](https://github.com/mamba-org/gator/issues/119)\n\n### 4.0.0\n\n- Features\n  - Moving to mamba-org\n  - Integrate a standalone application\n  - Common frontend for JupyterLab, classical Notebook and Gator\n  - Depend optionally on `nb_conda_kernels`\n\n### 3.4.1\n\n- Features\n  - Better logger\n- Bugs\n  - Reduce UI freezing time by running expensive code in asynchronous executor\n\n### 3.4.0\n\n- Features\n  - Use `mamba` if available. Otherwise use `conda` [#46](https://github.com/mamba-org/gator/issues/46)\n  - Move to GitHub workflow (extend coverage to JupyterLab code)\n- Bugs\n  - Fix wrong redirection url in classic notebook [#47](https://github.com/mamba-org/gator/issues/47)\n  - Fix channel given by full URL not properly handle [#55](https://github.com/mamba-org/gator/issues/55)\n\n### 3.3.1\n\n- Bugs\n  - Fix export always from history (settings ignored)\n\n### 3.3.0\n\n- Features\n  - Add a settings `fromHistory` to export an environment using [`--from-history`](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#exporting-an-environment-file-across-platforms) (available for conda >= 4.7.12) [#39](https://github.com/mamba-org/gator/pull/39)\n- Bugs\n  - Fixes absent `channeldata.json` file [#36](https://github.com/mamba-org/gator/issues/36)\n  - Fixes environment update absent from public API [#37](https://github.com/mamba-org/gator/pull/37)\n- Documentation\n  - Start REST API description with Swagger\n\n### 3.2.0\n\n- Available package cache file is now writable for everybody to avoid trouble in multi-user context. [#25](https://github.com/mamba-org/gator/pull/25)\n- Add update environment from file through REST endpoint PATCH /environments/ [#26](https://github.com/mamba-org/gator/pull/26)\n- Switch to newer Python syntax async-await\n- To improve UI reactivity in Jupyterlab:\n\n  - Long running task can now be cancelled #32\n  - The available packages list is used to find updatable package. conda update --dry-run --all is not used any longer. But it is still used if the user request updating all possible packages.\n\n### 3.1.0\n\n- Request environment list accept now `whitelist`=0 or 1 query arguments. If 1, the environment\n  list is filtered to respect `KernelSpecManager.whitelist`. Default is 0, but it could be modified\n  in user settings.\n- JupyterLab extension\n  - `IEnvironmentManager.getPackageManager()` returns always the same `Conda.IPackageManager`\n    otherwise signaling package operations would have been meaningless.\n  - Add ability to specify kernel companions; i.e. check that if some packages are installed in a\n    kernel, they must respect a certain version range. Companions can be specified through user\n    settings.\n  - Small UI tweaks\n\n### 3.0.0\n\n- Rework the server/client API to be more RESTful and returns 202 status for long operations\n- Cache available packages list in temp directory\n- Improve greatly the coverage for the server extension\n- JupyterLab extension only:\n  - Allow the user to change the proposed environment when creating one from scratch\n  - Add signals to handle environnements and packages changes (see `labextension\\src\\__tests__\\services.spec.ts`)\n  - Improve the UI reactivity by using `react-virtualized` for the packages list\n  - Improve the look and feel\n- Available packages truncation has been removed.\n\n### 2.5.1\n\n- Catch SSLError when requesting `channeldata.json` file\n\n### 2.5.0\n\n- Export in YAML format the environment (import in the older format is still supported).\n- Improve responsiveness by loading first installed packages. Then request available one.\n- BUG error is prompt when an environment is deleted although everything went well\n- Cache some API requests (GET environments, GET channels and GET available packages).\n- Available packages are now truncated to 100.\n  - Use query argument `$skip` to skip N first packages\n  - If the list is longer than 100, a entry `$next` in the response is returned. This\n    is the request url to use to get the next batch of packages.\n- Report full error message in web browser console to ease debugging.\n\n### 2.4.2\n\n- BUG environment not shown\n- BUG Installing package in develop mode fails if in user home or containing spaces\n- Improve error feedback from API to frontend\n\n### 2.4.1\n\n- BUG `conda search` crashes for conda 4.6\n\n### 2.4.0\n\n- Add installation of package in development mode (through `pip`)\n\n### 2.3.x\n\n- Add JupyterLab extension inspired by Anaconda Navigator\n  - Retrieve conda package description\n  - Add link to package website (if available)\n- Support conda >=4.5\n- Make all conda request asynchronously\n- Use the automatic installation for Jupyter Notebook extension (see [here](https://jupyter-notebook.readthedocs.io/en/stable/examples/Notebook/Distributing%20Jupyter%20Extensions%20as%20Python%20Packages.html))\n\n### 2.2.1\n\n- fix bug in check updates feature\n\n### 2.2.0\n\n- support conda 4.3\n- support notebook security fix introduced in notebook 4.3.1\n\n### 2.1.0\n\n- fix environment export button\n- allow environment names with one letter and validate against \"suspicious\" characters\n\n### 2.0.0\n\n- update to new jupyter_conda_kernels naming scheme\n- namespace all API calls into `/conda/`\n\n### 1.1.0\n\n- fix usage in root environment\n\n### 1.0.1\n\n- minor build changes\n\n### 1.0.0\n\n- Update to notebook 4.2\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mamba-org/mamba_gator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mamba-gator",
    "package_url": "https://pypi.org/project/mamba-gator/",
    "platform": "",
    "project_url": "https://pypi.org/project/mamba-gator/",
    "project_urls": {
      "Homepage": "https://github.com/mamba-org/mamba_gator"
    },
    "release_url": "https://pypi.org/project/mamba-gator/4.1.0/",
    "requires_dist": [
      "jupyterlab-server",
      "notebook (>=4.3.1)",
      "packaging",
      "typing ; python_version < \"3.7\"",
      "coverage ; extra == 'test'",
      "flake8 ; extra == 'test'",
      "nb-conda-kernels (>=2.2.0) ; extra == 'test'",
      "pytest ; extra == 'test'",
      "pytest-asyncio ; extra == 'test'",
      "requests ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Manage your conda environments from the Jupyter Notebook and JupyterLab",
    "version": "4.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14540980,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00abe526c3c559f3b806698042a21f5700104684dba0d44c004c7e9594bbcea7",
        "md5": "c0503a1321466757803d880e34649ee2",
        "sha256": "c5b781b8a6872a9dcbbd5934e5b10f445f999dd6e8e7fae0a4b0a5e09890d466"
      },
      "downloads": -1,
      "filename": "mamba_gator-4.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c0503a1321466757803d880e34649ee2",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 10786303,
      "upload_time": "2020-12-11T07:24:00",
      "upload_time_iso_8601": "2020-12-11T07:24:00.423186Z",
      "url": "https://files.pythonhosted.org/packages/00/ab/e526c3c559f3b806698042a21f5700104684dba0d44c004c7e9594bbcea7/mamba_gator-4.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f8d8b6951b8695f06cb13c3181a13238e04503174dd531f3302911c21afbc5c6",
        "md5": "2d9bad7f913eef095ff830ecb20da4ca",
        "sha256": "d6020ad4ee44251e2147808434f706996fddb57b035d9c2b297fdef33b9d2fec"
      },
      "downloads": -1,
      "filename": "mamba_gator-4.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2d9bad7f913eef095ff830ecb20da4ca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6120103,
      "upload_time": "2020-12-11T07:24:02",
      "upload_time_iso_8601": "2020-12-11T07:24:02.182960Z",
      "url": "https://files.pythonhosted.org/packages/f8/d8/b6951b8695f06cb13c3181a13238e04503174dd531f3302911c21afbc5c6/mamba_gator-4.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}