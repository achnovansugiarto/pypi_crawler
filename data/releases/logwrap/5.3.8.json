{
  "info": {
    "author": "Alexey Stepanov",
    "author_email": "penguinolog@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "logwrap\n=======\n\n.. image:: https://travis-ci.org/python-useful-helpers/logwrap.svg?branch=master\n    :target: https://travis-ci.org/python-useful-helpers/logwrap\n.. image:: https://img.shields.io/azure-devops/build/:penguinolog/:logwrap/:1.svg\n    :alt: Azure DevOps builds\n    :target: https://dev.azure.com/penguinolog/logwrap/_build?definitionId=1\n.. image:: https://coveralls.io/repos/github/python-useful-helpers/logwrap/badge.svg?branch=master\n    :target: https://coveralls.io/github/python-useful-helpers/logwrap?branch=master\n.. image:: https://readthedocs.org/projects/logwrap/badge/?version=latest\n    :target: http://logwrap.readthedocs.io/\n    :alt: Documentation Status\n.. image:: https://img.shields.io/pypi/v/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/pyversions/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/pypi/status/logwrap.svg\n    :target: https://pypi.python.org/pypi/logwrap\n.. image:: https://img.shields.io/github/license/python-useful-helpers/logwrap.svg\n    :target: https://raw.githubusercontent.com/python-useful-helpers/logwrap/master/LICENSE\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n\n\nlogwrap is a helper for logging in human-readable format function arguments and call result on function call.\nWhy? Because logging of `*args, **kwargs` become useless with project grow and you need more details in call log.\n\nCons:\n\n* Log records are not single line.\n\nPros:\n\n* Log records are not single 100500 symbols length line.\n  (Especially actual for testing/development environments and for Kibana users).\n* Service free: job is done by this library and it's dependencies. It works at virtualenv\n* Free software: Apache license\n* Open Source: https://github.com/python-useful-helpers/logwrap\n* PyPI packaged: https://pypi.python.org/pypi/logwrap\n* Self-documented code: docstrings with types in comments\n* Tested: see bages on top\n* Support multiple Python versions:\n\n::\n\n    Python 3.5\n    Python 3.6\n    Python 3.7\n    PyPy3 3.5+\n\n.. note:: Python 3.4 and 2.7 is supported in versions < 5.0.0\n\nThis package includes helpers:\n\n* `logwrap` - main helper. The same is `LogWrap`.\n\n* `LogWrap` - class with `logwrap` implementation. May be used directly.\n\n* `pretty_repr`\n\n* `pretty_str`\n\n* `PrettyFormat`\n\nUsage\n=====\n\nlogwrap\n-------\nThe main decorator. Could be used as not argumented (`@logwrap.logwrap`) and argumented (`@logwrap.logwrap()`).\nNot argumented usage simple calls with default values for all positions.\n\n.. note:: Argumens should be set via keywords only.\n\nArgumented usage with arguments from signature:\n\n.. code-block:: python\n\n    @logwrap.logwrap(\n        log=logging.getLogger(__name__),  # __name__ = 'logwrap'\n        log_level=logging.DEBUG,\n        exc_level=logging.ERROR,\n        max_indent=20,  # forwarded to the pretty_repr\n        spec=None,  # use target callable function for spec\n        blacklisted_names=None,  # list argument names, which should be dropped from log\n        blacklisted_exceptions=None,  # Exceptions to skip in log\n        log_call_args=True,  # Log call arguments before call\n        log_call_args_on_exc=True,  # Log call arguments if exception happens\n        log_traceback: bool = True,  # Log traceback if exception happens\n        log_result_obj=True,  # Log result object\n    )\n\nUsage examples:\n\n.. code-block:: python\n\n    @logwrap.logwrap()\n    def foo():\n        pass\n\nis equal to:\n\n.. code-block:: python\n\n    @logwrap.logwrap\n    def foo():\n        pass\n\nGet decorator for use without parameters:\n\n.. code-block:: python\n\n    get_logs = logwrap.logwrap()  # set required parameters via arguments\n\n    type(get_logs) == LogWrap  # All logic is implemented in LogWrap class starting from version 2.2.0\n\n    @get_logs\n    def foo():\n        pass\n\nCall example:\n\n.. code-block:: python\n\n   import logwrap\n\n   @logwrap.logwrap\n   def example_function1(\n           arg1: str,\n           arg2: str='arg2',\n           *args,\n           kwarg1: str,\n           kwarg2: str='kwarg2',\n           **kwargs\n   ) -> tuple():\n       return (arg1, arg2, args, kwarg1, kwarg2, kwargs)\n\n   example_function1('arg1', kwarg1='kwarg1', kwarg3='kwarg3')\n\nThis code during execution will produce log records:\n\n::\n\n    Calling:\n    'example_function1'(\n        # POSITIONAL_OR_KEYWORD:\n        'arg1'=u'''arg1''',  # type: <class 'str'>\n        'arg2'=u'''arg2''',  # type: <class 'str'>\n        # VAR_POSITIONAL:\n        'args'=(),\n        # KEYWORD_ONLY:\n        'kwarg1'=u'''kwarg1''',  # type: <class 'str'>\n        'kwarg2'=u'''kwarg2''',  # type: <class 'str'>\n        # VAR_KEYWORD:\n        'kwargs'=\n            dict({\n                'kwarg3': u'''kwarg3''',\n            }),\n    )\n    Done: 'example_function1' with result:\n\n     tuple((\n        u'''arg1''',\n        u'''arg2''',\n        (),\n        u'''kwarg1''',\n        u'''kwarg2''',\n         dict({\n            'kwarg3': u'''kwarg3''',\n         }),\n     ))\n\nLimitations:\n\n* nested wrapping (`@logwrap @deco2 ...`) is not parsed under python 2.7: `functools.wraps` limitation. Please set `logwrap` as the first level decorator.\n\nLogWrap\n-------\nExample construction and read from test:\n\n.. code-block:: python\n\n    log_call = logwrap.LogWrap()\n    log_call.log_level == logging.DEBUG\n    log_call.exc_level == logging.ERROR\n    log_call.max_indent == 20\n    log_call.blacklisted_names == []\n    log_call.blacklisted_exceptions == []\n    log_call.log_call_args == True\n    log_call.log_call_args_on_exc == True\n    log_call.log_traceback == True\n    log_call.log_result_obj == True\n\nOn object change, variable types is validated.\n\nIn special cases, when special processing required for parameters logging (hide or change parameters in log),\nit can be done by override `pre_process_param` and `post_process_param`.\n\nSee API documentation for details.\n\n\npretty_repr\n-----------\nThis is specified helper for making human-readable repr on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_repr(\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nLimitation: Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\npretty_str\n----------\nThis is specified helper for making human-readable str on complex objects.\nSignature is self-documenting:\n\n.. code-block:: python\n\n    def pretty_str(\n        src,  # object for __str__\n        indent=0,  # start indent\n        no_indent_start=False,  # do not indent the first level\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nLimitations:\n    Dict like objects is always marked inside `{}` for readability, even if it is `collections.OrderedDict` (standard repr as list of tuples).\n\n    Iterable types is not declared, only brackets is used.\n\n    String and bytes looks the same (its __str__, not __repr__).\n\nPrettyFormat\n------------\nPrettyFormat is the main formatting implementation class.\n`pretty_repr` and `pretty_str` uses instances of subclasses `PrettyRepr` and `PrettyStr` from this class.\nThis class is mostly exposed for typing reasons.\nObject signature:\n\n.. code-block:: python\n\n    def __init__(\n        self,\n        max_indent=20,  # maximum allowed indent level\n        indent_step=4,  # step between indents\n    )\n\nCallable object (`PrettyFormat` instance) signature:\n\n.. code-block:: python\n\n    def __call__(\n        self,\n        src,  # object for repr\n        indent=0,  # start indent\n        no_indent_start=False  # do not indent the first level\n    )\n\nAdopting your code\n------------------\npretty_repr behavior could be overridden for your classes by implementing specific magic method:\n\n.. code-block:: python\n\n    def __pretty_repr__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __repr__ on your object.\n\n.. code-block:: python\n\n    def __pretty_str__(\n        self,\n        parser  # PrettyFormat class instance,\n        indent  # start indent,\n        no_indent_start  # do not indent the first level\n    ):\n        return ...\n\nThis method will be executed instead of __str__ on your object.\n\nTesting\n=======\nThe main test mechanism for the package `logwrap` is using `tox`.\nAvailable environments can be collected via `tox -l`\n\nCI systems\n==========\nFor code checking several CI systems is used in parallel:\n\n1. `Travis CI: <https://travis-ci.org/python-useful-helpers/logwrap>`_ is used for checking: PEP8, pylint, bandit, installation possibility and unit tests. Also it's publishes coverage on coveralls.\n\n2. `coveralls: <https://coveralls.io/github/python-useful-helpers/logwrap>`_ is used for coverage display.\n\n3. `Azure CI: <https://dev.azure.com/penguinolog/logwrap/_build?definitionId=1>`_ is used for functional tests on Windows.\n\nCD systems\n==========\n1. `Travis CI: <https://travis-ci.org/python-useful-helpers/logwrap>`_ is used for linux and SDIST package delivery on PyPI.\n\n2. `Azure CI: <https://dev.azure.com/penguinolog/logwrap/_build?definitionId=1>`_ is used for Windows package delivery on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/python-useful-helpers/logwrap",
    "keywords": "logging,debugging,development",
    "license": "Apache License, Version 2.0",
    "maintainer": "Alexey Stepanov <penguinolog@gmail.com>, Antonio Esposito <esposito.cloud@gmail.com>, Dennis Dmitriev <dis-xcom@gmail.com>",
    "maintainer_email": "",
    "name": "logwrap",
    "package_url": "https://pypi.org/project/logwrap/",
    "platform": "",
    "project_url": "https://pypi.org/project/logwrap/",
    "project_urls": {
      "Bug Tracker": "https://github.com/python-useful-helpers/logwrap/issues",
      "Documentation": "https://logwrap.readthedocs.io/",
      "Homepage": "https://github.com/python-useful-helpers/logwrap"
    },
    "release_url": "https://pypi.org/project/logwrap/5.3.8/",
    "requires_dist": [
      "typing (>=3.6); python_version < \"3.8\""
    ],
    "requires_python": ">=3.5.0",
    "summary": "Decorator for logging function arguments and return value by human-readable way",
    "version": "5.3.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14071082,
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31293705d2992112cf351a40813b416416fa79b3299ea6d481429eab55a32c14",
        "md5": "9db3db5cdd1e924f841f23614a142a3e",
        "sha256": "0590f3c0b3a166ad356d64c391cac9ba39ca038939011d43b75a839a1e079abb"
      },
      "downloads": -1,
      "filename": "logwrap-5.3.8-cp35-cp35m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "9db3db5cdd1e924f841f23614a142a3e",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=3.5.0",
      "size": 647502,
      "upload_time": "2018-11-19T15:23:25",
      "upload_time_iso_8601": "2018-11-19T15:23:25.773252Z",
      "url": "https://files.pythonhosted.org/packages/31/29/3705d2992112cf351a40813b416416fa79b3299ea6d481429eab55a32c14/logwrap-5.3.8-cp35-cp35m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f308ecbb73c16006078304b50fb11bc041a0a6aae6a1c8980eca71ff938219eb",
        "md5": "130604ddc5a12f00964b850813c3d3e3",
        "sha256": "5485cf0e167fa5b0f9d8cef67f82126ceaad6c0f719e5693c7fd181119b8b4cf"
      },
      "downloads": -1,
      "filename": "logwrap-5.3.8-cp35-cp35m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "130604ddc5a12f00964b850813c3d3e3",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=3.5.0",
      "size": 716898,
      "upload_time": "2018-11-19T15:23:27",
      "upload_time_iso_8601": "2018-11-19T15:23:27.718235Z",
      "url": "https://files.pythonhosted.org/packages/f3/08/ecbb73c16006078304b50fb11bc041a0a6aae6a1c8980eca71ff938219eb/logwrap-5.3.8-cp35-cp35m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22cf11461cb194f948d53329685a163d06660cd47370d68495b321099d2a520f",
        "md5": "6da4c5a515fb11405d1bdf380b64e536",
        "sha256": "47951ae47ba6ada360b174c315f55ba608ae8cba92cc82a7293402d9b883a67b"
      },
      "downloads": -1,
      "filename": "logwrap-5.3.8-cp35-cp35m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "6da4c5a515fb11405d1bdf380b64e536",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=3.5.0",
      "size": 164554,
      "upload_time": "2018-11-19T15:16:50",
      "upload_time_iso_8601": "2018-11-19T15:16:50.136253Z",
      "url": "https://files.pythonhosted.org/packages/22/cf/11461cb194f948d53329685a163d06660cd47370d68495b321099d2a520f/logwrap-5.3.8-cp35-cp35m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a68ad76734f93af9db7ba2a1a9a5f76747a6a31df446475cce4e171940676f7",
        "md5": "c66405015cb40f436ad8fd408265a7d2",
        "sha256": "544a0c4f28d6de52bcf09ecbc81caec943a971d132a208865be6f177204af8ec"
      },
      "downloads": -1,
      "filename": "logwrap-5.3.8-cp36-cp36m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "c66405015cb40f436ad8fd408265a7d2",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5.0",
      "size": 667024,
      "upload_time": "2018-11-19T15:23:29",
      "upload_time_iso_8601": "2018-11-19T15:23:29.776558Z",
      "url": "https://files.pythonhosted.org/packages/0a/68/ad76734f93af9db7ba2a1a9a5f76747a6a31df446475cce4e171940676f7/logwrap-5.3.8-cp36-cp36m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3dd5eccf4374e5b8ad3835a677ec8594a9f3b8c8f2cf95bcec6239beac32059f",
        "md5": "544dbbe68fb7986e427841b50cbc4f3d",
        "sha256": "15040dc6e065e54c98eff9591de726f529bc46b1073a2ad3d646b6ce185902ef"
      },
      "downloads": -1,
      "filename": "logwrap-5.3.8-cp36-cp36m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "544dbbe68fb7986e427841b50cbc4f3d",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5.0",
      "size": 737136,
      "upload_time": "2018-11-19T15:23:31",
      "upload_time_iso_8601": "2018-11-19T15:23:31.696121Z",
      "url": "https://files.pythonhosted.org/packages/3d/d5/eccf4374e5b8ad3835a677ec8594a9f3b8c8f2cf95bcec6239beac32059f/logwrap-5.3.8-cp36-cp36m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "438a3daadf6b4d365011772a3fbbd1f857a2464dc5eb1974a64d44fa1aecce22",
        "md5": "b25c4aae1714d4b3a944bd5a6cc70d18",
        "sha256": "f787b1da218a37c0bafc35fb53a90479a88ae83518976c5c57f69c6eb41d882e"
      },
      "downloads": -1,
      "filename": "logwrap-5.3.8-cp36-cp36m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "b25c4aae1714d4b3a944bd5a6cc70d18",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5.0",
      "size": 180099,
      "upload_time": "2018-11-19T15:16:49",
      "upload_time_iso_8601": "2018-11-19T15:16:49.226596Z",
      "url": "https://files.pythonhosted.org/packages/43/8a/3daadf6b4d365011772a3fbbd1f857a2464dc5eb1974a64d44fa1aecce22/logwrap-5.3.8-cp36-cp36m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c569bdfc330645f411b1b8c1dc3e80d16a6feb9fc69d75b40c33cdddf69985d",
        "md5": "68a8abc6358206b446c4b64e8613f8e8",
        "sha256": "a040a0b24352f586cf828262f616c9c1c3806aa00a7301b622636bfc6083bdf0"
      },
      "downloads": -1,
      "filename": "logwrap-5.3.8-cp37-cp37m-manylinux1_i686.whl",
      "has_sig": false,
      "md5_digest": "68a8abc6358206b446c4b64e8613f8e8",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5.0",
      "size": 659028,
      "upload_time": "2018-11-19T15:23:33",
      "upload_time_iso_8601": "2018-11-19T15:23:33.690605Z",
      "url": "https://files.pythonhosted.org/packages/1c/56/9bdfc330645f411b1b8c1dc3e80d16a6feb9fc69d75b40c33cdddf69985d/logwrap-5.3.8-cp37-cp37m-manylinux1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2afcf0059ed193b2f9fd54c1774f87b941f522729dda23cb5cf2059275d02d54",
        "md5": "5a680c65d90fd1406687c5bb045c3036",
        "sha256": "0f2ea40e481f093ec62345c82fa8e7f48db42e4a5216a2cb273d8821021b2ad5"
      },
      "downloads": -1,
      "filename": "logwrap-5.3.8-cp37-cp37m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "5a680c65d90fd1406687c5bb045c3036",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5.0",
      "size": 727067,
      "upload_time": "2018-11-19T15:23:35",
      "upload_time_iso_8601": "2018-11-19T15:23:35.387747Z",
      "url": "https://files.pythonhosted.org/packages/2a/fc/f0059ed193b2f9fd54c1774f87b941f522729dda23cb5cf2059275d02d54/logwrap-5.3.8-cp37-cp37m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e85ae4619cc3e63f7f2410bfa897951af048fbc02056e687cee7e4282b9bf1a",
        "md5": "c7e85550a2ecf95fd6b53164f218463a",
        "sha256": "a6286af424eaaeb8de16d65abc5b1f7bc4e66f7b6e8811a8916a06d9ee0f3942"
      },
      "downloads": -1,
      "filename": "logwrap-5.3.8-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "c7e85550a2ecf95fd6b53164f218463a",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5.0",
      "size": 180569,
      "upload_time": "2018-11-19T15:16:47",
      "upload_time_iso_8601": "2018-11-19T15:16:47.851003Z",
      "url": "https://files.pythonhosted.org/packages/3e/85/ae4619cc3e63f7f2410bfa897951af048fbc02056e687cee7e4282b9bf1a/logwrap-5.3.8-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1d56498666e782b99ec86f7fc0bf899ab2ff6143217c5a166ad1792a4c90a54",
        "md5": "c8c301ef0ed106ea084ccc41a28386b8",
        "sha256": "6e53a59afa6f70ee6b6a9748f8c2a222f7c2bb03ea5fa78c0accb8573e55f894"
      },
      "downloads": -1,
      "filename": "logwrap-5.3.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c8c301ef0ed106ea084ccc41a28386b8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5.0",
      "size": 16976,
      "upload_time": "2018-11-19T15:23:37",
      "upload_time_iso_8601": "2018-11-19T15:23:37.138271Z",
      "url": "https://files.pythonhosted.org/packages/e1/d5/6498666e782b99ec86f7fc0bf899ab2ff6143217c5a166ad1792a4c90a54/logwrap-5.3.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31215f6cc00573a079c9cd1d63bb3a59bbae34cace4b1cb69e09f0994d1f4807",
        "md5": "0fb40f83b4c5bf39f2bc6b3101a4d658",
        "sha256": "07e7f59a79ca6f98b1f1ae1bf5cadb04a082223b1f528dff74f5fa34e491c810"
      },
      "downloads": -1,
      "filename": "logwrap-5.3.8.tar.gz",
      "has_sig": false,
      "md5_digest": "0fb40f83b4c5bf39f2bc6b3101a4d658",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.0",
      "size": 61682,
      "upload_time": "2018-11-19T15:23:38",
      "upload_time_iso_8601": "2018-11-19T15:23:38.675932Z",
      "url": "https://files.pythonhosted.org/packages/31/21/5f6cc00573a079c9cd1d63bb3a59bbae34cace4b1cb69e09f0994d1f4807/logwrap-5.3.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}